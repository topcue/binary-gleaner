{
  "sha": "0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGNmYTNlYjM1MjVkNDZmZjZjZmM5NDU1OWE3OTZjNmE2N2JkY2IyNw==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2019-11-14T07:47:44Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2019-11-14T07:47:44Z"
    },
    "message": "x86: fold individual Jump* attributes into a single Jump one\n\n..., taking just 3 bits instead of 5. No two of them are used together.",
    "tree": {
      "sha": "c3c6882b59791bd6de53c3713dae30232e084348",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c3c6882b59791bd6de53c3713dae30232e084348"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6f2f06bea87613a6851607829e5893d74007f5bf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f2f06bea87613a6851607829e5893d74007f5bf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6f2f06bea87613a6851607829e5893d74007f5bf"
    }
  ],
  "stats": {
    "total": 25881,
    "additions": 10989,
    "deletions": 14892
  },
  "files": [
    {
      "sha": "7e9e6eff487eb1ee2be24cd9fcfb94c0597fe56e",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27",
      "patch": "@@ -1,3 +1,11 @@\n+2019-11-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (operand_size_match, md_assemble,\n+\tparse_insn, match_template, process_suffix, output_jump,\n+\toutput_insn, i386_displacement): Adjust jump* field use/\n+\thandling.\n+\t* config/tc-i386-intel.c (i386_intel_operand): Likewise.\n+\n 2019-11-14  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (struct _i386_insn): Add jumpabsolute field."
    },
    {
      "sha": "49f558d2785e2beea033c7ff4978f36fb4cfd84f",
      "filename": "gas/config/tc-i386-intel.c",
      "status": "modified",
      "additions": 11,
      "deletions": 10,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/gas/config/tc-i386-intel.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/gas/config/tc-i386-intel.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386-intel.c?ref=0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27",
      "patch": "@@ -658,8 +658,9 @@ i386_intel_operand (char *operand_string, int got_a_float)\n \t      || current_templates->start->base_opcode == 0x62 /* bound */)\n \t    suffix = WORD_MNEM_SUFFIX;\n \t  else if (flag_code == CODE_16BIT\n-\t\t   && (current_templates->start->opcode_modifier.jump\n-\t\t       || current_templates->start->opcode_modifier.jumpdword))\n+\t\t   && (current_templates->start->opcode_modifier.jump == JUMP\n+\t\t       || current_templates->start->opcode_modifier.jump\n+\t\t\t  == JUMP_DWORD))\n \t    suffix = LONG_DOUBLE_MNEM_SUFFIX;\n \t  else if (got_a_float == 1)\t/* \"f...\" */\n \t    suffix = SHORT_MNEM_SUFFIX;\n@@ -717,8 +718,8 @@ i386_intel_operand (char *operand_string, int got_a_float)\n \t  suffix = LONG_DOUBLE_MNEM_SUFFIX;\n \t  /* FALLTHROUGH */\n \tcase O_near_ptr:\n-\t  if (!current_templates->start->opcode_modifier.jump\n-\t      && !current_templates->start->opcode_modifier.jumpdword)\n+\t  if (current_templates->start->opcode_modifier.jump != JUMP\n+\t      && current_templates->start->opcode_modifier.jump != JUMP_DWORD)\n \t    suffix = got_a_float /* so it will cause an error */\n \t\t     ? BYTE_MNEM_SUFFIX\n \t\t     : LONG_DOUBLE_MNEM_SUFFIX;\n@@ -739,9 +740,9 @@ i386_intel_operand (char *operand_string, int got_a_float)\n     }\n \n   /* Operands for jump/call need special consideration.  */\n-  if (current_templates->start->opcode_modifier.jump\n-      || current_templates->start->opcode_modifier.jumpdword\n-      || current_templates->start->opcode_modifier.jumpintersegment)\n+  if (current_templates->start->opcode_modifier.jump == JUMP\n+      || current_templates->start->opcode_modifier.jump == JUMP_DWORD\n+      || current_templates->start->opcode_modifier.jump == JUMP_INTERSEGMENT)\n     {\n       bfd_boolean jumpabsolute = FALSE;\n \n@@ -857,9 +858,9 @@ i386_intel_operand (char *operand_string, int got_a_float)\n \t     ljmp\t0x9090,0x90909090\n \t   */\n \n-\t  if ((current_templates->start->opcode_modifier.jumpintersegment\n-\t       || current_templates->start->opcode_modifier.jumpdword\n-\t       || current_templates->start->opcode_modifier.jump)\n+\t  if ((current_templates->start->opcode_modifier.jump == JUMP_INTERSEGMENT\n+\t       || current_templates->start->opcode_modifier.jump == JUMP_DWORD\n+\t       || current_templates->start->opcode_modifier.jump == JUMP)\n \t      && this_operand == 1\n \t      && intel_state.seg == NULL\n \t      && i.mem_operands == 1"
    },
    {
      "sha": "120367d55d303c1c5096a6053ce73f2a08d167d0",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 22,
      "deletions": 24,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27",
      "patch": "@@ -2066,11 +2066,9 @@ operand_size_match (const insn_template *t)\n {\n   unsigned int j, match = MATCH_STRAIGHT;\n \n-  /* Don't check jump instructions.  */\n+  /* Don't check non-absolute jump instructions.  */\n   if (t->opcode_modifier.jump\n-      || t->opcode_modifier.jumpbyte\n-      || t->opcode_modifier.jumpdword\n-      || t->opcode_modifier.jumpintersegment)\n+      && t->opcode_modifier.jump != JUMP_ABSOLUTE)\n     return match;\n \n   /* Check memory and accumulator operand size.  */\n@@ -4462,9 +4460,9 @@ md_assemble (char *line)\n       i.imm_operands = 0;\n     }\n \n-  if ((i.tm.opcode_modifier.jump\n-       || i.tm.opcode_modifier.jumpbyte\n-       || i.tm.opcode_modifier.jumpdword)\n+  if ((i.tm.opcode_modifier.jump == JUMP\n+       || i.tm.opcode_modifier.jump == JUMP_BYTE\n+       || i.tm.opcode_modifier.jump == JUMP_DWORD)\n       && i.op[0].disps->X_op == O_constant)\n     {\n       /* Convert \"jmp constant\" (and \"call constant\") to a jump (call) to\n@@ -4764,8 +4762,8 @@ parse_insn (char *line, char *mnemonic)\n \t}\n     }\n \n-  if (current_templates->start->opcode_modifier.jump\n-      || current_templates->start->opcode_modifier.jumpbyte)\n+  if (current_templates->start->opcode_modifier.jump == JUMP\n+      || current_templates->start->opcode_modifier.jump == JUMP_BYTE)\n     {\n       /* Check for a branch hint.  We allow \",pt\" and \",pn\" for\n \t predict taken and predict not taken respectively.\n@@ -5745,11 +5743,11 @@ match_template (char mnem_suffix)\n \n       /* This is intentionally not\n \n-\t if (i.jumpabsolute != t->opcode_modifier.jumpabsolute)\n+\t if (i.jumpabsolute != (t->opcode_modifier.jump == JUMP_ABSOLUTE))\n \n \t as the case of a missing * on the operand is accepted (perhaps with\n \t a warning, issued further down).  */\n-      if (i.jumpabsolute && !t->opcode_modifier.jumpabsolute)\n+      if (i.jumpabsolute && t->opcode_modifier.jump != JUMP_ABSOLUTE)\n \t{\n \t  i.error = operand_type_mismatch;\n \t  continue;\n@@ -6132,7 +6130,7 @@ match_template (char mnem_suffix)\n   if (!quiet_warnings)\n     {\n       if (!intel_syntax\n-\t  && (i.jumpabsolute != t->opcode_modifier.jumpabsolute))\n+\t  && (i.jumpabsolute != (t->opcode_modifier.jump == JUMP_ABSOLUTE)))\n \tas_warn (_(\"indirect %s without `*'\"), t->name);\n \n       if (t->opcode_modifier.isprefix\n@@ -6331,9 +6329,9 @@ process_suffix (void)\n     }\n   else if (intel_syntax\n \t   && !i.suffix\n-\t   && (i.tm.opcode_modifier.jumpabsolute\n-\t       || i.tm.opcode_modifier.jumpbyte\n-\t       || i.tm.opcode_modifier.jumpintersegment\n+\t   && (i.tm.opcode_modifier.jump == JUMP_ABSOLUTE\n+\t       || i.tm.opcode_modifier.jump == JUMP_BYTE\n+\t       || i.tm.opcode_modifier.jump == JUMP_INTERSEGMENT\n \t       || (i.tm.base_opcode == 0x0f01 /* [ls][gi]dt */\n \t\t   && i.tm.extension_opcode <= 3)))\n     {\n@@ -6443,11 +6441,11 @@ process_suffix (void)\n \t       && !is_any_vex_encoding (&i.tm)\n \t       && ((i.suffix == LONG_MNEM_SUFFIX) == (flag_code == CODE_16BIT)\n \t\t   || (flag_code == CODE_64BIT\n-\t\t       && i.tm.opcode_modifier.jumpbyte)))\n+\t\t       && i.tm.opcode_modifier.jump == JUMP_BYTE)))\n \t{\n \t  unsigned int prefix = DATA_PREFIX_OPCODE;\n \n-\t  if (i.tm.opcode_modifier.jumpbyte) /* jcxz, loop */\n+\t  if (i.tm.opcode_modifier.jump == JUMP_BYTE) /* jcxz, loop */\n \t    prefix = ADDR_PREFIX_OPCODE;\n \n \t  if (!add_prefix (prefix))\n@@ -7898,7 +7896,7 @@ output_jump (void)\n   fixS *fixP;\n   bfd_reloc_code_real_type jump_reloc = i.reloc[0];\n \n-  if (i.tm.opcode_modifier.jumpbyte)\n+  if (i.tm.opcode_modifier.jump == JUMP_BYTE)\n     {\n       /* This is a loop or jecxz type instruction.  */\n       size = 1;\n@@ -8289,12 +8287,12 @@ output_insn (void)\n   insn_start_off = frag_now_fix ();\n \n   /* Output jumps.  */\n-  if (i.tm.opcode_modifier.jump)\n+  if (i.tm.opcode_modifier.jump == JUMP)\n     output_branch ();\n-  else if (i.tm.opcode_modifier.jumpbyte\n-\t   || i.tm.opcode_modifier.jumpdword)\n+  else if (i.tm.opcode_modifier.jump == JUMP_BYTE\n+\t   || i.tm.opcode_modifier.jump == JUMP_DWORD)\n     output_jump ();\n-  else if (i.tm.opcode_modifier.jumpintersegment)\n+  else if (i.tm.opcode_modifier.jump == JUMP_INTERSEGMENT)\n     output_interseg_jump ();\n   else\n     {\n@@ -9474,8 +9472,8 @@ i386_displacement (char *disp_start, char *disp_end)\n \n   operand_type_set (&bigdisp, 0);\n   if (i.jumpabsolute\n-      || (!current_templates->start->opcode_modifier.jump\n-\t  && !current_templates->start->opcode_modifier.jumpdword))\n+      || (current_templates->start->opcode_modifier.jump != JUMP\n+\t  && current_templates->start->opcode_modifier.jump != JUMP_DWORD))\n     {\n       bigdisp.bitfield.disp32 = 1;\n       override = (i.prefix[ADDR_PREFIX] != 0);"
    },
    {
      "sha": "d1b7c0760d15e40040dc96ab7a103de4d6828d50",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27",
      "patch": "@@ -1,3 +1,16 @@\n+2019-11-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (opcode_modifiers): Remove JumpDword, JumpByte,\n+\tJumpInterSegment, and JumpAbsolute entries.\n+\t* i386-opc.h (JUMP, JUMP_DWORD, JUMP_BYTE, JUMP_INTERSEGMENT,\n+\tJUMP_ABSOLUTE): Define.\n+\t(struct i386_opcode_modifier): Extend jump field to 3 bits.\n+\tRemove jumpdword, jumpbyte, jumpintersegment, and jumpabsolute\n+\tfields.\n+\t* i386-opc.tbl (JumpByte, JumpDword, JumpAbsolute,\n+\tJumpInterSegment): Define.\n+\t* i386-tbl.h: Re-generate.\n+\n 2019-11-14  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-gen.c (operand_type_init): Remove"
    },
    {
      "sha": "b853e425e600ad432e65903ad728dc5cb08b84a6",
      "filename": "opcodes/i386-gen.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/opcodes/i386-gen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/opcodes/i386-gen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-gen.c?ref=0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27",
      "patch": "@@ -615,10 +615,6 @@ static bitfield opcode_modifiers[] =\n   BITFIELD (Modrm),\n   BITFIELD (ShortForm),\n   BITFIELD (Jump),\n-  BITFIELD (JumpDword),\n-  BITFIELD (JumpByte),\n-  BITFIELD (JumpInterSegment),\n-  BITFIELD (JumpAbsolute),\n   BITFIELD (FloatMF),\n   BITFIELD (FloatR),\n   BITFIELD (Size),"
    },
    {
      "sha": "aa080cfe3615ff9cdbaaf15eba762e818cb75d3e",
      "filename": "opcodes/i386-opc.h",
      "status": "modified",
      "additions": 8,
      "deletions": 11,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/opcodes/i386-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/opcodes/i386-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.h?ref=0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27",
      "patch": "@@ -403,16 +403,17 @@ enum\n   Modrm,\n   /* register is in low 3 bits of opcode */\n   ShortForm,\n-  /* special case for jump insns.  */\n-  Jump,\n+  /* special case for jump insns; value has to be 1 */\n+#define JUMP 1\n   /* call and jump */\n-  JumpDword,\n+#define JUMP_DWORD 2\n   /* loop and jecxz */\n-  JumpByte,\n+#define JUMP_BYTE 3\n   /* special case for intersegment leaps/calls */\n-  JumpInterSegment,\n+#define JUMP_INTERSEGMENT 4\n   /* absolute address for jump */\n-  JumpAbsolute,\n+#define JUMP_ABSOLUTE 5\n+  Jump,\n   /* FP insn memory format bit, sized by 0x4 */\n   FloatMF,\n   /* src/dest swap for floats. */\n@@ -652,11 +653,7 @@ typedef struct i386_opcode_modifier\n   unsigned int load:1;\n   unsigned int modrm:1;\n   unsigned int shortform:1;\n-  unsigned int jump:1;\n-  unsigned int jumpdword:1;\n-  unsigned int jumpbyte:1;\n-  unsigned int jumpintersegment:1;\n-  unsigned int jumpabsolute:1;\n+  unsigned int jump:3;\n   unsigned int floatmf:1;\n   unsigned int floatr:1;\n   unsigned int size:2;"
    },
    {
      "sha": "0420f56ac5ef5c99d1188c248931d3b20696edc5",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27",
      "patch": "@@ -53,6 +53,11 @@\n \n #define RegBND Class=RegBND\n \n+#define JumpByte         Jump=JUMP_BYTE\n+#define JumpDword        Jump=JUMP_DWORD\n+#define JumpAbsolute     Jump=JUMP_ABSOLUTE\n+#define JumpInterSegment Jump=JUMP_INTERSEGMENT\n+\n #define Size16 Size=SIZE16\n #define Size32 Size=SIZE32\n #define Size64 Size=SIZE64"
    },
    {
      "sha": "96bb697863f0506684d67dfb05a356ff1945e8bf",
      "filename": "opcodes/i386-tbl.h",
      "status": "modified",
      "additions": 10922,
      "deletions": 14843,
      "changes": 25765,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/opcodes/i386-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27/opcodes/i386-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-tbl.h?ref=0cfa3eb3525d46ff6cfc94559a796c6a67bdcb27"
    }
  ]
}