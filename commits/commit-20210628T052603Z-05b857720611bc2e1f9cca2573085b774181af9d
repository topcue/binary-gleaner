{
  "sha": "05b857720611bc2e1f9cca2573085b774181af9d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDViODU3NzIwNjExYmMyZTFmOWNjYTI1NzMwODViNzc0MTgxYWY5ZA==",
  "commit": {
    "author": {
      "name": "Bhuvanendra Kumar N",
      "email": "Bhuvanendra.KumarN@amd.com",
      "date": "2021-06-28T05:21:57Z"
    },
    "committer": {
      "name": "Alok Kumar Sharma",
      "email": "AlokKumar.Sharma@amd.com",
      "date": "2021-06-28T05:26:03Z"
    },
    "message": "gdb/fortran: Add type info of formal parameter for clang.\n\nAdditional compiler generated formal parameter exist with clang and type\ninformation for the same is added accordingly. Also few kind parameter\nprinting are removed which is not default for clang.\nNote: More details about this kind parameter omission while printing can\nbe found with similar patch\n        commit 0a709cba00d36d490482d0e8673e323ac1e897a6\n        Author Alok Kumar Sharma (alokkumar.sharma@amd.com)\n\ngdb/testsuite/ChangeLog:\n        * gdb.fortran/ptype-on-functions.exp: Add type info of formal\n        parameter for clang. Also removed the kind parameter for clang.",
    "tree": {
      "sha": "4a693adde8d91ae186a09a35628894cc2526b920",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4a693adde8d91ae186a09a35628894cc2526b920"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/05b857720611bc2e1f9cca2573085b774181af9d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05b857720611bc2e1f9cca2573085b774181af9d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/05b857720611bc2e1f9cca2573085b774181af9d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05b857720611bc2e1f9cca2573085b774181af9d/comments",
  "author": {
    "login": "bhuvanendrakumarn",
    "id": 64949312,
    "node_id": "MDQ6VXNlcjY0OTQ5MzEy",
    "avatar_url": "https://avatars.githubusercontent.com/u/64949312?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bhuvanendrakumarn",
    "html_url": "https://github.com/bhuvanendrakumarn",
    "followers_url": "https://api.github.com/users/bhuvanendrakumarn/followers",
    "following_url": "https://api.github.com/users/bhuvanendrakumarn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bhuvanendrakumarn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bhuvanendrakumarn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bhuvanendrakumarn/subscriptions",
    "organizations_url": "https://api.github.com/users/bhuvanendrakumarn/orgs",
    "repos_url": "https://api.github.com/users/bhuvanendrakumarn/repos",
    "events_url": "https://api.github.com/users/bhuvanendrakumarn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bhuvanendrakumarn/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "alokkrsharma",
    "id": 60725621,
    "node_id": "MDQ6VXNlcjYwNzI1NjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/60725621?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alokkrsharma",
    "html_url": "https://github.com/alokkrsharma",
    "followers_url": "https://api.github.com/users/alokkrsharma/followers",
    "following_url": "https://api.github.com/users/alokkrsharma/following{/other_user}",
    "gists_url": "https://api.github.com/users/alokkrsharma/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alokkrsharma/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alokkrsharma/subscriptions",
    "organizations_url": "https://api.github.com/users/alokkrsharma/orgs",
    "repos_url": "https://api.github.com/users/alokkrsharma/repos",
    "events_url": "https://api.github.com/users/alokkrsharma/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alokkrsharma/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dd5ef931df8f0ea68e18cadaa1b4636cf1dbb3dc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd5ef931df8f0ea68e18cadaa1b4636cf1dbb3dc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dd5ef931df8f0ea68e18cadaa1b4636cf1dbb3dc"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 29,
    "deletions": 7
  },
  "files": [
    {
      "sha": "75197952b6f6e52ed1eef5a391f5178ed86ae3ad",
      "filename": "gdb/testsuite/gdb.fortran/ptype-on-functions.exp",
      "status": "modified",
      "additions": 29,
      "deletions": 7,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05b857720611bc2e1f9cca2573085b774181af9d/gdb/testsuite/gdb.fortran/ptype-on-functions.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05b857720611bc2e1f9cca2573085b774181af9d/gdb/testsuite/gdb.fortran/ptype-on-functions.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/ptype-on-functions.exp?ref=05b857720611bc2e1f9cca2573085b774181af9d",
      "patch": "@@ -29,23 +29,45 @@ if ![fortran_runto_main] then {\n     continue\n }\n \n+set integer4 [fortran_int4]\n+set logical4 [fortran_logical4]\n+set integer8 [fortran_int8]\n+\n+if {[test_compiler_info {clang-*}]} {\n+    set some_module_class_type \"Type number\"\n+    set some_module_aux_info \", $integer8 \\\\(10\\\\)\"\n+} else {\n+    set some_module_class_type \"Type __class_some_module_Number(_t)?\"\n+    set some_module_aux_info \"\"\n+}\n+\n gdb_test \"ptype some_module::get_number\" \\\n-    \"type = integer\\\\(kind=4\\\\) \\\\(Type __class_some_module_Number(_t)?\\\\)\"\n+    \"type = $integer4 \\\\(${some_module_class_type}${some_module_aux_info}\\\\)\"\n \n gdb_test \"ptype some_module::set_number\" \\\n-    \"type = void \\\\(Type __class_some_module_Number(_t)?, integer\\\\(kind=4\\\\)\\\\)\"\n+    \"type = void \\\\(${some_module_class_type}, $integer4${some_module_aux_info}\\\\)\"\n \n gdb_test \"ptype is_bigger\" \\\n-    \"type = logical\\\\(kind=4\\\\) \\\\(integer\\\\(kind=4\\\\), integer\\\\(kind=4\\\\)\\\\)\"\n+    \"type = $logical4 \\\\($integer4, $integer4\\\\)\"\n \n gdb_test \"ptype say_numbers\" \\\n-    \"type = void \\\\(integer\\\\(kind=4\\\\), integer\\\\(kind=4\\\\), integer\\\\(kind=4\\\\)\\\\)\"\n+    \"type = void \\\\($integer4, $integer4, $integer4\\\\)\"\n+\n+set fun_ptr_arg \"$integer4\"\n+if {[test_compiler_info {gcc-*}]} {\n+    set fun_ptr_arg \"REF TO -> \\\\( ${fun_ptr_arg} \\\\)\"\n+}\n \n gdb_test \"ptype fun_ptr\" \\\n-    \"type = PTR TO -> \\\\( integer\\\\(kind=4\\\\) \\\\(\\\\) \\\\(REF TO -> \\\\( integer\\\\(kind=4\\\\) \\\\)\\\\) \\\\)\"\n+    \"type = PTR TO -> \\\\( $integer4 \\\\(\\\\) \\\\(${fun_ptr_arg}\\\\) \\\\)\"\n \n gdb_test \"ptype say_string\" \\\n-    \"type = void \\\\(character\\\\*\\\\(\\\\*\\\\), integer\\\\(kind=\\\\d+\\\\)\\\\)\"\n+    \"type = void \\\\(character\\[^,\\]+, $integer8\\\\)\"\n+\n+set say_array_artificial_first_arg \"\"\n+if {[test_compiler_info {clang-*}]} {\n+    set say_array_artificial_first_arg \"$integer8, \"\n+}\n \n gdb_test \"ptype say_array\" \\\n-    \"type = void \\\\(integer\\\\(kind=4\\\\) \\\\(:,:\\\\)\\\\)\"\n+    \"type = void \\\\(${say_array_artificial_first_arg}$integer4 \\\\(:,:\\\\)\\\\)\""
    }
  ]
}