{
  "sha": "44ed80923ab89e141120defa8c1209b69869a7ac",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDRlZDgwOTIzYWI4OWUxNDExMjBkZWZhOGMxMjA5YjY5ODY5YTdhYw==",
  "commit": {
    "author": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2019-04-24T19:14:56Z"
    },
    "committer": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2019-04-24T19:14:56Z"
    },
    "message": "Use better test for usable compiler in ld testsuite.\n\nThe ld testsuite includes numerous tests that depend on being able to\ncompile and link programs with the C compiler.  Some of these tests\nuse [which $CC] to check for the presence of the compiler before\nproceeding with the test, but run_ld_link_exec_tests and run_cc_link_tests\ngive ERRORs if compilation fails.  Also, even if $CC is defined and present,\nit may not be usable due to missing libraries, etc.\n\nThis patch adds a new procedure check_compiler_available that attempts\nto build an empty program and caches the result.  Uses of [which $CC]\nare replaced with calls to this procedure, and run_ld_link_exec_tests\nand run_cc_link_tests now also guard attempts to use $CC.\n\n2019-04-24  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tld/\n\t* testsuite/config/default.exp: Use [check_compiler_available]\n\tinstead of [which $CC].\n\t* testsuite/ld-auto-import/auto-import.exp: Likewise.\n\t* testsuite/ld-cygwin/exe-export.exp: Likewise.\n\t* testsuite/ld-elf/audit.exp: Likewise.\n\t* testsuite/ld-elf/compress.exp: Likewise.\n\t* testsuite/ld-elf/dwarf.exp: Likewise.\n\t* testsuite/ld-elf/elf.exp: Likewise.\n\t* testsuite/ld-elf/indirect.exp: Likewise.\n\t* testsuite/ld-elf/linux-x86.exp: Likewise.\n\t* testsuite/ld-elf/shared.exp: Likewise.\n\t* testsuite/ld-elf/tls.exp: Likewise.\n\t* testsuite/ld-elf/wrap.exp: Likewise.\n\t* testsuite/ld-elfcomm/elfcomm.exp: Likewise.\n\t* testsuite/ld-elfvers/vers.exp: Likewise.\n\t* testsuite/ld-elfvsb/elfvsb.exp: Likewise.\n\t* testsuite/ld-elfweak/elfweak.exp: Likewise.\n\t* testsuite/ld-gc/gc.exp: Likewise.\n\t* testsuite/ld-i386/i386.exp: Likewise.\n\t* testsuite/ld-i386/no-plt.exp: Likewise.\n\t* testsuite/ld-i386/tls.exp: Likewise.\n\t* testsuite/ld-ifunc/ifunc.exp: Likewise.\n\t* testsuite/ld-mn10300/mn10300.exp: Likewise.\n\t* testsuite/ld-pe/pe-compile.exp: Likewise.\n\t* testsuite/ld-pe/pe-run.exp: Likewise.\n\t* testsuite/ld-pe/pe-run2.exp: Likewise.\n\t* testsuite/ld-pie/pie.exp: Likewise.\n\t* testsuite/ld-plugin/lto.exp: Likewise.\n\t* testsuite/ld-plugin/plugin.exp: Likewise.\n\t* testsuite/ld-scripts/crossref.exp: Likewise.\n\t* testsuite/ld-sh/sh.exp: Likewise.\n\t* testsuite/ld-shared/shared.exp: Likewise.\n\t* testsuite/ld-size/size.exp: Likewise.\n\t* testsuite/ld-srec/srec.exp: Likewise.\n\t* testsuite/ld-undefined/undefined.exp: Likewise.\n\t* testsuite/ld-unique/unique.exp: Likewise.\n\t* testsuite/ld-x86-64/mpx.exp: Likewise.\n\t* testsuite/ld-x86-64/no-plt.exp: Likewise.\n\t* testsuite/ld-x86-64/tls.exp: Likewise.\n\t* testsuite/ld-x86-64/x86-64.exp: Likewise.\n\t* testsuite/lib/ld-lib.exp (run_ld_link_exec_tests): Call\n\tcheck_compiler_available before trying to use the compiler.\n\t(run_cc_link_tests): Likewise.\n\t(check_compiler_available): New.  Use it instead of [which $CC].",
    "tree": {
      "sha": "efba27df79b200f36c6d22a6986db4109aa16706",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/efba27df79b200f36c6d22a6986db4109aa16706"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/44ed80923ab89e141120defa8c1209b69869a7ac",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44ed80923ab89e141120defa8c1209b69869a7ac",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/44ed80923ab89e141120defa8c1209b69869a7ac",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44ed80923ab89e141120defa8c1209b69869a7ac/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "596179f77c803d3fc5586465f4ece6503055d035",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/596179f77c803d3fc5586465f4ece6503055d035",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/596179f77c803d3fc5586465f4ece6503055d035"
    }
  ],
  "stats": {
    "total": 210,
    "additions": 155,
    "deletions": 55
  },
  "files": [
    {
      "sha": "a62a6c548b1b889ef599c5480ed97d5b88d61614",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -1,3 +1,50 @@\n+2019-04-24  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* testsuite/config/default.exp: Use [check_compiler_available]\n+\tinstead of [which $CC].\n+\t* testsuite/ld-auto-import/auto-import.exp: Likewise.\n+\t* testsuite/ld-cygwin/exe-export.exp: Likewise.\n+\t* testsuite/ld-elf/audit.exp: Likewise.\n+\t* testsuite/ld-elf/compress.exp: Likewise.\n+\t* testsuite/ld-elf/dwarf.exp: Likewise.\n+\t* testsuite/ld-elf/elf.exp: Likewise.\n+\t* testsuite/ld-elf/indirect.exp: Likewise.\n+\t* testsuite/ld-elf/linux-x86.exp: Likewise.\n+\t* testsuite/ld-elf/shared.exp: Likewise.\n+\t* testsuite/ld-elf/tls.exp: Likewise.\n+\t* testsuite/ld-elf/wrap.exp: Likewise.\n+\t* testsuite/ld-elfcomm/elfcomm.exp: Likewise.\n+\t* testsuite/ld-elfvers/vers.exp: Likewise.\n+\t* testsuite/ld-elfvsb/elfvsb.exp: Likewise.\n+\t* testsuite/ld-elfweak/elfweak.exp: Likewise.\n+\t* testsuite/ld-gc/gc.exp: Likewise.\n+\t* testsuite/ld-i386/i386.exp: Likewise.\n+\t* testsuite/ld-i386/no-plt.exp: Likewise.\n+\t* testsuite/ld-i386/tls.exp: Likewise.\n+\t* testsuite/ld-ifunc/ifunc.exp: Likewise.\n+\t* testsuite/ld-mn10300/mn10300.exp: Likewise.\n+\t* testsuite/ld-pe/pe-compile.exp: Likewise.\n+\t* testsuite/ld-pe/pe-run.exp: Likewise.\n+\t* testsuite/ld-pe/pe-run2.exp: Likewise.\n+\t* testsuite/ld-pie/pie.exp: Likewise.\n+\t* testsuite/ld-plugin/lto.exp: Likewise.\n+\t* testsuite/ld-plugin/plugin.exp: Likewise.\n+\t* testsuite/ld-scripts/crossref.exp: Likewise.\n+\t* testsuite/ld-sh/sh.exp: Likewise.\n+\t* testsuite/ld-shared/shared.exp: Likewise.\n+\t* testsuite/ld-size/size.exp: Likewise.\n+\t* testsuite/ld-srec/srec.exp: Likewise.\n+\t* testsuite/ld-undefined/undefined.exp: Likewise.\n+\t* testsuite/ld-unique/unique.exp: Likewise.\n+\t* testsuite/ld-x86-64/mpx.exp: Likewise.\n+\t* testsuite/ld-x86-64/no-plt.exp: Likewise.\n+\t* testsuite/ld-x86-64/tls.exp: Likewise.\n+\t* testsuite/ld-x86-64/x86-64.exp: Likewise.\n+\t* testsuite/lib/ld-lib.exp (run_ld_link_exec_tests): Call\n+\tcheck_compiler_available before trying to use the compiler.\n+\t(run_cc_link_tests): Likewise.\n+\t(check_compiler_available): New.  Use it instead of [which $CC].\n+\n 2019-04-23  Alan Modra  <amodra@gmail.com>\n \n \t* Makefile.am (GENDEPDIR): New var, used.."
    },
    {
      "sha": "ce52919e796abd98662b92532fce32a26d6217d2",
      "filename": "ld/testsuite/config/default.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/config/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/config/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/config/default.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -269,7 +269,7 @@ if { ![info exists LD_CLASS] } then {\n # Set PLT_CFLAGS to \"-fplt\" if target compiler supports it.\n \n if { ![info exists PLT_CFLAGS] } then {\n-    if { [which $CC] != 0 } {\n+    if { [check_compiler_available] } {\n \t# Check if gcc supports -fplt\n \tset flags \"\"\n \tif [board_info [target_info name] exists cflags] {\n@@ -307,7 +307,7 @@ if { ![info exists PLT_CFLAGS] } then {\n # target compiler supports them.\n \n if { ![info exists NOPIE_CFLAGS] || ![info exists NOPIE_LDFLAGS] } then {\n-    if { [which $CC] != 0 } {\n+    if { [check_compiler_available] } {\n \t# Check if gcc supports -fno-PIE -no-pie.\n \tset flags \"\"\n \tif [board_info [target_info name] exists cflags] {\n@@ -347,7 +347,7 @@ if { ![info exists NOPIE_CFLAGS] || ![info exists NOPIE_LDFLAGS] } then {\n # Set GNU2_CFLAGS to \"-mtls-dialect=gnu2\" if target compiler supports it.\n \n if { ![info exists GNU2_CFLAGS] } then {\n-    if { [which $CC] != 0 } {\n+    if { [check_compiler_available] } {\n \t# Check if gcc supports -mtls-dialect=gnu2\n \tset flags \"\"\n \tif [board_info [target_info name] exists cflags] {\n@@ -384,7 +384,7 @@ if { ![info exists GNU2_CFLAGS] } then {\n # Set INT128_CFLAGS to \"-DHAS_INT128\" if target compiler supports __int128.\n \n if { ![info exists INT128_CFLAGS] } then {\n-    if { [which $CC] != 0 } {\n+    if { [check_compiler_available] } {\n \t# Check if gcc supports __int128.\n \tset flags \"\"\n \tif [board_info [target_info name] exists cflags] {\n@@ -421,7 +421,7 @@ if { ![info exists INT128_CFLAGS] } then {\n # Set STATIC_LDFLAGS to \"-static\" if target compiler supports it.\n \n if { ![info exists STATIC_LDFLAGS] } then {\n-    if { [which $CC] != 0 } {\n+    if { [check_compiler_available] } {\n \t# Check if gcc supports -static.\n \tset flags \"\"\n \tif [board_info [target_info name] exists cflags] {\n@@ -458,7 +458,7 @@ if { ![info exists STATIC_LDFLAGS] } then {\n # Set STATIC_PIE_LDFLAGS to \"-static-pie\" if target compiler supports it.\n \n if { ![info exists STATIC_PIE_LDFLAGS] } then {\n-    if { [which $CC] != 0 } {\n+    if { [check_compiler_available] } {\n \t# Check if gcc supports -static-pie.\n \tset flags \"\"\n \tif [board_info [target_info name] exists cflags] {"
    },
    {
      "sha": "d5a0dccbc6a8cb374cbcc344752346e19d72e581",
      "filename": "ld/testsuite/ld-auto-import/auto-import.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-auto-import/auto-import.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-auto-import/auto-import.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-auto-import/auto-import.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -67,7 +67,7 @@ if [istarget *-pc-mingw*] {\n }\n \n # No compiler, no test.\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     untested \"Auto import test (compiler not found)\"\n     return\n }"
    },
    {
      "sha": "5436332be5d38de63c8cc027fb8f58189a1a9185",
      "filename": "ld/testsuite/ld-cygwin/exe-export.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-cygwin/exe-export.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-cygwin/exe-export.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-cygwin/exe-export.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -29,7 +29,7 @@ if {![istarget *-pc-cygwin]} {\n }\r\n \r\n # No compiler, no test.\r\n-if { [which $CC] == 0 } {\r\n+if { ![check_compiler_available] } {\r\n     untested \"Exe export test (no compiler available)\"\r\n     return\r\n }\r"
    },
    {
      "sha": "5cc044ba7efed4a7cfe5b37a2a7ba38a3bce861e",
      "filename": "ld/testsuite/ld-elf/audit.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/audit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/audit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/audit.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -32,7 +32,7 @@ if ![check_shared_lib_support] {\n }\n \n # Check if compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "90b6c6e6612bc54a37a211d45a0039dcdbd652cb",
      "filename": "ld/testsuite/ld-elf/compress.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/compress.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/compress.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/compress.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -32,7 +32,7 @@ if ![check_shared_lib_support] {\n }\n \n # Check if compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "233a2a87872b93acc7135b6bcd08b1931fc391bb",
      "filename": "ld/testsuite/ld-elf/dwarf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/dwarf.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -36,7 +36,7 @@ if ![check_shared_lib_support] {\n }\n \n # Check if compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "9121936c2101bacf79668153cb133a8bd83b2e6f",
      "filename": "ld/testsuite/ld-elf/elf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/elf.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -182,7 +182,7 @@ set LDFLAGS $old_ldflags\n set ASFLAGS $old_asflags\n \n # Check to see if the C compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "1acb556dba0529a8950c956d5cf3eb34d5ef9ed5",
      "filename": "ld/testsuite/ld-elf/indirect.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/indirect.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/indirect.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/indirect.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -33,7 +33,7 @@ if ![check_shared_lib_support] {\n }\n \n # Check if compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "6b0f23f48e81fb080f5d266c02d98fbda494c8e1",
      "filename": "ld/testsuite/ld-elf/linux-x86.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/linux-x86.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/linux-x86.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/linux-x86.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -20,7 +20,7 @@\n #\n \n # Test very simple native Linux/x86 programs with linux-x86.S.\n-if { ![isnative] || [which $CC] == 0 \\\n+if { ![isnative] || ![check_compiler_available] \\\n      || (![istarget \"i?86-*-linux*\"] \\\n          && ![istarget \"x86_64-*-linux*\"] \\\n          && ![istarget \"amd64-*-linux*\"]) } {"
    },
    {
      "sha": "f27fa2401d047153fdeb0841b7faf85536d5e533",
      "filename": "ld/testsuite/ld-elf/shared.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/shared.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -498,7 +498,7 @@ if { [istarget *-*-linux*]\n }\n \n # Check to see if the C compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "4daddc7509312da5edeccbb67fa5ac79d7bcbb97",
      "filename": "ld/testsuite/ld-elf/tls.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/tls.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/tls.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/tls.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -29,7 +29,7 @@ if { ![istarget *-*-linux*]\n }\n \n # Check to see if the C compiler works.\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "1a9fa7c3a2919996b34917cfc82a6488075b805c",
      "filename": "ld/testsuite/ld-elf/wrap.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/wrap.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elf/wrap.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/wrap.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -32,7 +32,7 @@ if ![check_shared_lib_support] {\n }\n \n # Check if compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "6052e8f7539ec45cc32743a98d7e75983ca8b33e",
      "filename": "ld/testsuite/ld-elfcomm/elfcomm.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfcomm/elfcomm.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -107,7 +107,7 @@ set test1w2\t\"$test1 (warning 2)\"\n set test1c1\t\"$test1 (change 1)\"\n set test1c2\t\"$test1 (change 2)\"\n \n-if { ![is_remote host] && [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     untested $test1w1\n     untested $test1w2\n     untested $test1c1"
    },
    {
      "sha": "ebaaa785320ccc709fce7c645a9513d71c96ef0f",
      "filename": "ld/testsuite/ld-elfvers/vers.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elfvers/vers.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elfvers/vers.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvers/vers.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -23,7 +23,7 @@\n #\n \n # Check to see if the C compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "bf0747a18cea406668f5767f7d0d91c8547d4f7c",
      "filename": "ld/testsuite/ld-elfvsb/elfvsb.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elfvsb/elfvsb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elfvsb/elfvsb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvsb/elfvsb.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -25,7 +25,7 @@\n # Make sure that ld can generate ELF shared libraries with visibility.\n \n # Check to see if the C compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "183f190cd2156464932ce98f104797e58927210a",
      "filename": "ld/testsuite/ld-elfweak/elfweak.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elfweak/elfweak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-elfweak/elfweak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfweak/elfweak.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -23,7 +23,7 @@\n #\n \n # Check to see if the C compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "fe50f31cda9de50490673dddef89609e89b11926",
      "filename": "ld/testsuite/ld-gc/gc.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-gc/gc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-gc/gc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/gc.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -39,7 +39,7 @@ if { [istarget m681*-*-*] || [istarget m68hc1*-*-*] } {\n     set cflags \"$cflags -fomit-frame-pointer -mshort\"\n }\n \n-if { [is_remote host] || [which $CC] != 0 } {\n+if { [check_compiler_available] } {\n     ld_compile \"$CC -c $CFLAGS $cflags\" $srcdir/$subdir/gc.c $objfile\n }\n \n@@ -130,7 +130,7 @@ if { [is_elf_format] && [check_shared_lib_support] } then {\n     set LDFLAGS $old_ldflags\n }\n \n-if { [is_remote host] || [which $CC] != 0 } {\n+if { [check_compiler_available] } {\n     if { [istarget \"*-*-linux*\"]\n \t || [istarget \"*-*-nacl*\"]\n \t || [istarget \"*-*-gnu*\"] } {\n@@ -141,24 +141,24 @@ if { [is_remote host] || [which $CC] != 0 } {\n     }\n }\n \n-if { [is_remote host] || [which $CC] != 0 } {\n+if { [check_compiler_available] } {\n \tld_compile \"$CC $CFLAGS $cflags\" $srcdir/$subdir/pr13683.c tmpdir/pr13683.o\n \trun_dump_test \"pr13683\"\n }\n \n-if { [is_remote host] || [which $CC] != 0 } {\n+if { [check_compiler_available] } {\n     ld_compile \"$CC $CFLAGS $cflags $NOPIE_CFLAGS\" $srcdir/$subdir/pr14265.c tmpdir/pr14265.o\n     run_dump_test \"pr14265\"\n }\n \n-if { [is_remote host] || [which $CC] != 0 } {\n+if { [check_compiler_available] } {\n     ld_compile \"$CC $CFLAGS $cflags -O0\" $srcdir/$subdir/pr19161-1.c tmpdir/pr19161-1.o\n     ld_compile \"$CC $CFLAGS $cflags -O0\" $srcdir/$subdir/pr19161-2.c tmpdir/pr19161-2.o\n     run_dump_test \"pr19161\"\n }\n \n if { [is_elf_format] && [check_shared_lib_support] \\\n-     && ([is_remote host] || [which $CC] != 0) } {\n+     && [check_compiler_available] } {\n     run_cc_link_tests [list \\\n \t[list \\\n \t    \"Build libpr20306.so\" \\"
    },
    {
      "sha": "3a1fd8b3cfebc57760fdb4e23a825133dec59538",
      "filename": "ld/testsuite/ld-i386/i386.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/i386.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -581,7 +581,7 @@ global PLT_CFLAGS\n # Must be Linux native with the C compiler\n if { [isnative]\n      && [istarget \"i?86-*-linux*\"]\n-     && [which $CC] != 0 } {\n+     && [check_compiler_available] } {\n     run_cc_link_tests [list \\\n \t[list \\\n \t    \"Build plt-lib.so\" \\\n@@ -1193,7 +1193,7 @@ global NOPIE_CFLAGS NOPIE_LDFLAGS\n if { [isnative]\n      && [check_ifunc_available]\n      && [istarget \"i?86-*-*\"]\n-     && [which $CC] != 0 } {\n+     && [check_compiler_available] } {\n     run_cc_link_tests [list \\\n \t[list \\\n \t    \"Build ifunc-1a.o ifunc-1b.o ifunc-1c.o ifunc-1d.o\" \\\n@@ -1310,7 +1310,7 @@ if { [isnative]\n # Must be native with the C compiler.\n if { [isnative]\n      && [istarget \"i?86-*-*\"]\n-     && [which $CC] != 0 } {\n+     && [check_compiler_available] } {\n     run_cc_link_tests [list \\\n \t[list \\\n \t    \"Build pr22001-1.so\" \\"
    },
    {
      "sha": "6a75a04d974bb67ca08c59a1114863fc707992d8",
      "filename": "ld/testsuite/ld-i386/no-plt.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-i386/no-plt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-i386/no-plt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/no-plt.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -35,7 +35,7 @@ if ![istarget \"i?86-*-*\"] {\n }\n \n # Check to see if the C compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "1587de67045d7347a82b6f48ba6e4c54b4b8f56e",
      "filename": "ld/testsuite/ld-i386/tls.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-i386/tls.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-i386/tls.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/tls.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -32,7 +32,7 @@ if ![istarget \"i?86-*-linux*\"] {\n }\n \n # Check to see if the C compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "3fd616ac69ab3f1eaca57e11b70e62b3a84f8e59",
      "filename": "ld/testsuite/ld-ifunc/ifunc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-ifunc/ifunc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-ifunc/ifunc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ifunc/ifunc.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -63,7 +63,7 @@ foreach t $test_list {\n \n # We need a working compiler.  (Strictly speaking this is\n # not true, we could use target specific assembler files).\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     verbose \"IFUNC tests not run - no compiler available\"\n     return\n }"
    },
    {
      "sha": "b78ef55965d2d7f842bcf5075b91a7967069c5b8",
      "filename": "ld/testsuite/ld-mn10300/mn10300.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-mn10300/mn10300.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-mn10300/mn10300.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mn10300/mn10300.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -134,7 +134,7 @@ proc i126256-test { } {\n     set tmpdir tmpdir\n     set testname \"Seg fault whilst linking one shared library into another when relaxation is enabled.\"\n \n-    if {![is_remote host] && [which $CC] == 0} then {\n+    if { ![check_compiler_available] } then {\n \treturn\n     }\n "
    },
    {
      "sha": "84098f654f2c68a5de58e421edfd1f54d09bee76",
      "filename": "ld/testsuite/ld-pe/pe-compile.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-pe/pe-compile.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-pe/pe-compile.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pe-compile.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -26,7 +26,7 @@ if {![is_pecoff_format]} {\n }\n \n # No compiler, no test.\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     untested \"PE version scripts\"\n     untested \"aligned common tests\"\n     # Add more \"untested\" directives here when adding more tests below."
    },
    {
      "sha": "ae91b612be8ceb7fa89599f1c6d742ab6c6392a8",
      "filename": "ld/testsuite/ld-pe/pe-run.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-pe/pe-run.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-pe/pe-run.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pe-run.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -54,7 +54,7 @@ if {![is_pecoff_format]} {\n }\n \n # No compiler, no test.\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     untested \"Direct linking to dll test\"\n     return\n }"
    },
    {
      "sha": "4ae239f67157f58781f94797ab6c67850ab23949",
      "filename": "ld/testsuite/ld-pe/pe-run2.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-pe/pe-run2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-pe/pe-run2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pe-run2.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -56,7 +56,7 @@ if {![is_pecoff_format]} {\n }\n \n # No compiler, no test.\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     untested \"Direct linking to dll fastcall/stdcall test\"\n     return\n }"
    },
    {
      "sha": "39c72056ac16dacc71f5a6a53eedc2325d1ec5d4",
      "filename": "ld/testsuite/ld-pie/pie.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-pie/pie.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-pie/pie.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pie/pie.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -26,7 +26,7 @@ if { ![istarget *-*-linux*]\n }\n \n # Check to see if the C compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "3449a076ab91b84222d6506ef76abfda4626d1df",
      "filename": "ld/testsuite/ld-plugin/lto.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-plugin/lto.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-plugin/lto.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/lto.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -19,7 +19,7 @@\n # MA 02110-1301, USA.\n \n # Check to see if the C and C++ compilers work\n-if { [which $CC] == 0 || [which $CXX] == 0 } {\n+if { ![check_compiler_available] || [which $CXX] == 0 } {\n     return\n }\n "
    },
    {
      "sha": "ee193e93f1004b4a97c171a4c7e86ccac59e922a",
      "filename": "ld/testsuite/ld-plugin/plugin.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-plugin/plugin.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-plugin/plugin.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/plugin.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -26,7 +26,7 @@ if ![check_plugin_api_available] {\n # And a compiler to be available.\n set can_compile 1\n set failure_kind \"unresolved\"\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n   # Don't fail immediately, \n   set can_compile 0\n   set failure_kind \"unsupported\""
    },
    {
      "sha": "35573cd10562a8f0b4199316d1d1a9bea0cde6ff",
      "filename": "ld/testsuite/ld-scripts/crossref.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-scripts/crossref.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-scripts/crossref.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/crossref.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -27,7 +27,7 @@ set test5 \"NOCROSSREFS_TO 2\"\n set test6 \"NOCROSSREFS_TO 3\"\n set test7 \"NOCROSSREFS_TO 4\"\n \n-if { ![is_remote host] && [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     untested $test1\n     untested $test2\n     untested $test3"
    },
    {
      "sha": "1fca64d861225e517fc121c8372d29526a0bb7bd",
      "filename": "ld/testsuite/ld-sh/sh.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-sh/sh.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-sh/sh.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-sh/sh.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -129,7 +129,7 @@ set testlink \"SH relaxing\"\n set testjsr \"SH confirm relaxing\"\n set testrun \"SH relaxing execution\"\n \n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     untested $testlink\n     untested $testjsr\n     untested $testrun"
    },
    {
      "sha": "ed17b93690869721e35d44d07014c7188d02a5c6",
      "filename": "ld/testsuite/ld-shared/shared.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-shared/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-shared/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-shared/shared.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -26,7 +26,7 @@\n # bootstrap test.\n \n # Check to see if the C compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "c3493d21cf12bd85732ed30fa274128df2d9c950",
      "filename": "ld/testsuite/ld-size/size.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-size/size.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-size/size.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-size/size.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -48,7 +48,7 @@ foreach t $test_list {\n }\n \n # We need a working compiler.\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     verbose \"Native size relocation tests not run - no compiler available\"\n     return\n }"
    },
    {
      "sha": "944e0a71567e8259cf1d894c5203819abeefcd0c",
      "filename": "ld/testsuite/ld-srec/srec.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-srec/srec.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-srec/srec.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-srec/srec.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -342,7 +342,7 @@ set sizeof_headers [string match \"*SIZEOF_HEADERS*\" $exec_output]\n # directly to the S-record format, and require that the two files\n # contain the same data.\n \n-if { ![is_remote host] && [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     untested $test1\n     untested $test2\n     return"
    },
    {
      "sha": "8a8e8655910a5671fb02b197ce83b23d2c4133b4",
      "filename": "ld/testsuite/ld-undefined/undefined.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-undefined/undefined.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-undefined/undefined.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-undefined/undefined.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -24,7 +24,7 @@ set testund \"undefined\"\n set testfn \"undefined function\"\n set testline \"undefined line\"\n \n-if { ![is_remote host] && [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     verbose \"Could not find C compiler!\" 1\n     untested $testund\n     untested $testfn"
    },
    {
      "sha": "eb2110834488fbdb49fdb59caa137e7117cf0382",
      "filename": "ld/testsuite/ld-unique/unique.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-unique/unique.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-unique/unique.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-unique/unique.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -44,7 +44,7 @@ foreach t $test_list {\n \n # We need a working compiler.  (Strictly speaking this is\n # not true, we could use target specific assembler files).\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     verbose \"UNIQUE compiled tests not run - no compiler available\"\n     return\n }"
    },
    {
      "sha": "4e63039cc14d033aa582f67ed86b443dd2e0ca93",
      "filename": "ld/testsuite/ld-x86-64/mpx.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-x86-64/mpx.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-x86-64/mpx.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/mpx.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -32,7 +32,7 @@ if ![istarget \"x86_64-*-linux*\"] {\n }\n \n # Check to see if the C compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "74093456219e614b84ea00649b91e98b6677b2c0",
      "filename": "ld/testsuite/ld-x86-64/no-plt.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-x86-64/no-plt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-x86-64/no-plt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/no-plt.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -35,7 +35,7 @@ if ![istarget \"x86_64-*-*\"] {\n }\n \n # Check to see if the C compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "0b9f5c57164d303264a04280dcddc562c6ff2e80",
      "filename": "ld/testsuite/ld-x86-64/tls.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-x86-64/tls.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-x86-64/tls.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/tls.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -32,7 +32,7 @@ if ![istarget \"x86_64-*-linux*\"] {\n }\n \n # Check to see if the C compiler works\n-if { [which $CC] == 0 } {\n+if { ![check_compiler_available] } {\n     return\n }\n "
    },
    {
      "sha": "23f202017cadf7378d9e2d411ed4ab1fdca78c94",
      "filename": "ld/testsuite/ld-x86-64/x86-64.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-x86-64/x86-64.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/ld-x86-64/x86-64.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/x86-64.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -731,7 +731,7 @@ global PLT_CFLAGS\n global NOPIE_CFLAGS NOPIE_LDFLAGS\n \n # Must be native with the C compiler\n-if { [isnative] && [which $CC] != 0 } {\n+if { [isnative] && [check_compiler_available] } {\n     run_cc_link_tests {\n \t{\"Helper X32 DSO from x86-64 object\" \"\" \"-m64 -fPIC -g\"\n \t {simple.c} {} \"libsimple.a\"}"
    },
    {
      "sha": "0ff51c952614164f4223c01e1983fb0e65721da3",
      "filename": "ld/testsuite/lib/ld-lib.exp",
      "status": "modified",
      "additions": 57,
      "deletions": 4,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/lib/ld-lib.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44ed80923ab89e141120defa8c1209b69869a7ac/ld/testsuite/lib/ld-lib.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/lib/ld-lib.exp?ref=44ed80923ab89e141120defa8c1209b69869a7ac",
      "patch": "@@ -688,6 +688,11 @@ proc run_ld_link_exec_tests { ldtests args } {\n \tset objfiles {}\n \tset failed 0\n \n+\tif { ![check_compiler_available] } {\n+\t    unsupported $testname\n+\t    continue\n+\t}\n+\n #\tverbose -log \"Testname is $testname\"\n #\tverbose -log \"ld_options is $ld_options\"\n #\tverbose -log \"as_options is $as_options\"\n@@ -840,6 +845,11 @@ proc run_cc_link_tests { ldtests } {\n \tset check_ld(terminal) 0\n \tset check_ld(source) \"\"\n \n+\tif { ![check_compiler_available] } {\n+\t    unsupported $testname\n+\t    continue\n+\t}\n+\n \t#verbose -log \"testname  is $testname\"\n \t#verbose -log \"ldflags   is $ldflags\"\n \t#verbose -log \"cflags    is $cflags\"\n@@ -1140,6 +1150,49 @@ proc check_sysroot_available { } {\n     return $ld_sysroot_available_saved\n }\n \n+# Return true if we can build a program with the compiler.\n+# On some targets, CC might be defined, but libraries and startup\n+# code might be missing or require special options that the ld test\n+# harness doesn't know about.\n+\n+proc check_compiler_available { } {\n+    global compiler_available_saved\n+    global CC\n+\n+    if {![info exists compiler_available_saved]} {\n+        if { [which $CC] == 0 } {\n+\t    set compiler_available_saved 0\n+\t    return 0\n+\t}\n+\n+\tset flags \"\"\n+\tif [board_info [target_info name] exists cflags] {\n+\t    append flags \" [board_info [target_info name] cflags]\"\n+\t}\n+\tif [board_info [target_info name] exists ldflags] {\n+\t    append flags \" [board_info [target_info name] ldflags]\"\n+\t}\n+\n+\tset basename \"tmpdir/compiler[pid]\"\n+\tset src ${basename}.c\n+\tset output ${basename}.out\n+\tset f [open $src \"w\"]\n+\tputs $f \"int main (void)\"\n+\tputs $f \"{\"\n+\tputs $f \"  return 0; \"\n+\tputs $f \"}\"\n+\tclose $f\n+\tif [is_remote host] {\n+\t    set src [remote_download host $src]\n+\t}\n+\tset compiler_available_saved [run_host_cmd_yesno \"$CC\" \"$flags $src -o $output\"]\n+\tremote_file host delete $src\n+\tremote_file host delete $output\n+\tfile delete $src\n+    }\n+    return $compiler_available_saved\n+}\n+\n # Returns 1 if plugin is enabled in gcc.  Returns 0 otherwise.\n proc check_gcc_plugin_enabled { } {\n     global CC\n@@ -1327,7 +1380,7 @@ proc check_ifunc_available { } {\n     global CC\n \n     if {![info exists ifunc_available_saved]} {\n-        if { [which $CC] == 0 } {\n+        if { ![check_compiler_available] } {\n \t    set ifunc_available_saved 0\n \t    return 0\n \t}\n@@ -1376,7 +1429,7 @@ proc check_ifunc_attribute_available { } {\n     global CC\n \n     if {![info exists ifunc_attribute_available_saved]} {\n-        if { [which $CC] == 0 } {\n+        if { ![check_compiler_available] } {\n \t    set ifunc_attribute_available_saved 0\n \t    return 0\n \t}\n@@ -1423,7 +1476,7 @@ proc check_libdl_available { } {\n     global CC\n \n     if {![info exists libdl_available_saved]} {\n-        if { [which $CC] == 0 } {\n+        if { ![check_compiler_available] } {\n \t    set libdl_available_saved 0\n \t    return 0\n \t}\n@@ -1459,7 +1512,7 @@ proc check_gnu2_tls_available { } {\n     global GNU2_CFLAGS\n \n     if {![info exists gnu2_tls_available_saved]} {\n-        if { [which $CC] == 0 || \"$GNU2_CFLAGS\" == \"\" } {\n+        if { ![check_compiler_available] || \"$GNU2_CFLAGS\" == \"\" } {\n \t    set gnu2_tls_available_saved 0\n \t    return 0\n \t}"
    }
  ]
}