{
  "sha": "8d939e8ea4b05a263579b533850a983668ccd1fa",
  "node_id": "C_kwDOANOeidoAKDhkOTM5ZThlYTRiMDVhMjYzNTc5YjUzMzg1MGE5ODM2NjhjY2QxZmE",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-09-24T03:35:24Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-10-29T20:44:20Z"
    },
    "message": "gdb: remove FIELD_LOC_KIND macro\n\nRemove FIELD_LOC_KIND, replace its uses with field::loc_kind or\ncall_site_target::loc_kind.\n\nChange-Id: I0368d8c3ea269d491bb215aa70e32edbdf55f389",
    "tree": {
      "sha": "2222080eda027228bf5fea5e6643591af5858a6f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2222080eda027228bf5fea5e6643591af5858a6f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8d939e8ea4b05a263579b533850a983668ccd1fa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d939e8ea4b05a263579b533850a983668ccd1fa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8d939e8ea4b05a263579b533850a983668ccd1fa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d939e8ea4b05a263579b533850a983668ccd1fa/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d3771fe234b74d60cfa553940bce9d047bd38e8d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3771fe234b74d60cfa553940bce9d047bd38e8d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d3771fe234b74d60cfa553940bce9d047bd38e8d"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 7,
    "deletions": 8
  },
  "files": [
    {
      "sha": "1054b0182e10fbfe2757437114e9f80cebc80569",
      "filename": "gdb/dwarf2/loc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8d939e8ea4b05a263579b533850a983668ccd1fa/gdb/dwarf2/loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8d939e8ea4b05a263579b533850a983668ccd1fa/gdb/dwarf2/loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/loc.c?ref=8d939e8ea4b05a263579b533850a983668ccd1fa",
      "patch": "@@ -640,7 +640,7 @@ call_site_to_target_addr (struct gdbarch *call_site_gdbarch,\n \t\t\t  struct call_site *call_site,\n \t\t\t  struct frame_info *caller_frame)\n {\n-  switch (FIELD_LOC_KIND (call_site->target))\n+  switch (call_site->target.loc_kind ())\n     {\n     case FIELD_LOC_KIND_DWARF_BLOCK:\n       {"
    },
    {
      "sha": "622f31457f8c36c34817e3c19252b7fa356fd468",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8d939e8ea4b05a263579b533850a983668ccd1fa/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8d939e8ea4b05a263579b533850a983668ccd1fa/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=8d939e8ea4b05a263579b533850a983668ccd1fa",
      "patch": "@@ -4204,11 +4204,11 @@ check_types_equal (struct type *type1, struct type *type2,\n \n \t  if (FIELD_ARTIFICIAL (*field1) != FIELD_ARTIFICIAL (*field2)\n \t      || FIELD_BITSIZE (*field1) != FIELD_BITSIZE (*field2)\n-\t      || FIELD_LOC_KIND (*field1) != FIELD_LOC_KIND (*field2))\n+\t      || field1->loc_kind () != field2->loc_kind ())\n \t    return false;\n \t  if (!compare_maybe_null_strings (field1->name (), field2->name ()))\n \t    return false;\n-\t  switch (FIELD_LOC_KIND (*field1))\n+\t  switch (field1->loc_kind ())\n \t    {\n \t    case FIELD_LOC_KIND_BITPOS:\n \t      if (FIELD_BITPOS (*field1) != FIELD_BITPOS (*field2))\n@@ -4245,7 +4245,7 @@ check_types_equal (struct type *type1, struct type *type2,\n \t    default:\n \t      internal_error (__FILE__, __LINE__, _(\"Unsupported field kind \"\n \t\t\t\t\t\t    \"%d by check_types_equal\"),\n-\t\t\t      FIELD_LOC_KIND (*field1));\n+\t\t\t      field1->loc_kind ());\n \t    }\n \n \t  worklist->emplace_back (field1->type (), field2->type ());\n@@ -4891,8 +4891,8 @@ field_is_static (struct field *f)\n      have a dedicated flag that would be set for static fields when\n      the type is being created.  But in practice, checking the field\n      loc_kind should give us an accurate answer.  */\n-  return (FIELD_LOC_KIND (*f) == FIELD_LOC_KIND_PHYSNAME\n-\t  || FIELD_LOC_KIND (*f) == FIELD_LOC_KIND_PHYSADDR);\n+  return (f->loc_kind () == FIELD_LOC_KIND_PHYSNAME\n+\t  || f->loc_kind () == FIELD_LOC_KIND_PHYSADDR);\n }\n \n static void"
    },
    {
      "sha": "f1c8d434446c27d333176064b9bf254372bad2cf",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8d939e8ea4b05a263579b533850a983668ccd1fa/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8d939e8ea4b05a263579b533850a983668ccd1fa/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=8d939e8ea4b05a263579b533850a983668ccd1fa",
      "patch": "@@ -2125,7 +2125,6 @@ extern void set_type_vptr_basetype (struct type *, struct type *);\n   (TYPE_CPLUS_SPECIFIC(thistype)->virtual_field_bits == NULL ? 0 \\\n     : B_TST(TYPE_CPLUS_SPECIFIC(thistype)->virtual_field_bits, (index)))\n \n-#define FIELD_LOC_KIND(thisfld) ((thisfld).loc_kind ())\n #define FIELD_BITPOS(thisfld) ((thisfld).loc_bitpos ())\n #define FIELD_ENUMVAL(thisfld) ((thisfld).loc_enumval ())\n #define FIELD_STATIC_PHYSNAME(thisfld) ((thisfld).loc_physname ())\n@@ -2134,7 +2133,7 @@ extern void set_type_vptr_basetype (struct type *, struct type *);\n #define FIELD_ARTIFICIAL(thisfld) ((thisfld).artificial)\n #define FIELD_BITSIZE(thisfld) ((thisfld).bitsize)\n \n-#define TYPE_FIELD_LOC_KIND(thistype, n) FIELD_LOC_KIND ((thistype)->field (n))\n+#define TYPE_FIELD_LOC_KIND(thistype, n) ((thistype)->field (n).loc_kind ())\n #define TYPE_FIELD_BITPOS(thistype, n) FIELD_BITPOS ((thistype)->field (n))\n #define TYPE_FIELD_ENUMVAL(thistype, n) FIELD_ENUMVAL ((thistype)->field (n))\n #define TYPE_FIELD_STATIC_PHYSNAME(thistype, n) FIELD_STATIC_PHYSNAME ((thistype)->field (n))"
    }
  ]
}