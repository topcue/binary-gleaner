{
  "sha": "aff4e759b8ad54df367e38ceaf16c92f680695a1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWZmNGU3NTliOGFkNTRkZjM2N2UzOGNlYWYxNmM5MmY2ODA2OTVhMQ==",
  "commit": {
    "author": {
      "name": "Mihails Strasuns",
      "email": "mihails.strasuns@intel.com",
      "date": "2020-03-27T10:21:01Z"
    },
    "committer": {
      "name": "Mihails Strasuns",
      "email": "mihails.strasuns@intel.com",
      "date": "2020-05-12T07:52:46Z"
    },
    "message": "[gdb/testsuite] define jit function name via macro\n\nReplaces previous approach with patching resulting ELF binary after\nloading - now that each test iteration works on a separately compiled\nbinary it is not necessary anymore.\n\nTests are still being ran without debug info to preserve original test\nfunctionality but this change opens up the possibility to enable debug\ninfo if needed too.\n\ngdb/testsuite/ChangeLog:\n\n2020-03-27  Mihails Strasuns  <mihails.strasuns@intel.com>\n\n\t* lib/jit-elf-helpers.exp: Supply -DFUNCTION_NAME macro\n\t  definition when compiling jit-elf-solib.co.\n\t* gdb.base/jit-elf-main.c: Stop patching jit function name.\n\t* gdb.base/jit-elf-solib.c: Use FUNCTION_NAME macro value as a\n\t  function name.",
    "tree": {
      "sha": "26d94167f17636e273c7853fcb76cdaf3700d99c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/26d94167f17636e273c7853fcb76cdaf3700d99c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aff4e759b8ad54df367e38ceaf16c92f680695a1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aff4e759b8ad54df367e38ceaf16c92f680695a1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aff4e759b8ad54df367e38ceaf16c92f680695a1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aff4e759b8ad54df367e38ceaf16c92f680695a1/comments",
  "author": {
    "login": "mihails-strasuns-intel",
    "id": 55576710,
    "node_id": "MDQ6VXNlcjU1NTc2NzEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/55576710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mihails-strasuns-intel",
    "html_url": "https://github.com/mihails-strasuns-intel",
    "followers_url": "https://api.github.com/users/mihails-strasuns-intel/followers",
    "following_url": "https://api.github.com/users/mihails-strasuns-intel/following{/other_user}",
    "gists_url": "https://api.github.com/users/mihails-strasuns-intel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mihails-strasuns-intel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mihails-strasuns-intel/subscriptions",
    "organizations_url": "https://api.github.com/users/mihails-strasuns-intel/orgs",
    "repos_url": "https://api.github.com/users/mihails-strasuns-intel/repos",
    "events_url": "https://api.github.com/users/mihails-strasuns-intel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mihails-strasuns-intel/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "mihails-strasuns-intel",
    "id": 55576710,
    "node_id": "MDQ6VXNlcjU1NTc2NzEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/55576710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mihails-strasuns-intel",
    "html_url": "https://github.com/mihails-strasuns-intel",
    "followers_url": "https://api.github.com/users/mihails-strasuns-intel/followers",
    "following_url": "https://api.github.com/users/mihails-strasuns-intel/following{/other_user}",
    "gists_url": "https://api.github.com/users/mihails-strasuns-intel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mihails-strasuns-intel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mihails-strasuns-intel/subscriptions",
    "organizations_url": "https://api.github.com/users/mihails-strasuns-intel/orgs",
    "repos_url": "https://api.github.com/users/mihails-strasuns-intel/repos",
    "events_url": "https://api.github.com/users/mihails-strasuns-intel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mihails-strasuns-intel/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "80ad340c90234f7294ee71468c984e7f853d9bb6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/80ad340c90234f7294ee71468c984e7f853d9bb6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/80ad340c90234f7294ee71468c984e7f853d9bb6"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 8,
    "deletions": 34
  },
  "files": [
    {
      "sha": "2d654891d942c987de40b7f6851be9ad8eee1323",
      "filename": "gdb/testsuite/gdb.base/jit-elf-main.c",
      "status": "modified",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aff4e759b8ad54df367e38ceaf16c92f680695a1/gdb/testsuite/gdb.base/jit-elf-main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aff4e759b8ad54df367e38ceaf16c92f680695a1/gdb/testsuite/gdb.base/jit-elf-main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/jit-elf-main.c?ref=aff4e759b8ad54df367e38ceaf16c92f680695a1",
      "patch": "@@ -51,35 +51,6 @@ usage (void)\n   exit (1);\n }\n \n-/* Rename jit_function_XXXX to match idx  */\n-\n-static void\n-update_name (const void *const addr, int idx)\n-{\n-  const ElfW (Ehdr) *const ehdr = (ElfW (Ehdr) *)addr;\n-  ElfW (Shdr) *const shdr = (ElfW (Shdr) *)((char *)addr + ehdr->e_shoff);\n-  ElfW (Phdr) *const phdr = (ElfW (Phdr) *)((char *)addr + ehdr->e_phoff);\n-  int i;\n-\n-  for (i = 0; i < ehdr->e_shnum; ++i)\n-    {\n-      if (shdr[i].sh_type == SHT_STRTAB)\n-        {\n-          /* Note: we update both .strtab and .dynstr.  The latter would\n-             not be correct if this were a regular shared library (.hash\n-             would be wrong), but this is a simulation -- the library is\n-             never exposed to the dynamic loader, so it all ends up ok.  */\n-          char *const strtab = (char *)((ElfW (Addr))addr + shdr[i].sh_offset);\n-          char *const strtab_end = strtab + shdr[i].sh_size;\n-          char *p;\n-\n-          for (p = strtab; p < strtab_end; p += strlen (p) + 1)\n-            if (strcmp (p, \"jit_function_XXXX\") == 0)\n-              sprintf (p, \"jit_function_%04d\", idx);\n-        }\n-    }\n-}\n-\n /* Defined by the .exp file if testing attach.  */\n #ifndef ATTACH\n #define ATTACH 0\n@@ -152,8 +123,6 @@ MAIN (int argc, char *argv[])\n \t  exit (1);\n \t}\n \n-      update_name (addr, i);\n-\n       /* Link entry at the end of the list.  */\n       entry->symfile_addr = (const char *)addr;\n       entry->symfile_size = st.st_size;"
    },
    {
      "sha": "66d6a2be6d7af6aa700a5b7c959e6aaf0a5b4106",
      "filename": "gdb/testsuite/gdb.base/jit-elf-solib.c",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aff4e759b8ad54df367e38ceaf16c92f680695a1/gdb/testsuite/gdb.base/jit-elf-solib.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aff4e759b8ad54df367e38ceaf16c92f680695a1/gdb/testsuite/gdb.base/jit-elf-solib.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/jit-elf-solib.c?ref=aff4e759b8ad54df367e38ceaf16c92f680695a1",
      "patch": "@@ -15,7 +15,11 @@\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n \n-/* This simulates a JIT library.  The function is \"renamed\" after being\n-   loaded into memory.  */\n+/* This simulates a JIT library.  The function name is supplied during\n+   compilation as a macro.  */\n \n-int jit_function_XXXX() { return 42; }\n+#ifndef FUNCTION_NAME\n+#error \"Must define the FUNCTION_NAME macro to set a jited function name\"\n+#endif\n+\n+int FUNCTION_NAME() { return 42; }"
    },
    {
      "sha": "ab647abe50eacf9c685fd04ddcbc17bdba6f3115",
      "filename": "gdb/testsuite/lib/jit-elf-helpers.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aff4e759b8ad54df367e38ceaf16c92f680695a1/gdb/testsuite/lib/jit-elf-helpers.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aff4e759b8ad54df367e38ceaf16c92f680695a1/gdb/testsuite/lib/jit-elf-helpers.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/jit-elf-helpers.exp?ref=aff4e759b8ad54df367e38ceaf16c92f680695a1",
      "patch": "@@ -91,6 +91,7 @@ proc compile_and_download_n_jit_so {jit_solib_basename jit_solib_srcfile count}\n \t# with mapping the resulting binary to the same fixed base it allows\n \t# to dynamically execute functions from it without any further adjustments.\n \tset options [list \\\n+\t    additional_flags=-DFUNCTION_NAME=[format \"jit_function_%04d\" $i] \\\n \t    additional_flags=-Xlinker \\\n \t    additional_flags=-Ttext-segment=$addr]\n \tif { [gdb_compile_shlib ${jit_solib_srcfile} ${binfile} $options] != \"\" } {"
    }
  ]
}