{
  "sha": "9ab8741a48294e19d514721c710c81bba46db7f2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWFiODc0MWE0ODI5NGUxOWQ1MTQ3MjFjNzEwYzgxYmJhNDZkYjdmMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-04T23:03:27Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-09T17:59:25Z"
    },
    "message": "Consistently use bool for fake_pid_p\n\nI noticed a few spots where fake_pid_p is handled as an int, whereas\nthe field in struct inferior has type bool.  This patch changes the\nremaining places to use bool as well.\n\nTested by the buildbot.\n\ngdb/ChangeLog\n2019-04-09  Tom Tromey  <tromey@adacore.com>\n\n\t* remote.c (remote_target::remote_add_inferior): Change fake_pid_p\n\tto bool.\n\t(extended_remote_target::attach): Update.\n\t(remote_target::remote_notice_new_inferior): Update.\n\t(remote_target::add_current_inferior_and_thread): Update.\n\t* inferior.c (exit_inferior_1): Use \"false\".\n\t* corelow.c (add_to_thread_list): Make fake_pid_p bool.",
    "tree": {
      "sha": "4d5ae9a1a3992e59d5d23ad1c256278f422d4d08",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4d5ae9a1a3992e59d5d23ad1c256278f422d4d08"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9ab8741a48294e19d514721c710c81bba46db7f2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ab8741a48294e19d514721c710c81bba46db7f2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9ab8741a48294e19d514721c710c81bba46db7f2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ab8741a48294e19d514721c710c81bba46db7f2/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9ca1957fcb3c6904d9e5fb0a0e78d4b98f76b1b6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ca1957fcb3c6904d9e5fb0a0e78d4b98f76b1b6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9ca1957fcb3c6904d9e5fb0a0e78d4b98f76b1b6"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 20,
    "deletions": 10
  },
  "files": [
    {
      "sha": "6ee8d05764d172253738465503da97b18ccf55b1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ab8741a48294e19d514721c710c81bba46db7f2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ab8741a48294e19d514721c710c81bba46db7f2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9ab8741a48294e19d514721c710c81bba46db7f2",
      "patch": "@@ -1,3 +1,13 @@\n+2019-04-09  Tom Tromey  <tromey@adacore.com>\n+\n+\t* remote.c (remote_target::remote_add_inferior): Change fake_pid_p\n+\tto bool.\n+\t(extended_remote_target::attach): Update.\n+\t(remote_target::remote_notice_new_inferior): Update.\n+\t(remote_target::add_current_inferior_and_thread): Update.\n+\t* inferior.c (exit_inferior_1): Use \"false\".\n+\t* corelow.c (add_to_thread_list): Make fake_pid_p bool.\n+\n 2019-04-09  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* infcmd.c (run_command_1): Pass -qualified to tbreak when using"
    },
    {
      "sha": "3ce612d31b429ab36562f5e5be082479339776d3",
      "filename": "gdb/corelow.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ab8741a48294e19d514721c710c81bba46db7f2/gdb/corelow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ab8741a48294e19d514721c710c81bba46db7f2/gdb/corelow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/corelow.c?ref=9ab8741a48294e19d514721c710c81bba46db7f2",
      "patch": "@@ -285,7 +285,7 @@ add_to_thread_list (bfd *abfd, asection *asect, void *reg_sect_arg)\n   int core_tid;\n   int pid, lwpid;\n   asection *reg_sect = (asection *) reg_sect_arg;\n-  int fake_pid_p = 0;\n+  bool fake_pid_p = false;\n   struct inferior *inf;\n \n   if (!startswith (bfd_section_name (abfd, asect), \".reg/\"))\n@@ -296,7 +296,7 @@ add_to_thread_list (bfd *abfd, asection *asect, void *reg_sect_arg)\n   pid = bfd_core_file_pid (core_bfd);\n   if (pid == 0)\n     {\n-      fake_pid_p = 1;\n+      fake_pid_p = true;\n       pid = CORELOW_PID;\n     }\n "
    },
    {
      "sha": "e7b49376e93dece2624e6ad1a363afce030da0f2",
      "filename": "gdb/inferior.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ab8741a48294e19d514721c710c81bba46db7f2/gdb/inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ab8741a48294e19d514721c710c81bba46db7f2/gdb/inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.c?ref=9ab8741a48294e19d514721c710c81bba46db7f2",
      "patch": "@@ -191,7 +191,7 @@ exit_inferior_1 (struct inferior *inftoex, int silent)\n   gdb::observers::inferior_exit.notify (inf);\n \n   inf->pid = 0;\n-  inf->fake_pid_p = 0;\n+  inf->fake_pid_p = false;\n   inf->priv = NULL;\n \n   if (inf->vfork_parent != NULL)"
    },
    {
      "sha": "69b479b40c1f3b3daa4df8431fd53ca34e959574",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ab8741a48294e19d514721c710c81bba46db7f2/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ab8741a48294e19d514721c710c81bba46db7f2/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=9ab8741a48294e19d514721c710c81bba46db7f2",
      "patch": "@@ -767,7 +767,7 @@ class remote_target : public process_stratum_target\n \n   char *remote_get_noisy_reply ();\n   int remote_query_attached (int pid);\n-  inferior *remote_add_inferior (int fake_pid_p, int pid, int attached,\n+  inferior *remote_add_inferior (bool fake_pid_p, int pid, int attached,\n \t\t\t\t int try_open_exec);\n \n   ptid_t remote_current_thread (ptid_t oldpid);\n@@ -2354,7 +2354,7 @@ remote_target::remote_query_attached (int pid)\n    if no main executable is open already.  */\n \n inferior *\n-remote_target::remote_add_inferior (int fake_pid_p, int pid, int attached,\n+remote_target::remote_add_inferior (bool fake_pid_p, int pid, int attached,\n \t\t\t\t    int try_open_exec)\n {\n   struct inferior *inf;\n@@ -2495,7 +2495,7 @@ remote_target::remote_notice_new_inferior (ptid_t currthread, int executing)\n       if (find_inferior_pid (currthread.pid ()) == NULL)\n \t{\n \t  struct remote_state *rs = get_remote_state ();\n-\t  int fake_pid_p = !remote_multi_process_p (rs);\n+\t  bool fake_pid_p = !remote_multi_process_p (rs);\n \n \t  inf = remote_add_inferior (fake_pid_p,\n \t\t\t\t     currthread.pid (), -1, 1);\n@@ -4311,7 +4311,7 @@ void\n remote_target::add_current_inferior_and_thread (char *wait_status)\n {\n   struct remote_state *rs = get_remote_state ();\n-  int fake_pid_p = 0;\n+  bool fake_pid_p = false;\n \n   inferior_ptid = null_ptid;\n \n@@ -4321,7 +4321,7 @@ remote_target::add_current_inferior_and_thread (char *wait_status)\n   if (curr_ptid != null_ptid)\n     {\n       if (!remote_multi_process_p (rs))\n-\tfake_pid_p = 1;\n+\tfake_pid_p = true;\n     }\n   else\n     {\n@@ -4330,7 +4330,7 @@ remote_target::add_current_inferior_and_thread (char *wait_status)\n \t double duty as both the pid of the target process (if it has\n \t such), and as a flag indicating that a target is active.  */\n       curr_ptid = magic_null_ptid;\n-      fake_pid_p = 1;\n+      fake_pid_p = true;\n     }\n \n   remote_add_inferior (fake_pid_p, curr_ptid.pid (), -1, 1);\n@@ -5847,7 +5847,7 @@ extended_remote_target::attach (const char *args, int from_tty)\n \t     target_pid_to_str (ptid_t (pid)).c_str ());\n     }\n \n-  set_current_inferior (remote_add_inferior (0, pid, 1, 0));\n+  set_current_inferior (remote_add_inferior (false, pid, 1, 0));\n \n   inferior_ptid = ptid_t (pid);\n "
    }
  ]
}