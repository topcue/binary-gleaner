{
  "sha": "2f631626f1d8a354d3c5f9d2fce15b47d05d1455",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmY2MzE2MjZmMWQ4YTM1NGQzYzVmOWQyZmNlMTViNDdkMDVkMTQ1NQ==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-21T03:50:35Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-24T00:11:45Z"
    },
    "message": "sim: syscall: handle killing the sim itself\n\nIf code tries to send a signal to itself, the callback layer ignores\nit and forces the caller to handle it.  This allows the sim to turn\nthat into an engine halt rather than actually killing the sim.",
    "tree": {
      "sha": "7011d11a990c8da9bd7c3525a32cf70b81a1dc2c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7011d11a990c8da9bd7c3525a32cf70b81a1dc2c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2f631626f1d8a354d3c5f9d2fce15b47d05d1455",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2f631626f1d8a354d3c5f9d2fce15b47d05d1455",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2f631626f1d8a354d3c5f9d2fce15b47d05d1455",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2f631626f1d8a354d3c5f9d2fce15b47d05d1455/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e91488f739f0dbb93bfd9d96164c25d9674846c4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e91488f739f0dbb93bfd9d96164c25d9674846c4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e91488f739f0dbb93bfd9d96164c25d9674846c4"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 18,
    "deletions": 2
  },
  "files": [
    {
      "sha": "18d37bd17c650b65459d401132dacf6f0e31c319",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2f631626f1d8a354d3c5f9d2fce15b47d05d1455/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2f631626f1d8a354d3c5f9d2fce15b47d05d1455/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=2f631626f1d8a354d3c5f9d2fce15b47d05d1455",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-23  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* sim-syscall.c (sim_syscall_multi): Handle CB_SYS_kill.\n+\n 2021-06-23  Mike Frysinger  <vapier@gentoo.org>\n \n \t* callback.c (os_kill): New function."
    },
    {
      "sha": "f24d761ee8fec2e36b7086464b9410228cdd3010",
      "filename": "sim/common/sim-syscall.c",
      "status": "modified",
      "additions": 14,
      "deletions": 2,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2f631626f1d8a354d3c5f9d2fce15b47d05d1455/sim/common/sim-syscall.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2f631626f1d8a354d3c5f9d2fce15b47d05d1455/sim/common/sim-syscall.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-syscall.c?ref=2f631626f1d8a354d3c5f9d2fce15b47d05d1455",
      "patch": "@@ -97,8 +97,20 @@ sim_syscall_multi (SIM_CPU *cpu, int func, long arg1, long arg2, long arg3,\n     TRACE_SYSCALL (cpu, \"%s[%i](%#lx, %#lx, %#lx) = %li\",\n \t\t   syscall, func, arg1, arg2, arg3, sc.result);\n \n-  if (cb_target_to_host_syscall (cb, func) == CB_SYS_exit)\n-    sim_engine_halt (sd, cpu, NULL, sim_pc_get (cpu), sim_exited, arg1);\n+  /* Handle syscalls that affect engine behavior.  */\n+  switch (cb_target_to_host_syscall (cb, func))\n+    {\n+    case CB_SYS_exit:\n+      sim_engine_halt (sd, cpu, NULL, sim_pc_get (cpu), sim_exited, arg1);\n+      break;\n+\n+    case CB_SYS_kill:\n+      /* TODO: Need to translate target signal to sim signal, but the sim\n+\t doesn't yet have such a mapping layer.  */\n+      if (arg1 == (*cb->getpid) (cb))\n+\tsim_engine_halt (sd, cpu, NULL, sim_pc_get (cpu), sim_signalled, arg2);\n+      break;\n+    }\n \n   *result = sc.result;\n   *result2 = sc.result2;"
    }
  ]
}