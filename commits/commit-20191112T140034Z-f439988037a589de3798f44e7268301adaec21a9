{
  "sha": "f439988037a589de3798f44e7268301adaec21a9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjQzOTk4ODAzN2E1ODlkZTM3OThmNDRlNzI2ODMwMWFkYWVjMjFhOQ==",
  "commit": {
    "author": {
      "name": "Mihail Ionescu",
      "email": "mihail.ionescu@arm.com",
      "date": "2019-11-12T13:53:06Z"
    },
    "committer": {
      "name": "Kyrylo Tkachov",
      "email": "kyrylo.tkachov@arm.com",
      "date": "2019-11-12T14:00:34Z"
    },
    "message": "[gas][arm] Make .fpu reset the FPU/Coprocessor feature bits\n\nThis patch is fixes the '.fpu' behaviour.\nCurrently, using '.fpu' resets the previously selected '.fpu' options (by overwriting them),\nbut does not reset previous FPU options selected by other means (ie. when using\n'.arch_extension fp' in conjunction with '.fpu <x>', the FPU is not reset).\n\nExample:\n.arch armv8-a         @ SET BASE\n.arch_extension fp    @ ADD FP-ARMV8\n.fpu vfpv2            @ ADD (already existing bits, does not reset)\nvfms.f32 s0, s1, s2   @ OK\n\n.arch armv8-a         @ RESET\n.fpu fp-armv8         @ ADD FP-ARMV8\nvfms.f32 s0, s1, s2   @ OK\n.fpu vfpv2            @ RESET to VFPV2\nvfms.f32 s0, s1, s2   @ ERROR\n\nAfter the patch this becomes:\n.arch armv8-a         @ SET BASE\n.arch_extension fp    @ ADD FP-ARMV8\n.fpu vfpv2            @ RESET TO VFPV2\nvfms.f32 s0, s1, s2   @ ERROR\n\n.arch armv8-a         @ RESET\n.fpu fp-armv8         @ ADD FP-ARMV8\nvfms.f32 s0, s1, s2   @ OK\n.fpu vfpv2            @ RESET to VFPV2\nvfms.f32 s0, s1, s2   @ ERROR\n\ngas/ChangeLog:\n\n2019-11-11  Mihail Ionescu  <mihail.ionescu@arm.com>\n\n        * config/tc-arm.c (s_arm_fpu): Clear selected_cpu fpu bits.\n        (fpu_any): Remove OBJ_ELF guards.\n        * gas/testsuite/gas/arm/fpu-rst.s: New.\n        * gas/testsuite/gas/arm/fpu-rst.d: New.\n        * gas/testsuite/gas/arm/fpu-rst.l: New.",
    "tree": {
      "sha": "10e4a7636ea4a4abe9791aeeddd50d15c4823e6f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/10e4a7636ea4a4abe9791aeeddd50d15c4823e6f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f439988037a589de3798f44e7268301adaec21a9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f439988037a589de3798f44e7268301adaec21a9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f439988037a589de3798f44e7268301adaec21a9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f439988037a589de3798f44e7268301adaec21a9/comments",
  "author": null,
  "committer": {
    "login": "ktkachov-arm",
    "id": 74917949,
    "node_id": "MDQ6VXNlcjc0OTE3OTQ5",
    "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ktkachov-arm",
    "html_url": "https://github.com/ktkachov-arm",
    "followers_url": "https://api.github.com/users/ktkachov-arm/followers",
    "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs",
    "repos_url": "https://api.github.com/users/ktkachov-arm/repos",
    "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "51c8edf68bf1e16c6d05fbb31a36e0cc436a9750",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51c8edf68bf1e16c6d05fbb31a36e0cc436a9750",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/51c8edf68bf1e16c6d05fbb31a36e0cc436a9750"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 32,
    "deletions": 2
  },
  "files": [
    {
      "sha": "8dd6bfcf1fd897b4cbe09488030ab5c9c43bb6e5",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f439988037a589de3798f44e7268301adaec21a9/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f439988037a589de3798f44e7268301adaec21a9/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=f439988037a589de3798f44e7268301adaec21a9",
      "patch": "@@ -1,3 +1,11 @@\n+2019-11-12  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* config/tc-arm.c (s_arm_fpu): Clear selected_cpu fpu bits.\n+\t(fpu_any): Remove OBJ_ELF guards.\n+\t* testsuite/gas/arm/fpu-rst.s: New.\n+\t* testsuite/gas/arm/fpu-rst.d: New.\n+\t* testsuite/gas/arm/fpu-rst.l: New.\n+\n 2019-11-12  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (type_names): Remove OPERAND_TYPE_ESSEG"
    },
    {
      "sha": "167d039b7644f5f29ab311cfcd1a3d8761fe8ca7",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f439988037a589de3798f44e7268301adaec21a9/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f439988037a589de3798f44e7268301adaec21a9/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=f439988037a589de3798f44e7268301adaec21a9",
      "patch": "@@ -281,9 +281,7 @@ static const arm_feature_set arm_ext_i8mm =\n   ARM_FEATURE_CORE_HIGH (ARM_EXT2_I8MM);\n \n static const arm_feature_set arm_arch_any = ARM_ANY;\n-#ifdef OBJ_ELF\n static const arm_feature_set fpu_any = FPU_ANY;\n-#endif\n static const arm_feature_set arm_arch_full ATTRIBUTE_UNUSED = ARM_FEATURE (-1, -1, -1);\n static const arm_feature_set arm_arch_t2 = ARM_ARCH_THUMB2;\n static const arm_feature_set arm_arch_none = ARM_ARCH_NONE;\n@@ -32775,6 +32773,7 @@ s_arm_fpu (int ignored ATTRIBUTE_UNUSED)\n     if (streq (opt->name, name))\n       {\n \tselected_fpu = opt->value;\n+\tARM_CLEAR_FEATURE (selected_cpu, selected_cpu, fpu_any);\n #ifndef CPU_DEFAULT\n \tif (no_cpu_selected ())\n \t  ARM_MERGE_FEATURE_SETS (cpu_variant, arm_arch_any, selected_fpu);"
    },
    {
      "sha": "9b5451b042b8c930c710bfd42773f2e5081dade9",
      "filename": "gas/testsuite/gas/arm/fpu-rst.d",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f439988037a589de3798f44e7268301adaec21a9/gas/testsuite/gas/arm/fpu-rst.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f439988037a589de3798f44e7268301adaec21a9/gas/testsuite/gas/arm/fpu-rst.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/fpu-rst.d?ref=f439988037a589de3798f44e7268301adaec21a9",
      "patch": "@@ -0,0 +1,2 @@\n+#name: arm FPU reset test\n+#error_output: fpu-rst.l"
    },
    {
      "sha": "c3cb2433d531cc2d4956ff3f88c636b82c976ced",
      "filename": "gas/testsuite/gas/arm/fpu-rst.l",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f439988037a589de3798f44e7268301adaec21a9/gas/testsuite/gas/arm/fpu-rst.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f439988037a589de3798f44e7268301adaec21a9/gas/testsuite/gas/arm/fpu-rst.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/fpu-rst.l?ref=f439988037a589de3798f44e7268301adaec21a9",
      "patch": "@@ -0,0 +1,4 @@\n+[^:]*: Assembler messages:\n+[^:]*:8: Error: selected processor does not support `vfms.f32 s0,s1,s2' in ARM mode\n+[^:]*:11: Error: selected processor does not support `vfms.f32 s0,s1,s2' in ARM mode\n+[^:]*:17: Error: selected processor does not support `vfms.f32 s0,s1,s2' in ARM mode"
    },
    {
      "sha": "26ae832dd22eb9711e871a6d50b9848c7421f60b",
      "filename": "gas/testsuite/gas/arm/fpu-rst.s",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f439988037a589de3798f44e7268301adaec21a9/gas/testsuite/gas/arm/fpu-rst.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f439988037a589de3798f44e7268301adaec21a9/gas/testsuite/gas/arm/fpu-rst.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/fpu-rst.s?ref=f439988037a589de3798f44e7268301adaec21a9",
      "patch": "@@ -0,0 +1,17 @@\n+.syntax unified\n+.text\n+.arch armv8-a         @ SET BASE\n+.arch_extension fp    @ ADD FP-ARMV8\n+vfms.f32 s0, s1, s2   @ OK\n+\n+.arch armv8-a         @ RESET\n+vfms.f32 s0, s1, s2   @ ERROR\n+\n+.fpu vfpv2            @ SET VFPV2\n+vfms.f32 s0, s1, s2   @ ERROR\n+\n+.arch armv8-a         @ RESET\n+.fpu fp-armv8         @ ADD FP-ARMV8\n+vfms.f32 s0, s1, s2   @ OK\n+.fpu vfpv2            @ RESET to VFPV2\n+vfms.f32 s0, s1, s2   @ ERROR"
    }
  ]
}