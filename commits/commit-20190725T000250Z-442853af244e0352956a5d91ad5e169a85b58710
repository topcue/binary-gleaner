{
  "sha": "442853af244e0352956a5d91ad5e169a85b58710",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDQyODUzYWYyNDRlMDM1Mjk1NmE1ZDkxYWQ1ZTE2OWE4NWI1ODcxMA==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-06-25T20:45:41Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-07-25T00:02:50Z"
    },
    "message": "Allow passing a block to lookup_global_symbol_from_objfile\n\nThis has no behavior change in itself, but allows a future patch\nto add a function to the Python API to look up symbols in the\nstatic block.\n\ngdb/ChangeLog:\n\n2019-07-24  Christian Biesinger  <cbiesinger@google.com>\n\n\t* compile/compile-object-load.c (compile_object_load): Pass GLOBAL_SCOPE.\n\t* solib-spu.c (spu_lookup_lib_symbol): Pass GLOBAL_SCOPE.\n\t* solib-svr4.c (elf_lookup_lib_symbol): Pass GLOBAL_SCOPE.\n\t* symtab.c (lookup_global_symbol_from_objfile): Add a scope parameter.\n\t* symtab.h (lookup_global_symbol_from_objfile): Likewise.",
    "tree": {
      "sha": "96e61428ae50146e38826671e4c25becf679c298",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/96e61428ae50146e38826671e4c25becf679c298"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/442853af244e0352956a5d91ad5e169a85b58710",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/442853af244e0352956a5d91ad5e169a85b58710",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/442853af244e0352956a5d91ad5e169a85b58710",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/442853af244e0352956a5d91ad5e169a85b58710/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "75b493d0f95c6037753e0d250e1ecc6fe8d46c38",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75b493d0f95c6037753e0d250e1ecc6fe8d46c38",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/75b493d0f95c6037753e0d250e1ecc6fe8d46c38"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 23,
    "deletions": 5
  },
  "files": [
    {
      "sha": "e24988858bb1d3681be2d44b7189d8d5c76c1892",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/442853af244e0352956a5d91ad5e169a85b58710/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/442853af244e0352956a5d91ad5e169a85b58710/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=442853af244e0352956a5d91ad5e169a85b58710",
      "patch": "@@ -1,3 +1,12 @@\n+2019-07-22  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* compile/compile-object-load.c (compile_object_load): Pass GLOBAL_SCOPE.\n+\t* solib-spu.c (spu_lookup_lib_symbol): Pass GLOBAL_SCOPE.\n+\t* solib-svr4.c (elf_lookup_lib_symbol): Pass GLOBAL_SCOPE.\n+\t* symtab.c (lookup_global_symbol_from_objfile): Add a scope parameter.\n+\t* symtab.h (lookup_global_symbol_from_objfile): Likewise.\n+\n+\n 2019-07-24  Yoshinori Sato  <ysato@users.sourceforge.jp>\n \n \t* h8300-tdep.c (h8300_register_name_common): New."
    },
    {
      "sha": "3a765a345bf9b8b5160715d124fe34d16ad38ff8",
      "filename": "gdb/compile/compile-object-load.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/442853af244e0352956a5d91ad5e169a85b58710/gdb/compile/compile-object-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/442853af244e0352956a5d91ad5e169a85b58710/gdb/compile/compile-object-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-object-load.c?ref=442853af244e0352956a5d91ad5e169a85b58710",
      "patch": "@@ -639,6 +639,7 @@ compile_object_load (const compile_file_names &file_names,\n   objfile = objfile_holder.get ();\n \n   func_sym = lookup_global_symbol_from_objfile (objfile,\n+\t\t\t\t\t\tGLOBAL_BLOCK,\n \t\t\t\t\t\tGCC_FE_WRAPPER_FUNCTION,\n \t\t\t\t\t\tVAR_DOMAIN).symbol;\n   if (func_sym == NULL)"
    },
    {
      "sha": "5b97b9bcf68885c0cc78f2548eb51217121810bf",
      "filename": "gdb/solib-spu.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/442853af244e0352956a5d91ad5e169a85b58710/gdb/solib-spu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/442853af244e0352956a5d91ad5e169a85b58710/gdb/solib-spu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib-spu.c?ref=442853af244e0352956a5d91ad5e169a85b58710",
      "patch": "@@ -392,7 +392,8 @@ spu_lookup_lib_symbol (struct objfile *objfile,\n \t\t       const domain_enum domain)\n {\n   if (bfd_get_arch (objfile->obfd) == bfd_arch_spu)\n-    return lookup_global_symbol_from_objfile (objfile, name, domain);\n+    return lookup_global_symbol_from_objfile (objfile, GLOBAL_BLOCK, name,\n+\t\t\t\t\t      domain);\n \n   if (svr4_so_ops.lookup_lib_global_symbol != NULL)\n     return svr4_so_ops.lookup_lib_global_symbol (objfile, name, domain);"
    },
    {
      "sha": "c0c505acaa023d14e0ed200e8564bf8a48d6d3ba",
      "filename": "gdb/solib-svr4.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/442853af244e0352956a5d91ad5e169a85b58710/gdb/solib-svr4.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/442853af244e0352956a5d91ad5e169a85b58710/gdb/solib-svr4.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib-svr4.c?ref=442853af244e0352956a5d91ad5e169a85b58710",
      "patch": "@@ -3226,7 +3226,8 @@ elf_lookup_lib_symbol (struct objfile *objfile,\n   if (abfd == NULL || scan_dyntag (DT_SYMBOLIC, abfd, NULL, NULL) != 1)\n     return {};\n \n-  return lookup_global_symbol_from_objfile (objfile, name, domain);\n+  return lookup_global_symbol_from_objfile (objfile, GLOBAL_BLOCK, name,\n+\t\t\t\t\t    domain);\n }\n \n void"
    },
    {
      "sha": "87a0c8e4da6eb420098f5433444e5ee8a3e1f8f2",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/442853af244e0352956a5d91ad5e169a85b58710/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/442853af244e0352956a5d91ad5e169a85b58710/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=442853af244e0352956a5d91ad5e169a85b58710",
      "patch": "@@ -2224,15 +2224,18 @@ lookup_symbol_in_block (const char *name, symbol_name_match_type match_type,\n \n struct block_symbol\n lookup_global_symbol_from_objfile (struct objfile *main_objfile,\n+\t\t\t\t   enum block_enum block_index,\n \t\t\t\t   const char *name,\n \t\t\t\t   const domain_enum domain)\n {\n+  gdb_assert (block_index == GLOBAL_BLOCK || block_index == STATIC_BLOCK);\n+\n   for (objfile *objfile : main_objfile->separate_debug_objfiles ())\n     {\n       struct block_symbol result\n-        = lookup_symbol_in_objfile (objfile, GLOBAL_BLOCK, name, domain);\n+        = lookup_symbol_in_objfile (objfile, block_index, name, domain);\n \n-      if (result.symbol != NULL)\n+      if (result.symbol != nullptr)\n \treturn result;\n     }\n "
    },
    {
      "sha": "9880ecc4c5380ba2ef8b4198bc40bfa9b76fb1f5",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/442853af244e0352956a5d91ad5e169a85b58710/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/442853af244e0352956a5d91ad5e169a85b58710/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=442853af244e0352956a5d91ad5e169a85b58710",
      "patch": "@@ -2045,13 +2045,16 @@ extern bool treg_matches_sym_type_name (const compiled_regex &treg,\n extern const char *main_name ();\n extern enum language main_language (void);\n \n-/* Lookup symbol NAME from DOMAIN in MAIN_OBJFILE's global blocks.\n+/* Lookup symbol NAME from DOMAIN in MAIN_OBJFILE's global or static blocks,\n+   as specified by BLOCK_INDEX.\n    This searches MAIN_OBJFILE as well as any associated separate debug info\n    objfiles of MAIN_OBJFILE.\n+   BLOCK_INDEX can be GLOBAL_BLOCK or STATIC_BLOCK.\n    Upon success fixes up the symbol's section if necessary.  */\n \n extern struct block_symbol\n   lookup_global_symbol_from_objfile (struct objfile *main_objfile,\n+\t\t\t\t     enum block_enum block_index,\n \t\t\t\t     const char *name,\n \t\t\t\t     const domain_enum domain);\n "
    }
  ]
}