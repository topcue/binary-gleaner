{
  "sha": "49c16254b41d56c35ce788eae76a1c1bc22db7ac",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDljMTYyNTRiNDFkNTZjMzVjZTc4OGVhZTc2YTFjMWJjMjJkYjdhYw==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-04-17T12:03:53Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-04-17T12:03:53Z"
    },
    "message": " Commit: Running the linker testsuite with clang\n\n\t* testsuite/config/default.exp: If not already set then create the\n\tCCC_OVERRIDE_OPTIONS environment variable to help when running the\n\ttestsuite with clang.\n\t* testsuite/ld-elf/pr22269-1.c: Add a missing return statement.\n\t* testsuite/ld-elfvers/vers.exp: Add checks to detect if files\n\twere built before attempting to copy them.",
    "tree": {
      "sha": "4460dc0a0a071847242adef31631ac4d7b0bd709",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4460dc0a0a071847242adef31631ac4d7b0bd709"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/49c16254b41d56c35ce788eae76a1c1bc22db7ac",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/49c16254b41d56c35ce788eae76a1c1bc22db7ac",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/49c16254b41d56c35ce788eae76a1c1bc22db7ac",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/49c16254b41d56c35ce788eae76a1c1bc22db7ac/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3557f442a1881271652581b4a66c206d5b348c5d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3557f442a1881271652581b4a66c206d5b348c5d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3557f442a1881271652581b4a66c206d5b348c5d"
    }
  ],
  "stats": {
    "total": 74,
    "additions": 71,
    "deletions": 3
  },
  "files": [
    {
      "sha": "9a32c899c2d7951669df06833fef6b6b3b046d12",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/49c16254b41d56c35ce788eae76a1c1bc22db7ac/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/49c16254b41d56c35ce788eae76a1c1bc22db7ac/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=49c16254b41d56c35ce788eae76a1c1bc22db7ac",
      "patch": "@@ -1,3 +1,12 @@\n+2020-04-17  Nick Clifton  <nickc@redhat.com>\n+\n+\t* testsuite/config/default.exp: If not already set then create the\n+\tCCC_OVERRIDE_OPTIONS environment variable to help when running the\n+\ttestsuite with clang.\n+\t* testsuite/ld-elf/pr22269-1.c: Add a missing return statement.\n+\t* testsuite/ld-elfvers/vers.exp: Add checks to detect if files\n+\twere built before attempting to copy them.\n+\n 2020-04-16  Stephen Casner  <casner@acm.org>\n \n \tPR ld/18963"
    },
    {
      "sha": "5b7ca7a93948c1a76dc90d6b80f2411a6a03c5e3",
      "filename": "ld/testsuite/config/default.exp",
      "status": "modified",
      "additions": 50,
      "deletions": 0,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/49c16254b41d56c35ce788eae76a1c1bc22db7ac/ld/testsuite/config/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/49c16254b41d56c35ce788eae76a1c1bc22db7ac/ld/testsuite/config/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/config/default.exp?ref=49c16254b41d56c35ce788eae76a1c1bc22db7ac",
      "patch": "@@ -95,6 +95,56 @@ if {![info exists CXXFLAGS]} {\n     set CXXFLAGS \"\"\n }\n \n+# This allows us to run the linker testsuite with clang as the compilation\n+# driver instead of gcc.  The syntax of the overrides are as follows, one\n+# per line:\n+#\n+#  '#': Silence information about the changes to the command line arguments.\n+#\n+#  '^': Add FOO as a new argument at the beginning of the command line.\n+#\n+#  '+': Add FOO as a new argument at the end of the command line.\n+#\n+#  's/XXX/YYY/': Substitute the regular expression XXX with YYY in the command\n+#  line.\n+#\n+#  'xOPTION': Removes all instances of the literal argument OPTION.\n+#\n+#  'XOPTION': Removes all instances of the literal argument OPTION,\n+#  and the following argument.\n+#\n+#  'Ox': Removes all flags matching 'O' or 'O[sz0-9]' and adds 'Ox'\n+#  at the end of the command line.\n+#\n+# \\param OS - The stream to write edit information to.\n+# \\param Args - The vector of command line arguments.\n+# \\param Edit - The override command to perform.\n+# \\param SavedStrings - Set to use for storing string representations.\n+\n+global env\n+# Only set up the environment variable if the user has not already provided one.\n+if {! [info exists env(CCC_OVERRIDE_OPTIONS)]} {\n+    set env(CCC_OVERRIDE_OPTIONS) \"#\\\n+  +-Wno-unused-command-line-argument \\\n+  +-Wno-unknown-attributes \\\n+  +-Wno-tautological-compare \\\n+  +-Wno-ignored-optimization-argument \\\n+  +-Wno-deprecated \\\n+  +-fuse-ld=$ld \\\n+  x-Wa,--elf-stt-common=yes \\\n+  x-Wa,-mx86-used-note=no \\\n+  x-Wa,-mx86-used-note=yes \\\n+  x-Wa,-madd-bnd-prefix \\\n+  x-fno-early-inlining \\\n+  x-fno-toplevel-reorder \\\n+  x-flto-partition=none \\\n+  x-feliminate-dwarf2-dups \\\n+  s/-Wa,-mrelax-relocations=yes,-mx86-used-note=yes/-Wa,-mrelax-relocations=yes/ \\\n+  s/-Wa,--compress-debug-sections=zlib/-Wa,-compress-debug-sections=zlib/ \\\n+  s/-Wa,--compress-debug-sections=zlib-gabi/-Wa,-compress-debug-sections=zlib-gabi/ \\\n+\"\n+}\n+\n # The mips64-*-linux-gnu compiler defaults to the N32 ABI after\n # installed, but to the O32 ABI in the build tree, because of some\n # specs-file hacks.  Make sure we use an ABI that is compatible with"
    },
    {
      "sha": "0d3c6ba8ac531d558e2affdf9d83a056baf731ae",
      "filename": "ld/testsuite/ld-elf/pr22269-1.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/49c16254b41d56c35ce788eae76a1c1bc22db7ac/ld/testsuite/ld-elf/pr22269-1.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/49c16254b41d56c35ce788eae76a1c1bc22db7ac/ld/testsuite/ld-elf/pr22269-1.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr22269-1.c?ref=49c16254b41d56c35ce788eae76a1c1bc22db7ac",
      "patch": "@@ -5,4 +5,5 @@ _start (void)\n {\n   if (&foo)\n     return foo;\n+  return 0;\n }"
    },
    {
      "sha": "ed48e1a6971b34e3802a7993e907413e9983e5fd",
      "filename": "ld/testsuite/ld-elfvers/vers.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 3,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/49c16254b41d56c35ce788eae76a1c1bc22db7ac/ld/testsuite/ld-elfvers/vers.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/49c16254b41d56c35ce788eae76a1c1bc22db7ac/ld/testsuite/ld-elfvers/vers.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvers/vers.exp?ref=49c16254b41d56c35ce788eae76a1c1bc22db7ac",
      "patch": "@@ -668,6 +668,10 @@ proc test_strip_vers_lib { test srclib libname verexp versymexp } {\n     global tmpdir\n     global objdump\n \n+    if {! [file exists $tmpdir/$srclib] } then {\n+\tfail \"$test ($tmpdir/$srclib does not exist)\"\n+\treturn\t\n+    }\n     verbose -log \"cp $tmpdir/$srclib $tmpdir/$libname.so\"\n     exec cp $tmpdir/$srclib $tmpdir/$libname.so\n \n@@ -903,8 +907,12 @@ build_vers_lib_pic \"vers18\" vers18.c vers18 vers17.so vers18.map vers18.ver vers\n build_exec \"vers19\" vers19.c vers19 \"-Wl,--no-as-needed,-rpath,.,-rpath-link,.\" vers18.so vers19.ver vers19.dsym \"\"\n \n build_vers_lib_no_pic \"vers20a\" vers20.c vers20a \"\" vers20.map vers20a.ver vers20.dsym \"\"\n-exec cp $tmpdir/vers20a.so $tmpdir/vers20b.so\n-build_vers_lib_no_pic \"vers20\" vers20.c vers20 \"vers20a.so vers20b.so\" vers20.map vers20.ver vers20.dsym \"\"\n+if {! [file exists $tmpdir/vers20a.so] } then {\n+    fail \"Building vers20a.so\"\n+} else {\n+    exec cp $tmpdir/vers20a.so $tmpdir/vers20b.so\n+    build_vers_lib_no_pic \"vers20\" vers20.c vers20 \"vers20a.so vers20b.so\" vers20.map vers20.ver vers20.dsym \"\"\n+}\n \n # Test .symver override.\n build_vers_lib_pic \"vers21\" vers21.c vers21 \"\" vers21.map vers21.ver vers21.dsym vers21.sym\n@@ -984,7 +992,7 @@ if [string match \"yes\" $pic] then {\n     build_vers_lib_no_pic \"vers27c1\" vers27c.c vers27c1 \"vers27b.o vers27a.so\" \"\" vers27c.ver vers27c.dsym \"\"\n     build_vers_lib_no_pic \"vers27c2\" vers27c.c vers27c2 \"vers27a.so vers27b.o\" \"\" vers27c.ver vers27c.dsym \"\"\n     build_vers_lib_pic \"vers27d1\" vers27d1.c vers27d1 \"\" vers27a.map vers27d.ver vers27d.dsym vers27d.sym\n-   build_vers_lib_pic \"vers27d2\" vers27d2.c vers27d2 \"\" \"\" vers27b.ver vers27b.dsym \"\"\n+    build_vers_lib_pic \"vers27d2\" vers27d2.c vers27d2 \"\" \"\" vers27b.ver vers27b.dsym \"\"\n     build_executable \"vers27d3\" vers27d3.c vers27d3 \"vers27b.o vers27d2.so vers27d1.so\" \"\" vers27b.ver vers27b.dsym \"\"\n     build_vers_lib_pic \"vers27d4\" vers27d2.c vers27d4 \"vers27a.so\" \"\" vers27d4.ver vers27d4.dsym \"\"\n     build_executable \"vers27d5\" vers27d3.c vers27d5 \"vers27d4.so vers27b.o vers27a.so\" \"\" vers27b.ver vers27b.dsym \"\""
    }
  ]
}