{
  "sha": "3d87245cc1a4310264d9cb0e4566517d3455a7f5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2Q4NzI0NWNjMWE0MzEwMjY0ZDljYjBlNDU2NjUxN2QzNDU1YTdmNQ==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-10-08T15:38:32Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-10-09T11:51:50Z"
    },
    "message": "Handle void results as unformatted prints\n\nWhen printing void results without any format letter, they are output\nas expected:\n(gdb) p $abcd\n$1 = void\n(gdb) p (void)10\n$2 = void\n\nBut if any format letter (besides s) is used, it always outputs zero:\n(gdb) p/x $abcd\n$3 = 0x0\n(gdb) p/x (void)10\n$4 = 0x0\n\nSo this adds void results to the types handled like unformatted prints.\n\ngdb/ChangeLog:\n\n2020-10-09  Hannes Domani  <ssbssa@yahoo.de>\n\n\tPR exp/26714\n\t* printcmd.c (print_formatted): Handle void results as\n\tunformatted prints.\n\ngdb/testsuite/ChangeLog:\n\n2020-10-09  Hannes Domani  <ssbssa@yahoo.de>\n\n\tPR exp/26714\n\t* gdb.base/printcmds.exp: Add tests for void results.",
    "tree": {
      "sha": "f40422303f174a6b63d393fe41457400e4f82513",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f40422303f174a6b63d393fe41457400e4f82513"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3d87245cc1a4310264d9cb0e4566517d3455a7f5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d87245cc1a4310264d9cb0e4566517d3455a7f5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3d87245cc1a4310264d9cb0e4566517d3455a7f5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d87245cc1a4310264d9cb0e4566517d3455a7f5/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bbb826f5e92e26815357b7f3243f6b3453ec5bc1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bbb826f5e92e26815357b7f3243f6b3453ec5bc1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bbb826f5e92e26815357b7f3243f6b3453ec5bc1"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 17,
    "deletions": 0
  },
  "files": [
    {
      "sha": "5df537c2792fe776223a02ef20bc66f244a822dc",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d87245cc1a4310264d9cb0e4566517d3455a7f5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d87245cc1a4310264d9cb0e4566517d3455a7f5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3d87245cc1a4310264d9cb0e4566517d3455a7f5",
      "patch": "@@ -1,3 +1,9 @@\n+2020-10-09  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\tPR exp/26714\n+\t* printcmd.c (print_formatted): Handle void results as\n+\tunformatted prints.\n+\n 2020-10-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* arch/aarch32.c (aarch32_create_target_description): Release the"
    },
    {
      "sha": "f9b42cfda7140fe7a07ac286c4d7ea88f161a62e",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d87245cc1a4310264d9cb0e4566517d3455a7f5/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d87245cc1a4310264d9cb0e4566517d3455a7f5/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=3d87245cc1a4310264d9cb0e4566517d3455a7f5",
      "patch": "@@ -311,6 +311,7 @@ print_formatted (struct value *val, int size,\n     }\n \n   if (options->format == 0 || options->format == 's'\n+      || type->code () == TYPE_CODE_VOID\n       || type->code () == TYPE_CODE_REF\n       || type->code () == TYPE_CODE_ARRAY\n       || type->code () == TYPE_CODE_STRING"
    },
    {
      "sha": "e1b623b7fec3c29f632a8901b7d50a87ffab80f1",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d87245cc1a4310264d9cb0e4566517d3455a7f5/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d87245cc1a4310264d9cb0e4566517d3455a7f5/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3d87245cc1a4310264d9cb0e4566517d3455a7f5",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-09  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\tPR exp/26714\n+\t* gdb.base/printcmds.exp: Add tests for void results.\n+\n 2020-10-09  Jan Vrany  <jan.vrany@labware.com>\n \n \t* gdb.mi/mi-cmd-param-changed.exp: Check that notification is"
    },
    {
      "sha": "08a096130310b513da0b572070e4472f4468b790",
      "filename": "gdb/testsuite/gdb.base/printcmds.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d87245cc1a4310264d9cb0e4566517d3455a7f5/gdb/testsuite/gdb.base/printcmds.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d87245cc1a4310264d9cb0e4566517d3455a7f5/gdb/testsuite/gdb.base/printcmds.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/printcmds.exp?ref=3d87245cc1a4310264d9cb0e4566517d3455a7f5",
      "patch": "@@ -1005,6 +1005,11 @@ gdb_test \"print sizeof (\\$cvar)\" \" = 4\"\n # Similarly, printf of a string convenience var should work without a target.\n test_printf_convenience_var \"no target\"\n \n+# Test void results.\n+gdb_test \"p (void)10\" \" = void\"\n+gdb_test \"p/x (void)10\" \" = void\"\n+gdb_test \"p \\$abcd\" \" = void\"\n+\n # GDB used to complete the explicit location options even when\n # printing expressions.\n gdb_test_no_output \"complete p -function\""
    }
  ]
}