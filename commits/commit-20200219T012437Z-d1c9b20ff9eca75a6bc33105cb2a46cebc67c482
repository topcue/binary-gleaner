{
  "sha": "d1c9b20ff9eca75a6bc33105cb2a46cebc67c482",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDFjOWIyMGZmOWVjYTc1YTZiYzMzMTA1Y2IyYTQ2Y2ViYzY3YzQ4Mg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-02-19T01:24:37Z"
    },
    "committer": {
      "name": "Maciej W. Rozycki",
      "email": "macro@wdc.com",
      "date": "2020-02-19T01:24:37Z"
    },
    "message": "gdb/riscv: Update API for looking up target descriptions\n\nIn preparation for adding the RISC-V gdbserver, this commit\nrestructures the API for looking up target descriptions.\n\nThe current API is riscv_create_target_description, which creates a\ntarget description from a riscv_gdbarch_features, but also caches the\ncreated target descriptions so that for a given features object we\nalways get back the same target description object.  This is important\nfor GDB due to the way gdbarch objects are reused.\n\nAs the same target description is always returned to GDB, and can be\nreturned multiple times, it is returned as a const, however, the\ncurrent cache actually stores a non-const target description.  This is\nimproved in this patch so that the cache holds a const target\ndescription.\n\nFor gdbsever, this caching of the target descriptions is not needed,\nthe gdbserver looks up one target description to describe the target\nit is actually running on and that is it.  Further the gdbserver\nactually needs to modify the target description that is looked up, so\nfor the gdbsever, returning a const target description is not\nacceptable.\n\nThis commit aims to address this by creating two parallel target\ndescription APIs, on is the old riscv_create_target_description,\nhowever, this no longer performs any caching, and just creates a new\ntarget description, and returns it as non-const.\n\nThe second API is riscv_lookup_target_description, this one performs\nthe caching, and calls riscv_create_target_description to create a\ntarget description when needed.\n\nIn order to make sure the correct API is used in the correct place I\nhave guarded the code using the GDBSERVER define.  For GDB the\nriscv_create_target_description is static, and not generally usable\nthroughout GDB, only the lookup API is global.  In gdbserver, the\nlookup functions, and the cache are not defined or created at all,\nonly the riscv_create_target_description API is available.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* arch/riscv.c (struct riscv_gdbarch_features_hasher): Only define\n\tif GDBSERVER is not defined.\n\t(riscv_tdesc_cache): Likewise, also store const target_desc.\n\t(STATIC_IN_GDB): Define.\n\t(riscv_create_target_description): Update declaration with\n\tSTATIC_IN_GDB.\n\t(riscv_lookup_target_description): New function, only define if\n\tGDBSERVER is not defined.\n\t* arch/riscv.h (riscv_create_target_description): Declare only\n\twhen GDBSERVER is defined.\n\t(riscv_lookup_target_description): New declaration when GDBSERVER\n\tis not defined.\n\t* nat/riscv-linux-tdesc.c (riscv_linux_read_description): Rename to...\n\t(riscv_linux_read_features): ...this, and return\n\triscv_gdbarch_features instead of target_desc.\n\t* nat/riscv-linux-tdesc.h: Include 'arch/riscv.h'.\n\t(riscv_linux_read_description): Rename to...\n\t(riscv_linux_read_features): ...this.\n\t* riscv-linux-nat.c (riscv_linux_nat_target::read_description):\n\tUpdate to use riscv_gdbarch_features and\n\triscv_lookup_target_description.\n\t* riscv-tdep.c (riscv_find_default_target_description): Use\n\triscv_lookup_target_description instead of\n\triscv_create_target_description.",
    "tree": {
      "sha": "6ba8a5f75781f4d3bfc4a62366dbbd54585dfbb7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6ba8a5f75781f4d3bfc4a62366dbbd54585dfbb7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": null,
  "parents": [
    {
      "sha": "66708c54e6b49c7fae7f7652f783cac5687fa507",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66708c54e6b49c7fae7f7652f783cac5687fa507",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/66708c54e6b49c7fae7f7652f783cac5687fa507"
    }
  ],
  "stats": {
    "total": 143,
    "additions": 103,
    "deletions": 40
  },
  "files": [
    {
      "sha": "144fd4f256af52ee8fc0dbb60f6ace3601738023",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d1c9b20ff9eca75a6bc33105cb2a46cebc67c482",
      "patch": "@@ -1,3 +1,30 @@\n+2020-02-19  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* arch/riscv.c (struct riscv_gdbarch_features_hasher): Only define\n+\tif GDBSERVER is not defined.\n+\t(riscv_tdesc_cache): Likewise, also store const target_desc.\n+\t(STATIC_IN_GDB): Define.\n+\t(riscv_create_target_description): Update declaration with\n+\tSTATIC_IN_GDB.\n+\t(riscv_lookup_target_description): New function, only define if\n+\tGDBSERVER is not defined.\n+\t* arch/riscv.h (riscv_create_target_description): Declare only\n+\twhen GDBSERVER is defined.\n+\t(riscv_lookup_target_description): New declaration when GDBSERVER\n+\tis not defined.\n+\t* nat/riscv-linux-tdesc.c (riscv_linux_read_description): Rename to...\n+\t(riscv_linux_read_features): ...this, and return\n+\triscv_gdbarch_features instead of target_desc.\n+\t* nat/riscv-linux-tdesc.h: Include 'arch/riscv.h'.\n+\t(riscv_linux_read_description): Rename to...\n+\t(riscv_linux_read_features): ...this.\n+\t* riscv-linux-nat.c (riscv_linux_nat_target::read_description):\n+\tUpdate to use riscv_gdbarch_features and\n+\triscv_lookup_target_description.\n+\t* riscv-tdep.c (riscv_find_default_target_description): Use\n+\triscv_lookup_target_description instead of\n+\triscv_create_target_description.\n+\n 2020-02-18  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* valprint.c (generic_val_print_enum_1): When printing a flag"
    },
    {
      "sha": "a02c18b4c916907f7205ee693c4838e4f21776c6",
      "filename": "gdb/arch/riscv.c",
      "status": "modified",
      "additions": 42,
      "deletions": 27,
      "changes": 69,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/arch/riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/arch/riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch/riscv.c?ref=d1c9b20ff9eca75a6bc33105cb2a46cebc67c482",
      "patch": "@@ -25,37 +25,17 @@\n #include \"../features/riscv/32bit-fpu.c\"\n #include \"../features/riscv/64bit-fpu.c\"\n \n-/* Wrapper used by std::unordered_map to generate hash for feature set.  */\n-struct riscv_gdbarch_features_hasher\n-{\n-  std::size_t\n-  operator() (const riscv_gdbarch_features &features) const noexcept\n-  {\n-    return features.hash ();\n-  }\n-};\n-\n-/* Cache of previously seen target descriptions, indexed by the feature set\n-   that created them.  */\n-static std::unordered_map<riscv_gdbarch_features,\n-                          target_desc *,\n-                          riscv_gdbarch_features_hasher> riscv_tdesc_cache;\n+#ifndef GDBSERVER\n+#define STATIC_IN_GDB static\n+#else\n+#define STATIC_IN_GDB\n+#endif\n \n /* See arch/riscv.h.  */\n \n-const target_desc *\n-riscv_create_target_description (struct riscv_gdbarch_features features)\n+STATIC_IN_GDB target_desc *\n+riscv_create_target_description (const struct riscv_gdbarch_features features)\n {\n-  /* Have we seen this feature set before?  If we have return the same\n-     target description.  GDB expects that if two target descriptions are\n-     the same (in content terms) then they will actually be the same\n-     instance.  This is important when trying to lookup gdbarch objects as\n-     GDBARCH_LIST_LOOKUP_BY_INFO performs a pointer comparison on target\n-     descriptions to find candidate gdbarch objects.  */\n-  const auto it = riscv_tdesc_cache.find (features);\n-  if (it != riscv_tdesc_cache.end ())\n-    return it->second;\n-\n   /* Now we should create a new target description.  */\n   target_desc *tdesc = allocate_target_description ();\n \n@@ -93,8 +73,43 @@ riscv_create_target_description (struct riscv_gdbarch_features features)\n   else if (features.flen == 8)\n     regnum = create_feature_riscv_64bit_fpu (tdesc, regnum);\n \n+  return tdesc;\n+}\n+\n+#ifndef GDBSERVER\n+\n+/* Wrapper used by std::unordered_map to generate hash for feature set.  */\n+struct riscv_gdbarch_features_hasher\n+{\n+  std::size_t\n+  operator() (const riscv_gdbarch_features &features) const noexcept\n+  {\n+    return features.hash ();\n+  }\n+};\n+\n+/* Cache of previously seen target descriptions, indexed by the feature set\n+   that created them.  */\n+static std::unordered_map<riscv_gdbarch_features,\n+\t\t\t  const target_desc *,\n+\t\t\t  riscv_gdbarch_features_hasher> riscv_tdesc_cache;\n+\n+/* See arch/riscv.h.  */\n+\n+const target_desc *\n+riscv_lookup_target_description (const struct riscv_gdbarch_features features)\n+{\n+  /* Lookup in the cache.  */\n+  const auto it = riscv_tdesc_cache.find (features);\n+  if (it != riscv_tdesc_cache.end ())\n+    return it->second;\n+\n+  target_desc *tdesc = riscv_create_target_description (features);\n+\n   /* Add to the cache.  */\n   riscv_tdesc_cache.emplace (features, tdesc);\n \n   return tdesc;\n }\n+\n+#endif /* !GDBSERVER */"
    },
    {
      "sha": "d40862cbd8e2a18e7aa4f684b3c9769c83b3ed9d",
      "filename": "gdb/arch/riscv.h",
      "status": "modified",
      "additions": 22,
      "deletions": 4,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/arch/riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/arch/riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch/riscv.h?ref=d1c9b20ff9eca75a6bc33105cb2a46cebc67c482",
      "patch": "@@ -66,10 +66,28 @@ struct riscv_gdbarch_features\n   }\n };\n \n-/* Create and return a target description that is compatible with\n-   FEATURES.  */\n+#ifdef GDBSERVER\n+\n+/* Create and return a target description that is compatible with FEATURES.\n+   This is only used directly from the gdbserver where the created target\n+   description is modified after it is return.  */\n+\n+target_desc *riscv_create_target_description\n+\t(const struct riscv_gdbarch_features features);\n+\n+#else\n+\n+/* Lookup an already existing target description matching FEATURES, or\n+   create a new target description if this is the first time we have seen\n+   FEATURES.  For the same FEATURES the same target_desc is always\n+   returned.  This is important when trying to lookup gdbarch objects as\n+   GDBARCH_LIST_LOOKUP_BY_INFO performs a pointer comparison on target\n+   descriptions to find candidate gdbarch objects.  */\n+\n+const target_desc *riscv_lookup_target_description\n+\t(const struct riscv_gdbarch_features features);\n+\n+#endif /* GDBSERVER */\n \n-const target_desc *riscv_create_target_description\n-\t(struct riscv_gdbarch_features features);\n \n #endif /* ARCH_RISCV_H */"
    },
    {
      "sha": "3220725b87590bf7a3488158fb71b8419631a6c6",
      "filename": "gdb/nat/riscv-linux-tdesc.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/nat/riscv-linux-tdesc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/nat/riscv-linux-tdesc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/riscv-linux-tdesc.c?ref=d1c9b20ff9eca75a6bc33105cb2a46cebc67c482",
      "patch": "@@ -31,10 +31,10 @@\n # define NFPREG 33\n #endif\n \n-/* Determine XLEN and FLEN and return a corresponding target description.  */\n+/* See nat/riscv-linux-tdesc.h.  */\n \n-const struct target_desc *\n-riscv_linux_read_description (int tid)\n+struct riscv_gdbarch_features\n+riscv_linux_read_features (int tid)\n {\n   struct riscv_gdbarch_features features;\n   elf_fpregset_t regs;\n@@ -79,5 +79,5 @@ riscv_linux_read_description (int tid)\n       break;\n     }\n \n-  return riscv_create_target_description (features);\n+  return features;\n }"
    },
    {
      "sha": "e9ee64aa5d27fe42cf0423a0bc4016b855efa61c",
      "filename": "gdb/nat/riscv-linux-tdesc.h",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/nat/riscv-linux-tdesc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/nat/riscv-linux-tdesc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/riscv-linux-tdesc.h?ref=d1c9b20ff9eca75a6bc33105cb2a46cebc67c482",
      "patch": "@@ -19,9 +19,10 @@\n #ifndef NAT_RISCV_LINUX_TDESC_H\n #define NAT_RISCV_LINUX_TDESC_H\n \n-struct target_desc;\n+#include \"arch/riscv.h\"\n \n-/* Return a target description for the LWP identified by TID.  */\n-const struct target_desc *riscv_linux_read_description (int tid);\n+/* Determine XLEN and FLEN for the LWP identified by TID, and return a\n+   corresponding features object.  */\n+struct riscv_gdbarch_features riscv_linux_read_features (int tid);\n \n #endif /* NAT_RISCV_LINUX_TDESC_H */"
    },
    {
      "sha": "4f78dfdc6a20f447863b1821a598c0434afaa5e7",
      "filename": "gdb/riscv-linux-nat.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/riscv-linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/riscv-linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-linux-nat.c?ref=d1c9b20ff9eca75a6bc33105cb2a46cebc67c482",
      "patch": "@@ -201,7 +201,9 @@ fill_fpregset (const struct regcache *regcache, prfpregset_t *fpregs,\n const struct target_desc *\n riscv_linux_nat_target::read_description ()\n {\n-  return riscv_linux_read_description (inferior_ptid.lwp ());\n+  const struct riscv_gdbarch_features features\n+    = riscv_linux_read_features (inferior_ptid.lwp ());\n+  return riscv_lookup_target_description (features);\n }\n \n /* Fetch REGNUM (or all registers if REGNUM == -1) from the target"
    },
    {
      "sha": "0515729f4e92046f8755a9d07d770719677be76e",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1c9b20ff9eca75a6bc33105cb2a46cebc67c482/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=d1c9b20ff9eca75a6bc33105cb2a46cebc67c482",
      "patch": "@@ -2973,7 +2973,7 @@ riscv_find_default_target_description (const struct gdbarch_info info)\n     features.xlen = 8;\n \n   /* Now build a target description based on the feature set.  */\n-  return riscv_create_target_description (features);\n+  return riscv_lookup_target_description (features);\n }\n \n /* All of the registers in REG_SET are checked for in FEATURE, TDESC_DATA"
    }
  ]
}