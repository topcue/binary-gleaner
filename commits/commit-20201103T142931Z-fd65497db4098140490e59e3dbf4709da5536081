{
  "sha": "fd65497db4098140490e59e3dbf4709da5536081",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmQ2NTQ5N2RiNDA5ODE0MDQ5MGU1OWUzZGJmNDcwOWRhNTUzNjA4MQ==",
  "commit": {
    "author": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2020-11-03T14:21:32Z"
    },
    "committer": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2020-11-03T14:29:31Z"
    },
    "message": "[PATCH][GAS] aarch64: Add atomic 64-byte load/store instructions for Armv8.7\n\nArmv8.7 architecture introduces the \"accelerator extension\", aka\nload/store of 64 bytes. New atomic load/store instructions are: LD64B,\nST64B, ST64BV and ST64BV0.\n\nThis patch adds:\n+ New feature +ls64 to -march command line.\n+ New atomic load/store instructions associated with above feature.\n\nFor more details regarding atomic 64-byte load/store instruction for\nArmv8.7 please refer to Arm A64 Instruction set documentation for\nArmv8-A architecture profile, see document page 157 for load\ninstruction, and pages 414-418 for store instructions of [0].\n\n    [0]: https://developer.arm.com/docs/ddi0596/i",
    "tree": {
      "sha": "2f730ad7d7e19dee1420de5a7641dfd59cb717a4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2f730ad7d7e19dee1420de5a7641dfd59cb717a4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fd65497db4098140490e59e3dbf4709da5536081",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd65497db4098140490e59e3dbf4709da5536081",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fd65497db4098140490e59e3dbf4709da5536081",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd65497db4098140490e59e3dbf4709da5536081/comments",
  "author": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b0d0d02bde06c61969160c0c5a3d7f48daa8b24a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0d0d02bde06c61969160c0c5a3d7f48daa8b24a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b0d0d02bde06c61969160c0c5a3d7f48daa8b24a"
    }
  ],
  "stats": {
    "total": 4515,
    "additions": 2333,
    "deletions": 2182
  },
  "files": [
    {
      "sha": "bb6660fe8ed821200480f2d170ee9465ac3ea793",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -1,3 +1,12 @@\n+2020-11-03  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* NEWS: Update docs.\n+\t* config/tc-aarch64.c: Add +ls64 feature to -march flags set.\n+\t* testsuite/gas/aarch64/ls64-invalid.d: New test.\n+\t* testsuite/gas/aarch64/ls64-invalid.l: New test.\n+\t* testsuite/gas/aarch64/ls64-invalid.s: New test.\n+\t* testsuite/gas/aarch64/ls64.s: New test.\n+\n 2020-11-03  Christian Eggers  <ceggers@gmx.de>\n \n \t* config/obj-elf (elf_frob_symbol): Fix symbol value calculation"
    },
    {
      "sha": "88415076c18de0d9148f19823fe98a66c06dd8a0",
      "filename": "gas/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/gas/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/gas/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/NEWS?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -27,6 +27,9 @@\n * Add support for +csre feature for -march. Add CSR PDEC instruction for CSRE\n   feature.\n \n+* Add support for +ls64 feature for -march in Armv8.7 AArch64. Add atomic\n+  64-byte load/store instructions for this feature.\n+\n * Add support for Intel TDX instructions.\n \n * Add support for Intel Key Locker instructions."
    },
    {
      "sha": "73600e20393320c12b77c497d1d0814ddd19e13d",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -9206,6 +9206,8 @@ static const struct aarch64_option_cpu_value_table aarch64_features[] = {\n \t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE, 0)},\n   {\"csre\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_CSRE, 0),\n \t\t\tAARCH64_ARCH_NONE},\n+  {\"ls64\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_LS64, 0),\n+\t\t\tAARCH64_ARCH_NONE},\n   {NULL,\t\tAARCH64_ARCH_NONE, AARCH64_ARCH_NONE},\n };\n "
    },
    {
      "sha": "69e739db54444e920403fc3be19ccfcbf668de22",
      "filename": "gas/testsuite/gas/aarch64/ls64-invalid.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/gas/testsuite/gas/aarch64/ls64-invalid.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/gas/testsuite/gas/aarch64/ls64-invalid.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/ls64-invalid.d?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -0,0 +1,3 @@\n+#name: Atomic 64-byte load/store instruction\n+#source: ls64-invalid.s\n+#error_output: ls64-invalid.l"
    },
    {
      "sha": "64b6e58bd6426c08d1d6897edbb5de97a0530f83",
      "filename": "gas/testsuite/gas/aarch64/ls64-invalid.l",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/gas/testsuite/gas/aarch64/ls64-invalid.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/gas/testsuite/gas/aarch64/ls64-invalid.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/ls64-invalid.l?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -0,0 +1,5 @@\n+.*: Assembler messages:\n+.*: Error: selected processor does not support `ld64b x0,\\[x1\\]'\n+.*: Error: selected processor does not support `st64b x0,\\[x1\\]'\n+.*: Error: selected processor does not support `st64bv x0,x1,\\[x2\\]'\n+.*: Error: selected processor does not support `st64bv0 x0,x1,\\[x2\\]'"
    },
    {
      "sha": "8c89aafc0a81ed88ccc1ccce77487473036b9b48",
      "filename": "gas/testsuite/gas/aarch64/ls64-invalid.s",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/gas/testsuite/gas/aarch64/ls64-invalid.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/gas/testsuite/gas/aarch64/ls64-invalid.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/ls64-invalid.s?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -0,0 +1,14 @@\n+/* Atomic 64-byte load/store instructions require Armv8.7-a extension.  */\n+.arch armv8.6-a\n+\n+/* Single-copy Atomic 64-byte Load.  */\n+\tld64b x0, [x1]\n+\n+/* Single-copy Atomic 64-byte Store without Return.  */\n+\tst64b x0, [x1]\n+\n+/* Single-copy Atomic 64-byte Store with Return.  */\n+\tst64bv x0, x1, [x2]\n+\n+/* Single-copy Atomic 64-byte EL0 Store with Return.  */\n+\tst64bv0 x0, x1, [x2]"
    },
    {
      "sha": "efbd0bf23a39e9cc88d3cde5021d40b03d9d5cea",
      "filename": "gas/testsuite/gas/aarch64/ls64.s",
      "status": "added",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/gas/testsuite/gas/aarch64/ls64.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/gas/testsuite/gas/aarch64/ls64.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/ls64.s?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -0,0 +1,40 @@\n+/* Atomic 64-byte load/store instructions.  */\n+.arch armv8.7-a+ls64\n+\n+/* Single-copy Atomic 64-byte Load.  */\n+\tld64b x0, [x1]\n+\tld64b x1, [x2]\n+\tld64b x2, [x4]\n+\tld64b x4, [x8]\n+\tld64b x8, [x16]\n+\tld64b x16, [x1]\n+\tld64b x16, [sp]\n+\n+/* Single-copy Atomic 64-byte Store without Return.  */\n+\tst64b x0, [x1]\n+\tst64b x1, [x2]\n+\tst64b x2, [x4]\n+\tst64b x4, [x8]\n+\tst64b x8, [x16]\n+\tst64b x16, [x1]\n+\tst64b x16, [sp]\n+\n+/* Single-copy Atomic 64-byte Store with Return.  */\n+\tst64bv x0, x1, [x2]\n+\tst64bv x1, x2, [x4]\n+\tst64bv x2, x4, [x8]\n+\tst64bv x4, x8, [x16]\n+\tst64bv x8, x16, [x30]\n+\tst64bv x16, x30, [x0]\n+\tst64bv x30, x1, [x2]\n+\tst64bv x30, x1, [sp]\n+\n+/* Single-copy Atomic 64-byte EL0 Store with Return.  */\n+\tst64bv0 x0, x1, [x2]\n+\tst64bv0 x1, x2, [x4]\n+\tst64bv0 x2, x4, [x8]\n+\tst64bv0 x4, x8, [x16]\n+\tst64bv0 x8, x16, [x30]\n+\tst64bv0 x16, x30, [x0]\n+\tst64bv0 x30, x1, [x2]\n+\tst64bv0 x30, x1, [sp]"
    },
    {
      "sha": "b403c5cce20461a5455d6d6426c419d1ea822747",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-03  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_LS64): New +ls64 feature flag.\n+\t(AARCH64_ARCH_V8_7): Add LS64 as part of Armv8.7-a.\n+\n 2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR gas/26703"
    },
    {
      "sha": "07eb911f5dfa0d923c85ccda3c25bc2e0baeb302",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -52,6 +52,7 @@ typedef uint32_t aarch64_insn;\n #define AARCH64_FEATURE_V8_R\t     (1ULL << 12) /* Armv8-R processors.  */\n #define AARCH64_FEATURE_V8_7\t     (1ULL << 13) /* Armv8.7 processors.  */\n #define AARCH64_FEATURE_CSRE\t     (1ULL << 14) /* CSRE feature.  */\n+#define AARCH64_FEATURE_LS64\t     (1ULL << 15) /* Atomic 64-byte load/store.  */\n #define AARCH64_FEATURE_FP\t     (1ULL << 17) /* FP instructions.  */\n #define AARCH64_FEATURE_SIMD\t     (1ULL << 18) /* SIMD instructions.  */\n #define AARCH64_FEATURE_CRC\t     (1ULL << 19) /* CRC instructions.  */\n@@ -131,7 +132,8 @@ typedef uint32_t aarch64_insn;\n \t\t\t\t\t\t | AARCH64_FEATURE_BFLOAT16 \\\n \t\t\t\t\t\t | AARCH64_FEATURE_I8MM)\n #define AARCH64_ARCH_V8_7\tAARCH64_FEATURE (AARCH64_ARCH_V8_6,\t\\\n-\t\t\t\t\t\t AARCH64_FEATURE_V8_7)\n+\t\t\t\t\t\t AARCH64_FEATURE_V8_7\t\\\n+\t\t\t\t\t\t | AARCH64_FEATURE_LS64)\n #define AARCH64_ARCH_V8_R\t(AARCH64_FEATURE (AARCH64_ARCH_V8_4,\t\\\n \t\t\t\t\t\t AARCH64_FEATURE_V8_R)\t\\\n \t\t\t      & ~(AARCH64_FEATURE_V8_A | AARCH64_FEATURE_LOR))"
    },
    {
      "sha": "01a23035bc26fd11186f57e3bc66fca1e96c1b91",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -1,3 +1,13 @@\n+2020-11-03  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* aarch64-tbl.h (QL_X2NIL): New qualifier for 64-byte stores.\n+\t(LS64): Handler with +ls64 feature flags.\n+\t(_LS64_INSN): New instruction group macro.\n+\t(struct aarch64_opcode): Add LS64 instructions.\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\n 2020-10-30  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n \n \t* aarch65-tbl.h (struct aarch64_opcode): New instruction WFIT."
    },
    {
      "sha": "407f893d0c04802e29aaad7d351dbca7cfe28d81",
      "filename": "opcodes/aarch64-asm-2.c",
      "status": "modified",
      "additions": 343,
      "deletions": 343,
      "changes": 686,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/opcodes/aarch64-asm-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/opcodes/aarch64-asm-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-asm-2.c?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -201,401 +201,401 @@ aarch64_find_real_opcode (const aarch64_opcode *opcode)\n     case 758:\t/* extr */\n       value = 758;\t/* --> extr.  */\n       break;\n-    case 992:\t/* bic */\n-    case 991:\t/* and */\n-      value = 991;\t/* --> and.  */\n-      break;\n-    case 994:\t/* mov */\n-    case 993:\t/* orr */\n-      value = 993;\t/* --> orr.  */\n-      break;\n-    case 997:\t/* tst */\n-    case 996:\t/* ands */\n-      value = 996;\t/* --> ands.  */\n-      break;\n-    case 1002:\t/* uxtw */\n-    case 1001:\t/* mov */\n-    case 1000:\t/* orr */\n-      value = 1000;\t/* --> orr.  */\n+    case 996:\t/* bic */\n+    case 995:\t/* and */\n+      value = 995;\t/* --> and.  */\n+      break;\n+    case 998:\t/* mov */\n+    case 997:\t/* orr */\n+      value = 997;\t/* --> orr.  */\n+      break;\n+    case 1001:\t/* tst */\n+    case 1000:\t/* ands */\n+      value = 1000;\t/* --> ands.  */\n+      break;\n+    case 1006:\t/* uxtw */\n+    case 1005:\t/* mov */\n+    case 1004:\t/* orr */\n+      value = 1004;\t/* --> orr.  */\n       break;\n-    case 1004:\t/* mvn */\n-    case 1003:\t/* orn */\n-      value = 1003;\t/* --> orn.  */\n+    case 1008:\t/* mvn */\n+    case 1007:\t/* orn */\n+      value = 1007;\t/* --> orn.  */\n       break;\n-    case 1008:\t/* tst */\n-    case 1007:\t/* ands */\n-      value = 1007;\t/* --> ands.  */\n+    case 1012:\t/* tst */\n+    case 1011:\t/* ands */\n+      value = 1011;\t/* --> ands.  */\n       break;\n-    case 1134:\t/* staddb */\n-    case 1038:\t/* ldaddb */\n-      value = 1038;\t/* --> ldaddb.  */\n+    case 1138:\t/* staddb */\n+    case 1042:\t/* ldaddb */\n+      value = 1042;\t/* --> ldaddb.  */\n       break;\n-    case 1135:\t/* staddh */\n-    case 1039:\t/* ldaddh */\n-      value = 1039;\t/* --> ldaddh.  */\n+    case 1139:\t/* staddh */\n+    case 1043:\t/* ldaddh */\n+      value = 1043;\t/* --> ldaddh.  */\n       break;\n-    case 1136:\t/* stadd */\n-    case 1040:\t/* ldadd */\n-      value = 1040;\t/* --> ldadd.  */\n+    case 1140:\t/* stadd */\n+    case 1044:\t/* ldadd */\n+      value = 1044;\t/* --> ldadd.  */\n       break;\n-    case 1137:\t/* staddlb */\n-    case 1042:\t/* ldaddlb */\n-      value = 1042;\t/* --> ldaddlb.  */\n+    case 1141:\t/* staddlb */\n+    case 1046:\t/* ldaddlb */\n+      value = 1046;\t/* --> ldaddlb.  */\n       break;\n-    case 1138:\t/* staddlh */\n-    case 1045:\t/* ldaddlh */\n-      value = 1045;\t/* --> ldaddlh.  */\n+    case 1142:\t/* staddlh */\n+    case 1049:\t/* ldaddlh */\n+      value = 1049;\t/* --> ldaddlh.  */\n       break;\n-    case 1139:\t/* staddl */\n-    case 1048:\t/* ldaddl */\n-      value = 1048;\t/* --> ldaddl.  */\n+    case 1143:\t/* staddl */\n+    case 1052:\t/* ldaddl */\n+      value = 1052;\t/* --> ldaddl.  */\n       break;\n-    case 1140:\t/* stclrb */\n-    case 1050:\t/* ldclrb */\n-      value = 1050;\t/* --> ldclrb.  */\n+    case 1144:\t/* stclrb */\n+    case 1054:\t/* ldclrb */\n+      value = 1054;\t/* --> ldclrb.  */\n       break;\n-    case 1141:\t/* stclrh */\n-    case 1051:\t/* ldclrh */\n-      value = 1051;\t/* --> ldclrh.  */\n+    case 1145:\t/* stclrh */\n+    case 1055:\t/* ldclrh */\n+      value = 1055;\t/* --> ldclrh.  */\n       break;\n-    case 1142:\t/* stclr */\n-    case 1052:\t/* ldclr */\n-      value = 1052;\t/* --> ldclr.  */\n+    case 1146:\t/* stclr */\n+    case 1056:\t/* ldclr */\n+      value = 1056;\t/* --> ldclr.  */\n       break;\n-    case 1143:\t/* stclrlb */\n-    case 1054:\t/* ldclrlb */\n-      value = 1054;\t/* --> ldclrlb.  */\n+    case 1147:\t/* stclrlb */\n+    case 1058:\t/* ldclrlb */\n+      value = 1058;\t/* --> ldclrlb.  */\n       break;\n-    case 1144:\t/* stclrlh */\n-    case 1057:\t/* ldclrlh */\n-      value = 1057;\t/* --> ldclrlh.  */\n+    case 1148:\t/* stclrlh */\n+    case 1061:\t/* ldclrlh */\n+      value = 1061;\t/* --> ldclrlh.  */\n       break;\n-    case 1145:\t/* stclrl */\n-    case 1060:\t/* ldclrl */\n-      value = 1060;\t/* --> ldclrl.  */\n+    case 1149:\t/* stclrl */\n+    case 1064:\t/* ldclrl */\n+      value = 1064;\t/* --> ldclrl.  */\n       break;\n-    case 1146:\t/* steorb */\n-    case 1062:\t/* ldeorb */\n-      value = 1062;\t/* --> ldeorb.  */\n+    case 1150:\t/* steorb */\n+    case 1066:\t/* ldeorb */\n+      value = 1066;\t/* --> ldeorb.  */\n       break;\n-    case 1147:\t/* steorh */\n-    case 1063:\t/* ldeorh */\n-      value = 1063;\t/* --> ldeorh.  */\n+    case 1151:\t/* steorh */\n+    case 1067:\t/* ldeorh */\n+      value = 1067;\t/* --> ldeorh.  */\n       break;\n-    case 1148:\t/* steor */\n-    case 1064:\t/* ldeor */\n-      value = 1064;\t/* --> ldeor.  */\n+    case 1152:\t/* steor */\n+    case 1068:\t/* ldeor */\n+      value = 1068;\t/* --> ldeor.  */\n       break;\n-    case 1149:\t/* steorlb */\n-    case 1066:\t/* ldeorlb */\n-      value = 1066;\t/* --> ldeorlb.  */\n+    case 1153:\t/* steorlb */\n+    case 1070:\t/* ldeorlb */\n+      value = 1070;\t/* --> ldeorlb.  */\n       break;\n-    case 1150:\t/* steorlh */\n-    case 1069:\t/* ldeorlh */\n-      value = 1069;\t/* --> ldeorlh.  */\n+    case 1154:\t/* steorlh */\n+    case 1073:\t/* ldeorlh */\n+      value = 1073;\t/* --> ldeorlh.  */\n       break;\n-    case 1151:\t/* steorl */\n-    case 1072:\t/* ldeorl */\n-      value = 1072;\t/* --> ldeorl.  */\n+    case 1155:\t/* steorl */\n+    case 1076:\t/* ldeorl */\n+      value = 1076;\t/* --> ldeorl.  */\n       break;\n-    case 1152:\t/* stsetb */\n-    case 1074:\t/* ldsetb */\n-      value = 1074;\t/* --> ldsetb.  */\n+    case 1156:\t/* stsetb */\n+    case 1078:\t/* ldsetb */\n+      value = 1078;\t/* --> ldsetb.  */\n       break;\n-    case 1153:\t/* stseth */\n-    case 1075:\t/* ldseth */\n-      value = 1075;\t/* --> ldseth.  */\n+    case 1157:\t/* stseth */\n+    case 1079:\t/* ldseth */\n+      value = 1079;\t/* --> ldseth.  */\n       break;\n-    case 1154:\t/* stset */\n-    case 1076:\t/* ldset */\n-      value = 1076;\t/* --> ldset.  */\n+    case 1158:\t/* stset */\n+    case 1080:\t/* ldset */\n+      value = 1080;\t/* --> ldset.  */\n       break;\n-    case 1155:\t/* stsetlb */\n-    case 1078:\t/* ldsetlb */\n-      value = 1078;\t/* --> ldsetlb.  */\n+    case 1159:\t/* stsetlb */\n+    case 1082:\t/* ldsetlb */\n+      value = 1082;\t/* --> ldsetlb.  */\n       break;\n-    case 1156:\t/* stsetlh */\n-    case 1081:\t/* ldsetlh */\n-      value = 1081;\t/* --> ldsetlh.  */\n+    case 1160:\t/* stsetlh */\n+    case 1085:\t/* ldsetlh */\n+      value = 1085;\t/* --> ldsetlh.  */\n       break;\n-    case 1157:\t/* stsetl */\n-    case 1084:\t/* ldsetl */\n-      value = 1084;\t/* --> ldsetl.  */\n+    case 1161:\t/* stsetl */\n+    case 1088:\t/* ldsetl */\n+      value = 1088;\t/* --> ldsetl.  */\n       break;\n-    case 1158:\t/* stsmaxb */\n-    case 1086:\t/* ldsmaxb */\n-      value = 1086;\t/* --> ldsmaxb.  */\n+    case 1162:\t/* stsmaxb */\n+    case 1090:\t/* ldsmaxb */\n+      value = 1090;\t/* --> ldsmaxb.  */\n       break;\n-    case 1159:\t/* stsmaxh */\n-    case 1087:\t/* ldsmaxh */\n-      value = 1087;\t/* --> ldsmaxh.  */\n+    case 1163:\t/* stsmaxh */\n+    case 1091:\t/* ldsmaxh */\n+      value = 1091;\t/* --> ldsmaxh.  */\n       break;\n-    case 1160:\t/* stsmax */\n-    case 1088:\t/* ldsmax */\n-      value = 1088;\t/* --> ldsmax.  */\n-      break;\n-    case 1161:\t/* stsmaxlb */\n-    case 1090:\t/* ldsmaxlb */\n-      value = 1090;\t/* --> ldsmaxlb.  */\n-      break;\n-    case 1162:\t/* stsmaxlh */\n-    case 1093:\t/* ldsmaxlh */\n-      value = 1093;\t/* --> ldsmaxlh.  */\n-      break;\n-    case 1163:\t/* stsmaxl */\n-    case 1096:\t/* ldsmaxl */\n-      value = 1096;\t/* --> ldsmaxl.  */\n-      break;\n-    case 1164:\t/* stsminb */\n-    case 1098:\t/* ldsminb */\n-      value = 1098;\t/* --> ldsminb.  */\n-      break;\n-    case 1165:\t/* stsminh */\n-    case 1099:\t/* ldsminh */\n-      value = 1099;\t/* --> ldsminh.  */\n-      break;\n-    case 1166:\t/* stsmin */\n-    case 1100:\t/* ldsmin */\n-      value = 1100;\t/* --> ldsmin.  */\n-      break;\n-    case 1167:\t/* stsminlb */\n-    case 1102:\t/* ldsminlb */\n-      value = 1102;\t/* --> ldsminlb.  */\n-      break;\n-    case 1168:\t/* stsminlh */\n-    case 1105:\t/* ldsminlh */\n-      value = 1105;\t/* --> ldsminlh.  */\n-      break;\n-    case 1169:\t/* stsminl */\n-    case 1108:\t/* ldsminl */\n-      value = 1108;\t/* --> ldsminl.  */\n-      break;\n-    case 1170:\t/* stumaxb */\n-    case 1110:\t/* ldumaxb */\n-      value = 1110;\t/* --> ldumaxb.  */\n-      break;\n-    case 1171:\t/* stumaxh */\n-    case 1111:\t/* ldumaxh */\n-      value = 1111;\t/* --> ldumaxh.  */\n-      break;\n-    case 1172:\t/* stumax */\n-    case 1112:\t/* ldumax */\n-      value = 1112;\t/* --> ldumax.  */\n-      break;\n-    case 1173:\t/* stumaxlb */\n-    case 1114:\t/* ldumaxlb */\n-      value = 1114;\t/* --> ldumaxlb.  */\n-      break;\n-    case 1174:\t/* stumaxlh */\n-    case 1117:\t/* ldumaxlh */\n-      value = 1117;\t/* --> ldumaxlh.  */\n-      break;\n-    case 1175:\t/* stumaxl */\n-    case 1120:\t/* ldumaxl */\n-      value = 1120;\t/* --> ldumaxl.  */\n-      break;\n-    case 1176:\t/* stuminb */\n-    case 1122:\t/* lduminb */\n-      value = 1122;\t/* --> lduminb.  */\n-      break;\n-    case 1177:\t/* stuminh */\n-    case 1123:\t/* lduminh */\n-      value = 1123;\t/* --> lduminh.  */\n-      break;\n-    case 1178:\t/* stumin */\n-    case 1124:\t/* ldumin */\n-      value = 1124;\t/* --> ldumin.  */\n-      break;\n-    case 1179:\t/* stuminlb */\n-    case 1126:\t/* lduminlb */\n-      value = 1126;\t/* --> lduminlb.  */\n-      break;\n-    case 1180:\t/* stuminlh */\n-    case 1129:\t/* lduminlh */\n-      value = 1129;\t/* --> lduminlh.  */\n-      break;\n-    case 1181:\t/* stuminl */\n-    case 1132:\t/* lduminl */\n-      value = 1132;\t/* --> lduminl.  */\n-      break;\n-    case 1183:\t/* mov */\n-    case 1182:\t/* movn */\n-      value = 1182;\t/* --> movn.  */\n-      break;\n-    case 1185:\t/* mov */\n-    case 1184:\t/* movz */\n-      value = 1184;\t/* --> movz.  */\n-      break;\n-    case 1243:\t/* autibsp */\n-    case 1242:\t/* autibz */\n-    case 1241:\t/* autiasp */\n-    case 1240:\t/* autiaz */\n-    case 1239:\t/* pacibsp */\n-    case 1238:\t/* pacibz */\n-    case 1237:\t/* paciasp */\n-    case 1236:\t/* paciaz */\n-    case 1212:\t/* tsb */\n-    case 1211:\t/* psb */\n-    case 1210:\t/* esb */\n-    case 1209:\t/* autib1716 */\n-    case 1208:\t/* autia1716 */\n-    case 1207:\t/* pacib1716 */\n-    case 1206:\t/* pacia1716 */\n-    case 1205:\t/* xpaclri */\n-    case 1203:\t/* sevl */\n-    case 1202:\t/* sev */\n-    case 1201:\t/* wfi */\n-    case 1200:\t/* wfe */\n-    case 1199:\t/* yield */\n-    case 1198:\t/* bti */\n-    case 1197:\t/* csdb */\n-    case 1196:\t/* nop */\n-    case 1195:\t/* hint */\n-      value = 1195;\t/* --> hint.  */\n-      break;\n-    case 1218:\t/* pssbb */\n-    case 1217:\t/* ssbb */\n-    case 1216:\t/* dfb */\n-    case 1214:\t/* dsb */\n-      value = 1214;\t/* --> dsb.  */\n-      break;\n-    case 1215:\t/* dsb */\n-      value = 1215;\t/* --> dsb.  */\n-      break;\n-    case 1231:\t/* cpp */\n-    case 1230:\t/* dvp */\n-    case 1229:\t/* cfp */\n-    case 1226:\t/* tlbi */\n-    case 1225:\t/* ic */\n-    case 1224:\t/* dc */\n-    case 1223:\t/* at */\n-    case 1222:\t/* sys */\n-      value = 1222;\t/* --> sys.  */\n-      break;\n-    case 1227:\t/* wfet */\n-      value = 1227;\t/* --> wfet.  */\n-      break;\n-    case 1228:\t/* wfit */\n-      value = 1228;\t/* --> wfit.  */\n-      break;\n-    case 2041:\t/* bic */\n-    case 1291:\t/* and */\n-      value = 1291;\t/* --> and.  */\n+    case 1164:\t/* stsmax */\n+    case 1092:\t/* ldsmax */\n+      value = 1092;\t/* --> ldsmax.  */\n+      break;\n+    case 1165:\t/* stsmaxlb */\n+    case 1094:\t/* ldsmaxlb */\n+      value = 1094;\t/* --> ldsmaxlb.  */\n+      break;\n+    case 1166:\t/* stsmaxlh */\n+    case 1097:\t/* ldsmaxlh */\n+      value = 1097;\t/* --> ldsmaxlh.  */\n+      break;\n+    case 1167:\t/* stsmaxl */\n+    case 1100:\t/* ldsmaxl */\n+      value = 1100;\t/* --> ldsmaxl.  */\n+      break;\n+    case 1168:\t/* stsminb */\n+    case 1102:\t/* ldsminb */\n+      value = 1102;\t/* --> ldsminb.  */\n+      break;\n+    case 1169:\t/* stsminh */\n+    case 1103:\t/* ldsminh */\n+      value = 1103;\t/* --> ldsminh.  */\n+      break;\n+    case 1170:\t/* stsmin */\n+    case 1104:\t/* ldsmin */\n+      value = 1104;\t/* --> ldsmin.  */\n+      break;\n+    case 1171:\t/* stsminlb */\n+    case 1106:\t/* ldsminlb */\n+      value = 1106;\t/* --> ldsminlb.  */\n+      break;\n+    case 1172:\t/* stsminlh */\n+    case 1109:\t/* ldsminlh */\n+      value = 1109;\t/* --> ldsminlh.  */\n+      break;\n+    case 1173:\t/* stsminl */\n+    case 1112:\t/* ldsminl */\n+      value = 1112;\t/* --> ldsminl.  */\n+      break;\n+    case 1174:\t/* stumaxb */\n+    case 1114:\t/* ldumaxb */\n+      value = 1114;\t/* --> ldumaxb.  */\n+      break;\n+    case 1175:\t/* stumaxh */\n+    case 1115:\t/* ldumaxh */\n+      value = 1115;\t/* --> ldumaxh.  */\n+      break;\n+    case 1176:\t/* stumax */\n+    case 1116:\t/* ldumax */\n+      value = 1116;\t/* --> ldumax.  */\n+      break;\n+    case 1177:\t/* stumaxlb */\n+    case 1118:\t/* ldumaxlb */\n+      value = 1118;\t/* --> ldumaxlb.  */\n+      break;\n+    case 1178:\t/* stumaxlh */\n+    case 1121:\t/* ldumaxlh */\n+      value = 1121;\t/* --> ldumaxlh.  */\n+      break;\n+    case 1179:\t/* stumaxl */\n+    case 1124:\t/* ldumaxl */\n+      value = 1124;\t/* --> ldumaxl.  */\n+      break;\n+    case 1180:\t/* stuminb */\n+    case 1126:\t/* lduminb */\n+      value = 1126;\t/* --> lduminb.  */\n+      break;\n+    case 1181:\t/* stuminh */\n+    case 1127:\t/* lduminh */\n+      value = 1127;\t/* --> lduminh.  */\n+      break;\n+    case 1182:\t/* stumin */\n+    case 1128:\t/* ldumin */\n+      value = 1128;\t/* --> ldumin.  */\n+      break;\n+    case 1183:\t/* stuminlb */\n+    case 1130:\t/* lduminlb */\n+      value = 1130;\t/* --> lduminlb.  */\n+      break;\n+    case 1184:\t/* stuminlh */\n+    case 1133:\t/* lduminlh */\n+      value = 1133;\t/* --> lduminlh.  */\n+      break;\n+    case 1185:\t/* stuminl */\n+    case 1136:\t/* lduminl */\n+      value = 1136;\t/* --> lduminl.  */\n+      break;\n+    case 1187:\t/* mov */\n+    case 1186:\t/* movn */\n+      value = 1186;\t/* --> movn.  */\n+      break;\n+    case 1189:\t/* mov */\n+    case 1188:\t/* movz */\n+      value = 1188;\t/* --> movz.  */\n+      break;\n+    case 1247:\t/* autibsp */\n+    case 1246:\t/* autibz */\n+    case 1245:\t/* autiasp */\n+    case 1244:\t/* autiaz */\n+    case 1243:\t/* pacibsp */\n+    case 1242:\t/* pacibz */\n+    case 1241:\t/* paciasp */\n+    case 1240:\t/* paciaz */\n+    case 1216:\t/* tsb */\n+    case 1215:\t/* psb */\n+    case 1214:\t/* esb */\n+    case 1213:\t/* autib1716 */\n+    case 1212:\t/* autia1716 */\n+    case 1211:\t/* pacib1716 */\n+    case 1210:\t/* pacia1716 */\n+    case 1209:\t/* xpaclri */\n+    case 1207:\t/* sevl */\n+    case 1206:\t/* sev */\n+    case 1205:\t/* wfi */\n+    case 1204:\t/* wfe */\n+    case 1203:\t/* yield */\n+    case 1202:\t/* bti */\n+    case 1201:\t/* csdb */\n+    case 1200:\t/* nop */\n+    case 1199:\t/* hint */\n+      value = 1199;\t/* --> hint.  */\n+      break;\n+    case 1222:\t/* pssbb */\n+    case 1221:\t/* ssbb */\n+    case 1220:\t/* dfb */\n+    case 1218:\t/* dsb */\n+      value = 1218;\t/* --> dsb.  */\n+      break;\n+    case 1219:\t/* dsb */\n+      value = 1219;\t/* --> dsb.  */\n+      break;\n+    case 1235:\t/* cpp */\n+    case 1234:\t/* dvp */\n+    case 1233:\t/* cfp */\n+    case 1230:\t/* tlbi */\n+    case 1229:\t/* ic */\n+    case 1228:\t/* dc */\n+    case 1227:\t/* at */\n+    case 1226:\t/* sys */\n+      value = 1226;\t/* --> sys.  */\n+      break;\n+    case 1231:\t/* wfet */\n+      value = 1231;\t/* --> wfet.  */\n+      break;\n+    case 1232:\t/* wfit */\n+      value = 1232;\t/* --> wfit.  */\n+      break;\n+    case 2045:\t/* bic */\n+    case 1295:\t/* and */\n+      value = 1295;\t/* --> and.  */\n+      break;\n+    case 1278:\t/* mov */\n+    case 1297:\t/* and */\n+      value = 1297;\t/* --> and.  */\n+      break;\n+    case 1282:\t/* movs */\n+    case 1298:\t/* ands */\n+      value = 1298;\t/* --> ands.  */\n+      break;\n+    case 2046:\t/* cmple */\n+    case 1333:\t/* cmpge */\n+      value = 1333;\t/* --> cmpge.  */\n+      break;\n+    case 2049:\t/* cmplt */\n+    case 1336:\t/* cmpgt */\n+      value = 1336;\t/* --> cmpgt.  */\n+      break;\n+    case 2047:\t/* cmplo */\n+    case 1338:\t/* cmphi */\n+      value = 1338;\t/* --> cmphi.  */\n+      break;\n+    case 2048:\t/* cmpls */\n+    case 1341:\t/* cmphs */\n+      value = 1341;\t/* --> cmphs.  */\n       break;\n-    case 1274:\t/* mov */\n-    case 1293:\t/* and */\n-      value = 1293;\t/* --> and.  */\n-      break;\n-    case 1278:\t/* movs */\n-    case 1294:\t/* ands */\n-      value = 1294;\t/* --> ands.  */\n+    case 1275:\t/* mov */\n+    case 1363:\t/* cpy */\n+      value = 1363;\t/* --> cpy.  */\n       break;\n-    case 2042:\t/* cmple */\n-    case 1329:\t/* cmpge */\n-      value = 1329;\t/* --> cmpge.  */\n+    case 1277:\t/* mov */\n+    case 1364:\t/* cpy */\n+      value = 1364;\t/* --> cpy.  */\n       break;\n-    case 2045:\t/* cmplt */\n-    case 1332:\t/* cmpgt */\n-      value = 1332;\t/* --> cmpgt.  */\n+    case 2056:\t/* fmov */\n+    case 1280:\t/* mov */\n+    case 1365:\t/* cpy */\n+      value = 1365;\t/* --> cpy.  */\n       break;\n-    case 2043:\t/* cmplo */\n-    case 1334:\t/* cmphi */\n-      value = 1334;\t/* --> cmphi.  */\n+    case 1270:\t/* mov */\n+    case 1377:\t/* dup */\n+      value = 1377;\t/* --> dup.  */\n       break;\n-    case 2044:\t/* cmpls */\n-    case 1337:\t/* cmphs */\n-      value = 1337;\t/* --> cmphs.  */\n+    case 1272:\t/* mov */\n+    case 1269:\t/* mov */\n+    case 1378:\t/* dup */\n+      value = 1378;\t/* --> dup.  */\n       break;\n-    case 1271:\t/* mov */\n-    case 1359:\t/* cpy */\n-      value = 1359;\t/* --> cpy.  */\n+    case 2055:\t/* fmov */\n+    case 1274:\t/* mov */\n+    case 1379:\t/* dup */\n+      value = 1379;\t/* --> dup.  */\n       break;\n     case 1273:\t/* mov */\n-    case 1360:\t/* cpy */\n-      value = 1360;\t/* --> cpy.  */\n-      break;\n-    case 2052:\t/* fmov */\n-    case 1276:\t/* mov */\n-    case 1361:\t/* cpy */\n-      value = 1361;\t/* --> cpy.  */\n-      break;\n-    case 1266:\t/* mov */\n-    case 1373:\t/* dup */\n-      value = 1373;\t/* --> dup.  */\n+    case 1380:\t/* dupm */\n+      value = 1380;\t/* --> dupm.  */\n       break;\n-    case 1268:\t/* mov */\n-    case 1265:\t/* mov */\n-    case 1374:\t/* dup */\n-      value = 1374;\t/* --> dup.  */\n-      break;\n-    case 2051:\t/* fmov */\n-    case 1270:\t/* mov */\n-    case 1375:\t/* dup */\n-      value = 1375;\t/* --> dup.  */\n-      break;\n-    case 1269:\t/* mov */\n-    case 1376:\t/* dupm */\n-      value = 1376;\t/* --> dupm.  */\n-      break;\n-    case 2046:\t/* eon */\n-    case 1378:\t/* eor */\n-      value = 1378;\t/* --> eor.  */\n+    case 2050:\t/* eon */\n+    case 1382:\t/* eor */\n+      value = 1382;\t/* --> eor.  */\n       break;\n-    case 1279:\t/* not */\n-    case 1380:\t/* eor */\n-      value = 1380;\t/* --> eor.  */\n+    case 1283:\t/* not */\n+    case 1384:\t/* eor */\n+      value = 1384;\t/* --> eor.  */\n       break;\n-    case 1280:\t/* nots */\n-    case 1381:\t/* eors */\n-      value = 1381;\t/* --> eors.  */\n+    case 1284:\t/* nots */\n+    case 1385:\t/* eors */\n+      value = 1385;\t/* --> eors.  */\n       break;\n-    case 2047:\t/* facle */\n-    case 1386:\t/* facge */\n-      value = 1386;\t/* --> facge.  */\n+    case 2051:\t/* facle */\n+    case 1390:\t/* facge */\n+      value = 1390;\t/* --> facge.  */\n       break;\n-    case 2048:\t/* faclt */\n-    case 1387:\t/* facgt */\n-      value = 1387;\t/* --> facgt.  */\n+    case 2052:\t/* faclt */\n+    case 1391:\t/* facgt */\n+      value = 1391;\t/* --> facgt.  */\n       break;\n-    case 2049:\t/* fcmle */\n-    case 1400:\t/* fcmge */\n-      value = 1400;\t/* --> fcmge.  */\n+    case 2053:\t/* fcmle */\n+    case 1404:\t/* fcmge */\n+      value = 1404;\t/* --> fcmge.  */\n       break;\n-    case 2050:\t/* fcmlt */\n-    case 1402:\t/* fcmgt */\n-      value = 1402;\t/* --> fcmgt.  */\n+    case 2054:\t/* fcmlt */\n+    case 1406:\t/* fcmgt */\n+      value = 1406;\t/* --> fcmgt.  */\n       break;\n-    case 1263:\t/* fmov */\n-    case 1408:\t/* fcpy */\n-      value = 1408;\t/* --> fcpy.  */\n+    case 1267:\t/* fmov */\n+    case 1412:\t/* fcpy */\n+      value = 1412;\t/* --> fcpy.  */\n       break;\n-    case 1262:\t/* fmov */\n-    case 1431:\t/* fdup */\n-      value = 1431;\t/* --> fdup.  */\n+    case 1266:\t/* fmov */\n+    case 1435:\t/* fdup */\n+      value = 1435;\t/* --> fdup.  */\n       break;\n-    case 1264:\t/* mov */\n-    case 1762:\t/* orr */\n-      value = 1762;\t/* --> orr.  */\n+    case 1268:\t/* mov */\n+    case 1766:\t/* orr */\n+      value = 1766;\t/* --> orr.  */\n       break;\n-    case 2053:\t/* orn */\n-    case 1763:\t/* orr */\n-      value = 1763;\t/* --> orr.  */\n+    case 2057:\t/* orn */\n+    case 1767:\t/* orr */\n+      value = 1767;\t/* --> orr.  */\n       break;\n-    case 1267:\t/* mov */\n-    case 1765:\t/* orr */\n-      value = 1765;\t/* --> orr.  */\n+    case 1271:\t/* mov */\n+    case 1769:\t/* orr */\n+      value = 1769;\t/* --> orr.  */\n       break;\n-    case 1277:\t/* movs */\n-    case 1766:\t/* orrs */\n-      value = 1766;\t/* --> orrs.  */\n+    case 1281:\t/* movs */\n+    case 1770:\t/* orrs */\n+      value = 1770;\t/* --> orrs.  */\n       break;\n-    case 1272:\t/* mov */\n-    case 1828:\t/* sel */\n-      value = 1828;\t/* --> sel.  */\n+    case 1276:\t/* mov */\n+    case 1832:\t/* sel */\n+      value = 1832;\t/* --> sel.  */\n       break;\n-    case 1275:\t/* mov */\n-    case 1829:\t/* sel */\n-      value = 1829;\t/* --> sel.  */\n+    case 1279:\t/* mov */\n+    case 1833:\t/* sel */\n+      value = 1833;\t/* --> sel.  */\n       break;\n     default: return NULL;\n     }"
    },
    {
      "sha": "ba5cf84d09878bf1332107cd3a165f82d9af7982",
      "filename": "opcodes/aarch64-dis-2.c",
      "status": "modified",
      "additions": 1864,
      "deletions": 1820,
      "changes": 3684,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/opcodes/aarch64-dis-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/opcodes/aarch64-dis-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis-2.c?ref=fd65497db4098140490e59e3dbf4709da5536081"
    },
    {
      "sha": "e3d47b4bb5e02d6d38e683c038dfd461184adf80",
      "filename": "opcodes/aarch64-opc-2.c",
      "status": "modified",
      "additions": 16,
      "deletions": 16,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/opcodes/aarch64-opc-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/opcodes/aarch64-opc-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc-2.c?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -274,17 +274,17 @@ static const unsigned op_enum_table [] =\n   12,\n   636,\n   637,\n-  1182,\n-  1184,\n   1186,\n-  994,\n-  1185,\n-  1183,\n+  1188,\n+  1190,\n+  998,\n+  1189,\n+  1187,\n   318,\n   624,\n   635,\n   634,\n-  992,\n+  996,\n   631,\n   628,\n   620,\n@@ -294,7 +294,7 @@ static const unsigned op_enum_table [] =\n   630,\n   632,\n   633,\n-  1002,\n+  1006,\n   664,\n   667,\n   670,\n@@ -311,17 +311,17 @@ static const unsigned op_enum_table [] =\n   391,\n   413,\n   415,\n-  1267,\n-  1272,\n-  1265,\n-  1264,\n+  1271,\n+  1276,\n+  1269,\n   1268,\n-  1275,\n-  1277,\n-  1278,\n-  1274,\n-  1280,\n+  1272,\n   1279,\n+  1281,\n+  1282,\n+  1278,\n+  1284,\n+  1283,\n   131,\n };\n "
    },
    {
      "sha": "d7cdec6e598d74e5ab9adaec4efadf10528302e6",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 16,
      "deletions": 2,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd65497db4098140490e59e3dbf4709da5536081/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd65497db4098140490e59e3dbf4709da5536081/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=fd65497db4098140490e59e3dbf4709da5536081",
      "patch": "@@ -1143,6 +1143,12 @@\n   QLF3(W, X, NIL),\t\t\\\n }\n \n+/* e.g. ST64B <Xs>, <Xt>, [<Xn|SP>].  */\n+#define QL_X2NIL\t\t\\\n+{\t\t\t\t\\\n+  QLF3(X, X, NIL),\t\t\t\\\n+}\n+\n /* e.g. LDRAA <Xt>, [<Xn|SP>{,#imm}].  */\n #define QL_X1NIL\t\t\\\n {\t\t\t\t\\\n@@ -2412,7 +2418,8 @@ static const aarch64_feature_set aarch64_feature_v8_r =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8_R, 0);\n static const aarch64_feature_set aarch64_feature_csre =\n   AARCH64_FEATURE (AARCH64_FEATURE_CSRE, 0);\n-\n+static const aarch64_feature_set aarch64_feature_ls64 =\n+  AARCH64_FEATURE (AARCH64_FEATURE_V8_7 | AARCH64_FEATURE_LS64, 0);\n \n #define CORE\t\t&aarch64_feature_v8\n #define FP\t\t&aarch64_feature_fp\n@@ -2459,6 +2466,7 @@ static const aarch64_feature_set aarch64_feature_csre =\n #define ARMV8_R\t  &aarch64_feature_v8_r\n #define ARMV8_7\t  &aarch64_feature_v8_7\n #define CSRE\t  &aarch64_feature_csre\n+#define LS64\t  &aarch64_feature_ls64\n \n #define CORE_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, OP, CORE, OPS, QUALS, FLAGS, 0, 0, NULL }\n@@ -2568,7 +2576,8 @@ static const aarch64_feature_set aarch64_feature_csre =\n   { NAME, OPCODE, MASK, CLASS, 0, ARMV8_7, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define _CSRE_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, 0, CSRE, OPS, QUALS, FLAGS, 0, 0, NULL }\n-\n+#define _LS64_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n+  { NAME, OPCODE, MASK, CLASS, 0, LS64, OPS, QUALS, FLAGS, 0, 0, NULL }\n \n struct aarch64_opcode aarch64_opcode_table[] =\n {\n@@ -3631,6 +3640,11 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   CORE_INSN (\"ldr\",   0x1c000000, 0x3f000000, loadlit, OP_LDRV_LIT,  OP2 (Ft, ADDR_PCREL19),    QL_FP_PCREL, 0),\n   CORE_INSN (\"ldrsw\", 0x98000000, 0xff000000, loadlit, OP_LDRSW_LIT, OP2 (Rt, ADDR_PCREL19),    QL_X_PCREL, 0),\n   CORE_INSN (\"prfm\",  0xd8000000, 0xff000000, loadlit, OP_PRFM_LIT,  OP2 (PRFOP, ADDR_PCREL19), QL_PRFM_PCREL, 0),\n+  /* Atomic 64-byte load/store in Armv8.7.  */\n+  _LS64_INSN (\"ld64b\",   0xf83fd000, 0xfffffc00, ldstexcl, OP2 (Rt, ADDR_SIMPLE), QL_X1NIL, 0),\n+  _LS64_INSN (\"st64b\",   0xf83f9000, 0xfffffc00, ldstexcl, OP2 (Rt, ADDR_SIMPLE), QL_X1NIL, 0),\n+  _LS64_INSN (\"st64bv\",  0xf820b000, 0xffe0fc00, ldstexcl, OP3 (Rs, Rt, ADDR_SIMPLE), QL_X2NIL, 0),\n+  _LS64_INSN (\"st64bv0\", 0xf820a000, 0xffe0fc00, ldstexcl, OP3 (Rs, Rt, ADDR_SIMPLE), QL_X2NIL, 0),\n   /* Logical (immediate).  */\n   CORE_INSN (\"and\", 0x12000000, 0x7f800000, log_imm, 0, OP3 (Rd_SP, Rn, LIMM), QL_R2NIL, F_HAS_ALIAS | F_SF),\n   CORE_INSN (\"bic\", 0x12000000, 0x7f800000, log_imm, OP_BIC, OP3 (Rd_SP, Rn, LIMM), QL_R2NIL, F_ALIAS | F_PSEUDO | F_SF),"
    }
  ]
}