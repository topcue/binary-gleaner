{
  "sha": "1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWEzZGEyY2Q2MTc1ZThmMjVjZWM5NWZjNjg1ZDRmMGY0M2JmNjgwNw==",
  "commit": {
    "author": {
      "name": "Amos Bird",
      "email": "amosbird@gmail.com",
      "date": "2019-06-06T17:10:14Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-06-06T17:35:15Z"
    },
    "message": "Add thread-exit annotation.\n\ngdb/ChangeLog\n2019-04-26  Amos Bird  <amosbird@gmail.com>\n\n\t* annotate.c (annotate_thread_exited): Add \"thread-exited\"\n\tannotation.\n\ngdb/doc/ChangeLog\n2019-06-06  Amos Bird  <amosbird@gmail.com>\n\n\t* annotate.texinfo (Multi-threaded Apps): Add entry for thread-exited\n\tannotation.\n\ngdb/testsuite/ChangeLog\n2019-06-06  Amos Bird  <amosbird@gmail.com>\n\n\t* gdb.base/annota1.exp (thread_switch): Add test for\n\tthread-exited annotation.",
    "tree": {
      "sha": "1509d1aead61942dd99e013c10d8938f173e9317",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1509d1aead61942dd99e013c10d8938f173e9317"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/comments",
  "author": {
    "login": "amosbird",
    "id": 5085485,
    "node_id": "MDQ6VXNlcjUwODU0ODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5085485?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amosbird",
    "html_url": "https://github.com/amosbird",
    "followers_url": "https://api.github.com/users/amosbird/followers",
    "following_url": "https://api.github.com/users/amosbird/following{/other_user}",
    "gists_url": "https://api.github.com/users/amosbird/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amosbird/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amosbird/subscriptions",
    "organizations_url": "https://api.github.com/users/amosbird/orgs",
    "repos_url": "https://api.github.com/users/amosbird/repos",
    "events_url": "https://api.github.com/users/amosbird/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amosbird/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dd455cf51d2b273edf6173fcb25fc1e3c5b966b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd455cf51d2b273edf6173fcb25fc1e3c5b966b2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dd455cf51d2b273edf6173fcb25fc1e3c5b966b2"
    }
  ],
  "stats": {
    "total": 77,
    "additions": 70,
    "deletions": 7
  },
  "files": [
    {
      "sha": "024e171fa3fe64644ebb5817343b32cb00029116",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
      "patch": "@@ -1,3 +1,8 @@\n+2019-04-26  Amos Bird  <amosbird@gmail.com>\n+\n+\t* annotate.c (annotate_thread_exited): Add \"thread-exited\"\n+\tannotation.\n+\n 2019-06-06  Tom Tromey  <tromey@adacore.com>\n \n \t* maint.h (class scoped_command_stats): Use"
    },
    {
      "sha": "9e1462b6bfdbb57e84febc8a597e8f594bcf7908",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
      "patch": "@@ -3,6 +3,8 @@\n \n *** Changes since GDB 8.3\n \n+* 'thread-exited' event is now available in the annotations interface.\n+\n * New built-in convenience variables $_gdb_major and $_gdb_minor\n   provide the GDB version.  They are handy for conditionally using\n   features available only in or since specific GDB versions, in"
    },
    {
      "sha": "e6e8084e9b1895e8d320fab4d7df7d987466c5de",
      "filename": "gdb/annotate.c",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/annotate.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/annotate.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/annotate.c?ref=1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
      "patch": "@@ -241,6 +241,19 @@ annotate_thread_changed (void)\n     }\n }\n \n+/* Emit notification on thread exit.  */\n+\n+static void\n+annotate_thread_exited (struct thread_info *t, int silent)\n+{\n+  if (annotation_level > 1)\n+    {\n+      printf_filtered((\"\\n\\032\\032thread-exited,\"\n+                       \"id=\\\"%d\\\",group-id=\\\"i%d\\\"\\n\"),\n+                      t->global_num, t->inf->num);\n+    }\n+}\n+\n void\n annotate_field_begin (struct type *type)\n {\n@@ -595,4 +608,5 @@ _initialize_annotate (void)\n   gdb::observers::breakpoint_created.attach (breakpoint_changed);\n   gdb::observers::breakpoint_deleted.attach (breakpoint_changed);\n   gdb::observers::breakpoint_modified.attach (breakpoint_changed);\n+  gdb::observers::thread_exit.attach (annotate_thread_exited);\n }"
    },
    {
      "sha": "51a85163524adcd5fae75a5cb747f607220c07a5",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-06  Amos Bird  <amosbird@gmail.com>\n+\n+\t* annotate.texinfo (Multi-threaded Apps): Add entry for thread-exited\n+\tannotation.\n+\n 2019-06-04  Christian Biesinger  <cbiesinger@google.com>\n \n \t* python.texi: Document new gdb.Type.objfile property."
    },
    {
      "sha": "ee8147f52fd86ba3aa04041d54e4d88911abc595",
      "filename": "gdb/doc/annotate.texinfo",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/doc/annotate.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/doc/annotate.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/annotate.texinfo?ref=1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
      "patch": "@@ -836,6 +836,13 @@ The selected thread has changed.  This may occur at the request of the\n user with the @code{thread} command, or as a result of execution,\n e.g., another thread hits a breakpoint.\n \n+@findex thread-exited@r{, annotation}\n+@item ^Z^Zthread-exited,id=\"@var{id}\",group-id=\"@var{gid}\"\n+\n+This annotation is issued once for each thread that exits.  The @var{id}\n+field contains the global @value{GDBN} identifier of the thread.  The\n+@var{gid} field identifies the thread group this thread belongs to.\n+\n @end table\n \n @node GNU Free Documentation License"
    },
    {
      "sha": "7cc712ba560d54bc8ad9d1d9a01ae44d12272d27",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-06  Amos Bird  <amosbird@gmail.com>\n+\n+\t* gdb.base/annota1.exp (thread_switch): Add test for\n+\tthread-exited annotation.\n+\n 2019-06-06  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.base/maint.exp: Expect command started/finished output."
    },
    {
      "sha": "dfa30831e641f1b7c8b00588307b156ead02bad8",
      "filename": "gdb/testsuite/gdb.base/annota1.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/testsuite/gdb.base/annota1.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/testsuite/gdb.base/annota1.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/annota1.exp?ref=1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
      "patch": "@@ -428,7 +428,7 @@ if [target_info exists gdb,nosignals] {\n     unsupported \"signal sent\"\n } else {\n     gdb_test_multiple \"signal SIGTRAP\" \"signal sent\" {\n-\t-re \".*\\032\\032post-prompt\\r\\nContinuing with signal SIGTRAP.\\r\\n\\r\\n\\032\\032starting\\(\\r\\n\\r\\n\\032\\032frames-invalid\\)+\\r\\n\\r\\n\\032\\032signalled\\r\\n\\r\\nProgram terminated with signal \\r\\n\\032\\032signal-name\\r\\nSIGTRAP\\r\\n\\032\\032signal-name-end\\r\\n, \\r\\n\\032\\032signal-string\\r\\nTrace.breakpoint trap\\r\\n\\032\\032signal-string-end\\r\\n.\\r\\nThe program no longer exists.\\r\\n\\r\\n\\032\\032stopped\\r\\n$gdb_prompt$\" {\n+\t-re \".*\\032\\032post-prompt\\r\\nContinuing with signal SIGTRAP.\\r\\n\\r\\n\\032\\032starting\\(\\r\\n\\r\\n\\032\\032frames-invalid\\)+\\r\\n\\r\\n\\032\\032signalled\\r\\n\\r\\nProgram terminated with signal \\r\\n\\032\\032signal-name\\r\\nSIGTRAP\\r\\n\\032\\032signal-name-end\\r\\n, \\r\\n\\032\\032signal-string\\r\\nTrace.breakpoint trap\\r\\n\\032\\032signal-string-end\\r\\n.\\r\\nThe program no longer exists.\\r\\n\\r\\n\\032\\032thread-exited,id=\\\"${decimal}\\\",group-id=\\\"i${decimal}\\\"\\r\\n\\r\\n\\032\\032stopped\\r\\n$gdb_prompt$\" {\n \t    pass \"signal sent\"\n \t}\n     }\n@@ -450,6 +450,7 @@ if { [remote_file host exists core] } {\n proc thread_test {} {\n     global subdir srcdir testfile srcfile binfile\n     global gdb_prompt old_gdb_prompt\n+    global decimal\n     set srcfile watch_thread_num.c\n     set binfile [standard_output_file ${testfile}-watch_thread_num]\n     set gdb_prompt $old_gdb_prompt\n@@ -468,6 +469,9 @@ proc thread_test {} {\n \tset linenum [gdb_get_line_number \"all threads started\"]\n \tgdb_breakpoint \"$linenum\"\n \n+\tset linenum [gdb_get_line_number \"first child thread exited\"]\n+\tgdb_breakpoint \"$linenum\"\n+\n \tset gdb_prompt \\\n \t    \"\\r\\n\\032\\032pre-prompt\\r\\n$gdb_prompt \\r\\n\\032\\032prompt\\r\\n\"\n \n@@ -481,6 +485,12 @@ proc thread_test {} {\n \t\tpass \"new thread\"\n \t    }\n \t}\n+\n+    gdb_test_multiple \"continue\" \"thread exit\" {\n+\t    -re \"\\032\\032thread-exited,id=\\\"${decimal}\\\",group-id=\\\"i${decimal}\\\".*\\r\\n$gdb_prompt$\" {\n+\t\tpass \"thread exit\"\n+\t    }\n+    }\n     }\n }\n "
    },
    {
      "sha": "fe9d602476caf8b6a255c49eb3573c1cd16da631",
      "filename": "gdb/testsuite/gdb.base/watch_thread_num.c",
      "status": "modified",
      "additions": 19,
      "deletions": 6,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/testsuite/gdb.base/watch_thread_num.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/testsuite/gdb.base/watch_thread_num.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/watch_thread_num.c?ref=1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
      "patch": "@@ -29,6 +29,8 @@ void *thread_function (void *arg); /* Pointer to function executed by each threa\n \n static pthread_barrier_t threads_started_barrier;\n \n+static pthread_barrier_t threads_started_barrier2;\n+\n #define NUM 15\n \n static int num_threads = NUM;\n@@ -43,6 +45,8 @@ int main () {\n \n     pthread_barrier_init (&threads_started_barrier, NULL, NUM + 1);\n \n+    pthread_barrier_init (&threads_started_barrier2, NULL, 2);\n+\n     for (i = 0; i < NUM; i++)\n       {\n         res = pthread_create (&threads[i],\n@@ -53,7 +57,11 @@ int main () {\n \n     pthread_barrier_wait (&threads_started_barrier);\n \n-    sleep (180); /* all threads started */\n+    pthread_barrier_wait (&threads_started_barrier2);  /* all threads started */\n+\n+    pthread_join (threads[0], NULL);\n+\n+    sleep (180);  /* first child thread exited */\n \n     exit (EXIT_SUCCESS);\n }\n@@ -68,13 +76,18 @@ void *thread_function (void *arg) {\n \n     pthread_barrier_wait (&threads_started_barrier);\n \n-    /* Don't run forever.  Run just short of it :)  */\n-    while (shared_var > 0)\n+    if (my_number > 0)\n       {\n-        shared_var++;\n-\tusleep (1); /* Loop increment.  */\n-\tloop ();\n+\t/* Don't run forever.  Run just short of it :)  */\n+\twhile (shared_var > 0)\n+\t  {\n+\t    shared_var++;\n+\t    usleep (1); /* Loop increment.  */\n+\t    loop ();\n+\t  }\n       }\n+    else\n+      pthread_barrier_wait (&threads_started_barrier2);\n \n     pthread_exit (NULL);\n }"
    },
    {
      "sha": "745f461716023a3b71b96efe1cc3cc677411b3fc",
      "filename": "gdb/testsuite/gdb.cp/annota2.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/testsuite/gdb.cp/annota2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a3da2cd6175e8f25cec95fc685d4f0f43bf6807/gdb/testsuite/gdb.cp/annota2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/annota2.exp?ref=1a3da2cd6175e8f25cec95fc685d4f0f43bf6807",
      "patch": "@@ -138,6 +138,8 @@ set pat [multi_line \"\" \\\n \t     \"\\032\\032exited 0\" \\\n \t     \"$inferior_exited_re normally.\" \\\n \t     \"\" \\\n+\t     \"\\032\\032thread-exited,id=\\\"1\\\",group-id=\\\"i1\\\"\" \\\n+\t     \"\" \\\n \t     \"\\032\\032stopped\" \\\n \t     $gdb_prompt$]\n gdb_test_multiple \"continue\" \"continue until exit\" {"
    }
  ]
}