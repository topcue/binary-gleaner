{
  "sha": "d3cb68081112a4976979df3f8eae7ca926e76519",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDNjYjY4MDgxMTEyYTQ5NzY5NzlkZjNmOGVhZTdjYTkyNmU3NjUxOQ==",
  "commit": {
    "author": {
      "name": "Keith Seitz",
      "email": "keiths@redhat.com",
      "date": "2019-01-10T21:57:08Z"
    },
    "committer": {
      "name": "Keith Seitz",
      "email": "keiths@redhat.com",
      "date": "2019-01-10T21:57:08Z"
    },
    "message": "gdb/23712: Remove dw2_add_symbol_to_list\n\nFinally, we can remove dw2_add_symbol_to_list since the wrapper function\noriginally introduced to catch this multi-language scenario is no longer\nneeded.  With multi-language dictionaries, we can now support adding\nsymbols of multiple languages, negating the need for the assertion\nentirely.\n\nThis patch should now fix gdb/23712 (and symtab/23010).  At least it will\nif the NULL buildsym_compunit problem doesn't strike first (see gdb/23773).\n\ngdb/ChangeLog:\n\n\tPR gdb/23712\n\tPR symtab/23010\n\t* dwarf2read.c (dw2_add_symbol_to_list): Remove.\n\t(fixup_go_packaging, new_symbol): Use add_symbol_to_list.",
    "tree": {
      "sha": "584ec355dc0d8dd9e8ae16993da026c6a8a37127",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/584ec355dc0d8dd9e8ae16993da026c6a8a37127"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d3cb68081112a4976979df3f8eae7ca926e76519",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3cb68081112a4976979df3f8eae7ca926e76519",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d3cb68081112a4976979df3f8eae7ca926e76519",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3cb68081112a4976979df3f8eae7ca926e76519/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "63a20375b401e24c30987367a10b47b289612e1c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/63a20375b401e24c30987367a10b47b289612e1c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/63a20375b401e24c30987367a10b47b289612e1c"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 11,
    "deletions": 21
  },
  "files": [
    {
      "sha": "01c0bcc15364bbfd621e04fcff9a0605c6215b11",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3cb68081112a4976979df3f8eae7ca926e76519/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3cb68081112a4976979df3f8eae7ca926e76519/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d3cb68081112a4976979df3f8eae7ca926e76519",
      "patch": "@@ -1,3 +1,10 @@\n+2019-01-10  Keith Seitz  <keiths@redhat.com>\n+\n+\tPR gdb/23712\n+\tPR symtab/23010\n+\t* dwarf2read.c (dw2_add_symbol_to_list): Remove.\n+\t(fixup_go_packaging, new_symbol): Use add_symbol_to_list.\n+\n 2019-01-10  Keith Seitz  <keiths@redhat.com>\n \n \tPR gdb/23712"
    },
    {
      "sha": "43be2238a35911e798fda75e4ba03bace76973ed",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 4,
      "deletions": 21,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3cb68081112a4976979df3f8eae7ca926e76519/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3cb68081112a4976979df3f8eae7ca926e76519/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=d3cb68081112a4976979df3f8eae7ca926e76519",
      "patch": "@@ -9779,23 +9779,6 @@ compute_delayed_physnames (struct dwarf2_cu *cu)\n   cu->method_list.clear ();\n }\n \n-/* A wrapper for add_symbol_to_list to ensure that SYMBOL's language is\n-   the same as all other symbols in LISTHEAD.  If a new symbol is added\n-   with a different language, this function asserts.  */\n-\n-static inline void\n-dw2_add_symbol_to_list (struct symbol *symbol, struct pending **listhead)\n-{\n-  /* Only assert if LISTHEAD already contains symbols of a different\n-     language (dict_create_hashed/insert_symbol_hashed requires that all\n-     symbols in this list are of the same language).  */\n-  gdb_assert ((*listhead) == NULL\n-\t      || (SYMBOL_LANGUAGE ((*listhead)->symbol[0])\n-\t\t  == SYMBOL_LANGUAGE (symbol)));\n-\n-  add_symbol_to_list (symbol, listhead);\n-}\n-\n /* Go objects should be embedded in a DW_TAG_module DIE,\n    and it's not clear if/how imported objects will appear.\n    To keep Go support simple until that's worked out,\n@@ -9869,7 +9852,7 @@ fixup_go_packaging (struct dwarf2_cu *cu)\n       SYMBOL_ACLASS_INDEX (sym) = LOC_TYPEDEF;\n       SYMBOL_TYPE (sym) = type;\n \n-      dw2_add_symbol_to_list (sym, cu->builder->get_global_symbols ());\n+      add_symbol_to_list (sym, cu->builder->get_global_symbols ());\n \n       xfree (package_name);\n     }\n@@ -21428,7 +21411,7 @@ new_symbol (struct die_info *die, struct type *type, struct dwarf2_cu *cu,\n \t  SYMBOL_TYPE (sym) = objfile_type (objfile)->builtin_core_addr;\n \t  SYMBOL_DOMAIN (sym) = LABEL_DOMAIN;\n \t  SYMBOL_ACLASS_INDEX (sym) = LOC_LABEL;\n-\t  dw2_add_symbol_to_list (sym, cu->list_in_scope);\n+\t  add_symbol_to_list (sym, cu->list_in_scope);\n \t  break;\n \tcase DW_TAG_subprogram:\n \t  /* SYMBOL_BLOCK_VALUE (sym) will be filled in later by\n@@ -21697,7 +21680,7 @@ new_symbol (struct die_info *die, struct type *type, struct dwarf2_cu *cu,\n \tcase DW_TAG_common_block:\n \t  SYMBOL_ACLASS_INDEX (sym) = LOC_COMMON_BLOCK;\n \t  SYMBOL_DOMAIN (sym) = COMMON_BLOCK_DOMAIN;\n-\t  dw2_add_symbol_to_list (sym, cu->list_in_scope);\n+\t  add_symbol_to_list (sym, cu->list_in_scope);\n \t  break;\n \tdefault:\n \t  /* Not a tag we recognize.  Hopefully we aren't processing\n@@ -21717,7 +21700,7 @@ new_symbol (struct die_info *die, struct type *type, struct dwarf2_cu *cu,\n \t}\n \n       if (list_to_add != NULL)\n-\tdw2_add_symbol_to_list (sym, list_to_add);\n+\tadd_symbol_to_list (sym, list_to_add);\n \n       /* For the benefit of old versions of GCC, check for anonymous\n \t namespaces based on the demangled name.  */"
    }
  ]
}