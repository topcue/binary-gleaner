{
  "sha": "ac7a231133b5a1eeba16fe93396af86b7c5d7c7a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWM3YTIzMTEzM2I1YTFlZWJhMTZmZTkzMzk2YWY4NmI3YzVkN2M3YQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-11T15:21:19Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-11T15:21:19Z"
    },
    "message": "x86: drop a few redundant EVEX-related checks\n\nvex.b can only be set when vex.evex is also set. Similarly vex.evex can\nonly be set when need_vex is also set.",
    "tree": {
      "sha": "0dfe403b15fe6a987e2574ed520c99ecd24b3c24",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0dfe403b15fe6a987e2574ed520c99ecd24b3c24"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ac7a231133b5a1eeba16fe93396af86b7c5d7c7a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac7a231133b5a1eeba16fe93396af86b7c5d7c7a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ac7a231133b5a1eeba16fe93396af86b7c5d7c7a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac7a231133b5a1eeba16fe93396af86b7c5d7c7a/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 10,
    "deletions": 4
  },
  "files": [
    {
      "sha": "e31a93f7de95b38287facbb9e8a253d5e6e3645e",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ac7a231133b5a1eeba16fe93396af86b7c5d7c7a/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ac7a231133b5a1eeba16fe93396af86b7c5d7c7a/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=ac7a231133b5a1eeba16fe93396af86b7c5d7c7a",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-11  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (putop): Drop need_vex check when also checking\n+\tvex.evex.\n+\t(intel_operand_size, OP_E_memory): Drop vex.evex check when also\n+\tchecking vex.b.\n+\n 2021-03-11  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-dis.c (OP_E_memory): Drop xmmq_mode from broadcast"
    },
    {
      "sha": "10dbe7fe18301a6a1d5cc891c0ee3c987240148c",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ac7a231133b5a1eeba16fe93396af86b7c5d7c7a/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ac7a231133b5a1eeba16fe93396af86b7c5d7c7a/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=ac7a231133b5a1eeba16fe93396af86b7c5d7c7a",
      "patch": "@@ -10749,7 +10749,7 @@ putop (const char *in_template, int sizeflag)\n \t    }\n \t  else if (l == 1 && last[0] == 'X')\n \t    {\n-\t      if (!need_vex || !vex.evex)\n+\t      if (!vex.evex)\n \t\tabort ();\n \t      if (intel_syntax\n \t\t  || ((modrm.mod == 3 || vex.b) && !(sizeflag & SUFFIX_ALWAYS)))\n@@ -10951,8 +10951,7 @@ print_displacement (char *buf, bfd_vma disp)\n static void\n intel_operand_size (int bytemode, int sizeflag)\n {\n-  if (vex.evex\n-      && vex.b\n+  if (vex.b\n       && (bytemode == x_mode\n \t  || bytemode == evex_half_bcst_xmmq_mode))\n     {\n@@ -11845,7 +11844,7 @@ OP_E_memory (int bytemode, int sizeflag)\n \t  oappend (scratchbuf);\n \t}\n     }\n-  if (vex.evex && vex.b\n+  if (vex.b\n       && (bytemode == x_mode\n \t  || bytemode == evex_half_bcst_xmmq_mode))\n     {"
    }
  ]
}