{
  "sha": "bbda248c504815990c07c8a9c411ae6c124d7c4b",
  "node_id": "C_kwDOANOeidoAKGJiZGEyNDhjNTA0ODE1OTkwYzA3YzhhOWM0MTFhZTZjMTI0ZDdjNGI",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-21T03:46:52Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-21T04:13:50Z"
    },
    "message": "sim: v850: fix cpu_option testsuite handling\n\nThe v850 testsuite code has been testing the $opt variable, but this\nwas never actually set anywhere globally or v850-specific.  Instead,\nthis was a random variable leaking out of the sh testsuite code.  As\nfar as I can tell, it has always been this way.  That means the code\nonly ever tested the v850 cpu target (which is the default).\n\nThis failure can be easily seen in practice by running the v850 code\nin isolation and seeing it crash:\n$ runtest v850/allinsns.exp\n...\nRunning target unix\nUsing /usr/share/dejagnu/baseboards/unix.exp as board description file for target.\nUsing /usr/share/dejagnu/config/unix.exp as generic interface file for target.\nUsing ../../../sim/testsuite/config/default.exp as tool-and-target-specific interface file.\nWARNING: Assuming target board is the local machine (which is probably wrong).\nYou may need to set your DEJAGNU environment variable.\nRunning ../../../sim/testsuite/v850/allinsns.exp ...\nERROR: tcl error sourcing ../../../sim/testsuite/v850/allinsns.exp.\nERROR: tcl error code TCL LOOKUP VARNAME opt\nERROR: can't read \"opt\": no such variable\n    while executing\n\"switch -regexp -- $opt {\n\nBacking up a bit, the reason for this logic in the first place is\nbecause the common sim testsuite code makes an assumption about the\nassembler options with cpu_option -- the option and its value are\nalways separated by an =.  This is not the case with v850.  So tweak\nthe core sim logic a bit to support omitting the = so that we can\nswitch v850 to the standard all_machs setting and avoid opt entirely.",
    "tree": {
      "sha": "4dbceafc3299729a11d188ddb7ba06d82f49cf95",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4dbceafc3299729a11d188ddb7ba06d82f49cf95"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bbda248c504815990c07c8a9c411ae6c124d7c4b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bbda248c504815990c07c8a9c411ae6c124d7c4b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bbda248c504815990c07c8a9c411ae6c124d7c4b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bbda248c504815990c07c8a9c411ae6c124d7c4b/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c2851b66eb8cb6d486c03e90bedb3403c5b1294e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2851b66eb8cb6d486c03e90bedb3403c5b1294e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c2851b66eb8cb6d486c03e90bedb3403c5b1294e"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 15,
    "deletions": 20
  },
  "files": [
    {
      "sha": "b3dff9e1a66c77fd425a23c0c1e2fdff5bc0cf4a",
      "filename": "sim/testsuite/lib/sim-defs.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bbda248c504815990c07c8a9c411ae6c124d7c4b/sim/testsuite/lib/sim-defs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bbda248c504815990c07c8a9c411ae6c124d7c4b/sim/testsuite/lib/sim-defs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/lib/sim-defs.exp?ref=bbda248c504815990c07c8a9c411ae6c124d7c4b",
      "patch": "@@ -187,6 +187,7 @@ proc run_sim_test { name requested_machs } {\n     global SIMFLAGS\n     global opts\n     global cpu_option\n+    global cpu_option_sep\n     global global_as_options\n     global global_ld_options\n     global global_cc_options\n@@ -323,7 +324,12 @@ proc run_sim_test { name requested_machs } {\n \n \tset as_options \"$opts(as,$mach) -I$srcdir/$subdir\"\n \tif [info exists cpu_option] {\n-\t    set as_options \"$as_options $cpu_option=$mach\"\n+\t    if ![info exists cpu_option_sep] {\n+\t\tset sep \"=\"\n+\t    } {\n+\t\tset sep $cpu_option_sep\n+\t    }\n+\t    set as_options \"$as_options $cpu_option$sep$mach\"\n \t}\n \tregsub {(^ *| +)([^ ]+)} \"$as_options $global_as_options\" { -Wa,\\2} c_as_options\n "
    },
    {
      "sha": "2dc8d60bb9a92d998f0790efd9d5471cdb215d14",
      "filename": "sim/testsuite/v850/allinsns.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 19,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bbda248c504815990c07c8a9c411ae6c124d7c4b/sim/testsuite/v850/allinsns.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bbda248c504815990c07c8a9c411ae6c124d7c4b/sim/testsuite/v850/allinsns.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/v850/allinsns.exp?ref=bbda248c504815990c07c8a9c411ae6c124d7c4b",
      "patch": "@@ -1,19 +1,14 @@\n # v850 simulator testsuite.\n \n if [istarget v850*-*] {\n-    global opt\n+    # All machines.\n+    # Should add more cpus if the testsuite adds coverage for their insns, but\n+    # at the core level, there's no deviation beyond these two.\n+    set all_machs \"v850e v850\"\n \n-    # all machines\n-    switch -regexp -- $opt {\n-\t.*v850e.* {\n-\t    set all_machs \"v850e\"\n-\t}\n-\tdefault {\n-\t    set all_machs \"v850\"\n-\t}\n-    }\n     # gas doesn't support any '=' option for v850.\n-    #set cpu_option -m\n+    set cpu_option_sep \"\"\n+    set cpu_option -m\n \n     # The .cgs suffix is for \"cgen .s\".\n     foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n@@ -24,12 +19,6 @@ if [istarget v850*-*] {\n \t}\n \trun_sim_test $src $all_machs\n     }\n-}\n \n-#foreach var [lsort [info globals]] {\n-#    if [array exists ::$var] {\n-#\tputs [format \"%-27s %s\" $var Array:]\n-#\tcontinue\n-#    }\n-#    puts [format \"%-30s %s\" $var \"[set ::$var]\"]\n-#}\n+    unset cpu_option cpu_option_sep\n+}"
    }
  ]
}