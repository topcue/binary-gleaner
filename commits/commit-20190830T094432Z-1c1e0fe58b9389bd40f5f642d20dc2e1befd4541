{
  "sha": "1c1e0fe58b9389bd40f5f642d20dc2e1befd4541",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWMxZTBmZTU4YjkzODliZDQwZjVmNjQyZDIwZGMyZTFiZWZkNDU0MQ==",
  "commit": {
    "author": {
      "name": "Srinath Parvathaneni",
      "email": "srinath.parvathaneni@arm.com",
      "date": "2019-08-30T09:44:18Z"
    },
    "committer": {
      "name": "Srinath Parvathaneni",
      "email": "srinath.parvathaneni@arm.com",
      "date": "2019-08-30T09:44:32Z"
    },
    "message": "[PATCH][ARM][GAS]: Assembler support to interpret MVE VMOV instruction correctly.\n\nThis patch make changes to the assembler to encode MVE VMOV instruction \"a\" same as \"b\".\na: VMOV<c><q> <Dd>, <Dm>\nb: VMOV<c><q>.F64 <Dd>, <Dm>\n\ngas/ChangeLog:\n\n2019-08-30  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n\n\t* config/tc-arm.c (do_neon_mov): Modify \"if\" statement.\n\t* testsuite/gas/arm/mve-vmov-bad-3.d: New test.\n\t* testsuite/gas/arm/mve-vmov-bad-3.l: Likewise.\n\t* testsuite/gas/arm/mve-vmov-bad-3.s: Likewise.",
    "tree": {
      "sha": "0781866ff31b797ceec933a67ae7903d737a3998",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0781866ff31b797ceec933a67ae7903d737a3998"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1c1e0fe58b9389bd40f5f642d20dc2e1befd4541",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c1e0fe58b9389bd40f5f642d20dc2e1befd4541",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1c1e0fe58b9389bd40f5f642d20dc2e1befd4541",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c1e0fe58b9389bd40f5f642d20dc2e1befd4541/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "cd18a823d1ad0787cb0745bf71c7ba447db10c58",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd18a823d1ad0787cb0745bf71c7ba447db10c58",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cd18a823d1ad0787cb0745bf71c7ba447db10c58"
    }
  ],
  "stats": {
    "total": 87,
    "additions": 86,
    "deletions": 1
  },
  "files": [
    {
      "sha": "9273bb57836b62d066ab3efbd70c02231bcb1a97",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c1e0fe58b9389bd40f5f642d20dc2e1befd4541/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c1e0fe58b9389bd40f5f642d20dc2e1befd4541/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=1c1e0fe58b9389bd40f5f642d20dc2e1befd4541",
      "patch": "@@ -19859,7 +19859,13 @@ do_neon_mov (void)\n       et = neon_check_type (2, rs, N_EQK, N_F64 | N_KEY);\n       /* It is not an error here if no type is given.  */\n       inst.error = NULL;\n-      if (et.type == NT_float && et.size == 64)\n+\n+      /* In MVE we interpret the following instructions as same, so ignoring\n+\t the following type (float) and size (64) checks.\n+\t a: VMOV<c><q> <Dd>, <Dm>\n+\t b: VMOV<c><q>.F64 <Dd>, <Dm>.  */\n+      if ((et.type == NT_float && et.size == 64)\n+\t  || (ARM_CPU_HAS_FEATURE (cpu_variant, mve_ext)))\n \t{\n \t  do_vfp_nsyn_opcode (\"fcpyd\");\n \t  break;"
    },
    {
      "sha": "de8dabe79b2963d14230a112549f5cc6ebf1ce1e",
      "filename": "gas/testsuite/gas/arm/mve-vmov-1.d",
      "status": "modified",
      "additions": 72,
      "deletions": 0,
      "changes": 72,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c1e0fe58b9389bd40f5f642d20dc2e1befd4541/gas/testsuite/gas/arm/mve-vmov-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c1e0fe58b9389bd40f5f642d20dc2e1befd4541/gas/testsuite/gas/arm/mve-vmov-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmov-1.d?ref=1c1e0fe58b9389bd40f5f642d20dc2e1befd4541",
      "patch": "@@ -4179,3 +4179,75 @@ Disassembly of section .text:\n [^>]*> ef24 e154 \tvmov\tq7, q2\n [^>]*> ef28 e158 \tvmov\tq7, q4\n [^>]*> ef2e e15e \tvmov\tq7, q7\n+[^>]*> eeb0 0b40 \tvmov.f64\td0, d0\n+[^>]*> eeb0 0b40 \tvmov.f64\td0, d0\n+[^>]*> eeb0 0b41 \tvmov.f64\td0, d1\n+[^>]*> eeb0 0b41 \tvmov.f64\td0, d1\n+[^>]*> eeb0 0b42 \tvmov.f64\td0, d2\n+[^>]*> eeb0 0b42 \tvmov.f64\td0, d2\n+[^>]*> eeb0 0b44 \tvmov.f64\td0, d4\n+[^>]*> eeb0 0b44 \tvmov.f64\td0, d4\n+[^>]*> eeb0 0b48 \tvmov.f64\td0, d8\n+[^>]*> eeb0 0b48 \tvmov.f64\td0, d8\n+[^>]*> eeb0 0b4f \tvmov.f64\td0, d15\n+[^>]*> eeb0 0b4f \tvmov.f64\td0, d15\n+[^>]*> eeb0 1b40 \tvmov.f64\td1, d0\n+[^>]*> eeb0 1b40 \tvmov.f64\td1, d0\n+[^>]*> eeb0 1b41 \tvmov.f64\td1, d1\n+[^>]*> eeb0 1b41 \tvmov.f64\td1, d1\n+[^>]*> eeb0 1b42 \tvmov.f64\td1, d2\n+[^>]*> eeb0 1b42 \tvmov.f64\td1, d2\n+[^>]*> eeb0 1b44 \tvmov.f64\td1, d4\n+[^>]*> eeb0 1b44 \tvmov.f64\td1, d4\n+[^>]*> eeb0 1b48 \tvmov.f64\td1, d8\n+[^>]*> eeb0 1b48 \tvmov.f64\td1, d8\n+[^>]*> eeb0 1b4f \tvmov.f64\td1, d15\n+[^>]*> eeb0 1b4f \tvmov.f64\td1, d15\n+[^>]*> eeb0 2b40 \tvmov.f64\td2, d0\n+[^>]*> eeb0 2b40 \tvmov.f64\td2, d0\n+[^>]*> eeb0 2b41 \tvmov.f64\td2, d1\n+[^>]*> eeb0 2b41 \tvmov.f64\td2, d1\n+[^>]*> eeb0 2b42 \tvmov.f64\td2, d2\n+[^>]*> eeb0 2b42 \tvmov.f64\td2, d2\n+[^>]*> eeb0 2b44 \tvmov.f64\td2, d4\n+[^>]*> eeb0 2b44 \tvmov.f64\td2, d4\n+[^>]*> eeb0 2b48 \tvmov.f64\td2, d8\n+[^>]*> eeb0 2b48 \tvmov.f64\td2, d8\n+[^>]*> eeb0 2b4f \tvmov.f64\td2, d15\n+[^>]*> eeb0 2b4f \tvmov.f64\td2, d15\n+[^>]*> eeb0 4b40 \tvmov.f64\td4, d0\n+[^>]*> eeb0 4b40 \tvmov.f64\td4, d0\n+[^>]*> eeb0 4b41 \tvmov.f64\td4, d1\n+[^>]*> eeb0 4b41 \tvmov.f64\td4, d1\n+[^>]*> eeb0 4b42 \tvmov.f64\td4, d2\n+[^>]*> eeb0 4b42 \tvmov.f64\td4, d2\n+[^>]*> eeb0 4b44 \tvmov.f64\td4, d4\n+[^>]*> eeb0 4b44 \tvmov.f64\td4, d4\n+[^>]*> eeb0 4b48 \tvmov.f64\td4, d8\n+[^>]*> eeb0 4b48 \tvmov.f64\td4, d8\n+[^>]*> eeb0 4b4f \tvmov.f64\td4, d15\n+[^>]*> eeb0 4b4f \tvmov.f64\td4, d15\n+[^>]*> eeb0 8b40 \tvmov.f64\td8, d0\n+[^>]*> eeb0 8b40 \tvmov.f64\td8, d0\n+[^>]*> eeb0 8b41 \tvmov.f64\td8, d1\n+[^>]*> eeb0 8b41 \tvmov.f64\td8, d1\n+[^>]*> eeb0 8b42 \tvmov.f64\td8, d2\n+[^>]*> eeb0 8b42 \tvmov.f64\td8, d2\n+[^>]*> eeb0 8b44 \tvmov.f64\td8, d4\n+[^>]*> eeb0 8b44 \tvmov.f64\td8, d4\n+[^>]*> eeb0 8b48 \tvmov.f64\td8, d8\n+[^>]*> eeb0 8b48 \tvmov.f64\td8, d8\n+[^>]*> eeb0 8b4f \tvmov.f64\td8, d15\n+[^>]*> eeb0 8b4f \tvmov.f64\td8, d15\n+[^>]*> eeb0 fb40 \tvmov.f64\td15, d0\n+[^>]*> eeb0 fb40 \tvmov.f64\td15, d0\n+[^>]*> eeb0 fb41 \tvmov.f64\td15, d1\n+[^>]*> eeb0 fb41 \tvmov.f64\td15, d1\n+[^>]*> eeb0 fb42 \tvmov.f64\td15, d2\n+[^>]*> eeb0 fb42 \tvmov.f64\td15, d2\n+[^>]*> eeb0 fb44 \tvmov.f64\td15, d4\n+[^>]*> eeb0 fb44 \tvmov.f64\td15, d4\n+[^>]*> eeb0 fb48 \tvmov.f64\td15, d8\n+[^>]*> eeb0 fb48 \tvmov.f64\td15, d8\n+[^>]*> eeb0 fb4f \tvmov.f64\td15, d15\n+[^>]*> eeb0 fb4f \tvmov.f64\td15, d15"
    },
    {
      "sha": "57ca47d96da0797c1319cb22b0be847e8bf10e5b",
      "filename": "gas/testsuite/gas/arm/mve-vmov-1.s",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c1e0fe58b9389bd40f5f642d20dc2e1befd4541/gas/testsuite/gas/arm/mve-vmov-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c1e0fe58b9389bd40f5f642d20dc2e1befd4541/gas/testsuite/gas/arm/mve-vmov-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmov-1.s?ref=1c1e0fe58b9389bd40f5f642d20dc2e1befd4541",
      "patch": "@@ -136,3 +136,10 @@ vmov.i64 q0, #255 @ 0x000000000000000FF\n vmov \\op1, \\op2\n .endr\n .endr\n+\n+.irp op1, d0, d1, d2, d4, d8, d15\n+.irp op2, d0, d1, d2, d4, d8, d15\n+vmov \\op1, \\op2\n+vmov.f64 \\op1, \\op2\n+.endr\n+.endr"
    }
  ]
}