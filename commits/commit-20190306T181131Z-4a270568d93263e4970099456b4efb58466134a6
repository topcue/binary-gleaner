{
  "sha": "4a270568d93263e4970099456b4efb58466134a6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGEyNzA1NjhkOTMyNjNlNDk3MDA5OTQ1NmI0ZWZiNTg0NjYxMzRhNg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-18T11:24:24Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-03-06T18:11:31Z"
    },
    "message": "gdb/fortran: Use TYPE_CODE_CHAR for character types\n\nSwitch to using TYPE_CODE_CHAR for character types.  This appears to\nhave little impact on the test results as gFortran uses the\nDW_TAG_string_type to represent all character variables (as far as I\ncan see).  The only place this has an impact is when the user casts a\nvariable to a character type, in which case GDB does now use the CHAR\ntype, and prints the variable as both a value and a character, for\nexample, before:\n\n    (gdb) p ((character) 97)\n    $1 = 97\n\nand after:\n\n    (gdb) p ((character) 97)\n    $1 = 97 'a'\n\ngdb/ChangeLog:\n\n\t* f-lang.c (build_fortran_types): Use TYPE_CODE_CHAR for character\n\ttypes.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.fortran/type-kinds.exp: Update expected results.",
    "tree": {
      "sha": "826ed6321c654560d167c5cf693f1c22bc9ea1da",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/826ed6321c654560d167c5cf693f1c22bc9ea1da"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4a270568d93263e4970099456b4efb58466134a6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a270568d93263e4970099456b4efb58466134a6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4a270568d93263e4970099456b4efb58466134a6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a270568d93263e4970099456b4efb58466134a6/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "067630bdb553bb889104e3b064e4551531ddcedc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/067630bdb553bb889104e3b064e4551531ddcedc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/067630bdb553bb889104e3b064e4551531ddcedc"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 11,
    "deletions": 2
  },
  "files": [
    {
      "sha": "e1fdda06aaa84c5922cf739d6a475b2462cd3af0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a270568d93263e4970099456b4efb58466134a6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a270568d93263e4970099456b4efb58466134a6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4a270568d93263e4970099456b4efb58466134a6",
      "patch": "@@ -1,3 +1,8 @@\n+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* f-lang.c (build_fortran_types): Use TYPE_CODE_CHAR for character\n+\ttypes.\n+\n 2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* f-exp.y (convert_to_kind_type): Handle integer (kind=8)."
    },
    {
      "sha": "c329d602e24348189f0737373222fbf626ffe778",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a270568d93263e4970099456b4efb58466134a6/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a270568d93263e4970099456b4efb58466134a6/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=4a270568d93263e4970099456b4efb58466134a6",
      "patch": "@@ -366,7 +366,7 @@ build_fortran_types (struct gdbarch *gdbarch)\n     = arch_type (gdbarch, TYPE_CODE_VOID, TARGET_CHAR_BIT, \"VOID\");\n \n   builtin_f_type->builtin_character\n-    = arch_integer_type (gdbarch, TARGET_CHAR_BIT, 0, \"character\");\n+    = arch_type (gdbarch, TYPE_CODE_CHAR, TARGET_CHAR_BIT, \"character\");\n \n   builtin_f_type->builtin_logical_s1\n     = arch_boolean_type (gdbarch, TARGET_CHAR_BIT, 1, \"logical*1\");"
    },
    {
      "sha": "87c491fb1ce0dcee3d84e0dfd0c94f6df7cc5b0f",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a270568d93263e4970099456b4efb58466134a6/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a270568d93263e4970099456b4efb58466134a6/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4a270568d93263e4970099456b4efb58466134a6",
      "patch": "@@ -1,3 +1,7 @@\n+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.fortran/type-kinds.exp: Update expected results.\n+\n 2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.fortran/type-kinds.exp: Test new integer type kind."
    },
    {
      "sha": "b5d4e7b5816e6c19b0f35278ae79666b65a4089a",
      "filename": "gdb/testsuite/gdb.fortran/type-kinds.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a270568d93263e4970099456b4efb58466134a6/gdb/testsuite/gdb.fortran/type-kinds.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a270568d93263e4970099456b4efb58466134a6/gdb/testsuite/gdb.fortran/type-kinds.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/type-kinds.exp?ref=4a270568d93263e4970099456b4efb58466134a6",
      "patch": "@@ -38,7 +38,7 @@ proc test_cast_1_to_type_kind {base_type type_kind cast_result size_result} {\n \n # Test parsing of `(kind=N)` type modifiers.\n proc test_basic_parsing_of_type_kinds {} {\n-    test_cast_1_to_type_kind \"character\" \"1\" \"1\" \"1\"\n+    test_cast_1_to_type_kind \"character\" \"1\" \"1 '\\\\\\\\001'\" \"1\"\n \n     test_cast_1_to_type_kind \"complex\" \"4\" \"\\\\(1,0\\\\)\" \"8\"\n     test_cast_1_to_type_kind \"complex\" \"8\" \"\\\\(1,0\\\\)\" \"16\""
    }
  ]
}