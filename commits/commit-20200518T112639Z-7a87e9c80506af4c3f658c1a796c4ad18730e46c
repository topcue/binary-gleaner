{
  "sha": "7a87e9c80506af4c3f658c1a796c4ad18730e46c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2E4N2U5YzgwNTA2YWY0YzNmNjU4YzFhNzk2YzRhZDE4NzMwZTQ2Yw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-18T11:14:30Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-18T11:26:39Z"
    },
    "message": "ECOFF slurp_relocs thinko\n\nIn git commit 806470a219 I swapped the order of internal vs. external\nrelocs memory allocation in ecoff_slurp_reloc_table, the idea being\nthat the external reloc size can be sanity checked against file size.\nHowever, that fails badly with bfd_alloc memory where releasing any\nblock also releases all more recently allocated blocks.\n\n\t* ecoff.c (ecoff_slurp_reloc_table): Malloc external_relocs so\n\tthey can be freed without also freeing internal_relocs.",
    "tree": {
      "sha": "62f34d831430b17768032929f48bbfa042881503",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/62f34d831430b17768032929f48bbfa042881503"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7a87e9c80506af4c3f658c1a796c4ad18730e46c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a87e9c80506af4c3f658c1a796c4ad18730e46c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7a87e9c80506af4c3f658c1a796c4ad18730e46c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a87e9c80506af4c3f658c1a796c4ad18730e46c/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ca859a893931d6fad8b35cf2c20afd43422a59fe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ca859a893931d6fad8b35cf2c20afd43422a59fe",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ca859a893931d6fad8b35cf2c20afd43422a59fe"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 8,
    "deletions": 3
  },
  "files": [
    {
      "sha": "0e5dec08d6afce8a878c5ffe2720a1fa7d9f08f4",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a87e9c80506af4c3f658c1a796c4ad18730e46c/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a87e9c80506af4c3f658c1a796c4ad18730e46c/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=7a87e9c80506af4c3f658c1a796c4ad18730e46c",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* ecoff.c (ecoff_slurp_reloc_table): Malloc external_relocs so\n+\tthey can be freed without also freeing internal_relocs.\n+\n 2020-05-18  Jaydeep Chauhan  <jaydeepchauhan1494@gmail.com>\n \n \tPR 25713"
    },
    {
      "sha": "82267a889df6ee880cbf0231e90609074abaeab3",
      "filename": "bfd/ecoff.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a87e9c80506af4c3f658c1a796c4ad18730e46c/bfd/ecoff.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a87e9c80506af4c3f658c1a796c4ad18730e46c/bfd/ecoff.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ecoff.c?ref=7a87e9c80506af4c3f658c1a796c4ad18730e46c",
      "patch": "@@ -1626,7 +1626,7 @@ ecoff_slurp_reloc_table (bfd *abfd,\n   amt = external_reloc_size * section->reloc_count;\n   if (bfd_seek (abfd, section->rel_filepos, SEEK_SET) != 0)\n     return FALSE;\n-  external_relocs = _bfd_alloc_and_read (abfd, amt, amt);\n+  external_relocs = _bfd_malloc_and_read (abfd, amt, amt);\n   if (external_relocs == NULL)\n     return FALSE;\n \n@@ -1635,7 +1635,7 @@ ecoff_slurp_reloc_table (bfd *abfd,\n   internal_relocs = (arelent *) bfd_alloc (abfd, amt);\n   if (internal_relocs == NULL)\n     {\n-      bfd_release (abfd, external_relocs);\n+      free (external_relocs);\n       return FALSE;\n     }\n \n@@ -1703,7 +1703,7 @@ ecoff_slurp_reloc_table (bfd *abfd,\n       (*backend->adjust_reloc_in) (abfd, &intern, rptr);\n     }\n \n-  bfd_release (abfd, external_relocs);\n+  free (external_relocs);\n \n   section->relocation = internal_relocs;\n "
    }
  ]
}