{
  "sha": "a6e6223e9a2f6ca77e064fbe8b326ac7fa205872",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTZlNjIyM2U5YTJmNmNhNzdlMDY0ZmJlOGIzMjZhYzdmYTIwNTg3Mg==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-08-13T17:29:13Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-08-13T22:10:06Z"
    },
    "message": "gdb: Implement native dumpcore function for NetBSD\n\nDefine supports_dumpcore and dumpcore for NetBSD, that wraps\nthe ptrace(2) call with the PT_DUMPCORE operation.\n\ngdb/ChangeLog:\n\n       * nbsd-nat.h (nbsd_nat_target::supports_dumpcore)\n       (nbsd_nat_target::dumpcore): New declarations.\n       * nbsd-nat.c (nbsd_nat_target::supports_dumpcore)\n       (nbsd_nat_target::dumpcore): New functions.",
    "tree": {
      "sha": "fccda1aacc4f32c154d438c0cf4fbd464a85fbd9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fccda1aacc4f32c154d438c0cf4fbd464a85fbd9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a6e6223e9a2f6ca77e064fbe8b326ac7fa205872",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a6e6223e9a2f6ca77e064fbe8b326ac7fa205872",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a6e6223e9a2f6ca77e064fbe8b326ac7fa205872",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a6e6223e9a2f6ca77e064fbe8b326ac7fa205872/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b31488a3449cd97297b0972c016016f1d4c60389",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b31488a3449cd97297b0972c016016f1d4c60389",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b31488a3449cd97297b0972c016016f1d4c60389"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 22,
    "deletions": 0
  },
  "files": [
    {
      "sha": "52c4d185695308efcf35616b003bd40fdd63d2c9",
      "filename": "gdb/nbsd-nat.c",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a6e6223e9a2f6ca77e064fbe8b326ac7fa205872/gdb/nbsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a6e6223e9a2f6ca77e064fbe8b326ac7fa205872/gdb/nbsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nbsd-nat.c?ref=a6e6223e9a2f6ca77e064fbe8b326ac7fa205872",
      "patch": "@@ -890,3 +890,23 @@ nbsd_nat_target::xfer_partial (enum target_object object,\n \t\t\t\t\t      len, xfered_len);\n     }\n }\n+\n+/* Implement the \"supports_dumpcore\" target_ops method.  */\n+\n+bool\n+nbsd_nat_target::supports_dumpcore ()\n+{\n+  return true;\n+}\n+\n+/* Implement the \"dumpcore\" target_ops method.  */\n+\n+void\n+nbsd_nat_target::dumpcore (const char *filename)\n+{\n+  pid_t pid = inferior_ptid.pid ();\n+\n+  if (ptrace (PT_DUMPCORE, pid, const_cast<char *>(filename),\n+\t      strlen (filename)) == -1)\n+    perror_with_name ((\"ptrace\"));\n+}"
    },
    {
      "sha": "b09d5b1e3bb600c3432702cc1564bfeef3526e1e",
      "filename": "gdb/nbsd-nat.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a6e6223e9a2f6ca77e064fbe8b326ac7fa205872/gdb/nbsd-nat.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a6e6223e9a2f6ca77e064fbe8b326ac7fa205872/gdb/nbsd-nat.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nbsd-nat.h?ref=a6e6223e9a2f6ca77e064fbe8b326ac7fa205872",
      "patch": "@@ -55,6 +55,8 @@ struct nbsd_nat_target : public inf_ptrace_target\n \t\t\t\t\tconst gdb_byte *writebuf,\n \t\t\t\t\tULONGEST offset, ULONGEST len,\n \t\t\t\t\tULONGEST *xfered_len) override;\n+  bool supports_dumpcore () override;\n+  void dumpcore (const char *filename) override;\n };\n \n #endif /* nbsd-nat.h */"
    }
  ]
}