{
  "sha": "11fac33796f43a177c1836bf8fb1f7cc60e3875e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTFmYWMzMzc5NmY0M2ExNzdjMTgzNmJmOGZiMWY3Y2M2MGUzODc1ZQ==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-17T22:33:40Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-17T23:04:47Z"
    },
    "message": "gdb.base/examine-backward.exp C++ify and Clang\n\nAdjust gdb.base/examine-backward.exp to let the testcase build and run\nas a C++ program, built with either G++ or Clang++.\n\nThe change to use unsigned char instead of plain char is to avoid\nnarrowing warnings:\n\n  gdb compile failed, src/gdb/testsuite/gdb.base/examine-backward.c:55:1: error: narrowing conversion of '227' from 'int' to 'char' [-Wnarrowing]\n     55 | };\n\t| ^\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/examine-backward.c (Barrier, TestStrings): Now unsigned\n\tchar array.\n\t(main): Add references to Barrier, TestStrings, TestStringsH and\n\tTestStringsW.\n\t* gdb.base/examine-backward.exp: Issue \"set print asm-demangle on\"\n\tand expect a full prototype in C++.",
    "tree": {
      "sha": "da989c8ffb85e2f0cf2a3506747e25e54285252e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/da989c8ffb85e2f0cf2a3506747e25e54285252e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/11fac33796f43a177c1836bf8fb1f7cc60e3875e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11fac33796f43a177c1836bf8fb1f7cc60e3875e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/11fac33796f43a177c1836bf8fb1f7cc60e3875e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11fac33796f43a177c1836bf8fb1f7cc60e3875e/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "52626c58267233b0e6a9807a80945467a019013b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52626c58267233b0e6a9807a80945467a019013b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/52626c58267233b0e6a9807a80945467a019013b"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 19,
    "deletions": 4
  },
  "files": [
    {
      "sha": "aee673f16212867c1fdc91c33dcad54f1087930c",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11fac33796f43a177c1836bf8fb1f7cc60e3875e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11fac33796f43a177c1836bf8fb1f7cc60e3875e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=11fac33796f43a177c1836bf8fb1f7cc60e3875e",
      "patch": "@@ -1,3 +1,12 @@\n+2020-09-17  Pedro Alves  <pedro@palves.net>\n+\n+\t* gdb.base/examine-backward.c (Barrier, TestStrings): Now unsigned\n+\tchar array.\n+\t(main): Add references to Barrier, TestStrings, TestStringsH and\n+\tTestStringsW.\n+\t* gdb.base/examine-backward.exp: Issue \"set print asm-demangle on\"\n+\tand expect a full prototype in C++.\n+\n 2020-09-17  Pedro Alves  <pedro@palves.net>\n \n \t* gdb.base/nested-addr.c (main): Add cast."
    },
    {
      "sha": "4db40959c48ee7c40b48c41a521b833b3028853d",
      "filename": "gdb/testsuite/gdb.base/examine-backward.c",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11fac33796f43a177c1836bf8fb1f7cc60e3875e/gdb/testsuite/gdb.base/examine-backward.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11fac33796f43a177c1836bf8fb1f7cc60e3875e/gdb/testsuite/gdb.base/examine-backward.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/examine-backward.c?ref=11fac33796f43a177c1836bf8fb1f7cc60e3875e",
      "patch": "@@ -36,11 +36,11 @@ literals.  The content of each array is the same as followings:\n    TestStrings, to avoid showing garbage when we look for strings\n    backwards from TestStrings.  */\n \n-const char Barrier[] = {\n+const unsigned char Barrier[] = {\n   0x00,\n };\n \n-const char TestStrings[] = {\n+const unsigned char TestStrings[] = {\n   0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,\n   0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50,\n   0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,\n@@ -92,6 +92,9 @@ const int TestStringsW[] = {\n int\n main (void)\n {\n+  /* Clang++ eliminates the variables if nothing references them.  */\n+  int dummy = Barrier[0] + TestStrings[0] + TestStringsH[0] + TestStringsW[0];\n+\n   /* Backward disassemble test requires at least 20 instructions in\n      this function.  Adding a simple bubble sort.  */\n   int i, j;"
    },
    {
      "sha": "b2d9fc1e1b2e19a99596a7f6e787eff942ce32b1",
      "filename": "gdb/testsuite/gdb.base/examine-backward.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11fac33796f43a177c1836bf8fb1f7cc60e3875e/gdb/testsuite/gdb.base/examine-backward.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11fac33796f43a177c1836bf8fb1f7cc60e3875e/gdb/testsuite/gdb.base/examine-backward.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/examine-backward.exp?ref=11fac33796f43a177c1836bf8fb1f7cc60e3875e",
      "patch": "@@ -345,9 +345,12 @@ with_test_prefix \"backward disassemble general\" {\n     set length_to_examine {1 2 3 4 10}\n     set disassmbly {}\n \n-    gdb_test \"x/i main\" \"0x\\[0-9a-fA-F\\]+ <main>:\\t.*\" \\\n+    gdb_test_no_output \"set print asm-demangle on\"\n+    set main_re \"main(\\\\(\\\\))?\"\n+\n+    gdb_test \"x/i main\" \"0x\\[0-9a-fA-F\\]+ <$main_re>:\\t.*\" \\\n         \"move the current position to main (x/i)\"\n-    gdb_test \"x/-i\" \"0x\\[0-9a-fA-F\\]+ <main>:\\t.*\" \\\n+    gdb_test \"x/-i\" \"0x\\[0-9a-fA-F\\]+ <$main_re>:\\t.*\" \\\n         \"move the current position to main (x/-i)\"\n     for {set i 0} {$i < [llength $length_to_examine]} {incr i} {\n         set len [lindex $length_to_examine $i]"
    }
  ]
}