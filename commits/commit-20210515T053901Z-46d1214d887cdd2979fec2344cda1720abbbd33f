{
  "sha": "46d1214d887cdd2979fec2344cda1720abbbd33f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDZkMTIxNGQ4ODdjZGQyOTc5ZmVjMjM0NGNkYTE3MjBhYmJiZDMzZg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-15T05:36:28Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-15T05:39:01Z"
    },
    "message": "get_line_filename_and_dirname\n\n\t* dwarf.c (get_line_filename_and_dirname): Delete initial_length_size.\n\tSimplify length sanity check, and check for too small lengths.\n\tConstrain data reads to header length.  Avoid pointer UB.",
    "tree": {
      "sha": "21481cb28334fad48ebabe585cbcb2eca50417c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/21481cb28334fad48ebabe585cbcb2eca50417c2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/46d1214d887cdd2979fec2344cda1720abbbd33f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46d1214d887cdd2979fec2344cda1720abbbd33f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/46d1214d887cdd2979fec2344cda1720abbbd33f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46d1214d887cdd2979fec2344cda1720abbbd33f/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c03df92247333e5bf65bc663fab80fe7a87c0370",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c03df92247333e5bf65bc663fab80fe7a87c0370",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c03df92247333e5bf65bc663fab80fe7a87c0370"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 28,
    "deletions": 15
  },
  "files": [
    {
      "sha": "ecf389af9fd32c1549007eeee6ac44b65fd6dc08",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46d1214d887cdd2979fec2344cda1720abbbd33f/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46d1214d887cdd2979fec2344cda1720abbbd33f/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=46d1214d887cdd2979fec2344cda1720abbbd33f",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf.c (get_line_filename_and_dirname): Delete initial_length_size.\n+\tSimplify length sanity check, and check for too small lengths.\n+\tConstrain data reads to header length.  Avoid pointer UB.\n+\n 2021-05-15  Alan Modra  <amodra@gmail.com>\n \n \t* dwarf.c (display_debug_macinfo): Print strings that might not"
    },
    {
      "sha": "9d7829122087cdbb28019a0fcfc81af5d2cddea6",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 22,
      "deletions": 15,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46d1214d887cdd2979fec2344cda1720abbbd33f/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46d1214d887cdd2979fec2344cda1720abbbd33f/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=46d1214d887cdd2979fec2344cda1720abbbd33f",
      "patch": "@@ -5827,7 +5827,7 @@ get_line_filename_and_dirname (dwarf_vma line_offset,\n {\n   struct dwarf_section *section = &debug_displays [line].section;\n   unsigned char *hdrptr, *dirtable, *file_name;\n-  unsigned int offset_size, initial_length_size;\n+  unsigned int offset_size;\n   unsigned int version, opcode_base;\n   dwarf_vma length, diridx;\n   const unsigned char * end;\n@@ -5847,16 +5847,14 @@ get_line_filename_and_dirname (dwarf_vma line_offset,\n       /* This section is 64-bit DWARF 3.  */\n       SAFE_BYTE_GET_AND_INC (length, hdrptr, 8, end);\n       offset_size = 8;\n-      initial_length_size = 12;\n     }\n   else\n-    {\n-      offset_size = 4;\n-      initial_length_size = 4;\n-    }\n-  if (length + initial_length_size < length\n-      || length + initial_length_size > section->size)\n+    offset_size = 4;\n+\n+  if (length > (size_t) (end - hdrptr)\n+      || length < 2 + offset_size + 1 + 3 + 1)\n     return NULL;\n+  end = hdrptr + length;\n \n   SAFE_BYTE_GET_AND_INC (version, hdrptr, 2, end);\n   if (version != 2 && version != 3 && version != 4)\n@@ -5867,18 +5865,19 @@ get_line_filename_and_dirname (dwarf_vma line_offset,\n   hdrptr += 3;\t\t    /* Skip default_is_stmt, line_base, line_range.  */\n \n   SAFE_BYTE_GET_AND_INC (opcode_base, hdrptr, 1, end);\n-  if (opcode_base == 0)\n+  if (opcode_base == 0\n+      || opcode_base - 1 >= (size_t) (end - hdrptr))\n     return NULL;\n \n   hdrptr += opcode_base - 1;\n-  if (hdrptr >= end)\n-    return NULL;\n \n   dirtable = hdrptr;\n   /* Skip over dirname table.  */\n   while (*hdrptr != '\\0')\n     {\n-      hdrptr += strnlen ((char *) hdrptr, end - hdrptr) + 1;\n+      hdrptr += strnlen ((char *) hdrptr, end - hdrptr);\n+      if (hdrptr < end)\n+\thdrptr++;\n       if (hdrptr >= end)\n \treturn NULL;\n     }\n@@ -5887,7 +5886,9 @@ get_line_filename_and_dirname (dwarf_vma line_offset,\n   /* Now skip over preceding filename table entries.  */\n   for (; hdrptr < end && *hdrptr != '\\0' && fileidx > 1; fileidx--)\n     {\n-      hdrptr += strnlen ((char *) hdrptr, end - hdrptr) + 1;\n+      hdrptr += strnlen ((char *) hdrptr, end - hdrptr);\n+      if (hdrptr < end)\n+\thdrptr++;\n       SKIP_ULEB (hdrptr, end);\n       SKIP_ULEB (hdrptr, end);\n       SKIP_ULEB (hdrptr, end);\n@@ -5896,14 +5897,20 @@ get_line_filename_and_dirname (dwarf_vma line_offset,\n     return NULL;\n \n   file_name = hdrptr;\n-  hdrptr += strnlen ((char *) hdrptr, end - hdrptr) + 1;\n+  hdrptr += strnlen ((char *) hdrptr, end - hdrptr);\n+  if (hdrptr < end)\n+    hdrptr++;\n   if (hdrptr >= end)\n     return NULL;\n   READ_ULEB (diridx, hdrptr, end);\n   if (diridx == 0)\n     return file_name;\n   for (; dirtable < end && *dirtable != '\\0' && diridx > 1; diridx--)\n-    dirtable += strnlen ((char *) dirtable, end - dirtable) + 1;\n+    {\n+      dirtable += strnlen ((char *) dirtable, end - dirtable);\n+      if (dirtable < end)\n+\tdirtable++;\n+    }\n   if (dirtable >= end || *dirtable == '\\0')\n     return NULL;\n   *dir_name = dirtable;"
    }
  ]
}