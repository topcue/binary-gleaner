{
  "sha": "40e1d303cedca7d67f6219686f06b9750659beab",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDBlMWQzMDNjZWRjYTdkNjdmNjIxOTY4NmYwNmI5NzUwNjU5YmVhYg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-07-03T00:08:40Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-07-05T10:34:21Z"
    },
    "message": "PR28047, readelf crash due to assertion failure\n\nDW_FORM_ref1, DW_FORM_ref2, DW_FORM_ref4, DW_FORM_ref1, and\nDW_FORM_ref_udata are all supposed to be within the containing unit.\n\n\tPR 28047\n\t* dwarf.c (get_type_abbrev_from_form): Add cu_end parameter.\n\tCheck DW_FORM_ref1 etc. arg against cu_end rather than end of\n\tsection.  Adjust all callers.",
    "tree": {
      "sha": "416c08ac006b675ef6da56119163e7100e7a1ed0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/416c08ac006b675ef6da56119163e7100e7a1ed0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/40e1d303cedca7d67f6219686f06b9750659beab",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/40e1d303cedca7d67f6219686f06b9750659beab",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/40e1d303cedca7d67f6219686f06b9750659beab",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/40e1d303cedca7d67f6219686f06b9750659beab/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "74ace054855321bc5271dd7b354131cd0b71333a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74ace054855321bc5271dd7b354131cd0b71333a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/74ace054855321bc5271dd7b354131cd0b71333a"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 17,
    "deletions": 6
  },
  "files": [
    {
      "sha": "77b7ac711e0300787f8e3db8aff5bae895205651",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/40e1d303cedca7d67f6219686f06b9750659beab/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/40e1d303cedca7d67f6219686f06b9750659beab/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=40e1d303cedca7d67f6219686f06b9750659beab",
      "patch": "@@ -1,3 +1,10 @@\n+2021-07-05  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 28047\n+\t* dwarf.c (get_type_abbrev_from_form): Add cu_end parameter.\n+\tCheck DW_FORM_ref1 etc. arg against cu_end rather than end of\n+\tsection.  Adjust all callers.\n+\n 2021-07-03  Nick Clifton  <nickc@redhat.com>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "ad1ee97d9bf54781a0cdc6fc18790a416b263110",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/40e1d303cedca7d67f6219686f06b9750659beab/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/40e1d303cedca7d67f6219686f06b9750659beab/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=40e1d303cedca7d67f6219686f06b9750659beab",
      "patch": "@@ -2066,6 +2066,7 @@ static abbrev_entry *\n get_type_abbrev_from_form (unsigned long form,\n \t\t\t   unsigned long uvalue,\n \t\t\t   dwarf_vma cu_offset,\n+\t\t\t   unsigned char *cu_end,\n \t\t\t   const struct dwarf_section *section,\n \t\t\t   unsigned long *abbrev_num_return,\n \t\t\t   unsigned char **data_return,\n@@ -2106,10 +2107,10 @@ get_type_abbrev_from_form (unsigned long form,\n     case DW_FORM_ref4:\n     case DW_FORM_ref8:\n     case DW_FORM_ref_udata:\n-      if (uvalue + cu_offset > section->size)\n+      if (uvalue + cu_offset > (size_t) (cu_end - section->start))\n \t{\n-\t  warn (_(\"Unable to resolve ref form: uvalue %lx + cu_offset %lx > section size %lx\\n\"),\n-\t\tuvalue, (long) cu_offset, (long) section->size);\n+\t  warn (_(\"Unable to resolve ref form: uvalue %lx + cu_offset %lx > CU size %lx\\n\"),\n+\t\tuvalue, (long) cu_offset, (long) (cu_end - section->start));\n \t  return NULL;\n \t}\n       uvalue += cu_offset;\n@@ -2225,6 +2226,7 @@ get_type_signedness (abbrev_entry *entry,\n \t    type_abbrev = get_type_abbrev_from_form (attr->form,\n \t\t\t\t\t\t     uvalue,\n \t\t\t\t\t\t     cu_offset,\n+\t\t\t\t\t\t     end,\n \t\t\t\t\t\t     section,\n \t\t\t\t\t\t     NULL /* abbrev num return */,\n \t\t\t\t\t\t     &type_data,\n@@ -2963,8 +2965,10 @@ read_and_display_attr_value (unsigned long           attribute,\n \t  unsigned char *type_data;\n \t  abbrev_map *map;\n \n-\t  type_abbrev = get_type_abbrev_from_form (form, uvalue, cu_offset,\n-\t\t\t\t\t\t   section, NULL, &type_data, &map);\n+\t  type_abbrev = get_type_abbrev_from_form (form, uvalue,\n+\t\t\t\t\t\t   cu_offset, end,\n+\t\t\t\t\t\t   section, NULL,\n+\t\t\t\t\t\t   &type_data, &map);\n \t  if (type_abbrev != NULL)\n \t    {\n \t      get_type_signedness (type_abbrev, section, type_data,\n@@ -3297,7 +3301,7 @@ read_and_display_attr_value (unsigned long           attribute,\n \tunsigned long abbrev_number;\n \tabbrev_entry *entry;\n \n-\tentry = get_type_abbrev_from_form (form, uvalue, cu_offset,\n+\tentry = get_type_abbrev_from_form (form, uvalue, cu_offset, end,\n \t\t\t\t\t   section, & abbrev_number, NULL, NULL);\n \tif (entry == NULL)\n \t  {"
    }
  ]
}