{
  "sha": "a1ea4cacd4ac309cdcd13184d225190c80d628ee",
  "node_id": "C_kwDOANOeidoAKGExZWE0Y2FjZDRhYzMwOWNkY2QxMzE4NGQyMjUxOTBjODBkNjI4ZWU",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-26T20:26:58Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-05T18:08:44Z"
    },
    "message": "Use filtered output for gdbarch dump\n\nThis changes gdbarch dumping to use filtered output.  This seems a bit\nbetter to me, both on the principle that this is an ordinary command,\nand because the output can be voluminous, so it may be nice to stop in\nthe middle.",
    "tree": {
      "sha": "3f3fa1fd6b900ca571f3702e083ce5f35c9b5ad1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3f3fa1fd6b900ca571f3702e083ce5f35c9b5ad1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a1ea4cacd4ac309cdcd13184d225190c80d628ee",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1ea4cacd4ac309cdcd13184d225190c80d628ee",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a1ea4cacd4ac309cdcd13184d225190c80d628ee",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1ea4cacd4ac309cdcd13184d225190c80d628ee/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d53fd721a18f8c827aa69ffbd15abd99641b5e20",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d53fd721a18f8c827aa69ffbd15abd99641b5e20",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d53fd721a18f8c827aa69ffbd15abd99641b5e20"
    }
  ],
  "stats": {
    "total": 714,
    "additions": 357,
    "deletions": 357
  },
  "files": [
    {
      "sha": "63d626f90ace55f80c5d3e3d557993d905a90da1",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=a1ea4cacd4ac309cdcd13184d225190c80d628ee",
      "patch": "@@ -3652,8 +3652,8 @@ aarch64_dump_tdep (struct gdbarch *gdbarch, struct ui_file *file)\n   if (tdep == NULL)\n     return;\n \n-  fprintf_unfiltered (file, _(\"aarch64_dump_tdep: Lowest pc = 0x%s\"),\n-\t\t      paddress (gdbarch, tdep->lowest_pc));\n+  fprintf_filtered (file, _(\"aarch64_dump_tdep: Lowest pc = 0x%s\"),\n+\t\t    paddress (gdbarch, tdep->lowest_pc));\n }\n \n #if GDB_SELF_TEST"
    },
    {
      "sha": "90ec323d05e73dacd470f915c09abf92bf3cb123",
      "filename": "gdb/arc-tdep.c",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/arc-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/arc-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arc-tdep.c?ref=a1ea4cacd4ac309cdcd13184d225190c80d628ee",
      "patch": "@@ -2456,16 +2456,16 @@ arc_dump_tdep (struct gdbarch *gdbarch, struct ui_file *file)\n {\n   arc_gdbarch_tdep *tdep = (arc_gdbarch_tdep *) gdbarch_tdep (gdbarch);\n \n-  fprintf_unfiltered (file, \"arc_dump_tdep: jb_pc = %i\\n\", tdep->jb_pc);\n-\n-  fprintf_unfiltered (file, \"arc_dump_tdep: is_sigtramp = <%s>\\n\",\n-\t\t      host_address_to_string (tdep->is_sigtramp));\n-  fprintf_unfiltered (file, \"arc_dump_tdep: sigcontext_addr = <%s>\\n\",\n-\t\t      host_address_to_string (tdep->sigcontext_addr));\n-  fprintf_unfiltered (file, \"arc_dump_tdep: sc_reg_offset = <%s>\\n\",\n-\t\t      host_address_to_string (tdep->sc_reg_offset));\n-  fprintf_unfiltered (file, \"arc_dump_tdep: sc_num_regs = %d\\n\",\n-\t\t      tdep->sc_num_regs);\n+  fprintf_filtered (file, \"arc_dump_tdep: jb_pc = %i\\n\", tdep->jb_pc);\n+\n+  fprintf_filtered (file, \"arc_dump_tdep: is_sigtramp = <%s>\\n\",\n+\t\t    host_address_to_string (tdep->is_sigtramp));\n+  fprintf_filtered (file, \"arc_dump_tdep: sigcontext_addr = <%s>\\n\",\n+\t\t    host_address_to_string (tdep->sigcontext_addr));\n+  fprintf_filtered (file, \"arc_dump_tdep: sc_reg_offset = <%s>\\n\",\n+\t\t    host_address_to_string (tdep->sc_reg_offset));\n+  fprintf_filtered (file, \"arc_dump_tdep: sc_num_regs = %d\\n\",\n+\t\t    tdep->sc_num_regs);\n }\n \n /* This command accepts single argument - address of instruction to"
    },
    {
      "sha": "f6bd76a354d33bf9626eaeb60d8fcaff7eefa97d",
      "filename": "gdb/arm-tdep.c",
      "status": "modified",
      "additions": 32,
      "deletions": 32,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/arm-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/arm-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.c?ref=a1ea4cacd4ac309cdcd13184d225190c80d628ee",
      "patch": "@@ -9717,38 +9717,38 @@ arm_dump_tdep (struct gdbarch *gdbarch, struct ui_file *file)\n   if (tdep == NULL)\n     return;\n \n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: fp_model = %i\\n\"),\n-\t\t      (int) tdep->fp_model);\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: have_fpa_registers = %i\\n\"),\n-\t\t      (int) tdep->have_fpa_registers);\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: have_wmmx_registers = %i\\n\"),\n-\t\t      (int) tdep->have_wmmx_registers);\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: vfp_register_count = %i\\n\"),\n-\t\t      (int) tdep->vfp_register_count);\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: have_s_pseudos = %s\\n\"),\n-\t\t      tdep->have_s_pseudos? \"true\" : \"false\");\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: s_pseudo_base = %i\\n\"),\n-\t\t      (int) tdep->s_pseudo_base);\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: s_pseudo_count = %i\\n\"),\n-\t\t      (int) tdep->s_pseudo_count);\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: have_q_pseudos = %s\\n\"),\n-\t\t      tdep->have_q_pseudos? \"true\" : \"false\");\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: q_pseudo_base = %i\\n\"),\n-\t\t      (int) tdep->q_pseudo_base);\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: q_pseudo_count = %i\\n\"),\n-\t\t      (int) tdep->q_pseudo_count);\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: have_neon = %i\\n\"),\n-\t\t      (int) tdep->have_neon);\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: have_mve = %s\\n\"),\n-\t\t      tdep->have_mve? \"yes\" : \"no\");\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: mve_vpr_regnum = %i\\n\"),\n-\t\t      tdep->mve_vpr_regnum);\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: mve_pseudo_base = %i\\n\"),\n-\t\t      tdep->mve_pseudo_base);\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: mve_pseudo_count = %i\\n\"),\n-\t\t      tdep->mve_pseudo_count);\n-  fprintf_unfiltered (file, _(\"arm_dump_tdep: Lowest pc = 0x%lx\\n\"),\n-\t\t      (unsigned long) tdep->lowest_pc);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: fp_model = %i\\n\"),\n+\t\t    (int) tdep->fp_model);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: have_fpa_registers = %i\\n\"),\n+\t\t    (int) tdep->have_fpa_registers);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: have_wmmx_registers = %i\\n\"),\n+\t\t    (int) tdep->have_wmmx_registers);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: vfp_register_count = %i\\n\"),\n+\t\t    (int) tdep->vfp_register_count);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: have_s_pseudos = %s\\n\"),\n+\t\t    tdep->have_s_pseudos? \"true\" : \"false\");\n+  fprintf_filtered (file, _(\"arm_dump_tdep: s_pseudo_base = %i\\n\"),\n+\t\t    (int) tdep->s_pseudo_base);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: s_pseudo_count = %i\\n\"),\n+\t\t    (int) tdep->s_pseudo_count);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: have_q_pseudos = %s\\n\"),\n+\t\t    tdep->have_q_pseudos? \"true\" : \"false\");\n+  fprintf_filtered (file, _(\"arm_dump_tdep: q_pseudo_base = %i\\n\"),\n+\t\t    (int) tdep->q_pseudo_base);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: q_pseudo_count = %i\\n\"),\n+\t\t    (int) tdep->q_pseudo_count);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: have_neon = %i\\n\"),\n+\t\t    (int) tdep->have_neon);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: have_mve = %s\\n\"),\n+\t\t    tdep->have_mve? \"yes\" : \"no\");\n+  fprintf_filtered (file, _(\"arm_dump_tdep: mve_vpr_regnum = %i\\n\"),\n+\t\t    tdep->mve_vpr_regnum);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: mve_pseudo_base = %i\\n\"),\n+\t\t    tdep->mve_pseudo_base);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: mve_pseudo_count = %i\\n\"),\n+\t\t    tdep->mve_pseudo_count);\n+  fprintf_filtered (file, _(\"arm_dump_tdep: Lowest pc = 0x%lx\\n\"),\n+\t\t    (unsigned long) tdep->lowest_pc);\n }\n \n #if GDB_SELF_TEST"
    },
    {
      "sha": "9698d32069dfd78677a2e31610d7a73f3ba57d05",
      "filename": "gdb/cris-tdep.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/cris-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/cris-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cris-tdep.c?ref=a1ea4cacd4ac309cdcd13184d225190c80d628ee",
      "patch": "@@ -3863,12 +3863,12 @@ cris_dump_tdep (struct gdbarch *gdbarch, struct ui_file *file)\n   cris_gdbarch_tdep *tdep = (cris_gdbarch_tdep *) gdbarch_tdep (gdbarch);\n   if (tdep != NULL)\n     {\n-      fprintf_unfiltered (file, \"cris_dump_tdep: tdep->cris_version = %i\\n\",\n-\t\t\t  tdep->cris_version);\n-      fprintf_unfiltered (file, \"cris_dump_tdep: tdep->cris_mode = %s\\n\",\n-\t\t\t  tdep->cris_mode);\n-      fprintf_unfiltered (file, \"cris_dump_tdep: tdep->cris_dwarf2_cfi = %i\\n\",\n-\t\t\t  tdep->cris_dwarf2_cfi);\n+      fprintf_filtered (file, \"cris_dump_tdep: tdep->cris_version = %i\\n\",\n+\t\t\ttdep->cris_version);\n+      fprintf_filtered (file, \"cris_dump_tdep: tdep->cris_mode = %s\\n\",\n+\t\t\ttdep->cris_mode);\n+      fprintf_filtered (file, \"cris_dump_tdep: tdep->cris_dwarf2_cfi = %i\\n\",\n+\t\t\ttdep->cris_dwarf2_cfi);\n     }\n }\n "
    },
    {
      "sha": "3f7a1e3578913a8db7d5791d47d1cdfc602ab191",
      "filename": "gdb/gdbarch.c",
      "status": "modified",
      "additions": 267,
      "deletions": 267,
      "changes": 534,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/gdbarch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/gdbarch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.c?ref=a1ea4cacd4ac309cdcd13184d225190c80d628ee",
      "patch": "@@ -613,805 +613,805 @@ gdbarch_dump (struct gdbarch *gdbarch, struct ui_file *file)\n #if defined (GDB_NM_FILE)\n   gdb_nm_file = GDB_NM_FILE;\n #endif\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n \t\t      \"gdbarch_dump: GDB_NM_FILE = %s\\n\",\n \t\t      gdb_nm_file);\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: bfd_arch_info = %s\\n\",\n                       gdbarch_bfd_arch_info (gdbarch)->printable_name);\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: byte_order = %s\\n\",\n                       plongest (gdbarch->byte_order));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: byte_order_for_code = %s\\n\",\n                       plongest (gdbarch->byte_order_for_code));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: osabi = %s\\n\",\n                       plongest (gdbarch->osabi));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: target_desc = %s\\n\",\n                       host_address_to_string (gdbarch->target_desc));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: short_bit = %s\\n\",\n                       plongest (gdbarch->short_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: int_bit = %s\\n\",\n                       plongest (gdbarch->int_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: long_bit = %s\\n\",\n                       plongest (gdbarch->long_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: long_long_bit = %s\\n\",\n                       plongest (gdbarch->long_long_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: bfloat16_bit = %s\\n\",\n                       plongest (gdbarch->bfloat16_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: bfloat16_format = %s\\n\",\n                       pformat (gdbarch->bfloat16_format));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: half_bit = %s\\n\",\n                       plongest (gdbarch->half_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: half_format = %s\\n\",\n                       pformat (gdbarch->half_format));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: float_bit = %s\\n\",\n                       plongest (gdbarch->float_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: float_format = %s\\n\",\n                       pformat (gdbarch->float_format));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: double_bit = %s\\n\",\n                       plongest (gdbarch->double_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: double_format = %s\\n\",\n                       pformat (gdbarch->double_format));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: long_double_bit = %s\\n\",\n                       plongest (gdbarch->long_double_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: long_double_format = %s\\n\",\n                       pformat (gdbarch->long_double_format));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: wchar_bit = %s\\n\",\n                       plongest (gdbarch->wchar_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: wchar_signed = %s\\n\",\n                       plongest (gdbarch->wchar_signed));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: floatformat_for_type = <%s>\\n\",\n                       host_address_to_string (gdbarch->floatformat_for_type));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: ptr_bit = %s\\n\",\n                       plongest (gdbarch->ptr_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: addr_bit = %s\\n\",\n                       plongest (gdbarch->addr_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: dwarf2_addr_size = %s\\n\",\n                       plongest (gdbarch->dwarf2_addr_size));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: char_signed = %s\\n\",\n                       plongest (gdbarch->char_signed));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_read_pc_p() = %d\\n\",\n                       gdbarch_read_pc_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: read_pc = <%s>\\n\",\n                       host_address_to_string (gdbarch->read_pc));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_write_pc_p() = %d\\n\",\n                       gdbarch_write_pc_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: write_pc = <%s>\\n\",\n                       host_address_to_string (gdbarch->write_pc));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: virtual_frame_pointer = <%s>\\n\",\n                       host_address_to_string (gdbarch->virtual_frame_pointer));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_pseudo_register_read_p() = %d\\n\",\n                       gdbarch_pseudo_register_read_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: pseudo_register_read = <%s>\\n\",\n                       host_address_to_string (gdbarch->pseudo_register_read));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_pseudo_register_read_value_p() = %d\\n\",\n                       gdbarch_pseudo_register_read_value_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: pseudo_register_read_value = <%s>\\n\",\n                       host_address_to_string (gdbarch->pseudo_register_read_value));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_pseudo_register_write_p() = %d\\n\",\n                       gdbarch_pseudo_register_write_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: pseudo_register_write = <%s>\\n\",\n                       host_address_to_string (gdbarch->pseudo_register_write));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: num_regs = %s\\n\",\n                       plongest (gdbarch->num_regs));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: num_pseudo_regs = %s\\n\",\n                       plongest (gdbarch->num_pseudo_regs));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_ax_pseudo_register_collect_p() = %d\\n\",\n                       gdbarch_ax_pseudo_register_collect_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: ax_pseudo_register_collect = <%s>\\n\",\n                       host_address_to_string (gdbarch->ax_pseudo_register_collect));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_ax_pseudo_register_push_stack_p() = %d\\n\",\n                       gdbarch_ax_pseudo_register_push_stack_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: ax_pseudo_register_push_stack = <%s>\\n\",\n                       host_address_to_string (gdbarch->ax_pseudo_register_push_stack));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_report_signal_info_p() = %d\\n\",\n                       gdbarch_report_signal_info_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: report_signal_info = <%s>\\n\",\n                       host_address_to_string (gdbarch->report_signal_info));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: sp_regnum = %s\\n\",\n                       plongest (gdbarch->sp_regnum));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: pc_regnum = %s\\n\",\n                       plongest (gdbarch->pc_regnum));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: ps_regnum = %s\\n\",\n                       plongest (gdbarch->ps_regnum));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: fp0_regnum = %s\\n\",\n                       plongest (gdbarch->fp0_regnum));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stab_reg_to_regnum = <%s>\\n\",\n                       host_address_to_string (gdbarch->stab_reg_to_regnum));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: ecoff_reg_to_regnum = <%s>\\n\",\n                       host_address_to_string (gdbarch->ecoff_reg_to_regnum));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: sdb_reg_to_regnum = <%s>\\n\",\n                       host_address_to_string (gdbarch->sdb_reg_to_regnum));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: dwarf2_reg_to_regnum = <%s>\\n\",\n                       host_address_to_string (gdbarch->dwarf2_reg_to_regnum));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: register_name = <%s>\\n\",\n                       host_address_to_string (gdbarch->register_name));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_register_type_p() = %d\\n\",\n                       gdbarch_register_type_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: register_type = <%s>\\n\",\n                       host_address_to_string (gdbarch->register_type));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: dummy_id = <%s>\\n\",\n                       host_address_to_string (gdbarch->dummy_id));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: deprecated_fp_regnum = %s\\n\",\n                       plongest (gdbarch->deprecated_fp_regnum));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_push_dummy_call_p() = %d\\n\",\n                       gdbarch_push_dummy_call_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: push_dummy_call = <%s>\\n\",\n                       host_address_to_string (gdbarch->push_dummy_call));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: call_dummy_location = %s\\n\",\n                       plongest (gdbarch->call_dummy_location));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_push_dummy_code_p() = %d\\n\",\n                       gdbarch_push_dummy_code_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: push_dummy_code = <%s>\\n\",\n                       host_address_to_string (gdbarch->push_dummy_code));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: code_of_frame_writable = <%s>\\n\",\n                       host_address_to_string (gdbarch->code_of_frame_writable));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: print_registers_info = <%s>\\n\",\n                       host_address_to_string (gdbarch->print_registers_info));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: print_float_info = <%s>\\n\",\n                       host_address_to_string (gdbarch->print_float_info));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_print_vector_info_p() = %d\\n\",\n                       gdbarch_print_vector_info_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: print_vector_info = <%s>\\n\",\n                       host_address_to_string (gdbarch->print_vector_info));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: register_sim_regno = <%s>\\n\",\n                       host_address_to_string (gdbarch->register_sim_regno));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: cannot_fetch_register = <%s>\\n\",\n                       host_address_to_string (gdbarch->cannot_fetch_register));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: cannot_store_register = <%s>\\n\",\n                       host_address_to_string (gdbarch->cannot_store_register));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_get_longjmp_target_p() = %d\\n\",\n                       gdbarch_get_longjmp_target_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: get_longjmp_target = <%s>\\n\",\n                       host_address_to_string (gdbarch->get_longjmp_target));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: believe_pcc_promotion = %s\\n\",\n                       plongest (gdbarch->believe_pcc_promotion));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: convert_register_p = <%s>\\n\",\n                       host_address_to_string (gdbarch->convert_register_p));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: register_to_value = <%s>\\n\",\n                       host_address_to_string (gdbarch->register_to_value));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: value_to_register = <%s>\\n\",\n                       host_address_to_string (gdbarch->value_to_register));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: value_from_register = <%s>\\n\",\n                       host_address_to_string (gdbarch->value_from_register));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: pointer_to_address = <%s>\\n\",\n                       host_address_to_string (gdbarch->pointer_to_address));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: address_to_pointer = <%s>\\n\",\n                       host_address_to_string (gdbarch->address_to_pointer));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_integer_to_address_p() = %d\\n\",\n                       gdbarch_integer_to_address_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: integer_to_address = <%s>\\n\",\n                       host_address_to_string (gdbarch->integer_to_address));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_return_value_p() = %d\\n\",\n                       gdbarch_return_value_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: return_value = <%s>\\n\",\n                       host_address_to_string (gdbarch->return_value));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: return_in_first_hidden_param_p = <%s>\\n\",\n                       host_address_to_string (gdbarch->return_in_first_hidden_param_p));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: skip_prologue = <%s>\\n\",\n                       host_address_to_string (gdbarch->skip_prologue));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_skip_main_prologue_p() = %d\\n\",\n                       gdbarch_skip_main_prologue_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: skip_main_prologue = <%s>\\n\",\n                       host_address_to_string (gdbarch->skip_main_prologue));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_skip_entrypoint_p() = %d\\n\",\n                       gdbarch_skip_entrypoint_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: skip_entrypoint = <%s>\\n\",\n                       host_address_to_string (gdbarch->skip_entrypoint));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: inner_than = <%s>\\n\",\n                       host_address_to_string (gdbarch->inner_than));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: breakpoint_from_pc = <%s>\\n\",\n                       host_address_to_string (gdbarch->breakpoint_from_pc));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: breakpoint_kind_from_pc = <%s>\\n\",\n                       host_address_to_string (gdbarch->breakpoint_kind_from_pc));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: sw_breakpoint_from_kind = <%s>\\n\",\n                       host_address_to_string (gdbarch->sw_breakpoint_from_kind));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: breakpoint_kind_from_current_state = <%s>\\n\",\n                       host_address_to_string (gdbarch->breakpoint_kind_from_current_state));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_adjust_breakpoint_address_p() = %d\\n\",\n                       gdbarch_adjust_breakpoint_address_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: adjust_breakpoint_address = <%s>\\n\",\n                       host_address_to_string (gdbarch->adjust_breakpoint_address));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: memory_insert_breakpoint = <%s>\\n\",\n                       host_address_to_string (gdbarch->memory_insert_breakpoint));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: memory_remove_breakpoint = <%s>\\n\",\n                       host_address_to_string (gdbarch->memory_remove_breakpoint));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: decr_pc_after_break = %s\\n\",\n                       core_addr_to_string_nz (gdbarch->decr_pc_after_break));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: deprecated_function_start_offset = %s\\n\",\n                       core_addr_to_string_nz (gdbarch->deprecated_function_start_offset));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: remote_register_number = <%s>\\n\",\n                       host_address_to_string (gdbarch->remote_register_number));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_fetch_tls_load_module_address_p() = %d\\n\",\n                       gdbarch_fetch_tls_load_module_address_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: fetch_tls_load_module_address = <%s>\\n\",\n                       host_address_to_string (gdbarch->fetch_tls_load_module_address));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_get_thread_local_address_p() = %d\\n\",\n                       gdbarch_get_thread_local_address_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: get_thread_local_address = <%s>\\n\",\n                       host_address_to_string (gdbarch->get_thread_local_address));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: frame_args_skip = %s\\n\",\n                       core_addr_to_string_nz (gdbarch->frame_args_skip));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: unwind_pc = <%s>\\n\",\n                       host_address_to_string (gdbarch->unwind_pc));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: unwind_sp = <%s>\\n\",\n                       host_address_to_string (gdbarch->unwind_sp));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_frame_num_args_p() = %d\\n\",\n                       gdbarch_frame_num_args_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: frame_num_args = <%s>\\n\",\n                       host_address_to_string (gdbarch->frame_num_args));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_frame_align_p() = %d\\n\",\n                       gdbarch_frame_align_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: frame_align = <%s>\\n\",\n                       host_address_to_string (gdbarch->frame_align));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stabs_argument_has_addr = <%s>\\n\",\n                       host_address_to_string (gdbarch->stabs_argument_has_addr));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: frame_red_zone_size = %s\\n\",\n                       plongest (gdbarch->frame_red_zone_size));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: convert_from_func_ptr_addr = <%s>\\n\",\n                       host_address_to_string (gdbarch->convert_from_func_ptr_addr));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: addr_bits_remove = <%s>\\n\",\n                       host_address_to_string (gdbarch->addr_bits_remove));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: significant_addr_bit = %s\\n\",\n                       plongest (gdbarch->significant_addr_bit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: memtag_to_string = <%s>\\n\",\n                       host_address_to_string (gdbarch->memtag_to_string));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: tagged_address_p = <%s>\\n\",\n                       host_address_to_string (gdbarch->tagged_address_p));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: memtag_matches_p = <%s>\\n\",\n                       host_address_to_string (gdbarch->memtag_matches_p));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: set_memtags = <%s>\\n\",\n                       host_address_to_string (gdbarch->set_memtags));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: get_memtag = <%s>\\n\",\n                       host_address_to_string (gdbarch->get_memtag));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: memtag_granule_size = %s\\n\",\n                       core_addr_to_string_nz (gdbarch->memtag_granule_size));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_software_single_step_p() = %d\\n\",\n                       gdbarch_software_single_step_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: software_single_step = <%s>\\n\",\n                       host_address_to_string (gdbarch->software_single_step));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_single_step_through_delay_p() = %d\\n\",\n                       gdbarch_single_step_through_delay_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: single_step_through_delay = <%s>\\n\",\n                       host_address_to_string (gdbarch->single_step_through_delay));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: print_insn = <%s>\\n\",\n                       host_address_to_string (gdbarch->print_insn));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: skip_trampoline_code = <%s>\\n\",\n                       host_address_to_string (gdbarch->skip_trampoline_code));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: skip_solib_resolver = <%s>\\n\",\n                       host_address_to_string (gdbarch->skip_solib_resolver));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: in_solib_return_trampoline = <%s>\\n\",\n                       host_address_to_string (gdbarch->in_solib_return_trampoline));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: in_indirect_branch_thunk = <%s>\\n\",\n                       host_address_to_string (gdbarch->in_indirect_branch_thunk));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stack_frame_destroyed_p = <%s>\\n\",\n                       host_address_to_string (gdbarch->stack_frame_destroyed_p));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_elf_make_msymbol_special_p() = %d\\n\",\n                       gdbarch_elf_make_msymbol_special_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: elf_make_msymbol_special = <%s>\\n\",\n                       host_address_to_string (gdbarch->elf_make_msymbol_special));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: coff_make_msymbol_special = <%s>\\n\",\n                       host_address_to_string (gdbarch->coff_make_msymbol_special));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: make_symbol_special = <%s>\\n\",\n                       host_address_to_string (gdbarch->make_symbol_special));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: adjust_dwarf2_addr = <%s>\\n\",\n                       host_address_to_string (gdbarch->adjust_dwarf2_addr));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: adjust_dwarf2_line = <%s>\\n\",\n                       host_address_to_string (gdbarch->adjust_dwarf2_line));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: cannot_step_breakpoint = %s\\n\",\n                       plongest (gdbarch->cannot_step_breakpoint));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: have_nonsteppable_watchpoint = %s\\n\",\n                       plongest (gdbarch->have_nonsteppable_watchpoint));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_address_class_type_flags_p() = %d\\n\",\n                       gdbarch_address_class_type_flags_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: address_class_type_flags = <%s>\\n\",\n                       host_address_to_string (gdbarch->address_class_type_flags));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_address_class_type_flags_to_name_p() = %d\\n\",\n                       gdbarch_address_class_type_flags_to_name_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: address_class_type_flags_to_name = <%s>\\n\",\n                       host_address_to_string (gdbarch->address_class_type_flags_to_name));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: execute_dwarf_cfa_vendor_op = <%s>\\n\",\n                       host_address_to_string (gdbarch->execute_dwarf_cfa_vendor_op));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_address_class_name_to_type_flags_p() = %d\\n\",\n                       gdbarch_address_class_name_to_type_flags_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: address_class_name_to_type_flags = <%s>\\n\",\n                       host_address_to_string (gdbarch->address_class_name_to_type_flags));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: register_reggroup_p = <%s>\\n\",\n                       host_address_to_string (gdbarch->register_reggroup_p));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_fetch_pointer_argument_p() = %d\\n\",\n                       gdbarch_fetch_pointer_argument_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: fetch_pointer_argument = <%s>\\n\",\n                       host_address_to_string (gdbarch->fetch_pointer_argument));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_iterate_over_regset_sections_p() = %d\\n\",\n                       gdbarch_iterate_over_regset_sections_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: iterate_over_regset_sections = <%s>\\n\",\n                       host_address_to_string (gdbarch->iterate_over_regset_sections));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_make_corefile_notes_p() = %d\\n\",\n                       gdbarch_make_corefile_notes_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: make_corefile_notes = <%s>\\n\",\n                       host_address_to_string (gdbarch->make_corefile_notes));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_find_memory_regions_p() = %d\\n\",\n                       gdbarch_find_memory_regions_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: find_memory_regions = <%s>\\n\",\n                       host_address_to_string (gdbarch->find_memory_regions));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_core_xfer_shared_libraries_p() = %d\\n\",\n                       gdbarch_core_xfer_shared_libraries_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: core_xfer_shared_libraries = <%s>\\n\",\n                       host_address_to_string (gdbarch->core_xfer_shared_libraries));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_core_xfer_shared_libraries_aix_p() = %d\\n\",\n                       gdbarch_core_xfer_shared_libraries_aix_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: core_xfer_shared_libraries_aix = <%s>\\n\",\n                       host_address_to_string (gdbarch->core_xfer_shared_libraries_aix));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_core_pid_to_str_p() = %d\\n\",\n                       gdbarch_core_pid_to_str_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: core_pid_to_str = <%s>\\n\",\n                       host_address_to_string (gdbarch->core_pid_to_str));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_core_thread_name_p() = %d\\n\",\n                       gdbarch_core_thread_name_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: core_thread_name = <%s>\\n\",\n                       host_address_to_string (gdbarch->core_thread_name));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_core_xfer_siginfo_p() = %d\\n\",\n                       gdbarch_core_xfer_siginfo_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: core_xfer_siginfo = <%s>\\n\",\n                       host_address_to_string (gdbarch->core_xfer_siginfo));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_gcore_bfd_target_p() = %d\\n\",\n                       gdbarch_gcore_bfd_target_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gcore_bfd_target = %s\\n\",\n                       pstring (gdbarch->gcore_bfd_target));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: vtable_function_descriptors = %s\\n\",\n                       plongest (gdbarch->vtable_function_descriptors));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: vbit_in_delta = %s\\n\",\n                       plongest (gdbarch->vbit_in_delta));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: skip_permanent_breakpoint = <%s>\\n\",\n                       host_address_to_string (gdbarch->skip_permanent_breakpoint));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_max_insn_length_p() = %d\\n\",\n                       gdbarch_max_insn_length_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: max_insn_length = %s\\n\",\n                       plongest (gdbarch->max_insn_length));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_displaced_step_copy_insn_p() = %d\\n\",\n                       gdbarch_displaced_step_copy_insn_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: displaced_step_copy_insn = <%s>\\n\",\n                       host_address_to_string (gdbarch->displaced_step_copy_insn));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: displaced_step_hw_singlestep = <%s>\\n\",\n                       host_address_to_string (gdbarch->displaced_step_hw_singlestep));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_displaced_step_fixup_p() = %d\\n\",\n                       gdbarch_displaced_step_fixup_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: displaced_step_fixup = <%s>\\n\",\n                       host_address_to_string (gdbarch->displaced_step_fixup));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_displaced_step_prepare_p() = %d\\n\",\n                       gdbarch_displaced_step_prepare_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: displaced_step_prepare = <%s>\\n\",\n                       host_address_to_string (gdbarch->displaced_step_prepare));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: displaced_step_finish = <%s>\\n\",\n                       host_address_to_string (gdbarch->displaced_step_finish));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_displaced_step_copy_insn_closure_by_addr_p() = %d\\n\",\n                       gdbarch_displaced_step_copy_insn_closure_by_addr_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: displaced_step_copy_insn_closure_by_addr = <%s>\\n\",\n                       host_address_to_string (gdbarch->displaced_step_copy_insn_closure_by_addr));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: displaced_step_restore_all_in_ptid = <%s>\\n\",\n                       host_address_to_string (gdbarch->displaced_step_restore_all_in_ptid));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_relocate_instruction_p() = %d\\n\",\n                       gdbarch_relocate_instruction_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: relocate_instruction = <%s>\\n\",\n                       host_address_to_string (gdbarch->relocate_instruction));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_overlay_update_p() = %d\\n\",\n                       gdbarch_overlay_update_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: overlay_update = <%s>\\n\",\n                       host_address_to_string (gdbarch->overlay_update));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_core_read_description_p() = %d\\n\",\n                       gdbarch_core_read_description_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: core_read_description = <%s>\\n\",\n                       host_address_to_string (gdbarch->core_read_description));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: sofun_address_maybe_missing = %s\\n\",\n                       plongest (gdbarch->sofun_address_maybe_missing));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_process_record_p() = %d\\n\",\n                       gdbarch_process_record_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: process_record = <%s>\\n\",\n                       host_address_to_string (gdbarch->process_record));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_process_record_signal_p() = %d\\n\",\n                       gdbarch_process_record_signal_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: process_record_signal = <%s>\\n\",\n                       host_address_to_string (gdbarch->process_record_signal));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_gdb_signal_from_target_p() = %d\\n\",\n                       gdbarch_gdb_signal_from_target_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdb_signal_from_target = <%s>\\n\",\n                       host_address_to_string (gdbarch->gdb_signal_from_target));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_gdb_signal_to_target_p() = %d\\n\",\n                       gdbarch_gdb_signal_to_target_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdb_signal_to_target = <%s>\\n\",\n                       host_address_to_string (gdbarch->gdb_signal_to_target));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_get_siginfo_type_p() = %d\\n\",\n                       gdbarch_get_siginfo_type_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: get_siginfo_type = <%s>\\n\",\n                       host_address_to_string (gdbarch->get_siginfo_type));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_record_special_symbol_p() = %d\\n\",\n                       gdbarch_record_special_symbol_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: record_special_symbol = <%s>\\n\",\n                       host_address_to_string (gdbarch->record_special_symbol));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_get_syscall_number_p() = %d\\n\",\n                       gdbarch_get_syscall_number_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: get_syscall_number = <%s>\\n\",\n                       host_address_to_string (gdbarch->get_syscall_number));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: xml_syscall_file = %s\\n\",\n                       pstring (gdbarch->xml_syscall_file));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: syscalls_info = %s\\n\",\n                       host_address_to_string (gdbarch->syscalls_info));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stap_integer_prefixes = %s\\n\",\n                       pstring_list (gdbarch->stap_integer_prefixes));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stap_integer_suffixes = %s\\n\",\n                       pstring_list (gdbarch->stap_integer_suffixes));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stap_register_prefixes = %s\\n\",\n                       pstring_list (gdbarch->stap_register_prefixes));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stap_register_suffixes = %s\\n\",\n                       pstring_list (gdbarch->stap_register_suffixes));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stap_register_indirection_prefixes = %s\\n\",\n                       pstring_list (gdbarch->stap_register_indirection_prefixes));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stap_register_indirection_suffixes = %s\\n\",\n                       pstring_list (gdbarch->stap_register_indirection_suffixes));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stap_gdb_register_prefix = %s\\n\",\n                       pstring (gdbarch->stap_gdb_register_prefix));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stap_gdb_register_suffix = %s\\n\",\n                       pstring (gdbarch->stap_gdb_register_suffix));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_stap_is_single_operand_p() = %d\\n\",\n                       gdbarch_stap_is_single_operand_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stap_is_single_operand = <%s>\\n\",\n                       host_address_to_string (gdbarch->stap_is_single_operand));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_stap_parse_special_token_p() = %d\\n\",\n                       gdbarch_stap_parse_special_token_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stap_parse_special_token = <%s>\\n\",\n                       host_address_to_string (gdbarch->stap_parse_special_token));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_stap_adjust_register_p() = %d\\n\",\n                       gdbarch_stap_adjust_register_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: stap_adjust_register = <%s>\\n\",\n                       host_address_to_string (gdbarch->stap_adjust_register));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_dtrace_parse_probe_argument_p() = %d\\n\",\n                       gdbarch_dtrace_parse_probe_argument_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: dtrace_parse_probe_argument = <%s>\\n\",\n                       host_address_to_string (gdbarch->dtrace_parse_probe_argument));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_dtrace_probe_is_enabled_p() = %d\\n\",\n                       gdbarch_dtrace_probe_is_enabled_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: dtrace_probe_is_enabled = <%s>\\n\",\n                       host_address_to_string (gdbarch->dtrace_probe_is_enabled));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_dtrace_enable_probe_p() = %d\\n\",\n                       gdbarch_dtrace_enable_probe_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: dtrace_enable_probe = <%s>\\n\",\n                       host_address_to_string (gdbarch->dtrace_enable_probe));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_dtrace_disable_probe_p() = %d\\n\",\n                       gdbarch_dtrace_disable_probe_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: dtrace_disable_probe = <%s>\\n\",\n                       host_address_to_string (gdbarch->dtrace_disable_probe));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: has_global_solist = %s\\n\",\n                       plongest (gdbarch->has_global_solist));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: has_global_breakpoints = %s\\n\",\n                       plongest (gdbarch->has_global_breakpoints));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: has_shared_address_space = <%s>\\n\",\n                       host_address_to_string (gdbarch->has_shared_address_space));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: fast_tracepoint_valid_at = <%s>\\n\",\n                       host_address_to_string (gdbarch->fast_tracepoint_valid_at));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: guess_tracepoint_registers = <%s>\\n\",\n                       host_address_to_string (gdbarch->guess_tracepoint_registers));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: auto_charset = <%s>\\n\",\n                       host_address_to_string (gdbarch->auto_charset));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: auto_wide_charset = <%s>\\n\",\n                       host_address_to_string (gdbarch->auto_wide_charset));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: solib_symbols_extension = %s\\n\",\n                       pstring (gdbarch->solib_symbols_extension));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: has_dos_based_file_system = %s\\n\",\n                       plongest (gdbarch->has_dos_based_file_system));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gen_return_address = <%s>\\n\",\n                       host_address_to_string (gdbarch->gen_return_address));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_info_proc_p() = %d\\n\",\n                       gdbarch_info_proc_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: info_proc = <%s>\\n\",\n                       host_address_to_string (gdbarch->info_proc));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_core_info_proc_p() = %d\\n\",\n                       gdbarch_core_info_proc_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: core_info_proc = <%s>\\n\",\n                       host_address_to_string (gdbarch->core_info_proc));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: iterate_over_objfiles_in_search_order = <%s>\\n\",\n                       host_address_to_string (gdbarch->iterate_over_objfiles_in_search_order));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: ravenscar_ops = %s\\n\",\n                       host_address_to_string (gdbarch->ravenscar_ops));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: insn_is_call = <%s>\\n\",\n                       host_address_to_string (gdbarch->insn_is_call));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: insn_is_ret = <%s>\\n\",\n                       host_address_to_string (gdbarch->insn_is_ret));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: insn_is_jump = <%s>\\n\",\n                       host_address_to_string (gdbarch->insn_is_jump));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: program_breakpoint_here_p = <%s>\\n\",\n                       host_address_to_string (gdbarch->program_breakpoint_here_p));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gdbarch_auxv_parse_p() = %d\\n\",\n                       gdbarch_auxv_parse_p (gdbarch));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: auxv_parse = <%s>\\n\",\n                       host_address_to_string (gdbarch->auxv_parse));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: print_auxv_entry = <%s>\\n\",\n                       host_address_to_string (gdbarch->print_auxv_entry));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: vsyscall_range = <%s>\\n\",\n                       host_address_to_string (gdbarch->vsyscall_range));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: infcall_mmap = <%s>\\n\",\n                       host_address_to_string (gdbarch->infcall_mmap));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: infcall_munmap = <%s>\\n\",\n                       host_address_to_string (gdbarch->infcall_munmap));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gcc_target_options = <%s>\\n\",\n                       host_address_to_string (gdbarch->gcc_target_options));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: gnu_triplet_regexp = <%s>\\n\",\n                       host_address_to_string (gdbarch->gnu_triplet_regexp));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: addressable_memory_unit_size = <%s>\\n\",\n                       host_address_to_string (gdbarch->addressable_memory_unit_size));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: disassembler_options_implicit = %s\\n\",\n                       pstring (gdbarch->disassembler_options_implicit));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: disassembler_options = %s\\n\",\n                       pstring_ptr (gdbarch->disassembler_options));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: valid_disassembler_options = %s\\n\",\n                       host_address_to_string (gdbarch->valid_disassembler_options));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: type_align = <%s>\\n\",\n                       host_address_to_string (gdbarch->type_align));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: get_pc_address_flags = <%s>\\n\",\n                       host_address_to_string (gdbarch->get_pc_address_flags));\n-  fprintf_unfiltered (file,\n+  fprintf_filtered (file,\n                       \"gdbarch_dump: read_core_file_mappings = <%s>\\n\",\n                       host_address_to_string (gdbarch->read_core_file_mappings));\n   if (gdbarch->dump_tdep != NULL)"
    },
    {
      "sha": "9b538a7d5c61d7d3a3c9a623f3e1d876d77e9184",
      "filename": "gdb/gdbarch.py",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/gdbarch.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/gdbarch.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.py?ref=a1ea4cacd4ac309cdcd13184d225190c80d628ee",
      "patch": "@@ -401,19 +401,19 @@ def not_info(c):\n     print(\"#if defined (GDB_NM_FILE)\", file=f)\n     print(\"  gdb_nm_file = GDB_NM_FILE;\", file=f)\n     print(\"#endif\", file=f)\n-    print(\"  fprintf_unfiltered (file,\", file=f)\n+    print(\"  fprintf_filtered (file,\", file=f)\n     print(\"\"\"\t\t      \"gdbarch_dump: GDB_NM_FILE = %s\\\\n\",\"\"\", file=f)\n     print(\"\t\t      gdb_nm_file);\", file=f)\n     for c in components:\n         if c.predicate:\n-            print(\"  fprintf_unfiltered (file,\", file=f)\n+            print(\"  fprintf_filtered (file,\", file=f)\n             print(\n                 f\"\"\"                      \"gdbarch_dump: gdbarch_{c.name}_p() = %d\\\\n\",\"\"\",\n                 file=f,\n             )\n             print(f\"                      gdbarch_{c.name}_p (gdbarch));\", file=f)\n         if isinstance(c, Function):\n-            print(\"  fprintf_unfiltered (file,\", file=f)\n+            print(\"  fprintf_filtered (file,\", file=f)\n             print(\n                 f\"\"\"                      \"gdbarch_dump: {c.name} = <%s>\\\\n\",\"\"\", file=f\n             )\n@@ -428,7 +428,7 @@ def not_info(c):\n                 printer = f\"core_addr_to_string_nz (gdbarch->{c.name})\"\n             else:\n                 printer = f\"plongest (gdbarch->{c.name})\"\n-            print(\"  fprintf_unfiltered (file,\", file=f)\n+            print(\"  fprintf_filtered (file,\", file=f)\n             print(\n                 f\"\"\"                      \"gdbarch_dump: {c.name} = %s\\\\n\",\"\"\", file=f\n             )"
    },
    {
      "sha": "6c6e538e8228797cf069c07ff40fd238806fba49",
      "filename": "gdb/hppa-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/hppa-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/hppa-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/hppa-tdep.c?ref=a1ea4cacd4ac309cdcd13184d225190c80d628ee",
      "patch": "@@ -3162,9 +3162,9 @@ hppa_dump_tdep (struct gdbarch *gdbarch, struct ui_file *file)\n {\n   hppa_gdbarch_tdep *tdep = (hppa_gdbarch_tdep *) gdbarch_tdep (gdbarch);\n \n-  fprintf_unfiltered (file, \"bytes_per_address = %d\\n\", \n-\t\t      tdep->bytes_per_address);\n-  fprintf_unfiltered (file, \"elf = %s\\n\", tdep->is_elf ? \"yes\" : \"no\");\n+  fprintf_filtered (file, \"bytes_per_address = %d\\n\", \n+\t\t    tdep->bytes_per_address);\n+  fprintf_filtered (file, \"elf = %s\\n\", tdep->is_elf ? \"yes\" : \"no\");\n }\n \n void _initialize_hppa_tdep ();"
    },
    {
      "sha": "7f8018360dd80bc48db6abd8e15e6b2dd8e80337",
      "filename": "gdb/mips-tdep.c",
      "status": "modified",
      "additions": 27,
      "deletions": 27,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/mips-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/mips-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mips-tdep.c?ref=a1ea4cacd4ac309cdcd13184d225190c80d628ee",
      "patch": "@@ -8929,34 +8929,34 @@ mips_dump_tdep (struct gdbarch *gdbarch, struct ui_file *file)\n \t}\n       /* Determine the size of a pointer.  */\n       ef_mips_32bitmode = (tdep->elf_flags & EF_MIPS_32BITMODE);\n-      fprintf_unfiltered (file,\n-\t\t\t  \"mips_dump_tdep: tdep->elf_flags = 0x%x\\n\",\n-\t\t\t  tdep->elf_flags);\n-      fprintf_unfiltered (file,\n-\t\t\t  \"mips_dump_tdep: ef_mips_32bitmode = %d\\n\",\n-\t\t\t  ef_mips_32bitmode);\n-      fprintf_unfiltered (file,\n-\t\t\t  \"mips_dump_tdep: ef_mips_arch = %d\\n\",\n-\t\t\t  ef_mips_arch);\n-      fprintf_unfiltered (file,\n-\t\t\t  \"mips_dump_tdep: tdep->mips_abi = %d (%s)\\n\",\n-\t\t\t  tdep->mips_abi, mips_abi_strings[tdep->mips_abi]);\n-      fprintf_unfiltered (file,\n-\t\t\t  \"mips_dump_tdep: \"\n-\t\t\t  \"mips_mask_address_p() %d (default %d)\\n\",\n-\t\t\t  mips_mask_address_p (tdep),\n-\t\t\t  tdep->default_mask_address_p);\n+      fprintf_filtered (file,\n+\t\t\t\"mips_dump_tdep: tdep->elf_flags = 0x%x\\n\",\n+\t\t\ttdep->elf_flags);\n+      fprintf_filtered (file,\n+\t\t\t\"mips_dump_tdep: ef_mips_32bitmode = %d\\n\",\n+\t\t\tef_mips_32bitmode);\n+      fprintf_filtered (file,\n+\t\t\t\"mips_dump_tdep: ef_mips_arch = %d\\n\",\n+\t\t\tef_mips_arch);\n+      fprintf_filtered (file,\n+\t\t\t\"mips_dump_tdep: tdep->mips_abi = %d (%s)\\n\",\n+\t\t\ttdep->mips_abi, mips_abi_strings[tdep->mips_abi]);\n+      fprintf_filtered (file,\n+\t\t\t\"mips_dump_tdep: \"\n+\t\t\t\"mips_mask_address_p() %d (default %d)\\n\",\n+\t\t\tmips_mask_address_p (tdep),\n+\t\t\ttdep->default_mask_address_p);\n     }\n-  fprintf_unfiltered (file,\n-\t\t      \"mips_dump_tdep: MIPS_DEFAULT_FPU_TYPE = %d (%s)\\n\",\n-\t\t      MIPS_DEFAULT_FPU_TYPE,\n-\t\t      mips_fpu_type_str (MIPS_DEFAULT_FPU_TYPE));\n-  fprintf_unfiltered (file, \"mips_dump_tdep: MIPS_EABI = %d\\n\",\n-\t\t      mips_eabi (gdbarch));\n-  fprintf_unfiltered (file,\n-\t\t      \"mips_dump_tdep: MIPS_FPU_TYPE = %d (%s)\\n\",\n-\t\t      mips_get_fpu_type (gdbarch),\n-\t\t      mips_fpu_type_str (mips_get_fpu_type (gdbarch)));\n+  fprintf_filtered (file,\n+\t\t    \"mips_dump_tdep: MIPS_DEFAULT_FPU_TYPE = %d (%s)\\n\",\n+\t\t    MIPS_DEFAULT_FPU_TYPE,\n+\t\t    mips_fpu_type_str (MIPS_DEFAULT_FPU_TYPE));\n+  fprintf_filtered (file, \"mips_dump_tdep: MIPS_EABI = %d\\n\",\n+\t\t    mips_eabi (gdbarch));\n+  fprintf_filtered (file,\n+\t\t    \"mips_dump_tdep: MIPS_FPU_TYPE = %d (%s)\\n\",\n+\t\t    mips_get_fpu_type (gdbarch),\n+\t\t    mips_fpu_type_str (mips_get_fpu_type (gdbarch)));\n }\n \n void _initialize_mips_tdep ();"
    },
    {
      "sha": "02efd84d638ddf2bf6732ddf24cef7b6df01a9d3",
      "filename": "gdb/mn10300-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/mn10300-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/mn10300-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mn10300-tdep.c?ref=a1ea4cacd4ac309cdcd13184d225190c80d628ee",
      "patch": "@@ -1413,8 +1413,8 @@ static void\n mn10300_dump_tdep (struct gdbarch *gdbarch, struct ui_file *file)\n {\n   mn10300_gdbarch_tdep *tdep = (mn10300_gdbarch_tdep *) gdbarch_tdep (gdbarch);\n-  fprintf_unfiltered (file, \"mn10300_dump_tdep: am33_mode = %d\\n\",\n-\t\t      tdep->am33_mode);\n+  fprintf_filtered (file, \"mn10300_dump_tdep: am33_mode = %d\\n\",\n+\t\t    tdep->am33_mode);\n }\n \n void _initialize_mn10300_tdep ();"
    },
    {
      "sha": "1e01df223adda4f21fee6b496f48e28d22841e96",
      "filename": "gdb/or1k-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/or1k-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1ea4cacd4ac309cdcd13184d225190c80d628ee/gdb/or1k-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/or1k-tdep.c?ref=a1ea4cacd4ac309cdcd13184d225190c80d628ee",
      "patch": "@@ -1290,10 +1290,10 @@ or1k_dump_tdep (struct gdbarch *gdbarch, struct ui_file *file)\n   if (NULL == tdep)\n     return; /* Nothing to report */\n \n-  fprintf_unfiltered (file, \"or1k_dump_tdep: %d bytes per word\\n\",\n-\t\t      tdep->bytes_per_word);\n-  fprintf_unfiltered (file, \"or1k_dump_tdep: %d bytes per address\\n\",\n-\t\t      tdep->bytes_per_address);\n+  fprintf_filtered (file, \"or1k_dump_tdep: %d bytes per word\\n\",\n+\t\t    tdep->bytes_per_word);\n+  fprintf_filtered (file, \"or1k_dump_tdep: %d bytes per address\\n\",\n+\t\t    tdep->bytes_per_address);\n }\n \f\n "
    }
  ]
}