{
  "sha": "258bf0ee3748d4354e13daf00f02266cafa96389",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjU4YmYwZWUzNzQ4ZDQzNTRlMTNkYWYwMGYwMjI2NmNhZmE5NjM4OQ==",
  "commit": {
    "author": {
      "name": "Richard Biener",
      "email": "rguenther@suse.de",
      "date": "2020-02-14T07:32:53Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-02-14T07:32:53Z"
    },
    "message": "[gdb] Speedup lnp_state_machine::handle_special_opcode\n\nI see for some program at gdb startup:\n...\nSamples: 102K of event 'cycles:pu', Event count (approx.): 91710925103\nOverhead  Command     Shared Object        Symbol\n  15.21%  gdb         gdb                  [.]\nlnp_state_machine::handle_special\n...\nwhere the divisions are the places we stall.  The following\nmicro-optimizes things but it smells like m_line_header->line_range\nis constant, likewise probably m_line_header->maximum_ops_per_instruction\nso eventually the divisions could be avoided completely with some\nlookup table.\n\nWell.  Micro-optimizing with this patch improves things\n(don't expect [load] CSE over the gdbarch_adjust_dwarf2_line call).\n\nBuild and reg-tested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2020-02-14  Richard Biener  <rguenther@suse.de>\n\n\t* dwarf2/read.c (lnp_state_machine::handle_special_opcode): Apply CSE\n\ton expression with division operators.",
    "tree": {
      "sha": "a6f6a7933d4d14869687dcf606e1f66fc1c23d97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a6f6a7933d4d14869687dcf606e1f66fc1c23d97"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/258bf0ee3748d4354e13daf00f02266cafa96389",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/258bf0ee3748d4354e13daf00f02266cafa96389",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/258bf0ee3748d4354e13daf00f02266cafa96389",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/258bf0ee3748d4354e13daf00f02266cafa96389/comments",
  "author": {
    "login": "rguenth",
    "id": 2046526,
    "node_id": "MDQ6VXNlcjIwNDY1MjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rguenth",
    "html_url": "https://github.com/rguenth",
    "followers_url": "https://api.github.com/users/rguenth/followers",
    "following_url": "https://api.github.com/users/rguenth/following{/other_user}",
    "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions",
    "organizations_url": "https://api.github.com/users/rguenth/orgs",
    "repos_url": "https://api.github.com/users/rguenth/repos",
    "events_url": "https://api.github.com/users/rguenth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rguenth/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d4059b1d6cb65296134ca9f3497249e84acb622e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4059b1d6cb65296134ca9f3497249e84acb622e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d4059b1d6cb65296134ca9f3497249e84acb622e"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 10,
    "deletions": 5
  },
  "files": [
    {
      "sha": "a79aabcbeed6791d9ee389af766c4b6877fd3580",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/258bf0ee3748d4354e13daf00f02266cafa96389/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/258bf0ee3748d4354e13daf00f02266cafa96389/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=258bf0ee3748d4354e13daf00f02266cafa96389",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-14  Richard Biener  <rguenther@suse.de>\n+\n+\t* dwarf2/read.c (lnp_state_machine::handle_special_opcode): Apply CSE\n+\ton expression with division operators.\n+\n 2020-02-13  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>\n \n \t* MAINTAINERS (Write After Approval): Adding myself."
    },
    {
      "sha": "e74383e01dccbe34feb60da15f1e148b54703a29",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/258bf0ee3748d4354e13daf00f02266cafa96389/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/258bf0ee3748d4354e13daf00f02266cafa96389/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=258bf0ee3748d4354e13daf00f02266cafa96389",
      "patch": "@@ -19812,16 +19812,16 @@ void\n lnp_state_machine::handle_special_opcode (unsigned char op_code)\n {\n   unsigned char adj_opcode = op_code - m_line_header->opcode_base;\n-  CORE_ADDR addr_adj = (((m_op_index\n-\t\t\t  + (adj_opcode / m_line_header->line_range))\n+  unsigned char adj_opcode_d = adj_opcode / m_line_header->line_range;\n+  unsigned char adj_opcode_r = adj_opcode % m_line_header->line_range;\n+  CORE_ADDR addr_adj = (((m_op_index + adj_opcode_d)\n \t\t\t / m_line_header->maximum_ops_per_instruction)\n \t\t\t* m_line_header->minimum_instruction_length);\n   m_address += gdbarch_adjust_dwarf2_line (m_gdbarch, addr_adj, true);\n-  m_op_index = ((m_op_index + (adj_opcode / m_line_header->line_range))\n+  m_op_index = ((m_op_index + adj_opcode_d)\n \t\t% m_line_header->maximum_ops_per_instruction);\n \n-  int line_delta = (m_line_header->line_base\n-\t\t    + (adj_opcode % m_line_header->line_range));\n+  int line_delta = m_line_header->line_base + adj_opcode_r;\n   advance_line (line_delta);\n   record_line (false);\n   m_discriminator = 0;"
    }
  ]
}