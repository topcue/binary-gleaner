{
  "sha": "9943fa3a7320158e209a0339a4022a8165e9d5a6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTk0M2ZhM2E3MzIwMTU4ZTIwOWEwMzM5YTQwMjJhODE2NWU5ZDVhNg==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-06-02T19:23:07Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-07-22T16:57:23Z"
    },
    "message": "libctf, create: add explicit casts for variables' and slices' types\n\nThis is technically unnecessary -- the compiler is quite capable of\ndoing the range reduction for us -- but it does mean that all\nassignments of a ctf_id_t to its final uint32_t representation now have\nappropriate explicit casts.\n\nlibctf/\n\t* ctf-create.c (ctf_serialize): Add cast.\n\t(ctf_add_slice): Likewise.",
    "tree": {
      "sha": "dc9c8619f07ca31e8526ffeb87b62ee0bd567764",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dc9c8619f07ca31e8526ffeb87b62ee0bd567764"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9943fa3a7320158e209a0339a4022a8165e9d5a6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9943fa3a7320158e209a0339a4022a8165e9d5a6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9943fa3a7320158e209a0339a4022a8165e9d5a6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9943fa3a7320158e209a0339a4022a8165e9d5a6/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "afd78bd6f0a30ba57adaea870c05cbbb925cc769",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/afd78bd6f0a30ba57adaea870c05cbbb925cc769",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/afd78bd6f0a30ba57adaea870c05cbbb925cc769"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 7,
    "deletions": 2
  },
  "files": [
    {
      "sha": "598b93a0117fa4c4fba0e05730d876384137f405",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9943fa3a7320158e209a0339a4022a8165e9d5a6/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9943fa3a7320158e209a0339a4022a8165e9d5a6/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=9943fa3a7320158e209a0339a4022a8165e9d5a6",
      "patch": "@@ -1,3 +1,8 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_serialize): Add cast.\n+\t(ctf_add_slice): Likewise.\n+\n 2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-impl.h (ctf_dtdef_t) <dtu_argv>: Fix type."
    },
    {
      "sha": "bc0ad802dd2b944eabd25c0e224828378675817f",
      "filename": "libctf/ctf-create.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9943fa3a7320158e209a0339a4022a8165e9d5a6/libctf/ctf-create.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9943fa3a7320158e209a0339a4022a8165e9d5a6/libctf/ctf-create.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-create.c?ref=9943fa3a7320158e209a0339a4022a8165e9d5a6",
      "patch": "@@ -373,7 +373,7 @@ ctf_serialize (ctf_file_t *fp)\n       ctf_varent_t *var = &dvarents[i];\n \n       ctf_str_add_ref (fp, dvd->dvd_name, &var->ctv_name);\n-      var->ctv_type = dvd->dvd_type;\n+      var->ctv_type = (uint32_t) dvd->dvd_type;\n     }\n   assert (i == nvars);\n \n@@ -972,7 +972,7 @@ ctf_add_slice (ctf_file_t *fp, uint32_t flag, ctf_id_t ref,\n   dtd->dtd_data.ctt_info = CTF_TYPE_INFO (CTF_K_SLICE, flag, 0);\n   dtd->dtd_data.ctt_size = clp2 (P2ROUNDUP (ep->cte_bits, CHAR_BIT)\n \t\t\t\t / CHAR_BIT);\n-  dtd->dtd_u.dtu_slice.cts_type = ref;\n+  dtd->dtd_u.dtu_slice.cts_type = (uint32_t) ref;\n   dtd->dtd_u.dtu_slice.cts_bits = ep->cte_bits;\n   dtd->dtd_u.dtu_slice.cts_offset = ep->cte_offset;\n "
    }
  ]
}