{
  "sha": "56f79b630766bb134400b4a8da43941cfc31c0c0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTZmNzliNjMwNzY2YmIxMzQ0MDBiNGE4ZGE0Mzk0MWNmYzMxYzBjMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-07-15T16:41:18Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-07-19T15:37:00Z"
    },
    "message": "Change ARI to mention C++11, and remove some rules\n\nI noticed that ARI mentions \"ISO C 90\", but now gdb uses C++11.  This\npatch updates some text to reflect this change.\n\nI also noticed that a few rules can be removed now.  ARGSUSED doesn't\nseem to be an issue any more (there's no code mentioning this and I\ndoubt most of us even remember this convention); PARAMS was specific\nto K&R C; and __func__ is available in C++11.\n\ngdb/ChangeLog\n2019-07-19  Tom Tromey  <tromey@adacore.com>\n\n\t* contrib/ari/gdb_ari.sh: Mention C++11, not ISO C 90.\n\t(ARGSUSED, PARAMS, __func__): Remove rules.",
    "tree": {
      "sha": "e5ff6c2c6c9fd23f7cc299c65049a7737ff36e0e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e5ff6c2c6c9fd23f7cc299c65049a7737ff36e0e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/56f79b630766bb134400b4a8da43941cfc31c0c0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56f79b630766bb134400b4a8da43941cfc31c0c0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/56f79b630766bb134400b4a8da43941cfc31c0c0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56f79b630766bb134400b4a8da43941cfc31c0c0/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4c5aa8e0b1b4439f73ef1f82344e408b989f85df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c5aa8e0b1b4439f73ef1f82344e408b989f85df",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4c5aa8e0b1b4439f73ef1f82344e408b989f85df"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 11,
    "deletions": 36
  },
  "files": [
    {
      "sha": "c5a102f31563d74653bc1d34c01c123e00ee9323",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56f79b630766bb134400b4a8da43941cfc31c0c0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56f79b630766bb134400b4a8da43941cfc31c0c0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=56f79b630766bb134400b4a8da43941cfc31c0c0",
      "patch": "@@ -1,3 +1,8 @@\n+2019-07-19  Tom Tromey  <tromey@adacore.com>\n+\n+\t* contrib/ari/gdb_ari.sh: Mention C++11, not ISO C 90.\n+\t(ARGSUSED, PARAMS, __func__): Remove rules.\n+\n 2019-07-19  Alan Hayward  <alan.hayward@arm.com>\n \n \t* arm-tdep.c (_initialize_arm_tdep): Remove xml tests."
    },
    {
      "sha": "4bd434c8feca6f535cb1e352b640dfe6eda43b4d",
      "filename": "gdb/contrib/ari/gdb_ari.sh",
      "status": "modified",
      "additions": 6,
      "deletions": 36,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56f79b630766bb134400b4a8da43941cfc31c0c0/gdb/contrib/ari/gdb_ari.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56f79b630766bb134400b4a8da43941cfc31c0c0/gdb/contrib/ari/gdb_ari.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/contrib/ari/gdb_ari.sh?ref=56f79b630766bb134400b4a8da43941cfc31c0c0",
      "patch": "@@ -27,7 +27,7 @@ LC_ALL=C ; export LC_ALL\n \n # Permanent checks take the form:\n \n-#     Do not use XXXX, ISO C 90 implies YYYY\n+#     Do not use XXXX, C++11 implies YYYY\n #     Do not use XXXX, instead use YYYY''.\n \n # and should never be removed.\n@@ -255,17 +255,6 @@ BEGIN {\n }\n \n \n-# Things in comments\n-\n-BEGIN { doc[\"ARGSUSED\"] = \"\\\n-Do not use ARGSUSED, unnecessary\"\n-    category[\"ARGSUSED\"] = ari_regression\n-}\n-/(^|[^_[:alnum:]])ARGSUSED([^_[:alnum:]]|$)/ {\n-    fail(\"ARGSUSED\")\n-}\n-\n-\n # SNIP - Strip out comments - SNIP\n \n FNR == 1 {\n@@ -433,27 +422,8 @@ FNR == 1 {\n cont_p { $0 = full_line $0; cont_p = 0; full_line = \"\"; }\n \n \n-# GDB uses ISO C 90.  Check for any non pure ISO C 90 code\n-\n-BEGIN { doc[\"PARAMS\"] = \"\\\n-Do not use PARAMS(), ISO C 90 implies prototypes\"\n-    category[\"PARAMS\"] = ari_regression\n-}\n-/(^|[^_[:alnum:]])PARAMS([^_[:alnum:]]|$)/ {\n-    fail(\"PARAMS\")\n-}\n-\n-BEGIN { doc[\"__func__\"] = \"\\\n-Do not use __func__, ISO C 90 does not support this macro\"\n-    category[\"__func__\"] = ari_regression\n-    fix(\"__func__\", \"gdbsupport/gdb_assert.h\", 1)\n-}\n-/(^|[^_[:alnum:]])__func__([^_[:alnum:]]|$)/ {\n-    fail(\"__func__\")\n-}\n-\n BEGIN { doc[\"__FUNCTION__\"] = \"\\\n-Do not use __FUNCTION__, ISO C 90 does not support this macro\"\n+Do not use __FUNCTION__, C++11 does not support this macro\"\n     category[\"__FUNCTION__\"] = ari_regression\n }\n /(^|[^_[:alnum:]])__FUNCTION__([^_[:alnum:]]|$)/ {\n@@ -470,7 +440,7 @@ autoconf tests\"\n }\n \n BEGIN { doc[\"PTR\"] = \"\\\n-Do not use PTR, ISO C 90 implies `void *'\\''\"\n+Do not use PTR, C++11 implies `void *'\\''\"\n     category[\"PTR\"] = ari_regression\n     #fix(\"PTR\", \"gdb/utils.c\", 6)\n }\n@@ -816,23 +786,23 @@ unconditionally\"\n }\n \n BEGIN { doc[\"bcmp\"] = \"\\\n-Do not use bcmp(), ISO C 90 implies memcmp()\"\n+Do not use bcmp(), C++11 implies memcmp()\"\n     category[\"bcmp\"] = ari_regression\n }\n /(^|[^_[:alnum:]])bcmp[[:space:]]*\\(/ {\n     fail(\"bcmp\")\n }\n \n BEGIN { doc[\"setlinebuf\"] = \"\\\n-Do not use setlinebuf(), ISO C 90 implies setvbuf()\"\n+Do not use setlinebuf(), C++11 implies setvbuf()\"\n     category[\"setlinebuf\"] = ari_regression\n }\n /(^|[^_[:alnum:]])setlinebuf[[:space:]]*\\(/ {\n     fail(\"setlinebuf\")\n }\n \n BEGIN { doc[\"bcopy\"] = \"\\\n-Do not use bcopy(), ISO C 90 implies memcpy() and memmove()\"\n+Do not use bcopy(), C++11 implies memcpy() and memmove()\"\n     category[\"bcopy\"] = ari_regression\n }\n /(^|[^_[:alnum:]])bcopy[[:space:]]*\\(/ {"
    }
  ]
}