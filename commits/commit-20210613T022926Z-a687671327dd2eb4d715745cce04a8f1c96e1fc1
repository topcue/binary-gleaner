{
  "sha": "a687671327dd2eb4d715745cce04a8f1c96e1fc1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTY4NzY3MTMyN2RkMmViNGQ3MTU3NDVjY2UwNGE4ZjFjOTZlMWZjMQ==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-12T16:01:27Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-13T02:29:26Z"
    },
    "message": "sim: rx: replace cycle-stats with common profile settings\n\nThe common sim-profile option controls whether to keep track of\nruntime execution (like cycle count), so switch the rx-specific\ncycle-stats option over to that.",
    "tree": {
      "sha": "138c44a6ffff5610bcbab424f9ada0cb437d8ecf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/138c44a6ffff5610bcbab424f9ada0cb437d8ecf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a687671327dd2eb4d715745cce04a8f1c96e1fc1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a687671327dd2eb4d715745cce04a8f1c96e1fc1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a687671327dd2eb4d715745cce04a8f1c96e1fc1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a687671327dd2eb4d715745cce04a8f1c96e1fc1/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2726bbc3391eddf0f75da56011137d327a156aab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2726bbc3391eddf0f75da56011137d327a156aab",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2726bbc3391eddf0f75da56011137d327a156aab"
    }
  ],
  "stats": {
    "total": 92,
    "additions": 29,
    "deletions": 63
  },
  "files": [
    {
      "sha": "a368dc4bf6c3f68d133614bb890f44612c5f251b",
      "filename": "sim/rx/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/ChangeLog?ref=a687671327dd2eb4d715745cce04a8f1c96e1fc1",
      "patch": "@@ -1,3 +1,11 @@\n+2021-06-12  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* README.txt: Change cycle-stats to sim-profile.\n+\t* configure.ac: Delete cycle-stats.\n+\t* mem.c: Change CYCLE_STATS to WITH_PROFILE\n+\t* rx.c: Likewise.\n+\t* config.in, configure: Regenerate.\n+\n 2021-06-12  Mike Frysinger  <vapier@gentoo.org>\n \n \t* aclocal.m4, config.in, configure: Regenerate."
    },
    {
      "sha": "5ebd5742083934a550e13c719b813c9dff7aa7e2",
      "filename": "sim/rx/README.txt",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/README.txt",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/README.txt",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/README.txt?ref=a687671327dd2eb4d715745cce04a8f1c96e1fc1",
      "patch": "@@ -7,8 +7,8 @@ If enabled, the simulator will keep track of how many cycles each\n instruction takes.  While not 100% accurate, it is very close,\n including modelling fetch stalls and register latency.\n \n---enable-cycle-stats  (default)\n---disable-cycle-stats\n+--enable-sim-profile  (default)\n+--disable-sim-profile\n \n If enabled, specifying \"-v\" twice on the simulator command line causes\n the simulator to print statistics on how much time was used by each"
    },
    {
      "sha": "fd650fd41c00f5d664f64fe8098a432e861ca215",
      "filename": "sim/rx/config.in",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/config.in?ref=a687671327dd2eb4d715745cce04a8f1c96e1fc1",
      "patch": "@@ -6,9 +6,6 @@\n /* --enable-cycle-accurate */\n #undef CYCLE_ACCURATE\n \n-/* --enable-cycle-stats */\n-#undef CYCLE_STATS\n-\n /* Define to 1 if translation of program messages to the user's native\n    language is requested. */\n #undef ENABLE_NLS"
    },
    {
      "sha": "6700fb0595eafccdcdcd89a5788cff0c493d8f8c",
      "filename": "sim/rx/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 24,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/configure?ref=a687671327dd2eb4d715745cce04a8f1c96e1fc1",
      "patch": "@@ -769,7 +769,6 @@ enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n enable_cycle_accurate\n-enable_cycle_stats\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1414,7 +1413,6 @@ Optional Features:\n                           Specify which functions should be inlined\n   --disable-cycle-accurate\n                           Disable cycle accurate simulation (faster runtime)\n-  --disable-cycle-stats   Disable cycle statistics (faster runtime)\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10746,7 +10744,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10749 \"configure\"\n+#line 10747 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10852,7 +10850,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10855 \"configure\"\n+#line 10853 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11158,32 +11156,12 @@ esac\n fi\n \n \n-# Check whether --enable-cycle-stats was given.\n-if test \"${enable_cycle_stats+set}\" = set; then :\n-  enableval=$enable_cycle_stats; case \"${enableval}\" in\n-yes | no) ;;\n-*)\tas_fn_error $? \"bad value ${enableval} given for --enable-cycle-stats option\" \"$LINENO\" 5 ;;\n-esac\n-fi\n-\n-\n echo enable_cycle_accurate is $enable_cycle_accurate\n-echo enable_cycle_stats is $enable_cycle_stats\n \n if test \"x${enable_cycle_accurate}\" != xno; then\n \n $as_echo \"#define CYCLE_ACCURATE 1\" >>confdefs.h\n \n-\n-  if test \"x${enable_cycle_stats}\" != xno; then\n-\n-$as_echo \"#define CYCLE_STATS 1\" >>confdefs.h\n-\n-  fi\n-else\n-  if test \"x${enable_cycle_stats}\" != xno; then\n-    as_fn_error $? \"cycle-stats not available without cycle-accurate\" \"$LINENO\" 5\n-  fi\n fi\n \n "
    },
    {
      "sha": "b2725fea79766e130f517cc40ee672f67ed4439f",
      "filename": "sim/rx/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/configure.ac?ref=a687671327dd2eb4d715745cce04a8f1c96e1fc1",
      "patch": "@@ -31,27 +31,10 @@ yes | no) ;;\n *)\tAC_MSG_ERROR(bad value ${enableval} given for --enable-cycle-accurate option) ;;\n esac])\n \n-AC_ARG_ENABLE(cycle-stats,\n-[AS_HELP_STRING([--disable-cycle-stats],\n-\t\t[Disable cycle statistics (faster runtime)])],\n-[case \"${enableval}\" in\n-yes | no) ;;\n-*)\tAC_MSG_ERROR(bad value ${enableval} given for --enable-cycle-stats option) ;;\n-esac])\n-\n echo enable_cycle_accurate is $enable_cycle_accurate\n-echo enable_cycle_stats is $enable_cycle_stats\n \n if test \"x${enable_cycle_accurate}\" != xno; then\n   AC_DEFINE([CYCLE_ACCURATE], 1, [--enable-cycle-accurate])\n-\n-  if test \"x${enable_cycle_stats}\" != xno; then\n-    AC_DEFINE([CYCLE_STATS], 1, [--enable-cycle-stats])\n-  fi\n-else\n-  if test \"x${enable_cycle_stats}\" != xno; then\n-    AC_ERROR([cycle-stats not available without cycle-accurate])\n-  fi\n fi\n \n SIM_AC_OUTPUT"
    },
    {
      "sha": "1cbd3587cf71f2b1e9549d79032b2ff18b85cde1",
      "filename": "sim/rx/mem.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/mem.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/mem.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/mem.c?ref=a687671327dd2eb4d715745cce04a8f1c96e1fc1",
      "patch": "@@ -317,7 +317,7 @@ mem_put_byte (unsigned int address, unsigned char value)\n       }\n       break;\n \n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n     case 0x0008c02b: /* PB.DR */\n       {\n \tif (value == 0)"
    },
    {
      "sha": "666122792f5532bd14b724de8244cae88a407766",
      "filename": "sim/rx/rx.c",
      "status": "modified",
      "additions": 16,
      "deletions": 16,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/rx.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a687671327dd2eb4d715745cce04a8f1c96e1fc1/sim/rx/rx.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/rx.c?ref=a687671327dd2eb4d715745cce04a8f1c96e1fc1",
      "patch": "@@ -35,7 +35,7 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n #include \"err.h\"\n #include \"misc.h\"\n \n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n static const char * id_names[] = {\n   \"RXO_unknown\",\n   \"RXO_mov\",\t/* d = s (signed) */\n@@ -213,7 +213,7 @@ static int po0;\n \n #else\n #define STATS(x)\n-#endif /* CYCLE_STATS */\n+#endif /* WITH_PROFILE */\n \n \n #ifdef CYCLE_ACCURATE\n@@ -424,7 +424,7 @@ get_op (const RX_Opcode_Decoded *rd, int i)\n       if (regs.m2m == M2M_BOTH)\n \t{\n \t  tprintf(\"src memory stall\\n\");\n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n \t  memory_stalls ++;\n #endif\n \t  regs.cycle_count ++;\n@@ -594,7 +594,7 @@ put_op (const RX_Opcode_Decoded *rd, int i, int v)\n \t{\n \t  tprintf(\"dst memory stall\\n\");\n \t  regs.cycle_count ++;\n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n \t  memory_stalls ++;\n #endif\n \t  regs.m2m = 0;\n@@ -943,14 +943,14 @@ decode_opcode (void)\n   unsigned long opcode_pc;\n   RX_Data rx_data;\n   const RX_Opcode_Decoded *opcode;\n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n   unsigned long long prev_cycle_count;\n #endif\n #ifdef CYCLE_ACCURATE\n   unsigned int tx;\n #endif\n \n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n   prev_cycle_count = regs.cycle_count;\n #endif\n \n@@ -988,7 +988,7 @@ decode_opcode (void)\n \t{\n \t  tprintf(\"1 cycle branch alignment penalty\\n\");\n \t  cycles (branch_alignment_penalty);\n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n \t  branch_alignment_stalls ++;\n #endif\n \t}\n@@ -1087,7 +1087,7 @@ decode_opcode (void)\n \t      cycles (3);\n \t      branch_alignment_penalty = 1;\n \t    }\n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n \t  branch_stalls ++;\n #endif\n #endif\n@@ -1116,7 +1116,7 @@ decode_opcode (void)\n \t      cycles (3);\n \t      branch_alignment_penalty = 1;\n \t    }\n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n \t  branch_stalls ++;\n #endif\n #endif\n@@ -1754,7 +1754,7 @@ decode_opcode (void)\n \t/* Note: specs say 5, chip says 3.  */\n \tif (regs.fast_return && regs.link_register == regs.r_pc)\n \t  {\n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n \t    fast_returns ++;\n #endif\n \t    tprintf(\"fast return bonus\\n\");\n@@ -1796,7 +1796,7 @@ decode_opcode (void)\n       if (regs.fast_return && regs.link_register == regs.r_pc)\n \t{\n \t  tprintf(\"fast return bonus\\n\");\n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n \t  fast_returns ++;\n #endif\n \t  cycles (tx < 3 ? 3 : tx + 1);\n@@ -2172,15 +2172,15 @@ decode_opcode (void)\n   new_rt = -1;\n #endif\n \n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n   if (prev_cycle_count == regs.cycle_count)\n     {\n       printf(\"Cycle count not updated! id %s\\n\", id_names[opcode->id]);\n       abort ();\n     }\n #endif\n \n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n   if (running_benchmark)\n     {\n       int omap = op_lookup (opcode->op[0].type, opcode->op[1].type, opcode->op[2].type);\n@@ -2199,7 +2199,7 @@ decode_opcode (void)\n   return RX_MAKE_STEPPED ();\n }\n \n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n void\n reset_pipeline_stats (void)\n {\n@@ -2227,7 +2227,7 @@ halt_pipeline_stats (void)\n void\n pipeline_stats (void)\n {\n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n   int i, o1;\n   int p, p1;\n #endif\n@@ -2242,7 +2242,7 @@ pipeline_stats (void)\n   printf (\"cycles: %13s\\n\", comma (regs.cycle_count));\n #endif\n \n-#ifdef CYCLE_STATS\n+#ifdef WITH_PROFILE\n   if (benchmark_start_cycle)\n     printf (\"bmark:  %13s\\n\", comma (benchmark_end_cycle - benchmark_start_cycle));\n "
    }
  ]
}