{
  "sha": "62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjJlNmI3YjNiM2M2ZjJmZmZlOWY1ODYzZGRlYmY0MzA1MzNiNzlmMA==",
  "commit": {
    "author": {
      "name": "Alexandre Oliva",
      "email": "aoliva@redhat.com",
      "date": "2019-05-06T02:07:20Z"
    },
    "committer": {
      "name": "Alexandre Oliva",
      "email": "aoliva@redhat.com",
      "date": "2019-05-06T02:07:20Z"
    },
    "message": "[LVu] base subseg head view on prev subseg's tail\n\nLocation views at borders between subsegments/subsections in the same\nsegment/section are computed as if each new subsegment/subsection\nstarted with a forced view reset to zero, but the line number program\ndoes not introduce resets that are not explicitly requested, so if a\nsubsegment ends at the same address another starts, the line number\nprogram will have a continuity of views at the border address, whereas\nthe initial view number label in the latter subsegment will be\nmiscomputed as zero.\n\nThis patch delays the assignment of view expressions at subsegment\nheads to the time of chaining the frags of subsegments into a single\nsegment, so that they are set based on the view at the end of the\nprevious subsegment in the same segment.\n\nThe line number program created for the test program had an\nunnecessary DW_LNS_advance_pc at the end.  This patch also arranges\nfor us not to emit it.\n\n\nfor  gas/ChangeLog\n\n\t* dwarf2dbg.c (set_or_check_view): Skip heads when assigning\n\tviews of prior locs.\n\t(dwarf2_gen_line_info_1): Skip heads.\n\t(size_inc_line_addr, emit_inc_line_addr): Drop\n\tDW_LNS_advance_pc for zero addr delta.\n\t(dwarf2_finish): Assign views for heads of segments.\n\t* testsuite/gas/elf/dwarf2-19.d: New.\n\t* testsuite/gas/elf/dwarf2-19.s: New.\n\t* testsuite/gas/elf/elf.exp: Test it.",
    "tree": {
      "sha": "5f3534e2151489c6d41da254ef1c65d2710e51d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5f3534e2151489c6d41da254ef1c65d2710e51d1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "bd1efd7d2111e37e2471facca117650a213f332e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bd1efd7d2111e37e2471facca117650a213f332e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bd1efd7d2111e37e2471facca117650a213f332e"
    }
  ],
  "stats": {
    "total": 112,
    "additions": 107,
    "deletions": 5
  },
  "files": [
    {
      "sha": "b5703cdee9be27531a6c691cc8da1fb350e0edd4",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0",
      "patch": "@@ -1,3 +1,15 @@\n+2019-05-05  Alexandre Oliva <aoliva@redhat.com>\n+\n+\t* dwarf2dbg.c (set_or_check_view): Skip heads when assigning\n+\tviews of prior locs.\n+\t(dwarf2_gen_line_info_1): Skip heads.\n+\t(size_inc_line_addr, emit_inc_line_addr): Drop\n+\tDW_LNS_advance_pc for zero addr delta.\n+\t(dwarf2_finish): Assign views for heads of segments.\n+\t* testsuite/gas/elf/dwarf2-19.d: New.\n+\t* testsuite/gas/elf/dwarf2-19.s: New.\n+\t* testsuite/gas/elf/elf.exp: Test it.\n+\n 2019-05-04  Alan Modra  <amodra@gmail.com>\n \n \t* config/tc-m32c.c (insn_size): Delete static var."
    },
    {
      "sha": "b77751d8af3d922a7648d4525a775e26727644f5",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 32,
      "deletions": 5,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0",
      "patch": "@@ -442,7 +442,16 @@ set_or_check_view (struct line_entry *e, struct line_entry *p,\n       gas_assert (r == p);\n       /* Set or check views until we find a defined or absent view.  */\n       do\n-\tset_or_check_view (r, r->next, NULL);\n+\t{\n+\t  /* Do not define the head of a (sub?)segment view while\n+\t     handling others.  It would be defined too early, without\n+\t     regard to the last view of other subsegments.\n+\t     set_or_check_view will be called for every head segment\n+\t     that needs it.  */\n+\t  if (r == h)\n+\t    break;\n+\t  set_or_check_view (r, r->next, NULL);\n+\t}\n       while (r->next && r->next->loc.view && !S_IS_DEFINED (r->next->loc.view)\n \t     && (r = r->next));\n \n@@ -454,6 +463,11 @@ set_or_check_view (struct line_entry *e, struct line_entry *p,\n \t simplify the view expressions, until we do so to P.  */\n       do\n \t{\n+\t  /* The head view of a subsegment may remain undefined while\n+\t     handling other elements, before it is linked to the last\n+\t     view of the previous subsegment.  */\n+\t  if (r == h)\n+\t    continue;\n \t  gas_assert (S_IS_DEFINED (r->loc.view));\n \t  resolve_expression (symbol_get_value_expression (r->loc.view));\n \t}\n@@ -480,9 +494,11 @@ dwarf2_gen_line_info_1 (symbolS *label, struct dwarf2_line_info *loc)\n \n   lss = get_line_subseg (now_seg, now_subseg, TRUE);\n \n-  if (loc->view)\n+  /* Subseg heads are chained to previous subsegs in\n+     dwarf2_finish.  */\n+  if (loc->view && lss->head)\n     set_or_check_view (e,\n-\t\t       !lss->head ? NULL : (struct line_entry *)lss->ptail,\n+\t\t       (struct line_entry *)lss->ptail,\n \t\t       lss->head);\n \n   *lss->ptail = e;\n@@ -1176,7 +1192,7 @@ size_inc_line_addr (int line_delta, addressT addr_delta)\n     {\n       if (addr_delta == MAX_SPECIAL_ADDR_DELTA)\n \tlen = 1;\n-      else\n+      else if (addr_delta)\n \tlen = 1 + sizeof_leb128 (addr_delta, 0);\n       return len + 3;\n     }\n@@ -1240,7 +1256,7 @@ emit_inc_line_addr (int line_delta, addressT addr_delta, char *p, int len)\n     {\n       if (addr_delta == MAX_SPECIAL_ADDR_DELTA)\n \t*p++ = DW_LNS_const_add_pc;\n-      else\n+      else if (addr_delta)\n \t{\n \t  *p++ = DW_LNS_advance_pc;\n \t  p += output_leb128 (p, addr_delta, 0);\n@@ -2218,8 +2234,19 @@ dwarf2_finish (void)\n       struct line_subseg *lss = s->head;\n       struct line_entry **ptail = lss->ptail;\n \n+      /* Reset the initial view of the first subsection of the\n+\t section.  */\n+      if (lss->head && lss->head->loc.view)\n+\tset_or_check_view (lss->head, NULL, NULL);\n+\n       while ((lss = lss->next) != NULL)\n \t{\n+\t  /* Link the first view of subsequent subsections to the\n+\t     previous view.  */\n+\t  if (lss->head && lss->head->loc.view)\n+\t    set_or_check_view (lss->head,\n+\t\t\t       !s->head ? NULL : (struct line_entry *)ptail,\n+\t\t\t       s->head ? s->head->head : NULL);\n \t  *ptail = lss->head;\n \t  ptail = lss->ptail;\n \t}"
    },
    {
      "sha": "ebb3bf984b1cd91bbb737d6bdf7ddc5e86d6c3a3",
      "filename": "gas/testsuite/gas/elf/dwarf2-19.d",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0/gas/testsuite/gas/elf/dwarf2-19.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0/gas/testsuite/gas/elf/dwarf2-19.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/dwarf2-19.d?ref=62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0",
      "patch": "@@ -0,0 +1,21 @@\n+#as:\n+#readelf: -x.rodata -wL\n+#name: DWARF2 19\n+# The am33 avr cr16 crx ft32 mn10 msp430 nds32 pru rl78 and xtensa targets do not evaluate the subtraction of symbols at assembly time.\n+# The riscv targets do not support the subtraction of symbols.\n+# The tile targets require 8-byte instructions, but the test only simulates 4-byte instructions.\n+#notarget: am3*-* avr-* cr16-* crx-* ft32*-* mn10*-* msp430-* nds32*-* pru-* riscv*-* rl78-* tile*-* xtensa-*\n+\n+Hex dump of section '\\.rodata':\n+  0x00000000 01000102 *.*\n+\n+Contents of the \\.debug_line section:\n+\n+CU: dwarf2-19\\.c:\n+File name  *Line number  *Starting address  *View +Stmt\n+dwarf2-19\\.c  *1  *0 +x\n+dwarf2-19\\.c  *2  *0  *1 +x\n+dwarf2-19\\.c  *4  *0x4 +x\n+dwarf2-19\\.c  *5  *0x4  *1 +x\n+dwarf2-19\\.c  *3  *0x4  *2 +x\n+dwarf2-19\\.c  *3  *0x4  *3 +x"
    },
    {
      "sha": "dd87be8fc9c1e395457dc563fd26edf0e8db1fb8",
      "filename": "gas/testsuite/gas/elf/dwarf2-19.s",
      "status": "added",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0/gas/testsuite/gas/elf/dwarf2-19.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0/gas/testsuite/gas/elf/dwarf2-19.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/dwarf2-19.s?ref=62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0",
      "patch": "@@ -0,0 +1,41 @@\n+/* Test view numbering continuity at subsection borders.\n+\n+   Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+\t.file \"dwarf2-19.c\"\n+\t.text 0\n+\t.balign 4\n+\t.globl _start\n+_start:\n+\t.file 1 \"dwarf2-19.c\"\n+\t.loc 1 1 view 0\n+\n+\t.section .rodata\n+\t.uleb128 .L1\n+\t.uleb128 .L3\n+\t.uleb128 .L4\n+\t.uleb128 .L2\n+\n+\t.text 1\n+\t.loc 1 2 view .L1 \t/* same address as view 0 above -> view 1 */\n+\n+\t.text 2\n+\t.loc 1 3 view .L2\t/* same address as .L4 below -> view 2 */\n+\n+\t.text 1\n+\t.dc.l 0\n+\t.loc 1 4 view .L3\t/* bumped address from .L1's, view 0 */\n+\t.loc 1 5 view .L4\t/* same address, view 1 */"
    },
    {
      "sha": "01d8b9dcb5f28a64d0e6a47881af0f4c97c273ba",
      "filename": "gas/testsuite/gas/elf/elf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0/gas/testsuite/gas/elf/elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0/gas/testsuite/gas/elf/elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/elf.exp?ref=62e6b7b3b3c6f2fffe9f5863ddebf430533b79f0",
      "patch": "@@ -251,6 +251,7 @@ if { [is_elf_format] } then {\n     run_dump_test \"dwarf2-16\"\n     run_dump_test \"dwarf2-17\"\n     run_dump_test \"dwarf2-18\"\n+    run_dump_test \"dwarf2-19\"\n     run_dump_test \"bss\"\n     run_dump_test \"bad-bss\"\n     run_dump_test \"bad-section-flag\""
    }
  ]
}