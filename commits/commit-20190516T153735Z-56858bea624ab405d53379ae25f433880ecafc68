{
  "sha": "56858bea624ab405d53379ae25f433880ecafc68",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTY4NThiZWE2MjRhYjQwNWQ1MzM3OWFlMjVmNDMzODgwZWNhZmM2OA==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T13:45:17Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:37:35Z"
    },
    "message": "[PATCH 54/57][Arm][OBJDUMP] Add support for MVE instructions: vmax(a), vmax(a)v, vmaxnm(a), vmaxnm(a)v, vmin(a), vmin(a)v, vminnm(a), vminnm(a)v and vmla\n\nopcodes/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\t    Michael Collison <michael.collison@arm.com>\n\n\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n\t(enum mve_instructions): Likewise.\n\t(is_mve_encoding_conflict): Likewise.\n\t(is_mve_unpredictable): Likewise.\n\t(print_mve_size): Likewise.",
    "tree": {
      "sha": "3f5560721e533c6d9790e1bbfb8131c7721970b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3f5560721e533c6d9790e1bbfb8131c7721970b9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/56858bea624ab405d53379ae25f433880ecafc68",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56858bea624ab405d53379ae25f433880ecafc68",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/56858bea624ab405d53379ae25f433880ecafc68",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56858bea624ab405d53379ae25f433880ecafc68/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e523f10159d469dc0ca77069d092411f200685a1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e523f10159d469dc0ca77069d092411f200685a1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e523f10159d469dc0ca77069d092411f200685a1"
    }
  ],
  "stats": {
    "total": 163,
    "additions": 163,
    "deletions": 0
  },
  "files": [
    {
      "sha": "2f3e2a759257f5d2aa9639464e81f4ecc0cbb57a",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56858bea624ab405d53379ae25f433880ecafc68/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56858bea624ab405d53379ae25f433880ecafc68/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=56858bea624ab405d53379ae25f433880ecafc68",
      "patch": "@@ -1,3 +1,12 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n+\t(enum mve_instructions): Likewise.\n+\t(is_mve_encoding_conflict): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_size): Likewise.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \t    Michael Collison <michael.collison@arm.com>\n "
    },
    {
      "sha": "c95ef0805107c6d814b8976fa2e0b3360b38922e",
      "filename": "opcodes/arm-dis.c",
      "status": "modified",
      "additions": 154,
      "deletions": 0,
      "changes": 154,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56858bea624ab405d53379ae25f433880ecafc68/opcodes/arm-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56858bea624ab405d53379ae25f433880ecafc68/opcodes/arm-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arm-dis.c?ref=56858bea624ab405d53379ae25f433880ecafc68",
      "patch": "@@ -228,6 +228,23 @@ enum mve_instructions\n   MVE_VCLS,\n   MVE_VCLZ,\n   MVE_VCTP,\n+  MVE_VMAX,\n+  MVE_VMAXA,\n+  MVE_VMAXNM_FP,\n+  MVE_VMAXNMA_FP,\n+  MVE_VMAXNMV_FP,\n+  MVE_VMAXNMAV_FP,\n+  MVE_VMAXV,\n+  MVE_VMAXAV,\n+  MVE_VMIN,\n+  MVE_VMINA,\n+  MVE_VMINNM_FP,\n+  MVE_VMINNMA_FP,\n+  MVE_VMINNMV_FP,\n+  MVE_VMINNMAV_FP,\n+  MVE_VMINV,\n+  MVE_VMINAV,\n+  MVE_VMLA,\n   MVE_NONE\n };\n \n@@ -2459,6 +2476,108 @@ static const struct mopcode32 mve_opcodes[] =\n    0xec101f00, 0xfe101f80,\n    \"vldrw%v.u32\\t%13-15,22Q, %d\"},\n \n+  /* Vector VMAX.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMAX,\n+   0xef000640, 0xef811f51,\n+   \"vmax%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n+\n+  /* Vector VMAXA.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMAXA,\n+   0xee330e81, 0xffb31fd1,\n+   \"vmaxa%v.s%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n+\n+  /* Vector VMAXNM floating point.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+   MVE_VMAXNM_FP,\n+   0xff000f50, 0xffa11f51,\n+   \"vmaxnm%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n+\n+  /* Vector VMAXNMA floating point.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+   MVE_VMAXNMA_FP,\n+   0xee3f0e81, 0xefbf1fd1,\n+   \"vmaxnma%v.f%28s\\t%13-15,22Q, %1-3,5Q\"},\n+\n+  /* Vector VMAXNMV floating point.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+   MVE_VMAXNMV_FP,\n+   0xeeee0f00, 0xefff0fd1,\n+   \"vmaxnmv%v.f%28s\\t%12-15r, %1-3,5Q\"},\n+\n+  /* Vector VMAXNMAV floating point.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+   MVE_VMAXNMAV_FP,\n+   0xeeec0f00, 0xefff0fd1,\n+   \"vmaxnmav%v.f%28s\\t%12-15r, %1-3,5Q\"},\n+\n+  /* Vector VMAXV.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMAXV,\n+   0xeee20f00, 0xeff30fd1,\n+   \"vmaxv%v.%u%18-19s\\t%12-15r, %1-3,5Q\"},\n+\n+  /* Vector VMAXAV.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMAXAV,\n+   0xeee00f00, 0xfff30fd1,\n+   \"vmaxav%v.s%18-19s\\t%12-15r, %1-3,5Q\"},\n+\n+  /* Vector VMIN.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMIN,\n+   0xef000650, 0xef811f51,\n+   \"vmin%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n+\n+  /* Vector VMINA.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMINA,\n+   0xee331e81, 0xffb31fd1,\n+   \"vmina%v.s%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n+\n+  /* Vector VMINNM floating point.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+   MVE_VMINNM_FP,\n+   0xff200f50, 0xffa11f51,\n+   \"vminnm%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n+\n+  /* Vector VMINNMA floating point.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+   MVE_VMINNMA_FP,\n+   0xee3f1e81, 0xefbf1fd1,\n+   \"vminnma%v.f%28s\\t%13-15,22Q, %1-3,5Q\"},\n+\n+  /* Vector VMINNMV floating point.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+   MVE_VMINNMV_FP,\n+   0xeeee0f80, 0xefff0fd1,\n+   \"vminnmv%v.f%28s\\t%12-15r, %1-3,5Q\"},\n+\n+  /* Vector VMINNMAV floating point.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+   MVE_VMINNMAV_FP,\n+   0xeeec0f80, 0xefff0fd1,\n+   \"vminnmav%v.f%28s\\t%12-15r, %1-3,5Q\"},\n+\n+  /* Vector VMINV.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMINV,\n+   0xeee20f80, 0xeff30fd1,\n+   \"vminv%v.%u%18-19s\\t%12-15r, %1-3,5Q\"},\n+\n+  /* Vector VMINAV.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMINAV,\n+   0xeee00f80, 0xfff30fd1,\n+   \"vminav%v.s%18-19s\\t%12-15r, %1-3,5Q\"},\n+\n+  /* Vector VMLA.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMLA,\n+   0xee010e40, 0xef811f70,\n+   \"vmla%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n+\n   /* Vector VMLALDAV.  Note must appear before VMLADAV due to instruction\n      opcode aliasing.  */\n   {ARM_FEATURE_COPROC (FPU_MVE),\n@@ -5064,6 +5183,9 @@ is_mve_encoding_conflict (unsigned long given,\n       else\n \treturn FALSE;\n \n+    case MVE_VMLA:\n+    case MVE_VMAX:\n+    case MVE_VMIN:\n     case MVE_VBRSR:\n     case MVE_VADD_VEC_T2:\n     case MVE_VSUB_VEC_T2:\n@@ -5179,6 +5301,12 @@ is_mve_encoding_conflict (unsigned long given,\n \t  return FALSE;\n       }\n \n+    case MVE_VMAXA:\n+    case MVE_VMINA:\n+    case MVE_VMAXV:\n+    case MVE_VMAXAV:\n+    case MVE_VMINV:\n+    case MVE_VMINAV:\n     case MVE_VQRSHL_T2:\n     case MVE_VQSHL_T1:\n     case MVE_VRSHL_T2:\n@@ -5761,6 +5889,7 @@ is_mve_unpredictable (unsigned long given, enum mve_instructions matched_insn,\n \treturn FALSE;\n       }\n \n+    case MVE_VMLA:\n     case MVE_VBRSR:\n     case MVE_VADD_FP_T2:\n     case MVE_VSUB_FP_T2:\n@@ -5971,6 +6100,14 @@ is_mve_unpredictable (unsigned long given, enum mve_instructions matched_insn,\n \treturn FALSE;\n       }\n \n+    case MVE_VMAXV:\n+    case MVE_VMAXAV:\n+    case MVE_VMAXNMV_FP:\n+    case MVE_VMAXNMAV_FP:\n+    case MVE_VMINNMV_FP:\n+    case MVE_VMINNMAV_FP:\n+    case MVE_VMINV:\n+    case MVE_VMINAV:\n     case MVE_VABAV:\n     case MVE_VMOV_HFP_TO_GP:\n     case MVE_VMOV_GP_TO_VEC_LANE:\n@@ -6870,6 +7007,15 @@ print_mve_size (struct disassemble_info *info,\n     case MVE_VLDRD_GATHER_T4:\n     case MVE_VLDRB_T1:\n     case MVE_VLDRH_T2:\n+    case MVE_VMAX:\n+    case MVE_VMAXA:\n+    case MVE_VMAXV:\n+    case MVE_VMAXAV:\n+    case MVE_VMIN:\n+    case MVE_VMINA:\n+    case MVE_VMINV:\n+    case MVE_VMINAV:\n+    case MVE_VMLA:\n     case MVE_VMLAS:\n     case MVE_VPT_VEC_T1:\n     case MVE_VPT_VEC_T2:\n@@ -6926,6 +7072,14 @@ print_mve_size (struct disassemble_info *info,\n     case MVE_VFMA_FP:\n     case MVE_VFMS_FP:\n     case MVE_VFMAS_FP_SCALAR:\n+    case MVE_VMAXNM_FP:\n+    case MVE_VMAXNMA_FP:\n+    case MVE_VMAXNMV_FP:\n+    case MVE_VMAXNMAV_FP:\n+    case MVE_VMINNM_FP:\n+    case MVE_VMINNMA_FP:\n+    case MVE_VMINNMV_FP:\n+    case MVE_VMINNMAV_FP:\n     case MVE_VPT_FP_T1:\n     case MVE_VPT_FP_T2:\n       if (size == 0)"
    }
  ]
}