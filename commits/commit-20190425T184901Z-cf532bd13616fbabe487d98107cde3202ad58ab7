{
  "sha": "cf532bd13616fbabe487d98107cde3202ad58ab7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2Y1MzJiZDEzNjE2ZmJhYmU0ODdkOTgxMDdjZGUzMjAyYWQ1OGFiNw==",
  "commit": {
    "author": {
      "name": "Ali Tamur",
      "email": "tamur@google.com",
      "date": "2019-03-30T02:29:24Z"
    },
    "committer": {
      "name": "Ali Tamur",
      "email": "tamur@google.com",
      "date": "2019-04-25T18:49:01Z"
    },
    "message": "[PATCH] Support for DW_FORM_strx tag\n\nDW_FORM_strx is the new name of DW_FORM_GNU_str_index in the Dwarf 5 standard.\nThis is a small step towards supporting Dwarf 5 in gdb.",
    "tree": {
      "sha": "43e5a12167fd70deec6981e21c7bc49eb8113c46",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/43e5a12167fd70deec6981e21c7bc49eb8113c46"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cf532bd13616fbabe487d98107cde3202ad58ab7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf532bd13616fbabe487d98107cde3202ad58ab7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cf532bd13616fbabe487d98107cde3202ad58ab7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf532bd13616fbabe487d98107cde3202ad58ab7/comments",
  "author": {
    "login": "alitamur",
    "id": 59383390,
    "node_id": "MDQ6VXNlcjU5MzgzMzkw",
    "avatar_url": "https://avatars.githubusercontent.com/u/59383390?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alitamur",
    "html_url": "https://github.com/alitamur",
    "followers_url": "https://api.github.com/users/alitamur/followers",
    "following_url": "https://api.github.com/users/alitamur/following{/other_user}",
    "gists_url": "https://api.github.com/users/alitamur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alitamur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alitamur/subscriptions",
    "organizations_url": "https://api.github.com/users/alitamur/orgs",
    "repos_url": "https://api.github.com/users/alitamur/repos",
    "events_url": "https://api.github.com/users/alitamur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alitamur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "alitamur",
    "id": 59383390,
    "node_id": "MDQ6VXNlcjU5MzgzMzkw",
    "avatar_url": "https://avatars.githubusercontent.com/u/59383390?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alitamur",
    "html_url": "https://github.com/alitamur",
    "followers_url": "https://api.github.com/users/alitamur/followers",
    "following_url": "https://api.github.com/users/alitamur/following{/other_user}",
    "gists_url": "https://api.github.com/users/alitamur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alitamur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alitamur/subscriptions",
    "organizations_url": "https://api.github.com/users/alitamur/orgs",
    "repos_url": "https://api.github.com/users/alitamur/repos",
    "events_url": "https://api.github.com/users/alitamur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alitamur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "82433e3e270973c3f49d55d41266de6adbf9006d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82433e3e270973c3f49d55d41266de6adbf9006d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/82433e3e270973c3f49d55d41266de6adbf9006d"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 24,
    "deletions": 2
  },
  "files": [
    {
      "sha": "5167cc26754f14a10c033ef876117762fb814d67",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf532bd13616fbabe487d98107cde3202ad58ab7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf532bd13616fbabe487d98107cde3202ad58ab7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cf532bd13616fbabe487d98107cde3202ad58ab7",
      "patch": "@@ -1,3 +1,16 @@\n+2019-04-25  Ali Tamur  <tamur@google.com>\n+\n+\t* dwarf2read.c (skip_one_die): Add DW_FORM_strx.\n+\t(read_attribute_value): Likewise.\n+\t(dwarf2_read_addr_index): Update comment.\n+\t(read_str_index): Add DW_FORM_strx.\n+\t(dwarf2_string_attr): Likewise.\n+\t(dwarf2_const_value_attr): Likewise.\n+\t(dump_die_shallow): Likewise.\n+\t(dwarf2_fetch_constant_bytes): Likewise.\n+\t(skip_form_bytes): Likewise.\n+\t* testsuite/lib/dwarf.exp (_handle_DW_FORM): Add DW_FORM_strx.\n+\n 2019-04-25  Sergio Durigan Junior  <sergiodj@redhat.com>\n \n \tPR corefiles/11608"
    },
    {
      "sha": "4259c386b9b21f80a0472106a100d0c2a251668a",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf532bd13616fbabe487d98107cde3202ad58ab7/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf532bd13616fbabe487d98107cde3202ad58ab7/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=cf532bd13616fbabe487d98107cde3202ad58ab7",
      "patch": "@@ -9361,6 +9361,7 @@ skip_one_die (const struct die_reader_specs *reader, const gdb_byte *info_ptr,\n \t  info_ptr += 4 + read_4_bytes (abfd, info_ptr);\n \t  break;\n \tcase DW_FORM_addrx:\n+\tcase DW_FORM_strx:\n \tcase DW_FORM_sdata:\n \tcase DW_FORM_udata:\n \tcase DW_FORM_ref_udata:\n@@ -19287,6 +19288,7 @@ read_attribute_value (const struct die_reader_specs *reader,\n       DW_ADDR (attr) = read_addr_index_from_leb128 (cu, info_ptr, &bytes_read);\n       info_ptr += bytes_read;\n       break;\n+    case DW_FORM_strx:\n     case DW_FORM_GNU_str_index:\n       if (reader->dwo_file == NULL)\n \t{\n@@ -19882,7 +19884,7 @@ dwarf2_read_addr_index (struct dwarf2_per_cu_data *per_cu,\n \t\t\t    addr_size);\n }\n \n-/* Given a DW_FORM_GNU_str_index, fetch the string.\n+/* Given a DW_FORM_GNU_str_index or DW_FORM_strx, fetch the string.\n    This is only used by the Fission support.  */\n \n static const char *\n@@ -19899,7 +19901,7 @@ read_str_index (const struct die_reader_specs *reader, ULONGEST str_index)\n     &reader->dwo_file->sections.str_offsets;\n   const gdb_byte *info_ptr;\n   ULONGEST str_offset;\n-  static const char form_name[] = \"DW_FORM_GNU_str_index\";\n+  static const char form_name[] = \"DW_FORM_GNU_str_index or DW_FORM_strx\";\n \n   dwarf2_read_section (objfile, str_section);\n   dwarf2_read_section (objfile, str_offsets_section);\n@@ -20065,6 +20067,7 @@ dwarf2_string_attr (struct die_info *die, unsigned int name, struct dwarf2_cu *c\n     {\n       if (attr->form == DW_FORM_strp || attr->form == DW_FORM_line_strp\n \t  || attr->form == DW_FORM_string\n+\t  || attr->form == DW_FORM_strx\n \t  || attr->form == DW_FORM_GNU_str_index\n \t  || attr->form == DW_FORM_GNU_strp_alt)\n \tstr = DW_STRING (attr);\n@@ -21888,6 +21891,7 @@ dwarf2_const_value_attr (const struct attribute *attr, struct type *type,\n       break;\n     case DW_FORM_string:\n     case DW_FORM_strp:\n+    case DW_FORM_strx:\n     case DW_FORM_GNU_str_index:\n     case DW_FORM_GNU_strp_alt:\n       /* DW_STRING is already allocated on the objfile obstack, point\n@@ -22892,6 +22896,7 @@ dump_die_shallow (struct ui_file *f, int indent, struct die_info *die)\n \tcase DW_FORM_string:\n \tcase DW_FORM_strp:\n \tcase DW_FORM_line_strp:\n+\tcase DW_FORM_strx:\n \tcase DW_FORM_GNU_str_index:\n \tcase DW_FORM_GNU_strp_alt:\n \t  fprintf_unfiltered (f, \"string: \\\"%s\\\" (%s canonicalized)\",\n@@ -23320,6 +23325,7 @@ dwarf2_fetch_constant_bytes (sect_offset sect_off,\n       break;\n     case DW_FORM_string:\n     case DW_FORM_strp:\n+    case DW_FORM_strx:\n     case DW_FORM_GNU_str_index:\n     case DW_FORM_GNU_strp_alt:\n       /* DW_STRING is already allocated on the objfile obstack, point\n@@ -24285,6 +24291,7 @@ skip_form_bytes (bfd *abfd, const gdb_byte *bytes, const gdb_byte *buffer_end,\n \n     case DW_FORM_addrx:\n     case DW_FORM_sdata:\n+    case DW_FORM_strx:\n     case DW_FORM_udata:\n     case DW_FORM_GNU_addr_index:\n     case DW_FORM_GNU_str_index:"
    },
    {
      "sha": "3a430fcd962e803b58ec78fe33433776896ea861",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf532bd13616fbabe487d98107cde3202ad58ab7/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf532bd13616fbabe487d98107cde3202ad58ab7/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=cf532bd13616fbabe487d98107cde3202ad58ab7",
      "patch": "@@ -527,6 +527,8 @@ namespace eval Dwarf {\n \t    DW_FORM_indirect -\n \t    DW_FORM_exprloc -\n \n+\t    DW_FORM_strx -\n+\n \t    DW_FORM_GNU_addr_index -\n \t    DW_FORM_GNU_str_index -\n \t    DW_FORM_GNU_ref_alt -"
    }
  ]
}