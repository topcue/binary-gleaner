{
  "sha": "283cb58c4ddb8a3dc7a014f5c6a41789fd7de939",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjgzY2I1OGM0ZGRiOGEzZGM3YTAxNGY1YzZhNDE3ODlmZDdkZTkzOQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-08T14:24:09Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-08T14:24:09Z"
    },
    "message": "[gdb/testsuite] Add gdb.dwarf2/clang-debug-names.c\n\nAdd test-case with .debug_names section using DW_FORM_ref4.\n\nThere's currently no support for .debug_names in the dwarf assembler, so we\nuse plain _emit rather than something more structured.\n\nConsequently, we cannot use regular declare_labels-generated labels to refer\nfrom .debug_names to .debug_info.  Instead, we use labels with a\npredefined name, which we generate using _compute_label, and then define using\ndefine_label.\n\nThis is the test-case for PR25952, so kfail the corresponding test.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-05-08  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.dwarf2/clang-debug-names.c: New test.\n\t* gdb.dwarf2/clang-debug-names.exp: New file.",
    "tree": {
      "sha": "009a4d7ea4eccdd7e825c006df2eecd8b2c6ba6d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/009a4d7ea4eccdd7e825c006df2eecd8b2c6ba6d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/283cb58c4ddb8a3dc7a014f5c6a41789fd7de939",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/283cb58c4ddb8a3dc7a014f5c6a41789fd7de939",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/283cb58c4ddb8a3dc7a014f5c6a41789fd7de939",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/283cb58c4ddb8a3dc7a014f5c6a41789fd7de939/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cee2106c5b6a19e89843e4bb32dc23dac87c42bf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cee2106c5b6a19e89843e4bb32dc23dac87c42bf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cee2106c5b6a19e89843e4bb32dc23dac87c42bf"
    }
  ],
  "stats": {
    "total": 186,
    "additions": 186,
    "deletions": 0
  },
  "files": [
    {
      "sha": "49445fa33161bb7610fcac7d3eb8cd6291f8b071",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/283cb58c4ddb8a3dc7a014f5c6a41789fd7de939/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/283cb58c4ddb8a3dc7a014f5c6a41789fd7de939/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=283cb58c4ddb8a3dc7a014f5c6a41789fd7de939",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-08  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.dwarf2/clang-debug-names.c: New test.\n+\t* gdb.dwarf2/clang-debug-names.exp: New file.\n+\n 2020-05-06  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdb.arch/amd64-prologue-skip-cf-protection.exp: New file."
    },
    {
      "sha": "d66c192dbf325b901fc5ca76476f0c2559caa374",
      "filename": "gdb/testsuite/gdb.dwarf2/clang-debug-names.c",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/283cb58c4ddb8a3dc7a014f5c6a41789fd7de939/gdb/testsuite/gdb.dwarf2/clang-debug-names.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/283cb58c4ddb8a3dc7a014f5c6a41789fd7de939/gdb/testsuite/gdb.dwarf2/clang-debug-names.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/clang-debug-names.c?ref=283cb58c4ddb8a3dc7a014f5c6a41789fd7de939",
      "patch": "@@ -0,0 +1,25 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int\n+main (void)\n+{\n+  asm (\"main_label: .globl main_label\");\n+  int sum, a, b;\n+  sum = a + b;\n+  return sum;\n+}"
    },
    {
      "sha": "8bd60401c46fe7e8478c15108a305a3216fb75e5",
      "filename": "gdb/testsuite/gdb.dwarf2/clang-debug-names.exp",
      "status": "added",
      "additions": 156,
      "deletions": 0,
      "changes": 156,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/283cb58c4ddb8a3dc7a014f5c6a41789fd7de939/gdb/testsuite/gdb.dwarf2/clang-debug-names.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/283cb58c4ddb8a3dc7a014f5c6a41789fd7de939/gdb/testsuite/gdb.dwarf2/clang-debug-names.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/clang-debug-names.exp?ref=283cb58c4ddb8a3dc7a014f5c6a41789fd7de939",
      "patch": "@@ -0,0 +1,156 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+load_lib dwarf.exp\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    return 0\n+}\n+\n+standard_testfile clang-debug-names.c clang-debug-names-debug.S\n+\n+# Set up the DWARF for the test.\n+\n+set main_str_label [Dwarf::_compute_label info_string3]\n+set int_str_label [Dwarf::_compute_label info_string4]\n+set main_die_label [Dwarf::_compute_label main_die_label]\n+set int_die_label [Dwarf::_compute_label int_die_label]\n+\n+set debug_str \\\n+    [list \\\n+         \"$main_str_label:\" \\\n+         \"  .asciz \\\"main\\\"\" \\\n+         \"$int_str_label:\" \\\n+         \"  .asciz \\\"int\\\"\"]\n+\n+set debug_names \\\n+    [list \\\n+         \"  .4byte  .Ldebug_names_end - .Ldebug_names_start\" \\\n+         \".Ldebug_names_start:\" \\\n+         \"  .short 5                      # Header: version\" \\\n+         \"  .short 0                      # Header: padding\" \\\n+         \"  .long 1                       # Header: compilation unit count\" \\\n+         \"  .long 0                       # Header: local type unit count\" \\\n+         \"  .long 0                       # Header: foreign type unit count\" \\\n+         \"  .long 2                       # Header: bucket count\" \\\n+         \"  .long 2                       # Header: name count\" \\\n+         \"  .long .Lnames_abbrev_end0-.Lnames_abbrev_start0 \" \\\n+         \"                                # Header: abbreviation table size\" \\\n+         \"  .long 8                       # Header: augmentation string size\" \\\n+         \"  .ascii \\\"LLVM0700\\\"    # Header: augmentation string\" \\\n+         \"  .long .Lcu1_begin             # Compilation unit 0\" \\\n+         \"  .long 1                       # Bucket 0\" \\\n+         \"  .long 0                       # Bucket 1\" \\\n+         \"  .long 193495088               # Hash in Bucket 0\" \\\n+         \"  .long 2090499946              # Hash in Bucket 0\" \\\n+         \"  .long $int_str_label          # String in Bucket 0: int\" \\\n+         \"  .long $main_str_label         # String in Bucket 0: main\" \\\n+         \"  .long .Lnames1-.Lnames_entries0 # Offset in Bucket 0\" \\\n+         \"  .long .Lnames0-.Lnames_entries0 # Offset in Bucket 0\" \\\n+         \".Lnames_abbrev_start0:\" \\\n+         \"  .byte 46                      # Abbrev code\" \\\n+         \"  .byte 46                      # DW_TAG_subprogram\" \\\n+         \"  .byte 3                       # DW_IDX_die_offset\" \\\n+         \"  .byte 19                      # DW_FORM_ref4\" \\\n+         \"  .byte 0                       # End of abbrev\" \\\n+         \"  .byte 0                       # End of abbrev\" \\\n+         \"  .byte 36                      # Abbrev code\" \\\n+         \"  .byte 36                      # DW_TAG_base_type\" \\\n+         \"  .byte 3                       # DW_IDX_die_offset\" \\\n+         \"  .byte 19                      # DW_FORM_ref4\" \\\n+         \"  .byte 0                       # End of abbrev\" \\\n+         \"  .byte 0                       # End of abbrev\" \\\n+         \"  .byte 0                       # End of abbrev list\" \\\n+         \".Lnames_abbrev_end0:\" \\\n+         \".Lnames_entries0:\" \\\n+         \".Lnames1:\" \\\n+         \"  .byte 36                      # Abbreviation code\" \\\n+         \"  .long $int_die_label - .Lcu1_begin # DW_IDX_die_offset\" \\\n+         \"  .long 0                       # End of list: int\" \\\n+         \".Lnames0:\" \\\n+         \"  .byte 46                      # Abbreviation code\" \\\n+         \"  .long $main_die_label - .Lcu1_begin # DW_IDX_die_offset\" \\\n+         \"  .long 0                       # End of list: main\" \\\n+         \"  .p2align 2\" \\\n+         \".Ldebug_names_end:\"]\n+\n+set asm_file [standard_output_file $srcfile2]\n+Dwarf::assemble $asm_file {\n+    global srcdir subdir srcfile\n+\n+    lassign [function_range main ${srcdir}/${subdir}/${srcfile}] \\\n+\tmain_start main_length\n+\n+    cu {} {\n+\tDW_TAG_compile_unit {\n+                {DW_AT_language @DW_LANG_C}\n+                {DW_AT_name     clang-debug-names.c}\n+                {DW_AT_comp_dir /tmp}\n+\n+        } {\n+\t    global int_die_label\n+\t    global main_die_label\n+\n+\t    define_label $int_die_label\n+\t    base_type {\n+\t\t{name \"int\"}\n+\t\t{encoding @DW_ATE_signed}\n+\t\t{byte_size 4 DW_FORM_sdata}\n+\t    }\n+\n+\t    define_label $main_die_label\n+\t    subprogram {\n+\t\t{name main}\n+\t\t{type :$int_die_label}\n+\t\t{low_pc $main_start addr}\n+\t\t{high_pc \"$main_start + $main_length\" addr}\n+\t    }\n+\t}\n+    }\n+\n+    _defer_output .debug_str {\n+\tglobal debug_str\n+\t_emit [join $debug_str \"\\n\"]\n+    }\n+\n+    _defer_output .debug_names {\n+\tglobal debug_names\n+\t_emit [join $debug_names \"\\n\"]\n+    }\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list $srcfile $asm_file] {nodebug}] } {\n+    return -1\n+}\n+\n+set cmd \"ptype main\"\n+set pass_re \\\n+    [multi_line \\\n+\t $cmd \\\n+\t \"type = int \\\\(\\\\)\"]\n+set kfail_re \\\n+    [multi_line \\\n+\t $cmd \\\n+\t \"type = <unknown return type> \\\\(\\\\)\"]\n+gdb_test_multiple $cmd \"\" {\n+    -re -wrap $pass_re {\n+\tpass $gdb_test_name\n+    }\n+    -re -wrap $kfail_re {\n+\tkfail symtab/25952 $gdb_test_name\n+    }\n+}"
    }
  ]
}