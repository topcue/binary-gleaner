{
  "sha": "58103c3313048575eb44197f0afef951354a65e8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTgxMDNjMzMxMzA0ODU3NWViNDQxOTdmMGFmZWY5NTEzNTRhNjVlOA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-29T22:11:14Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-29T22:11:33Z"
    },
    "message": "gdb: fix documentation of gdbarch_displaced_step_hw_singlestep\n\nThe last commit missed updating the doc of\ngdbarch_displaced_step_hw_singlestep to avoid mentioning the removed\nparameter, this one fixes it.\n\ngdb/ChangeLog:\n\n\t* gdbarch.sh (displaced_step_hw_singlestep): Adjust\n\tdocumentation.\n\t* gdbarch.h: Re-generate.\n\nChange-Id: I33675d9a6c253443eee707e8285d16615ce20aaa",
    "tree": {
      "sha": "8171d5f49a2ea10f39e6b43996944bfee7a6c299",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8171d5f49a2ea10f39e6b43996944bfee7a6c299"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/58103c3313048575eb44197f0afef951354a65e8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58103c3313048575eb44197f0afef951354a65e8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/58103c3313048575eb44197f0afef951354a65e8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58103c3313048575eb44197f0afef951354a65e8/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "40a5376690d9124b13ae9e9217cb7c524864e208",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/40a5376690d9124b13ae9e9217cb7c524864e208",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/40a5376690d9124b13ae9e9217cb7c524864e208"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 21,
    "deletions": 17
  },
  "files": [
    {
      "sha": "8be91cd5e295d3917a4288377d9a0ee60cd50997",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58103c3313048575eb44197f0afef951354a65e8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58103c3313048575eb44197f0afef951354a65e8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=58103c3313048575eb44197f0afef951354a65e8",
      "patch": "@@ -1,3 +1,9 @@\n+2020-10-29  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* gdbarch.sh (displaced_step_hw_singlestep): Adjust\n+\tdocumentation.\n+\t* gdbarch.h: Re-generate.\n+\n 2020-10-29  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* gdbarch.sh (displaced_step_hw_singlestep): Remove closure"
    },
    {
      "sha": "10f36edd4ccdd60227d325a52710ac374bd0de54",
      "filename": "gdb/gdbarch.h",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58103c3313048575eb44197f0afef951354a65e8/gdb/gdbarch.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58103c3313048575eb44197f0afef951354a65e8/gdb/gdbarch.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.h?ref=58103c3313048575eb44197f0afef951354a65e8",
      "patch": "@@ -1034,15 +1034,14 @@ typedef displaced_step_closure_up (gdbarch_displaced_step_copy_insn_ftype) (stru\n extern displaced_step_closure_up gdbarch_displaced_step_copy_insn (struct gdbarch *gdbarch, CORE_ADDR from, CORE_ADDR to, struct regcache *regs);\n extern void set_gdbarch_displaced_step_copy_insn (struct gdbarch *gdbarch, gdbarch_displaced_step_copy_insn_ftype *displaced_step_copy_insn);\n \n-/* Return true if GDB should use hardware single-stepping to execute\n-   the displaced instruction identified by CLOSURE.  If false,\n-   GDB will simply restart execution at the displaced instruction\n-   location, and it is up to the target to ensure GDB will receive\n-   control again (e.g. by placing a software breakpoint instruction\n-   into the displaced instruction buffer).\n+/* Return true if GDB should use hardware single-stepping to execute a displaced\n+   step instruction.  If false, GDB will simply restart execution at the\n+   displaced instruction location, and it is up to the target to ensure GDB will\n+   receive control again (e.g. by placing a software breakpoint instruction into\n+   the displaced instruction buffer).\n   \n-   The default implementation returns false on all targets that\n-   provide a gdbarch_software_single_step routine, and true otherwise. */\n+   The default implementation returns false on all targets that provide a\n+   gdbarch_software_single_step routine, and true otherwise. */\n \n typedef bool (gdbarch_displaced_step_hw_singlestep_ftype) (struct gdbarch *gdbarch);\n extern bool gdbarch_displaced_step_hw_singlestep (struct gdbarch *gdbarch);"
    },
    {
      "sha": "14f807904af4ee9fbdd14d63c1a4f2564a4277a3",
      "filename": "gdb/gdbarch.sh",
      "status": "modified",
      "additions": 8,
      "deletions": 9,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58103c3313048575eb44197f0afef951354a65e8/gdb/gdbarch.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58103c3313048575eb44197f0afef951354a65e8/gdb/gdbarch.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.sh?ref=58103c3313048575eb44197f0afef951354a65e8",
      "patch": "@@ -785,15 +785,14 @@ V;ULONGEST;max_insn_length;;;0;0\n # that case.\n M;displaced_step_closure_up;displaced_step_copy_insn;CORE_ADDR from, CORE_ADDR to, struct regcache *regs;from, to, regs\n \n-# Return true if GDB should use hardware single-stepping to execute\n-# the displaced instruction identified by CLOSURE.  If false,\n-# GDB will simply restart execution at the displaced instruction\n-# location, and it is up to the target to ensure GDB will receive\n-# control again (e.g. by placing a software breakpoint instruction\n-# into the displaced instruction buffer).\n-#\n-# The default implementation returns false on all targets that\n-# provide a gdbarch_software_single_step routine, and true otherwise.\n+# Return true if GDB should use hardware single-stepping to execute a displaced\n+# step instruction.  If false, GDB will simply restart execution at the\n+# displaced instruction location, and it is up to the target to ensure GDB will\n+# receive control again (e.g. by placing a software breakpoint instruction into\n+# the displaced instruction buffer).\n+#\n+# The default implementation returns false on all targets that provide a\n+# gdbarch_software_single_step routine, and true otherwise.\n m;bool;displaced_step_hw_singlestep;void;;;default_displaced_step_hw_singlestep;;0\n \n # Fix up the state resulting from successfully single-stepping a"
    }
  ]
}