{
  "sha": "5bea0c32765c297541290a5e2bef6b24a86a069d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWJlYTBjMzI3NjVjMjk3NTQxMjkwYTVlMmJlZjZiMjRhODZhMDY5ZA==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-14T08:39:39Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-05T14:09:27Z"
    },
    "message": "sim: common: start dedicated local.mk\n\nThis provides a space to generate things that we only need to build\nonce per-arch.  Some day that will be all of common/, but for now,\nwe move the version.c management in.",
    "tree": {
      "sha": "16ab7b95a9b8d4d3f541c6b19dee2f762c567bc5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/16ab7b95a9b8d4d3f541c6b19dee2f762c567bc5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5bea0c32765c297541290a5e2bef6b24a86a069d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5bea0c32765c297541290a5e2bef6b24a86a069d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5bea0c32765c297541290a5e2bef6b24a86a069d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5bea0c32765c297541290a5e2bef6b24a86a069d/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ad4bd975fc27a996b16b4d94706d1bf70574590c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad4bd975fc27a996b16b4d94706d1bf70574590c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ad4bd975fc27a996b16b4d94706d1bf70574590c"
    }
  ],
  "stats": {
    "total": 181,
    "additions": 150,
    "deletions": 31
  },
  "files": [
    {
      "sha": "dbc3e1c3a79727277c8701e7de236b25aecc267e",
      "filename": "sim/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ChangeLog?ref=5bea0c32765c297541290a5e2bef6b24a86a069d",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-05  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.am: Include common/local.mk.\n+\t(SIM_ALL_RECURSIVE_DEPS): Define.\n+\t(all-recursive): New rule.\n+\t* Makefile.in: Regenerated.\n+\n 2021-05-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Makefile.am (pkginclude_HEADERS): Define."
    },
    {
      "sha": "79274beabd8d06ddc546310ee2bcfcc68154fd39",
      "filename": "sim/Makefile.am",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/Makefile.am?ref=5bea0c32765c297541290a5e2bef6b24a86a069d",
      "patch": "@@ -40,6 +40,10 @@ AM_CPPFLAGS = -I$(srcroot)/include\n COMPILE_FOR_BUILD = $(CC_FOR_BUILD) $(AM_CPPFLAGS) $(CFLAGS_FOR_BUILD)\n LINK_FOR_BUILD = $(CC_FOR_BUILD) $(CFLAGS_FOR_BUILD) $(LDFLAGS_FOR_BUILD) -o $@\n \n+# Deps to add to the all-recursive target.  These are built before descending\n+# into any subdirs.\n+SIM_ALL_RECURSIVE_DEPS =\n+\n # Generate nltvals.def for newlib/libgloss using devo and build tree.\n # This file is shipped with distributions so we build in the source dir.\n # Use `make nltvals' to rebuild.\n@@ -55,7 +59,10 @@ pkginclude_HEADERS = \\\n \t$(srcroot)/include/sim/callback.h \\\n \t$(srcroot)/include/sim/sim.h\n \n+include common/local.mk\n if SIM_ENABLE_IGEN\n include igen/local.mk\n endif\n include testsuite/local.mk\n+\n+all-recursive: $(SIM_ALL_RECURSIVE_DEPS)"
    },
    {
      "sha": "1ff0b0c28ccb11ee0842f4f568a0878b58441df6",
      "filename": "sim/Makefile.in",
      "status": "modified",
      "additions": 81,
      "deletions": 21,
      "changes": 102,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/Makefile.in?ref=5bea0c32765c297541290a5e2bef6b24a86a069d",
      "patch": "@@ -30,6 +30,25 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n+#\n+# Copyright (C) 1997-2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Parts of the common/ sim code that have been unified.\n+# Most still lives in common/Make-common.in.\n+\n # The IGEN simulator generator for GDB, the GNU Debugger.\n #\n # Copyright 2002-2021 Free Software Foundation, Inc.\n@@ -161,9 +180,13 @@ target_triplet = @target@\n check_PROGRAMS = $(am__EXEEXT_3)\n EXTRA_PROGRAMS = $(am__EXEEXT_2) testsuite/common/bits-gen$(EXEEXT) \\\n \ttestsuite/common/fpu-tst$(EXEEXT)\n-@SIM_ENABLE_IGEN_TRUE@am__append_1 = igen/libigen.a\n-@SIM_ENABLE_IGEN_TRUE@am__append_2 = $(igen_IGEN_TOOLS)\n+\n+# This makes sure igen is available before building the arch-subdirs which\n+# need to run the igen tool.\n+@SIM_ENABLE_IGEN_TRUE@am__append_1 = igen/igen$(EXEEXT)\n+@SIM_ENABLE_IGEN_TRUE@am__append_2 = igen/libigen.a\n @SIM_ENABLE_IGEN_TRUE@am__append_3 = $(igen_IGEN_TOOLS)\n+@SIM_ENABLE_IGEN_TRUE@am__append_4 = $(igen_IGEN_TOOLS)\n TESTS = testsuite/common/bits32m0$(EXEEXT) \\\n \ttestsuite/common/bits32m31$(EXEEXT) \\\n \ttestsuite/common/bits64m0$(EXEEXT) \\\n@@ -191,9 +214,13 @@ AM_V_AR = $(am__v_AR_@AM_V@)\n am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)\n am__v_AR_0 = @echo \"  AR      \" $@;\n am__v_AR_1 = \n+common_libcommon_a_AR = $(AR) $(ARFLAGS)\n+common_libcommon_a_LIBADD =\n+am__dirstamp = $(am__leading_dot)dirstamp\n+am_common_libcommon_a_OBJECTS = common/version.$(OBJEXT)\n+common_libcommon_a_OBJECTS = $(am_common_libcommon_a_OBJECTS)\n igen_libigen_a_AR = $(AR) $(ARFLAGS)\n igen_libigen_a_LIBADD =\n-am__dirstamp = $(am__leading_dot)dirstamp\n @SIM_ENABLE_IGEN_TRUE@am_igen_libigen_a_OBJECTS =  \\\n @SIM_ENABLE_IGEN_TRUE@\tigen/table.$(OBJEXT) igen/lf.$(OBJEXT) \\\n @SIM_ENABLE_IGEN_TRUE@\tigen/misc.$(OBJEXT) \\\n@@ -304,14 +331,14 @@ AM_V_CCLD = $(am__v_CCLD_@AM_V@)\n am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)\n am__v_CCLD_0 = @echo \"  CCLD    \" $@;\n am__v_CCLD_1 = \n-SOURCES = $(igen_libigen_a_SOURCES) $(igen_filter_SOURCES) \\\n-\t$(igen_gen_SOURCES) $(igen_igen_SOURCES) \\\n-\t$(igen_ld_cache_SOURCES) $(igen_ld_decode_SOURCES) \\\n-\t$(igen_ld_insn_SOURCES) $(igen_table_SOURCES) \\\n-\ttestsuite/common/alu-tst.c testsuite/common/bits-gen.c \\\n-\ttestsuite/common/bits32m0.c testsuite/common/bits32m31.c \\\n-\ttestsuite/common/bits64m0.c testsuite/common/bits64m63.c \\\n-\ttestsuite/common/fpu-tst.c\n+SOURCES = $(common_libcommon_a_SOURCES) $(igen_libigen_a_SOURCES) \\\n+\t$(igen_filter_SOURCES) $(igen_gen_SOURCES) \\\n+\t$(igen_igen_SOURCES) $(igen_ld_cache_SOURCES) \\\n+\t$(igen_ld_decode_SOURCES) $(igen_ld_insn_SOURCES) \\\n+\t$(igen_table_SOURCES) testsuite/common/alu-tst.c \\\n+\ttestsuite/common/bits-gen.c testsuite/common/bits32m0.c \\\n+\ttestsuite/common/bits32m31.c testsuite/common/bits64m0.c \\\n+\ttestsuite/common/bits64m63.c testsuite/common/fpu-tst.c\n RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\\n \tctags-recursive dvi-recursive html-recursive info-recursive \\\n \tinstall-data-recursive install-dvi-recursive \\\n@@ -678,20 +705,33 @@ ACLOCAL_AMFLAGS = -Im4 -I.. -I../config\n srcroot = $(srcdir)/..\n SUBDIRS = @subdirs@\n AM_MAKEFLAGS = SIM_PRIMARY_TARGET=$(SIM_PRIMARY_TARGET)\n-noinst_LIBRARIES = $(am__append_1)\n+\n+# NB: libcommon.a isn't used directly by ports.  We need a target for common\n+# objects to be a part of, and ports use the individual objects directly.\n+noinst_LIBRARIES = common/libcommon.a $(am__append_2)\n CLEANFILES = testsuite/common/bits-gen testsuite/common/bits32m0.c \\\n \ttestsuite/common/bits32m31.c testsuite/common/bits64m0.c \\\n \ttestsuite/common/bits64m63.c\n DISTCLEANFILES = \n-MOSTLYCLEANFILES = core $(am__append_3) site-srcdir.exp testrun.log \\\n+MOSTLYCLEANFILES = core $(am__append_4) site-srcdir.exp testrun.log \\\n \ttestrun.sum\n-AM_CPPFLAGS = -I$(srcroot)/include\n+AM_CPPFLAGS = -I$(srcroot)/include -I$(srcdir)/common\n COMPILE_FOR_BUILD = $(CC_FOR_BUILD) $(AM_CPPFLAGS) $(CFLAGS_FOR_BUILD)\n LINK_FOR_BUILD = $(CC_FOR_BUILD) $(CFLAGS_FOR_BUILD) $(LDFLAGS_FOR_BUILD) -o $@\n+\n+# Deps to add to the all-recursive target.  These are built before descending\n+# into any subdirs.\n+\n+# This makes sure common parts are available before building the arch-subdirs\n+# which will refer to these.\n+SIM_ALL_RECURSIVE_DEPS = common/libcommon.a $(am__append_1)\n pkginclude_HEADERS = \\\n \t$(srcroot)/include/sim/callback.h \\\n \t$(srcroot)/include/sim/sim.h\n \n+common_libcommon_a_SOURCES = \\\n+\tcommon/version.c\n+\n @SIM_ENABLE_IGEN_TRUE@igen_libigen_a_SOURCES = \\\n @SIM_ENABLE_IGEN_TRUE@\tigen/table.c \\\n @SIM_ENABLE_IGEN_TRUE@\tigen/lf.c \\\n@@ -747,7 +787,7 @@ all: all-recursive\n .SUFFIXES: .c .log .o .obj .test .test$(EXEEXT) .trs\n am--refresh: Makefile\n \t@:\n-$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/igen/local.mk $(srcdir)/testsuite/local.mk $(srcdir)/testsuite/common/local.mk $(am__configure_deps)\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/common/local.mk $(srcdir)/igen/local.mk $(srcdir)/testsuite/local.mk $(srcdir)/testsuite/common/local.mk $(am__configure_deps)\n \t@for dep in $?; do \\\n \t  case '$(am__configure_deps)' in \\\n \t    *$$dep*) \\\n@@ -769,7 +809,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(srcdir)/igen/local.mk $(srcdir)/testsuite/local.mk $(srcdir)/testsuite/common/local.mk $(am__empty):\n+$(srcdir)/common/local.mk $(srcdir)/igen/local.mk $(srcdir)/testsuite/local.mk $(srcdir)/testsuite/common/local.mk $(am__empty):\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \t$(SHELL) ./config.status --recheck\n@@ -782,6 +822,19 @@ $(am__aclocal_m4_deps):\n \n clean-noinstLIBRARIES:\n \t-test -z \"$(noinst_LIBRARIES)\" || rm -f $(noinst_LIBRARIES)\n+common/$(am__dirstamp):\n+\t@$(MKDIR_P) common\n+\t@: > common/$(am__dirstamp)\n+common/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) common/$(DEPDIR)\n+\t@: > common/$(DEPDIR)/$(am__dirstamp)\n+common/version.$(OBJEXT): common/$(am__dirstamp) \\\n+\tcommon/$(DEPDIR)/$(am__dirstamp)\n+\n+common/libcommon.a: $(common_libcommon_a_OBJECTS) $(common_libcommon_a_DEPENDENCIES) $(EXTRA_common_libcommon_a_DEPENDENCIES) common/$(am__dirstamp)\n+\t$(AM_V_at)-rm -f common/libcommon.a\n+\t$(AM_V_AR)$(common_libcommon_a_AR) common/libcommon.a $(common_libcommon_a_OBJECTS) $(common_libcommon_a_LIBADD)\n+\t$(AM_V_at)$(RANLIB) common/libcommon.a\n igen/$(am__dirstamp):\n \t@$(MKDIR_P) igen\n \t@: > igen/$(am__dirstamp)\n@@ -882,12 +935,14 @@ testsuite/common/fpu-tst.$(OBJEXT): testsuite/common/$(am__dirstamp) \\\n \n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)\n+\t-rm -f common/*.$(OBJEXT)\n \t-rm -f igen/*.$(OBJEXT)\n \t-rm -f testsuite/common/*.$(OBJEXT)\n \n distclean-compile:\n \t-rm -f *.tab.c\n \n+@AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/version.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@igen/$(DEPDIR)/filter.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@igen/$(DEPDIR)/filter_host.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@igen/$(DEPDIR)/gen-engine.Po@am__quote@\n@@ -1319,6 +1374,8 @@ clean-generic:\n distclean-generic:\n \t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n \t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\t-rm -f common/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f common/$(am__dirstamp)\n \t-rm -f igen/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f igen/$(am__dirstamp)\n \t-rm -f testsuite/common/$(DEPDIR)/$(am__dirstamp)\n@@ -1335,7 +1392,7 @@ clean-am: clean-checkPROGRAMS clean-generic clean-noinstLIBRARIES \\\n \n distclean: distclean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n-\t-rm -rf igen/$(DEPDIR) testsuite/common/$(DEPDIR)\n+\t-rm -rf common/$(DEPDIR) igen/$(DEPDIR) testsuite/common/$(DEPDIR)\n \t-rm -f Makefile\n distclean-am: clean-am distclean-DEJAGNU distclean-compile \\\n \tdistclean-generic distclean-tags\n@@ -1383,7 +1440,7 @@ installcheck-am:\n maintainer-clean: maintainer-clean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n \t-rm -rf $(top_srcdir)/autom4te.cache\n-\t-rm -rf igen/$(DEPDIR) testsuite/common/$(DEPDIR)\n+\t-rm -rf common/$(DEPDIR) igen/$(DEPDIR) testsuite/common/$(DEPDIR)\n \t-rm -f Makefile\n maintainer-clean-am: distclean-am maintainer-clean-generic\n \n@@ -1434,9 +1491,10 @@ nltvals:\n \t$(abs_srcdir)/common/gennltvals.py --cpp \"$(CPP)\" --output nltvals.def --srcroot $(srcroot)\n \t$(SHELL) $(srcroot)/move-if-change nltvals.def $(abs_srcdir)/common/nltvals.def\n \n-# This makes sure igen is available before building the arch-subdirs which\n-# need to run the igen tool.\n-@SIM_ENABLE_IGEN_TRUE@all-recursive: igen/igen$(EXEEXT)\n+common/version.c: $(srcroot)/gdb/version.in $(srcroot)/bfd/version.h $(srcdir)/common/create-version.sh\n+\t$(SHELL) $(srcdir)/common/create-version.sh $(srcroot)/gdb $@.tmp\n+\t$(SHELL) $(srcroot)/move-if-change $@.tmp $@\n+\ttouch $@\n \n # Alias for developers.\n @SIM_ENABLE_IGEN_TRUE@igen: igen/igen$(EXEEXT)\n@@ -1515,6 +1573,8 @@ testsuite/common/bits64m63.c: testsuite/common/bits-gen testsuite/common/bits-ts\n \tcat $(srcdir)/testsuite/common/bits-tst.c >> $@.tmp\n \tmv $@.tmp $@\n \n+all-recursive: $(SIM_ALL_RECURSIVE_DEPS)\n+\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"
    },
    {
      "sha": "ac348747803393173a675f8266c805af9aa7a6cc",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=5bea0c32765c297541290a5e2bef6b24a86a069d",
      "patch": "@@ -1,3 +1,11 @@\n+2021-06-05  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Make-common.in (COMMON_OBJS): Define.\n+\t(LIB_OBJS): Replace version.o with $(COMMON_OBJS).\n+\t(version.c): Delete target.\n+\t(generated_files): Delete version.c.\n+\t* local.mk: New file.\n+\n 2021-05-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Make-common.in (EXTRA_LIBS): Add $(LIBGNU_EXTRA_LIBS)."
    },
    {
      "sha": "b17b2e0f45306309edcf2ce155151b1ed1023a5d",
      "filename": "sim/common/Make-common.in",
      "status": "modified",
      "additions": 4,
      "deletions": 9,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/common/Make-common.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/common/Make-common.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/Make-common.in?ref=5bea0c32765c297541290a5e2bef6b24a86a069d",
      "patch": "@@ -255,8 +255,9 @@ LIBDEPS = $(BFD_LIB) $(OPCODES_LIB) $(LIBINTL_DEP) $(LIBIBERTY_LIB)\n EXTRA_LIBS = $(BFD_LIB) $(OPCODES_LIB) $(LIBINTL) $(LIBIBERTY_LIB) \\\n \t$(CONFIG_LIBS) $(SIM_EXTRA_LIBS) $(LIBDL) $(LIBGNU) $(LIBGNU_EXTRA_LIBS)\n \n-LIB_OBJS = callback.o modules.o syscall.o targ-map.o version.o \\\n-\t$(SIM_OBJS)\n+COMMON_OBJS = ../common/version.o\n+\n+LIB_OBJS = callback.o modules.o syscall.o targ-map.o $(COMMON_OBJS) $(SIM_OBJS)\n \n COMPILE_FOR_BUILD = $(CC_FOR_BUILD) $(BUILD_CFLAGS)\n LINK_FOR_BUILD = $(CC_FOR_BUILD) $(BUILD_CFLAGS) $(LDFLAGS_FOR_BUILD) -o $@\n@@ -297,11 +298,6 @@ stamp-tvals: gentmap\n \t$(SHELL) $(srcroot)/move-if-change tmp-tmap.c targ-map.c\n \ttouch stamp-tvals\n \n-version.c: Makefile $(srcroot)/gdb/version.in $(srcroot)/bfd/version.h $(srcroot)/sim/common/create-version.sh\n-\t$(SHELL) $(srcroot)/sim/common/create-version.sh $(srcroot)/gdb $@.tmp\n-\t$(SHELL) $(srcroot)/move-if-change $@.tmp $@\n-\ttouch $@\n-\n #\n # Rules for building sim-* components.  Triggered by listing the corresponding\n # .o file in the list of simulator targets.\n@@ -429,8 +425,7 @@ generated_files = \\\n \thw-config.h \\\n \tmodules.c \\\n \ttarg-map.c \\\n-\ttarg-vals.h \\\n-\tversion.c\n+\ttarg-vals.h\n \n # Ensure that generated files are created early.  Use order-only\n # dependencies if available.  They require GNU make 3.80 or newer,"
    },
    {
      "sha": "357be755578ff28f02df3fe720e831a8a0796d35",
      "filename": "sim/common/local.mk",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/common/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/common/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/local.mk?ref=5bea0c32765c297541290a5e2bef6b24a86a069d",
      "patch": "@@ -0,0 +1,37 @@\n+## See sim/Makefile.am.\n+#\n+# Copyright (C) 1997-2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Parts of the common/ sim code that have been unified.\n+# Most still lives in common/Make-common.in.\n+\n+AM_CPPFLAGS += -I$(srcdir)/%D%\n+\n+# This makes sure common parts are available before building the arch-subdirs\n+# which will refer to these.\n+SIM_ALL_RECURSIVE_DEPS += \\\n+\t%D%/libcommon.a\n+\n+# NB: libcommon.a isn't used directly by ports.  We need a target for common\n+# objects to be a part of, and ports use the individual objects directly.\n+noinst_LIBRARIES += %D%/libcommon.a\n+%C%_libcommon_a_SOURCES = \\\n+\t%D%/version.c\n+\n+%D%/version.c: $(srcroot)/gdb/version.in $(srcroot)/bfd/version.h $(srcdir)/%D%/create-version.sh\n+\t$(SHELL) $(srcdir)/%D%/create-version.sh $(srcroot)/gdb $@.tmp\n+\t$(SHELL) $(srcroot)/move-if-change $@.tmp $@\n+\ttouch $@"
    },
    {
      "sha": "7ef9e1deb25b509b615e2beddadedf43a43d8f71",
      "filename": "sim/igen/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/igen/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/igen/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/igen/ChangeLog?ref=5bea0c32765c297541290a5e2bef6b24a86a069d",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-05  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* local.mk (all-recursive): Delete rule.\n+\t(SIM_ALL_RECURSIVE_DEPS): Append.\n+\n 2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* local.mk (igen/libigen.a): New target."
    },
    {
      "sha": "a7e278661b7b7e6b3c396371d18efe7ce6a97fe7",
      "filename": "sim/igen/local.mk",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/igen/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5bea0c32765c297541290a5e2bef6b24a86a069d/sim/igen/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/igen/local.mk?ref=5bea0c32765c297541290a5e2bef6b24a86a069d",
      "patch": "@@ -21,7 +21,7 @@\n \n # This makes sure igen is available before building the arch-subdirs which\n # need to run the igen tool.\n-all-recursive: igen/igen$(EXEEXT)\n+SIM_ALL_RECURSIVE_DEPS += igen/igen$(EXEEXT)\n \n # Alias for developers.\n igen: %D%/igen$(EXEEXT)"
    }
  ]
}