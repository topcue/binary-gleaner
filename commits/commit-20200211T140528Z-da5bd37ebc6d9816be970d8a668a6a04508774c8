{
  "sha": "da5bd37ebc6d9816be970d8a668a6a04508774c8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGE1YmQzN2ViYzZkOTgxNmJlOTcwZDhhNjY4YTZhMDQ1MDg3NzRjOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-02-11T14:05:28Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-02-11T14:05:28Z"
    },
    "message": "Remove some ui_file_* functions\n\nThis removes ui_file_isatty, ui_file_read, ui_file_write,\nui_file_write_async_safe, ui_file_flush, and ui_file_puts, replacing\nthem with calls to the appropriate method instead.\n\ngdb/ChangeLog\n2020-02-11  Tom Tromey  <tromey@adacore.com>\n\n\t* remote.c (remote_console_output): Update.\n\t* printcmd.c (printf_command): Update.\n\t* event-loop.c (gdb_wait_for_event): Update.\n\t* linux-nat.c (sigchld_handler): Update.\n\t* remote-sim.c (gdb_os_write_stdout): Update.\n\t(gdb_os_flush_stdout): Update.\n\t(gdb_os_flush_stderr): Update.\n\t(gdb_os_write_stderr): Update.\n\t* exceptions.c (print_exception): Update.\n\t* remote-fileio.c (remote_fileio_func_read): Update.\n\t(remote_fileio_func_write): Update.\n\t* tui/tui.c (tui_enable): Update.\n\t* tui/tui-interp.c (tui_interp::init): Update.\n\t* utils.c (init_page_info): Update.\n\t(putchar_unfiltered, fputc_unfiltered): Update.\n\t(gdb_flush): Update.\n\t(emit_style_escape): Update.\n\t(flush_wrap_buffer, fputs_maybe_filtered): Update.\n\t* ui-file.c (ui_file_isatty, ui_file_read, ui_file_write)\n\t(ui_file_write_async_safe, ui_file_flush, ui_file_puts): Remove.\n\t(stderr_file::write): Update.\n\t(stderr_file::puts): Update.\n\t* ui-file.h (ui_file_isatty, ui_file_write)\n\t(ui_file_write_async_safe, ui_file_read, ui_file_flush)\n\t(ui_file_puts): Don't declare.\n\nChange-Id: I3ca9b36e9107f6adbc41e014f5078b41d6bcec4d",
    "tree": {
      "sha": "cd6c9d1955cf90d76fb42ae333c0162336940368",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cd6c9d1955cf90d76fb42ae333c0162336940368"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/da5bd37ebc6d9816be970d8a668a6a04508774c8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/da5bd37ebc6d9816be970d8a668a6a04508774c8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/da5bd37ebc6d9816be970d8a668a6a04508774c8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/da5bd37ebc6d9816be970d8a668a6a04508774c8/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c675ec1e76bc6cbf47031cd89dda9d9a3ce4993c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c675ec1e76bc6cbf47031cd89dda9d9a3ce4993c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c675ec1e76bc6cbf47031cd89dda9d9a3ce4993c"
    }
  ],
  "stats": {
    "total": 144,
    "additions": 59,
    "deletions": 85
  },
  "files": [
    {
      "sha": "4f104bc8df134936a9830941771716c816f982cd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -1,3 +1,31 @@\n+2020-02-11  Tom Tromey  <tromey@adacore.com>\n+\n+\t* remote.c (remote_console_output): Update.\n+\t* printcmd.c (printf_command): Update.\n+\t* event-loop.c (gdb_wait_for_event): Update.\n+\t* linux-nat.c (sigchld_handler): Update.\n+\t* remote-sim.c (gdb_os_write_stdout): Update.\n+\t(gdb_os_flush_stdout): Update.\n+\t(gdb_os_flush_stderr): Update.\n+\t(gdb_os_write_stderr): Update.\n+\t* exceptions.c (print_exception): Update.\n+\t* remote-fileio.c (remote_fileio_func_read): Update.\n+\t(remote_fileio_func_write): Update.\n+\t* tui/tui.c (tui_enable): Update.\n+\t* tui/tui-interp.c (tui_interp::init): Update.\n+\t* utils.c (init_page_info): Update.\n+\t(putchar_unfiltered, fputc_unfiltered): Update.\n+\t(gdb_flush): Update.\n+\t(emit_style_escape): Update.\n+\t(flush_wrap_buffer, fputs_maybe_filtered): Update.\n+\t* ui-file.c (ui_file_isatty, ui_file_read, ui_file_write)\n+\t(ui_file_write_async_safe, ui_file_flush, ui_file_puts): Remove.\n+\t(stderr_file::write): Update.\n+\t(stderr_file::puts): Update.\n+\t* ui-file.h (ui_file_isatty, ui_file_write)\n+\t(ui_file_write_async_safe, ui_file_read, ui_file_flush)\n+\t(ui_file_puts): Don't declare.\n+\n 2020-02-10  Tom de Vries  <tdevries@suse.de>\n \n \t* dwarf2/read.c (process_psymtab_comp_unit_reader): Cast concat NULL"
    },
    {
      "sha": "62f8c2052bf061f76770bdc95ab763b54d12fa77",
      "filename": "gdb/event-loop.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/event-loop.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/event-loop.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/event-loop.c?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -750,8 +750,8 @@ gdb_wait_for_event (int block)\n   int num_found = 0;\n \n   /* Make sure all output is done before getting another event.  */\n-  ui_file_flush (gdb_stdout);\n-  ui_file_flush (gdb_stderr);\n+  gdb_stdout->flush ();\n+  gdb_stderr->flush ();\n \n   if (gdb_notifier.num_fds == 0)\n     return -1;"
    },
    {
      "sha": "7e15551e015e5274cca83fbaeac897b12ee6f69c",
      "filename": "gdb/exceptions.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/exceptions.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/exceptions.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/exceptions.c?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -85,7 +85,7 @@ print_exception (struct ui_file *file, const struct gdb_exception &e)\n       else\n \t{\n \t  end++;\n-\t  ui_file_write (file, start, end - start);\n+\t  file->write (start, end - start);\n \t}\n     }\t\t\t\t\t    \n   fprintf_filtered (file, \"\\n\");"
    },
    {
      "sha": "3f832dc753afcfb3f6bbee376489bd9af2748cb8",
      "filename": "gdb/guile/scm-ports.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/guile/scm-ports.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/guile/scm-ports.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-ports.c?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -234,7 +234,7 @@ ioscm_fill_input (SCM port)\n   gdb_flush (gdb_stdout);\n   gdb_flush (gdb_stderr);\n \n-  count = ui_file_read (gdb_stdin, (char *) pt->read_buf, pt->read_buf_size);\n+  count = gdb_stdin->read ((char *) pt->read_buf, pt->read_buf_size);\n   if (count == -1)\n     scm_syserror (FUNC_NAME);\n   if (count == 0)"
    },
    {
      "sha": "81af83c4ac59559f4da28ea085cf3a88221903a1",
      "filename": "gdb/linux-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-nat.c?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -4213,8 +4213,7 @@ sigchld_handler (int signo)\n   int old_errno = errno;\n \n   if (debug_linux_nat)\n-    ui_file_write_async_safe (gdb_stdlog,\n-\t\t\t      \"sigchld\\n\", sizeof (\"sigchld\\n\") - 1);\n+    gdb_stdlog->write_async_safe (\"sigchld\\n\", sizeof (\"sigchld\\n\") - 1);\n \n   if (signo == SIGCHLD\n       && linux_nat_event_pipe[0] != -1)"
    },
    {
      "sha": "797041484eb5c74cfee17738a88b2c2da9504203",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -2720,7 +2720,7 @@ printf_command (const char *arg, int from_tty)\n   ui_printf (arg, gdb_stdout);\n   reset_terminal_style (gdb_stdout);\n   wrap_here (\"\");\n-  ui_file_flush (gdb_stdout);\n+  gdb_stdout->flush ();\n }\n \n /* Implement the \"eval\" command.  */"
    },
    {
      "sha": "f2dc9a66eada3b0798e0451c7fc201edbb4bcd01",
      "filename": "gdb/remote-fileio.c",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/remote-fileio.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/remote-fileio.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote-fileio.c?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -541,7 +541,7 @@ remote_fileio_func_read (remote_target *remote, char *buf)\n \t\t limit this read to something smaller than that - by a\n \t\t safe margin, in case the limit depends on system\n \t\t resources or version.  */\n-\t      ret = ui_file_read (gdb_stdtargin, (char *) buffer, 16383);\n+\t      ret = gdb_stdtargin->read ((char *) buffer, 16383);\n \t      if (ret > 0 && (size_t)ret > length)\n \t\t{\n \t\t  remaining_buf = (char *) xmalloc (ret - length);\n@@ -639,10 +639,12 @@ remote_fileio_func_write (remote_target *remote, char *buf)\n \txfree (buffer);\n \treturn;\n       case FIO_FD_CONSOLE_OUT:\n-\tui_file_write (target_fd == 1 ? gdb_stdtarg : gdb_stdtargerr,\n-\t\t       (char *) buffer, length);\n-\tui_file_flush (target_fd == 1 ? gdb_stdtarg : gdb_stdtargerr);\n-\tret = length;\n+\t{\n+\t  ui_file *file = target_fd == 1 ? gdb_stdtarg : gdb_stdtargerr;\n+\t  file->write ((char *) buffer, length);\n+\t  file->flush ();\n+\t  ret = length;\n+\t}\n \tbreak;\n       default:\n \tret = write (fd, buffer, length);"
    },
    {
      "sha": "347dfd70131b03888bc9dd4faa6092063645d47e",
      "filename": "gdb/remote-sim.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/remote-sim.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/remote-sim.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote-sim.c?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -351,7 +351,7 @@ end_callbacks (void)\n static int\n gdb_os_write_stdout (host_callback *p, const char *buf, int len)\n {\n-  ui_file_write (gdb_stdtarg, buf, len);\n+  gdb_stdtarg->write (buf, len);\n   return len;\n }\n \n@@ -360,7 +360,7 @@ gdb_os_write_stdout (host_callback *p, const char *buf, int len)\n static void\n gdb_os_flush_stdout (host_callback *p)\n {\n-  ui_file_flush (gdb_stdtarg);\n+  gdb_stdtarg->flush ();\n }\n \n /* GDB version of os_write_stderr callback.  */\n@@ -375,7 +375,7 @@ gdb_os_write_stderr (host_callback *p, const char *buf, int len)\n     {\n       b[0] = buf[i];\n       b[1] = 0;\n-      ui_file_puts (gdb_stdtargerr, b);\n+      gdb_stdtargerr->puts (b);\n     }\n   return len;\n }\n@@ -385,7 +385,7 @@ gdb_os_write_stderr (host_callback *p, const char *buf, int len)\n static void\n gdb_os_flush_stderr (host_callback *p)\n {\n-  ui_file_flush (gdb_stdtargerr);\n+  gdb_stdtargerr->flush ();\n }\n \n /* GDB version of printf_filtered callback.  */"
    },
    {
      "sha": "4a70ab3fb0d1b6c9f67a2619be2d8f3ee3884f58",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -6845,9 +6845,9 @@ remote_console_output (const char *msg)\n \n       tb[0] = c;\n       tb[1] = 0;\n-      ui_file_puts (gdb_stdtarg, tb);\n+      gdb_stdtarg->puts (tb);\n     }\n-  ui_file_flush (gdb_stdtarg);\n+  gdb_stdtarg->flush ();\n }\n \n struct stop_reply : public notif_event"
    },
    {
      "sha": "090cf0e0d0c7b959aa1592b6fee69100fbb9f329",
      "filename": "gdb/tui/tui-interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/tui/tui-interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/tui/tui-interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-interp.c?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -243,7 +243,7 @@ tui_interp::init (bool top_level)\n \n   tui_initialize_io ();\n   tui_initialize_win ();\n-  if (ui_file_isatty (gdb_stdout))\n+  if (gdb_stdout->isatty ())\n     tui_initialize_readline ();\n }\n "
    },
    {
      "sha": "0a598373ce681024e3f9ac2ff777a98345f482d8",
      "filename": "gdb/tui/tui.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/tui/tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/tui/tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.c?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -425,7 +425,7 @@ tui_enable (void)\n \n       /* Don't try to setup curses (and print funny control\n \t characters) if we're not outputting to a terminal.  */\n-      if (!ui_file_isatty (gdb_stdout))\n+      if (!gdb_stderr->isatty ())\n \terror (_(\"Cannot enable the TUI when output is not a terminal\"));\n \n       s = newterm (NULL, stdout, stdin);"
    },
    {
      "sha": "f3adbd014aaab288763e1f676e0f7dc65000d8be",
      "filename": "gdb/ui-file.c",
      "status": "modified",
      "additions": 2,
      "deletions": 43,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/ui-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/ui-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-file.c?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -90,18 +90,6 @@ null_file::write_async_safe (const char *buf, long sizeof_buf)\n \n \f\n \n-void\n-ui_file_flush (struct ui_file *file)\n-{\n-  file->flush ();\n-}\n-\n-int\n-ui_file_isatty (struct ui_file *file)\n-{\n-  return file->isatty ();\n-}\n-\n /* true if the gdb terminal supports styling, and styling is enabled.  */\n \n static bool\n@@ -126,35 +114,6 @@ term_cli_styling ()\n   return true;\n }\n \n-\n-void\n-ui_file_write (struct ui_file *file,\n-\t\tconst char *buf,\n-\t\tlong length_buf)\n-{\n-  file->write (buf, length_buf);\n-}\n-\n-void\n-ui_file_write_async_safe (struct ui_file *file,\n-\t\t\t  const char *buf,\n-\t\t\t  long length_buf)\n-{\n-  file->write_async_safe (buf, length_buf);\n-}\n-\n-long\n-ui_file_read (struct ui_file *file, char *buf, long length_buf)\n-{\n-  return file->read (buf, length_buf);\n-}\n-\n-void\n-ui_file_puts (struct ui_file *file, const char *buf)\n-{\n-  file->puts (buf);\n-}\n-\n \f\n \n string_file::~string_file ()\n@@ -315,7 +274,7 @@ stdio_file::can_emit_style_escape ()\n void\n stderr_file::write (const char *buf, long length_buf)\n {\n-  ui_file_flush (gdb_stdout);\n+  gdb_stdout->flush ();\n   stdio_file::write (buf, length_buf);\n }\n \n@@ -325,7 +284,7 @@ stderr_file::write (const char *buf, long length_buf)\n void\n stderr_file::puts (const char *linebuffer)\n {\n-  ui_file_flush (gdb_stdout);\n+  gdb_stdout->flush ();\n   stdio_file::puts (linebuffer);\n }\n "
    },
    {
      "sha": "10c7e18344e35e07a6ecddb8adfbd5ddb6f579a3",
      "filename": "gdb/ui-file.h",
      "status": "modified",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/ui-file.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/ui-file.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-file.h?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -100,20 +100,6 @@ class null_file : public ui_file\n /* A preallocated null_file stream.  */\n extern null_file null_stream;\n \n-extern void ui_file_flush (ui_file *);\n-\n-extern int ui_file_isatty (struct ui_file *);\n-\n-extern void ui_file_write (struct ui_file *file, const char *buf,\n-\t\t\t   long length_buf);\n-\n-extern void ui_file_write_async_safe (struct ui_file *file, const char *buf,\n-\t\t\t\t      long length_buf);\n-\n-extern long ui_file_read (struct ui_file *file, char *buf, long length_buf);\n-\n-extern void ui_file_puts (struct ui_file *file, const char *buf);\n-\n extern int gdb_console_fputs (const char *, FILE *);\n \n /* A std::string-based ui_file.  Can be used as a scratch buffer for"
    },
    {
      "sha": "0200a8621f6e2014e4e5f1eb085a9ce6aa65c8e9",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da5bd37ebc6d9816be970d8a668a6a04508774c8/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=da5bd37ebc6d9816be970d8a668a6a04508774c8",
      "patch": "@@ -1277,7 +1277,7 @@ init_page_info (void)\n \t}\n \n       /* If the output is not a terminal, don't paginate it.  */\n-      if (!ui_file_isatty (gdb_stdout))\n+      if (!gdb_stdout->isatty ())\n \tlines_per_page = UINT_MAX;\n #endif\n     }\n@@ -1405,7 +1405,7 @@ emit_style_escape (const ui_file_style &style,\n   if (stream == nullptr)\n     wrap_buffer.append (style.to_ansi ());\n   else\n-    ui_file_puts (stream, style.to_ansi ().c_str ());\n+    stream->puts (style.to_ansi ().c_str ());\n }\n \n /* Set the current output style.  This will affect future uses of the\n@@ -1539,7 +1539,7 @@ flush_wrap_buffer (struct ui_file *stream)\n {\n   if (stream == gdb_stdout && !wrap_buffer.empty ())\n     {\n-      ui_file_puts (stream, wrap_buffer.c_str ());\n+      stream->puts (wrap_buffer.c_str ());\n       wrap_buffer.clear ();\n     }\n }\n@@ -1550,7 +1550,7 @@ void\n gdb_flush (struct ui_file *stream)\n {\n   flush_wrap_buffer (stream);\n-  ui_file_flush (stream);\n+  stream->flush ();\n }\n \n /* Indicate that if the next sequence of characters overflows the line,\n@@ -1697,7 +1697,7 @@ fputs_maybe_filtered (const char *linebuffer, struct ui_file *stream,\n       || top_level_interpreter ()->interp_ui_out ()->is_mi_like_p ())\n     {\n       flush_wrap_buffer (stream);\n-      ui_file_puts (stream, linebuffer);\n+      stream->puts (linebuffer);\n       return;\n     }\n \n@@ -1797,7 +1797,7 @@ fputs_maybe_filtered (const char *linebuffer, struct ui_file *stream,\n \t      /* Now output indentation and wrapped string.  */\n \t      if (wrap_column)\n \t\t{\n-\t\t  ui_file_puts (stream, wrap_indent);\n+\t\t  stream->puts (wrap_indent);\n \t\t  if (stream->can_emit_style_escape ())\n \t\t    emit_style_escape (save_style, stream);\n \t\t  /* FIXME, this strlen is what prevents wrap_indent from\n@@ -1918,7 +1918,7 @@ putchar_unfiltered (int c)\n {\n   char buf = c;\n \n-  ui_file_write (gdb_stdout, &buf, 1);\n+  gdb_stdout->write (&buf, 1);\n   return c;\n }\n \n@@ -1936,7 +1936,7 @@ fputc_unfiltered (int c, struct ui_file *stream)\n {\n   char buf = c;\n \n-  ui_file_write (stream, &buf, 1);\n+  stream->write (&buf, 1);\n   return c;\n }\n "
    }
  ]
}