{
  "sha": "4ffd290906608e72fd98d627a24aa2c2b6ecf4ce",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGZmZDI5MDkwNjYwOGU3MmZkOThkNjI3YTI0YWEyYzJiNmVjZjRjZQ==",
  "commit": {
    "author": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2019-03-01T11:37:51Z"
    },
    "committer": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2019-03-01T11:38:22Z"
    },
    "message": "Binutils: Always skip only 1 byte for CIE version 1's return address register.\n\nAccording to the specification for the CIE entries, when the CIE version is 1 then\nthe return address register field is always 1 byte.  Readelf does this correctly in\nread_cie in dwarf.c but ld does this incorrectly and always tries to read a\nskip_leb128.  If the value here has the top bit set then ld will incorrectly read\nat least another byte, causing either an assert failure or an incorrect address to\nbe used in eh_frame.\n\nI'm not sure how to generate a generic test for this as I'd need to write assembly,\nand it's a bit hard to trigger. Essentially the relocated value needs to start with\nsomething that & 0x70 != 0x10 while trying to write a personality.\n\nbfd/ChangeLog:\n\n\t* elf-eh-frame.c (_bfd_elf_write_section_eh_frame): Correct CIE parse.",
    "tree": {
      "sha": "6f51b7151ba46dfe875a57988b79d6e122fc4526",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6f51b7151ba46dfe875a57988b79d6e122fc4526"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4ffd290906608e72fd98d627a24aa2c2b6ecf4ce",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ffd290906608e72fd98d627a24aa2c2b6ecf4ce",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4ffd290906608e72fd98d627a24aa2c2b6ecf4ce",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ffd290906608e72fd98d627a24aa2c2b6ecf4ce/comments",
  "author": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b24cc4146e4de9f3b66e2e2fb8379db46eff89c9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b24cc4146e4de9f3b66e2e2fb8379db46eff89c9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b24cc4146e4de9f3b66e2e2fb8379db46eff89c9"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 12,
    "deletions": 4
  },
  "files": [
    {
      "sha": "68004eab088f0367adb5e848b872b085bbbf2fc1",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffd290906608e72fd98d627a24aa2c2b6ecf4ce/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffd290906608e72fd98d627a24aa2c2b6ecf4ce/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=4ffd290906608e72fd98d627a24aa2c2b6ecf4ce",
      "patch": "@@ -1,3 +1,7 @@\n+2019-02-28  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* elf-eh-frame.c (_bfd_elf_write_section_eh_frame): Correct CIE parse.\n+\n 2019-02-28  Nick Clifton  <nickc@redhat.com>\n \n \tPR 24273"
    },
    {
      "sha": "6919ac3031bedf8b9748f643ddcdbfc7d0ffe8a2",
      "filename": "bfd/elf-eh-frame.c",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffd290906608e72fd98d627a24aa2c2b6ecf4ce/bfd/elf-eh-frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffd290906608e72fd98d627a24aa2c2b6ecf4ce/bfd/elf-eh-frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-eh-frame.c?ref=4ffd290906608e72fd98d627a24aa2c2b6ecf4ce",
      "patch": "@@ -1993,7 +1993,7 @@ _bfd_elf_write_section_eh_frame (bfd *abfd,\n \t      || ent->u.cie.per_encoding_relative)\n \t    {\n \t      char *aug;\n-\t      unsigned int action, extra_string, extra_data;\n+\t      unsigned int version, action, extra_string, extra_data;\n \t      unsigned int per_width, per_encoding;\n \n \t      /* Need to find 'R' or 'L' augmentation's argument and modify\n@@ -2004,13 +2004,17 @@ _bfd_elf_write_section_eh_frame (bfd *abfd,\n \t      extra_string = extra_augmentation_string_bytes (ent);\n \t      extra_data = extra_augmentation_data_bytes (ent);\n \n-\t      /* Skip length, id and version.  */\n-\t      buf += 9;\n+\t      /* Skip length, id.  */\n+\t      buf += 8;\n+\t      version = *buf++;\n \t      aug = (char *) buf;\n \t      buf += strlen (aug) + 1;\n \t      skip_leb128 (&buf, end);\n \t      skip_leb128 (&buf, end);\n-\t      skip_leb128 (&buf, end);\n+\t      if (version == 1)\n+\t\tskip_bytes (&buf, end, 1);\n+\t      else\n+\t\tskip_leb128 (&buf, end);\n \t      if (*aug == 'z')\n \t\t{\n \t\t  /* The uleb128 will always be a single byte for the kind"
    }
  ]
}