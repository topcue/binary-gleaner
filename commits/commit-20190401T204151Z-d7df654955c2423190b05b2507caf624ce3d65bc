{
  "sha": "d7df654955c2423190b05b2507caf624ce3d65bc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDdkZjY1NDk1NWMyNDIzMTkwYjA1YjI1MDdjYWY2MjRjZTNkNjViYw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-02-14T15:49:39Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-01T20:41:51Z"
    },
    "message": "gdb/fortran: Handle internal function calls\n\nIf an convenience function is defined in python (or guile), then\ncurrently this will not work in Fortran, instead the user is given\nthis message:\n\n  (gdb) set language fortran\n  (gdb) p $myfunc (3)\n  Cannot perform substring on this type\n\nCompare this to C:\n\n  (gdb) set language c\n  (gdb) p $myfunc (3)\n  $1 = 1\n\nAfter this patch we see the same behaviour in both C and Fortran.\nI've extended the test to check that all languages can call the\nconvenience functions - only Fortran was broken.\n\nWhen calling convenience functions in Fortran we don't need to perform\nthe same value preparation (passing by pointer) that we would for\ncalling a native function - passing the real value is fine.\n\ngdb/ChangeLog:\n\n\t* eval.c (evaluate_subexp_standard): Handle internal functions\n\tduring Fortran function call handling.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.python/py-function.exp: Check calling helper function from\n\tall languages.\n\t* lib/gdb.exp (gdb_supported_languages): New proc.",
    "tree": {
      "sha": "fabbf61ca39144ed03690e66c239837e7e42d41f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fabbf61ca39144ed03690e66c239837e7e42d41f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d7df654955c2423190b05b2507caf624ce3d65bc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7df654955c2423190b05b2507caf624ce3d65bc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d7df654955c2423190b05b2507caf624ce3d65bc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7df654955c2423190b05b2507caf624ce3d65bc/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8bdc16587e26100282094c8eaa8e83180ba57afd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8bdc16587e26100282094c8eaa8e83180ba57afd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8bdc16587e26100282094c8eaa8e83180ba57afd"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 34,
    "deletions": 5
  },
  "files": [
    {
      "sha": "aee0d967e1d1b28db13a694607a9be5fe4673038",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7df654955c2423190b05b2507caf624ce3d65bc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7df654955c2423190b05b2507caf624ce3d65bc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d7df654955c2423190b05b2507caf624ce3d65bc",
      "patch": "@@ -1,3 +1,8 @@\n+2019-04-01  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* eval.c (evaluate_subexp_standard): Handle internal functions\n+\tduring Fortran function call handling.\n+\n 2019-04-01  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* NEWS: Mention new internal functions."
    },
    {
      "sha": "3f768b45309c7aba119580bb56cbd5d9e569a5a1",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7df654955c2423190b05b2507caf624ce3d65bc/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7df654955c2423190b05b2507caf624ce3d65bc/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=d7df654955c2423190b05b2507caf624ce3d65bc",
      "patch": "@@ -1979,6 +1979,7 @@ evaluate_subexp_standard (struct type *expect_type,\n \n \tcase TYPE_CODE_PTR:\n \tcase TYPE_CODE_FUNC:\n+\tcase TYPE_CODE_INTERNAL_FUNCTION:\n \t  /* It's a function call.  */\n \t  /* Allocate arg vector, including space for the function to be\n \t     called in argvec[0] and a terminating NULL.  */\n@@ -1996,10 +1997,13 @@ evaluate_subexp_standard (struct type *expect_type,\n \t\t results in malloc being called with a pointer to an integer\n \t\t followed by an attempt to malloc the arguments to malloc in\n \t\t target memory.  Infinite recursion ensues.  */\n-\t      bool is_artificial =\n-\t\tTYPE_FIELD_ARTIFICIAL (value_type (arg1), tem - 1);\n-\t      argvec[tem] = fortran_argument_convert (argvec[tem],\n-\t\t\t\t\t\t      is_artificial);\n+\t      if (code == TYPE_CODE_PTR || code == TYPE_CODE_FUNC)\n+\t\t{\n+\t\t  bool is_artificial\n+\t\t    = TYPE_FIELD_ARTIFICIAL (value_type (arg1), tem - 1);\n+\t\t  argvec[tem] = fortran_argument_convert (argvec[tem],\n+\t\t\t\t\t\t\t  is_artificial);\n+\t\t}\n \t    }\n \t  argvec[tem] = 0;\t/* signal end of arglist */\n \t  if (noside == EVAL_SKIP)"
    },
    {
      "sha": "45c5eb1762bd440f2265d41ca047a369f1b18a31",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7df654955c2423190b05b2507caf624ce3d65bc/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7df654955c2423190b05b2507caf624ce3d65bc/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=d7df654955c2423190b05b2507caf624ce3d65bc",
      "patch": "@@ -1,3 +1,9 @@\n+2019-04-01  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.python/py-function.exp: Check calling helper function from\n+\tall languages.\n+\t* lib/gdb.exp (gdb_supported_languages): New proc.\n+\n 2019-04-01  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/complex-parts.c: New file."
    },
    {
      "sha": "01c326b5d0b9b545b01d8a383d876d63aa2e2567",
      "filename": "gdb/testsuite/gdb.python/py-function.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7df654955c2423190b05b2507caf624ce3d65bc/gdb/testsuite/gdb.python/py-function.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7df654955c2423190b05b2507caf624ce3d65bc/gdb/testsuite/gdb.python/py-function.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-function.exp?ref=d7df654955c2423190b05b2507caf624ce3d65bc",
      "patch": "@@ -51,7 +51,13 @@ gdb_py_test_multiple \"input value-returning convenience function\" \\\n   \"Double ()\" \"\" \\\n   \"end\" \"\"\n \n-gdb_test \"print \\$double (1)\" \"= 2\" \"call value-returning function\"\n+# Different languages can have different parsers, so lets check that\n+# internal functions are understood by every language.  Place auto\n+# last in the list so we end up back in 'auto' language mode.\n+foreach lang [concat [gdb_supported_languages] auto] {\n+    gdb_test_no_output \"set language $lang\"\n+    gdb_test \"print \\$double (1)\" \"= 2\" \"call value-returning function, language = $lang\"\n+}\n \n gdb_py_test_multiple \"input int-returning function\" \\\n   \"python\" \"\" \\"
    },
    {
      "sha": "1176fdded14c74abb23f5b505c26b972cd4890c4",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7df654955c2423190b05b2507caf624ce3d65bc/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7df654955c2423190b05b2507caf624ce3d65bc/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=d7df654955c2423190b05b2507caf624ce3d65bc",
      "patch": "@@ -6353,5 +6353,13 @@ proc cd { dir } {\n     builtin_cd $dir\n }\n \n+# Return a list of all languages supported by GDB, suitable for use in\n+# 'set language NAME'.  This doesn't include either the 'local' or\n+# 'auto' keywords.\n+proc gdb_supported_languages {} {\n+    return [list c objective-c c++ d go fortran modula-2 asm pascal \\\n+\t\topencl rust minimal ada]\n+}\n+\n # Always load compatibility stuff.\n load_lib future.exp"
    }
  ]
}