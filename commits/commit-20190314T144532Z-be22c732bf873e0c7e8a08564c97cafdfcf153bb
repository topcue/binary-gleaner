{
  "sha": "be22c732bf873e0c7e8a08564c97cafdfcf153bb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmUyMmM3MzJiZjg3M2UwYzdlOGEwODU2NGM5N2NhZmRmY2YxNTNiYg==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-03-14T14:45:32Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-03-14T14:45:32Z"
    },
    "message": "Fix illegal memory access parsing a corrupt ELF file.\n\n\tPR 24332\n\t* elflink.c (elf_link_add_object_symbols): Add new local variable\n\textversym_end.  Initialise it to point to the end of the version\n\tsymbol table, if present.  Check it when initialising and updating\n\tthe ever pointer.",
    "tree": {
      "sha": "779aef5992f5920439e815d320be7f2038ace442",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/779aef5992f5920439e815d320be7f2038ace442"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/be22c732bf873e0c7e8a08564c97cafdfcf153bb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be22c732bf873e0c7e8a08564c97cafdfcf153bb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/be22c732bf873e0c7e8a08564c97cafdfcf153bb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be22c732bf873e0c7e8a08564c97cafdfcf153bb/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3b336828de914a39741339b5341b88aa003d7225",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b336828de914a39741339b5341b88aa003d7225",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3b336828de914a39741339b5341b88aa003d7225"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 34,
    "deletions": 3
  },
  "files": [
    {
      "sha": "447eb707c877399943c8913826c88979dbf614dc",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be22c732bf873e0c7e8a08564c97cafdfcf153bb/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be22c732bf873e0c7e8a08564c97cafdfcf153bb/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=be22c732bf873e0c7e8a08564c97cafdfcf153bb",
      "patch": "@@ -1,3 +1,11 @@\n+2019-03-14  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24332\n+\t* elflink.c (elf_link_add_object_symbols): Add new local variable\n+\textversym_end.  Initialise it to point to the end of the version\n+\tsymbol table, if present.  Check it when initialising and updating\n+\tthe ever pointer.\n+\n 2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n \n \t* elfnn-aarch64.c (PLT_PAC_ENTRY_SIZE, PLT_PAC_SMALL_ENTRY_SIZE): New."
    },
    {
      "sha": "3ac58daafda812d1db60999691e47217c2c15621",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 26,
      "deletions": 3,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be22c732bf873e0c7e8a08564c97cafdfcf153bb/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be22c732bf873e0c7e8a08564c97cafdfcf153bb/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=be22c732bf873e0c7e8a08564c97cafdfcf153bb",
      "patch": "@@ -3872,6 +3872,7 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)\n   struct elf_link_hash_entry **sym_hash;\n   bfd_boolean dynamic;\n   Elf_External_Versym *extversym = NULL;\n+  Elf_External_Versym *extversym_end = NULL;\n   Elf_External_Versym *ever;\n   struct elf_link_hash_entry *weaks;\n   struct elf_link_hash_entry **nondeflt_vers = NULL;\n@@ -4297,13 +4298,14 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)\n \t  Elf_Internal_Shdr *versymhdr;\n \n \t  versymhdr = &elf_tdata (abfd)->dynversym_hdr;\n-\t  extversym = (Elf_External_Versym *) bfd_malloc (versymhdr->sh_size);\n+\t  amt = versymhdr->sh_size;\n+\t  extversym = (Elf_External_Versym *) bfd_malloc (amt);\n \t  if (extversym == NULL)\n \t    goto error_free_sym;\n-\t  amt = versymhdr->sh_size;\n \t  if (bfd_seek (abfd, versymhdr->sh_offset, SEEK_SET) != 0\n \t      || bfd_bread (extversym, amt, abfd) != amt)\n \t    goto error_free_vers;\n+\t  extversym_end = extversym + (amt / sizeof (* extversym));\n \t}\n     }\n \n@@ -4378,7 +4380,20 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)\n     }\n \n   weaks = NULL;\n-  ever = extversym != NULL ? extversym + extsymoff : NULL;\n+  if (extversym == NULL)\n+    ever = NULL;\n+  else if (extversym + extsymoff < extversym_end)\n+    ever = extversym + extsymoff;\n+  else\n+    {\n+      /* xgettext:c-format */\n+      _bfd_error_handler (_(\"%pB: invalid version offset %lx (max %lx)\"),\n+\t\t\t  abfd, (long) extsymoff,\n+\t\t\t  (long) (extversym_end - extversym) / sizeof (* extversym));\n+      bfd_set_error (bfd_error_bad_value);\n+      goto error_free_vers;\n+    }\n+\n   for (isym = isymbuf, isymend = isymbuf + extsymcount;\n        isym < isymend;\n        isym++, sym_hash++, ever = (ever != NULL ? ever + 1 : NULL))\n@@ -4562,6 +4577,14 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)\n \t      else\n \t\tiver.vs_vers = 0;\n \t    }\n+\t  else if (ever >= extversym_end)\n+\t    {\n+\t      /* xgettext:c-format */\n+\t      _bfd_error_handler (_(\"%pB: not enough version information\"),\n+\t\t\t\t  abfd);\n+\t      bfd_set_error (bfd_error_bad_value);\n+\t      goto error_free_vers;\n+\t    }\n \t  else\n \t    _bfd_elf_swap_versym_in (abfd, ever, &iver);\n "
    }
  ]
}