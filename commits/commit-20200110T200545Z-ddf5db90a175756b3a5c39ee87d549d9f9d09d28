{
  "sha": "ddf5db90a175756b3a5c39ee87d549d9f9d09d28",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGRmNWRiOTBhMTc1NzU2YjNhNWMzOWVlODdkNTQ5ZDlmOWQwOWQyOA==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-01-10T20:05:45Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-01-10T20:05:45Z"
    },
    "message": "Don't check target is running in remote_target::mourn_inferior\n\nI believe the tail end of remote_target::mourn_inferior is broken, and\nit's been broken for too long to even bother trying to fix.  Most\nprobably nobody needs it.  If the code is reached and we find the\ntarget is running, we'd need to resync the thread list, at least,\nsince generic_mourn_inferior got rid of all the threads in the\ninferior, otherwise, we'd hit an assertion on the next call to\ninferior_thread(), for example.  A \"correct\" fix would probably\ninvolve restarting the whole remote_target::start_remote requence,\nexactly as if we had completely disconnected and reconnected from\nscratch.\n\nNote that regular stub debugging usually uses plain target remote, but\nthis code is only reachable in target extended-mode:\n\n- The !remote_multi_process_p check means that it's only reacheable if\n  the stub does not support multi-process.  I.e., there can only ever\n  be one live process.\n\n- remote_target::mourn_inferior has this at the top:\n\n  /* In 'target remote' mode with one inferior, we close the connection.  */\n  if (!rs->extended && number_of_live_inferiors () <= 1)\n    {\n      unpush_target (this);\n\n      /* remote_close takes care of doing most of the clean up.  */\n      generic_mourn_inferior ();\n      return;\n    }\n\n  Which means that if we only had one live inferior (which for our\n  case, must be true), we'll have closed the connection already,\n  unless we're in extended-remote mode.\n\ngdb/ChangeLog:\n2020-01-10  Pedro Alves  <palves@redhat.com>\n\n\t* remote.c (remote_target::mourn_inferior): No longer check\n\twhether the target is running.",
    "tree": {
      "sha": "1765dd0813ece91a0b5fdc37a997e3685b7ade8f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1765dd0813ece91a0b5fdc37a997e3685b7ade8f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ddf5db90a175756b3a5c39ee87d549d9f9d09d28",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ddf5db90a175756b3a5c39ee87d549d9f9d09d28",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ddf5db90a175756b3a5c39ee87d549d9f9d09d28",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ddf5db90a175756b3a5c39ee87d549d9f9d09d28/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5018ce90c1205d79f29adf954b0fd5e613d08430",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5018ce90c1205d79f29adf954b0fd5e613d08430",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5018ce90c1205d79f29adf954b0fd5e613d08430"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 5,
    "deletions": 20
  },
  "files": [
    {
      "sha": "ff1bc14eca3c3bfb29a5f7b66fe22171af0d09e7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ddf5db90a175756b3a5c39ee87d549d9f9d09d28/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ddf5db90a175756b3a5c39ee87d549d9f9d09d28/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ddf5db90a175756b3a5c39ee87d549d9f9d09d28",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-10  Pedro Alves  <palves@redhat.com>\n+\n+\t* remote.c (remote_target::mourn_inferior): No longer check\n+\twhether the target is running.\n+\n 2020-01-10  Pedro Alves  <palves@redhat.com>\n \n \t* corelow.c (core_target::has_execution): Change parameter type to"
    },
    {
      "sha": "51fa5da0c18c9934da8abb1b9252ff07cb1a612f",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ddf5db90a175756b3a5c39ee87d549d9f9d09d28/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ddf5db90a175756b3a5c39ee87d549d9f9d09d28/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=ddf5db90a175756b3a5c39ee87d549d9f9d09d28",
      "patch": "@@ -9843,26 +9843,6 @@ remote_target::mourn_inferior ()\n \n   /* Call common code to mark the inferior as not running.  */\n   generic_mourn_inferior ();\n-\n-  if (!have_inferiors ())\n-    {\n-      if (!remote_multi_process_p (rs))\n-\t{\n-\t  /* Check whether the target is running now - some remote stubs\n-\t     automatically restart after kill.\t*/\n-\t  putpkt (\"?\");\n-\t  getpkt (&rs->buf, 0);\n-\n-\t  if (rs->buf[0] == 'S' || rs->buf[0] == 'T')\n-\t    {\n-\t      /* Assume that the target has been restarted.  Set\n-\t\t inferior_ptid so that bits of core GDB realizes\n-\t\t there's something here, e.g., so that the user can\n-\t\t say \"kill\" again.  */\n-\t      inferior_ptid = magic_null_ptid;\n-\t    }\n-\t}\n-    }\n }\n \n bool"
    }
  ]
}