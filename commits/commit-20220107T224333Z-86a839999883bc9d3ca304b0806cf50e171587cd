{
  "sha": "86a839999883bc9d3ca304b0806cf50e171587cd",
  "node_id": "C_kwDOANOeidoAKDg2YTgzOTk5OTg4M2JjOWQzY2EzMDRiMDgwNmNmNTBlMTcxNTg3Y2Q",
  "commit": {
    "author": {
      "name": "Lancelot SIX",
      "email": "lsix@lancelotsix.com",
      "date": "2021-11-20T23:20:23Z"
    },
    "committer": {
      "name": "Lancelot SIX",
      "email": "lsix@lancelotsix.com",
      "date": "2022-01-07T22:43:33Z"
    },
    "message": "gdb: completion-support.exp: improve leading whitespace support\n\nThere is a expect support library in the source tree designed to help\ndevelopers test the auto-completion capabilities of GDB.\n\nOne of the functions is test_gdb_complete_unique_re.  It is used\n(usually indirectly via test_gdb_complete_unique) to test that a given\ninput line is completed as a given output line.  The test checks for two\nways to do the completion: using tab-completion, or using the\n'complete' command.  To do this, calls to two dedicated functions are\nperformed.  If we omit few details, we can consider that a call to\n\n    test_gdb_complete_unique $input $expected\n\nis equivalent to the two following calls:\n\n    test_gdb_complete_tab_unique $input $expected\n    test_gdb_complete_cmd_unique $input $expected\n\nWhen using the tab-completion, everything works as expected, but some\ncare must be taken when using the 'complete' command if the given input\nhas leading whitespaces.  In such situation, the output of the\n'complete' command will drop the leading whitespaces.\n\nThe current approach is that in such situation, the input and expected\noutputs are right trimmed (i.e. all leading whitespaces are removed)\nwhen performing the command completion check.\n\nThis means that the following call:\n\n    test_gdb_complete_unique \"   $input\" \"   $expected\"\n\nis almost equivalent to (again, omitting few details and arguments):\n\n    test_gdb_complete_tab_unique \"   $input\" \"   $expected\"\n    test_gdb_complete_cmd_unique \"$input\" \"$expected\"\n\nThis approach comes with a problem that we encounter when running the\ntests in complete-empty.exp.  When doing so, we have:\n\n    Running .../gdb/testsuite/gdb.base/complete-empty.exp ...\n    DUPLICATE: gdb.base/complete-empty.exp: empty-input-line: cmd complete \"\"\n\nThis is because the test file does something like:\n\n    test_gdb_complete_unique \"\" \"!\" \" \" 1\n    test_gdb_complete_unique \"   \" \"   !\" \" \" 1\u00ac\n\nwhich, if we do the substitution introduced above is equivalent to:\n\n    test_gdb_complete_tab_unique \"\" \"!\"\n    test_gdb_complete_cmd_unique \"\" \"!\"\n    test_gdb_complete_tab_unique \"   \" \"   !\"\n    test_gdb_complete_cmd_unique \"\" \"!\"\n\nWe see that the lines 2 and 4 are now the same, and for this reason the\ntesting framework complains about DUPLICATE test names.\n\nTo fix that, this commit proposes that instead of left trimming both\ninput and expected outputs, only the expected output is trimmed.\n\nCare must be taken in the case the completion gives more possibilities\nthan allowed by the max-completions setting.  In this case, the input\nwill be repeated in the output in its left trimmed version.  This commit\nalso ensures that this is taken care of.\n\nWith this commit, the gdb.base/complete-empty.exp still passes all its\ntests but does not report the DUPLICATE anymore.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "094503213ca338efea23f2eaf13ede81a6803fdc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/094503213ca338efea23f2eaf13ede81a6803fdc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/86a839999883bc9d3ca304b0806cf50e171587cd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/86a839999883bc9d3ca304b0806cf50e171587cd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/86a839999883bc9d3ca304b0806cf50e171587cd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/86a839999883bc9d3ca304b0806cf50e171587cd/comments",
  "author": {
    "login": "lsix",
    "id": 724339,
    "node_id": "MDQ6VXNlcjcyNDMzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/724339?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lsix",
    "html_url": "https://github.com/lsix",
    "followers_url": "https://api.github.com/users/lsix/followers",
    "following_url": "https://api.github.com/users/lsix/following{/other_user}",
    "gists_url": "https://api.github.com/users/lsix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lsix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lsix/subscriptions",
    "organizations_url": "https://api.github.com/users/lsix/orgs",
    "repos_url": "https://api.github.com/users/lsix/repos",
    "events_url": "https://api.github.com/users/lsix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lsix/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "lsix",
    "id": 724339,
    "node_id": "MDQ6VXNlcjcyNDMzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/724339?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lsix",
    "html_url": "https://github.com/lsix",
    "followers_url": "https://api.github.com/users/lsix/followers",
    "following_url": "https://api.github.com/users/lsix/following{/other_user}",
    "gists_url": "https://api.github.com/users/lsix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lsix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lsix/subscriptions",
    "organizations_url": "https://api.github.com/users/lsix/orgs",
    "repos_url": "https://api.github.com/users/lsix/repos",
    "events_url": "https://api.github.com/users/lsix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lsix/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0d3ca327972d34eeb4b74cf239aab3bf973a3c97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d3ca327972d34eeb4b74cf239aab3bf973a3c97",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0d3ca327972d34eeb4b74cf239aab3bf973a3c97"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 3,
    "deletions": 5
  },
  "files": [
    {
      "sha": "30d3461c22687c0cc5ab530f2a9f6f3f1fbb3310",
      "filename": "gdb/testsuite/lib/completion-support.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/86a839999883bc9d3ca304b0806cf50e171587cd/gdb/testsuite/lib/completion-support.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/86a839999883bc9d3ca304b0806cf50e171587cd/gdb/testsuite/lib/completion-support.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/completion-support.exp?ref=86a839999883bc9d3ca304b0806cf50e171587cd",
      "patch": "@@ -254,10 +254,8 @@ proc test_gdb_complete_unique_re { input_line complete_line_re {append_char \" \"}\n \t}\n     }\n \n-    # Trim INPUT_LINE and COMPLETE LINE, for the case we're completing\n-    # a command with leading whitespace.  Leading command whitespace\n-    # is discarded by GDB.\n-    set input_line [string trimleft $input_line]\n+    # Trim COMPLETE LINE, for the case we're completing a command with leading\n+    # whitespace.  Leading command whitespace is discarded by GDB.\n     set expected_output_re [string trimleft $complete_line_re]\n     if {$append_char_re != \" \"} {\n \tappend expected_output_re $append_char_re\n@@ -266,7 +264,7 @@ proc test_gdb_complete_unique_re { input_line complete_line_re {append_char \" \"}\n \tset max_completion_reached_msg \\\n \t    \"*** List may be truncated, max-completions reached. ***\"\n \tset input_line_re \\\n-\t    [string_to_regexp $input_line]\n+\t    [string_to_regexp [string trimleft $input_line]]\n \tset max_completion_reached_msg_re \\\n \t    [string_to_regexp $max_completion_reached_msg]\n "
    }
  ]
}