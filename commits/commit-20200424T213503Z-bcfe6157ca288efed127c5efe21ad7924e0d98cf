{
  "sha": "bcfe6157ca288efed127c5efe21ad7924e0d98cf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmNmZTYxNTdjYTI4OGVmZWQxMjdjNWVmZTIxYWQ3OTI0ZTBkOThjZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-04-24T21:35:01Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-24T21:35:03Z"
    },
    "message": "Use the linkage name if it exists\n\nThe DWARF reader has had some odd code since the \"physname\" patches landed.\n\nIn particular, these patches caused PR symtab/12707; namely, they made\nit so \"set print demangle off\" no longer works.\n\nThis patch attempts to fix the problem.  It arranges to store the\nlinkage name on the symbol if it exists, and it changes the DWARF\nreader so that the demangled name is no longer (usually) stored in the\nsymbol's \"linkage name\" field.\n\nc-linkage-name.exp needed a tweak, because it started working\ncorrectly.  This conforms to what I think ought to happen, so this\nseems like an improvement here.\n\ncompile-object-load.c needed a small change to use\nsymbol_matches_search_name rather than directly examining the linkage\nname.  Looking directly at the name does the wrong thing for C++.\n\nThere is still some name-related confusion in the DWARF reader:\n\n* \"physname\" often refers to the logical name and not what I would\n  consider to be the \"physical\" name;\n\n* dwarf2_full_name, dwarf2_name, and dwarf2_physname all exist and\n  return different strings -- but this seems like at least one name\n  too many.  For example, Fortran requires dwarf2_full_name, but other\n  languages do not.\n\n* To my surprise, dwarf2_physname prefers the form emitted by the\n  demangler over the one that it computes.  This seems backward to me,\n  given that the partial symbol reader prefers the opposite, and it\n  seems to me that this choice may perform better as well.\n\nI didn't attempt to clean up these things.  It would be good to do,\nbut whenever I contemplate it I get caught up in dreams of truly\nrewriting the DWARF reader instead.\n\ngdb/ChangeLog\n2020-04-24  Tom Tromey  <tom@tromey.com>\n\n\tPR symtab/12707:\n\t* dwarf2/read.c (add_partial_symbol): Use the linkage name if it\n\texists.\n\t(new_symbol): Likewise.\n\t* compile/compile-object-load.c (get_out_value_type): Use\n\tsymbol_matches_search_name.\n\ngdb/testsuite/ChangeLog\n2020-04-24  Tom Tromey  <tom@tromey.com>\n\n\tPR symtab/12707:\n\t* gdb.python/py-symbol.exp: Update expected results for\n\tlinkage_name test.\n\t* gdb.cp/print-demangle.exp: New file.\n\t* gdb.base/c-linkage-name.exp: Fix test.\n\t* gdb.guile/scm-symbol.exp: Update expected results for\n\tlinkage_name test.",
    "tree": {
      "sha": "8f8ca201e90f3f40fce5bde8202e0fea5ab1da9c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8f8ca201e90f3f40fce5bde8202e0fea5ab1da9c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bcfe6157ca288efed127c5efe21ad7924e0d98cf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bcfe6157ca288efed127c5efe21ad7924e0d98cf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bcfe6157ca288efed127c5efe21ad7924e0d98cf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bcfe6157ca288efed127c5efe21ad7924e0d98cf/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f049a313fcad4d51a55b6e635612c98e1a72b8a8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f049a313fcad4d51a55b6e635612c98e1a72b8a8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f049a313fcad4d51a55b6e635612c98e1a72b8a8"
    }
  ],
  "stats": {
    "total": 97,
    "additions": 80,
    "deletions": 17
  },
  "files": [
    {
      "sha": "829c0770a15f526bca6b73cebc5444a68239057b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bcfe6157ca288efed127c5efe21ad7924e0d98cf",
      "patch": "@@ -1,3 +1,12 @@\n+2020-04-24  Tom Tromey  <tom@tromey.com>\n+\n+\tPR symtab/12707:\n+\t* dwarf2/read.c (add_partial_symbol): Use the linkage name if it\n+\texists.\n+\t(new_symbol): Likewise.\n+\t* compile/compile-object-load.c (get_out_value_type): Use\n+\tsymbol_matches_search_name.\n+\n 2020-04-24  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.c (add_partial_symbol): Do not call"
    },
    {
      "sha": "be4fa76714209dc7f8eeb55c6fba195afc652711",
      "filename": "gdb/compile/compile-object-load.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/compile/compile-object-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/compile/compile-object-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-object-load.c?ref=bcfe6157ca288efed127c5efe21ad7924e0d98cf",
      "patch": "@@ -402,6 +402,9 @@ get_out_value_type (struct symbol *func_sym, struct objfile *objfile,\n   int nblocks = 0;\n   int block_loop = 0;\n \n+  lookup_name_info func_matcher (GCC_FE_WRAPPER_FUNCTION,\n+\t\t\t\t symbol_name_match_type::SEARCH_NAME);\n+\n   bv = SYMTAB_BLOCKVECTOR (func_sym->owner.symtab);\n   nblocks = BLOCKVECTOR_NBLOCKS (bv);\n \n@@ -433,9 +436,7 @@ get_out_value_type (struct symbol *func_sym, struct objfile *objfile,\n       if (function != NULL\n \t  && (BLOCK_SUPERBLOCK (function_block)\n \t      == BLOCKVECTOR_BLOCK (bv, STATIC_BLOCK))\n-\t  && (strcmp_iw (function->linkage_name (),\n-\t\t\t GCC_FE_WRAPPER_FUNCTION)\n-\t      == 0))\n+\t  && symbol_matches_search_name (function, func_matcher))\n \tbreak;\n     }\n   if (block_loop == nblocks)"
    },
    {
      "sha": "613c3cd71ab6ae01f589c2f07f09240c68ea8032",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 21,
      "deletions": 8,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=bcfe6157ca288efed127c5efe21ad7924e0d98cf",
      "patch": "@@ -8378,7 +8378,14 @@ add_partial_symbol (struct partial_die_info *pdi, struct dwarf2_cu *cu)\n     {\n       if (built_actual_name != nullptr)\n \tactual_name = objfile->intern (actual_name);\n-      psymbol.ginfo.set_linkage_name (actual_name);\n+      if (pdi->linkage_name == nullptr || cu->language == language_ada)\n+\tpsymbol.ginfo.set_linkage_name (actual_name);\n+      else\n+\t{\n+\t  psymbol.ginfo.set_demangled_name (actual_name,\n+\t\t\t\t\t    &objfile->objfile_obstack);\n+\t  psymbol.ginfo.set_linkage_name (pdi->linkage_name);\n+\t}\n       add_psymbol_to_list (psymbol, *where, objfile);\n     }\n }\n@@ -20546,7 +20553,6 @@ new_symbol (struct die_info *die, struct type *type, struct dwarf2_cu *cu,\n   name = dwarf2_name (die, cu);\n   if (name)\n     {\n-      const char *linkagename;\n       int suppress_add = 0;\n \n       if (space)\n@@ -20557,14 +20563,21 @@ new_symbol (struct die_info *die, struct type *type, struct dwarf2_cu *cu,\n \n       /* Cache this symbol's name and the name's demangled form (if any).  */\n       sym->set_language (cu->language, &objfile->objfile_obstack);\n-      linkagename = dwarf2_physname (name, die, cu);\n-      sym->compute_and_set_names (linkagename, false, objfile->per_bfd);\n-\n       /* Fortran does not have mangling standard and the mangling does differ\n \t between gfortran, iFort etc.  */\n-      if (cu->language == language_fortran\n-          && symbol_get_demangled_name (sym) == NULL)\n-\tsym->set_demangled_name (dwarf2_full_name (name, die, cu), NULL);\n+      const char *physname\n+\t= (cu->language == language_fortran\n+\t   ? dwarf2_full_name (name, die, cu)\n+\t   : dwarf2_physname (name, die, cu));\n+      const char *linkagename = dw2_linkage_name (die, cu);\n+\n+      if (linkagename == nullptr || cu->language == language_ada)\n+\tsym->set_linkage_name (physname);\n+      else\n+\t{\n+\t  sym->set_demangled_name (physname, &objfile->objfile_obstack);\n+\t  sym->set_linkage_name (linkagename);\n+\t}\n \n       /* Default assumptions.\n          Use the passed type or decode it from the die.  */"
    },
    {
      "sha": "03c42bd01c1e414e5fb0c6941f7f79342f8e4464",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=bcfe6157ca288efed127c5efe21ad7924e0d98cf",
      "patch": "@@ -1,3 +1,13 @@\n+2020-04-24  Tom Tromey  <tom@tromey.com>\n+\n+\tPR symtab/12707:\n+\t* gdb.python/py-symbol.exp: Update expected results for\n+\tlinkage_name test.\n+\t* gdb.cp/print-demangle.exp: New file.\n+\t* gdb.base/c-linkage-name.exp: Fix test.\n+\t* gdb.guile/scm-symbol.exp: Update expected results for\n+\tlinkage_name test.\n+\n 2020-04-24  Tom Tromey  <tom@tromey.com>\n \n \t* gdb.dwarf2/dw2-namespaceless-anonymous.S: Remove."
    },
    {
      "sha": "6b0a014949eff07328c7a15e17e0a2e2e0b31197",
      "filename": "gdb/testsuite/gdb.base/c-linkage-name.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/testsuite/gdb.base/c-linkage-name.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/testsuite/gdb.base/c-linkage-name.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/c-linkage-name.exp?ref=bcfe6157ca288efed127c5efe21ad7924e0d98cf",
      "patch": "@@ -46,8 +46,8 @@ if { $readnow } {\n     # Try to print MUNDANE, but using its linkage name.\n \n     gdb_test \"print symada__cS\" \\\n-\t\"'symada__cS' has unknown type; cast it to its declared type\" \\\n-\t$test\n+\t\" = {a = 100829103}\" \\\n+\t\"print symada__cS before partial symtab expansion\"\n }\n \n # Force the symbols to be expanded for the unit that contains"
    },
    {
      "sha": "9e0f706febf3a907df59c37a34c22820a607f7fd",
      "filename": "gdb/testsuite/gdb.cp/print-demangle.exp",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/testsuite/gdb.cp/print-demangle.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/testsuite/gdb.cp/print-demangle.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/print-demangle.exp?ref=bcfe6157ca288efed127c5efe21ad7924e0d98cf",
      "patch": "@@ -0,0 +1,32 @@\n+# Copyright (C) 2013, 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+if { [skip_cplus_tests] } { continue }\n+\n+standard_testfile bool.cc\n+\n+if {[prepare_for_testing $testfile.exp $testfile $srcfile {debug c++}]} {\n+    return -1\n+}\n+\n+runto_main\n+\n+gdb_breakpoint \"return_true\"\n+\n+gdb_continue_to_breakpoint \"return_true\"\n+\n+gdb_test_no_output \"set print demangle off\"\n+\n+gdb_test \"frame\" \" _Z11return_truev .*\""
    },
    {
      "sha": "486fc8fcfdbaf2d618a2ee6f370a623ddbda17e7",
      "filename": "gdb/testsuite/gdb.guile/scm-symbol.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/testsuite/gdb.guile/scm-symbol.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/testsuite/gdb.guile/scm-symbol.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.guile/scm-symbol.exp?ref=bcfe6157ca288efed127c5efe21ad7924e0d98cf",
      "patch": "@@ -169,10 +169,8 @@ gdb_test \"guile (print (symbol-name cplusfunc))\" \\\n     \"= SimpleClass::valueofi().*\" \"test method.name\"\n gdb_test \"guile (print (symbol-print-name cplusfunc))\" \\\n     \"= SimpleClass::valueofi().*\" \"test method.print_name\"\n-# FIXME: GDB is broken here and we're verifying broken behaviour.\n-# (linkage-name should be the mangled name)\n gdb_test \"guile (print (symbol-linkage-name cplusfunc))\" \\\n-    \"SimpleClass::valueofi().*\" \"test method.linkage_name\"\n+    \"_ZN11SimpleClass8valueofiEv.*\" \"test method.linkage_name\"\n gdb_test \"guile (print (= (symbol-addr-class cplusfunc) SYMBOL_LOC_BLOCK))\" \"= #t\"\n \n # Test is_valid when the objfile is unloaded.  This must be the last"
    },
    {
      "sha": "caa7ddc800793128f52328b6add7cf49eb729db0",
      "filename": "gdb/testsuite/gdb.python/py-symbol.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/testsuite/gdb.python/py-symbol.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcfe6157ca288efed127c5efe21ad7924e0d98cf/gdb/testsuite/gdb.python/py-symbol.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-symbol.exp?ref=bcfe6157ca288efed127c5efe21ad7924e0d98cf",
      "patch": "@@ -211,7 +211,7 @@ gdb_test \"python print (cplusfunc.is_function)\" \\\n \n gdb_test \"python print (cplusfunc.name)\" \"SimpleClass::valueofi().*\" \"test method.name\"\n gdb_test \"python print (cplusfunc.print_name)\" \"SimpleClass::valueofi().*\" \"test method.print_name\"\n-gdb_test \"python print (cplusfunc.linkage_name)\" \"SimpleClass::valueofi().*\" \"test method.linkage_name\"\n+gdb_test \"python print (cplusfunc.linkage_name)\" \"_ZN11SimpleClass8valueofiEv.*\" \"test method.linkage_name\"\n gdb_test \"python print (cplusfunc.addr_class == gdb.SYMBOL_LOC_BLOCK)\" \"True\" \"test method.addr_class\"\n \n # Test is_valid when the objfile is unloaded.  This must be the last"
    }
  ]
}