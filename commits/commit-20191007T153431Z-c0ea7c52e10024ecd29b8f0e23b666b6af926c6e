{
  "sha": "c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzBlYTdjNTJlMTAwMjRlY2QyOWI4ZjBlMjNiNjY2YjZhZjkyNmM2ZQ==",
  "commit": {
    "author": {
      "name": "Jozef Lawrynowicz",
      "email": "jozef.l@mittosystems.com",
      "date": "2019-10-07T15:34:31Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-10-07T15:34:31Z"
    },
    "message": "Add support for new functionality in the msp430 backend of GCC.\n\nThis functionality will generate a new GNU object attribute for the \"data region\"\nhas been added. This object attribute is used\nmark whether the compiler has generated code assuming that data could be in the\nupper or lower memory regions.\n\nCode which assumes data is always in the lower memory region is incompatible\nwith code which uses the full memory range for data.\n\nThe patch also adds a new assembler directive \".mspabi_attribute\" to handle the\nexisting MSPABI object attributes. GCC will now emit both .gnu_attribute and\n.mspabi_attribute directives to indicate what options the source file was\ncompiled with.\n\nThe assembler will now check the values set in these directives against the\noptions that the it has been invoked with. If there is a discrepancy, the\nassembler will exit with an error.\n\nbfd\t* elf32-msp430.c (elf32_msp430_merge_mspabi_attributes): Rename to..\n\t(elf32_msp430_merge_msp430_attributes): Add support for merging the GNU\n\tobject attribute for data region.\n\nbinutils* readelf.c (display_msp430_gnu_attribute): New.\n\t(process_arch_specific): Use msp430 specific handler for GNU\n\tattributes.\n\ngas\t* config/tc-msp430.c (md_parse_option): Set lower_data_region_only to\n\tFALSE if the data region is set to \"upper\", \"either\" or \"none\".\n\t(msp430_object_attribute): New.\n\t(md_pseudo_table): Handle .mspabi_attribute and .gnu_attribute.\n\t(msp430_md_end): Replace hard-coded attribute values with enums.\n\tHandle data region object attribute.\n\t* doc/as.texi: Document MSP430 Data Region object attribute.\n\t* doc/c-msp430.texi: Document the .mspabi_attribute directive.\n\t* testsuite/gas/msp430/attr-430-small-bad.d: New test.\n\t* testsuite/gas/msp430/attr-430-small-bad.l: New test.\n\t* testsuite/gas/msp430/attr-430-small-good.d: New test.\n\t* testsuite/gas/msp430/attr-430-small.s: New test.\n\t* testsuite/gas/msp430/attr-430x-large-any-bad.d: New test.\n\t* testsuite/gas/msp430/attr-430x-large-any-bad.l: New test.\n\t* testsuite/gas/msp430/attr-430x-large-any-good.d: New test.\n\t* testsuite/gas/msp430/attr-430x-large-any.s: New test.\n\t* testsuite/gas/msp430/attr-430x-large-lower-bad.d: New test.\n\t* testsuite/gas/msp430/attr-430x-large-lower-bad.l: New test.\n\t* testsuite/gas/msp430/attr-430x-large-lower-good.d: New test.\n\t* testsuite/gas/msp430/attr-430x-large-lower.s: New test.\n\t* testsuite/gas/msp430/msp430.exp: Run new tests.\n\ninclude\t* elf/msp430.h: Add enums for MSPABI and GNU object attribute tag names\n\tand values.\n\nld\t* testsuite/ld-msp430-elf/attr-gnu-main.s: New test.\n\t* testsuite/ld-msp430-elf/attr-gnu-obj.s: New test.\n\t* testsuite/ld-msp430-elf/attr-gnu-region-lower-upper.d: New test.\n\t* testsuite/ld-msp430-elf/attr-gnu-region-lower.d: New test.\n\t* testsuite/ld-msp430-elf/attr-gnu-region-upper.d: New test.\n\t* testsuite/ld-msp430-elf/msp430-elf.exp: Run new tests.",
    "tree": {
      "sha": "6be0be49c09e42f501772b4575576057ac57bc33",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6be0be49c09e42f501772b4575576057ac57bc33"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/comments",
  "author": {
    "login": "jozefl-mitto",
    "id": 36524004,
    "node_id": "MDQ6VXNlcjM2NTI0MDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jozefl-mitto",
    "html_url": "https://github.com/jozefl-mitto",
    "followers_url": "https://api.github.com/users/jozefl-mitto/followers",
    "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}",
    "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions",
    "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs",
    "repos_url": "https://api.github.com/users/jozefl-mitto/repos",
    "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "93370e8e7b406cf0aeedcf57cf457c07d6a2c7e6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93370e8e7b406cf0aeedcf57cf457c07d6a2c7e6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/93370e8e7b406cf0aeedcf57cf457c07d6a2c7e6"
    }
  ],
  "stats": {
    "total": 495,
    "additions": 461,
    "deletions": 34
  },
  "files": [
    {
      "sha": "6062d38a28dc78a75595a3a043b69a9d8be63e76",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -1,3 +1,9 @@\n+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* elf32-msp430.c (elf32_msp430_merge_mspabi_attributes): Rename to..\n+\t(elf32_msp430_merge_msp430_attributes): Add support for merging\n+\tthe GNU object attribute for data region.\n+\n 2019-10-07  Alan Modra  <amodra@gmail.com>\n \n \t* elf64-ppc.c (ppc64_elf_size_dynamic_sections): Do allocate"
    },
    {
      "sha": "d581dbcd9308a67e18fd3cb6b35ac2ca7014d176",
      "filename": "bfd/elf32-msp430.c",
      "status": "modified",
      "additions": 59,
      "deletions": 28,
      "changes": 87,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/bfd/elf32-msp430.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/bfd/elf32-msp430.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-msp430.c?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -2408,15 +2408,15 @@ data_model (int model)\n     }\n }\n \n-/* Merge MSPABI object attributes from IBFD into OBFD.\n+/* Merge MSPABI and GNU object attributes from IBFD into OBFD.\n    Raise an error if there are conflicting attributes.  */\n \n static bfd_boolean\n-elf32_msp430_merge_mspabi_attributes (bfd *ibfd, struct bfd_link_info *info)\n+elf32_msp430_merge_msp430_attributes (bfd *ibfd, struct bfd_link_info *info)\n {\n   bfd *obfd = info->output_bfd;\n-  obj_attribute *in_attr;\n-  obj_attribute *out_attr;\n+  obj_attribute *in_msp_attr, *in_gnu_attr;\n+  obj_attribute *out_msp_attr, *out_gnu_attr;\n   bfd_boolean result = TRUE;\n   static bfd * first_input_bfd = NULL;\n \n@@ -2435,45 +2435,48 @@ elf32_msp430_merge_mspabi_attributes (bfd *ibfd, struct bfd_link_info *info)\n     {\n       _bfd_elf_copy_obj_attributes (ibfd, obfd);\n \n-      out_attr = elf_known_obj_attributes_proc (obfd);\n+      out_msp_attr = elf_known_obj_attributes_proc (obfd);\n \n       /* Use the Tag_null value to indicate that\n \t the attributes have been initialized.  */\n-      out_attr[0].i = 1;\n+      out_msp_attr[0].i = 1;\n \n       first_input_bfd = ibfd;\n       return TRUE;\n     }\n \n-  in_attr = elf_known_obj_attributes_proc (ibfd);\n-  out_attr = elf_known_obj_attributes_proc (obfd);\n+  in_msp_attr = elf_known_obj_attributes_proc (ibfd);\n+  out_msp_attr = elf_known_obj_attributes_proc (obfd);\n+  in_gnu_attr = elf_known_obj_attributes (ibfd) [OBJ_ATTR_GNU];\n+  out_gnu_attr = elf_known_obj_attributes (obfd) [OBJ_ATTR_GNU];\n \n   /* The ISAs must be the same.  */\n-  if (in_attr[OFBA_MSPABI_Tag_ISA].i != out_attr[OFBA_MSPABI_Tag_ISA].i)\n+  if (in_msp_attr[OFBA_MSPABI_Tag_ISA].i != out_msp_attr[OFBA_MSPABI_Tag_ISA].i)\n     {\n       _bfd_error_handler\n \t/* xgettext:c-format */\n \t(_(\"error: %pB uses %s instructions but %pB uses %s\"),\n-\t ibfd, isa_type (in_attr[OFBA_MSPABI_Tag_ISA].i),\n-\t first_input_bfd, isa_type (out_attr[OFBA_MSPABI_Tag_ISA].i));\n+\t ibfd, isa_type (in_msp_attr[OFBA_MSPABI_Tag_ISA].i),\n+\t first_input_bfd, isa_type (out_msp_attr[OFBA_MSPABI_Tag_ISA].i));\n       result = FALSE;\n     }\n \n   /* The code models must be the same.  */\n-  if (in_attr[OFBA_MSPABI_Tag_Code_Model].i !=\n-      out_attr[OFBA_MSPABI_Tag_Code_Model].i)\n+  if (in_msp_attr[OFBA_MSPABI_Tag_Code_Model].i\n+      != out_msp_attr[OFBA_MSPABI_Tag_Code_Model].i)\n     {\n       _bfd_error_handler\n \t/* xgettext:c-format */\n \t(_(\"error: %pB uses the %s code model whereas %pB uses the %s code model\"),\n-\t ibfd, code_model (in_attr[OFBA_MSPABI_Tag_Code_Model].i),\n-\t first_input_bfd, code_model (out_attr[OFBA_MSPABI_Tag_Code_Model].i));\n+\t ibfd, code_model (in_msp_attr[OFBA_MSPABI_Tag_Code_Model].i),\n+\t first_input_bfd,\n+\t code_model (out_msp_attr[OFBA_MSPABI_Tag_Code_Model].i));\n       result = FALSE;\n     }\n \n   /* The large code model is only supported by the MSP430X.  */\n-  if (in_attr[OFBA_MSPABI_Tag_Code_Model].i == 2\n-      && out_attr[OFBA_MSPABI_Tag_ISA].i != 2)\n+  if (in_msp_attr[OFBA_MSPABI_Tag_Code_Model].i == 2\n+      && out_msp_attr[OFBA_MSPABI_Tag_ISA].i != 2)\n     {\n       _bfd_error_handler\n \t/* xgettext:c-format */\n@@ -2483,41 +2486,69 @@ elf32_msp430_merge_mspabi_attributes (bfd *ibfd, struct bfd_link_info *info)\n     }\n \n   /* The data models must be the same.  */\n-  if (in_attr[OFBA_MSPABI_Tag_Data_Model].i !=\n-      out_attr[OFBA_MSPABI_Tag_Data_Model].i)\n+  if (in_msp_attr[OFBA_MSPABI_Tag_Data_Model].i\n+      != out_msp_attr[OFBA_MSPABI_Tag_Data_Model].i)\n     {\n       _bfd_error_handler\n \t/* xgettext:c-format */\n \t(_(\"error: %pB uses the %s data model whereas %pB uses the %s data model\"),\n-\t ibfd, data_model (in_attr[OFBA_MSPABI_Tag_Data_Model].i),\n-\t first_input_bfd, data_model (out_attr[OFBA_MSPABI_Tag_Data_Model].i));\n+\t ibfd, data_model (in_msp_attr[OFBA_MSPABI_Tag_Data_Model].i),\n+\t first_input_bfd,\n+\t data_model (out_msp_attr[OFBA_MSPABI_Tag_Data_Model].i));\n       result = FALSE;\n     }\n \n   /* The small code model requires the use of the small data model.  */\n-  if (in_attr[OFBA_MSPABI_Tag_Code_Model].i == 1\n-      && out_attr[OFBA_MSPABI_Tag_Data_Model].i != 1)\n+  if (in_msp_attr[OFBA_MSPABI_Tag_Code_Model].i == 1\n+      && out_msp_attr[OFBA_MSPABI_Tag_Data_Model].i != 1)\n     {\n       _bfd_error_handler\n \t/* xgettext:c-format */\n \t(_(\"error: %pB uses the small code model but %pB uses the %s data model\"),\n \t ibfd, first_input_bfd,\n-\t data_model (out_attr[OFBA_MSPABI_Tag_Data_Model].i));\n+\t data_model (out_msp_attr[OFBA_MSPABI_Tag_Data_Model].i));\n       result = FALSE;\n     }\n \n   /* The large data models are only supported by the MSP430X.  */\n-  if (in_attr[OFBA_MSPABI_Tag_Data_Model].i > 1\n-      && out_attr[OFBA_MSPABI_Tag_ISA].i != 2)\n+  if (in_msp_attr[OFBA_MSPABI_Tag_Data_Model].i > 1\n+      && out_msp_attr[OFBA_MSPABI_Tag_ISA].i != 2)\n     {\n       _bfd_error_handler\n \t/* xgettext:c-format */\n \t(_(\"error: %pB uses the %s data model but %pB only uses MSP430 instructions\"),\n-\t ibfd, data_model (in_attr[OFBA_MSPABI_Tag_Data_Model].i),\n+\t ibfd, data_model (in_msp_attr[OFBA_MSPABI_Tag_Data_Model].i),\n \t first_input_bfd);\n       result = FALSE;\n     }\n \n+  /* Just ignore the data region unless the large memory model is in use.\n+     We have already checked that ibfd and obfd use the same memory model.  */\n+  if ((in_msp_attr[OFBA_MSPABI_Tag_Code_Model].i\n+       == OFBA_MSPABI_Val_Code_Model_LARGE)\n+      && (in_msp_attr[OFBA_MSPABI_Tag_Data_Model].i\n+\t  == OFBA_MSPABI_Val_Data_Model_LARGE))\n+    {\n+      /* We cannot allow \"lower region only\" to be linked with any other\n+\t values (i.e. ANY or NONE).\n+\t Before this attribute existed, \"ANY\" region was the default.  */\n+      bfd_boolean ibfd_lower_region_used\n+\t= (in_gnu_attr[Tag_GNU_MSP430_Data_Region].i\n+\t   == Val_GNU_MSP430_Data_Region_Lower);\n+      bfd_boolean obfd_lower_region_used\n+\t= (out_gnu_attr[Tag_GNU_MSP430_Data_Region].i\n+\t   == Val_GNU_MSP430_Data_Region_Lower);\n+      if (ibfd_lower_region_used != obfd_lower_region_used)\n+\t{\n+\t  _bfd_error_handler\n+\t    (_(\"error: %pB can use the upper region for data, \"\n+\t       \"but %pB assumes data is exclusively in lower memory\"),\n+\t     ibfd_lower_region_used ? obfd : ibfd,\n+\t     ibfd_lower_region_used ? ibfd : obfd);\n+\t  result = FALSE;\n+\t}\n+    }\n+\n   return result;\n }\n \n@@ -2536,7 +2567,7 @@ elf32_msp430_merge_private_bfd_data (bfd *ibfd, struct bfd_link_info *info)\n \t\t\t       max (bfd_get_mach (ibfd), bfd_get_mach (obfd)));\n #undef max\n \n-  return elf32_msp430_merge_mspabi_attributes (ibfd, info);\n+  return elf32_msp430_merge_msp430_attributes (ibfd, info);\n }\n \n static bfd_boolean"
    },
    {
      "sha": "b9e2fcf1a46b0245a709cb56f464812705cda2df",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -1,3 +1,9 @@\n+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* readelf.c (display_msp430_gnu_attribute): New.\n+\t(process_arch_specific): Use msp430 specific handler for GNU\n+\tattributes.\n+\n 2019-09-30  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* objdump.c (main): Fix tabdamage."
    },
    {
      "sha": "de77237e0ec9ffddf22437b644f8b81407ce1f14",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 31,
      "deletions": 1,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -15738,6 +15738,36 @@ display_msp430x_attribute (unsigned char * p,\n   return p;\n }\n \n+static unsigned char *\n+display_msp430_gnu_attribute (unsigned char * p,\n+\t\t\t      unsigned int tag,\n+\t\t\t      const unsigned char * const end)\n+{\n+  if (tag == Tag_GNU_MSP430_Data_Region)\n+    {\n+      unsigned int len;\n+      int val;\n+\n+      val = read_uleb128 (p, &len, end);\n+      p += len;\n+      printf (\"  Tag_GNU_MSP430_Data_Region: \");\n+\n+      switch (val)\n+\t{\n+\tcase Val_GNU_MSP430_Data_Region_Any:\n+\t  printf (_(\"Any Region\\n\"));\n+\t  break;\n+\tcase Val_GNU_MSP430_Data_Region_Lower:\n+\t  printf (_(\"Lower Region Only\\n\"));\n+\t  break;\n+\tdefault:\n+\t  printf (\"??? (%d)\\n\", val);\n+\t}\n+      return p;\n+    }\n+  return display_tag_value (tag & 1, p, end);\n+}\n+\n struct riscv_attr_tag_t {\n   const char *name;\n   int tag;\n@@ -19562,7 +19592,7 @@ process_arch_specific (Filedata * filedata)\n     case EM_MSP430:\n      return process_attributes (filedata, \"mspabi\", SHT_MSP430_ATTRIBUTES,\n \t\t\t\tdisplay_msp430x_attribute,\n-\t\t\t\tdisplay_generic_attribute);\n+\t\t\t\tdisplay_msp430_gnu_attribute);\n \n     case EM_RISCV:\n      return process_attributes (filedata, \"riscv\", SHT_RISCV_ATTRIBUTES,"
    },
    {
      "sha": "41bcaa33327cea53745099368fca9e6e27faeaa5",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -1,3 +1,27 @@\n+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/tc-msp430.c (md_parse_option): Set lower_data_region_only\n+\tto FALSE if the data region is set to \"upper\", \"either\" or \"none\".\n+\t(msp430_object_attribute): New.\n+\t(md_pseudo_table): Handle .mspabi_attribute and .gnu_attribute.\n+\t(msp430_md_end): Replace hard-coded attribute values with enums.\n+\tHandle data region object attribute.\n+\t* doc/as.texi: Document MSP430 Data Region object attribute.\n+\t* doc/c-msp430.texi: Document the .mspabi_attribute directive.\n+\t* testsuite/gas/msp430/attr-430-small-bad.d: New test.\n+\t* testsuite/gas/msp430/attr-430-small-bad.l: New test.\n+\t* testsuite/gas/msp430/attr-430-small-good.d: New test.\n+\t* testsuite/gas/msp430/attr-430-small.s: New test.\n+\t* testsuite/gas/msp430/attr-430x-large-any-bad.d: New test.\n+\t* testsuite/gas/msp430/attr-430x-large-any-bad.l: New test.\n+\t* testsuite/gas/msp430/attr-430x-large-any-good.d: New test.\n+\t* testsuite/gas/msp430/attr-430x-large-any.s: New test.\n+\t* testsuite/gas/msp430/attr-430x-large-lower-bad.d: New test.\n+\t* testsuite/gas/msp430/attr-430x-large-lower-bad.l: New test.\n+\t* testsuite/gas/msp430/attr-430x-large-lower-good.d: New test.\n+\t* testsuite/gas/msp430/attr-430x-large-lower.s: New test.\n+\t* testsuite/gas/msp430/msp430.exp: Run new tests.\n+\n 2019-10-07  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (check_string): Make reported operand number"
    },
    {
      "sha": "41413f0de92dd9c5c3ebc6627f18bf0619329f8a",
      "filename": "gas/config/tc-msp430.c",
      "status": "modified",
      "additions": 142,
      "deletions": 4,
      "changes": 146,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/config/tc-msp430.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/config/tc-msp430.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-msp430.c?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -689,6 +689,8 @@ static bfd_boolean do_unknown_interrupt_nops = TRUE;\n static bfd_boolean move_data = FALSE;\n #define OPTION_DATA_REGION 'r'\n static bfd_boolean upper_data_region_in_use = FALSE;\n+/* The default is to use the lower region only.  */\n+static bfd_boolean lower_data_region_only = TRUE;\n \n enum\n {\n@@ -1473,6 +1475,13 @@ md_parse_option (int c, const char * arg)\n       if (strcmp (arg, \"upper\") == 0\n \t  || strcmp (arg, \"either\") == 0)\n \tupper_data_region_in_use = TRUE;\n+      if (strcmp (arg, \"upper\") == 0\n+\t  || strcmp (arg, \"either\") == 0\n+\t  /* With data-region=none, the compiler has generated code assuming\n+\t     data could be in the upper region, but nothing has been explicitly\n+\t     placed there.  */\n+\t  || strcmp (arg, \"none\") == 0)\n+\tlower_data_region_only = FALSE;\n       return 1;\n     }\n \n@@ -1598,6 +1607,120 @@ msp430_refsym (int arg ATTRIBUTE_UNUSED)\n   (void) symbol_find_or_make (sym_name);\n }\n \n+/* Handle a .mspabi_attribute or .gnu_attribute directive.\n+   attr_type is 0 for .mspabi_attribute or 1 for .gnu_attribute.\n+   This is only used for validating the attributes in the assembly file against\n+   the options gas has been invoked with.  If the attributes and options are\n+   compatible then we add the attributes to the assembly file in\n+   msp430_md_end.  */\n+static void\n+msp430_object_attribute (int attr_type)\n+{\n+  char tag_name_s[32];\n+  char tag_value_s[32];\n+  int tag_name, tag_value;\n+  /* First operand is the tag name, second is the tag value e.g.\n+     \".mspabi_attribute 4, 2\".  */\n+  input_line_pointer = extract_operand (input_line_pointer, tag_name_s, 32);\n+  input_line_pointer = extract_operand (input_line_pointer, tag_value_s, 32);\n+  tag_name = atoi (tag_name_s);\n+  tag_value = atoi (tag_value_s);\n+  /* If the attribute directive is present, the tag_value should never be set\n+     to 0.  */\n+  if (tag_name == 0 || tag_value == 0)\n+    as_bad (_(\"bad arguments \\\"%s\\\" and/or \\\"%s\\\" in %s directive\"),\n+\t      tag_name_s, tag_value_s, (attr_type ? \".gnu_attribute\"\n+\t\t\t\t\t: \".mspabi_attribute\"));\n+  else if (attr_type == 0)\n+    /* Handle .mspabi_attribute.  */\n+    switch (tag_name)\n+      {\n+      case OFBA_MSPABI_Tag_ISA:\n+\tswitch (tag_value)\n+\t  {\n+\t  case OFBA_MSPABI_Val_ISA_MSP430:\n+\t    if (target_is_430x ())\n+\t      as_bad (_(\"file was compiled for the 430 ISA but the %s ISA is \"\n+\t\t\t\"selected\"), (target_is_430xv2 () ? \"430X\" : \"430Xv2\"));\n+\t    break;\n+\t  case OFBA_MSPABI_Val_ISA_MSP430X:\n+\t    if (!target_is_430x ())\n+\t      as_bad (_(\"file was compiled for the 430X ISA but the 430 ISA is \"\n+\t\t\t\"selected\"));\n+\t    break;\n+\t  default:\n+\t    as_bad (_(\"unknown MSPABI build attribute value '%d' for \"\n+\t\t      \"OFBA_MSPABI_Tag_ISA(%d) in .mspabi_attribute directive\"),\n+\t\t    tag_value, OFBA_MSPABI_Tag_ISA);\n+\t    break;\n+\t  }\n+\tbreak;\n+      case OFBA_MSPABI_Tag_Code_Model:\n+\t/* Fall through.  */\n+      case OFBA_MSPABI_Tag_Data_Model:\n+\t/* FIXME: Might we want to set the memory model to large if the assembly\n+\t   file has the large model attribute, but -ml has not been passed?  */\n+\tswitch (tag_value)\n+\t  {\n+\t  case OFBA_MSPABI_Val_Code_Model_SMALL:\n+\t    if (large_model)\n+\t      as_bad (_(\"file was compiled for the small memory model, but the \"\n+\t\t\t\"large memory model is selected\"));\n+\t    break;\n+\t  case OFBA_MSPABI_Val_Code_Model_LARGE:\n+\t    if (!large_model)\n+\t      as_bad (_(\"file was compiled for the large memory model, \"\n+\t\t\t\"but the small memory model is selected\"));\n+\t    break;\n+\t  default:\n+\t    as_bad (_(\"unknown MSPABI build attribute value '%d' for %s(%d) \"\n+\t\t      \"in .mspabi_attribute directive\"), tag_value,\n+\t\t    (tag_name == OFBA_MSPABI_Tag_Code_Model\n+\t\t     ? \"OFBA_MSPABI_Tag_Code_Model\"\n+\t\t     : \"OFBA_MSPABI_Tag_Data_Model\"),\n+\t\t    (tag_name == OFBA_MSPABI_Tag_Code_Model\n+\t\t     ? OFBA_MSPABI_Tag_Code_Model\n+\t\t     : OFBA_MSPABI_Tag_Data_Model));\n+\t    break;\n+\t  }\n+\tbreak;\n+      default:\n+\tas_bad (_(\"unknown MSPABI build attribute tag '%d' in \"\n+\t\t  \".mspabi_attribute directive\"), tag_name);\n+\tbreak;\n+      }\n+  else if (attr_type == 1)\n+    /* Handle .gnu_attribute.  */\n+    switch (tag_name)\n+      {\n+      case Tag_GNU_MSP430_Data_Region:\n+\t/* This attribute is only applicable in the large memory model.  */\n+\tif (!large_model)\n+\t  break;\n+\tswitch (tag_value)\n+\t  {\n+\t  case Val_GNU_MSP430_Data_Region_Lower:\n+\t    if (!lower_data_region_only)\n+\t      as_bad (_(\"file was compiled assuming all data will be in the \"\n+\t\t\t\"lower memory region, but the upper region is in use\"));\n+\t    break;\n+\t  case Val_GNU_MSP430_Data_Region_Any:\n+\t    if (lower_data_region_only)\n+\t      as_bad (_(\"file was compiled assuming data could be in the upper \"\n+\t\t\t\"memory region, but the lower data region is \"\n+\t\t\t\"exclusively in use\"));\n+\t    break;\n+\t  default:\n+\t    as_bad (_(\"unknown GNU build attribute value '%d' for \"\n+\t\t      \"Tag_GNU_MSP430_Data_Region(%d) in .gnu_attribute \"\n+\t\t      \"directive\"), tag_value, Tag_GNU_MSP430_Data_Region);\n+\t  }\n+      }\n+  else\n+    as_bad (_(\"internal: unexpected argument '%d' to msp430_object_attribute\"),\n+\t    attr_type);\n+}\n+\n const pseudo_typeS md_pseudo_table[] =\n {\n   {\"arch\", msp430_set_arch, OPTION_MMCU},\n@@ -1611,6 +1734,8 @@ const pseudo_typeS md_pseudo_table[] =\n   {\"refsym\", msp430_refsym, 0},\n   {\"comm\", msp430_comm, 0},\n   {\"lcomm\", msp430_lcomm, 0},\n+  {\"mspabi_attribute\", msp430_object_attribute, 0},\n+  {\"gnu_attribute\", msp430_object_attribute, 1},\n   {NULL, NULL, 0}\n };\n \n@@ -4919,7 +5044,7 @@ msp430_fix_adjustable (struct fix *fixp ATTRIBUTE_UNUSED)\n   return FALSE;\n }\n \n-/* Set the contents of the .MSP430.attributes section.  */\n+/* Set the contents of the .MSP430.attributes and .GNU.attributes sections.  */\n \n void\n msp430_md_end (void)\n@@ -4936,14 +5061,27 @@ msp430_md_end (void)\n \tas_warn (_(WARN_NOP_AT_EOF));\n     }\n \n+  /* We have already emitted an error if any of the following attributes\n+     disagree with the attributes in the input assembly file.  See\n+     msp430_object_attribute.  */\n   bfd_elf_add_proc_attr_int (stdoutput, OFBA_MSPABI_Tag_ISA,\n-\t\t\t     target_is_430x () ? 2 : 1);\n+\t\t\t     target_is_430x () ? OFBA_MSPABI_Val_ISA_MSP430X\n+\t\t\t     : OFBA_MSPABI_Val_ISA_MSP430);\n \n   bfd_elf_add_proc_attr_int (stdoutput, OFBA_MSPABI_Tag_Code_Model,\n-\t\t\t     large_model ? 2 : 1);\n+\t\t\t     large_model ? OFBA_MSPABI_Val_Code_Model_LARGE\n+\t\t\t     : OFBA_MSPABI_Val_Code_Model_SMALL);\n \n   bfd_elf_add_proc_attr_int (stdoutput, OFBA_MSPABI_Tag_Data_Model,\n-\t\t\t     large_model ? 2 : 1);\n+\t\t\t     large_model ? OFBA_MSPABI_Val_Code_Model_LARGE\n+\t\t\t     : OFBA_MSPABI_Val_Code_Model_SMALL);\n+\n+  /* The data region GNU attribute is ignored for the small memory model.  */\n+  if (large_model)\n+    bfd_elf_add_obj_attr_int (stdoutput, OBJ_ATTR_GNU,\n+\t\t\t      Tag_GNU_MSP430_Data_Region, lower_data_region_only\n+\t\t\t      ? Val_GNU_MSP430_Data_Region_Lower\n+\t\t\t      : Val_GNU_MSP430_Data_Region_Any);\n }\n \n /* Returns FALSE if there is a msp430 specific reason why the"
    },
    {
      "sha": "93e80f9a4301df860fe5225b8726ff5cc9aa168c",
      "filename": "gas/doc/as.texi",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/doc/as.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/doc/as.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/as.texi?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -7585,6 +7585,23 @@ The vector ABI used by this object file.  The value will be:\n @end itemize\n @end table\n \n+@subsection MSP430 Attributes\n+\n+@table @r\n+@item Tag_GNU_MSP430_Data_Region (4)\n+The data region used by this object file.  The value will be:\n+\n+@itemize @bullet\n+@item\n+0 for files not using the large memory model.\n+@item\n+1 for files which have been compiled with the condition that all\n+data is in the lower memory region, i.e. below address 0x10000.\n+@item\n+2 for files which allow data to be placed in the full 20-bit memory range.\n+@end itemize\n+@end table\n+\n @node Defining New Object Attributes\n @section Defining New Object Attributes\n "
    },
    {
      "sha": "3691f21bca1521a6d24d3b80e93d64c93d184c40",
      "filename": "gas/doc/c-msp430.texi",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/doc/c-msp430.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/doc/c-msp430.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-msp430.texi?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -322,6 +322,18 @@ exist purely for pulling in object files from archives.  Note that\n this reloc is not sufficient to prevent garbage collection; use a\n KEEP() directive in the linker file to preserve such objects.\n \n+@cindex @code{mspabi_attribute} directive, MSP430\n+@item .mspabi_attribute\n+This directive tells the assembler what the MSPABI build attributes for this\n+file are.  This is used for validating the command line options passed to\n+the assembler against the options the original source file was compiled with.\n+The expected format is:\n+@samp{.mspabi_attribute tag_name, tag_value}\n+For example, to set the tag @code{OFBA_MSPABI_Tag_ISA} to @code{MSP430X}:\n+@samp{.mspabi_attribute 4, 2}\n+\n+See the @cite{MSP430 EABI, document slaa534} for the details on tag names and\n+values.\n @end table\n \n @node MSP430 Opcodes"
    },
    {
      "sha": "302ba57070d4d8d88ad8bc924e13f2873dc3b6e0",
      "filename": "gas/testsuite/gas/msp430/attr-430-small-bad.d",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430-small-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430-small-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/attr-430-small-bad.d?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,4 @@\n+#name: Error when 430 ISA and small memory model object attributes conflict with options\n+#source: attr-430-small.s\n+#as: -mdata-region=none -ml\n+#error_output: attr-430-small-bad.l"
    },
    {
      "sha": "c339ecfa3509c6d03fbba3023201dcd7c87b3529",
      "filename": "gas/testsuite/gas/msp430/attr-430-small-bad.l",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430-small-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430-small-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/attr-430-small-bad.l?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,4 @@\n+[^:]*: Assembler messages:\n+[^:]*:1: Error: file was compiled for the 430 ISA but the 430X ISA is selected\n+[^:]*:2: Error: file was compiled for the small memory model, but the large memory model is selected\n+[^:]*:3: Error: file was compiled for the small memory model, but the large memory model is selected"
    },
    {
      "sha": "5f3137f94753253a3d71ebb73c1328c413576e32",
      "filename": "gas/testsuite/gas/msp430/attr-430-small-good.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430-small-good.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430-small-good.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/attr-430-small-good.d?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,6 @@\n+#name: 430 ISA and small memory model object attributes\n+#source: attr-430-small.s\n+#as: -mcpu=msp430\n+#objdump: -t\n+\n+#pass"
    },
    {
      "sha": "2bdb1dbf83989245f10c927a1c7a74311c7aedc0",
      "filename": "gas/testsuite/gas/msp430/attr-430-small.s",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430-small.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430-small.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/attr-430-small.s?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,3 @@\n+.mspabi_attribute 4, 1 ; OFBA_MSPABI_Tag_ISA == 430\n+.mspabi_attribute 6, 1 ; OFBA_MSPABI_Tag_Code_Model == Small\n+.mspabi_attribute 8, 1 ; OFBA_MSPABI_Tag_Data_Model == Small"
    },
    {
      "sha": "6793f7cb1c3c6ee34d2f11cb8b0fe4539cc508e0",
      "filename": "gas/testsuite/gas/msp430/attr-430x-large-any-bad.d",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-any-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-any-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/attr-430x-large-any-bad.d?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,4 @@\n+#name: Error when 430X ISA, large memory model and any data region object attributes conflict with options\n+#source: attr-430x-large-any.s\n+#as: -mcpu=msp430 -ml\n+#error_output: attr-430x-large-any-bad.l"
    },
    {
      "sha": "c7f22820df92e723dfc329d984a30ddfd03a9768",
      "filename": "gas/testsuite/gas/msp430/attr-430x-large-any-bad.l",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-any-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-any-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/attr-430x-large-any-bad.l?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,3 @@\n+[^:]*: Assembler messages:\n+[^:]*:1: Error: file was compiled for the 430X ISA but the 430 ISA is selected\n+[^:]*:4: Error: file was compiled assuming data could be in the upper memory region, but the lower data region is exclusively in use"
    },
    {
      "sha": "603aab11b5d26c6cad99abfcf0da257b5e12ce86",
      "filename": "gas/testsuite/gas/msp430/attr-430x-large-any-good.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-any-good.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-any-good.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/attr-430x-large-any-good.d?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,6 @@\n+#name: 430X ISA, large memory model and any data region object attributes\n+#source: attr-430x-large-any.s\n+#as: -ml -mdata-region=none\n+#objdump: -t\n+\n+#pass"
    },
    {
      "sha": "593c1710a14373896af42356e4c531f5a92ec931",
      "filename": "gas/testsuite/gas/msp430/attr-430x-large-any.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-any.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-any.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/attr-430x-large-any.s?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,4 @@\n+.mspabi_attribute 4, 2 ; OFBA_MSPABI_Tag_ISA == 430x\n+.mspabi_attribute 6, 2 ; OFBA_MSPABI_Tag_Code_Model == Large\n+.mspabi_attribute 8, 2 ; OFBA_MSPABI_Tag_Data_Model == Large\n+.gnu_attribute 4, 2 ; Tag_GNU_MSP430_Data_Region == Any"
    },
    {
      "sha": "fb7e5cad7dccf5e03b1aeb9ac4d391f4bcfbfa8b",
      "filename": "gas/testsuite/gas/msp430/attr-430x-large-lower-bad.d",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-lower-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-lower-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/attr-430x-large-lower-bad.d?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,4 @@\n+#name: Error when 430X ISA, large memory model and lower data region object attributes conflict with options\n+#source: attr-430x-large-lower.s\n+#as: -mdata-region=none -mcpu=msp430 -ml\n+#error_output: attr-430x-large-lower-bad.l"
    },
    {
      "sha": "a21b6409158af32beac823cde98dfe029df1b432",
      "filename": "gas/testsuite/gas/msp430/attr-430x-large-lower-bad.l",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-lower-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-lower-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/attr-430x-large-lower-bad.l?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,3 @@\n+[^:]*: Assembler messages:\n+[^:]*:1: Error: file was compiled for the 430X ISA but the 430 ISA is selected\n+[^:]*:4: Error: file was compiled assuming all data will be in the lower memory region, but the upper region is in use"
    },
    {
      "sha": "c4a395cd80c99dc84152594533209f1fe16b01a4",
      "filename": "gas/testsuite/gas/msp430/attr-430x-large-lower-good.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-lower-good.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-lower-good.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/attr-430x-large-lower-good.d?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,6 @@\n+#name: 430X ISA, large memory model and lower data region object attributes\n+#source: attr-430x-large-lower.s\n+#as: -ml\n+#objdump: -t\n+\n+#pass"
    },
    {
      "sha": "4ab0b5d13a25a1508db8cdacbebe195003cec477",
      "filename": "gas/testsuite/gas/msp430/attr-430x-large-lower.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-lower.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/attr-430x-large-lower.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/attr-430x-large-lower.s?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,4 @@\n+.mspabi_attribute 4, 2 ; OFBA_MSPABI_Tag_ISA == 430x\n+.mspabi_attribute 6, 2 ; OFBA_MSPABI_Tag_Code_Model == Large\n+.mspabi_attribute 8, 2 ; OFBA_MSPABI_Tag_Data_Model == Large\n+.gnu_attribute 4, 1 ; Tag_GNU_MSP430_Data_Region == Lower"
    },
    {
      "sha": "ef3164da2b3c43174e3546d688923d1f32e501c7",
      "filename": "gas/testsuite/gas/msp430/msp430.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/msp430.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/gas/testsuite/gas/msp430/msp430.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/msp430.exp?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -46,4 +46,10 @@ if [expr [istarget \"msp430-*-*\"]]  then {\n     run_dump_test \"preinit-array\"\n     run_dump_test \"init-array\"\n     run_dump_test \"fini-array\"\n+    run_dump_test \"attr-430-small-bad\"\n+    run_dump_test \"attr-430-small-good\"\n+    run_dump_test \"attr-430x-large-lower-bad\"\n+    run_dump_test \"attr-430x-large-lower-good\"\n+    run_dump_test \"attr-430x-large-any-bad\"\n+    run_dump_test \"attr-430x-large-any-good\"\n }"
    },
    {
      "sha": "13b15f00a7165018b0c48622e3944c702624ce06",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -1,3 +1,8 @@\n+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* elf/msp430.h: Add enums for MSPABI and GNU object attribute tag\n+\tnames and values.\n+\n 2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-api.h (ctf_cuname_set): Can now fail, returning int."
    },
    {
      "sha": "ce2cf5b3c7df26db93a3afd2ee1f637f2102a9d9",
      "filename": "include/elf/msp430.h",
      "status": "modified",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/include/elf/msp430.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/include/elf/msp430.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/msp430.h?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -58,6 +58,47 @@\n #define OFBA_MSPABI_Tag_ISA\t\t4\n #define OFBA_MSPABI_Tag_Code_Model\t6\n #define OFBA_MSPABI_Tag_Data_Model\t8\n+#define OFBA_MSPABI_Tag_enum_size\t10\t/* Unused by GNU.  */\n+\n+/* GNU Object attribute tags.  */\n+enum\n+{\n+  /* 0-3 are generic.  */\n+\n+  /* Define a GNU attribute for keeping track of whether the compiler has\n+     generated code assuming that the upper region could be in use.\n+     Added by the assembler based on the -mdata-region option.\n+     This tag is ignored unless the large memory model is in use.  */\n+  Tag_GNU_MSP430_Data_Region = 4,\n+};\n+\n+/* Object attribute values.  */\n+enum\n+{\n+  /* Values defined for OFBA_MSPABI_Tag_ISA.  */\n+  OFBA_MSPABI_Val_ISA_NONE = 0,\n+  OFBA_MSPABI_Val_ISA_MSP430 = 1,\n+  OFBA_MSPABI_Val_ISA_MSP430X = 2,\n+\n+  /* Values defined for OFBA_MSPABI_Tag_Code_Model.  */\n+  OFBA_MSPABI_Val_Code_Model_NONE = 0,\n+  OFBA_MSPABI_Val_Code_Model_SMALL = 1,\n+  OFBA_MSPABI_Val_Code_Model_LARGE = 2,\n+\n+  /* Values defined for OFBA_MSPABI_Tag_Data_Model.  */\n+  OFBA_MSPABI_Val_Data_Model_NONE = 0,\n+  OFBA_MSPABI_Val_Data_Model_SMALL = 1,\n+  OFBA_MSPABI_Val_Data_Model_LARGE = 2,\n+  OFBA_MSPABI_Val_Data_Model_RESTRICTED = 3,\t/* Unused by GNU.  */\n+\n+  /* Values defined for Tag_GNU_MSP430_Data_Region.  */\n+  Val_GNU_MSP430_Data_Region_NONE = 0,\n+  /* The default data region.  Assumes all data is below address 0x10000.  */\n+  Val_GNU_MSP430_Data_Region_Lower = 1,\n+  /* Set if -mdata-region={none,upper,either}.  Assumes\n+     data could be placed at or above address 0x10000.  */\n+  Val_GNU_MSP430_Data_Region_Any = 2,\n+};\n \n /* Relocations.  */\n START_RELOC_NUMBERS (elf_msp430_reloc_type)"
    },
    {
      "sha": "a54576540880a82e6b27f212fe87f29572c77e34",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -1,3 +1,12 @@\n+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* testsuite/ld-msp430-elf/attr-gnu-main.s: New test.\n+\t* testsuite/ld-msp430-elf/attr-gnu-obj.s: New test.\n+\t* testsuite/ld-msp430-elf/attr-gnu-region-lower-upper.d: New test.\n+\t* testsuite/ld-msp430-elf/attr-gnu-region-lower.d: New test.\n+\t* testsuite/ld-msp430-elf/attr-gnu-region-upper.d: New test.\n+\t* testsuite/ld-msp430-elf/msp430-elf.exp: Run new tests.\n+\n 2019-10-07  Alan Modra  <amodra@gmail.com>\n \n \t* ldmisc.c (vfinfo): Save and restore bfd_error around bfd"
    },
    {
      "sha": "e07a58ca709701f41aa2a194c65081fdc025c9e0",
      "filename": "ld/testsuite/ld-msp430-elf/attr-gnu-main.s",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/testsuite/ld-msp430-elf/attr-gnu-main.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/testsuite/ld-msp430-elf/attr-gnu-main.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/attr-gnu-main.s?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,8 @@\n+.text\n+\t.balign 2\n+\t.global\tmain\n+\t.type\tmain, @function\n+main:\n+.L2:\n+\tBRA\t#.L2\n+\t.size\tmain, .-main"
    },
    {
      "sha": "d256e409c2020e76dee712cc6f7f1fd1ff44e2b8",
      "filename": "ld/testsuite/ld-msp430-elf/attr-gnu-obj.s",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/testsuite/ld-msp430-elf/attr-gnu-obj.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/testsuite/ld-msp430-elf/attr-gnu-obj.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/attr-gnu-obj.s?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,2 @@\n+.text\n+\t.comm\ta,2,2"
    },
    {
      "sha": "70f8e350041c0ff553b4277f2cf7c2ab24ba0d21",
      "filename": "ld/testsuite/ld-msp430-elf/attr-gnu-region-lower-upper.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/testsuite/ld-msp430-elf/attr-gnu-region-lower-upper.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/testsuite/ld-msp430-elf/attr-gnu-region-lower-upper.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/attr-gnu-region-lower-upper.d?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,6 @@\n+#name: prevent merging of lower and upper attributes\n+#source: attr-gnu-main.s -ml -mdata-region=lower\n+#source: attr-gnu-obj.s -ml -mdata-region=upper\n+#ld:\n+#error: .*can use the upper region for data, but.*assumes data is exclusively in lower memory.*\n+#error: .*failed to merge target specific data of file.*"
    },
    {
      "sha": "57345aadebd0e8722b4276521bc7c4966e208f62",
      "filename": "ld/testsuite/ld-msp430-elf/attr-gnu-region-lower.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/testsuite/ld-msp430-elf/attr-gnu-region-lower.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/testsuite/ld-msp430-elf/attr-gnu-region-lower.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/attr-gnu-region-lower.d?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,12 @@\n+#source: attr-gnu-main.s -ml -mdata-region=lower\n+#source: attr-gnu-obj.s -ml\n+#readelf: -A\n+\n+Attribute Section: mspabi\n+File Attributes\n+  Tag_ISA: MSP430X\n+  Tag_Code_Model: Large\n+  Tag_Data_Model: Large\n+Attribute Section: gnu\n+File Attributes\n+  Tag_GNU_MSP430_Data_Region: Lower Region Only"
    },
    {
      "sha": "225968dc445d15131633ce62af5b96275309c937",
      "filename": "ld/testsuite/ld-msp430-elf/attr-gnu-region-upper.d",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/testsuite/ld-msp430-elf/attr-gnu-region-upper.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/testsuite/ld-msp430-elf/attr-gnu-region-upper.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/attr-gnu-region-upper.d?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -0,0 +1,13 @@\n+#source: attr-gnu-main.s -ml -mdata-region=upper\n+#source: attr-gnu-obj.s -ml -mdata-region=none\n+#ld: --data-region=either\n+#readelf: -A\n+\n+Attribute Section: mspabi\n+File Attributes\n+  Tag_ISA: MSP430X\n+  Tag_Code_Model: Large\n+  Tag_Data_Model: Large\n+Attribute Section: gnu\n+File Attributes\n+  Tag_GNU_MSP430_Data_Region: Any Region"
    },
    {
      "sha": "08620b57ff56fdb31424856bd30487ccd5e6bcad",
      "filename": "ld/testsuite/ld-msp430-elf/msp430-elf.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/testsuite/ld-msp430-elf/msp430-elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0ea7c52e10024ecd29b8f0e23b666b6af926c6e/ld/testsuite/ld-msp430-elf/msp430-elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/msp430-elf.exp?ref=c0ea7c52e10024ecd29b8f0e23b666b6af926c6e",
      "patch": "@@ -46,6 +46,7 @@ if { ![istarget \"msp430*elf*\"] } {\n #     treated as a sign of an error and FAILs the test.\n #\n #\n+\n set msp430regionprefixtests {\n   {\"Move main() to .upper.text\" \"-T msp430.ld --code-region=upper\"\n     \"\" \"\" {main-with-text-rodata.s} {{objdump -d main-text-upper.d}} \"main-upper\"}\n@@ -162,7 +163,7 @@ set msp430warntests {\n         {{ld warn-no-lower-data.r}} \"warn-no-lower-data\"}\n }\n \n-# Don't run section shuffle tests when msp430 ISA is selected\n+# Don't run further tests when msp430 ISA is selected\n if {[string match \"*-mcpu=msp430 *\" [board_info [target_info name] multilib_flags]]\n   || [string match \"*-mcpu=msp430\" [board_info [target_info name] multilib_flags]]} {\n     return\n@@ -173,3 +174,12 @@ run_ld_link_tests $msp430eithershuffletests\n run_ld_link_tests $msp430warntests\n \n run_dump_test valid-map\n+\n+# Don't run data region tests if a data region is specified\n+if {[string match \"*-mdata-region*\" [board_info [target_info name] multilib_flags]]} {\n+    return\n+}\n+# GNU object attribute dump tests\n+run_dump_test attr-gnu-region-lower\n+run_dump_test attr-gnu-region-upper\n+run_dump_test attr-gnu-region-lower-upper"
    }
  ]
}