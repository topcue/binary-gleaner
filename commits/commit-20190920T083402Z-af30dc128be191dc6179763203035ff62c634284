{
  "sha": "af30dc128be191dc6179763203035ff62c634284",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWYzMGRjMTI4YmUxOTFkYzYxNzk3NjMyMDMwMzVmZjYyYzYzNDI4NA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-19T02:45:16Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-20T08:34:02Z"
    },
    "message": "bfd macro conversion to inline functions, asymbol\n\n\t* bfd-in.h (bfd_asymbol_section, bfd_asymbol_value, bfd_asymbol_name),\n\t(bfd_asymbol_bfd, bfd_asymbol_flavour, bfd_set_asymbol_name): Delete.\n\t* bfd.c (bfd_asymbol_section, bfd_asymbol_value, bfd_asymbol_name),\n\t(bfd_asymbol_bfd, bfd_set_asymbol_name): New inline functions.\n\t* targets.c (bfd_asymbol_flavour): Likewise.\n\t* bfd-in2.h: Regenerate.",
    "tree": {
      "sha": "6d6f843bbfa3b1ae57bd6c2913b347b429a1ff3f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6d6f843bbfa3b1ae57bd6c2913b347b429a1ff3f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/af30dc128be191dc6179763203035ff62c634284",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af30dc128be191dc6179763203035ff62c634284",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/af30dc128be191dc6179763203035ff62c634284",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af30dc128be191dc6179763203035ff62c634284/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "00f93c449228e69f2161405b1f49b406e88785f0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00f93c449228e69f2161405b1f49b406e88785f0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/00f93c449228e69f2161405b1f49b406e88785f0"
    }
  ],
  "stats": {
    "total": 111,
    "additions": 85,
    "deletions": 26
  },
  "files": [
    {
      "sha": "5222063bf015e35b55253709762fe73eaf0df188",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af30dc128be191dc6179763203035ff62c634284/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af30dc128be191dc6179763203035ff62c634284/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=af30dc128be191dc6179763203035ff62c634284",
      "patch": "@@ -1,3 +1,12 @@\n+2019-09-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* bfd-in.h (bfd_asymbol_section, bfd_asymbol_value, bfd_asymbol_name),\n+\t(bfd_asymbol_bfd, bfd_asymbol_flavour, bfd_set_asymbol_name): Delete.\n+\t* bfd.c (bfd_asymbol_section, bfd_asymbol_value, bfd_asymbol_name),\n+\t(bfd_asymbol_bfd, bfd_set_asymbol_name): New inline functions.\n+\t* targets.c (bfd_asymbol_flavour): Likewise.\n+\t* bfd-in2.h: Regenerate.\n+\n 2019-09-20  Alan Modra  <amodra@gmail.com>\n \n \t* archive.c (bfd_generic_archive_p): Use bfd_set_thin_archive."
    },
    {
      "sha": "e9ada8d27fbd9f9562332c02035de1a39ebd6ce5",
      "filename": "bfd/bfd-in.h",
      "status": "modified",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af30dc128be191dc6179763203035ff62c634284/bfd/bfd-in.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af30dc128be191dc6179763203035ff62c634284/bfd/bfd-in.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in.h?ref=af30dc128be191dc6179763203035ff62c634284",
      "patch": "@@ -237,19 +237,6 @@ typedef unsigned long symindex;\n \n #define BFD_NO_MORE_SYMBOLS ((symindex) ~0)\n \n-/* General purpose part of a symbol X;\n-   target specific parts are in libcoff.h, libaout.h, etc.  */\n-\n-#define bfd_asymbol_section(sy) ((sy)->section)\n-#define bfd_asymbol_value(sy) ((sy)->section->vma + (sy)->value)\n-#define bfd_asymbol_name(sy) ((sy)->name)\n-#define bfd_asymbol_bfd(sy) ((sy)->the_bfd)\n-#define bfd_asymbol_flavour(sy)\t\t\t\\\n-  (((sy)->flags & BSF_SYNTHETIC) != 0\t\t\\\n-   ? bfd_target_unknown_flavour\t\t\t\\\n-   : (sy)->the_bfd->xvec->flavour)\n-#define bfd_set_asymbol_name(sy, n) do { (sy)->name = (n); } while (0)\n-\n /* A canonical archive symbol.  */\n /* This is a type pun with struct ranlib on purpose!  */\n typedef struct carsym"
    },
    {
      "sha": "5ac3f41b7adc8eb88845f0485d7177bf676dc30f",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 38,
      "deletions": 13,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af30dc128be191dc6179763203035ff62c634284/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af30dc128be191dc6179763203035ff62c634284/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=af30dc128be191dc6179763203035ff62c634284",
      "patch": "@@ -244,19 +244,6 @@ typedef unsigned long symindex;\n \n #define BFD_NO_MORE_SYMBOLS ((symindex) ~0)\n \n-/* General purpose part of a symbol X;\n-   target specific parts are in libcoff.h, libaout.h, etc.  */\n-\n-#define bfd_asymbol_section(sy) ((sy)->section)\n-#define bfd_asymbol_value(sy) ((sy)->section->vma + (sy)->value)\n-#define bfd_asymbol_name(sy) ((sy)->name)\n-#define bfd_asymbol_bfd(sy) ((sy)->the_bfd)\n-#define bfd_asymbol_flavour(sy)\t\t\t\\\n-  (((sy)->flags & BSF_SYNTHETIC) != 0\t\t\\\n-   ? bfd_target_unknown_flavour\t\t\t\\\n-   : (sy)->the_bfd->xvec->flavour)\n-#define bfd_set_asymbol_name(sy, n) do { (sy)->name = (n); } while (0)\n-\n /* A canonical archive symbol.  */\n /* This is a type pun with struct ranlib on purpose!  */\n typedef struct carsym\n@@ -7381,6 +7368,36 @@ bfd_set_usrdata (bfd *abfd, void *val)\n   abfd->usrdata = val;\n }\n \n+static inline asection *\n+bfd_asymbol_section (const asymbol *sy)\n+{\n+  return sy->section;\n+}\n+\n+static inline bfd_vma\n+bfd_asymbol_value (const asymbol *sy)\n+{\n+  return sy->section->vma + sy->value;\n+}\n+\n+static inline const char *\n+bfd_asymbol_name (const asymbol *sy)\n+{\n+  return sy->name;\n+}\n+\n+static inline struct bfd *\n+bfd_asymbol_bfd (const asymbol *sy)\n+{\n+  return sy->the_bfd;\n+}\n+\n+static inline void\n+bfd_set_asymbol_name (asymbol *sy, const char *name)\n+{\n+  sy->name = name;\n+}\n+\n \n typedef enum bfd_error\n {\n@@ -8135,6 +8152,14 @@ bfd_get_symbol_leading_char (const bfd *abfd)\n   return abfd->xvec->symbol_leading_char;\n }\n \n+static inline enum bfd_flavour\n+bfd_asymbol_flavour (const asymbol *sy)\n+{\n+  if ((sy->flags & BSF_SYNTHETIC) != 0)\n+    return bfd_target_unknown_flavour;\n+  return sy->the_bfd->xvec->flavour;\n+}\n+\n bfd_boolean bfd_set_default_target (const char *name);\n \n const bfd_target *bfd_find_target (const char *target_name, bfd *abfd);"
    },
    {
      "sha": "9270e118d3f5e62344553b6e7ab9d5fc6eb593be",
      "filename": "bfd/bfd.c",
      "status": "modified",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af30dc128be191dc6179763203035ff62c634284/bfd/bfd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af30dc128be191dc6179763203035ff62c634284/bfd/bfd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd.c?ref=af30dc128be191dc6179763203035ff62c634284",
      "patch": "@@ -447,6 +447,36 @@ CODE_FRAGMENT\n .  abfd->usrdata = val;\n .}\n .\n+.static inline asection *\n+.bfd_asymbol_section (const asymbol *sy)\n+.{\n+.  return sy->section;\n+.}\n+.\n+.static inline bfd_vma\n+.bfd_asymbol_value (const asymbol *sy)\n+.{\n+.  return sy->section->vma + sy->value;\n+.}\n+.\n+.static inline const char *\n+.bfd_asymbol_name (const asymbol *sy)\n+.{\n+.  return sy->name;\n+.}\n+.\n+.static inline struct bfd *\n+.bfd_asymbol_bfd (const asymbol *sy)\n+.{\n+.  return sy->the_bfd;\n+.}\n+.\n+.static inline void\n+.bfd_set_asymbol_name (asymbol *sy, const char *name)\n+.{\n+.  sy->name = name;\n+.}\n+.\n */\n \n #include \"sysdep.h\""
    },
    {
      "sha": "717657fba4450615fa858ff6e99970e2c344b166",
      "filename": "bfd/targets.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af30dc128be191dc6179763203035ff62c634284/bfd/targets.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af30dc128be191dc6179763203035ff62c634284/bfd/targets.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/targets.c?ref=af30dc128be191dc6179763203035ff62c634284",
      "patch": "@@ -644,6 +644,14 @@ to find an alternative output format that is suitable.\n .  return abfd->xvec->symbol_leading_char;\n .}\n .\n+.static inline enum bfd_flavour\n+.bfd_asymbol_flavour (const asymbol *sy)\n+.{\n+.  if ((sy->flags & BSF_SYNTHETIC) != 0)\n+.    return bfd_target_unknown_flavour;\n+.  return sy->the_bfd->xvec->flavour;\n+.}\n+.\n */\n \n /* All known xvecs (even those that don't compile on all systems)."
    }
  ]
}