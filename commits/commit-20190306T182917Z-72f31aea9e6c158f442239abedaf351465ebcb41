{
  "sha": "72f31aea9e6c158f442239abedaf351465ebcb41",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzJmMzFhZWE5ZTZjMTU4ZjQ0MjIzOWFiZWRhZjM1MTQ2NWViY2I0MQ==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-03-06T18:29:17Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-03-06T18:29:17Z"
    },
    "message": "Make \"checkpoint\" not rely on inferior_ptid\n\nDon't rely on \"inferior_ptid\" deep within add_fork.  In the\nmulti-target branch, I'm forcing inferior_ptid to null_ptid early in\ninfrun event handling to make sure we don't inadvertently rely on the\ncurrent thread/target when we shouldn't, and that caught some bad or\nunnecessary assumptions throughout.\n\ngdb/ChangeLog:\n2019-03-06  Pedro Alves  <palves@redhat.com>\n\n\t* linux-fork.c (new_fork): New, split out of ...\n\t(add_fork): ... this.  Return void.  Move \"first fork\" special\n\tcase from here, to ...\n\t(checkpoint_command): ... here.\n\t* linux-linux.h (add_fork): Return void.",
    "tree": {
      "sha": "3e1eba1360246c8281c7c01e57395cde79343e0a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3e1eba1360246c8281c7c01e57395cde79343e0a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/72f31aea9e6c158f442239abedaf351465ebcb41",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/72f31aea9e6c158f442239abedaf351465ebcb41",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/72f31aea9e6c158f442239abedaf351465ebcb41",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/72f31aea9e6c158f442239abedaf351465ebcb41/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "efbecbc143f19cb308ae220fb386505f41ff4bc3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/efbecbc143f19cb308ae220fb386505f41ff4bc3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/efbecbc143f19cb308ae220fb386505f41ff4bc3"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 37,
    "deletions": 17
  },
  "files": [
    {
      "sha": "3aaa5ed13706d9406072f8e723912f3648e96fe3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72f31aea9e6c158f442239abedaf351465ebcb41/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72f31aea9e6c158f442239abedaf351465ebcb41/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=72f31aea9e6c158f442239abedaf351465ebcb41",
      "patch": "@@ -1,3 +1,11 @@\n+2019-03-06  Pedro Alves  <palves@redhat.com>\n+\n+\t* linux-fork.c (new_fork): New, split out of ...\n+\t(add_fork): ... this.  Return void.  Move \"first fork\" special\n+\tcase from here, to ...\n+\t(checkpoint_command): ... here.\n+\t* linux-linux.h (add_fork): Return void.\n+\n 2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* f-exp.y (direct_abs_decl): Handle TYPE*SIZE type names."
    },
    {
      "sha": "a748deaa3a2084921ac60148a81e2aed80d3e372",
      "filename": "gdb/linux-fork.c",
      "status": "modified",
      "additions": 28,
      "deletions": 16,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72f31aea9e6c158f442239abedaf351465ebcb41/gdb/linux-fork.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72f31aea9e6c158f442239abedaf351465ebcb41/gdb/linux-fork.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-fork.c?ref=72f31aea9e6c158f442239abedaf351465ebcb41",
      "patch": "@@ -76,37 +76,38 @@ find_last_fork (void)\n   return last;\n }\n \n-/* Add a fork to the internal fork list.  */\n+/* Allocate a new fork.  */\n \n-struct fork_info *\n-add_fork (pid_t pid)\n+static struct fork_info *\n+new_fork (pid_t pid)\n {\n   struct fork_info *fp;\n \n-  if (fork_list == NULL && pid != inferior_ptid.pid ())\n-    {\n-      /* Special case -- if this is the first fork in the list\n-\t (the list is hitherto empty), and if this new fork is\n-\t NOT the current inferior_ptid, then add inferior_ptid\n-\t first, as a special zeroeth fork id.  */\n-      highest_fork_num = -1;\n-      add_fork (inferior_ptid.pid ());\t/* safe recursion */\n-    }\n-\n   fp = XCNEW (struct fork_info);\n   fp->ptid = ptid_t (pid, pid, 0);\n-  fp->num = ++highest_fork_num;\n+  return fp;\n+}\n+\n+/* Add a new fork to the internal fork list.  */\n+\n+void\n+add_fork (pid_t pid)\n+{\n+  struct fork_info *fp = new_fork (pid);\n \n   if (fork_list == NULL)\n-    fork_list = fp;\n+    {\n+      fork_list = fp;\n+      highest_fork_num = 0;\n+    }\n   else\n     {\n       struct fork_info *last = find_last_fork ();\n \n       last->next = fp;\n     }\n \n-  return fp;\n+  fp->num = ++highest_fork_num;\n }\n \n static void\n@@ -760,6 +761,17 @@ checkpoint_command (const char *args, int from_tty)\n \n   if (!fp)\n     error (_(\"Failed to find new fork\"));\n+\n+  if (fork_list->next == NULL)\n+    {\n+      /* Special case -- if this is the first fork in the list (the\n+\t list was hitherto empty), then add inferior_ptid first, as a\n+\t special zeroeth fork id.  */\n+      fork_info *first = new_fork (inferior_ptid.pid ());\n+      first->next = fork_list;\n+      fork_list = first;\n+    }\n+\n   fork_save_infrun_state (fp, 1);\n   fp->parent_ptid = last_target_ptid;\n }"
    },
    {
      "sha": "f918bcb3d9eb688f0d0f28801af122f451aef1ce",
      "filename": "gdb/linux-fork.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72f31aea9e6c158f442239abedaf351465ebcb41/gdb/linux-fork.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72f31aea9e6c158f442239abedaf351465ebcb41/gdb/linux-fork.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-fork.h?ref=72f31aea9e6c158f442239abedaf351465ebcb41",
      "patch": "@@ -21,7 +21,7 @@\n #define LINUX_FORK_H\n \n struct fork_info;\n-extern struct fork_info *add_fork (pid_t);\n+extern void add_fork (pid_t);\n extern struct fork_info *find_fork_pid (pid_t);\n extern void linux_fork_killall (void);\n extern void linux_fork_mourn_inferior (void);"
    }
  ]
}