{
  "sha": "c35d018b1a5ec604e49a807402c4205530b25ca8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzM1ZDAxOGIxYTVlYzYwNGU0OWE4MDc0MDJjNDIwNTUzMGIyNWNhOA==",
  "commit": {
    "author": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2020-01-27T23:19:30Z"
    },
    "committer": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2020-01-27T23:19:30Z"
    },
    "message": "RISC-V: Fix gdbserver problem with handling arch strings.\n\nMaciej reported a problem found by his RISC-V gdbserver port.\nwarning: while parsing target description (at line 4): Target description specified unknown architecture \"riscv:rv64id\"\nwarning: Could not load XML target description; ignoring\n\nWe only have two arches defined, riscv:rv32 and riscv:rv64.  Both bfd and\ngdb are creating arch strings that have extension letters added to the base\narchitecture.  The bfd_default_scan function requires an exact match, so\nthese strings fail to map to a bfd_arch.  I think we should ignore the\nextension letters in a RISC-V specific scan function.\n\n\tbfd/\n\t* cpu-riscv.c (riscv_scan): New.\n\t(N): Change bfd_default_scan to riscv_scan.\n\nChange-Id: I096476705e1da5cb8934c5005b1eed2a8989f7a7",
    "tree": {
      "sha": "d55f33fe9503ba419b8fbe5f8a64a20f87d28280",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d55f33fe9503ba419b8fbe5f8a64a20f87d28280"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c35d018b1a5ec604e49a807402c4205530b25ca8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c35d018b1a5ec604e49a807402c4205530b25ca8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c35d018b1a5ec604e49a807402c4205530b25ca8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c35d018b1a5ec604e49a807402c4205530b25ca8/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "16b10d6e61bfa0940333354e8144b3924dc86e56",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/16b10d6e61bfa0940333354e8144b3924dc86e56",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/16b10d6e61bfa0940333354e8144b3924dc86e56"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 23,
    "deletions": 1
  },
  "files": [
    {
      "sha": "83a1cc67430329da70fd0596c8b52fc21663d2fe",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c35d018b1a5ec604e49a807402c4205530b25ca8/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c35d018b1a5ec604e49a807402c4205530b25ca8/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=c35d018b1a5ec604e49a807402c4205530b25ca8",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-27  Jim Wilson  <jimw@sifive.com>\n+\n+\t* cpu-riscv.c (riscv_scan): New.\n+\t(N): Change bfd_default_scan to riscv_scan.\n+\n 2020-01-27  Andreas Schwab  <schwab@suse.de>\n \n \t* Makefile.am (ALL_MACHINES): Remove cpu-plugin.lo."
    },
    {
      "sha": "b5c972ff4dc9c2287fe97fcb20bb540b798dbe14",
      "filename": "bfd/cpu-riscv.c",
      "status": "modified",
      "additions": 18,
      "deletions": 1,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c35d018b1a5ec604e49a807402c4205530b25ca8/bfd/cpu-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c35d018b1a5ec604e49a807402c4205530b25ca8/bfd/cpu-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/cpu-riscv.c?ref=c35d018b1a5ec604e49a807402c4205530b25ca8",
      "patch": "@@ -39,6 +39,23 @@ riscv_compatible (const bfd_arch_info_type *a, const bfd_arch_info_type *b)\n   return a;\n }\n \n+/* Return TRUE if STRING matches the architecture described by INFO.  */\n+\n+static bfd_boolean\n+riscv_scan (const struct bfd_arch_info *info, const char *string)\n+{\n+  if (bfd_default_scan (info, string))\n+    return TRUE;\n+\n+  /* The string might have extra characters for supported subsets.  So allow\n+     a match that ignores trailing characters in string.  */\n+  if (strncasecmp (string, info->printable_name,\n+\t\t   strlen (info->printable_name)) == 0)\n+    return TRUE;\n+\n+  return FALSE;\n+}\n+\n #define N(BITS, NUMBER, PRINT, DEFAULT, NEXT)\t\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n     BITS,      /* Bits in a word.  */\t\t\t\t\\\n@@ -51,7 +68,7 @@ riscv_compatible (const bfd_arch_info_type *a, const bfd_arch_info_type *b)\n     3,\t\t\t\t\t\t\t\t\\\n     DEFAULT,\t\t\t\t\t\t\t\\\n     riscv_compatible,\t\t\t\t\t\t\\\n-    bfd_default_scan,\t\t\t\t\t\t\\\n+    riscv_scan,\t\t\t\t\t\t\t\\\n     bfd_arch_default_fill,\t\t\t\t\t\\\n     NEXT,\t\t\t\t\t\t\t\\\n     0 /* Maximum offset of a reloc from the start of an insn.  */\\"
    }
  ]
}