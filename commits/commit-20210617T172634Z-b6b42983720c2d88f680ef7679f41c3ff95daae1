{
  "sha": "b6b42983720c2d88f680ef7679f41c3ff95daae1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjZiNDI5ODM3MjBjMmQ4OGY2ODBlZjc2NzlmNDFjM2ZmOTVkYWFlMQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-06-17T17:19:29Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-06-17T17:26:34Z"
    },
    "message": "x86-64: Test protected function pointers\n\nOn x86-64, function pointers in executable for external funtions may be\nresolved to their PLT entries in executable.  If it happens, function\npointers of protected funtions in shared libraries must be resolved to\nthe PLT entries in executable, not addresses of protected funtions in\nshared libraries.\n\n\tPR ld/27973\n\t* testsuite/ld-x86-64/x86-64.exp: Run protected function tests.\n\t* testsuite/ld-x86-64/protected-func-1.h: New file.\n\t* testsuite/ld-x86-64/protected-func-1a.s: Likewise.\n\t* testsuite/ld-x86-64/protected-func-1b.c: Likewise.",
    "tree": {
      "sha": "f005b076e24e10e3429fa3441632ce6873a2ccce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f005b076e24e10e3429fa3441632ce6873a2ccce"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b6b42983720c2d88f680ef7679f41c3ff95daae1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6b42983720c2d88f680ef7679f41c3ff95daae1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b6b42983720c2d88f680ef7679f41c3ff95daae1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6b42983720c2d88f680ef7679f41c3ff95daae1/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d208bc7617e93dc7dda400b69e8bc49aeb9436f7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d208bc7617e93dc7dda400b69e8bc49aeb9436f7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d208bc7617e93dc7dda400b69e8bc49aeb9436f7"
    }
  ],
  "stats": {
    "total": 122,
    "additions": 122,
    "deletions": 0
  },
  "files": [
    {
      "sha": "2b46bb92b6a3e05a9e44dcf6aa666274b0825d80",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6b42983720c2d88f680ef7679f41c3ff95daae1/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6b42983720c2d88f680ef7679f41c3ff95daae1/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=b6b42983720c2d88f680ef7679f41c3ff95daae1",
      "patch": "@@ -1,3 +1,11 @@\n+2021-06-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/27973\n+\t* testsuite/ld-x86-64/x86-64.exp: Run protected function tests.\n+\t* testsuite/ld-x86-64/protected-func-1.h: New file.\n+\t* testsuite/ld-x86-64/protected-func-1a.s: Likewise.\n+\t* testsuite/ld-x86-64/protected-func-1b.c: Likewise.\n+\n 2021-06-17  Fangrui Song  <maskray@google.com>\n \n \t* ldlex.h (enum option_values): Add OPTION_NO_PIE."
    },
    {
      "sha": "b5ff4e8f82221622ce7398cc03b889f0c6c5018b",
      "filename": "ld/testsuite/ld-x86-64/protected-func-1.h",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6b42983720c2d88f680ef7679f41c3ff95daae1/ld/testsuite/ld-x86-64/protected-func-1.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6b42983720c2d88f680ef7679f41c3ff95daae1/ld/testsuite/ld-x86-64/protected-func-1.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/protected-func-1.h?ref=b6b42983720c2d88f680ef7679f41c3ff95daae1",
      "patch": "@@ -0,0 +1,6 @@\n+extern int protected_func_1a (void);\n+extern int protected_func_1b (void);\n+\n+typedef int (*protected_func_type) (void);\n+extern protected_func_type protected_func_1a_p (void);\n+extern protected_func_type protected_func_1b_p (void);"
    },
    {
      "sha": "eb2ed91fb525fc3a39ebe023156ec1dd35bf7adf",
      "filename": "ld/testsuite/ld-x86-64/protected-func-1a.s",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6b42983720c2d88f680ef7679f41c3ff95daae1/ld/testsuite/ld-x86-64/protected-func-1a.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6b42983720c2d88f680ef7679f41c3ff95daae1/ld/testsuite/ld-x86-64/protected-func-1a.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/protected-func-1a.s?ref=b6b42983720c2d88f680ef7679f41c3ff95daae1",
      "patch": "@@ -0,0 +1,48 @@\n+\t.text\n+\t.p2align 4\n+\t.protected\tprotected_func_1a\n+\t.globl\tprotected_func_1a\n+\t.type\tprotected_func_1a, @function\n+protected_func_1a:\n+.LFB0:\n+\t.cfi_startproc\n+\tmovl\t$1, %eax\n+\tret\n+\t.cfi_endproc\n+.LFE0:\n+\t.size\tprotected_func_1a, .-protected_func_1a\n+\t.p2align 4\n+\t.protected\tprotected_func_1b\n+\t.globl\tprotected_func_1b\n+\t.type\tprotected_func_1b, @function\n+protected_func_1b:\n+.LFB1:\n+\t.cfi_startproc\n+\tmovl\t$2, %eax\n+\tret\n+\t.cfi_endproc\n+.LFE1:\n+\t.size\tprotected_func_1b, .-protected_func_1b\n+\t.p2align 4\n+\t.globl\tprotected_func_1a_p\n+\t.type\tprotected_func_1a_p, @function\n+protected_func_1a_p:\n+.LFB2:\n+\t.cfi_startproc\n+\tmovq\tprotected_func_1a@GOTPCREL(%rip), %rax\n+\tret\n+\t.cfi_endproc\n+.LFE2:\n+\t.size\tprotected_func_1a_p, .-protected_func_1a_p\n+\t.p2align 4\n+\t.globl\tprotected_func_1b_p\n+\t.type\tprotected_func_1b_p, @function\n+protected_func_1b_p:\n+.LFB3:\n+\t.cfi_startproc\n+\tmovq\tprotected_func_1b@GOTPCREL(%rip), %rax\n+\tret\n+\t.cfi_endproc\n+.LFE3:\n+\t.size\tprotected_func_1b_p, .-protected_func_1b_p\n+\t.section\t.note.GNU-stack,\"\",@progbits"
    },
    {
      "sha": "a9d728afe24e7fe824034997dbfb0acc3c3e554f",
      "filename": "ld/testsuite/ld-x86-64/protected-func-1b.c",
      "status": "added",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6b42983720c2d88f680ef7679f41c3ff95daae1/ld/testsuite/ld-x86-64/protected-func-1b.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6b42983720c2d88f680ef7679f41c3ff95daae1/ld/testsuite/ld-x86-64/protected-func-1b.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/protected-func-1b.c?ref=b6b42983720c2d88f680ef7679f41c3ff95daae1",
      "patch": "@@ -0,0 +1,35 @@\n+#include <stdio.h>\n+\n+#include \"protected-func-1.h\"\n+\n+int\n+protected_func_1b (void)\n+{\n+  return 3;\n+}\n+\n+int\n+main (void)\n+{\n+  int res = 0;\n+\n+  /* Check if we get the same address for the protected function symbol.  */\n+  if (protected_func_1a != protected_func_1a_p ())\n+    {\n+      puts (\"'protected_func_1a' in main and shared library doesn't have same address\");\n+      res = 1;\n+    }\n+\n+  /* Check if we get the different addresses for the protected function\n+     symbol.  */\n+  if (protected_func_1b == protected_func_1b_p ())\n+    {\n+      puts (\"'protected_func_1b' in main and shared library has same address\");\n+      res = 1;\n+    }\n+\n+  if (!res)\n+    puts (\"PASS\");\n+\n+  return res;\n+}"
    },
    {
      "sha": "5dc9a1c218efbe2bf4935a660070a27e73f9b941",
      "filename": "ld/testsuite/ld-x86-64/x86-64.exp",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6b42983720c2d88f680ef7679f41c3ff95daae1/ld/testsuite/ld-x86-64/x86-64.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6b42983720c2d88f680ef7679f41c3ff95daae1/ld/testsuite/ld-x86-64/x86-64.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/x86-64.exp?ref=b6b42983720c2d88f680ef7679f41c3ff95daae1",
      "patch": "@@ -1321,6 +1321,14 @@ if { [isnative] && [check_compiler_available] } {\n \t     {readelf -rW pr22842b.rd}} \\\n \t    \"pr22842\" \\\n \t] \\\n+\t[list \\\n+\t    \"Build libprotected-func-1.so\" \\\n+\t    \"-shared\" \\\n+\t    \"-fPIC -Wa,-mx86-used-note=yes\" \\\n+\t    { protected-func-1a.s } \\\n+\t    {} \\\n+\t    \"libprotected-func-1.so\" \\\n+\t] \\\n     ]\n \n     if  {[istarget \"x86_64-*-linux*-gnux32\"]} {\n@@ -1730,6 +1738,23 @@ if { [isnative] && [check_compiler_available] } {\n \t    \"pr23997\" \\\n \t    \"pass.out\" \\\n \t] \\\n+\t[list \\\n+\t    \"Run protected-func-1 without PIE\" \\\n+\t    \"-Wl,--no-as-needed tmpdir/libprotected-func-1.so\" \\\n+\t    \"-Wa,-mx86-used-note=yes\" \\\n+\t    { protected-func-1b.c } \\\n+\t    \"protected-func-1a\" \\\n+\t    \"pass.out\" \\\n+\t] \\\n+\t[list \\\n+\t    \"Run protected-func-1 with PIE\" \\\n+\t    \"-Wl,--no-as-needed -pie tmpdir/libprotected-func-1.so\" \\\n+\t    \"-Wa,-mx86-used-note=yes\" \\\n+\t    { protected-func-1b.c } \\\n+\t    \"protected-func-1b\" \\\n+\t    \"pass.out\" \\\n+\t    \"-fPIE\" \\\n+\t] \\\n     ]\n \n     # Run-time tests which require working ifunc attribute support."
    }
  ]
}