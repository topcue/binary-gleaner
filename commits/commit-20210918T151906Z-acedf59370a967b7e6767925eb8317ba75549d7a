{
  "sha": "acedf59370a967b7e6767925eb8317ba75549d7a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWNlZGY1OTM3MGE5NjdiN2U2NzY3OTI1ZWI4MzE3YmE3NTU0OWQ3YQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-18T15:19:06Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-18T15:19:06Z"
    },
    "message": "[gdb/testsuite] Fix gdb.server/server-kill.exp with -m32\n\nWhen running test-case gdb.server/server-kill.exp with target board unix/-m32,\nI run into:\n...\n0xf7fd6b20 in _start () from /lib/ld-linux.so.2^M\n(gdb) Executing on target: kill -9 13082    (timeout = 300)\nbuiltin_spawn -ignore SIGHUP kill -9 13082^M\nbt^M\n(gdb) FAIL: gdb.server/server-kill.exp: kill_pid_of=server: test_unwind_syms: bt\n...\n\nThe test-case expects the backtrace command to trigger remote communication,\nwhich then should result in a \"Remote connection closed\" or similar.\n\nHowever, no remote communication is triggered, because we hit the \"Check that\nthis frame is unwindable\" case in get_prev_frame_always_1.\n\nWe don't hit this problem in the kill_pid_of=inferior case, because there we\nrun to main before doing the backtrace.\n\nFix this by doing the same in the kill_pid_of=server case.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "16a31b477704d4b825683607d17ae82aae2e01da",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/16a31b477704d4b825683607d17ae82aae2e01da"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/acedf59370a967b7e6767925eb8317ba75549d7a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/acedf59370a967b7e6767925eb8317ba75549d7a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/acedf59370a967b7e6767925eb8317ba75549d7a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/acedf59370a967b7e6767925eb8317ba75549d7a/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2c71f639a04fad36b5f7b255909ede09b63afdf9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2c71f639a04fad36b5f7b255909ede09b63afdf9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2c71f639a04fad36b5f7b255909ede09b63afdf9"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 6,
    "deletions": 4
  },
  "files": [
    {
      "sha": "4125e5bf92daab969703806205ce6683dc398ca2",
      "filename": "gdb/testsuite/gdb.server/server-kill.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acedf59370a967b7e6767925eb8317ba75549d7a/gdb/testsuite/gdb.server/server-kill.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acedf59370a967b7e6767925eb8317ba75549d7a/gdb/testsuite/gdb.server/server-kill.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/server-kill.exp?ref=acedf59370a967b7e6767925eb8317ba75549d7a",
      "patch": "@@ -69,11 +69,13 @@ proc prepare {} {\n \n     gdbserver_run \"\"\n \n-    if { $::kill_pid_of == \"inferior\" } {\n-\t# Continue past server_pid assignment.\n-\tgdb_breakpoint ${srcfile}:[gdb_get_line_number \"i = 0;\"]\n-\tgdb_continue_to_breakpoint \"after server_pid assignment\"\n+    # Continue past server_pid assignment.  We do this for both scenarios,\n+    # to avoid doing a backtrace from _start, which may not trigger remote\n+    # communication.\n+    gdb_breakpoint ${srcfile}:[gdb_get_line_number \"i = 0;\"]\n+    gdb_continue_to_breakpoint \"after server_pid assignment\"\n \n+    if { $::kill_pid_of == \"inferior\" } {\n \t# Get the pid of GDBServer.\n \tset test \"p server_pid\"\n \tset server_pid 0"
    }
  ]
}