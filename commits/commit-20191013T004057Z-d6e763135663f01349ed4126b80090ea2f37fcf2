{
  "sha": "d6e763135663f01349ed4126b80090ea2f37fcf2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDZlNzYzMTM1NjYzZjAxMzQ5ZWQ0MTI2YjgwMDkwZWEyZjM3ZmNmMg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-10-13T00:40:57Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-10-13T00:40:57Z"
    },
    "message": "[gdb/testsuite] Add KFAIL for missing support of reverse-debugging xsave\n\nNormally the gdb.reverse/*.exp test-cases pass on my system (apart from the\nrecord/23188 KFAIL for gdb.reverse/step-precsave.exp).  But when specifying\nGLIBC_TUNABLES=glibc.tune.hwcaps=-XSAVEC_Usable to force glibc to use\n_dl_runtime_resolve_xsave instead of _dl_runtime_resolve_xsavec, we run into\n1054 FAILs like this:\n...\n(gdb) PASS: gdb.reverse/sigall-reverse.exp: b gen_HUP\ncontinue^M\nContinuing.^M\nProcess record does not support instruction 0xfae64 at address \\\n  0x7ffff7ded958.^M\nProcess record: failed to record execution log.^M\n^M\nProgram stopped.^M\n0x00007ffff7ded958 in _dl_runtime_resolve_xsave () from \\\n  /lib64/ld-linux-x86-64.so.2^M\n(gdb) FAIL: gdb.reverse/sigall-reverse.exp: get signal ABRT\n...\n\nThe problem is that the xsave instruction is not supported in\nreverse-debugging (PR record/25038).\n\nAdd KFAILs for this PR.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2019-10-13  Tom de Vries  <tdevries@suse.de>\n\n\tPR record/25038\n\t* gdb.reverse/sigall-precsave.exp: Add PR record/25038 KFAIL.\n\t* gdb.reverse/sigall-reverse.exp: Same.\n\t* gdb.reverse/solib-precsave.exp: Same.\n\t* gdb.reverse/solib-reverse.exp: Same.\n\t* gdb.reverse/step-precsave.exp: Same.\n\t* gdb.reverse/until-precsave.exp: Same.\n\t* gdb.reverse/until-reverse.exp: Same.\n\t* lib/gdb.exp (gdb_continue_to_breakpoint): Same.",
    "tree": {
      "sha": "ca6ef3f8952a3fc8cfe649de6d91d8e1949ae9ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ca6ef3f8952a3fc8cfe649de6d91d8e1949ae9ad"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d6e763135663f01349ed4126b80090ea2f37fcf2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d6e763135663f01349ed4126b80090ea2f37fcf2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d6e763135663f01349ed4126b80090ea2f37fcf2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d6e763135663f01349ed4126b80090ea2f37fcf2/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d5082b3251877ecded4cd3766503e51ecb8ef5c8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d5082b3251877ecded4cd3766503e51ecb8ef5c8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d5082b3251877ecded4cd3766503e51ecb8ef5c8"
    }
  ],
  "stats": {
    "total": 95,
    "additions": 87,
    "deletions": 8
  },
  "files": [
    {
      "sha": "6ef07467d64b3df560bf44bb7cc1a74c4a646e38",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=d6e763135663f01349ed4126b80090ea2f37fcf2",
      "patch": "@@ -1,3 +1,15 @@\n+2019-10-13  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR record/25038\n+\t* gdb.reverse/sigall-precsave.exp: Add PR record/25038 KFAIL.\n+\t* gdb.reverse/sigall-reverse.exp: Same.\n+\t* gdb.reverse/solib-precsave.exp: Same.\n+\t* gdb.reverse/solib-reverse.exp: Same.\n+\t* gdb.reverse/step-precsave.exp: Same.\n+\t* gdb.reverse/until-precsave.exp: Same.\n+\t* gdb.reverse/until-reverse.exp: Same.\n+\t* lib/gdb.exp (gdb_continue_to_breakpoint): Same.\n+\n 2019-10-10  Andreas Arnez  <arnez@linux.ibm.com>\n \n \t* gdb.base/infcall-nested-structs.c (cmp_struct_02_01)"
    },
    {
      "sha": "94ae26379f5908be3bc4c41636e23443db0366a6",
      "filename": "gdb/testsuite/gdb.reverse/sigall-precsave.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/sigall-precsave.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/sigall-precsave.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.reverse/sigall-precsave.exp?ref=d6e763135663f01349ed4126b80090ea2f37fcf2",
      "patch": "@@ -258,14 +258,20 @@ foreach sig $signals {\n     }\n }\n \n-gdb_test_multiple \"continue\" \"continue\" {\n+set kfail_pattern \"Process record does not support instruction 0xfae64 at.*\"\n+set test \"run to end of main\"\n+gdb_test_multiple \"continue\" $test {\n     -re \"Breakpoint .* end of main .*$gdb_prompt $\" {\n-\tpass \"run to end of main\"\n+\tpass $test\n     }\n     -re \"Breakpoint .* handle_.*$gdb_prompt $\" {\n \tsend_gdb \"continue\\n\"\n \texp_continue\n     }\n+    -re \"\\[\\r\\n\\]*(?:$kfail_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\tkfail \"gdb/25038\" $test\n+\treturn -1\n+    }\n }\n \n delete_breakpoints"
    },
    {
      "sha": "ecebf05ed7db3f210b28621a70c2754ba568fe80",
      "filename": "gdb/testsuite/gdb.reverse/sigall-reverse.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/sigall-reverse.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/sigall-reverse.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.reverse/sigall-reverse.exp?ref=d6e763135663f01349ed4126b80090ea2f37fcf2",
      "patch": "@@ -37,6 +37,7 @@ proc test_one_sig {nextsig} {\n     global sig_supported\n     global gdb_prompt\n     global thissig\n+    global record_instruction_kfail\n \n     set this_sig_supported $sig_supported\n     gdb_test \"handle SIG$thissig stop print\" \\\n@@ -51,6 +52,7 @@ proc test_one_sig {nextsig} {\n \t    setup_xfail \"i*86-pc-linuxoldld-gnu\" \"i*86-pc-linuxaout-gnu\"\n \t}\n \tset testmsg \"get signal $thissig\"\n+\tset kfail_pattern \"Process record does not support instruction 0xfae64 at.*\"\n \tgdb_test_multiple \"continue\" $testmsg {\n \t    -re \"Program received signal SIG$thissig.*handle_$thissig.*$gdb_prompt $\" {\n \t\tfail \"$testmsg (wrong location)\"\n@@ -62,6 +64,11 @@ proc test_one_sig {nextsig} {\n \t\txfail $testmsg\n \t\tset need_another_continue 0\n \t    }\n+\t    -re \"\\[\\r\\n\\]*(?:$kfail_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\t\tkfail \"gdb/25038\" \"$testmsg\"\n+\t\tset record_instruction_kfail 1\n+\t\treturn\n+\t    }\n \t}\n     }\n \n@@ -238,8 +245,12 @@ set thissig \"ABRT\"\n \n # test signal handling\n with_test_prefix \"sig-test-1\" {\n+    set record_instruction_kfail 0\n     foreach sig [lrange $signals 1 end] {\n \ttest_one_sig $sig\n+\tif { $record_instruction_kfail } {\n+\t    return -1\n+\t}\n     }\n }\n "
    },
    {
      "sha": "a3f874c09b7598af962ff60d50ef6c2b78252f89",
      "filename": "gdb/testsuite/gdb.reverse/solib-precsave.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/solib-precsave.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/solib-precsave.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.reverse/solib-precsave.exp?ref=d6e763135663f01349ed4126b80090ea2f37fcf2",
      "patch": "@@ -91,7 +91,18 @@ gdb_test \"break $end_of_main\" \\\n     \"Breakpoint $decimal at .*$srcfile, line $end_of_main\\.\" \\\n     \"breakpoint at end of main\"\n \n-gdb_test \"continue\" \"Breakpoint .* end of main .*\" \"run to end of main\"\n+set test \"run to end of main\"\n+set pass_pattern \"Breakpoint .* end of main .*\"\n+set kfail_pattern \"Process record does not support instruction 0xfae64 at.*\"\n+gdb_test_multiple \"continue\" $test {\n+    -re \"\\[\\r\\n\\]*(?:$pass_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\tpass $test\n+    }\n+    -re \"\\[\\r\\n\\]*(?:$kfail_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\tkfail \"gdb/25038\" $test\n+\treturn -1\n+    }\n+}\n \n gdb_test \"record save $precsave\" \\\n     \"Saved core file $precsave with execution log\\.\"  \\"
    },
    {
      "sha": "53b35239f81f47c9518903c0f62cfdbbe245f7e4",
      "filename": "gdb/testsuite/gdb.reverse/solib-reverse.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/solib-reverse.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/solib-reverse.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.reverse/solib-reverse.exp?ref=d6e763135663f01349ed4126b80090ea2f37fcf2",
      "patch": "@@ -86,7 +86,18 @@ if [supports_process_record] {\n \n set end_part_one [gdb_get_line_number \" end part one\" \"$srcfile\"]\n set end_part_two [gdb_get_line_number \" end part two\" \"$srcfile\"]\n-gdb_test \"until $end_part_one\" \" end part one.*\" \"run until end part one\"\n+set test \"run until end part one\"\n+set pass_pattern \" end part one.*\"\n+set kfail_pattern \"Process record does not support instruction 0xfae64 at.*\"\n+gdb_test_multiple \"until $end_part_one\" $test {\n+    -re \"\\[\\r\\n\\]*(?:$pass_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\tpass $test\n+    }\n+    -re \"\\[\\r\\n\\]*(?:$kfail_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\tkfail \"gdb/25038\" $test\n+\treturn -1\n+    }\n+}\n \n gdb_test \"reverse-step\" \" shr1 three .*\" \"reverse-step third shr1\"\n gdb_test \"reverse-step\" \" shr1 two .*\"   \"reverse-step second shr1\""
    },
    {
      "sha": "72ee279f806cde42598d0a67cd9ae973b658b089",
      "filename": "gdb/testsuite/gdb.reverse/step-precsave.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/step-precsave.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/step-precsave.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.reverse/step-precsave.exp?ref=d6e763135663f01349ed4126b80090ea2f37fcf2",
      "patch": "@@ -49,13 +49,17 @@ with_timeout_factor 20 {\n     set test \"run to end of main\"\n     set pass_pattern \"Breakpoint .* end of main .*\"\n     set kfail_pattern \"Process record does not support instruction 0xc5 at.*\"\n+    set kfail2_pattern \"Process record does not support instruction 0xfae64 at.*\"\n     gdb_test_multiple \"continue\" $test {\n \t-re \"\\[\\r\\n\\]*(?:$pass_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n \t    pass $test\n \t}\n \t-re \"\\[\\r\\n\\]*(?:$kfail_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n \t    kfail \"record/23188\" $test\n \t}\n+\t-re \"\\[\\r\\n\\]*(?:$kfail2_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\t    kfail \"record/25038\" $test\n+\t}\n     }\n }\n "
    },
    {
      "sha": "1f09df193fd3ba0c0aa122938933010b9a15b828",
      "filename": "gdb/testsuite/gdb.reverse/until-precsave.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/until-precsave.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/until-precsave.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.reverse/until-precsave.exp?ref=d6e763135663f01349ed4126b80090ea2f37fcf2",
      "patch": "@@ -50,7 +50,18 @@ gdb_test \"break $end_of_main\" \\\n \n # This can take awhile.\n with_timeout_factor 20 {\n-    gdb_test \"continue\" \"Breakpoint .* set breakpoint 10a here .*\" \"run to end of main\"\n+    set test \"run to end of main\"\n+    set pass_pattern \"Breakpoint .* set breakpoint 10a here .*\"\n+    set kfail_pattern \"Process record does not support instruction 0xfae64 at.*\"\n+    gdb_test_multiple \"continue\" $test {\n+\t-re \"\\[\\r\\n\\]*(?:$pass_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\t    pass $test\n+\t}\n+\t-re \"\\[\\r\\n\\]*(?:$kfail_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\t    kfail \"gdb/25038\" $test\n+\t    return -1\n+\t}\n+    }\n }\n \n # So can this, against gdbserver, for example."
    },
    {
      "sha": "804e07f46ca518775955450b9fb5a09cc82b0d53",
      "filename": "gdb/testsuite/gdb.reverse/until-reverse.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 3,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/until-reverse.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/gdb.reverse/until-reverse.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.reverse/until-reverse.exp?ref=d6e763135663f01349ed4126b80090ea2f37fcf2",
      "patch": "@@ -49,9 +49,18 @@ gdb_test \"until $bp_location1\" \\\n \n # Advance up to factorial, outer invocation\n #\n-gdb_test \"advance factorial\" \\\n-    \"factorial .value=6..*$srcfile:$bp_location7.*\" \\\n-    \"advance to factorial\"\n+set test \"advance to factorial\"\n+set pass_pattern \"factorial .value=6..*$srcfile:$bp_location7.*\"\n+set kfail_pattern \"Process record does not support instruction 0xfae64 at.*\"\n+gdb_test_multiple \"advance factorial\" $test {\n+    -re \"\\[\\r\\n\\]*(?:$pass_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\tpass \"$test\"\n+    }\n+    -re \"\\[\\r\\n\\]*(?:$kfail_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\tkfail \"gdb/25038\" $test\n+\treturn -1\n+    }\n+}\n \n # At this point, 'until' should continue the inferior up to when all the\n # inner invocations of factorial() are completed and we are back at this"
    },
    {
      "sha": "fed46ec83c202ec67b36d9de2110dd9bfe9da2b7",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6e763135663f01349ed4126b80090ea2f37fcf2/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=d6e763135663f01349ed4126b80090ea2f37fcf2",
      "patch": "@@ -633,10 +633,14 @@ proc gdb_continue_to_breakpoint {name {location_pattern .*}} {\n     global gdb_prompt\n     set full_name \"continue to breakpoint: $name\"\n \n+    set kfail_pattern \"Process record does not support instruction 0xfae64 at.*\"\n     gdb_test_multiple \"continue\" $full_name {\n \t-re \"(?:Breakpoint|Temporary breakpoint) .* (at|in) $location_pattern\\r\\n$gdb_prompt $\" {\n \t    pass $full_name\n \t}\n+\t-re \"\\[\\r\\n\\]*(?:$kfail_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\t    kfail \"gdb/25038\" $full_name\n+\t}\n     }\n }\n "
    }
  ]
}