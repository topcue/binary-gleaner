{
  "sha": "dcd482c1b756d9da2130552a6eb58b852d6efb97",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGNkNDgyYzFiNzU2ZDlkYTIxMzA1NTJhNmViNThiODUyZDZlZmI5Nw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-07-15T16:13:18Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-07-15T16:13:18Z"
    },
    "message": "Avoid expression parsing crash with unknown language\n\nPR gdb/28093 points out that gdb crashes when language is set to\n\"unknown\" and expression parsing is attempted.  At first I thought\nthis was a regression due to the expression rewrite, but it turns out\nthat older versions crash as well.\n\nThis patch avoids the crash by changing the default expression parser\nto throw an exception.  I think this is preferable -- the current\nbehavior of silently doing nothing does not really make sense.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=28093",
    "tree": {
      "sha": "757748b8395a0cfbc2b163fe1bba6e3d09372a95",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/757748b8395a0cfbc2b163fe1bba6e3d09372a95"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dcd482c1b756d9da2130552a6eb58b852d6efb97",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dcd482c1b756d9da2130552a6eb58b852d6efb97",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dcd482c1b756d9da2130552a6eb58b852d6efb97",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dcd482c1b756d9da2130552a6eb58b852d6efb97/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3a849a3454a53684ca3d679697adb1bfb56596cc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3a849a3454a53684ca3d679697adb1bfb56596cc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3a849a3454a53684ca3d679697adb1bfb56596cc"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 8,
    "deletions": 2
  },
  "files": [
    {
      "sha": "45ce2ebcc92c82a52a9ea5f72b2b7a658f807ed9",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dcd482c1b756d9da2130552a6eb58b852d6efb97/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dcd482c1b756d9da2130552a6eb58b852d6efb97/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=dcd482c1b756d9da2130552a6eb58b852d6efb97",
      "patch": "@@ -825,8 +825,8 @@ class auto_or_unknown_language : public language_defn\n \n   int parser (struct parser_state *ps) const override\n   {\n-    /* No parsing is done, just claim success.  */\n-    return 1;\n+    error (_(\"expression parsing not implemented for language \\\"%s\\\"\"),\n+\t   natural_name ());\n   }\n \n   /* See language.h.  */"
    },
    {
      "sha": "631401a8eabbb4b0a763a38cd0561095601e75f4",
      "filename": "gdb/testsuite/gdb.base/langs.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dcd482c1b756d9da2130552a6eb58b852d6efb97/gdb/testsuite/gdb.base/langs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dcd482c1b756d9da2130552a6eb58b852d6efb97/gdb/testsuite/gdb.base/langs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/langs.exp?ref=dcd482c1b756d9da2130552a6eb58b852d6efb97",
      "patch": "@@ -111,6 +111,12 @@ if [runto csub] then {\n              \"set lang to minimal\"\n     \n     gdb_test \"print x\" \" = 5000\" \"print parameter value\"\n+\n+    # Ensure this at least does not crash.\n+    gdb_test_no_output \"set language unknown\"\n+    gdb_test \"print x\" \\\n+\t\"expression parsing not implemented for language .Unknown.\" \\\n+\t\"expression parsing does not crash for unknown\"\n }\n \n set timeout $oldtimeout"
    }
  ]
}