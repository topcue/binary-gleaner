{
  "sha": "0b4eac57c44ec4c9e13f5201b40936c3b3e6c639",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGI0ZWFjNTdjNDRlYzRjOWUxM2Y1MjAxYjQwOTM2YzNiM2U2YzYzOQ==",
  "commit": {
    "author": {
      "name": "Szabolcs Nagy",
      "email": "szabolcs.nagy@arm.com",
      "date": "2019-04-25T14:07:10Z"
    },
    "committer": {
      "name": "Szabolcs Nagy",
      "email": "szabolcs.nagy@arm.com",
      "date": "2019-05-24T14:09:06Z"
    },
    "message": "aarch64: override default elf .set handling in gas\n\nAllow st_other values such as STO_AARCH64_VARIANT_PCS to be set for alias\nsymbols independently.  This is needed for ifunc symbols which are\naliased to the resolver using .set and don't expect resolver attributes\nto override the ifunc symbol attributes.  This means .variant_pcs must be\nadded explicitly to aliases.\n\ngas/ChangeLog:\n\n\t* config/tc-aarch64.c (aarch64_elf_copy_symbol_attributes): Define.\n\t* config/tc-aarch64.h (aarch64_elf_copy_symbol_attributes): Declare.\n\t(OBJ_COPY_SYMBOL_ATTRIBUTES): Define.\n\t* testsuite/gas/aarch64/symbol-variant_pcs-3.d: New test.\n\t* testsuite/gas/aarch64/symbol-variant_pcs-3.s: New test.",
    "tree": {
      "sha": "cbb5471417b7fdd03b84a21c4f856f5c0c2ab2d6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cbb5471417b7fdd03b84a21c4f856f5c0c2ab2d6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639/comments",
  "author": {
    "login": "nsz-arm",
    "id": 30925343,
    "node_id": "MDQ6VXNlcjMwOTI1MzQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nsz-arm",
    "html_url": "https://github.com/nsz-arm",
    "followers_url": "https://api.github.com/users/nsz-arm/followers",
    "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/nsz-arm/orgs",
    "repos_url": "https://api.github.com/users/nsz-arm/repos",
    "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nsz-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nsz-arm",
    "id": 30925343,
    "node_id": "MDQ6VXNlcjMwOTI1MzQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nsz-arm",
    "html_url": "https://github.com/nsz-arm",
    "followers_url": "https://api.github.com/users/nsz-arm/followers",
    "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/nsz-arm/orgs",
    "repos_url": "https://api.github.com/users/nsz-arm/repos",
    "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nsz-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f166ae0188dcb89c5ae925034260a708a254ab2f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f166ae0188dcb89c5ae925034260a708a254ab2f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f166ae0188dcb89c5ae925034260a708a254ab2f"
    }
  ],
  "stats": {
    "total": 78,
    "additions": 78,
    "deletions": 0
  },
  "files": [
    {
      "sha": "a6a539c77a73a546ba7cc5400c04c6c8cc13c976",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=0b4eac57c44ec4c9e13f5201b40936c3b3e6c639",
      "patch": "@@ -1,3 +1,11 @@\n+2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* config/tc-aarch64.c (aarch64_elf_copy_symbol_attributes): Define.\n+\t* config/tc-aarch64.h (aarch64_elf_copy_symbol_attributes): Declare.\n+\t(OBJ_COPY_SYMBOL_ATTRIBUTES): Define.\n+\t* testsuite/gas/aarch64/symbol-variant_pcs-3.d: New test.\n+\t* testsuite/gas/aarch64/symbol-variant_pcs-3.s: New test.\n+\n 2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \t* config/tc-aarch64.c (s_variant_pcs): New function."
    },
    {
      "sha": "000a81c64f8e95eef920fe447358f99bb68b84f9",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=0b4eac57c44ec4c9e13f5201b40936c3b3e6c639",
      "patch": "@@ -9420,3 +9420,35 @@ aarch64_copy_symbol_attributes (symbolS * dest, symbolS * src)\n {\n   AARCH64_GET_FLAG (dest) = AARCH64_GET_FLAG (src);\n }\n+\n+#ifdef OBJ_ELF\n+/* Same as elf_copy_symbol_attributes, but without copying st_other.\n+   This is needed so AArch64 specific st_other values can be independently\n+   specified for an IFUNC resolver (that is called by the dynamic linker)\n+   and the symbol it resolves (aliased to the resolver).  In particular,\n+   if a function symbol has special st_other value set via directives,\n+   then attaching an IFUNC resolver to that symbol should not override\n+   the st_other setting.  Requiring the directive on the IFUNC resolver\n+   symbol would be unexpected and problematic in C code, where the two\n+   symbols appear as two independent function declarations.  */\n+\n+void\n+aarch64_elf_copy_symbol_attributes (symbolS *dest, symbolS *src)\n+{\n+  struct elf_obj_sy *srcelf = symbol_get_obj (src);\n+  struct elf_obj_sy *destelf = symbol_get_obj (dest);\n+  if (srcelf->size)\n+    {\n+      if (destelf->size == NULL)\n+\tdestelf->size = XNEW (expressionS);\n+      *destelf->size = *srcelf->size;\n+    }\n+  else\n+    {\n+      if (destelf->size != NULL)\n+\tfree (destelf->size);\n+      destelf->size = NULL;\n+    }\n+  S_SET_SIZE (dest, S_GET_SIZE (src));\n+}\n+#endif"
    },
    {
      "sha": "f4eb1d5fa976b50699f80927fd108d856e5b2806",
      "filename": "gas/config/tc-aarch64.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639/gas/config/tc-aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639/gas/config/tc-aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.h?ref=0b4eac57c44ec4c9e13f5201b40936c3b3e6c639",
      "patch": "@@ -130,6 +130,12 @@ void aarch64_copy_symbol_attributes (symbolS *, symbolS *);\n   (aarch64_copy_symbol_attributes (DEST, SRC))\n #endif\n \n+#ifdef OBJ_ELF\n+void aarch64_elf_copy_symbol_attributes (symbolS *, symbolS *);\n+#define OBJ_COPY_SYMBOL_ATTRIBUTES(DEST, SRC) \\\n+  aarch64_elf_copy_symbol_attributes (DEST, SRC)\n+#endif\n+\n #define TC_START_LABEL(STR, NUL_CHAR, NEXT_CHAR)\t\t\t\\\n   (NEXT_CHAR == ':' || (NEXT_CHAR == '/' && aarch64_data_in_code ()))\n #define tc_canonicalize_symbol_name(str) aarch64_canonicalize_symbol_name (str);"
    },
    {
      "sha": "204914efbdafe9a636f8ba3e5e3050267e210fa8",
      "filename": "gas/testsuite/gas/aarch64/symbol-variant_pcs-3.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639/gas/testsuite/gas/aarch64/symbol-variant_pcs-3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639/gas/testsuite/gas/aarch64/symbol-variant_pcs-3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/symbol-variant_pcs-3.d?ref=0b4eac57c44ec4c9e13f5201b40936c3b3e6c639",
      "patch": "@@ -0,0 +1,12 @@\n+#objdump: -t\n+\n+.*:     file format .*\n+\n+SYMBOL TABLE:\n+0+ l    d  \\.text\t0+ \\.text\n+0+ l    d  \\.data\t0+ \\.data\n+0+ l    d  \\.bss\t0+ \\.bss\n+0+ g       \\.text\t0+ 0x80 foo_vpcs\n+0+ g       \\.text\t0+ foo_base\n+0+ g       \\.text\t0+ 0x80 alias_vpcs\n+0+ g       \\.text\t0+ alias_base"
    },
    {
      "sha": "9960831682870931e11a7c7e9233346313c35167",
      "filename": "gas/testsuite/gas/aarch64/symbol-variant_pcs-3.s",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639/gas/testsuite/gas/aarch64/symbol-variant_pcs-3.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b4eac57c44ec4c9e13f5201b40936c3b3e6c639/gas/testsuite/gas/aarch64/symbol-variant_pcs-3.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/symbol-variant_pcs-3.s?ref=0b4eac57c44ec4c9e13f5201b40936c3b3e6c639",
      "patch": "@@ -0,0 +1,20 @@\n+.text\n+.global foo_vpcs\n+.global foo_base\n+.global alias_vpcs\n+.global alias_base\n+\n+.variant_pcs foo_vpcs\n+.variant_pcs alias_vpcs\n+\n+foo_vpcs:\n+foo_base:\n+\tbl foo_vpcs\n+\tbl foo_base\n+\tbl alias_vpcs\n+\tbl alias_base\n+\n+/* Check that the STO_AARCH64_VARIANT_PCS is not affected by .set.  */\n+\n+.set alias_base, foo_vpcs\n+.set alias_vpcs, foo_base"
    }
  ]
}