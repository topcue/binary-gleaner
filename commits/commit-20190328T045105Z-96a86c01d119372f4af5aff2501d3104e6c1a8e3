{
  "sha": "96a86c01d119372f4af5aff2501d3104e6c1a8e3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTZhODZjMDFkMTE5MzcyZjRhZjVhZmYyNTAxZDMxMDRlNmMxYThlMw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-03-28T00:06:55Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-03-28T04:51:05Z"
    },
    "message": "PR24390, Don't decode mtfsb field as a cr field\n\n\"mtfsb0 4*cr7+lt\" doesn't make all that much sense, but unfortunately\nglibc uses just that instead of \"mtfsb0 28\" to clear the fpscr xe bit.\nSo for backwards compatibility accept cr field expressions when\nassembling mtfsb operands, but disassemble to a plain number.\n\n\tPR 24390\ninclude/\n\t* opcode/ppc.h (PPC_OPERAND_CR_REG): Comment.\nopcodes/\n\t* ppc-opc.c (BTF): Define.\n\t(powerpc_opcodes): Use for mtfsb*.\n\t* ppc-dis.c (print_insn_powerpc): Print fields with both\n\tPPC_OPERAND_CR_REG and PPC_OPERAND_CR_BIT as a plain number.\ngas/\n\t* testsuite/gas/ppc/476.d: Update mtfsb*.\n\t* testsuite/gas/ppc/a2.d: Likewise.",
    "tree": {
      "sha": "cbd1ac115b85d52e073ee0ca7b2ffd31901a3395",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cbd1ac115b85d52e073ee0ca7b2ffd31901a3395"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/96a86c01d119372f4af5aff2501d3104e6c1a8e3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96a86c01d119372f4af5aff2501d3104e6c1a8e3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/96a86c01d119372f4af5aff2501d3104e6c1a8e3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96a86c01d119372f4af5aff2501d3104e6c1a8e3/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "072029171354eee0e2f90527196ddda5a85e98c1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/072029171354eee0e2f90527196ddda5a85e98c1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/072029171354eee0e2f90527196ddda5a85e98c1"
    }
  ],
  "stats": {
    "total": 58,
    "additions": 43,
    "deletions": 15
  },
  "files": [
    {
      "sha": "69c195216050077a2caa331a4b06c6589e979efb",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96a86c01d119372f4af5aff2501d3104e6c1a8e3/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96a86c01d119372f4af5aff2501d3104e6c1a8e3/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=96a86c01d119372f4af5aff2501d3104e6c1a8e3",
      "patch": "@@ -1,3 +1,9 @@\n+2019-03-28  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24390\n+\t* testsuite/gas/ppc/476.d: Update mtfsb*.\n+\t* testsuite/gas/ppc/a2.d: Likewise.\n+\n 2019-03-21  Alan Modra  <amodra@gmail.com>\n \n \t* emul.h (struct emulation): Delete strip_underscore."
    },
    {
      "sha": "6743a13080e257e56217f6c3889a3e03fe686329",
      "filename": "gas/testsuite/gas/ppc/476.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96a86c01d119372f4af5aff2501d3104e6c1a8e3/gas/testsuite/gas/ppc/476.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96a86c01d119372f4af5aff2501d3104e6c1a8e3/gas/testsuite/gas/ppc/476.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/476.d?ref=96a86c01d119372f4af5aff2501d3104e6c1a8e3",
      "patch": "@@ -315,10 +315,10 @@ Disassembly of section \\.text:\n  4c4:\t(7d 10 6b 86|86 6b 10 7d) \tmtdcr   432,r8\n  4c8:\t(7c 83 03 46|46 03 83 7c) \tmtdcrux r3,r4\n  4cc:\t(7c e6 03 06|06 03 e6 7c) \tmtdcrx  r6,r7\n- 4d0:\t(fc 60 00 8c|8c 00 60 fc) \tmtfsb0  so\n- 4d4:\t(fc 60 00 8d|8d 00 60 fc) \tmtfsb0\\. so\n- 4d8:\t(fc 60 00 4c|4c 00 60 fc) \tmtfsb1  so\n- 4dc:\t(fc 60 00 4d|4d 00 60 fc) \tmtfsb1\\. so\n+ 4d0:\t(fc 60 00 8c|8c 00 60 fc) \tmtfsb0  3\n+ 4d4:\t(fc 60 00 8d|8d 00 60 fc) \tmtfsb0\\. 3\n+ 4d8:\t(fc 60 00 4c|4c 00 60 fc) \tmtfsb1  3\n+ 4dc:\t(fc 60 00 4d|4d 00 60 fc) \tmtfsb1\\. 3\n  4e0:\t(fc 0c 55 8e|8e 55 0c fc) \tmtfsf   6,f10\n  4e4:\t(fc 0c 55 8e|8e 55 0c fc) \tmtfsf   6,f10\n  4e8:\t(fc 0d 55 8e|8e 55 0d fc) \tmtfsf   6,f10,0,1"
    },
    {
      "sha": "3e3ea2c37a6ed004141ad30be770000b7b33153f",
      "filename": "gas/testsuite/gas/ppc/a2.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96a86c01d119372f4af5aff2501d3104e6c1a8e3/gas/testsuite/gas/ppc/a2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96a86c01d119372f4af5aff2501d3104e6c1a8e3/gas/testsuite/gas/ppc/a2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/a2.d?ref=96a86c01d119372f4af5aff2501d3104e6c1a8e3",
      "patch": "@@ -372,10 +372,10 @@ Disassembly of section \\.text:\n  560:\t(7d 4a 3b 86|86 3b 4a 7d) \tmtdcr   234,r10\n  564:\t(7d 6a 03 07|07 03 6a 7d) \tmtdcrx\\. r10,r11\n  568:\t(7d 6a 03 06|06 03 6a 7d) \tmtdcrx  r10,r11\n- 56c:\t(fc 60 00 8d|8d 00 60 fc) \tmtfsb0\\. so\n- 570:\t(fc 60 00 8c|8c 00 60 fc) \tmtfsb0  so\n- 574:\t(fc 60 00 4d|4d 00 60 fc) \tmtfsb1\\. so\n- 578:\t(fc 60 00 4c|4c 00 60 fc) \tmtfsb1  so\n+ 56c:\t(fc 60 00 8d|8d 00 60 fc) \tmtfsb0\\. 3\n+ 570:\t(fc 60 00 8c|8c 00 60 fc) \tmtfsb0  3\n+ 574:\t(fc 60 00 4d|4d 00 60 fc) \tmtfsb1\\. 3\n+ 578:\t(fc 60 00 4c|4c 00 60 fc) \tmtfsb1  3\n  57c:\t(fc 0c a5 8f|8f a5 0c fc) \tmtfsf\\.  6,f20\n  580:\t(fc 0c a5 8e|8e a5 0c fc) \tmtfsf   6,f20\n  584:\t(fc 0c a5 8f|8f a5 0c fc) \tmtfsf\\.  6,f20"
    },
    {
      "sha": "f6662f7cb8ac67575c9c4fabf756b52856487029",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96a86c01d119372f4af5aff2501d3104e6c1a8e3/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96a86c01d119372f4af5aff2501d3104e6c1a8e3/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=96a86c01d119372f4af5aff2501d3104e6c1a8e3",
      "patch": "@@ -1,3 +1,8 @@\n+2019-03-28  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24390\n+\t* opcode/ppc.h (PPC_OPERAND_CR_REG): Comment.\n+\n 2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n \n \t* dis-asm.h (struct disassemble_info): Add stop_offset."
    },
    {
      "sha": "7a0bc6030b457f0271c1356221eb9281ae32bf9e",
      "filename": "include/opcode/ppc.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96a86c01d119372f4af5aff2501d3104e6c1a8e3/include/opcode/ppc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96a86c01d119372f4af5aff2501d3104e6c1a8e3/include/opcode/ppc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/ppc.h?ref=96a86c01d119372f4af5aff2501d3104e6c1a8e3",
      "patch": "@@ -354,7 +354,10 @@ extern const unsigned int num_powerpc_operands;\n #define PPC_OPERAND_CR_BIT (0x20)\n \n /* This is a CR FIELD that does not use symbolic names (unless\n-   -mregnames is in effect).  */\n+   -mregnames is in effect).  If both PPC_OPERAND_CR_BIT and\n+   PPC_OPERAND_CR_REG are set then treat the field as per\n+   PPC_OPERAND_CR_BIT for assembly, but as if neither of these\n+   bits are set for disassembly.  */\n #define PPC_OPERAND_CR_REG (0x40)\n \n /* This operand names a special purpose register.  */"
    },
    {
      "sha": "00ed62c6780219ae4971df5dbed481bc4c6b79ca",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96a86c01d119372f4af5aff2501d3104e6c1a8e3/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96a86c01d119372f4af5aff2501d3104e6c1a8e3/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=96a86c01d119372f4af5aff2501d3104e6c1a8e3",
      "patch": "@@ -1,3 +1,11 @@\n+2019-03-28  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24390\n+\t* ppc-opc.c (BTF): Define.\n+\t(powerpc_opcodes): Use for mtfsb*.\n+\t* ppc-dis.c (print_insn_powerpc): Print fields with both\n+\tPPC_OPERAND_CR_REG and PPC_OPERAND_CR_BIT as a plain number.\n+\n 2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n \n \t* arm-dis.c (struct arm_private_data): Remove has_mapping_symbols."
    },
    {
      "sha": "dbcbcc996735d9da5da5d1563aaf52ce375a1dc8",
      "filename": "opcodes/ppc-dis.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96a86c01d119372f4af5aff2501d3104e6c1a8e3/opcodes/ppc-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96a86c01d119372f4af5aff2501d3104e6c1a8e3/opcodes/ppc-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-dis.c?ref=96a86c01d119372f4af5aff2501d3104e6c1a8e3",
      "patch": "@@ -779,10 +779,12 @@ print_insn_powerpc (bfd_vma memaddr,\n \t  else if ((operand->flags & PPC_OPERAND_UDI) != 0)\n \t    (*info->fprintf_func) (info->stream, \"%\" PRId64, value);\n \t  else if ((operand->flags & PPC_OPERAND_CR_REG) != 0\n+\t\t   && (operand->flags & PPC_OPERAND_CR_BIT) == 0\n \t\t   && (((dialect & PPC_OPCODE_PPC) != 0)\n \t\t       || ((dialect & PPC_OPCODE_VLE) != 0)))\n \t    (*info->fprintf_func) (info->stream, \"cr%\" PRId64, value);\n-\t  else if (((operand->flags & PPC_OPERAND_CR_BIT) != 0)\n+\t  else if ((operand->flags & PPC_OPERAND_CR_BIT) != 0\n+\t\t   && (operand->flags & PPC_OPERAND_CR_REG) == 0\n \t\t   && (((dialect & PPC_OPCODE_PPC) != 0)\n \t\t       || ((dialect & PPC_OPCODE_VLE) != 0)))\n \t    {"
    },
    {
      "sha": "c4b6c16d3375f15e6aef43bc30088d840f05b638",
      "filename": "opcodes/ppc-opc.c",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96a86c01d119372f4af5aff2501d3104e6c1a8e3/opcodes/ppc-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96a86c01d119372f4af5aff2501d3104e6c1a8e3/opcodes/ppc-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-opc.c?ref=96a86c01d119372f4af5aff2501d3104e6c1a8e3",
      "patch": "@@ -1837,8 +1837,12 @@ const struct powerpc_operand powerpc_operands[] =\n #define BT BH + 1\n   { 0x1f, 21, NULL, NULL, PPC_OPERAND_CR_BIT },\n \n+  /* The BT field in a mtfsb0 or mtfsb1 instruction.  */\n+#define BTF BT + 1\n+  { 0x1f, 21, NULL, NULL, PPC_OPERAND_CR_BIT | PPC_OPERAND_CR_REG },\n+\n   /* The BI16 field in a BD8 form instruction.  */\n-#define BI16 BT + 1\n+#define BI16 BTF + 1\n   { 0x3, 8, NULL, NULL, PPC_OPERAND_CR_BIT },\n \n   /* The BI32 field in a BD15 form instruction.  */\n@@ -7381,8 +7385,8 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n \n {\"xsrqpxp\",\tZ(63,37),\tZ2_MASK,     PPCVSX3,\tPPCVLE,\t\t{R, VD, VB, RMC}},\n \n-{\"mtfsb1\",\tXRC(63,38,0),\tXRARB_MASK,  COM,\tPPCVLE,\t\t{BT}},\n-{\"mtfsb1.\",\tXRC(63,38,1),\tXRARB_MASK,  COM,\tPPCVLE,\t\t{BT}},\n+{\"mtfsb1\",\tXRC(63,38,0),\tXRARB_MASK,  COM,\tPPCVLE,\t\t{BTF}},\n+{\"mtfsb1.\",\tXRC(63,38,1),\tXRARB_MASK,  COM,\tPPCVLE,\t\t{BTF}},\n \n {\"fneg\",\tXRC(63,40,0),\tXRA_MASK,    COM,\tPPCEFS|PPCVLE,\t{FRT, FRB}},\n {\"fneg.\",\tXRC(63,40,1),\tXRA_MASK,    COM,\tPPCEFS|PPCVLE,\t{FRT, FRB}},\n@@ -7395,8 +7399,8 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"dquaiq\",\tZRC(63,67,0), Z2_MASK|Q_MASK, POWER6,\tPPCVLE,\t\t{TE, FRTp, FRBp, RMC}},\n {\"dquaiq.\",\tZRC(63,67,1), Z2_MASK|Q_MASK, POWER6,\tPPCVLE,\t\t{TE, FRTp, FRBp, RMC}},\n \n-{\"mtfsb0\",\tXRC(63,70,0),\tXRARB_MASK,  COM,\tPPCVLE,\t\t{BT}},\n-{\"mtfsb0.\",\tXRC(63,70,1),\tXRARB_MASK,  COM,\tPPCVLE,\t\t{BT}},\n+{\"mtfsb0\",\tXRC(63,70,0),\tXRARB_MASK,  COM,\tPPCVLE,\t\t{BTF}},\n+{\"mtfsb0.\",\tXRC(63,70,1),\tXRARB_MASK,  COM,\tPPCVLE,\t\t{BTF}},\n \n {\"fmr\",\t\tXRC(63,72,0),\tXRA_MASK,    COM,\tPPCEFS|PPCVLE,\t{FRT, FRB}},\n {\"fmr.\",\tXRC(63,72,1),\tXRA_MASK,    COM,\tPPCEFS|PPCVLE,\t{FRT, FRB}},"
    }
  ]
}