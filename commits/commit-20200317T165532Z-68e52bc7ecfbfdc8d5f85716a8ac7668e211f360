{
  "sha": "68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjhlNTJiYzdlY2ZiZmRjOGQ1Zjg1NzE2YThhYzc2NjhlMjExZjM2MA==",
  "commit": {
    "author": {
      "name": "Sergey Belyashov",
      "email": "sergey.belyashov@gmail.com",
      "date": "2020-03-17T16:55:32Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-03-17T16:55:32Z"
    },
    "message": "Fix a small set of Z80 problems.\n\n\tPR 25641\n\tPR 25668\n\tPR 25633\ngas\tFix disassembling ED+A4/AC/B4/BC opcodes.\n\tFix assembling lines containing colonless label and instruction\n\twith first operand inside parentheses.\n\tFix registration of unsupported by target CPU registers.\n\t* config/tc-z80.c: See above.\n\t* config/tc-z80.h: See above.\n\t* testsuite/gas/z80/colonless.d: Update test.\n\t* testsuite/gas/z80/colonless.s: Likewise.\n\t* testsuite/gas/z80/ez80_adl_all.d: Likewise.\n\t* testsuite/gas/z80/ez80_unsup_regs.d: Likewise.\n\t* testsuite/gas/z80/ez80_z80_all.d: Likewise.\n\t* testsuite/gas/z80/gbz80_unsup_regs.d: Likewise.\n\t* testsuite/gas/z80/r800_unsup_regs.d: Likewise.\n\t* testsuite/gas/z80/unsup_regs.s: Likewise.\n\t* testsuite/gas/z80/z180_unsup_regs.d: Likewise.\n\t* testsuite/gas/z80/z80.exp: Likewise.\n\t* testsuite/gas/z80/z80_strict_unsup_regs.d: Likewise.\n\t* testsuite/gas/z80/z80_unsup_regs.d: Likewise.\n\t* testsuite/gas/z80/z80n_unsup_regs.d: Likewise.\n\nopcodes\t* z80-dis.c: Fix disassembling ED+A4/AC/B4/BC opcodes.",
    "tree": {
      "sha": "b6fad703f9e73ec0191841e9dcc13d15dae614ce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b6fad703f9e73ec0191841e9dcc13d15dae614ce"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/comments",
  "author": {
    "login": "b-s-a",
    "id": 2833802,
    "node_id": "MDQ6VXNlcjI4MzM4MDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2833802?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/b-s-a",
    "html_url": "https://github.com/b-s-a",
    "followers_url": "https://api.github.com/users/b-s-a/followers",
    "following_url": "https://api.github.com/users/b-s-a/following{/other_user}",
    "gists_url": "https://api.github.com/users/b-s-a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/b-s-a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/b-s-a/subscriptions",
    "organizations_url": "https://api.github.com/users/b-s-a/orgs",
    "repos_url": "https://api.github.com/users/b-s-a/repos",
    "events_url": "https://api.github.com/users/b-s-a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/b-s-a/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ecbbbdba7182865e522e0893915e9be487fe14b0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ecbbbdba7182865e522e0893915e9be487fe14b0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ecbbbdba7182865e522e0893915e9be487fe14b0"
    }
  ],
  "stats": {
    "total": 611,
    "additions": 436,
    "deletions": 175
  },
  "files": [
    {
      "sha": "a3ab13de1551d848b22e09d7d430114fa924b77d",
      "filename": "gas/config/tc-z80.c",
      "status": "modified",
      "additions": 72,
      "deletions": 59,
      "changes": 131,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/config/tc-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/config/tc-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-z80.c?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -155,7 +155,7 @@ struct match_info\n static const struct match_info\n match_cpu_table [] =\n {\n-  {\"z80\",     INS_Z80, 0, 0, \"Zilog Z80 (+infc+xyhl)\" },\n+  {\"z80\",     INS_Z80, 0, 0, \"Zilog Z80\" },\n   {\"ez80\",    INS_EZ80, 0, 0, \"Zilog eZ80\" },\n   {\"gbz80\",   INS_GBZ80, INS_UNDOC|INS_UNPORT, 0, \"GameBoy Z80\" },\n   {\"r800\",    INS_R800, INS_UNPORT, 0, \"Ascii R800\" },\n@@ -428,6 +428,7 @@ struct reg_entry\n {\n   const char* name;\n   int number;\n+  int isa;\n };\n #define R_STACKABLE (0x80)\n #define R_ARITH     (0x40)\n@@ -457,28 +458,28 @@ struct reg_entry\n \n static const struct reg_entry regtable[] =\n {\n-  {\"a\",  REG_A },\n-  {\"af\", REG_AF },\n-  {\"b\",  REG_B },\n-  {\"bc\", REG_BC },\n-  {\"c\",  REG_C },\n-  {\"d\",  REG_D },\n-  {\"de\", REG_DE },\n-  {\"e\",  REG_E },\n-  {\"f\",  REG_F },\n-  {\"h\",  REG_H },\n-  {\"hl\", REG_HL },\n-  {\"i\",  REG_I },\n-  {\"ix\", REG_IX },\n-  {\"ixh\",REG_H | R_IX },\n-  {\"ixl\",REG_L | R_IX },\n-  {\"iy\", REG_IY },\n-  {\"iyh\",REG_H | R_IY },\n-  {\"iyl\",REG_L | R_IY },\n-  {\"l\",  REG_L },\n-  {\"mb\", REG_MB },\n-  {\"r\",  REG_R },\n-  {\"sp\", REG_SP },\n+  {\"a\",   REG_A,        INS_ALL },\n+  {\"af\",  REG_AF,       INS_ALL },\n+  {\"b\",   REG_B,        INS_ALL },\n+  {\"bc\",  REG_BC,       INS_ALL },\n+  {\"c\",   REG_C,        INS_ALL },\n+  {\"d\",   REG_D,        INS_ALL },\n+  {\"de\",  REG_DE,       INS_ALL },\n+  {\"e\",   REG_E,        INS_ALL },\n+  {\"f\",   REG_F,        INS_IN_F_C | INS_Z80N | INS_R800 },\n+  {\"h\",   REG_H,        INS_ALL },\n+  {\"hl\",  REG_HL,       INS_ALL },\n+  {\"i\",   REG_I,        INS_NOT_GBZ80 },\n+  {\"ix\",  REG_IX,       INS_NOT_GBZ80 },\n+  {\"ixh\", REG_H | R_IX, INS_IDX_HALF | INS_EZ80 | INS_R800 | INS_Z80N },\n+  {\"ixl\", REG_L | R_IX, INS_IDX_HALF | INS_EZ80 | INS_R800 | INS_Z80N },\n+  {\"iy\",  REG_IY,       INS_NOT_GBZ80 },\n+  {\"iyh\", REG_H | R_IY, INS_IDX_HALF | INS_EZ80 | INS_R800 | INS_Z80N },\n+  {\"iyl\", REG_L | R_IY, INS_IDX_HALF | INS_EZ80 | INS_R800 | INS_Z80N },\n+  {\"l\",   REG_L,        INS_ALL },\n+  {\"mb\",  REG_MB,       INS_EZ80 },\n+  {\"r\",   REG_R,        INS_NOT_GBZ80 },\n+  {\"sp\",  REG_SP,       INS_ALL },\n } ;\n \n #define BUFLEN 8 /* Large enough for any keyword.  */\n@@ -499,6 +500,8 @@ md_begin (void)\n   reg.X_add_symbol = reg.X_op_symbol = 0;\n   for ( i = 0 ; i < ARRAY_SIZE ( regtable ) ; ++i )\n     {\n+      if (regtable[i].isa && !(regtable[i].isa & ins_ok))\n+\tcontinue;\n       reg.X_add_number = regtable[i].number;\n       k = strlen ( regtable[i].name );\n       buf[k] = 0;\n@@ -615,7 +618,7 @@ z80_start_line_hook (void)\n \t  break;\n \t}\n     }\n-  /* Check for <label>[:] [.](EQU|DEFL) <value>.  */\n+  /* Check for <label>[:] =|([.](EQU|DEFL)) <value>.  */\n   if (is_name_beginner (*input_line_pointer))\n     {\n       char *name;\n@@ -625,36 +628,30 @@ z80_start_line_hook (void)\n       line_start = input_line_pointer;\n       if (ignore_input ())\n \treturn 0;\n-\n       c = get_symbol_name (&name);\n       rest = input_line_pointer + 1;\n-\n-      if (ISSPACE (c) && colonless_labels)\n-        {\n-          if (c == '\\n')\n-            {\n-              bump_line_counters ();\n-              LISTING_NEWLINE ();\n-            }\n-          c = ':';\n-        }\n-      if (*rest == ':')\n+      if (c == ':' && *rest == ':')\n         {\n           /* remove second colon if SDCC compatibility enabled */\n           if (sdcc_compat)\n             *rest = ' ';\n           ++rest;\n         }\n       rest = (char*)skip_space (rest);\n-      if (*rest == '.')\n-\t++rest;\n-      if (strncasecmp (rest, \"EQU\", 3) == 0)\n-\tlen = 3;\n-      else if (strncasecmp (rest, \"DEFL\", 4) == 0)\n-\tlen = 4;\n+      if (*rest == '=')\n+\tlen = (rest[1] == '=') ? 2 : 1;\n       else\n-\tlen = 0;\n-      if (len && (!ISALPHA (rest[len])))\n+\t{\n+\t  if (*rest == '.')\n+\t    ++rest;\n+\t  if (strncasecmp (rest, \"EQU\", 3) == 0)\n+\t    len = 3;\n+\t  else if (strncasecmp (rest, \"DEFL\", 4) == 0)\n+\t    len = 4;\n+\t  else\n+\t    len = 0;\n+\t}\n+      if (len && (len <= 2 || !ISALPHA (rest[len])))\n \t{\n \t  /* Handle assignment here.  */\n \t  if (line_start[-1] == '\\n')\n@@ -664,7 +661,17 @@ z80_start_line_hook (void)\n \t    }\n \t  input_line_pointer = rest + len - 1;\n \t  /* Allow redefining with \"DEFL\" (len == 4), but not with \"EQU\".  */\n-\t  equals (name, len == 4);\n+\t  switch (len)\n+\t    {\n+\t    case 1: /* label = expr */\n+\t    case 4: /* label DEFL expr */\n+\t      equals (name, 1);\n+\t      break;\n+\t    case 2: /* label == expr */\n+\t    case 3: /* label EQU expr */\n+\t      equals (name, 0);\n+\t      break;\n+\t    }\n \t  return 1;\n \t}\n       else\n@@ -1011,20 +1018,20 @@ parse_exp (const char *s, expressionS *op)\n /* Condition codes, including some synonyms provided by HiTech zas.  */\n static const struct reg_entry cc_tab[] =\n {\n-  { \"age\", 6 << 3 },\n-  { \"alt\", 7 << 3 },\n-  { \"c\",   3 << 3 },\n-  { \"di\",  4 << 3 },\n-  { \"ei\",  5 << 3 },\n-  { \"lge\", 2 << 3 },\n-  { \"llt\", 3 << 3 },\n-  { \"m\",   7 << 3 },\n-  { \"nc\",  2 << 3 },\n-  { \"nz\",  0 << 3 },\n-  { \"p\",   6 << 3 },\n-  { \"pe\",  5 << 3 },\n-  { \"po\",  4 << 3 },\n-  { \"z\",   1 << 3 },\n+  { \"age\", 6 << 3, INS_ALL },\n+  { \"alt\", 7 << 3, INS_ALL },\n+  { \"c\",   3 << 3, INS_ALL },\n+  { \"di\",  4 << 3, INS_ALL },\n+  { \"ei\",  5 << 3, INS_ALL },\n+  { \"lge\", 2 << 3, INS_ALL },\n+  { \"llt\", 3 << 3, INS_ALL },\n+  { \"m\",   7 << 3, INS_ALL },\n+  { \"nc\",  2 << 3, INS_ALL },\n+  { \"nz\",  0 << 3, INS_ALL },\n+  { \"p\",   6 << 3, INS_ALL },\n+  { \"pe\",  5 << 3, INS_ALL },\n+  { \"po\",  4 << 3, INS_ALL },\n+  { \"z\",   1 << 3, INS_ALL },\n } ;\n \n /* Parse condition code.  */\n@@ -3811,6 +3818,12 @@ tc_gen_reloc (asection *seg ATTRIBUTE_UNUSED , fixS *fixp)\n   return reloc;\n }\n \n+int\n+z80_tc_labels_without_colon (void)\n+{\n+  return colonless_labels;\n+}\n+\n int\n z80_tc_label_is_local (const char *name)\n {"
    },
    {
      "sha": "7fd7c9e352373d052ac2922fab5f876e13b25778",
      "filename": "gas/config/tc-z80.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/config/tc-z80.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/config/tc-z80.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-z80.h?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -96,6 +96,9 @@ extern void z80_cons_fix_new (fragS *, int, int, expressionS *);\n    well, but it is cleaner to handle that in tc-z80.c.  */\n #define SINGLE_QUOTE_STRINGS\n \n+#define LABELS_WITHOUT_COLONS (z80_tc_labels_without_colon())\n+extern int z80_tc_labels_without_colon (void);\n+\n /* An `.lcomm' directive with no explicit alignment parameter will\n    use this macro to set P2VAR to the alignment that a request for\n    SIZE bytes will have.  The alignment is expressed as a power of"
    },
    {
      "sha": "3fe8d3798974b3a32061c9937884a893edd7d98b",
      "filename": "gas/testsuite/gas/z80/colonless.d",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/colonless.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/colonless.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/colonless.d?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -7,15 +7,19 @@\n \n Disassembly of section \\.text:\n \n-00000000 <start>:\n+0+0 <start>:\n [   ]+0:[ \t]+3e 00[       \t]+ld a,0x00\n-[   ]+2:[ \t]+28 0c[       \t]+jr z,0x0010\n+[   ]+2:[ \t]+28 0d[       \t]+jr z,0x0011\n [   ]+4:[ \t]+3e 01[       \t]+ld a,0x01\n [   ]+6:[ \t]+3e 02[       \t]+ld a,0x02\n [   ]+8:[ \t]+3e 03[       \t]+ld a,0x03\n [   ]+a:[ \t]+18 f4[       \t]+jr 0x0000\n [   ]+c:[ \t]+18 f4[       \t]+jr 0x0002\n [   ]+e:[ \t]+18 f6[       \t]+jr 0x0006\n \n-00000010 <finish>:\n-[  ]+10:[ \t]+c9[          \t]+ret\n+0+10 <label>:\n+[  ]+10:[ \t]+e9[          \t]+jp \\(hl\\)\n+\n+0+11 <finish>:\n+[  ]+11:[ \t]+c9[          \t]+ret\n+#pass"
    },
    {
      "sha": "58b3e3302d92e9052888c1c580dd1d547027f82f",
      "filename": "gas/testsuite/gas/z80/colonless.s",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/colonless.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/colonless.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/colonless.s?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -10,5 +10,9 @@ start\n \tjr\tstart\n \tjr\t.L_next\n \tjr\t.L_xx\n+label\tjp\t(hl)\n finish\tret\n+temp\t=\t1234\n+temp\t.defl\t4321\n+temp1\tequ\t4247\n \t.end"
    },
    {
      "sha": "44f920b91bf45a217a229ac73c888381d5e003f0",
      "filename": "gas/testsuite/gas/z80/ez80_adl_all.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/ez80_adl_all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/ez80_adl_all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_adl_all.d?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -147,12 +147,12 @@ Disassembly of section .text:\n \\s+124:\\s+ed 8c\\s+ind2\n \\s+126:\\s+ed 92\\s+inimr\n \\s+128:\\s+ed 93\\s+otimr\n-\\s+12a:\\s+ed 94\\s+oti2r\n+\\s+12a:\\s+ed 94\\s+ini2r\n \\s+12c:\\s+ed 9a\\s+indmr\n \\s+12e:\\s+ed 9b\\s+otdmr\n-\\s+130:\\s+ed 9c\\s+otd2r\n-\\s+132:\\s+ed a4\\s+ini2\n-\\s+134:\\s+ed ac\\s+ind2\n+\\s+130:\\s+ed 9c\\s+ind2r\n+\\s+132:\\s+ed a4\\s+outi2\n+\\s+134:\\s+ed ac\\s+outd2\n \\s+136:\\s+ed b4\\s+oti2r\n \\s+138:\\s+ed bc\\s+otd2r\n \\s+13a:\\s+ed c2\\s+inirx"
    },
    {
      "sha": "ad4c8e3ab0dba1098e6f3b851e472cc39512b6b6",
      "filename": "gas/testsuite/gas/z80/ez80_unsup_regs.d",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/ez80_unsup_regs.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/ez80_unsup_regs.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_unsup_regs.d?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -0,0 +1,34 @@\n+#name: eZ80 use unsupported registers as labels\n+#as: -march=ez80 --defsym NO_REG_F= --defsym=EZ80=\n+#objdump: -d\n+#source: unsup_regs.s\n+\n+.*: .*\n+\n+Disassembly of section \\.text:\n+\n+0+00 <_start>:\n+[   ]+0:[ \t]+dd 7d[            \t]+ld a,ixl\n+[   ]+2:[ \t]+dd 67[            \t]+ld ixh,a\n+[   ]+4:[ \t]+dd 44[            \t]+ld b,ixh\n+[   ]+6:[ \t]+dd 68[            \t]+ld ixl,b\n+[   ]+8:[ \t]+fd 4d[            \t]+ld c,iyl\n+[   ]+a:[ \t]+fd 61[            \t]+ld iyh,c\n+[   ]+c:[ \t]+fd 54[            \t]+ld d,iyh\n+[   ]+e:[ \t]+fd 6a[            \t]+ld iyl,d\n+\n+0+10 <f>:\n+[  ]+10:[ \t]+3e 10[            \t]+ld a,0x10\n+[  ]+12:[ \t]+dd 29[            \t]+add ix,ix\n+[  ]+14:[ \t]+dd 86 01[         \t]+add a,\\(ix\\+1\\)\n+[  ]+17:[ \t]+dd 21 34 12[      \t]+ld ix,0x1234\n+[  ]+1b:[ \t]+fd 21 21 43[      \t]+ld iy,0x4321\n+[  ]+1f:[ \t]+fd 22 34 12[      \t]+ld \\(0x1234\\),iy\n+[  ]+23:[ \t]+fd 77 ff[         \t]+ld \\(iy\\-1\\),a\n+[  ]+26:[ \t]+ed 5f[            \t]+ld a,r\n+[  ]+28:[ \t]+ed 4f[            \t]+ld r,a\n+[  ]+2a:[ \t]+ed 57[            \t]+ld a,i\n+[  ]+2c:[ \t]+ed 47[            \t]+ld i,a\n+[  ]+2e:[ \t]+ed 6e[            \t]+ld a,mb\n+[  ]+30:[ \t]+ed 6d[            \t]+ld mb,a\n+#pass"
    },
    {
      "sha": "91cae8246646caee63c89547c33636da34e573eb",
      "filename": "gas/testsuite/gas/z80/ez80_z80_all.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/ez80_z80_all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/ez80_z80_all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_z80_all.d?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -147,12 +147,12 @@ Disassembly of section .text:\n \\s+124:\\s+ed 8c\\s+ind2\n \\s+126:\\s+ed 92\\s+inimr\n \\s+128:\\s+ed 93\\s+otimr\n-\\s+12a:\\s+ed 94\\s+oti2r\n+\\s+12a:\\s+ed 94\\s+ini2r\n \\s+12c:\\s+ed 9a\\s+indmr\n \\s+12e:\\s+ed 9b\\s+otdmr\n-\\s+130:\\s+ed 9c\\s+otd2r\n-\\s+132:\\s+ed a4\\s+ini2\n-\\s+134:\\s+ed ac\\s+ind2\n+\\s+130:\\s+ed 9c\\s+ind2r\n+\\s+132:\\s+ed a4\\s+outi2\n+\\s+134:\\s+ed ac\\s+outd2\n \\s+136:\\s+ed b4\\s+oti2r\n \\s+138:\\s+ed bc\\s+otd2r\n \\s+13a:\\s+ed c2\\s+inirx"
    },
    {
      "sha": "f3256cf9f3e66f4fa190fc0a6d46759c64257715",
      "filename": "gas/testsuite/gas/z80/gbz80_unsup_regs.d",
      "status": "added",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/gbz80_unsup_regs.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/gbz80_unsup_regs.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/gbz80_unsup_regs.d?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -0,0 +1,45 @@\n+#name: GBZ80 use unsupported registers as labels\n+#as: -march=gbz80 --defsym NO_XYHL= --defsym NO_REG_F= --defsym NO_REG_R= --defsym NO_REG_I= --defsym NO_INDEX=\n+#objdump: -d\n+#source: unsup_regs.s\n+\n+.*: .*\n+\n+Disassembly of section \\.text:\n+\n+0+00 <_start>:\n+[   ]+0:[ \t]+3e 02[      \t]+ld a,0x02\n+\n+0+02 <ixl>:\n+[   ]+2:[ \t]+06 04[      \t]+ld b,0x04\n+\n+0+04 <ixh>:\n+[   ]+4:[ \t]+0e 06[      \t]+ld c,0x06\n+\n+0+06 <iyl>:\n+[   ]+6:[ \t]+16 08[      \t]+ld d,0x08\n+\n+0+08 <f>:\n+[   ]+8:[ \t]+3e 08[      \t]+ld a,0x08\n+\n+0+0a <ix>:\n+[   ]+a:[ \t]+21 0a 00[   \t]+ld hl,0x000a\n+\n+0+0d <iy>:\n+[   ]+d:[ \t]+01 0d 00[   \t]+ld bc,0x000d\n+[  ]+10:[ \t]+fa 09 00[   \t]+ld a,\\(0x0009\\)\n+[  ]+13:[ \t]+ea 0e 00[   \t]+ld \\(0x000e\\),a\n+\n+0+16 <r>:\n+[  ]+16:[ \t]+3e 16[      \t]+ld a,0x16\n+[  ]+18:[ \t]+ea 16 00[   \t]+ld \\(0x0016\\),a\n+\n+0+1b <i>:\n+[  ]+1b:[ \t]+3e 1b[      \t]+ld a,0x1b\n+[  ]+1d:[ \t]+ea 1b 00[   \t]+ld \\(0x001b\\),a\n+\n+0+20 <mb>:\n+[  ]+20:[ \t]+21 20 00[   \t]+ld hl,0x0020\n+[  ]+23:[ \t]+3e 20[      \t]+ld a,0x20\n+[  ]+25:[ \t]+ea 20 00[   \t]+ld \\(0x0020\\),a\n+#pass"
    },
    {
      "sha": "133790598c218103b1d97a3d05a93003c9115c39",
      "filename": "gas/testsuite/gas/z80/r800_unsup_regs.d",
      "status": "added",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/r800_unsup_regs.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/r800_unsup_regs.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/r800_unsup_regs.d?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -0,0 +1,35 @@\n+#name: R800 use unsupported registers as labels\n+#as: -march=r800\n+#objdump: -d\n+#source: unsup_regs.s\n+\n+.*: .*\n+\n+Disassembly of section \\.text:\n+\n+0+00 <_start>:\n+[   ]+0:[ \t]+dd 7d[      \t]+ld a,ixl\n+[   ]+2:[ \t]+dd 67[      \t]+ld ixh,a\n+[   ]+4:[ \t]+dd 44[      \t]+ld b,ixh\n+[   ]+6:[ \t]+dd 68[      \t]+ld ixl,b\n+[   ]+8:[ \t]+fd 4d[      \t]+ld c,iyl\n+[   ]+a:[ \t]+fd 61[      \t]+ld iyh,c\n+[   ]+c:[ \t]+fd 54[      \t]+ld d,iyh\n+[   ]+e:[ \t]+fd 6a[      \t]+ld iyl,d\n+[  ]+10:[ \t]+ed 70[      \t]+in f,\\(c\\)\n+[  ]+12:[ \t]+dd 29[      \t]+add ix,ix\n+[  ]+14:[ \t]+dd 86 01[   \t]+add a,\\(ix\\+1\\)\n+[  ]+17:[ \t]+dd 21 34 12 \tld ix,0x1234\n+[  ]+1b:[ \t]+fd 21 21 43 \tld iy,0x4321\n+[  ]+1f:[ \t]+fd 22 34 12 \tld \\(0x1234\\),iy\n+[  ]+23:[ \t]+fd 77 ff[   \t]+ld \\(iy\\-1\\),a\n+[  ]+26:[ \t]+ed 5f[      \t]+ld a,r\n+[  ]+28:[ \t]+ed 4f[      \t]+ld r,a\n+[  ]+2a:[ \t]+ed 57[      \t]+ld a,i\n+[  ]+2c:[ \t]+ed 47[      \t]+ld i,a\n+\n+0+2e <mb>:\n+[  ]+2e:[ \t]+21 2e 00[   \t]+ld hl,0x002e\n+[  ]+31:[ \t]+3e 2e[      \t]+ld a,0x2e\n+[  ]+33:[ \t]+32 2e 00[   \t]+ld \\(0x002e\\),a\n+#pass"
    },
    {
      "sha": "1b4ef37f0f3685f97ac177a8f38a081cf3393a61",
      "filename": "gas/testsuite/gas/z80/unsup_regs.s",
      "status": "added",
      "additions": 71,
      "deletions": 0,
      "changes": 71,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/unsup_regs.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/unsup_regs.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/unsup_regs.s?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -0,0 +1,71 @@\n+\t.text\n+\t.org\t0\n+_start:\n+.ifdef NO_XYHL\n+\tld\ta,ixl\n+ixl:\n+\tld\tb,ixh\n+ixh:\n+\tld\tc,iyl\n+iyl:\n+\tld\td,iyh\n+iyh:\n+.else\n+\tld\ta,ixl\n+\tld\tixh,a\n+\tld\tb,ixh\n+\tld\tixl,b\n+\tld\tc,iyl\n+\tld\tiyh,c\n+\tld\td,iyh\n+\tld\tiyl,d\n+.endif\n+\n+.ifdef NO_REG_F\n+f:\tld\ta,f\n+.else\n+\tin\tf,(c)\n+.endif\n+\n+.ifdef NO_INDEX\n+ix:\tld\thl,ix\n+iy:\tld\tbc,iy\n+\tld\ta,(ix-1)\n+\tld\t(iy+1),a\n+.else\n+\tadd\tix,ix\n+\tadd\ta,(ix+1)\n+\tld\tix,0x1234\n+\tld\tiy,0x4321\n+\tld\t(0x1234),iy\n+\tld\t(iy-1),a\n+.endif\n+\n+.ifdef NO_REG_R\n+r:\tld\ta,r\n+\tld\t(r),a\n+.else\n+\tld\ta,r\n+\tld\tr,a\n+.endif\n+\n+.ifdef NO_REG_I\n+i:\tld\ta,i\n+\tld\t(i),a\n+.else\n+\tld\ta,i\n+\tld\ti,a\n+.endif\n+\n+.ifndef EZ80\n+mb:\tld\thl,mb\n+\tld\ta,mb\n+\tld\t(mb),a\n+.else\n+\t.assume\tADL=1\n+\tld\ta,mb\n+\tld\tmb,a\n+\t.assume\tADL=0\n+.endif\n+\n+\t.END"
    },
    {
      "sha": "8c1451b7e66fd1b9b9eb7379b53c022ca9fb9f4f",
      "filename": "gas/testsuite/gas/z80/z180_unsup_regs.d",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/z180_unsup_regs.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/z180_unsup_regs.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z180_unsup_regs.d?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -0,0 +1,39 @@\n+#name: Z180 use unsupported registers as labels\n+#as: -march=z180 --defsym NO_REG_F= --defsym NO_XYHL=\n+#objdump: -d\n+#source: unsup_regs.s\n+\n+.*: .*\n+\n+Disassembly of section \\.text:\n+\n+0+00 <_start>:\n+[   ]+0:[ \t]+3e 02[      \t]+ld a,0x02\n+\n+0+02 <ixl>:\n+[   ]+2:[ \t]+06 04[      \t]+ld b,0x04\n+\n+0+04 <ixh>:\n+[   ]+4:[ \t]+0e 06[      \t]+ld c,0x06\n+\n+0+06 <iyl>:\n+[   ]+6:[ \t]+16 08[      \t]+ld d,0x08\n+\n+0+08 <f>:\n+[   ]+8:[ \t]+3e 08[      \t]+ld a,0x08\n+[   ]+a:[ \t]+dd 29[      \t]+add ix,ix\n+[   ]+c:[ \t]+dd 86 01[   \t]+add a,\\(ix\\+1\\)\n+[   ]+f:[ \t]+dd 21 34 12 \tld ix,0x1234\n+[  ]+13:[ \t]+fd 21 21 43 \tld iy,0x4321\n+[  ]+17:[ \t]+fd 22 34 12 \tld \\(0x1234\\),iy\n+[  ]+1b:[ \t]+fd 77 ff[   \t]+ld \\(iy\\-1\\),a\n+[  ]+1e:[ \t]+ed 5f[      \t]+ld a,r\n+[  ]+20:[ \t]+ed 4f[      \t]+ld r,a\n+[  ]+22:[ \t]+ed 57[      \t]+ld a,i\n+[  ]+24:[ \t]+ed 47[      \t]+ld i,a\n+\n+0+26 <mb>:\n+[  ]+26:[ \t]+21 26 00[   \t]+ld hl,0x0026\n+[  ]+29:[ \t]+3e 26[      \t]+ld a,0x26\n+[  ]+2b:[ \t]+32 26 00[   \t]+ld \\(0x0026\\),a\n+#pass"
    },
    {
      "sha": "82a7febf73609a765c117c0202f0032149badeea",
      "filename": "gas/testsuite/gas/z80/z80.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 85,
      "changes": 87,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/z80.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/z80.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80.exp?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -17,93 +17,10 @@\n # run tests for target Z80.\n \n if [istarget z80-*-*] then {\n-# test redefinitions\n-    run_dump_test \"redef\"\n-# test .set redefinitions\n-    run_dump_test \"set\"\n-# test parsing of equ definitions\n-    run_dump_test \"equ\"\n-# test parsing of \" and '\n-    run_dump_test \"quotes\"\n-# test data definition directives\n-    run_dump_test \"data\"\n-# test suffixes\n-    run_dump_test \"suffix\"\n-# test assembling and disassembling instructions involving offsets\n-    run_dump_test \"offset\"\n+    run_dump_tests [lsort [glob -nocomplain $srcdir/$subdir/*.d]]\n+\n     gas_test_error \"jr-forwf.s\" \"\" \"relative jump out of range (jr)\"\n     gas_test_error \"jr-backf.s\" \"\" \"relative jump out of range (jr)\"\n     gas_test_error \"djnz-backf.s\" \"\" \"relative jump out of range (djnz)\"\n- \n-# test assembling instruction with offset that is a label defined later\n-    run_dump_test \"atend\"\n-# test for data transfer instructions\n-    run_dump_test \"ld-group\"\n-# test for block instructions\n-    run_dump_test \"block\"\n-# test for arithmetic and logic\n-    run_dump_test \"arith\"\n-# test for rotate and shift\n-    run_dump_test \"rotate\"\n-# test for bit manipulations\n-    run_dump_test \"bit\"\n-# test for branch instructions\n-    run_dump_test \"branch\"\n-# test for input and output instructions\n-    run_dump_test \"inout\"\n-# test for strings\n-    run_dump_test \"strings\"\n-# test for dollar labels\n-    run_dump_test \"dollar\"\n-# test for relocations\n-    run_dump_test \"z80_reloc\"\n-# test for absolutely all documented instructions of Z80\n-    run_dump_test \"z80_doc\"\n-# test for undocumented instructions like RLC (IX+3),A\n-    run_dump_test \"z80_op_ii_ld\"\n-# test for undocumented instructions SLI/SLL\n-    run_dump_test \"z80_sli\"\n-# test for undocumented instruction IN F,(C)\n-    run_dump_test \"z80_in_f_c\"\n-# test for undocumented instruction OUT (C),0\n-    run_dump_test \"z80_out_c_0\"\n-# test for instructions with index register halves\n-    run_dump_test \"z80_ii8\"\n-#test for other instructions\n-    run_dump_test \"misc\"\n     gas_test_error \"ill_op.s\" \"\" \"Illegal operand: ld hl,(sp+0)\"\n-# test for all Z80 documented instructions for R800\n-    run_dump_test \"r800_z80_doc\"\n-# test for R800 instructions with index register halves\n-    run_dump_test \"r800_ii8\"\n-# test for R800 extra instructions\n-    run_dump_test \"r800_extra\"\n-#test for Z180 instructions\n-    run_dump_test \"z180\"\n-#test for Z80 instructions while compiling for Z180\n-    run_dump_test \"z180_z80_doc\"\n-#test for eZ80 instructions in Z80 mode\n-    run_dump_test \"ez80_z80_all\"\n-#test for eZ80 instructions with sufficies in Z80 mode\n-    run_dump_test \"ez80_z80_suf\"\n-#test for eZ80 instructions in ADL mode\n-    run_dump_test \"ez80_adl_all\"\n-#test for eZ80 instructions with sufficies in ADL mode\n-    run_dump_test \"ez80_adl_suf\"\n-#test for eZ80 opcode prefixes as multiple bytes before instruction\n-    run_dump_test \"ez80_pref_dis\"\n-#test for GBZ80 instruction set\n-    run_dump_test \"gbz80_all\"\n-#test for Z80N instruction set\n-    run_dump_test \"z80n_all\"\n-#test for Z80N push nn relocation test\n-    run_dump_test \"z80n_reloc\"\n-# test for SDCC compatibility mode\n-    run_dump_test \"sdcc\"\n-# test for colonless labels\n-    run_dump_test \"colonless\"\n-# test for FP math48\n-    run_dump_test \"fp_math48\"\n-# test for FP zeda32\n-    run_dump_test \"fp_zeda32\"\n }"
    },
    {
      "sha": "9fad3d027b030a6e550fe68da0730dff3e00ce80",
      "filename": "gas/testsuite/gas/z80/z80_strict_unsup_regs.d",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/z80_strict_unsup_regs.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/z80_strict_unsup_regs.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_strict_unsup_regs.d?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -0,0 +1,39 @@\n+#name: Z80 use unsupported registers as labels in strict mode\n+#as: -march=z80-full --defsym NO_REG_F= --defsym NO_XYHL=\n+#objdump: -d\n+#source: unsup_regs.s\n+\n+.*: .*\n+\n+Disassembly of section \\.text:\n+\n+0+00 <_start>:\n+[   ]+0:[ \t]+3e 02[      \t]+ld a,0x02\n+\n+0+02 <ixl>:\n+[   ]+2:[ \t]+06 04[      \t]+ld b,0x04\n+\n+0+04 <ixh>:\n+[   ]+4:[ \t]+0e 06[      \t]+ld c,0x06\n+\n+0+06 <iyl>:\n+[   ]+6:[ \t]+16 08[      \t]+ld d,0x08\n+\n+0+08 <f>:\n+[   ]+8:[ \t]+3e 08[      \t]+ld a,0x08\n+[   ]+a:[ \t]+dd 29[      \t]+add ix,ix\n+[   ]+c:[ \t]+dd 86 01[   \t]+add a,\\(ix\\+1\\)\n+[   ]+f:[ \t]+dd 21 34 12 \tld ix,0x1234\n+[  ]+13:[ \t]+fd 21 21 43 \tld iy,0x4321\n+[  ]+17:[ \t]+fd 22 34 12 \tld \\(0x1234\\),iy\n+[  ]+1b:[ \t]+fd 77 ff[   \t]+ld \\(iy\\-1\\),a\n+[  ]+1e:[ \t]+ed 5f[      \t]+ld a,r\n+[  ]+20:[ \t]+ed 4f[      \t]+ld r,a\n+[  ]+22:[ \t]+ed 57[      \t]+ld a,i\n+[  ]+24:[ \t]+ed 47[      \t]+ld i,a\n+\n+0+26 <mb>:\n+[  ]+26:[ \t]+21 26 00[   \t]+ld hl,0x0026\n+[  ]+29:[ \t]+3e 26[      \t]+ld a,0x26\n+[  ]+2b:[ \t]+32 26 00[   \t]+ld \\(0x0026\\),a\n+#pass"
    },
    {
      "sha": "fe5cc613af512c475031faed8d34bba0fb0575c1",
      "filename": "gas/testsuite/gas/z80/z80_unsup_regs.d",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/z80_unsup_regs.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/z80_unsup_regs.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_unsup_regs.d?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -0,0 +1,34 @@\n+#name: Z80 use unsupported registers as labels when no -march specified\n+#objdump: -d\n+#source: unsup_regs.s\n+\n+.*: .*\n+\n+Disassembly of section \\.text:\n+\n+0+00 <_start>:\n+[   ]+0:[ \t]+dd 7d[      \t]+ld a,ixl\n+[   ]+2:[ \t]+dd 67[      \t]+ld ixh,a\n+[   ]+4:[ \t]+dd 44[      \t]+ld b,ixh\n+[   ]+6:[ \t]+dd 68[      \t]+ld ixl,b\n+[   ]+8:[ \t]+fd 4d[      \t]+ld c,iyl\n+[   ]+a:[ \t]+fd 61[      \t]+ld iyh,c\n+[   ]+c:[ \t]+fd 54[      \t]+ld d,iyh\n+[   ]+e:[ \t]+fd 6a[      \t]+ld iyl,d\n+[  ]+10:[ \t]+ed 70[      \t]+in f,\\(c\\)\n+[  ]+12:[ \t]+dd 29[      \t]+add ix,ix\n+[  ]+14:[ \t]+dd 86 01[   \t]+add a,\\(ix\\+1\\)\n+[  ]+17:[ \t]+dd 21 34 12 \tld ix,0x1234\n+[  ]+1b:[ \t]+fd 21 21 43 \tld iy,0x4321\n+[  ]+1f:[ \t]+fd 22 34 12 \tld \\(0x1234\\),iy\n+[  ]+23:[ \t]+fd 77 ff[   \t]+ld \\(iy\\-1\\),a\n+[  ]+26:[ \t]+ed 5f[      \t]+ld a,r\n+[  ]+28:[ \t]+ed 4f[      \t]+ld r,a\n+[  ]+2a:[ \t]+ed 57[      \t]+ld a,i\n+[  ]+2c:[ \t]+ed 47[      \t]+ld i,a\n+\n+0+2e <mb>:\n+[  ]+2e:[ \t]+21 2e 00[   \t]+ld hl,0x002e\n+[  ]+31:[ \t]+3e 2e[      \t]+ld a,0x2e\n+[  ]+33:[ \t]+32 2e 00[   \t]+ld \\(0x002e\\),a\n+#pass"
    },
    {
      "sha": "c6888c9593d7aee7723d98eaddbe707318e34706",
      "filename": "gas/testsuite/gas/z80/z80n_unsup_regs.d",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/z80n_unsup_regs.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/gas/testsuite/gas/z80/z80n_unsup_regs.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80n_unsup_regs.d?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -0,0 +1,34 @@\n+#name: Z80N use unsupported registers as labels\n+#as: -march=z80n\n+#objdump: -d\n+#source: unsup_regs.s\n+\n+.*: .*\n+\n+Disassembly of section \\.text:\n+\n+0+00 <_start>:\n+[   ]+0:[ \t]+dd 7d[      \t]+ld a,ixl\n+[   ]+2:[ \t]+dd 67[      \t]+ld ixh,a\n+[   ]+4:[ \t]+dd 44[      \t]+ld b,ixh\n+[   ]+6:[ \t]+dd 68[      \t]+ld ixl,b\n+[   ]+8:[ \t]+fd 4d[      \t]+ld c,iyl\n+[   ]+a:[ \t]+fd 61[      \t]+ld iyh,c\n+[   ]+c:[ \t]+fd 54[      \t]+ld d,iyh\n+[   ]+e:[ \t]+fd 6a[      \t]+ld iyl,d\n+[  ]+10:[ \t]+ed 70[      \t]+in f,\\(c\\)\n+[  ]+12:[ \t]+dd 29[      \t]+add ix,ix\n+[  ]+14:[ \t]+dd 86 01[   \t]+add a,\\(ix\\+1\\)\n+[  ]+17:[ \t]+dd 21 34 12 \tld ix,0x1234\n+[  ]+1b:[ \t]+fd 21 21 43 \tld iy,0x4321\n+[  ]+1f:[ \t]+fd 22 34 12 \tld \\(0x1234\\),iy\n+[  ]+23:[ \t]+fd 77 ff[   \t]+ld \\(iy\\-1\\),a\n+[  ]+26:[ \t]+ed 5f[      \t]+ld a,r\n+[  ]+28:[ \t]+ed 4f[      \t]+ld r,a\n+[  ]+2a:[ \t]+ed 57[      \t]+ld a,i\n+[  ]+2c:[ \t]+ed 47[      \t]+ld i,a\n+\n+0+2e <mb>:\n+[  ]+2e:[ \t]+21 2e 00[   \t]+ld hl,0x002e\n+[  ]+31:[ \t]+3e 2e[      \t]+ld a,0x2e\n+[  ]+33:[ \t]+32 2e 00[   \t]+ld \\(0x002e\\),a"
    },
    {
      "sha": "b23e8e99fd8fcffc4e55e5ade070c3e5609ed699",
      "filename": "opcodes/z80-dis.c",
      "status": "modified",
      "additions": 8,
      "deletions": 19,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/opcodes/z80-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68e52bc7ecfbfdc8d5f85716a8ac7668e211f360/opcodes/z80-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/z80-dis.c?ref=68e52bc7ecfbfdc8d5f85716a8ac7668e211f360",
      "patch": "@@ -400,24 +400,6 @@ cism (struct buffer *buf, disassemble_info * info, const char *txt ATTRIBUTE_UNU\n   return buf->n_used;\n }\n \n-static int\n-cis2 (struct buffer *buf, disassemble_info * info, const char *txt ATTRIBUTE_UNUSED)\n-{\n-  static char * opar[] = { \"in\", \"out\" };\n-  char * op;\n-  char c;\n-\n-  c = buf->data[1];\n-  op = ((0x14 & c) == 0x14) ? \"ot\" : (opar[c & 1]);\n-  info->fprintf_func (info->stream,\n-                      \"%s%c2%s\",\n-                      op,\n-                      (c & 0x08) ? 'd' : 'i',\n-                      (c & 0x10) ? \"r\" : \"\");\n-  buf->n_used = 2;\n-  return buf->n_used;\n-}\n-\n static int\n dump (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n@@ -504,21 +486,28 @@ struct tab_elt opc_ed[] =\n   { 0x7D, 0xFF, prt, \"stmix\", INSS_EZ80 },\n   { 0x7E, 0xFF, prt, \"rsmix\", INSS_EZ80 },\n   { 0x82, 0xE6, cism, \"\", INSS_Z180|INSS_EZ80 },\n-  { 0x84, 0xC7, cis2, \"\", INSS_EZ80 },\n+  { 0x84, 0xFF, prt, \"ini2\", INSS_EZ80 },\n   { 0x8A, 0xFF, prt_n_n, \"push 0x%02x%%02x\", INSS_Z80N },\n+  { 0x8C, 0xFF, prt, \"ind2\", INSS_EZ80 },\n   { 0x90, 0xFF, prt, \"outinb\", INSS_Z80N },\n   { 0x91, 0xFF, prt_n_n, \"nextreg 0x%02x,0x%%02x\", INSS_Z80N },\n   { 0x92, 0xFF, prt_n, \"nextreg 0x%02x,a\", INSS_Z80N },\n   { 0x93, 0xFF, prt, \"pixeldn\", INSS_Z80N },\n+  { 0x94, 0xFF, prt, \"ini2r\", INSS_EZ80 },\n   { 0x94, 0xFF, prt, \"pixelad\", INSS_Z80N },\n   { 0x95, 0xFF, prt, \"setae\", INSS_Z80N },\n   { 0x98, 0xFF, prt, \"jp (c)\", INSS_Z80N },\n+  { 0x9c, 0xFF, prt, \"ind2r\", INSS_EZ80 },\n   { 0xA0, 0xE4, cis, \"\", INSS_ALL },\n+  { 0xA4, 0xFF, prt, \"outi2\", INSS_EZ80 },\n   { 0xA4, 0xFF, prt, \"ldix\", INSS_Z80N },\n+  { 0xAC, 0xFF, prt, \"outd2\", INSS_EZ80 },\n   { 0xAC, 0xFF, prt, \"lddx\", INSS_Z80N },\n   { 0xA5, 0xFF, prt, \"ldws\", INSS_Z80N },\n+  { 0xB4, 0xFF, prt, \"oti2r\", INSS_EZ80 },\n   { 0xB4, 0xFF, prt, \"ldirx\", INSS_Z80N },\n   { 0xB7, 0xFF, prt, \"ldpirx\", INSS_Z80N },\n+  { 0xBC, 0xFF, prt, \"otd2r\", INSS_EZ80 },\n   { 0xBC, 0xFF, prt, \"lddrx\", INSS_Z80N },\n   { 0xC2, 0xFF, prt, \"inirx\", INSS_EZ80 },\n   { 0xC3, 0xFF, prt, \"otirx\", INSS_EZ80 },"
    }
  ]
}