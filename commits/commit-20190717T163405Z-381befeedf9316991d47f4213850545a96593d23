{
  "sha": "381befeedf9316991d47f4213850545a96593d23",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzgxYmVmZWVkZjkzMTY5OTFkNDdmNDIxMzg1MDU0NWE5NjU5M2QyMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-07-17T14:34:23Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-07-17T16:34:05Z"
    },
    "message": "Rename field_int to field_signed\n\nThis renames ui_out::field_int to field_signed, and field_fmt_int to\nfield_fmt_signed; and changes the type of the \"value\" parameter from\nint to LONGEST.\n\nTested by the buildbot.\n\ngdb/ChangeLog\n2019-07-17  Tom Tromey  <tromey@adacore.com>\n\n\t* ui-out.h (class ui_out) <field_signed, field_fmt_signed,\n\tdo_field_signed>: Rename.  Change type of \"value\".\n\t* ui-out.c (ui_out::field_signed): Rename from field_int.\n\tChange type of \"value\".\n\t(ui_out::field_fmt_signed): Rename from field_fmt_int.  Change\n\ttype of \"value\".\n\t* tui/tui-out.h (class tui_ui_out) <do_field_signed>: Rename from\n\tdo_field_int.  Change type of \"value\".\n\t* tui/tui-out.c (tui_ui_out::do_field_signed): Rename from\n\tdo_field_int.  Change type of \"value\".\n\t* tracepoint.c (trace_status_mi, tfind_1)\n\t(print_one_static_tracepoint_marker): Update.\n\t* thread.c (print_thread_info_1, print_selected_thread_frame):\n\tUpdate.\n\t* stack.c (print_frame, print_frame_info): Update.\n\t* spu-tdep.c (info_spu_signal_command, info_spu_dma_cmdlist):\n\tUpdate.\n\t* source.c (print_source_lines_base): Update.\n\t* skip.c (info_skip_command): Update.\n\t* record-btrace.c (btrace_ui_out_decode_error)\n\t(btrace_call_history_src_line): Update.\n\t* python/py-framefilter.c (py_print_single_arg, py_print_frame):\n\tUpdate.\n\t* progspace.c (print_program_space): Update.\n\t* mi/mi-symbol-cmds.c (mi_cmd_symbol_list_lines): Update.\n\t* mi/mi-out.h (class mi_ui_out) <do_field_signed>: Rename from\n\tdo_field_int.  Change type of \"value\".\n\t* mi/mi-out.c (mi_ui_out::do_table_begin)\n\t(mi_ui_out::do_table_header): Update.\n\t(mi_ui_out::do_field_signed): Rename from do_field_int.  Change\n\ttype of \"value\".\n\t* mi/mi-main.c (mi_cmd_thread_list_ids, print_one_inferior)\n\t(mi_cmd_data_list_changed_registers, output_register)\n\t(mi_cmd_data_read_memory, mi_load_progress)\n\t(mi_cmd_trace_frame_collected): Update.\n\t* mi/mi-interp.c (mi_on_normal_stop_1, mi_output_solib_attribs):\n\tUpdate.\n\t* mi/mi-cmd-var.c (print_varobj, mi_cmd_var_create)\n\t(mi_cmd_var_delete, mi_cmd_var_info_num_children)\n\t(mi_cmd_var_list_children, varobj_update_one): Update.\n\t* mi/mi-cmd-stack.c (mi_cmd_stack_info_depth)\n\t(mi_cmd_stack_list_args, list_arg_or_local): Update.\n\t* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_file): Update.\n\t* inferior.c (print_inferior): Update.\n\t* gdb_bfd.c (print_one_bfd): Update.\n\t* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn):\n\tUpdate.\n\t* darwin-nat-info.c (darwin_debug_regions_recurse): Update.\n\t* cli-out.h (class cli_ui_out) <do_field_signed>: Rename from\n\tdo_field_int.  Change type of \"value\".\n\t* cli-out.c (cli_ui_out::do_field_signed): Rename from\n\tdo_field_int.  Change type of \"value\".\n\t* breakpoint.c (watchpoint_check, print_breakpoint_location)\n\t(print_one_breakpoint_location, print_it_catch_fork)\n\t(print_one_catch_fork, print_it_catch_vfork)\n\t(print_one_catch_vfork, print_it_catch_solib)\n\t(print_it_catch_exec, print_it_ranged_breakpoint)\n\t(print_mention_watchpoint, print_mention_masked_watchpoint)\n\t(bkpt_print_it, update_static_tracepoint): Update.\n\t* break-catch-throw.c (print_it_exception_catchpoint): Update.\n\t* break-catch-syscall.c (print_it_catch_syscall): Update.\n\t* ada-tasks.c (print_ada_task_info): Update.\n\t* ada-lang.c (print_it_exception, print_mention_exception):\n\tUpdate.",
    "tree": {
      "sha": "861827252f3c46a71630c50e1a6c6d26c754df41",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/861827252f3c46a71630c50e1a6c6d26c754df41"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/381befeedf9316991d47f4213850545a96593d23",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/381befeedf9316991d47f4213850545a96593d23",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/381befeedf9316991d47f4213850545a96593d23",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/381befeedf9316991d47f4213850545a96593d23/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6b78c3f83c8bcbfa714aab7627ece9673b2d602a"
    }
  ],
  "stats": {
    "total": 376,
    "additions": 220,
    "deletions": 156
  },
  "files": [
    {
      "sha": "701b2c90d0481136247ff26201ecb665b656c045",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 67,
      "deletions": 0,
      "changes": 67,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -1,3 +1,70 @@\n+2019-07-17  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ui-out.h (class ui_out) <field_signed, field_fmt_signed,\n+\tdo_field_signed>: Rename.  Change type of \"value\".\n+\t* ui-out.c (ui_out::field_signed): Rename from field_int.\n+\tChange type of \"value\".\n+\t(ui_out::field_fmt_signed): Rename from field_fmt_int.  Change\n+\ttype of \"value\".\n+\t* tui/tui-out.h (class tui_ui_out) <do_field_signed>: Rename from\n+\tdo_field_int.  Change type of \"value\".\n+\t* tui/tui-out.c (tui_ui_out::do_field_signed): Rename from\n+\tdo_field_int.  Change type of \"value\".\n+\t* tracepoint.c (trace_status_mi, tfind_1)\n+\t(print_one_static_tracepoint_marker): Update.\n+\t* thread.c (print_thread_info_1, print_selected_thread_frame):\n+\tUpdate.\n+\t* stack.c (print_frame, print_frame_info): Update.\n+\t* spu-tdep.c (info_spu_signal_command, info_spu_dma_cmdlist):\n+\tUpdate.\n+\t* source.c (print_source_lines_base): Update.\n+\t* skip.c (info_skip_command): Update.\n+\t* record-btrace.c (btrace_ui_out_decode_error)\n+\t(btrace_call_history_src_line): Update.\n+\t* python/py-framefilter.c (py_print_single_arg, py_print_frame):\n+\tUpdate.\n+\t* progspace.c (print_program_space): Update.\n+\t* mi/mi-symbol-cmds.c (mi_cmd_symbol_list_lines): Update.\n+\t* mi/mi-out.h (class mi_ui_out) <do_field_signed>: Rename from\n+\tdo_field_int.  Change type of \"value\".\n+\t* mi/mi-out.c (mi_ui_out::do_table_begin)\n+\t(mi_ui_out::do_table_header): Update.\n+\t(mi_ui_out::do_field_signed): Rename from do_field_int.  Change\n+\ttype of \"value\".\n+\t* mi/mi-main.c (mi_cmd_thread_list_ids, print_one_inferior)\n+\t(mi_cmd_data_list_changed_registers, output_register)\n+\t(mi_cmd_data_read_memory, mi_load_progress)\n+\t(mi_cmd_trace_frame_collected): Update.\n+\t* mi/mi-interp.c (mi_on_normal_stop_1, mi_output_solib_attribs):\n+\tUpdate.\n+\t* mi/mi-cmd-var.c (print_varobj, mi_cmd_var_create)\n+\t(mi_cmd_var_delete, mi_cmd_var_info_num_children)\n+\t(mi_cmd_var_list_children, varobj_update_one): Update.\n+\t* mi/mi-cmd-stack.c (mi_cmd_stack_info_depth)\n+\t(mi_cmd_stack_list_args, list_arg_or_local): Update.\n+\t* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_file): Update.\n+\t* inferior.c (print_inferior): Update.\n+\t* gdb_bfd.c (print_one_bfd): Update.\n+\t* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn):\n+\tUpdate.\n+\t* darwin-nat-info.c (darwin_debug_regions_recurse): Update.\n+\t* cli-out.h (class cli_ui_out) <do_field_signed>: Rename from\n+\tdo_field_int.  Change type of \"value\".\n+\t* cli-out.c (cli_ui_out::do_field_signed): Rename from\n+\tdo_field_int.  Change type of \"value\".\n+\t* breakpoint.c (watchpoint_check, print_breakpoint_location)\n+\t(print_one_breakpoint_location, print_it_catch_fork)\n+\t(print_one_catch_fork, print_it_catch_vfork)\n+\t(print_one_catch_vfork, print_it_catch_solib)\n+\t(print_it_catch_exec, print_it_ranged_breakpoint)\n+\t(print_mention_watchpoint, print_mention_masked_watchpoint)\n+\t(bkpt_print_it, update_static_tracepoint): Update.\n+\t* break-catch-throw.c (print_it_exception_catchpoint): Update.\n+\t* break-catch-syscall.c (print_it_catch_syscall): Update.\n+\t* ada-tasks.c (print_ada_task_info): Update.\n+\t* ada-lang.c (print_it_exception, print_mention_exception):\n+\tUpdate.\n+\n 2019-07-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \tPR breakpoints/24541"
    },
    {
      "sha": "7a5cc4272c6bb8a671c7654ec4a95d47b363249e",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -12465,7 +12465,7 @@ print_it_exception (enum ada_exception_catchpoint_kind ex, bpstat bs)\n \n   uiout->text (b->disposition == disp_del\n \t       ? \"\\nTemporary catchpoint \" : \"\\nCatchpoint \");\n-  uiout->field_int (\"bkptno\", b->number);\n+  uiout->field_signed (\"bkptno\", b->number);\n   uiout->text (\", \");\n \n   /* ada_exception_name_addr relies on the selected frame being the\n@@ -12603,7 +12603,7 @@ print_mention_exception (enum ada_exception_catchpoint_kind ex,\n \n   uiout->text (b->disposition == disp_del ? _(\"Temporary catchpoint \")\n                                                  : _(\"Catchpoint \"));\n-  uiout->field_int (\"bkptno\", b->number);\n+  uiout->field_signed (\"bkptno\", b->number);\n   uiout->text (\": \");\n \n   switch (ex)"
    },
    {
      "sha": "a6238887048de11240550503a2fb7a57c55743e3",
      "filename": "gdb/ada-tasks.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/ada-tasks.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/ada-tasks.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-tasks.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -1086,7 +1086,7 @@ print_ada_task_info (struct ui_out *uiout,\n \tuiout->field_skip (\"current\");\n \n       /* Print the task number.  */\n-      uiout->field_int (\"id\", taskno);\n+      uiout->field_signed (\"id\", taskno);\n \n       /* Print the Task ID.  */\n       uiout->field_string (\"task-id\", phex_nz (task_info->task_id,\n@@ -1098,7 +1098,7 @@ print_ada_task_info (struct ui_out *uiout,\n \t  thread_info *thread = find_thread_ptid (task_info->ptid);\n \n \t  if (thread != NULL)\n-\t    uiout->field_int (\"thread-id\", thread->global_num);\n+\t    uiout->field_signed (\"thread-id\", thread->global_num);\n \t  else\n \t    /* This should never happen unless there is a bug somewhere,\n \t       but be resilient when that happens.  */\n@@ -1108,12 +1108,12 @@ print_ada_task_info (struct ui_out *uiout,\n       /* Print the ID of the parent task.  */\n       parent_id = get_task_number_from_id (task_info->parent, inf);\n       if (parent_id)\n-        uiout->field_int (\"parent-id\", parent_id);\n+        uiout->field_signed (\"parent-id\", parent_id);\n       else\n         uiout->field_skip (\"parent-id\");\n \n       /* Print the base priority of the task.  */\n-      uiout->field_int (\"priority\", task_info->priority);\n+      uiout->field_signed (\"priority\", task_info->priority);\n \n       /* Print the task current state.  */\n       if (task_info->caller_task)"
    },
    {
      "sha": "a165be62be13be6bc097975d00c362950237820a",
      "filename": "gdb/break-catch-syscall.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/break-catch-syscall.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/break-catch-syscall.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/break-catch-syscall.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -205,15 +205,15 @@ print_it_catch_syscall (bpstat bs)\n \t\t\t\t\t\t: EXEC_ASYNC_SYSCALL_RETURN));\n       uiout->field_string (\"disp\", bpdisp_text (b->disposition));\n     }\n-  uiout->field_int (\"bkptno\", b->number);\n+  uiout->field_signed (\"bkptno\", b->number);\n \n   if (last.kind == TARGET_WAITKIND_SYSCALL_ENTRY)\n     uiout->text (\" (call to syscall \");\n   else\n     uiout->text (\" (returned from syscall \");\n \n   if (s.name == NULL || uiout->is_mi_like_p ())\n-    uiout->field_int (\"syscall-number\", last.value.syscall_number);\n+    uiout->field_signed (\"syscall-number\", last.value.syscall_number);\n   if (s.name != NULL)\n     uiout->field_string (\"syscall-name\", s.name);\n "
    },
    {
      "sha": "0677a55ee55c2e3af5f49dee3a6d2e2c41fdb5f6",
      "filename": "gdb/break-catch-throw.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/break-catch-throw.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/break-catch-throw.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/break-catch-throw.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -235,7 +235,7 @@ print_it_exception_catchpoint (bpstat bs)\n   bp_temp = b->disposition == disp_del;\n   uiout->text (bp_temp ? \"Temporary catchpoint \"\n \t\t       : \"Catchpoint \");\n-  uiout->field_int (\"bkptno\", b->number);\n+  uiout->field_signed (\"bkptno\", b->number);\n   uiout->text ((kind == EX_EVENT_THROW ? \" (exception thrown), \"\n \t\t: (kind == EX_EVENT_CATCH ? \" (exception caught), \"\n \t\t   : \" (exception rethrown), \")));"
    },
    {
      "sha": "e0c9aa460f10ca378fe3a80b93e25519c7da0fb8",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 25,
      "deletions": 25,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -4913,7 +4913,7 @@ watchpoint_check (bpstat bs)\n \t    uiout->field_string\n \t      (\"reason\", async_reason_lookup (EXEC_ASYNC_WATCHPOINT_SCOPE));\n \t  uiout->text (\"\\nWatchpoint \");\n-\t  uiout->field_int (\"wpnum\", b->number);\n+\t  uiout->field_signed (\"wpnum\", b->number);\n \t  uiout->text (\" deleted because the program has left the block in\\n\"\n \t\t       \"which its expression is valid.\\n\");\n \t}\n@@ -5836,7 +5836,7 @@ print_breakpoint_location (struct breakpoint *b,\n       if (uiout->is_mi_like_p ())\n \tuiout->field_string (\"fullname\", symtab_to_fullname (loc->symtab));\n       \n-      uiout->field_int (\"line\", loc->line_number);\n+      uiout->field_signed (\"line\", loc->line_number);\n     }\n   else if (loc)\n     {\n@@ -6008,7 +6008,7 @@ print_one_breakpoint_location (struct breakpoint *b,\n   if (part_of_multiple)\n     uiout->field_fmt (\"number\", \"%d.%d\", b->number, loc_number);\n   else\n-    uiout->field_int (\"number\", b->number);\n+    uiout->field_signed (\"number\", b->number);\n \n   /* 2 */\n   annotate_field (1);\n@@ -6101,12 +6101,12 @@ print_one_breakpoint_location (struct breakpoint *b,\n \t  /* FIXME: This seems to be redundant and lost here; see the\n \t     \"stop only in\" line a little further down.  */\n \t  uiout->text (\" thread \");\n-\t  uiout->field_int (\"thread\", b->thread);\n+\t  uiout->field_signed (\"thread\", b->thread);\n \t}\n       else if (b->task != 0)\n \t{\n \t  uiout->text (\" task \");\n-\t  uiout->field_int (\"task\", b->task);\n+\t  uiout->field_signed (\"task\", b->task);\n \t}\n     }\n \n@@ -6154,7 +6154,7 @@ print_one_breakpoint_location (struct breakpoint *b,\n       /* FIXME should make an annotation for this.  */\n       uiout->text (\"\\tstop only in thread \");\n       if (uiout->is_mi_like_p ())\n-\tuiout->field_int (\"thread\", b->thread);\n+\tuiout->field_signed (\"thread\", b->thread);\n       else\n \t{\n \t  struct thread_info *thr = find_thread_global_id (b->thread);\n@@ -6176,7 +6176,7 @@ print_one_breakpoint_location (struct breakpoint *b,\n \t  else\n \t    uiout->text (\"\\tbreakpoint\");\n \t  uiout->text (\" already hit \");\n-\t  uiout->field_int (\"times\", b->hit_count);\n+\t  uiout->field_signed (\"times\", b->hit_count);\n \t  if (b->hit_count == 1)\n \t    uiout->text (\" time\\n\");\n \t  else\n@@ -6186,15 +6186,15 @@ print_one_breakpoint_location (struct breakpoint *b,\n \t{\n \t  /* Output the count also if it is zero, but only if this is mi.  */\n \t  if (uiout->is_mi_like_p ())\n-\t    uiout->field_int (\"times\", b->hit_count);\n+\t    uiout->field_signed (\"times\", b->hit_count);\n \t}\n     }\n \n   if (!part_of_multiple && b->ignore_count)\n     {\n       annotate_field (8);\n       uiout->text (\"\\tignore next \");\n-      uiout->field_int (\"ignore\", b->ignore_count);\n+      uiout->field_signed (\"ignore\", b->ignore_count);\n       uiout->text (\" hits\\n\");\n     }\n \n@@ -6211,7 +6211,7 @@ print_one_breakpoint_location (struct breakpoint *b,\n \tuiout->text (\"additional \");\n       else\n \tuiout->text (\"next \");\n-      uiout->field_int (\"enable\", b->enable_count);\n+      uiout->field_signed (\"enable\", b->enable_count);\n       uiout->text (\" hits\\n\");\n     }\n \n@@ -6222,7 +6222,7 @@ print_one_breakpoint_location (struct breakpoint *b,\n       if (tp->traceframe_usage)\n \t{\n \t  uiout->text (\"\\ttrace buffer usage \");\n-\t  uiout->field_int (\"traceframe-usage\", tp->traceframe_usage);\n+\t  uiout->field_signed (\"traceframe-usage\", tp->traceframe_usage);\n \t  uiout->text (\" bytes\\n\");\n \t}\n     }\n@@ -6243,7 +6243,7 @@ print_one_breakpoint_location (struct breakpoint *b,\n \t{\n \t  annotate_field (10);\n \t  uiout->text (\"\\tpass count \");\n-\t  uiout->field_int (\"pass\", t->pass_count);\n+\t  uiout->field_signed (\"pass\", t->pass_count);\n \t  uiout->text (\" \\n\");\n \t}\n \n@@ -7689,9 +7689,9 @@ print_it_catch_fork (bpstat bs)\n       uiout->field_string (\"reason\", async_reason_lookup (EXEC_ASYNC_FORK));\n       uiout->field_string (\"disp\", bpdisp_text (b->disposition));\n     }\n-  uiout->field_int (\"bkptno\", b->number);\n+  uiout->field_signed (\"bkptno\", b->number);\n   uiout->text (\" (forked process \");\n-  uiout->field_int (\"newpid\", c->forked_inferior_pid.pid ());\n+  uiout->field_signed (\"newpid\", c->forked_inferior_pid.pid ());\n   uiout->text (\"), \");\n   return PRINT_SRC_AND_LOC;\n }\n@@ -7718,7 +7718,7 @@ print_one_catch_fork (struct breakpoint *b, struct bp_location **last_loc)\n   if (c->forked_inferior_pid != null_ptid)\n     {\n       uiout->text (\", process \");\n-      uiout->field_int (\"what\", c->forked_inferior_pid.pid ());\n+      uiout->field_signed (\"what\", c->forked_inferior_pid.pid ());\n       uiout->spaces (1);\n     }\n \n@@ -7805,9 +7805,9 @@ print_it_catch_vfork (bpstat bs)\n       uiout->field_string (\"reason\", async_reason_lookup (EXEC_ASYNC_VFORK));\n       uiout->field_string (\"disp\", bpdisp_text (b->disposition));\n     }\n-  uiout->field_int (\"bkptno\", b->number);\n+  uiout->field_signed (\"bkptno\", b->number);\n   uiout->text (\" (vforked process \");\n-  uiout->field_int (\"newpid\", c->forked_inferior_pid.pid ());\n+  uiout->field_signed (\"newpid\", c->forked_inferior_pid.pid ());\n   uiout->text (\"), \");\n   return PRINT_SRC_AND_LOC;\n }\n@@ -7833,7 +7833,7 @@ print_one_catch_vfork (struct breakpoint *b, struct bp_location **last_loc)\n   if (c->forked_inferior_pid != null_ptid)\n     {\n       uiout->text (\", process \");\n-      uiout->field_int (\"what\", c->forked_inferior_pid.pid ());\n+      uiout->field_signed (\"what\", c->forked_inferior_pid.pid ());\n       uiout->spaces (1);\n     }\n \n@@ -7974,7 +7974,7 @@ print_it_catch_solib (bpstat bs)\n     uiout->text (\"Temporary catchpoint \");\n   else\n     uiout->text (\"Catchpoint \");\n-  uiout->field_int (\"bkptno\", b->number);\n+  uiout->field_signed (\"bkptno\", b->number);\n   uiout->text (\"\\n\");\n   if (uiout->is_mi_like_p ())\n     uiout->field_string (\"disp\", bpdisp_text (b->disposition));\n@@ -8224,7 +8224,7 @@ print_it_catch_exec (bpstat bs)\n       uiout->field_string (\"reason\", async_reason_lookup (EXEC_ASYNC_EXEC));\n       uiout->field_string (\"disp\", bpdisp_text (b->disposition));\n     }\n-  uiout->field_int (\"bkptno\", b->number);\n+  uiout->field_signed (\"bkptno\", b->number);\n   uiout->text (\" (exec'd \");\n   uiout->field_string (\"new-exec\", c->exec_pathname);\n   uiout->text (\"), \");\n@@ -9621,7 +9621,7 @@ print_it_ranged_breakpoint (bpstat bs)\n \t\t      async_reason_lookup (EXEC_ASYNC_BREAKPOINT_HIT));\n       uiout->field_string (\"disp\", bpdisp_text (b->disposition));\n     }\n-  uiout->field_int (\"bkptno\", b->number);\n+  uiout->field_signed (\"bkptno\", b->number);\n   uiout->text (\", \");\n \n   return PRINT_SRC_AND_LOC;\n@@ -10197,7 +10197,7 @@ print_mention_watchpoint (struct breakpoint *b)\n     }\n \n   ui_out_emit_tuple tuple_emitter (uiout, tuple_name);\n-  uiout->field_int (\"number\", b->number);\n+  uiout->field_signed (\"number\", b->number);\n   uiout->text (\": \");\n   uiout->field_string (\"exp\", w->exp_string);\n }\n@@ -10390,7 +10390,7 @@ print_mention_masked_watchpoint (struct breakpoint *b)\n     }\n \n   ui_out_emit_tuple tuple_emitter (uiout, tuple_name);\n-  uiout->field_int (\"number\", b->number);\n+  uiout->field_signed (\"number\", b->number);\n   uiout->text (\": \");\n   uiout->field_string (\"exp\", w->exp_string);\n }\n@@ -12400,7 +12400,7 @@ bkpt_print_it (bpstat bs)\n \t\t\t   async_reason_lookup (EXEC_ASYNC_BREAKPOINT_HIT));\n       uiout->field_string (\"disp\", bpdisp_text (b->disposition));\n     }\n-  uiout->field_int (\"bkptno\", b->number);\n+  uiout->field_signed (\"bkptno\", b->number);\n   uiout->text (\", \");\n \n   return PRINT_SRC_AND_LOC;\n@@ -13333,7 +13333,7 @@ update_static_tracepoint (struct breakpoint *b, struct symtab_and_line sal)\n \t      uiout->field_string (\"fullname\", fullname);\n \t    }\n \n-\t  uiout->field_int (\"line\", sal2.line);\n+\t  uiout->field_signed (\"line\", sal2.line);\n \t  uiout->text (\"\\n\");\n \n \t  b->loc->line_number = sal2.line;"
    },
    {
      "sha": "75a2259ab0b12d31fa2079961491a136f1589b29",
      "filename": "gdb/cli-out.c",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/cli-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/cli-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli-out.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -93,15 +93,13 @@ cli_ui_out::do_end (ui_out_type type)\n /* output an int field */\n \n void\n-cli_ui_out::do_field_int (int fldno, int width, ui_align alignment,\n-\t\t\t  const char *fldname, int value)\n+cli_ui_out::do_field_signed (int fldno, int width, ui_align alignment,\n+\t\t\t     const char *fldname, LONGEST value)\n {\n   if (m_suppress_output)\n     return;\n \n-  std::string str = string_printf (\"%d\", value);\n-\n-  do_field_string (fldno, width, alignment, fldname, str.c_str (),\n+  do_field_string (fldno, width, alignment, fldname, plongest (value),\n \t\t   ui_out_style_kind::DEFAULT);\n }\n "
    },
    {
      "sha": "d28f468a3e78ce95935cd635994df89a2d4d955a",
      "filename": "gdb/cli-out.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/cli-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/cli-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli-out.h?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -45,8 +45,8 @@ class cli_ui_out : public ui_out\n      zero.  */\n   virtual void do_begin (ui_out_type type, const char *id) override;\n   virtual void do_end (ui_out_type type) override;\n-  virtual void do_field_int (int fldno, int width, ui_align align,\n-\t\t\t     const char *fldname, int value) override;\n+  virtual void do_field_signed (int fldno, int width, ui_align align,\n+\t\t\t\tconst char *fldname, LONGEST value) override;\n   virtual void do_field_unsigned (int fldno, int width, ui_align align,\n \t\t\t\t  const char *fldname, ULONGEST value)\n     override;"
    },
    {
      "sha": "103ac2a9773406749aaa2a4204200c8709393ec7",
      "filename": "gdb/darwin-nat-info.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/darwin-nat-info.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/darwin-nat-info.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/darwin-nat-info.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -664,14 +664,14 @@ darwin_debug_regions_recurse (task_t task)\n \t\t\t     unparse_inheritance (r_info.inheritance));\n \tuiout->field_string (\"share-mode\",\n \t\t\t     unparse_share_mode (r_info.share_mode));\n-\tuiout->field_int (\"depth\", r_depth);\n+\tuiout->field_signed (\"depth\", r_depth);\n \tuiout->field_string (\"submap\",\n \t\t\t     r_info.is_submap ? _(\"sm \") : _(\"obj\"));\n \ttag = unparse_user_tag (r_info.user_tag);\n \tif (tag)\n \t  uiout->field_string (\"tag\", tag);\n \telse\n-\t  uiout->field_int (\"tag\", r_info.user_tag);\n+\t  uiout->field_signed (\"tag\", r_info.user_tag);\n       }\n \n       uiout->text (\"\\n\");"
    },
    {
      "sha": "e2b4fd6391859057ebebc4339a4eafeeafc5025e",
      "filename": "gdb/disasm.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/disasm.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -247,7 +247,7 @@ gdb_pretty_print_disassembler::pretty_print_insn (struct ui_out *uiout,\n \t  uiout->field_string (\"func-name\", name.c_str (),\n \t\t\t       ui_out_style_kind::FUNCTION);\n \tuiout->text (\"+\");\n-\tuiout->field_int (\"offset\", offset);\n+\tuiout->field_signed (\"offset\", offset);\n \tuiout->text (\">:\\t\");\n       }\n     else"
    },
    {
      "sha": "0334523ef11764e8209ac1ebd049fa4b76eb3cba",
      "filename": "gdb/gdb_bfd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/gdb_bfd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/gdb_bfd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdb_bfd.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -940,7 +940,7 @@ print_one_bfd (void **slot, void *data)\n   struct ui_out *uiout = (struct ui_out *) data;\n \n   ui_out_emit_tuple tuple_emitter (uiout, NULL);\n-  uiout->field_int (\"refcount\", gdata->refc);\n+  uiout->field_signed (\"refcount\", gdata->refc);\n   uiout->field_string (\"addr\", host_address_to_string (abfd));\n   uiout->field_string (\"filename\", bfd_get_filename (abfd));\n   uiout->text (\"\\n\");"
    },
    {
      "sha": "2d58a11ba85aa0c79479f49719df17928f5a1dc0",
      "filename": "gdb/inferior.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -481,7 +481,7 @@ print_inferior (struct ui_out *uiout, const char *requested_inferiors)\n       else\n \tuiout->field_skip (\"current\");\n \n-      uiout->field_int (\"number\", inf->num);\n+      uiout->field_signed (\"number\", inf->num);\n \n       uiout->field_string (\"target-id\", inferior_pid_to_str (inf->pid));\n \n@@ -496,12 +496,12 @@ print_inferior (struct ui_out *uiout, const char *requested_inferiors)\n       if (inf->vfork_parent)\n \t{\n \t  uiout->text (_(\"\\n\\tis vfork child of inferior \"));\n-\t  uiout->field_int (\"vfork-parent\", inf->vfork_parent->num);\n+\t  uiout->field_signed (\"vfork-parent\", inf->vfork_parent->num);\n \t}\n       if (inf->vfork_child)\n \t{\n \t  uiout->text (_(\"\\n\\tis vfork parent of inferior \"));\n-\t  uiout->field_int (\"vfork-child\", inf->vfork_child->num);\n+\t  uiout->field_signed (\"vfork-child\", inf->vfork_child->num);\n \t}\n \n       uiout->text (\"\\n\");"
    },
    {
      "sha": "963c8c7bd2d943e8a84b09403e0b14e1b9c21036",
      "filename": "gdb/mi/mi-cmd-file.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-cmd-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-cmd-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmd-file.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -53,13 +53,13 @@ mi_cmd_file_list_exec_source_file (const char *command, char **argv, int argc)\n     error (_(\"-file-list-exec-source-file: No symtab\"));\n \n   /* Print to the user the line, filename and fullname.  */\n-  uiout->field_int (\"line\", st.line);\n+  uiout->field_signed (\"line\", st.line);\n   uiout->field_string (\"file\", symtab_to_filename_for_display (st.symtab));\n \n   uiout->field_string (\"fullname\", symtab_to_fullname (st.symtab));\n \n-  uiout->field_int (\"macro-info\",\n-\t\t    COMPUNIT_MACRO_TABLE (SYMTAB_COMPUNIT (st.symtab)) != NULL);\n+  uiout->field_signed (\"macro-info\",\n+\t\t       COMPUNIT_MACRO_TABLE (SYMTAB_COMPUNIT (st.symtab)) != NULL);\n }\n \n /* A callback for map_partial_symbol_filenames.  */"
    },
    {
      "sha": "e8f8d159d2de4579999f757323c4a070c53597aa",
      "filename": "gdb/mi/mi-cmd-stack.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-cmd-stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-cmd-stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmd-stack.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -204,7 +204,7 @@ mi_cmd_stack_info_depth (const char *command, char **argv, int argc)\n        i++, fi = get_prev_frame (fi))\n     QUIT;\n \n-  current_uiout->field_int (\"depth\", i);\n+  current_uiout->field_signed (\"depth\", i);\n }\n \n /* Print a list of the locals for the current frame.  With argument of\n@@ -391,7 +391,7 @@ mi_cmd_stack_list_args (const char *command, char **argv, int argc)\n \t{\n \t  QUIT;\n \t  ui_out_emit_tuple tuple_emitter (uiout, \"frame\");\n-\t  uiout->field_int (\"level\", i);\n+\t  uiout->field_signed (\"level\", i);\n \t  list_args_or_locals (user_frame_print_options,\n \t\t\t       arguments, print_values, fi, skip_unavailable);\n \t}\n@@ -521,7 +521,7 @@ list_arg_or_local (const struct frame_arg *arg, enum what_to_list what,\n   uiout->field_stream (\"name\", stb);\n \n   if (what == all && SYMBOL_IS_ARGUMENT (arg->sym))\n-    uiout->field_int (\"arg\", 1);\n+    uiout->field_signed (\"arg\", 1);\n \n   if (values == PRINT_SIMPLE_VALUES)\n     {"
    },
    {
      "sha": "f5219e0f9b2861ee1a646b978aece30fd4e8fb81",
      "filename": "gdb/mi/mi-cmd-var.c",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-cmd-var.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-cmd-var.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmd-var.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -60,7 +60,7 @@ print_varobj (struct varobj *var, enum print_values print_values,\n \n       uiout->field_string (\"exp\", exp.c_str ());\n     }\n-  uiout->field_int (\"numchild\", varobj_get_num_children (var));\n+  uiout->field_signed (\"numchild\", varobj_get_num_children (var));\n   \n   if (mi_print_value_p (var, print_values))\n     {\n@@ -75,17 +75,17 @@ print_varobj (struct varobj *var, enum print_values print_values,\n \n   thread_id = varobj_get_thread_id (var);\n   if (thread_id > 0)\n-    uiout->field_int (\"thread-id\", thread_id);\n+    uiout->field_signed (\"thread-id\", thread_id);\n \n   if (varobj_get_frozen (var))\n-    uiout->field_int (\"frozen\", 1);\n+    uiout->field_signed (\"frozen\", 1);\n \n   gdb::unique_xmalloc_ptr<char> display_hint = varobj_get_display_hint (var);\n   if (display_hint)\n     uiout->field_string (\"displayhint\", display_hint.get ());\n \n   if (varobj_is_dynamic_p (var))\n-    uiout->field_int (\"dynamic\", 1);\n+    uiout->field_signed (\"dynamic\", 1);\n }\n \n /* VAROBJ operations */\n@@ -138,7 +138,7 @@ mi_cmd_var_create (const char *command, char **argv, int argc)\n \n   print_varobj (var, PRINT_ALL_VALUES, 0 /* don't print expression */);\n \n-  uiout->field_int (\"has_more\", varobj_has_more (var, 0));\n+  uiout->field_signed (\"has_more\", varobj_has_more (var, 0));\n }\n \n void\n@@ -183,7 +183,7 @@ mi_cmd_var_delete (const char *command, char **argv, int argc)\n \n   numdel = varobj_delete (var, children_only_p);\n \n-  uiout->field_int (\"ndeleted\", numdel);\n+  uiout->field_signed (\"ndeleted\", numdel);\n }\n \n /* Parse a string argument into a format value.  */\n@@ -313,7 +313,7 @@ mi_cmd_var_info_num_children (const char *command, char **argv, int argc)\n   /* Get varobj handle, if a valid var obj name was specified.  */\n   var = varobj_get_handle (argv[0]);\n \n-  uiout->field_int (\"numchild\", varobj_get_num_children (var));\n+  uiout->field_signed (\"numchild\", varobj_get_num_children (var));\n }\n \n /* Return 1 if given the argument PRINT_VALUES we should display\n@@ -380,7 +380,7 @@ mi_cmd_var_list_children (const char *command, char **argv, int argc)\n   const std::vector<varobj *> &children\n     = varobj_list_children (var, &from, &to);\n \n-  uiout->field_int (\"numchild\", to - from);\n+  uiout->field_signed (\"numchild\", to - from);\n   if (argc == 2 || argc == 4)\n     print_values = mi_parse_print_values (argv[0]);\n   else\n@@ -409,7 +409,7 @@ mi_cmd_var_list_children (const char *command, char **argv, int argc)\n \t}\n     }\n \n-  uiout->field_int (\"has_more\", varobj_has_more (var, to));\n+  uiout->field_signed (\"has_more\", varobj_has_more (var, to));\n }\n \n void\n@@ -732,19 +732,19 @@ varobj_update_one (struct varobj *var, enum print_values print_values,\n \t}\n \n       if (r.type_changed || r.children_changed)\n-\tuiout->field_int (\"new_num_children\",\n-\t\t\t  varobj_get_num_children (r.varobj));\n+\tuiout->field_signed (\"new_num_children\",\n+\t\t\t     varobj_get_num_children (r.varobj));\n \n       gdb::unique_xmalloc_ptr<char> display_hint\n \t= varobj_get_display_hint (r.varobj);\n       if (display_hint)\n \tuiout->field_string (\"displayhint\", display_hint.get ());\n \n       if (varobj_is_dynamic_p (r.varobj))\n-\tuiout->field_int (\"dynamic\", 1);\n+\tuiout->field_signed (\"dynamic\", 1);\n \n       varobj_get_child_range (r.varobj, &from, &to);\n-      uiout->field_int (\"has_more\", varobj_has_more (r.varobj, to));\n+      uiout->field_signed (\"has_more\", varobj_has_more (r.varobj, to));\n \n       if (!r.newobj.empty ())\n \t{"
    },
    {
      "sha": "9033a61950d5fd4792dca42e3e01c57326aed1d2",
      "filename": "gdb/mi/mi-interp.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-interp.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -633,19 +633,19 @@ mi_on_normal_stop_1 (struct bpstats *bs, int print_frame)\n       if (console_print)\n \tprint_stop_event (mi->cli_uiout);\n \n-      mi_uiout->field_int (\"thread-id\", tp->global_num);\n+      mi_uiout->field_signed (\"thread-id\", tp->global_num);\n       if (non_stop)\n \t{\n \t  ui_out_emit_list list_emitter (mi_uiout, \"stopped-threads\");\n \n-\t  mi_uiout->field_int (NULL, tp->global_num);\n+\t  mi_uiout->field_signed (NULL, tp->global_num);\n \t}\n       else\n \tmi_uiout->field_string (\"stopped-threads\", \"all\");\n \n       core = target_core_of_thread (tp->ptid);\n       if (core != -1)\n-\tmi_uiout->field_int (\"core\", core);\n+\tmi_uiout->field_signed (\"core\", core);\n     }\n   \n   fputs_unfiltered (\"*stopped\", mi->raw_stdout);\n@@ -1034,7 +1034,7 @@ mi_output_solib_attribs (ui_out *uiout, struct so_list *solib)\n   uiout->field_string (\"id\", solib->so_original_name);\n   uiout->field_string (\"target-name\", solib->so_original_name);\n   uiout->field_string (\"host-name\", solib->so_name);\n-  uiout->field_int (\"symbols-loaded\", solib->symbols_loaded);\n+  uiout->field_signed (\"symbols-loaded\", solib->symbols_loaded);\n   if (!gdbarch_has_global_solist (target_gdbarch ()))\n       uiout->field_fmt (\"thread-group\", \"i%d\", current_inferior ()->num);\n "
    },
    {
      "sha": "5dc436bfd8c5a87d81aa6455d9ab1bb467103554",
      "filename": "gdb/mi/mi-main.c",
      "status": "modified",
      "additions": 18,
      "deletions": 18,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-main.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -592,13 +592,13 @@ mi_cmd_thread_list_ids (const char *command, char **argv, int argc)\n \t  current_thread = tp->global_num;\n \n \tnum++;\n-\tcurrent_uiout->field_int (\"thread-id\", tp->global_num);\n+\tcurrent_uiout->field_signed (\"thread-id\", tp->global_num);\n       }\n   }\n \n   if (current_thread != -1)\n-    current_uiout->field_int (\"current-thread-id\", current_thread);\n-  current_uiout->field_int (\"number-of-threads\", num);\n+    current_uiout->field_signed (\"current-thread-id\", current_thread);\n+  current_uiout->field_signed (\"number-of-threads\", num);\n }\n \n void\n@@ -658,7 +658,7 @@ print_one_inferior (struct inferior *inferior, void *xdata)\n \tuiout->field_string (\"exit-code\",\n \t\t\t     int_string (inferior->exit_code, 8, 0, 0, 1));\n       if (inferior->pid != 0)\n-\tuiout->field_int (\"pid\", inferior->pid);\n+\tuiout->field_signed (\"pid\", inferior->pid);\n \n       if (inferior->pspace->pspace_exec_filename != NULL)\n \t{\n@@ -677,7 +677,7 @@ print_one_inferior (struct inferior *inferior, void *xdata)\n \t  ui_out_emit_list list_emitter (uiout, \"cores\");\n \n \t  for (int b : data.cores)\n-\t    uiout->field_int (NULL, b);\n+\t    uiout->field_signed (NULL, b);\n \t}\n \n       if (top_data->recurse)\n@@ -964,7 +964,7 @@ mi_cmd_data_list_changed_registers (const char *command, char **argv, int argc)\n \n \t  if (register_changed_p (regnum, prev_regs.get (),\n \t\t\t\t  this_regs.get ()))\n-\t    uiout->field_int (NULL, regnum);\n+\t    uiout->field_signed (NULL, regnum);\n \t}\n     }\n \n@@ -980,7 +980,7 @@ mi_cmd_data_list_changed_registers (const char *command, char **argv, int argc)\n \t{\n \t  if (register_changed_p (regnum, prev_regs.get (),\n \t\t\t\t  this_regs.get ()))\n-\t    uiout->field_int (NULL, regnum);\n+\t    uiout->field_signed (NULL, regnum);\n \t}\n       else\n \terror (_(\"bad register number\"));\n@@ -1124,7 +1124,7 @@ output_register (struct frame_info *frame, int regnum, int format,\n     return;\n \n   ui_out_emit_tuple tuple_emitter (uiout, NULL);\n-  uiout->field_int (\"number\", regnum);\n+  uiout->field_signed (\"number\", regnum);\n \n   if (format == 'N')\n     format = 0;\n@@ -1353,8 +1353,8 @@ mi_cmd_data_read_memory (const char *command, char **argv, int argc)\n \n   /* Output the header information.  */\n   uiout->field_core_addr (\"addr\", gdbarch, addr);\n-  uiout->field_int (\"nr-bytes\", nr_bytes);\n-  uiout->field_int (\"total-bytes\", total_bytes);\n+  uiout->field_signed (\"nr-bytes\", nr_bytes);\n+  uiout->field_signed (\"total-bytes\", total_bytes);\n   uiout->field_core_addr (\"next-row\", gdbarch, addr + word_size * nr_cols);\n   uiout->field_core_addr (\"prev-row\", gdbarch, addr - word_size * nr_cols);\n   uiout->field_core_addr (\"next-page\", gdbarch, addr + total_bytes);\n@@ -2191,8 +2191,8 @@ mi_load_progress (const char *section_name,\n       {\n \tui_out_emit_tuple tuple_emitter (uiout.get (), NULL);\n \tuiout->field_string (\"section\", section_name);\n-\tuiout->field_int (\"section-size\", total_section);\n-\tuiout->field_int (\"total-size\", grand_total);\n+\tuiout->field_signed (\"section-size\", total_section);\n+\tuiout->field_signed (\"total-size\", grand_total);\n       }\n       mi_out_put (uiout.get (), mi->raw_stdout);\n       fputs_unfiltered (\"\\n\", mi->raw_stdout);\n@@ -2209,10 +2209,10 @@ mi_load_progress (const char *section_name,\n       {\n \tui_out_emit_tuple tuple_emitter (uiout.get (), NULL);\n \tuiout->field_string (\"section\", section_name);\n-\tuiout->field_int (\"section-sent\", sent_so_far);\n-\tuiout->field_int (\"section-size\", total_section);\n-\tuiout->field_int (\"total-sent\", total_sent);\n-\tuiout->field_int (\"total-size\", grand_total);\n+\tuiout->field_signed (\"section-sent\", sent_so_far);\n+\tuiout->field_signed (\"section-size\", total_section);\n+\tuiout->field_signed (\"total-sent\", total_sent);\n+\tuiout->field_signed (\"total-size\", grand_total);\n       }\n       mi_out_put (uiout.get (), mi->raw_stdout);\n       fputs_unfiltered (\"\\n\", mi->raw_stdout);\n@@ -2656,7 +2656,7 @@ mi_cmd_trace_frame_collected (const char *command, char **argv, int argc)\n \n \t    tsv->value_known = target_get_trace_state_variable_value (tsv->number,\n \t\t\t\t\t\t\t\t      &tsv->value);\n-\t    uiout->field_int (\"current\", tsv->value);\n+\t    uiout->field_signed (\"current\", tsv->value);\n \t  }\n \telse\n \t  {\n@@ -2681,7 +2681,7 @@ mi_cmd_trace_frame_collected (const char *command, char **argv, int argc)\n \tui_out_emit_tuple tuple_emitter (uiout, NULL);\n \n \tuiout->field_core_addr (\"address\", gdbarch, r.start);\n-\tuiout->field_int (\"length\", r.length);\n+\tuiout->field_signed (\"length\", r.length);\n \n \tgdb::byte_vector data (r.length);\n "
    },
    {
      "sha": "a6687178259560411e623be0d95fbd821d5e86b4",
      "filename": "gdb/mi/mi-out.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-out.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -35,8 +35,8 @@ mi_ui_out::do_table_begin (int nr_cols, int nr_rows,\n \t\t\t   const char *tblid)\n {\n   open (tblid, ui_out_type_tuple);\n-  do_field_int (-1, -1, ui_left, \"nr_rows\", nr_rows);\n-  do_field_int (-1, -1, ui_left, \"nr_cols\", nr_cols);\n+  do_field_signed (-1, -1, ui_left, \"nr_rows\", nr_rows);\n+  do_field_signed (-1, -1, ui_left, \"nr_cols\", nr_cols);\n   open (\"hdr\", ui_out_type_list);\n }\n \n@@ -67,8 +67,8 @@ mi_ui_out::do_table_header (int width, ui_align alignment,\n \t\t\t    const std::string &col_hdr)\n {\n   open (NULL, ui_out_type_tuple);\n-  do_field_int (0, 0, ui_center, \"width\", width);\n-  do_field_int (0, 0, ui_center, \"alignment\", alignment);\n+  do_field_signed (0, 0, ui_center, \"width\", width);\n+  do_field_signed (0, 0, ui_center, \"alignment\", alignment);\n   do_field_string (0, 0, ui_center, \"col_name\", col_name.c_str (),\n \t\t   ui_out_style_kind::DEFAULT);\n   do_field_string (0, width, alignment, \"colhdr\", col_hdr.c_str (),\n@@ -95,8 +95,8 @@ mi_ui_out::do_end (ui_out_type type)\n /* Output an int field.  */\n \n void\n-mi_ui_out::do_field_int (int fldno, int width, ui_align alignment,\n-\t\t\t const char *fldname, int value)\n+mi_ui_out::do_field_signed (int fldno, int width, ui_align alignment,\n+\t\t\t    const char *fldname, LONGEST value)\n {\n   do_field_string (fldno, width, alignment, fldname, plongest (value),\n \t\t   ui_out_style_kind::DEFAULT);"
    },
    {
      "sha": "01d15e38ba0bfc8c061ee6d29a2e963f42549fbd",
      "filename": "gdb/mi/mi-out.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-out.h?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -52,8 +52,8 @@ class mi_ui_out : public ui_out\n \n   virtual void do_begin (ui_out_type type, const char *id) override;\n   virtual void do_end (ui_out_type type) override;\n-  virtual void do_field_int (int fldno, int width, ui_align align,\n-\t\t\t  const char *fldname, int value) override;\n+  virtual void do_field_signed (int fldno, int width, ui_align align,\n+\t\t\t\tconst char *fldname, LONGEST value) override;\n   virtual void do_field_unsigned (int fldno, int width, ui_align align,\n \t\t\t\t  const char *fldname, ULONGEST value)\n     override;"
    },
    {
      "sha": "63142e8e7e9bcdbb7f33075f4f37f724ea2bd3ea",
      "filename": "gdb/mi/mi-symbol-cmds.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-symbol-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/mi/mi-symbol-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-symbol-cmds.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -56,6 +56,6 @@ mi_cmd_symbol_list_lines (const char *command, char **argv, int argc)\n     {\n       ui_out_emit_tuple tuple_emitter (uiout, NULL);\n       uiout->field_core_addr (\"pc\", gdbarch, SYMTAB_LINETABLE (s)->item[i].pc);\n-      uiout->field_int (\"line\", SYMTAB_LINETABLE (s)->item[i].line);\n+      uiout->field_signed (\"line\", SYMTAB_LINETABLE (s)->item[i].line);\n     }\n }"
    },
    {
      "sha": "366de546bb569c6745a7a2d9a852b349cd7dd204",
      "filename": "gdb/progspace.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/progspace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/progspace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/progspace.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -272,7 +272,7 @@ print_program_space (struct ui_out *uiout, int requested)\n       else\n \tuiout->field_skip (\"current\");\n \n-      uiout->field_int (\"id\", pspace->num);\n+      uiout->field_signed (\"id\", pspace->num);\n \n       if (pspace->pspace_exec_filename)\n \tuiout->field_string (\"exec\", pspace->pspace_exec_filename);"
    },
    {
      "sha": "840faf963c783f2fe9df88485242de321f47dafe",
      "filename": "gdb/python/py-framefilter.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/python/py-framefilter.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/python/py-framefilter.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-framefilter.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -370,7 +370,7 @@ py_print_single_arg (struct ui_out *out,\n   out->text (\"=\");\n \n   if (print_args_field)\n-    out->field_int (\"arg\", 1);\n+    out->field_signed (\"arg\", 1);\n \n   /* For MI print the type, but only for simple values.  This seems\n      weird, but this is how MI choose to format the various output\n@@ -839,8 +839,7 @@ py_print_frame (PyObject *filter, frame_filter_flags flags,\n \t  annotate_frame_begin (print_level ? level : 0,\n \t\t\t\tgdbarch, address);\n \t  out->text (\"#\");\n-\t  out->field_fmt_int (2, ui_left, \"level\",\n-\t\t\t      level);\n+\t  out->field_fmt_signed (2, ui_left, \"level\", level);\n \t}\n     }\n \n@@ -956,7 +955,7 @@ py_print_frame (PyObject *filter, frame_filter_flags flags,\n \n \t      out->text (\":\");\n \t      annotate_frame_source_line ();\n-\t      out->field_int (\"line\", line);\n+\t      out->field_signed (\"line\", line);\n \t    }\n \t}\n       if (out->is_mi_like_p ())"
    },
    {
      "sha": "fa89aa60a3c8996783420547f702c9d48d3d55d1",
      "filename": "gdb/record-btrace.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-btrace.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -617,7 +617,7 @@ btrace_ui_out_decode_error (struct ui_out *uiout, int errcode,\n   if (!(format == BTRACE_FORMAT_PT && errcode > 0))\n     {\n       uiout->text (_(\"decode error (\"));\n-      uiout->field_int (\"errcode\", errcode);\n+      uiout->field_signed (\"errcode\", errcode);\n       uiout->text (_(\"): \"));\n     }\n   uiout->text (errstr);\n@@ -1091,13 +1091,13 @@ btrace_call_history_src_line (struct ui_out *uiout,\n     return;\n \n   uiout->text (\":\");\n-  uiout->field_int (\"min line\", begin);\n+  uiout->field_signed (\"min line\", begin);\n \n   if (end == begin)\n     return;\n \n   uiout->text (\",\");\n-  uiout->field_int (\"max line\", end);\n+  uiout->field_signed (\"max line\", end);\n }\n \n /* Get the name of a branch trace function.  */"
    },
    {
      "sha": "499b80d5777707bb5fc3f04fed382db8ea501230",
      "filename": "gdb/skip.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/skip.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/skip.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/skip.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -399,7 +399,7 @@ info_skip_command (const char *arg, int from_tty)\n \tcontinue;\n \n       ui_out_emit_tuple tuple_emitter (current_uiout, \"blklst-entry\");\n-      current_uiout->field_int (\"number\", e.number ()); /* 1 */\n+      current_uiout->field_signed (\"number\", e.number ()); /* 1 */\n \n       if (e.enabled ())\n \tcurrent_uiout->field_string (\"enabled\", \"y\"); /* 2 */"
    },
    {
      "sha": "a83e55e5699bc5c5e2973c0345fb3e2b4b19361b",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -1269,7 +1269,7 @@ print_source_lines_base (struct symtab *s, int line, int stopline,\n \t}\n       else\n \t{\n-\t  uiout->field_int (\"line\", line);\n+\t  uiout->field_signed (\"line\", line);\n \t  uiout->text (\"\\tin \");\n \n \t  /* CLI expects only the \"file\" field.  TUI expects only the"
    },
    {
      "sha": "ddaee54b306ae4ef115cac781c1ddc410db4af91",
      "filename": "gdb/spu-tdep.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/spu-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/spu-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/spu-tdep.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -2168,12 +2168,12 @@ info_spu_signal_command (const char *args, int from_tty)\n \n   if (current_uiout->is_mi_like_p ())\n     {\n-      current_uiout->field_int (\"signal1_pending\", signal1_pending);\n+      current_uiout->field_signed (\"signal1_pending\", signal1_pending);\n       current_uiout->field_fmt (\"signal1\", \"0x%s\", phex_nz (signal1, 4));\n-      current_uiout->field_int (\"signal1_type\", signal1_type);\n-      current_uiout->field_int (\"signal2_pending\", signal2_pending);\n+      current_uiout->field_signed (\"signal1_type\", signal1_type);\n+      current_uiout->field_signed (\"signal2_pending\", signal2_pending);\n       current_uiout->field_fmt (\"signal2\", \"0x%s\", phex_nz (signal2, 4));\n-      current_uiout->field_int (\"signal2_type\", signal2_type);\n+      current_uiout->field_signed (\"signal2_type\", signal2_type);\n     }\n   else\n     {\n@@ -2415,11 +2415,11 @@ info_spu_dma_cmdlist (gdb_byte *buf, int nr, enum bfd_endian byte_order)\n \tif (spu_mfc_opcode[mfc_cmd_opcode])\n \t  current_uiout->field_string (\"opcode\", spu_mfc_opcode[mfc_cmd_opcode]);\n \telse\n-\t  current_uiout->field_int (\"opcode\", mfc_cmd_opcode);\n+\t  current_uiout->field_signed (\"opcode\", mfc_cmd_opcode);\n \n-\tcurrent_uiout->field_int (\"tag\", mfc_cmd_tag);\n-\tcurrent_uiout->field_int (\"tid\", tclass_id);\n-\tcurrent_uiout->field_int (\"rid\", rclass_id);\n+\tcurrent_uiout->field_signed (\"tag\", mfc_cmd_tag);\n+\tcurrent_uiout->field_signed (\"tid\", tclass_id);\n+\tcurrent_uiout->field_signed (\"rid\", rclass_id);\n \n \tif (ea_valid_p)\n \t  current_uiout->field_fmt (\"ea\", \"0x%s\", phex (mfc_ea, 8));"
    },
    {
      "sha": "959ae652ec21fe42fe42dec154c8ac2633c1f3c0",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -895,8 +895,8 @@ print_frame_info (const frame_print_options &fp_opts,\n       if (print_level)\n         {\n           uiout->text (\"#\");\n-          uiout->field_fmt_int (2, ui_left, \"level\",\n-\t\t\t\tframe_relative_level (frame));\n+          uiout->field_fmt_signed (2, ui_left, \"level\",\n+\t\t\t\t   frame_relative_level (frame));\n         }\n       if (uiout->is_mi_like_p ())\n         {\n@@ -1243,8 +1243,8 @@ print_frame (const frame_print_options &fp_opts,\n     if (print_level)\n       {\n \tuiout->text (\"#\");\n-\tuiout->field_fmt_int (2, ui_left, \"level\",\n-\t\t\t      frame_relative_level (frame));\n+\tuiout->field_fmt_signed (2, ui_left, \"level\",\n+\t\t\t\t frame_relative_level (frame));\n       }\n     get_user_print_options (&opts);\n     if (opts.addressprint)\n@@ -1318,7 +1318,7 @@ print_frame (const frame_print_options &fp_opts,\n \tannotate_frame_source_file_end ();\n \tuiout->text (\":\");\n \tannotate_frame_source_line ();\n-\tuiout->field_int (\"line\", sal.line);\n+\tuiout->field_signed (\"line\", sal.line);\n \tannotate_frame_source_end ();\n       }\n "
    },
    {
      "sha": "485c996e146f597de3208af651bc76c04b971230",
      "filename": "gdb/thread.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -1114,7 +1114,7 @@ print_thread_info_1 (struct ui_out *uiout, const char *requested_threads,\n \t  }\n \n \tif (show_global_ids || uiout->is_mi_like_p ())\n-\t  uiout->field_int (\"id\", tp->global_num);\n+\t  uiout->field_signed (\"id\", tp->global_num);\n \n \t/* For the CLI, we stuff everything into the target-id field.\n \t   This is a gross hack to make the output come out looking\n@@ -1167,7 +1167,7 @@ print_thread_info_1 (struct ui_out *uiout, const char *requested_threads,\n \n \tcore = target_core_of_thread (tp->ptid);\n \tif (uiout->is_mi_like_p () && core != -1)\n-\t  uiout->field_int (\"core\", core);\n+\t  uiout->field_signed (\"core\", core);\n       }\n \n     /* This end scope restores the current thread and the frame\n@@ -1178,7 +1178,7 @@ print_thread_info_1 (struct ui_out *uiout, const char *requested_threads,\n   if (pid == -1 && requested_threads == NULL)\n     {\n       if (uiout->is_mi_like_p () && inferior_ptid != null_ptid)\n-\tuiout->field_int (\"current-thread-id\", current_thread->global_num);\n+\tuiout->field_signed (\"current-thread-id\", current_thread->global_num);\n \n       if (inferior_ptid != null_ptid && current_exited)\n \tuiout->message (\"\\n\\\n@@ -1990,8 +1990,8 @@ print_selected_thread_frame (struct ui_out *uiout,\n     {\n       if (uiout->is_mi_like_p ())\n \t{\n-\t  uiout->field_int (\"new-thread-id\",\n-\t\t\t    inferior_thread ()->global_num);\n+\t  uiout->field_signed (\"new-thread-id\",\n+\t\t\t       inferior_thread ()->global_num);\n \t}\n       else\n \t{"
    },
    {
      "sha": "075bd4c977b75a1463530bcccc47e3e15487c34b",
      "filename": "gdb/tracepoint.c",
      "status": "modified",
      "additions": 14,
      "deletions": 14,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/tracepoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/tracepoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracepoint.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -2000,8 +2000,8 @@ trace_status_mi (int on_stop)\n \t    {\n \t      uiout->field_string (\"stop-reason\", stop_reason);\n \t      if (stopping_tracepoint != -1)\n-\t\tuiout->field_int (\"stopping-tracepoint\",\n-\t\t\t\t  stopping_tracepoint);\n+\t\tuiout->field_signed (\"stopping-tracepoint\",\n+\t\t\t\t     stopping_tracepoint);\n \t      if (ts->stop_reason == tracepoint_error)\n \t\tuiout->field_string (\"error-description\",\n \t\t\t\t     ts->stop_desc);\n@@ -2010,16 +2010,16 @@ trace_status_mi (int on_stop)\n     }\n \n   if (ts->traceframe_count != -1)\n-    uiout->field_int (\"frames\", ts->traceframe_count);\n+    uiout->field_signed (\"frames\", ts->traceframe_count);\n   if (ts->traceframes_created != -1)\n-    uiout->field_int (\"frames-created\", ts->traceframes_created);\n+    uiout->field_signed (\"frames-created\", ts->traceframes_created);\n   if (ts->buffer_size != -1)\n-    uiout->field_int (\"buffer-size\", ts->buffer_size);\n+    uiout->field_signed (\"buffer-size\", ts->buffer_size);\n   if (ts->buffer_free != -1)\n-    uiout->field_int (\"buffer-free\", ts->buffer_free);\n+    uiout->field_signed (\"buffer-free\", ts->buffer_free);\n \n-  uiout->field_int (\"disconnected\",  ts->disconnected_tracing);\n-  uiout->field_int (\"circular\",  ts->circular_buffer);\n+  uiout->field_signed (\"disconnected\",  ts->disconnected_tracing);\n+  uiout->field_signed (\"circular\",  ts->circular_buffer);\n \n   uiout->field_string (\"user-name\", ts->user_name);\n   uiout->field_string (\"notes\", ts->notes);\n@@ -2183,8 +2183,8 @@ tfind_1 (enum trace_find_type type, int num,\n       if (uiout->is_mi_like_p ())\n \t{\n \t  uiout->field_string (\"found\", \"1\");\n-\t  uiout->field_int (\"tracepoint\", tracepoint_number);\n-\t  uiout->field_int (\"traceframe\", traceframe_number);\n+\t  uiout->field_signed (\"tracepoint\", tracepoint_number);\n+\t  uiout->field_signed (\"traceframe\", traceframe_number);\n \t}\n       else\n \t{\n@@ -3665,7 +3665,7 @@ print_one_static_tracepoint_marker (int count,\n \n   /* A counter field to help readability.  This is not a stable\n      identifier!  */\n-  uiout->field_int (\"count\", count);\n+  uiout->field_signed (\"count\", count);\n \n   uiout->field_string (\"marker-id\", marker.str_id.c_str ());\n \n@@ -3713,7 +3713,7 @@ print_one_static_tracepoint_marker (int count,\n       else\n \tuiout->field_skip (\"fullname\");\n \n-      uiout->field_int (\"line\", sal.line);\n+      uiout->field_signed (\"line\", sal.line);\n     }\n   else\n     {\n@@ -3741,12 +3741,12 @@ print_one_static_tracepoint_marker (int count,\n \t    if (ix > 0)\n \t      uiout->text (\", \");\n \t    uiout->text (\"#\");\n-\t    uiout->field_int (\"tracepoint-id\", tracepoints[ix]->number);\n+\t    uiout->field_signed (\"tracepoint-id\", tracepoints[ix]->number);\n \t  }\n       }\n \n       if (uiout->is_mi_like_p ())\n-\tuiout->field_int (\"number-of-tracepoints\", tracepoints.size ());\n+\tuiout->field_signed (\"number-of-tracepoints\", tracepoints.size ());\n       else\n \tuiout->text (\"\\n\");\n     }"
    },
    {
      "sha": "50865ba0465a952fbe32c0a33d6cecf1110d24ec",
      "filename": "gdb/tui/tui-out.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/tui/tui-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/tui/tui-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-out.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -28,8 +28,8 @@\n /* Output an int field.  */\n \n void\n-tui_ui_out::do_field_int (int fldno, int width, ui_align alignment,\n-\t\t\t  const char *fldname, int value)\n+tui_ui_out::do_field_signed (int fldno, int width, ui_align alignment,\n+\t\t\t     const char *fldname, LONGEST value)\n {\n   if (suppress_output ())\n     return;\n@@ -43,7 +43,7 @@ tui_ui_out::do_field_int (int fldno, int width, ui_align alignment,\n     }\n   m_start_of_line++;\n \n-  cli_ui_out::do_field_int (fldno, width, alignment, fldname, value);\n+  cli_ui_out::do_field_signed (fldno, width, alignment, fldname, value);\n }\n \n /* Other cli_field_* end up here so alignment and field separators are"
    },
    {
      "sha": "083094ba75eb2d8ae96e5bcc61146e7bfd71bea6",
      "filename": "gdb/tui/tui-out.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/tui/tui-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/tui/tui-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-out.h?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -32,8 +32,8 @@ class tui_ui_out : public cli_ui_out\n \n protected:\n \n-  void do_field_int (int fldno, int width, ui_align align, const char *fldname,\n-\t\t  int value) override;\n+  void do_field_signed (int fldno, int width, ui_align align, const char *fldname,\n+\t\t\tLONGEST value) override;\n   void do_field_string (int fldno, int width, ui_align align, const char *fldname,\n \t\t\tconst char *string, ui_out_style_kind style) override;\n   void do_field_fmt (int fldno, int width, ui_align align, const char *fldname,"
    },
    {
      "sha": "91662fac4a22f3493e08d8182cd4caaa10e40534",
      "filename": "gdb/ui-out.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/ui-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/ui-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.c?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -438,28 +438,28 @@ ui_out::end (ui_out_type type)\n }\n \n void\n-ui_out::field_int (const char *fldname, int value)\n+ui_out::field_signed (const char *fldname, LONGEST value)\n {\n   int fldno;\n   int width;\n   ui_align align;\n \n   verify_field (&fldno, &width, &align);\n \n-  do_field_int (fldno, width, align, fldname, value);\n+  do_field_signed (fldno, width, align, fldname, value);\n }\n \n void\n-ui_out::field_fmt_int (int input_width, ui_align input_align,\n-\t\t       const char *fldname, int value)\n+ui_out::field_fmt_signed (int input_width, ui_align input_align,\n+\t\t\t  const char *fldname, LONGEST value)\n {\n   int fldno;\n   int width;\n   ui_align align;\n \n   verify_field (&fldno, &width, &align);\n \n-  do_field_int (fldno, input_width, input_align, fldname, value);\n+  do_field_signed (fldno, input_width, input_align, fldname, value);\n }\n \n /* See ui-out.h.  */"
    },
    {
      "sha": "3398e432423448d6d2a035b200f401b800ada079",
      "filename": "gdb/ui-out.h",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381befeedf9316991d47f4213850545a96593d23/gdb/ui-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381befeedf9316991d47f4213850545a96593d23/gdb/ui-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.h?ref=381befeedf9316991d47f4213850545a96593d23",
      "patch": "@@ -107,10 +107,10 @@ class ui_out\n   void begin (ui_out_type type, const char *id);\n   void end (ui_out_type type);\n \n-  void field_int (const char *fldname, int value);\n-  void field_fmt_int (int width, ui_align align, const char *fldname,\n-\t\t      int value);\n-  /* Like field_int, but print an unsigned value.  */\n+  void field_signed (const char *fldname, LONGEST value);\n+  void field_fmt_signed (int width, ui_align align, const char *fldname,\n+\t\t\t LONGEST value);\n+  /* Like field_signed, but print an unsigned value.  */\n   void field_unsigned (const char *fldname, ULONGEST value);\n   void field_core_addr (const char *fldname, struct gdbarch *gdbarch,\n \t\t\tCORE_ADDR address);\n@@ -157,8 +157,8 @@ class ui_out\n \n   virtual void do_begin (ui_out_type type, const char *id) = 0;\n   virtual void do_end (ui_out_type type) = 0;\n-  virtual void do_field_int (int fldno, int width, ui_align align,\n-\t\t\t     const char *fldname, int value) = 0;\n+  virtual void do_field_signed (int fldno, int width, ui_align align,\n+\t\t\t\tconst char *fldname, LONGEST value) = 0;\n   virtual void do_field_unsigned (int fldno, int width, ui_align align,\n \t\t\t\t  const char *fldname, ULONGEST value) = 0;\n   virtual void do_field_skip (int fldno, int width, ui_align align,"
    }
  ]
}