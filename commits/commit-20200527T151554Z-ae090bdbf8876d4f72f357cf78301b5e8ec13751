{
  "sha": "ae090bdbf8876d4f72f357cf78301b5e8ec13751",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWUwOTBiZGJmODg3NmQ0ZjcyZjM1N2NmNzgzMDFiNWU4ZWMxMzc1MQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:13:51Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:15:54Z"
    },
    "message": "Move die_type_hash to dwarf2_per_objfile\n\nThe die_type_hash field can't be shared between multiple obfiles, as it\nholds `struct type` objects, which are objfile-specific.  Move it from\ndwarf2_per_bfd to dwarf2_per_objfile and update all references.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.h (struct dwarf2_per_bfd) <die_type_hash>: Move to\n\tstruct dwarf2_per_objfile.\n\t(struct dwarf2_per_objfile) <die_type_hash>: Move from struct\n\tdwarf2_per_bfd.\n\t* dwarf2/read.c (set_die_type): Update.\n\t(get_die_type_at_offset): Update.\n\nChange-Id: I3589777ed3579bcabafd2ba859d27babe4502bfb",
    "tree": {
      "sha": "029dac3fd824c40ed0b3d8ffa440eb38b65047d0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/029dac3fd824c40ed0b3d8ffa440eb38b65047d0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ae090bdbf8876d4f72f357cf78301b5e8ec13751",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ae090bdbf8876d4f72f357cf78301b5e8ec13751",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ae090bdbf8876d4f72f357cf78301b5e8ec13751",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ae090bdbf8876d4f72f357cf78301b5e8ec13751/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "af758d117e1454daebc6135cb70529b9843c3437",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af758d117e1454daebc6135cb70529b9843c3437",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/af758d117e1454daebc6135cb70529b9843c3437"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 19,
    "deletions": 10
  },
  "files": [
    {
      "sha": "76b8d7b7e8d39039b636234d7a72b352d3f8db09",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae090bdbf8876d4f72f357cf78301b5e8ec13751/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae090bdbf8876d4f72f357cf78301b5e8ec13751/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ae090bdbf8876d4f72f357cf78301b5e8ec13751",
      "patch": "@@ -1,3 +1,12 @@\n+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2/read.h (struct dwarf2_per_bfd) <die_type_hash>: Move to\n+\tstruct dwarf2_per_objfile.\n+\t(struct dwarf2_per_objfile) <die_type_hash>: Move from struct\n+\tdwarf2_per_bfd.\n+\t* dwarf2/read.c (set_die_type): Update.\n+\t(get_die_type_at_offset): Update.\n+\n 2020-05-27  Tom Tromey  <tom@tromey.com>\n \t    Simon Marchi  <simon.marchi@efficios.com>\n "
    },
    {
      "sha": "aa39c883b9b1773efefc05f1b9e0e7df6e8f7475",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae090bdbf8876d4f72f357cf78301b5e8ec13751/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae090bdbf8876d4f72f357cf78301b5e8ec13751/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=ae090bdbf8876d4f72f357cf78301b5e8ec13751",
      "patch": "@@ -23754,8 +23754,8 @@ set_die_type (struct die_info *die, struct type *type, struct dwarf2_cu *cu)\n \t\t\t    cu->per_cu->addr_type ()))\n     type->add_dyn_prop (DYN_PROP_DATA_LOCATION, prop);\n \n-  if (dwarf2_per_objfile->per_bfd->die_type_hash == NULL)\n-    dwarf2_per_objfile->per_bfd->die_type_hash\n+  if (dwarf2_per_objfile->die_type_hash == NULL)\n+    dwarf2_per_objfile->die_type_hash\n       = htab_up (htab_create_alloc (127,\n \t\t\t\t    per_cu_offset_and_type_hash,\n \t\t\t\t    per_cu_offset_and_type_eq,\n@@ -23765,7 +23765,7 @@ set_die_type (struct die_info *die, struct type *type, struct dwarf2_cu *cu)\n   ofs.sect_off = die->sect_off;\n   ofs.type = type;\n   slot = (struct dwarf2_per_cu_offset_and_type **)\n-    htab_find_slot (dwarf2_per_objfile->per_bfd->die_type_hash.get (), &ofs, INSERT);\n+    htab_find_slot (dwarf2_per_objfile->die_type_hash.get (), &ofs, INSERT);\n   if (*slot)\n     complaint (_(\"A problem internal to GDB: DIE %s has type already set\"),\n \t       sect_offset_str (die->sect_off));\n@@ -23785,13 +23785,13 @@ get_die_type_at_offset (sect_offset sect_off,\n   struct dwarf2_per_cu_offset_and_type *slot, ofs;\n   struct dwarf2_per_objfile *dwarf2_per_objfile = per_cu->dwarf2_per_objfile;\n \n-  if (dwarf2_per_objfile->per_bfd->die_type_hash == NULL)\n+  if (dwarf2_per_objfile->die_type_hash == NULL)\n     return NULL;\n \n   ofs.per_cu = per_cu;\n   ofs.sect_off = sect_off;\n   slot = ((struct dwarf2_per_cu_offset_and_type *)\n-\t  htab_find (dwarf2_per_objfile->per_bfd->die_type_hash.get (), &ofs));\n+\t  htab_find (dwarf2_per_objfile->die_type_hash.get (), &ofs));\n   if (slot)\n     return slot->type;\n   else"
    },
    {
      "sha": "2897ea6e6013c3428028b2ab9bcf5b14e565003d",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae090bdbf8876d4f72f357cf78301b5e8ec13751/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae090bdbf8876d4f72f357cf78301b5e8ec13751/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=ae090bdbf8876d4f72f357cf78301b5e8ec13751",
      "patch": "@@ -229,11 +229,6 @@ struct dwarf2_per_bfd\n      symbols.  */\n   bool reading_partial_symbols = false;\n \n-  /* Table mapping type DIEs to their struct type *.\n-     This is NULL if not allocated yet.\n-     The mapping is done via (CU/TU + DIE offset) -> type.  */\n-  htab_up die_type_hash;\n-\n   /* The CUs we recently read.  */\n   std::vector<dwarf2_per_cu_data *> just_read_cus;\n \n@@ -310,6 +305,11 @@ struct dwarf2_per_objfile\n      other objfiles backed by the same BFD.  */\n   struct dwarf2_per_bfd *per_bfd;\n \n+  /* Table mapping type DIEs to their struct type *.\n+     This is nullptr if not allocated yet.\n+     The mapping is done via (CU/TU + DIE offset) -> type.  */\n+  htab_up die_type_hash;\n+\n private:\n   /* Hold the corresponding compunit_symtab for each CU or TU.  This\n      is indexed by dwarf2_per_cu_data::index.  A NULL value means"
    }
  ]
}