{
  "sha": "bc30a119f3e32321a3116ab4b0d415a3c332e9a3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmMzMGExMTlmM2UzMjMyMWEzMTE2YWI0YjBkNDE1YTNjMzMyZTlhMw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-25T07:45:46Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-25T07:47:04Z"
    },
    "message": "Regen cris files\n\n\t* cris-desc.c: Regenerate.\n\t* cris-desc.h: Regenerate.\n\t* cris-opc.h: Regenerate.\n\t* po/POTFILES.in: Regenerate.",
    "tree": {
      "sha": "18bb0e90273af5001010725b17ecc54ab8649771",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/18bb0e90273af5001010725b17ecc54ab8649771"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bc30a119f3e32321a3116ab4b0d415a3c332e9a3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc30a119f3e32321a3116ab4b0d415a3c332e9a3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bc30a119f3e32321a3116ab4b0d415a3c332e9a3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc30a119f3e32321a3116ab4b0d415a3c332e9a3/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5d7f11f0e76ca290e3745c8836b92a5266cb84e2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d7f11f0e76ca290e3745c8836b92a5266cb84e2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5d7f11f0e76ca290e3745c8836b92a5266cb84e2"
    }
  ],
  "stats": {
    "total": 97,
    "additions": 67,
    "deletions": 30
  },
  "files": [
    {
      "sha": "fcb30c34701a9f58118438d912173663c484d679",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc30a119f3e32321a3116ab4b0d415a3c332e9a3/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc30a119f3e32321a3116ab4b0d415a3c332e9a3/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=bc30a119f3e32321a3116ab4b0d415a3c332e9a3",
      "patch": "@@ -1,3 +1,10 @@\n+2021-05-25  Alan Modra  <amodra@gmail.com>\n+\n+\t* cris-desc.c: Regenerate.\n+\t* cris-desc.h: Regenerate.\n+\t* cris-opc.h: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n 2021-05-24  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Makefile.am (HFILES): Add cris-desc.h & cris-opc.h."
    },
    {
      "sha": "af81a9ad4de8d0ad5ec0ec0eb9cdaf815e0801da",
      "filename": "opcodes/cris-desc.c",
      "status": "modified",
      "additions": 35,
      "deletions": 26,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc30a119f3e32321a3116ab4b0d415a3c332e9a3/opcodes/cris-desc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc30a119f3e32321a3116ab4b0d415a3c332e9a3/opcodes/cris-desc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/cris-desc.c?ref=bc30a119f3e32321a3116ab4b0d415a3c332e9a3",
      "patch": "@@ -2,7 +2,7 @@\n \n THIS FILE IS MACHINE GENERATED WITH CGEN.\n \n-Copyright 1996-2021 Free Software Foundation, Inc.\n+Copyright (C) 1996-2021 Free Software Foundation, Inc.\n \n This file is part of the GNU Binutils and/or GDB, the GNU debugger.\n \n@@ -17,7 +17,8 @@ This file is part of the GNU Binutils and/or GDB, the GNU debugger.\n    License for more details.\n \n    You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n+   with this program; if not, write to the Free Software Foundation, Inc.,\n+   51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.\n \n */\n \n@@ -2450,6 +2451,11 @@ init_tables (void)\n {\n }\n \n+#ifndef opcodes_error_handler\n+#define opcodes_error_handler(...) \\\n+  fprintf (stderr, __VA_ARGS__); fputc ('\\n', stderr)\n+#endif\n+\n static const CGEN_MACH * lookup_mach_via_bfd_name (const CGEN_MACH *, const char *);\n static void build_hw_table      (CGEN_CPU_TABLE *);\n static void build_ifield_table  (CGEN_CPU_TABLE *);\n@@ -2468,7 +2474,7 @@ lookup_mach_via_bfd_name (const CGEN_MACH *table, const char *name)\n \treturn table;\n       ++table;\n     }\n-  abort ();\n+  return NULL;\n }\n \n /* Subroutine of cris_cgen_cpu_open to build the hardware table.  */\n@@ -2610,8 +2616,11 @@ cris_cgen_rebuild_tables (CGEN_CPU_TABLE *cd)\n \t{\n \t  if (cd->insn_chunk_bitsize != 0 && cd->insn_chunk_bitsize != mach->insn_chunk_bitsize)\n \t    {\n-\t      fprintf (stderr, \"cris_cgen_rebuild_tables: conflicting insn-chunk-bitsize values: `%d' vs. `%d'\\n\",\n-\t\t       cd->insn_chunk_bitsize, mach->insn_chunk_bitsize);\n+\t      opcodes_error_handler\n+\t\t(/* xgettext:c-format */\n+\t\t _(\"internal error: cris_cgen_rebuild_tables: \"\n+\t\t   \"conflicting insn-chunk-bitsize values: `%d' vs. `%d'\"),\n+\t\t cd->insn_chunk_bitsize, mach->insn_chunk_bitsize);\n \t      abort ();\n \t    }\n \n@@ -2642,6 +2651,7 @@ cris_cgen_rebuild_tables (CGEN_CPU_TABLE *cd)\n    CGEN_CPU_OPEN_MACHS:   bitmap of values in enum mach_attr\n    CGEN_CPU_OPEN_BFDMACH: specify 1 mach using bfd name\n    CGEN_CPU_OPEN_ENDIAN:  specify endian choice\n+   CGEN_CPU_OPEN_INSN_ENDIAN: specify instruction endian choice\n    CGEN_CPU_OPEN_END:     terminates arguments\n \n    ??? Simultaneous multiple isas might not make sense, but it's not (yet)\n@@ -2655,6 +2665,7 @@ cris_cgen_cpu_open (enum cgen_cpu_open_arg arg_type, ...)\n   CGEN_BITSET *isas = 0;  /* 0 = \"unspecified\" */\n   unsigned int machs = 0; /* 0 = \"unspecified\" */\n   enum cgen_endian endian = CGEN_ENDIAN_UNKNOWN;\n+  enum cgen_endian insn_endian = CGEN_ENDIAN_UNKNOWN;\n   va_list ap;\n \n   if (! init_p)\n@@ -2682,15 +2693,22 @@ cris_cgen_cpu_open (enum cgen_cpu_open_arg arg_type, ...)\n \t    const CGEN_MACH *mach =\n \t      lookup_mach_via_bfd_name (cris_cgen_mach_table, name);\n \n-\t    machs |= 1 << mach->num;\n+\t    if (mach != NULL)\n+\t      machs |= 1 << mach->num;\n \t    break;\n \t  }\n \tcase CGEN_CPU_OPEN_ENDIAN :\n \t  endian = va_arg (ap, enum cgen_endian);\n \t  break;\n+\tcase CGEN_CPU_OPEN_INSN_ENDIAN :\n+\t  insn_endian = va_arg (ap, enum cgen_endian);\n+\t  break;\n \tdefault :\n-\t  fprintf (stderr, \"cris_cgen_cpu_open: unsupported argument `%d'\\n\",\n-\t\t   arg_type);\n+\t  opcodes_error_handler\n+\t    (/* xgettext:c-format */\n+\t     _(\"internal error: cris_cgen_cpu_open: \"\n+\t       \"unsupported argument `%d'\"),\n+\t     arg_type);\n \t  abort (); /* ??? return NULL? */\n \t}\n       arg_type = va_arg (ap, enum cgen_cpu_open_arg);\n@@ -2705,18 +2723,17 @@ cris_cgen_cpu_open (enum cgen_cpu_open_arg arg_type, ...)\n   if (endian == CGEN_ENDIAN_UNKNOWN)\n     {\n       /* ??? If target has only one, could have a default.  */\n-      fprintf (stderr, \"cris_cgen_cpu_open: no endianness specified\\n\");\n+      opcodes_error_handler\n+\t(/* xgettext:c-format */\n+\t _(\"internal error: cris_cgen_cpu_open: no endianness specified\"));\n       abort ();\n     }\n \n   cd->isas = cgen_bitset_copy (isas);\n   cd->machs = machs;\n   cd->endian = endian;\n-  /* FIXME: for the sparc case we can determine insn-endianness statically.\n-     The worry here is where both data and insn endian can be independently\n-     chosen, in which case this function will need another argument.\n-     Actually, will want to allow for more arguments in the future anyway.  */\n-  cd->insn_endian = endian;\n+  cd->insn_endian\n+    = (insn_endian == CGEN_ENDIAN_UNKNOWN ? endian : insn_endian);\n \n   /* Table (re)builder.  */\n   cd->rebuild_tables = cris_cgen_rebuild_tables;\n@@ -2766,18 +2783,10 @@ cris_cgen_cpu_close (CGEN_CPU_DESC cd)\n \t  regfree (CGEN_INSN_RX (insns));\n     }  \n \n-  if (cd->macro_insn_table.init_entries)\n-    free ((CGEN_INSN *) cd->macro_insn_table.init_entries);\n-\n-  if (cd->insn_table.init_entries)\n-    free ((CGEN_INSN *) cd->insn_table.init_entries);\n-\n-  if (cd->hw_table.entries)\n-    free ((CGEN_HW_ENTRY *) cd->hw_table.entries);\n-\n-  if (cd->operand_table.entries)\n-    free ((CGEN_HW_ENTRY *) cd->operand_table.entries);\n-\n+  free ((CGEN_INSN *) cd->macro_insn_table.init_entries);\n+  free ((CGEN_INSN *) cd->insn_table.init_entries);\n+  free ((CGEN_HW_ENTRY *) cd->hw_table.entries);\n+  free ((CGEN_HW_ENTRY *) cd->operand_table.entries);\n   free (cd);\n }\n "
    },
    {
      "sha": "2b608ed65024250cb7b60bab088d2c8e6940258b",
      "filename": "opcodes/cris-desc.h",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc30a119f3e32321a3116ab4b0d415a3c332e9a3/opcodes/cris-desc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc30a119f3e32321a3116ab4b0d415a3c332e9a3/opcodes/cris-desc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/cris-desc.h?ref=bc30a119f3e32321a3116ab4b0d415a3c332e9a3",
      "patch": "@@ -2,7 +2,7 @@\n \n THIS FILE IS MACHINE GENERATED WITH CGEN.\n \n-Copyright 1996-2021 Free Software Foundation, Inc.\n+Copyright (C) 1996-2021 Free Software Foundation, Inc.\n \n This file is part of the GNU Binutils and/or GDB, the GNU debugger.\n \n@@ -17,13 +17,18 @@ This file is part of the GNU Binutils and/or GDB, the GNU debugger.\n    License for more details.\n \n    You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n+   with this program; if not, write to the Free Software Foundation, Inc.,\n+   51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.\n \n */\n \n #ifndef CRIS_CPU_H\n #define CRIS_CPU_H\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #define CGEN_ARCH cris\n \n /* Given symbol S, return cris_cgen_<S>.  */\n@@ -387,4 +392,8 @@ extern const CGEN_HW_ENTRY cris_cgen_hw_table[];\n \n \n \n+   #ifdef __cplusplus\n+   }\n+   #endif\n+\n #endif /* CRIS_CPU_H */"
    },
    {
      "sha": "d7ed8dc1aa149b6c070d96f2eb6a81614f3d4414",
      "filename": "opcodes/cris-opc.h",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc30a119f3e32321a3116ab4b0d415a3c332e9a3/opcodes/cris-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc30a119f3e32321a3116ab4b0d415a3c332e9a3/opcodes/cris-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/cris-opc.h?ref=bc30a119f3e32321a3116ab4b0d415a3c332e9a3",
      "patch": "@@ -2,7 +2,7 @@\n \n THIS FILE IS MACHINE GENERATED WITH CGEN.\n \n-Copyright 1996-2021 Free Software Foundation, Inc.\n+Copyright (C) 1996-2021 Free Software Foundation, Inc.\n \n This file is part of the GNU Binutils and/or GDB, the GNU debugger.\n \n@@ -17,13 +17,18 @@ This file is part of the GNU Binutils and/or GDB, the GNU debugger.\n    License for more details.\n \n    You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n+   with this program; if not, write to the Free Software Foundation, Inc.,\n+   51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.\n \n */\n \n #ifndef CRIS_OPC_H\n #define CRIS_OPC_H\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* Enum declaration for cris instruction types.  */\n typedef enum cgen_insn_type {\n   CRIS_INSN_INVALID, CRIS_INSN_NOP, CRIS_INSN_MOVE_B_R, CRIS_INSN_MOVE_W_R\n@@ -151,4 +156,8 @@ struct cgen_fields\n }\n \n \n+   #ifdef __cplusplus\n+   }\n+   #endif\n+\n #endif /* CRIS_OPC_H */"
    },
    {
      "sha": "0659b99b39b11e43ad68681a09480ab445640e11",
      "filename": "opcodes/po/POTFILES.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc30a119f3e32321a3116ab4b0d415a3c332e9a3/opcodes/po/POTFILES.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc30a119f3e32321a3116ab4b0d415a3c332e9a3/opcodes/po/POTFILES.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/po/POTFILES.in?ref=bc30a119f3e32321a3116ab4b0d415a3c332e9a3",
      "patch": "@@ -30,8 +30,11 @@ cgen-dis.c\n cgen-opc.c\n cr16-dis.c\n cr16-opc.c\n+cris-desc.c\n+cris-desc.h\n cris-dis.c\n cris-opc.c\n+cris-opc.h\n crx-dis.c\n crx-opc.c\n csky-dis.c"
    }
  ]
}