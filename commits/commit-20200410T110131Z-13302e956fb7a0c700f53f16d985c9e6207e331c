{
  "sha": "13302e956fb7a0c700f53f16d985c9e6207e331c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTMzMDJlOTU2ZmI3YTBjNzAwZjUzZjE2ZDk4NWM5ZTYyMDdlMzMxYw==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-04-09T14:33:20Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-04-10T11:01:31Z"
    },
    "message": "Fix debugging of WOW64 processes\n\nThe new code regarding pending stops only checks for EXCEPTION_BREAKPOINT,\nbut for WOW64 processes STATUS_WX86_BREAKPOINT is necessary as well.\n\nAlso, ignore_first_breakpoint is used now in nat/windows-nat.c as well,\nbut was not available there.\n\ngdb/ChangeLog:\n\n2020-04-10  Hannes Domani  <ssbssa@yahoo.de>\n\n\t* nat/windows-nat.c (STATUS_WX86_BREAKPOINT, STATUS_WX86_SINGLE_STEP):\n\tMove to...\n\t* nat/windows-nat.h (STATUS_WX86_BREAKPOINT, STATUS_WX86_SINGLE_STEP):\n\t... here.\n\t* windows-nat.c (windows_nat_target::get_windows_debug_event):\n\tCheck for STATUS_WX86_BREAKPOINT.\n\t(windows_nat_target::wait): Same.",
    "tree": {
      "sha": "3fd9fe1b448cd685717fabccbc62e31ca2fd5e1d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3fd9fe1b448cd685717fabccbc62e31ca2fd5e1d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/13302e956fb7a0c700f53f16d985c9e6207e331c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13302e956fb7a0c700f53f16d985c9e6207e331c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/13302e956fb7a0c700f53f16d985c9e6207e331c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13302e956fb7a0c700f53f16d985c9e6207e331c/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a5d214978ffff7d4b3df9b89706c1df4f0ecd64e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a5d214978ffff7d4b3df9b89706c1df4f0ecd64e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a5d214978ffff7d4b3df9b89706c1df4f0ecd64e"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 30,
    "deletions": 8
  },
  "files": [
    {
      "sha": "a961511b46ceb79782f311809e78737bffe76352",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13302e956fb7a0c700f53f16d985c9e6207e331c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13302e956fb7a0c700f53f16d985c9e6207e331c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=13302e956fb7a0c700f53f16d985c9e6207e331c",
      "patch": "@@ -1,3 +1,13 @@\n+2020-04-10  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* nat/windows-nat.c (STATUS_WX86_BREAKPOINT, STATUS_WX86_SINGLE_STEP):\n+\tMove to...\n+\t* nat/windows-nat.h (STATUS_WX86_BREAKPOINT, STATUS_WX86_SINGLE_STEP):\n+\t... here.\n+\t* windows-nat.c (windows_nat_target::get_windows_debug_event):\n+\tCheck for STATUS_WX86_BREAKPOINT.\n+\t(windows_nat_target::wait): Same.\n+\n 2020-04-10  Tom de Vries  <tdevries@suse.de>\n \n \tPR cli/25808"
    },
    {
      "sha": "cd7c1d177c6c2453f3feaf3174096cf057ec2368",
      "filename": "gdb/nat/windows-nat.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13302e956fb7a0c700f53f16d985c9e6207e331c/gdb/nat/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13302e956fb7a0c700f53f16d985c9e6207e331c/gdb/nat/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/windows-nat.c?ref=13302e956fb7a0c700f53f16d985c9e6207e331c",
      "patch": "@@ -20,9 +20,6 @@\n #include \"nat/windows-nat.h\"\n #include \"gdbsupport/common-debug.h\"\n \n-#define STATUS_WX86_BREAKPOINT 0x4000001F\n-#define STATUS_WX86_SINGLE_STEP 0x4000001E\n-\n namespace windows_nat\n {\n \n@@ -44,6 +41,10 @@ DWORD desired_stop_thread_id = -1;\n std::vector<pending_stop> pending_stops;\n EXCEPTION_RECORD siginfo_er;\n \n+#ifdef __x86_64__\n+bool ignore_first_breakpoint = false;\n+#endif\n+\n /* Note that 'debug_events' must be locally defined in the relevant\n    functions.  */\n #define DEBUG_EVENTS(x)\tif (debug_events) debug_printf x"
    },
    {
      "sha": "aea1519672d4f72aac0680504be03b5db8b8ad44",
      "filename": "gdb/nat/windows-nat.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13302e956fb7a0c700f53f16d985c9e6207e331c/gdb/nat/windows-nat.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13302e956fb7a0c700f53f16d985c9e6207e331c/gdb/nat/windows-nat.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/windows-nat.h?ref=13302e956fb7a0c700f53f16d985c9e6207e331c",
      "patch": "@@ -25,6 +25,9 @@\n #include \"gdbsupport/gdb_optional.h\"\n #include \"target/waitstatus.h\"\n \n+#define STATUS_WX86_BREAKPOINT 0x4000001F\n+#define STATUS_WX86_SINGLE_STEP 0x4000001E\n+\n namespace windows_nat\n {\n \n@@ -202,6 +205,11 @@ extern std::vector<pending_stop> pending_stops;\n /* Contents of $_siginfo */\n extern EXCEPTION_RECORD siginfo_er;\n \n+#ifdef __x86_64__\n+/* Ignore first breakpoint exception of WOW64 process */\n+extern bool ignore_first_breakpoint;\n+#endif\n+\n /* Return the name of the DLL referenced by H at ADDRESS.  UNICODE\n    determines what sort of string is read from the inferior.  Returns\n    the name of the DLL, or NULL on error.  If a name is returned, it"
    },
    {
      "sha": "881240c6934751f1317a63f051a9b9f9ab85058b",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 8,
      "deletions": 5,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13302e956fb7a0c700f53f16d985c9e6207e331c/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13302e956fb7a0c700f53f16d985c9e6207e331c/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=13302e956fb7a0c700f53f16d985c9e6207e331c",
      "patch": "@@ -235,7 +235,6 @@ static int saw_create;\n static int open_process_used = 0;\n #ifdef __x86_64__\n static bool wow64_process = false;\n-static bool ignore_first_breakpoint = false;\n #endif\n \n /* User options.  */\n@@ -1721,8 +1720,10 @@ windows_nat_target::get_windows_debug_event (int pid,\n \t\t     thread_id, desired_stop_thread_id));\n \n       if (current_event.dwDebugEventCode == EXCEPTION_DEBUG_EVENT\n-\t  && (current_event.u.Exception.ExceptionRecord.ExceptionCode\n-\t      == EXCEPTION_BREAKPOINT)\n+\t  && ((current_event.u.Exception.ExceptionRecord.ExceptionCode\n+\t       == EXCEPTION_BREAKPOINT)\n+\t      || (current_event.u.Exception.ExceptionRecord.ExceptionCode\n+\t\t  == STATUS_WX86_BREAKPOINT))\n \t  && windows_initialization_done)\n \t{\n \t  ptid_t ptid = ptid_t (current_event.dwProcessId, thread_id, 0);\n@@ -1801,8 +1802,10 @@ windows_nat_target::wait (ptid_t ptid, struct target_waitstatus *ourstatus,\n \t    {\n \t      current_windows_thread->stopped_at_software_breakpoint = false;\n \t      if (current_event.dwDebugEventCode == EXCEPTION_DEBUG_EVENT\n-\t\t  && (current_event.u.Exception.ExceptionRecord.ExceptionCode\n-\t\t      == EXCEPTION_BREAKPOINT)\n+\t\t  && ((current_event.u.Exception.ExceptionRecord.ExceptionCode\n+\t\t       == EXCEPTION_BREAKPOINT)\n+\t\t      || (current_event.u.Exception.ExceptionRecord.ExceptionCode\n+\t\t\t  == STATUS_WX86_BREAKPOINT))\n \t\t  && windows_initialization_done)\n \t\tcurrent_windows_thread->stopped_at_software_breakpoint = true;\n \t    }"
    }
  ]
}