{
  "sha": "431b3eadc4f842231d404e7e995ae5c1dbd28414",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDMxYjNlYWRjNGY4NDIyMzFkNDA0ZTdlOTk1YWU1YzFkYmQyODQxNA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T20:10:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T20:10:25Z"
    },
    "message": "Don't cast a tui_win_info directly to tui_gen_win_info\n\nI found a few spots that directly cast a tui_win_info to a\ntui_gen_win_info.  However, I think it's a bit better here to take the\naddress of the \"generic\" member.  As far as I know, nothing relies on\nbeing able to downcast here, so this gives us the freedom to rearrange\nthe structure.\n\ngdb/ChangeLog\n2019-06-16  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-wingeneral.c (tui_unhighlight_win, tui_highlight_win)\n\t(make_all_visible): Use address of member.",
    "tree": {
      "sha": "316b95dfb23476a648ad6a645ef424be670aa690",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/316b95dfb23476a648ad6a645ef424be670aa690"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/431b3eadc4f842231d404e7e995ae5c1dbd28414",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/431b3eadc4f842231d404e7e995ae5c1dbd28414",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/431b3eadc4f842231d404e7e995ae5c1dbd28414",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/431b3eadc4f842231d404e7e995ae5c1dbd28414/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d04b44a16cdfde95de487bcedd541c6e71d82676",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d04b44a16cdfde95de487bcedd541c6e71d82676",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d04b44a16cdfde95de487bcedd541c6e71d82676"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 8,
    "deletions": 3
  },
  "files": [
    {
      "sha": "cfc8e3d30de46c5a5b3437c89d4e909ae59807af",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/431b3eadc4f842231d404e7e995ae5c1dbd28414/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/431b3eadc4f842231d404e7e995ae5c1dbd28414/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=431b3eadc4f842231d404e7e995ae5c1dbd28414",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-16  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-wingeneral.c (tui_unhighlight_win, tui_highlight_win)\n+\t(make_all_visible): Use address of member.\n+\n 2019-06-16  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-data.c (tui_clear_win_detail, init_win_info)"
    },
    {
      "sha": "cacc0b844540316e6e8003cc7ca19532a54d90cd",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/431b3eadc4f842231d404e7e995ae5c1dbd28414/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/431b3eadc4f842231d404e7e995ae5c1dbd28414/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=431b3eadc4f842231d404e7e995ae5c1dbd28414",
      "patch": "@@ -112,7 +112,7 @@ tui_unhighlight_win (struct tui_win_info *win_info)\n   if (win_info != NULL \n       && win_info->generic.handle != NULL)\n     {\n-      box_win ((struct tui_gen_win_info *) win_info, NO_HILITE);\n+      box_win (&win_info->generic, NO_HILITE);\n       wrefresh (win_info->generic.handle);\n       tui_set_win_highlight (win_info, 0);\n     }\n@@ -126,7 +126,7 @@ tui_highlight_win (struct tui_win_info *win_info)\n       && win_info->can_highlight\n       && win_info->generic.handle != NULL)\n     {\n-      box_win ((struct tui_gen_win_info *) win_info, HILITE);\n+      box_win (&win_info->generic, HILITE);\n       wrefresh (win_info->generic.handle);\n       tui_set_win_highlight (win_info, 1);\n     }\n@@ -227,7 +227,7 @@ make_all_visible (int visible)\n \t  if (tui_win_is_source_type ((tui_win_list[i])->generic.type))\n \t    make_visible ((tui_win_list[i])->detail.source_info.execution_info,\n \t\t\t  visible);\n-\t  make_visible ((struct tui_gen_win_info *) tui_win_list[i], visible);\n+\t  make_visible (&tui_win_list[i]->generic, visible);\n \t}\n     }\n "
    }
  ]
}