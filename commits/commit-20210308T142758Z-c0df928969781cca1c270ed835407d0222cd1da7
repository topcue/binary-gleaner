{
  "sha": "c0df928969781cca1c270ed835407d0222cd1da7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzBkZjkyODk2OTc4MWNjYTFjMjcwZWQ4MzU0MDdkMDIyMmNkMWRhNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:58Z"
    },
    "message": "Split out eval_op_var_msym_value\n\nThis splits OP_VAR_MSYM_VALUE into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (eval_op_var_msym_value): New function.\n\t(evaluate_subexp_standard): Use it.",
    "tree": {
      "sha": "8987198d4ae36da5360e1b4e574e2aad30040311",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8987198d4ae36da5360e1b4e574e2aad30040311"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c0df928969781cca1c270ed835407d0222cd1da7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0df928969781cca1c270ed835407d0222cd1da7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c0df928969781cca1c270ed835407d0222cd1da7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0df928969781cca1c270ed835407d0222cd1da7/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "50b98adc3ce99a89bf3ca14cf90ff30e905440b5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/50b98adc3ce99a89bf3ca14cf90ff30e905440b5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/50b98adc3ce99a89bf3ca14cf90ff30e905440b5"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 24,
    "deletions": 9
  },
  "files": [
    {
      "sha": "3e13478f885e40810a07bb9a11e1449c021feaee",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0df928969781cca1c270ed835407d0222cd1da7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0df928969781cca1c270ed835407d0222cd1da7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c0df928969781cca1c270ed835407d0222cd1da7",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (eval_op_var_msym_value): New function.\n+\t(evaluate_subexp_standard): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (eval_op_var_entry_value): New function."
    },
    {
      "sha": "ee7712281024e6d4c29fbe9d2841ec9d2108c037",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 19,
      "deletions": 9,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0df928969781cca1c270ed835407d0222cd1da7/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0df928969781cca1c270ed835407d0222cd1da7/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=c0df928969781cca1c270ed835407d0222cd1da7",
      "patch": "@@ -1218,6 +1218,22 @@ eval_op_var_entry_value (struct type *expect_type, struct expression *exp,\n   return SYMBOL_COMPUTED_OPS (sym)->read_variable_at_entry (sym, frame);\n }\n \n+/* Helper function that implements the body of OP_VAR_MSYM_VALUE.  */\n+\n+static struct value *\n+eval_op_var_msym_value (struct type *expect_type, struct expression *exp,\n+\t\t\tenum noside noside, bool outermost_p,\n+\t\t\tminimal_symbol *msymbol, struct objfile *objfile)\n+{\n+  value *val = evaluate_var_msym_value (noside, objfile, msymbol);\n+\n+  struct type *type = value_type (val);\n+  if (type->code () == TYPE_CODE_ERROR\n+      && (noside != EVAL_AVOID_SIDE_EFFECTS || !outermost_p))\n+    error_unknown_type (msymbol->print_name ());\n+  return val;\n+}\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,\n@@ -1280,15 +1296,9 @@ evaluate_subexp_standard (struct type *expect_type,\n \t(*pos) += 3;\n \n \tminimal_symbol *msymbol = exp->elts[pc + 2].msymbol;\n-\tvalue *val = evaluate_var_msym_value (noside,\n-\t\t\t\t\t      exp->elts[pc + 1].objfile,\n-\t\t\t\t\t      msymbol);\n-\n-\ttype = value_type (val);\n-\tif (type->code () == TYPE_CODE_ERROR\n-\t    && (noside != EVAL_AVOID_SIDE_EFFECTS || pc != 0))\n-\t  error_unknown_type (msymbol->print_name ());\n-\treturn val;\n+\treturn eval_op_var_msym_value (expect_type, exp, noside,\n+\t\t\t\t       pc == 0, msymbol,\n+\t\t\t\t       exp->elts[pc + 1].objfile);\n       }\n \n     case OP_VAR_ENTRY_VALUE:"
    }
  ]
}