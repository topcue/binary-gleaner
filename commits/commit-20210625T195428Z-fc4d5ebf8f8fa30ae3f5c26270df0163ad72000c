{
  "sha": "fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmM0ZDVlYmY4ZjhmYTMwYWUzZjVjMjYyNzBkZjAxNjNhZDcyMDAwYw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-04-15T10:29:55Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-06-25T19:54:28Z"
    },
    "message": "gdb: add new function quick_symbol_functions::has_unexpanded_symbols\n\nAdds a new function to the quick_symbol_functions API to let us know\nif there are any unexpanded symbols.  This functionality is required\nby a later commit.  After this commit the functionality is unused, and\nuntested.\n\nThe new function objfile::has_unexpanded_symtabs is added to the\nsymfile-debug.c file which is a little strange, but this\nis (currently) where many of the other objfile::* functions (that call\nonto the quick_symbol_functions) are defined, so I'm reluctant to\nbreak this pattern.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (struct dwarf2_base_index_functions)\n\t<has_unexpanded_symtabs>: Declare.\n\t(dwarf2_base_index_functions::has_unexpanded_symtabs): Define new\n\tfunction.\n\t* objfiles.h (struct objfile) <has_unexpanded_symtabs>: Declare.\n\t* psympriv.h (struct psymbol_functions) <has_unexpanded_symtabs>:\n\tDeclare.\n\t* psymtab.c (psymbol_functions::has_unexpanded_symtabs): Define\n\tnew function.\n\t* quick-symbol.h (struct quick_symbol_functions)\n\t<has_unexpanded_symtabs>: Declare.\n\t* symfile-debug.c (objfile::has_unexpanded_symtabs): Define new\n\tfunction.",
    "tree": {
      "sha": "6b78299ed4202c52690e26f485ea226cad48b93f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6b78299ed4202c52690e26f485ea226cad48b93f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d038ce48f1adebd6917a1cfb595efd6f93d613ff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d038ce48f1adebd6917a1cfb595efd6f93d613ff",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d038ce48f1adebd6917a1cfb595efd6f93d613ff"
    }
  ],
  "stats": {
    "total": 95,
    "additions": 95,
    "deletions": 0
  },
  "files": [
    {
      "sha": "310c506e4e9f1c269bc08e6b3dfafacc96e04eaa",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c",
      "patch": "@@ -1,3 +1,19 @@\n+2021-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf2/read.c (struct dwarf2_base_index_functions)\n+\t<has_unexpanded_symtabs>: Declare.\n+\t(dwarf2_base_index_functions::has_unexpanded_symtabs): Define new\n+\tfunction.\n+\t* objfiles.h (struct objfile) <has_unexpanded_symtabs>: Declare.\n+\t* psympriv.h (struct psymbol_functions) <has_unexpanded_symtabs>:\n+\tDeclare.\n+\t* psymtab.c (psymbol_functions::has_unexpanded_symtabs): Define\n+\tnew function.\n+\t* quick-symbol.h (struct quick_symbol_functions)\n+\t<has_unexpanded_symtabs>: Declare.\n+\t* symfile-debug.c (objfile::has_unexpanded_symtabs): Define new\n+\tfunction.\n+\n 2021-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* infcall.c (call_function_by_hand_dummy): Add missing 'else' when"
    },
    {
      "sha": "760d4319c29697d16b7aa4890d7ed43b8cf44ebd",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c",
      "patch": "@@ -2024,6 +2024,8 @@ struct dwarf2_base_index_functions : public quick_symbol_functions\n {\n   bool has_symbols (struct objfile *objfile) override;\n \n+  bool has_unexpanded_symtabs (struct objfile *objfile) override;\n+\n   struct symtab *find_last_source_symtab (struct objfile *objfile) override;\n \n   void forget_cached_source_info (struct objfile *objfile) override;\n@@ -4470,6 +4472,26 @@ dwarf2_base_index_functions::has_symbols (struct objfile *objfile)\n   return true;\n }\n \n+/* See quick_symbol_functions::has_unexpanded_symtabs in quick-symbol.h.  */\n+\n+bool\n+dwarf2_base_index_functions::has_unexpanded_symtabs (struct objfile *objfile)\n+{\n+  dwarf2_per_objfile *per_objfile = get_dwarf2_per_objfile (objfile);\n+\n+  for (const auto &per_cu : per_objfile->per_bfd->all_comp_units)\n+    {\n+      /* Is this already expanded?  */\n+      if (per_objfile->symtab_set_p (per_cu.get ()))\n+\tcontinue;\n+\n+      /* It has not yet been expanded.  */\n+      return true;\n+    }\n+\n+  return false;\n+}\n+\n /* DWARF-5 debug_names reader.  */\n \n /* DWARF-5 augmentation string for GDB's DW_IDX_GNU_* extension.  */"
    },
    {
      "sha": "f947d699132c686569d837651939d1b1a67f64d7",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c",
      "patch": "@@ -565,6 +565,12 @@ struct objfile\n \n   bool has_partial_symbols ();\n \n+  /* Return true if this objfile has any unexpanded symbols.  A return\n+     value of false indicates either, that this objfile has all its\n+     symbols fully expanded (i.e. fully read in), or that this objfile has\n+     no symbols at all (i.e. no debug information).  */\n+  bool has_unexpanded_symtabs ();\n+\n   /* See quick_symbol_functions.  */\n   struct symtab *find_last_source_symtab ();\n "
    },
    {
      "sha": "3e51b972413d5337a5616ec3db6f381f0e7e4471",
      "filename": "gdb/psympriv.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/psympriv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/psympriv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psympriv.h?ref=fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c",
      "patch": "@@ -503,6 +503,8 @@ struct psymbol_functions : public quick_symbol_functions\n \n   bool has_symbols (struct objfile *objfile) override;\n \n+  bool has_unexpanded_symtabs (struct objfile *objfile) override;\n+\n   struct symtab *find_last_source_symtab (struct objfile *objfile) override;\n \n   void forget_cached_source_info (struct objfile *objfile) override;"
    },
    {
      "sha": "069052d712c614c4997caca10c8d6773280835eb",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c",
      "patch": "@@ -1184,6 +1184,24 @@ psymbol_functions::has_symbols (struct objfile *objfile)\n   return m_partial_symtabs->psymtabs != NULL;\n }\n \n+/* See quick_symbol_functions::has_unexpanded_symtabs in quick-symbol.h.  */\n+\n+bool\n+psymbol_functions::has_unexpanded_symtabs (struct objfile *objfile)\n+{\n+  for (partial_symtab *psymtab : require_partial_symbols (objfile))\n+    {\n+      /* Is this already expanded?  */\n+      if (psymtab->readin_p (objfile))\n+\tcontinue;\n+\n+      /* It has not yet been expanded.  */\n+      return true;\n+    }\n+\n+  return false;\n+}\n+\n /* Helper function for psym_find_compunit_symtab_by_address that fills\n    in m_psymbol_map for a given range of psymbols.  */\n "
    },
    {
      "sha": "7af0aebb9fe3c84a6a77350324b37b9444851e04",
      "filename": "gdb/quick-symbol.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/quick-symbol.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/quick-symbol.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/quick-symbol.h?ref=fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c",
      "patch": "@@ -86,6 +86,12 @@ struct quick_symbol_functions\n      available.  */\n   virtual bool has_symbols (struct objfile *objfile) = 0;\n \n+  /* Return true if OBJFILE has any unexpanded symtabs.  A return value of\n+     false indicates there are no unexpanded symtabs, this might mean that\n+     all of the symtabs have been expanded (full debug has been read in),\n+     or it might been that OBJFILE has no debug information.  */\n+  virtual bool has_unexpanded_symtabs (struct objfile *objfile) = 0;\n+\n   /* Return the symbol table for the \"last\" file appearing in\n      OBJFILE.  */\n   virtual struct symtab *find_last_source_symtab (struct objfile *objfile) = 0;"
    },
    {
      "sha": "a10af68f5b18b9530ff9c8ea24e83c1dbb2cad9c",
      "filename": "gdb/symfile-debug.c",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/symfile-debug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c/gdb/symfile-debug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-debug.c?ref=fc4d5ebf8f8fa30ae3f5c26270df0163ad72000c",
      "patch": "@@ -100,6 +100,31 @@ objfile::has_partial_symbols ()\n   return retval;\n }\n \n+/* See objfiles.h.  */\n+bool\n+objfile::has_unexpanded_symtabs ()\n+{\n+  if (debug_symfile)\n+    fprintf_filtered (gdb_stdlog, \"qf->has_unexpanded_symtabs (%s)\\n\",\n+\t\t      objfile_debug_name (this));\n+\n+  bool result = false;\n+  for (const auto &iter : qf)\n+    {\n+      if (iter->has_unexpanded_symtabs (this))\n+\t{\n+\t  result = true;\n+\t  break;\n+\t}\n+    }\n+\n+  if (debug_symfile)\n+    fprintf_filtered (gdb_stdlog, \"qf->has_unexpanded_symtabs (%s) = %d\\n\",\n+\t\t      objfile_debug_name (this), (result ? 1 : 0));\n+\n+  return result;\n+}\n+\n struct symtab *\n objfile::find_last_source_symtab ()\n {"
    }
  ]
}