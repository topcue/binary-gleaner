{
  "sha": "a7ac9aa525de25d3bc6e7bfd37615092a4f94055",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTdhYzlhYTUyNWRlMjVkM2JjNmU3YmZkMzc2MTUwOTJhNGY5NDA1NQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-30T11:10:08Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-30T13:20:35Z"
    },
    "message": "vms-alpha.c object_p memory leaks\n\n\t* vms-alpha.c (alpha_vms_free_private): New function, extracted..\n\t(vms_close_and_cleanup): ..from here.\n\t(alpha_vms_object_p): Call alpha_vms_free_private on failure.",
    "tree": {
      "sha": "e18c0c5526ebd4e581f1af797b7897cd124d6b5c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e18c0c5526ebd4e581f1af797b7897cd124d6b5c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a7ac9aa525de25d3bc6e7bfd37615092a4f94055",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7ac9aa525de25d3bc6e7bfd37615092a4f94055",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a7ac9aa525de25d3bc6e7bfd37615092a4f94055",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7ac9aa525de25d3bc6e7bfd37615092a4f94055/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "37d5ab199b072e3cf1e8bf2a9262767c4737d256",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37d5ab199b072e3cf1e8bf2a9262767c4737d256",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/37d5ab199b072e3cf1e8bf2a9262767c4737d256"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 28,
    "deletions": 12
  },
  "files": [
    {
      "sha": "02e3caba59cb56e52f1112d4310d815d9844f4f6",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7ac9aa525de25d3bc6e7bfd37615092a4f94055/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7ac9aa525de25d3bc6e7bfd37615092a4f94055/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=a7ac9aa525de25d3bc6e7bfd37615092a4f94055",
      "patch": "@@ -1,3 +1,9 @@\n+2019-12-30  Alan Modra  <amodra@gmail.com>\n+\n+\t* vms-alpha.c (alpha_vms_free_private): New function, extracted..\n+\t(vms_close_and_cleanup): ..from here.\n+\t(alpha_vms_object_p): Call alpha_vms_free_private on failure.\n+\n 2019-12-30  Alan Modra  <amodra@gmail.com>\n \n \t* coffgen.c (coff_real_object_p): Free malloc'd memory on failure."
    },
    {
      "sha": "e4928d7c974b8e16cf553160514f8ad097646375",
      "filename": "bfd/vms-alpha.c",
      "status": "modified",
      "additions": 22,
      "deletions": 12,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7ac9aa525de25d3bc6e7bfd37615092a4f94055/bfd/vms-alpha.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7ac9aa525de25d3bc6e7bfd37615092a4f94055/bfd/vms-alpha.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/vms-alpha.c?ref=a7ac9aa525de25d3bc6e7bfd37615092a4f94055",
      "patch": "@@ -2634,6 +2634,22 @@ vms_initialize (bfd * abfd)\n   return FALSE;\n }\n \n+/* Free malloc'd memory.  */\n+\n+static void\n+alpha_vms_free_private (bfd *abfd)\n+{\n+  struct module *module;\n+\n+  free (PRIV (recrd.buf));\n+  free (PRIV (sections));\n+  free (PRIV (syms));\n+  free (PRIV (dst_ptr_offsets));\n+\n+  for (module = PRIV (modules); module; module = module->next)\n+    free (module->file_table);\n+}\n+\n /* Check the format for a file being read.\n    Return a (bfd_target *) if it's an object file or zero if not.  */\n \n@@ -2648,7 +2664,10 @@ alpha_vms_object_p (bfd *abfd)\n \n   /* Allocate alpha-vms specific data.  */\n   if (!vms_initialize (abfd))\n-    goto error_ret;\n+    {\n+      abfd->tdata.any = tdata_save;\n+      return NULL;\n+    }\n \n   if (bfd_seek (abfd, (file_ptr) 0, SEEK_SET))\n     goto err_wrong_format;\n@@ -2788,8 +2807,7 @@ alpha_vms_object_p (bfd *abfd)\n   bfd_set_error (bfd_error_wrong_format);\n \n  error_ret:\n-  if (PRIV (recrd.buf))\n-    free (PRIV (recrd.buf));\n+  alpha_vms_free_private (abfd);\n   if (abfd->tdata.any != tdata_save && abfd->tdata.any != NULL)\n     bfd_release (abfd, abfd->tdata.any);\n   abfd->tdata.any = tdata_save;\n@@ -9339,15 +9357,7 @@ vms_close_and_cleanup (bfd * abfd)\n \n   if (abfd->format == bfd_object)\n     {\n-      struct module *module;\n-\n-      free (PRIV (recrd.buf));\n-      free (PRIV (sections));\n-      free (PRIV (syms));\n-      free (PRIV (dst_ptr_offsets));\n-\n-      for (module = PRIV (modules); module; module = module->next)\n-\tfree (module->file_table);\n+      alpha_vms_free_private (abfd);\n \n #ifdef VMS\n       if (abfd->direction == write_direction)"
    }
  ]
}