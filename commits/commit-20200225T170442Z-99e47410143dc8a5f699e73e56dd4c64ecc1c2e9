{
  "sha": "99e47410143dc8a5f699e73e56dd4c64ecc1c2e9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTllNDc0MTAxNDNkYzhhNWY2OTllNzNlNTZkZDRjNjRlY2MxYzJlOQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-02-19T19:01:51Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-02-25T17:04:42Z"
    },
    "message": "Merge upstream GCC changes for include/ and libiberty/ directories\n\nThis commit pulls in the latest changes for the include/ and\nlibiberty/ directories.  The last sync was in commit\n533da48302a26885a972e4379eccc26b364e5b53.\n\nThis commit also removes the file libiberty/rust-demangle.h, this file\nhas been removed in upstream GCC, and should have been deleted as part\nof the previous sync up, which included this ChangeLog entry:\n\n  2019-11-16  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n\n        ....\n\t* rust-demangle.h: Remove.\n\nI've grep'd over the binutils-gdb source and can find no reference to\nthe rust-demangle.h file, and everything seems to build fine without\nit, so I assume its continued existence was a mistake.\n\ninclude/ChangeLog:\n\n\tImport from gcc mainline:\n\t2020-02-05  Andrew Burgess  <andrew.burgess@embecosm.com>\n\n        * hashtab.h (htab_remove_elt): Make a parameter const.\n        (htab_remove_elt_with_hash): Likewise.\n\nlibiberty/ChangeLog:\n\n\t* rust-demangle.h: Removed.\n\n\tImport from gcc mainline:\n\t2020-02-05  Andrew Burgess  <andrew.burgess@embecosm.com>\n\n        * hashtab.c (htab_remove_elt): Make a parameter const.\n        (htab_remove_elt_with_hash): Likewise.\n\n\t2020-01-23  Alexandre Oliva <oliva@adacore.com>\n\n        * argv.c (writeargv): Output empty args as \"\".\n\n\t2020-01-18  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* cp-demangle.c (cplus_demangle_operators): Add the co_await\n\toperator.\n\t* testsuite/demangle-expected: Test co_await operator mangling.",
    "tree": {
      "sha": "cd2c1ed06cd2f19f1ec3acfcf9c42438c9fb0021",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cd2c1ed06cd2f19f1ec3acfcf9c42438c9fb0021"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9e80cfa14ed0bdec20361ae78e74ccb937de3428",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e80cfa14ed0bdec20361ae78e74ccb937de3428",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9e80cfa14ed0bdec20361ae78e74ccb937de3428"
    }
  ],
  "stats": {
    "total": 93,
    "additions": 44,
    "deletions": 49
  },
  "files": [
    {
      "sha": "a821ac617f5fd374faeb2711ee0684601c044760",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=99e47410143dc8a5f699e73e56dd4c64ecc1c2e9",
      "patch": "@@ -1,3 +1,11 @@\n+2020-02-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\tImport from gcc mainline:\n+\t2020-02-05  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* hashtab.h (htab_remove_elt): Make a parameter const.\n+\t(htab_remove_elt_with_hash): Likewise.\n+\n 2020-02-20  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* opcode/riscv-opc.h: Extend DECLARE_CSR and DECLARE_CSR_ALIAS to"
    },
    {
      "sha": "6cca342b98973320086b58734aac922b1eeab617",
      "filename": "include/hashtab.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/include/hashtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/include/hashtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/hashtab.h?ref=99e47410143dc8a5f699e73e56dd4c64ecc1c2e9",
      "patch": "@@ -173,8 +173,8 @@ extern void *\thtab_find_with_hash (htab_t, const void *, hashval_t);\n extern void **\thtab_find_slot_with_hash (htab_t, const void *,\n \t\t\t\t\t  hashval_t, enum insert_option);\n extern void\thtab_clear_slot\t(htab_t, void **);\n-extern void\thtab_remove_elt\t(htab_t, void *);\n-extern void\thtab_remove_elt_with_hash (htab_t, void *, hashval_t);\n+extern void\thtab_remove_elt\t(htab_t, const void *);\n+extern void\thtab_remove_elt_with_hash (htab_t, const void *, hashval_t);\n \n extern void\thtab_traverse (htab_t, htab_trav, void *);\n extern void\thtab_traverse_noresize (htab_t, htab_trav, void *);"
    },
    {
      "sha": "8e3408e3ee3e899622b3c86869bdf9e172893a78",
      "filename": "libiberty/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/libiberty/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/libiberty/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/ChangeLog?ref=99e47410143dc8a5f699e73e56dd4c64ecc1c2e9",
      "patch": "@@ -1,3 +1,23 @@\n+2020-02-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* rust-demangle.h: Removed.\n+\n+\tImport from gcc mainline:\n+\t2020-02-05  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* hashtab.c (htab_remove_elt): Make a parameter const.\n+\t(htab_remove_elt_with_hash): Likewise.\n+\n+\t2020-01-23  Alexandre Oliva <oliva@adacore.com>\n+\n+\t* argv.c (writeargv): Output empty args as \"\".\n+\n+\t2020-01-18  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* cp-demangle.c (cplus_demangle_operators): Add the co_await\n+\toperator.\n+\t* testsuite/demangle-expected: Test co_await operator mangling.\n+\n 2020-02-19  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "6a72208d8458e7d1650d5d2831c770ed7a8c7195",
      "filename": "libiberty/argv.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/libiberty/argv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/libiberty/argv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/argv.c?ref=99e47410143dc8a5f699e73e56dd4c64ecc1c2e9",
      "patch": "@@ -327,6 +327,14 @@ writeargv (char * const *argv, FILE *f)\n           arg++;\n         }\n \n+      /* Write out a pair of quotes for an empty argument.  */\n+      if (arg == *argv)\n+\tif (EOF == fputs (\"\\\"\\\"\", f))\n+\t  {\n+\t    status = 1;\n+\t    goto done;\n+\t  }\n+\n       if (EOF == fputc ('\\n', f))\n         {\n           status = 1;"
    },
    {
      "sha": "fc55b7fae1fb3edbc11ed9d32f181d39284b2b57",
      "filename": "libiberty/cp-demangle.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/libiberty/cp-demangle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/libiberty/cp-demangle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/cp-demangle.c?ref=99e47410143dc8a5f699e73e56dd4c64ecc1c2e9",
      "patch": "@@ -1802,6 +1802,7 @@ const struct demangle_operator_info cplus_demangle_operators[] =\n   { \"ad\", NL (\"&\"),         1 },\n   { \"an\", NL (\"&\"),         2 },\n   { \"at\", NL (\"alignof \"),   1 },\n+  { \"aw\", NL (\"co_await \"), 1 },\n   { \"az\", NL (\"alignof \"),   1 },\n   { \"cc\", NL (\"const_cast\"), 2 },\n   { \"cl\", NL (\"()\"),        2 },"
    },
    {
      "sha": "225e9e540a7d2877289cec0a36d2011f233e1ea5",
      "filename": "libiberty/hashtab.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/libiberty/hashtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/libiberty/hashtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/hashtab.c?ref=99e47410143dc8a5f699e73e56dd4c64ecc1c2e9",
      "patch": "@@ -709,7 +709,7 @@ htab_find_slot (htab_t htab, const PTR element, enum insert_option insert)\n    element in the hash table, this function does nothing.  */\n \n void\n-htab_remove_elt (htab_t htab, PTR element)\n+htab_remove_elt (htab_t htab, const PTR element)\n {\n   htab_remove_elt_with_hash (htab, element, (*htab->hash_f) (element));\n }\n@@ -720,7 +720,7 @@ htab_remove_elt (htab_t htab, PTR element)\n    function does nothing.  */\n \n void\n-htab_remove_elt_with_hash (htab_t htab, PTR element, hashval_t hash)\n+htab_remove_elt_with_hash (htab_t htab, const PTR element, hashval_t hash)\n {\n   PTR *slot;\n "
    },
    {
      "sha": "abf4c6cde559bc45e3020d86e5c811b46e8f6e05",
      "filename": "libiberty/rust-demangle.h",
      "status": "removed",
      "additions": 0,
      "deletions": 45,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e80cfa14ed0bdec20361ae78e74ccb937de3428/libiberty/rust-demangle.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e80cfa14ed0bdec20361ae78e74ccb937de3428/libiberty/rust-demangle.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/rust-demangle.h?ref=9e80cfa14ed0bdec20361ae78e74ccb937de3428",
      "patch": "@@ -1,45 +0,0 @@\n-/* Internal demangler interface for the Rust programming language.\n-   Copyright (C) 2016-2019 Free Software Foundation, Inc.\n-   Written by David Tolnay (dtolnay@gmail.com).\n-\n-This file is part of the libiberty library.\n-Libiberty is free software; you can redistribute it and/or\n-modify it under the terms of the GNU Library General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU Library General Public\n-License, the Free Software Foundation gives you unlimited permission\n-to link the compiled version of this file into combinations with other\n-programs, and to distribute those combinations without any restriction\n-coming from the use of this file.  (The Library Public License\n-restrictions do apply in other respects; for example, they cover\n-modification of the file, and distribution when not linked into a\n-combined executable.)\n-\n-Libiberty is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-Library General Public License for more details.\n-\n-You should have received a copy of the GNU Library General Public\n-License along with libiberty; see the file COPYING.LIB.\n-If not, see <http://www.gnu.org/licenses/>.  */\n-\n-/* This file provides some definitions shared by cplus-dem.c and\n-   rust-demangle.c.  It should not be included by any other files.  */\n-\n-/* Returns non-zero iff MANGLED is a rust mangled symbol.  MANGLED must\n-   already have been demangled through cplus_demangle_v3.  If this function\n-   returns non-zero then MANGLED can be demangled (in-place) using\n-   RUST_DEMANGLE_SYM.  */\n-extern int\n-rust_is_mangled (const char *mangled);\n-\n-/* Demangles SYM (in-place) if RUST_IS_MANGLED returned non-zero for SYM.\n-   If RUST_IS_MANGLED returned zero for SYM then RUST_DEMANGLE_SYM might\n-   replace characters that cannot be demangled with '?' and might truncate\n-   SYM.  After calling RUST_DEMANGLE_SYM SYM might be shorter, but never\n-   larger.  */\n-extern void\n-rust_demangle_sym (char *sym);"
    },
    {
      "sha": "ccadf84e608212096540f7a407aeb75c65f2f9d1",
      "filename": "libiberty/testsuite/demangle-expected",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/libiberty/testsuite/demangle-expected",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/99e47410143dc8a5f699e73e56dd4c64ecc1c2e9/libiberty/testsuite/demangle-expected",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/demangle-expected?ref=99e47410143dc8a5f699e73e56dd4c64ecc1c2e9",
      "patch": "@@ -1450,3 +1450,6 @@ Foo<int>()::{lambda(auto:1)#1}::operator()<char>(char) const::X::fn\n \n _Z3fooILPv0EEvPN9enable_ifIXeqT_LDnEEvE4typeE\n void foo<(void*)0>(enable_if<((void*)0)==(decltype(nullptr)), void>::type*)\n+\n+_ZNK5coro15emptyawEv\n+coro1::empty::operator co_await() const"
    }
  ]
}