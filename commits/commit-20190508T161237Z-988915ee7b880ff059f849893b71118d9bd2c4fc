{
  "sha": "988915ee7b880ff059f849893b71118d9bd2c4fc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTg4OTE1ZWU3Yjg4MGZmMDU5Zjg0OTg5M2I3MTExOGQ5YmQyYzRmYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-24T18:50:04Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-08T16:12:37Z"
    },
    "message": "Fix VLA printing for Ada\n\nWhile looking at a different Ada problem, I found that printing a\nrecord containing a VLA did not work properly.\n\nI tracked the problem down to dwarf2_evaluate_property trying, and\nfailing, to compare two types that differed only in qualifiers.\n\nThis patch changes dwarf2_evaluate_property to ignore qualifiers when\ncomparing types.\n\nTested on x86-64 Fedora 29.\n\ngdb/ChangeLog\n2019-05-08  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2loc.c (dwarf2_evaluate_property) <PROP_ADDR_OFFSET>:\n\tCompare main types.\n\ngdb/testsuite/ChangeLog\n2019-05-08  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/vla.exp: New file.\n\t* gdb.ada/vla/vla.adb: New file.",
    "tree": {
      "sha": "3977c74edfe1781a74796682348a6e4f5604e58a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3977c74edfe1781a74796682348a6e4f5604e58a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/988915ee7b880ff059f849893b71118d9bd2c4fc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/988915ee7b880ff059f849893b71118d9bd2c4fc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/988915ee7b880ff059f849893b71118d9bd2c4fc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/988915ee7b880ff059f849893b71118d9bd2c4fc/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2379f9c475505ecedc97607b39af7184bd67aa88",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2379f9c475505ecedc97607b39af7184bd67aa88",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2379f9c475505ecedc97607b39af7184bd67aa88"
    }
  ],
  "stats": {
    "total": 113,
    "additions": 111,
    "deletions": 2
  },
  "files": [
    {
      "sha": "c4a9f292f6c858fa7b9a8ced19b499cc1dae4e60",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/988915ee7b880ff059f849893b71118d9bd2c4fc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/988915ee7b880ff059f849893b71118d9bd2c4fc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=988915ee7b880ff059f849893b71118d9bd2c4fc",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2loc.c (dwarf2_evaluate_property) <PROP_ADDR_OFFSET>:\n+\tCompare main types.\n+\n 2019-05-06  Tom Tromey  <tom@tromey.com>\n \n \t* common/scoped_mmap.c: Include common-defs.h."
    },
    {
      "sha": "c5145af7c66006b5022f13a043c65dc41b3735bd",
      "filename": "gdb/dwarf2loc.c",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/988915ee7b880ff059f849893b71118d9bd2c4fc/gdb/dwarf2loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/988915ee7b880ff059f849893b71118d9bd2c4fc/gdb/dwarf2loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2loc.c?ref=988915ee7b880ff059f849893b71118d9bd2c4fc",
      "patch": "@@ -2493,8 +2493,12 @@ dwarf2_evaluate_property (const struct dynamic_prop *prop,\n \tstruct value *val;\n \n \tfor (pinfo = addr_stack; pinfo != NULL; pinfo = pinfo->next)\n-\t  if (pinfo->type == baton->referenced_type)\n-\t    break;\n+\t  {\n+\t    /* This approach lets us avoid checking the qualifiers.  */\n+\t    if (TYPE_MAIN_TYPE (pinfo->type)\n+\t\t== TYPE_MAIN_TYPE (baton->referenced_type))\n+\t      break;\n+\t  }\n \tif (pinfo == NULL)\n \t  error (_(\"cannot find reference address for offset property\"));\n \tif (pinfo->valaddr != NULL)"
    },
    {
      "sha": "cfa10e3b11274a8d301bacfca75a80d6e0a8f2be",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/988915ee7b880ff059f849893b71118d9bd2c4fc/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/988915ee7b880ff059f849893b71118d9bd2c4fc/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=988915ee7b880ff059f849893b71118d9bd2c4fc",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/vla.exp: New file.\n+\t* gdb.ada/vla/vla.adb: New file.\n+\n 2019-05-07  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.base/index-cache.exp (ls_host): Fix return statement."
    },
    {
      "sha": "7e10e9b82236e233c7fe0fc65b79843706f365e8",
      "filename": "gdb/testsuite/gdb.ada/vla.exp",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/988915ee7b880ff059f849893b71118d9bd2c4fc/gdb/testsuite/gdb.ada/vla.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/988915ee7b880ff059f849893b71118d9bd2c4fc/gdb/testsuite/gdb.ada/vla.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/vla.exp?ref=988915ee7b880ff059f849893b71118d9bd2c4fc",
      "patch": "@@ -0,0 +1,38 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+load_lib \"ada.exp\"\n+\n+if { [skip_ada_tests] } { return -1 }\n+\n+standard_ada_testfile vla\n+\n+if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable {debug}] != \"\"} {\n+    return -1\n+}\n+\n+clean_restart ${testfile}\n+\n+set bp_location [gdb_get_line_number \"Set breakpoint here\" ${testdir}/vla.adb]\n+runto \"vla.adb:$bp_location\"\n+\n+gdb_test \"print r00\" \\\n+         \"= \\\\(l1 => 0, l2 => 0, i1 => 1, i2 => 2, i3 => 3, a1 => \\\\(\\\\), a2 => \\\\(\\\\)\\\\)\"\n+gdb_test \"print r01\" \\\n+         \"= \\\\(l1 => 0, l2 => 1, i1 => 1, i2 => 2, i3 => 3, a1 => \\\\(\\\\), a2 => \\\\(20\\\\)\\\\)\"\n+gdb_test \"print r10\" \\\n+         \"= \\\\(l1 => 1, l2 => 0, i1 => 1, i2 => 2, i3 => 3, a1 => \\\\(10\\\\), a2 => \\\\(\\\\)\\\\)\"\n+gdb_test \"print r22\" \\\n+         \"= \\\\(l1 => 2, l2 => 2, i1 => 1, i2 => 2, i3 => 3, a1 => \\\\(10, 10\\\\), a2 => \\\\(20, 20\\\\)\\\\)\""
    },
    {
      "sha": "2b6cc8a1114f6981bb8264bac8eba91265bdceeb",
      "filename": "gdb/testsuite/gdb.ada/vla/vla.adb",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/988915ee7b880ff059f849893b71118d9bd2c4fc/gdb/testsuite/gdb.ada/vla/vla.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/988915ee7b880ff059f849893b71118d9bd2c4fc/gdb/testsuite/gdb.ada/vla/vla.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/vla/vla.adb?ref=988915ee7b880ff059f849893b71118d9bd2c4fc",
      "patch": "@@ -0,0 +1,57 @@\n+--  Copyright 2019 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+procedure Vla is\n+   type Array_Type is array (Natural range <>) of Integer;\n+   type Record_Type (L1, L2 : Natural) is record\n+      I1 : Integer;\n+      A1 : Array_Type (1 .. L1);\n+      I2 : Integer;\n+      A2 : Array_Type (1 .. L2);\n+      I3 : Integer;\n+   end record;\n+\n+   procedure Process (R : Record_Type) is\n+   begin\n+      null;\n+   end Process;\n+\n+   R00 : Record_Type :=\n+     (L1 => 0, L2 => 0,\n+      I1 => 1, A1 => (others => 10),\n+      I2 => 2, A2 => (others => 20),\n+      I3 => 3);\n+   R01 : Record_Type :=\n+     (L1 => 0, L2 => 1,\n+      I1 => 1, A1 => (others => 10),\n+      I2 => 2, A2 => (others => 20),\n+      I3 => 3);\n+   R10 : Record_Type :=\n+     (L1 => 1, L2 => 0,\n+      I1 => 1, A1 => (others => 10),\n+      I2 => 2, A2 => (others => 20),\n+      I3 => 3);\n+   R22 : Record_Type :=\n+     (L1 => 2, L2 => 2,\n+      I1 => 1, A1 => (others => 10),\n+      I2 => 2, A2 => (others => 20),\n+      I3 => 3);\n+\n+begin\n+   Process (R00); -- Set breakpoint here\n+   Process (R01);\n+   Process (R10);\n+   Process (R22);\n+end Vla;"
    }
  ]
}