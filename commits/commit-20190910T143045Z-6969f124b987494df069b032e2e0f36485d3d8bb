{
  "sha": "6969f124b987494df069b032e2e0f36485d3d8bb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njk2OWYxMjRiOTg3NDk0ZGYwNjliMDMyZTJlMGYzNjQ4NWQzZDhiYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-07-12T16:47:21Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-09-10T14:30:45Z"
    },
    "message": "Change iterate_over_symbols to return bool\n\nThis changes iterate_over_symbols to return a bool.  This allows it to\nbe reused in another context in a subsequent patch.\n\ngdb/ChangeLog\n2019-09-10  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (ada_iterate_over_symbols): Return bool.\n\t* language.h (struct language_defn) <la_iterate_over_symbols>:\n\tReturn bool.\n\t* symtab.c (iterate_over_symbols): Return bool.\n\t* symtab.h (iterate_over_symbols): Return bool.",
    "tree": {
      "sha": "d0b2cbfb2b96651860e7336f4c6042c178676dc6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d0b2cbfb2b96651860e7336f4c6042c178676dc6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6969f124b987494df069b032e2e0f36485d3d8bb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6969f124b987494df069b032e2e0f36485d3d8bb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6969f124b987494df069b032e2e0f36485d3d8bb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6969f124b987494df069b032e2e0f36485d3d8bb/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "199b4314efbd419d6957e366e13a14cd87cea5e4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/199b4314efbd419d6957e366e13a14cd87cea5e4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/199b4314efbd419d6957e366e13a14cd87cea5e4"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 27,
    "deletions": 13
  },
  "files": [
    {
      "sha": "e2ebafe714cfef68ed5bd2a12f5f1e91e91b38f6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6969f124b987494df069b032e2e0f36485d3d8bb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6969f124b987494df069b032e2e0f36485d3d8bb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6969f124b987494df069b032e2e0f36485d3d8bb",
      "patch": "@@ -1,3 +1,11 @@\n+2019-09-10  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (ada_iterate_over_symbols): Return bool.\n+\t* language.h (struct language_defn) <la_iterate_over_symbols>:\n+\tReturn bool.\n+\t* symtab.c (iterate_over_symbols): Return bool.\n+\t* symtab.h (iterate_over_symbols): Return bool.\n+\n 2019-09-10  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (aux_add_nonlocal_symbols): Change type."
    },
    {
      "sha": "21d40c7aad45d7215e83b4df0d5e27518ea38d91",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6969f124b987494df069b032e2e0f36485d3d8bb/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6969f124b987494df069b032e2e0f36485d3d8bb/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=6969f124b987494df069b032e2e0f36485d3d8bb",
      "patch": "@@ -5740,7 +5740,7 @@ ada_lookup_symbol_list (const char *name, const struct block *block,\n \n /* Implementation of the la_iterate_over_symbols method.  */\n \n-static void\n+static bool\n ada_iterate_over_symbols\n   (const struct block *block, const lookup_name_info &name,\n    domain_enum domain,\n@@ -5754,8 +5754,10 @@ ada_iterate_over_symbols\n   for (i = 0; i < ndefs; ++i)\n     {\n       if (!callback (&results[i]))\n-\tbreak;\n+\treturn false;\n     }\n+\n+  return true;\n }\n \n /* The result is as for ada_lookup_symbol_list with FULL_SEARCH set"
    },
    {
      "sha": "0088e5de2dd698ae050768f13dbf3f2bb11843fb",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6969f124b987494df069b032e2e0f36485d3d8bb/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6969f124b987494df069b032e2e0f36485d3d8bb/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=6969f124b987494df069b032e2e0f36485d3d8bb",
      "patch": "@@ -407,7 +407,7 @@ struct language_defn\n        This field may not be NULL.  If the language does not need any\n        special processing here, 'iterate_over_symbols' should be\n        used as the definition.  */\n-    void (*la_iterate_over_symbols)\n+    bool (*la_iterate_over_symbols)\n       (const struct block *block, const lookup_name_info &name,\n        domain_enum domain,\n        gdb::function_view<symbol_found_callback_ftype> callback);"
    },
    {
      "sha": "5f184454bd153bdb16acd96e688cbd5b318cf10c",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 4,
      "deletions": 9,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6969f124b987494df069b032e2e0f36485d3d8bb/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6969f124b987494df069b032e2e0f36485d3d8bb/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=6969f124b987494df069b032e2e0f36485d3d8bb",
      "patch": "@@ -2822,15 +2822,9 @@ basic_lookup_transparent_type (const char *name)\n   return (struct type *) 0;\n }\n \n-/* Iterate over the symbols named NAME, matching DOMAIN, in BLOCK.\n-\n-   For each symbol that matches, CALLBACK is called.  The symbol is\n-   passed to the callback.\n-\n-   If CALLBACK returns false, the iteration ends.  Otherwise, the\n-   search continues.  */\n+/* See symtab.h.  */\n \n-void\n+bool\n iterate_over_symbols (const struct block *block,\n \t\t      const lookup_name_info &name,\n \t\t      const domain_enum domain,\n@@ -2847,9 +2841,10 @@ iterate_over_symbols (const struct block *block,\n \t  struct block_symbol block_sym = {sym, block};\n \n \t  if (!callback (&block_sym))\n-\t    return;\n+\t    return false;\n \t}\n     }\n+  return true;\n }\n \n /* Find the compunit symtab associated with PC and SECTION."
    },
    {
      "sha": "49feea62e2a5435c417818ef202d2a1481edfe8e",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6969f124b987494df069b032e2e0f36485d3d8bb/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6969f124b987494df069b032e2e0f36485d3d8bb/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=6969f124b987494df069b032e2e0f36485d3d8bb",
      "patch": "@@ -2092,7 +2092,16 @@ std::vector<CORE_ADDR> find_pcs_for_symtab_line\n \n typedef bool (symbol_found_callback_ftype) (struct block_symbol *bsym);\n \n-void iterate_over_symbols (const struct block *block,\n+/* Iterate over the symbols named NAME, matching DOMAIN, in BLOCK.\n+\n+   For each symbol that matches, CALLBACK is called.  The symbol is\n+   passed to the callback.\n+\n+   If CALLBACK returns false, the iteration ends and this function\n+   returns false.  Otherwise, the search continues, and the function\n+   eventually returns true.  */\n+\n+bool iterate_over_symbols (const struct block *block,\n \t\t\t   const lookup_name_info &name,\n \t\t\t   const domain_enum domain,\n \t\t\t   gdb::function_view<symbol_found_callback_ftype> callback);"
    }
  ]
}