{
  "sha": "dedb7102b3b35f789fd5c140fe01917eaeae2853",
  "node_id": "C_kwDOANOeidoAKGRlZGI3MTAyYjNiMzVmNzg5ZmQ1YzE0MGZlMDE5MTdlYWVhZTI4NTM",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2022-01-04T15:52:40Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2022-01-26T13:49:51Z"
    },
    "message": "Fix another crash with gdb parameters in Python\n\nWhile looking into the language-capturing issue, I found another way\nto crash gdb using parameters from Python:\n\n(gdb) python print(gdb.parameter('endian'))\n\n(This is related to PR python/12188, though this patch isn't going to\nfix what that bug is really about.)\n\nThe problem here is that the global variable that underlies the\n\"endian\" parameter is initialized to NULL.  However, that's not a\nvalid value for an \"enum\" set/show parameter.\n\nMy understanding is that, in gdb, an \"enum\" parameter's underlying\nvariable must have a value that is \"==\" (not just strcmp-equal) to one\nof the values coming from the enum array.  This invariant is relied on\nin various places.\n\nI started this patch by fixing the problem with \"endian\".  Then I\nadded some assertions to add_setshow_enum_cmd to try to catch other\nproblems of the same type.\n\nThis patch fixes all the problems that I found.  I also looked at all\nthe calls to add_setshow_enum_cmd to ensure that they were all\nincluded in the gdb I tested.  I think they are: there are no calls in\nnat-* files, or in remote-sim.c; and I was trying a build with all\ntargets, Python, and Guile enabled.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=12188",
    "tree": {
      "sha": "9331b631ef404e8704a7a4f5b939fdb1192ef4ee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9331b631ef404e8704a7a4f5b939fdb1192ef4ee"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dedb7102b3b35f789fd5c140fe01917eaeae2853",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dedb7102b3b35f789fd5c140fe01917eaeae2853",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dedb7102b3b35f789fd5c140fe01917eaeae2853",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dedb7102b3b35f789fd5c140fe01917eaeae2853/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1da5d0e664e362857153af8682321a89ebafb7f6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1da5d0e664e362857153af8682321a89ebafb7f6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1da5d0e664e362857153af8682321a89ebafb7f6"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 41,
    "deletions": 12
  },
  "files": [
    {
      "sha": "3ee978a02498ef37a2c09c35ae483842afb1bad9",
      "filename": "gdb/arch-utils.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/arch-utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/arch-utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch-utils.c?ref=dedb7102b3b35f789fd5c140fe01917eaeae2853",
      "patch": "@@ -359,7 +359,7 @@ static const char *const endian_enum[] =\n   endian_auto,\n   NULL,\n };\n-static const char *set_endian_string;\n+static const char *set_endian_string = endian_auto;\n \n enum bfd_endian\n selected_byte_order (void)\n@@ -757,7 +757,8 @@ initialize_current_architecture (void)\n      list of architectures.  */\n   {\n     /* Append ``auto''.  */\n-    arches.push_back (\"auto\");\n+    set_architecture_string = \"auto\";\n+    arches.push_back (set_architecture_string);\n     arches.push_back (nullptr);\n     set_show_commands architecture_cmds\n       = add_setshow_enum_cmd (\"architecture\", class_support,"
    },
    {
      "sha": "f46913e8eaa2f525dc7e87008d0f395f97dc150a",
      "filename": "gdb/arm-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/arm-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/arm-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.c?ref=dedb7102b3b35f789fd5c140fe01917eaeae2853",
      "patch": "@@ -9802,6 +9802,8 @@ _initialize_arm_tdep ()\n \tsize_t offset = strlen (\"reg-names-\");\n \tconst char *style = disasm_options->name[i];\n \tvalid_disassembly_styles[j++] = &style[offset];\n+\tif (strcmp (&style[offset], \"std\") == 0)\n+\t  disassembly_style = &style[offset];\n \tlength = snprintf (rdptr, rest, \"%s - %s\\n\", &style[offset],\n \t\t\t   disasm_options->description[i]);\n \trdptr += length;"
    },
    {
      "sha": "bf205ae087c82ee18c298e0465e422603304d138",
      "filename": "gdb/charset.c",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/charset.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/charset.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/charset.c?ref=dedb7102b3b35f789fd5c140fe01917eaeae2853",
      "patch": "@@ -1029,6 +1029,9 @@ _initialize_charset ()\n #endif\n #endif\n \n+  /* Recall that the first element is always \"auto\".  */\n+  host_charset_name = charset_enum[0];\n+  gdb_assert (strcmp (host_charset_name, \"auto\") == 0);\n   add_setshow_enum_cmd (\"charset\", class_support,\n \t\t\tcharset_enum, &host_charset_name, _(\"\\\n Set the host and target character sets.\"), _(\"\\\n@@ -1057,6 +1060,9 @@ To see a list of the character sets GDB supports, type `set host-charset <TAB>'.\n \t\t\tshow_host_charset_name,\n \t\t\t&setlist, &showlist);\n \n+  /* Recall that the first element is always \"auto\".  */\n+  target_charset_name = charset_enum[0];\n+  gdb_assert (strcmp (target_charset_name, \"auto\") == 0);\n   add_setshow_enum_cmd (\"target-charset\", class_support,\n \t\t\tcharset_enum, &target_charset_name, _(\"\\\n Set the target character set.\"), _(\"\\\n@@ -1069,6 +1075,9 @@ To see a list of the character sets GDB supports, type `set target-charset'<TAB>\n \t\t\tshow_target_charset_name,\n \t\t\t&setlist, &showlist);\n \n+  /* Recall that the first element is always \"auto\".  */\n+  target_wide_charset_name = charset_enum[0];\n+  gdb_assert (strcmp (target_wide_charset_name, \"auto\") == 0);\n   add_setshow_enum_cmd (\"target-wide-charset\", class_support,\n \t\t\tcharset_enum, &target_wide_charset_name,\n \t\t\t_(\"\\"
    },
    {
      "sha": "5d9403068e7b94bcd2a7e7d658ae71ea91391f79",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=dedb7102b3b35f789fd5c140fe01917eaeae2853",
      "patch": "@@ -613,6 +613,16 @@ add_setshow_enum_cmd (const char *name,\n \t\t      struct cmd_list_element **set_list,\n \t\t      struct cmd_list_element **show_list)\n {\n+  /* We require *VAR to be initialized before this call, and\n+     furthermore it must be == to one of the values in ENUMLIST.  */\n+  gdb_assert (var != nullptr && *var != nullptr);\n+  for (int i = 0; ; ++i)\n+    {\n+      gdb_assert (enumlist[i] != nullptr);\n+      if (*var == enumlist[i])\n+\tbreak;\n+    }\n+\n   set_show_commands commands\n     =  add_setshow_cmd_full<const char *> (name, theclass, var_enum, var,\n \t\t\t\t\t   set_doc, show_doc, help_doc,"
    },
    {
      "sha": "42727bbf406ff9dff3f6e2e43cabebad2d1c35d9",
      "filename": "gdb/guile/scm-param.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/guile/scm-param.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/guile/scm-param.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-param.c?ref=dedb7102b3b35f789fd5c140fe01917eaeae2853",
      "patch": "@@ -458,12 +458,12 @@ add_setshow_generic (enum var_types param_type, enum command_class cmd_class,\n       break;\n \n     case var_enum:\n+      /* Initialize the value, just in case.  */\n+      make_setting (self).set<const char *> (self->enumeration[0]);\n       commands = add_setshow_enum_cmd (cmd_name, cmd_class, self->enumeration,\n \t\t\t\t       &self->value.cstringval, set_doc,\n \t\t\t\t       show_doc, help_doc, set_func, show_func,\n \t\t\t\t       set_list, show_list);\n-      /* Initialize the value, just in case.  */\n-      make_setting (self).set<const char *> (self->enumeration[0]);\n       break;\n \n     default:"
    },
    {
      "sha": "f000142fc2da99d65912668082c4832b096ef877",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=dedb7102b3b35f789fd5c140fe01917eaeae2853",
      "patch": "@@ -476,7 +476,8 @@ add_set_language_command ()\n   /* Display \"auto\", \"local\" and \"unknown\" first, and then the rest,\n      alpha sorted.  */\n   const char **language_names_p = language_names;\n-  *language_names_p++ = language_def (language_auto)->name ();\n+  language = language_def (language_auto)->name ();\n+  *language_names_p++ = language;\n   *language_names_p++ = \"local\";\n   *language_names_p++ = language_def (language_unknown)->name ();\n   const char **sort_begin = language_names_p;\n@@ -1150,6 +1151,8 @@ _initialize_language ()\n   add_alias_cmd (\"c\", setshow_check_cmds.show, no_class, 1, &showlist);\n   add_alias_cmd (\"ch\", setshow_check_cmds.show, no_class, 1, &showlist);\n \n+  range = type_or_range_names[3];\n+  gdb_assert (strcmp (range, \"auto\") == 0);\n   add_setshow_enum_cmd (\"range\", class_support, type_or_range_names,\n \t\t\t&range,\n \t\t\t_(\"Set range checking (on/warn/off/auto).\"),\n@@ -1158,6 +1161,8 @@ _initialize_language ()\n \t\t\tshow_range_command,\n \t\t\t&setchecklist, &showchecklist);\n \n+  case_sensitive = case_sensitive_names[2];\n+  gdb_assert (strcmp (case_sensitive, \"auto\") == 0);\n   add_setshow_enum_cmd (\"case-sensitive\", class_support, case_sensitive_names,\n \t\t\t&case_sensitive, _(\"\\\n Set case sensitivity in name search (on/off/auto).\"), _(\"\\\n@@ -1174,10 +1179,6 @@ For Fortran the default is off; for other languages the default is on.\"),\n \n   add_set_language_command ();\n \n-  language = \"auto\";\n-  range = \"auto\";\n-  case_sensitive = \"auto\";\n-\n   /* Have the above take effect.  */\n   set_language (language_auto);\n }"
    },
    {
      "sha": "d4a98061dbd530e8a8d60b0c2e66ae95488f5cf2",
      "filename": "gdb/osabi.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/osabi.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/osabi.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/osabi.c?ref=dedb7102b3b35f789fd5c140fe01917eaeae2853",
      "patch": "@@ -666,11 +666,13 @@ _initialize_gdb_osabi ()\n \t\t\t\t  generic_elf_osabi_sniffer);\n \n   /* Register the \"set osabi\" command.  */\n+  user_osabi_state = osabi_auto;\n+  set_osabi_string = gdb_osabi_available_names[0];\n+  gdb_assert (strcmp (set_osabi_string, \"auto\") == 0);\n   add_setshow_enum_cmd (\"osabi\", class_support, gdb_osabi_available_names,\n \t\t\t&set_osabi_string,\n \t\t\t_(\"Set OS ABI of target.\"),\n \t\t\t_(\"Show OS ABI of target.\"),\n \t\t\tNULL, set_osabi, show_osabi,\n \t\t\t&setlist, &showlist);\n-  user_osabi_state = osabi_auto;\n }"
    },
    {
      "sha": "f5f0eca6d1a55d63bd54400dfb8b1f8f6e6131a8",
      "filename": "gdb/python/py-param.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/python/py-param.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/python/py-param.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-param.c?ref=dedb7102b3b35f789fd5c140fe01917eaeae2853",
      "patch": "@@ -572,13 +572,13 @@ add_setshow_generic (int parmclass, enum command_class cmdclass,\n       break;\n \n     case var_enum:\n+      /* Initialize the value, just in case.  */\n+      self->value.cstringval = self->enumeration[0];\n       commands = add_setshow_enum_cmd (cmd_name.get (), cmdclass,\n \t\t\t\t       self->enumeration,\n \t\t\t\t       &self->value.cstringval, set_doc,\n \t\t\t\t       show_doc, help_doc, get_set_value,\n \t\t\t\t       get_show_value, set_list, show_list);\n-      /* Initialize the value, just in case.  */\n-      self->value.cstringval = self->enumeration[0];\n       break;\n \n     default:"
    },
    {
      "sha": "2de148c1b27c25d85f25ec08429b7b5f9c3a190b",
      "filename": "gdb/testsuite/gdb.python/py-parameter.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/testsuite/gdb.python/py-parameter.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dedb7102b3b35f789fd5c140fe01917eaeae2853/gdb/testsuite/gdb.python/py-parameter.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-parameter.exp?ref=dedb7102b3b35f789fd5c140fe01917eaeae2853",
      "patch": "@@ -364,3 +364,7 @@ test_really_undocumented_parameter\n test_deprecated_api_parameter\n test_integer_parameter\n test_throwing_parameter\n+\n+# This caused a gdb crash.\n+gdb_test \"python print(gdb.parameter('endian'))\" \"auto\" \\\n+    \"print endian parameter\""
    }
  ]
}