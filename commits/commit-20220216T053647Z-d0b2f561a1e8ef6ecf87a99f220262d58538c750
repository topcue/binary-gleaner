{
  "sha": "d0b2f561a1e8ef6ecf87a99f220262d58538c750",
  "node_id": "C_kwDOANOeidoAKGQwYjJmNTYxYTFlOGVmNmVjZjg3YTk5ZjIyMDI2MmQ1ODUzOGM3NTA",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-24T03:23:27Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2022-02-16T05:36:47Z"
    },
    "message": "sim: testsuite: cleanup the istarget * logic\n\nNow that the multitarget testing has settled, clean up the cases where\nistarget * is used.  This ends up being mostly style unindenting.",
    "tree": {
      "sha": "551de4314e04ce7f888ab2fa58cb34f3912ff482",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/551de4314e04ce7f888ab2fa58cb34f3912ff482"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d0b2f561a1e8ef6ecf87a99f220262d58538c750",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d0b2f561a1e8ef6ecf87a99f220262d58538c750",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d0b2f561a1e8ef6ecf87a99f220262d58538c750",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d0b2f561a1e8ef6ecf87a99f220262d58538c750/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bc85f56bfda7162688b9bea8dd942ec473bdb21b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc85f56bfda7162688b9bea8dd942ec473bdb21b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bc85f56bfda7162688b9bea8dd942ec473bdb21b"
    }
  ],
  "stats": {
    "total": 799,
    "additions": 332,
    "deletions": 467
  },
  "files": [
    {
      "sha": "abc11462f0951e1d4457e4d81e5f4555adee7f4f",
      "filename": "sim/testsuite/aarch64/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/aarch64/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/aarch64/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/aarch64/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"aarch64\"\n+# all machines\n+set all_machs \"aarch64\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "95a5759a5689ea7ccb67d34ac89a7b492117a88b",
      "filename": "sim/testsuite/arm/allinsn.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 13,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/arm/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/arm/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/arm/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,18 +2,14 @@\n \n sim_init\n \n-if { [istarget *] } {\n-    # all machines\n-    set all_machs \"xscale\"\n-\n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n+# all machines\n+set all_machs \"xscale\"\n+\n+# The .cgs suffix is for \"cgen .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "3e0fb333429a58e79db88e613a643d587fb9900d",
      "filename": "sim/testsuite/arm/iwmmxt/iwmmxt.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 13,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/arm/iwmmxt/iwmmxt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/arm/iwmmxt/iwmmxt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/arm/iwmmxt/iwmmxt.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,18 +2,14 @@\n \n sim_init\n \n-if { [istarget *] } {\n-    # all machines\n-    set all_machs \"xscale\"\n-\n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n+# all machines\n+set all_machs \"xscale\"\n+\n+# The .cgs suffix is for \"cgen .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "5ba5f648bb17e842c4b455f3beac2f0cb04fb9b6",
      "filename": "sim/testsuite/arm/misc.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 13,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/arm/misc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/arm/misc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/arm/misc.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,18 +2,14 @@\n \n sim_init\n \n-if { [istarget *] } {\n-    # all machines\n-    set all_machs \"arm7tdmi\"\n-\n-    # The .ms suffix is for \"miscellaneous .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.ms]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n+# all machines\n+set all_machs \"arm7tdmi\"\n+\n+# The .ms suffix is for \"miscellaneous .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.ms]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "db1d00d1318f47249bdf4ab09082340529b2c599",
      "filename": "sim/testsuite/arm/thumb/allthumb.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 13,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/arm/thumb/allthumb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/arm/thumb/allthumb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/arm/thumb/allthumb.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,18 +2,14 @@\n \n sim_init\n \n-if { [istarget *] } {\n-    # all machines\n-    set all_machs \"arm7tdmi\"\n-\n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n+# all machines\n+set all_machs \"arm7tdmi\"\n+\n+# The .cgs suffix is for \"cgen .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "0e5a7549b542e972692af5e7e7587feec02cbb6e",
      "filename": "sim/testsuite/arm/xscale/xscale.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 13,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/arm/xscale/xscale.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/arm/xscale/xscale.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/arm/xscale/xscale.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,18 +2,14 @@\n \n sim_init\n \n-if { [istarget *] } {\n-    # all machines\n-    set all_machs \"xscale\"\n-\n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n+# all machines\n+set all_machs \"xscale\"\n+\n+# The .cgs suffix is for \"cgen .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "4664686fb5aaf4da98a75793baf22e7928edbbd6",
      "filename": "sim/testsuite/avr/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/avr/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/avr/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/avr/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"avr\"\n+# all machines\n+set all_machs \"avr\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "fccad36c8665cf3fdef9df1d26928dd82f90dc14",
      "filename": "sim/testsuite/bfin/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/bfin/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/bfin/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/bfin/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -6,16 +6,13 @@ global CFLAGS_FOR_TARGET_init\n set CFLAGS_FOR_TARGET_init \"-mcpu=bf537\"\n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"bfin\"\n+# all machines\n+set all_machs \"bfin\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.\\[csS\\]]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.\\[csS\\]]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "98f0346776a777ac13e21f7aa85d5313e25ba317",
      "filename": "sim/testsuite/bpf/allinsn.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 15,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/bpf/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/bpf/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/bpf/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,23 +2,19 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"bpf\"\n+# all machines\n+set all_machs \"bpf\"\n \n-    global SIMFLAGS_FOR_TARGET\n-    set SIMFLAGS_FOR_TARGET \"--memory-size=4Mb\"\n+global SIMFLAGS_FOR_TARGET\n+set SIMFLAGS_FOR_TARGET \"--memory-size=4Mb\"\n \n-    global LDFLAGS_FOR_TARGET\n-    set LDFLAGS_FOR_TARGET \"-Ttext=0x0\"\n+global LDFLAGS_FOR_TARGET\n+set LDFLAGS_FOR_TARGET \"-Ttext=0x0\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "1bdda16635b08c2ffbe1dafafba8a0b4663d1bb5",
      "filename": "sim/testsuite/cr16/allinsn.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 16,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/cr16/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/cr16/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/cr16/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,23 +2,19 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"cr16\"\n+# all machines\n+set all_machs \"cr16\"\n \n-    global SIMFLAGS_FOR_TARGET\n-    # The cr16 linker sets the default LMA base to 0, and all the code\n-    # expects the VMA when running, so use that when running the tests.\n-    set SIMFLAGS_FOR_TARGET \"--load-vma\"\n+global SIMFLAGS_FOR_TARGET\n+# The cr16 linker sets the default LMA base to 0, and all the code\n+# expects the VMA when running, so use that when running the tests.\n+set SIMFLAGS_FOR_TARGET \"--load-vma\"\n \n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n+# The .cgs suffix is for \"cgen .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "40cdd965cfb9d68f41ef795b1daf4436b8af33fc",
      "filename": "sim/testsuite/cr16/misc.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 16,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/cr16/misc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/cr16/misc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/cr16/misc.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,23 +2,19 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"cr16\"\n+# all machines\n+set all_machs \"cr16\"\n \n-    global SIMFLAGS_FOR_TARGET\n-    # The cr16 linker sets the default LMA base to 0, and all the code\n-    # expects the VMA when running, so use that when running the tests.\n-    set SIMFLAGS_FOR_TARGET \"--load-vma\"\n+global SIMFLAGS_FOR_TARGET\n+# The cr16 linker sets the default LMA base to 0, and all the code\n+# expects the VMA when running, so use that when running the tests.\n+set SIMFLAGS_FOR_TARGET \"--load-vma\"\n \n-    # The .ms suffix is for \"miscellaneous .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.ms]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n+# The .ms suffix is for \"miscellaneous .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.ms]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "fe6b373ac43de60613d1b4b14bfce63f38154a19",
      "filename": "sim/testsuite/cris/asm/asm.exp",
      "status": "modified",
      "additions": 23,
      "deletions": 25,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/cris/asm/asm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/cris/asm/asm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/cris/asm/asm.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -17,31 +17,29 @@\n \n sim_init\n \n-if [istarget *] {\n-    global ASFLAGS_FOR_TARGET\n-    # All machines we test and the corresponding assembler option.  Needs\n-    # update if we build the simulator for crisv0 crisv3 and crisv8 too.\n-\n-    set combos {{\"crisv10\" \"--march=v10 --no-mul-bug-abort\"}\n-                {\"crisv32\" \"--march=v32\"}}\n-\n-    # We need to pass different assembler flags for each machine.\n-    # Specifying it here rather than adding a specifier to each and every\n-    # test-file is preferrable.\n-\n-    foreach combo $combos {\n-\tset mach [lindex $combo 0]\n-\tset ASFLAGS_FOR_TARGET \"[lindex $combo 1]\"\n-\n-\t# The .ms suffix is for \"miscellaneous .s\".\n-\tforeach src [lsort [glob -nocomplain $srcdir/$subdir/*.ms]] {\n-\t    # If we're only testing specific files and this isn't one of them,\n-\t    # skip it.\n-\t    if ![runtest_file_p $runtests $src] {\n-\t\tcontinue\n-\t    }\n-\n-\t    run_sim_test $src $mach\n+global ASFLAGS_FOR_TARGET\n+# All machines we test and the corresponding assembler option.  Needs\n+# update if we build the simulator for crisv0 crisv3 and crisv8 too.\n+\n+set combos {{\"crisv10\" \"--march=v10 --no-mul-bug-abort\"}\n+\t    {\"crisv32\" \"--march=v32\"}}\n+\n+# We need to pass different assembler flags for each machine.\n+# Specifying it here rather than adding a specifier to each and every\n+# test-file is preferrable.\n+\n+foreach combo $combos {\n+    set mach [lindex $combo 0]\n+    set ASFLAGS_FOR_TARGET \"[lindex $combo 1]\"\n+\n+    # The .ms suffix is for \"miscellaneous .s\".\n+    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.ms]] {\n+\t# If we're only testing specific files and this isn't one of them,\n+\t# skip it.\n+\tif ![runtest_file_p $runtests $src] {\n+\t    continue\n \t}\n+\n+\trun_sim_test $src $mach\n     }\n }"
    },
    {
      "sha": "430c22e2606d758aab277bdcb3899ba3e5e4b06d",
      "filename": "sim/testsuite/d10v/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/d10v/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/d10v/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/d10v/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"d10v\"\n+# all machines\n+set all_machs \"d10v\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "f751f3117e7cfc38cc66b7f4e43ef0251ec91428",
      "filename": "sim/testsuite/example-synacor/allinsn.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 12,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/example-synacor/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/example-synacor/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/example-synacor/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,19 +2,16 @@\n \n sim_init\n \n-if [istarget *] {\n-    # All machines.\n-    set all_machs \"example\"\n+# All machines.\n+set all_machs \"example\"\n \n-    global LDFLAGS_FOR_TARGET\n-    set LDFLAGS_FOR_TARGET \"-Ttext=0\"\n+global LDFLAGS_FOR_TARGET\n+set LDFLAGS_FOR_TARGET \"-Ttext=0\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "6831231e3301014456232a33a1f8fd376219c520",
      "filename": "sim/testsuite/frv/allinsn-a-b.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-a-b.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-a-b.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/allinsn-a-b.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -8,8 +8,7 @@ set cpu_option -mcpu\n \n # The .cgs suffix is for \"cgen .s\".\n foreach src [lsort [glob -nocomplain $srcdir/$subdir/\\[a-b\\]*.cgs]] {\n-    # If we're only testing specific files and this isn't one of them,\n-    # skip it.\n+    # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $src] {\n \tcontinue\n     }"
    },
    {
      "sha": "2d82fb47544a1aede82f3f08614db2a99b2b13c5",
      "filename": "sim/testsuite/frv/allinsn-c.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-c.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-c.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/allinsn-c.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -8,8 +8,7 @@ set cpu_option -mcpu\n \n # The .cgs suffix is for \"cgen .s\".\n foreach src [lsort [glob -nocomplain $srcdir/$subdir/\\[c\\]*.cgs]] {\n-    # If we're only testing specific files and this isn't one of them,\n-    # skip it.\n+    # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $src] {\n \tcontinue\n     }"
    },
    {
      "sha": "42645e1c6588fa13710705f1517e94d59748a135",
      "filename": "sim/testsuite/frv/allinsn-d-h.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-d-h.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-d-h.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/allinsn-d-h.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -8,8 +8,7 @@ set cpu_option -mcpu\n \n # The .cgs suffix is for \"cgen .s\".\n foreach src [lsort [glob -nocomplain $srcdir/$subdir/\\[d-h\\]*.cgs]] {\n-    # If we're only testing specific files and this isn't one of them,\n-    # skip it.\n+    # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $src] {\n \tcontinue\n     }"
    },
    {
      "sha": "faa07cde1eacd1e66b6c227fa926a1f068470c92",
      "filename": "sim/testsuite/frv/allinsn-i-l.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-i-l.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-i-l.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/allinsn-i-l.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -8,8 +8,7 @@ set cpu_option -mcpu\n \n # The .cgs suffix is for \"cgen .s\".\n foreach src [lsort [glob -nocomplain $srcdir/$subdir/\\[i-l\\]*.cgs]] {\n-    # If we're only testing specific files and this isn't one of them,\n-    # skip it.\n+    # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $src] {\n \tcontinue\n     }"
    },
    {
      "sha": "aba950773758dc44af75285e489ee6f7e7d47be3",
      "filename": "sim/testsuite/frv/allinsn-m.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-m.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-m.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/allinsn-m.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -8,8 +8,7 @@ set cpu_option -mcpu\n \n # The .cgs suffix is for \"cgen .s\".\n foreach src [lsort [glob -nocomplain $srcdir/$subdir/\\[m\\]*.cgs]] {\n-    # If we're only testing specific files and this isn't one of them,\n-    # skip it.\n+    # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $src] {\n \tcontinue\n     }"
    },
    {
      "sha": "3b41fef32126404f227f89867dbcb048d353d8a8",
      "filename": "sim/testsuite/frv/allinsn-n.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-n.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-n.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/allinsn-n.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -8,8 +8,7 @@ set cpu_option -mcpu\n \n # The .cgs suffix is for \"cgen .s\".\n foreach src [lsort [glob -nocomplain $srcdir/$subdir/\\[n\\]*.cgs]] {\n-    # If we're only testing specific files and this isn't one of them,\n-    # skip it.\n+    # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $src] {\n \tcontinue\n     }"
    },
    {
      "sha": "6e172fc38d0e013848d31e6dbbbc9c79a433ee81",
      "filename": "sim/testsuite/frv/allinsn-o-s.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-o-s.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-o-s.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/allinsn-o-s.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -8,8 +8,7 @@ set cpu_option -mcpu\n \n # The .cgs suffix is for \"cgen .s\".\n foreach src [lsort [glob -nocomplain $srcdir/$subdir/\\[o-s\\]*.cgs]] {\n-    # If we're only testing specific files and this isn't one of them,\n-    # skip it.\n+    # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $src] {\n \tcontinue\n     }"
    },
    {
      "sha": "52610c2ab8e372f787d3dfd6e252bc2ee0f98dc3",
      "filename": "sim/testsuite/frv/allinsn-t-z.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-t-z.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/allinsn-t-z.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/allinsn-t-z.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -8,8 +8,7 @@ set cpu_option -mcpu\n \n # The .cgs suffix is for \"cgen .s\".\n foreach src [lsort [glob -nocomplain $srcdir/$subdir/\\[t-z\\]*.cgs]] {\n-    # If we're only testing specific files and this isn't one of them,\n-    # skip it.\n+    # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $src] {\n \tcontinue\n     }"
    },
    {
      "sha": "b4fa18630c56ddc4670a821ca776338117bce401",
      "filename": "sim/testsuite/frv/fr400/allinsn.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 12,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/fr400/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/fr400/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/fr400/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,18 +2,15 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"fr400 fr405 fr450 fr550\"\n-    set cpu_option -mcpu\n+# all machines\n+set all_machs \"fr400 fr405 fr450 fr550\"\n+set cpu_option -mcpu\n \n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+# The .cgs suffix is for \"cgen .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "4e7360cb445e87a9e3bdd2eea84c97db7f3bb650",
      "filename": "sim/testsuite/frv/fr500/allinsn.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 12,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/fr500/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/fr500/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/fr500/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,18 +2,15 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"frv fr500 fr550\"\n-    set cpu_option -mcpu\n+# all machines\n+set all_machs \"frv fr500 fr550\"\n+set cpu_option -mcpu\n \n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+# The .cgs suffix is for \"cgen .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "6b4ce7774cdeca8bd155b67a482c17d17bd7f982",
      "filename": "sim/testsuite/frv/fr550/allinsn.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 12,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/fr550/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/fr550/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/fr550/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,18 +2,15 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"fr550\"\n-    set cpu_option -mcpu\n+# all machines\n+set all_machs \"fr550\"\n+set cpu_option -mcpu\n \n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+# The .cgs suffix is for \"cgen .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "fe88591acf98106dddb1f398fe5267aac2d8f48e",
      "filename": "sim/testsuite/frv/interrupts.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 12,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/interrupts.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/interrupts.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/interrupts.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,18 +2,15 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"frv fr500 fr550 fr400\"\n-    set cpu_option -mcpu\n+# all machines\n+set all_machs \"frv fr500 fr550 fr400\"\n+set cpu_option -mcpu\n \n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/interrupts/*.cgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+# The .cgs suffix is for \"cgen .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/interrupts/*.cgs]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "b5cacf80746768a5b5de48f360940e62add6632d",
      "filename": "sim/testsuite/frv/misc.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 12,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/misc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/misc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/misc.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,18 +2,15 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"frv fr500 fr550 fr400 fr405 fr450\"\n-    set cpu_option -mcpu\n+# all machines\n+set all_machs \"frv fr500 fr550 fr400 fr405 fr450\"\n+set cpu_option -mcpu\n \n-    # The .ms suffix is for \"miscellaneous .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.ms]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+# The .ms suffix is for \"miscellaneous .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.ms]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "5fe27087ef35fcde9323f0a38929e6e54267ac15",
      "filename": "sim/testsuite/frv/parallel.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 12,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/parallel.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/frv/parallel.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/parallel.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,18 +2,15 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"frv fr500 fr550 fr400\"\n-    set cpu_option -mcpu\n+# all machines\n+set all_machs \"frv fr500 fr550 fr400\"\n+set cpu_option -mcpu\n \n-    # The .pcgs suffix is for \"parallel cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.pcgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+# The .pcgs suffix is for \"parallel cgen .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.pcgs]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "bd3a6bb10ac89ee8be1b6d3655261436710be539",
      "filename": "sim/testsuite/ft32/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/ft32/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/ft32/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/ft32/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"ft32\"\n+# all machines\n+set all_machs \"ft32\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "4f0e6db91bff3a1e516cf90df61b72473350a371",
      "filename": "sim/testsuite/h8300/allinsn.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 10,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/h8300/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/h8300/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/h8300/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,12 @@\n \n sim_init\n \n-if {[istarget *]} {\n-    set all_machs \"h8300 h8300h h8300s h8sx\"\n+set all_machs \"h8300 h8300h h8300s h8sx\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "554c6aedf5a4e9a2b99e2ac757e1df48b4382dad",
      "filename": "sim/testsuite/iq2000/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/iq2000/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/iq2000/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/iq2000/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"iq2000\"\n+# all machines\n+set all_machs \"iq2000\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "67c70ecadd1b7822a05e11771f497976301ae7e0",
      "filename": "sim/testsuite/lm32/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/lm32/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/lm32/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/lm32/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"lm32\"\n+# all machines\n+set all_machs \"lm32\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "4df54fb8c8f36aa283e3e2067e0afbd858b39215",
      "filename": "sim/testsuite/m32c/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/m32c/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/m32c/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/m32c/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -3,16 +3,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"m32c\"\n+# all machines\n+set all_machs \"m32c\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "fb8646f8ccc2972e140efb97eeb79294ecf7f020",
      "filename": "sim/testsuite/m32r/allinsn.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 14,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/m32r/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/m32r/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/m32r/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,19 +2,14 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"m32r\"\n-\n-\n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n+# all machines\n+set all_machs \"m32r\"\n+\n+# The .cgs suffix is for \"cgen .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "c5a0c7d4404ee14f556351a4e7907a025ce02051",
      "filename": "sim/testsuite/m32r/misc.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 14,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/m32r/misc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/m32r/misc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/m32r/misc.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,19 +2,14 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"m32r\"\n-\n-\n-    # The .ms suffix is for \"miscellaneous .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.ms]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n+# all machines\n+set all_machs \"m32r\"\n+\n+# The .ms suffix is for \"miscellaneous .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.ms]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "5a10cc5131cf6034ed6235866c9225f1f5a26885",
      "filename": "sim/testsuite/m68hc11/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/m68hc11/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/m68hc11/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/m68hc11/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"m68hc11\"\n+# all machines\n+set all_machs \"m68hc11\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "3333fdc3aeda179e64afb322f4164fc6a6eb645c",
      "filename": "sim/testsuite/mcore/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/mcore/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/mcore/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/mcore/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"mcore\"\n+# all machines\n+set all_machs \"mcore\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "97dc6ec46249f7dd422939a22aa94e1009a9f81c",
      "filename": "sim/testsuite/microblaze/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/microblaze/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/microblaze/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/microblaze/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"microblaze\"\n+# all machines\n+set all_machs \"microblaze\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "96a1c150c6de7a93280388d782a3af89a632fdb6",
      "filename": "sim/testsuite/mn10300/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/mn10300/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/mn10300/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/mn10300/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"mn10300\"\n+# all machines\n+set all_machs \"mn10300\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "30871685a2049dbdd8d9ccf61ba59ab4d19959f1",
      "filename": "sim/testsuite/moxie/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/moxie/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/moxie/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/moxie/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"moxie\"\n+# all machines\n+set all_machs \"moxie\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "ee56936cb90003985999a6f806da1b239bc19a81",
      "filename": "sim/testsuite/msp430/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/msp430/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/msp430/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/msp430/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"msp430\"\n+# all machines\n+set all_machs \"msp430\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "15a7fd47c79217d3c8f6433843d00820118a2ef1",
      "filename": "sim/testsuite/or1k/alltests.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 12,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/or1k/alltests.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/or1k/alltests.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/or1k/alltests.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -17,19 +17,14 @@\n \n sim_init\n \n-if [istarget *] {\n-    set all_machs \"or1k\"\n+set all_machs \"or1k\"\n \n-    global LDFLAGS_FOR_TARGET\n-    set LDFLAGS_FOR_TARGET \"-T $srcdir/$subdir/or1k-test.ld\"\n+global LDFLAGS_FOR_TARGET\n+set LDFLAGS_FOR_TARGET \"-T $srcdir/$subdir/or1k-test.ld\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.S]] {\n-\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.S]] {\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n-\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "465582f56377b227474793f849f36054d0321120",
      "filename": "sim/testsuite/pru/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/pru/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/pru/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/pru/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -20,16 +20,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"pru\"\n+# all machines\n+set all_machs \"pru\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "972edf4d5ecf95b538ed069e59d2f2373c6f7082",
      "filename": "sim/testsuite/riscv/allinsn.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/riscv/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/riscv/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/riscv/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,16 +2,13 @@\n \n sim_init\n \n-if [istarget *] {\n-    # all machines\n-    set all_machs \"riscv\"\n+# all machines\n+set all_machs \"riscv\"\n \n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "4eabdf2602c9fb03b0ba16ac90095432858cfef9",
      "filename": "sim/testsuite/sh/allinsn.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/sh/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/sh/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sh/allinsn.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -14,8 +14,6 @@ foreach opt $board_variant_list {\n     }\n }\n \n-if [istarget *] {\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n-\trun_sim_test $src $all_machs\n-    }\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.s]] {\n+    run_sim_test $src $all_machs\n }"
    },
    {
      "sha": "4cc461c30fd62f774788dd4bde9ad19a54d7d9cb",
      "filename": "sim/testsuite/v850/allinsns.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 16,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/v850/allinsns.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0b2f561a1e8ef6ecf87a99f220262d58538c750/sim/testsuite/v850/allinsns.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/v850/allinsns.exp?ref=d0b2f561a1e8ef6ecf87a99f220262d58538c750",
      "patch": "@@ -2,23 +2,20 @@\n \n sim_init\n \n-if [istarget *] {\n-    # All machines.\n-    # Should add more cpus if the testsuite adds coverage for their insns, but\n-    # at the core level, there's no deviation beyond these two.\n-    set all_machs \"v850e v850\"\n+# All machines.\n+# Should add more cpus if the testsuite adds coverage for their insns, but\n+# at the core level, there's no deviation beyond these two.\n+set all_machs \"v850e v850\"\n \n-    # gas doesn't support any '=' option for v850.\n-    set cpu_option_sep \"\"\n-    set cpu_option -m\n+# gas doesn't support any '=' option for v850.\n+set cpu_option_sep \"\"\n+set cpu_option -m\n \n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\trun_sim_test $src $all_machs\n+# The .cgs suffix is for \"cgen .s\".\n+foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $src] {\n+\tcontinue\n     }\n+    run_sim_test $src $all_machs\n }"
    }
  ]
}