{
  "sha": "7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2U5YWQzYTM1Y2RlMjM0MmUwN2MzNDM0NWQ1ZWU2NzFlYThhZWViNA==",
  "commit": {
    "author": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2019-09-18T00:59:08Z"
    },
    "committer": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2019-09-18T00:59:08Z"
    },
    "message": "RISC-V: Gate opcode tables by enum rather than string.\n\nGeneralize opcode arch dependencies so that we can support the\noverlapping B extension Zb* subsets.\n\n\t2019-09-17  Maxim Blinov  <maxim.blinov@embecosm.com>\n\tgas/\n\t* config/tc-riscv.c (riscv_multi_subset_supports): Handle\n\tinsn_class enum rather than subset char string.\n\t(riscv_ip): Update call to riscv_multi_subset_supports.\n\tinclude/\n\t* opcode/riscv.h (riscv_insn_class): New enum.\n\t* opcode/riscv.h (struct riscv_opcode): Change\n\tsubset field to insn_class field.\n\topcodes/\n\t* riscv-opc.c (riscv_opcodes): Change subset field\n\tto insn_class field for all instructions.\n\t(riscv_insn_types): Likewise.",
    "tree": {
      "sha": "5e7c5bf918a812bd4b385addf9fe10b616e10f9c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5e7c5bf918a812bd4b385addf9fe10b616e10f9c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "491144b5e21bbfd41969c175aebb663976f59058",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/491144b5e21bbfd41969c175aebb663976f59058",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/491144b5e21bbfd41969c175aebb663976f59058"
    }
  ],
  "stats": {
    "total": 1384,
    "additions": 716,
    "deletions": 668
  },
  "files": [
    {
      "sha": "f22727c7cc50fcf071497d2d5688bf65bc4fede0",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4",
      "patch": "@@ -1,3 +1,9 @@\n+2019-09-17  Maxim Blinov  <maxim.blinov@embecosm.com>\n+\n+\t* config/tc-riscv.c (riscv_multi_subset_supports): Handle\n+\tinsn_class enum rather than subset char string.\n+\t(riscv_ip): Update call to riscv_multi_subset_supports.\n+\n 2019-09-16  Phil Blundell  <pb@pbcl.net>\n \n \t* Makefile.in, configure, doc/Makefile.in: Regenerated."
    },
    {
      "sha": "e50505138e95d386d51c80ca3119b5838b47e608",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 20,
      "deletions": 7,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4",
      "patch": "@@ -121,15 +121,28 @@ riscv_subset_supports (const char *feature)\n }\n \n static bfd_boolean\n-riscv_multi_subset_supports (const char *features[])\n+riscv_multi_subset_supports (enum riscv_insn_class insn_class)\n {\n-  unsigned i = 0;\n-  bfd_boolean supported = TRUE;\n+  switch (insn_class)\n+    {\n+    case INSN_CLASS_I: return riscv_subset_supports (\"i\");\n+    case INSN_CLASS_C: return riscv_subset_supports (\"c\");\n+    case INSN_CLASS_A: return riscv_subset_supports (\"a\");\n+    case INSN_CLASS_M: return riscv_subset_supports (\"m\");\n+    case INSN_CLASS_F: return riscv_subset_supports (\"f\");\n+    case INSN_CLASS_D: return riscv_subset_supports (\"d\");\n+    case INSN_CLASS_D_AND_C:\n+      return riscv_subset_supports (\"d\") && riscv_subset_supports (\"c\");\n+\n+    case INSN_CLASS_F_AND_C:\n+      return riscv_subset_supports (\"f\") && riscv_subset_supports (\"c\");\n \n-  for (;features[i]; ++i)\n-    supported = supported && riscv_subset_supports (features[i]);\n+    case INSN_CLASS_Q: return riscv_subset_supports (\"q\");\n \n-  return supported;\n+    default:\n+      as_fatal (\"Unreachable\");\n+      return FALSE;\n+    }\n }\n \n /* Set which ISA and extensions are available.  */\n@@ -1427,7 +1440,7 @@ riscv_ip (char *str, struct riscv_cl_insn *ip, expressionS *imm_expr,\n       if ((insn->xlen_requirement != 0) && (xlen != insn->xlen_requirement))\n \tcontinue;\n \n-      if (!riscv_multi_subset_supports (insn->subset))\n+      if (!riscv_multi_subset_supports (insn->insn_class))\n \tcontinue;\n \n       create_insn (ip, insn);"
    },
    {
      "sha": "c725bfbbc7533af77e6969e8df2da5ad736fbcc7",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4",
      "patch": "@@ -1,3 +1,9 @@\n+2019-09-17  Maxim Blinov  <maxim.blinov@embecosm.com>\n+\n+\t* opcode/riscv.h (riscv_insn_class): New enum.\n+\t* opcode/riscv.h (struct riscv_opcode): Change\n+\tsubset field to insn_class field.\n+\n 2019-09-09  Phil Blundell  <pb@pbcl.net>\n \n \tbinutils 2.33 branch created."
    },
    {
      "sha": "bfb96c86b68d813c71ffd723ca4331cf9b5d1b6d",
      "filename": "include/opcode/riscv.h",
      "status": "modified",
      "additions": 20,
      "deletions": 3,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/include/opcode/riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/include/opcode/riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv.h?ref=7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4",
      "patch": "@@ -294,6 +294,23 @@ static const char * const riscv_pred_succ[16] =\n /* The maximal number of subset can be required. */\n #define MAX_SUBSET_NUM 4\n \n+/* All RISC-V instructions belong to at least one of these classes.  */\n+\n+enum riscv_insn_class\n+  {\n+   INSN_CLASS_NONE,\n+\n+   INSN_CLASS_I,\n+   INSN_CLASS_C,\n+   INSN_CLASS_A,\n+   INSN_CLASS_M,\n+   INSN_CLASS_F,\n+   INSN_CLASS_D,\n+   INSN_CLASS_D_AND_C,\n+   INSN_CLASS_F_AND_C,\n+   INSN_CLASS_Q,\n+  };\n+\n /* This structure holds information for a particular instruction.  */\n \n struct riscv_opcode\n@@ -302,9 +319,9 @@ struct riscv_opcode\n   const char *name;\n   /* The requirement of xlen for the instruction, 0 if no requirement.  */\n   unsigned xlen_requirement;\n-  /* An array of ISA subset name (I, M, A, F, D, Xextension), must ended\n-     with a NULL pointer sential.  */\n-  const char *subset[MAX_SUBSET_NUM];\n+  /* Class to which this instruction belongs.  Used to decide whether or\n+     not this instruction is legal in the current -march context.  */\n+  enum riscv_insn_class insn_class;\n   /* A string describing the arguments for this instruction.  */\n   const char *args;\n   /* The basic opcode for the instruction.  When assembling, this"
    },
    {
      "sha": "8f2ca7257ec7e8bddc191aa26349f057b8cddea0",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4",
      "patch": "@@ -1,3 +1,9 @@\n+2019-09-17  Maxim Blinov  <maxim.blinov@embecosm.com>\n+\n+\t* riscv-opc.c (riscv_opcodes): Change subset field\n+\tto insn_class field for all instructions.\n+\t(riscv_insn_types): Likewise.\n+\n 2019-09-16  Phil Blundell  <pb@pbcl.net>\n \n \t* configure: Regenerated."
    },
    {
      "sha": "06c752a96d539a5d2212b0d7087993c6fe54c477",
      "filename": "opcodes/riscv-opc.c",
      "status": "modified",
      "additions": 658,
      "deletions": 658,
      "changes": 1316,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/opcodes/riscv-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4/opcodes/riscv-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-opc.c?ref=7e9ad3a35cde2342e07c34345d5ee671ea8aeeb4"
    }
  ]
}