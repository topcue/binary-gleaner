{
  "sha": "fece451c2aca57b095e7e4063e342781cf74aa75",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmVjZTQ1MWMyYWNhNTdiMDk1ZTdlNDA2M2UzNDI3ODFjZjc0YWE3NQ==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2021-03-09T14:16:23Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2021-03-12T17:21:42Z"
    },
    "message": "Use RAII to set the per-thread SIGSEGV handler\n\nThis avoids using a thread-local extern variable, which causes link errors\non some platforms, notably Cygwin.  But I think this is a better pattern\neven outside of working around linker bugs because it encapsulates direct\naccess to the variable inside the class, instead of having a global extern\nvariable.\n\nThe cygwin link error is:\ncp-support.o: in function `gdb_demangle(char const*, int)':\n/home/Christian/binutils-gdb/obj/gdb/../../gdb/cp-support.c:1619:(.text+0x6472): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `TLS init function for thread_local_segv_handler'\n/home/Christian/binutils-gdb/obj/gdb/../../gdb/cp-support.c:1619:(.text+0x648b): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `TLS init function for thread_local_segv_handler'\ncollect2: error: ld returned 1 exit status\n\n2021-03-12  Christian Biesinger  <cbiesinger@google.com>\n\n\tPR threads/27239\n\t* cp-support.c: Use scoped_segv_handler_restore.\n\t* event-top.c (thread_local_segv_handler): Made static.\n\t(scoped_segv_handler_restore::scoped_segv_handler_restore):\n\tNew function.\n\t(scoped_segv_handler_restore::~scoped_segv_handler_restore): New\n\tfunction.\n\t* event-top.h (class scoped_segv_handler_restore): New class.\n\t(thread_local_segv_handler): Removed.",
    "tree": {
      "sha": "b1b52ba0a7f3399f65b4b416bc4af7f8ad7b754b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b1b52ba0a7f3399f65b4b416bc4af7f8ad7b754b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fece451c2aca57b095e7e4063e342781cf74aa75",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fece451c2aca57b095e7e4063e342781cf74aa75",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fece451c2aca57b095e7e4063e342781cf74aa75",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fece451c2aca57b095e7e4063e342781cf74aa75/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "be3b926d8d2dde16a55e9e303fadf95164e13ebf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be3b926d8d2dde16a55e9e303fadf95164e13ebf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/be3b926d8d2dde16a55e9e303fadf95164e13ebf"
    }
  ],
  "stats": {
    "total": 63,
    "additions": 51,
    "deletions": 12
  },
  "files": [
    {
      "sha": "0157dea61580e93206262ae2c374689ec5c9e105",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fece451c2aca57b095e7e4063e342781cf74aa75/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fece451c2aca57b095e7e4063e342781cf74aa75/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fece451c2aca57b095e7e4063e342781cf74aa75",
      "patch": "@@ -1,3 +1,15 @@\n+2021-03-12  Christian Biesinger  <cbiesinger@google.com>\n+\n+\tPR threads/27239\n+\t* cp-support.c: Use scoped_segv_handler_restore.\n+\t* event-top.c (thread_local_segv_handler): Made static.\n+\t(scoped_segv_handler_restore::scoped_segv_handler_restore):\n+\tNew function.\n+\t(scoped_segv_handler_restore::~scoped_segv_handler_restore): New\n+\tfunction.\n+\t* event-top.h (class scoped_segv_handler_restore): New class.\n+\t(thread_local_segv_handler): Removed.\n+\n 2021-03-10  Tom Tromey  <tromey@adacore.com>\n \n \t* parser-defs.h (parser_state): Change completion to bool."
    },
    {
      "sha": "fb4e4289777aac9ddcc97faf6155bf8701b9ed52",
      "filename": "gdb/cp-support.c",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fece451c2aca57b095e7e4063e342781cf74aa75/gdb/cp-support.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fece451c2aca57b095e7e4063e342781cf74aa75/gdb/cp-support.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cp-support.c?ref=fece451c2aca57b095e7e4063e342781cf74aa75",
      "patch": "@@ -1615,11 +1615,10 @@ gdb_demangle (const char *name, int options)\n   int crash_signal = 0;\n \n #ifdef HAVE_WORKING_FORK\n-  scoped_restore restore_segv\n-    = make_scoped_restore (&thread_local_segv_handler,\n-\t\t\t   catch_demangler_crashes\n-\t\t\t   ? gdb_demangle_signal_handler\n-\t\t\t   : nullptr);\n+  scoped_segv_handler_restore restore_segv\n+    (catch_demangler_crashes\n+     ? gdb_demangle_signal_handler\n+     : nullptr);\n \n   bool core_dump_allowed = gdb_demangle_attempt_core_dump;\n   SIGJMP_BUF jmp_buf;"
    },
    {
      "sha": "fb0df943f650cb3b3a084f50b34033de78d5d18e",
      "filename": "gdb/event-top.c",
      "status": "modified",
      "additions": 21,
      "deletions": 2,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fece451c2aca57b095e7e4063e342781cf74aa75/gdb/event-top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fece451c2aca57b095e7e4063e342781cf74aa75/gdb/event-top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/event-top.c?ref=fece451c2aca57b095e7e4063e342781cf74aa75",
      "patch": "@@ -850,9 +850,17 @@ gdb_readline_no_editing_callback (gdb_client_data client_data)\n }\n \f\n \n-/* See event-top.h.  */\n+/* The SIGSEGV handler for this thread, or NULL if there is none.  GDB\n+   always installs a global SIGSEGV handler, and then lets threads\n+   indicate their interest in handling the signal by setting this\n+   thread-local variable.\n \n-thread_local void (*thread_local_segv_handler) (int);\n+   This is a static variable instead of extern because on various platforms\n+   (notably Cygwin) extern thread_local variables cause link errors.  So\n+   instead, we have scoped_segv_handler_restore, which also makes it impossible\n+   to accidentally forget to restore it to the original value.  */\n+\n+static thread_local void (*thread_local_segv_handler) (int);\n \n static void handle_sigsegv (int sig);\n \n@@ -1288,6 +1296,17 @@ gdb_disable_readline (void)\n   delete_file_handler (ui->input_fd);\n }\n \n+scoped_segv_handler_restore::scoped_segv_handler_restore (segv_handler_t new_handler)\n+{\n+  m_old_handler = thread_local_segv_handler;\n+  thread_local_segv_handler = new_handler;\n+}\n+\n+scoped_segv_handler_restore::~scoped_segv_handler_restore()\n+{\n+  thread_local_segv_handler = m_old_handler;\n+}\n+\n static const char debug_event_loop_off[] = \"off\";\n static const char debug_event_loop_all_except_ui[] = \"all-except-ui\";\n static const char debug_event_loop_all[] = \"all\";"
    },
    {
      "sha": "b036f1385c591d87ac1cac4a9a359d76896eb116",
      "filename": "gdb/event-top.h",
      "status": "modified",
      "additions": 14,
      "deletions": 5,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fece451c2aca57b095e7e4063e342781cf74aa75/gdb/event-top.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fece451c2aca57b095e7e4063e342781cf74aa75/gdb/event-top.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/event-top.h?ref=fece451c2aca57b095e7e4063e342781cf74aa75",
      "patch": "@@ -70,10 +70,19 @@ extern void gdb_rl_callback_handler_install (const char *prompt);\n    currently installed.  */\n extern void gdb_rl_callback_handler_reinstall (void);\n \n-/* The SIGSEGV handler for this thread, or NULL if there is none.  GDB\n-   always installs a global SIGSEGV handler, and then lets threads\n-   indicate their interest in handling the signal by setting this\n-   thread-local variable.  */\n-extern thread_local void (*thread_local_segv_handler) (int);\n+typedef void (*segv_handler_t) (int);\n+\n+/* On construction, replaces the current thread's SIGSEGV handler with\n+   the provided one.  On destruction, restores the handler to the\n+   original one.  */\n+class scoped_segv_handler_restore\n+{\n+ public:\n+  scoped_segv_handler_restore (segv_handler_t new_handler);\n+  ~scoped_segv_handler_restore ();\n+\n+ private:\n+  segv_handler_t m_old_handler;\n+};\n \n #endif"
    }
  ]
}