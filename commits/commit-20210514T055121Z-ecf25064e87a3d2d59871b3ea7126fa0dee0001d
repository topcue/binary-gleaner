{
  "sha": "ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWNmMjUwNjRlODdhM2QyZDU5ODcxYjNlYTcxMjZmYTBkZWUwMDAxZA==",
  "commit": {
    "author": {
      "name": "Kent Cheung",
      "email": "kent.cheung@arm.com",
      "date": "2021-05-13T14:42:20Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-14T05:51:21Z"
    },
    "message": "gdb: fix pretty printing max depth behaviour\n\nThe 'print max-depth' feature incorrectly causes GDB to skip printing\nthe string representation of pretty printed variables if the variable\nis stored at a nested depth corresponding to the set max-depth value.\nThis change ensures that it is always printed before checking whether\nthe maximum print depth has been reached.\n\nRegression tested with GCC 7.3.0 on x86_64, ppc64le, aarch64.\n\ngdb/ChangeLog:\n\n\t* cp-valprint.c (cp_print_value): Replaced duplicate code.\n\t* guile/scm-pretty-print.c (ppscm_print_children): Check max_depth\n\tjust before printing child values.\n\t(gdbscm_apply_val_pretty_printer): Don't check max_depth before\n\tprinting string representation.\n\t* python/py-prettyprint.c (print_children): Check max_depth just\n\tbefore printing child values.\n\t(gdbpy_apply_val_pretty_printer): Don't check max_depth before\n\tprinting string representation.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.python/py-format-string.c: Added a variable to test.\n\t* gdb.python/py-format-string.exp: Check string representation is\n\tprinted at appropriate max_depth settings.\n\t* gdb.python/py-nested-maps.exp: Likewise.\n\t* gdb.guile/scm-pretty-print.exp: Add additional tests.",
    "tree": {
      "sha": "da6aa892b6386531716e8e1b3b33f4168f09d3e4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/da6aa892b6386531716e8e1b3b33f4168f09d3e4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/comments",
  "author": {
    "login": "kent-cheung-arm",
    "id": 40630626,
    "node_id": "MDQ6VXNlcjQwNjMwNjI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/40630626?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kent-cheung-arm",
    "html_url": "https://github.com/kent-cheung-arm",
    "followers_url": "https://api.github.com/users/kent-cheung-arm/followers",
    "following_url": "https://api.github.com/users/kent-cheung-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/kent-cheung-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kent-cheung-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kent-cheung-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/kent-cheung-arm/orgs",
    "repos_url": "https://api.github.com/users/kent-cheung-arm/repos",
    "events_url": "https://api.github.com/users/kent-cheung-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kent-cheung-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "64654371d6324794d11131fc95c1bc4caaaf173d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/64654371d6324794d11131fc95c1bc4caaaf173d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/64654371d6324794d11131fc95c1bc4caaaf173d"
    }
  ],
  "stats": {
    "total": 114,
    "additions": 77,
    "deletions": 37
  },
  "files": [
    {
      "sha": "7059ba2a51c3d2a1fe3d3d91a5f6c616afcbff97",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
      "patch": "@@ -1,3 +1,15 @@\n+2021-05-14  Kent Cheung  <kent.cheung@arm.com>\n+\n+\t* cp-valprint.c (cp_print_value): Replaced duplicate code.\n+\t* guile/scm-pretty-print.c (ppscm_print_children): Check max_depth\n+\tjust before printing child values.\n+\t(gdbscm_apply_val_pretty_printer): Don't check max_depth before\n+\tprinting string representation.\n+\t* python/py-prettyprint.c (print_children): Check max_depth just\n+\tbefore printing child values.\n+\t(gdbpy_apply_val_pretty_printer): Don't check max_depth before\n+\tprinting string representation.\n+\n 2021-05-14  Mike Frysinger  <vapier@gentoo.org>\n \n \t* remote-sim.c: Change gdb/callback.h & gdb/remote-sim.h includes to"
    },
    {
      "sha": "6c0449458698dfc06b9a5fb380f89f7e8bf3ea76",
      "filename": "gdb/cp-valprint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/cp-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/cp-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cp-valprint.c?ref=ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
      "patch": "@@ -495,14 +495,8 @@ cp_print_value (struct value *val, struct ui_file *stream,\n \t{\n \t  int result = 0;\n \n-\t  if (options->max_depth > -1\n-\t      && recurse >= options->max_depth)\n-\t    {\n-\t      const struct language_defn *language = current_language;\n-\t      gdb_assert (language->struct_too_deep_ellipsis () != NULL);\n-\t      fputs_filtered (language->struct_too_deep_ellipsis (), stream);\n-\t    }\n-\t  else\n+\t  if (!val_print_check_max_depth (stream, recurse, options,\n+\t\t\t\t\t  current_language))\n \t    {\n \t      struct value *baseclass_val = value_primitive_field (val, 0,\n \t\t\t\t\t\t\t\t   i, type);"
    },
    {
      "sha": "2dd7798a9a1d2d2af283f58cbeac90e2bf116629",
      "filename": "gdb/guile/scm-pretty-print.c",
      "status": "modified",
      "additions": 16,
      "deletions": 14,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/guile/scm-pretty-print.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/guile/scm-pretty-print.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-pretty-print.c?ref=ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
      "patch": "@@ -818,21 +818,29 @@ ppscm_print_children (SCM printer, enum display_hint hint,\n       gdb::unique_xmalloc_ptr<char> name\n \t= gdbscm_scm_to_c_string (scm_name);\n \n-      /* Print initial \"{\".  For other elements, there are three cases:\n+      /* Print initial \"=\" to separate print_string_repr output and\n+\t children.  For other elements, there are three cases:\n \t 1. Maps.  Print a \",\" after each value element.\n \t 2. Arrays.  Always print a \",\".\n \t 3. Other.  Always print a \",\".  */\n       if (i == 0)\n-\t{\n-\t if (printed_nothing)\n-\t   fputs_filtered (\"{\", stream);\n-\t else\n-\t   fputs_filtered (\" = {\", stream);\n-       }\n-\n+      {\n+\tif (!printed_nothing)\n+\t  fputs_filtered (\" = \", stream);\n+      }\n       else if (! is_map || i % 2 == 0)\n \tfputs_filtered (pretty ? \",\" : \", \", stream);\n \n+      /* Skip printing children if max_depth has been reached.  This check\n+\t is performed after print_string_repr and the \"=\" separator so that\n+\t these steps are not skipped if the variable is located within the\n+\t permitted depth.  */\n+      if (val_print_check_max_depth (stream, recurse, options, language))\n+\tgoto done;\n+      else if (i == 0)\n+\t/* Print initial \"{\" to bookend children.  */\n+\tfputs_filtered (\"{\", stream);\n+\n       /* In summary mode, we just want to print \"= {...}\" if there is\n \t a value.  */\n       if (options->summary)\n@@ -991,12 +999,6 @@ gdbscm_apply_val_pretty_printer (const struct extension_language_defn *extlang,\n     }\n   gdb_assert (ppscm_is_pretty_printer_worker (printer));\n \n-  if (val_print_check_max_depth (stream, recurse, options, language))\n-    {\n-      result = EXT_LANG_RC_OK;\n-      goto done;\n-    }\n-\n   /* If we are printing a map, we want some special formatting.  */\n   hint = ppscm_get_display_hint_enum (printer);\n   if (hint == HINT_ERROR)"
    },
    {
      "sha": "fef4dcd66fbba79aebaa468bbfb369eec16f841c",
      "filename": "gdb/python/py-prettyprint.c",
      "status": "modified",
      "additions": 16,
      "deletions": 12,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/python/py-prettyprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/python/py-prettyprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-prettyprint.c?ref=ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
      "patch": "@@ -431,22 +431,29 @@ print_children (PyObject *printer, const char *hint,\n \t  continue;\n \t}\n \n-      /* Print initial \"{\".  For other elements, there are three\n-\t cases:\n+      /* Print initial \"=\" to separate print_string_repr output and\n+\t children.  For other elements, there are three cases:\n \t 1. Maps.  Print a \",\" after each value element.\n \t 2. Arrays.  Always print a \",\".\n \t 3. Other.  Always print a \",\".  */\n       if (i == 0)\n-\t{\n-\t if (is_py_none)\n-\t   fputs_filtered (\"{\", stream);\n-\t else\n-\t   fputs_filtered (\" = {\", stream);\n-       }\n-\n+      {\n+\tif (!is_py_none)\n+\t  fputs_filtered (\" = \", stream);\n+      }\n       else if (! is_map || i % 2 == 0)\n \tfputs_filtered (pretty ? \",\" : \", \", stream);\n \n+      /* Skip printing children if max_depth has been reached.  This check\n+\t is performed after print_string_repr and the \"=\" separator so that\n+\t these steps are not skipped if the variable is located within the\n+\t permitted depth.  */\n+      if (val_print_check_max_depth (stream, recurse, options, language))\n+\treturn;\n+      else if (i == 0)\n+\t/* Print initial \"{\" to bookend children.  */\n+\tfputs_filtered (\"{\", stream);\n+\n       /* In summary mode, we just want to print \"= {...}\" if there is\n \t a value.  */\n       if (options->summary)\n@@ -597,9 +604,6 @@ gdbpy_apply_val_pretty_printer (const struct extension_language_defn *extlang,\n   if (printer == Py_None)\n     return EXT_LANG_RC_NOP;\n \n-  if (val_print_check_max_depth (stream, recurse, options, language))\n-    return EXT_LANG_RC_OK;\n-\n   /* If we are printing a map, we want some special formatting.  */\n   gdb::unique_xmalloc_ptr<char> hint (gdbpy_get_display_hint (printer.get ()));\n "
    },
    {
      "sha": "cb0a04ebcc076c7ac8c71060b6833adabc19b6f0",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
      "patch": "@@ -1,3 +1,12 @@\n+2021-05-14  Kent Cheung  <kent.cheung@arm.com>\n+\t    Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.python/py-format-string.c: Added a variable to test.\n+\t* gdb.python/py-format-string.exp: Check string representation is\n+\tprinted at appropriate max_depth settings.\n+\t* gdb.python/py-nested-maps.exp: Likewise.\n+\t* gdb.guile/scm-pretty-print.exp: Add additional tests.\n+\n 2021-05-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.guile/scm-pretty-print.exp (run_lang_tests): Give some tests"
    },
    {
      "sha": "7bd9d469ff6c4f6f02aaa8d46755e13fd19e23c2",
      "filename": "gdb/testsuite/gdb.guile/scm-pretty-print.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/testsuite/gdb.guile/scm-pretty-print.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/testsuite/gdb.guile/scm-pretty-print.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.guile/scm-pretty-print.exp?ref=ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
      "patch": "@@ -92,6 +92,10 @@ proc run_lang_tests {exefile lang} {\n \tgdb_test \"print x\" \" = \\\"this is x\\\"\"\n \tgdb_test \"print cstring\" \" = \\\"const string\\\"\"\n \n+\tgdb_test_no_output \"set print max-depth 0\"\n+\tgdb_test \"print cstring\" \" = \\\"const string\\\"\"\n+\tgdb_test_no_output \"set print max-depth unlimited\"\n+\n \tgdb_test \"print estring\" \" = \\\"embedded x\\\\\\\\201\\\\\\\\202\\\\\\\\203\\\\\\\\204\\\"\"\n \n \tgdb_test_no_output \"guile (set! *pp-ls-encoding* \\\"UTF-8\\\")\""
    },
    {
      "sha": "450971cbf1c59b811bca0165b3d4b5b3933891e8",
      "filename": "gdb/testsuite/gdb.python/py-format-string.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/testsuite/gdb.python/py-format-string.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/testsuite/gdb.python/py-format-string.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-format-string.c?ref=ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
      "patch": "@@ -23,6 +23,11 @@ typedef struct point\n   int y;\n } point_t;\n \n+typedef struct\n+{\n+  point_t the_point;\n+} struct_point_t;\n+\n typedef union\n {\n   int an_int;\n@@ -84,6 +89,7 @@ main ()\n   point_t &a_point_t_ref = a_point_t;\n #endif\n   struct point another_point = { 123, 456 };\n+  struct_point_t a_struct_with_point = { a_point_t };\n \n   struct_union_t a_struct_with_union;\n   /* Fill the union in an endianness-independent way.  */"
    },
    {
      "sha": "ea5e958b17d03d87f1deedb6de7db2ddb76c8e1c",
      "filename": "gdb/testsuite/gdb.python/py-format-string.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/testsuite/gdb.python/py-format-string.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/testsuite/gdb.python/py-format-string.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-format-string.exp?ref=ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
      "patch": "@@ -126,6 +126,7 @@ set default_regexp_dict [dict create \\\n   \"a_point_t_pointer\"\t\t$default_pointer_regexp \\\n   \"a_point_t_ref\"\t\t\"Pretty Point \\\\(42, 12\\\\)\" \\\n   \"another_point\"\t\t\"Pretty Point \\\\(123, 456\\\\)\" \\\n+  \"a_struct_with_point\"\t\t\"\\\\{the_point = Pretty Point \\\\(42, 12\\\\)\\\\}\" \\\n   \"a_struct_with_union\"\t\t\"\\\\{the_union = \\\\{an_int = 707406378, a_char = 42 '\\\\*'\\\\}\\\\}\" \\\n   \"an_enum\"\t\t\t\"ENUM_BAR\" \\\n   \"a_string\"\t\t\t\"${default_pointer_regexp} \\\"hello world\\\"\" \\\n@@ -722,18 +723,26 @@ proc_with_prefix test_max_depth {} {\n     set opts \"max_depth=-1\"\n     with_test_prefix $opts {\n \tcheck_format_string \"a_struct_with_union\" $opts\n+\tcheck_format_string \"a_point_t\" $opts \"Pretty Point \\\\(42, 12\\\\)\"\n+\tcheck_format_string \"a_struct_with_point\" $opts\n     }\n     set opts \"max_depth=0\"\n     with_test_prefix $opts {\n \tcheck_format_string \"a_struct_with_union\" $opts \"\\\\{\\.\\.\\.\\\\}\"\n+\tcheck_format_string \"a_point_t\" $opts \"Pretty Point \\\\(42, 12\\\\)\"\n+\tcheck_format_string \"a_struct_with_point\" $opts \"\\\\{\\.\\.\\.\\\\}\"\n     }\n     set opts \"max_depth=1\"\n     with_test_prefix $opts {\n \tcheck_format_string \"a_struct_with_union\" $opts \"\\\\{the_union = \\\\{\\.\\.\\.\\\\}\\\\}\"\n+\tcheck_format_string \"a_point_t\" $opts \"Pretty Point \\\\(42, 12\\\\)\"\n+\tcheck_format_string \"a_struct_with_point\" $opts\n     }\n     set opts \"max_depth=2\"\n     with_test_prefix $opts {\n \tcheck_format_string \"a_struct_with_union\" $opts\n+\tcheck_format_string \"a_point_t\" $opts \"Pretty Point \\\\(42, 12\\\\)\"\n+\tcheck_format_string \"a_struct_with_point\" $opts\n     }\n }\n "
    },
    {
      "sha": "befc48c999ae5e29f89d0532d599ff55ea04466b",
      "filename": "gdb/testsuite/gdb.python/py-nested-maps.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/testsuite/gdb.python/py-nested-maps.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecf25064e87a3d2d59871b3ea7126fa0dee0001d/gdb/testsuite/gdb.python/py-nested-maps.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-nested-maps.exp?ref=ecf25064e87a3d2d59871b3ea7126fa0dee0001d",
      "patch": "@@ -222,15 +222,15 @@ with_test_prefix \"headers=on\" {\n     with_test_prefix \"pretty=off\" {\n \tgdb_print_expr_at_depths \"*m1\" \\\n \t    [list \\\n-\t\t \"\\{\\\\.\\\\.\\\\.\\}\" \\\n+\t\t \"pp_map = \\{\\\\.\\\\.\\\\.\\}\" \\\n \t\t \"pp_map = \\{\\\\\\[\\{a = 3, b = 4\\}\\\\\\] = \\{\\\\.\\\\.\\\\.\\}, \\\\\\[\\{a = 4, b = 5\\}\\\\\\] = \\{\\\\.\\\\.\\\\.\\}, \\\\\\[\\{a = 5, b = 6\\}\\\\\\] = \\{\\\\.\\\\.\\\\.\\}\\}\" \\\n \t\t \"pp_map = \\{\\\\\\[\\{a = 3, b = 4\\}\\\\\\] = \\{x = 0, y = 1, z = 2\\}, \\\\\\[\\{a = 4, b = 5\\}\\\\\\] = \\{x = 3, y = 4, z = 5\\}, \\\\\\[\\{a = 5, b = 6\\}\\\\\\] = \\{x = 6, y = 7, z = 8\\}\\}\" \\\n \t\t]\n \n \tgdb_print_expr_at_depths \"*mm\" \\\n \t    [list \\\n-\t\t \"\\{\\\\.\\\\.\\\\.\\}\" \\\n-\t\t \"pp_map_map = \\{\\\\\\[$hex \\\"m1\\\"\\\\\\] = \\{\\\\.\\\\.\\\\.\\}, \\\\\\[$hex \\\"m2\\\"\\\\\\] = \\{\\\\.\\\\.\\\\.\\}\\}\" \\\n+\t\t \"pp_map_map = \\{\\\\.\\\\.\\\\.\\}\" \\\n+\t\t \"pp_map_map = \\{\\\\\\[$hex \\\"m1\\\"\\\\\\] = pp_map = \\{\\\\.\\\\.\\\\.\\}, \\\\\\[$hex \\\"m2\\\"\\\\\\] = pp_map = \\{\\\\.\\\\.\\\\.\\}\\}\" \\\n \t\t \"pp_map_map = \\{\\\\\\[$hex \\\"m1\\\"\\\\\\] = pp_map = \\{\\\\\\[\\{a = 3, b = 4\\}\\\\\\] = \\{\\\\.\\\\.\\\\.\\}, \\\\\\[\\{a = 4, b = 5\\}\\\\\\] = \\{\\\\.\\\\.\\\\.\\}, \\\\\\[\\{a = 5, b = 6\\}\\\\\\] = \\{\\\\.\\\\.\\\\.\\}\\}, \\\\\\[$hex \\\"m2\\\"\\\\\\] = pp_map = \\{\\\\\\[\\{a = 6, b = 7\\}\\\\\\] = \\{\\\\.\\\\.\\\\.\\}, \\\\\\[\\{a = 7, b = 8\\}\\\\\\] = \\{\\\\.\\\\.\\\\.\\}, \\\\\\[\\{a = 8, b = 9\\}\\\\\\] = \\{\\\\.\\\\.\\\\.\\}\\}\\}\" \\\n \t\t \"pp_map_map = \\{\\\\\\[$hex \\\"m1\\\"\\\\\\] = pp_map = \\{\\\\\\[\\{a = 3, b = 4\\}\\\\\\] = \\{x = 0, y = 1, z = 2\\}, \\\\\\[\\{a = 4, b = 5\\}\\\\\\] = \\{x = 3, y = 4, z = 5\\}, \\\\\\[\\{a = 5, b = 6\\}\\\\\\] = \\{x = 6, y = 7, z = 8\\}\\}, \\\\\\[$hex \\\"m2\\\"\\\\\\] = pp_map = \\{\\\\\\[\\{a = 6, b = 7\\}\\\\\\] = \\{x = 9, y = 0, z = 1\\}, \\\\\\[\\{a = 7, b = 8\\}\\\\\\] = \\{x = 2, y = 3, z = 4\\}, \\\\\\[\\{a = 8, b = 9\\}\\\\\\] = \\{x = 5, y = 6, z = 7\\}\\}\\}\" \\\n \t\t]"
    }
  ]
}