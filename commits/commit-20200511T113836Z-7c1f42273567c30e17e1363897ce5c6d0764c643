{
  "sha": "7c1f42273567c30e17e1363897ce5c6d0764c643",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2MxZjQyMjczNTY3YzMwZTE3ZTEzNjM4OTdjZTVjNmQwNzY0YzY0Mw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-10T23:54:14Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-11T11:38:36Z"
    },
    "message": "PowerPC Rename powerxx to power10\n\nNow that ISA3.1 is out we can finish with the powerxx silliness.\n\nbfd/\n\t* elf64-ppc.c: Rename powerxx to power10 throughout.\ngas/\n\t* config/tc-ppc.c (md_assemble): Update for PPC_OPCODE_POWER10\n\trenaming.\n\t* testsuite/gas/ppc/prefix-align.d: Use -mpower10/-Mpower10 in\n\tplace of -mfuture/-Mfuture.\n\t* testsuite/gas/ppc/prefix-pcrel.d: Likewise.\n\t* testsuite/gas/ppc/prefix-reloc.d: Likewise.\ngold/\n\t* powerpc.cc: Rename powerxx to power10 throughout.\ninclude/\n\t* elf/ppc64.h: Update comment.\n\t* opcode/ppc.h (PPC_OPCODE_POWER10): Rename from PPC_OPCODE_POWERXX.\nld/\n\t* testsuite/ld-powerpc/callstub-1.d: Use -mpower10/-Mpower10 in\n\tplace of -mfuture/-Mfuture.\n\t* testsuite/ld-powerpc/notoc2.d: Likewise.\n\t* testsuite/ld-powerpc/powerpc.exp: Likewise.\n\t* testsuite/ld-powerpc/tlsgd.d: Likewise.\n\t* testsuite/ld-powerpc/tlsie.d: Likewise.\n\t* testsuite/ld-powerpc/tlsld.d: Likewise.\nopcodes/\n\t* ppc-dis.c (ppc_opts): Add \"power10\" entry.\n\t(print_insn_powerpc): Update for PPC_OPCODE_POWER10 renaming.\n\t* ppc-opc.c (POWER10): Rename from POWERXX.  Update all uses.",
    "tree": {
      "sha": "d292ba50233ef50f1aa4bbba5e4cdd8f4ce38484",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d292ba50233ef50f1aa4bbba5e4cdd8f4ce38484"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7c1f42273567c30e17e1363897ce5c6d0764c643",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c1f42273567c30e17e1363897ce5c6d0764c643",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7c1f42273567c30e17e1363897ce5c6d0764c643",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c1f42273567c30e17e1363897ce5c6d0764c643/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "73199c2b7a3cb81bd65778386c5b97b4f3b86534",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/73199c2b7a3cb81bd65778386c5b97b4f3b86534",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/73199c2b7a3cb81bd65778386c5b97b4f3b86534"
    }
  ],
  "stats": {
    "total": 245,
    "additions": 144,
    "deletions": 101
  },
  "files": [
    {
      "sha": "b99f437121c314c9ac10940e467b91668145f90f",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,3 +1,7 @@\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf64-ppc.c: Rename powerxx to power10 throughout.\n+\n 2020-05-11  Alan Modra  <amodra@gmail.com>\n \n \tPR 25961"
    },
    {
      "sha": "ae4a4ba59ba70d2ec1e74bdf424641f2fa9569d3",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 26,
      "deletions": 26,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -2914,7 +2914,7 @@ must_be_dyn_reloc (struct bfd_link_info *info,\n    .\tmtctr\t%r12\n    .\tbctr\n \n-   There are also ELFv1 powerxx variants of these stubs.\n+   There are also ELFv1 power10 variants of these stubs.\n    ppc_stub_long_branch_notoc:\n    .\tpla\t%r12,dest@pcrel\n    .\tb\tdest\n@@ -2937,7 +2937,7 @@ must_be_dyn_reloc (struct bfd_link_info *info,\n \n    In cases where the high instructions would add zero, they are\n    omitted and following instructions modified in some cases.\n-   For example, a powerxx ppc_stub_plt_call_notoc might simplify down\n+   For example, a power10 ppc_stub_plt_call_notoc might simplify down\n    to\n    .\tpld\t%r12,xxx@pcrel\n    .\tmtctr\t%r12\n@@ -3238,8 +3238,8 @@ struct ppc_link_hash_table\n   /* Whether calls are made via the PLT from NOTOC functions.  */\n   unsigned int notoc_plt:1;\n \n-  /* Whether to use powerxx instructions in linkage stubs.  */\n-  unsigned int powerxx_stubs:1;\n+  /* Whether to use power10 instructions in linkage stubs.  */\n+  unsigned int power10_stubs:1;\n \n   /* Incremented every time we size stubs.  */\n   unsigned int stub_iteration;\n@@ -4604,7 +4604,7 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \tcase R_PPC64_PLT_PCREL34:\n \tcase R_PPC64_PLT_PCREL34_NOTOC:\n \tcase R_PPC64_PCREL28:\n-\t  htab->powerxx_stubs = 1;\n+\t  htab->power10_stubs = 1;\n \t  break;\n \tdefault:\n \t  break;\n@@ -10597,7 +10597,7 @@ emit_relocs_for_offset (struct bfd_link_info *info, Elf_Internal_Rela *r,\n }\n \n static bfd_byte *\n-build_powerxx_offset (bfd *abfd, bfd_byte *p, bfd_vma off, int odd,\n+build_power10_offset (bfd *abfd, bfd_byte *p, bfd_vma off, int odd,\n \t\t      bfd_boolean load)\n {\n   uint64_t insn;\n@@ -10679,7 +10679,7 @@ build_powerxx_offset (bfd *abfd, bfd_byte *p, bfd_vma off, int odd,\n }\n \n static unsigned int\n-size_powerxx_offset (bfd_vma off, int odd)\n+size_power10_offset (bfd_vma off, int odd)\n {\n   if (off - odd + (1ULL << 33) < 1ULL << 34)\n     return odd + 8;\n@@ -10690,7 +10690,7 @@ size_powerxx_offset (bfd_vma off, int odd)\n }\n \n static unsigned int\n-num_relocs_for_powerxx_offset (bfd_vma off, int odd)\n+num_relocs_for_power10_offset (bfd_vma off, int odd)\n {\n   if (off - odd + (1ULL << 33) < 1ULL << 34)\n     return 1;\n@@ -10701,7 +10701,7 @@ num_relocs_for_powerxx_offset (bfd_vma off, int odd)\n }\n \n static Elf_Internal_Rela *\n-emit_relocs_for_powerxx_offset (struct bfd_link_info *info,\n+emit_relocs_for_power10_offset (struct bfd_link_info *info,\n \t\t\t\tElf_Internal_Rela *r, bfd_vma roff,\n \t\t\t\tbfd_vma targ, bfd_vma off, int odd)\n {\n@@ -10813,14 +10813,14 @@ plt_stub_size (struct ppc_link_hash_table *htab,\n \n   if (stub_entry->stub_type >= ppc_stub_plt_call_notoc)\n     {\n-      if (htab->powerxx_stubs)\n+      if (htab->power10_stubs)\n \t{\n \t  bfd_vma start = (stub_entry->stub_offset\n \t\t\t   + stub_entry->group->stub_sec->output_offset\n \t\t\t   + stub_entry->group->stub_sec->output_section->vma);\n \t  if (stub_entry->stub_type > ppc_stub_plt_call_notoc)\n \t    start += 4;\n-\t  size = 8 + size_powerxx_offset (off, start & 4);\n+\t  size = 8 + size_power10_offset (off, start & 4);\n \t}\n       else\n \tsize = 8 + size_offset (off - 8);\n@@ -11654,10 +11654,10 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \n       relp = p;\n       num_rel = 0;\n-      if (htab->powerxx_stubs)\n+      if (htab->power10_stubs)\n \t{\n \t  bfd_boolean load = stub_entry->stub_type >= ppc_stub_plt_call_notoc;\n-\t  p = build_powerxx_offset (htab->params->stub_bfd, p, off, odd, load);\n+\t  p = build_power10_offset (htab->params->stub_bfd, p, off, odd, load);\n \t}\n       else\n \t{\n@@ -11693,8 +11693,8 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n       if (info->emitrelocations)\n \t{\n \t  bfd_vma roff = relp - stub_entry->group->stub_sec->contents;\n-\t  if (htab->powerxx_stubs)\n-\t    num_rel += num_relocs_for_powerxx_offset (off, odd);\n+\t  if (htab->power10_stubs)\n+\t    num_rel += num_relocs_for_power10_offset (off, odd);\n \t  else\n \t    {\n \t      num_rel += num_relocs_for_offset (off);\n@@ -11703,8 +11703,8 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \t  r = get_relocs (stub_entry->group->stub_sec, num_rel);\n \t  if (r == NULL)\n \t    return FALSE;\n-\t  if (htab->powerxx_stubs)\n-\t    r = emit_relocs_for_powerxx_offset (info, r, roff, targ, off, odd);\n+\t  if (htab->power10_stubs)\n+\t    r = emit_relocs_for_power10_offset (info, r, roff, targ, off, odd);\n \t  else\n \t    r = emit_relocs_for_offset (info, r, roff, targ, off);\n \t  if (stub_entry->stub_type == ppc_stub_long_branch_notoc\n@@ -11721,7 +11721,7 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \t    }\n \t}\n \n-      if (!htab->powerxx_stubs\n+      if (!htab->power10_stubs\n \t  && htab->glink_eh_frame != NULL\n \t  && htab->glink_eh_frame->size != 0)\n \t{\n@@ -12069,16 +12069,16 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n       if (info->emitrelocations)\n \t{\n \t  unsigned int num_rel;\n-\t  if (htab->powerxx_stubs)\n-\t    num_rel = num_relocs_for_powerxx_offset (off, odd);\n+\t  if (htab->power10_stubs)\n+\t    num_rel = num_relocs_for_power10_offset (off, odd);\n \t  else\n \t    num_rel = num_relocs_for_offset (off - 8);\n \t  stub_entry->group->stub_sec->reloc_count += num_rel;\n \t  stub_entry->group->stub_sec->flags |= SEC_RELOC;\n \t}\n \n-      if (htab->powerxx_stubs)\n-\textra = size_powerxx_offset (off, odd);\n+      if (htab->power10_stubs)\n+\textra = size_power10_offset (off, odd);\n       else\n \textra = size_offset (off - 8);\n       /* Include branch insn plus those in the offset sequence.  */\n@@ -12088,7 +12088,7 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \t calculated.  */\n       off -= extra;\n \n-      if (!htab->powerxx_stubs)\n+      if (!htab->power10_stubs)\n \t{\n \t  /* After the bcl, lr has been modified so we need to emit\n \t     .eh_frame info saying the return address is in r12.  */\n@@ -12151,8 +12151,8 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n       if (info->emitrelocations)\n \t{\n \t  unsigned int num_rel;\n-\t  if (htab->powerxx_stubs)\n-\t    num_rel = num_relocs_for_powerxx_offset (off, odd);\n+\t  if (htab->power10_stubs)\n+\t    num_rel = num_relocs_for_power10_offset (off, odd);\n \t  else\n \t    num_rel = num_relocs_for_offset (off - 8);\n \t  stub_entry->group->stub_sec->reloc_count += num_rel;\n@@ -12161,7 +12161,7 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \n       size = plt_stub_size (htab, stub_entry, off);\n \n-      if (!htab->powerxx_stubs)\n+      if (!htab->power10_stubs)\n \t{\n \t  /* After the bcl, lr has been modified so we need to emit\n \t     .eh_frame info saying the return address is in r12.  */"
    },
    {
      "sha": "06d0b26f33d6070666603d07a9e662a804c526a6",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,3 +1,12 @@\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/tc-ppc.c (md_assemble): Update for PPC_OPCODE_POWER10\n+\trenaming.\n+\t* testsuite/gas/ppc/prefix-align.d: Use -mpower10/-Mpower10 in\n+\tplace of -mfuture/-Mfuture.\n+\t* testsuite/gas/ppc/prefix-pcrel.d: Likewise.\n+\t* testsuite/gas/ppc/prefix-reloc.d: Likewise.\n+\n 2020-05-06  Nick Clifton  <nickc@redhat.com>\n \n \t* po/sv.po: Updated Swedish translation."
    },
    {
      "sha": "e0da3bfafe28a65b2dba08accfd979ddd41e47ab",
      "filename": "gas/config/tc-ppc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/gas/config/tc-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/gas/config/tc-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ppc.c?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -4131,7 +4131,7 @@ md_assemble (char *str)\n   insn_length = 4;\n   if ((ppc_cpu & PPC_OPCODE_VLE) != 0 && PPC_OP_SE_VLE (insn))\n     insn_length = 2;\n-  else if ((opcode->flags & PPC_OPCODE_POWERXX) != 0\n+  else if ((opcode->flags & PPC_OPCODE_POWER10) != 0\n \t   && PPC_PREFIX_P (insn))\n     {\n       struct insn_label_list *l;"
    },
    {
      "sha": "5afc7d6251229c752a3a440e6dba234cbe6a57ff",
      "filename": "gas/testsuite/gas/ppc/prefix-align.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/gas/testsuite/gas/ppc/prefix-align.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/gas/testsuite/gas/ppc/prefix-align.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/prefix-align.d?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,6 +1,6 @@\n-#as: -mfuture\n-#objdump: -dr -Mfuture\n-#name: POWERXX alignment of labels test\n+#as: -mpower10\n+#objdump: -dr -Mpower10\n+#name: POWER10 alignment of labels test\n \n .*\n "
    },
    {
      "sha": "ad6abfb47d7e22ca89ce9443da5ce91330197802",
      "filename": "gas/testsuite/gas/ppc/prefix-pcrel.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/gas/testsuite/gas/ppc/prefix-pcrel.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/gas/testsuite/gas/ppc/prefix-pcrel.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/prefix-pcrel.d?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,6 +1,6 @@\n-#as: -mfuture\n-#objdump: -dr -Mfuture\n-#name: POWERXX pcrel tests\n+#as: -mpower10\n+#objdump: -dr -Mpower10\n+#name: POWER10 pcrel tests\n \n .*\n "
    },
    {
      "sha": "908ff22e629e5f303edb8c26a5782c9ab65108be",
      "filename": "gas/testsuite/gas/ppc/prefix-reloc.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/gas/testsuite/gas/ppc/prefix-reloc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/gas/testsuite/gas/ppc/prefix-reloc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/prefix-reloc.d?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,5 +1,5 @@\n-#as: -a64 -mfuture\n-#objdump: -dr -Mfuture\n+#as: -a64 -mpower10\n+#objdump: -dr -Mpower10\n #name: Prefix insn relocations\n \n .*"
    },
    {
      "sha": "386f1aaaee3803c6fec1688705f6e486834accaa",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,3 +1,7 @@\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc: Rename powerxx to power10 throughout.\n+\n 2020-05-02  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR gold/25904"
    },
    {
      "sha": "eae483212b8e890d459ab9bb0f26ee7b4ebaa775",
      "filename": "gold/powerpc.cc",
      "status": "modified",
      "additions": 19,
      "deletions": 19,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/gold/powerpc.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/gold/powerpc.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/powerpc.cc?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -647,7 +647,7 @@ class Target_powerpc : public Sized_target<size, big_endian>\n       glink_(NULL), rela_dyn_(NULL), copy_relocs_(),\n       tlsld_got_offset_(-1U),\n       stub_tables_(), branch_lookup_table_(), branch_info_(), tocsave_loc_(),\n-      powerxx_stubs_(false), plt_thread_safe_(false), plt_localentry0_(false),\n+      power10_stubs_(false), plt_thread_safe_(false), plt_localentry0_(false),\n       plt_localentry0_init_(false), has_localentry0_(false),\n       has_tls_get_addr_opt_(false),\n       relax_failed_(false), relax_fail_count_(0),\n@@ -1079,13 +1079,13 @@ class Target_powerpc : public Sized_target<size, big_endian>\n   }\n \n   bool\n-  powerxx_stubs() const\n-  { return this->powerxx_stubs_; }\n+  power10_stubs() const\n+  { return this->power10_stubs_; }\n \n   void\n-  set_powerxx_stubs()\n+  set_power10_stubs()\n   {\n-    this->powerxx_stubs_ = true;\n+    this->power10_stubs_ = true;\n   }\n \n   bool\n@@ -1687,7 +1687,7 @@ class Target_powerpc : public Sized_target<size, big_endian>\n   Branches branch_info_;\n   Tocsave_loc tocsave_loc_;\n \n-  bool powerxx_stubs_;\n+  bool power10_stubs_;\n   bool plt_thread_safe_;\n   bool plt_localentry0_;\n   bool plt_localentry0_init_;\n@@ -5073,7 +5073,7 @@ Stub_table<size, big_endian>::add_plt_call_entry(\n       if (r_type == elfcpp::R_PPC64_REL24_NOTOC)\n \t{\n \t  if (!p.second && !p.first->second.notoc_\n-\t      && !this->targ_->powerxx_stubs())\n+\t      && !this->targ_->power10_stubs())\n \t    this->need_resize_ = true;\n \t  p.first->second.notoc_ = 1;\n \t}\n@@ -5124,7 +5124,7 @@ Stub_table<size, big_endian>::add_plt_call_entry(\n       if (r_type == elfcpp::R_PPC64_REL24_NOTOC)\n \t{\n \t  if (!p.second && !p.first->second.notoc_\n-\t      && !this->targ_->powerxx_stubs())\n+\t      && !this->targ_->power10_stubs())\n \t    this->need_resize_ = true;\n \t  p.first->second.notoc_ = 1;\n \t}\n@@ -5330,7 +5330,7 @@ Stub_table<size, big_endian>::add_eh_frame(Layout* layout)\n \t   && cs->second.r2save_\n \t   && !cs->second.localentry0_)\n \t  || (cs->second.notoc_\n-\t      && !this->targ_->powerxx_stubs()))\n+\t      && !this->targ_->power10_stubs()))\n \tcalls.push_back(cs);\n   if (calls.size() > 1)\n     std::stable_sort(calls.begin(), calls.end(),\n@@ -5339,7 +5339,7 @@ Stub_table<size, big_endian>::add_eh_frame(Layout* layout)\n   typedef typename Branch_stub_entries::const_iterator branch_iter;\n   std::vector<branch_iter> branches;\n   if (!this->long_branch_stubs_.empty()\n-      && !this->targ_->powerxx_stubs())\n+      && !this->targ_->power10_stubs())\n     for (branch_iter bs = this->long_branch_stubs_.begin();\n \t bs != this->long_branch_stubs_.end();\n \t ++bs)\n@@ -5776,7 +5776,7 @@ Stub_table<size, big_endian>::build_tls_opt_tail(\n \n template<bool big_endian>\n static unsigned char*\n-build_powerxx_offset(unsigned char* p, uint64_t off, uint64_t odd, bool load)\n+build_power10_offset(unsigned char* p, uint64_t off, uint64_t odd, bool load)\n {\n   uint64_t insn;\n   if (off - odd + (1ULL << 33) < 1ULL << 34)\n@@ -5964,7 +5964,7 @@ Stub_table<size, big_endian>::plt_call_size(\n   if (p->second.r2save_)\n     bytes += 4;\n \n-  if (this->targ_->powerxx_stubs())\n+  if (this->targ_->power10_stubs())\n     {\n       uint64_t from = this->stub_address() + p->second.off_ + bytes;\n       if (bytes > 8 * 4)\n@@ -6045,7 +6045,7 @@ Stub_table<size, big_endian>::branch_stub_size(\n   uint64_t off = p->first.dest_ - loc;\n   if (p->second.notoc_)\n     {\n-      if (this->targ_->powerxx_stubs())\n+      if (this->targ_->power10_stubs())\n \t{\n \t  Address odd = loc & 4;\n \t  if (off + (1 << 25) < 2 << 25)\n@@ -6080,7 +6080,7 @@ Stub_table<size, big_endian>::branch_stub_size(\n \n   if (off + (1 << 25) < 2 << 25)\n     return 4;\n-  if (!this->targ_->powerxx_stubs())\n+  if (!this->targ_->power10_stubs())\n     *need_lt = true;\n   return 16;\n }\n@@ -6116,7 +6116,7 @@ Stub_table<size, big_endian>::do_write(Output_file* of)\n   unsigned char* p;\n \n   if (size == 64\n-      && this->targ_->powerxx_stubs())\n+      && this->targ_->power10_stubs())\n     {\n       if (!this->plt_call_stubs_.empty())\n \t{\n@@ -6138,7 +6138,7 @@ Stub_table<size, big_endian>::do_write(Output_file* of)\n \t      Address plt_addr = pltoff + plt->address();\n \t      Address from = this->stub_address() + (p - oview);\n \t      Address delta = plt_addr - from;\n-\t      p = build_powerxx_offset<big_endian>(p, delta, from & 4, true);\n+\t      p = build_power10_offset<big_endian>(p, delta, from & 4, true);\n \t      write_insn<big_endian>(p, mtctr_12);\n \t      p += 4;\n \t      if (!this->build_tls_opt_tail(p, cs))\n@@ -6161,7 +6161,7 @@ Stub_table<size, big_endian>::do_write(Output_file* of)\n \t  if (bs->second.notoc_ || delta + (1 << 25) >= 2 << 25)\n \t    {\n \t      unsigned char* startp = p;\n-\t      p = build_powerxx_offset<big_endian>(p, delta, loc & 4, false);\n+\t      p = build_power10_offset<big_endian>(p, delta, loc & 4, false);\n \t      delta -= p - startp;\n \t    }\n \t  if (delta + (1 << 25) < 2 << 25)\n@@ -8181,7 +8181,7 @@ Target_powerpc<size, big_endian>::Scan::local(\n     case elfcpp::R_PPC64_GOT_TLSLD34:\n     case elfcpp::R_PPC64_GOT_DTPREL34:\n     case elfcpp::R_PPC64_GOT_TPREL34:\n-      target->set_powerxx_stubs();\n+      target->set_power10_stubs();\n       break;\n     default:\n       break;\n@@ -8939,7 +8939,7 @@ Target_powerpc<size, big_endian>::Scan::global(\n     case elfcpp::R_PPC64_GOT_TLSLD34:\n     case elfcpp::R_PPC64_GOT_DTPREL34:\n     case elfcpp::R_PPC64_GOT_TPREL34:\n-      target->set_powerxx_stubs();\n+      target->set_power10_stubs();\n       break;\n     default:\n       break;"
    },
    {
      "sha": "73629558309a2a02b132cfac5383c109d757bdff",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/ppc64.h: Update comment.\n+\t* opcode/ppc.h (PPC_OPCODE_POWER10): Rename from PPC_OPCODE_POWERXX.\n+\n 2020-04-30  Alex Coplan  <alex.coplan@arm.com>\n \n \t* opcode/aarch64.h (enum aarch64_opnd): Add"
    },
    {
      "sha": "22991c8eb47fff86514d319361d54ef3fe541668",
      "filename": "include/elf/ppc64.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/include/elf/ppc64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/include/elf/ppc64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/ppc64.h?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -158,7 +158,7 @@ START_RELOC_NUMBERS (elf_ppc64_reloc_type)\n   RELOC_NUMBER (R_PPC64_PLTSEQ,\t\t   119)\n   RELOC_NUMBER (R_PPC64_PLTCALL,\t   120)\n \n-/* Powerxx support.  */\n+/* Power10 support.  */\n   RELOC_NUMBER (R_PPC64_PLTSEQ_NOTOC,\t   121)\n   RELOC_NUMBER (R_PPC64_PLTCALL_NOTOC,\t   122)\n   RELOC_NUMBER (R_PPC64_PCREL_OPT,\t   123)"
    },
    {
      "sha": "15331d1485f10c094de2f768466fb94fd07bd03f",
      "filename": "include/opcode/ppc.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/include/opcode/ppc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/include/opcode/ppc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/ppc.h?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -228,8 +228,8 @@ extern const unsigned int spe2_num_opcodes;\n /* Opcode is supported by EFS2.  */\n #define PPC_OPCODE_EFS2\t    0x200000000000ull\n \n-/* Opcode is only supported by powerxx architecture.  */\n-#define PPC_OPCODE_POWERXX  0x400000000000ull\n+/* Opcode is only supported by power10 architecture.  */\n+#define PPC_OPCODE_POWER10  0x400000000000ull\n \n /* A macro to extract the major opcode from an instruction.  */\n #define PPC_OP(i) (((i) >> 26) & 0x3f)"
    },
    {
      "sha": "306d1eddbcdc15118efca44cd36963d05ec76d65",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,3 +1,13 @@\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/ld-powerpc/callstub-1.d: Use -mpower10/-Mpower10 in\n+\tplace of -mfuture/-Mfuture.\n+\t* testsuite/ld-powerpc/notoc2.d: Likewise.\n+\t* testsuite/ld-powerpc/powerpc.exp: Likewise.\n+\t* testsuite/ld-powerpc/tlsgd.d: Likewise.\n+\t* testsuite/ld-powerpc/tlsie.d: Likewise.\n+\t* testsuite/ld-powerpc/tlsld.d: Likewise.\n+\n 2020-05-11  Nick Clifton  <nickc@redhat.com>\n \n \t* po/es.po: Updated Spanish translation."
    },
    {
      "sha": "21eea767844b6ac71f3bb5842cc26ef84eb160f2",
      "filename": "ld/testsuite/ld-powerpc/callstub-1.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/testsuite/ld-powerpc/callstub-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/testsuite/ld-powerpc/callstub-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/callstub-1.d?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,6 +1,6 @@\n-#as: -a64 -mfuture\n+#as: -a64 -mpower10\n #ld: -melf64ppc -shared --plt-align=0 --hash-style=gnu\n-#objdump: -dr -Mfuture\n+#objdump: -dr -Mpower10\n \n .*\n "
    },
    {
      "sha": "1e519c0d1b082f1e806c67f41b915e096f96e7d0",
      "filename": "ld/testsuite/ld-powerpc/notoc2.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/testsuite/ld-powerpc/notoc2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/testsuite/ld-powerpc/notoc2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/notoc2.d?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,7 +1,7 @@\n #source: notoc2.s\n-#as: -a64 -mfuture\n+#as: -a64 -mpower10\n #ld: -shared -z norelro\n-#objdump: -d -Mfuture\n+#objdump: -d -Mpower10\n #target: powerpc64*-*-*\n \n .*"
    },
    {
      "sha": "1297871c1d256ca79c281190f1963e7d04365121",
      "filename": "ld/testsuite/ld-powerpc/powerpc.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/testsuite/ld-powerpc/powerpc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/testsuite/ld-powerpc/powerpc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/powerpc.exp?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -319,11 +319,11 @@ set ppc64elftests {\n     {\"notoc ext\" \"\" \"\" \"-a64\" {ext.s} {} \"\"}\n     {\"notoc\" \"-melf64ppc --no-plt-localentry -T ext.lnk\" \"\" \"-a64\" {notoc.s}\n \t{{objdump -d notoc.d} {readelf {-wf -W} notoc.wf}} \"notoc\"}\n-    {\"notoc2\" \"-melf64ppc -shared\" \"\" \"-a64 -mfuture\" {notoc2.s}\n-\t{{objdump {-d -Mfuture} notoc2.d}} \"notoc2\"}\n+    {\"notoc2\" \"-melf64ppc -shared\" \"\" \"-a64 -mpower10\" {notoc2.s}\n+\t{{objdump {-d -Mpower10} notoc2.d}} \"notoc2\"}\n     {\"pcrelopt\" \"-melf64ppc --hash-style=gnu\" \"tmpdir/symtocbase.so\"\n-\t\"-a64 -mfuture\" {pcrelopt.s}\n-\t{{objdump {-d -Mfuture} pcrelopt.d}\n+\t\"-a64 -mpower10\" {pcrelopt.s}\n+\t{{objdump {-d -Mpower10} pcrelopt.d}\n \t {readelf {-S --wide} pcrelopt.sec}} \"pcrelopt\" }\n }\n "
    },
    {
      "sha": "6191b38574debe0cdb4027a55722fca7839021de",
      "filename": "ld/testsuite/ld-powerpc/tlsgd.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/testsuite/ld-powerpc/tlsgd.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/testsuite/ld-powerpc/tlsgd.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsgd.d?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,7 +1,7 @@\n #source: tlsgd.s\n-#as: -a64 -mfuture\n+#as: -a64 -mpower10\n #ld: -melf64ppc\n-#objdump: -dr -Mfuture\n+#objdump: -dr -Mpower10\n \n .*:     file format .*\n "
    },
    {
      "sha": "bd7bdfc731d0361c2d12ff72cb25d8c9533b229d",
      "filename": "ld/testsuite/ld-powerpc/tlsie.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/testsuite/ld-powerpc/tlsie.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/testsuite/ld-powerpc/tlsie.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsie.d?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,7 +1,7 @@\n #source: tlsie.s\n-#as: -a64 -mfuture\n+#as: -a64 -mpower10\n #ld: -melf64ppc\n-#objdump: -dr -Mfuture\n+#objdump: -dr -Mpower10\n \n .*:     file format .*\n "
    },
    {
      "sha": "862370ff1c36db0db7a7e1bc29790ade7b1619fd",
      "filename": "ld/testsuite/ld-powerpc/tlsld.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/testsuite/ld-powerpc/tlsld.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/ld/testsuite/ld-powerpc/tlsld.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsld.d?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,7 +1,7 @@\n #source: tlsld.s\n-#as: -a64 -mfuture\n+#as: -a64 -mpower10\n #ld: -melf64ppc\n-#objdump: -dr -Mfuture\n+#objdump: -dr -Mpower10\n \n .*:     file format .*\n "
    },
    {
      "sha": "e9975d3e079ead74370debd0f83b8319bcbed3a9",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-dis.c (ppc_opts): Add \"power10\" entry.\n+\t(print_insn_powerpc): Update for PPC_OPCODE_POWER10 renaming.\n+\t* ppc-opc.c (POWER10): Rename from POWERXX.  Update all uses.\n+\n 2020-05-11  Nick Clifton  <nickc@redhat.com>\n \n \t* po/fr.po: Updated French translation."
    },
    {
      "sha": "1c341b279f08d8ef4ce198c362bc1b92395cb031",
      "filename": "opcodes/ppc-dis.c",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/opcodes/ppc-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/opcodes/ppc-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-dis.c?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -185,10 +185,15 @@ struct ppc_mopt ppc_opts[] = {\n \t\t| PPC_OPCODE_POWER7 | PPC_OPCODE_POWER8 | PPC_OPCODE_POWER9\n \t\t| PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX),\n     0 },\n+  { \"power10\", (PPC_OPCODE_PPC | PPC_OPCODE_ISEL | PPC_OPCODE_64\n+\t\t| PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6\n+\t\t| PPC_OPCODE_POWER7 | PPC_OPCODE_POWER8 | PPC_OPCODE_POWER9\n+\t\t| PPC_OPCODE_POWER10 | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX),\n+    0 },\n   { \"future\",  (PPC_OPCODE_PPC | PPC_OPCODE_ISEL | PPC_OPCODE_64\n \t\t| PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6\n \t\t| PPC_OPCODE_POWER7 | PPC_OPCODE_POWER8 | PPC_OPCODE_POWER9\n-\t\t| PPC_OPCODE_POWERXX | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX),\n+\t\t| PPC_OPCODE_POWER10 | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX),\n     0 },\n   { \"ppc\",     PPC_OPCODE_PPC,\n     0 },\n@@ -768,7 +773,7 @@ print_insn_powerpc (bfd_vma memaddr,\n \n   /* Get the major opcode of the insn.  */\n   opcode = NULL;\n-  if ((dialect & PPC_OPCODE_POWERXX) != 0\n+  if ((dialect & PPC_OPCODE_POWER10) != 0\n       && PPC_OP (insn) == 0x1)\n     {\n       uint64_t temp_insn, suffix;"
    },
    {
      "sha": "baabab645753db8d86ea5fbb2dadd9de6637396b",
      "filename": "opcodes/ppc-opc.c",
      "status": "modified",
      "additions": 28,
      "deletions": 28,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c1f42273567c30e17e1363897ce5c6d0764c643/opcodes/ppc-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c1f42273567c30e17e1363897ce5c6d0764c643/opcodes/ppc-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-opc.c?ref=7c1f42273567c30e17e1363897ce5c6d0764c643",
      "patch": "@@ -3713,7 +3713,7 @@ const unsigned int num_powerpc_operands = (sizeof (powerpc_operands)\n #define POWER7\tPPC_OPCODE_POWER7\n #define POWER8\tPPC_OPCODE_POWER8\n #define POWER9\tPPC_OPCODE_POWER9\n-#define POWERXX PPC_OPCODE_POWERXX\n+#define POWER10 PPC_OPCODE_POWER10\n #define CELL\tPPC_OPCODE_CELL\n #define PPC64\tPPC_OPCODE_64 | PPC_OPCODE_64_BRIDGE\n #define NON32\t(PPC_OPCODE_64 | PPC_OPCODE_POWER4\t\\\n@@ -7966,33 +7966,33 @@ const unsigned int powerpc_num_opcodes =\n    The format of this opcode table is the same as the main opcode table.  */\n \n const struct powerpc_opcode prefix_opcodes[] = {\n-{\"pnop\",\t  PMRR,\t\t       PREFIX_MASK,\tPOWERXX, 0,\t{0}},\n-{\"pli\",\t\t  PMLS|OP(14),\t       P_DRAPCREL_MASK,\tPOWERXX, 0,\t{RT, SI34}},\n-{\"paddi\",\t  PMLS|OP(14),\t       P_D_MASK,\tPOWERXX, 0,\t{RT, RA0, SI34, PCREL0}},\n-{\"psubi\",\t  PMLS|OP(14),\t       P_D_MASK,\tPOWERXX, 0,\t{RT, RA0, NSI34, PCREL0}},\n-{\"pla\",\t\t  PMLS|OP(14),\t       P_D_MASK,\tPOWERXX, 0,\t{RT, D34, PRA0, PCREL}},\n-{\"plwz\",\t  PMLS|OP(32),\t       P_D_MASK,\tPOWERXX, 0,\t{RT, D34, PRA0, PCREL}},\n-{\"plbz\",\t  PMLS|OP(34),\t       P_D_MASK,\tPOWERXX, 0,\t{RT, D34, PRA0, PCREL}},\n-{\"pstw\",\t  PMLS|OP(36),\t       P_D_MASK,\tPOWERXX, 0,\t{RS, D34, PRA0, PCREL}},\n-{\"pstb\",\t  PMLS|OP(38),\t       P_D_MASK,\tPOWERXX, 0,\t{RS, D34, PRA0, PCREL}},\n-{\"plhz\",\t  PMLS|OP(40),\t       P_D_MASK,\tPOWERXX, 0,\t{RT, D34, PRA0, PCREL}},\n-{\"plwa\",\t  P8LS|OP(41),\t       P_D_MASK,\tPOWERXX, 0,\t{RT, D34, PRA0, PCREL}},\n-{\"plxsd\",\t  P8LS|OP(42),\t       P_D_MASK,\tPOWERXX, 0,\t{VD, D34, PRA0, PCREL}},\n-{\"plha\",\t  PMLS|OP(42),\t       P_D_MASK,\tPOWERXX, 0,\t{RT, D34, PRA0, PCREL}},\n-{\"plxssp\",\t  P8LS|OP(43),\t       P_D_MASK,\tPOWERXX, 0,\t{VD, D34, PRA0, PCREL}},\n-{\"psth\",\t  PMLS|OP(44),\t       P_D_MASK,\tPOWERXX, 0,\t{RS, D34, PRA0, PCREL}},\n-{\"pstxsd\",\t  P8LS|OP(46),\t       P_D_MASK,\tPOWERXX, 0,\t{VS, D34, PRA0, PCREL}},\n-{\"pstxssp\",\t  P8LS|OP(47),\t       P_D_MASK,\tPOWERXX, 0,\t{VS, D34, PRA0, PCREL}},\n-{\"plfs\",\t  PMLS|OP(48),\t       P_D_MASK,\tPOWERXX, 0,\t{FRT, D34, PRA0, PCREL}},\n-{\"plxv\",\t  P8LS|OP(50),\t       P_D_MASK&~OP(1),\tPOWERXX, 0,\t{XTOP, D34, PRA0, PCREL}},\n-{\"plfd\",\t  PMLS|OP(50),\t       P_D_MASK,\tPOWERXX, 0,\t{FRT, D34, PRA0, PCREL}},\n-{\"pstfs\",\t  PMLS|OP(52),\t       P_D_MASK,\tPOWERXX, 0,\t{FRS, D34, PRA0, PCREL}},\n-{\"pstxv\",\t  P8LS|OP(54),\t       P_D_MASK&~OP(1),\tPOWERXX, 0,\t{XTOP, D34, PRA0, PCREL}},\n-{\"pstfd\",\t  PMLS|OP(54),\t       P_D_MASK,\tPOWERXX, 0,\t{FRS, D34, PRA0, PCREL}},\n-{\"plq\",\t\t  P8LS|OP(56),\t       P_D_MASK,\tPOWERXX, 0,\t{RTQ, D34, PRAQ, PCREL}},\n-{\"pld\",\t\t  P8LS|OP(57),\t       P_D_MASK,\tPOWERXX, 0,\t{RT, D34, PRA0, PCREL}},\n-{\"pstq\",\t  P8LS|OP(60),\t       P_D_MASK,\tPOWERXX, 0,\t{RSQ, D34, PRA0, PCREL}},\n-{\"pstd\",\t  P8LS|OP(61),\t       P_D_MASK,\tPOWERXX, 0,\t{RS, D34, PRA0, PCREL}},\n+{\"pnop\",\t  PMRR,\t\t       PREFIX_MASK,\tPOWER10, 0,\t{0}},\n+{\"pli\",\t\t  PMLS|OP(14),\t       P_DRAPCREL_MASK,\tPOWER10, 0,\t{RT, SI34}},\n+{\"paddi\",\t  PMLS|OP(14),\t       P_D_MASK,\tPOWER10, 0,\t{RT, RA0, SI34, PCREL0}},\n+{\"psubi\",\t  PMLS|OP(14),\t       P_D_MASK,\tPOWER10, 0,\t{RT, RA0, NSI34, PCREL0}},\n+{\"pla\",\t\t  PMLS|OP(14),\t       P_D_MASK,\tPOWER10, 0,\t{RT, D34, PRA0, PCREL}},\n+{\"plwz\",\t  PMLS|OP(32),\t       P_D_MASK,\tPOWER10, 0,\t{RT, D34, PRA0, PCREL}},\n+{\"plbz\",\t  PMLS|OP(34),\t       P_D_MASK,\tPOWER10, 0,\t{RT, D34, PRA0, PCREL}},\n+{\"pstw\",\t  PMLS|OP(36),\t       P_D_MASK,\tPOWER10, 0,\t{RS, D34, PRA0, PCREL}},\n+{\"pstb\",\t  PMLS|OP(38),\t       P_D_MASK,\tPOWER10, 0,\t{RS, D34, PRA0, PCREL}},\n+{\"plhz\",\t  PMLS|OP(40),\t       P_D_MASK,\tPOWER10, 0,\t{RT, D34, PRA0, PCREL}},\n+{\"plwa\",\t  P8LS|OP(41),\t       P_D_MASK,\tPOWER10, 0,\t{RT, D34, PRA0, PCREL}},\n+{\"plxsd\",\t  P8LS|OP(42),\t       P_D_MASK,\tPOWER10, 0,\t{VD, D34, PRA0, PCREL}},\n+{\"plha\",\t  PMLS|OP(42),\t       P_D_MASK,\tPOWER10, 0,\t{RT, D34, PRA0, PCREL}},\n+{\"plxssp\",\t  P8LS|OP(43),\t       P_D_MASK,\tPOWER10, 0,\t{VD, D34, PRA0, PCREL}},\n+{\"psth\",\t  PMLS|OP(44),\t       P_D_MASK,\tPOWER10, 0,\t{RS, D34, PRA0, PCREL}},\n+{\"pstxsd\",\t  P8LS|OP(46),\t       P_D_MASK,\tPOWER10, 0,\t{VS, D34, PRA0, PCREL}},\n+{\"pstxssp\",\t  P8LS|OP(47),\t       P_D_MASK,\tPOWER10, 0,\t{VS, D34, PRA0, PCREL}},\n+{\"plfs\",\t  PMLS|OP(48),\t       P_D_MASK,\tPOWER10, 0,\t{FRT, D34, PRA0, PCREL}},\n+{\"plxv\",\t  P8LS|OP(50),\t       P_D_MASK&~OP(1),\tPOWER10, 0,\t{XTOP, D34, PRA0, PCREL}},\n+{\"plfd\",\t  PMLS|OP(50),\t       P_D_MASK,\tPOWER10, 0,\t{FRT, D34, PRA0, PCREL}},\n+{\"pstfs\",\t  PMLS|OP(52),\t       P_D_MASK,\tPOWER10, 0,\t{FRS, D34, PRA0, PCREL}},\n+{\"pstxv\",\t  P8LS|OP(54),\t       P_D_MASK&~OP(1),\tPOWER10, 0,\t{XTOP, D34, PRA0, PCREL}},\n+{\"pstfd\",\t  PMLS|OP(54),\t       P_D_MASK,\tPOWER10, 0,\t{FRS, D34, PRA0, PCREL}},\n+{\"plq\",\t\t  P8LS|OP(56),\t       P_D_MASK,\tPOWER10, 0,\t{RTQ, D34, PRAQ, PCREL}},\n+{\"pld\",\t\t  P8LS|OP(57),\t       P_D_MASK,\tPOWER10, 0,\t{RT, D34, PRA0, PCREL}},\n+{\"pstq\",\t  P8LS|OP(60),\t       P_D_MASK,\tPOWER10, 0,\t{RSQ, D34, PRA0, PCREL}},\n+{\"pstd\",\t  P8LS|OP(61),\t       P_D_MASK,\tPOWER10, 0,\t{RS, D34, PRA0, PCREL}},\n };\n \n const unsigned int prefix_num_opcodes ="
    }
  ]
}