{
  "sha": "22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjJjMTJhNmM3MGEwYmYxYzI5MjQ3ODQzNmYxMmRmMGEyZDg0YzJhMg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-07-05T08:29:34Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-09-16T09:16:48Z"
    },
    "message": "gdb: Convert language_data::string_lower_bound to a method\n\nConvert language_data::string_lower_bound member variable to a virtual\nmethod language_defn::string_lower_bound.\n\nOver all of the languages we currently support there are currently\nonly two values for the lower bound, 0 or 1.  I noticed that in all\ncases, if a language has C style arrays then the lower bound is 0,\notherwise the lower bound is 1.  So the default for the virtual method\nin language.h makes use of this, which means languages don't have to\nworry about providing a string_lower_bound method at all.\n\nExcept for Modula2.  This language is defined to not have C style\narrays, but has a string_lower_bound index of 0, this behaviour is\nmaintained after this commit by having Modula2 be the only language\nthat overrides the string_lower_bound method.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_language_data): Remove string_lower_bound\n\tinitializer.\n\t* c-lang.c (c_language_data): Likewise.\n\t(cplus_language_data): Likewise.\n\t(asm_language_data): Likewise.\n\t(minimal_language_data): Likewise.\n\t* d-lang.c (d_language_data): Likewise.\n\t* f-lang.c (f_language_data): Likewise.\n\t* go-lang.c (go_language_data): Likewise.\n\t* language.c (unknown_language_data): Likewise.\n\t(auto_language_data): Likewise.\n\t* language.h (language_data): Remove string_lower_bound field.\n\t(language_defn::string_lower_bound): New member function.\n\t* m2-lang.c (m2_language_data): Remove string_lower_bound\n\tinitializer.\n\t(m2_language::string_lower_bound): New member function.\n\t* objc-lang.c (objc_language_data): Remove string_lower_bound\n\tinitializer.\n\t* opencl-lang.c (opencl_language_data): Likewise.\n\t* p-lang.c (pascal_language_data): Likewise.\n\t* rust-lang.c (rust_language_data): Likewise.\n\t* valops.c (value_cstring): Update call to string_lower_bound.\n\t(value_string): Likewise.\n\t* value.c (allocate_repeated_value): Likewise.",
    "tree": {
      "sha": "eb8f23e76fedac0151280623ebe9d055819b34d3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eb8f23e76fedac0151280623ebe9d055819b34d3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1c236ddd45b182b6f4895b276183cdd8382d3e1b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c236ddd45b182b6f4895b276183cdd8382d3e1b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1c236ddd45b182b6f4895b276183cdd8382d3e1b"
    }
  ],
  "stats": {
    "total": 68,
    "additions": 47,
    "deletions": 21
  },
  "files": [
    {
      "sha": "a337c605fc0e3c0ef815e3da9bf5965b0d82d62e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -1,3 +1,30 @@\n+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_language_data): Remove string_lower_bound\n+\tinitializer.\n+\t* c-lang.c (c_language_data): Likewise.\n+\t(cplus_language_data): Likewise.\n+\t(asm_language_data): Likewise.\n+\t(minimal_language_data): Likewise.\n+\t* d-lang.c (d_language_data): Likewise.\n+\t* f-lang.c (f_language_data): Likewise.\n+\t* go-lang.c (go_language_data): Likewise.\n+\t* language.c (unknown_language_data): Likewise.\n+\t(auto_language_data): Likewise.\n+\t* language.h (language_data): Remove string_lower_bound field.\n+\t(language_defn::string_lower_bound): New member function.\n+\t* m2-lang.c (m2_language_data): Remove string_lower_bound\n+\tinitializer.\n+\t(m2_language::string_lower_bound): New member function.\n+\t* objc-lang.c (objc_language_data): Remove string_lower_bound\n+\tinitializer.\n+\t* opencl-lang.c (opencl_language_data): Likewise.\n+\t* p-lang.c (pascal_language_data): Likewise.\n+\t* rust-lang.c (rust_language_data): Likewise.\n+\t* valops.c (value_cstring): Update call to string_lower_bound.\n+\t(value_string): Likewise.\n+\t* value.c (allocate_repeated_value): Likewise.\n+\n 2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* valops.c (value_repeat): Fix incorrect argument name in comment."
    },
    {
      "sha": "b90e7a05bcdf295c45a2e148db1fd0c6fe02c526",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -13716,7 +13716,6 @@ extern const struct language_data ada_language_data =\n   &ada_exp_descriptor,\n   true,                         /* la_store_sym_names_in_linkage_form_p */\n   ada_op_print_tab,             /* expression operators for printing */\n-  1,                            /* String lower bound */\n   &ada_varobj_ops,\n };\n "
    },
    {
      "sha": "ecb339c3f87665b592b2a8b5fc16b4518e145f17",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -882,7 +882,6 @@ extern const struct language_data c_language_data =\n   &exp_descriptor_c,\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   c_op_print_tab,\t\t/* expression operators for printing */\n-  0,\t\t\t\t/* String lower bound */\n   &c_varobj_ops,\n };\n \n@@ -989,7 +988,6 @@ extern const struct language_data cplus_language_data =\n   &exp_descriptor_c,\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   c_op_print_tab,\t\t/* expression operators for printing */\n-  0,\t\t\t\t/* String lower bound */\n   &cplus_varobj_ops,\n };\n \n@@ -1199,7 +1197,6 @@ extern const struct language_data asm_language_data =\n   &exp_descriptor_c,\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   c_op_print_tab,\t\t/* expression operators for printing */\n-  0,\t\t\t\t/* String lower bound */\n   &default_varobj_ops,\n };\n \n@@ -1267,7 +1264,6 @@ extern const struct language_data minimal_language_data =\n   &exp_descriptor_c,\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   c_op_print_tab,\t\t/* expression operators for printing */\n-  0,\t\t\t\t/* String lower bound */\n   &default_varobj_ops,\n };\n "
    },
    {
      "sha": "f75a973fbfb1007d15bff5052b03c391f56fe732",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -135,7 +135,6 @@ extern const struct language_data d_language_data =\n   &exp_descriptor_c,\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   d_op_print_tab,\t\t/* Expression operators for printing.  */\n-  0,\t\t\t\t/* String lower bound.  */\n   &default_varobj_ops,\n };\n "
    },
    {
      "sha": "344bdb8f0c8beb745a92bf34008baad3880a5906",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -493,7 +493,6 @@ extern const struct language_data f_language_data =\n   &exp_descriptor_f,\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   f_op_print_tab,\t\t/* expression operators for printing */\n-  1,\t\t\t\t/* String lower bound */\n   &default_varobj_ops,\n };\n "
    },
    {
      "sha": "c0ad0be13628fa830f5b4277f4b37d786fc5df0a",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -515,7 +515,6 @@ extern const struct language_data go_language_data =\n   &exp_descriptor_c,\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   go_op_print_tab,\t\t/* Expression operators for printing.  */\n-  0,\t\t\t\t/* String lower bound.  */\n   &default_varobj_ops,\n };\n "
    },
    {
      "sha": "1866a964599c61f0dfd9600ec41c48959fe9d8bc",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -782,7 +782,6 @@ extern const struct language_data unknown_language_data =\n   &exp_descriptor_standard,\n   true,\t\t\t\t/* store_sym_names_in_linkage_form_p */\n   unk_op_print_tab,\t\t/* expression operators for printing */\n-  0,\t\t\t\t/* String lower bound */\n   &default_varobj_ops,\n };\n \n@@ -916,7 +915,6 @@ extern const struct language_data auto_language_data =\n   &exp_descriptor_standard,\n   false,\t\t\t/* store_sym_names_in_linkage_form_p */\n   unk_op_print_tab,\t\t/* expression operators for printing */\n-  0,\t\t\t\t/* String lower bound */\n   &default_varobj_ops,\n };\n "
    },
    {
      "sha": "d83ea132a91d2e37c5a3c02e3d873033261b88b5",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -232,9 +232,6 @@ struct language_data\n \n     const struct op_print *la_op_print_tab;\n \n-    /* Index to use for extracting the first element of a string.  */\n-    char string_lower_bound;\n-\n     /* Various operations on varobj.  */\n     const struct lang_varobj_ops *la_varobj_ops;\n   };\n@@ -568,6 +565,14 @@ struct language_defn : language_data\n   virtual bool c_style_arrays_p () const\n   { return true; }\n \n+  /* Return the index to use for extracting the first element of a string,\n+     or as the lower bound when creating a new string.  The default of\n+     choosing 0 or 1 based on C_STYLE_ARRAYS_P works for all currently\n+     supported languages except Modula-2.  */\n+\n+  virtual char string_lower_bound () const\n+  { return c_style_arrays_p () ? 0 : 1; }\n+\n protected:\n \n   /* This is the overridable part of the GET_SYMBOL_NAME_MATCHER method."
    },
    {
      "sha": "7bd9e710377acc43b94be52169f5c613595f1ebc",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -206,7 +206,6 @@ extern const struct language_data m2_language_data =\n   &exp_descriptor_modula2,\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   m2_op_print_tab,\t\t/* expression operators for printing */\n-  0,\t\t\t\t/* String lower bound */\n   &default_varobj_ops,\n };\n \n@@ -440,6 +439,12 @@ class m2_language : public language_defn\n \n   bool c_style_arrays_p () const override\n   { return false; }\n+\n+  /* See language.h.  Despite not having C-style arrays, Modula-2 uses 0\n+     for its string lower bounds.  */\n+\n+  char string_lower_bound () const override\n+  { return 0; }\n };\n \n /* Single instance of the M2 language.  */"
    },
    {
      "sha": "337b7a49f3c5c57380f03a0975eaffbaead01e17",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -330,7 +330,6 @@ extern const struct language_data objc_language_data =\n   &exp_descriptor_standard,\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   objc_op_print_tab,\t\t/* Expression operators for printing */\n-  0,\t\t\t\t/* String lower bound */\n   &default_varobj_ops,\n };\n "
    },
    {
      "sha": "2e3e54a2233fdd384487a45ffb67203af65eed81",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -1013,7 +1013,6 @@ extern const struct language_data opencl_language_data =\n   &exp_descriptor_opencl,\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   c_op_print_tab,\t\t/* expression operators for printing */\n-  0,\t\t\t\t/* String lower bound */\n   &default_varobj_ops,\n };\n "
    },
    {
      "sha": "b07557151dbbcb3c020436e392574d773df09d43",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -259,7 +259,6 @@ extern const struct language_data pascal_language_data =\n   &exp_descriptor_standard,\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   pascal_op_print_tab,\t\t/* expression operators for printing */\n-  0,\t\t\t\t/* String lower bound */\n   &default_varobj_ops,\n };\n "
    },
    {
      "sha": "12fc138785d3379872e9eb46d0edef6e84b708ec",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -1908,7 +1908,6 @@ extern const struct language_data rust_language_data =\n   &exp_descriptor_rust,\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   c_op_print_tab,\t\t/* expression operators for printing */\n-  0,\t\t\t\t/* String lower bound */\n   &default_varobj_ops,\n };\n "
    },
    {
      "sha": "0995a76c02f818b67e80e39a90e91146416aca3f",
      "filename": "gdb/valops.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/valops.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/valops.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valops.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -1644,7 +1644,7 @@ struct value *\n value_cstring (const char *ptr, ssize_t len, struct type *char_type)\n {\n   struct value *val;\n-  int lowbound = current_language->string_lower_bound;\n+  int lowbound = current_language->string_lower_bound ();\n   ssize_t highbound = len / TYPE_LENGTH (char_type);\n   struct type *stringtype\n     = lookup_array_range_type (char_type, lowbound, highbound + lowbound - 1);\n@@ -1667,7 +1667,7 @@ struct value *\n value_string (const char *ptr, ssize_t len, struct type *char_type)\n {\n   struct value *val;\n-  int lowbound = current_language->string_lower_bound;\n+  int lowbound = current_language->string_lower_bound ();\n   ssize_t highbound = len / TYPE_LENGTH (char_type);\n   struct type *stringtype\n     = lookup_string_range_type (char_type, lowbound, highbound + lowbound - 1);"
    },
    {
      "sha": "c8d94149bb8cece2cde7c2c2d9c39ad384ce4ecc",
      "filename": "gdb/value.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c12a6c70a0bf1c292478436f12df0a2d84c2a2/gdb/value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.c?ref=22c12a6c70a0bf1c292478436f12df0a2d84c2a2",
      "patch": "@@ -1041,7 +1041,10 @@ allocate_value (struct type *type)\n struct value *\n allocate_repeat_value (struct type *type, int count)\n {\n-  int low_bound = current_language->string_lower_bound;\t\t/* ??? */\n+  /* Despite the fact that we are really creating an array of TYPE here, we\n+     use the string lower bound as the array lower bound.  This seems to\n+     work fine for now.  */\n+  int low_bound = current_language->string_lower_bound ();\n   /* FIXME-type-allocation: need a way to free this type when we are\n      done with it.  */\n   struct type *array_type"
    }
  ]
}