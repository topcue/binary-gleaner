{
  "sha": "ac8c53cc67724f990003009fd37a3d7dc662fcb3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWM4YzUzY2M2NzcyNGY5OTAwMDMwMDlmZDM3YTNkN2RjNjYyZmNiMw==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-01-10T21:31:07Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-02-12T18:59:39Z"
    },
    "message": "Use function_name_style to print Ada and C function names\n\nNote that ada-typeprint.c print_func_type is called with\ntypes representing functions and is also called to print\na function NAME together with its type.  In such a case, the function\nname will be printed using function name style.\n\nSimilarly, c_print_type_1 is called to print a type, optionally\nwith the name of an object of this type in the VARSTRING arg.\nSo, c_print_type_1 uses function name style to print varstring\nwhen the type code indicates that c_print_type_1 TYPE is some\n'real code'.\n\ngdb/ChangeLog\n2019-02-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* ada-typeprint.c (print_func_type): Print function name\n\tstyle to print function name.\n\t* c-typeprint.c (c_print_type_1): Likewise.",
    "tree": {
      "sha": "0f206aad70d0de7cc14022a51c8a1ebc52d217a3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0f206aad70d0de7cc14022a51c8a1ebc52d217a3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ac8c53cc67724f990003009fd37a3d7dc662fcb3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac8c53cc67724f990003009fd37a3d7dc662fcb3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ac8c53cc67724f990003009fd37a3d7dc662fcb3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac8c53cc67724f990003009fd37a3d7dc662fcb3/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "e486594504d72a3afa199392a9d95a56ef1d6293",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e486594504d72a3afa199392a9d95a56ef1d6293",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e486594504d72a3afa199392a9d95a56ef1d6293"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 17,
    "deletions": 3
  },
  "files": [
    {
      "sha": "20953e5c01c62e5c5ae10a290aefa9025fea283f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ac8c53cc67724f990003009fd37a3d7dc662fcb3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ac8c53cc67724f990003009fd37a3d7dc662fcb3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ac8c53cc67724f990003009fd37a3d7dc662fcb3",
      "patch": "@@ -1,3 +1,9 @@\n+2019-02-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* ada-typeprint.c (print_func_type): Print function name\n+\tstyle to print function name.\n+\t* c-typeprint.c (c_print_type_1): Likewise.\n+\n 2019-02-11  Alan Hayward  <alan.hayward@arm.com>\n \n \t* aarch64-linux-tdep.c (aarch64_linux_get_syscall_number): Check"
    },
    {
      "sha": "8c42e8140deedbfefe5244400c2a1de5768712a6",
      "filename": "gdb/ada-typeprint.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ac8c53cc67724f990003009fd37a3d7dc662fcb3/gdb/ada-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ac8c53cc67724f990003009fd37a3d7dc662fcb3/gdb/ada-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-typeprint.c?ref=ac8c53cc67724f990003009fd37a3d7dc662fcb3",
      "patch": "@@ -30,6 +30,7 @@\n #include \"language.h\"\n #include \"demangle.h\"\n #include \"c-lang.h\"\n+#include \"cli/cli-style.h\"\n #include \"typeprint.h\"\n #include \"target-float.h\"\n #include \"ada-lang.h\"\n@@ -779,7 +780,10 @@ print_func_type (struct type *type, struct ui_file *stream, const char *name,\n     fprintf_filtered (stream, \"function\");\n \n   if (name != NULL && name[0] != '\\0')\n-    fprintf_filtered (stream, \" %s\", name);\n+    {\n+      fputs_filtered (\" \", stream);\n+      fputs_styled (name, function_name_style.style (), stream);\n+    }\n \n   if (len > 0)\n     {"
    },
    {
      "sha": "6690ca53bcdac5e656eff63c37a54d6be0b283b0",
      "filename": "gdb/c-typeprint.c",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ac8c53cc67724f990003009fd37a3d7dc662fcb3/gdb/c-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ac8c53cc67724f990003009fd37a3d7dc662fcb3/gdb/c-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-typeprint.c?ref=ac8c53cc67724f990003009fd37a3d7dc662fcb3",
      "patch": "@@ -28,6 +28,7 @@\n #include \"language.h\"\n #include \"demangle.h\"\n #include \"c-lang.h\"\n+#include \"cli/cli-style.h\"\n #include \"typeprint.h\"\n #include \"cp-abi.h\"\n #include \"cp-support.h\"\n@@ -115,6 +116,7 @@ c_print_type_1 (struct type *type,\n     type = check_typedef (type);\n \n   local_name = typedef_hash_table::find_typedef (flags, type);\n+  code = TYPE_CODE (type);\n   if (local_name != NULL)\n     {\n       fputs_filtered (local_name, stream);\n@@ -124,7 +126,6 @@ c_print_type_1 (struct type *type,\n   else\n     {\n       c_type_print_base_1 (type, stream, show, level, language, flags, podata);\n-      code = TYPE_CODE (type);\n       if ((varstring != NULL && *varstring != '\\0')\n \t  /* Need a space if going to print stars or brackets;\n \t     but not if we will print just a type name.  */\n@@ -144,7 +145,10 @@ c_print_type_1 (struct type *type,\n \n   if (varstring != NULL)\n     {\n-      fputs_filtered (varstring, stream);\n+      if (code == TYPE_CODE_FUNC || code == TYPE_CODE_METHOD)\n+\tfputs_styled (varstring, function_name_style.style (), stream);\n+      else\n+\tfputs_filtered (varstring, stream);\n \n       /* For demangled function names, we have the arglist as part of\n          the name, so don't print an additional pair of ()'s.  */"
    }
  ]
}