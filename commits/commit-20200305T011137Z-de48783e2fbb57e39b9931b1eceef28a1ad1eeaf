{
  "sha": "de48783e2fbb57e39b9931b1eceef28a1ad1eeaf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGU0ODc4M2UyZmJiNTdlMzliOTkzMWIxZWNlZWYyOGExYWQxZWVhZg==",
  "commit": {
    "author": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2020-03-04T05:08:04Z"
    },
    "committer": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2020-03-05T01:11:37Z"
    },
    "message": "RISC-V: Add description for RISC-V Modifiers to as doc.\n\n\tgas/\n\t* doc/c-riscv.texi (relocation modifiers): Add documentation.\n\t(RISC-V-Formats): Update the section name from \"Instruction Formats\"\n\tto \"RISC-V Instruction Formats\".",
    "tree": {
      "sha": "fab74d5d21b180908a614fdec001faeabc4c7d13",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fab74d5d21b180908a614fdec001faeabc4c7d13"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/de48783e2fbb57e39b9931b1eceef28a1ad1eeaf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de48783e2fbb57e39b9931b1eceef28a1ad1eeaf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/de48783e2fbb57e39b9931b1eceef28a1ad1eeaf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de48783e2fbb57e39b9931b1eceef28a1ad1eeaf/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "6f8f95b4c4785e053f96b473039e244473a85ee5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f8f95b4c4785e053f96b473039e244473a85ee5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6f8f95b4c4785e053f96b473039e244473a85ee5"
    }
  ],
  "stats": {
    "total": 118,
    "additions": 117,
    "deletions": 1
  },
  "files": [
    {
      "sha": "179ebe789a61d4206aef773423c5c90460e17911",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de48783e2fbb57e39b9931b1eceef28a1ad1eeaf/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de48783e2fbb57e39b9931b1eceef28a1ad1eeaf/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=de48783e2fbb57e39b9931b1eceef28a1ad1eeaf",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-04  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* doc/c-riscv.texi (relocation modifiers): Add documentation.\n+\t(RISC-V-Formats): Update the section name from \"Instruction Formats\"\n+\tto \"RISC-V Instruction Formats\".\n+\n 2020-03-04  Alexandre Oliva  <oliva@adacore.com>\n \n \t* config/tc-arm.c (md_apply_fix): Warn if a PC-relative load is"
    },
    {
      "sha": "6e932dcb2443c9c68e0aaeea9b110f83cf3614a9",
      "filename": "gas/doc/c-riscv.texi",
      "status": "modified",
      "additions": 111,
      "deletions": 1,
      "changes": 112,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de48783e2fbb57e39b9931b1eceef28a1ad1eeaf/gas/doc/c-riscv.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de48783e2fbb57e39b9931b1eceef28a1ad1eeaf/gas/doc/c-riscv.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-riscv.texi?ref=de48783e2fbb57e39b9931b1eceef28a1ad1eeaf",
      "patch": "@@ -17,6 +17,7 @@\n @menu\n * RISC-V-Options::        RISC-V Options\n * RISC-V-Directives::     RISC-V Directives\n+* RISC-V-Modifiers::      RISC-V Assembler Modifiers\n * RISC-V-Formats::        RISC-V Instruction Formats\n * RISC-V-ATTRIBUTE::      RISC-V Object Attribute\n @end menu\n@@ -207,8 +208,117 @@ The @var{tag} is either an attribute number, or one of the following:\n \n @end table\n \n+@node RISC-V-Modifiers\n+@section RISC-V Assembler Modifiers\n+\n+The RISC-V assembler supports following modifiers for relocatable addresses\n+used in RISC-V instruction operands.  However, we also support some pseudo\n+instructions that are easier to use than these modifiers.\n+\n+@table @code\n+@item %lo(@var{symbol})\n+The low 12 bits of absolute address for @var{symbol}.\n+\n+@item %hi(@var{symbol})\n+The high 20 bits of absolute address for @var{symbol}.  This is usually\n+used with the %lo modifier to represent a 32-bit absolute address.\n+\n+@smallexample\n+\tlui        a0, %hi(@var{symbol})     // R_RISCV_HI20\n+\taddi       a0, a0, %lo(@var{symbol}) // R_RISCV_LO12_I\n+\n+\tlui        a0, %hi(@var{symbol})     // R_RISCV_HI20\n+\tload/store a0, %lo(@var{symbol})(a0) // R_RISCV_LO12_I/S\n+@end smallexample\n+\n+@item %pcrel_lo(@var{label})\n+The low 12 bits of relative address between pc and @var{symbol}.\n+The @var{symbol} is related to the high part instruction which is marked\n+by @var{label}.\n+\n+@item %pcrel_hi(@var{symbol})\n+The high 20 bits of relative address between pc and @var{symbol}.\n+This is usually used with the %pcrel_lo modifier to represent a +/-2GB\n+pc-relative range.\n+\n+@smallexample\n+@var{label}:\n+\tauipc      a0, %pcrel_hi(@var{symbol})    // R_RISCV_PCREL_HI20\n+\taddi       a0, a0, %pcrel_lo(@var{label}) // R_RISCV_PCREL_LO12_I\n+\n+@var{label}:\n+\tauipc      a0, %pcrel_hi(@var{symbol})    // R_RISCV_PCREL_HI20\n+\tload/store a0, %pcrel_lo(@var{label})(a0) // R_RISCV_PCREL_LO12_I/S\n+@end smallexample\n+\n+Or you can use the pseudo lla/lw/sw/... instruction to do this.\n+\n+@smallexample\n+\tlla  a0, @var{symbol}\n+@end smallexample\n+\n+@item %tprel_add(@var{symbol})\n+This is used purely to associate the R_RISCV_TPREL_ADD relocation for\n+TLS relaxation.  This one is only valid as the fourth operand to the normally\n+3 operand add instruction.\n+\n+@item %tprel_lo(@var{symbol})\n+The low 12 bits of relative address between tp and @var{symbol}.\n+\n+@item %tprel_hi(@var{symbol})\n+The high 20 bits of relative address between tp and @var{symbol}.  This is\n+usually used with the %tprel_lo and %tprel_add modifiers to access the thread\n+local variable @var{symbol} in TLS Local Exec.\n+\n+@smallexample\n+\tlui        a5, %tprel_hi(@var{symbol})          // R_RISCV_TPREL_HI20\n+\tadd        a5, a5, tp, %tprel_add(@var{symbol}) // R_RISCV_TPREL_ADD\n+\tload/store t0, %tprel_lo(@var{symbol})(a5)      // R_RISCV_TPREL_LO12_I/S\n+@end smallexample\n+\n+@item %tls_ie_pcrel_hi(@var{symbol})\n+The high 20 bits of relative address between pc and GOT entry.  It is\n+usually used with the %pcrel_lo modifier to access the thread local\n+variable @var{symbol} in TLS Initial Exec.\n+\n+@smallexample\n+\tla.tls.ie  a5, @var{symbol}\n+\tadd        a5, a5, tp\n+\tload/store t0, 0(a5)\n+@end smallexample\n+\n+The pseudo la.tls.ie instruction can be expended to\n+\n+@smallexample\n+@var{label}:\n+\tauipc a5, %tls_ie_pcrel_hi(@var{symbol}) // R_RISCV_TLS_GOT_HI20\n+\tload  a5, %pcrel_lo(@var{label})(a5)     // R_RISCV_PCREL_LO12_I\n+@end smallexample\n+\n+@item %tls_gd_pcrel_hi(@var{symbol})\n+The high 20 bits of relative address between pc and GOT entry.  It is\n+usually used with the %pcrel_lo modifier to access the thread local variable\n+@var{symbol} in TLS Global Dynamic.\n+\n+@smallexample\n+\tla.tls.gd  a0, @var{symbol}\n+\tcall       __tls_get_addr@@plt\n+\tmv         a5, a0\n+\tload/store t0, 0(a5)\n+@end smallexample\n+\n+The pseudo la.tls.gd instruction can be expended to\n+\n+@smallexample\n+@var{label}:\n+\tauipc a0, %tls_gd_pcrel_hi(@var{symbol}) // R_RISCV_TLS_GD_HI20\n+\taddi  a0, a0, %pcrel_lo(@var{label})     // R_RISCV_PCREL_LO12_I\n+@end smallexample\n+\n+@end table\n+\n @node RISC-V-Formats\n-@section Instruction Formats\n+@section RISC-V Instruction Formats\n @cindex instruction formats, risc-v\n @cindex RISC-V instruction formats\n "
    }
  ]
}