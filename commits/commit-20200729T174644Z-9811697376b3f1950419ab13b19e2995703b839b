{
  "sha": "9811697376b3f1950419ab13b19e2995703b839b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTgxMTY5NzM3NmIzZjE5NTA0MTlhYjEzYjE5ZTI5OTU3MDNiODM5Yg==",
  "commit": {
    "author": {
      "name": "Andreas Arnez",
      "email": "arnez@linux.ibm.com",
      "date": "2020-07-29T17:46:44Z"
    },
    "committer": {
      "name": "Andreas Arnez",
      "email": "arnez@linux.ibm.com",
      "date": "2020-07-29T17:46:44Z"
    },
    "message": "PR26279 Work around maybe-uninitialized warning in s390-mkopc.c\n\nIn s390-mkopc.c, the function insertExpandedMnemonic() searches for the\nfirst occurrence of '*' or '$' in the given mnemonic, and, if a match is\nfound, chooses an extension table using a switch() on that character.  The\nswitch statement contains a default case that prints an error message and\ndoes not set the extension table.  Although this case cannot occur, some\nGCC versions obviously conclude that the extension table might have been\nleft uninitialized after the switch statement and consequently emit\nmaybe-uninitialized warnings for the variables 'ext_table' and\n'ext_table_length'.\n\nCircumvent the warning by handling the unreachable default case with\nabort().\n\nopcodes/\n\t* s390-mkopc.c (insertExpandedMnemonic): Handle unreachable\n\tdefault case with abort() instead of printing an error message and\n\tcontinuing, to avoid a maybe-uninitialized warning.",
    "tree": {
      "sha": "a7b1a220104d285867830af766018a70828700b8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a7b1a220104d285867830af766018a70828700b8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9811697376b3f1950419ab13b19e2995703b839b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9811697376b3f1950419ab13b19e2995703b839b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9811697376b3f1950419ab13b19e2995703b839b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9811697376b3f1950419ab13b19e2995703b839b/comments",
  "author": {
    "login": "aarnez",
    "id": 32961398,
    "node_id": "MDQ6VXNlcjMyOTYxMzk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/32961398?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aarnez",
    "html_url": "https://github.com/aarnez",
    "followers_url": "https://api.github.com/users/aarnez/followers",
    "following_url": "https://api.github.com/users/aarnez/following{/other_user}",
    "gists_url": "https://api.github.com/users/aarnez/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aarnez/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aarnez/subscriptions",
    "organizations_url": "https://api.github.com/users/aarnez/orgs",
    "repos_url": "https://api.github.com/users/aarnez/repos",
    "events_url": "https://api.github.com/users/aarnez/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aarnez/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "aarnez",
    "id": 32961398,
    "node_id": "MDQ6VXNlcjMyOTYxMzk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/32961398?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aarnez",
    "html_url": "https://github.com/aarnez",
    "followers_url": "https://api.github.com/users/aarnez/followers",
    "following_url": "https://api.github.com/users/aarnez/following{/other_user}",
    "gists_url": "https://api.github.com/users/aarnez/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aarnez/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aarnez/subscriptions",
    "organizations_url": "https://api.github.com/users/aarnez/orgs",
    "repos_url": "https://api.github.com/users/aarnez/repos",
    "events_url": "https://api.github.com/users/aarnez/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aarnez/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "90fd07fcd3e6af8679df55b67482d5c8ab8dd9b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90fd07fcd3e6af8679df55b67482d5c8ab8dd9b9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/90fd07fcd3e6af8679df55b67482d5c8ab8dd9b9"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 8,
    "deletions": 1
  },
  "files": [
    {
      "sha": "4f56e1385bc9d103c7cc48fbab3594d98000b329",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9811697376b3f1950419ab13b19e2995703b839b/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9811697376b3f1950419ab13b19e2995703b839b/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=9811697376b3f1950419ab13b19e2995703b839b",
      "patch": "@@ -1,3 +1,9 @@\n+2020-07-29  Andreas Arnez  <arnez@linux.ibm.com>\n+\n+\t* s390-mkopc.c (insertExpandedMnemonic): Handle unreachable\n+\tdefault case with abort() instead of printing an error message and\n+\tcontinuing, to avoid a maybe-uninitialized warning.\n+\n 2020-07-24  Nick Clifton  <nickc@redhat.com>\n \n \t* po/de.po: Updated German translation."
    },
    {
      "sha": "b6c49e6d1e24bb4dcfe57ad8880610dc1714d94b",
      "filename": "opcodes/s390-mkopc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9811697376b3f1950419ab13b19e2995703b839b/opcodes/s390-mkopc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9811697376b3f1950419ab13b19e2995703b839b/opcodes/s390-mkopc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/s390-mkopc.c?ref=9811697376b3f1950419ab13b19e2995703b839b",
      "patch": "@@ -240,7 +240,8 @@ insertExpandedMnemonic (char *opcode, char *mnemonic, char *format,\n       ext_table = s390_crb_extensions;\n       ext_table_length = NUM_CRB_EXTENSIONS;\n       break;\n-    default: fprintf (stderr, \"Unknown tag char: %c\\n\", *tag);\n+    default:\n+      abort ();\t\t\t/* Should be unreachable.  */\n     }\n \n   for (i = 0; i < ext_table_length; i++)"
    }
  ]
}