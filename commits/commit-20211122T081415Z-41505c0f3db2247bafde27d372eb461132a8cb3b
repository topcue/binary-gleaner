{
  "sha": "41505c0f3db2247bafde27d372eb461132a8cb3b",
  "node_id": "C_kwDOANOeidoAKDQxNTA1YzBmM2RiMjI0N2JhZmRlMjdkMzcyZWI0NjExMzJhOGNiM2I",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-22T08:14:15Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-22T08:14:15Z"
    },
    "message": "[gdb/testsuite] Add test-case gdb.dwarf2/dw2-lines.exp\n\nAdd a new test-case gdb.dwarf2/dw2-lines.exp that tests various .debug_line\nsections.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "c8e0c17bad19f554650524aca40bf633e8b4ea5c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c8e0c17bad19f554650524aca40bf633e8b4ea5c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/41505c0f3db2247bafde27d372eb461132a8cb3b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41505c0f3db2247bafde27d372eb461132a8cb3b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/41505c0f3db2247bafde27d372eb461132a8cb3b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41505c0f3db2247bafde27d372eb461132a8cb3b/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fc6a93854b3c9520259926891c3a5c559d3545d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc6a93854b3c9520259926891c3a5c559d3545d1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fc6a93854b3c9520259926891c3a5c559d3545d1"
    }
  ],
  "stats": {
    "total": 207,
    "additions": 207,
    "deletions": 0
  },
  "files": [
    {
      "sha": "5bfa5975724b98542ce1c0f71b80048800d251d9",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-lines.c",
      "status": "added",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41505c0f3db2247bafde27d372eb461132a8cb3b/gdb/testsuite/gdb.dwarf2/dw2-lines.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41505c0f3db2247bafde27d372eb461132a8cb3b/gdb/testsuite/gdb.dwarf2/dw2-lines.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-lines.c?ref=41505c0f3db2247bafde27d372eb461132a8cb3b",
      "patch": "@@ -0,0 +1,45 @@\n+/*\n+   Copyright 2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+void\n+foo (int x)\n+{\n+\n+}\n+\n+void\n+bar (void)\n+{\n+  asm (\"bar_label: .globl bar_label\");\n+  foo (1);\n+  asm (\"bar_label_2: .globl bar_label_2\");\n+  foo (2);\n+  asm (\"bar_label_3: .globl bar_label_3\");\n+  foo (3);\n+  asm (\"bar_label_4: .globl bar_label_4\");\n+  foo (4);\n+  asm (\"bar_label_5: .globl bar_label_5\");\n+}\n+\n+int\n+main (void)\n+{\n+  asm (\"main_label: .globl main_label\");\n+\n+  bar ();\n+\n+  return 0;\n+}"
    },
    {
      "sha": "cde602fd46805932d5687f161a5e85fa3d068650",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-lines.exp",
      "status": "added",
      "additions": 156,
      "deletions": 0,
      "changes": 156,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41505c0f3db2247bafde27d372eb461132a8cb3b/gdb/testsuite/gdb.dwarf2/dw2-lines.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41505c0f3db2247bafde27d372eb461132a8cb3b/gdb/testsuite/gdb.dwarf2/dw2-lines.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-lines.exp?ref=41505c0f3db2247bafde27d372eb461132a8cb3b",
      "patch": "@@ -0,0 +1,156 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test line number information in various configurations.\n+\n+load_lib dwarf.exp\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+require dwarf2_support 1\n+\n+standard_testfile .c -dw.S\n+\n+with_shared_gdb {\n+    set func_info_vars \\\n+\t[concat \\\n+\t     [get_func_info main] \\\n+\t     [get_func_info bar]]\n+}\n+\n+# Helper function.\n+proc line_for { l } {\n+    global srcfile\n+    set line [gdb_get_line_number \"$l:\" $srcfile]\n+    return [expr $line + 1]\n+}\n+\n+# Execute test.\n+proc test_1 { _cv _cdw64 _lv _ldw64 } {\n+    global srcfile srcfile2 testfile\n+    global cv cdw64 lv ldw64\n+    set cv $_cv\n+    set cdw64 $_cdw64\n+    set lv $_lv\n+    set ldw64 $_ldw64\n+\n+    set asm_file [standard_output_file $srcfile2]\n+    Dwarf::assemble $asm_file {\n+\tdeclare_labels Llines\n+\tglobal srcdir subdir srcfile cv cdw64 lv ldw64\n+\tglobal func_info_vars\n+\tforeach var $func_info_vars {\n+\t    global $var\n+\t}\n+\n+\tcu { version $cv is_64 $cdw64 } {\n+\t    compile_unit {\n+\t\t{language @DW_LANG_C}\n+\t\t{name $srcfile}\n+\t\t{stmt_list $Llines DW_FORM_sec_offset}\n+\t    } {\n+\t\tsubprogram {\n+\t\t    {external 1 flag}\n+\t\t    {name main}\n+\t\t    {low_pc $main_start addr}\n+\t\t    {high_pc \"$main_start + $main_len\" addr}\n+\t\t}\n+\t\tsubprogram {\n+\t\t    {external 1 flag}\n+\t\t    {name bar}\n+\t\t    {low_pc $bar_start addr}\n+\t\t    {high_pc \"$bar_start + $bar_len\" addr}\n+\t\t}\n+\t    }\n+\t}\n+\n+\tlines [list version $lv is_64 $ldw64] Llines {\n+\t    include_dir \"${srcdir}/${subdir}\"\n+\t    file_name \"$srcfile\" 1\n+\n+\t    program {\n+\t\t{DW_LNE_set_address bar_label}\n+\t\t{line [line_for bar_label]}\n+\t\t{DW_LNS_copy}\n+\n+\t\t{DW_LNE_set_address bar_label_2}\n+\t\t{line [line_for bar_label_2]}\n+\t\t{DW_LNS_copy}\n+\n+\t\t{DW_LNE_set_address bar_label_3}\n+\t\t{line [line_for bar_label_3]}\n+\t\t{DW_LNS_copy}\n+\n+\t\t{DW_LNE_set_address bar_label_4}\n+\t\t{line [line_for bar_label_4]}\n+\t\t{DW_LNS_copy}\n+\n+\t\t{DW_LNE_set_address bar_label_5}\n+\t\t{DW_LNE_end_sequence}\n+\t    }\n+\t}\n+    }\n+\n+    if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t      [list $srcfile $asm_file] {nodebug}] } {\n+\treturn -1\n+    }\n+\n+    if ![runto_main] {\n+\treturn -1\n+    }\n+\n+    gdb_breakpoint \"bar\"\n+    gdb_continue_to_breakpoint \"foo \\\\(1\\\\)\"\n+\n+    gdb_test \"next\" \"foo \\\\(2\\\\).*\" \"next to foo (2)\"\n+    gdb_test \"next\" \"foo \\\\(3\\\\).*\" \"next to foo (3)\"\n+    gdb_test \"next\" \"foo \\\\(4\\\\).*\" \"next to foo (4)\"\n+}\n+\n+\n+# Add unique test prefix.\n+proc test { cv cdw64 lv ldw64 } {\n+    with_test_prefix cv=$cv {\n+\twith_test_prefix cdw=[expr $cdw64 ? 64 : 32] {\n+\t    with_test_prefix lv=$lv {\n+\t\twith_test_prefix ldw=[expr $ldw64 ? 64 : 32] {\n+\t\t    test_1 $cv $cdw64 $lv $ldw64\n+\t\t}\n+\t    }\n+\t}\n+    }\n+}\n+\n+set cv_low 2\n+set cv_high 4\n+\n+set lv_low 2\n+set lv_high 3\n+\n+for { set cv $cv_low } { $cv <= $cv_high } { incr cv } {\n+    for { set lv $lv_low } { $lv <= $lv_high } { incr lv } {\n+\t# I'm not sure if it makes sense to have a dwarf vx CU with\n+\t# a dwarf vx+1 line unit.\n+\tif { $lv > $lv } {\n+\t    continue\n+\t}\n+\n+\tforeach cdw64 { 0 1 } {\n+\t    foreach ldw64 { 0 1 } {\n+\t\ttest $cv $cdw64 $lv $ldw64\n+\t    }\n+\t}\n+    }\n+}"
    },
    {
      "sha": "d6126ca2598f6335d5bd826481fc182442933dfe",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41505c0f3db2247bafde27d372eb461132a8cb3b/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41505c0f3db2247bafde27d372eb461132a8cb3b/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=41505c0f3db2247bafde27d372eb461132a8cb3b",
      "patch": "@@ -411,6 +411,7 @@ proc function_range { func src {options {debug}} } {\n \n # Extract the start, length, and end for function called NAME and\n # create suitable variables in the callers scope.\n+# Return the list of created variables.\n proc get_func_info { name {options {debug}} } {\n     global srcdir subdir srcfile\n \n@@ -423,6 +424,11 @@ proc get_func_info { name {options {debug}} } {\n \t\t ${options}]  \\\n \tfunc_start func_len\n     set func_end \"$func_start + $func_len\"\n+\n+    return [list \\\n+\t\t\"${name}_start\" \\\n+\t\t\"${name}_len\" \\\n+\t\t\"${name}_end\"]\n }\n \n # A DWARF assembler."
    }
  ]
}