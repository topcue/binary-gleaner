{
  "sha": "3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
  "node_id": "C_kwDOANOeidoAKDNhM2E0YzFmZTRjY2IxOTE0ZDI5ZmJmOGY1OTMwZDU1YWFjZWM3OGY",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2022-01-26T00:01:36Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2022-02-03T03:10:41Z"
    },
    "message": "PowerPC64 treatment of absolute symbols\n\nSupporting -static-pie on PowerPC64 requires the linker to properly\ntreat SHN_ABS symbols for cases like glibc's _nl_current_LC_CTYPE_used\nabsolute symbol.  I've been slow to fix the linker on powerpc because\nthere is some chance that this will break some shared libraries or\nPIEs.\n\nbfd/\n\t* elf64-ppc.c (ppc64_elf_check_relocs): Consolidate local sym\n\thandling code.  Don't count dyn relocs against non-dynamic\n\tabsolute symbols.\n\t(dec_dynrel_count): Adjust to suit.\n\t(ppc64_elf_edit_toc): Don't remove entries for absolute symbols\n\twhen pic.\n\t(allocate_got): Don't allocate space for got relocs against\n\tnon-dynamic absolute syms.\n\t(ppc64_elf_layout_multitoc): Likewise.\n\t(got_and_plt_relr): Likewise.\n\t(ppc64_elf_size_dynamic_sections): Likewise for local got.\n\t(got_and_plt_relr_for_local_syms): Likewise.\n\t(ppc64_elf_size_stubs): Don't allocate space for relr either.\n\t(ppc64_elf_relocate_section): Don't write relocs against non-dynamic\n\tabsolute symbols.  Don't optimise got and toc code sequences\n\tloading absolute symbol entries.\nld/\n\t* testsuite/ld-powerpc/abs-reloc.s,\n\t* testsuite/ld-powerpc/abs-static.d,\n\t* testsuite/ld-powerpc/abs-static.r,\n\t* testsuite/ld-powerpc/abs-pie.d,\n\t* testsuite/ld-powerpc/abs-pie.r,\n\t* testsuite/ld-powerpc/abs-shared.d,\n\t* testsuite/ld-powerpc/abs-shared.r,\n\t* testsuite/ld-powerpc/abs-pie-relr.d,\n\t* testsuite/ld-powerpc/abs-pie-relr.r,\n\t* testsuite/ld-powerpc/abs-shared-relr.d,\n\t* testsuite/ld-powerpc/abs-shared-relr.r: New tests.\n\t* testsuite/ld-powerpc/powerpc.exp: Run them.",
    "tree": {
      "sha": "d70433071d319f0d23a4f09aa62380be09291430",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d70433071d319f0d23a4f09aa62380be09291430"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "36a13a0e62bc672f59c6d27bc2b963edee32b488",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/36a13a0e62bc672f59c6d27bc2b963edee32b488",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/36a13a0e62bc672f59c6d27bc2b963edee32b488"
    }
  ],
  "stats": {
    "total": 478,
    "additions": 416,
    "deletions": 62
  },
  "files": [
    {
      "sha": "7223c497d07a887533524647e1ac97e97b2cb269",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 126,
      "deletions": 62,
      "changes": 188,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -4779,16 +4779,23 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n     {\n       unsigned long r_symndx;\n       struct elf_link_hash_entry *h;\n+      Elf_Internal_Sym *isym;\n       enum elf_ppc64_reloc_type r_type;\n       int tls_type;\n       struct _ppc64_elf_section_data *ppc64_sec;\n       struct plt_entry **ifunc, **plt_list;\n \n       r_symndx = ELF64_R_SYM (rel->r_info);\n       if (r_symndx < symtab_hdr->sh_info)\n-\th = NULL;\n+\t{\n+\t  h = NULL;\n+\t  isym = bfd_sym_from_r_symndx (&htab->elf.sym_cache, abfd, r_symndx);\n+\t  if (isym == NULL)\n+\t    return false;\n+\t}\n       else\n \t{\n+\t  isym = NULL;\n \t  h = sym_hashes[r_symndx - symtab_hdr->sh_info];\n \t  h = elf_follow_link (h);\n \n@@ -4859,11 +4866,6 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t}\n       else\n \t{\n-\t  Elf_Internal_Sym *isym = bfd_sym_from_r_symndx (&htab->elf.sym_cache,\n-\t\t\t\t\t\t\t  abfd, r_symndx);\n-\t  if (isym == NULL)\n-\t    return false;\n-\n \t  if (ELF_ST_TYPE (isym->st_info) == STT_GNU_IFUNC)\n \t    {\n \t      ifunc = update_local_sym_info (abfd, symtab_hdr, r_symndx,\n@@ -5127,16 +5129,7 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t\t  dest = h->root.u.def.section;\n \t      }\n \t    else\n-\t      {\n-\t\tElf_Internal_Sym *isym;\n-\n-\t\tisym = bfd_sym_from_r_symndx (&htab->elf.sym_cache,\n-\t\t\t\t\t      abfd, r_symndx);\n-\t\tif (isym == NULL)\n-\t\t  return false;\n-\n-\t\tdest = bfd_section_from_elf_index (abfd, isym->st_shndx);\n-\t      }\n+\t      dest = bfd_section_from_elf_index (abfd, isym->st_shndx);\n \n \t    if (dest != sec)\n \t      ppc64_elf_section_data (sec)->has_14bit_branch = 1;\n@@ -5352,11 +5345,13 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \tdodyn:\n \t  if ((h != NULL\n \t       && (h->root.type == bfd_link_hash_defweak\n-\t\t   || !h->def_regular))\n+\t\t   || (!h->def_regular && !h->root.ldscript_def)))\n \t      || (h != NULL\n-\t\t  && !bfd_link_executable (info)\n-\t\t  && !SYMBOLIC_BIND (info, h))\n+\t\t  && !SYMBOL_REFERENCES_LOCAL (info, h))\n \t      || (bfd_link_pic (info)\n+\t\t  && (h != NULL\n+\t\t      ? !bfd_is_abs_symbol (&h->root)\n+\t\t      : isym->st_shndx != SHN_ABS)\n \t\t  && must_be_dyn_reloc (info, r_type))\n \t      || (!bfd_link_pic (info)\n \t\t  && ifunc != NULL))\n@@ -5404,20 +5399,12 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t\t}\n \t      else\n \t\t{\n-\t\t  /* Track dynamic relocs needed for local syms too.\n-\t\t     We really need local syms available to do this\n-\t\t     easily.  Oh well.  */\n+\t\t  /* Track dynamic relocs needed for local syms too.  */\n \t\t  struct ppc_local_dyn_relocs *p;\n \t\t  struct ppc_local_dyn_relocs **head;\n \t\t  bool is_ifunc;\n \t\t  asection *s;\n \t\t  void *vpp;\n-\t\t  Elf_Internal_Sym *isym;\n-\n-\t\t  isym = bfd_sym_from_r_symndx (&htab->elf.sym_cache,\n-\t\t\t\t\t\tabfd, r_symndx);\n-\t\t  if (isym == NULL)\n-\t\t    return false;\n \n \t\t  s = bfd_section_from_elf_index (abfd, isym->st_shndx);\n \t\t  if (s == NULL)\n@@ -7256,11 +7243,13 @@ dec_dynrel_count (const Elf_Internal_Rela *rel,\n \n   if ((h != NULL\n        && (h->root.type == bfd_link_hash_defweak\n-\t   || !h->def_regular))\n+\t   || (!h->def_regular && !h->root.ldscript_def)))\n       || (h != NULL\n-\t  && !bfd_link_executable (info)\n-\t  && !SYMBOLIC_BIND (info, h))\n+\t  && !SYMBOL_REFERENCES_LOCAL (info, h))\n       || (bfd_link_pic (info)\n+\t  && (h != NULL\n+\t      ? !bfd_is_abs_symbol (&h->root)\n+\t      : sym_sec != bfd_abs_section_ptr)\n \t  && must_be_dyn_reloc (info, r_type))\n       || (!bfd_link_pic (info)\n \t  && (h != NULL\n@@ -9065,7 +9054,9 @@ ppc64_elf_edit_toc (struct bfd_link_info *info)\n \t\t  || discarded_section (sym_sec))\n \t\tcontinue;\n \n-\t      if (!SYMBOL_REFERENCES_LOCAL (info, h))\n+\t      if (!SYMBOL_REFERENCES_LOCAL (info, h)\n+\t\t  || (bfd_link_pic (info)\n+\t\t      && sym_sec == bfd_abs_section_ptr))\n \t\tcontinue;\n \n \t      if (h != NULL)\n@@ -9647,7 +9638,9 @@ ppc64_elf_edit_toc (struct bfd_link_info *info)\n \t      if ((h ? h->type : ELF_ST_TYPE (sym->st_info)) == STT_GNU_IFUNC)\n \t\tcontinue;\n \n-\t      if (!SYMBOL_REFERENCES_LOCAL (info, h))\n+\t      if (!SYMBOL_REFERENCES_LOCAL (info, h)\n+\t\t  || (bfd_link_pic (info)\n+\t\t      && sym_sec == bfd_abs_section_ptr))\n \t\tcontinue;\n \n \t      if (h != NULL)\n@@ -9781,7 +9774,8 @@ allocate_got (struct elf_link_hash_entry *h,\n \t     && (gent->tls_type == 0\n \t\t ? !info->enable_dt_relr\n \t\t : !(bfd_link_executable (info)\n-\t\t     && SYMBOL_REFERENCES_LOCAL (info, h))))\n+\t\t     && SYMBOL_REFERENCES_LOCAL (info, h)))\n+\t     && !bfd_is_abs_symbol (&h->root))\n \t    || (htab->elf.dynamic_sections_created\n \t\t&& h->dynindx != -1\n \t\t&& !SYMBOL_REFERENCES_LOCAL (info, h)))\n@@ -10246,6 +10240,8 @@ ppc64_elf_size_dynamic_sections (bfd *output_bfd,\n       unsigned char *lgot_masks;\n       bfd_size_type locsymcount;\n       Elf_Internal_Shdr *symtab_hdr;\n+      Elf_Internal_Sym *local_syms;\n+      Elf_Internal_Sym *isym;\n \n       if (!is_ppc64_elf (ibfd))\n \tcontinue;\n@@ -10296,8 +10292,22 @@ ppc64_elf_size_dynamic_sections (bfd *output_bfd,\n       local_plt = (struct plt_entry **) end_lgot_ents;\n       end_local_plt = local_plt + locsymcount;\n       lgot_masks = (unsigned char *) end_local_plt;\n+      local_syms = NULL;\n+      if (bfd_link_pic (info))\n+\t{\n+\t  local_syms = (Elf_Internal_Sym *) symtab_hdr->contents;\n+\t  if (local_syms == NULL && locsymcount != 0)\n+\t    {\n+\t      local_syms = bfd_elf_get_elf_syms (ibfd, symtab_hdr, locsymcount,\n+\t\t\t\t\t\t 0, NULL, NULL, NULL);\n+\t      if (local_syms == NULL)\n+\t\treturn false;\n+\t    }\n+\t}\n       s = ppc64_elf_tdata (ibfd)->got;\n-      for (; lgot_ents < end_lgot_ents; ++lgot_ents, ++lgot_masks)\n+      for (isym = local_syms;\n+\t   lgot_ents < end_lgot_ents;\n+\t   ++lgot_ents, ++lgot_masks, isym != NULL && isym++)\n \t{\n \t  struct got_entry **pent, *ent;\n \n@@ -10330,7 +10340,8 @@ ppc64_elf_size_dynamic_sections (bfd *output_bfd,\n \t\t    else if (bfd_link_pic (info)\n \t\t\t     && (ent->tls_type == 0\n \t\t\t\t ? !info->enable_dt_relr\n-\t\t\t\t : !bfd_link_executable (info)))\n+\t\t\t\t : !bfd_link_executable (info))\n+\t\t\t     && isym->st_shndx != SHN_ABS)\n \t\t      {\n \t\t\tasection *srel = ppc64_elf_tdata (ibfd)->relgot;\n \t\t\tsrel->size += rel_size;\n@@ -10341,6 +10352,14 @@ ppc64_elf_size_dynamic_sections (bfd *output_bfd,\n \t    else\n \t      *pent = ent->next;\n \t}\n+      if (local_syms != NULL\n+\t  && symtab_hdr->contents != (unsigned char *) local_syms)\n+\t{\n+\t  if (!info->keep_memory)\n+\t    free (local_syms);\n+\t  else\n+\t    symtab_hdr->contents = (unsigned char *) local_syms;\n+\t}\n \n       /* Allocate space for plt calls to local syms.  */\n       lgot_masks = (unsigned char *) end_local_plt;\n@@ -12793,6 +12812,8 @@ ppc64_elf_layout_multitoc (struct bfd_link_info *info)\n       bfd_size_type locsymcount;\n       Elf_Internal_Shdr *symtab_hdr;\n       asection *s;\n+      Elf_Internal_Sym *local_syms;\n+      Elf_Internal_Sym *isym;\n \n       if (!is_ppc64_elf (ibfd))\n \tcontinue;\n@@ -12807,8 +12828,22 @@ ppc64_elf_layout_multitoc (struct bfd_link_info *info)\n       local_plt = (struct plt_entry **) end_lgot_ents;\n       end_local_plt = local_plt + locsymcount;\n       lgot_masks = (unsigned char *) end_local_plt;\n+      local_syms = NULL;\n+      if (bfd_link_pic (info))\n+\t{\n+\t  local_syms = (Elf_Internal_Sym *) symtab_hdr->contents;\n+\t  if (local_syms == NULL && locsymcount != 0)\n+\t    {\n+\t      local_syms = bfd_elf_get_elf_syms (ibfd, symtab_hdr, locsymcount,\n+\t\t\t\t\t\t 0, NULL, NULL, NULL);\n+\t      if (local_syms == NULL)\n+\t\treturn false;\n+\t    }\n+\t}\n       s = ppc64_elf_tdata (ibfd)->got;\n-      for (; lgot_ents < end_lgot_ents; ++lgot_ents, ++lgot_masks)\n+      for (isym = local_syms;\n+\t   lgot_ents < end_lgot_ents;\n+\t   ++lgot_ents, ++lgot_masks, isym != NULL && isym++)\n \t{\n \t  struct got_entry *ent;\n \n@@ -12832,7 +12867,8 @@ ppc64_elf_layout_multitoc (struct bfd_link_info *info)\n \t      else if (bfd_link_pic (info)\n \t\t       && (ent->tls_type == 0\n \t\t\t   ? !info->enable_dt_relr\n-\t\t\t   : !bfd_link_executable (info)))\n+\t\t\t   : !bfd_link_executable (info))\n+\t\t       && isym->st_shndx != SHN_ABS)\n \t\t{\n \t\t  asection *srel = ppc64_elf_tdata (ibfd)->relgot;\n \t\t  srel->size += rel_size;\n@@ -13422,7 +13458,8 @@ got_and_plt_relr_for_local_syms (struct bfd_link_info *info)\n       struct plt_entry **local_plt, **lplt, **end_local_plt;\n       Elf_Internal_Shdr *symtab_hdr;\n       bfd_size_type locsymcount;\n-      Elf_Internal_Sym *local_syms = NULL;\n+      Elf_Internal_Sym *local_syms;\n+      Elf_Internal_Sym *isym;\n       struct plt_entry *pent;\n       struct got_entry *gent;\n \n@@ -13435,14 +13472,25 @@ got_and_plt_relr_for_local_syms (struct bfd_link_info *info)\n \n       symtab_hdr = &elf_symtab_hdr (ibfd);\n       locsymcount = symtab_hdr->sh_info;\n+      local_syms = (Elf_Internal_Sym *) symtab_hdr->contents;\n+      if (local_syms == NULL && locsymcount != 0)\n+\t{\n+\t  local_syms = bfd_elf_get_elf_syms (ibfd, symtab_hdr, locsymcount,\n+\t\t\t\t\t     0, NULL, NULL, NULL);\n+\t  if (local_syms == NULL)\n+\t    return false;\n+\t}\n       end_lgot_ents = lgot_ents + locsymcount;\n       local_plt = (struct plt_entry **) end_lgot_ents;\n       end_local_plt = local_plt + locsymcount;\n-      for (lgot = lgot_ents; lgot < end_lgot_ents; ++lgot)\n+      for (lgot = lgot_ents, isym = local_syms;\n+\t   lgot < end_lgot_ents;\n+\t   ++lgot, ++isym)\n \tfor (gent = *lgot; gent != NULL; gent = gent->next)\n \t  if (!gent->is_indirect\n \t      && gent->tls_type == 0\n-\t      && gent->got.offset != (bfd_vma) -1)\n+\t      && gent->got.offset != (bfd_vma) -1\n+\t      && isym->st_shndx != SHN_ABS)\n \t    {\n \t      asection *got = ppc64_elf_tdata (gent->owner)->got;\n \t      bfd_vma r_offset = (got->output_section->vma\n@@ -13456,29 +13504,22 @@ got_and_plt_relr_for_local_syms (struct bfd_link_info *info)\n \t    }\n \n       if (!htab->opd_abi)\n-\tfor (lplt = local_plt; lplt < end_local_plt; ++lplt)\n+\tfor (lplt = local_plt, isym = local_syms;\n+\t     lplt < end_local_plt;\n+\t     ++lplt, ++isym)\n \t  for (pent = *lplt; pent != NULL; pent = pent->next)\n-\t    if (pent->plt.offset != (bfd_vma) -1)\n+\t    if (pent->plt.offset != (bfd_vma) -1\n+\t\t&& ELF_ST_TYPE (isym->st_info) != STT_GNU_IFUNC)\n \t      {\n-\t\tElf_Internal_Sym *sym;\n-\n-\t\tif (!get_sym_h (NULL, &sym, NULL, NULL, &local_syms,\n-\t\t\t\tlplt - local_plt, ibfd))\n+\t\tbfd_vma r_offset = (pent->plt.offset\n+\t\t\t\t    + htab->pltlocal->output_offset\n+\t\t\t\t    + htab->pltlocal->output_section->vma);\n+\t\tif (!append_relr_off (htab, r_offset))\n \t\t  {\n-\t\t  err_exit:\n \t\t    if (symtab_hdr->contents != (unsigned char *) local_syms)\n \t\t      free (local_syms);\n \t\t    return false;\n \t\t  }\n-\n-\t\tif (ELF_ST_TYPE (sym->st_info) != STT_GNU_IFUNC)\n-\t\t  {\n-\t\t    bfd_vma r_offset = (pent->plt.offset\n-\t\t\t\t\t+ htab->pltlocal->output_offset\n-\t\t\t\t\t+ htab->pltlocal->output_section->vma);\n-\t\t    if (!append_relr_off (htab, r_offset))\n-\t\t      goto err_exit;\n-\t\t  }\n \t      }\n \n       if (local_syms != NULL\n@@ -13514,9 +13555,10 @@ got_and_plt_relr (struct elf_link_hash_entry *h, void *inf)\n       && (h->root.type == bfd_link_hash_defined\n \t  || h->root.type == bfd_link_hash_defweak))\n     {\n-      if (!htab->elf.dynamic_sections_created\n-\t  || h->dynindx == -1\n-\t  || SYMBOL_REFERENCES_LOCAL (info, h))\n+      if ((!htab->elf.dynamic_sections_created\n+\t   || h->dynindx == -1\n+\t   || SYMBOL_REFERENCES_LOCAL (info, h))\n+\t  && !bfd_is_abs_symbol (&h->root))\n \tfor (gent = h->got.glist; gent != NULL; gent = gent->next)\n \t  if (!gent->is_indirect\n \t      && gent->tls_type == 0\n@@ -13805,6 +13847,10 @@ ppc64_elf_size_stubs (struct bfd_link_info *info)\n \t\t\t      ? h->type == STT_GNU_IFUNC\n \t\t\t      : ELF_ST_TYPE (sym->st_info) == STT_GNU_IFUNC)\n \t\t\t    continue;\n+\t\t\t  if (h != NULL\n+\t\t\t      ? bfd_is_abs_symbol (&h->root)\n+\t\t\t      : sym->st_shndx == SHN_ABS)\n+\t\t\t    continue;\n \t\t\t  if (h != NULL\n \t\t\t      && !SYMBOL_REFERENCES_LOCAL (info, h))\n \t\t\t    continue;\n@@ -16553,6 +16599,8 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \n \tcase R_PPC64_GOT16_DS:\n \t  if ((h ? h->elf.type : ELF_ST_TYPE (sym->st_info)) == STT_GNU_IFUNC\n+\t      || (bfd_link_pic (info)\n+\t\t  && sec == bfd_abs_section_ptr)\n \t      || !htab->do_toc_opt)\n \t    break;\n \t  from = TOCstart + htab->sec_info[input_section->id].toc_off;\n@@ -16577,6 +16625,8 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \tcase R_PPC64_GOT16_LO_DS:\n \tcase R_PPC64_GOT16_HA:\n \t  if ((h ? h->elf.type : ELF_ST_TYPE (sym->st_info)) == STT_GNU_IFUNC\n+\t      || (bfd_link_pic (info)\n+\t\t  && sec == bfd_abs_section_ptr)\n \t      || !htab->do_toc_opt)\n \t    break;\n \t  from = TOCstart + htab->sec_info[input_section->id].toc_off;\n@@ -16607,6 +16657,8 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \n \tcase R_PPC64_GOT_PCREL34:\n \t  if ((h ? h->elf.type : ELF_ST_TYPE (sym->st_info)) == STT_GNU_IFUNC\n+\t      || (bfd_link_pic (info)\n+\t\t  && sec == bfd_abs_section_ptr)\n \t      || !htab->do_toc_opt)\n \t    break;\n \t  from = (rel->r_offset\n@@ -16846,7 +16898,11 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \t\t\t\t  && bfd_link_executable (info)\n \t\t\t\t  && (h == NULL\n \t\t\t\t      || SYMBOL_REFERENCES_LOCAL (info,\n-\t\t\t\t\t\t\t\t  &h->elf)))))\n+\t\t\t\t\t\t\t\t  &h->elf)))\n+\t\t\t     && (h != NULL\n+\t\t\t\t ? !bfd_is_abs_symbol (&h->elf.root)\n+\t\t\t\t : sym->st_shndx != SHN_ABS)))\n+\n \t\t  relgot = ppc64_elf_tdata (ent->owner)->relgot;\n \t\tif (relgot != NULL)\n \t\t  {\n@@ -17555,7 +17611,11 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \tcase R_PPC64_GOT16_HA:\n \tcase R_PPC64_TOC16_HA:\n \t  if (htab->do_toc_opt && relocation + addend + 0x8000 < 0x10000\n-\t      && !ppc64_elf_tdata (input_bfd)->unexpected_toc_insn)\n+\t      && !ppc64_elf_tdata (input_bfd)->unexpected_toc_insn\n+\t      && !(bfd_link_pic (info)\n+\t\t   && (h != NULL\n+\t\t       ? bfd_is_abs_symbol (&h->elf.root)\n+\t\t       : sec == bfd_abs_section_ptr)))\n \t    {\n \t      bfd_byte *p;\n \t    nop_it:\n@@ -17586,6 +17646,10 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \tcase R_PPC64_TOC16_LO_DS:\n \t  if (htab->do_toc_opt && relocation + addend + 0x8000 < 0x10000\n \t      && !ppc64_elf_tdata (input_bfd)->unexpected_toc_insn\n+\t      && !(bfd_link_pic (info)\n+\t\t   && (h != NULL\n+\t\t       ? bfd_is_abs_symbol (&h->elf.root)\n+\t\t       : sec == bfd_abs_section_ptr))\n \t      && offset_in_range (input_section, rel->r_offset & ~3, 4))\n \t    {\n \t      bfd_byte *p = contents + (rel->r_offset & ~3);"
    },
    {
      "sha": "edf0b430c7845b50de3371226ec6189c56490adf",
      "filename": "ld/testsuite/ld-powerpc/abs-pie-relr.d",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-pie-relr.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-pie-relr.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/abs-pie-relr.d?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -0,0 +1,34 @@\n+#source: abs-reloc.s\n+#as: -a64\n+#ld: -melf64ppc -pie --hash-style=sysv -z pack-relative-relocs --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\n+#objdump: -sdr\n+\n+#...\n+Contents of section .got:\n+.* (00000000 00018300|00830100 00000000) (00000000 00000001|01000000 00000000) .*\n+.* (00000000 00000002|02000000 00000000) (12345678 9abcdef0|f0debc9a 78563412) .*\n+.* (00000000 00000002|02000000 00000000) (12345678 9abcdef0|f0debc9a 78563412) .*\n+.* (00000000 00000001|01000000 00000000) .*\n+Contents of section \\.data:\n+.* (00000000 00010338|38030100 00000000) (00000000 00000001|01000000 00000000) .*\n+.* (00000000 00000002|02000000 00000000) (12345678 9abcdef0|f0debc9a 78563412) .*\n+#...\n+.* <_start>:\n+.*:\t(3c 4c 00 02|02 00 4c 3c) \taddis   r2,r12,2\n+.*:\t(38 42 81 58|58 81 42 38) \taddi    r2,r2,-32424\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 62 80 38|38 80 62 38) \taddi    r3,r2,-32712\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 82 80 08|08 80 82 e8) \tld      r4,-32760\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 a2 80 10|10 80 a2 e8) \tld      r5,-32752\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 c2 80 18|18 80 c2 e8) \tld      r6,-32744\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 e2 80 38|38 80 e2 38) \taddi    r7,r2,-32712\n+.*:\t(3d 02 00 00|00 00 02 3d) \taddis   r8,r2,0\n+.*:\t(e9 08 80 30|30 80 08 e9) \tld      r8,-32720\\(r8\\)\n+.*:\t(3d 22 00 00|00 00 22 3d) \taddis   r9,r2,0\n+.*:\t(e9 29 80 20|20 80 29 e9) \tld      r9,-32736\\(r9\\)\n+.*:\t(3d 42 00 00|00 00 42 3d) \taddis   r10,r2,0\n+.*:\t(e9 4a 80 28|28 80 4a e9) \tld      r10,-32728\\(r10\\)"
    },
    {
      "sha": "22effe89541508550bacadafc2db2d4dffeb4669",
      "filename": "ld/testsuite/ld-powerpc/abs-pie-relr.r",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-pie-relr.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-pie-relr.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/abs-pie-relr.r?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -0,0 +1,8 @@\n+#source: abs-reloc.s\n+#as: -a64\n+#ld: -melf64ppc -pie --hash-style=sysv -z pack-relative-relocs --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\n+#readelf: -rW\n+\n+Relocation section '\\.relr\\.dyn' at offset .* contains 1 entry:\n+  1 offset\n+0+10338"
    },
    {
      "sha": "b0930b6269f46a1efed1e1380c21d02bede861e0",
      "filename": "ld/testsuite/ld-powerpc/abs-pie.d",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-pie.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-pie.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/abs-pie.d?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -0,0 +1,34 @@\n+#source: abs-reloc.s\n+#as: -a64\n+#ld: -melf64ppc -pie --hash-style=sysv --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\n+#objdump: -sdr\n+\n+#...\n+Contents of section \\.got:\n+.* (00000000 00018400|00840100 00000000) (00000000 00000001|01000000 00000000) .*\n+.* (00000000 00000002|02000000 00000000) (12345678 9abcdef0|f0debc9a 78563412) .*\n+.* (00000000 00000002|02000000 00000000) (12345678 9abcdef0|f0debc9a 78563412) .*\n+.* (00000000 00000001|01000000 00000000) .*\n+Contents of section \\.data:\n+.* (00000000 00010438|38040100 00000000) (00000000 00000001|01000000 00000000) .*\n+.* (00000000 00000002|02000000 00000000) (12345678 9abcdef0|f0debc9a 78563412) .*\n+#...\n+.* <_start>:\n+.*:\t(3c 4c 00 02|02 00 4c 3c) \taddis   r2,r12,2\n+.*:\t(38 42 82 10|10 82 42 38) \taddi    r2,r2,-32240\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 62 80 38|38 80 62 38) \taddi    r3,r2,-32712\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 82 80 08|08 80 82 e8) \tld      r4,-32760\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 a2 80 10|10 80 a2 e8) \tld      r5,-32752\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 c2 80 18|18 80 c2 e8) \tld      r6,-32744\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 e2 80 38|38 80 e2 38) \taddi    r7,r2,-32712\n+.*:\t(3d 02 00 00|00 00 02 3d) \taddis   r8,r2,0\n+.*:\t(e9 08 80 30|30 80 08 e9) \tld      r8,-32720\\(r8\\)\n+.*:\t(3d 22 00 00|00 00 22 3d) \taddis   r9,r2,0\n+.*:\t(e9 29 80 20|20 80 29 e9) \tld      r9,-32736\\(r9\\)\n+.*:\t(3d 42 00 00|00 00 42 3d) \taddis   r10,r2,0\n+.*:\t(e9 4a 80 28|28 80 4a e9) \tld      r10,-32728\\(r10\\)"
    },
    {
      "sha": "2ae4d0e96a2709e7b215e88440d30eb7cc8589f1",
      "filename": "ld/testsuite/ld-powerpc/abs-pie.r",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-pie.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-pie.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/abs-pie.r?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -0,0 +1,8 @@\n+#source: abs-reloc.s\n+#as: -a64\n+#ld: -melf64ppc -pie --hash-style=sysv --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\n+#readelf: -rW\n+\n+Relocation section '\\.rela\\.dyn' at offset .* contains 1 entry:\n+ +Offset +Info +Type +Symbol's Value +Symbol's Name \\+ Addend\n+0+10438 +0+16 R_PPC64_RELATIVE +10438"
    },
    {
      "sha": "a5898e1dcb198644c664c793dd5fe7c07d7d12f4",
      "filename": "ld/testsuite/ld-powerpc/abs-reloc.s",
      "status": "added",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-reloc.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-reloc.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/abs-reloc.s?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -0,0 +1,49 @@\n+ .globl x\n+ .hidden x\n+\n+ .section .toc,\"aw\"\n+ .p2align 3\n+.Lx:\n+ .quad x\n+.La:\n+ .quad a\n+.Lb:\n+ .quad b\n+.Lc:\n+ .quad c\n+\n+ .data\n+ .p2align 3\n+x:\n+ .quad x\n+ .quad a\n+ .quad b\n+ .quad c\n+\n+ .text\n+ .p2align 2\n+ .globl _start\n+ .type _start,@function\n+_start:\n+0:\n+ addis 2,12,.TOC.-0b@ha\n+ addi 2,2,.TOC.-0b@l\n+ .localentry _start,.-_start\n+ addis 3,2,.Lx@toc@ha\n+ ld 3,.Lx@toc@l(3)\n+ addis 4,2,.La@toc@ha\n+ ld 4,.La@toc@l(4)\n+ addis 5,2,.Lb@toc@ha\n+ ld 5,.Lb@toc@l(5)\n+ addis 6,2,.Lc@toc@ha\n+ ld 6,.Lc@toc@l(6)\n+\n+ addis 7,2,x@got@ha\n+ ld 7,x@got@l(7)\n+ addis 8,2,a@got@ha\n+ ld 8,a@got@l(8)\n+ addis 9,2,b@got@ha\n+ ld 9,b@got@l(9)\n+ addis 10,2,c@got@ha\n+ ld 10,c@got@l(10)\n+ .size _start,.-_start"
    },
    {
      "sha": "1460809bf0b7d06ab89045171e37f968bb825fd8",
      "filename": "ld/testsuite/ld-powerpc/abs-shared-relr.d",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-shared-relr.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-shared-relr.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/abs-shared-relr.d?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -0,0 +1,34 @@\n+#source: abs-reloc.s\n+#as: -a64\n+#ld: -melf64ppc -shared --hash-style=sysv -z pack-relative-relocs --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\n+#objdump: -sdr\n+\n+#...\n+Contents of section \\.got:\n+.* (00000000 00018400|00840100 00000000) 00000000 00000000 .*\n+.* (00000000 00000002|02000000 00000000) 00000000 00000000 .*\n+.* (00000000 00000002|02000000 00000000) 00000000 00000000 .*\n+.* 00000000 00000000 .*\n+Contents of section \\.data:\n+.* (00000000 00010438|38040100 00000000) 00000000 00000000 .*\n+.* (00000000 00000002|02000000 00000000) 00000000 00000000 .*\n+#...\n+.* <_start>:\n+.*:\t(3c 4c 00 02|02 00 4c 3c) \taddis   r2,r12,2\n+.*:\t(38 42 81 b0|b0 81 42 38) \taddi    r2,r2,-32336\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 62 80 38|38 80 62 38) \taddi    r3,r2,-32712\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 82 80 08|08 80 82 e8) \tld      r4,-32760\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 a2 80 10|10 80 a2 e8) \tld      r5,-32752\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 c2 80 18|18 80 c2 e8) \tld      r6,-32744\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 e2 80 38|38 80 e2 38) \taddi    r7,r2,-32712\n+.*:\t(3d 02 00 00|00 00 02 3d) \taddis   r8,r2,0\n+.*:\t(e9 08 80 30|30 80 08 e9) \tld      r8,-32720\\(r8\\)\n+.*:\t(3d 22 00 00|00 00 22 3d) \taddis   r9,r2,0\n+.*:\t(e9 29 80 20|20 80 29 e9) \tld      r9,-32736\\(r9\\)\n+.*:\t(3d 42 00 00|00 00 42 3d) \taddis   r10,r2,0\n+.*:\t(e9 4a 80 28|28 80 4a e9) \tld      r10,-32728\\(r10\\)"
    },
    {
      "sha": "978c43a38e94ce78d62e87f82c27d4ac5d43b726",
      "filename": "ld/testsuite/ld-powerpc/abs-shared-relr.r",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-shared-relr.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-shared-relr.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/abs-shared-relr.r?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -0,0 +1,17 @@\n+#source: abs-reloc.s\n+#as: -a64\n+#ld: -melf64ppc -pie --hash-style=sysv -z pack-relative-relocs --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\n+#readelf: -rW\n+\n+Relocation section '\\.rela\\.dyn' at offset .* contains 6 entries:\n+ +Offset +Info +Type +Symbol's Value +Symbol's Name \\+ Addend\n+0+10408  0+500000026 R_PPC64_ADDR64         0+1 a \\+ 0\n+0+10430  0+500000014 R_PPC64_GLOB_DAT       0+1 a \\+ 0\n+0+10440  0+500000026 R_PPC64_ADDR64         0+1 a \\+ 0\n+0+10418  0+400000026 R_PPC64_ADDR64         123456789abcdef0 c \\+ 0\n+0+10428  0+400000014 R_PPC64_GLOB_DAT       123456789abcdef0 c \\+ 0\n+0+10450  0+400000026 R_PPC64_ADDR64         123456789abcdef0 c \\+ 0\n+\n+Relocation section '\\.relr\\.dyn' at offset .* contains 1 entry:\n+  1 offset\n+0+10438"
    },
    {
      "sha": "b66a4b0b86383daccb7839ae74368efc18d5ff64",
      "filename": "ld/testsuite/ld-powerpc/abs-shared.d",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-shared.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-shared.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/abs-shared.d?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -0,0 +1,34 @@\n+#source: abs-reloc.s\n+#as: -a64\n+#ld: -melf64ppc -shared --hash-style=sysv --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\n+#objdump: -sdr\n+\n+#...\n+Contents of section \\.got:\n+.* (00000000 00018400|00840100 00000000) 00000000 00000000 .*\n+.* (00000000 00000002|02000000 00000000) 00000000 00000000 .*\n+.* (00000000 00000002|02000000 00000000) 00000000 00000000 .*\n+.* 00000000 00000000 .*\n+Contents of section \\.data:\n+.* (00000000 00010438|38040100 00000000) 00000000 00000000 .*\n+.* (00000000 00000002|02000000 00000000) 00000000 00000000 .*\n+#...\n+.* <_start>:\n+.*:\t(3c 4c 00 02|02 00 4c 3c) \taddis   r2,r12,2\n+.*:\t(38 42 81 a0|a0 81 42 38) \taddi    r2,r2,-32352\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 62 80 38|38 80 62 38) \taddi    r3,r2,-32712\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 82 80 08|08 80 82 e8) \tld      r4,-32760\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 a2 80 10|10 80 a2 e8) \tld      r5,-32752\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 c2 80 18|18 80 c2 e8) \tld      r6,-32744\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 e2 80 38|38 80 e2 38) \taddi    r7,r2,-32712\n+.*:\t(3d 02 00 00|00 00 02 3d) \taddis   r8,r2,0\n+.*:\t(e9 08 80 30|30 80 08 e9) \tld      r8,-32720\\(r8\\)\n+.*:\t(3d 22 00 00|00 00 22 3d) \taddis   r9,r2,0\n+.*:\t(e9 29 80 20|20 80 29 e9) \tld      r9,-32736\\(r9\\)\n+.*:\t(3d 42 00 00|00 00 42 3d) \taddis   r10,r2,0\n+.*:\t(e9 4a 80 28|28 80 4a e9) \tld      r10,-32728\\(r10\\)"
    },
    {
      "sha": "70fb78139ba9d1c96b867997e13d089f3377706f",
      "filename": "ld/testsuite/ld-powerpc/abs-shared.r",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-shared.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-shared.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/abs-shared.r?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -0,0 +1,14 @@\n+#source: abs-reloc.s\n+#as: -a64\n+#ld: -melf64ppc -shared --hash-style=sysv --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\n+#readelf: -rW\n+\n+Relocation section '\\.rela\\.dyn' at offset .* contains 7 entries:\n+ +Offset +Info +Type +Symbol's Value +Symbol's Name \\+ Addend\n+0+10438  0+000000016 R_PPC64_RELATIVE +10438\n+0+10408  0+500000026 R_PPC64_ADDR64         0+1 a \\+ 0\n+0+10430  0+500000014 R_PPC64_GLOB_DAT       0+1 a \\+ 0\n+0+10440  0+500000026 R_PPC64_ADDR64         0+1 a \\+ 0\n+0+10418  0+400000026 R_PPC64_ADDR64         123456789abcdef0 c \\+ 0\n+0+10428  0+400000014 R_PPC64_GLOB_DAT       123456789abcdef0 c \\+ 0\n+0+10450  0+400000026 R_PPC64_ADDR64         123456789abcdef0 c \\+ 0"
    },
    {
      "sha": "fafb1a6e944d0c5cb25f7dac738c7dde8256baee",
      "filename": "ld/testsuite/ld-powerpc/abs-static.d",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-static.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-static.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/abs-static.d?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -0,0 +1,32 @@\n+#source: abs-reloc.s\n+#as: -a64\n+#ld: -melf64ppc -static --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\n+#objdump: -sdr\n+\n+#...\n+Contents of section \\.got:\n+.* (00000000 10018100|00810110 00000000) (12345678 9abcdef0|f0debc9a 78563412) .*\n+.* (12345678 9abcdef0|f0debc9a 78563412) .*\n+Contents of section \\.data:\n+.* (00000000 10010118|18010110 00000000) (00000000 00000001|01000000 00000000) .*\n+.* (00000000 00000002|02000000 00000000) (12345678 9abcdef0|f0debc9a 78563412) .*\n+#...\n+.* <_start>:\n+.*:\t(3c 40 10 02|02 10 40 3c) \tlis     r2,4098\n+.*:\t(38 42 81 00|00 81 42 38) \taddi    r2,r2,-32512\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 62 80 18|18 80 62 38) \taddi    r3,r2,-32744\n+.*:\t(3c 82 ef fe|fe ef 82 3c) \taddis   r4,r2,-4098\n+.*:\t(38 84 7f 01|01 7f 84 38) \taddi    r4,r4,32513\n+.*:\t(3c a2 ef fe|fe ef a2 3c) \taddis   r5,r2,-4098\n+.*:\t(38 a5 7f 02|02 7f a5 38) \taddi    r5,r5,32514\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e8 c2 80 08|08 80 c2 e8) \tld      r6,-32760\\(r2\\)\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 e2 80 18|18 80 e2 38) \taddi    r7,r2,-32744\n+.*:\t(3d 02 ef fe|fe ef 02 3d) \taddis   r8,r2,-4098\n+.*:\t(39 08 7f 01|01 7f 08 39) \taddi    r8,r8,32513\n+.*:\t(3d 22 ef fe|fe ef 22 3d) \taddis   r9,r2,-4098\n+.*:\t(39 29 7f 02|02 7f 29 39) \taddi    r9,r9,32514\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(e9 42 80 10|10 80 42 e9) \tld      r10,-32752\\(r2\\)"
    },
    {
      "sha": "4b5886cb0214223bb907b6f8191a4dfcc46efb89",
      "filename": "ld/testsuite/ld-powerpc/abs-static.r",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-static.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/abs-static.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/abs-static.r?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -0,0 +1,6 @@\n+#source: abs-reloc.s\n+#as: -a64\n+#ld: -melf64ppc -static --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\n+#readelf: -rW\n+\n+There are no relocations in this file."
    },
    {
      "sha": "318bf92c85f8e9521123339c46839fa227bf43dc",
      "filename": "ld/testsuite/ld-powerpc/powerpc.exp",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/powerpc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f/ld/testsuite/ld-powerpc/powerpc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/powerpc.exp?ref=3a3a4c1fe4ccb1914d29fbf8f5930d55aacec78f",
      "patch": "@@ -354,6 +354,26 @@ set ppc64elftests {\n     {\"startstop\" \"-shared -melf64ppc --hash-style=sysv --gc-sections -z start-stop-gc\" \"\"\n \t\"-a64 -mpower10\" {startstop.s}\n \t{{objdump -d startstop.d} {readelf {-rW} startstop.r}} \"startstop.so\"}\n+    {\"abs-static\" \"-melf64ppc -static --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\" \"\"\n+\t\"-a64\" {abs-reloc.s}\n+\t{{objdump {-sdr} abs-static.d}\n+\t {readelf {-rW} abs-static.r}} \"abs-static\"}\n+    {\"abs-pie\" \"-melf64ppc -pie --hash-style=sysv --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\" \"\"\n+\t\"-a64\" {abs-reloc.s}\n+\t{{objdump {-sdr} abs-pie.d}\n+\t {readelf {-rW} abs-pie.r}} \"abs-pie\"}\n+    {\"abs-shared\" \"-melf64ppc -shared --hash-style=sysv --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\" \"\"\n+\t\"-a64\" {abs-reloc.s}\n+\t{{objdump {-sdr} abs-shared.d}\n+\t {readelf {-rW} abs-shared.r}} \"abs-shared\"}\n+    {\"abs-pie-relr\" \"-melf64ppc -pie --hash-style=sysv -z pack-relative-relocs --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\" \"\"\n+\t\"-a64\" {abs-reloc.s}\n+\t{{objdump {-sdr} abs-pie-relr.d}\n+\t {readelf {-rW} abs-pie-relr.r}} \"abs-pie-relr\"}\n+    {\"abs-shared-relr\" \"-melf64ppc -shared --hash-style=sysv -z pack-relative-relocs --defsym a=1 --defsym 'HIDDEN(b=2)' --defsym c=0x123456789abcdef0\" \"\"\n+\t\"-a64\" {abs-reloc.s}\n+\t{{objdump {-sdr} abs-shared-relr.d}\n+\t {readelf {-rW} abs-shared-relr.r}} \"abs-shared-relr\"}\n }\n \n set ppceabitests {"
    }
  ]
}