{
  "sha": "219f56b4842f4e72540082af96e47efa0f0f0a82",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjE5ZjU2YjQ4NDJmNGU3MjU0MDA4MmFmOTZlNDdlZmEwZjBmMGE4Mg==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-02-11T20:16:40Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-03-19T19:35:20Z"
    },
    "message": "Fix any_thread_of_inferior\n\nRunning gdb-term.exp against gdbserver with \"maint set target-non-stop\non\", runs into this:\n\n  [infrun] fetch_inferior_event: exit\n  [infrun] fetch_inferior_event: enter\n  /home/pedro/gdb/binutils-gdb/src/gdb/thread.c:72: internal-error: thread_info* inferior_thread(): Assertion `current_thread_ != nullptr' failed.\n  A problem internal to GDB has been detected,\n  further debugging may prove unreliable.\n\n  This is a bug, please report it.  For instructions, see:\n  <https://www.gnu.org/software/gdb/bugs/>.\n\n  FAIL: gdb.base/gdb-sigterm.exp: expect eof #2 (GDB internal error)\n  Resyncing due to internal error.\n  ERROR: : spawn id exp9 not open\n      while executing\n  \"expect {\n  -i exp9 -timeout 10\n\t      -re \"Quit this debugging session\\\\? \\\\(y or n\\\\) $\" {\n\t\t  send_gdb \"n\\n\" answer\n\t\t  incr count\n\t      }\n\t      -re \"Create ...\"\n      (\"uplevel\" body line 1)\n      invoked from within\n  \"uplevel $body\" NONE : spawn id exp9 not open\n  ERROR: Could not resync from internal error (timeout)\n  gdb.base/gdb-sigterm.exp: expect eof #2: stepped 0 times\n  UNRESOLVED: gdb.base/gdb-sigterm.exp: 50 SIGTERM passes\n\nThe assertion fails here:\n\n  ...\n  #5  0x000055af4b4a7164 in internal_error (file=0x55af4b5e5de8 \"/home/pedro/gdb/binutils-gdb/src/gdb/thread.c\", line=72, fmt=0x55af4b5e5ce9 \"%s: Assertion `%s' failed.\") at /home/pedro/gdb/binutils-gdb/src/gdbsupport/errors.cc:55\n  #6  0x000055af4b25fc43 in inferior_thread () at /home/pedro/gdb/binutils-gdb/src/gdb/thread.c:72\n  #7  0x000055af4b26177e in any_thread_of_inferior (inf=0x55af4cf874f0) at /home/pedro/gdb/binutils-gdb/src/gdb/thread.c:638\n  #8  0x000055af4b26eec8 in kill_or_detach (inf=0x55af4cf874f0, from_tty=0) at /home/pedro/gdb/binutils-gdb/src/gdb/top.c:1665\n  #9  0x000055af4b26f37f in quit_force (exit_arg=0x0, from_tty=0) at /home/pedro/gdb/binutils-gdb/src/gdb/top.c:1767\n  #10 0x000055af4b2f72a7 in quit () at /home/pedro/gdb/binutils-gdb/src/gdb/utils.c:633\n  #11 0x000055af4b2f730b in maybe_quit () at /home/pedro/gdb/binutils-gdb/src/gdb/utils.c:657\n  #12 0x000055af4b1adb74 in ser_base_wait_for (scb=0x55af4d02e460, timeout=0) at /home/pedro/gdb/binutils-gdb/src/gdb/ser-base.c:236\n  #13 0x000055af4b1adf0f in do_ser_base_readchar (scb=0x55af4d02e460, timeout=0) at /home/pedro/gdb/binutils-gdb/src/gdb/ser-base.c:365\n  #14 0x000055af4b1ae06d in generic_readchar (scb=0x55af4d02e460, timeout=0, do_readchar=0x55af4b1adeb1 <do_ser_base_readchar(serial*, int)>) at /home/pedro/gdb/binutils-gdb/src/gdb/ser-base.c:444\n  ...\n\nThe bug is that any_thread_of_inferior incorrectly assumes that\nthere's always a selected thread.  This fixes it.\n\ngdb/ChangeLog:\n\n\t* thread.c (any_thread_of_inferior): Check if there's a selected\n\tthread before calling inferior_thread().\n\nChange-Id: Ica4b9ec746121a7a7c22bef09baea72103b3853d",
    "tree": {
      "sha": "9f8266cf7ddd26498710af2c701573660bf2db2a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9f8266cf7ddd26498710af2c701573660bf2db2a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/219f56b4842f4e72540082af96e47efa0f0f0a82",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/219f56b4842f4e72540082af96e47efa0f0f0a82",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/219f56b4842f4e72540082af96e47efa0f0f0a82",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/219f56b4842f4e72540082af96e47efa0f0f0a82/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7b9f985957798ba4dacc454f22c9e426c6897cb8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7b9f985957798ba4dacc454f22c9e426c6897cb8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7b9f985957798ba4dacc454f22c9e426c6897cb8"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 7,
    "deletions": 2
  },
  "files": [
    {
      "sha": "0451a07811e83468e4f34412078e81489baf663a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/219f56b4842f4e72540082af96e47efa0f0f0a82/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/219f56b4842f4e72540082af96e47efa0f0f0a82/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=219f56b4842f4e72540082af96e47efa0f0f0a82",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-19  Pedro Alves  <pedro@palves.net>\n+\n+\t* thread.c (any_thread_of_inferior): Check if there's a selected\n+\tthread before calling inferior_thread().\n+\n 2021-03-18  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2/stringify.c (dwarf_unit_type_name): New function.  Use"
    },
    {
      "sha": "fc6db96fbcb80525d7b94a370192bf76b96b856b",
      "filename": "gdb/thread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/219f56b4842f4e72540082af96e47efa0f0f0a82/gdb/thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/219f56b4842f4e72540082af96e47efa0f0f0a82/gdb/thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread.c?ref=219f56b4842f4e72540082af96e47efa0f0f0a82",
      "patch": "@@ -637,8 +637,8 @@ any_thread_of_inferior (inferior *inf)\n {\n   gdb_assert (inf->pid != 0);\n \n-  /* Prefer the current thread.  */\n-  if (inf == current_inferior ())\n+  /* Prefer the current thread, if there's one.  */\n+  if (inf == current_inferior () && inferior_ptid != null_ptid)\n     return inferior_thread ();\n \n   for (thread_info *tp : inf->non_exited_threads ())"
    }
  ]
}