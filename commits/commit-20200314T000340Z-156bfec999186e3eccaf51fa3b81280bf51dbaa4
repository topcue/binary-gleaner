{
  "sha": "156bfec999186e3eccaf51fa3b81280bf51dbaa4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTU2YmZlYzk5OTE4NmUzZWNjYWY1MWZhM2I4MTI4MGJmNTFkYmFhNA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-13T23:39:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-14T00:03:40Z"
    },
    "message": "Introduce generic_value_print\n\nThis introduces generic_value_print, which is a value-based analogue\nto generic_val_print.  For now this is unused and simply calls\ngeneric_val_print, but subsequent patches will both change this\nfunction to work using the value API directly, and convert callers of\ngeneric_val_print to call this instead.\n\ngdb/ChangeLog\n2020-03-13  Tom Tromey  <tom@tromey.com>\n\n\t* valprint.h (generic_value_print): Declare.\n\t* valprint.c (generic_value_print): New function.",
    "tree": {
      "sha": "7d4c7f55d544de65d149b3285d7b121329a9e26b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7d4c7f55d544de65d149b3285d7b121329a9e26b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/156bfec999186e3eccaf51fa3b81280bf51dbaa4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/156bfec999186e3eccaf51fa3b81280bf51dbaa4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/156bfec999186e3eccaf51fa3b81280bf51dbaa4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/156bfec999186e3eccaf51fa3b81280bf51dbaa4/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2b4e573d62be3a59057895054b1b5faa67557ce6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2b4e573d62be3a59057895054b1b5faa67557ce6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2b4e573d62be3a59057895054b1b5faa67557ce6"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 28,
    "deletions": 0
  },
  "files": [
    {
      "sha": "48572cb4d2a8e1c0e537969db2542be2d07810f2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/156bfec999186e3eccaf51fa3b81280bf51dbaa4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/156bfec999186e3eccaf51fa3b81280bf51dbaa4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=156bfec999186e3eccaf51fa3b81280bf51dbaa4",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* valprint.h (generic_value_print): Declare.\n+\t* valprint.c (generic_value_print): New function.\n+\n 2020-03-13  Tom Tromey  <tom@tromey.com>\n \n \t* valprint.c (do_val_print): Call la_value_print_inner, if"
    },
    {
      "sha": "7b0365a3ba8321aaae52f378885854a165b904f4",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/156bfec999186e3eccaf51fa3b81280bf51dbaa4/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/156bfec999186e3eccaf51fa3b81280bf51dbaa4/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=156bfec999186e3eccaf51fa3b81280bf51dbaa4",
      "patch": "@@ -1033,6 +1033,18 @@ generic_val_print (struct type *type,\n     }\n }\n \n+/* See valprint.h.  */\n+\n+void\n+generic_value_print (struct value *val, struct ui_file *stream, int recurse,\n+\t\t     const struct value_print_options *options,\n+\t\t     const struct generic_val_print_decorations *decorations)\n+{\n+  generic_val_print (value_type (val), value_embedded_offset (val),\n+\t\t     value_address (val), stream, recurse, val, options,\n+\t\t     decorations);\n+}\n+\n /* Helper function for val_print and common_val_print that does the\n    work.  Arguments are as to val_print, but FULL_VALUE, if given, is\n    the value to be printed.  */"
    },
    {
      "sha": "1aca29463f44687af62c556446add9c849935e7a",
      "filename": "gdb/valprint.h",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/156bfec999186e3eccaf51fa3b81280bf51dbaa4/gdb/valprint.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/156bfec999186e3eccaf51fa3b81280bf51dbaa4/gdb/valprint.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.h?ref=156bfec999186e3eccaf51fa3b81280bf51dbaa4",
      "patch": "@@ -211,6 +211,17 @@ extern void generic_val_print (struct type *type,\n \t\t\t       const struct value_print_options *options,\n \t\t\t       const struct generic_val_print_decorations *);\n \n+/* Print a value in a generic way.  VAL is the value, STREAM is where\n+   to print it, RECURSE is the recursion depth, OPTIONS describe how\n+   the printing should be done, and D is the language-specific\n+   decorations object.  Note that structs and unions cannot be printed\n+   by this function.  */\n+\n+extern void generic_value_print (struct value *val, struct ui_file *stream,\n+\t\t\t\t int recurse,\n+\t\t\t\t const struct value_print_options *options,\n+\t\t\t\t const struct generic_val_print_decorations *d);\n+\n extern void generic_emit_char (int c, struct type *type, struct ui_file *stream,\n \t\t\t       int quoter, const char *encoding);\n "
    }
  ]
}