{
  "sha": "966484941738b7a474fb7e4fe29eb5693fc9096c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTY2NDg0OTQxNzM4YjdhNDc0ZmI3ZTRmZTI5ZWI1NjkzZmM5MDk2Yw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-11-20T17:23:03Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-12-11T22:04:28Z"
    },
    "message": "gdbsupport: make use of safe-ctype functions from libiberty\n\nMake use of the safe-ctype replacements for the standard ctype\ncharacter checking functions in gdbsupport/common-utils.cc.  The\ngdbsupport library is included into both gdb and gdbserver, and on the\ngdbserver side there are two targets, gdbserver itself, and also\nlibinproctrace.so.\n\nlibiberty was already being included in the gdbserver link command,\nbut was missing from the libinproctrace.so link.  As a result, after\nchanging gdbsupport/common-utils.cc to depend on libiberty,\nlibinproctrace.so would no longer link until I modified its link line.\n\ngdbserver/ChangeLog:\n\n\t* Makefile.in (IPA_LIB): Include libiberty library.\n\ngdbsupport/ChangeLog:\n\n\t* gdbsupport/common-utils.cc: Change 'ctype.h' include to\n\t'safe-ctype.h'.\n\t(extract_string_maybe_quoted): Use safe-ctype function versions.\n\t(is_digit_in_base): Likewise.\n\t(digit_to_int): Likewise.\n\t(strtoulst): Likewise.\n\t(skip_spaces): Likewise.\n\t(skip_to_space): Likewise.",
    "tree": {
      "sha": "122e6dd4b2f7f7fe516f85ffc5db8aa54948494f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/122e6dd4b2f7f7fe516f85ffc5db8aa54948494f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/966484941738b7a474fb7e4fe29eb5693fc9096c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/966484941738b7a474fb7e4fe29eb5693fc9096c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/966484941738b7a474fb7e4fe29eb5693fc9096c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/966484941738b7a474fb7e4fe29eb5693fc9096c/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "94ba44a68dccb5fa2a0a40a52efebdd1faeae43d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/94ba44a68dccb5fa2a0a40a52efebdd1faeae43d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/94ba44a68dccb5fa2a0a40a52efebdd1faeae43d"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 27,
    "deletions": 12
  },
  "files": [
    {
      "sha": "9756d4cadaa8bc0638f884b1253524cf61b030ff",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/966484941738b7a474fb7e4fe29eb5693fc9096c/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/966484941738b7a474fb7e4fe29eb5693fc9096c/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=966484941738b7a474fb7e4fe29eb5693fc9096c",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* Makefile.in (IPA_LIB): Include libiberty library.\n+\n 2020-11-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* server.cc (gdbserver_usage): Add missing option to usage text."
    },
    {
      "sha": "e12848c1ce23962f40c1aae8a271ccc311777733",
      "filename": "gdbserver/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/966484941738b7a474fb7e4fe29eb5693fc9096c/gdbserver/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/966484941738b7a474fb7e4fe29eb5693fc9096c/gdbserver/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/Makefile.in?ref=966484941738b7a474fb7e4fe29eb5693fc9096c",
      "patch": "@@ -395,7 +395,7 @@ $(IPA_LIB): $(sort $(IPA_OBJS)) ${CDEPS}\n \t$(ECHO_CXXLD) $(CC_LD) -shared -fPIC -Wl,--soname=$(IPA_LIB) \\\n \t\t-Wl,--no-undefined $(INTERNAL_CFLAGS) $(INTERNAL_LDFLAGS) \\\n \t\t $(CXXFLAGS) \\\n-\t\t-o $(IPA_LIB) ${IPA_OBJS} -ldl -pthread\n+\t\t-o $(IPA_LIB) ${IPA_OBJS} $(LIBIBERTY) -ldl -pthread\n \n # Put the proper machine-specific files first, so M-. on a machine\n # specific routine gets the one for the correct machine."
    },
    {
      "sha": "cc21b0b50f056bce9749acf31592e4d33c67996c",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/966484941738b7a474fb7e4fe29eb5693fc9096c/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/966484941738b7a474fb7e4fe29eb5693fc9096c/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=966484941738b7a474fb7e4fe29eb5693fc9096c",
      "patch": "@@ -1,3 +1,14 @@\n+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdbsupport/common-utils.cc: Change 'ctype.h' include to\n+\t'safe-ctype.h'.\n+\t(extract_string_maybe_quoted): Use safe-ctype function versions.\n+\t(is_digit_in_base): Likewise.\n+\t(digit_to_int): Likewise.\n+\t(strtoulst): Likewise.\n+\t(skip_spaces): Likewise.\n+\t(skip_to_space): Likewise.\n+\n 2020-12-11  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* common-debug.h (debug_prefixed_printf_cond): New."
    },
    {
      "sha": "4f5c26d075cc20da3fc0dd8e7d55fbb5e956998b",
      "filename": "gdbsupport/common-utils.cc",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/966484941738b7a474fb7e4fe29eb5693fc9096c/gdbsupport/common-utils.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/966484941738b7a474fb7e4fe29eb5693fc9096c/gdbsupport/common-utils.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/common-utils.cc?ref=966484941738b7a474fb7e4fe29eb5693fc9096c",
      "patch": "@@ -20,7 +20,7 @@\n #include \"common-defs.h\"\n #include \"common-utils.h\"\n #include \"host-defs.h\"\n-#include <ctype.h>\n+#include \"safe-ctype.h\"\n \n void *\n xzalloc (size_t size)\n@@ -177,7 +177,7 @@ extract_string_maybe_quoted (const char **arg)\n   /* Parse p similarly to gdb_argv buildargv function.  */\n   while (*p != '\\0')\n     {\n-      if (isspace (*p) && !squote && !dquote && !bsquote)\n+      if (ISSPACE (*p) && !squote && !dquote && !bsquote)\n \tbreak;\n       else\n \t{\n@@ -230,21 +230,21 @@ extract_string_maybe_quoted (const char **arg)\n static int\n is_digit_in_base (unsigned char digit, int base)\n {\n-  if (!isalnum (digit))\n+  if (!ISALNUM (digit))\n     return 0;\n   if (base <= 10)\n-    return (isdigit (digit) && digit < base + '0');\n+    return (ISDIGIT (digit) && digit < base + '0');\n   else\n-    return (isdigit (digit) || tolower (digit) < base - 10 + 'a');\n+    return (ISDIGIT (digit) || TOLOWER (digit) < base - 10 + 'a');\n }\n \n static int\n digit_to_int (unsigned char c)\n {\n-  if (isdigit (c))\n+  if (ISDIGIT (c))\n     return c - '0';\n   else\n-    return tolower (c) - 'a' + 10;\n+    return TOLOWER (c) - 'a' + 10;\n }\n \n /* As for strtoul, but for ULONGEST results.  */\n@@ -258,7 +258,7 @@ strtoulst (const char *num, const char **trailer, int base)\n   int i = 0;\n \n   /* Skip leading whitespace.  */\n-  while (isspace (num[i]))\n+  while (ISSPACE (num[i]))\n     i++;\n \n   /* Handle prefixes.  */\n@@ -325,7 +325,7 @@ skip_spaces (char *chp)\n {\n   if (chp == NULL)\n     return NULL;\n-  while (*chp && isspace (*chp))\n+  while (*chp && ISSPACE (*chp))\n     chp++;\n   return chp;\n }\n@@ -337,7 +337,7 @@ skip_spaces (const char *chp)\n {\n   if (chp == NULL)\n     return NULL;\n-  while (*chp && isspace (*chp))\n+  while (*chp && ISSPACE (*chp))\n     chp++;\n   return chp;\n }\n@@ -349,7 +349,7 @@ skip_to_space (const char *chp)\n {\n   if (chp == NULL)\n     return NULL;\n-  while (*chp && !isspace (*chp))\n+  while (*chp && !ISSPACE (*chp))\n     chp++;\n   return chp;\n }"
    }
  ]
}