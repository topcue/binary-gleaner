{
  "sha": "945ff6e213d206c79386f225626e887abad0e22d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTQ1ZmY2ZTIxM2QyMDZjNzkzODZmMjI1NjI2ZTg4N2FiYWQwZTIyZA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-09-16T16:04:37Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-09-16T16:04:37Z"
    },
    "message": "[gdb/testsuite] Fix gdb.dlang/watch-loc.exp on ppc64\n\nOn ppc64, we run into:\n...\n/tmp/ccKXURmw.s: Assembler messages:^M\n/tmp/ccKXURmw.s:99: Error: can't resolve \\\n  `_Dmain_end' {.text section} - `_Dmain' {.opd section}^M\ncompiler exited with status 1\n...\n\nThe unresolvable entity comes from the .debug_aranges section hardcoded in\nwatch-loc.c:\n...\n\"      .4byte  _Dmain \\n\"      // Address\n\"      .4byte  _Dmain_end - _Dmain \\n\" // Length\n...\nwhere _Dmain is the function label for function _Dmain, and _Dmain_end is a\nlabel after function _Dmain:\n...\nint _Dmain (void)\n{\n  asm (\"_Dmain_label: .globl _Dmain_label\");\n  return 0;\n}\n\nasm (\"_Dmain_end: .globl _Dmain_end\");\n...\n\nThe problem is that the two labels are not in the same section, because _Dmain\nends up in the .opd section, which \"contains the official procedure\ndescriptors.  A pointer to a function shall reference a procedure descriptor in\nthis section.\"\n\nFix this by using function_range instead to get the length.\n\nAlso, fix the address part to not use _Dmain, but instead use the function\nstart as returned by function_range.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-09-16  Tom de Vries  <tdevries@suse.de>\n\n\tPR testsuite/26617\n\t* gdb.dlang/watch-loc.c: Only add .debug_aranges if\n        WITH_DEBUG_SECTIONS is defined.\n\t(xstr, str): New macro.\n\t(.debug_aranges): Use DMAIN_START_0/1/2 and DMAIN_LENGTH\n\tto get start and size of _Dmain.\n\t* gdb.dlang/watch-loc.exp: Pass DMAIN_START_0/1/2 and DMAIN_LENGTH\n\tusing additional_flags.",
    "tree": {
      "sha": "316629ffa470d87ca22fbb5c0c6b3e1603228ca3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/316629ffa470d87ca22fbb5c0c6b3e1603228ca3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/945ff6e213d206c79386f225626e887abad0e22d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/945ff6e213d206c79386f225626e887abad0e22d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/945ff6e213d206c79386f225626e887abad0e22d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/945ff6e213d206c79386f225626e887abad0e22d/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "be7628ca507fe36b49c5a82b39db68b98c2ba1b4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be7628ca507fe36b49c5a82b39db68b98c2ba1b4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/be7628ca507fe36b49c5a82b39db68b98c2ba1b4"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 33,
    "deletions": 3
  },
  "files": [
    {
      "sha": "0a29d7f6791808467591158dd965498da67d6330",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/945ff6e213d206c79386f225626e887abad0e22d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/945ff6e213d206c79386f225626e887abad0e22d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=945ff6e213d206c79386f225626e887abad0e22d",
      "patch": "@@ -1,3 +1,14 @@\n+2020-09-16  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR testsuite/26617\n+\t* gdb.dlang/watch-loc.c: Only add .debug_aranges if\n+        WITH_DEBUG_SECTIONS is defined.\n+\t(xstr, str): New macro.\n+\t(.debug_aranges): Use DMAIN_START_0/1/2 and DMAIN_LENGTH\n+\tto get start and size of _Dmain.\n+\t* gdb.dlang/watch-loc.exp: Pass DMAIN_START_0/1/2 and DMAIN_LENGTH\n+\tusing additional_flags.\n+\n 2020-09-16  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* gdb.base/bp-cmds-sourced-script.c: New file."
    },
    {
      "sha": "0a58f27d9fab3c13a740bd3ef45a4edbd2ec78c9",
      "filename": "gdb/testsuite/gdb.dlang/watch-loc.c",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/945ff6e213d206c79386f225626e887abad0e22d/gdb/testsuite/gdb.dlang/watch-loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/945ff6e213d206c79386f225626e887abad0e22d/gdb/testsuite/gdb.dlang/watch-loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dlang/watch-loc.c?ref=945ff6e213d206c79386f225626e887abad0e22d",
      "patch": "@@ -36,6 +36,9 @@ main (void)\n   return _Dmain ();\n }\n \n+#ifdef WITH_DEBUG_SECTIONS\n+#define xstr(s) str(s)\n+#define str(s) #s\n /* The .debug_names-based index support depends on .debug_aranges\n    generated by GCC.  (.gdb_index includes a gdb-generated map\n    instead.)  */\n@@ -52,10 +55,11 @@ asm (\n \"\t.byte\t0 \\n\"\t// Size of Segment Descriptor\n \"\t.2byte\t0 \\n\"\t// Pad to 16 byte boundary\n \"\t.2byte\t0 \\n\"\n-\"\t.4byte\t_Dmain \\n\"\t// Address\n-\"\t.4byte\t_Dmain_end - _Dmain \\n\"\t// Length\n+\"\t.4byte\t\" xstr(DMAIN_START_0) xstr(DMAIN_START_1) xstr(DMAIN_START_2) \"\\n\"\t\t// Address\n+\"\t.4byte\t\" xstr(DMAIN_LENGTH) \"\\n\"\t// Length\n \"\t.4byte\t0 \\n\"\n \"\t.4byte\t0 \\n\"\n \".Laranges_end: \\n\"\n \"\t.popsection \\n\"\n );\n+#endif"
    },
    {
      "sha": "dcd93789ce49f00edf13efd9e1c5bbd93085e4f5",
      "filename": "gdb/testsuite/gdb.dlang/watch-loc.exp",
      "status": "modified",
      "additions": 16,
      "deletions": 1,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/945ff6e213d206c79386f225626e887abad0e22d/gdb/testsuite/gdb.dlang/watch-loc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/945ff6e213d206c79386f225626e887abad0e22d/gdb/testsuite/gdb.dlang/watch-loc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dlang/watch-loc.exp?ref=945ff6e213d206c79386f225626e887abad0e22d",
      "patch": "@@ -27,6 +27,10 @@ if {![dwarf2_support]} {\n \n standard_testfile watch-loc.c watch-loc-dw.S\n \n+lassign [function_range _Dmain ${srcdir}/${subdir}/${srcfile}] \\\n+    dmain_start dmain_length\n+\n+\n # Make some DWARF for the test.\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n@@ -62,8 +66,19 @@ Dwarf::assemble $asm_file {\n     }\n }\n \n+set dmain_start_list [split $dmain_start]\n+set dmain_start_0 [lindex $dmain_start_list 0]\n+set dmain_start_1 [lindex $dmain_start_list 1]\n+set dmain_start_2 [lindex $dmain_start_list 2]\n+\n if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n-          [list $srcfile $asm_file] {nodebug}] } {\n+          [list $srcfile $asm_file] \\\n+\t  \"nodebug \\\n+\t       additional_flags=-DWITH_DEBUG_SECTIONS \\\n+\t       additional_flags=-DDMAIN_START_0=$dmain_start_0 \\\n+\t       additional_flags=-DDMAIN_START_1=$dmain_start_1 \\\n+\t       additional_flags=-DDMAIN_START_2=$dmain_start_2 \\\n+\t       additional_flags=-DDMAIN_LENGTH=$dmain_length\"] } {\n     return -1\n }\n "
    }
  ]
}