{
  "sha": "9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWZjMGI1MDFhZjc4YmM0YTkyZjUzZWM3MTJlMWFhYTEyM2UwMjI0Yw==",
  "commit": {
    "author": {
      "name": "Sergey Belyashov",
      "email": "sergey.belyashov@gmail.com",
      "date": "2020-02-07T14:53:46Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-02-07T14:53:46Z"
    },
    "message": "Add support for the GBZ80 and Z80N variants of the Z80 architecture, and add DWARF debug info support to the Z80 assembler.\n\n\tPR 25469\nbfd\t* archures.c: Add GBZ80 and Z80N machine values.\n\t* reloc.c: Add BFD_RELOC_Z80_16_BE.\n\t* coff-z80.c: Add support for new reloc.\n\t* coffcode.h: Add support for new machine values.\n\t* cpu-z80.c: Add support for new machine names.\n\t* elf32-z80.c: Add support for new reloc.\n\t* bfd-in2.h: Regenerate.\n\t* libbfd.h: Regenerate.\n\nbinutils* readelf.c (get_machine_flags): Add support for Z80N machine\n\tnumber.\n\ngas\t* config/tc-z80.c: Add -gbz80 command line option to generate code\n\tfor the GameBoy Z80.  Add support for generating DWARF.\n\t* config/tc-z80.h: Add support for DWARF debug information\n\tgeneration.\n\t* doc/c-z80.texi: Document new command line option.\n\t* testsuite/gas/z80/gbz80_all.d: New file.\n\t* testsuite/gas/z80/gbz80_all.s: New file.\n\t* testsuite/gas/z80/z80.exp: Run the new tests.\n\t* testsuite/gas/z80/z80n_all.d: New file.\n\t* testsuite/gas/z80/z80n_all.s: New file.\n\t* testsuite/gas/z80/z80n_reloc.d: New file.\n\ninclude\t* coff/internal.h (R_IMM16BE): Define.\n\t* elf/z80.h (EF_Z80_MACH_Z80N): Define.\n\t(R_Z80_16_BE): New reloc.\n\nld\t* emulparams/elf32z80.sh: Use z80 emulation.\n\t* emultempl/z80.em: Make generic to both COFF and ELF Z80 emulations.\n\t* emultempl/z80elf.em: Delete.\n\t* testsuite/ld-elf/pr22450.d: Expect to fail for the Z80.\n\t* testsuite/ld-elf/sec64k.exp: Fix Z80 assembly.\n\t* testsuite/ld-unique/pr21529.s: Avoid register name conflict.\n\t* testsuite/ld-unique/unique.s: Likewise.\n\t* testsuite/ld-unique/unique_empty.s: Likewise.\n\t* testsuite/ld-unique/unique_shared.s: Likewise.\n\t* testsuite/ld-unique/unique.d: Updated expected output.\n\t* testsuite/ld-z80/arch_z80n.d: New file.\n\t* testsuite/ld-z80/comb_arch_z80_z80n.d: New file.\n\t* testsuite/ld-z80/labels.s: Add more labels.\n\t* testsuite/ld-z80/relocs.s: Add more reloc tests.\n\t* testsuite/ld-z80/relocs_f_z80n.d: New file\n\nopcodes\t* z80-dis.c: Add support for GBZ80 opcodes.",
    "tree": {
      "sha": "f3ef7a39227828252a1878f1a526b3df19ec7c65",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f3ef7a39227828252a1878f1a526b3df19ec7c65"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/comments",
  "author": {
    "login": "b-s-a",
    "id": 2833802,
    "node_id": "MDQ6VXNlcjI4MzM4MDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2833802?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/b-s-a",
    "html_url": "https://github.com/b-s-a",
    "followers_url": "https://api.github.com/users/b-s-a/followers",
    "following_url": "https://api.github.com/users/b-s-a/following{/other_user}",
    "gists_url": "https://api.github.com/users/b-s-a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/b-s-a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/b-s-a/subscriptions",
    "organizations_url": "https://api.github.com/users/b-s-a/orgs",
    "repos_url": "https://api.github.com/users/b-s-a/repos",
    "events_url": "https://api.github.com/users/b-s-a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/b-s-a/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "adb8754e48d53b219ddaa9e8368e4b1acb9db53a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/adb8754e48d53b219ddaa9e8368e4b1acb9db53a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/adb8754e48d53b219ddaa9e8368e4b1acb9db53a"
    }
  ],
  "stats": {
    "total": 5324,
    "additions": 4860,
    "deletions": 464
  },
  "files": [
    {
      "sha": "96d8fe174a66073793ef6022123a22e32b97276a",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -1,3 +1,15 @@\n+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25469\n+\t* archures.c: Add GBZ80 and Z80N machine values.\n+\t* reloc.c: Add BFD_RELOC_Z80_16_BE.\n+\t* coff-z80.c: Add support for new reloc.\n+\t* coffcode.h: Add support for new machine values.\n+\t* cpu-z80.c: Add support for new machine names.\n+\t* elf32-z80.c: Add support for new reloc.\n+\t* bfd-in2.h: Regenerate.\n+\t* libbfd.h: Regenerate.\n+\n 2020-02-07  Nick Clifton  <nickc@redhat.com>\n \n \tPR 23932"
    },
    {
      "sha": "5789ea2afa5be0a126f6dba3078661b7561e9bf1",
      "filename": "bfd/archures.c",
      "status": "modified",
      "additions": 9,
      "deletions": 8,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/archures.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/archures.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/archures.c?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -504,14 +504,15 @@ DESCRIPTION\n .  bfd_arch_xtensa,    {* Tensilica's Xtensa cores.  *}\n .#define bfd_mach_xtensa\t1\n .  bfd_arch_z80,\n-.#define bfd_mach_gbz80         0 {* GameBoy Z80 (reduced instruction set) *}\n-.#define bfd_mach_z80strict\t1 {* Z80 without undocumented opcodes.  *}\n-.#define bfd_mach_z180          2 {* Z180: successor with additional instructions, but without halves of ix and iy *}\n-.#define bfd_mach_z80\t\t3 {* Z80 with ixl, ixh, iyl, and iyh.  *}\n-.#define bfd_mach_ez80_z80      4 {* eZ80 (successor of Z80 & Z180) in Z80 (16-bit address) mode *}\n-.#define bfd_mach_ez80_adl      5 {* eZ80 (successor of Z80 & Z180) in ADL (24-bit address) mode *}\n-.#define bfd_mach_z80full\t7 {* Z80 with all undocumented instructions.  *}\n-.#define bfd_mach_r800\t\t11 {* R800: successor with multiplication.  *}\n+.#define bfd_mach_z80strict\t1 {* Zilog Z80 without undocumented opcodes.  *}\n+.#define bfd_mach_z180\t\t2 {* Zilog Z180: successor with additional instructions, but without halves of ix and iy *}\n+.#define bfd_mach_z80\t\t3 {* Zilog Z80 with ixl, ixh, iyl, and iyh.  *}\n+.#define bfd_mach_ez80_z80\t4 {* Zilog eZ80 (successor of Z80 & Z180) in Z80 (16-bit address) mode *}\n+.#define bfd_mach_ez80_adl\t5 {* Zilog eZ80 (successor of Z80 & Z180) in ADL (24-bit address) mode *}\n+.#define bfd_mach_z80n\t\t6 {* Z80N *}\n+.#define bfd_mach_z80full\t7 {* Zilog Z80 with all undocumented instructions.  *}\n+.#define bfd_mach_gbz80\t\t8 {* GameBoy Z80 (reduced instruction set) *}\n+.#define bfd_mach_r800\t\t11 {* Ascii R800: successor with multiplication.  *}\n .  bfd_arch_lm32,      {* Lattice Mico32.  *}\n .#define bfd_mach_lm32\t\t1\n .  bfd_arch_microblaze,{* Xilinx MicroBlaze.  *}"
    },
    {
      "sha": "180383be15b9c0a84a68adf95b60c3dd7d6acc03",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 12,
      "deletions": 8,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -1897,14 +1897,15 @@ enum bfd_architecture\n   bfd_arch_xtensa,    /* Tensilica's Xtensa cores.  */\n #define bfd_mach_xtensa        1\n   bfd_arch_z80,\n-#define bfd_mach_gbz80         0 /* GameBoy Z80 (reduced instruction set) */\n-#define bfd_mach_z80strict     1 /* Z80 without undocumented opcodes.  */\n-#define bfd_mach_z180          2 /* Z180: successor with additional instructions, but without halves of ix and iy */\n-#define bfd_mach_z80           3 /* Z80 with ixl, ixh, iyl, and iyh.  */\n-#define bfd_mach_ez80_z80      4 /* eZ80 (successor of Z80 & Z180) in Z80 (16-bit address) mode */\n-#define bfd_mach_ez80_adl      5 /* eZ80 (successor of Z80 & Z180) in ADL (24-bit address) mode */\n-#define bfd_mach_z80full       7 /* Z80 with all undocumented instructions.  */\n-#define bfd_mach_r800          11 /* R800: successor with multiplication.  */\n+#define bfd_mach_z80strict     1 /* Zilog Z80 without undocumented opcodes.  */\n+#define bfd_mach_z180          2 /* Zilog Z180: successor with additional instructions, but without halves of ix and iy */\n+#define bfd_mach_z80           3 /* Zilog Z80 with ixl, ixh, iyl, and iyh.  */\n+#define bfd_mach_ez80_z80      4 /* Zilog eZ80 (successor of Z80 & Z180) in Z80 (16-bit address) mode */\n+#define bfd_mach_ez80_adl      5 /* Zilog eZ80 (successor of Z80 & Z180) in ADL (24-bit address) mode */\n+#define bfd_mach_z80n          6 /* Z80N */\n+#define bfd_mach_z80full       7 /* Zilog Z80 with all undocumented instructions.  */\n+#define bfd_mach_gbz80         8 /* GameBoy Z80 (reduced instruction set) */\n+#define bfd_mach_r800          11 /*Ascii R800: Z80 successor with multiplication.  */\n   bfd_arch_lm32,      /* Lattice Mico32.  */\n #define bfd_mach_lm32          1\n   bfd_arch_microblaze,/* Xilinx MicroBlaze.  */\n@@ -5301,6 +5302,9 @@ BFD_RELOC_XTENSA_ASM_EXPAND.  */\n /* Highest 16 bits of multibyte (32 or 24 bit) value.  */\n   BFD_RELOC_Z80_WORD1,\n \n+/* 16 bit word big endian */\n+  BFD_RELOC_Z80_16_BE,\n+\n /* DJNZ offset.  */\n   BFD_RELOC_Z8K_DISP7,\n "
    },
    {
      "sha": "8913fb5bf956fa6cc353318eeaa710b35d647fd3",
      "filename": "bfd/coff-z80.c",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/coff-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/coff-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-z80.c?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -221,6 +221,21 @@ static bfd_howto_type howto_table[] =\n      0,\t\t\t/* src_mask */\n      0xffff,\t\t/* dst_mask */\n      FALSE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_Z80_16_BE,\n+     R_IMM16BE,\t\t/* type */\n+     0,\t\t\t/* rightshift */\n+     1,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     16,\t\t/* bitsize */\n+     FALSE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_bitfield, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_imm16be\",\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0x0000ffff,\t/* src_mask */\n+     0x0000ffff,\t/* dst_mask */\n+     FALSE),\t\t/* pcrel_offset */\n };\n \n #define NUM_HOWTOS ARRAY_SIZE (howto_table)\n@@ -421,6 +436,17 @@ extra_case (bfd *in_abfd,\n \tbreak;\n       }\n \n+    case R_IMM16BE:\n+      if (reloc->howto->partial_inplace)\n+\tval += (bfd_get_8 ( in_abfd, data+*src_ptr+0) * 0x100 +\n+\t\tbfd_get_8 ( in_abfd, data+*src_ptr+1)) & reloc->howto->src_mask;\n+      \n+      bfd_put_8 (in_abfd, val >> 8, data + *dst_ptr+0);\n+      bfd_put_8 (in_abfd, val, data + *dst_ptr+1);\n+      (*dst_ptr) += 2;\n+      (*src_ptr) += 2;\n+      break;\n+\n     default:\n       abort ();\n     }"
    },
    {
      "sha": "96a7f20d3c7a0bc58c0c6a86a89e885635cac0c2",
      "filename": "bfd/coffcode.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/coffcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/coffcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffcode.h?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -2163,6 +2163,7 @@ coff_set_arch_mach_hook (bfd *abfd, void * filehdr)\n \t{\n \tcase bfd_mach_z80strict << 12:\n \tcase bfd_mach_z80 << 12:\n+\tcase bfd_mach_z80n << 12:\n \tcase bfd_mach_z80full << 12:\n \tcase bfd_mach_r800 << 12:\n \tcase bfd_mach_gbz80 << 12:\n@@ -2655,6 +2656,7 @@ coff_set_flags (bfd * abfd,\n \t{\n \tcase bfd_mach_z80strict:\n \tcase bfd_mach_z80:\n+\tcase bfd_mach_z80n:\n \tcase bfd_mach_z80full:\n \tcase bfd_mach_r800:\n \tcase bfd_mach_gbz80:"
    },
    {
      "sha": "76f2ff69779644b484ca0aa6b91e310c711ee05f",
      "filename": "bfd/cpu-z80.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/cpu-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/cpu-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/cpu-z80.c?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -54,7 +54,8 @@ static const bfd_arch_info_type arch_info_struct[] =\n   N (bfd_mach_r800,\t \"r800\",       16, FALSE, M(4)),\n   N (bfd_mach_gbz80,\t \"gbz80\",      16, FALSE, M(5)),\n   N (bfd_mach_z180,\t \"z180\",       16, FALSE, M(6)),\n-  N (bfd_mach_ez80_z80,\t \"ez80-z80\",   16, FALSE, M(7)),\n+  N (bfd_mach_z80n,\t \"z80n\",       16, FALSE, M(7)),\n+  N (bfd_mach_ez80_z80,\t \"ez80-z80\",   16, FALSE, M(8)),\n   N (bfd_mach_ez80_adl,\t \"ez80-adl\",   24, FALSE, NULL)\n };\n "
    },
    {
      "sha": "89089f5eaab69da7128417ba84efba5f3e607959",
      "filename": "bfd/elf32-z80.c",
      "status": "modified",
      "additions": 301,
      "deletions": 49,
      "changes": 350,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/elf32-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/elf32-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-z80.c?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -30,12 +30,6 @@\n /* All users of this file have bfd_octets_per_byte (abfd, sec) == 1.  */\n #define OCTETS_PER_BYTE(ABFD, SEC) 1\n \n-/* Relocation functions.  */\n-static reloc_howto_type *bfd_elf32_bfd_reloc_type_lookup\n-  (bfd *, bfd_reloc_code_real_type);\n-static bfd_boolean z80_info_to_howto_rel\n-  (bfd *, arelent *, Elf_Internal_Rela *);\n-\n typedef struct {\n   bfd_reloc_code_real_type r_type;\n   reloc_howto_type howto;\n@@ -44,6 +38,11 @@ typedef struct {\n #define BFD_EMPTY_HOWTO(rt,x) {rt, EMPTY_HOWTO(x)}\n #define BFD_HOWTO(rt,a,b,c,d,e,f,g,h,i,j,k,l,m) {rt, HOWTO(a,b,c,d,e,f,g,h,i,j,k,l,m)}\n \n+static bfd_reloc_status_type\n+z80_elf_16_be_reloc (bfd *abfd, arelent *reloc_entry, asymbol *symbol,\n+\t\t     void *data, asection *input_section, bfd *output_bfd,\n+\t\t     char **error_message);\n+\n static const\n bfd_howto_type elf_z80_howto_table[] =\n {\n@@ -253,11 +252,27 @@ bfd_howto_type elf_z80_howto_table[] =\n \t 0,\t\t\t/* src_mask */\n \t 0xffff,\t\t/* dst_mask */\n \t FALSE),\t\t/* pcrel_offset */\n+\n+  /* An 16 bit big endian absolute relocation */\n+  BFD_HOWTO (BFD_RELOC_Z80_16_BE,\n+\t R_Z80_16_BE,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 1,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 16,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_bitfield,\t/* complain_on_overflow */\n+\t z80_elf_16_be_reloc,\t/* special_function */\n+\t \"r_imm16be\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0x00000000,\t\t/* src_mask */\n+\t 0x0000ffff,\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n };\n \n static reloc_howto_type *\n-bfd_elf32_bfd_reloc_type_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n-                                 bfd_reloc_code_real_type code)\n+z80_reloc_type_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n+\t\t       bfd_reloc_code_real_type code)\n {\n   enum\n     {\n@@ -268,16 +283,16 @@ bfd_elf32_bfd_reloc_type_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n   for (i = 0; i < table_size; i++)\n     {\n       if (elf_z80_howto_table[i].r_type == code)\n-          return &elf_z80_howto_table[i].howto;\n+\t  return &elf_z80_howto_table[i].howto;\n     }\n \n-  printf (\"%s:%d Not found type %d\\n\", __FILE__, __LINE__, code);\n+  printf (\"%s:%d Not found BFD reloc type %d\\n\", __FILE__, __LINE__, code);\n \n   return NULL;\n }\n \n static reloc_howto_type *\n-bfd_elf32_bfd_reloc_name_lookup (bfd *abfd ATTRIBUTE_UNUSED, const char *r_name)\n+z80_reloc_name_lookup (bfd *abfd ATTRIBUTE_UNUSED, const char *r_name)\n {\n   enum\n     {\n@@ -288,82 +303,308 @@ bfd_elf32_bfd_reloc_name_lookup (bfd *abfd ATTRIBUTE_UNUSED, const char *r_name)\n   for (i = 0; i < table_size; i++)\n     {\n       if (elf_z80_howto_table[i].howto.name != NULL\n-          && strcasecmp (elf_z80_howto_table[i].howto.name, r_name) == 0)\n-        return &elf_z80_howto_table[i].howto;\n+\t  && strcasecmp (elf_z80_howto_table[i].howto.name, r_name) == 0)\n+\treturn &elf_z80_howto_table[i].howto;\n     }\n \n+  printf (\"%s:%d Not found ELF reloc name `%s'\\n\", __FILE__, __LINE__, r_name);\n+\n   return NULL;\n }\n \n-/* Set the howto pointer for an z80 ELF reloc.  */\n-\n-static bfd_boolean\n-z80_info_to_howto_rel (bfd *abfd, arelent *cache_ptr, Elf_Internal_Rela *dst)\n+static reloc_howto_type *\n+z80_rtype_to_howto (bfd *abfd, unsigned r_type)\n {\n   enum\n     {\n       table_size = sizeof (elf_z80_howto_table) / sizeof (elf_z80_howto_table[0])\n     };\n-  unsigned int  i;\n-  unsigned int  r_type = ELF32_R_TYPE (dst->r_info);\n+  unsigned int i;\n \n   for (i = 0; i < table_size; i++)\n     {\n       if (elf_z80_howto_table[i].howto.type == r_type)\n-        {\n-          cache_ptr->howto = &elf_z80_howto_table[i].howto;\n-          return TRUE;\n-        }\n+\t  return &elf_z80_howto_table[i].howto;\n     }\n \n   /* xgettext:c-format */\n   _bfd_error_handler (_(\"%pB: unsupported relocation type %#x\"),\n-                      abfd, r_type);\n+\t\t      abfd, r_type);\n+  return NULL;\n+} \n+\n+/* Set the howto pointer for an z80 ELF reloc.  */\n+\n+static bfd_boolean\n+z80_info_to_howto_rela (bfd *abfd, arelent *cache_ptr, Elf_Internal_Rela *dst)\n+{\n+  unsigned int  r_type = ELF32_R_TYPE (dst->r_info);\n+  reloc_howto_type *howto = z80_rtype_to_howto (abfd, r_type);\n+  if (howto != NULL)\n+    {\n+      cache_ptr->howto = howto;\n+      return TRUE;\n+    }\n   bfd_set_error (bfd_error_bad_value);\n   return FALSE;\n }\n \n+static bfd_reloc_status_type\n+z80_elf_final_link_relocate (unsigned long r_type,\n+\t\t\t     bfd *input_bfd,\n+\t\t\t     bfd *output_bfd ATTRIBUTE_UNUSED,\n+\t\t\t     asection *input_section ATTRIBUTE_UNUSED,\n+\t\t\t     bfd_byte *contents,\n+\t\t\t     bfd_vma offset,\n+\t\t\t     bfd_vma value,\n+\t\t\t     bfd_vma addend,\n+\t\t\t     struct bfd_link_info *info ATTRIBUTE_UNUSED,\n+\t\t\t     asection *sym_sec ATTRIBUTE_UNUSED,\n+\t\t\t     int is_local ATTRIBUTE_UNUSED)\n+{\n+  bfd_boolean r;\n+  reloc_howto_type *howto;\n+\n+  switch (r_type)\n+    {\n+    case R_Z80_16_BE:\n+      value += addend;\n+      bfd_put_8 (input_bfd, value >> 8, contents + offset + 0);\n+      bfd_put_8 (input_bfd, value >> 0, contents + offset + 1);\n+      return bfd_reloc_ok;\n+    }\n+\n+  howto = z80_rtype_to_howto (input_bfd, r_type);\n+  if (howto == NULL)\n+    return bfd_reloc_notsupported;\n+\n+  r = _bfd_final_link_relocate (howto, input_bfd, input_section, contents,\n+\t\t\t\toffset, value, addend);\n+  return r ? bfd_reloc_ok : bfd_reloc_notsupported;\n+}\n+\n+static bfd_boolean\n+z80_elf_relocate_section (bfd *output_bfd,\n+\t\t\t  struct bfd_link_info *info,\n+\t\t\t  bfd *input_bfd,\n+\t\t\t  asection *input_section,\n+\t\t\t  bfd_byte *contents,\n+\t\t\t  Elf_Internal_Rela *relocs,\n+\t\t\t  Elf_Internal_Sym *local_syms,\n+\t\t\t  asection **local_sections)\n+{\n+  Elf_Internal_Shdr *symtab_hdr;\n+  struct elf_link_hash_entry **sym_hashes;\n+  Elf_Internal_Rela *rel, *relend;\n+\n+  symtab_hdr = &elf_tdata (input_bfd)->symtab_hdr;\n+  sym_hashes = elf_sym_hashes (input_bfd);\n+\n+  rel = relocs;\n+  relend = relocs + input_section->reloc_count;\n+  for (; rel < relend; rel++)\n+    {\n+      unsigned int r_type;\n+      unsigned long r_symndx;\n+      Elf_Internal_Sym *sym;\n+      asection *sec;\n+      struct elf_link_hash_entry *h;\n+      bfd_vma relocation;\n+\n+      /* This is a final link.  */\n+      r_symndx = ELF32_R_SYM (rel->r_info);\n+      r_type = ELF32_R_TYPE (rel->r_info);\n+      h = NULL;\n+      sym = NULL;\n+      sec = NULL;\n+      if (r_symndx < symtab_hdr->sh_info)\n+\t{\n+\t  sym = local_syms + r_symndx;\n+\t  sec = local_sections[r_symndx];\n+\t  relocation = _bfd_elf_rela_local_sym (output_bfd, sym, &sec, rel);\n+\t}\n+      else\n+\t{\n+\t  bfd_boolean unresolved_reloc, warned, ignored;\n+\n+\t  RELOC_FOR_GLOBAL_SYMBOL (info, input_bfd, input_section, rel,\n+\t\t\t\t   r_symndx, symtab_hdr, sym_hashes,\n+\t\t\t\t   h, sec, relocation,\n+\t\t\t\t   unresolved_reloc, warned, ignored);\n+\t}\n+\n+      if (sec != NULL && discarded_section (sec))\n+\t{\n+\t  /* For relocs against symbols from removed linkonce sections,\n+\t     or sections discarded by a linker script, we just want the\n+\t     section contents cleared.  Avoid any special processing.  */\n+\t  reloc_howto_type *howto;\n+\t  howto = z80_rtype_to_howto (input_bfd, r_type);\n+\t  RELOC_AGAINST_DISCARDED_SECTION (info, input_bfd, input_section,\n+\t\t\t\t\t   rel, 1, relend, howto, 0, contents);\n+\t}\n+\n+      if (bfd_link_relocatable (info))\n+\tcontinue;\n+\n+\n+      z80_elf_final_link_relocate (r_type, input_bfd, output_bfd,\n+\t\t\t\t   input_section,\n+\t\t\t\t   contents, rel->r_offset,\n+\t\t\t\t   relocation, rel->r_addend,\n+\t\t\t\t   info, sec, h == NULL);\n+    }\n+\n+  return TRUE;\n+}\n+\n+/* The final processing done just before writing out a Z80 ELF object\n+   file.  This gets the Z80 architecture right based on the machine\n+   number.  */\n+\n static bfd_boolean\n-z80_elf_set_mach_from_flags (bfd *abfd)\n+z80_elf_final_write_processing (bfd *abfd)\n {\n-  int mach;\n-  switch (elf_elfheader (abfd)->e_flags)\n+  unsigned long val = bfd_get_mach (abfd);\n+\n+  switch (val)\n     {\n-    case EF_Z80_MACH_GBZ80:\n-      mach = bfd_mach_gbz80;\n+    default:\n+      _bfd_error_handler (_(\"%pB: unsupported bfd mach %#lx\"),\n+\t\t\t  abfd, val);\n+      /* fall through */\n+    case bfd_mach_z80:\n+    case bfd_mach_z80full:\n+    case bfd_mach_z80strict:\n+      val = EF_Z80_MACH_Z80;\n       break;\n-    case EF_Z80_MACH_Z80:\n-      mach = bfd_mach_z80;\n+    case bfd_mach_gbz80:\n+      val = EF_Z80_MACH_GBZ80;\n       break;\n-    case EF_Z80_MACH_Z180:\n-      mach = bfd_mach_z180;\n+    case bfd_mach_z80n:\n+      val = EF_Z80_MACH_Z80N;\n       break;\n-    case EF_Z80_MACH_EZ80_Z80:\n-      mach = bfd_mach_ez80_z80;\n+    case bfd_mach_z180:\n+      val = EF_Z80_MACH_Z180;\n       break;\n-    case EF_Z80_MACH_EZ80_ADL:\n-      mach = bfd_mach_ez80_adl;\n+    case bfd_mach_ez80_z80:\n+      val = EF_Z80_MACH_EZ80_Z80;\n       break;\n-    case EF_Z80_MACH_R800:\n-      mach = bfd_mach_r800;\n+    case bfd_mach_ez80_adl:\n+      val = EF_Z80_MACH_EZ80_ADL;\n       break;\n-    default:\n-      mach = bfd_mach_z80;\n+    case bfd_mach_r800:\n+      val = EF_Z80_MACH_R800;\n       break;\n     }\n+  elf_elfheader (abfd)->e_machine = EM_Z80;\n+  elf_elfheader (abfd)->e_flags &= ~EF_Z80_MACH_MSK;\n+  elf_elfheader (abfd)->e_flags |= val;\n+  return _bfd_elf_final_write_processing (abfd);\n+}\n \n-  bfd_default_set_arch_mach (abfd, bfd_arch_z80, mach);\n-  return TRUE;\n+/* Set the right machine number.  */\n+static bfd_boolean\n+z80_elf_object_p (bfd *abfd)\n+{\n+  unsigned int mach;\n+\n+  if (elf_elfheader (abfd)->e_machine == EM_Z80)\n+    {\n+      int e_mach = elf_elfheader (abfd)->e_flags & EF_Z80_MACH_MSK;\n+      switch (e_mach)\n+\t{\n+\tdefault:\n+\t  _bfd_error_handler (_(\"%pB: unsupported mach %#x\"),\n+\t\t\t      abfd, e_mach);\n+\t  /* fall through */\n+\tcase EF_Z80_MACH_Z80:\n+\t  mach = bfd_mach_z80;\n+\t  break;\n+\tcase EF_Z80_MACH_GBZ80:\n+\t  mach = bfd_mach_gbz80;\n+\t  break;\n+\tcase EF_Z80_MACH_Z180:\n+\t  mach = bfd_mach_z180;\n+\t  break;\n+\tcase EF_Z80_MACH_EZ80_Z80:\n+\t  mach = bfd_mach_ez80_z80;\n+\t  break;\n+\tcase EF_Z80_MACH_EZ80_ADL:\n+\t  mach = bfd_mach_ez80_adl;\n+\t  break;\n+\tcase EF_Z80_MACH_R800:\n+\t  mach = bfd_mach_r800;\n+\t  break;\n+\tcase EF_Z80_MACH_Z80N:\n+\t  mach = bfd_mach_z80n;\n+\t  break;\n+\t}\n+    }\n+  else\n+    {\n+      _bfd_error_handler (_(\"%pB: unsupported arch %#x\"),\n+\t\t\t  abfd, elf_elfheader (abfd)->e_machine);\n+      mach = bfd_mach_z80;\n+    }\n+  return bfd_default_set_arch_mach (abfd, bfd_arch_z80, mach);\n }\n \n static int\n-z80_is_local_label_name (bfd *        abfd ATTRIBUTE_UNUSED,\n-                         const char * name)\n+z80_is_local_label_name (bfd *\tabfd ATTRIBUTE_UNUSED,\n+\t\t\t const char * name)\n {\n   return (name[0] == '.' && name[1] == 'L') ||\n-         _bfd_elf_is_local_label_name (abfd, name);\n+\t _bfd_elf_is_local_label_name (abfd, name);\n }\n \n+static bfd_reloc_status_type\n+z80_elf_16_be_reloc (bfd *abfd,\n+\t\t     arelent *reloc_entry,\n+\t\t     asymbol *symbol,\n+\t\t     void *data,\n+\t\t     asection *input_section,\n+\t\t     bfd *output_bfd,\n+\t\t     char **error_message)\n+{\n+  bfd_vma val;\n+  long x;\n+  bfd_size_type octets = (reloc_entry->address\n+\t\t\t  * OCTETS_PER_BYTE (abfd, input_section));\n+\n+  /* If this is a relocatable link (output_bfd test tells us), just\n+     call the generic function.  Any adjustment will be done at final\n+     link time.  */\n+  if (output_bfd != NULL)\n+    return bfd_elf_generic_reloc (abfd, reloc_entry, symbol, data,\n+\t\t\t\t  input_section, output_bfd, error_message);\n+\n+  /* Get symbol value.  */\n+  val = 0;\n+  if (!bfd_is_com_section (symbol->section))\n+    val = symbol->value;\n+  val += symbol->section->output_offset + input_section->output_offset;\n+  if (symbol->section->output_section)\n+    val += symbol->section->output_section->vma;\n+\n+  val += reloc_entry->addend;\n+  if (reloc_entry->howto->partial_inplace)\n+    {\n+      x = bfd_get_8 (abfd, (bfd_byte *) data + octets + 0) * 0x100;\n+      x += bfd_get_8 (abfd, (bfd_byte *) data + octets + 1);\n+      x &= ~reloc_entry->howto->src_mask;\n+    }\n+  else\n+    x = 0;\n+\n+  x |= val & reloc_entry->howto->dst_mask;\n+  if (x < -0x8000 || x >= 0x10000)\n+    return bfd_reloc_outofrange;\n+\n+  bfd_put_8 (abfd, x >> 8, (bfd_byte *) data + octets + 0);\n+  bfd_put_8 (abfd, x >> 0, (bfd_byte *) data + octets + 1);\n+  return bfd_reloc_ok;\n+}\n \n #define ELF_ARCH\t\tbfd_arch_z80\n #define ELF_MACHINE_CODE\tEM_Z80\n@@ -372,9 +613,20 @@ z80_is_local_label_name (bfd *        abfd ATTRIBUTE_UNUSED,\n #define TARGET_LITTLE_SYM\t\tz80_elf32_vec\n #define TARGET_LITTLE_NAME\t\t\"elf32-z80\"\n \n-#define elf_info_to_howto\t\t\tNULL\n-#define elf_info_to_howto_rel\t\t\tz80_info_to_howto_rel\n-#define elf_backend_object_p\t\t\tz80_elf_set_mach_from_flags\n+#define elf_backend_can_refcount\t\t1\n+#define elf_backend_can_gc_sections\t\t1\n+#define elf_backend_stack_align\t\t\t1\n+#define elf_backend_rela_normal\t\t\t1\n+\n+#define elf_info_to_howto\t\t\tz80_info_to_howto_rela\n+#define elf_info_to_howto_rel\t\t\tz80_info_to_howto_rela\n+\n+#define elf_backend_final_write_processing\tz80_elf_final_write_processing\n+#define elf_backend_object_p\t\t\tz80_elf_object_p\n+#define elf_backend_relocate_section\t\tz80_elf_relocate_section\n+\n+#define bfd_elf32_bfd_reloc_type_lookup\t\tz80_reloc_type_lookup\n+#define bfd_elf32_bfd_reloc_name_lookup\t\tz80_reloc_name_lookup\n #define bfd_elf32_bfd_is_local_label_name\tz80_is_local_label_name\n \n #include \"elf32-target.h\""
    },
    {
      "sha": "a3684a94cc9b104f1f99d8dfa86fa8ad27d57cf8",
      "filename": "bfd/libbfd.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/libbfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/libbfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd.h?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -2875,6 +2875,7 @@ static const char *const bfd_reloc_code_real_names[] = { \"@@uninitialized@@\",\n   \"BFD_RELOC_Z80_BYTE3\",\n   \"BFD_RELOC_Z80_WORD0\",\n   \"BFD_RELOC_Z80_WORD1\",\n+  \"BFD_RELOC_Z80_16_BE\",\n   \"BFD_RELOC_Z8K_DISP7\",\n   \"BFD_RELOC_Z8K_CALLR\",\n   \"BFD_RELOC_Z8K_IMM4L\","
    },
    {
      "sha": "dab7d17b4702fde596714f0e0e7653c1e9dfcfe9",
      "filename": "bfd/reloc.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/reloc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/bfd/reloc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/reloc.c?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -6697,6 +6697,10 @@ ENUM\n   BFD_RELOC_Z80_WORD1\n ENUMDOC\n   Highest 16 bits of multibyte (32 or 24 bit) value.\n+ENUM\n+  BFD_RELOC_Z80_16_BE\n+ENUMDOC\n+  Like BFD_RELOC_16 but big-endian.\n \n ENUM\n   BFD_RELOC_Z8K_DISP7"
    },
    {
      "sha": "eea47565ac1f16393cb168f20a351ea91eab0ae0",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -1,3 +1,9 @@\n+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25469\n+\t* readelf.c (get_machine_flags): Add support for Z80N machine\n+\tnumber.\n+\n 2020-02-07  Nick Clifton  <nickc@redhat.com>\n \n \t* dwarf.c (display_debug_lines_decoded): Force a NUL termination"
    },
    {
      "sha": "58667dd407222e03aadf18477f7c7bbcb1c76141",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -3769,6 +3769,7 @@ get_machine_flags (Filedata * filedata, unsigned e_flags, unsigned e_machine)\n \t    case EF_Z80_MACH_EZ80_Z80: strcat (buf, \", EZ80\"); break;\n \t    case EF_Z80_MACH_EZ80_ADL: strcat (buf, \", EZ80, ADL\"); break;\n \t    case EF_Z80_MACH_GBZ80: strcat (buf, \", GBZ80\"); break;\n+\t    case EF_Z80_MACH_Z80N: strcat (buf, \", Z80N\"); break;\n \t    default:\n \t      strcat (buf, _(\", unknown\")); break;\n \t    }"
    },
    {
      "sha": "1cc473b49f3a8626232821ae5eb75f4471466809",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -1,3 +1,18 @@\n+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25469\n+\t* config/tc-z80.c: Add -gbz80 command line option to generate code\n+\tfor the GameBoy Z80.  Add support for generating DWARF.\n+\t* config/tc-z80.h: Add support for DWARF debug information\n+\tgeneration.\n+\t* doc/c-z80.texi: Document new command line option.\n+\t* testsuite/gas/z80/gbz80_all.d: New file.\n+\t* testsuite/gas/z80/gbz80_all.s: New file.\n+\t* testsuite/gas/z80/z80.exp: Run the new tests.\n+\t* testsuite/gas/z80/z80n_all.d: New file.\n+\t* testsuite/gas/z80/z80n_all.s: New file.\n+\t* testsuite/gas/z80/z80n_reloc.d: New file.\n+\n 2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR gas/25381"
    },
    {
      "sha": "abe8c11ebcd8a300efa855991105bb48318d5b2c",
      "filename": "gas/config/tc-z80.c",
      "status": "modified",
      "additions": 490,
      "deletions": 120,
      "changes": 610,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/config/tc-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/config/tc-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-z80.c?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -24,6 +24,7 @@\n #include \"subsegs.h\"\n #include \"elf/z80.h\"\n #include \"dwarf2dbg.h\"\n+#include \"dw2gencfi.h\"\n \n /* Exported constants.  */\n const char comment_chars[] = \";\\0\";\n@@ -43,6 +44,7 @@ enum options\n   OPTION_MACH_EZ80_Z80,\n   OPTION_MACH_EZ80_ADL,\n   OPTION_MACH_GBZ80,\n+  OPTION_MACH_Z80N,\n   OPTION_MACH_INST,\n   OPTION_MACH_NO_INST,\n   OPTION_MACH_IUD,\n@@ -63,6 +65,7 @@ enum options\n #define INS_GBZ80    (1 << 2)\n #define INS_Z180     (1 << 3)\n #define INS_EZ80     (1 << 4)\n+#define INS_Z80N     (1 << 5)\n #define INS_MARCH_MASK 0xffff\n \n #define INS_IDX_HALF (1 << 16)\n@@ -72,7 +75,7 @@ enum options\n #define INS_ROT_II_LD (1 << 20)  /* instructions like SLA (ii+d),r; which is: LD r,(ii+d); SLA r; LD (ii+d),r */\n #define INS_TUNE_MASK 0xffff0000\n \n-#define INS_NOT_GBZ80 (INS_Z80 | INS_Z180 | INS_R800 | INS_EZ80)\n+#define INS_NOT_GBZ80 (INS_Z80 | INS_Z180 | INS_R800 | INS_EZ80 | INS_Z80N)\n \n #define INS_ALL 0\n #define INS_UNDOC (INS_IDX_HALF | INS_IN_F_C)\n@@ -85,6 +88,8 @@ struct option md_longopts[] =\n   { \"z180\",      no_argument, NULL, OPTION_MACH_Z180},\n   { \"ez80\",      no_argument, NULL, OPTION_MACH_EZ80_Z80},\n   { \"ez80-adl\",  no_argument, NULL, OPTION_MACH_EZ80_ADL},\n+  { \"gbz80\",     no_argument, NULL, OPTION_MACH_GBZ80},\n+  { \"z80n\",      no_argument, NULL, OPTION_MACH_Z80N},\n   { \"fp-s\",      required_argument, NULL, OPTION_FP_SINGLE_FORMAT},\n   { \"fp-d\",      required_argument, NULL, OPTION_FP_DOUBLE_FORMAT},\n   { \"strict\",    no_argument, NULL, OPTION_MACH_FUD},\n@@ -243,27 +248,31 @@ md_parse_option (int c, const char* arg)\n       ins_err = (ins_err & INS_MARCH_MASK) | (~INS_Z80 & INS_MARCH_MASK);\n       break;\n     case OPTION_MACH_R800:\n-      ins_ok = INS_R800 | INS_IDX_HALF;\n+      ins_ok = INS_R800 | INS_IDX_HALF | INS_IN_F_C;\n       ins_err = INS_UNPORT;\n       break;\n     case OPTION_MACH_Z180:\n       ins_ok = INS_Z180;\n       ins_err = INS_UNDOC | INS_UNPORT;\n       break;\n     case OPTION_MACH_EZ80_Z80:\n-      ins_ok = INS_EZ80;\n+      ins_ok = INS_EZ80 | INS_IDX_HALF;\n       ins_err = (INS_UNDOC | INS_UNPORT) & ~INS_IDX_HALF;\n       cpu_mode = 0;\n       break;\n     case OPTION_MACH_EZ80_ADL:\n-      ins_ok = INS_EZ80;\n+      ins_ok = INS_EZ80 | INS_IDX_HALF;\n       ins_err = (INS_UNDOC | INS_UNPORT) & ~INS_IDX_HALF;\n       cpu_mode = 1;\n       break;\n     case OPTION_MACH_GBZ80:\n       ins_ok = INS_GBZ80;\n       ins_err = INS_UNDOC | INS_UNPORT;\n       break;\n+    case OPTION_MACH_Z80N:\n+      ins_ok = INS_Z80N | INS_UNPORT | INS_UNDOC;\n+      ins_err = 0;\n+      break;\n     case OPTION_FP_SINGLE_FORMAT:\n       str_to_float = get_str_to_float (arg);\n       break;\n@@ -325,11 +334,13 @@ md_show_usage (FILE * f)\n {\n   fprintf (f, \"\\n\\\n CPU model options:\\n\\\n-  -z80\\t\\t\\t  assemble for Z80\\n\\\n-  -r800\\t\\t\\t  assemble for R800\\n\\\n-  -z180\\t\\t\\t  assemble for Z180\\n\\\n-  -ez80\\t\\t\\t  assemble for eZ80 in Z80 mode by default\\n\\\n-  -ez80-adl\\t\\t  assemble for eZ80 in ADL mode by default\\n\\\n+  -z80\\t\\t\\t  assemble for Zilog Z80\\n\\\n+  -r800\\t\\t\\t  assemble for Ascii R800\\n\\\n+  -z180\\t\\t\\t  assemble for Zilog Z180\\n\\\n+  -ez80\\t\\t\\t  assemble for Zilog eZ80 in Z80 mode by default\\n\\\n+  -ez80-adl\\t\\t  assemble for Zilog eZ80 in ADL mode by default\\n\\\n+  -gbz80\\t\\t  assemble for GameBoy Z80\\n\\\n+  -z80n\\t\\t\\t  assemble for Z80N\\n\\\n \\n\\\n Compatibility options:\\n\\\n   -local-prefix=TEXT\\t  treat labels prefixed by TEXT as local\\n\\\n@@ -507,6 +518,9 @@ z80_md_end (void)\n     case INS_EZ80:\n       mach_type = cpu_mode ? bfd_mach_ez80_adl : bfd_mach_ez80_z80;\n       break;\n+    case INS_Z80N:\n+      mach_type = bfd_mach_z80n;\n+      break;\n     default:\n       mach_type = 0;\n     }\n@@ -536,6 +550,9 @@ z80_elf_final_processing (void)\n     case INS_EZ80:\n       elf_flags = cpu_mode ? EF_Z80_MACH_EZ80_ADL : EF_Z80_MACH_EZ80_Z80;\n       break;\n+    case INS_Z80N:\n+      elf_flags = EF_Z80_MACH_Z80N;\n+      break;\n     default:\n       elf_flags = 0;\n     }\n@@ -843,6 +860,22 @@ parse_exp_not_indexed (const char *s, expressionS *op)\n     }\n \n   op->X_md = indir = is_indir (p);\n+  if (indir && (ins_ok & INS_GBZ80))\n+    { /* check for instructions like ld a,(hl+), ld (hl-),a */\n+      p = skip_space (p+1);\n+      if (!strncasecmp (p, \"hl\", 2))\n+\t{\n+\t  p = skip_space(p+2);\n+\t  if (*skip_space(p+1) == ')' && (*p == '+' || *p == '-'))\n+\t    {\n+\t      op->X_op = O_md1;\n+\t      op->X_add_symbol = NULL;\n+\t      op->X_add_number = (*p == '+') ? REG_HL : -REG_HL;\n+\t      input_line_pointer = (char*)skip_space(p + 1) + 1;\n+\t      return input_line_pointer;\n+\t    }\n+\t}\n+    }\n   input_line_pointer = (char*) s ;\n   expression (op);\n   switch (op->X_op)\n@@ -1122,7 +1155,6 @@ static void\n emit_byte (expressionS * val, bfd_reloc_code_real_type r_type)\n {\n   char *p;\n-  int lo, hi;\n \n   if (r_type == BFD_RELOC_8)\n     {\n@@ -1141,15 +1173,12 @@ emit_byte (expressionS * val, bfd_reloc_code_real_type r_type)\n     }\n   else if (val->X_op == O_constant)\n     {\n-      lo = -128;\n-      hi = (BFD_RELOC_8 == r_type) ? 255 : 127;\n-\n-      if ((val->X_add_number < lo) || (val->X_add_number > hi))\n+      if ((val->X_add_number < -128) || (val->X_add_number >= 128))\n \t{\n \t  if (r_type == BFD_RELOC_Z80_DISP8)\n-\t    as_bad (_(\"offset too large\"));\n+\t    as_bad (_(\"index overflow (%+ld)\"), val->X_add_number);\n \t  else\n-\t    as_warn (_(\"overflow\"));\n+\t    as_bad (_(\"offset overflow (%+ld)\"), val->X_add_number);\n \t}\n     }\n   else\n@@ -1339,6 +1368,51 @@ emit_s (char prefix, char opcode, const char *args)\n   return p;\n }\n \n+static const char *\n+emit_sub (char prefix, char opcode, const char *args)\n+{\n+  expressionS arg_s;\n+  const char *p;\n+\n+  if (!(ins_ok & INS_GBZ80))\n+    return emit_s (prefix, opcode, args);\n+  p = parse_exp (args, & arg_s);\n+  if (*p++ != ',')\n+    {\n+      error (_(\"bad instruction syntax\"));\n+      return p;\n+    }\n+\n+  if (arg_s.X_md != 0 || arg_s.X_op != O_register || arg_s.X_add_number != REG_A)\n+    ill_op ();\n+\n+  p = parse_exp (p, & arg_s);\n+\n+  emit_sx (prefix, opcode, & arg_s);\n+  return p;\n+}\n+\n+static const char *\n+emit_swap (char prefix, char opcode, const char *args)\n+{\n+  expressionS reg;\n+  const char *p;\n+  char *q;\n+\n+  if (!(ins_ok & INS_Z80N))\n+    return emit_mr (prefix, opcode, args);\n+\n+  /* check for alias swap a for swapnib of Z80N */\n+  p = parse_exp (args, &reg);\n+  if (reg.X_md != 0 || reg.X_op != O_register || reg.X_add_number != REG_A)\n+    ill_op ();\n+\n+  q = frag_more (2);\n+  *q++ = 0xED;\n+  *q = 0x23;\n+  return p;\n+}\n+\n static const char *\n emit_call (char prefix ATTRIBUTE_UNUSED, char opcode, const char * args)\n {\n@@ -1425,6 +1499,12 @@ emit_jp (char prefix, char opcode, const char * args)\n \t    *q++ = (rnum & R_IX) ? 0xDD : 0xFD;\n \t  *q = prefix;\n \t}\n+      else if (addr.X_op == O_register && rnum == REG_C && (ins_ok & INS_Z80N))\n+\t{\n+\t  q = frag_more (2);\n+\t  *q++ = 0xED;\n+\t  *q = 0x98;\n+\t}\n       else\n \till_op ();\n     }\n@@ -1495,6 +1575,31 @@ emit_pop (char prefix ATTRIBUTE_UNUSED, char opcode, const char * args)\n   return p;\n }\n \n+static const char *\n+emit_push (char prefix, char opcode, const char * args)\n+{\n+  expressionS arg;\n+  const char *p;\n+  char *q;\n+\n+  p = parse_exp (args, & arg);\n+  if (arg.X_op == O_register)\n+    return emit_pop (prefix, opcode, args);\n+\n+  if (arg.X_md || arg.X_op == O_md1 || !(ins_ok & INS_Z80N))\n+    ill_op ();\n+\n+  q = frag_more (2);\n+  *q++ = 0xED;\n+  *q = 0x8A;\n+\n+  q = frag_more (2);\n+  fix_new_exp (frag_now, q - frag_now->fr_literal, 2, &arg, FALSE,\n+               BFD_RELOC_Z80_16_BE);\n+\n+  return p;\n+}\n+\n static const char *\n emit_retcc (char prefix ATTRIBUTE_UNUSED, char opcode, const char * args)\n {\n@@ -1571,19 +1676,38 @@ emit_add (char prefix, char opcode, const char * args)\n   if ((term.X_md) || (term.X_op != O_register))\n     ill_op ();\n   else\n-    switch (term.X_add_number & ~R_INDEX)\n+    switch (term.X_add_number)\n       {\n       case REG_A:\n \tp = emit_s (0, prefix, p);\n \tbreak;\n+      case REG_SP:\n+\tp = parse_exp (p, &term);\n+\tif (!(ins_ok & INS_GBZ80) || term.X_md || term.X_op == O_register)\n+\t  ill_op ();\n+\tq = frag_more (1);\n+\t*q = 0xE8;\n+\temit_byte (&term, BFD_RELOC_Z80_DISP8);\n+\tbreak;\n+      case REG_BC:\n+      case REG_DE:\n+\tif (!(ins_ok & INS_Z80N))\n+\t  {\n+\t    ill_op ();\n+\t    break;\n+\t  }\n+\t/* Fall through.  */\n       case REG_HL:\n+      case REG_IX:\n+      case REG_IY:\n \tlhs = term.X_add_number;\n \tp = parse_exp (p, &term);\n-\tif ((!term.X_md) && (term.X_op == O_register))\n+\trhs = term.X_add_number;\n+\tif (term.X_md != 0 || term.X_op == O_md1)\n+\t  ill_op ();\n+\telse if ((term.X_op == O_register) && (rhs & R_ARITH) && (rhs == lhs || (rhs & ~R_INDEX) != REG_HL))\n \t  {\n-\t    rhs = term.X_add_number;\n-\t    if ((rhs & R_ARITH)\n-\t\t&& ((rhs == lhs) || ((rhs & ~R_INDEX) != REG_HL)))\n+\t    if (1)\n \t      {\n \t\tq = frag_more ((lhs & R_INDEX) ? 2 : 1);\n \t\tif (lhs & R_INDEX)\n@@ -1592,6 +1716,24 @@ emit_add (char prefix, char opcode, const char * args)\n \t\tbreak;\n \t      }\n \t  }\n+\telse if (!(lhs & R_INDEX) && (ins_ok & INS_Z80N))\n+\t  {\n+\t    if (term.X_op == O_register && rhs == REG_A)\n+\t      { /* ADD BC/DE/HL,A */\n+\t\tq = frag_more (2);\n+\t\t*q++ = 0xED;\n+\t\t*q = 0x33 - (lhs & 3);\n+\t\tbreak;\n+\t      }\n+\t    else if (term.X_op != O_register && term.X_op != O_md1)\n+\t      { /* ADD BC/DE/HL,nn */\n+\t\tq = frag_more (2);\n+\t\t*q++ = 0xED;\n+\t\t*q = 0x36 - (lhs & 3);\n+\t\temit_word (&term);\n+\t\tbreak;\n+\t      }\n+\t  }\n \t/* Fall through.  */\n       default:\n \till_op ();\n@@ -1628,6 +1770,27 @@ emit_bit (char prefix, char opcode, const char * args)\n   return p;\n }\n \n+/* BSLA DE,B; BSRA DE,B; BSRL DE,B; BSRF DE,B; BRLC DE,B (Z80N only) */\n+static const char *\n+emit_bshft (char prefix, char opcode, const char * args)\n+{\n+  expressionS r1, r2;\n+  const char *p;\n+  char *q;\n+\n+  p = parse_exp (args, & r1);\n+  if (*p++ != ',')\n+    error (_(\"bad instruction syntax\"));\n+  p = parse_exp (p, & r2);\n+  if (r1.X_md || r1.X_op != O_register || r1.X_add_number != REG_DE ||\n+      r2.X_md || r2.X_op != O_register || r2.X_add_number != REG_B)\n+    ill_op ();\n+  q = frag_more (2);\n+  *q++ = prefix;\n+  *q = opcode;\n+  return p;\n+}\n+\n static const char *\n emit_jpcc (char prefix, char opcode, const char * args)\n {\n@@ -1726,13 +1889,21 @@ emit_in (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n   char *q;\n \n   p = parse_exp (args, &reg);\n-  if (*p++ != ',')\n+  if (reg.X_md && reg.X_op == O_register && reg.X_add_number == REG_C)\n+    { /* permit instruction in (c) as alias for in f,(c) */\n+      port = reg;\n+      reg.X_md = 0;\n+      reg.X_add_number = REG_F;\n+    }\n+  else\n     {\n-      error (_(\"bad instruction syntax\"));\n-      return p;\n+      if (*p++ != ',')\n+\t{\n+\t  error (_(\"bad instruction syntax\"));\n+\t  return p;\n+\t}\n+      p = parse_exp (p, &port);\n     }\n-\n-  p = parse_exp (p, &port);\n   if (reg.X_md == 0\n       && reg.X_op == O_register\n       && (reg.X_add_number <= 7 || reg.X_add_number == REG_F)\n@@ -1958,7 +2129,15 @@ emit_ld_m_r (expressionS *dst, expressionS *src)\n   switch (dst->X_op)\n     {\n     case O_md1:\n-      prefix = (dst->X_add_number == REG_IX) ? 0xDD : 0xFD;\n+      if (ins_ok & INS_GBZ80)\n+\t{ /* LD (HL+),A or LD (HL-),A */\n+\t  if (src->X_op != O_register || src->X_add_number != REG_A)\n+\t    break;\n+\t  *frag_more (1) = (dst->X_add_number == REG_HL) ? 0x22 : 0x32;\n+\t  return;\n+\t}\n+      else\n+\tprefix = (dst->X_add_number == REG_IX) ? 0xDD : 0xFD;\n       /* Fall through.  */\n     case O_register:\n       switch (dst->X_add_number)\n@@ -1998,7 +2177,7 @@ emit_ld_m_r (expressionS *dst, expressionS *src)\n       if (src->X_add_number == REG_A)\n         {\n           q = frag_more (1);\n-          *q = 0x32;\n+\t  *q = (ins_ok & INS_GBZ80) ? 0xEA : 0x32;\n           emit_word (dst);\n           return;\n         }\n@@ -2112,6 +2291,15 @@ emit_ld_r_m (expressionS *dst, expressionS *src)\n   switch (src->X_op)\n     {\n     case O_md1:\n+      if (ins_ok & INS_GBZ80)\n+\t{ /* LD A,(HL+) or LD A,(HL-) */\n+\t  if (dst->X_op == O_register && dst->X_add_number == REG_A)\n+\t    *frag_more (1) = (src->X_add_number == REG_HL) ? 0x2A : 0x3A;\n+\t  else\n+\t    ill_op ();\n+\t  break;\n+\t}\n+      /* Fall through. */\n     case O_register:\n       if (dst->X_add_number > 7)\n         ill_op ();\n@@ -2140,7 +2328,7 @@ emit_ld_r_m (expressionS *dst, expressionS *src)\n       if (dst->X_add_number == REG_A)\n         {\n           q = frag_more (1);\n-          *q = 0x3A;\n+\t  *q = (ins_ok & INS_GBZ80) ? 0xFA : 0x3A;\n           emit_word (src);\n         }\n     }\n@@ -2208,8 +2396,6 @@ emit_ld_r_r (expressionS *dst, expressionS *src)\n         default:\n           ill_op ();\n         }\n-      if (ins_ok & INS_GBZ80)\n-        ill_op ();\n       opcode = 0xF9;\n       break;\n     case REG_HL:\n@@ -2522,7 +2708,7 @@ emit_lddldi (char prefix, char opcode, const char * args)\n   p = parse_exp (args, & dst);\n   if (*p++ != ',')\n     error (_(\"bad instruction syntax\"));\n-  p = parse_exp (args, & src);\n+  p = parse_exp (p, & src);\n \n   if (dst.X_op != O_register || src.X_op != O_register)\n     ill_op ();\n@@ -2568,12 +2754,18 @@ emit_ldh (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n       && dst.X_op == O_register\n       && dst.X_add_number == REG_A\n       && src.X_md != 0\n-      && src.X_op != O_md1\n-      && src.X_op != O_register)\n+      && src.X_op != O_md1)\n     {\n-      q = frag_more (1);\n-      *q = 0xF0;\n-      emit_byte (& src, BFD_RELOC_8);\n+      if (src.X_op != O_register)\n+\t{\n+\t  q = frag_more (1);\n+\t  *q = 0xF0;\n+\t  emit_byte (& src, BFD_RELOC_8);\n+\t}\n+      else if (src.X_add_number == REG_C)\n+\t*frag_more (1) = 0xF2;\n+      else\n+\till_op ();\n     }\n   else if (dst.X_md != 0\n       && dst.X_op != O_md1\n@@ -2604,6 +2796,29 @@ emit_ldh (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n   return p;\n }\n \n+static const char *\n+emit_ldhl (char prefix ATTRIBUTE_UNUSED, char opcode, const char * args)\n+{\n+  expressionS dst, src;\n+  const char *p;\n+  char *q;\n+  p = parse_exp (args, & dst);\n+  if (*p++ != ',')\n+    {\n+      error (_(\"bad instruction syntax\"));\n+      return p;\n+    }\n+\n+  p = parse_exp (p, & src);\n+  if (dst.X_md || dst.X_op != O_register || dst.X_add_number != REG_SP\n+      || src.X_md || src.X_op == O_register || src.X_op == O_md1)\n+    ill_op ();\n+  q = frag_more (1);\n+  *q = opcode;\n+  emit_byte (& src, BFD_RELOC_Z80_DISP8);\n+  return p;\n+}\n+\n static const char *\n parse_lea_pea_args (const char * args, expressionS *op)\n {\n@@ -2699,13 +2914,76 @@ emit_mlt (char prefix, char opcode, const char * args)\n   if (arg.X_md != 0 || arg.X_op != O_register || !(arg.X_add_number & R_ARITH))\n     ill_op ();\n \n+  q = frag_more (2);\n+  if (ins_ok & INS_Z80N)\n+    {\n+      if (arg.X_add_number != REG_DE)\n+\till_op ();\n+      *q++ = 0xED;\n+      *q = 0x30;\n+    }\n+  else\n+    {\n+      *q++ = prefix;\n+      *q = opcode | ((arg.X_add_number & 3) << 4);\n+    }\n+\n+  return p;\n+}\n+\n+/* MUL D,E (Z80N only) */\n+static const char *\n+emit_mul (char prefix, char opcode, const char * args)\n+{\n+  expressionS r1, r2;\n+  const char *p;\n+  char *q;\n+\n+  p = parse_exp (args, & r1);\n+  if (*p++ != ',')\n+    error (_(\"bad instruction syntax\"));\n+  p = parse_exp (p, & r2);\n+\n+  if (r1.X_md != 0 || r1.X_op != O_register || r1.X_add_number != REG_D ||\n+      r2.X_md != 0 || r2.X_op != O_register || r2.X_add_number != REG_E)\n+    ill_op ();\n+\n   q = frag_more (2);\n   *q++ = prefix;\n-  *q = opcode | ((arg.X_add_number & 3) << 4);\n+  *q = opcode;\n \n   return p;\n }\n \n+static const char *\n+emit_nextreg (char prefix, char opcode ATTRIBUTE_UNUSED, const char * args)\n+{\n+  expressionS rr, nn;\n+  const char *p;\n+  char *q;\n+\n+  p = parse_exp (args, & rr);\n+  if (*p++ != ',')\n+    error (_(\"bad instruction syntax\"));\n+  p = parse_exp (p, & nn);\n+  if (rr.X_md != 0 || rr.X_op == O_register || rr.X_op == O_md1 ||\n+      nn.X_md != 0 || nn.X_op == O_md1)\n+    ill_op ();\n+  q = frag_more (2);\n+  *q++ = prefix;\n+  emit_byte (&rr, BFD_RELOC_8);\n+  if (nn.X_op == O_register && nn.X_add_number == REG_A)\n+    *q = 0x92;\n+  else if (nn.X_op != O_register)\n+    {\n+      *q = 0x91;\n+      emit_byte (&nn, BFD_RELOC_8);\n+    }\n+  else\n+    ill_op ();\n+  return p;\n+}\n+\n static const char *\n emit_pea (char prefix, char opcode, const char * args)\n {\n@@ -2783,15 +3061,23 @@ emit_tst (char prefix, char opcode, const char *args)\n       if (arg_s.X_md)\n         ill_op ();\n       q = frag_more (2);\n-      *q++ = prefix;\n-      *q = opcode | 0x60;\n+      if (ins_ok & INS_Z80N)\n+\t{\n+\t  *q++ = 0xED;\n+\t  *q = 0x27;\n+\t}\n+      else\n+\t{\n+\t  *q++ = prefix;\n+\t  *q = opcode | 0x60;\n+\t}\n       emit_byte (& arg_s, BFD_RELOC_8);\n     }\n   return p;\n }\n \n static const char *\n-emit_tstio (char prefix, char opcode, const char *args)\n+emit_insn_n (char prefix, char opcode, const char *args)\n {\n   expressionS arg;\n   const char *p;\n@@ -3130,6 +3416,7 @@ const pseudo_typeS md_pseudo_table[] =\n   { \".set\", s_set, 0},\n   { \".z180\", set_inss, INS_Z180},\n   { \".z80\", set_inss, INS_Z80},\n+  { \".z80n\", set_inss, INS_Z80N},\n   { \"db\" , emit_data, 1},\n   { \"d24\", z80_cons, 3},\n   { \"d32\", z80_cons, 4},\n@@ -3152,6 +3439,11 @@ static table_t instab[] =\n   { \"add\",  0x80, 0x09, emit_add,  INS_ALL },\n   { \"and\",  0x00, 0xA0, emit_s,    INS_ALL },\n   { \"bit\",  0xCB, 0x40, emit_bit,  INS_ALL },\n+  { \"brlc\", 0xED, 0x2C, emit_bshft,INS_Z80N },\n+  { \"bsla\", 0xED, 0x28, emit_bshft,INS_Z80N },\n+  { \"bsra\", 0xED, 0x29, emit_bshft,INS_Z80N },\n+  { \"bsrf\", 0xED, 0x2B, emit_bshft,INS_Z80N },\n+  { \"bsrl\", 0xED, 0x2A, emit_bshft,INS_Z80N },\n   { \"call\", 0xCD, 0xC4, emit_jpcc, INS_ALL },\n   { \"ccf\",  0x00, 0x3F, emit_insn, INS_ALL },\n   { \"cp\",   0x00, 0xB8, emit_s,    INS_ALL },\n@@ -3191,15 +3483,24 @@ static table_t instab[] =\n   { \"ld\",   0x00, 0x00, emit_ld,   INS_ALL },\n   { \"ldd\",  0xED, 0xA8, emit_lddldi,INS_ALL }, /* GBZ80 has special meaning */\n   { \"lddr\", 0xED, 0xB8, emit_insn, INS_NOT_GBZ80 },\n+  { \"lddrx\",0xED, 0xBC, emit_insn, INS_Z80N },\n+  { \"lddx\", 0xED, 0xAC, emit_insn, INS_Z80N },\n   { \"ldh\",  0xE0, 0x00, emit_ldh,  INS_GBZ80 },\n-  { \"ldhl\", 0xE0, 0x00, emit_ldh,  INS_GBZ80 },\n+  { \"ldhl\", 0x00, 0xF8, emit_ldhl, INS_GBZ80 },\n   { \"ldi\",  0xED, 0xA0, emit_lddldi,INS_ALL }, /* GBZ80 has special meaning */\n   { \"ldir\", 0xED, 0xB0, emit_insn, INS_NOT_GBZ80 },\n+  { \"ldirx\",0xED, 0xB4, emit_insn, INS_Z80N },\n+  { \"ldix\", 0xED, 0xA4, emit_insn, INS_Z80N },\n+  { \"ldpirx\",0xED,0xB7, emit_insn, INS_Z80N },\n+  { \"ldws\", 0xED, 0xA5, emit_insn, INS_Z80N },\n   { \"lea\",  0xED, 0x02, emit_lea,  INS_EZ80 },\n-  { \"mlt\",  0xED, 0x4C, emit_mlt,  INS_Z180|INS_EZ80 },\n+  { \"mirror\",0xED,0x24, emit_insn, INS_Z80N },\n+  { \"mlt\",  0xED, 0x4C, emit_mlt,  INS_Z180|INS_EZ80|INS_Z80N },\n+  { \"mul\",  0xED, 0x30, emit_mul,  INS_Z80N },\n   { \"mulub\",0xED, 0xC5, emit_mulub,INS_R800 },\n   { \"muluw\",0xED, 0xC3, emit_muluw,INS_R800 },\n-  { \"neg\",  0xed, 0x44, emit_insn, INS_NOT_GBZ80 },\n+  { \"neg\",  0xED, 0x44, emit_insn, INS_NOT_GBZ80 },\n+  { \"nextreg\",0xED,0x91,emit_nextreg,INS_Z80N },\n   { \"nop\",  0x00, 0x00, emit_insn, INS_ALL },\n   { \"or\",   0x00, 0xB0, emit_s,    INS_ALL },\n   { \"otd2r\",0xED, 0xBC, emit_insn, INS_EZ80 },\n@@ -3218,9 +3519,12 @@ static table_t instab[] =\n   { \"outd2\",0xED, 0xAC, emit_insn, INS_EZ80 },\n   { \"outi\", 0xED, 0xA3, emit_insn, INS_NOT_GBZ80 },\n   { \"outi2\",0xED, 0xA4, emit_insn, INS_EZ80 },\n+  { \"outinb\",0xED,0x90, emit_insn, INS_Z80N },\n   { \"pea\",  0xED, 0x65, emit_pea,  INS_EZ80 },\n+  { \"pixelad\",0xED,0x94,emit_insn, INS_Z80N },\n+  { \"pixeldn\",0xED,0x93,emit_insn, INS_Z80N },\n   { \"pop\",  0x00, 0xC1, emit_pop,  INS_ALL },\n-  { \"push\", 0x00, 0xC5, emit_pop,  INS_ALL },\n+  { \"push\", 0x00, 0xC5, emit_push, INS_ALL },\n   { \"res\",  0xCB, 0x80, emit_bit,  INS_ALL },\n   { \"ret\",  0xC9, 0xC0, emit_retcc,INS_ALL },\n   { \"reti\", 0xED, 0x4D, emit_reti, INS_ALL }, /*GBZ80 has its own opcode for it*/\n@@ -3240,6 +3544,8 @@ static table_t instab[] =\n   { \"sbc\",  0x98, 0x42, emit_adc,  INS_ALL },\n   { \"scf\",  0x00, 0x37, emit_insn, INS_ALL },\n   { \"set\",  0xCB, 0xC0, emit_bit,  INS_ALL },\n+  { \"setae\",0xED, 0x95, emit_insn, INS_Z80N },\n+  { \"sl1\",  0xCB, 0x30, emit_mr,   INS_SLI },\n   { \"sla\",  0xCB, 0x20, emit_mr,   INS_ALL },\n   { \"sli\",  0xCB, 0x30, emit_mr,   INS_SLI },\n   { \"sll\",  0xCB, 0x30, emit_mr,   INS_SLI },\n@@ -3248,10 +3554,12 @@ static table_t instab[] =\n   { \"srl\",  0xCB, 0x38, emit_mr,   INS_ALL },\n   { \"stmix\",0xED, 0x7D, emit_insn, INS_EZ80 },\n   { \"stop\", 0x00, 0x10, emit_insn, INS_GBZ80 },\n-  { \"sub\",  0x00, 0x90, emit_s,    INS_ALL },\n-  { \"swap\", 0xCB, 0x30, emit_mr,   INS_GBZ80 },\n-  { \"tst\",  0xED, 0x04, emit_tst,  INS_Z180|INS_EZ80 },\n-  { \"tstio\",0xED, 0x74, emit_tstio,INS_Z180|INS_EZ80 },\n+  { \"sub\",  0x00, 0x90, emit_sub,  INS_ALL },\n+  { \"swap\", 0xCB, 0x30, emit_swap, INS_GBZ80|INS_Z80N },\n+  { \"swapnib\",0xED,0x23,emit_insn, INS_Z80N },\n+  { \"test\", 0xED, 0x27, emit_insn_n, INS_Z80N },\n+  { \"tst\",  0xED, 0x04, emit_tst,  INS_Z180|INS_EZ80|INS_Z80N },\n+  { \"tstio\",0xED, 0x74, emit_insn_n,INS_Z180|INS_EZ80 },\n   { \"xor\",  0x00, 0xA8, emit_s,    INS_ALL },\n } ;\n \n@@ -3294,139 +3602,146 @@ md_assemble (char *str)\n       insp = bsearch (&key, instab, ARRAY_SIZE (instab),\n \t\t    sizeof (instab[0]), key_cmp);\n       if (!insp || (insp->inss && !(insp->inss & ins_ok)))\n-        {\n-          as_bad (_(\"Unknown instruction '%s'\"), buf);\n-          *frag_more (1) = 0;\n-        }\n+\t{\n+\t  *frag_more (1) = 0;\n+\t  as_bad (_(\"Unknown instruction `%s'\"), buf);\n+\t}\n       else\n \t{\n \t  p = insp->fp (insp->prefix, insp->opcode, p);\n \t  p = skip_space (p);\n-\tif ((!err_flag) && *p)\n-\t  as_bad (_(\"junk at end of line, first unrecognized character is `%c'\"),\n-\t\t  *p);\n+\t  if ((!err_flag) && *p)\n+\t    as_bad (_(\"junk at end of line, \"\n+\t\t      \"first unrecognized character is `%c'\"), *p);\n \t}\n     }\n end:\n   input_line_pointer = old_ptr;\n }\n \n+static int\n+is_overflow (long value, unsigned bitsize)\n+{\n+  long fieldmask = (1 << bitsize) - 1;\n+  long signmask = ~fieldmask;\n+  long a = value & fieldmask;\n+  long ss = a & signmask;\n+  if (ss != 0 && ss != (signmask & fieldmask))\n+    return 1;\n+  return 0;\n+}\n+\n void\n-md_apply_fix (fixS * fixP, valueT* valP, segT seg ATTRIBUTE_UNUSED)\n+md_apply_fix (fixS * fixP, valueT* valP, segT seg)\n {\n-  long val = * (long *) valP;\n+  long val = *valP;\n   char *p_lit = fixP->fx_where + fixP->fx_frag->fr_literal;\n \n+  if (fixP->fx_addsy == NULL)\n+    fixP->fx_done = 1;\n+  else if (fixP->fx_pcrel)\n+    {\n+      segT s = S_GET_SEGMENT (fixP->fx_addsy);\n+      if (s == seg || s == absolute_section)\n+\t{\n+\t  val += S_GET_VALUE (fixP->fx_addsy);\n+\t  fixP->fx_done = 1;\n+\t}\n+    }\n+\n   switch (fixP->fx_r_type)\n     {\n     case BFD_RELOC_8_PCREL:\n-      if (fixP->fx_addsy)\n-        {\n-          fixP->fx_no_overflow = 1;\n-          fixP->fx_done = 0;\n-        }\n-      else\n-        {\n-\t  fixP->fx_no_overflow = (-128 <= val && val < 128);\n-\t  if (!fixP->fx_no_overflow)\n-            as_bad_where (fixP->fx_file, fixP->fx_line,\n-\t\t\t  _(\"relative jump out of range\"));\n-\t  *p_lit++ = val;\n-          fixP->fx_done = 1;\n-        }\n+    case BFD_RELOC_Z80_DISP8:\n+    case BFD_RELOC_8:\n+    case BFD_RELOC_16:\n+    case BFD_RELOC_24:\n+    case BFD_RELOC_32:\n+    case BFD_RELOC_Z80_16_BE:\n+      fixP->fx_no_overflow = 0;\n+      break;\n+    default:\n+      fixP->fx_no_overflow = 1;\n       break;\n+    }\n \n+  switch (fixP->fx_r_type)\n+    {\n+    case BFD_RELOC_8_PCREL:\n     case BFD_RELOC_Z80_DISP8:\n-      if (fixP->fx_addsy)\n-        {\n-          fixP->fx_no_overflow = 1;\n-          fixP->fx_done = 0;\n-        }\n-      else\n-        {\n-\t  fixP->fx_no_overflow = (-128 <= val && val < 128);\n-\t  if (!fixP->fx_no_overflow)\n-            as_bad_where (fixP->fx_file, fixP->fx_line,\n-\t\t\t  _(\"index offset out of range\"));\n-\t  *p_lit++ = val;\n-          fixP->fx_done = 1;\n-        }\n+      if (fixP->fx_done && (val < -0x80 || val > 0x7f))\n+\tas_bad_where (fixP->fx_file, fixP->fx_line,\n+\t\t      _(\"8-bit signed offset out of range (%+ld)\"), val);\n+      *p_lit++ = val;\n       break;\n \n     case BFD_RELOC_Z80_BYTE0:\n       *p_lit++ = val;\n-      fixP->fx_no_overflow = 1;\n-      if (fixP->fx_addsy == NULL)\n-        fixP->fx_done = 1;\n       break;\n \n     case BFD_RELOC_Z80_BYTE1:\n       *p_lit++ = (val >> 8);\n-      fixP->fx_no_overflow = 1;\n-      if (fixP->fx_addsy == NULL)\n-        fixP->fx_done = 1;\n       break;\n \n     case BFD_RELOC_Z80_BYTE2:\n       *p_lit++ = (val >> 16);\n-      fixP->fx_no_overflow = 1;\n-      if (fixP->fx_addsy == NULL)\n-        fixP->fx_done = 1;\n       break;\n \n     case BFD_RELOC_Z80_BYTE3:\n       *p_lit++ = (val >> 24);\n-      fixP->fx_no_overflow = 1;\n-      if (fixP->fx_addsy == NULL)\n-        fixP->fx_done = 1;\n       break;\n \n     case BFD_RELOC_8:\n-      if (val > 255 || val < -128)\n-\tas_warn_where (fixP->fx_file, fixP->fx_line, _(\"overflow\"));\n+      if (fixP->fx_done && is_overflow(val, 8))\n+\tas_warn_where (fixP->fx_file, fixP->fx_line,\n+\t\t       _(\"8-bit overflow (%+ld)\"), val);\n       *p_lit++ = val;\n-      fixP->fx_no_overflow = 1;\n-      if (fixP->fx_addsy == NULL)\n-\tfixP->fx_done = 1;\n       break;\n \n     case BFD_RELOC_Z80_WORD1:\n       *p_lit++ = (val >> 16);\n       *p_lit++ = (val >> 24);\n-      fixP->fx_no_overflow = 1;\n-      if (fixP->fx_addsy == NULL)\n-        fixP->fx_done = 1;\n       break;\n \n     case BFD_RELOC_Z80_WORD0:\n+      *p_lit++ = val;\n+      *p_lit++ = (val >> 8);\n+      break;\n+\n     case BFD_RELOC_16:\n+      if (fixP->fx_done && is_overflow(val, 16))\n+\tas_warn_where (fixP->fx_file, fixP->fx_line,\n+\t\t       _(\"16-bit overflow (%+ld)\"), val);\n       *p_lit++ = val;\n       *p_lit++ = (val >> 8);\n-      fixP->fx_no_overflow = 1;\n-      if (fixP->fx_addsy == NULL)\n-\tfixP->fx_done = 1;\n       break;\n \n     case BFD_RELOC_24: /* Def24 may produce this.  */\n+      if (fixP->fx_done && is_overflow(val, 24))\n+\tas_warn_where (fixP->fx_file, fixP->fx_line,\n+\t\t       _(\"24-bit overflow (%+ld)\"), val);\n       *p_lit++ = val;\n       *p_lit++ = (val >> 8);\n       *p_lit++ = (val >> 16);\n-      fixP->fx_no_overflow = 1;\n-      if (fixP->fx_addsy == NULL)\n-\tfixP->fx_done = 1;\n       break;\n \n     case BFD_RELOC_32: /* Def32 and .long may produce this.  */\n+      if (fixP->fx_done && is_overflow(val, 32))\n+\tas_warn_where (fixP->fx_file, fixP->fx_line,\n+\t\t       _(\"32-bit overflow (%+ld)\"), val);\n       *p_lit++ = val;\n       *p_lit++ = (val >> 8);\n       *p_lit++ = (val >> 16);\n       *p_lit++ = (val >> 24);\n-      if (fixP->fx_addsy == NULL)\n-\tfixP->fx_done = 1;\n+      break;\n+\n+    case BFD_RELOC_Z80_16_BE: /* Z80N PUSH nn instruction produce this.  */\n+      *p_lit++ = val >> 8;\n+      *p_lit++ = val;\n       break;\n \n     default:\n-      printf (_(\"md_apply_fix: unknown r_type 0x%x\\n\"), fixP->fx_r_type);\n+      printf (_(\"md_apply_fix: unknown reloc type 0x%x\\n\"), fixP->fx_r_type);\n       abort ();\n     }\n }\n@@ -3446,20 +3761,29 @@ tc_gen_reloc (asection *seg ATTRIBUTE_UNUSED , fixS *fixp)\n {\n   arelent *reloc;\n \n-  if (! bfd_reloc_type_lookup (stdoutput, fixp->fx_r_type))\n+  if (fixp->fx_subsy != NULL)\n     {\n-      as_bad_where (fixp->fx_file, fixp->fx_line,\n-\t\t    _(\"reloc %d not supported by object file format\"),\n-\t\t    (int) fixp->fx_r_type);\n+      as_bad_where (fixp->fx_file, fixp->fx_line, _(\"expression too complex\"));\n       return NULL;\n     }\n \n   reloc               = XNEW (arelent);\n   reloc->sym_ptr_ptr  = XNEW (asymbol *);\n   *reloc->sym_ptr_ptr = symbol_get_bfdsym (fixp->fx_addsy);\n   reloc->address      = fixp->fx_frag->fr_address + fixp->fx_where;\n-  reloc->howto        = bfd_reloc_type_lookup (stdoutput, fixp->fx_r_type);\n   reloc->addend       = fixp->fx_offset;\n+  reloc->howto        = bfd_reloc_type_lookup (stdoutput, fixp->fx_r_type);\n+  if (reloc->howto == NULL)\n+    {\n+      as_bad_where (fixp->fx_file, fixp->fx_line,\n+\t\t    _(\"reloc %d not supported by object file format\"),\n+\t\t    (int) fixp->fx_r_type);\n+      return NULL;\n+    }\n+\n+  if (fixp->fx_r_type == BFD_RELOC_VTABLE_INHERIT\n+      || fixp->fx_r_type == BFD_RELOC_VTABLE_ENTRY)\n+    reloc->address = fixp->fx_offset;\n \n   return reloc;\n }\n@@ -3712,3 +4036,49 @@ str_to_ieee754_d(char *litP, int *sizeP)\n {\n   return ieee_md_atof ('d', litP, sizeP, FALSE);\n }\n+\n+#ifdef TARGET_USE_CFIPOP\n+/* Initialize the DWARF-2 unwind information for this procedure. */\n+void\n+z80_tc_frame_initial_instructions (void)\n+{\n+  static int sp_regno = -1;\n+\n+  if (sp_regno < 0)\n+    sp_regno = z80_tc_regname_to_dw2regnum (\"sp\");\n+\n+  cfi_add_CFA_def_cfa (sp_regno, 0);\n+}\n+\n+int\n+z80_tc_regname_to_dw2regnum (const char *regname)\n+{\n+  static const char *regs[] =\n+    { /* same registers as for GDB */\n+      \"af\", \"bc\", \"de\", \"hl\",\n+      \"sp\", \"pc\", \"ix\", \"iy\",\n+      \"af_\", \"bc_\", \"de_\", \"hl_\",\n+      \"ir\"\n+    };\n+  unsigned i;\n+\n+  for (i = 0; i < ARRAY_SIZE(regs); ++i)\n+    if (!strcasecmp (regs[i], regname))\n+      return i;\n+\n+  return -1;\n+}\n+#endif\n+\n+/* Implement DWARF2_ADDR_SIZE.  */\n+int\n+z80_dwarf2_addr_size (const bfd *abfd)\n+{\n+  switch (bfd_get_mach (abfd))\n+    {\n+    case bfd_mach_ez80_adl:\n+      return 3;\n+    default:\n+      return 2;\n+    }\n+}"
    },
    {
      "sha": "d169d09946ee6d69ea6dca2b86729031b1efb173",
      "filename": "gas/config/tc-z80.h",
      "status": "modified",
      "additions": 20,
      "deletions": 1,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/config/tc-z80.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/config/tc-z80.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-z80.h?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -29,7 +29,6 @@\n #endif\n #define BFD_ARCH      TARGET_ARCH\n #define COFF_MAGIC    0x5A80\n-#define TARGET_MACH   0\n #define TARGET_BYTES_BIG_ENDIAN  0\n \n /* If you define this macro, GAS will warn about the\n@@ -116,4 +115,24 @@ extern int z80_tc_label_is_local (const char *name);\n #define elf_tc_final_processing\tz80_elf_final_processing\n extern void z80_elf_final_processing (void);\n \n+/* Define the column that represents the PC.  */\n+#define DWARF2_DEFAULT_RETURN_COLUMN\t5\n+\n+/* The stack grows down, and is only byte aligned.  */\n+#define DWARF2_CIE_DATA_ALIGNMENT\t-1\n+\n+/* Z80 instructions are 1 or 4 bytes long.  */\n+#define DWARF2_LINE_MIN_INSN_LENGTH\t1\n+\n+/* 16 bits addresses are used on Z80.  */\n+#define DWARF2_ADDR_SIZE(bfd)\t\tz80_dwarf2_addr_size(bfd)\n+extern int z80_dwarf2_addr_size (const bfd *abfd);\n+\n+/* CFI hooks.  */\n+#define tc_cfi_frame_initial_instructions z80_tc_frame_initial_instructions\n+extern void z80_tc_frame_initial_instructions (void);\n+\n+#define tc_regname_to_dw2regnum z80_tc_regname_to_dw2regnum\n+extern int z80_tc_regname_to_dw2regnum (const char *regname);\n+\n #endif"
    },
    {
      "sha": "e768e38c7ae89e168624608e630e227f73222eee",
      "filename": "gas/doc/c-z80.texi",
      "status": "modified",
      "additions": 15,
      "deletions": 7,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/doc/c-z80.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/doc/c-z80.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-z80.texi?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -31,19 +31,19 @@\n @table @gcctabopt\n @cindex @code{-z80} command-line option, Z80\n @item -z80\n-Produce code for the Z80 processor. By default accepted undocumented\n-operations with halves of index registers (@code{IXL}, @code{IXH}, @code{IYL}, @code{IYH}) and\n-instuction @code{IN F,(C)}. Other useful undocumented instructions produces\n-warnings. Undocumented instructions may not work on some CPUs, use\n-them on your own risk.\n+Produce code for the Zilog Z80 processor. By default accepted undocumented\n+operations with halves of index registers (@code{IXL}, @code{IXH}, @code{IYL},\n+@code{IYH}) and instuction @code{IN F,(C)}. Other useful undocumented\n+instructions produces warnings. Undocumented instructions may not work on some\n+CPUs, use them on your own risk.\n \n @cindex @code{-r800} command-line option, Z80\n @item -r800\n-Produce code for the R800 processor.\n+Produce code for the Ascii R800 processor.\n \n @cindex @code{-z180} command-line option, Z80\n @item -z180\n-Produce code for the Z180 processor.\n+Produce code for the Zilog Z180 processor.\n \n @cindex @code{-ez80} command-line option, Z80\n @item -ez80\n@@ -53,6 +53,14 @@ Produce code for the eZ80 processor in Z80 memory mode by default.\n @item -ez80-adl\n Produce code for the eZ80 processor in ADL memory mode by default.\n \n+@cindex @code{-gbz80} command-line option, Z80\n+@item -gbz80\n+Produce code for the GameBoy Z80 processor.\n+\n+@cindex @code{-z80n} command-line option, Z80\n+@item -z80n\n+Produce code for the Z80N processor.\n+\n @cindex @code{-local-prefix} command-line option, Z80\n @item  -local-prefix=@var{prefix}\n Mark all labels with specified prefix as local. But such label can be"
    },
    {
      "sha": "0bb5db09bd88e01ef4eb7b0b82c8a91c3e284f91",
      "filename": "gas/testsuite/gas/z80/gbz80_all.d",
      "status": "added",
      "additions": 514,
      "deletions": 0,
      "changes": 514,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/testsuite/gas/z80/gbz80_all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/testsuite/gas/z80/gbz80_all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/gbz80_all.d?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -0,0 +1,514 @@\n+#as: -gbz80\n+#objdump: -d\n+#name: GBZ80 instruction set\n+\n+.*: .*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+[0-9a-f]+:\\s+00\\s+nop\n+\\s+[0-9a-f]+:\\s+01 af be\\s+ld bc,0xbeaf\n+\\s+[0-9a-f]+:\\s+02\\s+ld \\(bc\\),a\n+\\s+[0-9a-f]+:\\s+03\\s+inc bc\n+\\s+[0-9a-f]+:\\s+04\\s+inc b\n+\\s+[0-9a-f]+:\\s+05\\s+dec b\n+\\s+[0-9a-f]+:\\s+06 fd\\s+ld b,0xfd\n+\\s+[0-9a-f]+:\\s+07\\s+rlca\n+\\s+[0-9a-f]+:\\s+08 af be\\s+ld \\(0xbeaf\\),sp\n+\\s+[0-9a-f]+:\\s+09\\s+add hl,bc\n+\\s+[0-9a-f]+:\\s+0a\\s+ld a,\\(bc\\)\n+\\s+[0-9a-f]+:\\s+0b\\s+dec bc\n+\\s+[0-9a-f]+:\\s+0c\\s+inc c\n+\\s+[0-9a-f]+:\\s+0d\\s+dec c\n+\\s+[0-9a-f]+:\\s+0e fd\\s+ld c,0xfd\n+\\s+[0-9a-f]+:\\s+0f\\s+rrca\n+\\s+[0-9a-f]+:\\s+10\\s+stop\n+\\s+[0-9a-f]+:\\s+11 af be\\s+ld de,0xbeaf\n+\\s+[0-9a-f]+:\\s+12\\s+ld \\(de\\),a\n+\\s+[0-9a-f]+:\\s+13\\s+inc de\n+\\s+[0-9a-f]+:\\s+14\\s+inc d\n+\\s+[0-9a-f]+:\\s+15\\s+dec d\n+\\s+[0-9a-f]+:\\s+16 fd\\s+ld d,0xfd\n+\\s+[0-9a-f]+:\\s+17\\s+rla\n+\\s+[0-9a-f]+:\\s+18 0a\\s+jr 0x002d\n+\\s+[0-9a-f]+:\\s+19\\s+add hl,de\n+\\s+[0-9a-f]+:\\s+1a\\s+ld a,\\(de\\)\n+\\s+[0-9a-f]+:\\s+1b\\s+dec de\n+\\s+[0-9a-f]+:\\s+1c\\s+inc e\n+\\s+[0-9a-f]+:\\s+1d\\s+dec e\n+\\s+[0-9a-f]+:\\s+1e fd\\s+ld e,0xfd\n+\\s+[0-9a-f]+:\\s+1f\\s+rra\n+\\s+[0-9a-f]+:\\s+20 0a\\s+jr nz,0x0037\n+\\s+[0-9a-f]+:\\s+21 af be\\s+ld hl,0xbeaf\n+\\s+[0-9a-f]+:\\s+22\\s+ld \\(hl\\+\\),a\n+\\s+[0-9a-f]+:\\s+22\\s+ld \\(hl\\+\\),a\n+\\s+[0-9a-f]+:\\s+23\\s+inc hl\n+\\s+[0-9a-f]+:\\s+24\\s+inc h\n+\\s+[0-9a-f]+:\\s+25\\s+dec h\n+\\s+[0-9a-f]+:\\s+26 fd\\s+ld h,0xfd\n+\\s+[0-9a-f]+:\\s+27\\s+daa\n+\\s+[0-9a-f]+:\\s+28 0a\\s+jr z,0x0044\n+\\s+[0-9a-f]+:\\s+29\\s+add hl,hl\n+\\s+[0-9a-f]+:\\s+2a\\s+ld a,\\(hl\\+\\)\n+\\s+[0-9a-f]+:\\s+2a\\s+ld a,\\(hl\\+\\)\n+\\s+[0-9a-f]+:\\s+2b\\s+dec hl\n+\\s+[0-9a-f]+:\\s+2c\\s+inc l\n+\\s+[0-9a-f]+:\\s+2d\\s+dec l\n+\\s+[0-9a-f]+:\\s+2e fd\\s+ld l,0xfd\n+\\s+[0-9a-f]+:\\s+2f\\s+cpl\n+\\s+[0-9a-f]+:\\s+30 0a\\s+jr nc,0x004f\n+\\s+[0-9a-f]+:\\s+31 af be\\s+ld sp,0xbeaf\n+\\s+[0-9a-f]+:\\s+32\\s+ld \\(hl-\\),a\n+\\s+[0-9a-f]+:\\s+32\\s+ld \\(hl-\\),a\n+\\s+[0-9a-f]+:\\s+33\\s+inc sp\n+\\s+[0-9a-f]+:\\s+34\\s+inc \\(hl\\)\n+\\s+[0-9a-f]+:\\s+35\\s+dec \\(hl\\)\n+\\s+[0-9a-f]+:\\s+36 fd\\s+ld \\(hl\\),0xfd\n+\\s+[0-9a-f]+:\\s+37\\s+scf\n+\\s+[0-9a-f]+:\\s+38 0a\\s+jr c,0x005c\n+\\s+[0-9a-f]+:\\s+39\\s+add hl,sp\n+\\s+[0-9a-f]+:\\s+3a\\s+ld a,\\(hl-\\)\n+\\s+[0-9a-f]+:\\s+3a\\s+ld a,\\(hl-\\)\n+\\s+[0-9a-f]+:\\s+3b\\s+dec sp\n+\\s+[0-9a-f]+:\\s+3c\\s+inc a\n+\\s+[0-9a-f]+:\\s+3d\\s+dec a\n+\\s+[0-9a-f]+:\\s+3e fd\\s+ld a,0xfd\n+\\s+[0-9a-f]+:\\s+3f\\s+ccf\n+\\s+[0-9a-f]+:\\s+40\\s+ld b,b\n+\\s+[0-9a-f]+:\\s+41\\s+ld b,c\n+\\s+[0-9a-f]+:\\s+42\\s+ld b,d\n+\\s+[0-9a-f]+:\\s+43\\s+ld b,e\n+\\s+[0-9a-f]+:\\s+44\\s+ld b,h\n+\\s+[0-9a-f]+:\\s+45\\s+ld b,l\n+\\s+[0-9a-f]+:\\s+46\\s+ld b,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+47\\s+ld b,a\n+\\s+[0-9a-f]+:\\s+48\\s+ld c,b\n+\\s+[0-9a-f]+:\\s+49\\s+ld c,c\n+\\s+[0-9a-f]+:\\s+4a\\s+ld c,d\n+\\s+[0-9a-f]+:\\s+4b\\s+ld c,e\n+\\s+[0-9a-f]+:\\s+4c\\s+ld c,h\n+\\s+[0-9a-f]+:\\s+4d\\s+ld c,l\n+\\s+[0-9a-f]+:\\s+4e\\s+ld c,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+4f\\s+ld c,a\n+\\s+[0-9a-f]+:\\s+50\\s+ld d,b\n+\\s+[0-9a-f]+:\\s+51\\s+ld d,c\n+\\s+[0-9a-f]+:\\s+52\\s+ld d,d\n+\\s+[0-9a-f]+:\\s+53\\s+ld d,e\n+\\s+[0-9a-f]+:\\s+54\\s+ld d,h\n+\\s+[0-9a-f]+:\\s+55\\s+ld d,l\n+\\s+[0-9a-f]+:\\s+56\\s+ld d,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+57\\s+ld d,a\n+\\s+[0-9a-f]+:\\s+58\\s+ld e,b\n+\\s+[0-9a-f]+:\\s+59\\s+ld e,c\n+\\s+[0-9a-f]+:\\s+5a\\s+ld e,d\n+\\s+[0-9a-f]+:\\s+5b\\s+ld e,e\n+\\s+[0-9a-f]+:\\s+5c\\s+ld e,h\n+\\s+[0-9a-f]+:\\s+5d\\s+ld e,l\n+\\s+[0-9a-f]+:\\s+5e\\s+ld e,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+5f\\s+ld e,a\n+\\s+[0-9a-f]+:\\s+60\\s+ld h,b\n+\\s+[0-9a-f]+:\\s+61\\s+ld h,c\n+\\s+[0-9a-f]+:\\s+62\\s+ld h,d\n+\\s+[0-9a-f]+:\\s+63\\s+ld h,e\n+\\s+[0-9a-f]+:\\s+64\\s+ld h,h\n+\\s+[0-9a-f]+:\\s+65\\s+ld h,l\n+\\s+[0-9a-f]+:\\s+66\\s+ld h,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+67\\s+ld h,a\n+\\s+[0-9a-f]+:\\s+68\\s+ld l,b\n+\\s+[0-9a-f]+:\\s+69\\s+ld l,c\n+\\s+[0-9a-f]+:\\s+6a\\s+ld l,d\n+\\s+[0-9a-f]+:\\s+6b\\s+ld l,e\n+\\s+[0-9a-f]+:\\s+6c\\s+ld l,h\n+\\s+[0-9a-f]+:\\s+6d\\s+ld l,l\n+\\s+[0-9a-f]+:\\s+6e\\s+ld l,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+6f\\s+ld l,a\n+\\s+[0-9a-f]+:\\s+70\\s+ld \\(hl\\),b\n+\\s+[0-9a-f]+:\\s+71\\s+ld \\(hl\\),c\n+\\s+[0-9a-f]+:\\s+72\\s+ld \\(hl\\),d\n+\\s+[0-9a-f]+:\\s+73\\s+ld \\(hl\\),e\n+\\s+[0-9a-f]+:\\s+74\\s+ld \\(hl\\),h\n+\\s+[0-9a-f]+:\\s+75\\s+ld \\(hl\\),l\n+\\s+[0-9a-f]+:\\s+76\\s+halt\n+\\s+[0-9a-f]+:\\s+77\\s+ld \\(hl\\),a\n+\\s+[0-9a-f]+:\\s+78\\s+ld a,b\n+\\s+[0-9a-f]+:\\s+79\\s+ld a,c\n+\\s+[0-9a-f]+:\\s+7a\\s+ld a,d\n+\\s+[0-9a-f]+:\\s+7b\\s+ld a,e\n+\\s+[0-9a-f]+:\\s+7c\\s+ld a,h\n+\\s+[0-9a-f]+:\\s+7d\\s+ld a,l\n+\\s+[0-9a-f]+:\\s+7e\\s+ld a,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+7f\\s+ld a,a\n+\\s+[0-9a-f]+:\\s+80\\s+add a,b\n+\\s+[0-9a-f]+:\\s+81\\s+add a,c\n+\\s+[0-9a-f]+:\\s+82\\s+add a,d\n+\\s+[0-9a-f]+:\\s+83\\s+add a,e\n+\\s+[0-9a-f]+:\\s+84\\s+add a,h\n+\\s+[0-9a-f]+:\\s+85\\s+add a,l\n+\\s+[0-9a-f]+:\\s+86\\s+add a,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+87\\s+add a,a\n+\\s+[0-9a-f]+:\\s+88\\s+adc a,b\n+\\s+[0-9a-f]+:\\s+89\\s+adc a,c\n+\\s+[0-9a-f]+:\\s+8a\\s+adc a,d\n+\\s+[0-9a-f]+:\\s+8b\\s+adc a,e\n+\\s+[0-9a-f]+:\\s+8c\\s+adc a,h\n+\\s+[0-9a-f]+:\\s+8d\\s+adc a,l\n+\\s+[0-9a-f]+:\\s+8e\\s+adc a,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+8f\\s+adc a,a\n+\\s+[0-9a-f]+:\\s+90\\s+sub a,b\n+\\s+[0-9a-f]+:\\s+91\\s+sub a,c\n+\\s+[0-9a-f]+:\\s+92\\s+sub a,d\n+\\s+[0-9a-f]+:\\s+93\\s+sub a,e\n+\\s+[0-9a-f]+:\\s+94\\s+sub a,h\n+\\s+[0-9a-f]+:\\s+95\\s+sub a,l\n+\\s+[0-9a-f]+:\\s+96\\s+sub a,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+97\\s+sub a,a\n+\\s+[0-9a-f]+:\\s+98\\s+sbc a,b\n+\\s+[0-9a-f]+:\\s+99\\s+sbc a,c\n+\\s+[0-9a-f]+:\\s+9a\\s+sbc a,d\n+\\s+[0-9a-f]+:\\s+9b\\s+sbc a,e\n+\\s+[0-9a-f]+:\\s+9c\\s+sbc a,h\n+\\s+[0-9a-f]+:\\s+9d\\s+sbc a,l\n+\\s+[0-9a-f]+:\\s+9e\\s+sbc a,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+9f\\s+sbc a,a\n+\\s+[0-9a-f]+:\\s+a0\\s+and b\n+\\s+[0-9a-f]+:\\s+a1\\s+and c\n+\\s+[0-9a-f]+:\\s+a2\\s+and d\n+\\s+[0-9a-f]+:\\s+a3\\s+and e\n+\\s+[0-9a-f]+:\\s+a4\\s+and h\n+\\s+[0-9a-f]+:\\s+a5\\s+and l\n+\\s+[0-9a-f]+:\\s+a6\\s+and \\(hl\\)\n+\\s+[0-9a-f]+:\\s+a7\\s+and a\n+\\s+[0-9a-f]+:\\s+a8\\s+xor b\n+\\s+[0-9a-f]+:\\s+a9\\s+xor c\n+\\s+[0-9a-f]+:\\s+aa\\s+xor d\n+\\s+[0-9a-f]+:\\s+ab\\s+xor e\n+\\s+[0-9a-f]+:\\s+ac\\s+xor h\n+\\s+[0-9a-f]+:\\s+ad\\s+xor l\n+\\s+[0-9a-f]+:\\s+ae\\s+xor \\(hl\\)\n+\\s+[0-9a-f]+:\\s+af\\s+xor a\n+\\s+[0-9a-f]+:\\s+b0\\s+or b\n+\\s+[0-9a-f]+:\\s+b1\\s+or c\n+\\s+[0-9a-f]+:\\s+b2\\s+or d\n+\\s+[0-9a-f]+:\\s+b3\\s+or e\n+\\s+[0-9a-f]+:\\s+b4\\s+or h\n+\\s+[0-9a-f]+:\\s+b5\\s+or l\n+\\s+[0-9a-f]+:\\s+b6\\s+or \\(hl\\)\n+\\s+[0-9a-f]+:\\s+b7\\s+or a\n+\\s+[0-9a-f]+:\\s+b8\\s+cp b\n+\\s+[0-9a-f]+:\\s+b9\\s+cp c\n+\\s+[0-9a-f]+:\\s+ba\\s+cp d\n+\\s+[0-9a-f]+:\\s+bb\\s+cp e\n+\\s+[0-9a-f]+:\\s+bc\\s+cp h\n+\\s+[0-9a-f]+:\\s+bd\\s+cp l\n+\\s+[0-9a-f]+:\\s+be\\s+cp \\(hl\\)\n+\\s+[0-9a-f]+:\\s+bf\\s+cp a\n+\\s+[0-9a-f]+:\\s+c0\\s+ret nz\n+\\s+[0-9a-f]+:\\s+c1\\s+pop bc\n+\\s+[0-9a-f]+:\\s+c2 af be\\s+jp nz,0xbeaf\n+\\s+[0-9a-f]+:\\s+c3 af be\\s+jp 0xbeaf\n+\\s+[0-9a-f]+:\\s+c4 af be\\s+call nz,0xbeaf\n+\\s+[0-9a-f]+:\\s+c5\\s+push bc\n+\\s+[0-9a-f]+:\\s+c6 fd\\s+add a,0xfd\n+\\s+[0-9a-f]+:\\s+c7\\s+rst 0x00\n+\\s+[0-9a-f]+:\\s+c8\\s+ret z\n+\\s+[0-9a-f]+:\\s+c9\\s+ret\n+\\s+[0-9a-f]+:\\s+ca af be\\s+jp z,0xbeaf\n+\\s+[0-9a-f]+:\\s+00\\s+nop\n+\\s+[0-9a-f]+:\\s+cc af be\\s+call z,0xbeaf\n+\\s+[0-9a-f]+:\\s+cd af be\\s+call 0xbeaf\n+\\s+[0-9a-f]+:\\s+ce fd\\s+adc a,0xfd\n+\\s+[0-9a-f]+:\\s+cf\\s+rst 0x08\n+\\s+[0-9a-f]+:\\s+d0\\s+ret nc\n+\\s+[0-9a-f]+:\\s+d1\\s+pop de\n+\\s+[0-9a-f]+:\\s+d2 af be\\s+jp nc,0xbeaf\n+\\s+[0-9a-f]+:\\s+d4 af be\\s+call nc,0xbeaf\n+\\s+[0-9a-f]+:\\s+d5\\s+push de\n+\\s+[0-9a-f]+:\\s+d6 fd\\s+sub a,0xfd\n+\\s+[0-9a-f]+:\\s+d7\\s+rst 0x10\n+\\s+[0-9a-f]+:\\s+d8\\s+ret c\n+\\s+[0-9a-f]+:\\s+d9\\s+reti\n+\\s+[0-9a-f]+:\\s+da af be\\s+jp c,0xbeaf\n+\\s+[0-9a-f]+:\\s+dc af be\\s+call c,0xbeaf\n+\\s+[0-9a-f]+:\\s+de fd\\s+sbc a,0xfd\n+\\s+[0-9a-f]+:\\s+df\\s+rst 0x18\n+\\s+[0-9a-f]+:\\s+e0 fd\\s+ldh \\(0xfd\\),a\n+\\s+[0-9a-f]+:\\s+e1\\s+pop hl\n+\\s+[0-9a-f]+:\\s+e2\\s+ldh \\(c\\),a\n+\\s+[0-9a-f]+:\\s+e5\\s+push hl\n+\\s+[0-9a-f]+:\\s+e6 fd\\s+and 0xfd\n+\\s+[0-9a-f]+:\\s+e7\\s+rst 0x20\n+\\s+[0-9a-f]+:\\s+e8 f4\\s+add sp,-12\n+\\s+[0-9a-f]+:\\s+e9\\s+jp \\(hl\\)\n+\\s+[0-9a-f]+:\\s+ea af be\\s+ld \\(0xbeaf\\),a\n+\\s+[0-9a-f]+:\\s+ee fd\\s+xor 0xfd\n+\\s+[0-9a-f]+:\\s+ef\\s+rst 0x28\n+\\s+[0-9a-f]+:\\s+f0 fd\\s+ldh a,\\(0xfd\\)\n+\\s+[0-9a-f]+:\\s+f1\\s+pop af\n+\\s+[0-9a-f]+:\\s+f2\\s+ldh a,\\(c\\)\n+\\s+[0-9a-f]+:\\s+f3\\s+di\n+\\s+[0-9a-f]+:\\s+f5\\s+push af\n+\\s+[0-9a-f]+:\\s+f6 fd\\s+or 0xfd\n+\\s+[0-9a-f]+:\\s+f7\\s+rst 0x30\n+\\s+[0-9a-f]+:\\s+f8 f4\\s+ldhl sp,-12\n+\\s+[0-9a-f]+:\\s+f9\\s+ld sp,hl\n+\\s+[0-9a-f]+:\\s+fa af be\\s+ld a,\\(0xbeaf\\)\n+\\s+[0-9a-f]+:\\s+fb\\s+ei\n+\\s+[0-9a-f]+:\\s+fe fd\\s+cp 0xfd\n+\\s+[0-9a-f]+:\\s+ff\\s+rst 0x38\n+\\s+[0-9a-f]+:\\s+cb 00\\s+rlc b\n+\\s+[0-9a-f]+:\\s+cb 01\\s+rlc c\n+\\s+[0-9a-f]+:\\s+cb 02\\s+rlc d\n+\\s+[0-9a-f]+:\\s+cb 03\\s+rlc e\n+\\s+[0-9a-f]+:\\s+cb 04\\s+rlc h\n+\\s+[0-9a-f]+:\\s+cb 05\\s+rlc l\n+\\s+[0-9a-f]+:\\s+cb 06\\s+rlc \\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 07\\s+rlc a\n+\\s+[0-9a-f]+:\\s+cb 08\\s+rrc b\n+\\s+[0-9a-f]+:\\s+cb 09\\s+rrc c\n+\\s+[0-9a-f]+:\\s+cb 0a\\s+rrc d\n+\\s+[0-9a-f]+:\\s+cb 0b\\s+rrc e\n+\\s+[0-9a-f]+:\\s+cb 0c\\s+rrc h\n+\\s+[0-9a-f]+:\\s+cb 0d\\s+rrc l\n+\\s+[0-9a-f]+:\\s+cb 0e\\s+rrc \\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 0f\\s+rrc a\n+\\s+[0-9a-f]+:\\s+cb 10\\s+rl b\n+\\s+[0-9a-f]+:\\s+cb 11\\s+rl c\n+\\s+[0-9a-f]+:\\s+cb 12\\s+rl d\n+\\s+[0-9a-f]+:\\s+cb 13\\s+rl e\n+\\s+[0-9a-f]+:\\s+cb 14\\s+rl h\n+\\s+[0-9a-f]+:\\s+cb 15\\s+rl l\n+\\s+[0-9a-f]+:\\s+cb 16\\s+rl \\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 17\\s+rl a\n+\\s+[0-9a-f]+:\\s+cb 18\\s+rr b\n+\\s+[0-9a-f]+:\\s+cb 19\\s+rr c\n+\\s+[0-9a-f]+:\\s+cb 1a\\s+rr d\n+\\s+[0-9a-f]+:\\s+cb 1b\\s+rr e\n+\\s+[0-9a-f]+:\\s+cb 1c\\s+rr h\n+\\s+[0-9a-f]+:\\s+cb 1d\\s+rr l\n+\\s+[0-9a-f]+:\\s+cb 1e\\s+rr \\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 1f\\s+rr a\n+\\s+[0-9a-f]+:\\s+cb 20\\s+sla b\n+\\s+[0-9a-f]+:\\s+cb 21\\s+sla c\n+\\s+[0-9a-f]+:\\s+cb 22\\s+sla d\n+\\s+[0-9a-f]+:\\s+cb 23\\s+sla e\n+\\s+[0-9a-f]+:\\s+cb 24\\s+sla h\n+\\s+[0-9a-f]+:\\s+cb 25\\s+sla l\n+\\s+[0-9a-f]+:\\s+cb 26\\s+sla \\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 27\\s+sla a\n+\\s+[0-9a-f]+:\\s+cb 28\\s+sra b\n+\\s+[0-9a-f]+:\\s+cb 29\\s+sra c\n+\\s+[0-9a-f]+:\\s+cb 2a\\s+sra d\n+\\s+[0-9a-f]+:\\s+cb 2b\\s+sra e\n+\\s+[0-9a-f]+:\\s+cb 2c\\s+sra h\n+\\s+[0-9a-f]+:\\s+cb 2d\\s+sra l\n+\\s+[0-9a-f]+:\\s+cb 2e\\s+sra \\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 2f\\s+sra a\n+\\s+[0-9a-f]+:\\s+cb 30\\s+swap b\n+\\s+[0-9a-f]+:\\s+cb 31\\s+swap c\n+\\s+[0-9a-f]+:\\s+cb 32\\s+swap d\n+\\s+[0-9a-f]+:\\s+cb 33\\s+swap e\n+\\s+[0-9a-f]+:\\s+cb 34\\s+swap h\n+\\s+[0-9a-f]+:\\s+cb 35\\s+swap l\n+\\s+[0-9a-f]+:\\s+cb 36\\s+swap \\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 37\\s+swap a\n+\\s+[0-9a-f]+:\\s+cb 38\\s+srl b\n+\\s+[0-9a-f]+:\\s+cb 39\\s+srl c\n+\\s+[0-9a-f]+:\\s+cb 3a\\s+srl d\n+\\s+[0-9a-f]+:\\s+cb 3b\\s+srl e\n+\\s+[0-9a-f]+:\\s+cb 3c\\s+srl h\n+\\s+[0-9a-f]+:\\s+cb 3d\\s+srl l\n+\\s+[0-9a-f]+:\\s+cb 3e\\s+srl \\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 3f\\s+srl a\n+\\s+[0-9a-f]+:\\s+cb 40\\s+bit 0,b\n+\\s+[0-9a-f]+:\\s+cb 41\\s+bit 0,c\n+\\s+[0-9a-f]+:\\s+cb 42\\s+bit 0,d\n+\\s+[0-9a-f]+:\\s+cb 43\\s+bit 0,e\n+\\s+[0-9a-f]+:\\s+cb 44\\s+bit 0,h\n+\\s+[0-9a-f]+:\\s+cb 45\\s+bit 0,l\n+\\s+[0-9a-f]+:\\s+cb 46\\s+bit 0,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 47\\s+bit 0,a\n+\\s+[0-9a-f]+:\\s+cb 48\\s+bit 1,b\n+\\s+[0-9a-f]+:\\s+cb 49\\s+bit 1,c\n+\\s+[0-9a-f]+:\\s+cb 4a\\s+bit 1,d\n+\\s+[0-9a-f]+:\\s+cb 4b\\s+bit 1,e\n+\\s+[0-9a-f]+:\\s+cb 4c\\s+bit 1,h\n+\\s+[0-9a-f]+:\\s+cb 4d\\s+bit 1,l\n+\\s+[0-9a-f]+:\\s+cb 4e\\s+bit 1,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 4f\\s+bit 1,a\n+\\s+[0-9a-f]+:\\s+cb 50\\s+bit 2,b\n+\\s+[0-9a-f]+:\\s+cb 51\\s+bit 2,c\n+\\s+[0-9a-f]+:\\s+cb 52\\s+bit 2,d\n+\\s+[0-9a-f]+:\\s+cb 53\\s+bit 2,e\n+\\s+[0-9a-f]+:\\s+cb 54\\s+bit 2,h\n+\\s+[0-9a-f]+:\\s+cb 55\\s+bit 2,l\n+\\s+[0-9a-f]+:\\s+cb 56\\s+bit 2,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 57\\s+bit 2,a\n+\\s+[0-9a-f]+:\\s+cb 58\\s+bit 3,b\n+\\s+[0-9a-f]+:\\s+cb 59\\s+bit 3,c\n+\\s+[0-9a-f]+:\\s+cb 5a\\s+bit 3,d\n+\\s+[0-9a-f]+:\\s+cb 5b\\s+bit 3,e\n+\\s+[0-9a-f]+:\\s+cb 5c\\s+bit 3,h\n+\\s+[0-9a-f]+:\\s+cb 5d\\s+bit 3,l\n+\\s+[0-9a-f]+:\\s+cb 5e\\s+bit 3,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 5f\\s+bit 3,a\n+\\s+[0-9a-f]+:\\s+cb 60\\s+bit 4,b\n+\\s+[0-9a-f]+:\\s+cb 61\\s+bit 4,c\n+\\s+[0-9a-f]+:\\s+cb 62\\s+bit 4,d\n+\\s+[0-9a-f]+:\\s+cb 63\\s+bit 4,e\n+\\s+[0-9a-f]+:\\s+cb 64\\s+bit 4,h\n+\\s+[0-9a-f]+:\\s+cb 65\\s+bit 4,l\n+\\s+[0-9a-f]+:\\s+cb 66\\s+bit 4,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 67\\s+bit 4,a\n+\\s+[0-9a-f]+:\\s+cb 68\\s+bit 5,b\n+\\s+[0-9a-f]+:\\s+cb 69\\s+bit 5,c\n+\\s+[0-9a-f]+:\\s+cb 6a\\s+bit 5,d\n+\\s+[0-9a-f]+:\\s+cb 6b\\s+bit 5,e\n+\\s+[0-9a-f]+:\\s+cb 6c\\s+bit 5,h\n+\\s+[0-9a-f]+:\\s+cb 6d\\s+bit 5,l\n+\\s+[0-9a-f]+:\\s+cb 6e\\s+bit 5,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 6f\\s+bit 5,a\n+\\s+[0-9a-f]+:\\s+cb 70\\s+bit 6,b\n+\\s+[0-9a-f]+:\\s+cb 71\\s+bit 6,c\n+\\s+[0-9a-f]+:\\s+cb 72\\s+bit 6,d\n+\\s+[0-9a-f]+:\\s+cb 73\\s+bit 6,e\n+\\s+[0-9a-f]+:\\s+cb 74\\s+bit 6,h\n+\\s+[0-9a-f]+:\\s+cb 75\\s+bit 6,l\n+\\s+[0-9a-f]+:\\s+cb 76\\s+bit 6,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 77\\s+bit 6,a\n+\\s+[0-9a-f]+:\\s+cb 78\\s+bit 7,b\n+\\s+[0-9a-f]+:\\s+cb 79\\s+bit 7,c\n+\\s+[0-9a-f]+:\\s+cb 7a\\s+bit 7,d\n+\\s+[0-9a-f]+:\\s+cb 7b\\s+bit 7,e\n+\\s+[0-9a-f]+:\\s+cb 7c\\s+bit 7,h\n+\\s+[0-9a-f]+:\\s+cb 7d\\s+bit 7,l\n+\\s+[0-9a-f]+:\\s+cb 7e\\s+bit 7,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 7f\\s+bit 7,a\n+\\s+[0-9a-f]+:\\s+cb 80\\s+res 0,b\n+\\s+[0-9a-f]+:\\s+cb 81\\s+res 0,c\n+\\s+[0-9a-f]+:\\s+cb 82\\s+res 0,d\n+\\s+[0-9a-f]+:\\s+cb 83\\s+res 0,e\n+\\s+[0-9a-f]+:\\s+cb 84\\s+res 0,h\n+\\s+[0-9a-f]+:\\s+cb 85\\s+res 0,l\n+\\s+[0-9a-f]+:\\s+cb 86\\s+res 0,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 87\\s+res 0,a\n+\\s+[0-9a-f]+:\\s+cb 88\\s+res 1,b\n+\\s+[0-9a-f]+:\\s+cb 89\\s+res 1,c\n+\\s+[0-9a-f]+:\\s+cb 8a\\s+res 1,d\n+\\s+[0-9a-f]+:\\s+cb 8b\\s+res 1,e\n+\\s+[0-9a-f]+:\\s+cb 8c\\s+res 1,h\n+\\s+[0-9a-f]+:\\s+cb 8d\\s+res 1,l\n+\\s+[0-9a-f]+:\\s+cb 8e\\s+res 1,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 8f\\s+res 1,a\n+\\s+[0-9a-f]+:\\s+cb 90\\s+res 2,b\n+\\s+[0-9a-f]+:\\s+cb 91\\s+res 2,c\n+\\s+[0-9a-f]+:\\s+cb 92\\s+res 2,d\n+\\s+[0-9a-f]+:\\s+cb 93\\s+res 2,e\n+\\s+[0-9a-f]+:\\s+cb 94\\s+res 2,h\n+\\s+[0-9a-f]+:\\s+cb 95\\s+res 2,l\n+\\s+[0-9a-f]+:\\s+cb 96\\s+res 2,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 97\\s+res 2,a\n+\\s+[0-9a-f]+:\\s+cb 98\\s+res 3,b\n+\\s+[0-9a-f]+:\\s+cb 99\\s+res 3,c\n+\\s+[0-9a-f]+:\\s+cb 9a\\s+res 3,d\n+\\s+[0-9a-f]+:\\s+cb 9b\\s+res 3,e\n+\\s+[0-9a-f]+:\\s+cb 9c\\s+res 3,h\n+\\s+[0-9a-f]+:\\s+cb 9d\\s+res 3,l\n+\\s+[0-9a-f]+:\\s+cb 9e\\s+res 3,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb 9f\\s+res 3,a\n+\\s+[0-9a-f]+:\\s+cb a0\\s+res 4,b\n+\\s+[0-9a-f]+:\\s+cb a1\\s+res 4,c\n+\\s+[0-9a-f]+:\\s+cb a2\\s+res 4,d\n+\\s+[0-9a-f]+:\\s+cb a3\\s+res 4,e\n+\\s+[0-9a-f]+:\\s+cb a4\\s+res 4,h\n+\\s+[0-9a-f]+:\\s+cb a5\\s+res 4,l\n+\\s+[0-9a-f]+:\\s+cb a6\\s+res 4,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb a7\\s+res 4,a\n+\\s+[0-9a-f]+:\\s+cb a8\\s+res 5,b\n+\\s+[0-9a-f]+:\\s+cb a9\\s+res 5,c\n+\\s+[0-9a-f]+:\\s+cb aa\\s+res 5,d\n+\\s+[0-9a-f]+:\\s+cb ab\\s+res 5,e\n+\\s+[0-9a-f]+:\\s+cb ac\\s+res 5,h\n+\\s+[0-9a-f]+:\\s+cb ad\\s+res 5,l\n+\\s+[0-9a-f]+:\\s+cb ae\\s+res 5,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb af\\s+res 5,a\n+\\s+[0-9a-f]+:\\s+cb b0\\s+res 6,b\n+\\s+[0-9a-f]+:\\s+cb b1\\s+res 6,c\n+\\s+[0-9a-f]+:\\s+cb b2\\s+res 6,d\n+\\s+[0-9a-f]+:\\s+cb b3\\s+res 6,e\n+\\s+[0-9a-f]+:\\s+cb b4\\s+res 6,h\n+\\s+[0-9a-f]+:\\s+cb b5\\s+res 6,l\n+\\s+[0-9a-f]+:\\s+cb b6\\s+res 6,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb b7\\s+res 6,a\n+\\s+[0-9a-f]+:\\s+cb b8\\s+res 7,b\n+\\s+[0-9a-f]+:\\s+cb b9\\s+res 7,c\n+\\s+[0-9a-f]+:\\s+cb ba\\s+res 7,d\n+\\s+[0-9a-f]+:\\s+cb bb\\s+res 7,e\n+\\s+[0-9a-f]+:\\s+cb bc\\s+res 7,h\n+\\s+[0-9a-f]+:\\s+cb bd\\s+res 7,l\n+\\s+[0-9a-f]+:\\s+cb be\\s+res 7,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb bf\\s+res 7,a\n+\\s+[0-9a-f]+:\\s+cb c0\\s+set 0,b\n+\\s+[0-9a-f]+:\\s+cb c1\\s+set 0,c\n+\\s+[0-9a-f]+:\\s+cb c2\\s+set 0,d\n+\\s+[0-9a-f]+:\\s+cb c3\\s+set 0,e\n+\\s+[0-9a-f]+:\\s+cb c4\\s+set 0,h\n+\\s+[0-9a-f]+:\\s+cb c5\\s+set 0,l\n+\\s+[0-9a-f]+:\\s+cb c6\\s+set 0,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb c7\\s+set 0,a\n+\\s+[0-9a-f]+:\\s+cb c8\\s+set 1,b\n+\\s+[0-9a-f]+:\\s+cb c9\\s+set 1,c\n+\\s+[0-9a-f]+:\\s+cb ca\\s+set 1,d\n+\\s+[0-9a-f]+:\\s+cb cb\\s+set 1,e\n+\\s+[0-9a-f]+:\\s+cb cc\\s+set 1,h\n+\\s+[0-9a-f]+:\\s+cb cd\\s+set 1,l\n+\\s+[0-9a-f]+:\\s+cb ce\\s+set 1,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb cf\\s+set 1,a\n+\\s+[0-9a-f]+:\\s+cb d0\\s+set 2,b\n+\\s+[0-9a-f]+:\\s+cb d1\\s+set 2,c\n+\\s+[0-9a-f]+:\\s+cb d2\\s+set 2,d\n+\\s+[0-9a-f]+:\\s+cb d3\\s+set 2,e\n+\\s+[0-9a-f]+:\\s+cb d4\\s+set 2,h\n+\\s+[0-9a-f]+:\\s+cb d5\\s+set 2,l\n+\\s+[0-9a-f]+:\\s+cb d6\\s+set 2,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb d7\\s+set 2,a\n+\\s+[0-9a-f]+:\\s+cb d8\\s+set 3,b\n+\\s+[0-9a-f]+:\\s+cb d9\\s+set 3,c\n+\\s+[0-9a-f]+:\\s+cb da\\s+set 3,d\n+\\s+[0-9a-f]+:\\s+cb db\\s+set 3,e\n+\\s+[0-9a-f]+:\\s+cb dc\\s+set 3,h\n+\\s+[0-9a-f]+:\\s+cb dd\\s+set 3,l\n+\\s+[0-9a-f]+:\\s+cb de\\s+set 3,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb df\\s+set 3,a\n+\\s+[0-9a-f]+:\\s+cb e0\\s+set 4,b\n+\\s+[0-9a-f]+:\\s+cb e1\\s+set 4,c\n+\\s+[0-9a-f]+:\\s+cb e2\\s+set 4,d\n+\\s+[0-9a-f]+:\\s+cb e3\\s+set 4,e\n+\\s+[0-9a-f]+:\\s+cb e4\\s+set 4,h\n+\\s+[0-9a-f]+:\\s+cb e5\\s+set 4,l\n+\\s+[0-9a-f]+:\\s+cb e6\\s+set 4,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb e7\\s+set 4,a\n+\\s+[0-9a-f]+:\\s+cb e8\\s+set 5,b\n+\\s+[0-9a-f]+:\\s+cb e9\\s+set 5,c\n+\\s+[0-9a-f]+:\\s+cb ea\\s+set 5,d\n+\\s+[0-9a-f]+:\\s+cb eb\\s+set 5,e\n+\\s+[0-9a-f]+:\\s+cb ec\\s+set 5,h\n+\\s+[0-9a-f]+:\\s+cb ed\\s+set 5,l\n+\\s+[0-9a-f]+:\\s+cb ee\\s+set 5,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb ef\\s+set 5,a\n+\\s+[0-9a-f]+:\\s+cb f0\\s+set 6,b\n+\\s+[0-9a-f]+:\\s+cb f1\\s+set 6,c\n+\\s+[0-9a-f]+:\\s+cb f2\\s+set 6,d\n+\\s+[0-9a-f]+:\\s+cb f3\\s+set 6,e\n+\\s+[0-9a-f]+:\\s+cb f4\\s+set 6,h\n+\\s+[0-9a-f]+:\\s+cb f5\\s+set 6,l\n+\\s+[0-9a-f]+:\\s+cb f6\\s+set 6,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb f7\\s+set 6,a\n+\\s+[0-9a-f]+:\\s+cb f8\\s+set 7,b\n+\\s+[0-9a-f]+:\\s+cb f9\\s+set 7,c\n+\\s+[0-9a-f]+:\\s+cb fa\\s+set 7,d\n+\\s+[0-9a-f]+:\\s+cb fb\\s+set 7,e\n+\\s+[0-9a-f]+:\\s+cb fc\\s+set 7,h\n+\\s+[0-9a-f]+:\\s+cb fd\\s+set 7,l\n+\\s+[0-9a-f]+:\\s+cb fe\\s+set 7,\\(hl\\)\n+\\s+[0-9a-f]+:\\s+cb ff\\s+set 7,a"
    },
    {
      "sha": "8e9085e9608a0579bcbaf331f72d4acbdcc36e02",
      "filename": "gas/testsuite/gas/z80/gbz80_all.s",
      "status": "added",
      "additions": 519,
      "deletions": 0,
      "changes": 519,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/testsuite/gas/z80/gbz80_all.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/testsuite/gas/z80/gbz80_all.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/gbz80_all.s?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -0,0 +1,519 @@\n+\t.text\n+\t.org\t0\n+;;\tGame\tBoy\tZ80\topcode\ttest\n+\tnop\n+\tld\tbc,0xbeaf\n+\tld\t(bc),a\n+\tinc\tbc\n+\tinc\tb\n+\tdec\tb\n+\tld\tb,0xfd\n+\trlca\n+\tld\t(0xbeaf),sp\n+\tadd\thl,bc\n+\tld\ta,(bc)\n+\tdec\tbc\n+\tinc\tc\n+\tdec\tc\n+\tld\tc,0xfd\n+\trrca\n+\tstop\n+\tld\tde,0xbeaf\n+\tld\t(de),a\n+\tinc\tde\n+\tinc\td\n+\tdec\td\n+\tld\td,0xfd\n+\trla\n+\tjr\t.+12\n+\tadd\thl,de\n+\tld\ta,(de)\n+\tdec\tde\n+\tinc\te\n+\tdec\te\n+\tld\te,0xfd\n+\trra\n+\tjr\tnz,.+12\n+\tld\thl,0xbeaf\n+\tldi\t(hl),a\n+\tld\t(hl+),a\n+\tinc\thl\n+\tinc\th\n+\tdec\th\n+\tld\th,0xfd\n+\tdaa\n+\tjr\tz,.+12\n+\tadd\thl,hl\n+\tldi\ta,(hl)\n+\tld\ta,(hl+)\n+\tdec\thl\n+\tinc\tl\n+\tdec\tl\n+\tld\tl,0xfd\n+\tcpl\n+\tjr\tnc,.+12\n+\tld\tsp,0xbeaf\n+\tldd\t(hl),a\n+\tld\t(hl-),a\n+\tinc\tsp\n+\tinc\t(hl)\n+\tdec\t(hl)\n+\tld\t(hl),0xfd\n+\tscf\n+\tjr\tc,.+12\n+\tadd\thl,sp\n+\tldd\ta,(hl)\n+\tld\ta,(hl-)\n+\tdec\tsp\n+\tinc\ta\n+\tdec\ta\n+\tld\ta,0xfd\n+\tccf\n+\tld\tb,b\n+\tld\tb,c\n+\tld\tb,d\n+\tld\tb,e\n+\tld\tb,h\n+\tld\tb,l\n+\tld\tb,(hl)\n+\tld\tb,a\n+\tld\tc,b\n+\tld\tc,c\n+\tld\tc,d\n+\tld\tc,e\n+\tld\tc,h\n+\tld\tc,l\n+\tld\tc,(hl)\n+\tld\tc,a\n+\tld\td,b\n+\tld\td,c\n+\tld\td,d\n+\tld\td,e\n+\tld\td,h\n+\tld\td,l\n+\tld\td,(hl)\n+\tld\td,a\n+\tld\te,b\n+\tld\te,c\n+\tld\te,d\n+\tld\te,e\n+\tld\te,h\n+\tld\te,l\n+\tld\te,(hl)\n+\tld\te,a\n+\tld\th,b\n+\tld\th,c\n+\tld\th,d\n+\tld\th,e\n+\tld\th,h\n+\tld\th,l\n+\tld\th,(hl)\n+\tld\th,a\n+\tld\tl,b\n+\tld\tl,c\n+\tld\tl,d\n+\tld\tl,e\n+\tld\tl,h\n+\tld\tl,l\n+\tld\tl,(hl)\n+\tld\tl,a\n+\tld\t(hl),b\n+\tld\t(hl),c\n+\tld\t(hl),d\n+\tld\t(hl),e\n+\tld\t(hl),h\n+\tld\t(hl),l\n+\thalt\n+\tld\t(hl),a\n+\tld\ta,b\n+\tld\ta,c\n+\tld\ta,d\n+\tld\ta,e\n+\tld\ta,h\n+\tld\ta,l\n+\tld\ta,(hl)\n+\tld\ta,a\n+\tadd\ta,b\n+\tadd\ta,c\n+\tadd\ta,d\n+\tadd\ta,e\n+\tadd\ta,h\n+\tadd\ta,l\n+\tadd\ta,(hl)\n+\tadd\ta,a\n+\tadc\ta,b\n+\tadc\ta,c\n+\tadc\ta,d\n+\tadc\ta,e\n+\tadc\ta,h\n+\tadc\ta,l\n+\tadc\ta,(hl)\n+\tadc\ta,a\n+\tsub\ta,b\n+\tsub\ta,c\n+\tsub\ta,d\n+\tsub\ta,e\n+\tsub\ta,h\n+\tsub\ta,l\n+\tsub\ta,(hl)\n+\tsub\ta,a\n+\tsbc\ta,b\n+\tsbc\ta,c\n+\tsbc\ta,d\n+\tsbc\ta,e\n+\tsbc\ta,h\n+\tsbc\ta,l\n+\tsbc\ta,(hl)\n+\tsbc\ta,a\n+\tand\tb\n+\tand\tc\n+\tand\td\n+\tand\te\n+\tand\th\n+\tand\tl\n+\tand\t(hl)\n+\tand\ta\n+\txor\tb\n+\txor\tc\n+\txor\td\n+\txor\te\n+\txor\th\n+\txor\tl\n+\txor\t(hl)\n+\txor\ta\n+\tor\tb\n+\tor\tc\n+\tor\td\n+\tor\te\n+\tor\th\n+\tor\tl\n+\tor\t(hl)\n+\tor\ta\n+\tcp\tb\n+\tcp\tc\n+\tcp\td\n+\tcp\te\n+\tcp\th\n+\tcp\tl\n+\tcp\t(hl)\n+\tcp\ta\n+\tret\tnz\n+\tpop\tbc\n+\tjp\tnz,0xbeaf\n+\tjp\t0xbeaf\n+\tcall\tnz,0xbeaf\n+\tpush\tbc\n+\tadd\ta,0xfd\n+\trst\t0\n+\tret\tz\n+\tret\n+\tjp\tz,0xbeaf\n+\tnop\t\t;CB prefix\n+\tcall\tz,0xbeaf\n+\tcall\t0xbeaf\n+\tadc\ta,0xfd\n+\trst\t0x08\n+\tret\tnc\n+\tpop\tde\n+\tjp\tnc,0xbeaf\n+\t;xx\n+\tcall\tnc,0xbeaf\n+\tpush\tde\n+\tsub\ta,0xfd\n+\trst\t0x10\n+\tret\tc\n+\treti\n+\tjp\tc,0xbeaf\n+\t;xx\n+\tcall\tc,0xbeaf\n+\t;xx\n+\tsbc\ta,0xfd\n+\trst\t0x18\n+\tldh\t(0xfd),a\n+\tpop\thl\n+\tldh\t(c),a\n+\t;xx\n+\t;xx\n+\tpush\thl\n+\tand\t0xfd\n+\trst\t0x20\n+\tadd\tsp,-12\n+\tjp\t(hl)\n+\tld\t(0xbeaf),a\n+\t;xx\n+\t;xx\n+\t;xx\n+\txor\t0xfd\n+\trst\t0x28\n+\tldh\ta,(0xfd)\n+\tpop\taf\n+\tldh\ta,(c)\n+\tdi\n+\t;xx\n+\tpush\taf\n+\tor\t0xfd\n+\trst\t0x30\n+\tldhl\tsp,-12\n+\tld\tsp,hl\n+\tld\ta,(0xbeaf)\n+\tei\n+\t;xx\n+\t;xx\n+\tcp\t0xfd\n+\trst\t0x38\n+\trlc\tb\n+\trlc\tc\n+\trlc\td\n+\trlc\te\n+\trlc\th\n+\trlc\tl\n+\trlc\t(hl)\n+\trlc\ta\n+\trrc\tb\n+\trrc\tc\n+\trrc\td\n+\trrc\te\n+\trrc\th\n+\trrc\tl\n+\trrc\t(hl)\n+\trrc\ta\n+\trl\tb\n+\trl\tc\n+\trl\td\n+\trl\te\n+\trl\th\n+\trl\tl\n+\trl\t(hl)\n+\trl\ta\n+\trr\tb\n+\trr\tc\n+\trr\td\n+\trr\te\n+\trr\th\n+\trr\tl\n+\trr\t(hl)\n+\trr\ta\n+\tsla\tb\n+\tsla\tc\n+\tsla\td\n+\tsla\te\n+\tsla\th\n+\tsla\tl\n+\tsla\t(hl)\n+\tsla\ta\n+\tsra\tb\n+\tsra\tc\n+\tsra\td\n+\tsra\te\n+\tsra\th\n+\tsra\tl\n+\tsra\t(hl)\n+\tsra\ta\n+\tswap\tb\n+\tswap\tc\n+\tswap\td\n+\tswap\te\n+\tswap\th\n+\tswap\tl\n+\tswap\t(hl)\n+\tswap\ta\n+\tsrl\tb\n+\tsrl\tc\n+\tsrl\td\n+\tsrl\te\n+\tsrl\th\n+\tsrl\tl\n+\tsrl\t(hl)\n+\tsrl\ta\n+\tbit\t0,b\n+\tbit\t0,c\n+\tbit\t0,d\n+\tbit\t0,e\n+\tbit\t0,h\n+\tbit\t0,l\n+\tbit\t0,(hl)\n+\tbit\t0,a\n+\tbit\t1,b\n+\tbit\t1,c\n+\tbit\t1,d\n+\tbit\t1,e\n+\tbit\t1,h\n+\tbit\t1,l\n+\tbit\t1,(hl)\n+\tbit\t1,a\n+\tbit\t2,b\n+\tbit\t2,c\n+\tbit\t2,d\n+\tbit\t2,e\n+\tbit\t2,h\n+\tbit\t2,l\n+\tbit\t2,(hl)\n+\tbit\t2,a\n+\tbit\t3,b\n+\tbit\t3,c\n+\tbit\t3,d\n+\tbit\t3,e\n+\tbit\t3,h\n+\tbit\t3,l\n+\tbit\t3,(hl)\n+\tbit\t3,a\n+\tbit\t4,b\n+\tbit\t4,c\n+\tbit\t4,d\n+\tbit\t4,e\n+\tbit\t4,h\n+\tbit\t4,l\n+\tbit\t4,(hl)\n+\tbit\t4,a\n+\tbit\t5,b\n+\tbit\t5,c\n+\tbit\t5,d\n+\tbit\t5,e\n+\tbit\t5,h\n+\tbit\t5,l\n+\tbit\t5,(hl)\n+\tbit\t5,a\n+\tbit\t6,b\n+\tbit\t6,c\n+\tbit\t6,d\n+\tbit\t6,e\n+\tbit\t6,h\n+\tbit\t6,l\n+\tbit\t6,(hl)\n+\tbit\t6,a\n+\tbit\t7,b\n+\tbit\t7,c\n+\tbit\t7,d\n+\tbit\t7,e\n+\tbit\t7,h\n+\tbit\t7,l\n+\tbit\t7,(hl)\n+\tbit\t7,a\n+\tres\t0,b\n+\tres\t0,c\n+\tres\t0,d\n+\tres\t0,e\n+\tres\t0,h\n+\tres\t0,l\n+\tres\t0,(hl)\n+\tres\t0,a\n+\tres\t1,b\n+\tres\t1,c\n+\tres\t1,d\n+\tres\t1,e\n+\tres\t1,h\n+\tres\t1,l\n+\tres\t1,(hl)\n+\tres\t1,a\n+\tres\t2,b\n+\tres\t2,c\n+\tres\t2,d\n+\tres\t2,e\n+\tres\t2,h\n+\tres\t2,l\n+\tres\t2,(hl)\n+\tres\t2,a\n+\tres\t3,b\n+\tres\t3,c\n+\tres\t3,d\n+\tres\t3,e\n+\tres\t3,h\n+\tres\t3,l\n+\tres\t3,(hl)\n+\tres\t3,a\n+\tres\t4,b\n+\tres\t4,c\n+\tres\t4,d\n+\tres\t4,e\n+\tres\t4,h\n+\tres\t4,l\n+\tres\t4,(hl)\n+\tres\t4,a\n+\tres\t5,b\n+\tres\t5,c\n+\tres\t5,d\n+\tres\t5,e\n+\tres\t5,h\n+\tres\t5,l\n+\tres\t5,(hl)\n+\tres\t5,a\n+\tres\t6,b\n+\tres\t6,c\n+\tres\t6,d\n+\tres\t6,e\n+\tres\t6,h\n+\tres\t6,l\n+\tres\t6,(hl)\n+\tres\t6,a\n+\tres\t7,b\n+\tres\t7,c\n+\tres\t7,d\n+\tres\t7,e\n+\tres\t7,h\n+\tres\t7,l\n+\tres\t7,(hl)\n+\tres\t7,a\n+\tset\t0,b\n+\tset\t0,c\n+\tset\t0,d\n+\tset\t0,e\n+\tset\t0,h\n+\tset\t0,l\n+\tset\t0,(hl)\n+\tset\t0,a\n+\tset\t1,b\n+\tset\t1,c\n+\tset\t1,d\n+\tset\t1,e\n+\tset\t1,h\n+\tset\t1,l\n+\tset\t1,(hl)\n+\tset\t1,a\n+\tset\t2,b\n+\tset\t2,c\n+\tset\t2,d\n+\tset\t2,e\n+\tset\t2,h\n+\tset\t2,l\n+\tset\t2,(hl)\n+\tset\t2,a\n+\tset\t3,b\n+\tset\t3,c\n+\tset\t3,d\n+\tset\t3,e\n+\tset\t3,h\n+\tset\t3,l\n+\tset\t3,(hl)\n+\tset\t3,a\n+\tset\t4,b\n+\tset\t4,c\n+\tset\t4,d\n+\tset\t4,e\n+\tset\t4,h\n+\tset\t4,l\n+\tset\t4,(hl)\n+\tset\t4,a\n+\tset\t5,b\n+\tset\t5,c\n+\tset\t5,d\n+\tset\t5,e\n+\tset\t5,h\n+\tset\t5,l\n+\tset\t5,(hl)\n+\tset\t5,a\n+\tset\t6,b\n+\tset\t6,c\n+\tset\t6,d\n+\tset\t6,e\n+\tset\t6,h\n+\tset\t6,l\n+\tset\t6,(hl)\n+\tset\t6,a\n+\tset\t7,b\n+\tset\t7,c\n+\tset\t7,d\n+\tset\t7,e\n+\tset\t7,h\n+\tset\t7,l\n+\tset\t7,(hl)\n+\tset\t7,a"
    },
    {
      "sha": "31f61133b2e50132cfd2f4f031e4cde9c00958f1",
      "filename": "gas/testsuite/gas/z80/z80.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/testsuite/gas/z80/z80.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/testsuite/gas/z80/z80.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80.exp?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -92,6 +92,12 @@ if [istarget z80-*-*] then {\n     run_dump_test \"ez80_adl_suf\"\n #test for eZ80 opcode prefixes as multiple bytes before instruction\n     run_dump_test \"ez80_pref_dis\"\n+#test for GBZ80 instruction set\n+    run_dump_test \"gbz80_all\"\n+#test for Z80N instruction set\n+    run_dump_test \"z80n_all\"\n+#test for Z80N push nn relocation test\n+    run_dump_test \"z80n_reloc\"\n # test for SDCC compatibility mode\n     run_dump_test \"sdcc\"\n # test for colonless labels"
    },
    {
      "sha": "3412905f98467b64485a017c2e00393640af7d38",
      "filename": "gas/testsuite/gas/z80/z80n_all.d",
      "status": "added",
      "additions": 1208,
      "deletions": 0,
      "changes": 1208,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/testsuite/gas/z80/z80n_all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/testsuite/gas/z80/z80n_all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80n_all.d?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -0,0 +1,1208 @@\n+#as: -z80n\n+#objdump: -d\n+\n+.*:[     ]+file format (coff|elf32)\\-z80\n+\n+\n+Disassembly of section \\.text:\n+\n+00000000 <\\.text>:\n+[   ]+0:[ \t]+8e[          \t]+adc a,\\(hl\\)\n+[   ]+1:[ \t]+dd 8e 09[    \t]+adc a,\\(ix\\+9\\)\n+[   ]+4:[ \t]+fd 8e 09[    \t]+adc a,\\(iy\\+9\\)\n+[   ]+7:[ \t]+ce 03[       \t]+adc a,0x03\n+[   ]+9:[ \t]+8f[          \t]+adc a,a\n+[   ]+a:[ \t]+88[          \t]+adc a,b\n+[   ]+b:[ \t]+89[          \t]+adc a,c\n+[   ]+c:[ \t]+8a[          \t]+adc a,d\n+[   ]+d:[ \t]+8b[          \t]+adc a,e\n+[   ]+e:[ \t]+8c[          \t]+adc a,h\n+[   ]+f:[ \t]+8d[          \t]+adc a,l\n+[  ]+10:[ \t]+ed 4a[       \t]+adc hl,bc\n+[  ]+12:[ \t]+ed 5a[       \t]+adc hl,de\n+[  ]+14:[ \t]+ed 6a[       \t]+adc hl,hl\n+[  ]+16:[ \t]+ed 7a[       \t]+adc hl,sp\n+[  ]+18:[ \t]+86[          \t]+add a,\\(hl\\)\n+[  ]+19:[ \t]+dd 86 09[    \t]+add a,\\(ix\\+9\\)\n+[  ]+1c:[ \t]+fd 86 09[    \t]+add a,\\(iy\\+9\\)\n+[  ]+1f:[ \t]+c6 03[       \t]+add a,0x03\n+[  ]+21:[ \t]+87[          \t]+add a,a\n+[  ]+22:[ \t]+80[          \t]+add a,b\n+[  ]+23:[ \t]+81[          \t]+add a,c\n+[  ]+24:[ \t]+82[          \t]+add a,d\n+[  ]+25:[ \t]+83[          \t]+add a,e\n+[  ]+26:[ \t]+84[          \t]+add a,h\n+[  ]+27:[ \t]+85[          \t]+add a,l\n+[  ]+28:[ \t]+09[          \t]+add hl,bc\n+[  ]+29:[ \t]+19[          \t]+add hl,de\n+[  ]+2a:[ \t]+29[          \t]+add hl,hl\n+[  ]+2b:[ \t]+39[          \t]+add hl,sp\n+[  ]+2c:[ \t]+dd 09[       \t]+add ix,bc\n+[  ]+2e:[ \t]+dd 19[       \t]+add ix,de\n+[  ]+30:[ \t]+dd 29[       \t]+add ix,ix\n+[  ]+32:[ \t]+dd 39[       \t]+add ix,sp\n+[  ]+34:[ \t]+fd 09[       \t]+add iy,bc\n+[  ]+36:[ \t]+fd 19[       \t]+add iy,de\n+[  ]+38:[ \t]+fd 29[       \t]+add iy,iy\n+[  ]+3a:[ \t]+fd 39[       \t]+add iy,sp\n+[  ]+3c:[ \t]+a6[          \t]+and \\(hl\\)\n+[  ]+3d:[ \t]+dd a6 09[    \t]+and \\(ix\\+9\\)\n+[  ]+40:[ \t]+fd a6 09[    \t]+and \\(iy\\+9\\)\n+[  ]+43:[ \t]+e6 03[       \t]+and 0x03\n+[  ]+45:[ \t]+a7[          \t]+and a\n+[  ]+46:[ \t]+a0[          \t]+and b\n+[  ]+47:[ \t]+a1[          \t]+and c\n+[  ]+48:[ \t]+a2[          \t]+and d\n+[  ]+49:[ \t]+a3[          \t]+and e\n+[  ]+4a:[ \t]+a4[          \t]+and h\n+[  ]+4b:[ \t]+a5[          \t]+and l\n+[  ]+4c:[ \t]+cb 46[       \t]+bit 0,\\(hl\\)\n+[  ]+4e:[ \t]+dd cb 09 46[ \t]+bit 0,\\(ix\\+9\\)\n+[  ]+52:[ \t]+fd cb 09 46[ \t]+bit 0,\\(iy\\+9\\)\n+[  ]+56:[ \t]+cb 47[       \t]+bit 0,a\n+[  ]+58:[ \t]+cb 40[       \t]+bit 0,b\n+[  ]+5a:[ \t]+cb 41[       \t]+bit 0,c\n+[  ]+5c:[ \t]+cb 42[       \t]+bit 0,d\n+[  ]+5e:[ \t]+cb 43[       \t]+bit 0,e\n+[  ]+60:[ \t]+cb 44[       \t]+bit 0,h\n+[  ]+62:[ \t]+cb 45[       \t]+bit 0,l\n+[  ]+64:[ \t]+cb 4e[       \t]+bit 1,\\(hl\\)\n+[  ]+66:[ \t]+dd cb 09 4e[ \t]+bit 1,\\(ix\\+9\\)\n+[  ]+6a:[ \t]+fd cb 09 4e[ \t]+bit 1,\\(iy\\+9\\)\n+[  ]+6e:[ \t]+cb 4f[       \t]+bit 1,a\n+[  ]+70:[ \t]+cb 48[       \t]+bit 1,b\n+[  ]+72:[ \t]+cb 49[       \t]+bit 1,c\n+[  ]+74:[ \t]+cb 4a[       \t]+bit 1,d\n+[  ]+76:[ \t]+cb 4b[       \t]+bit 1,e\n+[  ]+78:[ \t]+cb 4c[       \t]+bit 1,h\n+[  ]+7a:[ \t]+cb 4d[       \t]+bit 1,l\n+[  ]+7c:[ \t]+cb 56[       \t]+bit 2,\\(hl\\)\n+[  ]+7e:[ \t]+dd cb 09 56[ \t]+bit 2,\\(ix\\+9\\)\n+[  ]+82:[ \t]+fd cb 09 56[ \t]+bit 2,\\(iy\\+9\\)\n+[  ]+86:[ \t]+cb 57[       \t]+bit 2,a\n+[  ]+88:[ \t]+cb 50[       \t]+bit 2,b\n+[  ]+8a:[ \t]+cb 51[       \t]+bit 2,c\n+[  ]+8c:[ \t]+cb 52[       \t]+bit 2,d\n+[  ]+8e:[ \t]+cb 53[       \t]+bit 2,e\n+[  ]+90:[ \t]+cb 54[       \t]+bit 2,h\n+[  ]+92:[ \t]+cb 55[       \t]+bit 2,l\n+[  ]+94:[ \t]+cb 5e[       \t]+bit 3,\\(hl\\)\n+[  ]+96:[ \t]+dd cb 09 5e[ \t]+bit 3,\\(ix\\+9\\)\n+[  ]+9a:[ \t]+fd cb 09 5e[ \t]+bit 3,\\(iy\\+9\\)\n+[  ]+9e:[ \t]+cb 5f[       \t]+bit 3,a\n+[  ]+a0:[ \t]+cb 58[       \t]+bit 3,b\n+[  ]+a2:[ \t]+cb 59[       \t]+bit 3,c\n+[  ]+a4:[ \t]+cb 5a[       \t]+bit 3,d\n+[  ]+a6:[ \t]+cb 5b[       \t]+bit 3,e\n+[  ]+a8:[ \t]+cb 5c[       \t]+bit 3,h\n+[  ]+aa:[ \t]+cb 5d[       \t]+bit 3,l\n+[  ]+ac:[ \t]+cb 66[       \t]+bit 4,\\(hl\\)\n+[  ]+ae:[ \t]+dd cb 09 66[ \t]+bit 4,\\(ix\\+9\\)\n+[  ]+b2:[ \t]+fd cb 09 66[ \t]+bit 4,\\(iy\\+9\\)\n+[  ]+b6:[ \t]+cb 67[       \t]+bit 4,a\n+[  ]+b8:[ \t]+cb 60[       \t]+bit 4,b\n+[  ]+ba:[ \t]+cb 61[       \t]+bit 4,c\n+[  ]+bc:[ \t]+cb 62[       \t]+bit 4,d\n+[  ]+be:[ \t]+cb 63[       \t]+bit 4,e\n+[  ]+c0:[ \t]+cb 64[       \t]+bit 4,h\n+[  ]+c2:[ \t]+cb 65[       \t]+bit 4,l\n+[  ]+c4:[ \t]+cb 6e[       \t]+bit 5,\\(hl\\)\n+[  ]+c6:[ \t]+dd cb 09 6e[ \t]+bit 5,\\(ix\\+9\\)\n+[  ]+ca:[ \t]+fd cb 09 6e[ \t]+bit 5,\\(iy\\+9\\)\n+[  ]+ce:[ \t]+cb 6f[       \t]+bit 5,a\n+[  ]+d0:[ \t]+cb 68[       \t]+bit 5,b\n+[  ]+d2:[ \t]+cb 69[       \t]+bit 5,c\n+[  ]+d4:[ \t]+cb 6a[       \t]+bit 5,d\n+[  ]+d6:[ \t]+cb 6b[       \t]+bit 5,e\n+[  ]+d8:[ \t]+cb 6c[       \t]+bit 5,h\n+[  ]+da:[ \t]+cb 6d[       \t]+bit 5,l\n+[  ]+dc:[ \t]+cb 76[       \t]+bit 6,\\(hl\\)\n+[  ]+de:[ \t]+dd cb 09 76[ \t]+bit 6,\\(ix\\+9\\)\n+[  ]+e2:[ \t]+fd cb 09 76[ \t]+bit 6,\\(iy\\+9\\)\n+[  ]+e6:[ \t]+cb 77[       \t]+bit 6,a\n+[  ]+e8:[ \t]+cb 70[       \t]+bit 6,b\n+[  ]+ea:[ \t]+cb 71[       \t]+bit 6,c\n+[  ]+ec:[ \t]+cb 72[       \t]+bit 6,d\n+[  ]+ee:[ \t]+cb 73[       \t]+bit 6,e\n+[  ]+f0:[ \t]+cb 74[       \t]+bit 6,h\n+[  ]+f2:[ \t]+cb 75[       \t]+bit 6,l\n+[  ]+f4:[ \t]+cb 7e[       \t]+bit 7,\\(hl\\)\n+[  ]+f6:[ \t]+dd cb 09 7e[ \t]+bit 7,\\(ix\\+9\\)\n+[  ]+fa:[ \t]+fd cb 09 7e[ \t]+bit 7,\\(iy\\+9\\)\n+[  ]+fe:[ \t]+cb 7f[       \t]+bit 7,a\n+[ ]+100:[ \t]+cb 78[       \t]+bit 7,b\n+[ ]+102:[ \t]+cb 79[       \t]+bit 7,c\n+[ ]+104:[ \t]+cb 7a[       \t]+bit 7,d\n+[ ]+106:[ \t]+cb 7b[       \t]+bit 7,e\n+[ ]+108:[ \t]+cb 7c[       \t]+bit 7,h\n+[ ]+10a:[ \t]+cb 7d[       \t]+bit 7,l\n+[ ]+10c:[ \t]+cd 34 12[    \t]+call 0x1234\n+[ ]+10f:[ \t]+dc 34 12[    \t]+call c,0x1234\n+[ ]+112:[ \t]+fc 34 12[    \t]+call m,0x1234\n+[ ]+115:[ \t]+d4 34 12[    \t]+call nc,0x1234\n+[ ]+118:[ \t]+c4 34 12[    \t]+call nz,0x1234\n+[ ]+11b:[ \t]+f4 34 12[    \t]+call p,0x1234\n+[ ]+11e:[ \t]+ec 34 12[    \t]+call pe,0x1234\n+[ ]+121:[ \t]+e4 34 12[    \t]+call po,0x1234\n+[ ]+124:[ \t]+cc 34 12[    \t]+call z,0x1234\n+[ ]+127:[ \t]+3f[          \t]+ccf\n+[ ]+128:[ \t]+be[          \t]+cp \\(hl\\)\n+[ ]+129:[ \t]+dd be 09[    \t]+cp \\(ix\\+9\\)\n+[ ]+12c:[ \t]+fd be 09[    \t]+cp \\(iy\\+9\\)\n+[ ]+12f:[ \t]+fe 03[       \t]+cp 0x03\n+[ ]+131:[ \t]+bf[          \t]+cp a\n+[ ]+132:[ \t]+b8[          \t]+cp b\n+[ ]+133:[ \t]+b9[          \t]+cp c\n+[ ]+134:[ \t]+ba[          \t]+cp d\n+[ ]+135:[ \t]+bb[          \t]+cp e\n+[ ]+136:[ \t]+bc[          \t]+cp h\n+[ ]+137:[ \t]+bd[          \t]+cp l\n+[ ]+138:[ \t]+ed a9[       \t]+cpd\n+[ ]+13a:[ \t]+ed b9[       \t]+cpdr\n+[ ]+13c:[ \t]+ed a1[       \t]+cpi\n+[ ]+13e:[ \t]+ed b1[       \t]+cpir\n+[ ]+140:[ \t]+2f[          \t]+cpl\n+[ ]+141:[ \t]+27[          \t]+daa\n+[ ]+142:[ \t]+35[          \t]+dec \\(hl\\)\n+[ ]+143:[ \t]+dd 35 09[    \t]+dec \\(ix\\+9\\)\n+[ ]+146:[ \t]+fd 35 09[    \t]+dec \\(iy\\+9\\)\n+[ ]+149:[ \t]+3d[          \t]+dec a\n+[ ]+14a:[ \t]+05[          \t]+dec b\n+[ ]+14b:[ \t]+0b[          \t]+dec bc\n+[ ]+14c:[ \t]+0d[          \t]+dec c\n+[ ]+14d:[ \t]+15[          \t]+dec d\n+[ ]+14e:[ \t]+1b[          \t]+dec de\n+[ ]+14f:[ \t]+1d[          \t]+dec e\n+[ ]+150:[ \t]+25[          \t]+dec h\n+[ ]+151:[ \t]+2b[          \t]+dec hl\n+[ ]+152:[ \t]+dd 2b[       \t]+dec ix\n+[ ]+154:[ \t]+fd 2b[       \t]+dec iy\n+[ ]+156:[ \t]+2d[          \t]+dec l\n+[ ]+157:[ \t]+3b[          \t]+dec sp\n+[ ]+158:[ \t]+f3[          \t]+di\n+[ ]+159:[ \t]+10 05[       \t]+djnz 0x0160\n+[ ]+15b:[ \t]+fb[          \t]+ei\n+[ ]+15c:[ \t]+e3[          \t]+ex \\(sp\\),hl\n+[ ]+15d:[ \t]+dd e3[       \t]+ex \\(sp\\),ix\n+[ ]+15f:[ \t]+fd e3[       \t]+ex \\(sp\\),iy\n+[ ]+161:[ \t]+08[          \t]+ex af,af'\n+[ ]+162:[ \t]+eb[          \t]+ex de,hl\n+[ ]+163:[ \t]+d9[          \t]+exx\n+[ ]+164:[ \t]+76[          \t]+halt\n+[ ]+165:[ \t]+ed 46[       \t]+im 0\n+[ ]+167:[ \t]+ed 56[       \t]+im 1\n+[ ]+169:[ \t]+ed 5e[       \t]+im 2\n+[ ]+16b:[ \t]+ed 78[       \t]+in a,\\(c\\)\n+[ ]+16d:[ \t]+db 03[       \t]+in a,\\(0x03\\)\n+[ ]+16f:[ \t]+ed 40[       \t]+in b,\\(c\\)\n+[ ]+171:[ \t]+ed 48[       \t]+in c,\\(c\\)\n+[ ]+173:[ \t]+ed 50[       \t]+in d,\\(c\\)\n+[ ]+175:[ \t]+ed 58[       \t]+in e,\\(c\\)\n+[ ]+177:[ \t]+ed 60[       \t]+in h,\\(c\\)\n+[ ]+179:[ \t]+ed 68[       \t]+in l,\\(c\\)\n+[ ]+17b:[ \t]+34[          \t]+inc \\(hl\\)\n+[ ]+17c:[ \t]+dd 34 09[    \t]+inc \\(ix\\+9\\)\n+[ ]+17f:[ \t]+fd 34 09[    \t]+inc \\(iy\\+9\\)\n+[ ]+182:[ \t]+3c[          \t]+inc a\n+[ ]+183:[ \t]+04[          \t]+inc b\n+[ ]+184:[ \t]+03[          \t]+inc bc\n+[ ]+185:[ \t]+0c[          \t]+inc c\n+[ ]+186:[ \t]+14[          \t]+inc d\n+[ ]+187:[ \t]+13[          \t]+inc de\n+[ ]+188:[ \t]+1c[          \t]+inc e\n+[ ]+189:[ \t]+24[          \t]+inc h\n+[ ]+18a:[ \t]+23[          \t]+inc hl\n+[ ]+18b:[ \t]+dd 23[       \t]+inc ix\n+[ ]+18d:[ \t]+fd 23[       \t]+inc iy\n+[ ]+18f:[ \t]+2c[          \t]+inc l\n+[ ]+190:[ \t]+33[          \t]+inc sp\n+[ ]+191:[ \t]+ed aa[       \t]+ind\n+[ ]+193:[ \t]+ed ba[       \t]+indr\n+[ ]+195:[ \t]+ed a2[       \t]+ini\n+[ ]+197:[ \t]+ed b2[       \t]+inir\n+[ ]+199:[ \t]+e9[          \t]+jp \\(hl\\)\n+[ ]+19a:[ \t]+dd e9[       \t]+jp \\(ix\\)\n+[ ]+19c:[ \t]+fd e9[       \t]+jp \\(iy\\)\n+[ ]+19e:[ \t]+c3 34 12[    \t]+jp 0x1234\n+[ ]+1a1:[ \t]+da 34 12[    \t]+jp c,0x1234\n+[ ]+1a4:[ \t]+fa 34 12[    \t]+jp m,0x1234\n+[ ]+1a7:[ \t]+d2 34 12[    \t]+jp nc,0x1234\n+[ ]+1aa:[ \t]+c2 34 12[    \t]+jp nz,0x1234\n+[ ]+1ad:[ \t]+f2 34 12[    \t]+jp p,0x1234\n+[ ]+1b0:[ \t]+ea 34 12[    \t]+jp pe,0x1234\n+[ ]+1b3:[ \t]+e2 34 12[    \t]+jp po,0x1234\n+[ ]+1b6:[ \t]+ca 34 12[    \t]+jp z,0x1234\n+[ ]+1b9:[ \t]+18 05[       \t]+jr 0x01c0\n+[ ]+1bb:[ \t]+38 05[       \t]+jr c,0x01c2\n+[ ]+1bd:[ \t]+30 05[       \t]+jr nc,0x01c4\n+[ ]+1bf:[ \t]+20 05[       \t]+jr nz,0x01c6\n+[ ]+1c1:[ \t]+28 05[       \t]+jr z,0x01c8\n+[ ]+1c3:[ \t]+32 34 12[    \t]+ld \\(0x1234\\),a\n+[ ]+1c6:[ \t]+ed 43 34 12[ \t]+ld \\(0x1234\\),bc\n+[ ]+1ca:[ \t]+ed 53 34 12[ \t]+ld \\(0x1234\\),de\n+[ ]+1ce:[ \t]+22 34 12[    \t]+ld \\(0x1234\\),hl\n+[ ]+1d1:[ \t]+dd 22 34 12[ \t]+ld \\(0x1234\\),ix\n+[ ]+1d5:[ \t]+fd 22 34 12[ \t]+ld \\(0x1234\\),iy\n+[ ]+1d9:[ \t]+ed 73 34 12[ \t]+ld \\(0x1234\\),sp\n+[ ]+1dd:[ \t]+02[          \t]+ld \\(bc\\),a\n+[ ]+1de:[ \t]+12[          \t]+ld \\(de\\),a\n+[ ]+1df:[ \t]+36 03[       \t]+ld \\(hl\\),0x03\n+[ ]+1e1:[ \t]+77[          \t]+ld \\(hl\\),a\n+[ ]+1e2:[ \t]+70[          \t]+ld \\(hl\\),b\n+[ ]+1e3:[ \t]+71[          \t]+ld \\(hl\\),c\n+[ ]+1e4:[ \t]+72[          \t]+ld \\(hl\\),d\n+[ ]+1e5:[ \t]+73[          \t]+ld \\(hl\\),e\n+[ ]+1e6:[ \t]+74[          \t]+ld \\(hl\\),h\n+[ ]+1e7:[ \t]+75[          \t]+ld \\(hl\\),l\n+[ ]+1e8:[ \t]+dd 36 09 03[ \t]+ld \\(ix\\+9\\),0x03\n+[ ]+1ec:[ \t]+dd 77 09[    \t]+ld \\(ix\\+9\\),a\n+[ ]+1ef:[ \t]+dd 70 09[    \t]+ld \\(ix\\+9\\),b\n+[ ]+1f2:[ \t]+dd 71 09[    \t]+ld \\(ix\\+9\\),c\n+[ ]+1f5:[ \t]+dd 72 09[    \t]+ld \\(ix\\+9\\),d\n+[ ]+1f8:[ \t]+dd 73 09[    \t]+ld \\(ix\\+9\\),e\n+[ ]+1fb:[ \t]+dd 74 09[    \t]+ld \\(ix\\+9\\),h\n+[ ]+1fe:[ \t]+dd 75 09[    \t]+ld \\(ix\\+9\\),l\n+[ ]+201:[ \t]+fd 36 09 03[ \t]+ld \\(iy\\+9\\),0x03\n+[ ]+205:[ \t]+fd 77 09[    \t]+ld \\(iy\\+9\\),a\n+[ ]+208:[ \t]+fd 70 09[    \t]+ld \\(iy\\+9\\),b\n+[ ]+20b:[ \t]+fd 71 09[    \t]+ld \\(iy\\+9\\),c\n+[ ]+20e:[ \t]+fd 72 09[    \t]+ld \\(iy\\+9\\),d\n+[ ]+211:[ \t]+fd 73 09[    \t]+ld \\(iy\\+9\\),e\n+[ ]+214:[ \t]+fd 74 09[    \t]+ld \\(iy\\+9\\),h\n+[ ]+217:[ \t]+fd 75 09[    \t]+ld \\(iy\\+9\\),l\n+[ ]+21a:[ \t]+3a 34 12[    \t]+ld a,\\(0x1234\\)\n+[ ]+21d:[ \t]+0a[          \t]+ld a,\\(bc\\)\n+[ ]+21e:[ \t]+1a[          \t]+ld a,\\(de\\)\n+[ ]+21f:[ \t]+7e[          \t]+ld a,\\(hl\\)\n+[ ]+220:[ \t]+dd 7e 09[    \t]+ld a,\\(ix\\+9\\)\n+[ ]+223:[ \t]+fd 7e 09[    \t]+ld a,\\(iy\\+9\\)\n+[ ]+226:[ \t]+3e 03[       \t]+ld a,0x03\n+[ ]+228:[ \t]+7f[          \t]+ld a,a\n+[ ]+229:[ \t]+78[          \t]+ld a,b\n+[ ]+22a:[ \t]+79[          \t]+ld a,c\n+[ ]+22b:[ \t]+7a[          \t]+ld a,d\n+[ ]+22c:[ \t]+7b[          \t]+ld a,e\n+[ ]+22d:[ \t]+7c[          \t]+ld a,h\n+[ ]+22e:[ \t]+ed 57[       \t]+ld a,i\n+[ ]+230:[ \t]+7d[          \t]+ld a,l\n+[ ]+231:[ \t]+ed 5f[       \t]+ld a,r\n+[ ]+233:[ \t]+46[          \t]+ld b,\\(hl\\)\n+[ ]+234:[ \t]+dd 46 09[    \t]+ld b,\\(ix\\+9\\)\n+[ ]+237:[ \t]+fd 46 09[    \t]+ld b,\\(iy\\+9\\)\n+[ ]+23a:[ \t]+06 03[       \t]+ld b,0x03\n+[ ]+23c:[ \t]+47[          \t]+ld b,a\n+[ ]+23d:[ \t]+40[          \t]+ld b,b\n+[ ]+23e:[ \t]+41[          \t]+ld b,c\n+[ ]+23f:[ \t]+42[          \t]+ld b,d\n+[ ]+240:[ \t]+43[          \t]+ld b,e\n+[ ]+241:[ \t]+44[          \t]+ld b,h\n+[ ]+242:[ \t]+45[          \t]+ld b,l\n+[ ]+243:[ \t]+ed 4b 34 12[ \t]+ld bc,\\(0x1234\\)\n+[ ]+247:[ \t]+01 34 12[    \t]+ld bc,0x1234\n+[ ]+24a:[ \t]+4e[          \t]+ld c,\\(hl\\)\n+[ ]+24b:[ \t]+dd 4e 09[    \t]+ld c,\\(ix\\+9\\)\n+[ ]+24e:[ \t]+fd 4e 09[    \t]+ld c,\\(iy\\+9\\)\n+[ ]+251:[ \t]+0e 03[       \t]+ld c,0x03\n+[ ]+253:[ \t]+4f[          \t]+ld c,a\n+[ ]+254:[ \t]+48[          \t]+ld c,b\n+[ ]+255:[ \t]+49[          \t]+ld c,c\n+[ ]+256:[ \t]+4a[          \t]+ld c,d\n+[ ]+257:[ \t]+4b[          \t]+ld c,e\n+[ ]+258:[ \t]+4c[          \t]+ld c,h\n+[ ]+259:[ \t]+4d[          \t]+ld c,l\n+[ ]+25a:[ \t]+56[          \t]+ld d,\\(hl\\)\n+[ ]+25b:[ \t]+dd 56 09[    \t]+ld d,\\(ix\\+9\\)\n+[ ]+25e:[ \t]+fd 56 09[    \t]+ld d,\\(iy\\+9\\)\n+[ ]+261:[ \t]+16 03[       \t]+ld d,0x03\n+[ ]+263:[ \t]+57[          \t]+ld d,a\n+[ ]+264:[ \t]+50[          \t]+ld d,b\n+[ ]+265:[ \t]+51[          \t]+ld d,c\n+[ ]+266:[ \t]+52[          \t]+ld d,d\n+[ ]+267:[ \t]+53[          \t]+ld d,e\n+[ ]+268:[ \t]+54[          \t]+ld d,h\n+[ ]+269:[ \t]+55[          \t]+ld d,l\n+[ ]+26a:[ \t]+ed 5b 34 12[ \t]+ld de,\\(0x1234\\)\n+[ ]+26e:[ \t]+11 34 12[    \t]+ld de,0x1234\n+[ ]+271:[ \t]+5e[          \t]+ld e,\\(hl\\)\n+[ ]+272:[ \t]+dd 5e 09[    \t]+ld e,\\(ix\\+9\\)\n+[ ]+275:[ \t]+fd 5e 09[    \t]+ld e,\\(iy\\+9\\)\n+[ ]+278:[ \t]+1e 03[       \t]+ld e,0x03\n+[ ]+27a:[ \t]+5f[          \t]+ld e,a\n+[ ]+27b:[ \t]+58[          \t]+ld e,b\n+[ ]+27c:[ \t]+59[          \t]+ld e,c\n+[ ]+27d:[ \t]+5a[          \t]+ld e,d\n+[ ]+27e:[ \t]+5b[          \t]+ld e,e\n+[ ]+27f:[ \t]+5c[          \t]+ld e,h\n+[ ]+280:[ \t]+5d[          \t]+ld e,l\n+[ ]+281:[ \t]+66[          \t]+ld h,\\(hl\\)\n+[ ]+282:[ \t]+dd 66 09[    \t]+ld h,\\(ix\\+9\\)\n+[ ]+285:[ \t]+fd 66 09[    \t]+ld h,\\(iy\\+9\\)\n+[ ]+288:[ \t]+26 03[       \t]+ld h,0x03\n+[ ]+28a:[ \t]+67[          \t]+ld h,a\n+[ ]+28b:[ \t]+60[          \t]+ld h,b\n+[ ]+28c:[ \t]+61[          \t]+ld h,c\n+[ ]+28d:[ \t]+62[          \t]+ld h,d\n+[ ]+28e:[ \t]+63[          \t]+ld h,e\n+[ ]+28f:[ \t]+64[          \t]+ld h,h\n+[ ]+290:[ \t]+65[          \t]+ld h,l\n+[ ]+291:[ \t]+2a 34 12[    \t]+ld hl,\\(0x1234\\)\n+[ ]+294:[ \t]+21 34 12[    \t]+ld hl,0x1234\n+[ ]+297:[ \t]+ed 47[       \t]+ld i,a\n+[ ]+299:[ \t]+dd 2a 34 12[ \t]+ld ix,\\(0x1234\\)\n+[ ]+29d:[ \t]+dd 21 34 12[ \t]+ld ix,0x1234\n+[ ]+2a1:[ \t]+fd 2a 34 12[ \t]+ld iy,\\(0x1234\\)\n+[ ]+2a5:[ \t]+fd 21 34 12[ \t]+ld iy,0x1234\n+[ ]+2a9:[ \t]+6e[          \t]+ld l,\\(hl\\)\n+[ ]+2aa:[ \t]+dd 6e 09[    \t]+ld l,\\(ix\\+9\\)\n+[ ]+2ad:[ \t]+fd 6e 09[    \t]+ld l,\\(iy\\+9\\)\n+[ ]+2b0:[ \t]+2e 03[       \t]+ld l,0x03\n+[ ]+2b2:[ \t]+6f[          \t]+ld l,a\n+[ ]+2b3:[ \t]+68[          \t]+ld l,b\n+[ ]+2b4:[ \t]+69[          \t]+ld l,c\n+[ ]+2b5:[ \t]+6a[          \t]+ld l,d\n+[ ]+2b6:[ \t]+6b[          \t]+ld l,e\n+[ ]+2b7:[ \t]+6c[          \t]+ld l,h\n+[ ]+2b8:[ \t]+6d[          \t]+ld l,l\n+[ ]+2b9:[ \t]+ed 4f[       \t]+ld r,a\n+[ ]+2bb:[ \t]+ed 7b 34 12[ \t]+ld sp,\\(0x1234\\)\n+[ ]+2bf:[ \t]+31 34 12[    \t]+ld sp,0x1234\n+[ ]+2c2:[ \t]+f9[          \t]+ld sp,hl\n+[ ]+2c3:[ \t]+dd f9[       \t]+ld sp,ix\n+[ ]+2c5:[ \t]+fd f9[       \t]+ld sp,iy\n+[ ]+2c7:[ \t]+ed a8[       \t]+ldd\n+[ ]+2c9:[ \t]+ed b8[       \t]+lddr\n+[ ]+2cb:[ \t]+ed a0[       \t]+ldi\n+[ ]+2cd:[ \t]+ed b0[       \t]+ldir\n+[ ]+2cf:[ \t]+ed 44[       \t]+neg\n+[ ]+2d1:[ \t]+00[          \t]+nop\n+[ ]+2d2:[ \t]+b6[          \t]+or \\(hl\\)\n+[ ]+2d3:[ \t]+dd b6 09[    \t]+or \\(ix\\+9\\)\n+[ ]+2d6:[ \t]+fd b6 09[    \t]+or \\(iy\\+9\\)\n+[ ]+2d9:[ \t]+f6 03[       \t]+or 0x03\n+[ ]+2db:[ \t]+b7[          \t]+or a\n+[ ]+2dc:[ \t]+b0[          \t]+or b\n+[ ]+2dd:[ \t]+b1[          \t]+or c\n+[ ]+2de:[ \t]+b2[          \t]+or d\n+[ ]+2df:[ \t]+b3[          \t]+or e\n+[ ]+2e0:[ \t]+b4[          \t]+or h\n+[ ]+2e1:[ \t]+b5[          \t]+or l\n+[ ]+2e2:[ \t]+ed bb[       \t]+otdr\n+[ ]+2e4:[ \t]+ed b3[       \t]+otir\n+[ ]+2e6:[ \t]+ed 79[       \t]+out \\(c\\),a\n+[ ]+2e8:[ \t]+ed 41[       \t]+out \\(c\\),b\n+[ ]+2ea:[ \t]+ed 49[       \t]+out \\(c\\),c\n+[ ]+2ec:[ \t]+ed 51[       \t]+out \\(c\\),d\n+[ ]+2ee:[ \t]+ed 59[       \t]+out \\(c\\),e\n+[ ]+2f0:[ \t]+ed 61[       \t]+out \\(c\\),h\n+[ ]+2f2:[ \t]+ed 69[       \t]+out \\(c\\),l\n+[ ]+2f4:[ \t]+d3 03[       \t]+out \\(0x03\\),a\n+[ ]+2f6:[ \t]+ed ab[       \t]+outd\n+[ ]+2f8:[ \t]+ed a3[       \t]+outi\n+[ ]+2fa:[ \t]+f1[          \t]+pop af\n+[ ]+2fb:[ \t]+c1[          \t]+pop bc\n+[ ]+2fc:[ \t]+d1[          \t]+pop de\n+[ ]+2fd:[ \t]+e1[          \t]+pop hl\n+[ ]+2fe:[ \t]+dd e1[       \t]+pop ix\n+[ ]+300:[ \t]+fd e1[       \t]+pop iy\n+[ ]+302:[ \t]+f5[          \t]+push af\n+[ ]+303:[ \t]+c5[          \t]+push bc\n+[ ]+304:[ \t]+d5[          \t]+push de\n+[ ]+305:[ \t]+e5[          \t]+push hl\n+[ ]+306:[ \t]+dd e5[       \t]+push ix\n+[ ]+308:[ \t]+fd e5[       \t]+push iy\n+[ ]+30a:[ \t]+cb 86[       \t]+res 0,\\(hl\\)\n+[ ]+30c:[ \t]+dd cb 09 86[ \t]+res 0,\\(ix\\+9\\)\n+[ ]+310:[ \t]+fd cb 09 86[ \t]+res 0,\\(iy\\+9\\)\n+[ ]+314:[ \t]+cb 87[       \t]+res 0,a\n+[ ]+316:[ \t]+cb 80[       \t]+res 0,b\n+[ ]+318:[ \t]+cb 81[       \t]+res 0,c\n+[ ]+31a:[ \t]+cb 82[       \t]+res 0,d\n+[ ]+31c:[ \t]+cb 83[       \t]+res 0,e\n+[ ]+31e:[ \t]+cb 84[       \t]+res 0,h\n+[ ]+320:[ \t]+cb 85[       \t]+res 0,l\n+[ ]+322:[ \t]+cb 8e[       \t]+res 1,\\(hl\\)\n+[ ]+324:[ \t]+dd cb 09 8e[ \t]+res 1,\\(ix\\+9\\)\n+[ ]+328:[ \t]+fd cb 09 8e[ \t]+res 1,\\(iy\\+9\\)\n+[ ]+32c:[ \t]+cb 8f[       \t]+res 1,a\n+[ ]+32e:[ \t]+cb 88[       \t]+res 1,b\n+[ ]+330:[ \t]+cb 89[       \t]+res 1,c\n+[ ]+332:[ \t]+cb 8a[       \t]+res 1,d\n+[ ]+334:[ \t]+cb 8b[       \t]+res 1,e\n+[ ]+336:[ \t]+cb 8c[       \t]+res 1,h\n+[ ]+338:[ \t]+cb 8d[       \t]+res 1,l\n+[ ]+33a:[ \t]+cb 96[       \t]+res 2,\\(hl\\)\n+[ ]+33c:[ \t]+dd cb 09 96[ \t]+res 2,\\(ix\\+9\\)\n+[ ]+340:[ \t]+fd cb 09 96[ \t]+res 2,\\(iy\\+9\\)\n+[ ]+344:[ \t]+cb 97[       \t]+res 2,a\n+[ ]+346:[ \t]+cb 90[       \t]+res 2,b\n+[ ]+348:[ \t]+cb 91[       \t]+res 2,c\n+[ ]+34a:[ \t]+cb 92[       \t]+res 2,d\n+[ ]+34c:[ \t]+cb 93[       \t]+res 2,e\n+[ ]+34e:[ \t]+cb 94[       \t]+res 2,h\n+[ ]+350:[ \t]+cb 95[       \t]+res 2,l\n+[ ]+352:[ \t]+cb 9e[       \t]+res 3,\\(hl\\)\n+[ ]+354:[ \t]+dd cb 09 9e[ \t]+res 3,\\(ix\\+9\\)\n+[ ]+358:[ \t]+fd cb 09 9e[ \t]+res 3,\\(iy\\+9\\)\n+[ ]+35c:[ \t]+cb 9f[       \t]+res 3,a\n+[ ]+35e:[ \t]+cb 98[       \t]+res 3,b\n+[ ]+360:[ \t]+cb 99[       \t]+res 3,c\n+[ ]+362:[ \t]+cb 9a[       \t]+res 3,d\n+[ ]+364:[ \t]+cb 9b[       \t]+res 3,e\n+[ ]+366:[ \t]+cb 9c[       \t]+res 3,h\n+[ ]+368:[ \t]+cb 9d[       \t]+res 3,l\n+[ ]+36a:[ \t]+cb a6[       \t]+res 4,\\(hl\\)\n+[ ]+36c:[ \t]+dd cb 09 a6[ \t]+res 4,\\(ix\\+9\\)\n+[ ]+370:[ \t]+fd cb 09 a6[ \t]+res 4,\\(iy\\+9\\)\n+[ ]+374:[ \t]+cb a7[       \t]+res 4,a\n+[ ]+376:[ \t]+cb a0[       \t]+res 4,b\n+[ ]+378:[ \t]+cb a1[       \t]+res 4,c\n+[ ]+37a:[ \t]+cb a2[       \t]+res 4,d\n+[ ]+37c:[ \t]+cb a3[       \t]+res 4,e\n+[ ]+37e:[ \t]+cb a4[       \t]+res 4,h\n+[ ]+380:[ \t]+cb a5[       \t]+res 4,l\n+[ ]+382:[ \t]+cb ae[       \t]+res 5,\\(hl\\)\n+[ ]+384:[ \t]+dd cb 09 ae[ \t]+res 5,\\(ix\\+9\\)\n+[ ]+388:[ \t]+fd cb 09 ae[ \t]+res 5,\\(iy\\+9\\)\n+[ ]+38c:[ \t]+cb af[       \t]+res 5,a\n+[ ]+38e:[ \t]+cb a8[       \t]+res 5,b\n+[ ]+390:[ \t]+cb a9[       \t]+res 5,c\n+[ ]+392:[ \t]+cb aa[       \t]+res 5,d\n+[ ]+394:[ \t]+cb ab[       \t]+res 5,e\n+[ ]+396:[ \t]+cb ac[       \t]+res 5,h\n+[ ]+398:[ \t]+cb ad[       \t]+res 5,l\n+[ ]+39a:[ \t]+cb b6[       \t]+res 6,\\(hl\\)\n+[ ]+39c:[ \t]+dd cb 09 b6[ \t]+res 6,\\(ix\\+9\\)\n+[ ]+3a0:[ \t]+fd cb 09 b6[ \t]+res 6,\\(iy\\+9\\)\n+[ ]+3a4:[ \t]+cb b7[       \t]+res 6,a\n+[ ]+3a6:[ \t]+cb b0[       \t]+res 6,b\n+[ ]+3a8:[ \t]+cb b1[       \t]+res 6,c\n+[ ]+3aa:[ \t]+cb b2[       \t]+res 6,d\n+[ ]+3ac:[ \t]+cb b3[       \t]+res 6,e\n+[ ]+3ae:[ \t]+cb b4[       \t]+res 6,h\n+[ ]+3b0:[ \t]+cb b5[       \t]+res 6,l\n+[ ]+3b2:[ \t]+cb be[       \t]+res 7,\\(hl\\)\n+[ ]+3b4:[ \t]+dd cb 09 be[ \t]+res 7,\\(ix\\+9\\)\n+[ ]+3b8:[ \t]+fd cb 09 be[ \t]+res 7,\\(iy\\+9\\)\n+[ ]+3bc:[ \t]+cb bf[       \t]+res 7,a\n+[ ]+3be:[ \t]+cb b8[       \t]+res 7,b\n+[ ]+3c0:[ \t]+cb b9[       \t]+res 7,c\n+[ ]+3c2:[ \t]+cb ba[       \t]+res 7,d\n+[ ]+3c4:[ \t]+cb bb[       \t]+res 7,e\n+[ ]+3c6:[ \t]+cb bc[       \t]+res 7,h\n+[ ]+3c8:[ \t]+cb bd[       \t]+res 7,l\n+[ ]+3ca:[ \t]+c9[          \t]+ret\n+[ ]+3cb:[ \t]+d8[          \t]+ret c\n+[ ]+3cc:[ \t]+f8[          \t]+ret m\n+[ ]+3cd:[ \t]+d0[          \t]+ret nc\n+[ ]+3ce:[ \t]+c0[          \t]+ret nz\n+[ ]+3cf:[ \t]+f0[          \t]+ret p\n+[ ]+3d0:[ \t]+e8[          \t]+ret pe\n+[ ]+3d1:[ \t]+e0[          \t]+ret po\n+[ ]+3d2:[ \t]+c8[          \t]+ret z\n+[ ]+3d3:[ \t]+ed 4d[       \t]+reti\n+[ ]+3d5:[ \t]+ed 45[       \t]+retn\n+[ ]+3d7:[ \t]+cb 16[       \t]+rl \\(hl\\)\n+[ ]+3d9:[ \t]+dd cb 09 16[ \t]+rl \\(ix\\+9\\)\n+[ ]+3dd:[ \t]+fd cb 09 16[ \t]+rl \\(iy\\+9\\)\n+[ ]+3e1:[ \t]+cb 17[       \t]+rl a\n+[ ]+3e3:[ \t]+cb 10[       \t]+rl b\n+[ ]+3e5:[ \t]+cb 11[       \t]+rl c\n+[ ]+3e7:[ \t]+cb 12[       \t]+rl d\n+[ ]+3e9:[ \t]+cb 13[       \t]+rl e\n+[ ]+3eb:[ \t]+cb 14[       \t]+rl h\n+[ ]+3ed:[ \t]+cb 15[       \t]+rl l\n+[ ]+3ef:[ \t]+17[          \t]+rla\n+[ ]+3f0:[ \t]+cb 06[       \t]+rlc \\(hl\\)\n+[ ]+3f2:[ \t]+dd cb 09 06[ \t]+rlc \\(ix\\+9\\)\n+[ ]+3f6:[ \t]+fd cb 09 06[ \t]+rlc \\(iy\\+9\\)\n+[ ]+3fa:[ \t]+cb 07[       \t]+rlc a\n+[ ]+3fc:[ \t]+cb 00[       \t]+rlc b\n+[ ]+3fe:[ \t]+cb 01[       \t]+rlc c\n+[ ]+400:[ \t]+cb 02[       \t]+rlc d\n+[ ]+402:[ \t]+cb 03[       \t]+rlc e\n+[ ]+404:[ \t]+cb 04[       \t]+rlc h\n+[ ]+406:[ \t]+cb 05[       \t]+rlc l\n+[ ]+408:[ \t]+07[          \t]+rlca\n+[ ]+409:[ \t]+ed 6f[       \t]+rld\n+[ ]+40b:[ \t]+cb 1e[       \t]+rr \\(hl\\)\n+[ ]+40d:[ \t]+dd cb 09 1e[ \t]+rr \\(ix\\+9\\)\n+[ ]+411:[ \t]+fd cb 09 1e[ \t]+rr \\(iy\\+9\\)\n+[ ]+415:[ \t]+cb 1f[       \t]+rr a\n+[ ]+417:[ \t]+cb 18[       \t]+rr b\n+[ ]+419:[ \t]+cb 19[       \t]+rr c\n+[ ]+41b:[ \t]+cb 1a[       \t]+rr d\n+[ ]+41d:[ \t]+cb 1b[       \t]+rr e\n+[ ]+41f:[ \t]+cb 1c[       \t]+rr h\n+[ ]+421:[ \t]+cb 1d[       \t]+rr l\n+[ ]+423:[ \t]+1f[          \t]+rra\n+[ ]+424:[ \t]+cb 0e[       \t]+rrc \\(hl\\)\n+[ ]+426:[ \t]+dd cb 09 0e[ \t]+rrc \\(ix\\+9\\)\n+[ ]+42a:[ \t]+fd cb 09 0e[ \t]+rrc \\(iy\\+9\\)\n+[ ]+42e:[ \t]+cb 0f[       \t]+rrc a\n+[ ]+430:[ \t]+cb 08[       \t]+rrc b\n+[ ]+432:[ \t]+cb 09[       \t]+rrc c\n+[ ]+434:[ \t]+cb 0a[       \t]+rrc d\n+[ ]+436:[ \t]+cb 0b[       \t]+rrc e\n+[ ]+438:[ \t]+cb 0c[       \t]+rrc h\n+[ ]+43a:[ \t]+cb 0d[       \t]+rrc l\n+[ ]+43c:[ \t]+0f[          \t]+rrca\n+[ ]+43d:[ \t]+ed 67[       \t]+rrd\n+[ ]+43f:[ \t]+c7[          \t]+rst 0x00\n+[ ]+440:[ \t]+cf[          \t]+rst 0x08\n+[ ]+441:[ \t]+d7[          \t]+rst 0x10\n+[ ]+442:[ \t]+df[          \t]+rst 0x18\n+[ ]+443:[ \t]+e7[          \t]+rst 0x20\n+[ ]+444:[ \t]+ef[          \t]+rst 0x28\n+[ ]+445:[ \t]+f7[          \t]+rst 0x30\n+[ ]+446:[ \t]+ff[          \t]+rst 0x38\n+[ ]+447:[ \t]+9e[          \t]+sbc a,\\(hl\\)\n+[ ]+448:[ \t]+dd 9e 09[    \t]+sbc a,\\(ix\\+9\\)\n+[ ]+44b:[ \t]+fd 9e 09[    \t]+sbc a,\\(iy\\+9\\)\n+[ ]+44e:[ \t]+de 03[       \t]+sbc a,0x03\n+[ ]+450:[ \t]+9f[          \t]+sbc a,a\n+[ ]+451:[ \t]+98[          \t]+sbc a,b\n+[ ]+452:[ \t]+99[          \t]+sbc a,c\n+[ ]+453:[ \t]+9a[          \t]+sbc a,d\n+[ ]+454:[ \t]+9b[          \t]+sbc a,e\n+[ ]+455:[ \t]+9c[          \t]+sbc a,h\n+[ ]+456:[ \t]+9d[          \t]+sbc a,l\n+[ ]+457:[ \t]+ed 42[       \t]+sbc hl,bc\n+[ ]+459:[ \t]+ed 52[       \t]+sbc hl,de\n+[ ]+45b:[ \t]+ed 62[       \t]+sbc hl,hl\n+[ ]+45d:[ \t]+ed 72[       \t]+sbc hl,sp\n+[ ]+45f:[ \t]+37[          \t]+scf\n+[ ]+460:[ \t]+cb c6[       \t]+set 0,\\(hl\\)\n+[ ]+462:[ \t]+dd cb 09 c6[ \t]+set 0,\\(ix\\+9\\)\n+[ ]+466:[ \t]+fd cb 09 c6[ \t]+set 0,\\(iy\\+9\\)\n+[ ]+46a:[ \t]+cb c7[       \t]+set 0,a\n+[ ]+46c:[ \t]+cb c0[       \t]+set 0,b\n+[ ]+46e:[ \t]+cb c1[       \t]+set 0,c\n+[ ]+470:[ \t]+cb c2[       \t]+set 0,d\n+[ ]+472:[ \t]+cb c3[       \t]+set 0,e\n+[ ]+474:[ \t]+cb c4[       \t]+set 0,h\n+[ ]+476:[ \t]+cb c5[       \t]+set 0,l\n+[ ]+478:[ \t]+cb ce[       \t]+set 1,\\(hl\\)\n+[ ]+47a:[ \t]+dd cb 09 ce[ \t]+set 1,\\(ix\\+9\\)\n+[ ]+47e:[ \t]+fd cb 09 ce[ \t]+set 1,\\(iy\\+9\\)\n+[ ]+482:[ \t]+cb cf[       \t]+set 1,a\n+[ ]+484:[ \t]+cb c8[       \t]+set 1,b\n+[ ]+486:[ \t]+cb c9[       \t]+set 1,c\n+[ ]+488:[ \t]+cb ca[       \t]+set 1,d\n+[ ]+48a:[ \t]+cb cb[       \t]+set 1,e\n+[ ]+48c:[ \t]+cb cc[       \t]+set 1,h\n+[ ]+48e:[ \t]+cb cd[       \t]+set 1,l\n+[ ]+490:[ \t]+cb d6[       \t]+set 2,\\(hl\\)\n+[ ]+492:[ \t]+dd cb 09 d6[ \t]+set 2,\\(ix\\+9\\)\n+[ ]+496:[ \t]+fd cb 09 d6[ \t]+set 2,\\(iy\\+9\\)\n+[ ]+49a:[ \t]+cb d7[       \t]+set 2,a\n+[ ]+49c:[ \t]+cb d0[       \t]+set 2,b\n+[ ]+49e:[ \t]+cb d1[       \t]+set 2,c\n+[ ]+4a0:[ \t]+cb d2[       \t]+set 2,d\n+[ ]+4a2:[ \t]+cb d3[       \t]+set 2,e\n+[ ]+4a4:[ \t]+cb d4[       \t]+set 2,h\n+[ ]+4a6:[ \t]+cb d5[       \t]+set 2,l\n+[ ]+4a8:[ \t]+cb de[       \t]+set 3,\\(hl\\)\n+[ ]+4aa:[ \t]+dd cb 09 de[ \t]+set 3,\\(ix\\+9\\)\n+[ ]+4ae:[ \t]+fd cb 09 de[ \t]+set 3,\\(iy\\+9\\)\n+[ ]+4b2:[ \t]+cb df[       \t]+set 3,a\n+[ ]+4b4:[ \t]+cb d8[       \t]+set 3,b\n+[ ]+4b6:[ \t]+cb d9[       \t]+set 3,c\n+[ ]+4b8:[ \t]+cb da[       \t]+set 3,d\n+[ ]+4ba:[ \t]+cb db[       \t]+set 3,e\n+[ ]+4bc:[ \t]+cb dc[       \t]+set 3,h\n+[ ]+4be:[ \t]+cb dd[       \t]+set 3,l\n+[ ]+4c0:[ \t]+cb e6[       \t]+set 4,\\(hl\\)\n+[ ]+4c2:[ \t]+dd cb 09 e6[ \t]+set 4,\\(ix\\+9\\)\n+[ ]+4c6:[ \t]+fd cb 09 e6[ \t]+set 4,\\(iy\\+9\\)\n+[ ]+4ca:[ \t]+cb e7[       \t]+set 4,a\n+[ ]+4cc:[ \t]+cb e0[       \t]+set 4,b\n+[ ]+4ce:[ \t]+cb e1[       \t]+set 4,c\n+[ ]+4d0:[ \t]+cb e2[       \t]+set 4,d\n+[ ]+4d2:[ \t]+cb e3[       \t]+set 4,e\n+[ ]+4d4:[ \t]+cb e4[       \t]+set 4,h\n+[ ]+4d6:[ \t]+cb e5[       \t]+set 4,l\n+[ ]+4d8:[ \t]+cb ee[       \t]+set 5,\\(hl\\)\n+[ ]+4da:[ \t]+dd cb 09 ee[ \t]+set 5,\\(ix\\+9\\)\n+[ ]+4de:[ \t]+fd cb 09 ee[ \t]+set 5,\\(iy\\+9\\)\n+[ ]+4e2:[ \t]+cb ef[       \t]+set 5,a\n+[ ]+4e4:[ \t]+cb e8[       \t]+set 5,b\n+[ ]+4e6:[ \t]+cb e9[       \t]+set 5,c\n+[ ]+4e8:[ \t]+cb ea[       \t]+set 5,d\n+[ ]+4ea:[ \t]+cb eb[       \t]+set 5,e\n+[ ]+4ec:[ \t]+cb ec[       \t]+set 5,h\n+[ ]+4ee:[ \t]+cb ed[       \t]+set 5,l\n+[ ]+4f0:[ \t]+cb f6[       \t]+set 6,\\(hl\\)\n+[ ]+4f2:[ \t]+dd cb 09 f6[ \t]+set 6,\\(ix\\+9\\)\n+[ ]+4f6:[ \t]+fd cb 09 f6[ \t]+set 6,\\(iy\\+9\\)\n+[ ]+4fa:[ \t]+cb f7[       \t]+set 6,a\n+[ ]+4fc:[ \t]+cb f0[       \t]+set 6,b\n+[ ]+4fe:[ \t]+cb f1[       \t]+set 6,c\n+[ ]+500:[ \t]+cb f2[       \t]+set 6,d\n+[ ]+502:[ \t]+cb f3[       \t]+set 6,e\n+[ ]+504:[ \t]+cb f4[       \t]+set 6,h\n+[ ]+506:[ \t]+cb f5[       \t]+set 6,l\n+[ ]+508:[ \t]+cb fe[       \t]+set 7,\\(hl\\)\n+[ ]+50a:[ \t]+dd cb 09 fe[ \t]+set 7,\\(ix\\+9\\)\n+[ ]+50e:[ \t]+fd cb 09 fe[ \t]+set 7,\\(iy\\+9\\)\n+[ ]+512:[ \t]+cb ff[       \t]+set 7,a\n+[ ]+514:[ \t]+cb f8[       \t]+set 7,b\n+[ ]+516:[ \t]+cb f9[       \t]+set 7,c\n+[ ]+518:[ \t]+cb fa[       \t]+set 7,d\n+[ ]+51a:[ \t]+cb fb[       \t]+set 7,e\n+[ ]+51c:[ \t]+cb fc[       \t]+set 7,h\n+[ ]+51e:[ \t]+cb fd[       \t]+set 7,l\n+[ ]+520:[ \t]+cb 26[       \t]+sla \\(hl\\)\n+[ ]+522:[ \t]+dd cb 09 26[ \t]+sla \\(ix\\+9\\)\n+[ ]+526:[ \t]+fd cb 09 26[ \t]+sla \\(iy\\+9\\)\n+[ ]+52a:[ \t]+cb 27[       \t]+sla a\n+[ ]+52c:[ \t]+cb 20[       \t]+sla b\n+[ ]+52e:[ \t]+cb 21[       \t]+sla c\n+[ ]+530:[ \t]+cb 22[       \t]+sla d\n+[ ]+532:[ \t]+cb 23[       \t]+sla e\n+[ ]+534:[ \t]+cb 24[       \t]+sla h\n+[ ]+536:[ \t]+cb 25[       \t]+sla l\n+[ ]+538:[ \t]+cb 2e[       \t]+sra \\(hl\\)\n+[ ]+53a:[ \t]+dd cb 09 2e[ \t]+sra \\(ix\\+9\\)\n+[ ]+53e:[ \t]+fd cb 09 2e[ \t]+sra \\(iy\\+9\\)\n+[ ]+542:[ \t]+cb 2f[       \t]+sra a\n+[ ]+544:[ \t]+cb 28[       \t]+sra b\n+[ ]+546:[ \t]+cb 29[       \t]+sra c\n+[ ]+548:[ \t]+cb 2a[       \t]+sra d\n+[ ]+54a:[ \t]+cb 2b[       \t]+sra e\n+[ ]+54c:[ \t]+cb 2c[       \t]+sra h\n+[ ]+54e:[ \t]+cb 2d[       \t]+sra l\n+[ ]+550:[ \t]+cb 3e[       \t]+srl \\(hl\\)\n+[ ]+552:[ \t]+dd cb 09 3e[ \t]+srl \\(ix\\+9\\)\n+[ ]+556:[ \t]+fd cb 09 3e[ \t]+srl \\(iy\\+9\\)\n+[ ]+55a:[ \t]+cb 3f[       \t]+srl a\n+[ ]+55c:[ \t]+cb 38[       \t]+srl b\n+[ ]+55e:[ \t]+cb 39[       \t]+srl c\n+[ ]+560:[ \t]+cb 3a[       \t]+srl d\n+[ ]+562:[ \t]+cb 3b[       \t]+srl e\n+[ ]+564:[ \t]+cb 3c[       \t]+srl h\n+[ ]+566:[ \t]+cb 3d[       \t]+srl l\n+[ ]+568:[ \t]+96[          \t]+sub \\(hl\\)\n+[ ]+569:[ \t]+dd 96 09[    \t]+sub \\(ix\\+9\\)\n+[ ]+56c:[ \t]+fd 96 09[    \t]+sub \\(iy\\+9\\)\n+[ ]+56f:[ \t]+d6 03[       \t]+sub 0x03\n+[ ]+571:[ \t]+97[          \t]+sub a\n+[ ]+572:[ \t]+90[          \t]+sub b\n+[ ]+573:[ \t]+91[          \t]+sub c\n+[ ]+574:[ \t]+92[          \t]+sub d\n+[ ]+575:[ \t]+93[          \t]+sub e\n+[ ]+576:[ \t]+94[          \t]+sub h\n+[ ]+577:[ \t]+95[          \t]+sub l\n+[ ]+578:[ \t]+ae[          \t]+xor \\(hl\\)\n+[ ]+579:[ \t]+dd ae 09[    \t]+xor \\(ix\\+9\\)\n+[ ]+57c:[ \t]+fd ae 09[    \t]+xor \\(iy\\+9\\)\n+[ ]+57f:[ \t]+ee 03[       \t]+xor 0x03\n+[ ]+581:[ \t]+af[          \t]+xor a\n+[ ]+582:[ \t]+a8[          \t]+xor b\n+[ ]+583:[ \t]+a9[          \t]+xor c\n+[ ]+584:[ \t]+aa[          \t]+xor d\n+[ ]+585:[ \t]+ab[          \t]+xor e\n+[ ]+586:[ \t]+ac[          \t]+xor h\n+[ ]+587:[ \t]+ad[          \t]+xor l\n+[ ]+588:[ \t]+dd 7c[       \t]+ld a,ixh\n+[ ]+58a:[ \t]+dd 44[       \t]+ld b,ixh\n+[ ]+58c:[ \t]+dd 4c[       \t]+ld c,ixh\n+[ ]+58e:[ \t]+dd 54[       \t]+ld d,ixh\n+[ ]+590:[ \t]+dd 5c[       \t]+ld e,ixh\n+[ ]+592:[ \t]+dd 64[       \t]+ld ixh,ixh\n+[ ]+594:[ \t]+dd 6c[       \t]+ld ixl,ixh\n+[ ]+596:[ \t]+dd 7d[       \t]+ld a,ixl\n+[ ]+598:[ \t]+dd 45[       \t]+ld b,ixl\n+[ ]+59a:[ \t]+dd 4d[       \t]+ld c,ixl\n+[ ]+59c:[ \t]+dd 55[       \t]+ld d,ixl\n+[ ]+59e:[ \t]+dd 5d[       \t]+ld e,ixl\n+[ ]+5a0:[ \t]+dd 65[       \t]+ld ixh,ixl\n+[ ]+5a2:[ \t]+dd 6d[       \t]+ld ixl,ixl\n+[ ]+5a4:[ \t]+fd 7c[       \t]+ld a,iyh\n+[ ]+5a6:[ \t]+fd 44[       \t]+ld b,iyh\n+[ ]+5a8:[ \t]+fd 4c[       \t]+ld c,iyh\n+[ ]+5aa:[ \t]+fd 54[       \t]+ld d,iyh\n+[ ]+5ac:[ \t]+fd 5c[       \t]+ld e,iyh\n+[ ]+5ae:[ \t]+fd 64[       \t]+ld iyh,iyh\n+[ ]+5b0:[ \t]+fd 6c[       \t]+ld iyl,iyh\n+[ ]+5b2:[ \t]+fd 7d[       \t]+ld a,iyl\n+[ ]+5b4:[ \t]+fd 45[       \t]+ld b,iyl\n+[ ]+5b6:[ \t]+fd 4d[       \t]+ld c,iyl\n+[ ]+5b8:[ \t]+fd 55[       \t]+ld d,iyl\n+[ ]+5ba:[ \t]+fd 5d[       \t]+ld e,iyl\n+[ ]+5bc:[ \t]+fd 65[       \t]+ld iyh,iyl\n+[ ]+5be:[ \t]+fd 6d[       \t]+ld iyl,iyl\n+[ ]+5c0:[ \t]+dd 67[       \t]+ld ixh,a\n+[ ]+5c2:[ \t]+dd 60[       \t]+ld ixh,b\n+[ ]+5c4:[ \t]+dd 61[       \t]+ld ixh,c\n+[ ]+5c6:[ \t]+dd 62[       \t]+ld ixh,d\n+[ ]+5c8:[ \t]+dd 63[       \t]+ld ixh,e\n+[ ]+5ca:[ \t]+dd 64[       \t]+ld ixh,ixh\n+[ ]+5cc:[ \t]+dd 65[       \t]+ld ixh,ixl\n+[ ]+5ce:[ \t]+dd 26 19[    \t]+ld ixh,0x19\n+[ ]+5d1:[ \t]+dd 6f[       \t]+ld ixl,a\n+[ ]+5d3:[ \t]+dd 68[       \t]+ld ixl,b\n+[ ]+5d5:[ \t]+dd 69[       \t]+ld ixl,c\n+[ ]+5d7:[ \t]+dd 6a[       \t]+ld ixl,d\n+[ ]+5d9:[ \t]+dd 6b[       \t]+ld ixl,e\n+[ ]+5db:[ \t]+dd 6c[       \t]+ld ixl,ixh\n+[ ]+5dd:[ \t]+dd 6d[       \t]+ld ixl,ixl\n+[ ]+5df:[ \t]+dd 2e 19[    \t]+ld ixl,0x19\n+[ ]+5e2:[ \t]+fd 67[       \t]+ld iyh,a\n+[ ]+5e4:[ \t]+fd 60[       \t]+ld iyh,b\n+[ ]+5e6:[ \t]+fd 61[       \t]+ld iyh,c\n+[ ]+5e8:[ \t]+fd 62[       \t]+ld iyh,d\n+[ ]+5ea:[ \t]+fd 63[       \t]+ld iyh,e\n+[ ]+5ec:[ \t]+fd 64[       \t]+ld iyh,iyh\n+[ ]+5ee:[ \t]+fd 65[       \t]+ld iyh,iyl\n+[ ]+5f0:[ \t]+fd 26 19[    \t]+ld iyh,0x19\n+[ ]+5f3:[ \t]+fd 6f[       \t]+ld iyl,a\n+[ ]+5f5:[ \t]+fd 68[       \t]+ld iyl,b\n+[ ]+5f7:[ \t]+fd 69[       \t]+ld iyl,c\n+[ ]+5f9:[ \t]+fd 6a[       \t]+ld iyl,d\n+[ ]+5fb:[ \t]+fd 6b[       \t]+ld iyl,e\n+[ ]+5fd:[ \t]+fd 6c[       \t]+ld iyl,iyh\n+[ ]+5ff:[ \t]+fd 6d[       \t]+ld iyl,iyl\n+[ ]+601:[ \t]+fd 2e 19[    \t]+ld iyl,0x19\n+[ ]+604:[ \t]+dd 84[       \t]+add a,ixh\n+[ ]+606:[ \t]+dd 85[       \t]+add a,ixl\n+[ ]+608:[ \t]+fd 84[       \t]+add a,iyh\n+[ ]+60a:[ \t]+fd 85[       \t]+add a,iyl\n+[ ]+60c:[ \t]+dd 8c[       \t]+adc a,ixh\n+[ ]+60e:[ \t]+dd 8d[       \t]+adc a,ixl\n+[ ]+610:[ \t]+fd 8c[       \t]+adc a,iyh\n+[ ]+612:[ \t]+fd 8d[       \t]+adc a,iyl\n+[ ]+614:[ \t]+dd bc[       \t]+cp ixh\n+[ ]+616:[ \t]+dd bd[       \t]+cp ixl\n+[ ]+618:[ \t]+fd bc[       \t]+cp iyh\n+[ ]+61a:[ \t]+fd bd[       \t]+cp iyl\n+[ ]+61c:[ \t]+dd 25[       \t]+dec ixh\n+[ ]+61e:[ \t]+dd 2d[       \t]+dec ixl\n+[ ]+620:[ \t]+fd 25[       \t]+dec iyh\n+[ ]+622:[ \t]+fd 2d[       \t]+dec iyl\n+[ ]+624:[ \t]+dd 24[       \t]+inc ixh\n+[ ]+626:[ \t]+dd 2c[       \t]+inc ixl\n+[ ]+628:[ \t]+fd 24[       \t]+inc iyh\n+[ ]+62a:[ \t]+fd 2c[       \t]+inc iyl\n+[ ]+62c:[ \t]+dd 9c[       \t]+sbc a,ixh\n+[ ]+62e:[ \t]+dd 9d[       \t]+sbc a,ixl\n+[ ]+630:[ \t]+fd 9c[       \t]+sbc a,iyh\n+[ ]+632:[ \t]+fd 9d[       \t]+sbc a,iyl\n+[ ]+634:[ \t]+dd 94[       \t]+sub ixh\n+[ ]+636:[ \t]+dd 95[       \t]+sub ixl\n+[ ]+638:[ \t]+fd 94[       \t]+sub iyh\n+[ ]+63a:[ \t]+fd 95[       \t]+sub iyl\n+[ ]+63c:[ \t]+dd a4[       \t]+and ixh\n+[ ]+63e:[ \t]+dd a5[       \t]+and ixl\n+[ ]+640:[ \t]+fd a4[       \t]+and iyh\n+[ ]+642:[ \t]+fd a5[       \t]+and iyl\n+[ ]+644:[ \t]+dd b4[       \t]+or ixh\n+[ ]+646:[ \t]+dd b5[       \t]+or ixl\n+[ ]+648:[ \t]+fd b4[       \t]+or iyh\n+[ ]+64a:[ \t]+fd b5[       \t]+or iyl\n+[ ]+64c:[ \t]+dd ac[       \t]+xor ixh\n+[ ]+64e:[ \t]+dd ad[       \t]+xor ixl\n+[ ]+650:[ \t]+fd ac[       \t]+xor iyh\n+[ ]+652:[ \t]+fd ad[       \t]+xor iyl\n+[ ]+654:[ \t]+ed 70[       \t]+in f,\\(c\\)\n+[ ]+656:[ \t]+ed 70[       \t]+in f,\\(c\\)\n+[ ]+658:[ \t]+ed 71[       \t]+out \\(c\\),0\n+[ ]+65a:[ \t]+dd cb 08 07[ \t]+rlc \\(ix\\+8\\),a\n+[ ]+65e:[ \t]+dd cb 08 00[ \t]+rlc \\(ix\\+8\\),b\n+[ ]+662:[ \t]+dd cb 08 01[ \t]+rlc \\(ix\\+8\\),c\n+[ ]+666:[ \t]+dd cb 08 02[ \t]+rlc \\(ix\\+8\\),d\n+[ ]+66a:[ \t]+dd cb 08 03[ \t]+rlc \\(ix\\+8\\),e\n+[ ]+66e:[ \t]+dd cb 08 04[ \t]+rlc \\(ix\\+8\\),h\n+[ ]+672:[ \t]+dd cb 08 05[ \t]+rlc \\(ix\\+8\\),l\n+[ ]+676:[ \t]+fd cb 08 07[ \t]+rlc \\(iy\\+8\\),a\n+[ ]+67a:[ \t]+fd cb 08 00[ \t]+rlc \\(iy\\+8\\),b\n+[ ]+67e:[ \t]+fd cb 08 01[ \t]+rlc \\(iy\\+8\\),c\n+[ ]+682:[ \t]+fd cb 08 02[ \t]+rlc \\(iy\\+8\\),d\n+[ ]+686:[ \t]+fd cb 08 03[ \t]+rlc \\(iy\\+8\\),e\n+[ ]+68a:[ \t]+fd cb 08 04[ \t]+rlc \\(iy\\+8\\),h\n+[ ]+68e:[ \t]+fd cb 08 05[ \t]+rlc \\(iy\\+8\\),l\n+[ ]+692:[ \t]+dd cb 08 0f[ \t]+rrc \\(ix\\+8\\),a\n+[ ]+696:[ \t]+dd cb 08 08[ \t]+rrc \\(ix\\+8\\),b\n+[ ]+69a:[ \t]+dd cb 08 09[ \t]+rrc \\(ix\\+8\\),c\n+[ ]+69e:[ \t]+dd cb 08 0a[ \t]+rrc \\(ix\\+8\\),d\n+[ ]+6a2:[ \t]+dd cb 08 0b[ \t]+rrc \\(ix\\+8\\),e\n+[ ]+6a6:[ \t]+dd cb 08 0c[ \t]+rrc \\(ix\\+8\\),h\n+[ ]+6aa:[ \t]+dd cb 08 0d[ \t]+rrc \\(ix\\+8\\),l\n+[ ]+6ae:[ \t]+fd cb 08 0f[ \t]+rrc \\(iy\\+8\\),a\n+[ ]+6b2:[ \t]+fd cb 08 08[ \t]+rrc \\(iy\\+8\\),b\n+[ ]+6b6:[ \t]+fd cb 08 09[ \t]+rrc \\(iy\\+8\\),c\n+[ ]+6ba:[ \t]+fd cb 08 0a[ \t]+rrc \\(iy\\+8\\),d\n+[ ]+6be:[ \t]+fd cb 08 0b[ \t]+rrc \\(iy\\+8\\),e\n+[ ]+6c2:[ \t]+fd cb 08 0c[ \t]+rrc \\(iy\\+8\\),h\n+[ ]+6c6:[ \t]+fd cb 08 0d[ \t]+rrc \\(iy\\+8\\),l\n+[ ]+6ca:[ \t]+dd cb 08 17[ \t]+rl \\(ix\\+8\\),a\n+[ ]+6ce:[ \t]+dd cb 08 10[ \t]+rl \\(ix\\+8\\),b\n+[ ]+6d2:[ \t]+dd cb 08 11[ \t]+rl \\(ix\\+8\\),c\n+[ ]+6d6:[ \t]+dd cb 08 12[ \t]+rl \\(ix\\+8\\),d\n+[ ]+6da:[ \t]+dd cb 08 13[ \t]+rl \\(ix\\+8\\),e\n+[ ]+6de:[ \t]+dd cb 08 14[ \t]+rl \\(ix\\+8\\),h\n+[ ]+6e2:[ \t]+dd cb 08 15[ \t]+rl \\(ix\\+8\\),l\n+[ ]+6e6:[ \t]+fd cb 08 17[ \t]+rl \\(iy\\+8\\),a\n+[ ]+6ea:[ \t]+fd cb 08 10[ \t]+rl \\(iy\\+8\\),b\n+[ ]+6ee:[ \t]+fd cb 08 11[ \t]+rl \\(iy\\+8\\),c\n+[ ]+6f2:[ \t]+fd cb 08 12[ \t]+rl \\(iy\\+8\\),d\n+[ ]+6f6:[ \t]+fd cb 08 13[ \t]+rl \\(iy\\+8\\),e\n+[ ]+6fa:[ \t]+fd cb 08 14[ \t]+rl \\(iy\\+8\\),h\n+[ ]+6fe:[ \t]+fd cb 08 15[ \t]+rl \\(iy\\+8\\),l\n+[ ]+702:[ \t]+dd cb 08 1f[ \t]+rr \\(ix\\+8\\),a\n+[ ]+706:[ \t]+dd cb 08 18[ \t]+rr \\(ix\\+8\\),b\n+[ ]+70a:[ \t]+dd cb 08 19[ \t]+rr \\(ix\\+8\\),c\n+[ ]+70e:[ \t]+dd cb 08 1a[ \t]+rr \\(ix\\+8\\),d\n+[ ]+712:[ \t]+dd cb 08 1b[ \t]+rr \\(ix\\+8\\),e\n+[ ]+716:[ \t]+dd cb 08 1c[ \t]+rr \\(ix\\+8\\),h\n+[ ]+71a:[ \t]+dd cb 08 1d[ \t]+rr \\(ix\\+8\\),l\n+[ ]+71e:[ \t]+fd cb 08 1f[ \t]+rr \\(iy\\+8\\),a\n+[ ]+722:[ \t]+fd cb 08 18[ \t]+rr \\(iy\\+8\\),b\n+[ ]+726:[ \t]+fd cb 08 19[ \t]+rr \\(iy\\+8\\),c\n+[ ]+72a:[ \t]+fd cb 08 1a[ \t]+rr \\(iy\\+8\\),d\n+[ ]+72e:[ \t]+fd cb 08 1b[ \t]+rr \\(iy\\+8\\),e\n+[ ]+732:[ \t]+fd cb 08 1c[ \t]+rr \\(iy\\+8\\),h\n+[ ]+736:[ \t]+fd cb 08 1d[ \t]+rr \\(iy\\+8\\),l\n+[ ]+73a:[ \t]+dd cb 08 27[ \t]+sla \\(ix\\+8\\),a\n+[ ]+73e:[ \t]+dd cb 08 20[ \t]+sla \\(ix\\+8\\),b\n+[ ]+742:[ \t]+dd cb 08 21[ \t]+sla \\(ix\\+8\\),c\n+[ ]+746:[ \t]+dd cb 08 22[ \t]+sla \\(ix\\+8\\),d\n+[ ]+74a:[ \t]+dd cb 08 23[ \t]+sla \\(ix\\+8\\),e\n+[ ]+74e:[ \t]+dd cb 08 24[ \t]+sla \\(ix\\+8\\),h\n+[ ]+752:[ \t]+dd cb 08 25[ \t]+sla \\(ix\\+8\\),l\n+[ ]+756:[ \t]+fd cb 08 27[ \t]+sla \\(iy\\+8\\),a\n+[ ]+75a:[ \t]+fd cb 08 20[ \t]+sla \\(iy\\+8\\),b\n+[ ]+75e:[ \t]+fd cb 08 21[ \t]+sla \\(iy\\+8\\),c\n+[ ]+762:[ \t]+fd cb 08 22[ \t]+sla \\(iy\\+8\\),d\n+[ ]+766:[ \t]+fd cb 08 23[ \t]+sla \\(iy\\+8\\),e\n+[ ]+76a:[ \t]+fd cb 08 24[ \t]+sla \\(iy\\+8\\),h\n+[ ]+76e:[ \t]+fd cb 08 25[ \t]+sla \\(iy\\+8\\),l\n+[ ]+772:[ \t]+dd cb 08 2f[ \t]+sra \\(ix\\+8\\),a\n+[ ]+776:[ \t]+dd cb 08 28[ \t]+sra \\(ix\\+8\\),b\n+[ ]+77a:[ \t]+dd cb 08 29[ \t]+sra \\(ix\\+8\\),c\n+[ ]+77e:[ \t]+dd cb 08 2a[ \t]+sra \\(ix\\+8\\),d\n+[ ]+782:[ \t]+dd cb 08 2b[ \t]+sra \\(ix\\+8\\),e\n+[ ]+786:[ \t]+dd cb 08 2c[ \t]+sra \\(ix\\+8\\),h\n+[ ]+78a:[ \t]+dd cb 08 2d[ \t]+sra \\(ix\\+8\\),l\n+[ ]+78e:[ \t]+fd cb 08 2f[ \t]+sra \\(iy\\+8\\),a\n+[ ]+792:[ \t]+fd cb 08 28[ \t]+sra \\(iy\\+8\\),b\n+[ ]+796:[ \t]+fd cb 08 29[ \t]+sra \\(iy\\+8\\),c\n+[ ]+79a:[ \t]+fd cb 08 2a[ \t]+sra \\(iy\\+8\\),d\n+[ ]+79e:[ \t]+fd cb 08 2b[ \t]+sra \\(iy\\+8\\),e\n+[ ]+7a2:[ \t]+fd cb 08 2c[ \t]+sra \\(iy\\+8\\),h\n+[ ]+7a6:[ \t]+fd cb 08 2d[ \t]+sra \\(iy\\+8\\),l\n+[ ]+7aa:[ \t]+dd cb 08 37[ \t]+sli \\(ix\\+8\\),a\n+[ ]+7ae:[ \t]+dd cb 08 30[ \t]+sli \\(ix\\+8\\),b\n+[ ]+7b2:[ \t]+dd cb 08 31[ \t]+sli \\(ix\\+8\\),c\n+[ ]+7b6:[ \t]+dd cb 08 32[ \t]+sli \\(ix\\+8\\),d\n+[ ]+7ba:[ \t]+dd cb 08 33[ \t]+sli \\(ix\\+8\\),e\n+[ ]+7be:[ \t]+dd cb 08 34[ \t]+sli \\(ix\\+8\\),h\n+[ ]+7c2:[ \t]+dd cb 08 35[ \t]+sli \\(ix\\+8\\),l\n+[ ]+7c6:[ \t]+fd cb 08 37[ \t]+sli \\(iy\\+8\\),a\n+[ ]+7ca:[ \t]+fd cb 08 30[ \t]+sli \\(iy\\+8\\),b\n+[ ]+7ce:[ \t]+fd cb 08 31[ \t]+sli \\(iy\\+8\\),c\n+[ ]+7d2:[ \t]+fd cb 08 32[ \t]+sli \\(iy\\+8\\),d\n+[ ]+7d6:[ \t]+fd cb 08 33[ \t]+sli \\(iy\\+8\\),e\n+[ ]+7da:[ \t]+fd cb 08 34[ \t]+sli \\(iy\\+8\\),h\n+[ ]+7de:[ \t]+fd cb 08 35[ \t]+sli \\(iy\\+8\\),l\n+[ ]+7e2:[ \t]+dd cb 08 3f[ \t]+srl \\(ix\\+8\\),a\n+[ ]+7e6:[ \t]+dd cb 08 38[ \t]+srl \\(ix\\+8\\),b\n+[ ]+7ea:[ \t]+dd cb 08 39[ \t]+srl \\(ix\\+8\\),c\n+[ ]+7ee:[ \t]+dd cb 08 3a[ \t]+srl \\(ix\\+8\\),d\n+[ ]+7f2:[ \t]+dd cb 08 3b[ \t]+srl \\(ix\\+8\\),e\n+[ ]+7f6:[ \t]+dd cb 08 3c[ \t]+srl \\(ix\\+8\\),h\n+[ ]+7fa:[ \t]+dd cb 08 3d[ \t]+srl \\(ix\\+8\\),l\n+[ ]+7fe:[ \t]+fd cb 08 3f[ \t]+srl \\(iy\\+8\\),a\n+[ ]+802:[ \t]+fd cb 08 38[ \t]+srl \\(iy\\+8\\),b\n+[ ]+806:[ \t]+fd cb 08 39[ \t]+srl \\(iy\\+8\\),c\n+[ ]+80a:[ \t]+fd cb 08 3a[ \t]+srl \\(iy\\+8\\),d\n+[ ]+80e:[ \t]+fd cb 08 3b[ \t]+srl \\(iy\\+8\\),e\n+[ ]+812:[ \t]+fd cb 08 3c[ \t]+srl \\(iy\\+8\\),h\n+[ ]+816:[ \t]+fd cb 08 3d[ \t]+srl \\(iy\\+8\\),l\n+[ ]+81a:[ \t]+dd cb 08 87[ \t]+res 0,\\(ix\\+8\\),a\n+[ ]+81e:[ \t]+dd cb 08 80[ \t]+res 0,\\(ix\\+8\\),b\n+[ ]+822:[ \t]+dd cb 08 81[ \t]+res 0,\\(ix\\+8\\),c\n+[ ]+826:[ \t]+dd cb 08 82[ \t]+res 0,\\(ix\\+8\\),d\n+[ ]+82a:[ \t]+dd cb 08 83[ \t]+res 0,\\(ix\\+8\\),e\n+[ ]+82e:[ \t]+dd cb 08 84[ \t]+res 0,\\(ix\\+8\\),h\n+[ ]+832:[ \t]+dd cb 08 85[ \t]+res 0,\\(ix\\+8\\),l\n+[ ]+836:[ \t]+fd cb 08 87[ \t]+res 0,\\(iy\\+8\\),a\n+[ ]+83a:[ \t]+fd cb 08 80[ \t]+res 0,\\(iy\\+8\\),b\n+[ ]+83e:[ \t]+fd cb 08 81[ \t]+res 0,\\(iy\\+8\\),c\n+[ ]+842:[ \t]+fd cb 08 82[ \t]+res 0,\\(iy\\+8\\),d\n+[ ]+846:[ \t]+fd cb 08 83[ \t]+res 0,\\(iy\\+8\\),e\n+[ ]+84a:[ \t]+fd cb 08 84[ \t]+res 0,\\(iy\\+8\\),h\n+[ ]+84e:[ \t]+fd cb 08 85[ \t]+res 0,\\(iy\\+8\\),l\n+[ ]+852:[ \t]+dd cb 08 8f[ \t]+res 1,\\(ix\\+8\\),a\n+[ ]+856:[ \t]+dd cb 08 88[ \t]+res 1,\\(ix\\+8\\),b\n+[ ]+85a:[ \t]+dd cb 08 89[ \t]+res 1,\\(ix\\+8\\),c\n+[ ]+85e:[ \t]+dd cb 08 8a[ \t]+res 1,\\(ix\\+8\\),d\n+[ ]+862:[ \t]+dd cb 08 8b[ \t]+res 1,\\(ix\\+8\\),e\n+[ ]+866:[ \t]+dd cb 08 8c[ \t]+res 1,\\(ix\\+8\\),h\n+[ ]+86a:[ \t]+dd cb 08 8d[ \t]+res 1,\\(ix\\+8\\),l\n+[ ]+86e:[ \t]+fd cb 08 8f[ \t]+res 1,\\(iy\\+8\\),a\n+[ ]+872:[ \t]+fd cb 08 88[ \t]+res 1,\\(iy\\+8\\),b\n+[ ]+876:[ \t]+fd cb 08 89[ \t]+res 1,\\(iy\\+8\\),c\n+[ ]+87a:[ \t]+fd cb 08 8a[ \t]+res 1,\\(iy\\+8\\),d\n+[ ]+87e:[ \t]+fd cb 08 8b[ \t]+res 1,\\(iy\\+8\\),e\n+[ ]+882:[ \t]+fd cb 08 8c[ \t]+res 1,\\(iy\\+8\\),h\n+[ ]+886:[ \t]+fd cb 08 8d[ \t]+res 1,\\(iy\\+8\\),l\n+[ ]+88a:[ \t]+dd cb 08 97[ \t]+res 2,\\(ix\\+8\\),a\n+[ ]+88e:[ \t]+dd cb 08 90[ \t]+res 2,\\(ix\\+8\\),b\n+[ ]+892:[ \t]+dd cb 08 91[ \t]+res 2,\\(ix\\+8\\),c\n+[ ]+896:[ \t]+dd cb 08 92[ \t]+res 2,\\(ix\\+8\\),d\n+[ ]+89a:[ \t]+dd cb 08 93[ \t]+res 2,\\(ix\\+8\\),e\n+[ ]+89e:[ \t]+dd cb 08 94[ \t]+res 2,\\(ix\\+8\\),h\n+[ ]+8a2:[ \t]+dd cb 08 95[ \t]+res 2,\\(ix\\+8\\),l\n+[ ]+8a6:[ \t]+fd cb 08 97[ \t]+res 2,\\(iy\\+8\\),a\n+[ ]+8aa:[ \t]+fd cb 08 90[ \t]+res 2,\\(iy\\+8\\),b\n+[ ]+8ae:[ \t]+fd cb 08 91[ \t]+res 2,\\(iy\\+8\\),c\n+[ ]+8b2:[ \t]+fd cb 08 92[ \t]+res 2,\\(iy\\+8\\),d\n+[ ]+8b6:[ \t]+fd cb 08 93[ \t]+res 2,\\(iy\\+8\\),e\n+[ ]+8ba:[ \t]+fd cb 08 94[ \t]+res 2,\\(iy\\+8\\),h\n+[ ]+8be:[ \t]+fd cb 08 95[ \t]+res 2,\\(iy\\+8\\),l\n+[ ]+8c2:[ \t]+dd cb 08 9f[ \t]+res 3,\\(ix\\+8\\),a\n+[ ]+8c6:[ \t]+dd cb 08 98[ \t]+res 3,\\(ix\\+8\\),b\n+[ ]+8ca:[ \t]+dd cb 08 99[ \t]+res 3,\\(ix\\+8\\),c\n+[ ]+8ce:[ \t]+dd cb 08 9a[ \t]+res 3,\\(ix\\+8\\),d\n+[ ]+8d2:[ \t]+dd cb 08 9b[ \t]+res 3,\\(ix\\+8\\),e\n+[ ]+8d6:[ \t]+dd cb 08 9c[ \t]+res 3,\\(ix\\+8\\),h\n+[ ]+8da:[ \t]+dd cb 08 9d[ \t]+res 3,\\(ix\\+8\\),l\n+[ ]+8de:[ \t]+fd cb 08 9f[ \t]+res 3,\\(iy\\+8\\),a\n+[ ]+8e2:[ \t]+fd cb 08 98[ \t]+res 3,\\(iy\\+8\\),b\n+[ ]+8e6:[ \t]+fd cb 08 99[ \t]+res 3,\\(iy\\+8\\),c\n+[ ]+8ea:[ \t]+fd cb 08 9a[ \t]+res 3,\\(iy\\+8\\),d\n+[ ]+8ee:[ \t]+fd cb 08 9b[ \t]+res 3,\\(iy\\+8\\),e\n+[ ]+8f2:[ \t]+fd cb 08 9c[ \t]+res 3,\\(iy\\+8\\),h\n+[ ]+8f6:[ \t]+fd cb 08 9d[ \t]+res 3,\\(iy\\+8\\),l\n+[ ]+8fa:[ \t]+dd cb 08 a7[ \t]+res 4,\\(ix\\+8\\),a\n+[ ]+8fe:[ \t]+dd cb 08 a0[ \t]+res 4,\\(ix\\+8\\),b\n+[ ]+902:[ \t]+dd cb 08 a1[ \t]+res 4,\\(ix\\+8\\),c\n+[ ]+906:[ \t]+dd cb 08 a2[ \t]+res 4,\\(ix\\+8\\),d\n+[ ]+90a:[ \t]+dd cb 08 a3[ \t]+res 4,\\(ix\\+8\\),e\n+[ ]+90e:[ \t]+dd cb 08 a4[ \t]+res 4,\\(ix\\+8\\),h\n+[ ]+912:[ \t]+dd cb 08 a5[ \t]+res 4,\\(ix\\+8\\),l\n+[ ]+916:[ \t]+fd cb 08 a7[ \t]+res 4,\\(iy\\+8\\),a\n+[ ]+91a:[ \t]+fd cb 08 a0[ \t]+res 4,\\(iy\\+8\\),b\n+[ ]+91e:[ \t]+fd cb 08 a1[ \t]+res 4,\\(iy\\+8\\),c\n+[ ]+922:[ \t]+fd cb 08 a2[ \t]+res 4,\\(iy\\+8\\),d\n+[ ]+926:[ \t]+fd cb 08 a3[ \t]+res 4,\\(iy\\+8\\),e\n+[ ]+92a:[ \t]+fd cb 08 a4[ \t]+res 4,\\(iy\\+8\\),h\n+[ ]+92e:[ \t]+fd cb 08 a5[ \t]+res 4,\\(iy\\+8\\),l\n+[ ]+932:[ \t]+dd cb 08 af[ \t]+res 5,\\(ix\\+8\\),a\n+[ ]+936:[ \t]+dd cb 08 a8[ \t]+res 5,\\(ix\\+8\\),b\n+[ ]+93a:[ \t]+dd cb 08 a9[ \t]+res 5,\\(ix\\+8\\),c\n+[ ]+93e:[ \t]+dd cb 08 aa[ \t]+res 5,\\(ix\\+8\\),d\n+[ ]+942:[ \t]+dd cb 08 ab[ \t]+res 5,\\(ix\\+8\\),e\n+[ ]+946:[ \t]+dd cb 08 ac[ \t]+res 5,\\(ix\\+8\\),h\n+[ ]+94a:[ \t]+dd cb 08 ad[ \t]+res 5,\\(ix\\+8\\),l\n+[ ]+94e:[ \t]+fd cb 08 af[ \t]+res 5,\\(iy\\+8\\),a\n+[ ]+952:[ \t]+fd cb 08 a8[ \t]+res 5,\\(iy\\+8\\),b\n+[ ]+956:[ \t]+fd cb 08 a9[ \t]+res 5,\\(iy\\+8\\),c\n+[ ]+95a:[ \t]+fd cb 08 aa[ \t]+res 5,\\(iy\\+8\\),d\n+[ ]+95e:[ \t]+fd cb 08 ab[ \t]+res 5,\\(iy\\+8\\),e\n+[ ]+962:[ \t]+fd cb 08 ac[ \t]+res 5,\\(iy\\+8\\),h\n+[ ]+966:[ \t]+fd cb 08 ad[ \t]+res 5,\\(iy\\+8\\),l\n+[ ]+96a:[ \t]+dd cb 08 b7[ \t]+res 6,\\(ix\\+8\\),a\n+[ ]+96e:[ \t]+dd cb 08 b0[ \t]+res 6,\\(ix\\+8\\),b\n+[ ]+972:[ \t]+dd cb 08 b1[ \t]+res 6,\\(ix\\+8\\),c\n+[ ]+976:[ \t]+dd cb 08 b2[ \t]+res 6,\\(ix\\+8\\),d\n+[ ]+97a:[ \t]+dd cb 08 b3[ \t]+res 6,\\(ix\\+8\\),e\n+[ ]+97e:[ \t]+dd cb 08 b4[ \t]+res 6,\\(ix\\+8\\),h\n+[ ]+982:[ \t]+dd cb 08 b5[ \t]+res 6,\\(ix\\+8\\),l\n+[ ]+986:[ \t]+fd cb 08 b7[ \t]+res 6,\\(iy\\+8\\),a\n+[ ]+98a:[ \t]+fd cb 08 b0[ \t]+res 6,\\(iy\\+8\\),b\n+[ ]+98e:[ \t]+fd cb 08 b1[ \t]+res 6,\\(iy\\+8\\),c\n+[ ]+992:[ \t]+fd cb 08 b2[ \t]+res 6,\\(iy\\+8\\),d\n+[ ]+996:[ \t]+fd cb 08 b3[ \t]+res 6,\\(iy\\+8\\),e\n+[ ]+99a:[ \t]+fd cb 08 b4[ \t]+res 6,\\(iy\\+8\\),h\n+[ ]+99e:[ \t]+fd cb 08 b5[ \t]+res 6,\\(iy\\+8\\),l\n+[ ]+9a2:[ \t]+dd cb 08 bf[ \t]+res 7,\\(ix\\+8\\),a\n+[ ]+9a6:[ \t]+dd cb 08 b8[ \t]+res 7,\\(ix\\+8\\),b\n+[ ]+9aa:[ \t]+dd cb 08 b9[ \t]+res 7,\\(ix\\+8\\),c\n+[ ]+9ae:[ \t]+dd cb 08 ba[ \t]+res 7,\\(ix\\+8\\),d\n+[ ]+9b2:[ \t]+dd cb 08 bb[ \t]+res 7,\\(ix\\+8\\),e\n+[ ]+9b6:[ \t]+dd cb 08 bc[ \t]+res 7,\\(ix\\+8\\),h\n+[ ]+9ba:[ \t]+dd cb 08 bd[ \t]+res 7,\\(ix\\+8\\),l\n+[ ]+9be:[ \t]+fd cb 08 bf[ \t]+res 7,\\(iy\\+8\\),a\n+[ ]+9c2:[ \t]+fd cb 08 b8[ \t]+res 7,\\(iy\\+8\\),b\n+[ ]+9c6:[ \t]+fd cb 08 b9[ \t]+res 7,\\(iy\\+8\\),c\n+[ ]+9ca:[ \t]+fd cb 08 ba[ \t]+res 7,\\(iy\\+8\\),d\n+[ ]+9ce:[ \t]+fd cb 08 bb[ \t]+res 7,\\(iy\\+8\\),e\n+[ ]+9d2:[ \t]+fd cb 08 bc[ \t]+res 7,\\(iy\\+8\\),h\n+[ ]+9d6:[ \t]+fd cb 08 bd[ \t]+res 7,\\(iy\\+8\\),l\n+[ ]+9da:[ \t]+dd cb 08 c7[ \t]+set 0,\\(ix\\+8\\),a\n+[ ]+9de:[ \t]+dd cb 08 c0[ \t]+set 0,\\(ix\\+8\\),b\n+[ ]+9e2:[ \t]+dd cb 08 c1[ \t]+set 0,\\(ix\\+8\\),c\n+[ ]+9e6:[ \t]+dd cb 08 c2[ \t]+set 0,\\(ix\\+8\\),d\n+[ ]+9ea:[ \t]+dd cb 08 c3[ \t]+set 0,\\(ix\\+8\\),e\n+[ ]+9ee:[ \t]+dd cb 08 c4[ \t]+set 0,\\(ix\\+8\\),h\n+[ ]+9f2:[ \t]+dd cb 08 c5[ \t]+set 0,\\(ix\\+8\\),l\n+[ ]+9f6:[ \t]+fd cb 08 c7[ \t]+set 0,\\(iy\\+8\\),a\n+[ ]+9fa:[ \t]+fd cb 08 c0[ \t]+set 0,\\(iy\\+8\\),b\n+[ ]+9fe:[ \t]+fd cb 08 c1[ \t]+set 0,\\(iy\\+8\\),c\n+[ ]+a02:[ \t]+fd cb 08 c2[ \t]+set 0,\\(iy\\+8\\),d\n+[ ]+a06:[ \t]+fd cb 08 c3[ \t]+set 0,\\(iy\\+8\\),e\n+[ ]+a0a:[ \t]+fd cb 08 c4[ \t]+set 0,\\(iy\\+8\\),h\n+[ ]+a0e:[ \t]+fd cb 08 c5[ \t]+set 0,\\(iy\\+8\\),l\n+[ ]+a12:[ \t]+dd cb 08 cf[ \t]+set 1,\\(ix\\+8\\),a\n+[ ]+a16:[ \t]+dd cb 08 c8[ \t]+set 1,\\(ix\\+8\\),b\n+[ ]+a1a:[ \t]+dd cb 08 c9[ \t]+set 1,\\(ix\\+8\\),c\n+[ ]+a1e:[ \t]+dd cb 08 ca[ \t]+set 1,\\(ix\\+8\\),d\n+[ ]+a22:[ \t]+dd cb 08 cb[ \t]+set 1,\\(ix\\+8\\),e\n+[ ]+a26:[ \t]+dd cb 08 cc[ \t]+set 1,\\(ix\\+8\\),h\n+[ ]+a2a:[ \t]+dd cb 08 cd[ \t]+set 1,\\(ix\\+8\\),l\n+[ ]+a2e:[ \t]+fd cb 08 cf[ \t]+set 1,\\(iy\\+8\\),a\n+[ ]+a32:[ \t]+fd cb 08 c8[ \t]+set 1,\\(iy\\+8\\),b\n+[ ]+a36:[ \t]+fd cb 08 c9[ \t]+set 1,\\(iy\\+8\\),c\n+[ ]+a3a:[ \t]+fd cb 08 ca[ \t]+set 1,\\(iy\\+8\\),d\n+[ ]+a3e:[ \t]+fd cb 08 cb[ \t]+set 1,\\(iy\\+8\\),e\n+[ ]+a42:[ \t]+fd cb 08 cc[ \t]+set 1,\\(iy\\+8\\),h\n+[ ]+a46:[ \t]+fd cb 08 cd[ \t]+set 1,\\(iy\\+8\\),l\n+[ ]+a4a:[ \t]+dd cb 08 d7[ \t]+set 2,\\(ix\\+8\\),a\n+[ ]+a4e:[ \t]+dd cb 08 d0[ \t]+set 2,\\(ix\\+8\\),b\n+[ ]+a52:[ \t]+dd cb 08 d1[ \t]+set 2,\\(ix\\+8\\),c\n+[ ]+a56:[ \t]+dd cb 08 d2[ \t]+set 2,\\(ix\\+8\\),d\n+[ ]+a5a:[ \t]+dd cb 08 d3[ \t]+set 2,\\(ix\\+8\\),e\n+[ ]+a5e:[ \t]+dd cb 08 d4[ \t]+set 2,\\(ix\\+8\\),h\n+[ ]+a62:[ \t]+dd cb 08 d5[ \t]+set 2,\\(ix\\+8\\),l\n+[ ]+a66:[ \t]+fd cb 08 d7[ \t]+set 2,\\(iy\\+8\\),a\n+[ ]+a6a:[ \t]+fd cb 08 d0[ \t]+set 2,\\(iy\\+8\\),b\n+[ ]+a6e:[ \t]+fd cb 08 d1[ \t]+set 2,\\(iy\\+8\\),c\n+[ ]+a72:[ \t]+fd cb 08 d2[ \t]+set 2,\\(iy\\+8\\),d\n+[ ]+a76:[ \t]+fd cb 08 d3[ \t]+set 2,\\(iy\\+8\\),e\n+[ ]+a7a:[ \t]+fd cb 08 d4[ \t]+set 2,\\(iy\\+8\\),h\n+[ ]+a7e:[ \t]+fd cb 08 d5[ \t]+set 2,\\(iy\\+8\\),l\n+[ ]+a82:[ \t]+dd cb 08 df[ \t]+set 3,\\(ix\\+8\\),a\n+[ ]+a86:[ \t]+dd cb 08 d8[ \t]+set 3,\\(ix\\+8\\),b\n+[ ]+a8a:[ \t]+dd cb 08 d9[ \t]+set 3,\\(ix\\+8\\),c\n+[ ]+a8e:[ \t]+dd cb 08 da[ \t]+set 3,\\(ix\\+8\\),d\n+[ ]+a92:[ \t]+dd cb 08 db[ \t]+set 3,\\(ix\\+8\\),e\n+[ ]+a96:[ \t]+dd cb 08 dc[ \t]+set 3,\\(ix\\+8\\),h\n+[ ]+a9a:[ \t]+dd cb 08 dd[ \t]+set 3,\\(ix\\+8\\),l\n+[ ]+a9e:[ \t]+fd cb 08 df[ \t]+set 3,\\(iy\\+8\\),a\n+[ ]+aa2:[ \t]+fd cb 08 d8[ \t]+set 3,\\(iy\\+8\\),b\n+[ ]+aa6:[ \t]+fd cb 08 d9[ \t]+set 3,\\(iy\\+8\\),c\n+[ ]+aaa:[ \t]+fd cb 08 da[ \t]+set 3,\\(iy\\+8\\),d\n+[ ]+aae:[ \t]+fd cb 08 db[ \t]+set 3,\\(iy\\+8\\),e\n+[ ]+ab2:[ \t]+fd cb 08 dc[ \t]+set 3,\\(iy\\+8\\),h\n+[ ]+ab6:[ \t]+fd cb 08 dd[ \t]+set 3,\\(iy\\+8\\),l\n+[ ]+aba:[ \t]+dd cb 08 e7[ \t]+set 4,\\(ix\\+8\\),a\n+[ ]+abe:[ \t]+dd cb 08 e0[ \t]+set 4,\\(ix\\+8\\),b\n+[ ]+ac2:[ \t]+dd cb 08 e1[ \t]+set 4,\\(ix\\+8\\),c\n+[ ]+ac6:[ \t]+dd cb 08 e2[ \t]+set 4,\\(ix\\+8\\),d\n+[ ]+aca:[ \t]+dd cb 08 e3[ \t]+set 4,\\(ix\\+8\\),e\n+[ ]+ace:[ \t]+dd cb 08 e4[ \t]+set 4,\\(ix\\+8\\),h\n+[ ]+ad2:[ \t]+dd cb 08 e5[ \t]+set 4,\\(ix\\+8\\),l\n+[ ]+ad6:[ \t]+fd cb 08 e7[ \t]+set 4,\\(iy\\+8\\),a\n+[ ]+ada:[ \t]+fd cb 08 e0[ \t]+set 4,\\(iy\\+8\\),b\n+[ ]+ade:[ \t]+fd cb 08 e1[ \t]+set 4,\\(iy\\+8\\),c\n+[ ]+ae2:[ \t]+fd cb 08 e2[ \t]+set 4,\\(iy\\+8\\),d\n+[ ]+ae6:[ \t]+fd cb 08 e3[ \t]+set 4,\\(iy\\+8\\),e\n+[ ]+aea:[ \t]+fd cb 08 e4[ \t]+set 4,\\(iy\\+8\\),h\n+[ ]+aee:[ \t]+fd cb 08 e5[ \t]+set 4,\\(iy\\+8\\),l\n+[ ]+af2:[ \t]+dd cb 08 ef[ \t]+set 5,\\(ix\\+8\\),a\n+[ ]+af6:[ \t]+dd cb 08 e8[ \t]+set 5,\\(ix\\+8\\),b\n+[ ]+afa:[ \t]+dd cb 08 e9[ \t]+set 5,\\(ix\\+8\\),c\n+[ ]+afe:[ \t]+dd cb 08 ea[ \t]+set 5,\\(ix\\+8\\),d\n+[ ]+b02:[ \t]+dd cb 08 eb[ \t]+set 5,\\(ix\\+8\\),e\n+[ ]+b06:[ \t]+dd cb 08 ec[ \t]+set 5,\\(ix\\+8\\),h\n+[ ]+b0a:[ \t]+dd cb 08 ed[ \t]+set 5,\\(ix\\+8\\),l\n+[ ]+b0e:[ \t]+fd cb 08 ef[ \t]+set 5,\\(iy\\+8\\),a\n+[ ]+b12:[ \t]+fd cb 08 e8[ \t]+set 5,\\(iy\\+8\\),b\n+[ ]+b16:[ \t]+fd cb 08 e9[ \t]+set 5,\\(iy\\+8\\),c\n+[ ]+b1a:[ \t]+fd cb 08 ea[ \t]+set 5,\\(iy\\+8\\),d\n+[ ]+b1e:[ \t]+fd cb 08 eb[ \t]+set 5,\\(iy\\+8\\),e\n+[ ]+b22:[ \t]+fd cb 08 ec[ \t]+set 5,\\(iy\\+8\\),h\n+[ ]+b26:[ \t]+fd cb 08 ed[ \t]+set 5,\\(iy\\+8\\),l\n+[ ]+b2a:[ \t]+dd cb 08 f7[ \t]+set 6,\\(ix\\+8\\),a\n+[ ]+b2e:[ \t]+dd cb 08 f0[ \t]+set 6,\\(ix\\+8\\),b\n+[ ]+b32:[ \t]+dd cb 08 f1[ \t]+set 6,\\(ix\\+8\\),c\n+[ ]+b36:[ \t]+dd cb 08 f2[ \t]+set 6,\\(ix\\+8\\),d\n+[ ]+b3a:[ \t]+dd cb 08 f3[ \t]+set 6,\\(ix\\+8\\),e\n+[ ]+b3e:[ \t]+dd cb 08 f4[ \t]+set 6,\\(ix\\+8\\),h\n+[ ]+b42:[ \t]+dd cb 08 f5[ \t]+set 6,\\(ix\\+8\\),l\n+[ ]+b46:[ \t]+fd cb 08 f7[ \t]+set 6,\\(iy\\+8\\),a\n+[ ]+b4a:[ \t]+fd cb 08 f0[ \t]+set 6,\\(iy\\+8\\),b\n+[ ]+b4e:[ \t]+fd cb 08 f1[ \t]+set 6,\\(iy\\+8\\),c\n+[ ]+b52:[ \t]+fd cb 08 f2[ \t]+set 6,\\(iy\\+8\\),d\n+[ ]+b56:[ \t]+fd cb 08 f3[ \t]+set 6,\\(iy\\+8\\),e\n+[ ]+b5a:[ \t]+fd cb 08 f4[ \t]+set 6,\\(iy\\+8\\),h\n+[ ]+b5e:[ \t]+fd cb 08 f5[ \t]+set 6,\\(iy\\+8\\),l\n+[ ]+b62:[ \t]+dd cb 08 ff[ \t]+set 7,\\(ix\\+8\\),a\n+[ ]+b66:[ \t]+dd cb 08 f8[ \t]+set 7,\\(ix\\+8\\),b\n+[ ]+b6a:[ \t]+dd cb 08 f9[ \t]+set 7,\\(ix\\+8\\),c\n+[ ]+b6e:[ \t]+dd cb 08 fa[ \t]+set 7,\\(ix\\+8\\),d\n+[ ]+b72:[ \t]+dd cb 08 fb[ \t]+set 7,\\(ix\\+8\\),e\n+[ ]+b76:[ \t]+dd cb 08 fc[ \t]+set 7,\\(ix\\+8\\),h\n+[ ]+b7a:[ \t]+dd cb 08 fd[ \t]+set 7,\\(ix\\+8\\),l\n+[ ]+b7e:[ \t]+fd cb 08 ff[ \t]+set 7,\\(iy\\+8\\),a\n+[ ]+b82:[ \t]+fd cb 08 f8[ \t]+set 7,\\(iy\\+8\\),b\n+[ ]+b86:[ \t]+fd cb 08 f9[ \t]+set 7,\\(iy\\+8\\),c\n+[ ]+b8a:[ \t]+fd cb 08 fa[ \t]+set 7,\\(iy\\+8\\),d\n+[ ]+b8e:[ \t]+fd cb 08 fb[ \t]+set 7,\\(iy\\+8\\),e\n+[ ]+b92:[ \t]+fd cb 08 fc[ \t]+set 7,\\(iy\\+8\\),h\n+[ ]+b96:[ \t]+fd cb 08 fd[ \t]+set 7,\\(iy\\+8\\),l\n+[ ]+b9a:[ \t]+cb 37[       \t]+sli a\n+[ ]+b9c:[ \t]+cb 30[       \t]+sli b\n+[ ]+b9e:[ \t]+cb 31[       \t]+sli c\n+[ ]+ba0:[ \t]+cb 32[       \t]+sli d\n+[ ]+ba2:[ \t]+cb 33[       \t]+sli e\n+[ ]+ba4:[ \t]+cb 34[       \t]+sli h\n+[ ]+ba6:[ \t]+cb 35[       \t]+sli l\n+[ ]+ba8:[ \t]+cb 36[       \t]+sli \\(hl\\)\n+[ ]+baa:[ \t]+dd cb 07 36[ \t]+sli \\(ix\\+7\\)\n+[ ]+bae:[ \t]+fd cb f7 36[ \t]+sli \\(iy\\-9\\)\n+[ ]+bb2:[ \t]+cb 37[       \t]+sli a\n+[ ]+bb4:[ \t]+cb 30[       \t]+sli b\n+[ ]+bb6:[ \t]+cb 31[       \t]+sli c\n+[ ]+bb8:[ \t]+cb 32[       \t]+sli d\n+[ ]+bba:[ \t]+cb 33[       \t]+sli e\n+[ ]+bbc:[ \t]+cb 34[       \t]+sli h\n+[ ]+bbe:[ \t]+cb 35[       \t]+sli l\n+[ ]+bc0:[ \t]+cb 36[       \t]+sli \\(hl\\)\n+[ ]+bc2:[ \t]+dd cb 07 36[ \t]+sli \\(ix\\+7\\)\n+[ ]+bc6:[ \t]+fd cb f7 36[ \t]+sli \\(iy\\-9\\)\n+[ ]+bca:[ \t]+cb 37[       \t]+sli a\n+[ ]+bcc:[ \t]+cb 30[       \t]+sli b\n+[ ]+bce:[ \t]+cb 31[       \t]+sli c\n+[ ]+bd0:[ \t]+cb 32[       \t]+sli d\n+[ ]+bd2:[ \t]+cb 33[       \t]+sli e\n+[ ]+bd4:[ \t]+cb 34[       \t]+sli h\n+[ ]+bd6:[ \t]+cb 35[       \t]+sli l\n+[ ]+bd8:[ \t]+cb 36[       \t]+sli \\(hl\\)\n+[ ]+bda:[ \t]+dd cb 07 36[ \t]+sli \\(ix\\+7\\)\n+[ ]+bde:[ \t]+fd cb f7 36[ \t]+sli \\(iy\\-9\\)\n+[ ]+be2:[ \t]+ed a4[       \t]+ldix\n+[ ]+be4:[ \t]+ed a5[       \t]+ldws\n+[ ]+be6:[ \t]+ed b4[       \t]+ldirx\n+[ ]+be8:[ \t]+ed ac[       \t]+lddx\n+[ ]+bea:[ \t]+ed bc[       \t]+lddrx\n+[ ]+bec:[ \t]+ed b7[       \t]+ldpirx\n+[ ]+bee:[ \t]+ed 90[       \t]+outinb\n+[ ]+bf0:[ \t]+ed 30[       \t]+mul d,e\n+[ ]+bf2:[ \t]+ed 31[       \t]+add hl,a\n+[ ]+bf4:[ \t]+ed 32[       \t]+add de,a\n+[ ]+bf6:[ \t]+ed 33[       \t]+add bc,a\n+[ ]+bf8:[ \t]+ed 34 af be[ \t]+add hl,0xbeaf\n+[ ]+bfc:[ \t]+ed 35 ad de[ \t]+add de,0xdead\n+[ ]+c00:[ \t]+ed 36 34 12[ \t]+add bc,0x1234\n+[ ]+c04:[ \t]+ed 23[       \t]+swapnib\n+[ ]+c06:[ \t]+ed 24[       \t]+mirror\n+[ ]+c08:[ \t]+ed 8a 12 34[ \t]+push 0x1234\n+[ ]+c0c:[ \t]+ed 91 12 34[ \t]+nextreg 0x12,0x34\n+[ ]+c10:[ \t]+ed 92 56[    \t]+nextreg 0x56,a\n+[ ]+c13:[ \t]+ed 93[       \t]+pixeldn\n+[ ]+c15:[ \t]+ed 94[       \t]+pixelad\n+[ ]+c17:[ \t]+ed 95[       \t]+setae\n+[ ]+c19:[ \t]+ed 27 78[    \t]+test 0x78\n+[ ]+c1c:[ \t]+ed 28[       \t]+bsla de,b\n+[ ]+c1e:[ \t]+ed 29[       \t]+bsra de,b\n+[ ]+c20:[ \t]+ed 2a[       \t]+bsrl de,b\n+[ ]+c22:[ \t]+ed 2b[       \t]+bsrf de,b\n+[ ]+c24:[ \t]+ed 2c[       \t]+bslc de,b\n+[ ]+c26:[ \t]+ed 98[       \t]+jp \\(c\\)\n+[ ]+c28:[ \t]+ed 8a 00 00[ \t]+push 0x0000\n+[ ]+c2c:[ \t]+ed 30[       \t]+mul d,e\n+[ ]+c2e:[ \t]+ed 23[       \t]+swapnib\n+[ ]+c30:[ \t]+ed 27 ab[    \t]+test 0xab\n+#pass"
    },
    {
      "sha": "3d0e341ecfd763e3952a99689f698b5999af1d52",
      "filename": "gas/testsuite/gas/z80/z80n_all.s",
      "status": "added",
      "additions": 1242,
      "deletions": 0,
      "changes": 1242,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/testsuite/gas/z80/z80n_all.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/testsuite/gas/z80/z80n_all.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80n_all.s?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -0,0 +1,1242 @@\n+\t.text\n+\t.org\t0\n+\n+\tadc\ta,(hl)\n+\tadc\ta,(ix+9)\n+\tadc\ta,(iy+9)\n+\tadc\ta,3\n+\tadc\ta,a\n+\tadc\ta,b\n+\tadc\ta,c\n+\tadc\ta,d\n+\tadc\ta,e\n+\tadc\ta,h\n+\tadc\ta,l\n+\tadc\thl,bc\n+\tadc\thl,de\n+\tadc\thl,hl\n+\tadc\thl,sp\n+\tadd\ta,(hl)\n+\tadd\ta,(ix+9)\n+\tadd\ta,(iy+9)\n+\tadd\ta,3\n+\tadd\ta,a\n+\tadd\ta,b\n+\tadd\ta,c\n+\tadd\ta,d\n+\tadd\ta,e\n+\tadd\ta,h\n+\tadd\ta,l\n+\tadd\thl,bc\n+\tadd\thl,de\n+\tadd\thl,hl\n+\tadd\thl,sp\n+\tadd\tix,bc\n+\tadd\tix,de\n+\tadd\tix,ix\n+\tadd\tix,sp\n+\tadd\tiy,bc\n+\tadd\tiy,de\n+\tadd\tiy,iy\n+\tadd\tiy,sp\n+\tand\t(hl)\n+\tand\t(ix+9)\n+\tand\t(iy+9)\n+\tand\t3\n+\tand\ta\n+\tand\tb\n+\tand\tc\n+\tand\td\n+\tand\te\n+\tand\th\n+\tand\tl\n+\tbit\t0,(hl)\n+\tbit\t0,(ix+9)\n+\tbit\t0,(iy+9)\n+\tbit\t0,a\n+\tbit\t0,b\n+\tbit\t0,c\n+\tbit\t0,d\n+\tbit\t0,e\n+\tbit\t0,h\n+\tbit\t0,l\n+\tbit\t1,(hl)\n+\tbit\t1,(ix+9)\n+\tbit\t1,(iy+9)\n+\tbit\t1,a\n+\tbit\t1,b\n+\tbit\t1,c\n+\tbit\t1,d\n+\tbit\t1,e\n+\tbit\t1,h\n+\tbit\t1,l\n+\tbit\t2,(hl)\n+\tbit\t2,(ix+9)\n+\tbit\t2,(iy+9)\n+\tbit\t2,a\n+\tbit\t2,b\n+\tbit\t2,c\n+\tbit\t2,d\n+\tbit\t2,e\n+\tbit\t2,h\n+\tbit\t2,l\n+\tbit\t3,(hl)\n+\tbit\t3,(ix+9)\n+\tbit\t3,(iy+9)\n+\tbit\t3,a\n+\tbit\t3,b\n+\tbit\t3,c\n+\tbit\t3,d\n+\tbit\t3,e\n+\tbit\t3,h\n+\tbit\t3,l\n+\tbit\t4,(hl)\n+\tbit\t4,(ix+9)\n+\tbit\t4,(iy+9)\n+\tbit\t4,a\n+\tbit\t4,b\n+\tbit\t4,c\n+\tbit\t4,d\n+\tbit\t4,e\n+\tbit\t4,h\n+\tbit\t4,l\n+\tbit\t5,(hl)\n+\tbit\t5,(ix+9)\n+\tbit\t5,(iy+9)\n+\tbit\t5,a\n+\tbit\t5,b\n+\tbit\t5,c\n+\tbit\t5,d\n+\tbit\t5,e\n+\tbit\t5,h\n+\tbit\t5,l\n+\tbit\t6,(hl)\n+\tbit\t6,(ix+9)\n+\tbit\t6,(iy+9)\n+\tbit\t6,a\n+\tbit\t6,b\n+\tbit\t6,c\n+\tbit\t6,d\n+\tbit\t6,e\n+\tbit\t6,h\n+\tbit\t6,l\n+\tbit\t7,(hl)\n+\tbit\t7,(ix+9)\n+\tbit\t7,(iy+9)\n+\tbit\t7,a\n+\tbit\t7,b\n+\tbit\t7,c\n+\tbit\t7,d\n+\tbit\t7,e\n+\tbit\t7,h\n+\tbit\t7,l\n+\tcall\t0x1234\n+\tcall\tc,0x1234\n+\tcall\tm,0x1234\n+\tcall\tnc,0x1234\n+\tcall\tnz,0x1234\n+\tcall\tp,0x1234\n+\tcall\tpe,0x1234\n+\tcall\tpo,0x1234\n+\tcall\tz,0x1234\n+\tccf\n+\tcp\t(hl)\n+\tcp\t(ix+9)\n+\tcp\t(iy+9)\n+\tcp\t03\n+\tcp\ta\n+\tcp\tb\n+\tcp\tc\n+\tcp\td\n+\tcp\te\n+\tcp\th\n+\tcp\tl\n+\tcpd\n+\tcpdr\n+\tcpi\n+\tcpir\n+\tcpl\n+\tdaa\n+\tdec\t(hl)\n+\tdec\t(ix+9)\n+\tdec\t(iy+9)\n+\tdec\ta\n+\tdec\tb\n+\tdec\tbc\n+\tdec\tc\n+\tdec\td\n+\tdec\tde\n+\tdec\te\n+\tdec\th\n+\tdec\thl\n+\tdec\tix\n+\tdec\tiy\n+\tdec\tl\n+\tdec\tsp\n+\tdi\n+\tdjnz\t.+7\n+\tei\n+\tex\t(sp),hl\n+\tex\t(sp),ix\n+\tex\t(sp),iy\n+\tex\taf,af'\t;'\n+\tex\tde,hl\n+\texx\n+\thalt\n+\tim\t0\n+\tim\t1\n+\tim\t2\n+\tin\ta,(c)\n+\tin\ta,(3)\n+\tin\tb,(c)\n+\tin\tc,(c)\n+\tin\td,(c)\n+\tin\te,(c)\n+\tin\th,(c)\n+\tin\tl,(c)\n+\tinc\t(hl)\n+\tinc\t(ix+9)\n+\tinc\t(iy+9)\n+\tinc\ta\n+\tinc\tb\n+\tinc\tbc\n+\tinc\tc\n+\tinc\td\n+\tinc\tde\n+\tinc\te\n+\tinc\th\n+\tinc\thl\n+\tinc\tix\n+\tinc\tiy\n+\tinc\tl\n+\tinc\tsp\n+\tind\n+\tindr\n+\tini\n+\tinir\n+\tjp\t(hl)\n+\tjp\t(ix)\n+\tjp\t(iy)\n+\tjp\t0x1234\n+\tjp\tc,0x1234\n+\tjp\tm,0x1234\n+\tjp\tnc,0x1234\n+\tjp\tnz,0x1234\n+\tjp\tp,0x1234\n+\tjp\tpe,0x1234\n+\tjp\tpo,0x1234\n+\tjp\tz,0x1234\n+\tjr\t.+7\n+\tjr\tc,.+7\n+\tjr\tnc,.+7\n+\tjr\tnz,.+7\n+\tjr\tz,.+7\n+\tld\t(0x1234),a\n+\tld\t(0x1234),bc\n+\tld\t(0x1234),de\n+\tld\t(0x1234),hl\n+\tld\t(0x1234),ix\n+\tld\t(0x1234),iy\n+\tld\t(0x1234),sp\n+\tld\t(bc),a\n+\tld\t(de),a\n+\tld\t(hl),3\n+\tld\t(hl),a\n+\tld\t(hl),b\n+\tld\t(hl),c\n+\tld\t(hl),d\n+\tld\t(hl),e\n+\tld\t(hl),h\n+\tld\t(hl),l\n+\tld\t(ix+9),3\n+\tld\t(ix+9),a\n+\tld\t(ix+9),b\n+\tld\t(ix+9),c\n+\tld\t(ix+9),d\n+\tld\t(ix+9),e\n+\tld\t(ix+9),h\n+\tld\t(ix+9),l\n+\tld\t(iy+9),3\n+\tld\t(iy+9),a\n+\tld\t(iy+9),b\n+\tld\t(iy+9),c\n+\tld\t(iy+9),d\n+\tld\t(iy+9),e\n+\tld\t(iy+9),h\n+\tld\t(iy+9),l\n+\tld\ta,(0x1234)\n+\tld\ta,(bc)\n+\tld\ta,(de)\n+\tld\ta,(hl)\n+\tld\ta,(ix+9)\n+\tld\ta,(iy+9)\n+\tld\ta,3\n+\tld\ta,a\n+\tld\ta,b\n+\tld\ta,c\n+\tld\ta,d\n+\tld\ta,e\n+\tld\ta,h\n+\tld\ta,i\n+\tld\ta,l\n+\tld\ta,r\n+\tld\tb,(hl)\n+\tld\tb,(ix+9)\n+\tld\tb,(iy+9)\n+\tld\tb,3\n+\tld\tb,a\n+\tld\tb,b\n+\tld\tb,c\n+\tld\tb,d\n+\tld\tb,e\n+\tld\tb,h\n+\tld\tb,l\n+\tld\tbc,(0x1234)\n+\tld\tbc,0x1234\n+\tld\tc,(hl)\n+\tld\tc,(ix+9)\n+\tld\tc,(iy+9)\n+\tld\tc,3\n+\tld\tc,a\n+\tld\tc,b\n+\tld\tc,c\n+\tld\tc,d\n+\tld\tc,e\n+\tld\tc,h\n+\tld\tc,l\n+\tld\td,(hl)\n+\tld\td,(ix+9)\n+\tld\td,(iy+9)\n+\tld\td,3\n+\tld\td,a\n+\tld\td,b\n+\tld\td,c\n+\tld\td,d\n+\tld\td,e\n+\tld\td,h\n+\tld\td,l\n+\tld\tde,(0x1234)\n+\tld\tde,0x1234\n+\tld\te,(hl)\n+\tld\te,(ix+9)\n+\tld\te,(iy+9)\n+\tld\te,3\n+\tld\te,a\n+\tld\te,b\n+\tld\te,c\n+\tld\te,d\n+\tld\te,e\n+\tld\te,h\n+\tld\te,l\n+\tld\th,(hl)\n+\tld\th,(ix+9)\n+\tld\th,(iy+9)\n+\tld\th,3\n+\tld\th,a\n+\tld\th,b\n+\tld\th,c\n+\tld\th,d\n+\tld\th,e\n+\tld\th,h\n+\tld\th,l\n+\tld\thl,(0x1234)\n+\tld\thl,0x1234\n+\tld\ti,a\n+\tld\tix,(0x1234)\n+\tld\tix,0x1234\n+\tld\tiy,(0x1234)\n+\tld\tiy,0x1234\n+\tld\tl,(hl)\n+\tld\tl,(ix+9)\n+\tld\tl,(iy+9)\n+\tld\tl,3\n+\tld\tl,a\n+\tld\tl,b\n+\tld\tl,c\n+\tld\tl,d\n+\tld\tl,e\n+\tld\tl,h\n+\tld\tl,l\n+\tld\tr,a\n+\tld\tsp,(0x1234)\n+\tld\tsp,0x1234\n+\tld\tsp,hl\n+\tld\tsp,ix\n+\tld\tsp,iy\n+\tldd\n+\tlddr\n+\tldi\n+\tldir\n+\tneg\n+\tnop\n+\tor\t(hl)\n+\tor\t(ix+9)\n+\tor\t(iy+9)\n+\tor\t3\n+\tor\ta\n+\tor\tb\n+\tor\tc\n+\tor\td\n+\tor\te\n+\tor\th\n+\tor\tl\n+\totdr\n+\totir\n+\tout\t(c),a\n+\tout\t(c),b\n+\tout\t(c),c\n+\tout\t(c),d\n+\tout\t(c),e\n+\tout\t(c),h\n+\tout\t(c),l\n+\tout\t(3),a\n+\toutd\n+\touti\n+\tpop\taf\n+\tpop\tbc\n+\tpop\tde\n+\tpop\thl\n+\tpop\tix\n+\tpop\tiy\n+\tpush\taf\n+\tpush\tbc\n+\tpush\tde\n+\tpush\thl\n+\tpush\tix\n+\tpush\tiy\n+\tres\t0,(hl)\n+\tres\t0,(ix+9)\n+\tres\t0,(iy+9)\n+\tres\t0,a\n+\tres\t0,b\n+\tres\t0,c\n+\tres\t0,d\n+\tres\t0,e\n+\tres\t0,h\n+\tres\t0,l\n+\tres\t1,(hl)\n+\tres\t1,(ix+9)\n+\tres\t1,(iy+9)\n+\tres\t1,a\n+\tres\t1,b\n+\tres\t1,c\n+\tres\t1,d\n+\tres\t1,e\n+\tres\t1,h\n+\tres\t1,l\n+\tres\t2,(hl)\n+\tres\t2,(ix+9)\n+\tres\t2,(iy+9)\n+\tres\t2,a\n+\tres\t2,b\n+\tres\t2,c\n+\tres\t2,d\n+\tres\t2,e\n+\tres\t2,h\n+\tres\t2,l\n+\tres\t3,(hl)\n+\tres\t3,(ix+9)\n+\tres\t3,(iy+9)\n+\tres\t3,a\n+\tres\t3,b\n+\tres\t3,c\n+\tres\t3,d\n+\tres\t3,e\n+\tres\t3,h\n+\tres\t3,l\n+\tres\t4,(hl)\n+\tres\t4,(ix+9)\n+\tres\t4,(iy+9)\n+\tres\t4,a\n+\tres\t4,b\n+\tres\t4,c\n+\tres\t4,d\n+\tres\t4,e\n+\tres\t4,h\n+\tres\t4,l\n+\tres\t5,(hl)\n+\tres\t5,(ix+9)\n+\tres\t5,(iy+9)\n+\tres\t5,a\n+\tres\t5,b\n+\tres\t5,c\n+\tres\t5,d\n+\tres\t5,e\n+\tres\t5,h\n+\tres\t5,l\n+\tres\t6,(hl)\n+\tres\t6,(ix+9)\n+\tres\t6,(iy+9)\n+\tres\t6,a\n+\tres\t6,b\n+\tres\t6,c\n+\tres\t6,d\n+\tres\t6,e\n+\tres\t6,h\n+\tres\t6,l\n+\tres\t7,(hl)\n+\tres\t7,(ix+9)\n+\tres\t7,(iy+9)\n+\tres\t7,a\n+\tres\t7,b\n+\tres\t7,c\n+\tres\t7,d\n+\tres\t7,e\n+\tres\t7,h\n+\tres\t7,l\n+\tret\n+\tret\tc\n+\tret\tm\n+\tret\tnc\n+\tret\tnz\n+\tret\tp\n+\tret\tpe\n+\tret\tpo\n+\tret\tz\n+\treti\n+\tretn\n+\trl\t(hl)\n+\trl\t(ix+9)\n+\trl\t(iy+9)\n+\trl\ta\n+\trl\tb\n+\trl\tc\n+\trl\td\n+\trl\te\n+\trl\th\n+\trl\tl\n+\trla\n+\trlc\t(hl)\n+\trlc\t(ix+9)\n+\trlc\t(iy+9)\n+\trlc\ta\n+\trlc\tb\n+\trlc\tc\n+\trlc\td\n+\trlc\te\n+\trlc\th\n+\trlc\tl\n+\trlca\n+\trld\n+\trr\t(hl)\n+\trr\t(ix+9)\n+\trr\t(iy+9)\n+\trr\ta\n+\trr\tb\n+\trr\tc\n+\trr\td\n+\trr\te\n+\trr\th\n+\trr\tl\n+\trra\n+\trrc\t(hl)\n+\trrc\t(ix+9)\n+\trrc\t(iy+9)\n+\trrc\ta\n+\trrc\tb\n+\trrc\tc\n+\trrc\td\n+\trrc\te\n+\trrc\th\n+\trrc\tl\n+\trrca\n+\trrd\n+\trst\t0x00\n+\trst\t0x08\n+\trst\t0x10\n+\trst\t0x18\n+\trst\t0x20\n+\trst\t0x28\n+\trst\t0x30\n+\trst\t0x38\n+\tsbc\ta,(hl)\n+\tsbc\ta,(ix+9)\n+\tsbc\ta,(iy+9)\n+\tsbc\ta,3\n+\tsbc\ta,a\n+\tsbc\ta,b\n+\tsbc\ta,c\n+\tsbc\ta,d\n+\tsbc\ta,e\n+\tsbc\ta,h\n+\tsbc\ta,l\n+\tsbc\thl,bc\n+\tsbc\thl,de\n+\tsbc\thl,hl\n+\tsbc\thl,sp\n+\tscf\n+\tset\t0,(hl)\n+\tset\t0,(ix+9)\n+\tset\t0,(iy+9)\n+\tset\t0,a\n+\tset\t0,b\n+\tset\t0,c\n+\tset\t0,d\n+\tset\t0,e\n+\tset\t0,h\n+\tset\t0,l\n+\tset\t1,(hl)\n+\tset\t1,(ix+9)\n+\tset\t1,(iy+9)\n+\tset\t1,a\n+\tset\t1,b\n+\tset\t1,c\n+\tset\t1,d\n+\tset\t1,e\n+\tset\t1,h\n+\tset\t1,l\n+\tset\t2,(hl)\n+\tset\t2,(ix+9)\n+\tset\t2,(iy+9)\n+\tset\t2,a\n+\tset\t2,b\n+\tset\t2,c\n+\tset\t2,d\n+\tset\t2,e\n+\tset\t2,h\n+\tset\t2,l\n+\tset\t3,(hl)\n+\tset\t3,(ix+9)\n+\tset\t3,(iy+9)\n+\tset\t3,a\n+\tset\t3,b\n+\tset\t3,c\n+\tset\t3,d\n+\tset\t3,e\n+\tset\t3,h\n+\tset\t3,l\n+\tset\t4,(hl)\n+\tset\t4,(ix+9)\n+\tset\t4,(iy+9)\n+\tset\t4,a\n+\tset\t4,b\n+\tset\t4,c\n+\tset\t4,d\n+\tset\t4,e\n+\tset\t4,h\n+\tset\t4,l\n+\tset\t5,(hl)\n+\tset\t5,(ix+9)\n+\tset\t5,(iy+9)\n+\tset\t5,a\n+\tset\t5,b\n+\tset\t5,c\n+\tset\t5,d\n+\tset\t5,e\n+\tset\t5,h\n+\tset\t5,l\n+\tset\t6,(hl)\n+\tset\t6,(ix+9)\n+\tset\t6,(iy+9)\n+\tset\t6,a\n+\tset\t6,b\n+\tset\t6,c\n+\tset\t6,d\n+\tset\t6,e\n+\tset\t6,h\n+\tset\t6,l\n+\tset\t7,(hl)\n+\tset\t7,(ix+9)\n+\tset\t7,(iy+9)\n+\tset\t7,a\n+\tset\t7,b\n+\tset\t7,c\n+\tset\t7,d\n+\tset\t7,e\n+\tset\t7,h\n+\tset\t7,l\n+\tsla\t(hl)\n+\tsla\t(ix+9)\n+\tsla\t(iy+9)\n+\tsla\ta\n+\tsla\tb\n+\tsla\tc\n+\tsla\td\n+\tsla\te\n+\tsla\th\n+\tsla\tl\n+\tsra\t(hl)\n+\tsra\t(ix+9)\n+\tsra\t(iy+9)\n+\tsra\ta\n+\tsra\tb\n+\tsra\tc\n+\tsra\td\n+\tsra\te\n+\tsra\th\n+\tsra\tl\n+\tsrl\t(hl)\n+\tsrl\t(ix+9)\n+\tsrl\t(iy+9)\n+\tsrl\ta\n+\tsrl\tb\n+\tsrl\tc\n+\tsrl\td\n+\tsrl\te\n+\tsrl\th\n+\tsrl\tl\n+\tsub\t(hl)\n+\tsub\t(ix+9)\n+\tsub\t(iy+9)\n+\tsub\t3\n+\tsub\ta\n+\tsub\tb\n+\tsub\tc\n+\tsub\td\n+\tsub\te\n+\tsub\th\n+\tsub\tl\n+\txor\t(hl)\n+\txor\t(ix+9)\n+\txor\t(iy+9)\n+\txor\t3\n+\txor\ta\n+\txor\tb\n+\txor\tc\n+\txor\td\n+\txor\te\n+\txor\th\n+\txor\tl\n+\n+\tld\ta,ixh\n+\tld\tb,ixh\n+\tld\tc,ixh\n+\tld\td,ixh\n+\tld\te,ixh\n+\tld\tixh,ixh\n+\tld\tixl,ixh\n+\n+\tld\ta,ixl\n+\tld\tb,ixl\n+\tld\tc,ixl\n+\tld\td,ixl\n+\tld\te,ixl\n+\tld\tixh,ixl\n+\tld\tixl,ixl\n+\n+\tld\ta,iyh\n+\tld\tb,iyh\n+\tld\tc,iyh\n+\tld\td,iyh\n+\tld\te,iyh\n+\tld\tiyh,iyh\n+\tld\tiyl,iyh\n+\n+\tld\ta,iyl\n+\tld\tb,iyl\n+\tld\tc,iyl\n+\tld\td,iyl\n+\tld\te,iyl\n+\tld\tiyh,iyl\n+\tld\tiyl,iyl\n+\n+\tld\tixh,a\n+\tld\tixh,b\n+\tld\tixh,c\n+\tld\tixh,d\n+\tld\tixh,e\n+\tld\tixh,ixh\n+\tld\tixh,ixl\n+\tld\tixh,25\n+\n+\tld\tixl,a\n+\tld\tixl,b\n+\tld\tixl,c\n+\tld\tixl,d\n+\tld\tixl,e\n+\tld\tixl,ixh\n+\tld\tixl,ixl\n+\tld\tixl,25\n+\n+\tld\tiyh,a\n+\tld\tiyh,b\n+\tld\tiyh,c\n+\tld\tiyh,d\n+\tld\tiyh,e\n+\tld\tiyh,iyh\n+\tld\tiyh,iyl\n+\tld\tiyh,25\n+\n+\tld\tiyl,a\n+\tld\tiyl,b\n+\tld\tiyl,c\n+\tld\tiyl,d\n+\tld\tiyl,e\n+\tld\tiyl,iyh\n+\tld\tiyl,iyl\n+\tld\tiyl,25\n+\n+\tadd\ta,ixh\n+\tadd\ta,ixl\n+\tadd\ta,iyh\n+\tadd\ta,iyl\n+\n+\tadc\ta,ixh\n+\tadc\ta,ixl\n+\tadc\ta,iyh\n+\tadc\ta,iyl\n+\n+\tcp\tixh\n+\tcp\tixl\n+\tcp\tiyh\n+\tcp\tiyl\n+\n+\tdec\tixh\n+\tdec\tixl\n+\tdec\tiyh\n+\tdec\tiyl\n+\n+\tinc\tixh\n+\tinc\tixl\n+\tinc\tiyh\n+\tinc\tiyl\n+\n+\tsbc\ta,ixh\n+\tsbc\ta,ixl\n+\tsbc\ta,iyh\n+\tsbc\ta,iyl\n+\n+\tsub\tixh\n+\tsub\tixl\n+\tsub\tiyh\n+\tsub\tiyl\n+\n+\tand\tixh\n+\tand\tixl\n+\tand\tiyh\n+\tand\tiyl\n+\n+\tor\tixh\n+\tor\tixl\n+\tor\tiyh\n+\tor\tiyl\n+\n+\txor\tixh\n+\txor\tixl\n+\txor\tiyh\n+\txor\tiyl\n+\n+\tin\tf,(c)\n+\tin\t(c)\n+\tout\t(c),0\n+\n+\tRLC\t(ix+8),a\n+\tRLC\t(ix+8),b\n+\tRLC\t(ix+8),c\n+\tRLC\t(ix+8),d\n+\tRLC\t(ix+8),e\n+\tRLC\t(ix+8),h\n+\tRLC\t(ix+8),l\n+\tRLC\t(iy+8),a\n+\tRLC\t(iy+8),b\n+\tRLC\t(iy+8),c\n+\tRLC\t(iy+8),d\n+\tRLC\t(iy+8),e\n+\tRLC\t(iy+8),h\n+\tRLC\t(iy+8),l\n+\n+\tRRC\t(ix+8),a\n+\tRRC\t(ix+8),b\n+\tRRC\t(ix+8),c\n+\tRRC\t(ix+8),d\n+\tRRC\t(ix+8),e\n+\tRRC\t(ix+8),h\n+\tRRC\t(ix+8),l\n+\tRRC\t(iy+8),a\n+\tRRC\t(iy+8),b\n+\tRRC\t(iy+8),c\n+\tRRC\t(iy+8),d\n+\tRRC\t(iy+8),e\n+\tRRC\t(iy+8),h\n+\tRRC\t(iy+8),l\n+\n+\tRL\t(ix+8),a\n+\tRL\t(ix+8),b\n+\tRL\t(ix+8),c\n+\tRL\t(ix+8),d\n+\tRL\t(ix+8),e\n+\tRL\t(ix+8),h\n+\tRL\t(ix+8),l\n+\tRL\t(iy+8),a\n+\tRL\t(iy+8),b\n+\tRL\t(iy+8),c\n+\tRL\t(iy+8),d\n+\tRL\t(iy+8),e\n+\tRL\t(iy+8),h\n+\tRL\t(iy+8),l\n+\n+\tRR\t(ix+8),a\n+\tRR\t(ix+8),b\n+\tRR\t(ix+8),c\n+\tRR\t(ix+8),d\n+\tRR\t(ix+8),e\n+\tRR\t(ix+8),h\n+\tRR\t(ix+8),l\n+\tRR\t(iy+8),a\n+\tRR\t(iy+8),b\n+\tRR\t(iy+8),c\n+\tRR\t(iy+8),d\n+\tRR\t(iy+8),e\n+\tRR\t(iy+8),h\n+\tRR\t(iy+8),l\n+\n+\tSLA\t(ix+8),a\n+\tSLA\t(ix+8),b\n+\tSLA\t(ix+8),c\n+\tSLA\t(ix+8),d\n+\tSLA\t(ix+8),e\n+\tSLA\t(ix+8),h\n+\tSLA\t(ix+8),l\n+\tSLA\t(iy+8),a\n+\tSLA\t(iy+8),b\n+\tSLA\t(iy+8),c\n+\tSLA\t(iy+8),d\n+\tSLA\t(iy+8),e\n+\tSLA\t(iy+8),h\n+\tSLA\t(iy+8),l\n+\n+\tSRA\t(ix+8),a\n+\tSRA\t(ix+8),b\n+\tSRA\t(ix+8),c\n+\tSRA\t(ix+8),d\n+\tSRA\t(ix+8),e\n+\tSRA\t(ix+8),h\n+\tSRA\t(ix+8),l\n+\tSRA\t(iy+8),a\n+\tSRA\t(iy+8),b\n+\tSRA\t(iy+8),c\n+\tSRA\t(iy+8),d\n+\tSRA\t(iy+8),e\n+\tSRA\t(iy+8),h\n+\tSRA\t(iy+8),l\n+\n+\tSLI\t(ix+8),a\n+\tSLI\t(ix+8),b\n+\tSLI\t(ix+8),c\n+\tSLI\t(ix+8),d\n+\tSLI\t(ix+8),e\n+\tSLI\t(ix+8),h\n+\tSLI\t(ix+8),l\n+\tSLI\t(iy+8),a\n+\tSLI\t(iy+8),b\n+\tSLI\t(iy+8),c\n+\tSLI\t(iy+8),d\n+\tSLI\t(iy+8),e\n+\tSLI\t(iy+8),h\n+\tSLI\t(iy+8),l\n+\n+\tSRL\t(ix+8),a\n+\tSRL\t(ix+8),b\n+\tSRL\t(ix+8),c\n+\tSRL\t(ix+8),d\n+\tSRL\t(ix+8),e\n+\tSRL\t(ix+8),h\n+\tSRL\t(ix+8),l\n+\tSRL\t(iy+8),a\n+\tSRL\t(iy+8),b\n+\tSRL\t(iy+8),c\n+\tSRL\t(iy+8),d\n+\tSRL\t(iy+8),e\n+\tSRL\t(iy+8),h\n+\tSRL\t(iy+8),l\n+\n+\tRES\t0,(ix+8),a\n+\tRES\t0,(ix+8),b\n+\tRES\t0,(ix+8),c\n+\tRES\t0,(ix+8),d\n+\tRES\t0,(ix+8),e\n+\tRES\t0,(ix+8),h\n+\tRES\t0,(ix+8),l\n+\tRES\t0,(iy+8),a\n+\tRES\t0,(iy+8),b\n+\tRES\t0,(iy+8),c\n+\tRES\t0,(iy+8),d\n+\tRES\t0,(iy+8),e\n+\tRES\t0,(iy+8),h\n+\tRES\t0,(iy+8),l\n+\tRES\t1,(ix+8),a\n+\tRES\t1,(ix+8),b\n+\tRES\t1,(ix+8),c\n+\tRES\t1,(ix+8),d\n+\tRES\t1,(ix+8),e\n+\tRES\t1,(ix+8),h\n+\tRES\t1,(ix+8),l\n+\tRES\t1,(iy+8),a\n+\tRES\t1,(iy+8),b\n+\tRES\t1,(iy+8),c\n+\tRES\t1,(iy+8),d\n+\tRES\t1,(iy+8),e\n+\tRES\t1,(iy+8),h\n+\tRES\t1,(iy+8),l\n+\tRES\t2,(ix+8),a\n+\tRES\t2,(ix+8),b\n+\tRES\t2,(ix+8),c\n+\tRES\t2,(ix+8),d\n+\tRES\t2,(ix+8),e\n+\tRES\t2,(ix+8),h\n+\tRES\t2,(ix+8),l\n+\tRES\t2,(iy+8),a\n+\tRES\t2,(iy+8),b\n+\tRES\t2,(iy+8),c\n+\tRES\t2,(iy+8),d\n+\tRES\t2,(iy+8),e\n+\tRES\t2,(iy+8),h\n+\tRES\t2,(iy+8),l\n+\tRES\t3,(ix+8),a\n+\tRES\t3,(ix+8),b\n+\tRES\t3,(ix+8),c\n+\tRES\t3,(ix+8),d\n+\tRES\t3,(ix+8),e\n+\tRES\t3,(ix+8),h\n+\tRES\t3,(ix+8),l\n+\tRES\t3,(iy+8),a\n+\tRES\t3,(iy+8),b\n+\tRES\t3,(iy+8),c\n+\tRES\t3,(iy+8),d\n+\tRES\t3,(iy+8),e\n+\tRES\t3,(iy+8),h\n+\tRES\t3,(iy+8),l\n+\tRES\t4,(ix+8),a\n+\tRES\t4,(ix+8),b\n+\tRES\t4,(ix+8),c\n+\tRES\t4,(ix+8),d\n+\tRES\t4,(ix+8),e\n+\tRES\t4,(ix+8),h\n+\tRES\t4,(ix+8),l\n+\tRES\t4,(iy+8),a\n+\tRES\t4,(iy+8),b\n+\tRES\t4,(iy+8),c\n+\tRES\t4,(iy+8),d\n+\tRES\t4,(iy+8),e\n+\tRES\t4,(iy+8),h\n+\tRES\t4,(iy+8),l\n+\tRES\t5,(ix+8),a\n+\tRES\t5,(ix+8),b\n+\tRES\t5,(ix+8),c\n+\tRES\t5,(ix+8),d\n+\tRES\t5,(ix+8),e\n+\tRES\t5,(ix+8),h\n+\tRES\t5,(ix+8),l\n+\tRES\t5,(iy+8),a\n+\tRES\t5,(iy+8),b\n+\tRES\t5,(iy+8),c\n+\tRES\t5,(iy+8),d\n+\tRES\t5,(iy+8),e\n+\tRES\t5,(iy+8),h\n+\tRES\t5,(iy+8),l\n+\tRES\t6,(ix+8),a\n+\tRES\t6,(ix+8),b\n+\tRES\t6,(ix+8),c\n+\tRES\t6,(ix+8),d\n+\tRES\t6,(ix+8),e\n+\tRES\t6,(ix+8),h\n+\tRES\t6,(ix+8),l\n+\tRES\t6,(iy+8),a\n+\tRES\t6,(iy+8),b\n+\tRES\t6,(iy+8),c\n+\tRES\t6,(iy+8),d\n+\tRES\t6,(iy+8),e\n+\tRES\t6,(iy+8),h\n+\tRES\t6,(iy+8),l\n+\tRES\t7,(ix+8),a\n+\tRES\t7,(ix+8),b\n+\tRES\t7,(ix+8),c\n+\tRES\t7,(ix+8),d\n+\tRES\t7,(ix+8),e\n+\tRES\t7,(ix+8),h\n+\tRES\t7,(ix+8),l\n+\tRES\t7,(iy+8),a\n+\tRES\t7,(iy+8),b\n+\tRES\t7,(iy+8),c\n+\tRES\t7,(iy+8),d\n+\tRES\t7,(iy+8),e\n+\tRES\t7,(iy+8),h\n+\tRES\t7,(iy+8),l\n+\n+\tSET\t0,(ix+8),a\n+\tSET\t0,(ix+8),b\n+\tSET\t0,(ix+8),c\n+\tSET\t0,(ix+8),d\n+\tSET\t0,(ix+8),e\n+\tSET\t0,(ix+8),h\n+\tSET\t0,(ix+8),l\n+\tSET\t0,(iy+8),a\n+\tSET\t0,(iy+8),b\n+\tSET\t0,(iy+8),c\n+\tSET\t0,(iy+8),d\n+\tSET\t0,(iy+8),e\n+\tSET\t0,(iy+8),h\n+\tSET\t0,(iy+8),l\n+\tSET\t1,(ix+8),a\n+\tSET\t1,(ix+8),b\n+\tSET\t1,(ix+8),c\n+\tSET\t1,(ix+8),d\n+\tSET\t1,(ix+8),e\n+\tSET\t1,(ix+8),h\n+\tSET\t1,(ix+8),l\n+\tSET\t1,(iy+8),a\n+\tSET\t1,(iy+8),b\n+\tSET\t1,(iy+8),c\n+\tSET\t1,(iy+8),d\n+\tSET\t1,(iy+8),e\n+\tSET\t1,(iy+8),h\n+\tSET\t1,(iy+8),l\n+\tSET\t2,(ix+8),a\n+\tSET\t2,(ix+8),b\n+\tSET\t2,(ix+8),c\n+\tSET\t2,(ix+8),d\n+\tSET\t2,(ix+8),e\n+\tSET\t2,(ix+8),h\n+\tSET\t2,(ix+8),l\n+\tSET\t2,(iy+8),a\n+\tSET\t2,(iy+8),b\n+\tSET\t2,(iy+8),c\n+\tSET\t2,(iy+8),d\n+\tSET\t2,(iy+8),e\n+\tSET\t2,(iy+8),h\n+\tSET\t2,(iy+8),l\n+\tSET\t3,(ix+8),a\n+\tSET\t3,(ix+8),b\n+\tSET\t3,(ix+8),c\n+\tSET\t3,(ix+8),d\n+\tSET\t3,(ix+8),e\n+\tSET\t3,(ix+8),h\n+\tSET\t3,(ix+8),l\n+\tSET\t3,(iy+8),a\n+\tSET\t3,(iy+8),b\n+\tSET\t3,(iy+8),c\n+\tSET\t3,(iy+8),d\n+\tSET\t3,(iy+8),e\n+\tSET\t3,(iy+8),h\n+\tSET\t3,(iy+8),l\n+\tSET\t4,(ix+8),a\n+\tSET\t4,(ix+8),b\n+\tSET\t4,(ix+8),c\n+\tSET\t4,(ix+8),d\n+\tSET\t4,(ix+8),e\n+\tSET\t4,(ix+8),h\n+\tSET\t4,(ix+8),l\n+\tSET\t4,(iy+8),a\n+\tSET\t4,(iy+8),b\n+\tSET\t4,(iy+8),c\n+\tSET\t4,(iy+8),d\n+\tSET\t4,(iy+8),e\n+\tSET\t4,(iy+8),h\n+\tSET\t4,(iy+8),l\n+\tSET\t5,(ix+8),a\n+\tSET\t5,(ix+8),b\n+\tSET\t5,(ix+8),c\n+\tSET\t5,(ix+8),d\n+\tSET\t5,(ix+8),e\n+\tSET\t5,(ix+8),h\n+\tSET\t5,(ix+8),l\n+\tSET\t5,(iy+8),a\n+\tSET\t5,(iy+8),b\n+\tSET\t5,(iy+8),c\n+\tSET\t5,(iy+8),d\n+\tSET\t5,(iy+8),e\n+\tSET\t5,(iy+8),h\n+\tSET\t5,(iy+8),l\n+\tSET\t6,(ix+8),a\n+\tSET\t6,(ix+8),b\n+\tSET\t6,(ix+8),c\n+\tSET\t6,(ix+8),d\n+\tSET\t6,(ix+8),e\n+\tSET\t6,(ix+8),h\n+\tSET\t6,(ix+8),l\n+\tSET\t6,(iy+8),a\n+\tSET\t6,(iy+8),b\n+\tSET\t6,(iy+8),c\n+\tSET\t6,(iy+8),d\n+\tSET\t6,(iy+8),e\n+\tSET\t6,(iy+8),h\n+\tSET\t6,(iy+8),l\n+\tSET\t7,(ix+8),a\n+\tSET\t7,(ix+8),b\n+\tSET\t7,(ix+8),c\n+\tSET\t7,(ix+8),d\n+\tSET\t7,(ix+8),e\n+\tSET\t7,(ix+8),h\n+\tSET\t7,(ix+8),l\n+\tSET\t7,(iy+8),a\n+\tSET\t7,(iy+8),b\n+\tSET\t7,(iy+8),c\n+\tSET\t7,(iy+8),d\n+\tSET\t7,(iy+8),e\n+\tSET\t7,(iy+8),h\n+\tSET\t7,(iy+8),l\n+\n+;SLI\n+\tsli\ta\n+\tsli\tb\n+\tsli\tc\n+\tsli\td\n+\tsli\te\n+\tsli\th\n+\tsli\tl\n+\tsli\t(hl)\n+\tsli\t(ix+7)\n+\tsli\t(iy-9)\n+\n+;SLL is an alias for SLI\n+\tsll\ta\n+\tsll\tb\n+\tsll\tc\n+\tsll\td\n+\tsll\te\n+\tsll\th\n+\tsll\tl\n+\tsll\t(hl)\n+\tsll\t(ix+7)\n+\tsll\t(iy-9)\n+\n+;SL1 is an alias for SLI\n+\tsl1\ta\n+\tsl1\tb\n+\tsl1\tc\n+\tsl1\td\n+\tsl1\te\n+\tsl1\th\n+\tsl1\tl\n+\tsl1\t(hl)\n+\tsl1\t(ix+7)\n+\tsl1\t(iy-9)\n+\n+;Z80N specific\n+\tldix\n+\tldws\n+\tldirx\n+\tlddx\n+\tlddrx\n+\tldpirx\n+\toutinb\n+\tmul\td,e\n+\tadd\thl,a\n+\tadd\tde,a\n+\tadd\tbc,a\n+\tadd\thl,0xbeaf\n+\tadd\tde,0xdead\n+\tadd\tbc,0x1234\n+\tswapnib\n+\tmirror\n+\tpush\t0x1234\n+\tnextreg\t0x12,0x34\n+\tnextreg\t0x56,a\n+\tpixeldn\n+\tpixelad\n+\tsetae\n+\ttest\t0x78\n+\tbsla\tde,b\n+\tbsra\tde,b\n+\tbsrl\tde,b\n+\tbsrf\tde,b\n+\tbrlc\tde,b\n+\tjp\t(c)\n+\n+\t.globl\tpush_value\n+\tpush\tpush_value\n+;Z80N aliases\n+\tmlt\tde\n+\tswap\ta\n+\ttst\t0xab\n+\t.end"
    },
    {
      "sha": "8fa78e1a1d023b85649c7940e3cd3e6eccc5c1dc",
      "filename": "gas/testsuite/gas/z80/z80n_reloc.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/testsuite/gas/z80/z80n_reloc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/gas/testsuite/gas/z80/z80n_reloc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80n_reloc.d?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -0,0 +1,10 @@\n+#as: -z80n\n+#source: z80n_all.s\n+#objdump: -r\n+#name: Z80N big-endian relocation\n+\n+.*:[     ]+file format (coff|elf32)\\-z80\n+\n+RELOCATION RECORDS FOR \\[\\.text\\]:\n+OFFSET[   ]+TYPE[              ]+VALUE\\s*\n+0*c2a[ ]+r_imm16be[           ]+push_value\\s*"
    },
    {
      "sha": "6facd28fc2f0c679a562b57a059025cc6b11b7f0",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -1,3 +1,10 @@\n+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25469\n+\t* coff/internal.h (R_IMM16BE): Define.\n+\t* elf/z80.h (EF_Z80_MACH_Z80N): Define.\n+\t(R_Z80_16_BE): New reloc.\n+\n 2020-02-04  Alan Modra  <amodra@gmail.com>\n \n \t* opcode/d30v.h (struct pd_reg): Make value field unsigned."
    },
    {
      "sha": "86fe07066ad2174c540313eb99300b2ff5fd5f31",
      "filename": "include/coff/internal.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/include/coff/internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/include/coff/internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/internal.h?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -812,6 +812,7 @@ struct internal_reloc\n /* Z80 modes */\n #define R_OFF8    0x32\t\t/* 8 bit signed abs, for (i[xy]+d) */\n #define R_IMM24   0x33          /* 24 bit abs */\n+#define R_IMM16BE 0x3A          /* 16 bit abs, big endian */\n /* R_JR, R_IMM8, R_IMM16, R_IMM32 - as for Z8k */\n #define R_BYTE0  0x34\t\t/* first (lowest) 8 bits of multibyte value */\n #define R_BYTE1  0x35\t\t/* second 8 bits of multibyte value */"
    },
    {
      "sha": "9b5e86fbd6248cc71551adb0a09908f024937ab3",
      "filename": "include/elf/z80.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/include/elf/z80.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/include/elf/z80.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/z80.h?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -30,6 +30,7 @@\n #define EF_Z80_MACH_EZ80_Z80 0x04\n #define EF_Z80_MACH_EZ80_ADL 0x84\n #define EF_Z80_MACH_GBZ80    0x05\n+#define EF_Z80_MACH_Z80N     0x06\n #define EF_Z80_MACH_MSK      0xff\n \n /* Relocations.  */\n@@ -47,6 +48,7 @@ START_RELOC_NUMBERS (elf_z80_reloc_type)\n      RELOC_NUMBER (R_Z80_BYTE3,\t\t10)\n      RELOC_NUMBER (R_Z80_WORD0,\t\t11)\n      RELOC_NUMBER (R_Z80_WORD1,\t\t12)\n+     RELOC_NUMBER (R_Z80_16_BE,\t\t13)\n END_RELOC_NUMBERS (R_Z80_max)\n \n #endif /* _ELF_Z80_H */"
    },
    {
      "sha": "44a68879807bca3d1c2d0b1664eea2d8a39430fb",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -1,3 +1,22 @@\n+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25469\n+\t* emulparams/elf32z80.sh: Use z80 emulation.\n+\t* emultempl/z80.em: Make generic to both COFF and ELF Z80 emulations.\n+\t* emultempl/z80elf.em: Delete.\n+\t* testsuite/ld-elf/pr22450.d: Expect to fail for the Z80.\n+\t* testsuite/ld-elf/sec64k.exp: Fix Z80 assembly.\n+\t* testsuite/ld-unique/pr21529.s: Avoid register name conflict.\n+\t* testsuite/ld-unique/unique.s: Likewise.\n+\t* testsuite/ld-unique/unique_empty.s: Likewise.\n+\t* testsuite/ld-unique/unique_shared.s: Likewise.\n+\t* testsuite/ld-unique/unique.d: Updated expected output.\n+\t* testsuite/ld-z80/arch_z80n.d: New file.\n+\t* testsuite/ld-z80/comb_arch_z80_z80n.d: New file.\n+\t* testsuite/ld-z80/labels.s: Add more labels.\n+\t* testsuite/ld-z80/relocs.s: Add more reloc tests.\n+\t* testsuite/ld-z80/relocs_f_z80n.d: New file\n+\n 2020-02-07  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ld/25022"
    },
    {
      "sha": "45a1112103af16c268ff00e6e6287eb452afb000",
      "filename": "ld/emulparams/elf32z80.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/emulparams/elf32z80.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/emulparams/elf32z80.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf32z80.sh?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -11,7 +11,7 @@ TEXT_START_ADDR=0x100\n #TEXT_LENGTH=0\n #DATA_ORIGIN=0\n #DATA_LENGTH=0\n-EXTRA_EM_FILE=z80elf\n+EXTRA_EM_FILE=z80\n \n #FUSE_NAME=fuse\n "
    },
    {
      "sha": "81385e7433fc57c2ba24796aebb0edfa803352db",
      "filename": "ld/emultempl/z80.em",
      "status": "modified",
      "additions": 111,
      "deletions": 104,
      "changes": 215,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/emultempl/z80.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/emultempl/z80.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/z80.em?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -19,129 +19,136 @@\n # Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n # MA 02110-1301, USA.\n \n-LDEMUL_BEFORE_PARSE=gldz80_before_parse\n-LDEMUL_RECOGNIZED_FILE=gldz80_recognized_file\n-LDEMUL_AFTER_OPEN=gldz80_after_open\n-\n fragment <<EOF\n /* --- \\begin{z80.em} */\n-/* Codes for machine types, bitwise or gives the code to use for the\n-   output.  */\n-#define M_Z80STRICT 0x01\n-#define M_Z80       0x03\n-#define M_Z80FULL   0x07\n-#define M_R800      0x10\n-#define M_Z80ANY    0x0f\n-#define M_GBZ80     0x20\n-#define M_Z180      0x40\n-#define M_EZ80_Z80  0x80\n-#define M_EZ80_ADL  0x100\n-#define M_ARCH_MASK 0xFF0\n-\n-/* Bitwise or of the machine types seen so far.  */\n-static int result_mach_type;\n+\n+#include \"elf/z80.h\"\n \n static void\n-${LDEMUL_BEFORE_PARSE} (void)\n+gld${EMULATION_NAME}_after_open (void);\n+\n+static int result_mach_type;\n+\n+struct z80_mach_info\n {\n-#ifndef TARGET_\t\t\t/* I.e., if not generic.  */\n-  ldfile_set_output_arch (\"`echo ${ARCH}`\", bfd_arch_unknown);\n-#endif /* not TARGET_ */\n-  result_mach_type = 0;\n-}\n+  unsigned eflags;\n+  unsigned bfd_mach;\n+  const int *compat; /* back compatible machines */\n+};\n \n+static const int\n+back_compat_z80[] = {bfd_mach_z80, -1};\n \n-/* Update result_mach_type.  */\n-static bfd_boolean\n-${LDEMUL_RECOGNIZED_FILE} (lang_input_statement_type *entry)\n+static const int\n+back_compat_z180[] = {bfd_mach_z180, bfd_mach_z80, -1};\n+\n+static const int\n+back_compat_ez80[] = {bfd_mach_ez80_z80, bfd_mach_z180, bfd_mach_z80, -1};\n+\n+static const struct z80_mach_info\n+z80_mach_info[] =\n {\n-  unsigned long mach_type;\n+  { EF_Z80_MACH_Z80,      bfd_mach_z80,       NULL },\n+  { EF_Z80_MACH_Z80,      bfd_mach_z80strict, back_compat_z80 },\n+  { EF_Z80_MACH_Z80,      bfd_mach_z80full,   back_compat_z80 },\n+  { EF_Z80_MACH_Z180,     bfd_mach_z180,      back_compat_z80 },\n+  { EF_Z80_MACH_EZ80_Z80, bfd_mach_ez80_z80,  back_compat_z180 },\n+  { EF_Z80_MACH_EZ80_ADL, bfd_mach_ez80_adl,  back_compat_ez80 },\n+  { EF_Z80_MACH_Z80N,     bfd_mach_z80n,      back_compat_z80 },\n+  { EF_Z80_MACH_GBZ80,    bfd_mach_gbz80,     NULL },\n+  { EF_Z80_MACH_R800,     bfd_mach_r800,      back_compat_z80 }\n+};\n+/*\n+static const struct z80_mach_info *\n+z80_mach_info_by_eflags (unsigned int eflags)\n+{\n+  const struct z80_mach_info *p;\n+  const struct z80_mach_info *e;\n \n-  mach_type = bfd_get_mach (entry->the_bfd);\n-  switch (mach_type)\n-    {\n-    case bfd_mach_z80strict:\n-      result_mach_type |= M_Z80STRICT;\n-      break;\n-    case bfd_mach_z80:\n-      result_mach_type |= M_Z80;\n-      break;\n-    case bfd_mach_z80full:\n-      result_mach_type |= M_Z80FULL;\n-      break;\n-    case bfd_mach_r800:\n-      result_mach_type |= M_R800;\n-      break;\n-    case bfd_mach_gbz80:\n-      result_mach_type |= M_GBZ80;\n-      break;\n-    case bfd_mach_z180:\n-      result_mach_type |= M_Z180;\n-      break;\n-    case bfd_mach_ez80_z80:\n-      result_mach_type |= M_EZ80_Z80;\n-      break;\n-    case bfd_mach_ez80_adl:\n-      result_mach_type |= M_EZ80_ADL;\n-      break;\n-    default:\n-      einfo (_(\"%P: warning: unknown machine type %u\"), (unsigned)mach_type);\n-      result_mach_type |= M_Z80ANY;\n-    }\n-  return FALSE;\n+  eflags &= EF_Z80_MACH_MSK;\n+  p = &z80_mach_info[0];\n+  e = &z80_mach_info[sizeof(z80_mach_info)/sizeof(*z80_mach_info)];\n+  for (; p != e; ++p)\n+    if (eflags == p->eflags)\n+      return p;\n+  return NULL;\n+}*/\n+\n+static const struct z80_mach_info *\n+z80_mach_info_by_mach (unsigned int bfd_mach)\n+{\n+  const struct z80_mach_info *p;\n+  const struct z80_mach_info *e;\n+\n+  p = &z80_mach_info[0];\n+  e = &z80_mach_info[sizeof(z80_mach_info)/sizeof(*z80_mach_info)];\n+  for (; p != e; ++p)\n+    if (bfd_mach == p->bfd_mach)\n+      return p;\n+  return NULL;\n+}\n+\n+static const struct z80_mach_info *\n+z80_combine_mach (const struct z80_mach_info *m1,\n+\t\t  const struct z80_mach_info *m2)\n+{\n+  int i;\n+  int mach;\n+  if (m1->compat != NULL)\n+    for (i = 0; (mach = m1->compat[i]) >= 0; ++i)\n+      if ((unsigned)mach == m2->bfd_mach)\n+\treturn m1;\n+  if (m2->compat != NULL)\n+    for (i = 0; (mach = m2->compat[i]) >= 0; ++i)\n+      if ((unsigned)mach == m1->bfd_mach)\n+\treturn m2;\n+  /* incompatible mach */\n+  return NULL;\n }\n \n /* Set the machine type of the output file based on result_mach_type.  */\n static void\n-gldz80_after_open (void)\n+z80_after_open (void)\n {\n-  unsigned long mach_type;\n+  const struct z80_mach_info *mach = NULL;\n+  bfd *abfd;\n \n-  after_open_default ();\n-\n-  switch (result_mach_type & M_ARCH_MASK)\n+  /* For now, make sure all object files are of the same architecture.\n+     We may try to merge object files with different architecture together.  */\n+  for (abfd = link_info.input_bfds; abfd != NULL; abfd = abfd->link.next)\n     {\n-    case M_Z80 & M_ARCH_MASK:\n-    case M_R800:\n-    case M_Z180:\n-    case M_GBZ80:\n-    case M_EZ80_Z80:\n-    case M_EZ80_ADL:\n-    case M_EZ80_Z80 | M_Z180:\n-      /* valid combination */\n-      break;\n-    case M_EZ80_Z80 | M_EZ80_ADL:\n-    case M_EZ80_Z80 | M_EZ80_ADL | M_Z180:\n-    case M_EZ80_ADL | M_Z180:\n-      /* combination may cause invalid objdump output */\n-      /* but it is possible for mixed ADL/Z80 code */\n-      einfo (_(\"%P: warning: mixing ADL and Z80 mode binaries, objdump may generate invalid output\"));\n-      break;\n-    default:\n-      /* invalid combination: for example Z180 + R800 */\n-      einfo (_(\"%P: warning: incompatible object files linked, result code might not work\"));\n+      const struct z80_mach_info *new_mach;\n+      /*new_mach = z80_mach_info_by_eflags (elf_elfheader (abfd)->e_flags);*/\n+      new_mach = z80_mach_info_by_mach(bfd_get_mach (abfd));\n+      if (mach == NULL)\n+\tmach = new_mach;\n+      else if (mach != new_mach)\n+\tmach = z80_combine_mach (mach, new_mach);\n+      if (mach == NULL)\n+\teinfo (_(\"%F%P: %pB: Instruction sets of object files incompatible\\n\"),\n+\t       abfd);\n+    }\n+  if (mach != NULL)\n+    {\n+      bfd_set_arch_mach (link_info.output_bfd, bfd_arch_z80, mach->bfd_mach);\n+      result_mach_type = mach->bfd_mach;\n     }\n-\n-  if ((result_mach_type & M_EZ80_ADL) == M_EZ80_ADL)\n-    mach_type = bfd_mach_ez80_adl;\n-  else if ((result_mach_type & M_EZ80_Z80) == M_EZ80_Z80)\n-    mach_type = bfd_mach_ez80_z80;\n-  else if ((result_mach_type & M_Z180) == M_Z180)\n-    mach_type = bfd_mach_z180;\n-  else if ((result_mach_type & M_R800) == M_R800)\n-    mach_type = bfd_mach_r800;\n-  else if ((result_mach_type & M_GBZ80) == M_GBZ80)\n-    mach_type = bfd_mach_gbz80;\n-  else if ((result_mach_type & M_Z80FULL) == M_Z80FULL)\n-    mach_type = bfd_mach_z80full; /* TODO: remove it */\n-  else if ((result_mach_type & M_Z80) == M_Z80)\n-    mach_type = bfd_mach_z80;\n-  else if ((result_mach_type & M_Z80STRICT) == M_Z80STRICT)\n-    mach_type = bfd_mach_z80strict; /* TODO: remove this */\n   else\n-    mach_type = bfd_arch_unknown;\n+    einfo (_(\"%F%P: %pB: Unknown machine type\\n\"),\n+\t   abfd);\n \n-  bfd_set_arch_mach (link_info.output_bfd, bfd_arch_z80, mach_type);\n+  /* Call the standard elf routine.  */\n+  gld${EMULATION_NAME}_after_open ();\n }\n+\n+#ifndef TARGET_IS_elf32z80\n+static void\n+gld${EMULATION_NAME}_after_open (void)\n+{\n+}\n+#endif\n+\n /* --- \\end{z80.em} */\n EOF\n+\n+LDEMUL_AFTER_OPEN=z80_after_open"
    },
    {
      "sha": "4b03e798d1b37d3ab16e031ab65658d9b379da6a",
      "filename": "ld/emultempl/z80elf.em",
      "status": "removed",
      "additions": 0,
      "deletions": 133,
      "changes": 133,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/adb8754e48d53b219ddaa9e8368e4b1acb9db53a/ld/emultempl/z80elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/adb8754e48d53b219ddaa9e8368e4b1acb9db53a/ld/emultempl/z80elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/z80elf.em?ref=adb8754e48d53b219ddaa9e8368e4b1acb9db53a",
      "patch": "@@ -1,133 +0,0 @@\n-# This shell script emits C code -*- C -*-\n-# to keep track of the machine type of Z80 object files\n-# It does some substitutions.\n-#   Copyright (C) 2005-2019 Free Software Foundation, Inc.\n-# This file is part of the GNU Binutils.\n-#\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n-# MA 02110-1301, USA.\n-\n-fragment <<EOF\n-/* --- \\begin{z80.em} */\n-\n-#include \"elf/z80.h\"\n-\n-static void\n-gld${EMULATION_NAME}_after_open (void);\n-\n-static int result_mach_type;\n-\n-/* Set the machine type of the output file based on result_mach_type.  */\n-static void\n-z80_elf_after_open (void)\n-{\n-  unsigned int mach = 0;\n-  bfd *abfd;\n-\n-  /* For now, make sure all object files are of the same architecture.\n-     We may try to merge object files with different architecture together.  */\n-  for (abfd = link_info.input_bfds; abfd != NULL; abfd = abfd->link.next)\n-    {\n-      unsigned long new_mach;\n-      new_mach = elf_elfheader (abfd)->e_flags & 0xff;\n-      if (!mach)\n-\tmach = new_mach;\n-      else if (mach != new_mach)\n-\t{\n-\t  if ((new_mach == EF_Z80_MACH_R800 || mach == EF_Z80_MACH_R800) ||\n-\t      (new_mach == EF_Z80_MACH_GBZ80 || mach == EF_Z80_MACH_GBZ80))\n-\t    einfo (_(\"%F%P: %pB: Instruction set of object files mismatched\\n\"),\n-\t\t   abfd);\n-\t  else if (mach < new_mach)\n-\t    mach = new_mach;\n-\t}\n-    }\n-  switch (mach & 0xff)\n-    {\n-    case EF_Z80_MACH_Z80:\n-      mach = bfd_mach_z80;\n-      break;\n-    case EF_Z80_MACH_Z180:\n-      mach = bfd_mach_z180;\n-      break;\n-    case EF_Z80_MACH_R800:\n-      mach = bfd_mach_r800;\n-      break;\n-    case EF_Z80_MACH_EZ80_Z80:\n-      mach = bfd_mach_ez80_z80;\n-      break;\n-    case EF_Z80_MACH_EZ80_ADL:\n-      mach = bfd_mach_ez80_adl;\n-      break;\n-    case EF_Z80_MACH_GBZ80:\n-      mach = bfd_mach_gbz80;\n-      break;\n-    default:\n-      mach = (unsigned)-1;\n-    }\n-\n-  bfd_set_arch_mach (link_info.output_bfd, bfd_arch_z80, mach);\n-  result_mach_type = mach;\n-\n-  /* Call the standard elf routine.  */\n-  gld${EMULATION_NAME}_after_open ();\n-}\n-\n-static void\n-z80_elf_finish (void)\n-{\n-  bfd *abfd;\n-\n-  abfd = link_info.output_bfd;\n-\n-  if (bfd_get_flavour (abfd) == bfd_target_elf_flavour)\n-    {\n-      unsigned e_flags;\n-      switch (result_mach_type)\n-\t{\n-\tcase bfd_mach_z80strict:\n-\tcase bfd_mach_z80:\n-\tcase bfd_mach_z80full:\n-\t  e_flags = EF_Z80_MACH_Z80;\n-\t  break;\n-\tcase bfd_mach_r800:\n-\t  e_flags = EF_Z80_MACH_R800;\n-\t  break;\n-\tcase bfd_mach_gbz80:\n-\t  e_flags = EF_Z80_MACH_GBZ80;\n-\t  break;\n-\tcase bfd_mach_z180:\n-\t  e_flags = EF_Z80_MACH_Z180;\n-\t  break;\n-\tcase bfd_mach_ez80_z80:\n-\t  e_flags = EF_Z80_MACH_EZ80_Z80;\n-\t  break;\n-\tcase bfd_mach_ez80_adl:\n-\t  e_flags = EF_Z80_MACH_EZ80_ADL;\n-\t  break;\n-\tdefault:\n-\t  e_flags = ~0;\n-\t}\n-      elf_elfheader (abfd)->e_flags = (elf_elfheader (abfd)->e_flags & ~0xff) | e_flags;\n-    }\n-\n-  finish_default ();\n-}\n-\n-/* --- \\end{z80.em} */\n-EOF\n-\n-LDEMUL_AFTER_OPEN=z80_elf_after_open\n-LDEMUL_FINISH=z80_elf_finish"
    },
    {
      "sha": "30754ec6a5d8646934c2fa4090cb92a508f01f15",
      "filename": "ld/testsuite/ld-elf/pr22450.d",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-elf/pr22450.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-elf/pr22450.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr22450.d?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -1,6 +1,7 @@\n #source: pr22450.s\n #readelf: --notes --wide\n #ld: -r\n+#xfail: z80-*-*\n # Fails on H8300 because it does not generate the correct relocs for the size fields.\n # Fails on AVR, IP2K, M68HC11, XC16C because the assembler does not calculate the correct values for the differences of local symbols.\n # Fails on CRX because readelf does not know how to apply CRX reloc number 20 (R_CRX_SWITCH32)."
    },
    {
      "sha": "7c85979e578727ede8baf41a1e8d34820a9d6c85",
      "filename": "ld/testsuite/ld-elf/sec64k.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-elf/sec64k.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-elf/sec64k.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/sec64k.exp?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -130,6 +130,10 @@ if { ![istarget \"m32r-*-*\"] } then {\n     foreach sfile [lrange $sfiles 0 [expr [llength $sfiles] / 2]] {\n \tputs $ofd \"#source: $sfile\"\n     }\n+    #force z80 target to compile for eZ80 in ADL mode\n+    if { [istarget \"z80-*-*\"] } then {\n+\tputs $ofd \"#as: -ez80-adl\"\n+    }\n     puts $ofd \"#ld: -r\"\n     puts $ofd \"#readelf: -W -Ss\"\n     puts $ofd \"There are 680.. section headers.*:\"\n@@ -180,6 +184,10 @@ if { ![istarget \"d10v-*-*\"]\n     } else {\n \tputs $ofd \"#ld:\"\n     }\n+    #force z80 target to compile for eZ80 in ADL mode\n+    if { [istarget \"z80-*-*\"] } then {\n+\tputs $ofd \"#as: -ez80-adl\"\n+    }\n     puts $ofd \"#readelf: -W -Ss\"\n     puts $ofd \"There are 660.. section headers.*:\"\n     puts $ofd \"#...\""
    },
    {
      "sha": "fd09d61ba5e883ab54b5312c1b5e9ad409ed02f8",
      "filename": "ld/testsuite/ld-unique/pr21529.s",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-unique/pr21529.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-unique/pr21529.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-unique/pr21529.s?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -1,8 +1,8 @@\n-\t.type a, %gnu_unique_object\n-a:\t.long 0\n-\t.size a, .-a\n+\t.type a_val, %gnu_unique_object\n+a_val:\t.long 0\n+\t.size a_val, .-a_val\n \n         .type main,\"function\"\n         .global main\n main:\n-        .dc.a a\n+\t.dc.a a_val"
    },
    {
      "sha": "77422d5e5a9b47d73b327c0a4c6bd89035579995",
      "filename": "ld/testsuite/ld-unique/unique.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-unique/unique.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-unique/unique.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-unique/unique.d?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -5,5 +5,5 @@\n #...\n  *OS/ABI: +UNIX - GNU\n #...\n- *[0-9]+: +[0-9a-f]+ +[0-9]+ +OBJECT +UNIQUE +DEFAULT +[0-9]+ a\n+ *[0-9]+: +[0-9a-f]+ +[0-9]+ +OBJECT +UNIQUE +DEFAULT +[0-9]+ a_val\n #pass"
    },
    {
      "sha": "cd5e64e60d2da48eb9307d5ab98b0ee97fb2faa1",
      "filename": "ld/testsuite/ld-unique/unique.s",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-unique/unique.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-unique/unique.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-unique/unique.s?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -1,6 +1,6 @@\n-\t.type a, %gnu_unique_object\n-a:\t.long 0\n-\t.size a, .-a\n+\t.type a_val, %gnu_unique_object\n+a_val:\t.long 0\n+\t.size a_val, .-a_val\n \n         .type main,\"function\"\n         .global main"
    },
    {
      "sha": "4896641b50b7ca028647ab8194581c789db3879b",
      "filename": "ld/testsuite/ld-unique/unique_empty.s",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-unique/unique_empty.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-unique/unique_empty.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-unique/unique_empty.s?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -1,4 +1,4 @@\n         .type main,\"function\"\n         .global main\n main:\n-        .dc.a b\n+\t.dc.a b_val"
    },
    {
      "sha": "f1914f3393f9a03f4e86062a3ae835954474fab3",
      "filename": "ld/testsuite/ld-unique/unique_shared.s",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-unique/unique_shared.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-unique/unique_shared.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-unique/unique_shared.s?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -1,3 +1,3 @@\n-\t.type b, %gnu_unique_object\n-b:\t.long 0\n-\t.size b, .-b\n+\t.type b_val, %gnu_unique_object\n+b_val:\t.long 0\n+\t.size b_val, .-b_val"
    },
    {
      "sha": "69754b3d6aa400ac1eec381014daf53270115b61",
      "filename": "ld/testsuite/ld-z80/arch_z80n.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-z80/arch_z80n.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-z80/arch_z80n.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/arch_z80n.d?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -0,0 +1,11 @@\n+#name: Z80N arch test\n+#source: dummy1.s -z80n\n+#source: dummy2.s -z80n\n+#ld: -e 0\n+#objdump: -f\n+\n+.*:[     ]+file format (coff|elf32)\\-z80\n+architecture: z80n, flags 0x[0-9a-fA-F]+:\n+.*\n+.*\n+"
    },
    {
      "sha": "96319a2a8b2c8ea7e5b93e25e8673754f594c9ab",
      "filename": "ld/testsuite/ld-z80/comb_arch_z80_z80n.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-z80/comb_arch_z80_z80n.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-z80/comb_arch_z80_z80n.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/comb_arch_z80_z80n.d?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -0,0 +1,11 @@\n+#name: Z80/Z80N arch combination test\n+#source: dummy1.s -z80\n+#source: dummy2.s -z80n\n+#ld: -e 0\n+#objdump: -f\n+\n+.*:[     ]+file format (coff|elf32)\\-z80\n+architecture: z80n, flags 0x[0-9a-fA-F]+:\n+.*\n+.*\n+"
    },
    {
      "sha": "395cfb2e6f7815f0f85d0c12b727b9c5a28ecce0",
      "filename": "ld/testsuite/ld-z80/labels.s",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-z80/labels.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-z80/labels.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/labels.s?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -9,6 +9,9 @@\n \t.globl\tlabel8\n \t.globl\tlabel9\n \t.globl\tvalue8\n+\t.globl\tvalue8_1\n+\t.globl\tvalue8_2\n+\t.globl\tvalue8_3\n \t.globl\tvalue16\n \t.globl\tvalue24\n \t.globl\tvalue32\n@@ -35,6 +38,9 @@ label9:\n \tcpl\n \n value8\t.equ 0x12\n+value8_1\t.equ 0xab\n+value8_2\t.equ 0xcd\n+value8_3\t.equ 0xef\n value16\t.equ\t0x1234\n value24\t.equ\t0x123456\n value32\t.equ\t0x12345678"
    },
    {
      "sha": "422b067c4ace4c2e761e3e84a1c7a7bf00548baf",
      "filename": "ld/testsuite/ld-z80/relocs.s",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-z80/relocs.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-z80/relocs.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/relocs.s?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -12,6 +12,9 @@\n \t.globl\tlabel9\n \n \t.globl\tvalue8\n+\t.globl\tvalue8_1\n+\t.globl\tvalue8_2\n+\t.globl\tvalue8_3\n \t.globl\tvalue16\n \t.globl\tvalue24\n \t.globl\tvalue32\n@@ -74,6 +77,14 @@ field_0_1\t.equ\tfield_0+90\n \tld\th,(value32 + 0x12345678) >> 8\n \tld\tl,(value32 + 0x12345678) >> 0\n \n+\t.ifdef Z80N\n+\tpush\tlabel1\n+\tpush\tvalue16\n+\tnextreg\tvalue8_1,value8_2\n+\tnextreg\tvalue8_3,a\n+\tld\ta,a\n+\t.endif\n+\n \t.data\n \t.db\tvalue8\n \t.dw\tvalue16"
    },
    {
      "sha": "8cf0ab88447b777debf945a03a8f69d69b1bf9e7",
      "filename": "ld/testsuite/ld-z80/relocs_f_z80n.d",
      "status": "added",
      "additions": 86,
      "deletions": 0,
      "changes": 86,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-z80/relocs_f_z80n.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/ld/testsuite/ld-z80/relocs_f_z80n.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/relocs_f_z80n.d?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -0,0 +1,86 @@\n+#name: Z80N forward relocation\n+#as: -z80n --defsym Z80N=1\n+#source: relocs.s\n+#source: labels.s\n+#ld: -e 0 -Ttext 0x100 -Tdata 0x200\n+#objdump: -d\n+\n+\n+.*:[     ]+file format (coff|elf32)\\-z80\n+\n+\n+.* \\.text:\n+\n+0+100 <.*>:\n+[ ]+100:[ \t]+cd 7d 01[    \t]+call 0x017d\n+[ ]+103:[ \t]+c4 7e 01[    \t]+call nz,0x017e\n+[ ]+106:[ \t]+cc 7f 01[    \t]+call z,0x017f\n+[ ]+109:[ \t]+d4 80 01[    \t]+call nc,0x0180\n+[ ]+10c:[ \t]+dc 81 01[    \t]+call c,0x0181\n+[ ]+10f:[ \t]+e4 82 01[    \t]+call po,0x0182\n+[ ]+112:[ \t]+ec 83 01[    \t]+call pe,0x0183\n+[ ]+115:[ \t]+f4 84 01[    \t]+call p,0x0184\n+[ ]+118:[ \t]+fc 85 01[    \t]+call m,0x0185\n+[ ]+11b:[ \t]+c3 7d 01[    \t]+jp 0x017d\n+[ ]+11e:[ \t]+c2 7e 01[    \t]+jp nz,0x017e\n+[ ]+121:[ \t]+ca 7f 01[    \t]+jp z,0x017f\n+[ ]+124:[ \t]+d2 80 01[    \t]+jp nc,0x0180\n+[ ]+127:[ \t]+da 81 01[    \t]+jp c,0x0181\n+[ ]+12a:[ \t]+e2 82 01[    \t]+jp po,0x0182\n+[ ]+12d:[ \t]+ea 83 01[    \t]+jp pe,0x0183\n+[ ]+130:[ \t]+f2 84 01[    \t]+jp p,0x0184\n+[ ]+133:[ \t]+fa 85 01[    \t]+jp m,0x0185\n+[ ]+136:[ \t]+dd 6e 05[    \t]+ld l,\\(ix\\+5\\)\n+[ ]+139:[ \t]+dd 7e 03[    \t]+ld a,\\(ix\\+3\\)\n+[ ]+13c:[ \t]+dd 4e fa[    \t]+ld c,\\(ix\\-6\\)\n+[ ]+13f:[ \t]+dd 46 f9[    \t]+ld b,\\(ix\\-7\\)\n+[ ]+142:[ \t]+fd 75 fb[    \t]+ld \\(iy\\-5\\),l\n+[ ]+145:[ \t]+fd 77 03[    \t]+ld \\(iy\\+3\\),a\n+[ ]+148:[ \t]+fd 71 0e[    \t]+ld \\(iy\\+14\\),c\n+[ ]+14b:[ \t]+fd 70 0f[    \t]+ld \\(iy\\+15\\),b\n+[ ]+14e:[ \t]+fd 66 5d[    \t]+ld h,\\(iy\\+93\\)\n+[ ]+151:[ \t]+11 34 12[    \t]+ld de,0x1234\n+[ ]+154:[ \t]+21 78 56[    \t]+ld hl,0x5678\n+[ ]+157:[ \t]+11 68 24[    \t]+ld de,0x2468\n+[ ]+15a:[ \t]+21 f0 ac[    \t]+ld hl,0xacf0\n+[ ]+15d:[ \t]+16 12[       \t]+ld d,0x12\n+[ ]+15f:[ \t]+1e 34[       \t]+ld e,0x34\n+[ ]+161:[ \t]+26 56[       \t]+ld h,0x56\n+[ ]+163:[ \t]+2e 78[       \t]+ld l,0x78\n+[ ]+165:[ \t]+16 24[       \t]+ld d,0x24\n+[ ]+167:[ \t]+1e 68[       \t]+ld e,0x68\n+[ ]+169:[ \t]+26 ac[       \t]+ld h,0xac\n+[ ]+16b:[ \t]+2e f0[       \t]+ld l,0xf0\n+[ ]+16d:[ \t]+ed 8a 01 7d[ \t]+push 0x017d\n+[ ]+171:[ \t]+ed 8a 12 34[ \t]+push 0x1234\n+[ ]+175:[ \t]+ed 91 ab cd[ \t]+nextreg 0xab,0xcd\n+[ ]+179:[ \t]+ed 92 ef[    \t]+nextreg 0xef,a\n+[ ]+17c:[ \t]+7f[          \t]+ld a,a\n+\n+0+17d <label1>:\n+[ ]+17d:[ \t]+78[          \t]+ld a,b\n+\n+0+17e <label2>:\n+[ ]+17e:[ \t]+79[          \t]+ld a,c\n+\n+0+17f <label3>:\n+[ ]+17f:[ \t]+7a[          \t]+ld a,d\n+\n+0+180 <label4>:\n+[ ]+180:[ \t]+7b[          \t]+ld a,e\n+\n+0+181 <label5>:\n+[ ]+181:[ \t]+7c[          \t]+ld a,h\n+\n+0+182 <label6>:\n+[ ]+182:[ \t]+7d[          \t]+ld a,l\n+\n+0+183 <label7>:\n+[ ]+183:[ \t]+7e[          \t]+ld a,\\(hl\\)\n+\n+0+184 <label8>:\n+[ ]+184:[ \t]+7f[          \t]+ld a,a\n+\n+0+185 <label9>:\n+[ ]+185:[ \t]+2f[          \t]+cpl\n+#pass"
    },
    {
      "sha": "f4a052104ae7ff2ec80e560d137117830f284cef",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25469\n+\t* z80-dis.c: Add support for GBZ80 opcodes.\n+\n 2020-02-04  Alan Modra  <amodra@gmail.com>\n \n \t* d30v-dis.c (print_insn): Make \"val\" and \"opnum\" unsigned."
    },
    {
      "sha": "4762a626a8f084dd47a98a843ff1c454107ac4dc",
      "filename": "opcodes/z80-dis.c",
      "status": "modified",
      "additions": 153,
      "deletions": 20,
      "changes": 173,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/opcodes/z80-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fc0b501af78bc4a92f53ec712e1aaa123e0224c/opcodes/z80-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/z80-dis.c?ref=9fc0b501af78bc4a92f53ec712e1aaa123e0224c",
      "patch": "@@ -52,6 +52,7 @@ struct tab_elt\n #define INSS_EZ80_Z80 (1 << bfd_mach_ez80_z80)\n #define INSS_EZ80_ADL (1 << bfd_mach_ez80_adl)\n #define INSS_EZ80 (INSS_EZ80_ADL | INSS_EZ80_Z80)\n+#define INSS_Z80N (1 << bfd_mach_z80n)\n \n #define TXTSIZ 24\n /* Names of 16-bit registers.  */\n@@ -65,14 +66,18 @@ static const char * arit_str[] =\n {\n   \"add a,\", \"adc a,\", \"sub \", \"sbc a,\", \"and \", \"xor \", \"or \", \"cp \"\n } ;\n+static const char * arit_str_gbz80[] =\n+{\n+  \"add a,\", \"adc a,\", \"sub a,\", \"sbc a,\", \"and \", \"xor \", \"or \", \"cp \"\n+} ;\n static const char * arit_str_ez80[] =\n {\n   \"add a,\", \"adc a,\", \"sub a,\", \"sbc a,\", \"and a,\", \"xor a,\", \"or a,\", \"cp a,\"\n } ;\n \n \f\n static int\n-mach_inst (struct buffer *buf, struct tab_elt *p)\n+mach_inst (struct buffer *buf, const struct tab_elt *p)\n {\n   return !p->inss || (p->inss & buf->inss);\n }\n@@ -191,6 +196,27 @@ prt_n (struct buffer *buf, disassemble_info * info, const char *txt)\n   return buf->n_used;\n }\n \n+static int\n+prt_n_n (struct buffer *buf, disassemble_info * info, const char *txt)\n+{\n+  char mytxt[TXTSIZ];\n+  int n;\n+  unsigned char *p;\n+\n+  p = (unsigned char*) buf->data + buf->n_fetch;\n+\n+  if (fetch_data (buf, info, 1))\n+    {\n+      n = p[0];\n+      snprintf (mytxt, TXTSIZ, txt, n);\n+      buf->n_used = buf->n_fetch;\n+    }\n+  else\n+    buf->n_used = -1;\n+\n+  return prt_n (buf, info, mytxt);\n+}\n+\n static int\n prt_r_n (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n@@ -268,7 +294,14 @@ static int\n arit_r (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   const char * const *arit;\n-  arit = (buf->inss & INSS_EZ80) ? arit_str_ez80 : arit_str;\n+\n+  if (buf->inss & INSS_EZ80)\n+    arit = arit_str_ez80;\n+  else if (buf->inss & INSS_GBZ80)\n+    arit = arit_str_gbz80;\n+  else\n+    arit = arit_str;\n+\n   info->fprintf_func (info->stream, txt,\n                       arit[(buf->data[buf->n_fetch - 1] >> 3) & 7],\n                       r_str[buf->data[buf->n_fetch - 1] & 7]);\n@@ -313,7 +346,13 @@ arit_n (struct buffer *buf, disassemble_info * info, const char *txt)\n   char mytxt[TXTSIZ];\n   const char * const *arit;\n \n-  arit = (buf->inss & INSS_EZ80) ? arit_str_ez80 : arit_str;\n+  if (buf->inss & INSS_EZ80)\n+    arit = arit_str_ez80;\n+  else if (buf->inss & INSS_GBZ80)\n+    arit = arit_str_gbz80;\n+  else\n+    arit = arit_str;\n+\n   snprintf (mytxt,TXTSIZ, txt, arit[(buf->data[0] >> 3) & 7]);\n   return prt_n (buf, info, mytxt);\n }\n@@ -326,7 +365,7 @@ rst (struct buffer *buf, disassemble_info * info, const char *txt)\n   return buf->n_used;\n }\n \n-\f\n+\n static int\n cis (struct buffer *buf, disassemble_info * info, const char *txt ATTRIBUTE_UNUSED)\n {\n@@ -391,11 +430,13 @@ dump (struct buffer *buf, disassemble_info * info, const char *txt)\n   buf->n_used = i;\n   return buf->n_used;\n }\n-\f\n+\n /* Table to disassemble machine codes with prefix 0xED.  */\n struct tab_elt opc_ed[] =\n {\n-  { 0x30, 0xFE, dump, \"xx\", INSS_ALL },\n+  { 0x30, 0xFF, prt, \"mul d,e\", INSS_Z80N },\n+  { 0x31, 0xFF, prt, \"add hl,a\", INSS_Z80N },\n+  { 0x30, 0xFE, dump, \"xx\", INSS_ALL }, /* do not move this line */\n   { 0x00, 0xC7, prt_r_n, \"in0 %s,(0x%%02x)\", INSS_Z180|INSS_EZ80 },\n   { 0x01, 0xC7, prt_r_n, \"out0 (0x%%02x),%s\", INSS_Z180|INSS_EZ80 },\n   { 0x32, 0xFF, prt_d, \"lea ix,ix%+d\", INSS_EZ80 },\n@@ -407,17 +448,30 @@ struct tab_elt opc_ed[] =\n   { 0x07, 0xFF, prt, \"ld bc,(hl)\", INSS_EZ80 },\n   { 0x0F, 0xCF, prt_rr, \"ld (hl),\", INSS_EZ80 },\n   { 0x17, 0xFF, prt, \"ld de,(hl)\", INSS_EZ80 },\n+  { 0x23, 0xFF, prt, \"swapnib\", INSS_Z80N },\n+  { 0x24, 0xFF, prt, \"mirror\", INSS_Z80N },\n   { 0x27, 0xFF, prt, \"ld hl,(hl)\", INSS_EZ80 },\n+  { 0x27, 0xFF, prt_n, \"test 0x%02x\", INSS_Z80N },\n+  { 0x28, 0xFF, prt, \"bsla de,b\", INSS_Z80N },\n+  { 0x29, 0xFF, prt, \"bsra de,b\", INSS_Z80N },\n+  { 0x2A, 0xFF, prt, \"bsrl de,b\", INSS_Z80N },\n+  { 0x2B, 0xFF, prt, \"bsrf de,b\", INSS_Z80N },\n+  { 0x2C, 0xFF, prt, \"bslc de,b\", INSS_Z80N },\n+  { 0x32, 0xFF, prt, \"add de,a\", INSS_Z80N },\n+  { 0x33, 0xFF, prt, \"add bc,a\", INSS_Z80N },\n+  { 0x34, 0xFF, prt_nn, \"add hl,0x%04x\", INSS_Z80N },\n+  { 0x35, 0xFF, prt_nn, \"add de,0x%04x\", INSS_Z80N },\n+  { 0x36, 0xFF, prt_nn, \"add bc,0x%04x\", INSS_Z80N },\n   { 0x36, 0xFF, prt, \"ld iy,(hl)\", INSS_EZ80 },\n   { 0x37, 0xFF, prt, \"ld ix,(hl)\", INSS_EZ80 },\n   { 0x3E, 0xFF, prt, \"ld (hl),iy\", INSS_EZ80 },\n   { 0x3F, 0xFF, prt, \"ld (hl),ix\", INSS_EZ80 },\n-  { 0x70, 0xFF, prt, \"in f,(c)\", INSS_Z80 | INSS_R800 },\n+  { 0x70, 0xFF, prt, \"in f,(c)\", INSS_Z80 | INSS_R800 | INSS_Z80N },\n   { 0x70, 0xFF, dump, \"xx\", INSS_ALL },\n   { 0x40, 0xC7, prt_r, \"in %s,(bc)\", INSS_EZ80 },\n   { 0x40, 0xC7, prt_r, \"in %s,(c)\", INSS_ALL },\n-  { 0x71, 0xFF, prt, \"out (c),0\", INSS_Z80 },\n-  { 0x70, 0xFF, dump, \"xx\", INSS_ALL },\n+  { 0x71, 0xFF, prt, \"out (c),0\", INSS_Z80 | INSS_Z80N },\n+  { 0x71, 0xFF, dump, \"xx\", INSS_ALL },\n   { 0x41, 0xC7, prt_r, \"out (bc),%s\", INSS_EZ80 },\n   { 0x41, 0xC7, prt_r, \"out (c),%s\", INSS_ALL },\n   { 0x42, 0xCF, prt_rr, \"sbc hl,\", INSS_ALL },\n@@ -442,24 +496,38 @@ struct tab_elt opc_ed[] =\n   { 0x65, 0xFF, prt_d, \"pea ix%+d\", INSS_EZ80 },\n   { 0x66, 0xFF, prt_d, \"pea iy%+d\", INSS_EZ80 },\n   { 0x67, 0xFF, prt, \"rrd\", INSS_ALL },\n+  { 0x6D, 0xFF, prt, \"ld mb,a\", INSS_EZ80 },\n+  { 0x6E, 0xFF, prt, \"ld a,mb\", INSS_EZ80 },\n   { 0x6F, 0xFF, prt, \"rld\", INSS_ALL },\n   { 0x74, 0xFF, prt_n, \"tstio 0x%02x\", INSS_Z180|INSS_EZ80 },\n   { 0x76, 0xFF, prt, \"slp\", INSS_Z180|INSS_EZ80 },\n+  { 0x7D, 0xFF, prt, \"stmix\", INSS_EZ80 },\n+  { 0x7E, 0xFF, prt, \"rsmix\", INSS_EZ80 },\n   { 0x82, 0xE6, cism, \"\", INSS_Z180|INSS_EZ80 },\n   { 0x84, 0xC7, cis2, \"\", INSS_EZ80 },\n+  { 0x8A, 0xFF, prt_n_n, \"push 0x%02x%%02x\", INSS_Z80N },\n+  { 0x90, 0xFF, prt, \"outinb\", INSS_Z80N },\n+  { 0x91, 0xFF, prt_n_n, \"nextreg 0x%02x,0x%%02x\", INSS_Z80N },\n+  { 0x92, 0xFF, prt_n, \"nextreg 0x%02x,a\", INSS_Z80N },\n+  { 0x93, 0xFF, prt, \"pixeldn\", INSS_Z80N },\n+  { 0x94, 0xFF, prt, \"pixelad\", INSS_Z80N },\n+  { 0x95, 0xFF, prt, \"setae\", INSS_Z80N },\n+  { 0x98, 0xFF, prt, \"jp (c)\", INSS_Z80N },\n   { 0xA0, 0xE4, cis, \"\", INSS_ALL },\n-  { 0x7D, 0xFF, prt, \"stmix\", INSS_EZ80 },\n-  { 0x7E, 0xFF, prt, \"rsmix\", INSS_EZ80 },\n-  { 0x6D, 0xFF, prt, \"ld mb,a\", INSS_EZ80 },\n-  { 0x6E, 0xFF, prt, \"ld a,mb\", INSS_EZ80 },\n-  { 0xC7, 0xFF, prt, \"ld i,hl\", INSS_EZ80 },\n-  { 0xD7, 0xFF, prt, \"ld hl,i\", INSS_EZ80 },\n+  { 0xA4, 0xFF, prt, \"ldix\", INSS_Z80N },\n+  { 0xAC, 0xFF, prt, \"lddx\", INSS_Z80N },\n+  { 0xA5, 0xFF, prt, \"ldws\", INSS_Z80N },\n+  { 0xB4, 0xFF, prt, \"ldirx\", INSS_Z80N },\n+  { 0xB7, 0xFF, prt, \"ldpirx\", INSS_Z80N },\n+  { 0xBC, 0xFF, prt, \"lddrx\", INSS_Z80N },\n   { 0xC2, 0xFF, prt, \"inirx\", INSS_EZ80 },\n   { 0xC3, 0xFF, prt, \"otirx\", INSS_EZ80 },\n+  { 0xC7, 0xFF, prt, \"ld i,hl\", INSS_EZ80 },\n   { 0xCA, 0xFF, prt, \"indrx\", INSS_EZ80 },\n   { 0xCB, 0xFF, prt, \"otdrx\", INSS_EZ80 },\n   { 0xC3, 0xFF, prt, \"muluw hl,bc\", INSS_R800 },\n   { 0xC5, 0xE7, prt_r, \"mulub a,%s\", INSS_R800 },\n+  { 0xD7, 0xFF, prt, \"ld hl,i\", INSS_EZ80 },\n   { 0xF3, 0xFF, prt, \"muluw hl,sp\", INSS_R800 },\n   { 0x00, 0x00, dump, \"xx\", INSS_ALL }\n };\n@@ -521,7 +589,7 @@ pref_cb (struct buffer *buf, disassemble_info *info,\n \n   return buf->n_used;\n }\n-\f\n+\n static int\n addvv (struct buffer * buf, disassemble_info * info, const char *txt)\n {\n@@ -767,7 +835,8 @@ suffix (struct buffer *buf, disassemble_info *info, const char *txt)\n }\n \n /* Table to disassemble machine codes without prefix.  */\n-static struct tab_elt opc_main[] =\n+static const struct tab_elt\n+opc_main[] =\n {\n   { 0x00, 0xFF, prt, \"nop\", INSS_ALL },\n   { 0x01, 0xCF, prt_rr_nn, \"ld %s,0x%%04x\", INSS_ALL },\n@@ -829,12 +898,74 @@ static struct tab_elt opc_main[] =\n   { 0xEB, 0xFF, prt, \"ex de,hl\", ~INSS_GBZ80 },\n   { 0xED, 0xFF, pref_ed, \"\", ~INSS_GBZ80 },\n   { 0xF3, 0xFF, prt, \"di\", INSS_ALL },\n-  { 0xF9, 0xFF, prt, \"ld sp,hl\", ~INSS_GBZ80 },\n+  { 0xF9, 0xFF, prt, \"ld sp,hl\", INSS_ALL },\n   { 0xFB, 0xFF, prt, \"ei\", INSS_ALL },\n   { 0xFD, 0xFF, pref_ind, \"iy\", ~INSS_GBZ80 },\n   { 0x00, 0x00, prt, \"????\", INSS_ALL },\n } ;\n \n+/* Separate GBZ80 main opcode table due to many differences */\n+static const struct tab_elt\n+opc_main_gbz80[] =\n+{\n+  { 0x00, 0xFF, prt,\"nop\", INSS_ALL },\n+  { 0x01, 0xCF, prt_rr_nn, \"ld %s,0x%%04x\", INSS_ALL },\n+  { 0x02, 0xFF, prt, \"ld (bc),a\", INSS_ALL },\n+  { 0x03, 0xCF, prt_rr, \"inc \", INSS_ALL },\n+  { 0x04, 0xC7, prt_r, \"inc %s\", INSS_ALL },\n+  { 0x05, 0xC7, prt_r, \"dec %s\", INSS_ALL },\n+  { 0x06, 0xC7, ld_r_n, \"ld %s,0x%%02x\", INSS_ALL },\n+  { 0x07, 0xFF, prt, \"rlca\", INSS_ALL },\n+  { 0x08, 0xFF, prt_nn, \"ld (0x%04x),sp\", INSS_GBZ80 },\n+  { 0x09, 0xCF, prt_rr, \"add hl,\", INSS_ALL },\n+  { 0x0A, 0xFF, prt, \"ld a,(bc)\", INSS_ALL },\n+  { 0x0B, 0xCF, prt_rr, \"dec \", INSS_ALL },\n+  { 0x0F, 0xFF, prt, \"rrca\", INSS_ALL },\n+  { 0x10, 0xFF, prt, \"stop\", INSS_GBZ80 },\n+  { 0x12, 0xFF, prt, \"ld (de),a\", INSS_ALL },\n+  { 0x17, 0xFF, prt, \"rla\", INSS_ALL },\n+  { 0x18, 0xFF, prt_e, \"jr \", INSS_ALL },\n+  { 0x1A, 0xFF, prt, \"ld a,(de)\", INSS_ALL },\n+  { 0x1F, 0xFF, prt, \"rra\", INSS_ALL },\n+  { 0x20, 0xE7, jr_cc, \"jr %s,\", INSS_ALL },\n+  { 0x22, 0xFF, prt, \"ld (hl+),a\", INSS_GBZ80 },\n+  { 0x27, 0xFF, prt, \"daa\", INSS_ALL },\n+  { 0x2A, 0xFF, prt, \"ld a,(hl+)\", INSS_GBZ80 },\n+  { 0x2F, 0xFF, prt, \"cpl\", INSS_ALL },\n+  { 0x32, 0xFF, prt, \"ld (hl-),a\", INSS_GBZ80 },\n+  { 0x37, 0xFF, prt, \"scf\", INSS_ALL },\n+  { 0x3A, 0xFF, prt, \"ld a,(hl-)\", INSS_GBZ80 },\n+  { 0x3F, 0xFF, prt, \"ccf\", INSS_ALL },\n+  { 0x76, 0xFF, prt, \"halt\", INSS_ALL },\n+  { 0x40, 0xC0, ld_r_r, \"ld %s,%s\", INSS_ALL},\n+  { 0x80, 0xC0, arit_r, \"%s%s\", INSS_ALL },\n+  { 0xC0, 0xE7, prt_cc, \"ret \", INSS_ALL },\n+  { 0xC1, 0xCF, pop_rr, \"pop\", INSS_ALL },\n+  { 0xC2, 0xE7, jp_cc_nn, \"jp \", INSS_ALL },\n+  { 0xC3, 0xFF, prt_nn, \"jp 0x%04x\", INSS_ALL },\n+  { 0xC4, 0xE7, jp_cc_nn, \"call \", INSS_ALL },\n+  { 0xC5, 0xCF, pop_rr, \"push\", INSS_ALL },\n+  { 0xC6, 0xC7, arit_n, \"%s0x%%02x\", INSS_ALL },\n+  { 0xC7, 0xC7, rst, \"rst 0x%02x\", INSS_ALL },\n+  { 0xC9, 0xFF, prt, \"ret\", INSS_ALL },\n+  { 0xCB, 0xFF, pref_cb, \"\", INSS_ALL },\n+  { 0xCD, 0xFF, prt_nn, \"call 0x%04x\", INSS_ALL },\n+  { 0xD9, 0xFF, prt, \"reti\", INSS_GBZ80 },\n+  { 0xE0, 0xFF, prt_n, \"ldh (0x%02x),a\", INSS_GBZ80 },\n+  { 0xE2, 0xFF, prt, \"ldh (c),a\", INSS_GBZ80 },\n+  { 0xE8, 0xFF, prt_d, \"add sp,%d\", INSS_GBZ80 },\n+  { 0xE9, 0xFF, prt, \"jp (hl)\", INSS_ALL },\n+  { 0xEA, 0xFF, prt_nn, \"ld (0x%04x),a\", INSS_GBZ80 },\n+  { 0xF0, 0xFF, prt_n, \"ldh a,(0x%02x)\", INSS_GBZ80 },\n+  { 0xF2, 0xFF, prt, \"ldh a,(c)\", INSS_GBZ80 },\n+  { 0xF3, 0xFF, prt, \"di\", INSS_ALL },\n+  { 0xF8, 0xFF, prt_d, \"ldhl sp,%d\", INSS_GBZ80 },\n+  { 0xF9, 0xFF, prt, \"ld sp,hl\", INSS_ALL },\n+  { 0xFA, 0xFF, prt_nn, \"ld a,(0x%04x)\", INSS_GBZ80 },\n+  { 0xFB, 0xFF, prt, \"ei\", INSS_ALL },\n+  { 0x00, 0x00, dump, \"?\", INSS_ALL },\n+} ;\n+\n int\n print_insn_z80 (bfd_vma addr, disassemble_info * info)\n {\n@@ -851,14 +982,16 @@ print_insn_z80 (bfd_vma addr, disassemble_info * info)\n static int\n print_insn_z80_buf (struct buffer *buf, disassemble_info *info)\n {\n-  struct tab_elt *p;\n+  const struct tab_elt *p;\n \n   buf->n_fetch = 0;\n   buf->n_used = 0;\n   if (! fetch_data (buf, info, 1))\n     return -1;\n \n-  for (p = opc_main; p->val != (buf->data[0] & p->mask) || !mach_inst (buf, p); ++p)\n+  p = (buf->inss & INSS_GBZ80) ? opc_main_gbz80 : opc_main;\n+\n+  for (; p->val != (buf->data[0] & p->mask) || !mach_inst (buf, p); ++p)\n     ;\n   p->fp (buf, info, p->text);\n "
    }
  ]
}