{
  "sha": "a15a95ed265962027c7a8e0269bead6e5795006f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTE1YTk1ZWQyNjU5NjIwMjdjN2E4ZTAyNjliZWFkNmU1Nzk1MDA2Zg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-12-05T14:53:32Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-12-13T22:15:30Z"
    },
    "message": "Remove \"boolean\" and \"var_boolean\" checks from ARI\n\nThe \"boolean\" and \"var_boolean\" checks from ARI seem only to generate\nfalse reports.\n\nNow that gdb is in C++, at least the \"boolean\" check seems unlikely to\never generate a true report.\n\nThe \"var_boolean\" check likewise doesn't seem valuable any more --\npresumably this refers to some ancient way of doing things in gdb, and\nisn't likely to find a bug in the future.\n\nTherefore, this patch removes these two checks.\n\ngdb/ChangeLog\n2019-12-13  Tom Tromey  <tromey@adacore.com>\n\n\t* contrib/ari/gdb_ari.sh: Remove \"boolean\" and \"var_boolean\"\n\tchecks.\n\nChange-Id: Iaf449b51e8182ffa0b9ed25fe688e0ff64a07a67",
    "tree": {
      "sha": "10b5a4cbfb329e3ba5324467efd61ef61cc65b45",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/10b5a4cbfb329e3ba5324467efd61ef61cc65b45"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a15a95ed265962027c7a8e0269bead6e5795006f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a15a95ed265962027c7a8e0269bead6e5795006f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a15a95ed265962027c7a8e0269bead6e5795006f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a15a95ed265962027c7a8e0269bead6e5795006f/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a5513db2f5513e84d52f77b8d9de484738ae5abe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a5513db2f5513e84d52f77b8d9de484738ae5abe",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a5513db2f5513e84d52f77b8d9de484738ae5abe"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 5,
    "deletions": 26
  },
  "files": [
    {
      "sha": "fea37ae26ee713baaef1e9de7ecace8a65d5784c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a15a95ed265962027c7a8e0269bead6e5795006f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a15a95ed265962027c7a8e0269bead6e5795006f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a15a95ed265962027c7a8e0269bead6e5795006f",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-13  Tom Tromey  <tromey@adacore.com>\n+\n+\t* contrib/ari/gdb_ari.sh: Remove \"boolean\" and \"var_boolean\"\n+\tchecks.\n+\n 2019-12-13  Tom Tromey  <tromey@adacore.com>\n \n \t* gdbsupport/safe-iterator.h (class basic_safe_range) <begin,"
    },
    {
      "sha": "ee9f16a8ddd4e979e9998e33cfffd9e1108048b0",
      "filename": "gdb/contrib/ari/gdb_ari.sh",
      "status": "modified",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a15a95ed265962027c7a8e0269bead6e5795006f/gdb/contrib/ari/gdb_ari.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a15a95ed265962027c7a8e0269bead6e5795006f/gdb/contrib/ari/gdb_ari.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/contrib/ari/gdb_ari.sh?ref=a15a95ed265962027c7a8e0269bead6e5795006f",
      "patch": "@@ -1110,18 +1110,6 @@ Do not use strnicmp(), instead use strncasecmp()\"\n     fail(\"strnicmp\")\n }\n \n-# Boolean expressions and conditionals\n-\n-BEGIN { doc[\"boolean\"] = \"\\\n-Do not use `boolean'\\'',  use `bool'\\'' instead\"\n-    category[\"boolean\"] = ari_regression\n-}\n-/(^|[^_[:alnum:]])boolean([^_[:alnum:]]|$)/ {\n-    if (is_yacc_or_lex == 0) {\n-       fail(\"boolean\")\n-    }\n-}\n-\n # Typedefs that are either redundant or can be reduced to `struct\n # type *''.\n # Must be placed before if assignment otherwise ARI exceptions\n@@ -1143,20 +1131,6 @@ Do not use strlen dirent.d_name, instead use NAMELEN\"\n     fail(\"strlen d_name\")\n }\n \n-BEGIN { doc[\"var_boolean\"] = \"\\\n-Replace var_boolean with add_setshow_boolean_cmd\"\n-    category[\"var_boolean\"] = ari_regression\n-    fix(\"var_boolean\", \"gdb/command.h\", 1)\n-    # fix only uses the last directory level\n-    fix(\"var_boolean\", \"cli/cli-decode.c\", 2)\n-}\n-/(^|[^_[:alnum:]])var_boolean([^_[:alnum:]]|$)/ {\n-    if (($0 !~ /(^|[^_[:alnum:]])case *var_boolean:/) \\\n-        && ($0 !~ /(^|[^_[:alnum:]])[=!]= *var_boolean/)) {\n-\tfail(\"var_boolean\")\n-    }\n-}\n-\n BEGIN { doc[\"generic_use_struct_convention\"] = \"\\\n Replace generic_use_struct_convention with nothing, \\\n EXTRACT_STRUCT_VALUE_ADDRESS is a predicate\""
    }
  ]
}