{
  "sha": "6395a1021020671dd205d332b2879e3e733e8024",
  "node_id": "C_kwDOANOeidoAKDYzOTVhMTAyMTAyMDY3MWRkMjA1ZDMzMmIyODc5ZTNlNzMzZTgwMjQ",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-12-25T00:04:03Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2022-01-04T17:51:02Z"
    },
    "message": "ld: Improve thin archive member error message\n\nImprove thin archive member error message with:\n\nld: libbar.a(bar.o): error opening thin archive member: No such file or directory\n\ninstead of\n\nld: libbar.a: error adding symbols: No such file or directory\n\n\tPR ld/28722\n\t* archive.c (_bfd_get_elt_at_filepos): Add a pointer argument\n\tfor struct bfd_link_info.  Call linker callback when failing to\n\topen thin archive member.\n\t(_bfd_generic_get_elt_at_index): Pass NULL to\n\t_bfd_get_elt_at_filepos.\n\t(bfd_generic_openr_next_archived_file): Likewise.\n\t* coff-alpha.c (alpha_ecoff_get_elt_at_filepos): Add a pointer\n\targument for struct bfd_link_info and pass it to\n\t_bfd_get_elt_at_filepos.\n\t(alpha_ecoff_openr_next_archived_file): Pass NULL to\n\t_bfd_get_elt_at_filepos.\n\t(alpha_ecoff_get_elt_at_index): Likewise.\n\t* coff-rs6000.c (_bfd_xcoff_openr_next_archived_file): Likewise.\n\t* ecoff.c (ecoff_link_add_archive_symbols): Pass info to\n\tbackend->get_elt_at_filepos.\n\t* elflink.c (elf_link_is_defined_archive_symbol): info to\n\t_bfd_get_elt_at_filepos.\n\t* libbfd-in.h (_bfd_get_elt_at_filepos): Add a pointer argument\n\tfor struct bfd_link_info.\n\t* libbfd.h: Regenerate.\n\t* libecoff.h (ecoff_backend_data): Add a pointer argument for\n\tstruct bfd_link_info to get_elt_at_filepos.\n\t* linker.c (_bfd_generic_link_add_archive_symbols): Pass info to\n\t_bfd_get_elt_at_filepos.",
    "tree": {
      "sha": "157a55dff238a612e95fe3a8d6fe8b4b1ca8724c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/157a55dff238a612e95fe3a8d6fe8b4b1ca8724c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6395a1021020671dd205d332b2879e3e733e8024",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6395a1021020671dd205d332b2879e3e733e8024",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6395a1021020671dd205d332b2879e3e733e8024",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6395a1021020671dd205d332b2879e3e733e8024/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0b1e7ee5b572abb465b8095d7f92d49eed91e215",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b1e7ee5b572abb465b8095d7f92d49eed91e215",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0b1e7ee5b572abb465b8095d7f92d49eed91e215"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 44,
    "deletions": 18
  },
  "files": [
    {
      "sha": "9ad61adc6159a2731a0443353f393baeea48bf5d",
      "filename": "bfd/archive.c",
      "status": "modified",
      "additions": 26,
      "deletions": 6,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6395a1021020671dd205d332b2879e3e733e8024/bfd/archive.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6395a1021020671dd205d332b2879e3e733e8024/bfd/archive.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/archive.c?ref=6395a1021020671dd205d332b2879e3e733e8024",
      "patch": "@@ -651,7 +651,8 @@ _bfd_append_relative_path (bfd *arch, char *elt_name)\n    element, since it handles the bookkeeping so nicely for us.  */\n \n bfd *\n-_bfd_get_elt_at_filepos (bfd *archive, file_ptr filepos)\n+_bfd_get_elt_at_filepos (bfd *archive, file_ptr filepos,\n+\t\t\t struct bfd_link_info *info)\n {\n   struct areltdata *new_areldata;\n   bfd *n_bfd;\n@@ -694,7 +695,8 @@ _bfd_get_elt_at_filepos (bfd *archive, file_ptr filepos)\n \t      free (new_areldata);\n \t      return NULL;\n \t    }\n-\t  n_bfd = _bfd_get_elt_at_filepos (ext_arch, new_areldata->origin);\n+\t  n_bfd = _bfd_get_elt_at_filepos (ext_arch,\n+\t\t\t\t\t   new_areldata->origin, info);\n \t  if (n_bfd == NULL)\n \t    {\n \t      free (new_areldata);\n@@ -715,8 +717,26 @@ _bfd_get_elt_at_filepos (bfd *archive, file_ptr filepos)\n \t open the external file as a bfd.  */\n       bfd_set_error (bfd_error_no_error);\n       n_bfd = open_nested_file (filename, archive);\n-      if (n_bfd == NULL && bfd_get_error () == bfd_error_no_error)\n-\tbfd_set_error (bfd_error_malformed_archive);\n+      if (n_bfd == NULL)\n+\t{\n+\t  switch (bfd_get_error ())\n+\t    {\n+\t    default:\n+\t      break;\n+\t    case bfd_error_no_error:\n+\t      bfd_set_error (bfd_error_malformed_archive);\n+\t      break;\n+\t    case bfd_error_system_call:\n+\t      if (info != NULL)\n+\t\t{\n+\t\t  info->callbacks->einfo\n+\t\t    (_(\"%F%P: %pB(%s): error opening thin archive member: %E\\n\"),\n+\t\t     archive, filename);\n+\t\t  break;\n+\t\t}\n+\t      break;\n+\t    }\n+\t}\n     }\n   else\n     {\n@@ -772,7 +792,7 @@ _bfd_generic_get_elt_at_index (bfd *abfd, symindex sym_index)\n   carsym *entry;\n \n   entry = bfd_ardata (abfd)->symdefs + sym_index;\n-  return _bfd_get_elt_at_filepos (abfd, entry->file_offset);\n+  return _bfd_get_elt_at_filepos (abfd, entry->file_offset, NULL);\n }\n \n bfd *\n@@ -841,7 +861,7 @@ bfd_generic_openr_next_archived_file (bfd *archive, bfd *last_file)\n \t}\n     }\n \n-  return _bfd_get_elt_at_filepos (archive, filestart);\n+  return _bfd_get_elt_at_filepos (archive, filestart, NULL);\n }\n \n bfd *"
    },
    {
      "sha": "7cf51a5911005ca56012ee9905041a00cc3c3077",
      "filename": "bfd/coff-alpha.c",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6395a1021020671dd205d332b2879e3e733e8024/bfd/coff-alpha.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6395a1021020671dd205d332b2879e3e733e8024/bfd/coff-alpha.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-alpha.c?ref=6395a1021020671dd205d332b2879e3e733e8024",
      "patch": "@@ -2045,7 +2045,8 @@ alpha_ecoff_read_ar_hdr (bfd *abfd)\n    we uncompress the archive element if necessary.  */\n \n static bfd *\n-alpha_ecoff_get_elt_at_filepos (bfd *archive, file_ptr filepos)\n+alpha_ecoff_get_elt_at_filepos (bfd *archive, file_ptr filepos,\n+\t\t\t\tstruct bfd_link_info *info)\n {\n   bfd *nbfd = NULL;\n   struct areltdata *tdata;\n@@ -2057,7 +2058,7 @@ alpha_ecoff_get_elt_at_filepos (bfd *archive, file_ptr filepos)\n   ufile_ptr filesize;\n \n   buf = NULL;\n-  nbfd = _bfd_get_elt_at_filepos (archive, filepos);\n+  nbfd = _bfd_get_elt_at_filepos (archive, filepos, info);\n   if (nbfd == NULL)\n     goto error_return;\n \n@@ -2215,7 +2216,7 @@ alpha_ecoff_openr_next_archived_file (bfd *archive, bfd *last_file)\n \t}\n     }\n \n-  return alpha_ecoff_get_elt_at_filepos (archive, filestart);\n+  return alpha_ecoff_get_elt_at_filepos (archive, filestart, NULL);\n }\n \n /* Open the archive file given an index into the armap.  */\n@@ -2226,7 +2227,8 @@ alpha_ecoff_get_elt_at_index (bfd *abfd, symindex sym_index)\n   carsym *entry;\n \n   entry = bfd_ardata (abfd)->symdefs + sym_index;\n-  return alpha_ecoff_get_elt_at_filepos (abfd, entry->file_offset);\n+  return alpha_ecoff_get_elt_at_filepos (abfd, entry->file_offset,\n+\t\t\t\t\t NULL);\n }\n \n static void"
    },
    {
      "sha": "3248670db277e8c6c77eec98a5bfbd7d8b3f3e33",
      "filename": "bfd/coff-rs6000.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6395a1021020671dd205d332b2879e3e733e8024/bfd/coff-rs6000.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6395a1021020671dd205d332b2879e3e733e8024/bfd/coff-rs6000.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-rs6000.c?ref=6395a1021020671dd205d332b2879e3e733e8024",
      "patch": "@@ -1763,7 +1763,7 @@ _bfd_xcoff_openr_next_archived_file (bfd *archive, bfd *last_file)\n \t}\n     }\n \n-  return _bfd_get_elt_at_filepos (archive, filestart);\n+  return _bfd_get_elt_at_filepos (archive, filestart, NULL);\n }\n \n /* Stat an element in an XCOFF archive.  */"
    },
    {
      "sha": "d2081055835613eecaa3638318abc60cfee37650",
      "filename": "bfd/ecoff.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6395a1021020671dd205d332b2879e3e733e8024/bfd/ecoff.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6395a1021020671dd205d332b2879e3e733e8024/bfd/ecoff.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ecoff.c?ref=6395a1021020671dd205d332b2879e3e733e8024",
      "patch": "@@ -3639,7 +3639,9 @@ ecoff_link_add_archive_symbols (bfd *abfd, struct bfd_link_info *info)\n \t  hash = srch;\n \t}\n \n-      element = (*backend->get_elt_at_filepos) (abfd, (file_ptr) file_offset);\n+      element = (*backend->get_elt_at_filepos) (abfd,\n+\t\t\t\t\t\t(file_ptr) file_offset,\n+\t\t\t\t\t\tinfo);\n       if (element == NULL)\n \treturn false;\n "
    },
    {
      "sha": "553efa262320f4cab3b8226e0aa3f1b416018e37",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6395a1021020671dd205d332b2879e3e733e8024/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6395a1021020671dd205d332b2879e3e733e8024/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=6395a1021020671dd205d332b2879e3e733e8024",
      "patch": "@@ -3470,7 +3470,7 @@ elf_link_is_defined_archive_symbol (bfd * abfd, carsym * symdef)\n   Elf_Internal_Sym *isymend;\n   bool result;\n \n-  abfd = _bfd_get_elt_at_filepos (abfd, symdef->file_offset);\n+  abfd = _bfd_get_elt_at_filepos (abfd, symdef->file_offset, NULL);\n   if (abfd == NULL)\n     return false;\n \n@@ -5948,7 +5948,8 @@ elf_link_add_archive_symbols (bfd *abfd, struct bfd_link_info *info)\n \t    }\n \n \t  /* We need to include this archive member.  */\n-\t  element = _bfd_get_elt_at_filepos (abfd, symdef->file_offset);\n+\t  element = _bfd_get_elt_at_filepos (abfd, symdef->file_offset,\n+\t\t\t\t\t     info);\n \t  if (element == NULL)\n \t    goto error_return;\n "
    },
    {
      "sha": "2905de8ef9212b8c5ece25f772cd67094162f21a",
      "filename": "bfd/libbfd-in.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6395a1021020671dd205d332b2879e3e733e8024/bfd/libbfd-in.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6395a1021020671dd205d332b2879e3e733e8024/bfd/libbfd-in.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd-in.h?ref=6395a1021020671dd205d332b2879e3e733e8024",
      "patch": "@@ -172,7 +172,7 @@ extern bool _bfd_write_archive_contents\n extern bool _bfd_compute_and_write_armap\n   (bfd *, unsigned int) ATTRIBUTE_HIDDEN;\n extern bfd *_bfd_get_elt_at_filepos\n-  (bfd *, file_ptr) ATTRIBUTE_HIDDEN;\n+  (bfd *, file_ptr, struct bfd_link_info *) ATTRIBUTE_HIDDEN;\n extern bfd *_bfd_generic_get_elt_at_index\n   (bfd *, symindex) ATTRIBUTE_HIDDEN;\n extern bfd * _bfd_new_bfd"
    },
    {
      "sha": "6e62e5569623ef4c228e1be24b7cd65c99f0e75c",
      "filename": "bfd/libbfd.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6395a1021020671dd205d332b2879e3e733e8024/bfd/libbfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6395a1021020671dd205d332b2879e3e733e8024/bfd/libbfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd.h?ref=6395a1021020671dd205d332b2879e3e733e8024",
      "patch": "@@ -177,7 +177,7 @@ extern bool _bfd_write_archive_contents\n extern bool _bfd_compute_and_write_armap\n   (bfd *, unsigned int) ATTRIBUTE_HIDDEN;\n extern bfd *_bfd_get_elt_at_filepos\n-  (bfd *, file_ptr) ATTRIBUTE_HIDDEN;\n+  (bfd *, file_ptr, struct bfd_link_info *) ATTRIBUTE_HIDDEN;\n extern bfd *_bfd_generic_get_elt_at_index\n   (bfd *, symindex) ATTRIBUTE_HIDDEN;\n extern bfd * _bfd_new_bfd"
    },
    {
      "sha": "b6c694873e739333ae431531ddd55509b1e9a752",
      "filename": "bfd/libecoff.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6395a1021020671dd205d332b2879e3e733e8024/bfd/libecoff.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6395a1021020671dd205d332b2879e3e733e8024/bfd/libecoff.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libecoff.h?ref=6395a1021020671dd205d332b2879e3e733e8024",
      "patch": "@@ -72,7 +72,7 @@ struct ecoff_backend_data\n     (bfd *, struct internal_filehdr *, struct internal_aouthdr *);\n   /* Read an element from an archive at a given file position.  This\n      is needed because OSF/1 3.2 uses a weird archive format.  */\n-  bfd *(*get_elt_at_filepos) (bfd *, file_ptr);\n+  bfd *(*get_elt_at_filepos) (bfd *, file_ptr, struct bfd_link_info *);\n };\n \n /* ECOFF targets don't support COFF long section names, so this"
    },
    {
      "sha": "088c1d06f3d6470e885987053b7d0e4d4858f872",
      "filename": "bfd/linker.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6395a1021020671dd205d332b2879e3e733e8024/bfd/linker.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6395a1021020671dd205d332b2879e3e733e8024/bfd/linker.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/linker.c?ref=6395a1021020671dd205d332b2879e3e733e8024",
      "patch": "@@ -981,7 +981,8 @@ _bfd_generic_link_add_archive_symbols\n \t  if (last_ar_offset != arsym->file_offset)\n \t    {\n \t      last_ar_offset = arsym->file_offset;\n-\t      element = _bfd_get_elt_at_filepos (abfd, last_ar_offset);\n+\t      element = _bfd_get_elt_at_filepos (abfd, last_ar_offset,\n+\t\t\t\t\t\t info);\n \t      if (element == NULL\n \t\t  || !bfd_check_format (element, bfd_object))\n \t\tgoto error_return;"
    }
  ]
}