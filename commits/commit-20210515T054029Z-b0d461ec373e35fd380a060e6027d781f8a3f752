{
  "sha": "b0d461ec373e35fd380a060e6027d781f8a3f752",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjBkNDYxZWMzNzNlMzVmZDM4MGEwNjBlNjAyN2Q3ODFmOGEzZjc1Mg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-15T05:39:20Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-15T05:40:29Z"
    },
    "message": "display_debug_macro\n\n\t* dwarf.c (display_debug_macro): Print strings that might not\n\tbe zero terminated with %*s.  Don't bump curr if unterminated.",
    "tree": {
      "sha": "fbf0f60e6978a47eca883c621b84dce51e5e0960",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fbf0f60e6978a47eca883c621b84dce51e5e0960"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b0d461ec373e35fd380a060e6027d781f8a3f752",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0d461ec373e35fd380a060e6027d781f8a3f752",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b0d461ec373e35fd380a060e6027d781f8a3f752",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0d461ec373e35fd380a060e6027d781f8a3f752/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "46d1214d887cdd2979fec2344cda1720abbbd33f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46d1214d887cdd2979fec2344cda1720abbbd33f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/46d1214d887cdd2979fec2344cda1720abbbd33f"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 15,
    "deletions": 6
  },
  "files": [
    {
      "sha": "1926afbdcf76a5123d365084cd179a9703437af3",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b0d461ec373e35fd380a060e6027d781f8a3f752/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b0d461ec373e35fd380a060e6027d781f8a3f752/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=b0d461ec373e35fd380a060e6027d781f8a3f752",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf.c (display_debug_macro): Print strings that might not\n+\tbe zero terminated with %*s.  Don't bump curr if unterminated.\n+\n 2021-05-15  Alan Modra  <amodra@gmail.com>\n \n \t* dwarf.c (get_line_filename_and_dirname): Delete initial_length_size."
    },
    {
      "sha": "68732cf491b7852285d590344f4535f1ea3fc036",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b0d461ec373e35fd380a060e6027d781f8a3f752/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b0d461ec373e35fd380a060e6027d781f8a3f752/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=b0d461ec373e35fd380a060e6027d781f8a3f752",
      "patch": "@@ -6042,17 +6042,21 @@ display_debug_macro (struct dwarf_section *section,\n \t    case DW_MACRO_define:\n \t      READ_ULEB (lineno, curr, end);\n \t      string = curr;\n-\t      curr += strnlen ((char *) string, end - string) + 1;\n-\t      printf (_(\" DW_MACRO_define - lineno : %d macro : %s\\n\"),\n-\t\t      lineno, string);\n+\t      curr += strnlen ((char *) string, end - string);\n+\t      printf (_(\" DW_MACRO_define - lineno : %d macro : %*s\\n\"),\n+\t\t      lineno, (int) (curr - string), string);\n+\t      if (curr < end)\n+\t\tcurr++;\n \t      break;\n \n \t    case DW_MACRO_undef:\n \t      READ_ULEB (lineno, curr, end);\n \t      string = curr;\n-\t      curr += strnlen ((char *) string, end - string) + 1;\n-\t      printf (_(\" DW_MACRO_undef - lineno : %d macro : %s\\n\"),\n-\t\t      lineno, string);\n+\t      curr += strnlen ((char *) string, end - string);\n+\t      printf (_(\" DW_MACRO_undef - lineno : %d macro : %*s\\n\"),\n+\t\t      lineno, (int) (curr - string), string);\n+\t      if (curr < end)\n+\t\tcurr++;\n \t      break;\n \n \t    case DW_MACRO_start_file:"
    }
  ]
}