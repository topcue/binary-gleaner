{
  "sha": "01cbfcba4bc74fb04904ad395a346549853bd189",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDFjYmZjYmE0YmM3NGZiMDQ5MDRhZDM5NWEzNDY1NDk4NTNiZDE4OQ==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-18T12:37:52Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-18T12:37:54Z"
    },
    "message": "libctf: fix comment above ctf_dict_t\n\nIt is perfectly possible to have dynamically allocated data owned by a\nspecific dict: you just have to teach ctf_serialize about it.\n\nlibctf/ChangeLog\n2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-impl.h (ctf_dict_t): Fix comment.",
    "tree": {
      "sha": "3b0bcca68e1b8c0be893a532da7128b0a84f83c7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3b0bcca68e1b8c0be893a532da7128b0a84f83c7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/01cbfcba4bc74fb04904ad395a346549853bd189",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/01cbfcba4bc74fb04904ad395a346549853bd189",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/01cbfcba4bc74fb04904ad395a346549853bd189",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/01cbfcba4bc74fb04904ad395a346549853bd189/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bf4c3185a5a031824855a93c3476ae276236df12",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf4c3185a5a031824855a93c3476ae276236df12",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bf4c3185a5a031824855a93c3476ae276236df12"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 10,
    "deletions": 5
  },
  "files": [
    {
      "sha": "58c0ed434fffa7e5238a266738eee0ccd6f54bdd",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/01cbfcba4bc74fb04904ad395a346549853bd189/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/01cbfcba4bc74fb04904ad395a346549853bd189/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=01cbfcba4bc74fb04904ad395a346549853bd189",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_dict_t): Fix comment.\n+\n 2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-create.c (symtypetab_delete_nonstatic_vars): Move"
    },
    {
      "sha": "5567b4c61f5106e11f0d17eb04863212e7abdb07",
      "filename": "libctf/ctf-impl.h",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/01cbfcba4bc74fb04904ad395a346549853bd189/libctf/ctf-impl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/01cbfcba4bc74fb04904ad395a346549853bd189/libctf/ctf-impl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-impl.h?ref=01cbfcba4bc74fb04904ad395a346549853bd189",
      "patch": "@@ -372,11 +372,12 @@ typedef struct ctf_dedup\n    ctf_dict_t typedef appears in <ctf-api.h> and declares a forward tag.\n    (A ctf_file_t typedef also appears there, for historical reasons.)\n \n-   NOTE: ctf_serialize() requires that everything inside of ctf_dict either be\n-   an immediate value, a pointer to dynamically allocated data *outside* of the\n-   ctf_dict itself, or a pointer to statically allocated data.  If you add a\n-   pointer to ctf_dict that points to something within the ctf_dict itself, you\n-   must make corresponding changes to ctf_serialize().  */\n+   NOTE: ctf_serialize requires that everything inside of ctf_dict either be an\n+   immediate value, a pointer to dynamically allocated data *outside* of the\n+   ctf_dict itself, a pointer to statically allocated data, or specially handled\n+   in ctf_serialize.  If you add a pointer to ctf_dict that points to something\n+   within the ctf_dict itself, you must make corresponding changes to\n+   ctf_serialize.  */\n \n struct ctf_dict\n {"
    }
  ]
}