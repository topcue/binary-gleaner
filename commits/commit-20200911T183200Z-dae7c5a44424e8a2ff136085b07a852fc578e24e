{
  "sha": "dae7c5a44424e8a2ff136085b07a852fc578e24e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGFlN2M1YTQ0NDI0ZThhMmZmMTM2MDg1YjA3YTg1MmZjNTc4ZTI0ZQ==",
  "commit": {
    "author": {
      "name": "Felix Willgerodt",
      "email": "felix.willgerodt@intel.com",
      "date": "2020-09-10T12:29:51Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2020-09-11T18:32:00Z"
    },
    "message": "Sync include, libiberty with GCC.\n\ninclude:\n2020-09-10  Felix Willgerodt  <felix.willgerodt@intel.com>\n\n    Sync with GCC\n    2020-08-17  Felix Willgerodt  <felix.willgerodt@intel.com>\n\n    * floatformat.h (floatformat_bfloat16_big): New.\n    (floatformat_bfloat16_little): New.\n\nlibiberty:\n2020-09-10  Felix Willgerodt  <felix.willgerodt@intel.com>\n\n    Sync with GCC\n    2020-08-17  Felix Willgerodt  <felix.willgerodt@intel.com>\n\n    * floatformat.c (floatformat_bfloat16_big): New.\n    (floatformat_bfloat16_little): New.",
    "tree": {
      "sha": "c78a2d5366982e6b8c13a6d79ff1baaf3b0ddf71",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c78a2d5366982e6b8c13a6d79ff1baaf3b0ddf71"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dae7c5a44424e8a2ff136085b07a852fc578e24e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dae7c5a44424e8a2ff136085b07a852fc578e24e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dae7c5a44424e8a2ff136085b07a852fc578e24e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dae7c5a44424e8a2ff136085b07a852fc578e24e/comments",
  "author": {
    "login": "felix-willgerodt",
    "id": 68062808,
    "node_id": "MDQ6VXNlcjY4MDYyODA4",
    "avatar_url": "https://avatars.githubusercontent.com/u/68062808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/felix-willgerodt",
    "html_url": "https://github.com/felix-willgerodt",
    "followers_url": "https://api.github.com/users/felix-willgerodt/followers",
    "following_url": "https://api.github.com/users/felix-willgerodt/following{/other_user}",
    "gists_url": "https://api.github.com/users/felix-willgerodt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/felix-willgerodt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/felix-willgerodt/subscriptions",
    "organizations_url": "https://api.github.com/users/felix-willgerodt/orgs",
    "repos_url": "https://api.github.com/users/felix-willgerodt/repos",
    "events_url": "https://api.github.com/users/felix-willgerodt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/felix-willgerodt/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/edc7a80a9c04667dfa74f90f74bd39827bc372b7"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 37,
    "deletions": 1
  },
  "files": [
    {
      "sha": "c8a90cfa36bac8d68c583ea294ad604db61590aa",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dae7c5a44424e8a2ff136085b07a852fc578e24e/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dae7c5a44424e8a2ff136085b07a852fc578e24e/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=dae7c5a44424e8a2ff136085b07a852fc578e24e",
      "patch": "@@ -1,3 +1,11 @@\n+2020-09-11  Felix Willgerodt  <felix.willgerodt@intel.com>\n+\n+\tSync with GCC\n+\t2020-09-08  Felix Willgerodt  <felix.willgerodt@intel.com>\n+\n+\t* floatformat.h (floatformat_bfloat16_big): New.\n+\t(floatformat_bfloat16_little): New.\n+\n 2020-09-12 Cooper Qu <cooper.qu@linux.alibaba.com>\n \n \t* opcode/csky.h (CSKYV1_ISA_E1): Convert to bfd_uint64_t type."
    },
    {
      "sha": "630fade044984a51dd8b1320e6888c27d2b25969",
      "filename": "include/floatformat.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dae7c5a44424e8a2ff136085b07a852fc578e24e/include/floatformat.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dae7c5a44424e8a2ff136085b07a852fc578e24e/include/floatformat.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/floatformat.h?ref=dae7c5a44424e8a2ff136085b07a852fc578e24e",
      "patch": "@@ -133,6 +133,9 @@ extern const struct floatformat floatformat_ia64_quad_little;\n /* IBM long double (double+double).  */\n extern const struct floatformat floatformat_ibm_long_double_big;\n extern const struct floatformat floatformat_ibm_long_double_little;\n+/* bfloat16.  */\n+extern const struct floatformat floatformat_bfloat16_big;\n+extern const struct floatformat floatformat_bfloat16_little;\n \n /* Convert from FMT to a double.\n    FROM is the address of the extended float."
    },
    {
      "sha": "e6280d576bf5920640602a4209dd5a5d5d2eeef6",
      "filename": "libiberty/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dae7c5a44424e8a2ff136085b07a852fc578e24e/libiberty/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dae7c5a44424e8a2ff136085b07a852fc578e24e/libiberty/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/ChangeLog?ref=dae7c5a44424e8a2ff136085b07a852fc578e24e",
      "patch": "@@ -1,3 +1,11 @@\n+2020-09-11  Felix Willgerodt  <felix.willgerodt@intel.com>\n+\n+\tSync with GCC\n+\t2020-09-08  Felix Willgerodt  <felix.willgerodt@intel.com>\n+\n+\t* floatformat.c (floatformat_bfloat16_big): New.\n+\t(floatformat_bfloat16_little): New.\n+\n 2020-09-08  Alan Modra  <amodra@gmail.com>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "6b9b03288e29cee2713f7232e7585e8ebf5429bd",
      "filename": "libiberty/floatformat.c",
      "status": "modified",
      "additions": 18,
      "deletions": 1,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dae7c5a44424e8a2ff136085b07a852fc578e24e/libiberty/floatformat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dae7c5a44424e8a2ff136085b07a852fc578e24e/libiberty/floatformat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/floatformat.c?ref=dae7c5a44424e8a2ff136085b07a852fc578e24e",
      "patch": "@@ -389,7 +389,24 @@ const struct floatformat floatformat_ibm_long_double_little =\n   floatformat_ibm_long_double_is_valid,\n   &floatformat_ieee_double_little\n };\n-\f\n+\n+const struct floatformat floatformat_bfloat16_big =\n+{\n+  floatformat_big, 16, 0, 1, 8, 127, 255, 9, 7,\n+  floatformat_intbit_no,\n+  \"floatformat_bfloat16_big\",\n+  floatformat_always_valid,\n+  NULL\n+};\n+\n+const struct floatformat floatformat_bfloat16_little =\n+{\n+  floatformat_little, 16, 0, 1, 8, 127, 255, 9, 7,\n+  floatformat_intbit_no,\n+  \"floatformat_bfloat16_little\",\n+  floatformat_always_valid,\n+  NULL\n+};\n \n #ifndef min\n #define min(a, b) ((a) < (b) ? (a) : (b))"
    }
  ]
}