{
  "sha": "6fb08628e0f894f01e3e4834d5262629ca8f1920",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmZiMDg2MjhlMGY4OTRmMDFlM2U0ODM0ZDUyNjI2MjljYThmMTkyMA==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-09-29T00:45:20Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-09-30T18:32:32Z"
    },
    "message": "Use std::sort instead of qsort in minsyms.c\n\nThis has better typesafety and is also marginally faster (either\ndue to inlining or because it avoids indirection through a\nfunction pointer).\n\nNote that in this change:\n-       return 1;               /* fn1 has no name, so it is \"less\".  */\n+       return true;            /* fn1 has no name, so it is \"less\".  */\n       else if (name1)          /* fn2 has no name, so it is \"less\".  */\n-       return -1;\n+       return false;\nI am fairly sure the old code was wrong (ie. code didn't match the\ncomment and the comment seemed correct), so I fixed it.\n\ngdb/ChangeLog:\n\n2019-09-28  Christian Biesinger  <cbiesinger@google.com>\n\n\t* minsyms.c (compare_minimal_symbols): Rename to...\n\t(minimal_symbol_is_less_than): ...this, and adjust to STL\n\tconventions (return bool, take arguments as references)\n\t(minimal_symbol_reader::install): Call std::sort instead\n\tof qsort.",
    "tree": {
      "sha": "46ad9142a7a707cdc0af2365255e07a9aa8e955a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/46ad9142a7a707cdc0af2365255e07a9aa8e955a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6fb08628e0f894f01e3e4834d5262629ca8f1920",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fb08628e0f894f01e3e4834d5262629ca8f1920",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6fb08628e0f894f01e3e4834d5262629ca8f1920",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fb08628e0f894f01e3e4834d5262629ca8f1920/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4a56a5200793f7476991952afa61be11a6d2ed41",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a56a5200793f7476991952afa61be11a6d2ed41",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4a56a5200793f7476991952afa61be11a6d2ed41"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 24,
    "deletions": 22
  },
  "files": [
    {
      "sha": "3a5dff17b28f9c66682983a269f8fd96402c3e8a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fb08628e0f894f01e3e4834d5262629ca8f1920/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fb08628e0f894f01e3e4834d5262629ca8f1920/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6fb08628e0f894f01e3e4834d5262629ca8f1920",
      "patch": "@@ -1,3 +1,11 @@\n+2019-09-28  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* minsyms.c (compare_minimal_symbols): Rename to...\n+\t(minimal_symbol_is_less_than): ...this, and adjust to STL\n+\tconventions (return bool, take arguments as references)\n+\t(minimal_symbol_reader::install): Call std::sort instead\n+\tof qsort.\n+\n 2019-09-29  Christian Biesinger  <cbiesinger@google.com>\n \n \t* minsyms.h (msymbol_hash): Document that this is a case-insensitive"
    },
    {
      "sha": "83f5d895779e5c86b236e8584a1ddf34f47bccd4",
      "filename": "gdb/minsyms.c",
      "status": "modified",
      "additions": 16,
      "deletions": 22,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fb08628e0f894f01e3e4834d5262629ca8f1920/gdb/minsyms.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fb08628e0f894f01e3e4834d5262629ca8f1920/gdb/minsyms.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/minsyms.c?ref=6fb08628e0f894f01e3e4834d5262629ca8f1920",
      "patch": "@@ -1124,41 +1124,36 @@ minimal_symbol_reader::record_full (const char *name, int name_len,\n   return msymbol;\n }\n \n-/* Compare two minimal symbols by address and return a signed result based\n-   on unsigned comparisons, so that we sort into unsigned numeric order.\n+/* Compare two minimal symbols by address and return true if FN1's address\n+   is less than FN2's, so that we sort into unsigned numeric order.\n    Within groups with the same address, sort by name.  */\n \n-static int\n-compare_minimal_symbols (const void *fn1p, const void *fn2p)\n+static inline bool\n+minimal_symbol_is_less_than (const minimal_symbol &fn1,\n+\t\t\t     const minimal_symbol &fn2)\n {\n-  const struct minimal_symbol *fn1;\n-  const struct minimal_symbol *fn2;\n-\n-  fn1 = (const struct minimal_symbol *) fn1p;\n-  fn2 = (const struct minimal_symbol *) fn2p;\n-\n-  if (MSYMBOL_VALUE_RAW_ADDRESS (fn1) < MSYMBOL_VALUE_RAW_ADDRESS (fn2))\n+  if (MSYMBOL_VALUE_RAW_ADDRESS (&fn1) < MSYMBOL_VALUE_RAW_ADDRESS (&fn2))\n     {\n-      return (-1);\t\t/* addr 1 is less than addr 2.  */\n+      return true;\t\t/* addr 1 is less than addr 2.  */\n     }\n-  else if (MSYMBOL_VALUE_RAW_ADDRESS (fn1) > MSYMBOL_VALUE_RAW_ADDRESS (fn2))\n+  else if (MSYMBOL_VALUE_RAW_ADDRESS (&fn1) > MSYMBOL_VALUE_RAW_ADDRESS (&fn2))\n     {\n-      return (1);\t\t/* addr 1 is greater than addr 2.  */\n+      return false;\t\t/* addr 1 is greater than addr 2.  */\n     }\n   else\n     /* addrs are equal: sort by name */\n     {\n-      const char *name1 = MSYMBOL_LINKAGE_NAME (fn1);\n-      const char *name2 = MSYMBOL_LINKAGE_NAME (fn2);\n+      const char *name1 = MSYMBOL_LINKAGE_NAME (&fn1);\n+      const char *name2 = MSYMBOL_LINKAGE_NAME (&fn2);\n \n       if (name1 && name2)\t/* both have names */\n-\treturn strcmp (name1, name2);\n+\treturn strcmp (name1, name2) < 0;\n       else if (name2)\n-\treturn 1;\t\t/* fn1 has no name, so it is \"less\".  */\n+\treturn true;\t\t/* fn1 has no name, so it is \"less\".  */\n       else if (name1)\t\t/* fn2 has no name, so it is \"less\".  */\n-\treturn -1;\n+\treturn false;\n       else\n-\treturn (0);\t\t/* Neither has a name, so they're equal.  */\n+\treturn false;\t\t/* Neither has a name, so they're equal.  */\n     }\n }\n \n@@ -1315,8 +1310,7 @@ minimal_symbol_reader::install ()\n \n       /* Sort the minimal symbols by address.  */\n \n-      qsort (msymbols, mcount, sizeof (struct minimal_symbol),\n-\t     compare_minimal_symbols);\n+      std::sort (msymbols, msymbols + mcount, minimal_symbol_is_less_than);\n \n       /* Compact out any duplicates, and free up whatever space we are\n          no longer using.  */"
    }
  ]
}