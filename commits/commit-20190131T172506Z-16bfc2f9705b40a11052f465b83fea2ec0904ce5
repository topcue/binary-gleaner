{
  "sha": "16bfc2f9705b40a11052f465b83fea2ec0904ce5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTZiZmMyZjk3MDViNDBhMTEwNTJmNDY1YjgzZmVhMmVjMDkwNGNlNQ==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-01-31T09:48:39Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-01-31T17:25:06Z"
    },
    "message": "Readline: Cleanup some warnings\n\nCleanup the readline warnings that gdb buildbot complains about.\n\nTo prevent wcwidth missing declaration warnings, add the SOURCE /\nEXTENSION macros to config.in that have already checked for in\nconfigure.\n\nEnsure pid is a long before printing as one.  Also fix GNU style.\n\nCheck the return value of write the same way as history_do_write ().\n\nThese changes are consistent with upstream readline.\n\nreadline/ChangeLog.gdb:\n\n\t* config.h.in: Add SOURCE/EXTENSION macros.\n\t* histfile.c (history_truncate_file): Check return of write.\n\t* util.c (_rl_tropen): Ensure pid is long.",
    "tree": {
      "sha": "8638920c33139a191a40b3b7f36b4cb7454ff8d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8638920c33139a191a40b3b7f36b4cb7454ff8d1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/16bfc2f9705b40a11052f465b83fea2ec0904ce5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/16bfc2f9705b40a11052f465b83fea2ec0904ce5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/16bfc2f9705b40a11052f465b83fea2ec0904ce5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/16bfc2f9705b40a11052f465b83fea2ec0904ce5/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fc60b8c806a641cc2260c8b26f389f2abdc99dda",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc60b8c806a641cc2260c8b26f389f2abdc99dda",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fc60b8c806a641cc2260c8b26f389f2abdc99dda"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 21,
    "deletions": 4
  },
  "files": [
    {
      "sha": "c59329ee7d20a5e6d73dce32b1808da86b6c2406",
      "filename": "readline/ChangeLog.gdb",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/16bfc2f9705b40a11052f465b83fea2ec0904ce5/readline/ChangeLog.gdb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/16bfc2f9705b40a11052f465b83fea2ec0904ce5/readline/ChangeLog.gdb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/readline/ChangeLog.gdb?ref=16bfc2f9705b40a11052f465b83fea2ec0904ce5",
      "patch": "@@ -1,3 +1,9 @@\n+2019-01-31  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* config.h.in: Add SOURCE/EXTENSION macros.\n+\t* histfile.c (history_truncate_file): Check return of write.\n+\t* util.c (_rl_tropen): Ensure pid is long.\n+\n 2017-05-19  Eli Zaretskii  <eliz@gnu.org>\n \n \t* input.c [_WIN32]: Include <conio.h> to avoid compiler warning on"
    },
    {
      "sha": "c194e761a457419c4c7f8e0da634f3b3139906fb",
      "filename": "readline/config.h.in",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/16bfc2f9705b40a11052f465b83fea2ec0904ce5/readline/config.h.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/16bfc2f9705b40a11052f465b83fea2ec0904ce5/readline/config.h.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/readline/config.h.in?ref=16bfc2f9705b40a11052f465b83fea2ec0904ce5",
      "patch": "@@ -1,5 +1,15 @@\n /* config.h.in.  Maintained by hand. */\n \n+/* Template definitions for autoconf */\n+#undef __EXTENSIONS__\n+#undef _ALL_SOURCE\n+#undef _GNU_SOURCE\n+#undef _POSIX_SOURCE\n+#undef _POSIX_1_SOURCE\n+#undef _POSIX_PTHREAD_SEMANTICS\n+#undef _TANDEM_SOURCE\n+#undef _MINIX\n+\n /* Define NO_MULTIBYTE_SUPPORT to not compile in support for multibyte\n    characters, even if the OS supports them. */\n #undef NO_MULTIBYTE_SUPPORT"
    },
    {
      "sha": "56cbbf0498cea34540a2f3eb58a3ee71ec8d2617",
      "filename": "readline/histfile.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/16bfc2f9705b40a11052f465b83fea2ec0904ce5/readline/histfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/16bfc2f9705b40a11052f465b83fea2ec0904ce5/readline/histfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/readline/histfile.c?ref=16bfc2f9705b40a11052f465b83fea2ec0904ce5",
      "patch": "@@ -407,7 +407,8 @@ history_truncate_file (fname, lines)\n      truncate to. */\n   if (bp > buffer && ((file = open (filename, O_WRONLY|O_TRUNC|O_BINARY, 0600)) != -1))\n     {\n-      write (file, bp, chars_read - (bp - buffer));\n+      if (write (file, bp, chars_read - (bp - buffer)) < 0)\n+\trv = errno;\n \n #if defined (__BEOS__)\n       /* BeOS ignores O_TRUNC. */"
    },
    {
      "sha": "13bd00c09c9c234f9cb157a3f58830830093c376",
      "filename": "readline/util.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/16bfc2f9705b40a11052f465b83fea2ec0904ce5/readline/util.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/16bfc2f9705b40a11052f465b83fea2ec0904ce5/readline/util.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/readline/util.c?ref=16bfc2f9705b40a11052f465b83fea2ec0904ce5",
      "patch": "@@ -515,11 +515,11 @@ _rl_tropen ()\n \t   (sh_get_env_value (\"TEMP\")\n \t    ? sh_get_env_value (\"TEMP\")\n \t    : \".\"),\n-\t   getpid());\n+\t   getpid ());\n #else\n-  sprintf (fnbuf, \"/var/tmp/rltrace.%ld\", getpid());\n+  sprintf (fnbuf, \"/var/tmp/rltrace.%ld\", (long) getpid ());\n #endif\n-  unlink(fnbuf);\n+  unlink (fnbuf);\n   _rl_tracefp = fopen (fnbuf, \"w+\");\n   return _rl_tracefp != 0;\n }"
    }
  ]
}