{
  "sha": "7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzE5MDI3NmM1MmI5ZDg2YTUyYWFlNzNkM2EwZjhiNTZlN2ExZjRmMQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2019-12-12T19:54:47Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-12-12T19:54:47Z"
    },
    "message": "Replace xmalloc/xfree with vector in jit.c\n\nI'm currently studying that code and noticed this manual memory\nmanagement, which could easily be replaced with a vector, so here it is.\n\ngdb/ChangeLog:\n\n\t* jit.c (jit_reader_try_read_symtab): Replace xmalloc/xfree with\n\tgdb::byte_vector.",
    "tree": {
      "sha": "b08bc114ee4318c14995078880e10063d8a592ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b08bc114ee4318c14995078880e10063d8a592ad"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d61df89700bcf1633ca9db0ea403c2108c3cac3e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d61df89700bcf1633ca9db0ea403c2108c3cac3e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d61df89700bcf1633ca9db0ea403c2108c3cac3e"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 9,
    "deletions": 5
  },
  "files": [
    {
      "sha": "165ffda25109dadc809754104f22655565ebd2a5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-12  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* jit.c (jit_reader_try_read_symtab): Replace xmalloc/xfree with\n+\tgdb::byte_vector.\n+\n 2019-12-12  Tom Tromey  <tromey@adacore.com>\n \n \t* xml-support.c (xml_fetch_content_from_file): Don't call"
    },
    {
      "sha": "b6e51e4f8b4dc45aababed6d5ed5b7c20edddb3c",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1",
      "patch": "@@ -808,7 +808,6 @@ static int\n jit_reader_try_read_symtab (struct jit_code_entry *code_entry,\n                             CORE_ADDR entry_addr)\n {\n-  gdb_byte *gdb_mem;\n   int status;\n   jit_dbg_reader_data priv_data;\n   struct gdb_reader_funcs *funcs;\n@@ -831,12 +830,12 @@ jit_reader_try_read_symtab (struct jit_code_entry *code_entry,\n   if (!loaded_jit_reader)\n     return 0;\n \n-  gdb_mem = (gdb_byte *) xmalloc (code_entry->symfile_size);\n+  gdb::byte_vector gdb_mem (code_entry->symfile_size);\n \n   status = 1;\n   try\n     {\n-      if (target_read_memory (code_entry->symfile_addr, gdb_mem,\n+      if (target_read_memory (code_entry->symfile_addr, gdb_mem.data (),\n \t\t\t      code_entry->symfile_size))\n \tstatus = 0;\n     }\n@@ -848,12 +847,12 @@ jit_reader_try_read_symtab (struct jit_code_entry *code_entry,\n   if (status)\n     {\n       funcs = loaded_jit_reader->functions;\n-      if (funcs->read (funcs, &callbacks, gdb_mem, code_entry->symfile_size)\n+      if (funcs->read (funcs, &callbacks, gdb_mem.data (),\n+\t\t       code_entry->symfile_size)\n           != GDB_SUCCESS)\n         status = 0;\n     }\n \n-  xfree (gdb_mem);\n   if (jit_debug && status == 0)\n     fprintf_unfiltered (gdb_stdlog,\n                         \"Could not read symtab using the loaded JIT reader.\\n\");"
    }
  ]
}