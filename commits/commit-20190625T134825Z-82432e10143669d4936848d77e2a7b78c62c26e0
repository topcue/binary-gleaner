{
  "sha": "82432e10143669d4936848d77e2a7b78c62c26e0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODI0MzJlMTAxNDM2NjlkNDkzNjg0OGQ3N2UyYTdiNzhjNjJjMjZlMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T16:32:35Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:25Z"
    },
    "message": "Simplify command window creation\n\nmake_command_window is never called when *win_info_ptr is non-NULL, so\nthis patch simplifies the function by removing the parameter and\nhaving it return its result directly.  This in turn makes it more\nobvious that a NULL check in show_source_disasm_command can be\nremoved.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-layout.c (make_command_window): Remove win_info_ptr\n\tparameter.  Return the new window.\n\t(show_source_disasm_command): Update and remove NULL check.\n\t(show_source_or_disasm_and_command): Update.",
    "tree": {
      "sha": "db4d02a4e1a63733c44df3a39a90ebacd4d913b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/db4d02a4e1a63733c44df3a39a90ebacd4d913b3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/82432e10143669d4936848d77e2a7b78c62c26e0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82432e10143669d4936848d77e2a7b78c62c26e0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/82432e10143669d4936848d77e2a7b78c62c26e0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82432e10143669d4936848d77e2a7b78c62c26e0/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ec328aa512ee09ab326d59b417836bb950083230",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ec328aa512ee09ab326d59b417836bb950083230",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ec328aa512ee09ab326d59b417836bb950083230"
    }
  ],
  "stats": {
    "total": 153,
    "additions": 76,
    "deletions": 77
  },
  "files": [
    {
      "sha": "1df099ef51611c6ab8a623daa01b5a4b409a0f10",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82432e10143669d4936848d77e2a7b78c62c26e0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82432e10143669d4936848d77e2a7b78c62c26e0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=82432e10143669d4936848d77e2a7b78c62c26e0",
      "patch": "@@ -1,3 +1,10 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-layout.c (make_command_window): Remove win_info_ptr\n+\tparameter.  Return the new window.\n+\t(show_source_disasm_command): Update and remove NULL check.\n+\t(show_source_or_disasm_and_command): Update.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-layout.c (init_and_make_win): Remove NULL check."
    },
    {
      "sha": "3eddc56578b345c03b49737d83ea2ff61ecf366a",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 69,
      "deletions": 77,
      "changes": 146,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82432e10143669d4936848d77e2a7b78c62c26e0/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82432e10143669d4936848d77e2a7b78c62c26e0/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=82432e10143669d4936848d77e2a7b78c62c26e0",
      "patch": "@@ -52,7 +52,7 @@ static void show_source_or_disasm_and_command (enum tui_layout_type);\n static void make_source_or_disasm_window (struct tui_win_info **, \n \t\t\t\t\t  enum tui_win_type, \n \t\t\t\t\t  int, int);\n-static void make_command_window (struct tui_win_info **, int, int);\n+static struct tui_win_info *make_command_window (int, int);\n static void make_source_window (struct tui_win_info **, int, int);\n static void make_disasm_window (struct tui_win_info **, int, int);\n static void make_data_window (struct tui_win_info **, int, int);\n@@ -540,20 +540,19 @@ prev_layout (void)\n \n \n \n-static void\n-make_command_window (struct tui_win_info **win_info_ptr, \n-\t\t     int height, int origin_y)\n+static struct tui_win_info *\n+make_command_window (int height, int origin_y)\n {\n-  *win_info_ptr\n-    = (struct tui_win_info *) init_and_make_win (*win_info_ptr,\n+  struct tui_win_info *result\n+    = (struct tui_win_info *) init_and_make_win (NULL,\n \t\t\t\t\t\t CMD_WIN,\n \t\t\t\t\t\t height,\n \t\t\t\t\t\t tui_term_width (),\n \t\t\t\t\t\t 0,\n \t\t\t\t\t\t origin_y,\n \t\t\t\t\t\t DONT_BOX_WINDOW);\n-\n-  (*win_info_ptr)->can_highlight = FALSE;\n+  result->can_highlight = FALSE;\n+  return result;\n }\n \n \n@@ -650,76 +649,69 @@ show_source_disasm_command (void)\n \t  tui_make_visible (TUI_SRC_WIN->detail.source_info.execution_info);\n \t  TUI_SRC_WIN->detail.source_info.has_locator = FALSE;;\n \t}\n-      if (TUI_SRC_WIN != NULL)\n-\t{\n-\t  struct tui_gen_win_info *locator = tui_locator_win_info_ptr ();\n \n-\t  tui_show_source_content (TUI_SRC_WIN);\n-\t  if (TUI_DISASM_WIN == NULL)\n-\t    {\n-\t      make_disasm_window (&TUI_DISASM_WIN, asm_height, src_height - 1);\n-\t      locator\n-\t\t= ((struct tui_gen_win_info *)\n-\t\t   init_and_make_win (locator,\n-\t\t\t\t      LOCATOR_WIN,\n-\t\t\t\t      2 /* 1 */ ,\n-\t\t\t\t      tui_term_width (),\n-\t\t\t\t      0,\n-\t\t\t\t      (src_height + asm_height) - 1,\n-\t\t\t\t      DONT_BOX_WINDOW));\n-\t    }\n-\t  else\n-\t    {\n-\t      init_gen_win_info (locator,\n-\t\t\t\t LOCATOR_WIN,\n-\t\t\t\t 2 /* 1 */ ,\n-\t\t\t\t tui_term_width (),\n-\t\t\t\t 0,\n-\t\t\t\t (src_height + asm_height) - 1);\n-\t      TUI_DISASM_WIN->detail.source_info.has_locator = TRUE;\n-\t      init_gen_win_info (&TUI_DISASM_WIN->generic,\n-\t\t\t\t TUI_DISASM_WIN->generic.type,\n-\t\t\t\t asm_height,\n-\t\t\t\t TUI_DISASM_WIN->generic.width,\n-\t\t\t\t TUI_DISASM_WIN->detail.source_info.execution_info->width,\n-\t\t\t\t src_height - 1);\n-\t      init_gen_win_info (TUI_DISASM_WIN->detail.source_info.execution_info,\n-\t\t\t\t EXEC_INFO_WIN,\n-\t\t\t\t asm_height,\n-\t\t\t\t 3,\n-\t\t\t\t 0,\n-\t\t\t\t src_height - 1);\n-\t      TUI_DISASM_WIN->can_highlight = TRUE;\n-\t      tui_make_visible (&TUI_DISASM_WIN->generic);\n-\t      tui_make_visible (TUI_DISASM_WIN->detail.source_info.execution_info);\n-\t    }\n-\t  if (TUI_DISASM_WIN != NULL)\n-\t    {\n-\t      TUI_SRC_WIN->detail.source_info.has_locator = FALSE;\n-\t      TUI_DISASM_WIN->detail.source_info.has_locator = TRUE;\n-\t      tui_make_visible (locator);\n-\t      tui_show_locator_content ();\n-\t      tui_show_source_content (TUI_DISASM_WIN);\n-\n-\t      if (TUI_CMD_WIN == NULL)\n-\t\tmake_command_window (&TUI_CMD_WIN,\n-\t\t\t\t     cmd_height,\n-\t\t\t\t     tui_term_height () - cmd_height);\n-\t      else\n-\t\t{\n-\t\t  init_gen_win_info (&TUI_CMD_WIN->generic,\n-\t\t\t\t     TUI_CMD_WIN->generic.type,\n-\t\t\t\t     TUI_CMD_WIN->generic.height,\n-\t\t\t\t     TUI_CMD_WIN->generic.width,\n-\t\t\t\t     0,\n-\t\t\t\t     TUI_CMD_WIN->generic.origin.y);\n-\t\t  TUI_CMD_WIN->can_highlight = FALSE;\n-\t\t  tui_make_visible (&TUI_CMD_WIN->generic);\n-\t\t}\n-\t      if (TUI_CMD_WIN != NULL)\n-\t\ttui_refresh_win (&TUI_CMD_WIN->generic);\n-\t    }\n+      struct tui_gen_win_info *locator = tui_locator_win_info_ptr ();\n+\n+      tui_show_source_content (TUI_SRC_WIN);\n+      if (TUI_DISASM_WIN == NULL)\n+\t{\n+\t  make_disasm_window (&TUI_DISASM_WIN, asm_height, src_height - 1);\n+\t  locator\n+\t    = ((struct tui_gen_win_info *)\n+\t       init_and_make_win (locator,\n+\t\t\t\t  LOCATOR_WIN,\n+\t\t\t\t  2 /* 1 */ ,\n+\t\t\t\t  tui_term_width (),\n+\t\t\t\t  0,\n+\t\t\t\t  (src_height + asm_height) - 1,\n+\t\t\t\t  DONT_BOX_WINDOW));\n+\t}\n+      else\n+\t{\n+\t  init_gen_win_info (locator,\n+\t\t\t     LOCATOR_WIN,\n+\t\t\t     2 /* 1 */ ,\n+\t\t\t     tui_term_width (),\n+\t\t\t     0,\n+\t\t\t     (src_height + asm_height) - 1);\n+\t  TUI_DISASM_WIN->detail.source_info.has_locator = TRUE;\n+\t  init_gen_win_info (&TUI_DISASM_WIN->generic,\n+\t\t\t     TUI_DISASM_WIN->generic.type,\n+\t\t\t     asm_height,\n+\t\t\t     TUI_DISASM_WIN->generic.width,\n+\t\t\t     TUI_DISASM_WIN->detail.source_info.execution_info->width,\n+\t\t\t     src_height - 1);\n+\t  init_gen_win_info (TUI_DISASM_WIN->detail.source_info.execution_info,\n+\t\t\t     EXEC_INFO_WIN,\n+\t\t\t     asm_height,\n+\t\t\t     3,\n+\t\t\t     0,\n+\t\t\t     src_height - 1);\n+\t  TUI_DISASM_WIN->can_highlight = TRUE;\n+\t  tui_make_visible (&TUI_DISASM_WIN->generic);\n+\t  tui_make_visible (TUI_DISASM_WIN->detail.source_info.execution_info);\n+\t}\n+      TUI_SRC_WIN->detail.source_info.has_locator = FALSE;\n+      TUI_DISASM_WIN->detail.source_info.has_locator = TRUE;\n+      tui_make_visible (locator);\n+      tui_show_locator_content ();\n+      tui_show_source_content (TUI_DISASM_WIN);\n+\n+      if (TUI_CMD_WIN == NULL)\n+\tTUI_CMD_WIN = make_command_window (cmd_height,\n+\t\t\t\t\t   tui_term_height () - cmd_height);\n+      else\n+\t{\n+\t  init_gen_win_info (&TUI_CMD_WIN->generic,\n+\t\t\t     TUI_CMD_WIN->generic.type,\n+\t\t\t     TUI_CMD_WIN->generic.height,\n+\t\t\t     TUI_CMD_WIN->generic.width,\n+\t\t\t     0,\n+\t\t\t     TUI_CMD_WIN->generic.origin.y);\n+\t  TUI_CMD_WIN->can_highlight = FALSE;\n+\t  tui_make_visible (&TUI_CMD_WIN->generic);\n \t}\n+      tui_refresh_win (&TUI_CMD_WIN->generic);\n       tui_set_current_layout_to (SRC_DISASSEM_COMMAND);\n     }\n }\n@@ -964,7 +956,7 @@ show_source_or_disasm_and_command (enum tui_layout_type layout_type)\n \n \t  if (TUI_CMD_WIN == NULL)\n \t    {\n-\t      make_command_window (&TUI_CMD_WIN, cmd_height, src_height);\n+\t      TUI_CMD_WIN = make_command_window (cmd_height, src_height);\n \t      tui_refresh_win (&TUI_CMD_WIN->generic);\n \t    }\n \t  else"
    }
  ]
}