{
  "sha": "9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWRjY2QwNmU4YTRlNTVhZGI1OGQ4ZWJlN2YyZWQ3ZDlkN2RjMTdkZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-29T01:38:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-29T01:52:21Z"
    },
    "message": "Remove target_has_registers macro\n\nThis removes the target_has_registers object-like macro, replacing it\nwith the underlying function.\n\ngdb/ChangeLog\n2020-09-28  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-regs.c (tui_get_register)\n\t(tui_data_window::show_registers): Update.\n\t* thread.c (scoped_restore_current_thread::restore)\n\t(scoped_restore_current_thread::scoped_restore_current_thread):\n\tUpdate.\n\t* regcache-dump.c (regcache_print): Update.\n\t* python/py-finishbreakpoint.c (bpfinishpy_detect_out_scope_cb):\n\tUpdate.\n\t* mi/mi-main.c (mi_cmd_data_write_register_values): Update.\n\t* mep-tdep.c (current_me_module, current_options): Update.\n\t* linux-thread-db.c (thread_db_load): Update.\n\t* infcmd.c (registers_info, info_vector_command)\n\t(info_float_command): Update.\n\t* ia64-tdep.c (ia64_frame_prev_register)\n\t(ia64_sigtramp_frame_prev_register): Update.\n\t* ia64-libunwind-tdep.c (libunwind_frame_prev_register): Update.\n\t* gcore.c (derive_stack_segment): Update.\n\t* frame.c (get_current_frame, has_stack_frames): Update.\n\t* findvar.c (language_defn::read_var_value): Update.\n\t* arm-tdep.c (arm_pc_is_thumb): Update.\n\t* target.c (target_has_registers): Rename from\n\ttarget_has_registers_1.\n\t* target.h (target_has_registers): Remove macro.\n\t(target_has_registers): Rename from target_has_registers_1.",
    "tree": {
      "sha": "398972fcd9481ed0934281293dd8699101cb0f9b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/398972fcd9481ed0934281293dd8699101cb0f9b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "841de12014d03189a7e0d8195bb77eba26648966",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/841de12014d03189a7e0d8195bb77eba26648966",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/841de12014d03189a7e0d8195bb77eba26648966"
    }
  ],
  "stats": {
    "total": 77,
    "additions": 52,
    "deletions": 25
  },
  "files": [
    {
      "sha": "dbd1e1eadd33ba7fe87395e0c5f6b90a2e959d32",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -1,3 +1,30 @@\n+2020-09-28  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-regs.c (tui_get_register)\n+\t(tui_data_window::show_registers): Update.\n+\t* thread.c (scoped_restore_current_thread::restore)\n+\t(scoped_restore_current_thread::scoped_restore_current_thread):\n+\tUpdate.\n+\t* regcache-dump.c (regcache_print): Update.\n+\t* python/py-finishbreakpoint.c (bpfinishpy_detect_out_scope_cb):\n+\tUpdate.\n+\t* mi/mi-main.c (mi_cmd_data_write_register_values): Update.\n+\t* mep-tdep.c (current_me_module, current_options): Update.\n+\t* linux-thread-db.c (thread_db_load): Update.\n+\t* infcmd.c (registers_info, info_vector_command)\n+\t(info_float_command): Update.\n+\t* ia64-tdep.c (ia64_frame_prev_register)\n+\t(ia64_sigtramp_frame_prev_register): Update.\n+\t* ia64-libunwind-tdep.c (libunwind_frame_prev_register): Update.\n+\t* gcore.c (derive_stack_segment): Update.\n+\t* frame.c (get_current_frame, has_stack_frames): Update.\n+\t* findvar.c (language_defn::read_var_value): Update.\n+\t* arm-tdep.c (arm_pc_is_thumb): Update.\n+\t* target.c (target_has_registers): Rename from\n+\ttarget_has_registers_1.\n+\t* target.h (target_has_registers): Remove macro.\n+\t(target_has_registers): Rename from target_has_registers_1.\n+\n 2020-09-28  Tom Tromey  <tom@tromey.com>\n \n \t* windows-tdep.c (tlb_make_value): Update."
    },
    {
      "sha": "a214f22d7ad10740c67509c4018b4494c5e7f7fe",
      "filename": "gdb/arm-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/arm-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/arm-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -461,7 +461,7 @@ arm_pc_is_thumb (struct gdbarch *gdbarch, CORE_ADDR memaddr)\n      \"display/i $pc\" always show the correct mode (though if there is\n      a symbol table we will not reach here, so it still may not be\n      displayed in the mode it will be executed).  */\n-  if (target_has_registers)\n+  if (target_has_registers ())\n     return arm_frame_is_thumb (get_current_frame ());\n \n   /* Otherwise we're out of luck; we assume ARM.  */"
    },
    {
      "sha": "78d727b07bb539e8cb5de6b85fe28d28d48a6ec6",
      "filename": "gdb/findvar.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/findvar.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/findvar.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/findvar.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -608,7 +608,7 @@ language_defn::read_var_value (struct symbol *var,\n   sym_need = symbol_read_needs (var);\n   if (sym_need == SYMBOL_NEEDS_FRAME)\n     gdb_assert (frame != NULL);\n-  else if (sym_need == SYMBOL_NEEDS_REGISTERS && !target_has_registers)\n+  else if (sym_need == SYMBOL_NEEDS_REGISTERS && !target_has_registers ())\n     error (_(\"Cannot read `%s' without registers\"), var->print_name ());\n \n   if (frame != NULL)"
    },
    {
      "sha": "5ae8611a8e64a851bf46325b1d01f229b7383ac2",
      "filename": "gdb/frame.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/frame.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -1653,7 +1653,7 @@ get_current_frame (void)\n      have registers is very confusing.  Besides, \"printcmd.exp\"\n      explicitly checks that ``print $pc'' with no registers prints \"No\n      registers\".  */\n-  if (!target_has_registers)\n+  if (!target_has_registers ())\n     error (_(\"No registers.\"));\n   if (!target_has_stack ())\n     error (_(\"No stack.\"));\n@@ -1692,7 +1692,8 @@ static struct frame_info *selected_frame;\n bool\n has_stack_frames ()\n {\n-  if (!target_has_registers || !target_has_stack () || !target_has_memory ())\n+  if (!target_has_registers () || !target_has_stack ()\n+      || !target_has_memory ())\n     return false;\n \n   /* Traceframes are effectively a substitute for the live inferior.  */"
    },
    {
      "sha": "ebaae88b0816b738380bb38307e63f69e5f5d8ec",
      "filename": "gdb/gcore.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/gcore.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/gcore.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gcore.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -224,7 +224,7 @@ derive_stack_segment (bfd_vma *bottom, bfd_vma *top)\n   gdb_assert (top);\n \n   /* Can't succeed without stack and registers.  */\n-  if (!target_has_stack () || !target_has_registers)\n+  if (!target_has_stack () || !target_has_registers ())\n     return 0;\n \n   /* Can't succeed without current frame.  */"
    },
    {
      "sha": "39b069adeca15b1ece7cb8d40e5e98dd50aa9fae",
      "filename": "gdb/ia64-libunwind-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/ia64-libunwind-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/ia64-libunwind-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ia64-libunwind-tdep.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -335,7 +335,7 @@ libunwind_frame_prev_register (struct frame_info *this_frame,\n \n   gdb_assert (regnum >= 0);\n \n-  if (!target_has_registers)\n+  if (!target_has_registers ())\n     error (_(\"No registers.\"));\n \n   if (uw_regnum < 0)"
    },
    {
      "sha": "7a1d6ebca999eb83a78a6f70c41f9caff3d64d63",
      "filename": "gdb/ia64-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/ia64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/ia64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ia64-tdep.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -1913,7 +1913,7 @@ ia64_frame_prev_register (struct frame_info *this_frame, void **this_cache,\n \n   gdb_assert (regnum >= 0);\n \n-  if (!target_has_registers)\n+  if (!target_has_registers ())\n     error (_(\"No registers.\"));\n \n   if (regnum == gdbarch_sp_regnum (gdbarch))\n@@ -2284,7 +2284,7 @@ ia64_sigtramp_frame_prev_register (struct frame_info *this_frame,\n \n   gdb_assert (regnum >= 0);\n \n-  if (!target_has_registers)\n+  if (!target_has_registers ())\n     error (_(\"No registers.\"));\n \n   if (regnum == IA64_IP_REGNUM)"
    },
    {
      "sha": "88fca1b20a1a1bd31b702fecb61ef55d58abc042",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -2208,7 +2208,7 @@ registers_info (const char *addr_exp, int fpregs)\n   struct frame_info *frame;\n   struct gdbarch *gdbarch;\n \n-  if (!target_has_registers)\n+  if (!target_has_registers ())\n     error (_(\"The program has no registers now.\"));\n   frame = get_selected_frame (NULL);\n   gdbarch = get_frame_arch (frame);\n@@ -2349,7 +2349,7 @@ print_vector_info (struct ui_file *file,\n static void\n info_vector_command (const char *args, int from_tty)\n {\n-  if (!target_has_registers)\n+  if (!target_has_registers ())\n     error (_(\"The program has no registers now.\"));\n \n   print_vector_info (gdb_stdout, get_selected_frame (NULL), args);\n@@ -2887,7 +2887,7 @@ info_float_command (const char *args, int from_tty)\n {\n   struct frame_info *frame;\n \n-  if (!target_has_registers)\n+  if (!target_has_registers ())\n     error (_(\"The program has no registers now.\"));\n \n   frame = get_selected_frame (NULL);"
    },
    {
      "sha": "64b96c0ad80dd6765dbf41ad34c8c5fd608ba550",
      "filename": "gdb/linux-thread-db.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/linux-thread-db.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/linux-thread-db.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-thread-db.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -1194,7 +1194,7 @@ thread_db_load (void)\n \n   /* Don't attempt to use thread_db on executables not running\n      yet.  */\n-  if (!target_has_registers)\n+  if (!target_has_registers ())\n     return false;\n \n   /* Don't attempt to use thread_db for remote targets.  */"
    },
    {
      "sha": "0efcf8598f94eba7537841077163743ec7849979",
      "filename": "gdb/mep-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/mep-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/mep-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mep-tdep.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -844,7 +844,7 @@ mep_pseudo_cr_index (int pseudo)\n static CONFIG_ATTR\n current_me_module (void)\n {\n-  if (target_has_registers)\n+  if (target_has_registers ())\n     {\n       ULONGEST regval;\n       regcache_cooked_read_unsigned (get_current_regcache (),\n@@ -867,7 +867,7 @@ current_me_module (void)\n static unsigned int\n current_options (void)\n {\n-  if (target_has_registers)\n+  if (target_has_registers ())\n     {\n       ULONGEST regval;\n       regcache_cooked_read_unsigned (get_current_regcache (),"
    },
    {
      "sha": "99da554c4449701b2a7855540e79effe9f324504",
      "filename": "gdb/mi/mi-main.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/mi/mi-main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/mi/mi-main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-main.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -1150,7 +1150,7 @@ mi_cmd_data_write_register_values (const char *command, char **argv, int argc)\n     error (_(\"-data-write-register-values: Usage: -data-write-register-\"\n \t     \"values <format> [<regnum1> <value1>...<regnumN> <valueN>]\"));\n \n-  if (!target_has_registers)\n+  if (!target_has_registers ())\n     error (_(\"-data-write-register-values: No registers.\"));\n \n   if (!(argc - 1))"
    },
    {
      "sha": "4badcd58f6600213cd9124858d449a277c117c68",
      "filename": "gdb/python/py-finishbreakpoint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/python/py-finishbreakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/python/py-finishbreakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-finishbreakpoint.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -361,7 +361,7 @@ bpfinishpy_detect_out_scope_cb (struct breakpoint *b,\n           try\n             {\n               if (b->pspace == current_inferior ()->pspace\n-                  && (!target_has_registers\n+                  && (!target_has_registers ()\n                       || frame_find_by_id (b->frame_id) == NULL))\n                 bpfinishpy_out_of_scope (finish_bp);\n             }"
    },
    {
      "sha": "f1ba07be9bb67a65be9946f681da2e5dbc5f890e",
      "filename": "gdb/regcache-dump.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/regcache-dump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/regcache-dump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/regcache-dump.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -236,7 +236,7 @@ regcache_print (const char *args, enum regcache_dump_what what_to_dump)\n   std::unique_ptr<regcache> regs;\n   gdbarch *gdbarch;\n \n-  if (target_has_registers)\n+  if (target_has_registers ())\n     gdbarch = get_current_regcache ()->arch ();\n   else\n     gdbarch = target_gdbarch ();\n@@ -257,7 +257,7 @@ regcache_print (const char *args, enum regcache_dump_what what_to_dump)\n       {\n \tauto dump_pseudo = (what_to_dump == regcache_dump_cooked);\n \n-\tif (target_has_registers)\n+\tif (target_has_registers ())\n \t  dump.reset (new register_dump_regcache (get_current_regcache (),\n \t\t\t\t\t\t  dump_pseudo));\n \telse"
    },
    {
      "sha": "ea1535713245e3dbb9087cffe71e1b2175e72d92",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -190,7 +190,7 @@ target_has_stack ()\n }\n \n int\n-target_has_registers_1 (void)\n+target_has_registers ()\n {\n   for (target_ops *t = current_top_target (); t != NULL; t = t->beneath ())\n     if (t->has_registers ())"
    },
    {
      "sha": "f58334a6b8b1234e6d1cde6cf798df458a004c50",
      "filename": "gdb/target.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.h?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -1821,8 +1821,7 @@ extern int target_has_stack ();\n \n /* Does the target have registers?  (Exec files don't.)  */\n \n-extern int target_has_registers_1 (void);\n-#define target_has_registers target_has_registers_1 ()\n+extern int target_has_registers ();\n \n /* Does the target have execution?  Can we make it jump (through\n    hoops), or pop its stack a few times?  This means that the current"
    },
    {
      "sha": "d499400544929e9158adf89868af7a3831344e45",
      "filename": "gdb/thread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -1405,7 +1405,7 @@ scoped_restore_current_thread::restore ()\n   if (inferior_ptid != null_ptid\n       && m_was_stopped\n       && m_thread->state == THREAD_STOPPED\n-      && target_has_registers\n+      && target_has_registers ()\n       && target_has_stack ()\n       && target_has_memory ())\n     restore_selected_frame (m_selected_frame_id, m_selected_frame_level);\n@@ -1439,7 +1439,7 @@ scoped_restore_current_thread::scoped_restore_current_thread ()\n \n       m_was_stopped = m_thread->state == THREAD_STOPPED;\n       if (m_was_stopped\n-\t  && target_has_registers\n+\t  && target_has_registers ()\n \t  && target_has_stack ()\n \t  && target_has_memory ())\n \t{"
    },
    {
      "sha": "4ba81b6f112af1ae793ea12373b90349297e01df",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=9dccd06e8a4e55adb58d8ebe7f2ed7d9d7dc17de",
      "patch": "@@ -117,7 +117,7 @@ tui_get_register (struct frame_info *frame,\n {\n   if (changedp)\n     *changedp = false;\n-  if (target_has_registers)\n+  if (target_has_registers ())\n     {\n       std::string new_content = tui_register_format (frame, regnum);\n \n@@ -182,7 +182,7 @@ tui_data_window::show_registers (struct reggroup *group)\n   if (group == 0)\n     group = general_reggroup;\n \n-  if (target_has_registers && target_has_stack () && target_has_memory ())\n+  if (target_has_registers () && target_has_stack () && target_has_memory ())\n     {\n       show_register_group (group, get_selected_frame (NULL),\n \t\t\t   group == m_current_group);"
    }
  ]
}