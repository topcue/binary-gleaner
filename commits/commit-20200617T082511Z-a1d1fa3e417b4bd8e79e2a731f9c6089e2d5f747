{
  "sha": "a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTFkMWZhM2U0MTdiNGJkOGU3OWUyYTczMWY5YzYwODllMmQ1Zjc0Nw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-01T14:21:33Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-17T08:25:11Z"
    },
    "message": "gdb: Convert language la_value_print field to a method\n\nThis commit changes the language_data::la_value_print function pointer\nmember variable into a member function of language_defn.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_language_data): Delete la_value_print\n\tinitializer.\n\t(ada_language::value_print): New member function.\n\t* c-lang.c (c_language_data): Delete la_value_print initializer.\n\t(cplus_language_data): Likewise.\n\t(asm_language_data): Likewise.\n\t(minimal_language_data): Likewise.\n\t* d-lang.c (d_language_data): Likewise.\n\t* f-lang.c (f_language_data): Likewise.\n\t* go-lang.c (go_language_data): Likewise.\n\t* language.c (unk_lang_value_print): Delete.\n\t(language_defn::value_print): Define new member function.\n\t(unknown_language_data): Delete la_value_print initializer.\n\t(unknown_language::value_print): New member function.\n\t(auto_language_data): Delete la_value_print initializer.\n\t(auto_language::value_print): New member function.\n\t* language.h (language_data): Delete la_value_print field.\n\t(language_defn::value_print): Declare new member function.\n\t(LA_VALUE_PRINT): Update call to value_print.\n\t* m2-lang.c (m2_language_data): Delete la_value_print initializer.\n\t* objc-lang.c (objc_language_data): Likewise.\n\t* opencl-lang.c (opencl_language_data): Likewise.\n\t* p-lang.c (pascal_language_data): Likewise.\n\t(pascal_language::value_print): New member function.\n\t* rust-lang.c (rust_language_data): Delete la_value_print\n\tinitializer.",
    "tree": {
      "sha": "4b2e204726b469774d366ec68145edba4c485d91",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4b2e204726b469774d366ec68145edba4c485d91"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f16a9f57b50af64ccb9652d20cc934fc5e80cd20",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f16a9f57b50af64ccb9652d20cc934fc5e80cd20",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f16a9f57b50af64ccb9652d20cc934fc5e80cd20"
    }
  ],
  "stats": {
    "total": 107,
    "additions": 75,
    "deletions": 32
  },
  "files": [
    {
      "sha": "d1acf26d8ef65bad21d318b2885eee0fd3377d79",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -1,3 +1,32 @@\n+2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_language_data): Delete la_value_print\n+\tinitializer.\n+\t(ada_language::value_print): New member function.\n+\t* c-lang.c (c_language_data): Delete la_value_print initializer.\n+\t(cplus_language_data): Likewise.\n+\t(asm_language_data): Likewise.\n+\t(minimal_language_data): Likewise.\n+\t* d-lang.c (d_language_data): Likewise.\n+\t* f-lang.c (f_language_data): Likewise.\n+\t* go-lang.c (go_language_data): Likewise.\n+\t* language.c (unk_lang_value_print): Delete.\n+\t(language_defn::value_print): Define new member function.\n+\t(unknown_language_data): Delete la_value_print initializer.\n+\t(unknown_language::value_print): New member function.\n+\t(auto_language_data): Delete la_value_print initializer.\n+\t(auto_language::value_print): New member function.\n+\t* language.h (language_data): Delete la_value_print field.\n+\t(language_defn::value_print): Declare new member function.\n+\t(LA_VALUE_PRINT): Update call to value_print.\n+\t* m2-lang.c (m2_language_data): Delete la_value_print initializer.\n+\t* objc-lang.c (objc_language_data): Likewise.\n+\t* opencl-lang.c (opencl_language_data): Likewise.\n+\t* p-lang.c (pascal_language_data): Likewise.\n+\t(pascal_language::value_print): New member function.\n+\t* rust-lang.c (rust_language_data): Delete la_value_print\n+\tinitializer.\n+\n 2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_watch_location_expression): Rename to"
    },
    {
      "sha": "85483d4e4b64adebdac3094fc472dab40ca5081b",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -13765,7 +13765,6 @@ extern const struct language_data ada_language_data =\n   emit_char,                    /* Function to print single char (not used) */\n   ada_print_typedef,            /* Print a typedef using appropriate syntax */\n   ada_value_print_inner,\t/* la_value_print_inner */\n-  ada_value_print,              /* Print a top-level value */\n   NULL,                         /* name_of_this */\n   true,                         /* la_store_sym_names_in_linkage_form_p */\n   ada_lookup_symbol_nonlocal,   /* Looking up non-local symbols.  */\n@@ -14101,6 +14100,14 @@ class ada_language : public language_defn\n       (xstrprintf (\"{%s} %s\", name.c_str (), core_addr_to_string (addr)));\n   }\n \n+  /* See language.h.  */\n+\n+  void value_print (struct value *val, struct ui_file *stream,\n+\t\t    const struct value_print_options *options) const override\n+  {\n+    return ada_value_print (val, stream, options);\n+  }\n+\n protected:\n   /* See language.h.  */\n "
    },
    {
      "sha": "6aa05a63119855c561bfc6d49bf354351ec8f0a2",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -896,7 +896,6 @@ extern const struct language_data c_language_data =\n   c_emit_char,\t\t\t/* Print a single char */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_value_print_inner,\t\t/* la_value_print_inner */\n-  c_value_print,\t\t/* Print a top-level value */\n   NULL,\t\t\t\t/* name_of_this */\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n@@ -1007,7 +1006,6 @@ extern const struct language_data cplus_language_data =\n   c_emit_char,\t\t\t/* Print a single char */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_value_print_inner,\t\t/* la_value_print_inner */\n-  c_value_print,\t\t/* Print a top-level value */\n   \"this\",                       /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   cp_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n@@ -1206,7 +1204,6 @@ extern const struct language_data asm_language_data =\n   c_emit_char,\t\t\t/* Print a single char */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_value_print_inner,\t\t/* la_value_print_inner */\n-  c_value_print,\t\t/* Print a top-level value */\n   NULL,\t\t\t\t/* name_of_this */\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n@@ -1272,7 +1269,6 @@ extern const struct language_data minimal_language_data =\n   c_emit_char,\t\t\t/* Print a single char */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_value_print_inner,\t\t/* la_value_print_inner */\n-  c_value_print,\t\t/* Print a top-level value */\n   NULL,\t\t\t\t/* name_of_this */\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */"
    },
    {
      "sha": "553b38de81e770bfad33b1807d0c7e2098af8a58",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -150,7 +150,6 @@ extern const struct language_data d_language_data =\n   c_print_typedef,\t\t/* Print a typedef using appropriate\n \t\t\t\t   syntax.  */\n   d_value_print_inner,\t\t/* la_value_print_inner */\n-  c_value_print,\t\t/* Print a top-level value.  */\n   \"this\",\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   d_lookup_symbol_nonlocal,"
    },
    {
      "sha": "3e2c97c06192a18e6de1ebd87a0be9b8da042434",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -571,7 +571,6 @@ extern const struct language_data f_language_data =\n   f_emit_char,\t\t\t/* Function to print a single character */\n   f_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   f_value_print_innner,\t\t/* la_value_print_inner */\n-  c_value_print,\t\t/* FIXME */\n   NULL,                    \t/* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   cp_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */"
    },
    {
      "sha": "14d63ab7e8c4b6806bfd825278e67b682af8f9a4",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -535,7 +535,6 @@ extern const struct language_data go_language_data =\n   c_print_typedef,\t\t/* Print a typedef using appropriate\n \t\t\t\t   syntax.  */\n   go_value_print_inner,\t\t/* la_value_print_inner */\n-  c_value_print,\t\t/* Print a top-level value.  */\n   NULL,\t\t\t\t/* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal, "
    },
    {
      "sha": "5b47a4956ed25721ad1688a22b6ca6baca0e7809",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 25,
      "deletions": 13,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -57,9 +57,6 @@ static void unk_lang_emit_char (int c, struct type *type,\n static void unk_lang_printchar (int c, struct type *type,\n \t\t\t\tstruct ui_file *stream);\n \n-static void unk_lang_value_print (struct value *, struct ui_file *,\n-\t\t\t\t  const struct value_print_options *);\n-\n /* The current (default at startup) state of type and range checking.\n    (If the modes are set to \"auto\", though, these are changed based\n    on the default language at startup, and then again based on the\n@@ -635,6 +632,15 @@ language_defn::watch_location_expression (struct type *type,\n     (xstrprintf (\"* (%s *) %s\", name.c_str (), core_addr_to_string (addr)));\n }\n \n+/* See language.h.  */\n+\n+void\n+language_defn::value_print (struct value *val, struct ui_file *stream,\n+\t       const struct value_print_options *options) const\n+{\n+  return c_value_print (val, stream, options);\n+}\n+\n /* The default implementation of the get_symbol_name_matcher_inner method\n    from the language_defn class.  Matches with strncmp_iw.  */\n \n@@ -742,14 +748,6 @@ unk_lang_value_print_inner (struct value *val,\n \t   \"function unk_lang_value_print_inner called.\"));\n }\n \n-static void\n-unk_lang_value_print (struct value *val, struct ui_file *stream,\n-\t\t      const struct value_print_options *options)\n-{\n-  error (_(\"internal error - unimplemented \"\n-\t   \"function unk_lang_value_print called.\"));\n-}\n-\n static const struct op_print unk_op_print_tab[] =\n {\n   {NULL, OP_NULL, PREC_NULL, 0}\n@@ -785,7 +783,6 @@ extern const struct language_data unknown_language_data =\n   unk_lang_emit_char,\n   default_print_typedef,\t/* Print a typedef using appropriate syntax */\n   unk_lang_value_print_inner,\t/* la_value_print_inner */\n-  unk_lang_value_print,\t\t/* Print a top-level value */\n   \"this\",        \t    \t/* name_of_this */\n   true,\t\t\t\t/* store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal, /* lookup_symbol_nonlocal */\n@@ -829,6 +826,14 @@ class unknown_language : public language_defn\n     /* The unknown language just uses the C++ demangler.  */\n     return gdb_demangle (mangled, options);\n   }\n+\n+  /* See language.h.  */\n+\n+  void value_print (struct value *val, struct ui_file *stream,\n+\t\t    const struct value_print_options *options) const override\n+  {\n+    error (_(\"unimplemented unknown_language::value_print called\"));\n+  }\n };\n \n /* Single instance of the unknown language class.  */\n@@ -855,7 +860,6 @@ extern const struct language_data auto_language_data =\n   unk_lang_emit_char,\n   default_print_typedef,\t/* Print a typedef using appropriate syntax */\n   unk_lang_value_print_inner,\t/* la_value_print_inner */\n-  unk_lang_value_print,\t\t/* Print a top-level value */\n   \"this\",\t\t        /* name_of_this */\n   false,\t\t\t/* store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n@@ -899,6 +903,14 @@ class auto_language : public language_defn\n     /* The auto language just uses the C++ demangler.  */\n     return gdb_demangle (mangled, options);\n   }\n+\n+  /* See language.h.  */\n+\n+  void value_print (struct value *val, struct ui_file *stream,\n+\t\t    const struct value_print_options *options) const override\n+  {\n+    error (_(\"unimplemented auto_language::value_print called\"));\n+  }\n };\n \n /* Single instance of the fake \"auto\" language.  */"
    },
    {
      "sha": "4b27c010b0e947e06d8538b899671063522139a6",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 5,
      "deletions": 6,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -265,11 +265,6 @@ struct language_data\n \t\t\t\t  int recurse,\n \t\t\t\t  const struct value_print_options *);\n \n-    /* Print a top-level value using syntax appropriate for this language.  */\n-\n-    void (*la_value_print) (struct value *, struct ui_file *,\n-\t\t\t    const struct value_print_options *);\n-\n     /* Now come some hooks for lookup_symbol.  */\n \n     /* If this is non-NULL, specifies the name that of the implicit\n@@ -543,6 +538,10 @@ struct language_defn : language_data\n   /* List of all known languages.  */\n   static const struct language_defn *languages[nr_languages];\n \n+  /* Print a top-level value using syntax appropriate for this language.  */\n+  virtual void value_print (struct value *val, struct ui_file *stream,\n+\t\t\t    const struct value_print_options *options) const;\n+\n protected:\n \n   /* This is the overridable part of the GET_SYMBOL_NAME_MATCHER method.\n@@ -642,7 +641,7 @@ extern enum language set_language (enum language);\n   (current_language->la_print_typedef(type,new_symbol,stream))\n \n #define LA_VALUE_PRINT(val,stream,options) \\\n-  (current_language->la_value_print(val,stream,options))\n+  (current_language->value_print (val,stream,options))\n \n #define LA_PRINT_CHAR(ch, type, stream) \\\n   (current_language->la_printchar(ch, type, stream))"
    },
    {
      "sha": "615c2f95bd2709fec9a400f56c94276aaf5fe7cf",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -369,7 +369,6 @@ extern const struct language_data m2_language_data =\n   m2_emit_char,\t\t\t/* Function to print a single character */\n   m2_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   m2_value_print_inner,\t\t/* la_value_print_inner */\n-  c_value_print,\t\t/* Print a top-level value */\n   NULL,\t\t                /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */"
    },
    {
      "sha": "aa9d1a9312cb06de918f015b6782b68272ddb137",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -344,7 +344,6 @@ extern const struct language_data objc_language_data =\n   c_emit_char,\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_value_print_inner,\t\t/* la_value_print_inner */\n-  c_value_print,\t\t/* Print a top-level value */\n   \"self\",\t\t        /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */"
    },
    {
      "sha": "1b7553dde6e1435aced737b72d1bfc6e19cd11d2",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -1023,7 +1023,6 @@ extern const struct language_data opencl_language_data =\n   c_emit_char,\t\t\t/* Print a single char */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_value_print_inner,\t\t/* la_value_print_inner */\n-  c_value_print,\t\t/* Print a top-level value */\n   NULL,                         /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */"
    },
    {
      "sha": "ff3ba3b56e048d53bfed68ecf33f6c54779f3a18",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -400,7 +400,6 @@ extern const struct language_data pascal_language_data =\n   pascal_emit_char,\t\t/* Print a single char */\n   pascal_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   pascal_value_print_inner,\t/* la_value_print_inner */\n-  pascal_value_print,\t\t/* Print a top-level value */\n   \"this\",\t\t        /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n@@ -478,6 +477,14 @@ class pascal_language : public language_defn\n   {\n     pascal_print_type (type, varstring, stream, show, level, flags);\n   }\n+\n+  /* See language.h.  */\n+\n+  void value_print (struct value *val, struct ui_file *stream,\n+\t\t    const struct value_print_options *options) const override\n+  {\n+    return pascal_value_print (val, stream, options);\n+  }\n };\n \n /* Single instance of the Pascal language class.  */"
    },
    {
      "sha": "e48be115afcef506041a37733bfc3ee74ee0edb4",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=a1d1fa3e417b4bd8e79e2a731f9c6089e2d5f747",
      "patch": "@@ -2041,7 +2041,6 @@ extern const struct language_data rust_language_data =\n   rust_emitchar,\t\t/* Print a single char */\n   rust_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   rust_value_print_inner,\t/* la_value_print_inner */\n-  c_value_print,\t\t/* Print a top-level value */\n   NULL,\t\t\t\t/* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   rust_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */"
    }
  ]
}