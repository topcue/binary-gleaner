{
  "sha": "051042333d9d7e2622f3825d5cf532676787dd1c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDUxMDQyMzMzZDlkN2UyNjIyZjM4MjVkNWNmNTMyNjc2Nzg3ZGQxYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:08Z"
    },
    "message": "Split out eval_op_rust_array\n\nThis splits OP_ARRAY into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* rust-lang.c (eval_op_rust_array): New function.\n\t(rust_evaluate_subexp): Use it.",
    "tree": {
      "sha": "0ffdf3084848754b16efe922c86a871e27f421dd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0ffdf3084848754b16efe922c86a871e27f421dd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/051042333d9d7e2622f3825d5cf532676787dd1c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/051042333d9d7e2622f3825d5cf532676787dd1c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/051042333d9d7e2622f3825d5cf532676787dd1c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/051042333d9d7e2622f3825d5cf532676787dd1c/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 34,
    "deletions": 20
  },
  "files": [
    {
      "sha": "afcf9a134c3c1fbe1dfad9861314862d650100f2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/051042333d9d7e2622f3825d5cf532676787dd1c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/051042333d9d7e2622f3825d5cf532676787dd1c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=051042333d9d7e2622f3825d5cf532676787dd1c",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* rust-lang.c (eval_op_rust_array): New function.\n+\t(rust_evaluate_subexp): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* rust-lang.c (eval_op_rust_complement): New function."
    },
    {
      "sha": "2653db3026bf06d7e168fc2649f95106a43ef67b",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 29,
      "deletions": 20,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/051042333d9d7e2622f3825d5cf532676787dd1c/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/051042333d9d7e2622f3825d5cf532676787dd1c/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=051042333d9d7e2622f3825d5cf532676787dd1c",
      "patch": "@@ -1354,6 +1354,34 @@ eval_op_rust_complement (struct type *expect_type, struct expression *exp,\n   return value_complement (value);\n }\n \n+/* A helper function for OP_ARRAY.  */\n+\n+static struct value *\n+eval_op_rust_array (struct type *expect_type, struct expression *exp,\n+\t\t    enum noside noside,\n+\t\t    struct value *elt, struct value *ncopies)\n+{\n+  int copies = value_as_long (ncopies);\n+  if (copies < 0)\n+    error (_(\"Array with negative number of elements\"));\n+\n+  if (noside == EVAL_NORMAL)\n+    {\n+      int i;\n+      std::vector<struct value *> eltvec (copies);\n+\n+      for (i = 0; i < copies; ++i)\n+\teltvec[i] = elt;\n+      return value_array (0, copies - 1, eltvec.data ());\n+    }\n+  else\n+    {\n+      struct type *arraytype\n+\t= lookup_array_range_type (value_type (elt), 0, copies - 1);\n+      return allocate_value (arraytype);\n+    }\n+}\n+\n /* evaluate_exp implementation for Rust.  */\n \n static struct value *\n@@ -1472,31 +1500,12 @@ rust_evaluate_subexp (struct type *expect_type, struct expression *exp,\n     case OP_RUST_ARRAY:\n       {\n \t(*pos)++;\n-\tint copies;\n \tstruct value *elt;\n \tstruct value *ncopies;\n \n \telt = rust_evaluate_subexp (NULL, exp, pos, noside);\n \tncopies = rust_evaluate_subexp (NULL, exp, pos, noside);\n-\tcopies = value_as_long (ncopies);\n-\tif (copies < 0)\n-\t  error (_(\"Array with negative number of elements\"));\n-\n-\tif (noside == EVAL_NORMAL)\n-\t  {\n-\t    int i;\n-\t    std::vector<struct value *> eltvec (copies);\n-\n-\t    for (i = 0; i < copies; ++i)\n-\t      eltvec[i] = elt;\n-\t    result = value_array (0, copies - 1, eltvec.data ());\n-\t  }\n-\telse\n-\t  {\n-\t    struct type *arraytype\n-\t      = lookup_array_range_type (value_type (elt), 0, copies - 1);\n-\t    result = allocate_value (arraytype);\n-\t  }\n+\treturn eval_op_rust_array (expect_type, exp, noside, elt, ncopies);\n       }\n       break;\n "
    }
  ]
}