{
  "sha": "05787bad362024d1328c0d6f7c51244a7d6c1e75",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDU3ODdiYWQzNjIwMjRkMTMyOGMwZDZmN2M1MTI0NGE3ZDZjMWU3NQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-02-02T15:40:51Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-02-02T15:40:51Z"
    },
    "message": "gdb/dwarf: add missing bound check to read_loclist_index\n\nread_rnglist_index has a bound check to make sure that we don't go past\nthe end of the section while reading the offset, but read_loclist_index\ndoesn't.  Add it to read_loclist_index.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (read_loclist_index): Add bound check for the end\n\tof the offset.\n\nChange-Id: Ic4b55c88860fdc3e007740949c78ec84cdb4da60",
    "tree": {
      "sha": "b87949bde02828ff51b02657675027f4faabaacc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b87949bde02828ff51b02657675027f4faabaacc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/05787bad362024d1328c0d6f7c51244a7d6c1e75",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05787bad362024d1328c0d6f7c51244a7d6c1e75",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/05787bad362024d1328c0d6f7c51244a7d6c1e75",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05787bad362024d1328c0d6f7c51244a7d6c1e75/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5e4d9bbc4b4e57eacb614c38f30dac9af08cace8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e4d9bbc4b4e57eacb614c38f30dac9af08cace8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5e4d9bbc4b4e57eacb614c38f30dac9af08cace8"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 18,
    "deletions": 4
  },
  "files": [
    {
      "sha": "8dd3147d3f1fd723375faf7db172016439490871",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05787bad362024d1328c0d6f7c51244a7d6c1e75/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05787bad362024d1328c0d6f7c51244a7d6c1e75/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=05787bad362024d1328c0d6f7c51244a7d6c1e75",
      "patch": "@@ -1,3 +1,8 @@\n+2021-02-02  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2/read.c (read_loclist_index): Add bound check for the end\n+\tof the offset.\n+\n 2021-02-02  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* dwarf2/read.c (read_rnglist_index): Fix bound check."
    },
    {
      "sha": "8d1edc29113633bbf2219f5e809b42387cf02b49",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 13,
      "deletions": 4,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05787bad362024d1328c0d6f7c51244a7d6c1e75/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05787bad362024d1328c0d6f7c51244a7d6c1e75/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=05787bad362024d1328c0d6f7c51244a7d6c1e75",
      "patch": "@@ -20214,6 +20214,11 @@ read_loclist_index (struct dwarf2_cu *cu, ULONGEST loclist_index)\n   struct objfile *objfile = per_objfile->objfile;\n   bfd *abfd = objfile->obfd;\n   ULONGEST loclist_base = lookup_loclist_base (cu);\n+\n+  /* Offset in .debug_loclists of the offset for LOCLIST_INDEX.  */\n+  ULONGEST start_offset =\n+    loclist_base + loclist_index * cu->header.offset_size;\n+\n   struct dwarf2_section_info *section = cu_debug_loc_section (cu);\n \n   section->read (objfile);\n@@ -20228,14 +20233,18 @@ read_loclist_index (struct dwarf2_cu *cu, ULONGEST loclist_index)\n \t     \".debug_loclists offset array [in module %s]\"),\n \t   objfile_name (objfile));\n \n-  if (loclist_base + loclist_index * cu->header.offset_size\n-\t>= section->size)\n+  if (start_offset >= section->size)\n     error (_(\"DW_FORM_loclistx pointing outside of \"\n \t     \".debug_loclists section [in module %s]\"),\n \t   objfile_name (objfile));\n \n-  const gdb_byte *info_ptr\n-    = section->buffer + loclist_base + loclist_index * cu->header.offset_size;\n+  /* Validate that reading won't go beyond the end of the section.  */\n+  if (start_offset + cu->header.offset_size > section->size)\n+    error (_(\"Reading DW_FORM_loclistx index beyond end of\"\n+\t     \".debug_loclists section [in module %s]\"),\n+\t   objfile_name (objfile));\n+\n+  const gdb_byte *info_ptr = section->buffer + start_offset;\n \n   if (cu->header.offset_size == 4)\n     return bfd_get_32 (abfd, info_ptr) + loclist_base;"
    }
  ]
}