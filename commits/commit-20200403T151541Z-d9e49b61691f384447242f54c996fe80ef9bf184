{
  "sha": "d9e49b61691f384447242f54c996fe80ef9bf184",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDllNDliNjE2OTFmMzg0NDQ3MjQyZjU0Yzk5NmZlODBlZjliZjE4NA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-03T15:11:55Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-03T15:15:41Z"
    },
    "message": "Fix DWARF disassembly of DW_OP_const_type\n\nWhile debugging another issue, I noticed that disassembling a DWARF\nexpression using DW_OP_const_type did not work.\ndisassemble_dwarf_expression was not properly decoding this operation.\n\nThis patch fixes the problem.  Tested by re-debugging gdb.\n\nI didn't write a test case because that seemed like overkill for\nwhat's essentially a maintainer's helper.\n\nThe expression evaluator does decode this properly, so no other change\nwas needed.\n\ngdb/ChangeLog\n2020-04-03  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2/loc.c (disassemble_dwarf_expression) <DW_OP_const_type>:\n\tRead constant block.",
    "tree": {
      "sha": "fb153a956ccb31fea078e280d952360fdd73ae38",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fb153a956ccb31fea078e280d952360fdd73ae38"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d9e49b61691f384447242f54c996fe80ef9bf184",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9e49b61691f384447242f54c996fe80ef9bf184",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d9e49b61691f384447242f54c996fe80ef9bf184",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9e49b61691f384447242f54c996fe80ef9bf184/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "492c3f03c701c911c9873eb4dd757fdb5fb13fd8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/492c3f03c701c911c9873eb4dd757fdb5fb13fd8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/492c3f03c701c911c9873eb4dd757fdb5fb13fd8"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 11,
    "deletions": 0
  },
  "files": [
    {
      "sha": "86d949b212c903c099c9345ecf85b8defaf6786a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9e49b61691f384447242f54c996fe80ef9bf184/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9e49b61691f384447242f54c996fe80ef9bf184/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d9e49b61691f384447242f54c996fe80ef9bf184",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-03  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2/loc.c (disassemble_dwarf_expression) <DW_OP_const_type>:\n+\tRead constant block.\n+\n 2020-04-02  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* gdb_bfd.h: Include gdbsupport/byte-vector.h."
    },
    {
      "sha": "fc54e16ffdd1dd5a3312846d9eb8364a02692834",
      "filename": "gdb/dwarf2/loc.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9e49b61691f384447242f54c996fe80ef9bf184/gdb/dwarf2/loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9e49b61691f384447242f54c996fe80ef9bf184/gdb/dwarf2/loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/loc.c?ref=d9e49b61691f384447242f54c996fe80ef9bf184",
      "patch": "@@ -4082,6 +4082,12 @@ disassemble_dwarf_expression (struct ui_file *stream,\n \t    type_print (type, \"\", stream, -1);\n \t    fprintf_filtered (stream, \" [0x%s]>\",\n \t\t\t      phex_nz (to_underlying (type_die), 0));\n+\n+\t    int n = *data++;\n+\t    fprintf_filtered (stream, \" %d byte block:\", n);\n+\t    for (int i = 0; i < n; ++i)\n+\t      fprintf_filtered (stream, \" %02x\", data[i]);\n+\t    data += n;\n \t  }\n \t  break;\n "
    }
  ]
}