{
  "sha": "aee6c3cd1fea463422f19394f95c311f239b6067",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWVlNmMzY2QxZmVhNDYzNDIyZjE5Mzk0Zjk1YzMxMWYyMzliNjA2Nw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-10T18:46:27Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-23T21:50:23Z"
    },
    "message": "gdb/mn10300: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc, and gdbarch_unwind_sp where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* mn10300-tdep.c (mn10300_dummy_id): Delete.\n\t(mn10300_unwind_pc): Delete.\n\t(mn10300_unwind_sp): Delete.\n\t(mn10300_push_dummy_call): Use gdbarch_unwind_sp not\n\tmn10300_unwind_sp.\n\t(mn10300_frame_unwind_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "5daaf560e93f9c6524e2801d945d985ae1c2ed22",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5daaf560e93f9c6524e2801d945d985ae1c2ed22"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aee6c3cd1fea463422f19394f95c311f239b6067",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aee6c3cd1fea463422f19394f95c311f239b6067",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aee6c3cd1fea463422f19394f95c311f239b6067",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aee6c3cd1fea463422f19394f95c311f239b6067/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8e2b5aea9d3f16961f7fac15caec00e955c1dc81",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e2b5aea9d3f16961f7fac15caec00e955c1dc81",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8e2b5aea9d3f16961f7fac15caec00e955c1dc81"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 11,
    "deletions": 31
  },
  "files": [
    {
      "sha": "c2539c56cff07b30f197179efcb3553a59b38b09",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aee6c3cd1fea463422f19394f95c311f239b6067/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aee6c3cd1fea463422f19394f95c311f239b6067/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=aee6c3cd1fea463422f19394f95c311f239b6067",
      "patch": "@@ -1,3 +1,13 @@\n+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* mn10300-tdep.c (mn10300_dummy_id): Delete.\n+\t(mn10300_unwind_pc): Delete.\n+\t(mn10300_unwind_sp): Delete.\n+\t(mn10300_push_dummy_call): Use gdbarch_unwind_sp not\n+\tmn10300_unwind_sp.\n+\t(mn10300_frame_unwind_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* mep-tdep.c (mep_unwind_pc): Delete."
    },
    {
      "sha": "1a08ea0cceba87158ca724c10200b1165ef60eaa",
      "filename": "gdb/mn10300-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 31,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aee6c3cd1fea463422f19394f95c311f239b6067/gdb/mn10300-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aee6c3cd1fea463422f19394f95c311f239b6067/gdb/mn10300-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mn10300-tdep.c?ref=aee6c3cd1fea463422f19394f95c311f239b6067",
      "patch": "@@ -1098,15 +1098,6 @@ mn10300_frame_base (struct frame_info *this_frame, void **this_prologue_cache)\n     }\n }\n \n-/* Here is a dummy implementation.  */\n-static struct frame_id\n-mn10300_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  CORE_ADDR sp = get_frame_register_unsigned (this_frame, E_SP_REGNUM);\n-  CORE_ADDR pc = get_frame_register_unsigned (this_frame, E_PC_REGNUM);\n-  return frame_id_build (sp, pc);\n-}\n-\n static void\n mn10300_frame_this_id (struct frame_info *this_frame,\n \t\t       void **this_prologue_cache,\n@@ -1149,32 +1140,11 @@ static const struct frame_unwind mn10300_frame_unwind = {\n   default_frame_sniffer\n };\n \n-static CORE_ADDR\n-mn10300_unwind_pc (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  ULONGEST pc;\n-\n-  pc = frame_unwind_register_unsigned (this_frame, E_PC_REGNUM);\n-  return pc;\n-}\n-\n-static CORE_ADDR\n-mn10300_unwind_sp (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  ULONGEST sp;\n-\n-  sp = frame_unwind_register_unsigned (this_frame, E_SP_REGNUM);\n-  return sp;\n-}\n-\n static void\n mn10300_frame_unwind_init (struct gdbarch *gdbarch)\n {\n   dwarf2_append_unwinders (gdbarch);\n   frame_unwind_append_unwinder (gdbarch, &mn10300_frame_unwind);\n-  set_gdbarch_dummy_id (gdbarch, mn10300_dummy_id);\n-  set_gdbarch_unwind_pc (gdbarch, mn10300_unwind_pc);\n-  set_gdbarch_unwind_sp (gdbarch, mn10300_unwind_sp);\n }\n \n /* Function: push_dummy_call\n@@ -1308,7 +1278,7 @@ mn10300_push_dummy_call (struct gdbarch *gdbarch,\n   {\n     CORE_ADDR func_addr = find_function_addr (target_func, NULL);\n     CORE_ADDR unwound_sp \n-      = mn10300_unwind_sp (gdbarch, create_new_frame (sp, func_addr));\n+      = gdbarch_unwind_sp (gdbarch, create_new_frame (sp, func_addr));\n     if (sp != unwound_sp)\n       regcache_cooked_write_unsigned (regcache, E_SP_REGNUM,\n                                       sp - (unwound_sp - sp));"
    }
  ]
}