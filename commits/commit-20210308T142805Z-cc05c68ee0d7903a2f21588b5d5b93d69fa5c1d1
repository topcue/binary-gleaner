{
  "sha": "cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2MwNWM2OGVlMGQ3OTAzYTJmMjE1ODhiNWQ1YjkzZDY5ZmE1YzFkMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:05Z"
    },
    "message": "Split out eval_op_f_abs\n\nThis splits UNOP_ABS into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* f-lang.c (eval_op_f_abs): New function.\n\t(evaluate_subexp_f): Use it.",
    "tree": {
      "sha": "f4662b46fb28c3ff6265d09d43029423ed4b66b4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f4662b46fb28c3ff6265d09d43029423ed4b66b4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "aec95807f11b3403c1e8e000618bc85e0440799e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aec95807f11b3403c1e8e000618bc85e0440799e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/aec95807f11b3403c1e8e000618bc85e0440799e"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 35,
    "deletions": 20
  },
  "files": [
    {
      "sha": "058b073854028ce07071787e7a0f486a915857ad",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* f-lang.c (eval_op_f_abs): New function.\n+\t(evaluate_subexp_f): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (eval_op_type): New function."
    },
    {
      "sha": "76b2f27e48944e0503df9f1b24b4b797c861ef4d",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 30,
      "deletions": 20,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1",
      "patch": "@@ -974,6 +974,35 @@ fortran_associated (struct gdbarch *gdbarch, const language_defn *lang,\n }\n \n \n+/* A helper function for UNOP_ABS.  */\n+\n+static struct value *\n+eval_op_f_abs (struct type *expect_type, struct expression *exp,\n+\t       enum noside noside,\n+\t       struct value *arg1)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+  struct type *type = value_type (arg1);\n+  switch (type->code ())\n+    {\n+    case TYPE_CODE_FLT:\n+      {\n+\tdouble d\n+\t  = fabs (target_float_to_host_double (value_contents (arg1),\n+\t\t\t\t\t       value_type (arg1)));\n+\treturn value_from_host_double (type, d);\n+      }\n+    case TYPE_CODE_INT:\n+      {\n+\tLONGEST l = value_as_long (arg1);\n+\tl = llabs (l);\n+\treturn value_from_longest (type, l);\n+      }\n+    }\n+  error (_(\"ABS of type %s not supported\"), TYPE_SAFE_NAME (type));\n+}\n+\n /* Special expression evaluation cases for Fortran.  */\n \n static struct value *\n@@ -997,26 +1026,7 @@ evaluate_subexp_f (struct type *expect_type, struct expression *exp,\n \n     case UNOP_ABS:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);\n-      if (noside == EVAL_SKIP)\n-\treturn eval_skip_value (exp);\n-      type = value_type (arg1);\n-      switch (type->code ())\n-\t{\n-\tcase TYPE_CODE_FLT:\n-\t  {\n-\t    double d\n-\t      = fabs (target_float_to_host_double (value_contents (arg1),\n-\t\t\t\t\t\t   value_type (arg1)));\n-\t    return value_from_host_double (type, d);\n-\t  }\n-\tcase TYPE_CODE_INT:\n-\t  {\n-\t    LONGEST l = value_as_long (arg1);\n-\t    l = llabs (l);\n-\t    return value_from_longest (type, l);\n-\t  }\n-\t}\n-      error (_(\"ABS of type %s not supported\"), TYPE_SAFE_NAME (type));\n+      return eval_op_f_abs (expect_type, exp, noside, arg1);\n \n     case BINOP_MOD:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);"
    }
  ]
}