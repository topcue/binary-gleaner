{
  "sha": "65d1cd5f9cbcbb2df0b187cb7623949c1668728f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjVkMWNkNWY5Y2JjYmIyZGYwYjE4N2NiNzYyMzk0OWMxNjY4NzI4Zg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-11-21T10:02:27Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-11-21T10:02:27Z"
    },
    "message": "[gdb] Only force INTERP_CONSOLE ui_out for breakpoint commands in MI mode\n\nThe problem reported in PR mi/25055 is that the output of the backtrace\ncommand, when executed as breakpoint command does not show when executing\nusing the MI interpreter:\n...\n$ gdb a.out\nReading symbols from a.out...\n(gdb) break main\nBreakpoint 1 at 0x4003c0: file test.c, line 19.\n(gdb) commands\nType commands for breakpoint(s) 1, one per line.\nEnd with a line saying just \"end\".\n>bt\n>end\n(gdb) interpreter-exec mi \"-exec-run\"\n^done\n\nBreakpoint 1, main () at test.c:19\n19        return foo (4);\n(gdb)\n...\n\nInterestingly, the function print_frame is called twice during -exec-run:\n- once during tui_on_normal_stop where the ui_out is temporarily set to\n  tui->interp_ui_out (), resulting in the part after the comma in\n  \"Breakpoint 1, main () at test.c:19\"\n- once during execute_control_command, where the ui_out is the default for the\n  current interpreter: mi_ui_out, which ignores calls to output text.\n\nThe commit 3a87ae656c2 \"Use console uiout when executing breakpoint commands\"\nfixes the problem by temporarily switching to the ui_out of INTERP_CONSOLE in\nexecute_control_command.\n\nThis however caused a regression in redirection (escaping '#' using '\\' for\ngit commit message convenience):\n...\n$ rm -f gdb.txt; gdb a.out\nReading symbols from a.out...\n(gdb) break main\nBreakpoint 1 at 0x4003c0: file test.c, line 19.\n(gdb) commands\nType commands for breakpoint(s) 1, one per line.\nEnd with a line saying just \"end\".\n>bt\n>end\n(gdb) set logging redirect on\n(gdb) set logging on\nRedirecting output to gdb.txt.\nCopying debug output to gdb.txt.\n(gdb) run\n\\#0  main () at test.c:19\n(gdb) q\nA debugging session is active.\n\n        Inferior 1 [process 22428] will be killed.\n\nQuit anyway? (y or n) y\n$ cat gdb.txt\nStarting program: /data/gdb_versions/devel/a.out\n\nBreakpoint 1, main () at test.c:19\n19        return foo (4);\n...\n\nThe problem is that the '#0  main () at test.c:19' ends up in the gdb output\noutput rather than in gdb.txt.  This is due to the fact that the redirect is\nsetup for the current ui_out (which is tui->interp_ui_out ()), while the\nbacktrace output is printed to the INTERP_CONSOLE ui_out.\n\nFix this by limiting switching to INTERP_CONSOLE ui_out to when INTERP_MI is\nactive.\n\nTested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2019-11-21  Tom de Vries  <tdevries@suse.de>\n\n\tPR gdb/24956\n\t* cli/cli-script.c (execute_control_command): Only switch to\n\tINTERP_CONSOLE's ui_out when INTERP_MI is active.\n\ngdb/testsuite/ChangeLog:\n\n2019-11-21  Tom de Vries  <tdevries@suse.de>\n\n\tPR gdb/24956\n\t* gdb.base/ui-redirect.exp: Test output of user-defined command.\n\nChange-Id: Id1771e7fcc9496a7d97ec2b2ea6b1487596f1ef7",
    "tree": {
      "sha": "c8ae9671a2d23b9c5d4c6dd7d43325cfff6831b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c8ae9671a2d23b9c5d4c6dd7d43325cfff6831b2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/65d1cd5f9cbcbb2df0b187cb7623949c1668728f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/65d1cd5f9cbcbb2df0b187cb7623949c1668728f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/65d1cd5f9cbcbb2df0b187cb7623949c1668728f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/65d1cd5f9cbcbb2df0b187cb7623949c1668728f/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5b537ffc55757b05ca2d7dbd1bbe2d59d88c24a4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b537ffc55757b05ca2d7dbd1bbe2d59d88c24a4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5b537ffc55757b05ca2d7dbd1bbe2d59d88c24a4"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 35,
    "deletions": 0
  },
  "files": [
    {
      "sha": "3652685986fb75ba36e3ea4d070c6e71d8382254",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65d1cd5f9cbcbb2df0b187cb7623949c1668728f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65d1cd5f9cbcbb2df0b187cb7623949c1668728f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=65d1cd5f9cbcbb2df0b187cb7623949c1668728f",
      "patch": "@@ -1,3 +1,9 @@\n+2019-11-21  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR gdb/24956\n+\t* cli/cli-script.c (execute_control_command): Only switch to\n+\tINTERP_CONSOLE's ui_out when INTERP_MI is active.\n+\n 2019-11-19  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-win.c (tui_partial_win_by_name): Move from tui-data.c."
    },
    {
      "sha": "06cdcd6bfe5c3f3a90f912a2ecc449b1b708f361",
      "filename": "gdb/cli/cli-script.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65d1cd5f9cbcbb2df0b187cb7623949c1668728f/gdb/cli/cli-script.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65d1cd5f9cbcbb2df0b187cb7623949c1668728f/gdb/cli/cli-script.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-script.c?ref=65d1cd5f9cbcbb2df0b187cb7623949c1668728f",
      "patch": "@@ -696,6 +696,9 @@ execute_control_command_1 (struct command_line *cmd, int from_tty)\n enum command_control_type\n execute_control_command (struct command_line *cmd, int from_tty)\n {\n+  if (!current_uiout->is_mi_like_p ())\n+    return execute_control_command_1 (cmd, from_tty);\n+\n   /* Make sure we use the console uiout.  It's possible that we are executing\n      breakpoint commands while running the MI interpreter.  */\n   interp *console = interp_lookup (current_ui, INTERP_CONSOLE);"
    },
    {
      "sha": "16027e474981d62b66940f01c722dab9e48685a1",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65d1cd5f9cbcbb2df0b187cb7623949c1668728f/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65d1cd5f9cbcbb2df0b187cb7623949c1668728f/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=65d1cd5f9cbcbb2df0b187cb7623949c1668728f",
      "patch": "@@ -1,3 +1,8 @@\n+2019-11-21  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR gdb/24956\n+\t* gdb.base/ui-redirect.exp: Test output of user-defined command.\n+\n 2019-11-20  Sergio Durigan Junior  <sergiodj@redhat.com>\n \n \t* gdb.python/py-progspace.exp: Add missing parentheses on some"
    },
    {
      "sha": "932c74af4b57df1cb1949947338e705483f6ca87",
      "filename": "gdb/testsuite/gdb.base/ui-redirect.exp",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65d1cd5f9cbcbb2df0b187cb7623949c1668728f/gdb/testsuite/gdb.base/ui-redirect.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65d1cd5f9cbcbb2df0b187cb7623949c1668728f/gdb/testsuite/gdb.base/ui-redirect.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/ui-redirect.exp?ref=65d1cd5f9cbcbb2df0b187cb7623949c1668728f",
      "patch": "@@ -57,13 +57,32 @@ set cmds \"$cmds\\n\"\n set outdir [standard_output_file {}]\n set cmds_file \"$outdir/cmds.txt\"\n \n+with_test_prefix \"userdefined\" {\n+    set test \"define userdefined\"\n+    gdb_test_multiple $test $test {\n+\t-re \"End with a line saying just \\\"end\\\"\\\\.\\r\\n>$\" {\n+\t    pass $test\n+\t}\n+    }\n+\n+    set test \"bt\"\n+    gdb_test_multiple $test $test {\n+\t-re \"\\r\\n>$\" {\n+\t    pass $test\n+\t}\n+    }\n+\n+    gdb_test_no_output \"end\"\n+}\n+\n with_test_prefix \"logging\" {\n     gdb_test_no_output \"set logging file /dev/null\"\n     gdb_test \"set logging on\" \\\n     \"Copying output to /dev/null.*Copying debug output to /dev/null\\\\.\"\n     gdb_test \"save breakpoints $cmds_file\" \"Saved to file '$cmds_file'\\\\.\" \\\n \t\"save breakpoints cmds.txt\"\n     cmp_file_string \"$cmds_file\" \"$cmds\" \"cmds.txt\"\n+    gdb_test \"userdefined\" \"#0  main ().*\"\n     gdb_test \"set logging off\" \"Done logging to /dev/null\\\\.\"\n     gdb_test \"help\" \"List of classes of commands:.*\"\n }\n@@ -74,6 +93,7 @@ with_test_prefix \"redirect\" {\n     \"Redirecting output to /dev/null.*Copying debug output to /dev/null\\\\.\"\n     gdb_test_no_output \"save breakpoints $cmds_file\" \"save breakpoints cmds.txt\"\n     cmp_file_string \"$cmds_file\" \"$cmds\" \"cmds.txt\"\n+    gdb_test_no_output \"userdefined\"\n     gdb_test \"set logging off\" \"Done logging to /dev/null\\\\.\"\n     gdb_test \"help\" \"List of classes of commands:.*\"\n }\n@@ -87,6 +107,7 @@ with_test_prefix \"redirect while already logging\" {\n     gdb_test \"save breakpoints $cmds_file\" \"Saved to file '$cmds_file'\\\\.\" \\\n \t\"save breakpoints cmds.txt\"\n     cmp_file_string \"$cmds_file\" \"$cmds\" \"cmds.txt\"\n+    gdb_test \"userdefined\" \"#0  main ().*\"\n     gdb_test \"set logging off\" \"Done logging to /dev/null\\\\.\"\n     gdb_test \"help\" \"List of classes of commands:.*\"\n     gdb_test_no_output \"set logging redirect off\""
    }
  ]
}