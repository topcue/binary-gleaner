{
  "sha": "1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWRiYWRlNzQ0MWI5ZjMyZDZiYTlhYTFkNDRkYTVmMjhjNDQyODJmYQ==",
  "commit": {
    "author": {
      "name": "Sudakshina Das",
      "email": "sudi.das@arm.com",
      "date": "2019-03-13T11:09:10Z"
    },
    "committer": {
      "name": "Sudakshina Das",
      "email": "sudi.das@arm.com",
      "date": "2019-03-13T11:47:33Z"
    },
    "message": "[BFD, LD, AArch64, 3/3] Add --pac-plt to enable PLTs protected with PAC.\n\nThis is part of the patch series to add support for BTI and\nPAC in AArch64 linker.\n\n1) This patch adds new definitions of PAC enabled PLTs\nand both BTI and PAC enabled PLTs.\n2) It also defines the new dynamic tag DT_AARCH64_PAC_PLT\nfor the PAC enabled PLTs.\n3) This patch adds a new ld command line option: --pac-plt.\nIn the presence of this option, the linker uses the PAC\nenabled PLTs and marks with DT_AARCH64_PAC_PLT.\n4) In case both BTI and PAC are enabled the linker should\npick PLTs enabled with both and also use dynamic tags for both.\nAll these are made according to the new AArch64 ELF ABI\nhttps://developer.arm.com/docs/ihi0056/latest/elf-for-the-arm-64-bit-architecture-aarch64-abi-2018q4\n\n*** bfd/ChangeLog ***\n\n2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n\n\t* elfnn-aarch64.c (PLT_PAC_ENTRY_SIZE, PLT_PAC_SMALL_ENTRY_SIZE): New.\n\t(PLT_BTI_PAC_ENTRY_SIZE, PLT_BTI_PAC_SMALL_ENTRY_SIZE): New.\n\t(setup_plt_values): Account for PAC or PAC and BTI enabled PLTs.\n\t(elfNN_aarch64_size_dynamic_sections): Add checks for PLT_BTI_PAC\n\tand PLT_PAC_PLT.\n\t(elfNN_aarch64_finish_dynamic_sections): Account for PLT_BTI_PAC.\n\t(get_plt_type): Add case for DT_AARCH64_PAC_PLT.\n\t(elfNN_aarch64_plt_sym_val): Add cases for PLT_BTI_PAC and PLT_PAC.\n\n*** binutils/ChangeLog ***\n\n2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n\n\t* readelf.c (get_aarch64_dynamic_type): Add case for\n\tDT_AARCH64_PAC_PLT.\n\t(dynamic_section_aarch64_val): Likewise.\n\n*** include/ChangeLog ***\n\n2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n\n\t* elf/aarch64.h (DT_AARCH64_PAC_PLT): New.\n\n*** ld/ChangeLog ***\n\n2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n\n\t* NEWS: Document --pac-plt.\n\t* emultempl/aarch64elf.em (OPTION_PAC_PLT): New.\n\t(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add pac-plt.\n\t(PARSE_AND_LIST_ARGS_CASES): Handle OPTION_PAC_PLT.\n\t* testsuite/ld-aarch64/aarch64-elf.exp: Add the following tests.\n\t* testsuite/ld-aarch64/bti-pac-plt-1.d: New test.\n\t* testsuite/ld-aarch64/bti-pac-plt-2.d: New test.\n\t* testsuite/ld-aarch64/pac-plt-1.d: New test.\n\t* testsuite/ld-aarch64/pac-plt-2.d: New test.\n\t* testsuite/ld-aarch64/bti-plt-1.s: Add .ifndef directive.",
    "tree": {
      "sha": "dcf3b55249f9b6eafdd883ecf134ccc87dba800b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dcf3b55249f9b6eafdd883ecf134ccc87dba800b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/comments",
  "author": {
    "login": "sudakshina-das-arm",
    "id": 28538945,
    "node_id": "MDQ6VXNlcjI4NTM4OTQ1",
    "avatar_url": "https://avatars.githubusercontent.com/u/28538945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sudakshina-das-arm",
    "html_url": "https://github.com/sudakshina-das-arm",
    "followers_url": "https://api.github.com/users/sudakshina-das-arm/followers",
    "following_url": "https://api.github.com/users/sudakshina-das-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/sudakshina-das-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sudakshina-das-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sudakshina-das-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/sudakshina-das-arm/orgs",
    "repos_url": "https://api.github.com/users/sudakshina-das-arm/repos",
    "events_url": "https://api.github.com/users/sudakshina-das-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sudakshina-das-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "sudakshina-das-arm",
    "id": 28538945,
    "node_id": "MDQ6VXNlcjI4NTM4OTQ1",
    "avatar_url": "https://avatars.githubusercontent.com/u/28538945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sudakshina-das-arm",
    "html_url": "https://github.com/sudakshina-das-arm",
    "followers_url": "https://api.github.com/users/sudakshina-das-arm/followers",
    "following_url": "https://api.github.com/users/sudakshina-das-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/sudakshina-das-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sudakshina-das-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sudakshina-das-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/sudakshina-das-arm/orgs",
    "repos_url": "https://api.github.com/users/sudakshina-das-arm/repos",
    "events_url": "https://api.github.com/users/sudakshina-das-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sudakshina-das-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "37c18eedffe3926a330149ca93e7407917e2be38",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37c18eedffe3926a330149ca93e7407917e2be38",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/37c18eedffe3926a330149ca93e7407917e2be38"
    }
  ],
  "stats": {
    "total": 320,
    "additions": 314,
    "deletions": 6
  },
  "files": [
    {
      "sha": "540f7373cabd7fb1cea6cc42236ffc12153dd387",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -1,3 +1,14 @@\n+2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* elfnn-aarch64.c (PLT_PAC_ENTRY_SIZE, PLT_PAC_SMALL_ENTRY_SIZE): New.\n+\t(PLT_BTI_PAC_ENTRY_SIZE, PLT_BTI_PAC_SMALL_ENTRY_SIZE): New.\n+\t(setup_plt_values): Account for PAC or PAC and BTI enabled PLTs.\n+\t(elfNN_aarch64_size_dynamic_sections): Add checks for PLT_BTI_PAC\n+\tand PLT_PAC_PLT.\n+\t(elfNN_aarch64_finish_dynamic_sections): Account for PLT_BTI_PAC.\n+\t(get_plt_type): Add case for DT_AARCH64_PAC_PLT.\n+\t(elfNN_aarch64_plt_sym_val): Add cases for PLT_BTI_PAC and PLT_PAC.\n+\n 2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n \t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n "
    },
    {
      "sha": "50541f05a8babac3178e8c5d3dfac5c19e075ff9",
      "filename": "bfd/elfnn-aarch64.c",
      "status": "modified",
      "additions": 134,
      "deletions": 6,
      "changes": 140,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/bfd/elfnn-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/bfd/elfnn-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-aarch64.c?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -271,6 +271,12 @@\n #define PLT_BTI_ENTRY_SIZE\t\t(36)\n #define PLT_BTI_SMALL_ENTRY_SIZE\t(20)\n #define PLT_BTI_TLSDESC_ENTRY_SIZE\t(36)\n+/* PLT sizes with PAC insn.  */\n+#define PLT_PAC_ENTRY_SIZE\t\t(36)\n+#define PLT_PAC_SMALL_ENTRY_SIZE\t(20)\n+/* PLT sizes with BTI and PAC insn.  */\n+#define PLT_BTI_PAC_ENTRY_SIZE\t\t(40)\n+#define PLT_BTI_PAC_SMALL_ENTRY_SIZE\t(24)\n \n /* Encoding of the nop instruction.  */\n #define INSN_NOP 0xd503201f\n@@ -319,6 +325,44 @@ static const bfd_byte elfNN_aarch64_small_plt0_bti_entry[PLT_BTI_ENTRY_SIZE] =\n   0x1f, 0x20, 0x03, 0xd5,\t/* nop */\n };\n \n+static const bfd_byte elfNN_aarch64_small_plt0_pac_entry[PLT_PAC_ENTRY_SIZE] =\n+{\n+  0xf0, 0x7b, 0xbf, 0xa9,\t/* stp x16, x30, [sp, #-16]!  */\n+  0x10, 0x00, 0x00, 0x90,\t/* adrp x16, (GOT+16)  */\n+#if ARCH_SIZE == 64\n+  0x11, 0x0A, 0x40, 0xf9,\t/* ldr x17, [x16, #PLT_GOT+0x10]  */\n+  0x10, 0x42, 0x00, 0x91,\t/* add x16, x16,#PLT_GOT+0x10   */\n+#else\n+  0x11, 0x0A, 0x40, 0xb9,\t/* ldr w17, [x16, #PLT_GOT+0x8]  */\n+  0x10, 0x22, 0x00, 0x11,\t/* add w16, w16,#PLT_GOT+0x8   */\n+#endif\n+  0x9f, 0x21, 0x03, 0xd5,\t/* autia1716 */\n+  0x20, 0x02, 0x1f, 0xd6,\t/* br x17  */\n+  0x1f, 0x20, 0x03, 0xd5,\t/* nop */\n+  0x1f, 0x20, 0x03, 0xd5,\t/* nop */\n+  0x1f, 0x20, 0x03, 0xd5,\t/* nop */\n+};\n+\n+static const bfd_byte\n+elfNN_aarch64_small_plt0_bti_pac_entry[PLT_BTI_PAC_ENTRY_SIZE] =\n+{\n+  0x5f, 0x24, 0x03, 0xd5,\t/* bti c.  */\n+  0xf0, 0x7b, 0xbf, 0xa9,\t/* stp x16, x30, [sp, #-16]!  */\n+  0x10, 0x00, 0x00, 0x90,\t/* adrp x16, (GOT+16)  */\n+#if ARCH_SIZE == 64\n+  0x11, 0x0A, 0x40, 0xf9,\t/* ldr x17, [x16, #PLT_GOT+0x10]  */\n+  0x10, 0x42, 0x00, 0x91,\t/* add x16, x16,#PLT_GOT+0x10   */\n+#else\n+  0x11, 0x0A, 0x40, 0xb9,\t/* ldr w17, [x16, #PLT_GOT+0x8]  */\n+  0x10, 0x22, 0x00, 0x11,\t/* add w16, w16,#PLT_GOT+0x8   */\n+#endif\n+  0x9f, 0x21, 0x03, 0xd5,\t/* autia1716 */\n+  0x20, 0x02, 0x1f, 0xd6,\t/* br x17  */\n+  0x1f, 0x20, 0x03, 0xd5,\t/* nop */\n+  0x1f, 0x20, 0x03, 0xd5,\t/* nop */\n+  0x1f, 0x20, 0x03, 0xd5,\t/* nop */\n+};\n+\n /* Per function entry in a procedure linkage table looks like this\n    if the distance between the PLTGOT and the PLT is < 4GB use\n    these PLT entries.  Use BTI versions of the PLTs when enabled.  */\n@@ -350,6 +394,37 @@ elfNN_aarch64_small_plt_bti_entry[PLT_BTI_SMALL_ENTRY_SIZE] =\n   0x20, 0x02, 0x1f, 0xd6,\t/* br x17.  */\n };\n \n+static const bfd_byte\n+elfNN_aarch64_small_plt_pac_entry[PLT_PAC_SMALL_ENTRY_SIZE] =\n+{\n+  0x10, 0x00, 0x00, 0x90,\t/* adrp x16, PLTGOT + n * 8  */\n+#if ARCH_SIZE == 64\n+  0x11, 0x02, 0x40, 0xf9,\t/* ldr x17, [x16, PLTGOT + n * 8] */\n+  0x10, 0x02, 0x00, 0x91,\t/* add x16, x16, :lo12:PLTGOT + n * 8  */\n+#else\n+  0x11, 0x02, 0x40, 0xb9,\t/* ldr w17, [x16, PLTGOT + n * 4] */\n+  0x10, 0x02, 0x00, 0x11,\t/* add w16, w16, :lo12:PLTGOT + n * 4  */\n+#endif\n+  0x9f, 0x21, 0x03, 0xd5,\t/* autia1716 */\n+  0x20, 0x02, 0x1f, 0xd6,\t/* br x17.  */\n+};\n+\n+static const bfd_byte\n+elfNN_aarch64_small_plt_bti_pac_entry[PLT_BTI_PAC_SMALL_ENTRY_SIZE] =\n+{\n+  0x5f, 0x24, 0x03, 0xd5,\t/* bti c.  */\n+  0x10, 0x00, 0x00, 0x90,\t/* adrp x16, PLTGOT + n * 8  */\n+#if ARCH_SIZE == 64\n+  0x11, 0x02, 0x40, 0xf9,\t/* ldr x17, [x16, PLTGOT + n * 8] */\n+  0x10, 0x02, 0x00, 0x91,\t/* add x16, x16, :lo12:PLTGOT + n * 8  */\n+#else\n+  0x11, 0x02, 0x40, 0xb9,\t/* ldr w17, [x16, PLTGOT + n * 4] */\n+  0x10, 0x02, 0x00, 0x11,\t/* add w16, w16, :lo12:PLTGOT + n * 4  */\n+#endif\n+  0x9f, 0x21, 0x03, 0xd5,\t/* autia1716 */\n+  0x20, 0x02, 0x1f, 0xd6,\t/* br x17.  */\n+};\n+\n static const bfd_byte\n elfNN_aarch64_tlsdesc_small_plt_entry[PLT_TLSDESC_ENTRY_SIZE] =\n {\n@@ -4681,7 +4756,25 @@ setup_plt_values (struct bfd_link_info *link_info,\n   struct elf_aarch64_link_hash_table *globals;\n   globals = elf_aarch64_hash_table (link_info);\n \n-  if (plt_type == PLT_BTI)\n+  if (plt_type == PLT_BTI_PAC)\n+    {\n+      globals->plt_header_size = PLT_BTI_PAC_ENTRY_SIZE;\n+      globals->plt0_entry = elfNN_aarch64_small_plt0_bti_pac_entry;\n+      globals->tlsdesc_plt_entry_size = PLT_BTI_TLSDESC_ENTRY_SIZE;\n+\n+      /* Only in ET_EXEC we need PLTn with BTI.  */\n+      if (bfd_link_pde (link_info))\n+\t{\n+\t  globals->plt_entry_size = PLT_BTI_PAC_SMALL_ENTRY_SIZE;\n+\t  globals->plt_entry = elfNN_aarch64_small_plt_bti_pac_entry;\n+\t}\n+      else\n+\t{\n+\t  globals->plt_entry_size = PLT_PAC_SMALL_ENTRY_SIZE;\n+\t  globals->plt_entry = elfNN_aarch64_small_plt_pac_entry;\n+\t}\n+    }\n+  else if (plt_type == PLT_BTI)\n     {\n       globals->plt_header_size = PLT_BTI_ENTRY_SIZE;\n       globals->plt0_entry = elfNN_aarch64_small_plt0_bti_entry;\n@@ -4694,6 +4787,14 @@ setup_plt_values (struct bfd_link_info *link_info,\n \t  globals->plt_entry = elfNN_aarch64_small_plt_bti_entry;\n \t}\n     }\n+  else if (plt_type == PLT_PAC)\n+    {\n+      globals->plt_header_size = PLT_PAC_ENTRY_SIZE;\n+      globals->plt0_entry = elfNN_aarch64_small_plt0_pac_entry;\n+      globals->tlsdesc_plt_entry_size = PLT_TLSDESC_ENTRY_SIZE;\n+      globals->plt_entry_size = PLT_PAC_SMALL_ENTRY_SIZE;\n+      globals->plt_entry = elfNN_aarch64_small_plt_pac_entry;\n+    }\n }\n \n /* Set option values needed during linking.  */\n@@ -9077,8 +9178,17 @@ elfNN_aarch64_size_dynamic_sections (bfd *output_bfd ATTRIBUTE_UNUSED,\n \t\t  || !add_dynamic_entry (DT_TLSDESC_GOT, 0)))\n \t    return FALSE;\n \n-\t  if ((elf_aarch64_tdata (output_bfd)->plt_type == PLT_BTI)\n-\t      && !add_dynamic_entry (DT_AARCH64_BTI_PLT, 0))\n+\t  if ((elf_aarch64_tdata (output_bfd)->plt_type == PLT_BTI_PAC)\n+\t      && (!add_dynamic_entry (DT_AARCH64_BTI_PLT, 0)\n+\t\t  || !add_dynamic_entry (DT_AARCH64_PAC_PLT, 0)))\n+\t    return FALSE;\n+\n+\t  else if ((elf_aarch64_tdata (output_bfd)->plt_type == PLT_BTI)\n+\t\t   && !add_dynamic_entry (DT_AARCH64_BTI_PLT, 0))\n+\t    return FALSE;\n+\n+\t  else if ((elf_aarch64_tdata (output_bfd)->plt_type == PLT_PAC)\n+\t\t   && !add_dynamic_entry (DT_AARCH64_PAC_PLT, 0))\n \t    return FALSE;\n \t}\n \n@@ -9604,7 +9714,7 @@ elfNN_aarch64_finish_dynamic_sections (bfd *output_bfd,\n \t  htab->tlsdesc_plt_entry_size = PLT_TLSDESC_ENTRY_SIZE;\n \n \t  aarch64_plt_type type = elf_aarch64_tdata (output_bfd)->plt_type;\n-\t  if (type == PLT_BTI)\n+\t  if (type == PLT_BTI || type == PLT_BTI_PAC)\n \t    {\n \t      entry = elfNN_aarch64_tlsdesc_small_plt_bti_entry;\n \t      htab->tlsdesc_plt_entry_size = PLT_BTI_TLSDESC_ENTRY_SIZE;\n@@ -9744,7 +9854,11 @@ get_plt_type (bfd *abfd)\n       switch (tag)\n \t{\n \tcase DT_AARCH64_BTI_PLT:\n-\t  ret = PLT_BTI;\n+\t  ret |= PLT_BTI;\n+\t  break;\n+\n+\tcase DT_AARCH64_PAC_PLT:\n+\t  ret |= PLT_PAC;\n \t  break;\n \n \tdefault: break;\n@@ -9777,12 +9891,26 @@ elfNN_aarch64_plt_sym_val (bfd_vma i, const asection *plt,\n   size_t plt0_size = PLT_ENTRY_SIZE;\n   size_t pltn_size = PLT_SMALL_ENTRY_SIZE;\n \n-  if (elf_aarch64_tdata (plt->owner)->plt_type == PLT_BTI)\n+  if (elf_aarch64_tdata (plt->owner)->plt_type == PLT_BTI_PAC)\n+    {\n+      plt0_size = PLT_BTI_PAC_ENTRY_SIZE;\n+      if (elf_elfheader (plt->owner)->e_type == ET_EXEC)\n+\tpltn_size = PLT_BTI_PAC_SMALL_ENTRY_SIZE;\n+      else\n+\tpltn_size = PLT_PAC_SMALL_ENTRY_SIZE;\n+    }\n+  else if (elf_aarch64_tdata (plt->owner)->plt_type == PLT_BTI)\n     {\n       plt0_size = PLT_BTI_ENTRY_SIZE;\n       if (elf_elfheader (plt->owner)->e_type == ET_EXEC)\n \tpltn_size = PLT_BTI_SMALL_ENTRY_SIZE;\n     }\n+  else if (elf_aarch64_tdata (plt->owner)->plt_type == PLT_PAC)\n+    {\n+      plt0_size = PLT_PAC_ENTRY_SIZE;\n+      pltn_size = PLT_PAC_SMALL_ENTRY_SIZE;\n+    }\n+\n   return plt->vma + plt0_size + i * pltn_size;\n }\n "
    },
    {
      "sha": "95ea5556efae899213c63f32bf3da01acf0ebdf9",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -1,3 +1,9 @@\n+2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* readelf.c (get_aarch64_dynamic_type): Add case for\n+\tDT_AARCH64_PAC_PLT.\n+\t(dynamic_section_aarch64_val): Likewise.\n+\n 2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n \t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n "
    },
    {
      "sha": "5a9d9ff433d5438e073e871b9c92d307d9f279d3",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -1803,6 +1803,7 @@ get_aarch64_dynamic_type (unsigned long type)\n   switch (type)\n     {\n     case DT_AARCH64_BTI_PLT:  return \"AARCH64_BTI_PLT\";\n+    case DT_AARCH64_PAC_PLT:  return \"AARCH64_PAC_PLT\";\n     default:\n       return NULL;\n     }\n@@ -9364,6 +9365,7 @@ dynamic_section_aarch64_val (Elf_Internal_Dyn * entry)\n   switch (entry->d_tag)\n     {\n     case DT_AARCH64_BTI_PLT:\n+    case DT_AARCH64_PAC_PLT:\n       break;\n     default:\n       print_vma (entry->d_un.d_ptr, PREFIX_HEX);"
    },
    {
      "sha": "b4a0907e80fdcf020768d0806657cbb47bc24f36",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -1,3 +1,7 @@\n+2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* elf/aarch64.h (DT_AARCH64_PAC_PLT): New.\n+\n 2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n \t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n "
    },
    {
      "sha": "44665476265b8d20c59343dcbafc87766a5444c0",
      "filename": "include/elf/aarch64.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/include/elf/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/include/elf/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/aarch64.h?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -37,6 +37,7 @@\n \t\t\t\t\t\tin the input to a link step.  */\n /* Processor specific dynamic array tags.  */\n #define DT_AARCH64_BTI_PLT\t(DT_LOPROC + 1)\n+#define DT_AARCH64_PAC_PLT\t(DT_LOPROC + 3)\n \n /* Relocation types.  */\n "
    },
    {
      "sha": "d37865b4e1b2591f6244310c6a68e8dce9d39394",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -1,3 +1,16 @@\n+2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* NEWS: Document --pac-plt.\n+\t* emultempl/aarch64elf.em (OPTION_PAC_PLT): New.\n+\t(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add pac-plt.\n+\t(PARSE_AND_LIST_ARGS_CASES): Handle OPTION_PAC_PLT.\n+\t* testsuite/ld-aarch64/aarch64-elf.exp: Add the following tests.\n+\t* testsuite/ld-aarch64/bti-pac-plt-1.d: New test.\n+\t* testsuite/ld-aarch64/bti-pac-plt-2.d: New test.\n+\t* testsuite/ld-aarch64/pac-plt-1.d: New test.\n+\t* testsuite/ld-aarch64/pac-plt-2.d: New test.\n+\t* testsuite/ld-aarch64/bti-plt-1.s: Add .ifndef directive.\n+\n 2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n \t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n "
    },
    {
      "sha": "597845a351f3dac787579cf43b4d9056ea373bb3",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -14,6 +14,8 @@ Changes in 2.33:\n   on output while warning about missing GNU_PROPERTY_AARCH64_FEATURE_1_BTI\n   on inputs and use PLTs protected with BTI.\n \n+* Add --pac-plt for AArch64 to pick PAC enabled PLTs.\n+\n Changes in 2.32:\n \n * Report property change in linker map file when merging GNU properties."
    },
    {
      "sha": "bfe8d1b179230a6ba32be42b2105180f4cd72446",
      "filename": "ld/emultempl/aarch64elf.em",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/emultempl/aarch64elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/emultempl/aarch64elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/aarch64elf.em?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -373,6 +373,7 @@ PARSE_AND_LIST_PROLOGUE='\n #define OPTION_FIX_ERRATUM_843419\t314\n #define OPTION_NO_APPLY_DYNAMIC_RELOCS\t315\n #define OPTION_FORCE_BTI\t\t316\n+#define OPTION_PAC_PLT\t\t\t317\n '\n \n PARSE_AND_LIST_SHORTOPTS=p\n@@ -387,6 +388,7 @@ PARSE_AND_LIST_LONGOPTS='\n   { \"fix-cortex-a53-843419\", no_argument, NULL, OPTION_FIX_ERRATUM_843419},\n   { \"no-apply-dynamic-relocs\", no_argument, NULL, OPTION_NO_APPLY_DYNAMIC_RELOCS},\n   { \"force-bti\", no_argument, NULL, OPTION_FORCE_BTI},\n+  { \"pac-plt\", no_argument, NULL, OPTION_PAC_PLT},\n '\n \n PARSE_AND_LIST_OPTIONS='\n@@ -408,6 +410,7 @@ PARSE_AND_LIST_OPTIONS='\n   fprintf (file, _(\"  --fix-cortex-a53-843419      Fix erratum 843419\\n\"));\n   fprintf (file, _(\"  --no-apply-dynamic-relocs    Do not apply link-time values for dynamic relocations\\n\"));\n   fprintf (file, _(\"  --force-bti                  Turn on Branch Target Identification mechanism and generate PLTs with BTI. Generate warnings for missing BTI on inputs\\n\"));\n+  fprintf (file, _(\"  --pac-plt                    Protect PLTs with Pointer Authentication.\\n\"));\n '\n \n PARSE_AND_LIST_ARGS_CASES='\n@@ -444,6 +447,10 @@ PARSE_AND_LIST_ARGS_CASES='\n       bti_type = BTI_WARN;\n       break;\n \n+    case OPTION_PAC_PLT:\n+      plt_type |= PLT_PAC;\n+      break;\n+\n     case OPTION_STUBGROUP_SIZE:\n       {\n \tconst char *end;"
    },
    {
      "sha": "12c2d97d53770e886bb913e19aef996a64fc1805",
      "filename": "ld/testsuite/ld-aarch64/aarch64-elf.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/testsuite/ld-aarch64/aarch64-elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/testsuite/ld-aarch64/aarch64-elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/aarch64-elf.exp?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -402,3 +402,8 @@ run_dump_test \"bti-plt-4\"\n run_dump_test \"bti-plt-5\"\n run_dump_test \"bti-plt-6\"\n run_dump_test \"bti-plt-7\"\n+\n+run_dump_test \"pac-plt-1\"\n+run_dump_test \"pac-plt-2\"\n+run_dump_test \"bti-pac-plt-1\"\n+run_dump_test \"bti-pac-plt-2\""
    },
    {
      "sha": "8d780ca8a49ace7b0631a9239f3b7368d693b238",
      "filename": "ld/testsuite/ld-aarch64/bti-pac-plt-1.d",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/testsuite/ld-aarch64/bti-pac-plt-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/testsuite/ld-aarch64/bti-pac-plt-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/bti-pac-plt-1.d?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -0,0 +1,34 @@\n+#source: bti-plt-1.s\n+#as: -mabi=lp64\n+#ld: -shared --force-bti --pac-plt -T bti-plt.ld\n+#objdump: -dr -j .plt\n+\n+[^:]*: *file format elf64-.*aarch64\n+\n+Disassembly of section \\.plt:\n+\n+[0-9a-f]+ <.*>:\n+.*:\td503245f \tbti\tc\n+.*:\ta9bf7bf0 \tstp\tx16, x30, \\[sp, #-16\\]!\n+.*:\t90000090 \tadrp\tx16, 28000 <_GLOBAL_OFFSET_TABLE_>\n+.*:\tf9400e11 \tldr\tx17, \\[x16, #24\\]\n+.*:\t91006210 \tadd\tx16, x16, #0x18\n+.*:\td503219f \tautia1716\n+.*:\td61f0220 \tbr\tx17\n+.*:\td503201f \tnop\n+.*:\td503201f \tnop\n+.*:\td503201f \tnop\n+\n+[0-9a-f]+ <.*>:\n+.*:\t90000090 \tadrp\tx16, 28000 <_GLOBAL_OFFSET_TABLE_>\n+.*:\tf9401211 \tldr\tx17, \\[x16, #32\\]\n+.*:\t91008210 \tadd\tx16, x16, #0x20\n+.*:\td503219f \tautia1716\n+.*:\td61f0220 \tbr\tx17\n+\n+[0-9a-f]+ <.*>:\n+.*:\t90000090 \tadrp\tx16, 28000 <_GLOBAL_OFFSET_TABLE_>\n+.*:\tf9401611 \tldr\tx17, \\[x16, #40\\]\n+.*:\t9100a210 \tadd\tx16, x16, #0x28\n+.*:\td503219f \tautia1716\n+.*:\td61f0220 \tbr\tx17"
    },
    {
      "sha": "d1264ea000ad27c8623c4a348c0ec306f040f444",
      "filename": "ld/testsuite/ld-aarch64/bti-pac-plt-2.d",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/testsuite/ld-aarch64/bti-pac-plt-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/testsuite/ld-aarch64/bti-pac-plt-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/bti-pac-plt-2.d?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -0,0 +1,36 @@\n+#source: bti-plt-1.s\n+#as: -mabi=lp64\n+#ld: --force-bti --pac-plt -e _start -T bti-plt.ld -L./tmpdir -lbti-plt-so\n+#objdump: -dr -j .plt\n+\n+[^:]*: *file format elf64-.*aarch64\n+\n+Disassembly of section \\.plt:\n+\n+[0-9]+ <.*>:\n+.*:\td503245f \tbti\tc\n+.*:\ta9bf7bf0 \tstp\tx16, x30, \\[sp, #-16\\]!\n+.*:\t90000090 \tadrp\tx16, 28000 <_GLOBAL_OFFSET_TABLE_>\n+.*:\tf9400e11 \tldr\tx17, \\[x16, #24\\]\n+.*:\t91006210 \tadd\tx16, x16, #0x18\n+.*:\td503219f \tautia1716\n+.*:\td61f0220 \tbr\tx17\n+.*:\td503201f \tnop\n+.*:\td503201f \tnop\n+.*:\td503201f \tnop\n+\n+[0-9]+ <.*>:\n+.*:\td503245f \tbti\tc\n+.*:\t90000090 \tadrp\tx16, 28000 <_GLOBAL_OFFSET_TABLE_>\n+.*:\tf9401211 \tldr\tx17, \\[x16, #32\\]\n+.*:\t91008210 \tadd\tx16, x16, #0x20\n+.*:\td503219f \tautia1716\n+.*:\td61f0220 \tbr\tx17\n+\n+[0-9]+ <.*>:\n+.*:\td503245f \tbti\tc\n+.*:\t90000090 \tadrp\tx16, 28000 <_GLOBAL_OFFSET_TABLE_>\n+.*:\tf9401611 \tldr\tx17, \\[x16, #40\\]\n+.*:\t9100a210 \tadd\tx16, x16, #0x28\n+.*:\td503219f \tautia1716\n+.*:\td61f0220 \tbr\tx17"
    },
    {
      "sha": "b798ca4e8ceeb192f6cf67a21be2eb5337a70fee",
      "filename": "ld/testsuite/ld-aarch64/bti-plt-1.s",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/testsuite/ld-aarch64/bti-plt-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/testsuite/ld-aarch64/bti-plt-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/bti-plt-1.s?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -4,6 +4,7 @@\n _start:\n \tbl foo\n \tbl bar\n+.ifndef __guard_property_bti__\n \t.section \".note.gnu.property\", \"a\"\n \t.p2align 3\n \t.long 1f - 0f\t\t/* name length */\n@@ -19,3 +20,4 @@ _start:\n 4:\n \t.p2align 3\n 5:\n+.endif"
    },
    {
      "sha": "47be9491b6ab1f49c3f57a390671627e3c2a9eca",
      "filename": "ld/testsuite/ld-aarch64/pac-plt-1.d",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/testsuite/ld-aarch64/pac-plt-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/testsuite/ld-aarch64/pac-plt-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/pac-plt-1.d?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -0,0 +1,33 @@\n+#source: bti-plt-1.s\n+#as: -mabi=lp64 --defsym __guard_property_bti__=1\n+#ld: -shared --pac-plt -T bti-plt.ld\n+#objdump: -dr -j .plt\n+\n+[^:]*: *file format elf64-.*aarch64\n+\n+Disassembly of section \\.plt:\n+\n+[0-9]+ <.*>:\n+.*:\ta9bf7bf0 \tstp\tx16, x30, \\[sp, #-16\\]!\n+.*:\t90000090 \tadrp\tx16, 28000 <_GLOBAL_OFFSET_TABLE_>\n+.*:\tf9400e11 \tldr\tx17, \\[x16, #24\\]\n+.*:\t91006210 \tadd\tx16, x16, #0x18\n+.*:\td503219f \tautia1716\n+.*:\td61f0220 \tbr\tx17\n+.*:\td503201f \tnop\n+.*:\td503201f \tnop\n+.*:\td503201f \tnop\n+\n+[0-9]+ <.*>:\n+.*:\t90000090 \tadrp\tx16, 28000 <_GLOBAL_OFFSET_TABLE_>\n+.*:\tf9401211 \tldr\tx17, \\[x16, #32\\]\n+.*:\t91008210 \tadd\tx16, x16, #0x20\n+.*:\td503219f \tautia1716\n+.*:\td61f0220 \tbr\tx17\n+\n+[0-9]+ <.*>:\n+.*:\t90000090 \tadrp\tx16, 28000 <_GLOBAL_OFFSET_TABLE_>\n+.*:\tf9401611 \tldr\tx17, \\[x16, #40\\]\n+.*:\t9100a210 \tadd\tx16, x16, #0x28\n+.*:\td503219f \tautia1716\n+.*:\td61f0220 \tbr\tx17"
    },
    {
      "sha": "42bfdca6218d191de846ce482f23b5f627e55034",
      "filename": "ld/testsuite/ld-aarch64/pac-plt-2.d",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/testsuite/ld-aarch64/pac-plt-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dbade7441b9f32d6ba9aa1d44da5f28c44282fa/ld/testsuite/ld-aarch64/pac-plt-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/pac-plt-2.d?ref=1dbade7441b9f32d6ba9aa1d44da5f28c44282fa",
      "patch": "@@ -0,0 +1,24 @@\n+#source: tls-desc-ie.s\n+#ld: -shared --pac-plt -T bti-plt.ld\n+#objdump: -dr -j .plt\n+#...\n+Disassembly of section .plt:\n+\n+0000000000018000 \\<.plt\\>:\n+.*:\ta9bf7bf0 \tstp\tx16, x30, \\[sp, #-16\\]!\n+.*:\t90000090 \tadrp\tx16, 28000 <_GLOBAL_OFFSET_TABLE_>\n+.*:\tf9401a11 \tldr\tx17, \\[x16, #48\\]\n+.*:\t9100c210 \tadd\tx16, x16, #0x30\n+.*:\td503219f \tautia1716\n+.*:\td61f0220 \tbr\tx17\n+.*:\td503201f \tnop\n+.*:\td503201f \tnop\n+.*:\td503201f \tnop\n+\n+\n+0000000000018024 \\<__tls_get_addr@plt\\>:\n+.*:\t90000090 \tadrp\tx16, 28000 <_GLOBAL_OFFSET_TABLE_>\n+.*:\tf9401e11 \tldr\tx17, \\[x16, #56\\]\n+.*:\t9100e210 \tadd\tx16, x16, #0x38\n+.*:\td503219f \tautia1716\n+.*:\td61f0220 \tbr\tx17"
    }
  ]
}