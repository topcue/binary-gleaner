{
  "sha": "eed70b1c374ac4155f5d18b87a5a6a74581f2076",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWVkNzBiMWMzNzRhYzQxNTVmNWQxOGI4N2E1YTZhNzQ1ODFmMjA3Ng==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:02Z"
    },
    "message": "Split out eval_op_repeat\n\nThis splits BINOP_REPEAT into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (eval_op_repeat): New function.\n\t(evaluate_subexp_standard): Use it.",
    "tree": {
      "sha": "d6a32e816366f74f671223cb5021cd4624f92570",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d6a32e816366f74f671223cb5021cd4624f92570"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eed70b1c374ac4155f5d18b87a5a6a74581f2076",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eed70b1c374ac4155f5d18b87a5a6a74581f2076",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eed70b1c374ac4155f5d18b87a5a6a74581f2076",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eed70b1c374ac4155f5d18b87a5a6a74581f2076/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "60cdd4871ac9c9e0118cd47c7fce36cd5163404a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60cdd4871ac9c9e0118cd47c7fce36cd5163404a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/60cdd4871ac9c9e0118cd47c7fce36cd5163404a"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 28,
    "deletions": 13
  },
  "files": [
    {
      "sha": "1da2a5c7570bc0d13aa55f48e6a2ea9dbd23813d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eed70b1c374ac4155f5d18b87a5a6a74581f2076/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eed70b1c374ac4155f5d18b87a5a6a74581f2076/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=eed70b1c374ac4155f5d18b87a5a6a74581f2076",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (eval_op_repeat): New function.\n+\t(evaluate_subexp_standard): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (eval_op_leq): New function."
    },
    {
      "sha": "4ac323e4078017a2970e1257a97e09d9325af3f8",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 23,
      "deletions": 13,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eed70b1c374ac4155f5d18b87a5a6a74581f2076/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eed70b1c374ac4155f5d18b87a5a6a74581f2076/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=eed70b1c374ac4155f5d18b87a5a6a74581f2076",
      "patch": "@@ -1729,6 +1729,28 @@ eval_op_leq (struct type *expect_type, struct expression *exp,\n     }\n }\n \n+/* A helper function for BINOP_REPEAT.  */\n+\n+static struct value *\n+eval_op_repeat (struct type *expect_type, struct expression *exp,\n+\t\tenum noside noside,\n+\t\tstruct value *arg1, struct value *arg2)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+  struct type *type = check_typedef (value_type (arg2));\n+  if (type->code () != TYPE_CODE_INT\n+      && type->code () != TYPE_CODE_ENUM)\n+    error (_(\"Non-integral right operand for \\\"@\\\" operator.\"));\n+  if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+    {\n+      return allocate_repeat_value (value_type (arg1),\n+\t\t\t\t    longest_to_int (value_as_long (arg2)));\n+    }\n+  else\n+    return value_repeat (arg1, longest_to_int (value_as_long (arg2)));\n+}\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,\n@@ -2570,19 +2592,7 @@ evaluate_subexp_standard (struct type *expect_type,\n     case BINOP_REPEAT:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);\n       arg2 = evaluate_subexp (nullptr, exp, pos, noside);\n-      if (noside == EVAL_SKIP)\n-\treturn eval_skip_value (exp);\n-      type = check_typedef (value_type (arg2));\n-      if (type->code () != TYPE_CODE_INT\n-\t  && type->code () != TYPE_CODE_ENUM)\n-\terror (_(\"Non-integral right operand for \\\"@\\\" operator.\"));\n-      if (noside == EVAL_AVOID_SIDE_EFFECTS)\n-\t{\n-\t  return allocate_repeat_value (value_type (arg1),\n-\t\t\t\t     longest_to_int (value_as_long (arg2)));\n-\t}\n-      else\n-\treturn value_repeat (arg1, longest_to_int (value_as_long (arg2)));\n+      return eval_op_repeat (expect_type, exp, noside, arg1, arg2);\n \n     case BINOP_COMMA:\n       evaluate_subexp (nullptr, exp, pos, noside);"
    }
  ]
}