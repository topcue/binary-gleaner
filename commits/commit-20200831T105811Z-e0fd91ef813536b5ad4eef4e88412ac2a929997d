{
  "sha": "e0fd91ef813536b5ad4eef4e88412ac2a929997d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTBmZDkxZWY4MTM1MzZiNWFkNGVlZjRlODg0MTJhYzJhOTI5OTk3ZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-31T06:08:25Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-31T10:58:11Z"
    },
    "message": "PR26472, PR26473, PR26474 UBSAN: tc-mips.c shift left UB\n\n\tPR 26472\n\tPR 26473\n\tPR 26474\n\t* config/tc-mips.c (operand_reg_mask): Shift 1u left.\n\t(load_register): Shift 0xffffU left.",
    "tree": {
      "sha": "951f00bade324573f191734fe1bcc21b29e7e446",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/951f00bade324573f191734fe1bcc21b29e7e446"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e0fd91ef813536b5ad4eef4e88412ac2a929997d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e0fd91ef813536b5ad4eef4e88412ac2a929997d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e0fd91ef813536b5ad4eef4e88412ac2a929997d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e0fd91ef813536b5ad4eef4e88412ac2a929997d/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "46021a61e42fcda467a7092b03b65095c57f2bc5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46021a61e42fcda467a7092b03b65095c57f2bc5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/46021a61e42fcda467a7092b03b65095c57f2bc5"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 17,
    "deletions": 9
  },
  "files": [
    {
      "sha": "3d696a9d75b51a58dd65584c6d3f03a08a7ebdef",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e0fd91ef813536b5ad4eef4e88412ac2a929997d/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e0fd91ef813536b5ad4eef4e88412ac2a929997d/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=e0fd91ef813536b5ad4eef4e88412ac2a929997d",
      "patch": "@@ -1,3 +1,11 @@\n+2020-08-31  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26472\n+\tPR 26473\n+\tPR 26474\n+\t* config/tc-mips.c (operand_reg_mask): Shift 1u left.\n+\t(load_register): Shift 0xffffU left.\n+\n 2020-08-31  Alan Modra  <amodra@gmail.com>\n \n \tPR 26471"
    },
    {
      "sha": "7d0d5a1991845bef354ac01cfbe96df5968787ef",
      "filename": "gas/config/tc-mips.c",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e0fd91ef813536b5ad4eef4e88412ac2a929997d/gas/config/tc-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e0fd91ef813536b5ad4eef4e88412ac2a929997d/gas/config/tc-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mips.c?ref=e0fd91ef813536b5ad4eef4e88412ac2a929997d",
      "patch": "@@ -4656,7 +4656,7 @@ operand_reg_mask (const struct mips_cl_insn *insn,\n \tif (!(type_mask & (1 << reg_op->reg_type)))\n \t  return 0;\n \tuval = insn_extract_operand (insn, operand);\n-\treturn 1 << mips_decode_reg_operand (reg_op, uval);\n+\treturn 1u << mips_decode_reg_operand (reg_op, uval);\n       }\n \n     case OP_REG_PAIR:\n@@ -4667,28 +4667,28 @@ operand_reg_mask (const struct mips_cl_insn *insn,\n \tif (!(type_mask & (1 << pair_op->reg_type)))\n \t  return 0;\n \tuval = insn_extract_operand (insn, operand);\n-\treturn (1 << pair_op->reg1_map[uval]) | (1 << pair_op->reg2_map[uval]);\n+\treturn (1u << pair_op->reg1_map[uval]) | (1u << pair_op->reg2_map[uval]);\n       }\n \n     case OP_CLO_CLZ_DEST:\n       if (!(type_mask & (1 << OP_REG_GP)))\n \treturn 0;\n       uval = insn_extract_operand (insn, operand);\n-      return (1 << (uval & 31)) | (1 << (uval >> 5));\n+      return (1u << (uval & 31)) | (1u << (uval >> 5));\n \n     case OP_SAME_RS_RT:\n       if (!(type_mask & (1 << OP_REG_GP)))\n \treturn 0;\n       uval = insn_extract_operand (insn, operand);\n       gas_assert ((uval & 31) == (uval >> 5));\n-      return 1 << (uval & 31);\n+      return 1u << (uval & 31);\n \n     case OP_CHECK_PREV:\n     case OP_NON_ZERO_REG:\n       if (!(type_mask & (1 << OP_REG_GP)))\n \treturn 0;\n       uval = insn_extract_operand (insn, operand);\n-      return 1 << (uval & 31);\n+      return 1u << (uval & 31);\n \n     case OP_LWM_SWM_LIST:\n       abort ();\n@@ -4703,12 +4703,12 @@ operand_reg_mask (const struct mips_cl_insn *insn,\n       vsel = uval >> 5;\n       if ((vsel & 0x18) == 0x18)\n \treturn 0;\n-      return 1 << (uval & 31);\n+      return 1u << (uval & 31);\n \n     case OP_REG_INDEX:\n       if (!(type_mask & (1 << OP_REG_GP)))\n \treturn 0;\n-      return 1 << insn_extract_operand (insn, operand);\n+      return 1u << insn_extract_operand (insn, operand);\n     }\n   abort ();\n }\n@@ -9564,11 +9564,11 @@ load_register (int reg, expressionS *ep, int dbl)\n \t  if (shift < 32)\n \t    {\n \t      himask = 0xffff >> (32 - shift);\n-\t      lomask = (0xffff << shift) & 0xffffffff;\n+\t      lomask = (0xffffU << shift) & 0xffffffff;\n \t    }\n \t  else\n \t    {\n-\t      himask = 0xffff << (shift - 32);\n+\t      himask = 0xffffU << (shift - 32);\n \t      lomask = 0;\n \t    }\n \t  if ((hi32.X_add_number & ~(offsetT) himask) == 0"
    }
  ]
}