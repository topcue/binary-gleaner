{
  "sha": "b6fb30eda72b7fc3a6214ed2787f80971f66810d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjZmYjMwZWRhNzJiN2ZjM2E2MjE0ZWQyNzg3ZjgwOTcxZjY2ODEwZA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-31T12:30:59Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-31T12:30:59Z"
    },
    "message": "gdbsupport: re-indent ptrace.m4\n\nFor some reason, autoupdate isn't able to grok ptrace.m4:\n\n    $ autoupdate ptrace.m4\n    /usr/bin/m4:/tmp/auYjuodw/input.m4:171: ERROR: end of file in string\n    autoupdate: /usr/bin/m4 failed with exit status: 1\n\nHonestly, I'm unable to grok it either.  This patch re-indents it in a\nway that I think is easier to read.  With this patch applied, autoupdate\nbecomes able to parse ptrace.m4, but I chose to keep this re-indent in a\npatch of its own.\n\nAll the changes in generated configure files consist of insignificant\nwhitespace changes.\n\ngdb/ChangeLog:\n\n\t* configure: Re-generate.\n\ngdbserver/ChangeLog:\n\n\t* configure: Re-generate.\n\ngdbsupport/ChangeLog:\n\n\t* configure: Re-generate.\n\t* ptrace.m4: Re-indent.\n\nChange-Id: Ie2afab09fecc8b6d0cccccb47ac9756f3843881e",
    "tree": {
      "sha": "3f0dbaac46f81217595a10969bfa4711846e2553",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3f0dbaac46f81217595a10969bfa4711846e2553"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b6fb30eda72b7fc3a6214ed2787f80971f66810d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6fb30eda72b7fc3a6214ed2787f80971f66810d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b6fb30eda72b7fc3a6214ed2787f80971f66810d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6fb30eda72b7fc3a6214ed2787f80971f66810d/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "294f26974867eca61ae6f98ede40ee20b6b3683b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/294f26974867eca61ae6f98ede40ee20b6b3683b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/294f26974867eca61ae6f98ede40ee20b6b3683b"
    }
  ],
  "stats": {
    "total": 273,
    "additions": 154,
    "deletions": 119
  },
  "files": [
    {
      "sha": "cd46bb82e0ad8703627877c8983511faf6f4df60",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b6fb30eda72b7fc3a6214ed2787f80971f66810d",
      "patch": "@@ -1,3 +1,7 @@\n+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* configure: Re-generate.\n+\n 2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* acinclude.m4: Modernize."
    },
    {
      "sha": "4816b98919a07e354f9c0854c328201bc6376992",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 28,
      "deletions": 27,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=b6fb30eda72b7fc3a6214ed2787f80971f66810d",
      "patch": "@@ -15193,25 +15193,29 @@ if ac_fn_c_try_compile \"$LINENO\"; then :\n   gdb_cv_func_ptrace_ret='int'\n else\n   gdb_cv_func_ptrace_ret='long'\n+\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_func_ptrace_ret\" >&5\n $as_echo \"$gdb_cv_func_ptrace_ret\" >&6; }\n \n+\n cat >>confdefs.h <<_ACEOF\n #define PTRACE_TYPE_RET $gdb_cv_func_ptrace_ret\n _ACEOF\n \n+\n # Check argument types.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking types of arguments for ptrace\" >&5\n $as_echo_n \"checking types of arguments for ptrace... \" >&6; }\n if ${gdb_cv_func_ptrace_args+:} false; then :\n   $as_echo_n \"(cached) \" >&6\n else\n-\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n $gdb_ptrace_headers\n@@ -15226,64 +15230,61 @@ _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n   gdb_cv_func_ptrace_args='enum __ptrace_request,int,long,long'\n else\n-\n-for gdb_arg1 in 'int' 'long'; do\n- for gdb_arg2 in 'pid_t' 'int' 'long'; do\n-  for gdb_arg3 in 'int *' 'caddr_t' 'int' 'long' 'void *'; do\n-   for gdb_arg4 in 'int' 'long' 'void *'; do\n-     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+  for gdb_arg1 in 'int' 'long'; do\n+\tfor gdb_arg2 in 'pid_t' 'int' 'long'; do\n+\t  for gdb_arg3 in 'int *' 'caddr_t' 'int' 'long' 'void *'; do\n+\t    for gdb_arg4 in 'int' 'long' 'void *'; do\n+\t      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n $gdb_ptrace_headers\n int\n main ()\n {\n-\n-extern $gdb_cv_func_ptrace_ret\n-  ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4);\n-\n+extern $gdb_cv_func_ptrace_ret ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4);\n   ;\n   return 0;\n }\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n   gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4\";\n-    break 4;\n+\t\t break 4;\n+\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-    for gdb_arg5 in 'int *' 'int' 'long'; do\n-     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+\n+\t      for gdb_arg5 in 'int *' 'int' 'long'; do\n+\t\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n $gdb_ptrace_headers\n int\n main ()\n {\n-\n-extern $gdb_cv_func_ptrace_ret\n-  ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4, $gdb_arg5);\n-\n+extern $gdb_cv_func_ptrace_ret ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4, $gdb_arg5);\n   ;\n   return 0;\n }\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n+  gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4,$gdb_arg5\";\n+\t\t   break 5;\n \n-gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4,$gdb_arg5\";\n-    break 5;\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-    done\n-   done\n-  done\n- done\n-done\n-# Provide a safe default value.\n-: ${gdb_cv_func_ptrace_args='int,int,long,long'}\n+\t      done\n+\t    done\n+\t  done\n+\tdone\n+      done\n+      # Provide a safe default value.\n+      : ${gdb_cv_func_ptrace_args='int,int,long,long'}\n \n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_func_ptrace_args\" >&5\n $as_echo \"$gdb_cv_func_ptrace_args\" >&6; }\n+\n ac_save_IFS=$IFS; IFS=','\n set dummy `echo \"$gdb_cv_func_ptrace_args\" | sed 's/\\*/\\*/g'`\n IFS=$ac_save_IFS"
    },
    {
      "sha": "bd4ddf77cd17820f34116dbd010d1c8e6be1771f",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=b6fb30eda72b7fc3a6214ed2787f80971f66810d",
      "patch": "@@ -1,3 +1,7 @@\n+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* configure: Re-generate.\n+\n 2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* configure.ac: Modernize."
    },
    {
      "sha": "968642124b566eef2138df0f1f1cf37b7e47b049",
      "filename": "gdbserver/configure",
      "status": "modified",
      "additions": 28,
      "deletions": 27,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdbserver/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdbserver/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/configure?ref=b6fb30eda72b7fc3a6214ed2787f80971f66810d",
      "patch": "@@ -9475,25 +9475,29 @@ if ac_fn_c_try_compile \"$LINENO\"; then :\n   gdb_cv_func_ptrace_ret='int'\n else\n   gdb_cv_func_ptrace_ret='long'\n+\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_func_ptrace_ret\" >&5\n $as_echo \"$gdb_cv_func_ptrace_ret\" >&6; }\n \n+\n cat >>confdefs.h <<_ACEOF\n #define PTRACE_TYPE_RET $gdb_cv_func_ptrace_ret\n _ACEOF\n \n+\n # Check argument types.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking types of arguments for ptrace\" >&5\n $as_echo_n \"checking types of arguments for ptrace... \" >&6; }\n if ${gdb_cv_func_ptrace_args+:} false; then :\n   $as_echo_n \"(cached) \" >&6\n else\n-\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n $gdb_ptrace_headers\n@@ -9508,64 +9512,61 @@ _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n   gdb_cv_func_ptrace_args='enum __ptrace_request,int,long,long'\n else\n-\n-for gdb_arg1 in 'int' 'long'; do\n- for gdb_arg2 in 'pid_t' 'int' 'long'; do\n-  for gdb_arg3 in 'int *' 'caddr_t' 'int' 'long' 'void *'; do\n-   for gdb_arg4 in 'int' 'long' 'void *'; do\n-     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+  for gdb_arg1 in 'int' 'long'; do\n+\tfor gdb_arg2 in 'pid_t' 'int' 'long'; do\n+\t  for gdb_arg3 in 'int *' 'caddr_t' 'int' 'long' 'void *'; do\n+\t    for gdb_arg4 in 'int' 'long' 'void *'; do\n+\t      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n $gdb_ptrace_headers\n int\n main ()\n {\n-\n-extern $gdb_cv_func_ptrace_ret\n-  ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4);\n-\n+extern $gdb_cv_func_ptrace_ret ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4);\n   ;\n   return 0;\n }\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n   gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4\";\n-    break 4;\n+\t\t break 4;\n+\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-    for gdb_arg5 in 'int *' 'int' 'long'; do\n-     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+\n+\t      for gdb_arg5 in 'int *' 'int' 'long'; do\n+\t\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n $gdb_ptrace_headers\n int\n main ()\n {\n-\n-extern $gdb_cv_func_ptrace_ret\n-  ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4, $gdb_arg5);\n-\n+extern $gdb_cv_func_ptrace_ret ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4, $gdb_arg5);\n   ;\n   return 0;\n }\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n+  gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4,$gdb_arg5\";\n+\t\t   break 5;\n \n-gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4,$gdb_arg5\";\n-    break 5;\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-    done\n-   done\n-  done\n- done\n-done\n-# Provide a safe default value.\n-: ${gdb_cv_func_ptrace_args='int,int,long,long'}\n+\t      done\n+\t    done\n+\t  done\n+\tdone\n+      done\n+      # Provide a safe default value.\n+      : ${gdb_cv_func_ptrace_args='int,int,long,long'}\n \n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_func_ptrace_args\" >&5\n $as_echo \"$gdb_cv_func_ptrace_args\" >&6; }\n+\n ac_save_IFS=$IFS; IFS=','\n set dummy `echo \"$gdb_cv_func_ptrace_args\" | sed 's/\\*/\\*/g'`\n IFS=$ac_save_IFS"
    },
    {
      "sha": "dbdb2ca9531cb1ac9f175ef8a81c22ecc1804edf",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=b6fb30eda72b7fc3a6214ed2787f80971f66810d",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* configure: Re-generate.\n+\t* ptrace.m4: Re-indent.\n+\n 2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* aclocal.m4: Re-generate."
    },
    {
      "sha": "e51c7b59688330d6b13ed23cbc58e0a71a704106",
      "filename": "gdbsupport/configure",
      "status": "modified",
      "additions": 28,
      "deletions": 27,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdbsupport/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdbsupport/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/configure?ref=b6fb30eda72b7fc3a6214ed2787f80971f66810d",
      "patch": "@@ -10044,25 +10044,29 @@ if ac_fn_c_try_compile \"$LINENO\"; then :\n   gdb_cv_func_ptrace_ret='int'\n else\n   gdb_cv_func_ptrace_ret='long'\n+\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_func_ptrace_ret\" >&5\n $as_echo \"$gdb_cv_func_ptrace_ret\" >&6; }\n \n+\n cat >>confdefs.h <<_ACEOF\n #define PTRACE_TYPE_RET $gdb_cv_func_ptrace_ret\n _ACEOF\n \n+\n # Check argument types.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking types of arguments for ptrace\" >&5\n $as_echo_n \"checking types of arguments for ptrace... \" >&6; }\n if ${gdb_cv_func_ptrace_args+:} false; then :\n   $as_echo_n \"(cached) \" >&6\n else\n-\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n $gdb_ptrace_headers\n@@ -10077,64 +10081,61 @@ _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n   gdb_cv_func_ptrace_args='enum __ptrace_request,int,long,long'\n else\n-\n-for gdb_arg1 in 'int' 'long'; do\n- for gdb_arg2 in 'pid_t' 'int' 'long'; do\n-  for gdb_arg3 in 'int *' 'caddr_t' 'int' 'long' 'void *'; do\n-   for gdb_arg4 in 'int' 'long' 'void *'; do\n-     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+  for gdb_arg1 in 'int' 'long'; do\n+\tfor gdb_arg2 in 'pid_t' 'int' 'long'; do\n+\t  for gdb_arg3 in 'int *' 'caddr_t' 'int' 'long' 'void *'; do\n+\t    for gdb_arg4 in 'int' 'long' 'void *'; do\n+\t      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n $gdb_ptrace_headers\n int\n main ()\n {\n-\n-extern $gdb_cv_func_ptrace_ret\n-  ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4);\n-\n+extern $gdb_cv_func_ptrace_ret ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4);\n   ;\n   return 0;\n }\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n   gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4\";\n-    break 4;\n+\t\t break 4;\n+\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-    for gdb_arg5 in 'int *' 'int' 'long'; do\n-     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+\n+\t      for gdb_arg5 in 'int *' 'int' 'long'; do\n+\t\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n $gdb_ptrace_headers\n int\n main ()\n {\n-\n-extern $gdb_cv_func_ptrace_ret\n-  ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4, $gdb_arg5);\n-\n+extern $gdb_cv_func_ptrace_ret ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4, $gdb_arg5);\n   ;\n   return 0;\n }\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n+  gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4,$gdb_arg5\";\n+\t\t   break 5;\n \n-gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4,$gdb_arg5\";\n-    break 5;\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-    done\n-   done\n-  done\n- done\n-done\n-# Provide a safe default value.\n-: ${gdb_cv_func_ptrace_args='int,int,long,long'}\n+\t      done\n+\t    done\n+\t  done\n+\tdone\n+      done\n+      # Provide a safe default value.\n+      : ${gdb_cv_func_ptrace_args='int,int,long,long'}\n \n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_func_ptrace_args\" >&5\n $as_echo \"$gdb_cv_func_ptrace_args\" >&6; }\n+\n ac_save_IFS=$IFS; IFS=','\n set dummy `echo \"$gdb_cv_func_ptrace_args\" | sed 's/\\*/\\*/g'`\n IFS=$ac_save_IFS"
    },
    {
      "sha": "57ed80260ac01ffd7efaa2748424cb328d72d26d",
      "filename": "gdbsupport/ptrace.m4",
      "status": "modified",
      "additions": 57,
      "deletions": 38,
      "changes": 95,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdbsupport/ptrace.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6fb30eda72b7fc3a6214ed2787f80971f66810d/gdbsupport/ptrace.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ptrace.m4?ref=b6fb30eda72b7fc3a6214ed2787f80971f66810d",
      "patch": "@@ -34,45 +34,64 @@ gdb_ptrace_headers='\n \n # Check return type.  Varargs (used on GNU/Linux) conflict with the\n # empty argument list, so check for that explicitly.\n-AC_CACHE_CHECK([return type of ptrace], gdb_cv_func_ptrace_ret,\n-  AC_TRY_COMPILE($gdb_ptrace_headers,\n-    [extern long ptrace (enum __ptrace_request, ...);],\n-    gdb_cv_func_ptrace_ret='long',\n-    AC_TRY_COMPILE($gdb_ptrace_headers,\n-      [extern int ptrace ();],\n-      gdb_cv_func_ptrace_ret='int',\n-      gdb_cv_func_ptrace_ret='long')))\n-AC_DEFINE_UNQUOTED(PTRACE_TYPE_RET, $gdb_cv_func_ptrace_ret,\n-  [Define as the return type of ptrace.])\n+AC_CACHE_CHECK(\n+  [return type of ptrace],\n+  [gdb_cv_func_ptrace_ret],\n+  [AC_TRY_COMPILE(\n+     [$gdb_ptrace_headers],\n+     [extern long ptrace (enum __ptrace_request, ...);],\n+     [gdb_cv_func_ptrace_ret='long'],\n+     [AC_TRY_COMPILE(\n+\t[$gdb_ptrace_headers],\n+\t[extern int ptrace ();],\n+\t[gdb_cv_func_ptrace_ret='int'],\n+\t[gdb_cv_func_ptrace_ret='long']\n+      )]\n+   )]\n+)\n+\n+AC_DEFINE_UNQUOTED(\n+  [PTRACE_TYPE_RET],\n+  [$gdb_cv_func_ptrace_ret],\n+  [Define as the return type of ptrace.]\n+)\n+\n # Check argument types.\n-AC_CACHE_CHECK([types of arguments for ptrace], gdb_cv_func_ptrace_args, [\n-  AC_TRY_COMPILE($gdb_ptrace_headers,\n-    [extern long ptrace (enum __ptrace_request, ...);],\n-    [gdb_cv_func_ptrace_args='enum __ptrace_request,int,long,long'],[\n-for gdb_arg1 in 'int' 'long'; do\n- for gdb_arg2 in 'pid_t' 'int' 'long'; do\n-  for gdb_arg3 in 'int *' 'caddr_t' 'int' 'long' 'void *'; do\n-   for gdb_arg4 in 'int' 'long' 'void *'; do\n-     AC_TRY_COMPILE($gdb_ptrace_headers, [\n-extern $gdb_cv_func_ptrace_ret\n-  ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4);\n-], [gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4\";\n-    break 4;])\n-    for gdb_arg5 in 'int *' 'int' 'long'; do\n-     AC_TRY_COMPILE($gdb_ptrace_headers, [\n-extern $gdb_cv_func_ptrace_ret\n-  ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4, $gdb_arg5);\n-], [\n-gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4,$gdb_arg5\";\n-    break 5;])\n-    done\n-   done\n-  done\n- done\n-done\n-# Provide a safe default value.\n-: ${gdb_cv_func_ptrace_args='int,int,long,long'}\n-])])\n+AC_CACHE_CHECK(\n+  [types of arguments for ptrace],\n+  [gdb_cv_func_ptrace_args],\n+  [AC_TRY_COMPILE(\n+     [$gdb_ptrace_headers],\n+     [extern long ptrace (enum __ptrace_request, ...);],\n+     [gdb_cv_func_ptrace_args='enum __ptrace_request,int,long,long'],\n+     [for gdb_arg1 in 'int' 'long'; do\n+\tfor gdb_arg2 in 'pid_t' 'int' 'long'; do\n+\t  for gdb_arg3 in 'int *' 'caddr_t' 'int' 'long' 'void *'; do\n+\t    for gdb_arg4 in 'int' 'long' 'void *'; do\n+\t      AC_TRY_COMPILE(\n+\t\t[$gdb_ptrace_headers],\n+\t\t[extern $gdb_cv_func_ptrace_ret ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4);],\n+\t\t[gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4\";\n+\t\t break 4;]\n+\t      )\n+\n+\t      for gdb_arg5 in 'int *' 'int' 'long'; do\n+\t\tAC_TRY_COMPILE(\n+\t\t  [$gdb_ptrace_headers],\n+\t\t  [extern $gdb_cv_func_ptrace_ret ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4, $gdb_arg5);],\n+\t\t  [gdb_cv_func_ptrace_args=\"$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4,$gdb_arg5\";\n+\t\t   break 5;]\n+\t\t)\n+\t      done\n+\t    done\n+\t  done\n+\tdone\n+      done\n+      # Provide a safe default value.\n+      : ${gdb_cv_func_ptrace_args='int,int,long,long'}]\n+   )]\n+)\n+\n ac_save_IFS=$IFS; IFS=','\n set dummy `echo \"$gdb_cv_func_ptrace_args\" | sed 's/\\*/\\*/g'`\n IFS=$ac_save_IFS"
    }
  ]
}