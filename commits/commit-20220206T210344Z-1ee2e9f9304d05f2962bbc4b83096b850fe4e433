{
  "sha": "1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
  "node_id": "C_kwDOANOeidoAKDFlZTJlOWY5MzA0ZDA1ZjI5NjJiYmM0YjgzMDk2Yjg1MGZlNGU0MzM",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-11-20T13:47:30Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2022-02-06T21:03:44Z"
    },
    "message": "gdb: remove SYMTAB_LANGUAGE macro, add getter/setter\n\nAdd a getter and a setter for a symtab's language.  Remove the\ncorresponding macro and adjust all callers.\n\nChange-Id: I9f4d840b11c19f80f39bac1bce020fdd1739e11f",
    "tree": {
      "sha": "5df392b5191f79e7193b0d53cfb03c77233abeb7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5df392b5191f79e7193b0d53cfb03c77233abeb7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5b6074611edfdd1590e8da1ca443950b47942bbb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b6074611edfdd1590e8da1ca443950b47942bbb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5b6074611edfdd1590e8da1ca443950b47942bbb"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 33,
    "deletions": 22
  },
  "files": [
    {
      "sha": "27206f97b2b0a5bd5c9232d1b9c0c42335bd291f",
      "filename": "gdb/buildsym.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/buildsym.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/buildsym.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/buildsym.c?ref=1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
      "patch": "@@ -991,7 +991,7 @@ buildsym_compunit::end_symtab_with_blockvector (struct block *static_block,\n \t we created the subfile, and we may have altered our\n \t opinion of what language it is from things we found in\n \t the symbols.  */\n-      symtab->language = subfile->language;\n+      symtab->set_language (subfile->language);\n     }\n \n   /* Make sure the filetab of main_subfile is the primary filetab of the CU.  */"
    },
    {
      "sha": "3bbd253d841333fd0bf1cb036c8e044b2c98f5f2",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
      "patch": "@@ -9477,8 +9477,8 @@ process_full_comp_unit (dwarf2_cu *cu, enum language pretend_language)\n \t compilation is from a C file generated by language preprocessors, do\n \t not set the language if it was already deduced by start_subfile.  */\n       if (!(cu->per_cu->lang == language_c\n-\t    && cust->primary_filetab ()->language != language_unknown))\n-\tcust->primary_filetab ()->language = cu->per_cu->lang;\n+\t    && cust->primary_filetab ()->language () != language_unknown))\n+\tcust->primary_filetab ()->set_language (cu->per_cu->lang);\n \n       /* GCC-4.0 has started to support -fvar-tracking.  GCC-3.x still can\n \t produce DW_AT_location with location lists but it can be possibly\n@@ -9562,8 +9562,8 @@ process_full_type_unit (dwarf2_cu *cu,\n \t     do not set the language if it was already deduced by\n \t     start_subfile.  */\n \t  if (!(cu->per_cu->lang == language_c\n-\t\t&& cust->primary_filetab ()->language != language_c))\n-\t    cust->primary_filetab ()->language = cu->per_cu->lang;\n+\t\t&& cust->primary_filetab ()->language () != language_c))\n+\t    cust->primary_filetab ()->set_language (cu->per_cu->lang);\n \t}\n     }\n   else"
    },
    {
      "sha": "acbcc0916cc57e6bf4f23be10111761b6dcf5d0e",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
      "patch": "@@ -4424,7 +4424,7 @@ add_matching_symbols_to_info (const char *name,\n \t     which we don't have debug info.  Check for a minimal symbol in\n \t     this case.  */\n \t  if (prev_len == info->result.symbols->size ()\n-\t      && elt->language == language_asm)\n+\t      && elt->language () == language_asm)\n \t    search_minsyms_for_name (info, lookup_name, pspace, elt);\n \t}\n     }"
    },
    {
      "sha": "192fafa5d02ab5ff61d002fff620a4cbf049811d",
      "filename": "gdb/mdebugread.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/mdebugread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/mdebugread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mdebugread.c?ref=1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
      "patch": "@@ -4084,10 +4084,11 @@ mdebug_expand_psymtab (legacy_psymtab *pst, struct objfile *objfile)\n \n \t  /* The proper language was already determined when building\n \t     the psymtab, use it.  */\n-\t  cust->primary_filetab ()->language = PST_PRIVATE (pst)->pst_language;\n+\t  cust->primary_filetab ()->set_language\n+\t    (PST_PRIVATE (pst)->pst_language);\n \t}\n \n-      psymtab_language = cust->primary_filetab ()->language;\n+      psymtab_language = cust->primary_filetab ()->language ();\n \n       lines = cust->primary_filetab ()->linetable ();\n "
    },
    {
      "sha": "d2447ca5007716497b7a980703340b2ef7fef35d",
      "filename": "gdb/source-cache.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/source-cache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/source-cache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source-cache.c?ref=1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
      "patch": "@@ -231,7 +231,7 @@ source_cache::ensure (struct symtab *s)\n     {\n #ifdef HAVE_SOURCE_HIGHLIGHT\n       bool already_styled = false;\n-      const char *lang_name = get_language_name (SYMTAB_LANGUAGE (s));\n+      const char *lang_name = get_language_name (s->language ());\n       if (lang_name != nullptr && use_gnu_source_highlight)\n \t{\n \t  /* The global source highlight object, or null if one was"
    },
    {
      "sha": "e99fff8852546adcd271ba87cd0571c145b407ff",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
      "patch": "@@ -722,7 +722,8 @@ info_source_command (const char *ignore, int from_tty)\n     printf_filtered (_(\"Contains %d line%s.\\n\"), (int) offsets->size (),\n \t\t     offsets->size () == 1 ? \"\" : \"s\");\n \n-  printf_filtered (_(\"Source language is %s.\\n\"), language_str (s->language));\n+  printf_filtered (_(\"Source language is %s.\\n\"),\n+\t\t   language_str (s->language ()));\n   printf_filtered (_(\"Producer is %s.\\n\"),\n \t\t   (cust->producer ()) != nullptr\n \t\t    ? cust->producer () : _(\"unknown\"));"
    },
    {
      "sha": "8d5983e64391cd101d55d0492fd86a4e978999bb",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
      "patch": "@@ -1638,7 +1638,7 @@ info_frame_command_core (struct frame_info *fi, bool selected_frame_p)\n \n   if (s)\n     printf_filtered (\" source language %s.\\n\",\n-\t\t     language_str (s->language));\n+\t\t     language_str (s->language ()));\n \n   {\n     /* Address of the argument list for this frame, or 0.  */"
    },
    {
      "sha": "1a64fc797423762178dde552fff39da31a86e052",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
      "patch": "@@ -2780,7 +2780,7 @@ allocate_symtab (struct compunit_symtab *cust, const char *filename)\n \n   symtab->filename = objfile->intern (filename);\n   symtab->fullname = NULL;\n-  symtab->language = deduce_language_from_filename (filename);\n+  symtab->set_language (deduce_language_from_filename (filename));\n \n   /* This can be very verbose with lots of headers.\n      Only print at higher debug levels.  */"
    },
    {
      "sha": "24b2915a3acc03107b236210061b9208b3c0875a",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
      "patch": "@@ -256,7 +256,7 @@ dump_symtab_1 (struct symtab *symtab, struct ui_file *outfile)\n \t\t    objfile_name (objfile),\n \t\t    host_address_to_string (objfile));\n   fprintf_filtered (outfile, \"Language: %s\\n\",\n-\t\t    language_str (symtab->language));\n+\t\t    language_str (symtab->language ()));\n \n   /* First print the line table.  */\n   l = symtab->linetable ();\n@@ -370,11 +370,11 @@ dump_symtab (struct symtab *symtab, struct ui_file *outfile)\n      because certain routines used during dump_symtab() use the current\n      language to print an image of the symbol.  We'll restore it later.\n      But use only real languages, not placeholders.  */\n-  if (symtab->language != language_unknown\n-      && symtab->language != language_auto)\n+  if (symtab->language () != language_unknown\n+      && symtab->language () != language_auto)\n     {\n       scoped_restore_current_language save_lang;\n-      set_language (symtab->language);\n+      set_language (symtab->language ());\n       dump_symtab_1 (symtab, outfile);\n     }\n   else"
    },
    {
      "sha": "65359374fef61081047c70077145301f6c093d01",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
      "patch": "@@ -407,7 +407,7 @@ compunit_language (const struct compunit_symtab *cust)\n \n /* The language of the compunit symtab is the language of its primary\n    source file.  */\n-  return SYMTAB_LANGUAGE (symtab);\n+  return symtab->language ();\n }\n \n /* See symtab.h.  */\n@@ -3710,7 +3710,7 @@ find_function_start_sal_1 (CORE_ADDR func_addr, obj_section *section,\n \n   if (funfirstline && sal.symtab != NULL\n       && (sal.symtab->compunit ()->locations_valid ()\n-\t  || SYMTAB_LANGUAGE (sal.symtab) == language_asm))\n+\t  || sal.symtab->language () == language_asm))\n     {\n       struct gdbarch *gdbarch = SYMTAB_OBJFILE (sal.symtab)->arch ();\n \n@@ -3840,7 +3840,7 @@ skip_prologue_sal (struct symtab_and_line *sal)\n      is likely to be the wrong choice.  */\n   if (sal->symtab != nullptr\n       && sal->explicit_line\n-      && SYMTAB_LANGUAGE (sal->symtab) == language_asm)\n+      && sal->symtab->language () == language_asm)\n     return;\n \n   scoped_restore_current_pspace_and_thread restore_pspace_thread;\n@@ -4023,7 +4023,7 @@ skip_prologue_using_sal (struct gdbarch *gdbarch, CORE_ADDR func_addr)\n \t The GNU assembler emits separate line notes for each instruction\n \t in a multi-instruction macro, but compilers generally will not\n \t do this.  */\n-      if (prologue_sal.symtab->language != language_asm)\n+      if (prologue_sal.symtab->language () != language_asm)\n \t{\n \t  struct linetable *linetable = prologue_sal.symtab->linetable ();\n \t  int idx = 0;"
    },
    {
      "sha": "28309695bca361890f23ba872020b1d0d537b6d0",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ee2e9f9304d05f2962bbc4b83096b850fe4e433/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=1ee2e9f9304d05f2962bbc4b83096b850fe4e433",
      "patch": "@@ -1393,6 +1393,16 @@ struct symtab\n     m_linetable = linetable;\n   }\n \n+  enum language language () const\n+  {\n+    return m_language;\n+  }\n+\n+  void set_language (enum language language)\n+  {\n+    m_language = language;\n+  }\n+\n   /* Unordered chain of all filetabs in the compunit,  with the exception\n      that the \"main\" source file is the first entry in the list.  */\n \n@@ -1413,7 +1423,7 @@ struct symtab\n \n   /* Language of this source file.  */\n \n-  enum language language;\n+  enum language m_language;\n \n   /* Full name of file as found by searching the source path.\n      NULL if not yet known.  */\n@@ -1425,7 +1435,6 @@ struct symtab\n \n using symtab_range = next_range<symtab>;\n \n-#define SYMTAB_LANGUAGE(symtab) ((symtab)->language)\n #define SYMTAB_BLOCKVECTOR(symtab) \\\n   (symtab->compunit ()->blockvector ())\n #define SYMTAB_OBJFILE(symtab) \\"
    }
  ]
}