{
  "sha": "0fe69a94d4c4793d7247442e0611e5d3b8f542f5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGZlNjlhOTRkNGM0NzkzZDcyNDc0NDJlMDYxMWU1ZDNiOGY1NDJmNQ==",
  "commit": {
    "author": {
      "name": "Markus Metzger",
      "email": "markus.t.metzger@intel.com",
      "date": "2020-12-04T09:29:06Z"
    },
    "committer": {
      "name": "Markus Metzger",
      "email": "markus.t.metzger@intel.com",
      "date": "2020-12-21T08:00:28Z"
    },
    "message": "testsuite, gdb.btrace: fix 32-bit PIE false positives\n\nFor 32-bit position independent executables, GCC generates an extra call to\n\n    __x86.get_pc_thunk.<reg>\n\nwhich appears in the function call history.  It is correct to appear there\nbut this confuses the tests, which check for an expected sequence of\nfunctions.\n\nBuild with nopie to avoid this complication.\n\ngdb/testsuite/ChangeLog:\n2020-12-04  Markus Metzger  <markus.t.metzger@intel.com>\n\n\t* gdb.btrace/exception.exp: Build with nopie.\n\t* gdb.btrace/function_call_history.exp: Likewise.\n\t* gdb.btrace/unknown_functions.exp: Likewise.",
    "tree": {
      "sha": "b449a9c7c20dddeb8ea461bd66b6c1155bcdc9fb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b449a9c7c20dddeb8ea461bd66b6c1155bcdc9fb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0fe69a94d4c4793d7247442e0611e5d3b8f542f5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0fe69a94d4c4793d7247442e0611e5d3b8f542f5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0fe69a94d4c4793d7247442e0611e5d3b8f542f5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0fe69a94d4c4793d7247442e0611e5d3b8f542f5/comments",
  "author": {
    "login": "markus-metzger",
    "id": 5424725,
    "node_id": "MDQ6VXNlcjU0MjQ3MjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5424725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/markus-metzger",
    "html_url": "https://github.com/markus-metzger",
    "followers_url": "https://api.github.com/users/markus-metzger/followers",
    "following_url": "https://api.github.com/users/markus-metzger/following{/other_user}",
    "gists_url": "https://api.github.com/users/markus-metzger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/markus-metzger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/markus-metzger/subscriptions",
    "organizations_url": "https://api.github.com/users/markus-metzger/orgs",
    "repos_url": "https://api.github.com/users/markus-metzger/repos",
    "events_url": "https://api.github.com/users/markus-metzger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/markus-metzger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "markus-metzger",
    "id": 5424725,
    "node_id": "MDQ6VXNlcjU0MjQ3MjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5424725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/markus-metzger",
    "html_url": "https://github.com/markus-metzger",
    "followers_url": "https://api.github.com/users/markus-metzger/followers",
    "following_url": "https://api.github.com/users/markus-metzger/following{/other_user}",
    "gists_url": "https://api.github.com/users/markus-metzger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/markus-metzger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/markus-metzger/subscriptions",
    "organizations_url": "https://api.github.com/users/markus-metzger/orgs",
    "repos_url": "https://api.github.com/users/markus-metzger/repos",
    "events_url": "https://api.github.com/users/markus-metzger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/markus-metzger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "806e7575e232f854ce7fc88c2a55c63265d57e5e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/806e7575e232f854ce7fc88c2a55c63265d57e5e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/806e7575e232f854ce7fc88c2a55c63265d57e5e"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 19,
    "deletions": 5
  },
  "files": [
    {
      "sha": "2c0633d1fc22e76196a75f609e47d6bfd58863dc",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0fe69a94d4c4793d7247442e0611e5d3b8f542f5/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0fe69a94d4c4793d7247442e0611e5d3b8f542f5/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=0fe69a94d4c4793d7247442e0611e5d3b8f542f5",
      "patch": "@@ -1,3 +1,9 @@\n+2020-12-21  Markus Metzger  <markus.t.metzger@intel.com>\n+\n+\t* gdb.btrace/exception.exp: Build with nopie.\n+\t* gdb.btrace/function_call_history.exp: Likewise.\n+\t* gdb.btrace/unknown_functions.exp: Likewise.\n+\n 2020-12-21  Markus Metzger  <markus.t.metzger@intel.com>\n \n \t* gdb.btrace/multi-inferior.exp: Skip if use_gdb_stub."
    },
    {
      "sha": "dc1a68cdb68084c4c127bd430dabdd3aaaa66b3b",
      "filename": "gdb/testsuite/gdb.btrace/exception.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0fe69a94d4c4793d7247442e0611e5d3b8f542f5/gdb/testsuite/gdb.btrace/exception.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0fe69a94d4c4793d7247442e0611e5d3b8f542f5/gdb/testsuite/gdb.btrace/exception.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.btrace/exception.exp?ref=0fe69a94d4c4793d7247442e0611e5d3b8f542f5",
      "patch": "@@ -22,8 +22,11 @@ if { [skip_btrace_tests] } {\n     return -1\n }\n \n+# We expect a specific function call history.  This gets messed up with\n+# PIE on 32-bit.\n standard_testfile exception.cc\n-if [prepare_for_testing \"failed to prepare\" $testfile $srcfile {c++ debug}] {\n+if [prepare_for_testing \"failed to prepare\" $testfile $srcfile \\\n+\t{nopie c++ debug}] {\n     return -1\n }\n "
    },
    {
      "sha": "871d37ba0315fb76af473f5df5d7a53c0446ccc3",
      "filename": "gdb/testsuite/gdb.btrace/function_call_history.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0fe69a94d4c4793d7247442e0611e5d3b8f542f5/gdb/testsuite/gdb.btrace/function_call_history.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0fe69a94d4c4793d7247442e0611e5d3b8f542f5/gdb/testsuite/gdb.btrace/function_call_history.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.btrace/function_call_history.exp?ref=0fe69a94d4c4793d7247442e0611e5d3b8f542f5",
      "patch": "@@ -22,8 +22,10 @@ if { [skip_btrace_tests] } {\n     return -1\n }\n \n+# We expect a specific function call history.  This gets messed up with\n+# PIE on 32-bit.\n standard_testfile\n-if [prepare_for_testing \"failed to prepare\" $testfile {} {debug}] {\n+if [prepare_for_testing \"failed to prepare\" $testfile {} {nopie debug}] {\n     return -1\n }\n "
    },
    {
      "sha": "beb1acaedee6ca03a5557e31d58648a76e735cf7",
      "filename": "gdb/testsuite/gdb.btrace/unknown_functions.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0fe69a94d4c4793d7247442e0611e5d3b8f542f5/gdb/testsuite/gdb.btrace/unknown_functions.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0fe69a94d4c4793d7247442e0611e5d3b8f542f5/gdb/testsuite/gdb.btrace/unknown_functions.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.btrace/unknown_functions.exp?ref=0fe69a94d4c4793d7247442e0611e5d3b8f542f5",
      "patch": "@@ -24,9 +24,12 @@ if { [skip_btrace_tests] } {\n \n standard_testfile\n \n-# discard local symbols\n-set ldflags \"additional_flags=-Wl,-x\"\n-if [prepare_for_testing \"failed to prepare\" $testfile $srcfile $ldflags] {\n+# We expect a specific function call history.  This gets messed up with\n+# PIE on 32-bit.\n+#\n+# Also discard local symbols.\n+if [prepare_for_testing \"failed to prepare\" $testfile $srcfile \\\n+\t{additional_flags=-Wl,-x nopie}] {\n     return -1\n }\n "
    }
  ]
}