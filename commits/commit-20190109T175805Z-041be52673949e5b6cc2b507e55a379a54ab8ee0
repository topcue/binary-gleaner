{
  "sha": "041be52673949e5b6cc2b507e55a379a54ab8ee0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDQxYmU1MjY3Mzk0OWU1YjZjYzJiNTA3ZTU1YTM3OWE1NGFiOGVlMA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@ericsson.com",
      "date": "2019-01-09T17:57:16Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@ericsson.com",
      "date": "2019-01-09T17:58:05Z"
    },
    "message": "gdb: Remove support for old mangling schemes\n\nAn upcoming sync with gcc's libiberty [1] will remove support for old\nmangling schemes (GNU v2, Lucid, ARM, HP and EDG).  It will remove the\ncplus_demangle_opname function, so we need to get rid of its usages in\nGDB (it's a GNU v2 specific function).\n\nI think the changes are mostly relatively obvious, some hacks that were\nnecessary to support overloaded operators with GNU v2 mangling are not\nneeded anymore.\n\nThe change in stabsread.c is perhaps less obvious.  I think we could get\nrid of more code in that region that is specific to old mangling\nschemes, but I chose to do only the minimal changes required to remove\nthe cplus_demangle_opname uses.  There is also a detailed comment just\nabove that explaining how GNU v2 and v3 mangled symbols are handled, I\ndecided to leave it as-is, since I wasn't sure which part to remove,\nchange or leave there.\n\n[1] The commit \"Remove support for demangling GCC 2.x era mangling\nschemes.\", specifically.\n\ngdb/ChangeLog:\n\n\t* gdbtypes.c (check_stub_method_group): Remove handling of old\n\tmangling schemes.\n\t* linespec.c (find_methods): Likewise.\n\t* stabsread.c (read_member_functions): Likewise.\n\t* valops.c (search_struct_method): Likewise.\n\t(value_struct_elt_for_reference): Likewise.\n\t* NEWS: Mention this change.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.cp/demangle.exp (test_gnu_style_demangling): Rename to...\n\t(test_gnuv3_style_demangling): ... this.\n\t(test_lucid_style_demangling): Remove.\n\t(test_arm_style_demangling): Remove.\n\t(test_hp_style_demangling): Remove.\n\t(do_tests): Remove calls to the above.\n\ngdb/doc/ChangeLog:\n\n\t* gdb.texinfo (Print Settings): Remove mention of specific\n\tdemangle-style values, just refer to the in-process help.",
    "tree": {
      "sha": "28487576663e2d763a13474d865291eab823e036",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/28487576663e2d763a13474d865291eab823e036"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/041be52673949e5b6cc2b507e55a379a54ab8ee0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/041be52673949e5b6cc2b507e55a379a54ab8ee0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/041be52673949e5b6cc2b507e55a379a54ab8ee0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/041be52673949e5b6cc2b507e55a379a54ab8ee0/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "0e2a21335b6fc4a5b6bed19d9623916c52918b72",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e2a21335b6fc4a5b6bed19d9623916c52918b72",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0e2a21335b6fc4a5b6bed19d9623916c52918b72"
    }
  ],
  "stats": {
    "total": 1561,
    "additions": 37,
    "deletions": 1524
  },
  "files": [
    {
      "sha": "1c20afc8a87c9fb17a6aa123f0d02910210028b4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=041be52673949e5b6cc2b507e55a379a54ab8ee0",
      "patch": "@@ -1,3 +1,13 @@\n+2019-01-09  Simon Marchi  <simon.marchi@ericsson.com>\n+\n+\t* gdbtypes.c (check_stub_method_group): Remove handling of old\n+\tmangling schemes.\n+\t* linespec.c (find_methods): Likewise.\n+\t* stabsread.c (read_member_functions): Likewise.\n+\t* valops.c (search_struct_method): Likewise.\n+\t(value_struct_elt_for_reference): Likewise.\n+\t* NEWS: Mention this change.\n+\n 2019-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* cli/cli-cmds.c (list_command): Pass a source_lines_range to"
    },
    {
      "sha": "14c859f8f6af1527d71b60ed44ccdcf74f392d10",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=041be52673949e5b6cc2b507e55a379a54ab8ee0",
      "patch": "@@ -58,6 +58,9 @@\n   source code snippets.  See the \"set style\" commands, below, for more\n   information.\n \n+* Removed support for old demangling styles arm, edg, gnu, hp and\n+  lucid.\n+\n * New targets\n \n   NXP S12Z\t\ts12z-*-elf"
    },
    {
      "sha": "9eb75e7a264dfb880e50bf6bf6c42285b7e52376",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=041be52673949e5b6cc2b507e55a379a54ab8ee0",
      "patch": "@@ -1,3 +1,8 @@\n+2019-01-09  Simon Marchi  <simon.marchi@ericsson.com>\n+\n+\t* gdb.texinfo (Print Settings): Remove mention of specific\n+\tdemangle-style values, just refer to the in-process help.\n+\n 2018-12-28  Tom Tromey  <tom@tromey.com>\n \n \t* gdb.texinfo (Output Styling): New node."
    },
    {
      "sha": "4a00834d0bfaa3d2277a39f0152082678d91a70a",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 4,
      "deletions": 25,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=041be52673949e5b6cc2b507e55a379a54ab8ee0",
      "patch": "@@ -10703,31 +10703,10 @@ or demangled form.\n @cindex symbol decoding style, C@t{++}\n @kindex set demangle-style\n @item set demangle-style @var{style}\n-Choose among several encoding schemes used by different compilers to\n-represent C@t{++} names.  The choices for @var{style} are currently:\n-\n-@table @code\n-@item auto\n-Allow @value{GDBN} to choose a decoding style by inspecting your program.\n-This is the default.\n-\n-@item gnu\n-Decode based on the @sc{gnu} C@t{++} compiler (@code{g++}) encoding algorithm.\n-\n-@item hp\n-Decode based on the HP ANSI C@t{++} (@code{aCC}) encoding algorithm.\n-\n-@item lucid\n-Decode based on the Lucid C@t{++} compiler (@code{lcc}) encoding algorithm.\n-\n-@item arm\n-Decode using the algorithm in the @cite{C@t{++} Annotated Reference Manual}.\n-@strong{Warning:} this setting alone is not sufficient to allow\n-debugging @code{cfront}-generated executables.  @value{GDBN} would\n-require further enhancement to permit that.\n-\n-@end table\n-If you omit @var{style}, you will see a list of possible formats.\n+Choose among several encoding schemes used by different compilers to represent\n+C@t{++} names.  If you omit @var{style}, you will see a list of possible\n+formats.  The default value is @var{auto}, which lets @value{GDBN} choose a\n+decoding style by inspecting your program.\n \n @item show demangle-style\n Display the encoding style currently in use for decoding C@t{++} symbols."
    },
    {
      "sha": "d1ca304a9245042b11aeba24385bfc392a48244b",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 3,
      "deletions": 29,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=041be52673949e5b6cc2b507e55a379a54ab8ee0",
      "patch": "@@ -2736,37 +2736,11 @@ check_stub_method_group (struct type *type, int method_id)\n {\n   int len = TYPE_FN_FIELDLIST_LENGTH (type, method_id);\n   struct fn_field *f = TYPE_FN_FIELDLIST1 (type, method_id);\n-  int j, found_stub = 0;\n \n-  for (j = 0; j < len; j++)\n-    if (TYPE_FN_FIELD_STUB (f, j))\n-      {\n-\tfound_stub = 1;\n+  for (int j = 0; j < len; j++)\n+    {\n+      if (TYPE_FN_FIELD_STUB (f, j))\n \tcheck_stub_method (type, method_id, j);\n-      }\n-\n-  /* GNU v3 methods with incorrect names were corrected when we read\n-     in type information, because it was cheaper to do it then.  The\n-     only GNU v2 methods with incorrect method names are operators and\n-     destructors; destructors were also corrected when we read in type\n-     information.\n-\n-     Therefore the only thing we need to handle here are v2 operator\n-     names.  */\n-  if (found_stub && !startswith (TYPE_FN_FIELD_PHYSNAME (f, 0), \"_Z\"))\n-    {\n-      int ret;\n-      char dem_opname[256];\n-\n-      ret = cplus_demangle_opname (TYPE_FN_FIELDLIST_NAME (type, \n-\t\t\t\t\t\t\t   method_id),\n-\t\t\t\t   dem_opname, DMGL_ANSI);\n-      if (!ret)\n-\tret = cplus_demangle_opname (TYPE_FN_FIELDLIST_NAME (type, \n-\t\t\t\t\t\t\t     method_id),\n-\t\t\t\t     dem_opname, 0);\n-      if (ret)\n-\tTYPE_FN_FIELDLIST_NAME (type, method_id) = xstrdup (dem_opname);\n     }\n }\n "
    },
    {
      "sha": "b1ca6fd03224cc6fc58e4b872866e7ba1656a42d",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 0,
      "deletions": 11,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=041be52673949e5b6cc2b507e55a379a54ab8ee0",
      "patch": "@@ -1251,17 +1251,6 @@ find_methods (struct type *t, enum language t_lang, const char *name,\n \t   --method_counter)\n \t{\n \t  const char *method_name = TYPE_FN_FIELDLIST_NAME (t, method_counter);\n-\t  char dem_opname[64];\n-\n-\t  if (startswith (method_name, \"__\") ||\n-\t      startswith (method_name, \"op\") ||\n-\t      startswith (method_name, \"type\"))\n-\t    {\n-\t      if (cplus_demangle_opname (method_name, dem_opname, DMGL_ANSI))\n-\t\tmethod_name = dem_opname;\n-\t      else if (cplus_demangle_opname (method_name, dem_opname, 0))\n-\t\tmethod_name = dem_opname;\n-\t    }\n \n \t  if (symbol_name_compare (method_name, lookup_name, NULL))\n \t    {"
    },
    {
      "sha": "8d2599f56b28a8b8568b5cb231d3650bea386f80",
      "filename": "gdb/stabsread.c",
      "status": "modified",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/stabsread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/stabsread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stabsread.c?ref=041be52673949e5b6cc2b507e55a379a54ab8ee0",
      "patch": "@@ -2552,7 +2552,6 @@ read_member_functions (struct field_info *fip, const char **pp,\n \t}\n       else\n \t{\n-\t  int has_stub = 0;\n \t  int has_destructor = 0, has_other = 0;\n \t  int is_v3 = 0;\n \t  struct next_fnfield *tmp_sublist;\n@@ -2616,8 +2615,6 @@ read_member_functions (struct field_info *fip, const char **pp,\n \t  tmp_sublist = sublist;\n \t  while (tmp_sublist != NULL)\n \t    {\n-\t      if (tmp_sublist->fn_field.is_stub)\n-\t\thas_stub = 1;\n \t      if (tmp_sublist->fn_field.physname[0] == '_'\n \t\t  && tmp_sublist->fn_field.physname[1] == 'Z')\n \t\tis_v3 = 1;\n@@ -2704,23 +2701,6 @@ read_member_functions (struct field_info *fip, const char **pp,\n \t\t\t  \"~\", main_fn_name, (char *)NULL);\n \t      xfree (main_fn_name);\n \t    }\n-\t  else if (!has_stub)\n-\t    {\n-\t      char dem_opname[256];\n-\t      int ret;\n-\n-\t      ret = cplus_demangle_opname (new_fnlist->fn_fieldlist.name,\n-\t\t\t\t\t      dem_opname, DMGL_ANSI);\n-\t      if (!ret)\n-\t\tret = cplus_demangle_opname (new_fnlist->fn_fieldlist.name,\n-\t\t\t\t\t     dem_opname, 0);\n-\t      if (ret)\n-\t\tnew_fnlist->fn_fieldlist.name\n-\t\t  = ((const char *)\n-\t\t     obstack_copy0 (&objfile->objfile_obstack, dem_opname,\n-\t\t\t\t    strlen (dem_opname)));\n-\t      xfree (main_fn_name);\n-\t    }\n \n \t  new_fnlist->fn_fieldlist.fn_fields\n \t    = OBSTACK_CALLOC (&objfile->objfile_obstack, length, fn_field);"
    },
    {
      "sha": "bb9e2b345599f16583fe1813842d96ce3302da3a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=041be52673949e5b6cc2b507e55a379a54ab8ee0",
      "patch": "@@ -1,3 +1,12 @@\n+2019-01-09  Simon Marchi  <simon.marchi@ericsson.com>\n+\n+\t* gdb.cp/demangle.exp (test_gnu_style_demangling): Rename to...\n+\t(test_gnuv3_style_demangling): ... this.\n+\t(test_lucid_style_demangling): Remove.\n+\t(test_arm_style_demangling): Remove.\n+\t(test_hp_style_demangling): Remove.\n+\t(do_tests): Remove calls to the above.\n+\n 2019-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* lib/mi-support.exp (mi_gdb_test): Remove interactive prompt"
    },
    {
      "sha": "9231b54f787d5b9acc044adcc6fd7ae7b77414fc",
      "filename": "gdb/testsuite/gdb.cp/demangle.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 1416,
      "changes": 1419,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/testsuite/gdb.cp/demangle.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/testsuite/gdb.cp/demangle.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/demangle.exp?ref=041be52673949e5b6cc2b507e55a379a54ab8ee0",
      "patch": "@@ -110,419 +110,13 @@ proc test_demangling_exact {test result} {\n     test_demangling_core gdb_test_exact $test $result\n }\n \n-\n-\n #\n-#  Test gnu style name demangling\n+#  Test gnu-v3 style name demangling\n #\n \n-proc test_gnu_style_demangling {} {\n+proc test_gnuv3_style_demangling {} {\n     global gdb_prompt\n \n-    test_demangling \"gnu: Abort__FP6EditoriPCc\" \\\n-\t\"Abort\\[(\\]+Editor \\[*\\]+, int, (const char|char const) \\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"gnu: AddAlignment__9ivTSolverUiP12ivInteractorP7ivTGlue\" \"ivTSolver::AddAlignment(unsigned int, ivInteractor *, ivTGlue *)\"\n-    test_demangling \"gnu: Append__15NameChooserViewPCc\" \\\n-\t\"NameChooserView::Append\\[(\\]+(const char|char const) \\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"gnu: ArrowheadIntersects__9ArrowLineP9ArrowheadR6BoxObjP7Graphic\" \"ArrowLine::ArrowheadIntersects(Arrowhead *, BoxObj &, Graphic *)\"\n-    test_demangling_exact \"gnu: AtEnd__13ivRubberGroup\" \"ivRubberGroup::AtEnd(void)\"\n-    test_demangling_exact \"gnu: BgFilter__9ivTSolverP12ivInteractor\" \"ivTSolver::BgFilter(ivInteractor *)\"\n-    test_demangling \"gnu: BitPatterntoa__FRC10BitPatternccc\" \\\n-\t\"BitPatterntoa\\[(\\]+(const BitPattern|BitPattern const) &, char, char, char\\[)\\]+\"\n-    test_demangling_exact \"gnu: Check__6UArrayi\" \"UArray::Check(int)\"\n-    test_demangling_exact \"gnu: CoreConstDecls__8TextCodeR7ostream\" \"TextCode::CoreConstDecls(ostream &)\"\n-    test_demangling_exact \"gnu: Detach__8StateVarP12StateVarView\" \"StateVar::Detach(StateVarView *)\"\n-    test_demangling_exact \"gnu: Done__9ComponentG8Iterator\" \"Component::Done(Iterator)\"\n-    test_demangling \"gnu: DrawDestinationTransformedImage__FP7_XImageiiT0iiUlUiiiUiUlUlP4_XGCRC13ivTransformeriiii\" \\\n-\t\"DrawDestinationTransformedImage\\[(\\]+_XImage \\[*\\]+, int, int, _XImage \\[*\\]+, int, int, unsigned long, unsigned int, int, int, unsigned int, unsigned long, unsigned long, _XGC \\[*\\]+, (const ivTransformer|ivTransformer const) &, int, int, int, int\\[)\\]+\"\n-\n-    test_demangling \"gnu: Edit__12StringEditorPCcii\" \\\n-\t\"StringEditor::Edit\\[(\\]+(const char|char const) \\[*\\]+, int, int\\[)\\]+\"\n-    test_demangling_exact \"gnu: Effect__11RelateManipR7ivEvent\" \"RelateManip::Effect(ivEvent &)\"\n-    test_demangling \"gnu: FilterName__FPCc\" \\\n-\t\"FilterName\\[(\\]+(const char|char const) \\[*\\]+\\[)\\]+\"\n-    test_demangling \"gnu: Filter__6PSTextPCci\" \\\n-\t\"PSText::Filter\\[(\\]+(const char|char const) \\[*\\]+, int\\[)\\]+\"\n-    test_demangling \"gnu: FindColor__7CatalogPCciii\" \\\n-\t\"Catalog::FindColor\\[(\\]+(const char|char const) \\[*\\]+, int, int, int\\[)\\]+\"\n-    test_demangling_exact \"gnu: FindFixed__FRP4CNetP4CNet\" \"FindFixed(CNet *&, CNet *)\"\n-    test_demangling \"gnu: FindFont__7CatalogPCcN21\" \\\n-\t\"Catalog::FindFont\\[(\\]+(const char|char const) \\[*\\]+, (const char|char const) \\[*\\]+, (const char|char const) \\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"gnu: Fix48_abort__FR8twolongs\" \"Fix48_abort(twolongs &)\"\n-    test_demangling_exact \"gnu: GetBarInfo__15iv2_6_VScrollerP13ivPerspectiveRiT2\" \"iv2_6_VScroller::GetBarInfo(ivPerspective *, int &, int &)\"\n-    test_demangling_exact \"gnu: GetBgColor__C9ivPainter\" \"ivPainter::GetBgColor(void) const\"\n-\n-    test_demangling \"gnu: Iisdouble__FPC6IntRep\" \\\n-\t\"Iisdouble\\[(\\]+(const IntRep|IntRep const) \\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"gnu: InsertBody__15H_PullrightMenuii\" \"H_PullrightMenu::InsertBody(int, int)\"\n-    test_demangling_exact \"gnu: InsertCharacter__9TextManipc\" \"TextManip::InsertCharacter(char)\"\n-\n-    test_demangling_exact \"gnu: InsertToplevel__7ivWorldP12ivInteractorT1\" \"ivWorld::InsertToplevel(ivInteractor *, ivInteractor *)\"\n-    test_demangling_exact \"gnu: InsertToplevel__7ivWorldP12ivInteractorT1iiUi\" \"ivWorld::InsertToplevel(ivInteractor *, ivInteractor *, int, int, unsigned int)\"\n-    test_demangling \"gnu: IsADirectory__FPCcR4stat\" \\\n-\t\"IsADirectory\\[(\\]+(const char|char const) \\[*\\]+, stat &\\[)\\]+\"\n-    test_demangling_exact \"gnu: IsAGroup__FP11GraphicViewP11GraphicComp\" \"IsAGroup(GraphicView *, GraphicComp *)\"\n-    test_demangling_exact \"gnu: IsA__10ButtonCodeUl\" \"ButtonCode::IsA(unsigned long)\"\n-\n-    test_demangling_exact \"gnu: ReadName__FR7istreamPc\" \"ReadName(istream &, char *)\"\n-    test_demangling_exact \"gnu: Redraw__13StringBrowseriiii\" \"StringBrowser::Redraw(int, int, int, int)\"\n-    test_demangling_exact \"gnu: Rotate__13ivTransformerf\" \"ivTransformer::Rotate(float)\"\n-    test_demangling_exact \"gnu: Rotated__C13ivTransformerf\" \"ivTransformer::Rotated(float) const\"\n-    test_demangling_exact \"gnu: Round__Ff\" \"Round(float)\"\n-\n-    test_demangling_exact \"gnu: SetExport__16MemberSharedNameUi\" \"MemberSharedName::SetExport(unsigned int)\"\n-    test_demangling_exact \"gnu: Set__14ivControlState13ControlStatusUi\" \"ivControlState::Set(ControlStatus, unsigned int)\"\n-    test_demangling_exact \"gnu: Set__5DFacePcii\" \"DFace::Set(char *, int, int)\"\n-\n-    test_demangling_exact \"gnu: VConvert__9ivTSolverP12ivInteractorRP8TElementT2\" \"ivTSolver::VConvert(ivInteractor *, TElement *&, TElement *&)\"\n-    test_demangling_exact \"gnu: VConvert__9ivTSolverP7ivTGlueRP8TElement\" \"ivTSolver::VConvert(ivTGlue *, TElement *&)\"\n-    test_demangling_exact \"gnu: VOrder__9ivTSolverUiRP12ivInteractorT2\" \"ivTSolver::VOrder(unsigned int, ivInteractor *&, ivInteractor *&)\"\n-    test_demangling \"gnu: Valid__7CatalogPCcRP4Tool\" \\\n-\t\"Catalog::Valid\\[(\\]+(const char|char const) \\[*\\]+, Tool \\[*\\]+&\\[)\\]+\"\n-    test_demangling_exact \"gnu: _10PageButton\\$__both\" \"PageButton::__both\"\n-    test_demangling_exact \"gnu: _3RNG\\$singleMantissa\" \"RNG::singleMantissa\"\n-    test_demangling_exact \"gnu: _5IComp\\$_release\" \"IComp::_release\"\n-    test_demangling_exact \"gnu: _\\$_10BitmapComp\" \"BitmapComp::~BitmapComp(void)\"\n-\n-    test_demangling_exact \"gnu: _\\$_9__io_defs\" \"__io_defs::~__io_defs(void)\"\n-    test_demangling_exact \"gnu: _\\$_Q23foo3bar\" \"foo::bar::~bar(void)\"\n-    test_demangling_exact \"gnu: _\\$_Q33foo3bar4bell\" \"foo::bar::bell::~bell(void)\"\n-    test_demangling_exact \"gnu: __10ivTelltaleiP7ivGlyph\" \"ivTelltale::ivTelltale(int, ivGlyph *)\"\n-    test_demangling_exact \"gnu: __10ivViewportiP12ivInteractorUi\" \"ivViewport::ivViewport(int, ivInteractor *, unsigned int)\"\n-    test_demangling_exact \"gnu: __10ostrstream\" \"ostrstream::ostrstream(void)\"\n-    test_demangling_exact \"gnu: __10ostrstreamPcii\" \"ostrstream::ostrstream(char *, int, int)\"\n-    test_demangling \"gnu: __11BasicDialogiPCcP13ivButtonStateN22Ui\" \\\n-\t\"BasicDialog::BasicDialog\\[(\\]+int, (const char|char const) \\[*\\]+, ivButtonState \\[*\\]+, (const char|char const) \\[*\\]+, (const char|char const) \\[*\\]+, unsigned int\\[)\\]+\"\n-    test_demangling_exact \"gnu: __11BitmapTablei\" \"BitmapTable::BitmapTable(int)\"\n-    test_demangling_exact \"gnu: __12ViewportCodeP12ViewportComp\" \"ViewportCode::ViewportCode(ViewportComp *)\"\n-    test_demangling \"gnu: __12iv2_6_BorderiPCci\" \\\n-\t\"iv2_6_Border::iv2_6_Border\\[(\\]+int, (const char|char const) \\[*\\]+, int\\[)\\]+\"\n-    test_demangling_exact \"gnu: __12iv2_6_Borderii\" \"iv2_6_Border::iv2_6_Border(int, int)\"\n-    test_demangling \"gnu: __12ivBackgroundiP7ivGlyphPC7ivColor\" \\\n-\t\"ivBackground::ivBackground\\[(\\]+int, ivGlyph \\[*\\]+, (const ivColor|ivColor const) \\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"gnu: __12ivBreak_Listl\" \"ivBreak_List::ivBreak_List(long)\"\n-    test_demangling \"gnu: __14TextInteractoriPCcUi\" \\\n-\t\"TextInteractor::TextInteractor\\[(\\]+int, (const char|char const) \\[*\\]+, unsigned int\\[)\\]+\"\n-    test_demangling_exact \"gnu: __14iv2_6_MenuItemiP12ivInteractor\" \"iv2_6_MenuItem::iv2_6_MenuItem(int, ivInteractor *)\"\n-    test_demangling \"gnu: __14iv2_6_MenuItemiPCcP12ivInteractor\" \\\n-\t\"iv2_6_MenuItem::iv2_6_MenuItem\\[(\\]+int, (const char|char const) \\[*\\]+, ivInteractor \\[*\\]+\\[)\\]+\"\n-\n-    test_demangling_exact \"gnu: __20DisplayList_IteratorR11DisplayList\" \"DisplayList_Iterator::DisplayList_Iterator(DisplayList &)\"\n-    test_demangling_exact \"gnu: __3fooRT0\" \"foo::foo(foo &)\"\n-    test_demangling_exact \"gnu: __3fooiN31\" \"foo::foo(int, int, int, int)\"\n-    test_demangling \"gnu: __3fooiPCc\" \\\n-\t\"foo::foo\\[(\\]+int, (const char|char const) \\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"gnu: __3fooiRT0iT2iT2\" \"foo::foo(int, foo &, int, foo &, int, foo &)\"\n-    test_demangling \"gnu: __6GetOptiPPcPCc\" \\\n-\t\"GetOpt::GetOpt\\[(\\]+int, char \\[*\\]+\\[*\\]+, (const char|char const) \\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"gnu: __6KeyMapPT0\" \"KeyMap::KeyMap(KeyMap *)\"\n-    test_demangling \"gnu: __7ivWorldPCcRiPPcPC12ivOptionDescPC14ivPropertyData\" \\\n-\t\"ivWorld::ivWorld\\[(\\]+(const char|char const) \\[*\\]+, int &, char \\[*\\]+\\[*\\]+, (const ivOptionDesc|ivOptionDesc const) \\[*\\]+, (const ivPropertyData|ivPropertyData const) \\[*\\]+\\[)\\]+\"\n-    test_demangling \"gnu: __7procbufPCci\" \\\n-\t\"procbuf::procbuf\\[(\\]+(const char|char const) \\[*\\]+, int\\[)\\]+\"\n-    test_demangling_exact \"gnu: __8ArrowCmdP6EditorUiUi\" \"ArrowCmd::ArrowCmd(Editor *, unsigned int, unsigned int)\"\n-\n-    test_demangling_exact \"gnu: __9F_EllipseiiiiP7Graphic\" \"F_Ellipse::F_Ellipse(int, int, int, int, Graphic *)\"\n-    test_demangling_exact \"gnu: __9FrameDataP9FrameCompi\" \"FrameData::FrameData(FrameComp *, int)\"\n-    test_demangling_exact \"gnu: __9HVGraphicP9CanvasVarP7Graphic\" \"HVGraphic::HVGraphic(CanvasVar *, Graphic *)\"\n-    test_demangling_exact \"gnu: __Q23foo3bar\" \"foo::bar::bar(void)\"\n-    test_demangling_exact \"gnu: __Q33foo3bar4bell\" \"foo::bar::bell::bell(void)\"\n-    test_demangling_exact \"gnu: __aa__3fooRT0\" \"foo::operator&&(foo &)\"\n-    test_demangling_exact \"gnu: __aad__3fooRT0\" \"foo::operator&=(foo &)\"\n-    test_demangling_exact \"gnu: __ad__3fooRT0\" \"foo::operator&(foo &)\"\n-    test_demangling_exact \"gnu: __adv__3fooRT0\" \"foo::operator/=(foo &)\"\n-    test_demangling_exact \"gnu: __aer__3fooRT0\" \"foo::operator^=(foo &)\"\n-    test_demangling_exact \"gnu: __als__3fooRT0\" \"foo::operator<<=(foo &)\"\n-    test_demangling_exact \"gnu: __amd__3fooRT0\" \"foo::operator%=(foo &)\"\n-    test_demangling_exact \"gnu: __ami__3fooRT0\" \"foo::operator-=(foo &)\"\n-    test_demangling_exact \"gnu: __aml__3FixRT0\" \"Fix::operator*=(Fix &)\"\n-    test_demangling_exact \"gnu: __aml__5Fix16i\" \"Fix16::operator*=(int)\"\n-    test_demangling_exact \"gnu: __aml__5Fix32RT0\" \"Fix32::operator*=(Fix32 &)\"\n-    test_demangling_exact \"gnu: __aor__3fooRT0\" \"foo::operator|=(foo &)\"\n-    test_demangling_exact \"gnu: __apl__3fooRT0\" \"foo::operator+=(foo &)\"\n-    test_demangling_exact \"gnu: __ars__3fooRT0\" \"foo::operator>>=(foo &)\"\n-\n-    test_demangling_exact \"gnu: __as__3fooRT0\" \"foo::operator=(foo &)\"\n-    test_demangling_exact \"gnu: __cl__3fooRT0\" \"foo::operator()(foo &)\"\n-    test_demangling_exact \"gnu: __cl__6Normal\" \"Normal::operator()(void)\"\n-    test_demangling_exact \"gnu: __cl__6Stringii\" \"String::operator()(int, int)\"\n-    test_demangling_exact \"gnu: __cm__3fooRT0\" \"foo::operator, (foo &)\"\n-    test_demangling_exact \"gnu: __co__3foo\" \"foo::operator~(void)\"\n-    test_demangling_exact \"gnu: __dl__3fooPv\" \"foo::operator delete(void *)\"\n-    test_demangling_exact \"gnu: __dv__3fooRT0\" \"foo::operator/(foo &)\"\n-    test_demangling_exact \"gnu: __eq__3fooRT0\" \"foo::operator==(foo &)\"\n-    test_demangling_exact \"gnu: __er__3fooRT0\" \"foo::operator^(foo &)\"\n-    test_demangling_exact \"gnu: __ge__3fooRT0\" \"foo::operator>=(foo &)\"\n-    test_demangling_exact \"gnu: __gt__3fooRT0\" \"foo::operator>(foo &)\"\n-    test_demangling_exact \"gnu: __le__3fooRT0\" \"foo::operator<=(foo &)\"\n-    test_demangling_exact \"gnu: __ls__3fooRT0\" \"foo::operator<<(foo &)\"\n-    test_demangling_exact \"gnu: __ls__FR7ostreamPFR3ios_R3ios\" \"operator<<(ostream &, ios &(*)(ios &))\"\n-    test_demangling_exact \"gnu: __ls__FR7ostreamR3Fix\" \"operator<<(ostream &, Fix &)\"\n-    test_demangling_exact \"gnu: __lt__3fooRT0\" \"foo::operator<(foo &)\"\n-    test_demangling_exact \"gnu: __md__3fooRT0\" \"foo::operator%(foo &)\"\n-    test_demangling_exact \"gnu: __mi__3fooRT0\" \"foo::operator-(foo &)\"\n-    test_demangling_exact \"gnu: __ml__3fooRT0\" \"foo::operator*(foo &)\"\n-    test_demangling_exact \"gnu: __mm__3fooi\" \"foo::operator--(int)\"\n-\n-    test_demangling_exact \"gnu: __ne__3fooRT0\" \"foo::operator!=(foo &)\"\n-    test_demangling \"gnu: __ne__FRC7ComplexT0\" \\\n-\t\"operator!=\\[(\\]+(const Complex|Complex const) &, (const Complex|Complex const) &\\[)\\]+\"\n-    test_demangling \"gnu: __ne__FRC7Complexd\" \\\n-\t\"operator!=\\[(\\]+(const Complex|Complex const) &, double\\[)\\]+\"\n-    test_demangling \"gnu: __ne__FRC9SubStringRC6String\" \\\n-\t\"operator!=\\[(\\]+(const SubString|SubString const) &, (const String|String const) &\\[)\\]+\"\n-    test_demangling_exact \"gnu: __nt__3foo\" \"foo::operator!(void)\"\n-    test_demangling_exact \"gnu: __nw__3fooi\" \"foo::operator new(int)\"\n-    test_demangling_exact \"gnu: __oo__3fooRT0\" \"foo::operator||(foo &)\"\n-    test_demangling_exact \"gnu: __opPc__3foo\" \"foo::operator char *(void)\"\n-    test_demangling_exact \"gnu: __opi__3foo\" \"foo::operator int(void)\"\n-    test_demangling_exact \"gnu: __or__3fooRT0\" \"foo::operator|(foo &)\"\n-    test_demangling_exact \"gnu: __pl__3fooRT0\" \"foo::operator+(foo &)\"\n-    test_demangling_exact \"gnu: __pp__3fooi\" \"foo::operator++(int)\"\n-    test_demangling_exact \"gnu: __rf__3foo\" \"foo::operator->(void)\"\n-    test_demangling_exact \"gnu: __rm__3fooRT0\" \"foo::operator->*(foo &)\"\n-    test_demangling_exact \"gnu: __rs__3fooRT0\" \"foo::operator>>(foo &)\"\n-    test_demangling \"gnu: __vc__3fooRT0\" \"foo::operator\\\\\\[\\\\\\]\\\\(foo &\\\\)\"\n-    test_demangling \"gnu: _gsub__6StringRC5RegexPCci\" \\\n-\t\"String::_gsub\\[(\\]+(const Regex|Regex const) &, (const char|char const) \\[*\\]+, int\\[)\\]+\"\n-    test_demangling_exact \"gnu: _new_Fix__FUs\" \"_new_Fix(unsigned short)\"\n-\n-    # gcc 2.4.5 (and earlier) style virtual tables.  We want to continue to\n-    # correctly demangle these even if newer compilers use a different form.\n-    test_demangling_exact \"gnu: _vt.foo\" \"foo virtual table\"\n-    test_demangling_exact \"gnu: _vt.foo.bar\" \"foo::bar virtual table\"\n-    test_demangling_exact \"gnu: _vt\\$foo\" \"foo virtual table\"\n-    test_demangling_exact \"gnu: _vt\\$foo\\$bar\" \"foo::bar virtual table\"\n-\n-    test_demangling_exact \"gnu: append__7ivGlyphPT0\" \"ivGlyph::append(ivGlyph *)\"\n-    test_demangling \"gnu: arg__FRC7Complex\" \\\n-\t\"arg\\[(\\]+(const Complex|Complex const) &\\[)\\]+\"\n-    test_demangling_exact \"gnu: clearok__FP7_win_sti\" \"clearok(_win_st *, int)\"\n-\n-    test_demangling_exact \"gnu: complexfunc2__FPFPc_i\" \"complexfunc2(int (*)(char *))\"\n-    test_demangling_exact \"gnu: complexfunc3__FPFPFPl_s_i\" \"complexfunc3(int (*)(short (*)(long *)))\"\n-    test_demangling_exact \"gnu: complexfunc4__FPFPFPc_s_i\" \"complexfunc4(int (*)(short (*)(char *)))\"\n-    test_demangling_exact \"gnu: complexfunc5__FPFPc_PFl_i\" \"complexfunc5(int (*(*)(char *))(long))\"\n-    test_demangling_exact \"gnu: complexfunc6__FPFPi_PFl_i\" \"complexfunc6(int (*(*)(int *))(long))\"\n-    test_demangling_exact \"gnu: complexfunc7__FPFPFPc_i_PFl_i\" \"complexfunc7(int (*(*)(int (*)(char *)))(long))\"\n-    test_demangling \"gnu: contains__C9BitStringRC10BitPattern\" \\\n-\t\"BitString::contains\\[(\\]+(const BitPattern|BitPattern const) &\\[)\\]+ const\"\n-    test_demangling \"gnu: contains__C9BitStringRC12BitSubStringi\" \\\n-\t\"BitString::contains\\[(\\]+(const BitSubString|BitSubString const) &, int\\[)\\]+ const\"\n-    test_demangling \"gnu: contains__C9BitStringRT0\" \\\n-\t\"BitString::contains\\[(\\]+(const BitString|BitString const) &\\[)\\]+ const\"\n-    test_demangling \"gnu: div__FPC6IntRepT0P6IntRep\" \\\n-\t\"div\\[(\\]+(const IntRep|IntRep const) \\[*\\]+, (const IntRep|IntRep const) \\[*\\]+, IntRep \\[*\\]+\\[)\\]+\"\n-    test_demangling \"gnu: div__FPC6IntReplP6IntRep\" \\\n-\t\"div\\[(\\]+(const IntRep|IntRep const) \\[*\\]+, long, IntRep \\[*\\]+\\[)\\]+\"\n-    test_demangling \"gnu: div__FRC8RationalT0R8Rational\" \\\n-\t\"div\\[(\\]+(const Rational|Rational const) &, (const Rational|Rational const) &, Rational &\\[)\\]+\"\n-    test_demangling \"gnu: divide__FRC7IntegerT0R7IntegerT2\" \\\n-\t\"divide\\[(\\]+(const Integer|Integer const) &, (const Integer|Integer const) &, Integer &, Integer &\\[)\\]+\"\n-    test_demangling \"gnu: divide__FRC7IntegerlR7IntegerRl\" \\\n-\t\"divide\\[(\\]+(const Integer|Integer const) &, long, Integer &, long &\\[)\\]+\"\n-    test_demangling \"gnu: enable__14DocumentViewerPCcUi\" \\\n-\t\"DocumentViewer::enable\\[(\\]+(const char|char const) \\[*\\]+, unsigned int\\[)\\]+\"\n-\n-    test_demangling_exact \"gnu: foo__FiN30\" \"foo(int, int, int, int)\"\n-    test_demangling_exact \"gnu: foo__FiR3fooiT1iT1\" \"foo(int, foo &, int, foo &, int, foo &)\"\n-    test_demangling_exact \"gnu: foo___3barl\" \"bar::foo_(long)\"\n-    test_demangling_exact \"gnu: insert__15ivClippingStacklRP8_XRegion\" \"ivClippingStack::insert(long, _XRegion *&)\"\n-    test_demangling_exact \"gnu: insert__16ChooserInfo_ListlR11ChooserInfo\" \"ChooserInfo_List::insert(long, ChooserInfo &)\"\n-    test_demangling_exact \"gnu: insert__17FontFamilyRepListlRP15ivFontFamilyRep\" \"FontFamilyRepList::insert(long, ivFontFamilyRep *&)\"\n-    test_demangling_exact \"gnu: leaveok__FP7_win_stc\" \"leaveok(_win_st *, char)\"\n-    test_demangling_exact \"gnu: left_mover__C7ivMFKitP12ivAdjustableP7ivStyle\" \"ivMFKit::left_mover(ivAdjustable *, ivStyle *) const\"\n-    test_demangling \"gnu: matches__C9BitStringRC10BitPatterni\" \\\n-\t\"BitString::matches\\[(\\]+(const BitPattern|BitPattern const) &, int\\[)\\]+ const\"\n-    test_demangling \"gnu: matches__C9SubStringRC5Regex\" \\\n-\t\"SubString::matches\\[(\\]+(const Regex|Regex const) &\\[)\\]+ const\"\n-\n-    test_demangling_exact \"gnu: overload1arg__FSc\" \"overload1arg(signed char)\"\n-    test_demangling_exact \"gnu: overload1arg__FUc\" \"overload1arg(unsigned char)\"\n-    test_demangling_exact \"gnu: overload1arg__FUi\" \"overload1arg(unsigned int)\"\n-    test_demangling_exact \"gnu: overload1arg__FUl\" \"overload1arg(unsigned long)\"\n-    test_demangling_exact \"gnu: overload1arg__FUs\" \"overload1arg(unsigned short)\"\n-    test_demangling_exact \"gnu: overload1arg__Fc\" \"overload1arg(char)\"\n-    test_demangling_exact \"gnu: overload1arg__Fd\" \"overload1arg(double)\"\n-    test_demangling_exact \"gnu: overload1arg__Ff\" \"overload1arg(float)\"\n-    test_demangling_exact \"gnu: overload1arg__Fi\" \"overload1arg(int)\"\n-    test_demangling_exact \"gnu: overload1arg__Fl\" \"overload1arg(long)\"\n-    test_demangling_exact \"gnu: overload1arg__Fs\" \"overload1arg(short)\"\n-    test_demangling_exact \"gnu: overload1arg__Fv\" \"overload1arg(void)\"\n-    test_demangling_exact \"gnu: overloadargs__Fi\" \"overloadargs(int)\"\n-    test_demangling_exact \"gnu: overloadargs__Fii\" \"overloadargs(int, int)\"\n-    test_demangling_exact \"gnu: overloadargs__Fiii\" \"overloadargs(int, int, int)\"\n-    test_demangling_exact \"gnu: overloadargs__Fiiii\" \"overloadargs(int, int, int, int)\"\n-\n-    test_demangling_exact \"gnu: overloadargs__Fiiiii\" \"overloadargs(int, int, int, int, int)\"\n-    test_demangling_exact \"gnu: overloadargs__Fiiiiii\" \"overloadargs(int, int, int, int, int, int)\"\n-    test_demangling_exact \"gnu: overloadargs__Fiiiiiii\" \"overloadargs(int, int, int, int, int, int, int)\"\n-    test_demangling_exact \"gnu: overloadargs__Fiiiiiiii\" \"overloadargs(int, int, int, int, int, int, int, int)\"\n-    test_demangling_exact \"gnu: overloadargs__Fiiiiiiiii\" \"overloadargs(int, int, int, int, int, int, int, int, int)\"\n-    test_demangling_exact \"gnu: overloadargs__Fiiiiiiiiii\" \"overloadargs(int, int, int, int, int, int, int, int, int, int)\"\n-    test_demangling_exact \"gnu: overloadargs__Fiiiiiiiiiii\" \"overloadargs(int, int, int, int, int, int, int, int, int, int, int)\"\n-    test_demangling \"gnu: pick__13ivCompositionP8ivCanvasRC12ivAllocationiR5ivHit\" \\\n-\t\"ivComposition::pick\\[(\\]+ivCanvas \\[*\\]+, (const ivAllocation|ivAllocation const) &, int, ivHit &\\[)\\]+\"\n-    test_demangling \"gnu: pointer__C11ivHScrollerRC7ivEventRC12ivAllocation\" \\\n-\t\"ivHScroller::pointer\\[(\\]+(const ivEvent|ivEvent const) &, (const ivAllocation|ivAllocation const) &\\[)\\]+ const\"\n-    test_demangling_exact \"gnu: poke__8ivRasterUlUlffff\" \"ivRaster::poke(unsigned long, unsigned long, float, float, float, float)\"\n-    test_demangling_exact \"gnu: polar__Fdd\" \"polar(double, double)\"\n-    test_demangling \"gnu: read__10osStdInputRPCc\" \\\n-\t\"osStdInput::read\\[(\\]+(const char|char const) \\[*\\]+&\\[)\\]+\"\n-\n-    test_demangling_exact \"gnu: scale__13ivTransformerff\" \"ivTransformer::scale(float, float)\"\n-    test_demangling \"gnu: scanw__12CursesWindowPCce\" \\\n-\t\"CursesWindow::scanw\\[(\\]+(const char|char const) \\[*\\]+,...\\[)\\]+\"\n-    test_demangling \"gnu: scmp__FPCcT0\" \\\n-\t\"scmp\\[(\\]+(const char|char const) \\[*\\]+, (const char|char const) \\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"gnu: sgetn__7filebufPci\" \"filebuf::sgetn(char *, int)\"\n-    test_demangling_exact \"gnu: shift__FP5_FrepiT0\" \"shift(_Frep *, int, _Frep *)\"\n-    test_demangling_exact \"gnu: test__C6BitSeti\" \"BitSet::test(int) const\"\n-    test_demangling_exact \"gnu: test__C6BitSetii\" \"BitSet::test(int, int) const\"\n-    test_demangling \"gnu: testbit__FRC7Integerl\" \\\n-\t\"testbit\\[(\\]+(const Integer|Integer const) &, long\\[)\\]+\"\n-    test_demangling_exact \"gnu: text_source__8Documentl\" \"Document::text_source(long)\"\n-    test_demangling_exact \"gnu: variance__6Erlangd\" \"Erlang::variance(double)\"\n-    test_demangling \"gnu: vform__8iostreamPCcPc\" \\\n-\t\"iostream::vform\\[(\\]+(const char|char const) \\[*\\]+, char \\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"gnu: view__14DocumentViewerP8ItemViewP11TabularItem\" \"DocumentViewer::view(ItemView *, TabularItem *)\"\n-    test_demangling_exact \"gnu: xy_extents__11ivExtensionffff\" \"ivExtension::xy_extents(float, float, float, float)\"\n-    test_demangling_exact \"gnu: zero__8osMemoryPvUi\" \"osMemory::zero(void *, unsigned int)\"\n-    test_demangling_exact \"gnu: _2T4\\$N\" \"T4::N\"\n-    test_demangling_exact \"gnu: _Q22T42t1\\$N\" \"T4::t1::N\"\n-    test_demangling_exact \"gnu: get__2T1\" \"T1::get(void)\"\n-    test_demangling_exact \"gnu: get__Q22T11a\" \"T1::a::get(void)\"\n-    test_demangling_exact \"gnu: get__Q32T11a1b\" \"T1::a::b::get(void)\"\n-    test_demangling_exact \"gnu: get__Q42T11a1b1c\" \"T1::a::b::c::get(void)\"\n-    test_demangling_exact \"gnu: get__Q52T11a1b1c1d\" \"T1::a::b::c::d::get(void)\"\n-    test_demangling_exact \"gnu: put__2T1i\" \"T1::put(int)\"\n-    test_demangling_exact \"gnu: put__Q22T11ai\" \"T1::a::put(int)\"\n-    test_demangling_exact \"gnu: put__Q32T11a1bi\" \"T1::a::b::put(int)\"\n-    test_demangling_exact \"gnu: put__Q42T11a1b1ci\" \"T1::a::b::c::put(int)\"\n-    test_demangling_exact \"gnu: put__Q52T11a1b1c1di\" \"T1::a::b::c::d::put(int)\"\n-\n-    test_demangling_exact \"gnu: bar__3fooPv\"       \"foo::bar(void *)\"\n-    test_demangling \"gnu: bar__3fooPCv\" \\\n-\t\"foo::bar\\[(\\]+(const void|void const) *\\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"gnu: bar__C3fooPv\"      \"foo::bar(void *) const\"\n-    test_demangling \"gnu: bar__C3fooPCv\" \\\n-\t\"foo::bar\\[(\\]+(const void|void const) *\\[*\\]+\\[)\\]+ const\"\n-    test_demangling_exact \"gnu: __eq__3fooRT0\"     \"foo::operator==(foo &)\"\n-    test_demangling \"gnu: __eq__3fooRC3foo\" \\\n-\t \"foo::operator==\\[(\\]+(const foo|foo const) &\\[)\\]+\"\n-    test_demangling_exact \"gnu: __eq__C3fooR3foo\"  \"foo::operator==(foo &) const\"\n-    test_demangling \"gnu: __eq__C3fooRT0\" \\\n-\t   \"foo::operator==\\[(\\]+(const foo|foo const) &\\[)\\]+ const\"\n-\n-    test_demangling_exact \"gnu: elem__t6vector1Zdi\" \"vector<double>::elem(int)\"\n-    test_demangling_exact \"gnu: elem__t6vector1Zii\" \"vector<int>::elem(int)\"\n-    test_demangling_exact \"gnu: __t6vector1Zdi\"     \"vector<double>::vector(int)\"\n-    test_demangling_exact \"gnu: __t6vector1Zii\"     \"vector<int>::vector(int)\"\n-    test_demangling_exact \"gnu: _\\$_t6vector1Zdi\"    \"vector<double>::~vector(int)\"\n-    test_demangling_exact \"gnu: _\\$_t6vector1Zii\"    \"vector<int>::~vector(int)\"\n-\n-    test_demangling_exact \"gnu: __nw__t2T11ZcUi\" \"T1<char>::operator new(unsigned int)\"\n-    test_demangling_exact \"gnu: __nw__t2T11Z1tUi\" \"T1<t>::operator new(unsigned int)\"\n-    test_demangling_exact \"gnu: __dl__t2T11ZcPv\" \"T1<char>::operator delete(void *)\"\n-    test_demangling_exact \"gnu: __dl__t2T11Z1tPv\" \"T1<t>::operator delete(void *)\"\n-    test_demangling_exact \"gnu: __t2T11Zci\" \"T1<char>::T1(int)\"\n-    test_demangling_exact \"gnu: __t2T11Zc\" \"T1<char>::T1(void)\"\n-    test_demangling_exact \"gnu: __t2T11Z1ti\" \"T1<t>::T1(int)\"\n-    test_demangling_exact \"gnu: __t2T11Z1t\" \"T1<t>::T1(void)\"\n-\n-    test_demangling_exact \"gnu: __Q2t4List1Z10VHDLEntity3Pix\" \\\n-\t\"List<VHDLEntity>::Pix::Pix(void)\"\n-\n-    test_demangling_exact \"gnu: __Q2t4List1Z10VHDLEntity3PixPQ2t4List1Z10VHDLEntity7element\" \\\n-\t\"List<VHDLEntity>::Pix::Pix(List<VHDLEntity>::element *)\"\n-\n-    test_demangling_exact \"gnu: __Q2t4List1Z10VHDLEntity3PixRCQ2t4List1Z10VHDLEntity3Pix\" \\\n-\t\"List<VHDLEntity>::Pix::Pix(List<VHDLEntity>::Pix const &)\"\n-\n-    test_demangling_exact \"gnu: __Q2t4List1Z10VHDLEntity7elementRC10VHDLEntityPT0\" \\\n-\t\"List<VHDLEntity>::element::element(VHDLEntity const &, List<VHDLEntity>::element *)\"\n-\n-    test_demangling_exact \"gnu: __Q2t4List1Z10VHDLEntity7elementRCQ2t4List1Z10VHDLEntity7element\" \\\n-\t\"List<VHDLEntity>::element::element(List<VHDLEntity>::element const &)\"\n-\n-    test_demangling_exact \"gnu: __cl__C11VHDLLibraryGt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity\" \\\n-\t\"VHDLLibrary::operator()(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >) const\"\n-\n-    test_demangling_exact \"gnu: __cl__Ct4List1Z10VHDLEntityRCQ2t4List1Z10VHDLEntity3Pix\" \\\n-\t\"List<VHDLEntity>::operator()(List<VHDLEntity>::Pix const &) const\"\n-\n-    test_demangling_exact \"gnu: __ne__FPvRCQ2t4List1Z10VHDLEntity3Pix\" \\\n-\t\"operator!=(void *, List<VHDLEntity>::Pix const &)\"\n-\n-    test_demangling_exact \"gnu: __ne__FPvRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity\" \\\n-\t\"operator!=(void *, PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> > const &)\"\n-\n-    test_demangling_exact \"gnu: __t4List1Z10VHDLEntityRCt4List1Z10VHDLEntity\" \\\n-\t\"List<VHDLEntity>::List(List<VHDLEntity> const &)\"\n-\n-    test_demangling_exact \"gnu: __t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity\" \\\n-\t\"PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::PixX(void)\"\n-\n-    test_demangling_exact \"gnu: __t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityP14VHDLLibraryRepGQ2t4List1Z10VHDLEntity3Pix\" \\\n-\t\"PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::PixX(VHDLLibraryRep *, List<VHDLEntity>::Pix)\"\n-\n-    test_demangling_exact \"gnu: __t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity\" \\\n-\t\"PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::PixX(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> > const &)\"\n-\n-    test_demangling_exact \"gnu: nextE__C11VHDLLibraryRt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity\" \\\n-\t\"VHDLLibrary::nextE(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> > &) const\"\n-\n-    test_demangling_exact \"gnu: next__Ct4List1Z10VHDLEntityRQ2t4List1Z10VHDLEntity3Pix\" \\\n-\t\"List<VHDLEntity>::next(List<VHDLEntity>::Pix &) const\"\n-\n-    test_demangling_exact \"gnu: _GLOBAL_\\$D\\$set\" \"global destructors keyed to set\"\n-\n-    test_demangling_exact \"gnu: _GLOBAL_\\$I\\$set\" \"global constructors keyed to set\"\n-\n-    test_demangling_exact \"gnu: __as__t5ListS1ZUiRCt5ListS1ZUi\" \\\n-\t\"ListS<unsigned int>::operator=(ListS<unsigned int> const &)\"\n-\n-    test_demangling_exact \"gnu: __cl__Ct5ListS1ZUiRCQ2t5ListS1ZUi3Vix\" \\\n-\t\"ListS<unsigned int>::operator()(ListS<unsigned int>::Vix const &) const\"\n-\n-    test_demangling_exact \"gnu: __cl__Ct5SetLS1ZUiRCQ2t5SetLS1ZUi3Vix\" \\\n-\t\"SetLS<unsigned int>::operator()(SetLS<unsigned int>::Vix const &) const\"\n-\n-    test_demangling_exact \"gnu: __t10ListS_link1ZUiRCUiPT0\" \\\n-\t\"ListS_link<unsigned int>::ListS_link(unsigned int const &, ListS_link<unsigned int> *)\"\n-\n-    test_demangling_exact \"gnu: __t10ListS_link1ZUiRCt10ListS_link1ZUi\" \\\n-\t\"ListS_link<unsigned int>::ListS_link(ListS_link<unsigned int> const &)\"\n-\n-    test_demangling_exact \"gnu: __t5ListS1ZUiRCt5ListS1ZUi\" \\\n-\t\"ListS<unsigned int>::ListS(ListS<unsigned int> const &)\"\n-\n-    test_demangling_exact \"gnu: next__Ct5ListS1ZUiRQ2t5ListS1ZUi3Vix\" \\\n-\t\"ListS<unsigned int>::next(ListS<unsigned int>::Vix &) const\"\n-\n-    test_demangling_exact \"gnu: __ne__FPvRCQ2t5SetLS1ZUi3Vix\" \\\n-\t\"operator!=(void *, SetLS<unsigned int>::Vix const &)\"\n-    test_demangling_exact \"gnu: __t8ListElem1Z5LabelRt4List1Z5Label\" \\\n-\t\"ListElem<Label>::ListElem(List<Label> &)\"\n-    test_demangling_exact \"gnu: __t8BDDHookV1ZPcRCPc\" \\\n-\t\"BDDHookV<char *>::BDDHookV(char *const &)\"\n-\n-    test_demangling_exact \"gnu: _vt\\$t8BDDHookV1ZPc\" \"BDDHookV<char *> virtual table\"\n-\n-    test_demangling_exact \"gnu: __ne__FPvRCQ211BDDFunction4VixB\" \\\n-\t\"operator!=(void *, BDDFunction::VixB const &)\"\n-    test_demangling_exact \"gnu: __eq__FPvRCQ211BDDFunction4VixB\" \\\n-\t\"operator==(void *, BDDFunction::VixB const &)\"\n-\n-    test_demangling_exact \"gnu: relativeId__CQ36T_phi210T_preserve8FPC_nextRCQ26T_phi210T_preserveRC10Parameters\" \\\n-\t \"T_phi2::T_preserve::FPC_next::relativeId(T_phi2::T_preserve const &, Parameters const &) const\"\n-\n-    test_demangling_exact \"gnu: _Utf390_1__1_9223372036854775807__9223372036854775\" \\\n-\t    \"Can't demangle \\\"_Utf390_1__1_9223372036854775807__9223372036854775\\\"\"\n-    test_demangling_exact \"gnu: foo__I40\" \"foo(int64_t)\"\n-    test_demangling_exact \"gnu: foo__I_200_\" \"foo(int512_t)\"\n-    test_demangling_exact \"gnu: foo__I_200\" \"Can't demangle \\\"foo__I_200\\\"\"\n-\n     # Rvalue reference tests\n     test_demangling_exact \"gnu-v3: _ZN9ArrowLine19ArrowheadIntersectsEP9ArrowheadO6BoxObjP7Graphic\" \"ArrowLine::ArrowheadIntersects(Arrowhead*, BoxObj&&, Graphic*)\"\n     test_demangling \"gnu-v3: _Z13BitPatterntoaOK10BitPatternccc\" \\\n@@ -560,1012 +154,8 @@ proc test_gnu_style_demangling {} {\n \t\"VHDLLibrary::nextE(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >&&) const\"\n     test_demangling_exact \"gnu-v3: _ZNK4ListI10VHDLEntityE4nextEONS1_3PixE\" \\\n \t\"List<VHDLEntity>::next(List<VHDLEntity>::Pix&&) const\"\n-\n-    ## Buffer overrun.  Should make GDB crash.  Woo hoo!\n-    test_demangling_exact \"gnu: foo__I_4000000000000000000000000000000000000000000000000000000000000000000000000\" \"Can't demangle \\\"foo__I_4000000000000000000000000000000000000000000000000000000000000000000000000\\\"\"\n-\n-    ## 1999-04-19: \"Fix from Dale Hawkins\".  Shouldn't segfault.\n-    # Accept even a dubious demangling; the string is ambiguous.\n-\n-    gdb_test_multiple \"demangle __thunk_64__0RL__list__Q29CosNaming20_proxy_NamingContextUlRPt25_CORBA_Unbounded_Sequence1ZQ29CosNaming7BindingRPQ29CosNaming15BindingIterator\" \"gnu: __thunk_64__0RL__list__Q29CosNaming20_proxy_NamingContextUlRPt25_CORBA_Unbounded_Sequence1ZQ29CosNaming7BindingRPQ29CosNaming15BindingIterator\" {\n-\t-re \"virtual function thunk \\\\(delta:-64\\\\) for CosNaming::_proxy_NamingContext::_0RL__list\\\\(unsigned long, _CORBA_Unbounded_Sequence<CosNaming::Binding> \\\\*\\\\&, CosNaming::BindingIterator \\\\*\\\\&\\\\)\\r\\n$gdb_prompt $\" {\n-\t    pass \"gnu: __thunk_64__0RL__list__Q29CosNaming20_proxy_NamingContextUlRPt25_CORBA_Unbounded_Sequence1ZQ29CosNaming7BindingRPQ29CosNaming15BindingIterator\"\n-\t}\n-\t-re \".*Can't demangle \\\"__thunk_64__0RL__list__Q29CosNaming20_proxy_NamingContextUlRPt25_CORBA_Unbounded_Sequence1ZQ29CosNaming7BindingRPQ29CosNaming15BindingIterator\\\"\\r\\n$gdb_prompt $\" {\n-\t    pass \"gnu: __thunk_64__0RL__list__Q29CosNaming20_proxy_NamingContextUlRPt25_CORBA_Unbounded_Sequence1ZQ29CosNaming7BindingRPQ29CosNaming15BindingIterator\"\n-\t}\n-    }\n-}\n-\n-#\n-#  Test lucid style name demangling\n-#\n-\n-proc test_lucid_style_demangling {} {\n-    test_demangling_exact \"lucid: WS__FR7istream\" \"WS(istream &)\"\n-    test_demangling_exact \"lucid: __aa__3fooFR3foo\" \"foo::operator&&(foo &)\"\n-    test_demangling_exact \"lucid: __aad__3fooFR3foo\" \"foo::operator&=(foo &)\"\n-    test_demangling_exact \"lucid: __ad__3fooFR3foo\" \"foo::operator&(foo &)\"\n-    test_demangling_exact \"lucid: __adv__3fooFR3foo\" \"foo::operator/=(foo &)\"\n-    test_demangling_exact \"lucid: __adv__7complexF7complex\" \"complex::operator/=(complex)\"\n-    test_demangling_exact \"lucid: __aer__3fooFR3foo\" \"foo::operator^=(foo &)\"\n-    test_demangling_exact \"lucid: __als__3fooFR3foo\" \"foo::operator<<=(foo &)\"\n-    test_demangling_exact \"lucid: __amd__3fooFR3foo\" \"foo::operator%=(foo &)\"\n-    test_demangling_exact \"lucid: __ami__3fooFR3foo\" \"foo::operator-=(foo &)\"\n-    test_demangling_exact \"lucid: __amu__3fooFR3foo\" \"foo::operator*=(foo &)\"\n-    test_demangling_exact \"lucid: __amu__7complexF7complex\" \"complex::operator*=(complex)\"\n-    test_demangling_exact \"lucid: __aor__3fooFR3foo\" \"foo::operator|=(foo &)\"\n-    test_demangling_exact \"lucid: __apl__3fooFR3foo\" \"foo::operator+=(foo &)\"\n-    test_demangling_exact \"lucid: __ars__3fooFR3foo\" \"foo::operator>>=(foo &)\"\n-    test_demangling_exact \"lucid: __as__18istream_withassignFP9streambuf\" \"istream_withassign::operator=(streambuf *)\"\n-    test_demangling_exact \"lucid: __as__18istream_withassignFR7istream\" \"istream_withassign::operator=(istream &)\"\n-    test_demangling_exact \"lucid: __as__3fooFR3foo\" \"foo::operator=(foo &)\"\n-    test_demangling_exact \"lucid: __as__3iosFR3ios\" \"ios::operator=(ios &)\"\n-    test_demangling_exact \"lucid: __cl__3fooFR3foo\" \"foo::operator()(foo &)\"\n-    test_demangling_exact \"lucid: __cm__3fooFR3foo\" \"foo::operator, (foo &)\"\n-\n-    test_demangling_exact \"lucid: __co__3fooFv\" \"foo::operator~(void)\"\n-    test_demangling_exact \"lucid: __ct__10istrstreamFPc\" \"istrstream::istrstream(char *)\"\n-    test_demangling_exact \"lucid: __ct__10istrstreamFPci\" \"istrstream::istrstream(char *, int)\"\n-    test_demangling_exact \"lucid: __ct__10ostrstreamFPciT2\" \"ostrstream::ostrstream(char *, int, int)\"\n-    test_demangling_exact \"lucid: __ct__10ostrstreamFv\" \"ostrstream::ostrstream(void)\"\n-    test_demangling_exact \"lucid: __ct__10smanip_intFPFR3iosi_R3iosi\" \"smanip_int::smanip_int(ios &(*)(ios &, int), int)\"\n-    test_demangling \"lucid: __ct__11c_exceptionFPcRC7complexT2\" \"c_exception::c_exception\\[(\\]+char \\[*\\]+, (const complex|complex const) &, (const complex|complex const) &\\[)\\]+\"\n-    test_demangling \"lucid: __ct__11fstreambaseFPCciT2\" \"fstreambase::fstreambase\\[(\\]+(const char|char const) \\[*\\]+, int, int\\[)\\]+\"\n-    test_demangling_exact \"lucid: __ct__11fstreambaseFi\" \"fstreambase::fstreambase(int)\"\n-    test_demangling_exact \"lucid: __ct__11fstreambaseFiPcT1\" \"fstreambase::fstreambase(int, char *, int)\"\n-    test_demangling_exact \"lucid: __ct__11fstreambaseFv\" \"fstreambase::fstreambase(void)\"\n-    test_demangling_exact \"lucid: __ct__11smanip_longFPFR3iosl_R3iosl\" \"smanip_long::smanip_long(ios &(*)(ios &, long), long)\"\n-    test_demangling_exact \"lucid: __ct__11stdiostreamFP4FILE\" \"stdiostream::stdiostream(FILE *)\"\n-    test_demangling_exact \"lucid: __ct__12strstreambufFPFl_PvPFPv_v\" \"strstreambuf::strstreambuf(void *(*)(long), void (*)(void *))\"\n-    test_demangling_exact \"lucid: __ct__12strstreambufFPUciT1\" \"strstreambuf::strstreambuf(unsigned char *, int, unsigned char *)\"\n-    test_demangling_exact \"lucid: __ct__12strstreambufFPciT1\" \"strstreambuf::strstreambuf(char *, int, char *)\"\n-    test_demangling_exact \"lucid: __ct__12strstreambufFi\" \"strstreambuf::strstreambuf(int)\"\n-    test_demangling_exact \"lucid: __ct__12strstreambufFv\" \"strstreambuf::strstreambuf(void)\"\n-    test_demangling_exact \"lucid: __ct__13strstreambaseFPciT1\" \"strstreambase::strstreambase(char *, int, char *)\"\n-    test_demangling_exact \"lucid: __ct__3fooFR3foo\" \"foo::foo(foo &)\"\n-\n-    test_demangling_exact \"lucid: __ct__3fooFi\" \"foo::foo(int)\"\n-    test_demangling_exact \"lucid: __ct__3fooFiN31\" \"foo::foo(int, int, int, int)\"\n-    test_demangling \"lucid: __ct__3fooFiPCc\" \\\n-\t\"foo::foo\\[(\\]+int, (const char|char const) \\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"lucid: __ct__3fooFiR3fooT1T2T1T2\" \"foo::foo(int, foo &, int, foo &, int, foo &)\"\n-    test_demangling_exact \"lucid: __ct__3iosFP9streambuf\" \"ios::ios(streambuf *)\"\n-    test_demangling_exact \"lucid: __ct__7filebufFiPcT1\" \"filebuf::filebuf(int, char *, int)\"\n-    test_demangling \"lucid: __ct__7fstreamFPCciT2\" \\\n-\t\"fstream::fstream\\[(\\]+(const char|char const) \\[*\\]+, int, int\\[)\\]+\"\n-    test_demangling_exact \"lucid: __ct__7fstreamFiPcT1\" \"fstream::fstream(int, char *, int)\"\n-    test_demangling_exact \"lucid: __ct__7istreamFP9streambuf\" \"istream::istream(streambuf *)\"\n-    test_demangling_exact \"lucid: __ct__7istreamFP9streambufiP7ostream\" \"istream::istream(streambuf *, int, ostream *)\"\n-    test_demangling_exact \"lucid: __ct__7istreamFiPcT1\" \"istream::istream(int, char *, int)\"\n-    test_demangling_exact \"lucid: __ct__7istreamFiT1P7ostream\" \"istream::istream(int, int, ostream *)\"\n-    test_demangling_exact \"lucid: __ct__7ostreamFP9streambuf\" \"ostream::ostream(streambuf *)\"\n-    test_demangling_exact \"lucid: __ct__7ostreamFiPc\" \"ostream::ostream(int, char *)\"\n-    test_demangling \"lucid: __ct__8ifstreamFPCciT2\" \\\n-\t\"ifstream::ifstream\\[(\\]+(const char|char const) \\[*\\]+, int, int\\[)\\]+\"\n-    test_demangling_exact \"lucid: __ct__8ifstreamFiPcT1\" \"ifstream::ifstream(int, char *, int)\"\n-\n-    test_demangling_exact \"lucid: __ct__Q23foo3barFv\" \"foo::bar::bar(void)\"\n-    test_demangling_exact \"lucid: __ct__Q33foo3bar4bellFv\" \"foo::bar::bell::bell(void)\"\n-    test_demangling_exact \"lucid: __dl__3fooSFPv\" \"foo::operator delete(void *) static\"\n-    test_demangling_exact \"lucid: __dl__FPv\" \"operator delete(void *)\"\n-    test_demangling_exact \"lucid: __dt__10istrstreamFv\" \"istrstream::~istrstream(void)\"\n-\n-    test_demangling_exact \"lucid: __dt__Q23foo3barFv\" \"foo::bar::~bar(void)\"\n-    test_demangling_exact \"lucid: __dt__Q33foo3bar4bellFv\" \"foo::bar::bell::~bell(void)\"\n-    test_demangling_exact \"lucid: __dv__3fooFR3foo\" \"foo::operator/(foo &)\"\n-    test_demangling_exact \"lucid: __dv__F7complexT1\" \"operator/(complex, complex)\"\n-    test_demangling_exact \"lucid: __eq__3fooFR3foo\" \"foo::operator==(foo &)\"\n-    test_demangling_exact \"lucid: __er__3fooFR3foo\" \"foo::operator^(foo &)\"\n-    test_demangling_exact \"lucid: __ge__3fooFR3foo\" \"foo::operator>=(foo &)\"\n-    test_demangling_exact \"lucid: __gt__3fooFR3foo\" \"foo::operator>(foo &)\"\n-    test_demangling_exact \"lucid: __le__3fooFR3foo\" \"foo::operator<=(foo &)\"\n-    test_demangling_exact \"lucid: __ls__3fooFR3foo\" \"foo::operator<<(foo &)\"\n-    test_demangling_exact \"lucid: __ls__7ostreamFP9streambuf\" \"ostream::operator<<(streambuf *)\"\n-\n-    test_demangling \"lucid: __ls__7ostreamFPCc\" \\\n-\t\"ostream::operator<<\\[(\\]+(const char|char const) \\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"lucid: __ls__7ostreamFPFR3ios_R3ios\" \"ostream::operator<<(ios &(*)(ios &))\"\n-    test_demangling_exact \"lucid: __ls__7ostreamFPv\" \"ostream::operator<<(void *)\"\n-    test_demangling_exact \"lucid: __ls__7ostreamFUi\" \"ostream::operator<<(unsigned int)\"\n-    test_demangling_exact \"lucid: __ls__7ostreamFUl\" \"ostream::operator<<(unsigned long)\"\n-    test_demangling_exact \"lucid: __ls__7ostreamFd\" \"ostream::operator<<(double)\"\n-    test_demangling_exact \"lucid: __ls__7ostreamFf\" \"ostream::operator<<(float)\"\n-    test_demangling_exact \"lucid: __ls__7ostreamFi\" \"ostream::operator<<(int)\"\n-    test_demangling_exact \"lucid: __ls__7ostreamFl\" \"ostream::operator<<(long)\"\n-    test_demangling_exact \"lucid: __ls__FR7ostream7complex\" \"operator<<(ostream &, complex)\"\n-    test_demangling_exact \"lucid: __lt__3fooFR3foo\" \"foo::operator<(foo &)\"\n-    test_demangling_exact \"lucid: __md__3fooFR3foo\" \"foo::operator%(foo &)\"\n-    test_demangling_exact \"lucid: __mi__3fooFR3foo\" \"foo::operator-(foo &)\"\n-    test_demangling_exact \"lucid: __ml__3fooFR3foo\" \"foo::operator*(foo &)\"\n-    test_demangling_exact \"lucid: __ml__F7complexT1\" \"operator*(complex, complex)\"\n-    test_demangling_exact \"lucid: __mm__3fooFi\" \"foo::operator--(int)\"\n-    test_demangling_exact \"lucid: __ne__3fooFR3foo\" \"foo::operator!=(foo &)\"\n-    test_demangling_exact \"lucid: __nt__3fooFv\" \"foo::operator!(void)\"\n-    test_demangling_exact \"lucid: __nw__3fooSFi\" \"foo::operator new(int) static\"\n-    test_demangling_exact \"lucid: __nw__FUi\" \"operator new(unsigned int)\"\n-    test_demangling_exact \"lucid: __nw__FUiPv\" \"operator new(unsigned int, void *)\"\n-    test_demangling_exact \"lucid: __oo__3fooFR3foo\" \"foo::operator||(foo &)\"\n-    test_demangling_exact \"lucid: __opPc__3fooFv\" \"foo::operator char *(void)\"\n-    test_demangling_exact \"lucid: __opi__3fooFv\" \"foo::operator int(void)\"\n-    test_demangling_exact \"lucid: __or__3fooFR3foo\" \"foo::operator|(foo &)\"\n-\n-    test_demangling_exact \"lucid: __pl__3fooFR3foo\" \"foo::operator+(foo &)\"\n-    test_demangling_exact \"lucid: __pp__3fooFi\" \"foo::operator++(int)\"\n-    test_demangling_exact \"lucid: __pt__3fooFv\" \"foo::operator->(void)\"\n-    test_demangling_exact \"lucid: __rm__3fooFR3foo\" \"foo::operator->*(foo &)\"\n-    test_demangling_exact \"lucid: __rs__3fooFR3foo\" \"foo::operator>>(foo &)\"\n-    test_demangling_exact \"lucid: __rs__7istreamFP9streambuf\" \"istream::operator>>(streambuf *)\"\n-    test_demangling_exact \"lucid: __rs__7istreamFPFR3ios_R3ios\" \"istream::operator>>(ios &(*)(ios &))\"\n-    test_demangling_exact \"lucid: __rs__7istreamFPFR7istream_R7istream\" \"istream::operator>>(istream &(*)(istream &))\"\n-    test_demangling_exact \"lucid: __rs__7istreamFPUc\" \"istream::operator>>(unsigned char *)\"\n-    test_demangling_exact \"lucid: __rs__7istreamFPc\" \"istream::operator>>(char *)\"\n-    test_demangling_exact \"lucid: __rs__7istreamFRUi\" \"istream::operator>>(unsigned int &)\"\n-    test_demangling_exact \"lucid: __rs__7istreamFRUl\" \"istream::operator>>(unsigned long &)\"\n-    test_demangling_exact \"lucid: __rs__7istreamFRUs\" \"istream::operator>>(unsigned short &)\"\n-    test_demangling_exact \"lucid: __rs__7istreamFRd\" \"istream::operator>>(double &)\"\n-    test_demangling_exact \"lucid: __rs__7istreamFRf\" \"istream::operator>>(float &)\"\n-    test_demangling_exact \"lucid: __rs__7istreamFRi\" \"istream::operator>>(int &)\"\n-    test_demangling_exact \"lucid: __rs__7istreamFRl\" \"istream::operator>>(long &)\"\n-    test_demangling_exact \"lucid: __rs__7istreamFRs\" \"istream::operator>>(short &)\"\n-    test_demangling_exact \"lucid: __rs__FR7istreamR7complex\" \"operator>>(istream &, complex &)\"\n-    test_demangling \"lucid: __vc__3fooFR3foo\" \"foo::operator\\\\\\[\\\\\\]\\\\(foo &\\\\)\"\n-    test_demangling_exact \"lucid: __vtbl__10istrstream\" \"istrstream virtual table\"\n-    test_demangling_exact \"lucid: __vtbl__17ostream__iostream__19iostream_withassign\" \"iostream_withassign::ostream__iostream virtual table\"\n-\n-    test_demangling_exact \"lucid: __vtbl__3ios\" \"ios virtual table\"\n-    test_demangling_exact \"lucid: __vtbl__3ios__13strstreambase\" \"strstreambase::ios virtual table\"\n-\n-    # GDB 930414 demangles this as t_cc_main_ (obviously wrong).\n-    # GDB 930701 gets into an infinite loop.\n-    # GDB 930727 says \"Can't demangle\".\n-    # What is the correct demangling?  FIXME.\n-\n-    # NOTE: carlton/2003-01-17: No, don't FIXME, just obsolete lucid.\n-    # I'm KFAILing this rather than deleting it for form's sake.\n-    setup_kfail \"gdb/945\" \"*-*-*\"\n-    test_demangling_exact \"lucid: __vtbl__3foo__vt_cc_main_\" \"\"\n-\n-    test_demangling_exact \"lucid: abs__F7complex\" \"abs(complex)\"\n-    test_demangling_exact \"lucid: allocate__9streambufFv\" \"streambuf::allocate(void)\"\n-    test_demangling_exact \"lucid: attach__11fstreambaseFi\" \"fstreambase::attach(int)\"\n-    test_demangling_exact \"lucid: bitalloc__3iosSFv\" \"ios::bitalloc(void) static\"\n-    test_demangling_exact \"lucid: chr__FiT1\" \"chr(int, int)\"\n-    test_demangling_exact \"lucid: complex_error__FR11c_exception\" \"complex_error(c_exception &)\"\n-    test_demangling_exact \"lucid: complexfunc2__FPFPc_i\" \"complexfunc2(int (*)(char *))\"\n-    test_demangling_exact \"lucid: complexfunc3__FPFPFPl_s_i\" \"complexfunc3(int (*)(short (*)(long *)))\"\n-\n-    test_demangling_exact \"lucid: complexfunc4__FPFPFPc_s_i\" \"complexfunc4(int (*)(short (*)(char *)))\"\n-    test_demangling_exact \"lucid: complexfunc5__FPFPc_PFl_i\" \"complexfunc5(int (*(*)(char *))(long))\"\n-    test_demangling_exact \"lucid: complexfunc6__FPFPi_PFl_i\" \"complexfunc6(int (*(*)(int *))(long))\"\n-    test_demangling_exact \"lucid: complexfunc7__FPFPFPc_i_PFl_i\" \"complexfunc7(int (*(*)(int (*)(char *)))(long))\"\n-    test_demangling_exact \"lucid: complicated_put__7ostreamFc\" \"ostream::complicated_put(char)\"\n-    test_demangling_exact \"lucid: conv10__FlPc\" \"conv10(long, char *)\"\n-    test_demangling_exact \"lucid: conv16__FUlPc\" \"conv16(unsigned long, char *)\"\n-    test_demangling_exact \"lucid: dec__FR3ios\" \"dec(ios &)\"\n-    test_demangling_exact \"lucid: dec__Fli\" \"dec(long, int)\"\n-    test_demangling_exact \"lucid: dofield__FP7ostreamPciT2T3\" \"dofield(ostream *, char *, int, char *, int)\"\n-\n-    test_demangling_exact \"lucid: flags__3iosFl\" \"ios::flags(long)\"\n-    test_demangling_exact \"lucid: flags__3iosFv\" \"ios::flags(void)\"\n-    test_demangling_exact \"lucid: foo__FiN31\" \"foo(int, int, int, int)\"\n-    test_demangling_exact \"lucid: foo__FiR3fooT1T2T1T2\" \"foo(int, foo &, int, foo &, int, foo &)\"\n-    test_demangling_exact \"lucid: foo___3barFl\" \"bar::foo_(long)\"\n-    test_demangling \"lucid: form__FPCce\" \"form\\[(\\]+(const char|char const) \\[*\\]+,...\\[)\\]+\"\n-    test_demangling_exact \"lucid: get__7istreamFPcic\" \"istream::get(char *, int, char)\"\n-    test_demangling_exact \"lucid: get__7istreamFR9streambufc\" \"istream::get(streambuf &, char)\"\n-    test_demangling_exact \"lucid: get_complicated__7istreamFRUc\" \"istream::get_complicated(unsigned char &)\"\n-    test_demangling_exact \"lucid: get_complicated__7istreamFRc\" \"istream::get_complicated(char &)\"\n-    test_demangling_exact \"lucid: getline__7istreamFPUcic\" \"istream::getline(unsigned char *, int, char)\"\n-    test_demangling_exact \"lucid: getline__7istreamFPcic\" \"istream::getline(char *, int, char)\"\n-\n-    test_demangling_exact \"lucid: ignore__7istreamFiT1\" \"istream::ignore(int, int)\"\n-    test_demangling_exact \"lucid: init__12strstreambufFPciT1\" \"strstreambuf::init(char *, int, char *)\"\n-    test_demangling_exact \"lucid: init__3iosFP9streambuf\" \"ios::init(streambuf *)\"\n-    test_demangling_exact \"lucid: initcount__13Iostream_init\" \"Iostream_init::initcount\"\n-    test_demangling_exact \"lucid: ipfx__7istreamFi\" \"istream::ipfx(int)\"\n-    test_demangling_exact \"lucid: ls_complicated__7ostreamFUc\" \"ostream::ls_complicated(unsigned char)\"\n-    test_demangling_exact \"lucid: ls_complicated__7ostreamFc\" \"ostream::ls_complicated(char)\"\n-    test_demangling \"lucid: open__11fstreambaseFPCciT2\" \\\n-\t\"fstreambase::open\\[(\\]+(const char|char const) \\[*\\]+, int, int\\[)\\]+\"\n-    test_demangling \"lucid: open__7filebufFPCciT2\" \\\n-\t\"filebuf::open\\[(\\]+(const char|char const) \\[*\\]+, int, int\\[)\\]+\"\n-\n-    test_demangling_exact \"lucid: overload1arg__FSc\" \"overload1arg(signed char)\"\n-    test_demangling_exact \"lucid: overload1arg__FUc\" \"overload1arg(unsigned char)\"\n-    test_demangling_exact \"lucid: overload1arg__FUi\" \"overload1arg(unsigned int)\"\n-    test_demangling_exact \"lucid: overload1arg__FUl\" \"overload1arg(unsigned long)\"\n-    test_demangling_exact \"lucid: overload1arg__FUs\" \"overload1arg(unsigned short)\"\n-    test_demangling_exact \"lucid: overload1arg__Fc\" \"overload1arg(char)\"\n-    test_demangling_exact \"lucid: overload1arg__Fd\" \"overload1arg(double)\"\n-    test_demangling_exact \"lucid: overload1arg__Ff\" \"overload1arg(float)\"\n-    test_demangling_exact \"lucid: overload1arg__Fi\" \"overload1arg(int)\"\n-    test_demangling_exact \"lucid: overload1arg__Fl\" \"overload1arg(long)\"\n-    test_demangling_exact \"lucid: overload1arg__Fs\" \"overload1arg(short)\"\n-    test_demangling_exact \"lucid: overload1arg__Fv\" \"overload1arg(void)\"\n-    test_demangling_exact \"lucid: overloadargs__FiN21\" \"overloadargs(int, int, int)\"\n-    test_demangling_exact \"lucid: overloadargs__FiN31\" \"overloadargs(int, int, int, int)\"\n-    test_demangling_exact \"lucid: overloadargs__FiN41\" \"overloadargs(int, int, int, int, int)\"\n-    test_demangling_exact \"lucid: overloadargs__FiN51\" \"overloadargs(int, int, int, int, int, int)\"\n-    test_demangling_exact \"lucid: overloadargs__FiN61\" \"overloadargs(int, int, int, int, int, int, int)\"\n-\n-    test_demangling_exact \"lucid: overloadargs__FiN71\" \"overloadargs(int, int, int, int, int, int, int, int)\"\n-    test_demangling_exact \"lucid: overloadargs__FiN81\" \"overloadargs(int, int, int, int, int, int, int, int, int)\"\n-    test_demangling_exact \"lucid: overloadargs__FiN91\" \"overloadargs(int, int, int, int, int, int, int, int, int, int)\"\n-    test_demangling_exact \"lucid: overloadargs__FiN91N11\" \"overloadargs(int, int, int, int, int, int, int, int, int, int, int)\"\n-    test_demangling_exact \"lucid: overloadargs__FiT1\" \"overloadargs(int, int)\"\n-    test_demangling_exact \"lucid: polar__FdT1\" \"polar(double, double)\"\n-    test_demangling_exact \"lucid: pow__F7complexT1\" \"pow(complex, complex)\"\n-    test_demangling_exact \"lucid: pow__F7complexd\" \"pow(complex, double)\"\n-    test_demangling_exact \"lucid: pow__F7complexi\" \"pow(complex, int)\"\n-    test_demangling_exact \"lucid: pow__Fd7complex\" \"pow(double, complex)\"\n-    test_demangling_exact \"lucid: pstart__FPciT2\" \"pstart(char *, int, int)\"\n-    test_demangling_exact \"lucid: put__7ostreamFc\" \"ostream::put(char)\"\n-\n-    test_demangling_exact \"lucid: read__7istreamFPci\" \"istream::read(char *, int)\"\n-    test_demangling_exact \"lucid: resetiosflags__FR3iosl\" \"resetiosflags(ios &, long)\"\n-    test_demangling_exact \"lucid: restore_errno__FRi\" \"restore_errno(int &)\"\n-    test_demangling_exact \"lucid: rs_complicated__7istreamFRUc\" \"istream::rs_complicated(unsigned char &)\"\n-    test_demangling_exact \"lucid: rs_complicated__7istreamFRc\" \"istream::rs_complicated(char &)\"\n-    test_demangling_exact \"lucid: seekg__7istreamFl8seek_dir\" \"istream::seekg(long, seek_dir)\"\n-    test_demangling_exact \"lucid: seekoff__12strstreambufFl8seek_diri\" \"strstreambuf::seekoff(long, seek_dir, int)\"\n-    test_demangling_exact \"lucid: seekoff__9streambufFlQ2_3ios12ios_seek_diri\" \"streambuf::seekoff(long, ios::ios_seek_dir, int)\"\n-    test_demangling_exact \"lucid: seekpos__9streambufFli\" \"streambuf::seekpos(long, int)\"\n-    test_demangling_exact \"lucid: set_new_handler__FPFv_v\" \"set_new_handler(void (*)(void))\"\n-    test_demangling_exact \"lucid: setb__9streambufFPcT1i\" \"streambuf::setb(char *, char *, int)\"\n-\n-    test_demangling_exact \"lucid: setb__FR3iosi\" \"setb(ios &, int)\"\n-    test_demangling_exact \"lucid: setbuf__11fstreambaseFPci\" \"fstreambase::setbuf(char *, int)\"\n-    test_demangling_exact \"lucid: setbuf__9streambufFPUci\" \"streambuf::setbuf(unsigned char *, int)\"\n-    test_demangling_exact \"lucid: setbuf__9streambufFPciT2\" \"streambuf::setbuf(char *, int, int)\"\n-    test_demangling_exact \"lucid: setf__3iosFlT1\" \"ios::setf(long, long)\"\n-    test_demangling_exact \"lucid: setfill__FR3iosi\" \"setfill(ios &, int)\"\n-    test_demangling_exact \"lucid: setg__9streambufFPcN21\" \"streambuf::setg(char *, char *, char *)\"\n-    test_demangling_exact \"lucid: setp__9streambufFPcT1\" \"streambuf::setp(char *, char *)\"\n-\n-    test_demangling \"lucid: sputn__9streambufFPCci\" \\\n-\t\"streambuf::sputn\\[(\\]+(const char|char const) \\[*\\]+, int\\[)\\]+\"\n-    test_demangling \"lucid: str__FPCci\" \\\n-\t\"str\\[(\\]+(const char|char const) \\[*\\]+, int\\[)\\]+\"\n-    test_demangling_exact \"lucid: tie__3iosFP7ostream\" \"ios::tie(ostream *)\"\n-    test_demangling_exact \"lucid: uconv10__FUlPc\" \"uconv10(unsigned long, char *)\"\n-\n-    test_demangling \"lucid: write__7ostreamFPCci\" \\\n-\t\"ostream::write\\[(\\]+(const char|char const) \\[*\\]+, int\\[)\\]+\"\n-    test_demangling_exact \"lucid: xget__7istreamFPc\" \"istream::xget(char *)\"\n-    test_demangling_exact \"lucid: xsgetn__9streambufFPci\" \"streambuf::xsgetn(char *, int)\"\n-    test_demangling \"lucid: xsputn__9streambufFPCci\" \\\n-\t\"streambuf::xsputn\\[(\\]+(const char|char const) \\[*\\]+, int\\[)\\]+\"\n-\n-    test_demangling_exact \"lucid: _Utf390_1__1_9223372036854775807__9223372036854775\" \\\n-\t    \"Can't demangle \\\"_Utf390_1__1_9223372036854775807__9223372036854775\\\"\"\n }\n \n-#\n-#  Test arm style name demangling\n-#\n-\n-proc test_arm_style_demangling {} {\n-    test_demangling_exact \"arm: __dt__21T5__pt__11_PFiPPdPv_iFv\" \"T5<int (*)(int, double **, void *)>::~T5(void)\"\n-\n-    test_demangling_exact \"arm: __ct__1cFi\" \"c::c(int)\"\n-\n-    test_demangling_exact \"arm: __dt__11T5__pt__2_iFv\" \"T5<int>::~T5(void)\"\n-\n-    test_demangling_exact \"arm: __dt__11T5__pt__2_cFv\" \"T5<char>::~T5(void)\"\n-\n-    test_demangling_exact \"arm: __ct__2T2Fi\" \"T2::T2(int)\"\n-    test_demangling_exact \"arm: __dt__2T1Fv\" \"T1::~T1(void)\"\n-\n-    test_demangling_exact \"arm: __dt__12T5__pt__3_1xFv\" \"T5<x>::~T5(void)\"\n-\n-    test_demangling_exact \"arm: __dt__17T5__pt__8_PFcPv_iFv\" \"T5<int (*)(char, void *)>::~T5(void)\"\n-\n-    test_demangling \"arm: g__FP1cPC1cT1\" \\\n-\t\"g\\[(\\]+c *\\[*\\]+, (const c|c const) *\\[*\\]+, c *\\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__FPUlPCUlT1\" \\\n-\t\"g\\[(\\]+unsigned long \\[*\\]+, (const unsigned long|unsigned long const) \\[*\\]+, unsigned long \\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__FPUiPCUiT1\" \\\n-\t\"g\\[(\\]+unsigned int \\[*\\]+, (const unsigned int|unsigned int const) \\[*\\]+, unsigned int \\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__FPUsPCUsT1\" \\\n-\t\"g\\[(\\]+unsigned short \\[*\\]+, (const unsigned short|unsigned short const) \\[*\\]+, unsigned short \\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__FPUcPCUcT1\" \\\n-\t\"g\\[(\\]+unsigned char \\[*\\]+, (const unsigned char|unsigned char const) \\[*\\]+, unsigned char \\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__F1TPlPClT2\" \\\n-\t\"g\\[(\\]+T, long \\[*\\]+, (const long|long const) \\[*\\]+, long \\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__F1RRlRClT2\" \\\n-\t\"g\\[(\\]+R, long &, (const long|long const) &, long &\\[)\\]+\"\n-    test_demangling \"arm: g__F1TPiPCiT2\" \\\n-\t\"g\\[(\\]+T, int \\[*\\]+, (const int|int const) \\[*\\]+, int \\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__F1RRiRCiT2\" \\\n-\t\"g\\[(\\]+R, int &, (const int|int const) &, int &\\[)\\]+\"\n-    test_demangling \"arm: g__F1TPsPCsT2\" \\\n-\t\"g\\[(\\]+T, short \\[*\\]+, (const short|short const) \\[*\\]+, short \\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__F1RRsRCsT2\" \\\n-\t\"g\\[(\\]+R, short &, (const short|short const) &, short &\\[)\\]+\"\n-    test_demangling \"arm: g__F1TPcPCcT2\" \\\n-\t\"g\\[(\\]+T, char \\[*\\]+, (const char|char const) \\[*\\]+, char \\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__F1RRcRCcT2\" \\\n-\t\"g\\[(\\]+R, char &, (const char|char const) &, char &\\[)\\]+\"\n-\n-    test_demangling_exact \"arm: __ct__21T5__pt__11_PFiPPdPv_iFi\" \"T5<int (*)(int, double **, void *)>::T5(int)\"\n-\n-    test_demangling \"arm: __gt__FRC2T2c\" \\\n-\t\"operator>\\[(\\]+(const T2|T2 const) &, char\\[)\\]+\"\n-    test_demangling \"arm: __ge__FRC2T2c\" \\\n-\t\"operator>=\\[(\\]+(const T2|T2 const) &, char\\[)\\]+\"\n-    test_demangling \"arm: __lt__FRC2T2c\" \\\n-\t\"operator<\\[(\\]+(const T2|T2 const) &, char\\[)\\]+\"\n-\n-    test_demangling \"arm: __le__FRC2T2c\" \\\n-\t\"operator<=\\[(\\]+(const T2|T2 const) &, char\\[)\\]+\"\n-    test_demangling \"arm: __ne__FRC2T2c\" \\\n-\t\"operator!=\\[(\\]+(const T2|T2 const) &, char\\[)\\]+\"\n-    test_demangling \"arm: __eq__FRC2T2c\" \\\n-\t\"operator==\\[(\\]+(const T2|T2 const) &, char\\[)\\]+\"\n-    test_demangling_exact \"arm: __amd__FR2T2i\" \"operator%=(T2 &, int)\"\n-    test_demangling_exact \"arm: __adv__FR2T2i\" \"operator/=(T2 &, int)\"\n-    test_demangling_exact \"arm: __amu__FR2T2i\" \"operator*=(T2 &, int)\"\n-    test_demangling_exact \"arm: __ami__FR2T2i\" \"operator-=(T2 &, int)\"\n-    test_demangling_exact \"arm: __apl__FR2T2i\" \"operator+=(T2 &, int)\"\n-    test_demangling_exact \"arm: __nw__2T1SFUi\" \"T1::operator new(unsigned int) static\"\n-    test_demangling_exact \"arm: __dl__2T1SFPv\" \"T1::operator delete(void *) static\"\n-    test_demangling_exact \"arm: put__2T7SFi\" \"T7::put(int) static\"\n-\n-    test_demangling_exact \"arm: __dl__12T5__pt__3_1xSFPv\" \"T5<x>::operator delete(void *) static\"\n-\n-    test_demangling_exact \"arm: h__FUc\" \"h(unsigned char)\"\n-    test_demangling_exact \"arm: f__Fic\" \"f(int, char)\"\n-    test_demangling_exact \"arm: h__FUi\" \"h(unsigned int)\"\n-    test_demangling_exact \"arm: h__Fci\" \"h(char, int)\"\n-    test_demangling_exact \"arm: h__FUl\" \"h(unsigned long)\"\n-    test_demangling_exact \"arm: h__Fcl\" \"h(char, long)\"\n-    test_demangling_exact \"arm: h__FUs\" \"h(unsigned short)\"\n-    test_demangling_exact \"arm: h__Fcs\" \"h(char, short)\"\n-    test_demangling \"arm: __amd__FR2T2RC2T2\" \\\n-\t\"operator%=\\[(\\]+T2 &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __adv__FR2T2RC2T2\" \\\n-\t\"operator/=\\[(\\]+T2 &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __amu__FR2T2RC2T2\" \\\n-\t\"operator\\[*\\]+=\\[(\\]+T2 &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __ami__FR2T2RC2T2\" \\\n-\t\"operator-=\\[(\\]+T2 &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __apl__FR2T2RC2T2\" \\\n-\t\"operator\\[+\\]+=\\[(\\]+T2 &, (const T2|T2 const) &\\[)\\]+\"\n-\n-    test_demangling \"arm: g__F1SRPUlRPCUlT2\" \\\n-\t\"g\\[(\\]+S, unsigned long \\[*\\]+&, (const unsigned long|unsigned long const) \\[*\\]+&, unsigned long \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"arm: g__F1SRPUiRPCUiT2\" \\\n-\t\"g\\[(\\]+S, unsigned int \\[*\\]+&, (const unsigned int|unsigned int const) \\[*\\]+&, unsigned int \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"arm: g__F1SRPUsRPCUsT2\" \\\n-\t\"g\\[(\\]+S, unsigned short \\[*\\]+&, (const unsigned short|unsigned short const) \\[*\\]+&, unsigned short \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"arm: g__F1SRPUcRPCUcT2\" \\\n-\t\"g\\[(\\]+S, unsigned char \\[*\\]+&, (const unsigned char|unsigned char const) \\[*\\]+&, unsigned char \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"arm: g__F1T1SRPlRPClT3\" \\\n-\t\"g\\[(\\]+T, S, long \\[*\\]+&, (const long|long const) \\[*\\]+&, long \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"arm: g__F1T1SRPiRPCiT3\" \\\n-\t\"g\\[(\\]+T, S, int \\[*\\]+&, (const int|int const) \\[*\\]+&, int \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"arm: g__F1T1SRPcRPCcT3\" \\\n-\t\"g\\[(\\]+T, S, char \\[*\\]+&, (const char|char const) \\[*\\]+&, char \\[*\\]+&\\[)\\]+\"\n-\n-    test_demangling_exact \"arm: X__12T5__pt__3_1x\" \"T5<x>::X\"\n-\n-    test_demangling_exact \"arm: __ct__11T5__pt__2_iFi\" \"T5<int>::T5(int)\"\n-\n-    test_demangling_exact \"arm: __ct__11T5__pt__2_cFi\" \"T5<char>::T5(int)\"\n-\n-    test_demangling \"arm: __gt__FRC2T2T1\" \\\n-\t\"operator>\\[(\\]+(const T2|T2 const) &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __ge__FRC2T2T1\" \\\n-\t\"operator>=\\[(\\]+(const T2|T2 const) &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __lt__FRC2T2T1\" \\\n-\t\"operator<\\[(\\]+(const T2|T2 const) &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __le__FRC2T2T1\" \\\n-\t\"operator<=\\[(\\]+(const T2|T2 const) &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __ne__FRC2T2T1\" \\\n-\t\"operator!=\\[(\\]+(const T2|T2 const) &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __eq__FRC2T2T1\" \\\n-\t\"operator==\\[(\\]+(const T2|T2 const) &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: g__FcR1cRC1cT2\" \\\n-\t\"g\\[(\\]+char, c &, (const c|c const) &, c &\\[)\\]+\"\n-    test_demangling \"arm: g__FcRPdRPCdT2\" \\\n-\t\"g\\[(\\]+char, double *\\[*\\]+&, (const double|double const) *\\[*\\]+&, double *\\[*\\]+&\\[)\\]+\"\n-    test_demangling \"arm: g__FcRPfRPCfT2\" \\\n-\t\"g\\[(\\]+char, float *\\[*\\]+&, (const float|float const) *\\[*\\]+&, float *\\[*\\]+&\\[)\\]+\"\n-    test_demangling_exact \"arm: h__FcT1\" \"h(char, char)\"\n-    test_demangling_exact \"arm: f__Ficd\" \"f(int, char, double)\"\n-    test_demangling \"arm: g__F1T1SdRPsRPCsT4\" \\\n-\t\"g\\[(\\]+T, S, double, short \\[*\\]+&, (const short|short const) \\[*\\]+&, short \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"arm: g__F1cC1cT1\" \\\n-\t\"g\\[(\\]+c, (const c|c const), c\\[)\\]+\"\n-    test_demangling \"arm: g__FPdPCdT1\" \\\n-\t\"g\\[(\\]+double *\\[*\\]+, (const double|double const) *\\[*\\]+, double *\\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__FPfPCfT1\" \\\n-\t\"g\\[(\\]+float *\\[*\\]+, (const float|float const) *\\[*\\]+, float *\\[*\\]+\\[)\\]+\"\n-\n-    test_demangling \"arm: g__FUlCUlT1\" \\\n-\t\"g\\[(\\]+unsigned long, (const unsigned long|unsigned long const), unsigned long\\[)\\]+\"\n-    test_demangling \"arm: g__FPlPClT1\" \\\n-\t\"g\\[(\\]+long \\[*\\]+, (const long|long const) \\[*\\]+, long \\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__FUiCUiT1\" \\\n-\t\"g\\[(\\]+unsigned int, (const unsigned int|unsigned int const), unsigned int\\[)\\]+\"\n-    test_demangling \"arm: g__FPiPCiT1\" \\\n-\t\"g\\[(\\]+int \\[*\\]+, (const int|int const) \\[*\\]+, int \\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__FUsCUsT1\" \\\n-\t\"g\\[(\\]+unsigned short, (const unsigned short|unsigned short const), unsigned short\\[)\\]+\"\n-    test_demangling \"arm: g__FPsPCsT1\" \\\n-\t\"g\\[(\\]+short \\[*\\]+, (const short|short const) \\[*\\]+, short \\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__FUcCUcT1\" \\\n-\t\"g\\[(\\]+unsigned char, (const unsigned char|unsigned char const), unsigned char\\[)\\]+\"\n-    test_demangling \"arm: g__FPcPCcT1\" \\\n-\t\"g\\[(\\]+char \\[*\\]+, (const char|char const) \\[*\\]+, char \\[*\\]+\\[)\\]+\"\n-    test_demangling \"arm: g__F1TlClT2\" \\\n-\t\"g\\[(\\]+T, long, (const long|long const), long\\[)\\]+\"\n-    test_demangling \"arm: g__F1TiCiT2\" \\\n-\t\"g\\[(\\]+T, int, (const int|int const), int\\[)\\]+\"\n-    test_demangling \"arm: g__F1TsCsT2\" \\\n-\t\"g\\[(\\]+T, short, (const short|short const), short\\[)\\]+\"\n-    test_demangling \"arm: g__F1TcCcT2\" \\\n-\t\"g\\[(\\]+T, char, (const char|char const), char\\[)\\]+\"\n-\n-    test_demangling_exact \"arm: __dl__17T5__pt__8_PFcPv_iSFPv\" \"T5<int (*)(char, void *)>::operator delete(void *) static\"\n-\n-    test_demangling \"arm: printf__FPCce\" \\\n-\t\"printf\\[(\\]+(const char|char const) \\[*\\]+,...\\[)\\]+\"\n-\n-    test_demangling_exact \"arm: X__17T5__pt__8_PFcPv_i\" \"T5<int (*)(char, void *)>::X\"\n-\n-    test_demangling_exact \"arm: __ct__12T5__pt__3_1xFi\" \"T5<x>::T5(int)\"\n-\n-    test_demangling \"arm: g__F1SRUlRCUlT2\" \\\n-\t\"g\\[(\\]+S, unsigned long &, (const unsigned long|unsigned long const) &, unsigned long &\\[)\\]+\"\n-    test_demangling \"arm: g__F1SRPlRPClT2\" \\\n-\t\"g\\[(\\]+S, long \\[*\\]+&, (const long|long const) \\[*\\]+&, long \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"arm: g__F1RRUiRCUiT2\" \\\n-\t\"g\\[(\\]+R, unsigned int &, (const unsigned int|unsigned int const) &, unsigned int &\\[)\\]+\"\n-    test_demangling \"arm: g__F1SRPiRPCiT2\" \\\n-\t\"g\\[(\\]+S, int \\[*\\]+&, (const int|int const) \\[*\\]+&, int \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"arm: g__F1RRUsRCUsT2\" \\\n-\t\"g\\[(\\]+R, unsigned short &, (const unsigned short|unsigned short const) &, unsigned short &\\[)\\]+\"\n-    test_demangling \"arm: g__F1SRPsRPCsT2\" \\\n-\t\"g\\[(\\]+S, short \\[*\\]+&, (const short|short const) \\[*\\]+&, short \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"arm: g__F1RRUcRCUcT2\" \\\n-\t\"g\\[(\\]+R, unsigned char &, (const unsigned char|unsigned char const) &, unsigned char &\\[)\\]+\"\n-    test_demangling \"arm: g__F1SRPcRPCcT2\" \\\n-\t\"g\\[(\\]+S, char \\[*\\]+&, (const char|char const) \\[*\\]+&, char \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"arm: g__F1T1RRlRClT3\" \\\n-\t\"g\\[(\\]+T, R, long &, (const long|long const) &, long &\\[)\\]+\"\n-    test_demangling \"arm: g__F1T1RRiRCiT3\" \\\n-\t\"g\\[(\\]+T, R, int &, (const int|int const) &, int &\\[)\\]+\"\n-    test_demangling \"arm: g__F1T1RRsRCsT3\" \\\n-\t\"g\\[(\\]+T, R, short &, (const short|short const) &, short &\\[)\\]+\"\n-    test_demangling \"arm: g__F1T1RRcRCcT3\" \\\n-\t\"g\\[(\\]+T, R, char &, (const char|char const) &, char &\\[)\\]+\"\n-\n-    test_demangling_exact \"arm: __dl__21T5__pt__11_PFiPPdPv_iSFPv\" \"T5<int (*)(int, double **, void *)>::operator delete(void *) static\"\n-\n-    test_demangling_exact \"arm: __std__foo\" \"global destructors keyed to foo\"\n-\n-    test_demangling_exact \"arm: __sti__bar\" \"global constructors keyed to bar\"\n-\n-    test_demangling_exact \"arm: f__FicdPcPFci_v\" \"f(int, char, double, char *, void (*)(char, int))\"\n-    test_demangling_exact \"arm: f__FicdPcPFic_v\" \"f(int, char, double, char *, void (*)(int, char))\"\n-    test_demangling_exact \"arm: get__2T7SFv\" \"T7::get(void) static\"\n-\n-    test_demangling_exact \"arm: X__21T5__pt__11_PFiPPdPv_i\" \"T5<int (*)(int, double **, void *)>::X\"\n-\n-    test_demangling \"arm: g__FcRdRCdT2\" \\\n-\t\"g\\[(\\]+char, double &, (const double|double const) &, double &\\[)\\]+\"\n-    test_demangling \"arm: g__FcRfRCfT2\" \\\n-\t\"g\\[(\\]+char, float &, (const float|float const) &, float &\\[)\\]+\"\n-    test_demangling \"arm: __md__FC2T2i\" \\\n-\t\"operator%\\[(\\]+(const T2|T2 const), int\\[)\\]+\"\n-    test_demangling \"arm: __dv__FC2T2i\" \\\n-\t\"operator/\\[(\\]+(const T2|T2 const), int\\[)\\]+\"\n-    test_demangling \"arm: __ml__FC2T2i\" \\\n-\t\"operator\\[*\\]+\\[(\\]+(const T2|T2 const), int\\[)\\]+\"\n-    test_demangling \"arm: __mi__FC2T2i\" \\\n-\t\"operator-\\[(\\]+(const T2|T2 const), int\\[)\\]+\"\n-    test_demangling \"arm: __pl__FC2T2i\" \\\n-\t\"operator\\[+\\]+\\[(\\]+(const T2|T2 const), int\\[)\\]+\"\n-\n-    test_demangling_exact \"arm: __dl__11T5__pt__2_iSFPv\" \"T5<int>::operator delete(void *) static\"\n-\n-    test_demangling_exact \"arm: __dl__11T5__pt__2_cSFPv\" \"T5<char>::operator delete(void *) static\"\n-\n-    test_demangling_exact \"arm: h__Fc\" \"h(char)\"\n-    test_demangling_exact \"arm: h__Fd\" \"h(double)\"\n-    test_demangling_exact \"arm: h__Ff\" \"h(float)\"\n-    test_demangling_exact \"arm: h__Fi\" \"h(int)\"\n-    test_demangling_exact \"arm: f__Fi\" \"f(int)\"\n-    test_demangling_exact \"arm: h__Fl\" \"h(long)\"\n-\n-    test_demangling_exact \"arm: h__Fs\" \"h(short)\"\n-    test_demangling \"arm: __md__FC2T2RC2T2\" \\\n-\t\"operator%\\[(\\]+(const T2|T2 const), (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __dv__FC2T2RC2T2\" \\\n-\t\"operator/\\[(\\]+(const T2|T2 const), (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __ml__FC2T2RC2T2\" \\\n-\t\"operator\\[*\\]+\\[(\\]+(const T2|T2 const), (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __mi__FC2T2RC2T2\" \\\n-\t\"operator-\\[(\\]+(const T2|T2 const), (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: __pl__FC2T2RC2T2\" \\\n-\t\"operator\\[+\\]+\\[(\\]+(const T2|T2 const), (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"arm: g__FcRP1cRPC1cT2\" \\\n-\t\"g\\[(\\]+char, c *\\[*\\]+&, (const c|c const) *\\[*\\]+&, c *\\[*\\]+&\\[)\\]+\"\n-\n-    test_demangling_exact \"arm: X__11T5__pt__2_c\" \"T5<char>::X\"\n-\n-    test_demangling_exact \"arm: X__11T5__pt__2_i\" \"T5<int>::X\"\n-\n-    test_demangling \"arm: g__FdCdT1\" \\\n-\t\"g\\[(\\]+double, (const double|double const), double\\[)\\]+\"\n-    test_demangling \"arm: g__FfCfT1\" \\\n-\t\"g\\[(\\]+float, (const float|float const), float\\[)\\]+\"\n-    test_demangling \"arm: g__FlClT1\" \\\n-\t\"g\\[(\\]+long, (const long|long const), long\\[)\\]+\"\n-    test_demangling \"arm: g__FiCiT1\" \\\n-\t\"g\\[(\\]+int, (const int|int const), int\\[)\\]+\"\n-    test_demangling \"arm: g__FsCsT1\" \\\n-\t\"g\\[(\\]+short, (const short|short const), short\\[)\\]+\"\n-    test_demangling \"arm: g__FcCcT1\" \\\n-\t\"g\\[(\\]+char, (const char|char const), char\\[)\\]+\"\n-\n-    test_demangling_exact \"arm: __ct__17T5__pt__8_PFcPv_iFi\" \"T5<int (*)(char, void *)>::T5(int)\"\n-\n-    test_demangling_exact \"arm: f__FicdPc\" \"f(int, char, double, char *)\"\n-    test_demangling_exact \"arm: __nw__FUi\" \"operator new(unsigned int)\"\n-    test_demangling_exact \"arm: __ct__Q3_2T11a1bSFi\" \"T1::a::b::b(int) static\"\n-    test_demangling_exact \"arm: __dt__Q3_2T11a1bSFi\" \"T1::a::b::~b(int) static\"\n-    test_demangling_exact \"arm: put__Q3_2T11a1bSFi\" \"T1::a::b::put(int) static\"\n-    test_demangling_exact \"arm: get__Q2_2T11aSFv\" \"T1::a::get(void) static\"\n-    test_demangling_exact \"arm: put__2T1SFi\" \"T1::put(int) static\"\n-    test_demangling_exact \"arm: put__Q5_2T11a1b1c1dSFi\" \"T1::a::b::c::d::put(int) static\"\n-    test_demangling_exact \"arm: get__Q4_2T11a1b1cSFv\" \"T1::a::b::c::get(void) static\"\n-    test_demangling_exact \"arm: put__Q2_2T11aSFi\" \"T1::a::put(int) static\"\n-    test_demangling_exact \"arm: put__Q4_2T11a1b1cSFi\" \"T1::a::b::c::put(int) static\"\n-    test_demangling_exact \"arm: get__Q3_2T11a1bSFv\" \"T1::a::b::get(void) static\"\n-    test_demangling_exact \"arm: get__2T1SFv\" \"T1::get(void) static\"\n-    test_demangling_exact \"arm: get__Q5_2T11a1b1c1dSFv\" \"T1::a::b::c::d::get(void) static\"\n-\n-    test_demangling_exact \"arm: __dt__11T1__pt__2_cFv\" \"T1<char>::~T1(void)\"\n-\n-    test_demangling_exact \"arm: __dt__12T1__pt__3_1tFv\" \"T1<t>::~T1(void)\"\n-\n-    test_demangling_exact \"arm: __dl__12T1__pt__3_1tSFPv\" \"T1<t>::operator delete(void *) static\"\n-\n-    test_demangling_exact \"arm: __ct__11T1__pt__2_cFi\" \"T1<char>::T1(int)\"\n-\n-    test_demangling_exact \"arm: __ct__11T1__pt__2_cFv\" \"T1<char>::T1(void)\"\n-\n-    test_demangling_exact \"arm: __ct__12T1__pt__3_1tFi\" \"T1<t>::T1(int)\"\n-\n-    test_demangling_exact \"arm: __ct__12T1__pt__3_1tFv\" \"T1<t>::T1(void)\"\n-\n-    test_demangling_exact \"arm: __dl__11T1__pt__2_cSFPv\" \"T1<char>::operator delete(void *) static\"\n-\n-    test_demangling_exact \"arm: bar__3fooFPv\"       \"foo::bar(void *)\"\n-    test_demangling \"arm: bar__3fooFPCv\" \\\n-\t     \"foo::bar\\[(\\]+(const void|void const) *\\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"arm: bar__3fooCFPv\"      \"foo::bar(void *) const\"\n-    test_demangling \"arm: bar__3fooCFPCv\" \\\n-\t    \"foo::bar\\[(\\]+(const void|void const) *\\[*\\]+\\[)\\]+ const\"\n-    test_demangling_exact \"arm: __eq__3fooFR3foo\"   \"foo::operator==(foo &)\"\n-    test_demangling \"arm: __eq__3fooFRC3foo\" \\\n-\t \"foo::operator==\\[(\\]+(const foo|foo const) &\\[)\\]+\"\n-    test_demangling_exact \"arm: __eq__3fooCFR3foo\"  \"foo::operator==(foo &) const\"\n-    test_demangling \"arm: __eq__3fooCFRC3foo\" \\\n-\t\"foo::operator==\\[(\\]+(const foo|foo const) &\\[)\\]+ const\"\n-\n-    test_demangling_exact \"arm: elem__15vector__pt__2_dFi\" \"vector<double>::elem(int)\"\n-\n-    test_demangling_exact \"arm: elem__15vector__pt__2_iFi\" \"vector<int>::elem(int)\"\n-\n-    test_demangling_exact \"arm: __ct__15vector__pt__2_dFi\" \"vector<double>::vector(int)\"\n-\n-    test_demangling_exact \"arm: __ct__15vector__pt__2_iFi\" \"vector<int>::vector(int)\"\n-\n-    test_demangling_exact \"arm: __ct__25DListNode__pt__9_R6RLabelFR6RLabelP25DListNode__pt__9_R6RLabelT2\" \\\n-\t\"DListNode<RLabel &>::DListNode(RLabel &, DListNode<RLabel &> *, DListNode<RLabel &> *)\"\n-\n-    test_demangling_exact \"arm: bar__3fooFiT16FooBar\" \"foo::bar(int, int, FooBar)\"\n-\n-    test_demangling_exact \"arm: bar__3fooFPiN51PdN37PcN211T1iN215\" \\\n-      \"foo::bar(int *, int *, int *, int *, int *, int *, double *, double *, double *, double *, char *, char *, char *, int *, int, int, int)\"\n-\n-    test_demangling_exact \"arm: _Utf390_1__1_9223372036854775807__9223372036854775\" \\\n-\t    \"Can't demangle \\\"_Utf390_1__1_9223372036854775807__9223372036854775\\\"\"\n-}\n-\n-proc test_hp_style_demangling {} {\n-\n-    # HP aCC mangling style is based on ARM for all the basic stuff,\n-    # so first we use some of the ARM tests here.  Later we have HP-specific\n-    # tests.\n-        \n-    test_demangling \"hp: g__FP1cPC1cT1\" \\\n-\t\"g\\[(\\]+c *\\[*\\]+, (const c|c const) *\\[*\\]+, c *\\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__FPUlPCUlT1\" \\\n-\t\"g\\[(\\]+unsigned long \\[*\\]+, (const unsigned long|unsigned long const) \\[*\\]+, unsigned long \\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__FPUiPCUiT1\" \\\n-\t\"g\\[(\\]+unsigned int \\[*\\]+, (const unsigned int|unsigned int const) \\[*\\]+, unsigned int \\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__FPUsPCUsT1\" \\\n-\t\"g\\[(\\]+unsigned short \\[*\\]+, (const unsigned short|unsigned short const) \\[*\\]+, unsigned short \\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__FPUcPCUcT1\" \\\n-\t\"g\\[(\\]+unsigned char \\[*\\]+, (const unsigned char|unsigned char const) \\[*\\]+, unsigned char \\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__F1TPlPClT2\" \\\n-\t\"g\\[(\\]+T, long \\[*\\]+, (const long|long const) \\[*\\]+, long \\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__F1RRlRClT2\" \\\n-\t\"g\\[(\\]+R, long &, (const long|long const) &, long &\\[)\\]+\"\n-    test_demangling \"hp: g__F1TPiPCiT2\" \\\n-\t\"g\\[(\\]+T, int \\[*\\]+, (const int|int const) \\[*\\]+, int \\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__F1RRiRCiT2\" \\\n-\t\"g\\[(\\]+R, int &, (const int|int const) &, int &\\[)\\]+\"\n-    test_demangling \"hp: g__F1TPsPCsT2\" \\\n-\t\"g\\[(\\]+T, short \\[*\\]+, (const short|short const) \\[*\\]+, short \\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__F1RRsRCsT2\" \\\n-\t\"g\\[(\\]+R, short &, (const short|short const) &, short &\\[)\\]+\"\n-    test_demangling \"hp: g__F1TPcPCcT2\" \\\n-\t\"g\\[(\\]+T, char \\[*\\]+, (const char|char const) \\[*\\]+, char \\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__F1RRcRCcT2\" \\\n-\t\"g\\[(\\]+R, char &, (const char|char const) &, char &\\[)\\]+\"\n-\n-    test_demangling \"hp: __gt__FRC2T2c\" \\\n-\t\"operator>\\[(\\]+(const T2|T2 const) &, char\\[)\\]+\"\n-    test_demangling \"hp: __ge__FRC2T2c\" \\\n-\t\"operator>=\\[(\\]+(const T2|T2 const) &, char\\[)\\]+\"\n-    test_demangling \"hp: __lt__FRC2T2c\" \\\n-\t\"operator<\\[(\\]+(const T2|T2 const) &, char\\[)\\]+\"\n-\n-    test_demangling \"hp: __le__FRC2T2c\" \\\n-\t\"operator<=\\[(\\]+(const T2|T2 const) &, char\\[)\\]+\"\n-    test_demangling \"hp: __ne__FRC2T2c\" \\\n-\t\"operator!=\\[(\\]+(const T2|T2 const) &, char\\[)\\]+\"\n-    test_demangling \"hp: __eq__FRC2T2c\" \\\n-\t\"operator==\\[(\\]+(const T2|T2 const) &, char\\[)\\]+\"\n-    test_demangling_exact \"hp: __amd__FR2T2i\" \"operator%=(T2 &, int)\"\n-    test_demangling_exact \"hp: __adv__FR2T2i\" \"operator/=(T2 &, int)\"\n-    test_demangling_exact \"hp: __amu__FR2T2i\" \"operator*=(T2 &, int)\"\n-    test_demangling_exact \"hp: __ami__FR2T2i\" \"operator-=(T2 &, int)\"\n-    test_demangling_exact \"hp: __apl__FR2T2i\" \"operator+=(T2 &, int)\"\n-    test_demangling_exact \"hp: __nw__2T1SFUi\" \"T1::operator new(unsigned int) static\"\n-    test_demangling_exact \"hp: __dl__2T1SFPv\" \"T1::operator delete(void *) static\"\n-    test_demangling_exact \"hp: put__2T7SFi\" \"T7::put(int) static\"\n-\n-    test_demangling_exact \"hp: h__FUc\" \"h(unsigned char)\"\n-    test_demangling_exact \"hp: f__Fic\" \"f(int, char)\"\n-    test_demangling_exact \"hp: h__FUi\" \"h(unsigned int)\"\n-    test_demangling_exact \"hp: h__Fci\" \"h(char, int)\"\n-    test_demangling_exact \"hp: h__FUl\" \"h(unsigned long)\"\n-    test_demangling_exact \"hp: h__Fcl\" \"h(char, long)\"\n-    test_demangling_exact \"hp: h__FUs\" \"h(unsigned short)\"\n-    test_demangling_exact \"hp: h__Fcs\" \"h(char, short)\"\n-    test_demangling \"hp: __amd__FR2T2RC2T2\" \\\n-\t\"operator%=\\[(\\]+T2 &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __adv__FR2T2RC2T2\" \\\n-\t\"operator/=\\[(\\]+T2 &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __amu__FR2T2RC2T2\" \\\n-\t\"operator\\[*\\]+=\\[(\\]+T2 &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __ami__FR2T2RC2T2\" \\\n-\t\"operator-=\\[(\\]+T2 &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __apl__FR2T2RC2T2\" \\\n-\t\"operator\\[+\\]+=\\[(\\]+T2 &, (const T2|T2 const) &\\[)\\]+\"\n-\n-    test_demangling \"hp: g__F1SRPUlRPCUlT2\" \\\n-\t\"g\\[(\\]+S, unsigned long \\[*\\]+&, (const unsigned long|unsigned long const) \\[*\\]+&, unsigned long \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"hp: g__F1SRPUiRPCUiT2\" \\\n-\t\"g\\[(\\]+S, unsigned int \\[*\\]+&, (const unsigned int|unsigned int const) \\[*\\]+&, unsigned int \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"hp: g__F1SRPUsRPCUsT2\" \\\n-\t\"g\\[(\\]+S, unsigned short \\[*\\]+&, (const unsigned short|unsigned short const) \\[*\\]+&, unsigned short \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"hp: g__F1SRPUcRPCUcT2\" \\\n-\t\"g\\[(\\]+S, unsigned char \\[*\\]+&, (const unsigned char|unsigned char const) \\[*\\]+&, unsigned char \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"hp: g__F1T1SRPlRPClT3\" \\\n-\t\"g\\[(\\]+T, S, long \\[*\\]+&, (const long|long const) \\[*\\]+&, long \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"hp: g__F1T1SRPiRPCiT3\" \\\n-\t\"g\\[(\\]+T, S, int \\[*\\]+&, (const int|int const) \\[*\\]+&, int \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"hp: g__F1T1SRPcRPCcT3\" \\\n-\t\"g\\[(\\]+T, S, char \\[*\\]+&, (const char|char const) \\[*\\]+&, char \\[*\\]+&\\[)\\]+\"\n-\n-\n-    test_demangling \"hp: __gt__FRC2T2T1\" \\\n-\t\"operator>\\[(\\]+(const T2|T2 const) &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __ge__FRC2T2T1\" \\\n-\t\"operator>=\\[(\\]+(const T2|T2 const) &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __lt__FRC2T2T1\" \\\n-\t\"operator<\\[(\\]+(const T2|T2 const) &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __le__FRC2T2T1\" \\\n-\t\"operator<=\\[(\\]+(const T2|T2 const) &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __ne__FRC2T2T1\" \\\n-\t\"operator!=\\[(\\]+(const T2|T2 const) &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __eq__FRC2T2T1\" \\\n-\t\"operator==\\[(\\]+(const T2|T2 const) &, (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: g__FcR1cRC1cT2\" \\\n-\t\"g\\[(\\]+char, c &, (const c|c const) &, c &\\[)\\]+\"\n-    test_demangling \"hp: g__FcRPdRPCdT2\" \\\n-\t\"g\\[(\\]+char, double *\\[*\\]+&, (const double|double const) *\\[*\\]+&, double *\\[*\\]+&\\[)\\]+\"\n-    test_demangling \"hp: g__FcRPfRPCfT2\" \\\n-\t\"g\\[(\\]+char, float *\\[*\\]+&, (const float|float const) *\\[*\\]+&, float *\\[*\\]+&\\[)\\]+\"\n-    test_demangling_exact \"hp: h__FcT1\" \"h(char, char)\"\n-    test_demangling_exact \"hp: f__Ficd\" \"f(int, char, double)\"\n-    test_demangling \"hp: g__F1T1SdRPsRPCsT4\" \\\n-\t\"g\\[(\\]+T, S, double, short \\[*\\]+&, (const short|short const) \\[*\\]+&, short \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"hp: g__F1cC1cT1\" \\\n-\t\"g\\[(\\]+c, (const c|c const), c\\[)\\]+\"\n-    test_demangling \"hp: g__FPdPCdT1\" \\\n-\t\"g\\[(\\]+double *\\[*\\]+, (const double|double const) *\\[*\\]+, double *\\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__FPfPCfT1\" \\\n-\t\"g\\[(\\]+float *\\[*\\]+, (const float|float const) *\\[*\\]+, float *\\[*\\]+\\[)\\]+\"\n-\n-    test_demangling \"hp: g__FUlCUlT1\" \\\n-\t\"g\\[(\\]+unsigned long, (const unsigned long|unsigned long const), unsigned long\\[)\\]+\"\n-    test_demangling \"hp: g__FPlPClT1\" \\\n-\t\"g\\[(\\]+long \\[*\\]+, (const long|long const) \\[*\\]+, long \\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__FUiCUiT1\" \\\n-\t\"g\\[(\\]+unsigned int, (const unsigned int|unsigned int const), unsigned int\\[)\\]+\"\n-    test_demangling \"hp: g__FPiPCiT1\" \\\n-\t\"g\\[(\\]+int \\[*\\]+, (const int|int const) \\[*\\]+, int \\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__FUsCUsT1\" \\\n-\t\"g\\[(\\]+unsigned short, (const unsigned short|unsigned short const), unsigned short\\[)\\]+\"\n-    test_demangling \"hp: g__FPsPCsT1\" \\\n-\t\"g\\[(\\]+short \\[*\\]+, (const short|short const) \\[*\\]+, short \\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__FUcCUcT1\" \\\n-\t\"g\\[(\\]+unsigned char, (const unsigned char|unsigned char const), unsigned char\\[)\\]+\"\n-    test_demangling \"hp: g__FPcPCcT1\" \\\n-\t\"g\\[(\\]+char \\[*\\]+, (const char|char const) \\[*\\]+, char \\[*\\]+\\[)\\]+\"\n-    test_demangling \"hp: g__F1TlClT2\" \\\n-\t\"g\\[(\\]+T, long, (const long|long const), long\\[)\\]+\"\n-    test_demangling \"hp: g__F1TiCiT2\" \\\n-\t\"g\\[(\\]+T, int, (const int|int const), int\\[)\\]+\"\n-    test_demangling \"hp: g__F1TsCsT2\" \\\n-\t\"g\\[(\\]+T, short, (const short|short const), short\\[)\\]+\"\n-    test_demangling \"hp: g__F1TcCcT2\" \\\n-\t\"g\\[(\\]+T, char, (const char|char const), char\\[)\\]+\"\n-\n-    test_demangling \"hp: printf__FPCce\" \\\n-\t\"printf\\[(\\]+(const char|char const) \\[*\\]+,...\\[)\\]+\"\n-\n-\n-    test_demangling \"hp: g__F1SRUlRCUlT2\" \\\n-\t\"g\\[(\\]+S, unsigned long &, (const unsigned long|unsigned long const) &, unsigned long &\\[)\\]+\"\n-    test_demangling \"hp: g__F1SRPlRPClT2\" \\\n-\t\"g\\[(\\]+S, long \\[*\\]+&, (const long|long const) \\[*\\]+&, long \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"hp: g__F1RRUiRCUiT2\" \\\n-\t\"g\\[(\\]+R, unsigned int &, (const unsigned int|unsigned int const) &, unsigned int &\\[)\\]+\"\n-    test_demangling \"hp: g__F1SRPiRPCiT2\" \\\n-\t\"g\\[(\\]+S, int \\[*\\]+&, (const int|int const) \\[*\\]+&, int \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"hp: g__F1RRUsRCUsT2\" \\\n-\t\"g\\[(\\]+R, unsigned short &, (const unsigned short|unsigned short const) &, unsigned short &\\[)\\]+\"\n-    test_demangling \"hp: g__F1SRPsRPCsT2\" \\\n-\t\"g\\[(\\]+S, short \\[*\\]+&, (const short|short const) \\[*\\]+&, short \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"hp: g__F1RRUcRCUcT2\" \\\n-\t\"g\\[(\\]+R, unsigned char &, (const unsigned char|unsigned char const) &, unsigned char &\\[)\\]+\"\n-    test_demangling \"hp: g__F1SRPcRPCcT2\" \\\n-\t\"g\\[(\\]+S, char \\[*\\]+&, (const char|char const) \\[*\\]+&, char \\[*\\]+&\\[)\\]+\"\n-    test_demangling \"hp: g__F1T1RRlRClT3\" \\\n-\t\"g\\[(\\]+T, R, long &, (const long|long const) &, long &\\[)\\]+\"\n-    test_demangling \"hp: g__F1T1RRiRCiT3\" \\\n-\t\"g\\[(\\]+T, R, int &, (const int|int const) &, int &\\[)\\]+\"\n-    test_demangling \"hp: g__F1T1RRsRCsT3\" \\\n-\t\"g\\[(\\]+T, R, short &, (const short|short const) &, short &\\[)\\]+\"\n-    test_demangling \"hp: g__F1T1RRcRCcT3\" \\\n-\t\"g\\[(\\]+T, R, char &, (const char|char const) &, char &\\[)\\]+\"\n-\n-\n-    test_demangling_exact \"hp: f__FicdPcPFci_v\" \"f(int, char, double, char *, void (*)(char, int))\"\n-    test_demangling_exact \"hp: f__FicdPcPFic_v\" \"f(int, char, double, char *, void (*)(int, char))\"\n-    test_demangling_exact \"hp: get__2T7SFv\" \"T7::get(void) static\"\n-\n-\n-    test_demangling \"hp: g__FcRdRCdT2\" \\\n-\t\"g\\[(\\]+char, double &, (const double|double const) &, double &\\[)\\]+\"\n-    test_demangling \"hp: g__FcRfRCfT2\" \\\n-\t\"g\\[(\\]+char, float &, (const float|float const) &, float &\\[)\\]+\"\n-    test_demangling \"hp: __md__FC2T2i\" \\\n-\t\"operator%\\[(\\]+(const T2|T2 const), int\\[)\\]+\"\n-    test_demangling \"hp: __dv__FC2T2i\" \\\n-\t\"operator/\\[(\\]+(const T2|T2 const), int\\[)\\]+\"\n-    test_demangling \"hp: __ml__FC2T2i\" \\\n-\t\"operator\\[*\\]+\\[(\\]+(const T2|T2 const), int\\[)\\]+\"\n-    test_demangling \"hp: __mi__FC2T2i\" \\\n-\t\"operator-\\[(\\]+(const T2|T2 const), int\\[)\\]+\"\n-    test_demangling \"hp: __pl__FC2T2i\" \\\n-\t\"operator\\[+\\]+\\[(\\]+(const T2|T2 const), int\\[)\\]+\"\n-\n-\n-    test_demangling_exact \"hp: h__Fc\" \"h(char)\"\n-    test_demangling_exact \"hp: h__Fd\" \"h(double)\"\n-    test_demangling_exact \"hp: h__Ff\" \"h(float)\"\n-    test_demangling_exact \"hp: h__Fi\" \"h(int)\"\n-    test_demangling_exact \"hp: f__Fi\" \"f(int)\"\n-    test_demangling_exact \"hp: h__Fl\" \"h(long)\"\n-\n-    test_demangling_exact \"hp: h__Fs\" \"h(short)\"\n-    test_demangling \"hp: __md__FC2T2RC2T2\" \\\n-\t\"operator%\\[(\\]+(const T2|T2 const), (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __dv__FC2T2RC2T2\" \\\n-\t\"operator/\\[(\\]+(const T2|T2 const), (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __ml__FC2T2RC2T2\" \\\n-\t\"operator\\[*\\]+\\[(\\]+(const T2|T2 const), (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __mi__FC2T2RC2T2\" \\\n-\t\"operator-\\[(\\]+(const T2|T2 const), (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: __pl__FC2T2RC2T2\" \\\n-\t\"operator\\[+\\]+\\[(\\]+(const T2|T2 const), (const T2|T2 const) &\\[)\\]+\"\n-    test_demangling \"hp: g__FcRP1cRPC1cT2\" \\\n-\t\"g\\[(\\]+char, c *\\[*\\]+&, (const c|c const) *\\[*\\]+&, c *\\[*\\]+&\\[)\\]+\"\n-\n-\n-    test_demangling \"hp: g__FdCdT1\" \\\n-\t\"g\\[(\\]+double, (const double|double const), double\\[)\\]+\"\n-    test_demangling \"hp: g__FfCfT1\" \\\n-\t\"g\\[(\\]+float, (const float|float const), float\\[)\\]+\"\n-    test_demangling \"hp: g__FlClT1\" \\\n-\t\"g\\[(\\]+long, (const long|long const), long\\[)\\]+\"\n-    test_demangling \"hp: g__FiCiT1\" \\\n-\t\"g\\[(\\]+int, (const int|int const), int\\[)\\]+\"\n-    test_demangling \"hp: g__FsCsT1\" \\\n-\t\"g\\[(\\]+short, (const short|short const), short\\[)\\]+\"\n-    test_demangling \"hp: g__FcCcT1\" \\\n-\t\"g\\[(\\]+char, (const char|char const), char\\[)\\]+\"\n-\n-\n-    test_demangling_exact \"hp: f__FicdPc\" \"f(int, char, double, char *)\"\n-    test_demangling_exact \"hp: __nw__FUi\" \"operator new(unsigned int)\"\n-    test_demangling_exact \"hp: __ct__Q3_2T11a1bSFi\" \"T1::a::b::b(int) static\"\n-    test_demangling_exact \"hp: __dt__Q3_2T11a1bSFi\" \"T1::a::b::~b(int) static\"\n-    test_demangling_exact \"hp: put__Q3_2T11a1bSFi\" \"T1::a::b::put(int) static\"\n-    test_demangling_exact \"hp: get__Q2_2T11aSFv\" \"T1::a::get(void) static\"\n-    test_demangling_exact \"hp: put__2T1SFi\" \"T1::put(int) static\"\n-    test_demangling_exact \"hp: put__Q5_2T11a1b1c1dSFi\" \"T1::a::b::c::d::put(int) static\"\n-    test_demangling_exact \"hp: get__Q4_2T11a1b1cSFv\" \"T1::a::b::c::get(void) static\"\n-    test_demangling_exact \"hp: put__Q2_2T11aSFi\" \"T1::a::put(int) static\"\n-    test_demangling_exact \"hp: put__Q4_2T11a1b1cSFi\" \"T1::a::b::c::put(int) static\"\n-    test_demangling_exact \"hp: get__Q3_2T11a1bSFv\" \"T1::a::b::get(void) static\"\n-    test_demangling_exact \"hp: get__2T1SFv\" \"T1::get(void) static\"\n-    test_demangling_exact \"hp: get__Q5_2T11a1b1c1dSFv\" \"T1::a::b::c::d::get(void) static\"\n-\n-\n-    test_demangling_exact \"hp: bar__3fooFPv\"       \"foo::bar(void *)\"\n-    test_demangling \"hp: bar__3fooFPCv\" \\\n-\t     \"foo::bar\\[(\\]+(const void|void const) *\\[*\\]+\\[)\\]+\"\n-    test_demangling_exact \"hp: bar__3fooCFPv\"      \"foo::bar(void *) const\"\n-    test_demangling \"hp: bar__3fooCFPCv\" \\\n-\t    \"foo::bar\\[(\\]+(const void|void const) *\\[*\\]+\\[)\\]+ const\"\n-    test_demangling_exact \"hp: __eq__3fooFR3foo\"   \"foo::operator==(foo &)\"\n-    test_demangling \"hp: __eq__3fooFRC3foo\" \\\n-\t \"foo::operator==\\[(\\]+(const foo|foo const) &\\[)\\]+\"\n-    test_demangling_exact \"hp: __eq__3fooCFR3foo\"  \"foo::operator==(foo &) const\"\n-    test_demangling \"hp: __eq__3fooCFRC3foo\" \\\n-\t\"foo::operator==\\[(\\]+(const foo|foo const) &\\[)\\]+ const\"\n-\n-    test_demangling_exact \"hp: bar__3fooFiT16FooBar\" \"foo::bar(int, int, FooBar)\"\n-\n-    test_demangling_exact \"hp: bar__3fooFPiN51PdN37PcN211T1iN215\" \\\n-      \"foo::bar(int *, int *, int *, int *, int *, int *, double *, double *, double *, double *, char *, char *, char *, int *, int, int, int)\"\n-\n-\n-    # HP aCC specific tests. HP aCC demangling does not use __pt__ for\n-    # template specifications.  There are other differences as well.\n-\n-    test_demangling_exact \"hp: __dt__2T5XTPFiPPdPv_i__Fv\" \"T5<int (*)(int, double **, void *)>::~T5(void)\"\n-\n-    test_demangling_exact \"hp: __ct__1cFi\" \"c::c(int)\"\n-\n-    test_demangling_exact \"hp: __dt__2T5XTi__Fv\" \"T5<int>::~T5(void)\"\n-\n-    test_demangling_exact \"hp: __dt__2T5XTc__Fv\" \"T5<char>::~T5(void)\"\n-\n-    test_demangling_exact \"hp: __ct__2T2Fi\" \"T2::T2(int)\"\n-    test_demangling_exact \"hp: __dt__2T1Fv\" \"T1::~T1(void)\"\n-\n-    test_demangling_exact \"hp: __dt__2T5XT1x__Fv\" \"T5<x>::~T5(void)\"\n-\n-    test_demangling_exact \"hp: __dt__2T5XTPFcPv_i__Fv\" \"T5<int (*)(char, void *)>::~T5(void)\"\n-    \n-    test_demangling_exact \"hp: __ct__2T5XTPFiPPdPv_i__Fi\" \"T5<int (*)(int, double **, void *)>::T5(int)\"\n-\n-    test_demangling_exact \"hp: __dl__2T5XT1x__SFPv\" \"T5<x>::operator delete(void *) static\"\n-    \n-    test_demangling_exact \"hp: X__2T5XT1x\" \"T5<x>::X\"\n-\n-    test_demangling_exact \"hp: __ct__2T5XTi__Fi\" \"T5<int>::T5(int)\"\n-\n-    test_demangling_exact \"hp: __ct__2T5XTc__Fi\" \"T5<char>::T5(int)\"\n-\n-    test_demangling_exact \"hp: __dl__2T5XTPFcPv_i__SFPv\" \"T5<int (*)(char, void *)>::operator delete(void *) static\"\n-\n-    test_demangling_exact \"hp: X__2T5XTPFcPv_i\" \"T5<int (*)(char, void *)>::X\"\n-\n-    test_demangling_exact \"hp: __ct__2T5XT1x__Fi\" \"T5<x>::T5(int)\"\n-\n-    test_demangling_exact \"hp: __dl__2T5XTPFiPPdPv_i__SFPv\" \"T5<int (*)(int, double **, void *)>::operator delete(void *) static\"\n-    test_demangling_exact \"hp: X__2T5XTPFiPPdPv_i\" \"T5<int (*)(int, double **, void *)>::X\"\n-\n-    test_demangling_exact \"hp: __dl__2T5XTi__SFPv\" \"T5<int>::operator delete(void *) static\"\n-\n-    test_demangling_exact \"hp: __dl__2T5XTc__SFPv\" \"T5<char>::operator delete(void *) static\"\n-\n-    test_demangling_exact \"hp: X__2T5XTc\" \"T5<char>::X\"\n-\n-    test_demangling_exact \"hp: X__2T5XTi\" \"T5<int>::X\"\n-\n-    test_demangling_exact \"hp: __ct__2T5XTPFcPv_i__Fi\" \"T5<int (*)(char, void *)>::T5(int)\"\n-    \n-    test_demangling_exact \"hp: __dt__2T1XTc__Fv\" \"T1<char>::~T1(void)\"\n-\n-    test_demangling_exact \"hp: __dt__2T1XT1t__Fv\" \"T1<t>::~T1(void)\"\n-\n-    test_demangling_exact \"hp: __dl__2T1XT1t__SFPv\" \"T1<t>::operator delete(void *) static\"\n-\n-    test_demangling_exact \"hp: __ct__2T1XTc__Fi\" \"T1<char>::T1(int)\"\n-\n-    test_demangling_exact \"hp: __ct__2T1XTc__Fv\" \"T1<char>::T1(void)\"\n-\n-    test_demangling_exact \"hp: __ct__2T1XT1t__Fi\" \"T1<t>::T1(int)\"\n-\n-    test_demangling_exact \"hp: __ct__2T1XT1t__Fv\" \"T1<t>::T1(void)\"\n-\n-    test_demangling_exact \"hp: __dl__2T1XTc__SFPv\" \"T1<char>::operator delete(void *) static\"\n-\n-    test_demangling_exact \"hp: elem__6vectorXTd__Fi\" \"vector<double>::elem(int)\"\n-\n-    test_demangling_exact \"hp: elem__6vectorXTi__Fi\" \"vector<int>::elem(int)\"\n-\n-    test_demangling_exact \"hp: __ct__6vectorXTd__Fi\" \"vector<double>::vector(int)\"\n-\n-    test_demangling_exact \"hp: __ct__6vectorXTi__Fi\" \"vector<int>::vector(int)\"\n-\n-    test_demangling_exact \"hp: __ct__9DListNodeXTR6RLabel__FR6RLabelP9DListNodeXTR6RLabel_T2\" \\\n-\t\"DListNode<RLabel &>::DListNode(RLabel &, DListNode<RLabel &> *, DListNode<RLabel &> *)\"\n-\n-\n-    # Absolute integer constants in template args\n-\n-    test_demangling_exact \"hp: elem__6vectorXTiUP34__Fi\" \"vector<int,34U>::elem(int)\"\n-    test_demangling_exact \"hp: elem__6vectorXUP2701Td__Fi\" \"vector<2701U,double>::elem(int)\"\n-    test_demangling_exact \"hp: elem__6vectorXTiSP334__Fi\" \"vector<int,334>::elem(int)\"\n-    test_demangling_exact \"hp: elem__6vectorXTiSN67__Fi\" \"vector<int,-67>::elem(int)\"\n-    test_demangling_exact \"hp: elem__6vectorXTiSM__SCFPPd\" \"vector<int,-2147483648>::elem(double **) static const\"\n-    test_demangling_exact \"hp: elem__6vectorXTiSN67UP4000TRs__Fi\" \"vector<int,-67,4000U,short &>::elem(int)\"\n-    test_demangling_exact \"hp: elem__6vectorXTiSN67TRdTFPv_i__Fi\" \"vector<int,-67,double &,int (void *)>::elem(int)\"\n-    test_demangling_exact \"hp: X__6vectorXTiSN67TdTPvUP5TRs\" \"vector<int,-67,double,void *,5U,short &>::X\"\n-\n-    # Named constants in template args\n-\n-    test_demangling_exact \"hp: elem__6vectorXTiA3foo__Fi\" \"vector<int,&foo>::elem(int)\"\n-    test_demangling_exact \"hp: elem__6vectorXTiA3fooTPvA5Label__FiPPvT2\" \"vector<int,&foo,void *,&Label>::elem(int, void **, void **)\"\n-    test_demangling_exact \"hp: elem__6vectorXTiSN42A3foo__Fi\" \"vector<int,-42,&foo>::elem(int)\"\n-\n-    # Alternate entry points for functions\n-\n-    test_demangling_exact \"hp: __ct__2T5XTPFcPv_i__Fi_2\" \"T5<int (*)(char, void *)>::T5(int)\"\n-    test_demangling_exact \"hp: __ct__2T5XTPFcPv_i__Fi_19\" \"T5<int (*)(char, void *)>::T5(int)\"\n-    test_demangling_exact \"hp: f__FicdPcPFci_v_34\" \"f(int, char, double, char *, void (*)(char, int))\"\n-\n-\n-    # Template partial specializations\n-\n-# FIXME!  The # characters don't go through expect, and backslashes don't seem to work.\n-#    test_demangling_exact \"hp: spec__13Spec<#1,#1.*>XTiTPi_FPi\" \"Spec<int,int *>::spec(int *)\"\n-#    test_demangling_exact \"hp: spec__16Spec<#1,#1.&,#1>XTiTRiTi_FPi\" \"Spec<int,int &, int>::spec(int *)\"\n-# Fake test -- replace # with %\n-    test_demangling_exact \"hp: spec__13Spec<%1,%1.*>XTiTPi_FPi\" \"Spec<int,int *>::spec(int *)\"\n-    test_demangling_exact \"hp: spec__16Spec<%1,%1.&,%1>XTiTRiTi_FPi\" \"Spec<int,int &,int>::spec(int *)\"\n-\n-    # Global template functions\n-\n-    test_demangling_exact \"hp: add__XTc_FcT1\" \"add<char>(char, char)\"\n-    test_demangling_exact \"hp: add__XTcSP9A5label_FcPPlT1\" \"add<char,9,&label>(char, long **, char)\"\n-    test_demangling_exact \"hp: add__XTPfTFPd_f_FcT1\" \"add<float *,float (double *)>(char, char)\"\n-\n-    # Template for template arg\n-\n-    test_demangling_exact \"hp: unLink__12basic_stringXTcT18string_char_traitsXTc_T9allocator_Fv\" \"basic_string<char,string_char_traits<char>,allocator>::unLink(void)\"\n-\n-    test_demangling_exact \"hp: _Utf390_1__1_9223372036854775807__9223372036854775\" \\\n-\t    \"Can't demangle \\\"_Utf390_1__1_9223372036854775807__9223372036854775\\\"\"\n-}\n-\n-\n proc catch_demangling_errors {command} {\n     if {[catch $command result]} {\n \tputs \"ERROR: demangle.exp: while running $command: $result\"\n@@ -1593,10 +183,7 @@ proc do_tests {} {\n     # Using catch_demangling_errors this way ensures that, if one of\n     # the functions raises a Tcl error, then it'll get reported, and\n     # the rest of the functions will still run.\n-    catch_demangling_errors test_lucid_style_demangling\n-    catch_demangling_errors test_gnu_style_demangling\n-    catch_demangling_errors test_arm_style_demangling\n-    catch_demangling_errors test_hp_style_demangling\n+    catch_demangling_errors test_gnuv3_style_demangling\n \n     # Verify specifying demangle language.\n     gdb_test_no_output \"set language unknown\""
    },
    {
      "sha": "2f5a4c815f23ef98eef98a98914965b692c5b679",
      "filename": "gdb/valops.c",
      "status": "modified",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/valops.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/041be52673949e5b6cc2b507e55a379a54ab8ee0/gdb/valops.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valops.c?ref=041be52673949e5b6cc2b507e55a379a54ab8ee0",
      "patch": "@@ -1980,23 +1980,12 @@ search_struct_method (const char *name, struct value **arg1p,\n   int i;\n   struct value *v;\n   int name_matched = 0;\n-  char dem_opname[64];\n \n   type = check_typedef (type);\n   for (i = TYPE_NFN_FIELDS (type) - 1; i >= 0; i--)\n     {\n       const char *t_field_name = TYPE_FN_FIELDLIST_NAME (type, i);\n \n-      /* FIXME!  May need to check for ARM demangling here.  */\n-      if (startswith (t_field_name, \"__\") ||\n-\t  startswith (t_field_name, \"op\") ||\n-\t  startswith (t_field_name, \"type\"))\n-\t{\n-\t  if (cplus_demangle_opname (t_field_name, dem_opname, DMGL_ANSI))\n-\t    t_field_name = dem_opname;\n-\t  else if (cplus_demangle_opname (t_field_name, dem_opname, 0))\n-\t    t_field_name = dem_opname;\n-\t}\n       if (t_field_name && (strcmp_iw (t_field_name, name) == 0))\n \t{\n \t  int j = TYPE_FN_FIELDLIST_LENGTH (type, i) - 1;\n@@ -3421,19 +3410,7 @@ value_struct_elt_for_reference (struct type *domain, int offset,\n   for (i = TYPE_NFN_FIELDS (t) - 1; i >= 0; --i)\n     {\n       const char *t_field_name = TYPE_FN_FIELDLIST_NAME (t, i);\n-      char dem_opname[64];\n \n-      if (startswith (t_field_name, \"__\") \n-\t  || startswith (t_field_name, \"op\") \n-\t  || startswith (t_field_name, \"type\"))\n-\t{\n-\t  if (cplus_demangle_opname (t_field_name, \n-\t\t\t\t     dem_opname, DMGL_ANSI))\n-\t    t_field_name = dem_opname;\n-\t  else if (cplus_demangle_opname (t_field_name, \n-\t\t\t\t\t  dem_opname, 0))\n-\t    t_field_name = dem_opname;\n-\t}\n       if (t_field_name && strcmp (t_field_name, name) == 0)\n \t{\n \t  int j;"
    }
  ]
}