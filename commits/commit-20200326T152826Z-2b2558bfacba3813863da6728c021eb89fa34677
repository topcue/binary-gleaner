{
  "sha": "2b2558bfacba3813863da6728c021eb89fa34677",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmIyNTU4YmZhY2JhMzgxMzg2M2RhNjcyOGMwMjFlYjg5ZmEzNDY3Nw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-26T15:28:08Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-26T15:28:26Z"
    },
    "message": "Move DWARF-constant stringifying code to new file\n\nThis moves the DWARF debugging functions that stringify various\nconstants to a new file, dwarf2/stringify.c.\n\ngdb/ChangeLog\n2020-03-26  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (dwarf_unit_type_name, dwarf_tag_name)\n\t(dwarf_attr_name, dwarf_form_name, dwarf_bool_name)\n\t(dwarf_type_encoding_name): Move to stringify.c.\n\t* Makefile.in (COMMON_SFILES): Add dwarf2/stringify.c.\n\t* dwarf2/stringify.c: New file.\n\t* dwarf2/stringify.h: New file.",
    "tree": {
      "sha": "74a758f30b78f2e2954b489bb6b4a20acbbdc7ec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/74a758f30b78f2e2954b489bb6b4a20acbbdc7ec"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2b2558bfacba3813863da6728c021eb89fa34677",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2b2558bfacba3813863da6728c021eb89fa34677",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2b2558bfacba3813863da6728c021eb89fa34677",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2b2558bfacba3813863da6728c021eb89fa34677/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "eeb647814fbfd71dddea45f36cb4847341f5cde7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eeb647814fbfd71dddea45f36cb4847341f5cde7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/eeb647814fbfd71dddea45f36cb4847341f5cde7"
    }
  ],
  "stats": {
    "total": 256,
    "additions": 163,
    "deletions": 93
  },
  "files": [
    {
      "sha": "c8f40a7dfb6d1709bb3404a9176766c330003c61",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b2558bfacba3813863da6728c021eb89fa34677/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b2558bfacba3813863da6728c021eb89fa34677/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2b2558bfacba3813863da6728c021eb89fa34677",
      "patch": "@@ -1,3 +1,12 @@\n+2020-03-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (dwarf_unit_type_name, dwarf_tag_name)\n+\t(dwarf_attr_name, dwarf_form_name, dwarf_bool_name)\n+\t(dwarf_type_encoding_name): Move to stringify.c.\n+\t* Makefile.in (COMMON_SFILES): Add dwarf2/stringify.c.\n+\t* dwarf2/stringify.c: New file.\n+\t* dwarf2/stringify.h: New file.\n+\n 2020-03-26  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/die.h (struct die_info) <addr_base, ranges_base>:"
    },
    {
      "sha": "bc3ef695bbdb84ed2b52536ca9f4e09782ce8944",
      "filename": "gdb/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b2558bfacba3813863da6728c021eb89fa34677/gdb/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b2558bfacba3813863da6728c021eb89fa34677/gdb/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/Makefile.in?ref=2b2558bfacba3813863da6728c021eb89fa34677",
      "patch": "@@ -1016,6 +1016,7 @@ COMMON_SFILES = \\\n \tdwarf2/macro.c \\\n \tdwarf2/read.c \\\n \tdwarf2/section.c \\\n+\tdwarf2/stringify.c \\\n \teval.c \\\n \tevent-loop.c \\\n \tevent-top.c \\"
    },
    {
      "sha": "b363088a6aac41e5ecb934b7d7add4eb5fdae702",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 93,
      "changes": 94,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b2558bfacba3813863da6728c021eb89fa34677/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b2558bfacba3813863da6728c021eb89fa34677/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=2b2558bfacba3813863da6728c021eb89fa34677",
      "patch": "@@ -40,6 +40,7 @@\n #include \"dwarf2/dwz.h\"\n #include \"dwarf2/macro.h\"\n #include \"dwarf2/die.h\"\n+#include \"dwarf2/stringify.h\"\n #include \"bfd.h\"\n #include \"elf-bfd.h\"\n #include \"symtab.h\"\n@@ -1406,16 +1407,6 @@ static const char *dwarf2_physname (const char *name, struct die_info *die,\n static struct die_info *dwarf2_extension (struct die_info *die,\n \t\t\t\t\t  struct dwarf2_cu **);\n \n-static const char *dwarf_tag_name (unsigned int);\n-\n-static const char *dwarf_attr_name (unsigned int);\n-\n-static const char *dwarf_form_name (unsigned int);\n-\n-static const char *dwarf_bool_name (unsigned int);\n-\n-static const char *dwarf_type_encoding_name (unsigned int);\n-\n static void dump_die_shallow (struct ui_file *, int indent, struct die_info *);\n \n static void dump_die_for_error (struct die_info *);\n@@ -21334,89 +21325,6 @@ dwarf2_extension (struct die_info *die, struct dwarf2_cu **ext_cu)\n   return follow_die_ref (die, attr, ext_cu);\n }\n \n-/* A convenience function that returns an \"unknown\" DWARF name,\n-   including the value of V.  STR is the name of the entity being\n-   printed, e.g., \"TAG\".  */\n-\n-static const char *\n-dwarf_unknown (const char *str, unsigned v)\n-{\n-  char *cell = get_print_cell ();\n-  xsnprintf (cell, PRINT_CELL_SIZE, \"DW_%s_<unknown: %u>\", str, v);\n-  return cell;\n-}\n-\n-/* Convert a DIE tag into its string name.  */\n-\n-static const char *\n-dwarf_tag_name (unsigned tag)\n-{\n-  const char *name = get_DW_TAG_name (tag);\n-\n-  if (name == NULL)\n-    return dwarf_unknown (\"TAG\", tag);\n-\n-  return name;\n-}\n-\n-/* Convert a DWARF attribute code into its string name.  */\n-\n-static const char *\n-dwarf_attr_name (unsigned attr)\n-{\n-  const char *name;\n-\n-#ifdef MIPS /* collides with DW_AT_HP_block_index */\n-  if (attr == DW_AT_MIPS_fde)\n-    return \"DW_AT_MIPS_fde\";\n-#else\n-  if (attr == DW_AT_HP_block_index)\n-    return \"DW_AT_HP_block_index\";\n-#endif\n-\n-  name = get_DW_AT_name (attr);\n-\n-  if (name == NULL)\n-    return dwarf_unknown (\"AT\", attr);\n-\n-  return name;\n-}\n-\n-/* Convert a DWARF value form code into its string name.  */\n-\n-static const char *\n-dwarf_form_name (unsigned form)\n-{\n-  const char *name = get_DW_FORM_name (form);\n-\n-  if (name == NULL)\n-    return dwarf_unknown (\"FORM\", form);\n-\n-  return name;\n-}\n-\n-static const char *\n-dwarf_bool_name (unsigned mybool)\n-{\n-  if (mybool)\n-    return \"TRUE\";\n-  else\n-    return \"FALSE\";\n-}\n-\n-/* Convert a DWARF type code into its string name.  */\n-\n-static const char *\n-dwarf_type_encoding_name (unsigned enc)\n-{\n-  const char *name = get_DW_ATE_name (enc);\n-\n-  if (name == NULL)\n-    return dwarf_unknown (\"ATE\", enc);\n-\n-  return name;\n-}\n-\n static void\n dump_die_shallow (struct ui_file *f, int indent, struct die_info *die)\n {"
    },
    {
      "sha": "0cdefe8108132673eaa9937f3d21069f6cb6af5e",
      "filename": "gdb/dwarf2/stringify.c",
      "status": "added",
      "additions": 114,
      "deletions": 0,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b2558bfacba3813863da6728c021eb89fa34677/gdb/dwarf2/stringify.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b2558bfacba3813863da6728c021eb89fa34677/gdb/dwarf2/stringify.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/stringify.c?ref=2b2558bfacba3813863da6728c021eb89fa34677",
      "patch": "@@ -0,0 +1,114 @@\n+/* DWARF stringify code\n+\n+   Copyright (C) 1994-2020 Free Software Foundation, Inc.\n+\n+   Adapted by Gary Funck (gary@intrepid.com), Intrepid Technology,\n+   Inc.  with support from Florida State University (under contract\n+   with the Ada Joint Program Office), and Silicon Graphics, Inc.\n+   Initial contribution by Brent Benson, Harris Computer Systems, Inc.,\n+   based on Fred Fish's (Cygnus Support) implementation of DWARF 1\n+   support.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"defs.h\"\n+#include \"dwarf2.h\"\n+#include \"dwarf2/stringify.h\"\n+\n+/* A convenience function that returns an \"unknown\" DWARF name,\n+   including the value of V.  STR is the name of the entity being\n+   printed, e.g., \"TAG\".  */\n+\n+static const char *\n+dwarf_unknown (const char *str, unsigned v)\n+{\n+  char *cell = get_print_cell ();\n+  xsnprintf (cell, PRINT_CELL_SIZE, \"DW_%s_<unknown: %u>\", str, v);\n+  return cell;\n+}\n+\n+/* See stringify.h.  */\n+\n+const char *\n+dwarf_tag_name (unsigned tag)\n+{\n+  const char *name = get_DW_TAG_name (tag);\n+\n+  if (name == NULL)\n+    return dwarf_unknown (\"TAG\", tag);\n+\n+  return name;\n+}\n+\n+/* See stringify.h.  */\n+\n+const char *\n+dwarf_attr_name (unsigned attr)\n+{\n+  const char *name;\n+\n+#ifdef MIPS /* collides with DW_AT_HP_block_index */\n+  if (attr == DW_AT_MIPS_fde)\n+    return \"DW_AT_MIPS_fde\";\n+#else\n+  if (attr == DW_AT_HP_block_index)\n+    return \"DW_AT_HP_block_index\";\n+#endif\n+\n+  name = get_DW_AT_name (attr);\n+\n+  if (name == NULL)\n+    return dwarf_unknown (\"AT\", attr);\n+\n+  return name;\n+}\n+\n+/* See stringify.h.  */\n+\n+const char *\n+dwarf_form_name (unsigned form)\n+{\n+  const char *name = get_DW_FORM_name (form);\n+\n+  if (name == NULL)\n+    return dwarf_unknown (\"FORM\", form);\n+\n+  return name;\n+}\n+\n+/* See stringify.h.  */\n+\n+const char *\n+dwarf_bool_name (unsigned mybool)\n+{\n+  if (mybool)\n+    return \"TRUE\";\n+  else\n+    return \"FALSE\";\n+}\n+\n+/* See stringify.h.  */\n+\n+const char *\n+dwarf_type_encoding_name (unsigned enc)\n+{\n+  const char *name = get_DW_ATE_name (enc);\n+\n+  if (name == NULL)\n+    return dwarf_unknown (\"ATE\", enc);\n+\n+  return name;\n+}"
    },
    {
      "sha": "d3b3d2c191a2b0fd5a5e06898d76d2270b318412",
      "filename": "gdb/dwarf2/stringify.h",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b2558bfacba3813863da6728c021eb89fa34677/gdb/dwarf2/stringify.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b2558bfacba3813863da6728c021eb89fa34677/gdb/dwarf2/stringify.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/stringify.h?ref=2b2558bfacba3813863da6728c021eb89fa34677",
      "patch": "@@ -0,0 +1,38 @@\n+/* DWARF stringify code\n+\n+   Copyright (C) 2003-2020 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GDB_DWARF2_STRINGIFY_H\n+#define GDB_DWARF2_STRINGIFY_H\n+\n+/* Convert a DIE tag into its string name.  */\n+extern const char *dwarf_tag_name (unsigned tag);\n+\n+/* Convert a DWARF attribute code into its string name.  */\n+extern const char *dwarf_attr_name (unsigned attr);\n+\n+/* Convert a DWARF value form code into its string name.  */\n+extern const char *dwarf_form_name (unsigned form);\n+\n+/* Convert a boolean to a string form.  */\n+extern const char *dwarf_bool_name (unsigned mybool);\n+\n+/* Convert a DWARF type code into its string name.  */\n+extern const char *dwarf_type_encoding_name (unsigned enc);\n+\n+#endif /* GDB_DWARF2_STRINGIFY_H */"
    }
  ]
}