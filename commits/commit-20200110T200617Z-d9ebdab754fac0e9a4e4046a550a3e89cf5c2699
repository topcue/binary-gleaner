{
  "sha": "d9ebdab754fac0e9a4e4046a550a3e89cf5c2699",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDllYmRhYjc1NGZhYzBlOWE0ZTQwNDZhNTUwYTNlODljZjVjMjY5OQ==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-01-10T20:06:17Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-01-10T20:06:17Z"
    },
    "message": "Switch the inferior before outputting its id in \"info inferiors\"\n\nGDB uses the 'current_top_target' when displaying the description of\nan inferior.  This leads to same target being used for each inferior\nand, in turn, yields incorrect output when the inferior has a target\nthat is supposed to give a specialized output.  For instance, the\nremote target outputs \"Remote target\" instead of \"process XYZ\" as the\ndescription if the multi-process feature is not supported or turned\noff.\n\nE.g.: Suppose we have a native and a remote target, and the native is\nthe current inferior.  The remote target does not support multi-process.\nFor \"info inferiors\", we would expect to see:\n\n~~~\n(gdb) i inferiors\n  Num  Description       Connection       Executable\n* 1    process 29060     1 (native)       /a/path\n  2    Remote target     2 (remote ...)\n~~~\n\nbut instead we get\n\n~~~\n(gdb) i inferiors\n  Num  Description       Connection       Executable\n* 1    process 29060     1 (native)       /a/path\n  2    process 42000     2 (remote ...)\n~~~\n\nSimilarly, if the current inferior is the remote one, we would expect\nto see\n\n~~~\n(gdb) i inferiors\n  Num  Description       Connection       Executable\n  1    process 29060     1 (native)       /a/path\n* 2    Remote target     2 (remote ...)\n~~~\n\nbut we get\n\n~~~\n(gdb) i inferiors\n  Num  Description       Connection       Executable\n* 1    Remote target     1 (native)       /a/path\n  2    Remote target     2 (remote ...)\n~~~\n\nWith this patch, we switch to the inferior when outputting its\ndescription, so that the current_top_target will be aligned to the\ninferior we are displaying.\n\nFor testing, this patch expands the \"info inferiors\" test for the\nmulti-target feature.  The test was checking for the output of the\ninfo commands after setup, only when the current inferior is the last\nadded inferior.\n\nThis patch does the following to the testcase:\n\n1. The \"info inferiors\" and \"info connections\" test is extracted out\n   from the \"setup\" procedure to a separate procedure.\n\n2. The test is enriched to check the output after switching to each\n   inferior, not just the last one.\n\n3. The test is performed twice; one for when the multi-process feature\n   is turned on, one for off.\n\ngdb/ChangeLog:\n2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* inferior.c (print_inferior): Switch inferior before printing it.\n\ngdb/testsuite/ChangeLog:\n2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* gdb.multi/multi-target.exp (setup): Factor out \"info\n\tconnections\" and \"info inferiors\" tests to ...\n\t(test_info_inferiors): ... this new procedure.\n\t(top level): Run new \"info-inferiors\" tests.",
    "tree": {
      "sha": "163dfc559621fb159f80a3ae2e067c517fd9456f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/163dfc559621fb159f80a3ae2e067c517fd9456f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d9ebdab754fac0e9a4e4046a550a3e89cf5c2699",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9ebdab754fac0e9a4e4046a550a3e89cf5c2699",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d9ebdab754fac0e9a4e4046a550a3e89cf5c2699",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9ebdab754fac0e9a4e4046a550a3e89cf5c2699/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f3c469b95b9f1f635668660c5041df9513a47a02",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f3c469b95b9f1f635668660c5041df9513a47a02",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f3c469b95b9f1f635668660c5041df9513a47a02"
    }
  ],
  "stats": {
    "total": 135,
    "additions": 107,
    "deletions": 28
  },
  "files": [
    {
      "sha": "ed2856c2466203cc85139e1564ae0d8663b29f12",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9ebdab754fac0e9a4e4046a550a3e89cf5c2699/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9ebdab754fac0e9a4e4046a550a3e89cf5c2699/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d9ebdab754fac0e9a4e4046a550a3e89cf5c2699",
      "patch": "@@ -1,3 +1,7 @@\n+2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* inferior.c (print_inferior): Switch inferior before printing it.\n+\n 2020-01-10  Aleksandar Paunovic  <aleksandar.paunovic@intel.com>\n \t    Pedro Alves  <palves@redhat.com>\n "
    },
    {
      "sha": "eb090dfde1a5850c6619b51440762e277e1a008f",
      "filename": "gdb/inferior.c",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9ebdab754fac0e9a4e4046a550a3e89cf5c2699/gdb/inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9ebdab754fac0e9a4e4046a550a3e89cf5c2699/gdb/inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.c?ref=d9ebdab754fac0e9a4e4046a550a3e89cf5c2699",
      "patch": "@@ -494,20 +494,29 @@ print_inferior (struct ui_out *uiout, const char *requested_inferiors)\n   uiout->table_header (17, ui_left, \"exec\", \"Executable\");\n \n   uiout->table_body ();\n+\n+  /* Restore the current thread after the loop because we switch the\n+     inferior in the loop.  */\n+  scoped_restore_current_pspace_and_thread restore_pspace_thread;\n+  inferior *current_inf = current_inferior ();\n   for (inferior *inf : all_inferiors ())\n     {\n       if (!number_is_in_list (requested_inferiors, inf->num))\n \tcontinue;\n \n       ui_out_emit_tuple tuple_emitter (uiout, NULL);\n \n-      if (inf == current_inferior ())\n+      if (inf == current_inf)\n \tuiout->field_string (\"current\", \"*\");\n       else\n \tuiout->field_skip (\"current\");\n \n       uiout->field_signed (\"number\", inf->num);\n \n+      /* Because target_pid_to_str uses current_top_target,\n+\t switch the inferior.  */\n+      switch_to_inferior_no_thread (inf);\n+\n       uiout->field_string (\"target-id\", inferior_pid_to_str (inf->pid));\n \n       std::string conn = uiout_field_connection (inf->process_target ());"
    },
    {
      "sha": "e83e2195fa4e87b37bea7971f9944dbf229feae3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9ebdab754fac0e9a4e4046a550a3e89cf5c2699/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9ebdab754fac0e9a4e4046a550a3e89cf5c2699/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=d9ebdab754fac0e9a4e4046a550a3e89cf5c2699",
      "patch": "@@ -1,3 +1,10 @@\n+2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* gdb.multi/multi-target.exp (setup): Factor out \"info\n+\tconnections\" and \"info inferiors\" tests to ...\n+\t(test_info_inferiors): ... this new procedure.\n+\t(top level): Run new \"info-inferiors\" tests.\n+\n 2020-01-10  Pedro Alves  <palves@redhat.com>\n \n \t* gdb.server/bkpt-other-inferior.exp: New file."
    },
    {
      "sha": "3588eb4d76e95c5c8aed1ca1c7c3e11abe88672a",
      "filename": "gdb/testsuite/gdb.multi/multi-target.exp",
      "status": "modified",
      "additions": 86,
      "deletions": 27,
      "changes": 113,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9ebdab754fac0e9a4e4046a550a3e89cf5c2699/gdb/testsuite/gdb.multi/multi-target.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9ebdab754fac0e9a4e4046a550a3e89cf5c2699/gdb/testsuite/gdb.multi/multi-target.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.multi/multi-target.exp?ref=d9ebdab754fac0e9a4e4046a550a3e89cf5c2699",
      "patch": "@@ -137,33 +137,6 @@ proc setup {non-stop} {\n \treturn 0\n     }\n \n-    set ws \"\\[ \\t\\]+\"\n-    global decimal\n-\n-    # Test \"info connections\" and \"info inferior\"'s \"Connection\"\n-    # column, while at it.\n-\n-    gdb_test \"info connections\" \\\n-\t[multi_line \\\n-\t     \"Num${ws}What${ws}Description${ws}\" \\\n-\t     \"  1${ws}native${ws}Native process${ws}\" \\\n-\t     \"  2${ws}extended-remote localhost:$decimal${ws}Extended remote serial target in gdb-specific protocol${ws}\" \\\n-\t     \"  3${ws}core${ws}Local core dump file${ws}\" \\\n-\t     \"  4${ws}extended-remote localhost:$decimal${ws}Extended remote serial target in gdb-specific protocol${ws}\" \\\n-\t   \"\\\\* 5${ws}core${ws}Local core dump file${ws}\" \\\n-\t    ]\n-\n-    gdb_test \"info inferiors\" \\\n-\t[multi_line \\\n-\t     \"Num${ws}Description${ws}Connection${ws}Executable${ws}\" \\\n-\t     \"  1${ws}process ${decimal}${ws}1 \\\\(native\\\\)${ws}${binfile}${ws}\" \\\n-\t     \"  2${ws}process ${decimal}${ws}2 \\\\(extended-remote localhost:$decimal\\\\)${ws}${binfile}${ws}\" \\\n-\t     \"  3${ws}process ${decimal}${ws}3 \\\\(core\\\\)${ws}${binfile}${ws}\" \\\n-\t     \"  4${ws}process ${decimal}${ws}1 \\\\(native\\\\)${ws}${binfile}${ws}\" \\\n-\t     \"  5${ws}process ${decimal}${ws}4 \\\\(extended-remote localhost:$decimal\\\\)${ws}${binfile}${ws}\" \\\n-\t   \"\\\\* 6${ws}process ${decimal}${ws}5 \\\\(core\\\\)${ws}${binfile}${ws}\" \\\n-\t    ]\n-\n     # For debugging.\n     gdb_test \"info threads\" \".*\"\n \n@@ -365,6 +338,85 @@ proc test_ping_pong_next {} {\n     }\n }\n \n+# Test \"info inferiors\" and \"info connections\".  MULTI_PROCESS\n+# indicates whether the multi-process feature of remote targets is\n+# turned off or on.\n+proc test_info_inferiors {multi_process} {\n+    setup \"off\"\n+\n+    gdb_test_no_output \\\n+\t\"set remote multiprocess-feature-packet $multi_process\"\n+\n+    # Get the description for inferior INF for when the current\n+    # inferior id is CURRENT.\n+    proc inf_desc {inf current} {\n+\tset ws \"\\[ \\t\\]+\"\n+\tglobal decimal\n+\tupvar multi_process multi_process\n+\n+\tif {($multi_process == \"off\") && ($inf == 2 || $inf == 5)} {\n+\t    set desc \"Remote target\"\n+\t} else {\n+\t    set desc \"process ${decimal}\"\n+\t}\n+\n+\tset desc \"${inf}${ws}${desc}${ws}\"\n+\tif {$inf == $current} {\n+\t    return \"\\\\* $desc\"\n+\t} else {\n+\t    return \"  $desc\"\n+\t}\n+    }\n+\n+    # Get the \"Num\" column for CONNECTION for when the current\n+    # inferior id is CURRENT_INF.\n+    proc connection_num {connection current_inf} {\n+\tswitch $current_inf {\n+\t    \"4\" { set current_connection \"1\"}\n+\t    \"5\" { set current_connection \"4\"}\n+\t    \"6\" { set current_connection \"5\"}\n+\t    default { set current_connection $current_inf}\n+\t}\n+\tif {$connection == $current_connection} {\n+\t    return \"\\\\* $connection\"\n+\t} else {\n+\t    return \"  $connection\"\n+\t}\n+    }\n+\n+    set ws \"\\[ \\t\\]+\"\n+    global decimal binfile\n+\n+    # Test \"info connections\" and \"info inferior\" by switching to each\n+    # inferior one by one.\n+    for {set inf 1} {$inf <= 6} {incr inf} {\n+\twith_test_prefix \"inferior $inf\" {\n+\t    gdb_test \"inferior $inf\" \"Switching to inferior $inf.*\"\n+\n+\t    gdb_test \"info connections\" \\\n+\t\t[multi_line \\\n+\t\t     \"Num${ws}What${ws}Description${ws}\" \\\n+\t\t     \"[connection_num 1 $inf]${ws}native${ws}Native process${ws}\" \\\n+\t\t     \"[connection_num 2 $inf]${ws}extended-remote localhost:$decimal${ws}Extended remote serial target in gdb-specific protocol${ws}\" \\\n+\t\t     \"[connection_num 3 $inf]${ws}core${ws}Local core dump file${ws}\" \\\n+\t\t     \"[connection_num 4 $inf]${ws}extended-remote localhost:$decimal${ws}Extended remote serial target in gdb-specific protocol${ws}\" \\\n+\t\t     \"[connection_num 5 $inf]${ws}core${ws}Local core dump file${ws}\" \\\n+\t\t    ]\n+\n+\t    gdb_test \"info inferiors\" \\\n+\t\t[multi_line \\\n+\t\t     \"Num${ws}Description${ws}Connection${ws}Executable${ws}\" \\\n+\t\t     \"[inf_desc 1 $inf]1 \\\\(native\\\\)${ws}${binfile}${ws}\" \\\n+\t\t     \"[inf_desc 2 $inf]2 \\\\(extended-remote localhost:$decimal\\\\)${ws}${binfile}${ws}\" \\\n+\t\t     \"[inf_desc 3 $inf]3 \\\\(core\\\\)${ws}${binfile}${ws}\" \\\n+\t\t     \"[inf_desc 4 $inf]1 \\\\(native\\\\)${ws}${binfile}${ws}\" \\\n+\t\t     \"[inf_desc 5 $inf]4 \\\\(extended-remote localhost:$decimal\\\\)${ws}${binfile}${ws}\" \\\n+\t\t     \"[inf_desc 6 $inf]5 \\\\(core\\\\)${ws}${binfile}${ws}\" \\\n+\t\t    ]\n+\t}\n+    }\n+}\n+\n # Make a core file with two threads upfront.  Several tests load the\n # same core file.\n prepare_core\n@@ -385,3 +437,10 @@ with_test_prefix \"interrupt\" {\n with_test_prefix \"ping-pong\" {\n     test_ping_pong_next\n }\n+\n+# Test \"info inferiors\" and \"info connections\" commands.\n+with_test_prefix \"info-inferiors\" {\n+    foreach_with_prefix multi_process {\"on\" \"off\"} {\n+\ttest_info_inferiors $multi_process\n+    }\n+}"
    }
  ]
}