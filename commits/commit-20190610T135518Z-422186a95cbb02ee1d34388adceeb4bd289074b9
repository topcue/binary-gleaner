{
  "sha": "422186a95cbb02ee1d34388adceeb4bd289074b9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDIyMTg2YTk1Y2JiMDJlZTFkMzQzODhhZGNlZWI0YmQyODkwNzRiOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-06-03T14:07:29Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-06-10T13:55:18Z"
    },
    "message": "Remove newlines from warnings\n\nARI pointed out that a recent patch introduced a call to \"warning\"\nwith a string that ended in a newline:\n\n    https://sourceware.org/ml/gdb-patches/2019-06/msg00000.html\n\nThis is generally forbidden, I believe, because warning adds its own\nnewline.\n\nThis patch removes all of the trailing newlines I was able to find.  I\nsearched for 'warning (.*\\\\n\"' and then fixed the ones where the\nnewline appeared at the end of the string (some had internal\nnewlines).\n\nTested on x86-64 Fedora 29.\n\ngdb/ChangeLog\n2019-06-10  Tom Tromey  <tromey@adacore.com>\n\n\t* m32c-tdep.c (m32c_m16c_address_to_pointer): Don't end warning\n\twith a newline.\n\t* guile/guile.c (handle_boot_error): Don't end warning with a\n\tnewline.\n\t* cli/cli-cmds.c (exit_status_set_internal_vars): Don't end\n\twarning with a newline.\n\t* s12z-tdep.c (s12z_skip_prologue): Don't end warning with a\n\tnewline.\n\t(s12z_frame_cache): Likewise.\n\t* dwarf-index-cache.c (index_cache::store): Don't end warning with\n\ta newline.\n\t* solib-svr4.c (disable_probes_interface): Don't end warning with\n\ta newline.\n\t* nat/fork-inferior.c (fork_inferior): Don't end warning with a\n\tnewline.\n\t* python/python.c (do_finish_initialization): Don't end warning\n\twith a newline.\n\ngdb/gdbserver/ChangeLog\n2019-06-10  Tom Tromey  <tromey@adacore.com>\n\n\t* remote-utils.c (look_up_one_symbol, relocate_instruction): Don't\n\tend warning with a newline.\n\t* linux-s390-low.c (s390_get_wordsize): Don't end warning with a\n\tnewline.\n\t* thread-db.c (attach_thread): Don't end warning with a newline.\n\t(thread_db_notice_clone): Likewise.\n\t* tracepoint.c (gdb_agent_helper_thread): Don't end warning with a\n\tnewline.\n\t* linux-x86-low.c (x86_get_min_fast_tracepoint_insn_len): Don't\n\tend warning with a newline.",
    "tree": {
      "sha": "620dadf72a61c8e7ad41854048f23e8771012382",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/620dadf72a61c8e7ad41854048f23e8771012382"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/422186a95cbb02ee1d34388adceeb4bd289074b9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/422186a95cbb02ee1d34388adceeb4bd289074b9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/422186a95cbb02ee1d34388adceeb4bd289074b9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/422186a95cbb02ee1d34388adceeb4bd289074b9/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "58e07198f34c3a8bb7d64392e8b978a0d741244e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58e07198f34c3a8bb7d64392e8b978a0d741244e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/58e07198f34c3a8bb7d64392e8b978a0d741244e"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 52,
    "deletions": 19
  },
  "files": [
    {
      "sha": "59dde119b70b6cb5b8cd8d6130da293aea16113b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -1,3 +1,23 @@\n+2019-06-10  Tom Tromey  <tromey@adacore.com>\n+\n+\t* m32c-tdep.c (m32c_m16c_address_to_pointer): Don't end warning\n+\twith a newline.\n+\t* guile/guile.c (handle_boot_error): Don't end warning with a\n+\tnewline.\n+\t* cli/cli-cmds.c (exit_status_set_internal_vars): Don't end\n+\twarning with a newline.\n+\t* s12z-tdep.c (s12z_skip_prologue): Don't end warning with a\n+\tnewline.\n+\t(s12z_frame_cache): Likewise.\n+\t* dwarf-index-cache.c (index_cache::store): Don't end warning with\n+\ta newline.\n+\t* solib-svr4.c (disable_probes_interface): Don't end warning with\n+\ta newline.\n+\t* nat/fork-inferior.c (fork_inferior): Don't end warning with a\n+\tnewline.\n+\t* python/python.c (do_finish_initialization): Don't end warning\n+\twith a newline.\n+\n 2019-06-10  Tom Tromey  <tom@tromey.com>\n \n \t* python/py-breakpoint.c (gdbpy_breakpoint_created)"
    },
    {
      "sha": "5c44ba91287a1b79aa2d38d2b26bffab701231c5",
      "filename": "gdb/cli/cli-cmds.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/cli/cli-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/cli/cli-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-cmds.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -686,7 +686,7 @@ exit_status_set_internal_vars (int exit_status)\n   else if (WIFSIGNALED (exit_status))\n     set_internalvar_integer (var_signal, WTERMSIG (exit_status));\n   else\n-    warning (_(\"unexpected shell command exit status %d\\n\"), exit_status);\n+    warning (_(\"unexpected shell command exit status %d\"), exit_status);\n }\n \n static void"
    },
    {
      "sha": "7222f0528d7af82bd1d67ac763e2f42b4f9de92e",
      "filename": "gdb/dwarf-index-cache.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/dwarf-index-cache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/dwarf-index-cache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf-index-cache.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -115,7 +115,7 @@ index_cache::store (struct dwarf2_per_objfile *dwarf2_per_objfile)\n       /* Try to create the containing directory.  */\n       if (!mkdir_recursive (m_dir.c_str ()))\n \t{\n-\t  warning (_(\"index cache: could not make cache directory: %s\\n\"),\n+\t  warning (_(\"index cache: could not make cache directory: %s\"),\n \t\t   safe_strerror (errno));\n \t  return;\n \t}"
    },
    {
      "sha": "7a7895620eb7bc8e83bd1dcaa929ef3f903f9d51",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -1,3 +1,16 @@\n+2019-06-10  Tom Tromey  <tromey@adacore.com>\n+\n+\t* remote-utils.c (look_up_one_symbol, relocate_instruction): Don't\n+\tend warning with a newline.\n+\t* linux-s390-low.c (s390_get_wordsize): Don't end warning with a\n+\tnewline.\n+\t* thread-db.c (attach_thread): Don't end warning with a newline.\n+\t(thread_db_notice_clone): Likewise.\n+\t* tracepoint.c (gdb_agent_helper_thread): Don't end warning with a\n+\tnewline.\n+\t* linux-x86-low.c (x86_get_min_fast_tracepoint_insn_len): Don't\n+\tend warning with a newline.\n+\n 2019-06-04  Pedro Alves  <palves@redhat.com>\n \n \t* server.c (captured_main): Use make_unique_xstrdup."
    },
    {
      "sha": "b23e3b1af6f14c0a8cf6f474348f91ba85521286",
      "filename": "gdb/gdbserver/linux-s390-low.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/gdbserver/linux-s390-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/gdbserver/linux-s390-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-s390-low.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -479,7 +479,7 @@ s390_get_wordsize (int pid)\n \t\t\t\t  (PTRACE_TYPE_ARG4) 0);\n   if (errno != 0)\n     {\n-      warning (_(\"Couldn't determine word size, assuming 64-bit.\\n\"));\n+      warning (_(\"Couldn't determine word size, assuming 64-bit.\"));\n       return 8;\n     }\n   /* Derive word size from extended addressing mode (PSW bit 31).  */"
    },
    {
      "sha": "e84e7a1793cc2660fcf3969ab784996b4fa93901",
      "filename": "gdb/gdbserver/linux-x86-low.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/gdbserver/linux-x86-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/gdbserver/linux-x86-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-x86-low.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -1481,7 +1481,7 @@ x86_get_min_fast_tracepoint_insn_len (void)\n \t     mention that something has gone awry.  */\n \t  if (!warned_about_fast_tracepoints)\n \t    {\n-\t      warning (\"4-byte fast tracepoints not available; %s\\n\", errbuf);\n+\t      warning (\"4-byte fast tracepoints not available; %s\", errbuf);\n \t      warned_about_fast_tracepoints = 1;\n \t    }\n \t  return 5;"
    },
    {
      "sha": "7c495beb7cd9a6f6704c51190b5903a21606f652",
      "filename": "gdb/gdbserver/remote-utils.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/gdbserver/remote-utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/gdbserver/remote-utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/remote-utils.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -1558,7 +1558,7 @@ look_up_one_symbol (const char *name, CORE_ADDR *addrp, int may_ask_gdb)\n \n   if (!startswith (cs.own_buf, \"qSymbol:\"))\n     {\n-      warning (\"Malformed response to qSymbol, ignoring: %s\\n\", cs.own_buf);\n+      warning (\"Malformed response to qSymbol, ignoring: %s\", cs.own_buf);\n       return -1;\n     }\n \n@@ -1659,14 +1659,14 @@ relocate_instruction (CORE_ADDR *to, CORE_ADDR oldloc)\n \n   if (cs.own_buf[0] == 'E')\n     {\n-      warning (\"An error occurred while relocating an instruction: %s\\n\",\n+      warning (\"An error occurred while relocating an instruction: %s\",\n \t       cs.own_buf);\n       return -1;\n     }\n \n   if (!startswith (cs.own_buf, \"qRelocInsn:\"))\n     {\n-      warning (\"Malformed response to qRelocInsn, ignoring: %s\\n\",\n+      warning (\"Malformed response to qRelocInsn, ignoring: %s\",\n \t       cs.own_buf);\n       return -1;\n     }"
    },
    {
      "sha": "387f22f487e9e85ce57ac8a5747e333ffd780062",
      "filename": "gdb/gdbserver/thread-db.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/gdbserver/thread-db.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/gdbserver/thread-db.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/thread-db.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -227,7 +227,7 @@ attach_thread (const td_thrhandle_t *th_p, td_thrinfo_t *ti_p)\n     {\n       std::string reason = linux_ptrace_attach_fail_reason_string (ptid, err);\n \n-      warning (\"Could not attach to thread %ld (LWP %d): %s\\n\",\n+      warning (\"Could not attach to thread %ld (LWP %d): %s\",\n \t       (unsigned long) ti_p->ti_tid, ti_p->ti_lid, reason.c_str ());\n \n       return 0;\n@@ -907,5 +907,5 @@ thread_db_notice_clone (struct thread_info *parent_thr, ptid_t child_ptid)\n     = make_scoped_restore (&current_thread, parent_thr);\n \n   if (!find_one_thread (child_ptid))\n-    warning (\"Cannot find thread after clone.\\n\");\n+    warning (\"Cannot find thread after clone.\");\n }"
    },
    {
      "sha": "98d28e9bb281ab77b4a842ca2f73be1eb1aae46a",
      "filename": "gdb/gdbserver/tracepoint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/gdbserver/tracepoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/gdbserver/tracepoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/tracepoint.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -7194,7 +7194,7 @@ gdb_agent_helper_thread (void *arg)\n \n       if (listen_fd == -1)\n \t{\n-\t  warning (\"could not create sync socket\\n\");\n+\t  warning (\"could not create sync socket\");\n \t  break;\n \t}\n \n@@ -7218,7 +7218,7 @@ gdb_agent_helper_thread (void *arg)\n \n \t  if (fd < 0)\n \t    {\n-\t      warning (\"Accept returned %d, error: %s\\n\",\n+\t      warning (\"Accept returned %d, error: %s\",\n \t\t       fd, strerror (errno));\n \t      break;\n \t    }"
    },
    {
      "sha": "a426c3c640b01de25dad10545651977ccf002017",
      "filename": "gdb/guile/guile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/guile/guile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/guile/guile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/guile.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -568,7 +568,7 @@ handle_boot_error (void *boot_scm_file, SCM key, SCM args)\n   warning (_(\"Could not complete Guile gdb module initialization from:\\n\"\n \t     \"%s.\\n\"\n \t     \"Limited Guile support is available.\\n\"\n-\t     \"Suggest passing --data-directory=/path/to/gdb/data-directory.\\n\"),\n+\t     \"Suggest passing --data-directory=/path/to/gdb/data-directory.\"),\n \t   (const char *) boot_scm_file);\n \n   return SCM_UNSPECIFIED;"
    },
    {
      "sha": "657c6b7930f3018ac5274e2388d1032e6d343ecb",
      "filename": "gdb/m32c-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/m32c-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/m32c-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m32c-tdep.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -2452,7 +2452,7 @@ m32c_m16c_address_to_pointer (struct gdbarch *gdbarch,\n \t\t   \"couldn't find trampoline named '%s.plt'.\\n\"\n \t\t   \"Returning pointer value %s instead; this may produce\\n\"\n \t\t   \"a useful result if converted back into an address by GDB,\\n\"\n-\t\t   \"but will most likely not be useful otherwise.\\n\"),\n+\t\t   \"but will most likely not be useful otherwise.\"),\n \t\t   paddress (gdbarch, addr), func_name,\n \t\t   paddress (gdbarch, ptrval));\n "
    },
    {
      "sha": "1179d01c04fafc5e4ce9ca7c78badfc0f2ec7ad0",
      "filename": "gdb/nat/fork-inferior.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/nat/fork-inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/nat/fork-inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/fork-inferior.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -425,7 +425,7 @@ fork_inferior (const char *exec_file_arg, const std::string &allargs,\n       for (i = 1; argv[i] != NULL; i++)\n \twarning (\" %s\", argv[i]);\n \n-      warning (\"Error: %s\\n\", safe_strerror (save_errno));\n+      warning (\"Error: %s\", safe_strerror (save_errno));\n \n       _exit (0177);\n     }"
    },
    {
      "sha": "98b9467c6eb2d3451c56001a3dcefe3818efc862",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -1876,7 +1876,7 @@ do_finish_initialization (const struct extension_language_defn *extlang)\n       warning (_(\"\\n\"\n \t\t \"Could not load the Python gdb module from `%s'.\\n\"\n \t\t \"Limited Python support is available from the _gdb module.\\n\"\n-\t\t \"Suggest passing --data-directory=/path/to/gdb/data-directory.\\n\"),\n+\t\t \"Suggest passing --data-directory=/path/to/gdb/data-directory.\"),\n \t       gdb_pythondir.c_str ());\n       /* We return \"success\" here as we've already emitted the\n \t warning.  */"
    },
    {
      "sha": "fa27b58e56efd0eef76e78bd893e91e3dafbb268",
      "filename": "gdb/s12z-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/s12z-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/s12z-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/s12z-tdep.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -90,8 +90,8 @@ s12z_skip_prologue (struct gdbarch *gdbarch, CORE_ADDR pc)\n         return prologue_end;\n     }\n \n-  warning (_(\"%s Failed to find end of prologue PC = %08x\\n\"),\n-                      __FUNCTION__, (unsigned int) pc);\n+  warning (_(\"%s Failed to find end of prologue PC = %08x\"),\n+\t   __FUNCTION__, (unsigned int) pc);\n \n   return pc;\n }\n@@ -296,7 +296,7 @@ s12z_frame_cache (struct frame_info *this_frame, void **prologue_cache)\n   /* Return early if GDB couldn't find the function.  */\n   if (start_addr == 0)\n     {\n-      warning (_(\"Couldn't find function including address %s SP is %s\\n\"),\n+      warning (_(\"Couldn't find function including address %s SP is %s\"),\n                paddress (gdbarch, this_pc),\n                paddress (gdbarch, this_sp));\n "
    },
    {
      "sha": "8cd5b7d8e7031fd13ea913ac232853b8eef2e2e4",
      "filename": "gdb/solib-svr4.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/solib-svr4.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/422186a95cbb02ee1d34388adceeb4bd289074b9/gdb/solib-svr4.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib-svr4.c?ref=422186a95cbb02ee1d34388adceeb4bd289074b9",
      "patch": "@@ -1858,7 +1858,7 @@ static void\n disable_probes_interface (svr4_info *info)\n {\n   warning (_(\"Probes-based dynamic linker interface failed.\\n\"\n-\t     \"Reverting to original interface.\\n\"));\n+\t     \"Reverting to original interface.\"));\n \n   free_probes_table (info);\n   free_solib_list (info);"
    }
  ]
}