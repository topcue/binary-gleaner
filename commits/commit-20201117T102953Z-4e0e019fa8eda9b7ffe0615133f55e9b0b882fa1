{
  "sha": "4e0e019fa8eda9b7ffe0615133f55e9b0b882fa1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGUwZTAxOWZhOGVkYTliN2ZmZTA2MTUxMzNmNTVlOWIwYjg4MmZhMQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-11-17T04:43:37Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-11-17T10:29:53Z"
    },
    "message": "[GOLD] powerpc incremental-dump assertion failure\n\nincremental-dump wants to instantiate Target_powerpc without options\nbeing set up.  This patch fixes\n  internal error in options, at gold/parameters.h:92\n\n\t* powerpc.cc (Target_powerpc::no_tprel_opt_): Rename from tprel_opt_.\n\tInit to false.\n\t(Target_powerpc::tprel_opt): Test parameters->options().tls_optimize().\n\t(Target_powerpc::set_tprel_opt): Delete.\n\t(Target_powerpc::set_no_tprel_opt): New function.  Update all uses\n\tof set_tprel_opt.",
    "tree": {
      "sha": "fc4e8c4ea667e696c8b9630c354ab2b284529be5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fc4e8c4ea667e696c8b9630c354ab2b284529be5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4e0e019fa8eda9b7ffe0615133f55e9b0b882fa1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4e0e019fa8eda9b7ffe0615133f55e9b0b882fa1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4e0e019fa8eda9b7ffe0615133f55e9b0b882fa1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4e0e019fa8eda9b7ffe0615133f55e9b0b882fa1/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f1e05b19786669d29d59f48f26bc06ad67c221e2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f1e05b19786669d29d59f48f26bc06ad67c221e2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f1e05b19786669d29d59f48f26bc06ad67c221e2"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 18,
    "deletions": 10
  },
  "files": [
    {
      "sha": "4739ed5cd591bdd7a387025e38a1e121812bfdf3",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4e0e019fa8eda9b7ffe0615133f55e9b0b882fa1/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4e0e019fa8eda9b7ffe0615133f55e9b0b882fa1/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=4e0e019fa8eda9b7ffe0615133f55e9b0b882fa1",
      "patch": "@@ -1,3 +1,12 @@\n+2020-11-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::no_tprel_opt_): Rename from tprel_opt_.\n+\tInit to false.\n+\t(Target_powerpc::tprel_opt): Test parameters->options().tls_optimize().\n+\t(Target_powerpc::set_tprel_opt): Delete.\n+\t(Target_powerpc::set_no_tprel_opt): New function.  Update all uses\n+\tof set_tprel_opt.\n+\n 2020-11-16  Michael Hudson-Doyle  <michael.hudson@canonical.com>\n \n \tPR 26902"
    },
    {
      "sha": "25b7dbd355629f83324e31b716721bf19d594352",
      "filename": "gold/powerpc.cc",
      "status": "modified",
      "additions": 9,
      "deletions": 10,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4e0e019fa8eda9b7ffe0615133f55e9b0b882fa1/gold/powerpc.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4e0e019fa8eda9b7ffe0615133f55e9b0b882fa1/gold/powerpc.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/powerpc.cc?ref=4e0e019fa8eda9b7ffe0615133f55e9b0b882fa1",
      "patch": "@@ -649,8 +649,7 @@ class Target_powerpc : public Sized_target<size, big_endian>\n       stub_tables_(), branch_lookup_table_(), branch_info_(), tocsave_loc_(),\n       power10_relocs_(false), plt_thread_safe_(false), plt_localentry0_(false),\n       plt_localentry0_init_(false), has_localentry0_(false),\n-      has_tls_get_addr_opt_(false),\n-      tprel_opt_(parameters->options().tls_optimize()),\n+      has_tls_get_addr_opt_(false), no_tprel_opt_(false),\n       relax_failed_(false), relax_fail_count_(0),\n       stub_group_size_(0), savres_section_(0),\n       tls_get_addr_(NULL), tls_get_addr_opt_(NULL),\n@@ -1154,11 +1153,11 @@ class Target_powerpc : public Sized_target<size, big_endian>\n \n   bool\n   tprel_opt() const\n-  { return this->tprel_opt_; }\n+  { return !this->no_tprel_opt_ && parameters->options().tls_optimize(); }\n \n   void\n-  set_tprel_opt(bool val)\n-  { this->tprel_opt_ = val; }\n+  set_no_tprel_opt()\n+  { this->no_tprel_opt_ = true; }\n \n   // Remember any symbols seen with non-zero localentry, even those\n   // not providing a definition\n@@ -1717,7 +1716,7 @@ class Target_powerpc : public Sized_target<size, big_endian>\n   bool plt_localentry0_init_;\n   bool has_localentry0_;\n   bool has_tls_get_addr_opt_;\n-  bool tprel_opt_;\n+  bool no_tprel_opt_;\n \n   bool relax_failed_;\n   int relax_fail_count_;\n@@ -8471,7 +8470,7 @@ Target_powerpc<size, big_endian>::Scan::local(\n \t      uint32_t insn = elfcpp::Swap<32, big_endian>::readval(view + off);\n \t      if ((insn & ((0x3fu << 26) | 0x1f << 16))\n \t\t  != ((15u << 26) | ((size == 32 ? 2 : 13) << 16)))\n-\t\ttarget->set_tprel_opt(false);\n+\t\ttarget->set_no_tprel_opt();\n \t    }\n \t}\n       break;\n@@ -8486,7 +8485,7 @@ Target_powerpc<size, big_endian>::Scan::local(\n \tbreak;\n       // Fall through.\n     case elfcpp::R_POWERPC_TPREL16_HI:\n-      target->set_tprel_opt(false);\n+      target->set_no_tprel_opt();\n       break;\n     default:\n       break;\n@@ -9268,7 +9267,7 @@ Target_powerpc<size, big_endian>::Scan::global(\n \t      uint32_t insn = elfcpp::Swap<32, big_endian>::readval(view + off);\n \t      if ((insn & ((0x3fu << 26) | 0x1f << 16))\n \t\t  != ((15u << 26) | ((size == 32 ? 2 : 13) << 16)))\n-\t\ttarget->set_tprel_opt(false);\n+\t\ttarget->set_no_tprel_opt();\n \t    }\n \t}\n       break;\n@@ -9283,7 +9282,7 @@ Target_powerpc<size, big_endian>::Scan::global(\n \tbreak;\n       // Fall through.\n     case elfcpp::R_POWERPC_TPREL16_HI:\n-      target->set_tprel_opt(false);\n+      target->set_no_tprel_opt();\n       break;\n     default:\n       break;"
    }
  ]
}