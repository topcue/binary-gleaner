{
  "sha": "ab313b35e505ccab9c23acbe82087b6c22a2088d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWIzMTNiMzVlNTA1Y2NhYjljMjNhY2JlODIwODdiNmMyMmEyMDg4ZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T21:56:24Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:37Z"
    },
    "message": "Use new and delete for tui_gen_win_info\n\nThis changes tui_gen_win_info to be allocated with new and destroyed\nwith delete.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-layout.c (init_and_make_win): Use new.\n\t* tui/tui-data.h (struct tui_gen_win_info): Add constructor,\n\tdestructor, initializers.\n\t(tui_alloc_generic_win_info): Don't declare.\n\t* tui/tui-data.c (_locator): Add argument to constructor.\n\t(source_win, disasm_win): New globals.\n\t(exec_info): Remove.\n\t(tui_source_exec_info_win_ptr, tui_disassem_exec_info_win_ptr):\n\tUpdate.\n\t(tui_alloc_generic_win_info): Remove.\n\t(init_content_element): Use new.\n\t(tui_win_info::tui_win_info): Update.\n\t(free_content_elements) <case DATA_WIN>: Use delete.",
    "tree": {
      "sha": "4502487ef785af2ee0237c9e685717202f8df23b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4502487ef785af2ee0237c9e685717202f8df23b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ab313b35e505ccab9c23acbe82087b6c22a2088d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab313b35e505ccab9c23acbe82087b6c22a2088d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ab313b35e505ccab9c23acbe82087b6c22a2088d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab313b35e505ccab9c23acbe82087b6c22a2088d/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dc2c33e4562e0af441a9c8acff0400a78cb45d98",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc2c33e4562e0af441a9c8acff0400a78cb45d98",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dc2c33e4562e0af441a9c8acff0400a78cb45d98"
    }
  ],
  "stats": {
    "total": 93,
    "additions": 58,
    "deletions": 35
  },
  "files": [
    {
      "sha": "79a018aa7ef11e6f44bad20ba16536a8300e2cc7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab313b35e505ccab9c23acbe82087b6c22a2088d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab313b35e505ccab9c23acbe82087b6c22a2088d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ab313b35e505ccab9c23acbe82087b6c22a2088d",
      "patch": "@@ -1,3 +1,19 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-layout.c (init_and_make_win): Use new.\n+\t* tui/tui-data.h (struct tui_gen_win_info): Add constructor,\n+\tdestructor, initializers.\n+\t(tui_alloc_generic_win_info): Don't declare.\n+\t* tui/tui-data.c (_locator): Add argument to constructor.\n+\t(source_win, disasm_win): New globals.\n+\t(exec_info): Remove.\n+\t(tui_source_exec_info_win_ptr, tui_disassem_exec_info_win_ptr):\n+\tUpdate.\n+\t(tui_alloc_generic_win_info): Remove.\n+\t(init_content_element): Use new.\n+\t(tui_win_info::tui_win_info): Update.\n+\t(free_content_elements) <case DATA_WIN>: Use delete.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-wingeneral.c (tui_refresh_win): Update."
    },
    {
      "sha": "86e347f6a00018510b438cc35d72d7709e11856a",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 8,
      "deletions": 21,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab313b35e505ccab9c23acbe82087b6c22a2088d/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab313b35e505ccab9c23acbe82087b6c22a2088d/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=ab313b35e505ccab9c23acbe82087b6c22a2088d",
      "patch": "@@ -36,8 +36,9 @@ struct tui_win_info *tui_win_list[MAX_MAJOR_WINDOWS];\n ****************************/\n static enum tui_layout_type current_layout = UNDEFINED_LAYOUT;\n static int term_height, term_width;\n-static struct tui_gen_win_info _locator;\n-static struct tui_gen_win_info exec_info[2];\n+static struct tui_gen_win_info _locator (LOCATOR_WIN);\n+static struct tui_gen_win_info source_win (EXEC_INFO_WIN);\n+static struct tui_gen_win_info disasm_win (EXEC_INFO_WIN);\n static std::vector<tui_source_window_base *> source_windows;\n static struct tui_win_info *win_with_focus = NULL;\n static struct tui_layout_def layout_def = {\n@@ -188,15 +189,15 @@ tui_data_window::clear_detail ()\n struct tui_gen_win_info *\n tui_source_exec_info_win_ptr (void)\n {\n-  return &exec_info[0];\n+  return &source_win;\n }\n \n \n /* Accessor for the disassem execution info ptr.  */\n struct tui_gen_win_info *\n tui_disassem_exec_info_win_ptr (void)\n {\n-  return &exec_info[1];\n+  return &disasm_win;\n }\n \n \n@@ -389,17 +390,6 @@ tui_initialize_static_data (void)\n }\n \n \n-struct tui_gen_win_info *\n-tui_alloc_generic_win_info (void)\n-{\n-  struct tui_gen_win_info *win = XNEW (struct tui_gen_win_info);\n-\n-  tui_init_generic_part (win);\n-\n-  return win;\n-}\n-\n-\n void\n tui_init_generic_part (struct tui_gen_win_info *win)\n {\n@@ -435,9 +425,7 @@ init_content_element (struct tui_win_element *element,\n       element->which_element.source.has_break = FALSE;\n       break;\n     case DATA_WIN:\n-      element->which_element.data_window = XNEW (struct tui_gen_win_info);\n-      tui_init_generic_part (element->which_element.data_window);\n-      element->which_element.data_window->type = DATA_ITEM_WIN;\n+      element->which_element.data_window = new struct tui_gen_win_info (DATA_ITEM_WIN);\n       element->which_element.data_window->content =\n \ttui_alloc_content (1, DATA_ITEM_WIN);\n       element->which_element.data_window->content_size = 1;\n@@ -469,9 +457,8 @@ init_content_element (struct tui_win_element *element,\n }\n \n tui_win_info::tui_win_info (enum tui_win_type type)\n+  : generic (type)\n {\n-  generic.type = type;\n-  tui_init_generic_part (&generic);\n }\n \n tui_source_window_base::tui_source_window_base (enum tui_win_type type)\n@@ -711,7 +698,7 @@ free_content_elements (tui_win_content content,\n \t\t      xfree (element->which_element.source.line);\n \t\t      break;\n \t\t    case DATA_WIN:\n-\t\t      xfree (element->which_element.data_window);\n+\t\t      delete element->which_element.data_window;\n \t\t      xfree (element);\n \t\t      break;\n \t\t    case DATA_ITEM_WIN:"
    },
    {
      "sha": "f6aabaaa90aebd8730698b9706d4ae3b60312833",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 33,
      "deletions": 13,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab313b35e505ccab9c23acbe82087b6c22a2088d/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab313b35e505ccab9c23acbe82087b6c22a2088d/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=ab313b35e505ccab9c23acbe82087b6c22a2088d",
      "patch": "@@ -39,18 +39,39 @@ typedef struct tui_win_element **tui_win_content;\n /* Generic window information.  */\n struct tui_gen_win_info\n {\n-  WINDOW *handle;\t    /* Window handle.  */\n-  enum tui_win_type type;   /* Type of window.  */\n-  int width;\t\t    /* Window width.  */\n-  int height;\t\t    /* Window height.  */\n-  struct tui_point origin;  /* Origin of window.  */\n-  tui_win_content content;  /* Content of window.  */\n-  int content_size;\t    /* Size of content (# of elements).  */\n-  int content_in_use;\t    /* Can it be used, or is it already used?  */\n-  int viewport_height;\t    /* Viewport height.  */\n-  int last_visible_line;    /* Index of last visible line.  */\n-  bool is_visible;\t    /* Whether the window is visible or not.  */\n-  char *title;              /* Window title to display.  */\n+  explicit tui_gen_win_info (enum tui_win_type t)\n+    : type (t)\n+  {\n+  }\n+\n+  ~tui_gen_win_info ()\n+  {\n+  }\n+\n+  /* Window handle.  */\n+  WINDOW *handle = nullptr;\n+  /* Type of window.  */\n+  enum tui_win_type type;\n+  /* Window width.  */\n+  int width = 0;\n+  /* Window height.  */\n+  int height = 0;\n+  /* Origin of window.  */\n+  struct tui_point origin = {0, 0};\n+  /* Content of window.  */\n+  tui_win_content content = nullptr;\n+  /* Size of content (# of elements).  */\n+  int content_size = 0;\n+  /* Can it be used, or is it already used?  */\n+  int content_in_use = FALSE;\n+  /* Viewport height.  */\n+  int viewport_height = 0;\n+  /* Index of last visible line.  */\n+  int last_visible_line = 0;\n+  /* Whether the window is visible or not.  */\n+  bool is_visible = false;\n+  /* Window title to display.  */\n+  char *title = nullptr;\n };\n \n /* Constant definitions.  */\n@@ -465,7 +486,6 @@ extern struct tui_win_info *tui_win_list[MAX_MAJOR_WINDOWS];\n \n /* Data Manipulation Functions.  */\n extern void tui_initialize_static_data (void);\n-extern struct tui_gen_win_info *tui_alloc_generic_win_info (void);\n extern struct tui_win_info *tui_alloc_win_info (enum tui_win_type);\n extern void tui_init_generic_part (struct tui_gen_win_info *);\n extern tui_win_content tui_alloc_content (int, enum tui_win_type);"
    },
    {
      "sha": "556bef833a3a71942ac1c3e6cd1b2bad42c20ff1",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab313b35e505ccab9c23acbe82087b6c22a2088d/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab313b35e505ccab9c23acbe82087b6c22a2088d/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=ab313b35e505ccab9c23acbe82087b6c22a2088d",
      "patch": "@@ -822,7 +822,7 @@ init_and_make_win (void *opaque_win_info,\n   if (opaque_win_info == NULL)\n     {\n       if (tui_win_is_auxillary (win_type))\n-\topaque_win_info = (void *) tui_alloc_generic_win_info ();\n+\topaque_win_info = (void *) new tui_gen_win_info (win_type);\n       else\n \topaque_win_info = (void *) tui_alloc_win_info (win_type);\n     }"
    }
  ]
}