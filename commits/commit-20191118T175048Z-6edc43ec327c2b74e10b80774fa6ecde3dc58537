{
  "sha": "6edc43ec327c2b74e10b80774fa6ecde3dc58537",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmVkYzQzZWMzMjdjMmI3NGUxMGI4MDc3NGZhNmVjZGUzZGM1ODUzNw==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-11-18T01:13:49Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-11-18T17:50:48Z"
    },
    "message": "Don't use class-initialization for the owner union\n\nAs reported by PhilippeW, valgrind reports that symtab is uninitialized\nwhen compiling with GCC 4.8.5, which is the default compiler on CentOS 7.\n\nThis is apparently a compiler bug fixed in later versions, but to keep\nCentOS 7 working, this patch initializes the union explicitly instead of\nusing a class initializer.\n\ngdb/ChangeLog:\n\n2019-11-18  Christian Biesinger  <cbiesinger@google.com>\n\n\t* symtab.h (struct symbol) <owner>: Initialize explicitly in the\n\tconstructor instead of using a class initializer.\n\nChange-Id: I94f48afeae5d29cf81a280295e2d02e2d7e1c1f1",
    "tree": {
      "sha": "04abfa22825a8a2df8aed52d2d302fd5d6a22105",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/04abfa22825a8a2df8aed52d2d302fd5d6a22105"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6edc43ec327c2b74e10b80774fa6ecde3dc58537",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6edc43ec327c2b74e10b80774fa6ecde3dc58537",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6edc43ec327c2b74e10b80774fa6ecde3dc58537",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6edc43ec327c2b74e10b80774fa6ecde3dc58537/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ed7e9d0bdaa0cbeb157e427c262e692a993e4432",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ed7e9d0bdaa0cbeb157e427c262e692a993e4432",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ed7e9d0bdaa0cbeb157e427c262e692a993e4432"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 9,
    "deletions": 1
  },
  "files": [
    {
      "sha": "0e17d7c39d86b0fe8f6a1ed9d8753e4d18fc9643",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6edc43ec327c2b74e10b80774fa6ecde3dc58537/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6edc43ec327c2b74e10b80774fa6ecde3dc58537/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6edc43ec327c2b74e10b80774fa6ecde3dc58537",
      "patch": "@@ -1,3 +1,8 @@\n+2019-11-18  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* symtab.h (struct symbol) <owner>: Initialize explicitly in the\n+\tconstructor instead of using a class initializer.\n+\n 2019-11-15  Christian Biesinger  <cbiesinger@google.com>\n \n \t* Makefile.in: Replace {posix,mingw}-strerror.c with safe-strerror.c."
    },
    {
      "sha": "1e82182df793d77a0ca7e30385ce5c73a4681d47",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6edc43ec327c2b74e10b80774fa6ecde3dc58537/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6edc43ec327c2b74e10b80774fa6ecde3dc58537/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=6edc43ec327c2b74e10b80774fa6ecde3dc58537",
      "patch": "@@ -1113,6 +1113,9 @@ struct symbol : public general_symbol_info, public allocate_on_obstack\n       language = language_unknown;\n       ada_mangled = 0;\n       section = 0;\n+      /* GCC 4.8.5 (on CentOS 7) does not correctly compile class-\n+         initialization of unions, so we initialize it manually here.  */\n+      owner.symtab = nullptr;\n     }\n \n   /* Data type of value */\n@@ -1127,7 +1130,7 @@ struct symbol : public general_symbol_info, public allocate_on_obstack\n     /* The symbol table containing this symbol.  This is the file associated\n        with LINE.  It can be NULL during symbols read-in but it is never NULL\n        during normal operation.  */\n-    struct symtab *symtab = nullptr;\n+    struct symtab *symtab;\n \n     /* For types defined by the architecture.  */\n     struct gdbarch *arch;"
    }
  ]
}