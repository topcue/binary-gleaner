{
  "sha": "413b49c2b6619a7ce16322c7f94079205031cda4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDEzYjQ5YzJiNjYxOWE3Y2UxNjMyMmM3Zjk0MDc5MjA1MDMxY2RhNA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-17T18:00:48Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-17T18:00:48Z"
    },
    "message": "gdb: move cmd_list_element::prefixname to cli/cli-decode.c\n\nI don't think this method really benefits from being implemented in the\nheader file, especially because it's recursive, it can't be inlined.\nMove it to the source file, so it's no re-compiled by every CU\nincluding cli/cli-decode.h.\n\nI also noticed this method could be const, make it so.\n\ngdb/ChangeLog:\n\n\t* cli/cli-decode.h (prefixname): Make const, move implementation\n\tto cli/cli-decode.c.\n\t* cli/cli-decode.c (cmd_list_element::prefixname): New.\n\nChange-Id: I1597cace98d9a4ba71f51f1f495e73cc07b5dcf3",
    "tree": {
      "sha": "0784421d737876d900e539b9b5e3acca4f77b933",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0784421d737876d900e539b9b5e3acca4f77b933"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/413b49c2b6619a7ce16322c7f94079205031cda4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/413b49c2b6619a7ce16322c7f94079205031cda4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/413b49c2b6619a7ce16322c7f94079205031cda4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/413b49c2b6619a7ce16322c7f94079205031cda4/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e683cb412046b40085505f42dd141f542661a6ae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e683cb412046b40085505f42dd141f542661a6ae",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e683cb412046b40085505f42dd141f542661a6ae"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 25,
    "deletions": 14
  },
  "files": [
    {
      "sha": "c9f5181a7e1a9285b52df2cedffa5355c349b23d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/413b49c2b6619a7ce16322c7f94079205031cda4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/413b49c2b6619a7ce16322c7f94079205031cda4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=413b49c2b6619a7ce16322c7f94079205031cda4",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-17  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* cli/cli-decode.h (prefixname): Make const, move implementation\n+\tto cli/cli-decode.c.\n+\t* cli/cli-decode.c (cmd_list_element::prefixname): New.\n+\n 2021-05-16  Weimin Pan  <weimin.pan@oracle.com>\n \n \t* ctfread.c (new_symbol): Set function address."
    },
    {
      "sha": "a3b153f06e4877b2fe38be1e2ddab05b423e8474",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/413b49c2b6619a7ce16322c7f94079205031cda4/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/413b49c2b6619a7ce16322c7f94079205031cda4/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=413b49c2b6619a7ce16322c7f94079205031cda4",
      "patch": "@@ -160,6 +160,23 @@ set_cmd_completer_handle_brkchars (struct cmd_list_element *cmd,\n   cmd->completer_handle_brkchars = func;\n }\n \n+std::string\n+cmd_list_element::prefixname () const\n+{\n+  if (this->prefixlist == nullptr)\n+    /* Not a prefix command.  */\n+    return \"\";\n+\n+  std::string prefixname;\n+  if (this->prefix != nullptr)\n+    prefixname = this->prefix->prefixname ();\n+\n+  prefixname += this->name;\n+  prefixname += \" \";\n+\n+  return prefixname;\n+}\n+\n /* Add element named NAME.\n    Space for NAME and DOC must be allocated by the caller.\n    CLASS is the top level category into which commands are broken down"
    },
    {
      "sha": "e6d6f32cbfa923b27fc39a480567db32f148b9e2",
      "filename": "gdb/cli/cli-decode.h",
      "status": "modified",
      "additions": 2,
      "deletions": 14,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/413b49c2b6619a7ce16322c7f94079205031cda4/gdb/cli/cli-decode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/413b49c2b6619a7ce16322c7f94079205031cda4/gdb/cli/cli-decode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.h?ref=413b49c2b6619a7ce16322c7f94079205031cda4",
      "patch": "@@ -76,20 +76,8 @@ struct cmd_list_element\n      space.  It is used before the word \"command\" in describing the\n      commands reached through this prefix.\n \n-     For non-prefix commands, an empty string is returned.  */\n-  std::string prefixname ()\n-  {\n-    if (prefixlist == nullptr)\n-      /* Not a prefix command.  */\n-      return \"\";\n-\n-    std::string prefixname;\n-    if (prefix != nullptr)\n-      prefixname = prefix->prefixname ();\n-    prefixname += name;\n-    prefixname += \" \";\n-    return prefixname;\n-  }\n+     For non-prefix commands, return an empty string.  */\n+  std::string prefixname () const;\n \n   /* Points to next command in this list.  */\n   struct cmd_list_element *next = nullptr;"
    }
  ]
}