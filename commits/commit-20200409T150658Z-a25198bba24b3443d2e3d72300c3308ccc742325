{
  "sha": "a25198bba24b3443d2e3d72300c3308ccc742325",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTI1MTk4YmJhMjRiMzQ0M2QyZTNkNzIzMDBjMzMwOGNjYzc0MjMyNQ==",
  "commit": {
    "author": {
      "name": "Bernd Edlinger",
      "email": "bernd.edlinger@hotmail.de",
      "date": "2020-04-09T01:18:23Z"
    },
    "committer": {
      "name": "Bernd Edlinger",
      "email": "bernd.edlinger@hotmail.de",
      "date": "2020-04-09T15:06:58Z"
    },
    "message": "Partially revert my UB fix in record_line\n\nThis reverts the following commit partially:\n\ncommit 64dc2d4bd24ff7119c913fff91184414f09b8042\nAuthor: Bernd Edlinger <bernd.edlinger@hotmail.de>\nDate:   Thu Mar 12 11:52:34 2020 +0100\n\n    Fix an undefined behavior in record_line\n\n    Additionally do not completely remove symbols\n    at the same PC than the end marker, instead\n    make them non-is-stmt breakpoints.\n\nWe keep the undefined behavoir fix,\nbut have to restore the original behavior\nregarding deletion of the line entries.\n\n2020-04-09  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n\trevert partially:\n\t2020-04-01  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * buildsym.c (record_line): Fix undefined behavior and preserve\n        lines at eof.",
    "tree": {
      "sha": "6d9c12e9a2fea6098b4badd8fba1c37d05bd15ae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6d9c12e9a2fea6098b4badd8fba1c37d05bd15ae"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a25198bba24b3443d2e3d72300c3308ccc742325",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a25198bba24b3443d2e3d72300c3308ccc742325",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a25198bba24b3443d2e3d72300c3308ccc742325",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a25198bba24b3443d2e3d72300c3308ccc742325/comments",
  "author": {
    "login": "bernd-edlinger",
    "id": 17638929,
    "node_id": "MDQ6VXNlcjE3NjM4OTI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bernd-edlinger",
    "html_url": "https://github.com/bernd-edlinger",
    "followers_url": "https://api.github.com/users/bernd-edlinger/followers",
    "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions",
    "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs",
    "repos_url": "https://api.github.com/users/bernd-edlinger/repos",
    "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bernd-edlinger",
    "id": 17638929,
    "node_id": "MDQ6VXNlcjE3NjM4OTI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bernd-edlinger",
    "html_url": "https://github.com/bernd-edlinger",
    "followers_url": "https://api.github.com/users/bernd-edlinger/followers",
    "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions",
    "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs",
    "repos_url": "https://api.github.com/users/bernd-edlinger/repos",
    "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "206c98a6503de9c78550b7e503526f59b5b2f491",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/206c98a6503de9c78550b7e503526f59b5b2f491",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/206c98a6503de9c78550b7e503526f59b5b2f491"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 26,
    "deletions": 19
  },
  "files": [
    {
      "sha": "e9579b17defeadd52ecf7e63664d084da310371a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a25198bba24b3443d2e3d72300c3308ccc742325/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a25198bba24b3443d2e3d72300c3308ccc742325/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a25198bba24b3443d2e3d72300c3308ccc742325",
      "patch": "@@ -1,3 +1,11 @@\n+2020-04-09  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\trevert partially:\n+\t2020-04-01  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+        * buildsym.c (record_line): Fix undefined behavior and preserve\n+        lines at eof.\n+\n 2020-04-09  Kamil Rytarowski  <n54@gmx.com>\n \n \t* auxv.h (svr4_auxv_parse): New."
    },
    {
      "sha": "c08c476a0d4a559b9a9091be8a7c8a7002866a36",
      "filename": "gdb/buildsym.c",
      "status": "modified",
      "additions": 18,
      "deletions": 19,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a25198bba24b3443d2e3d72300c3308ccc742325/gdb/buildsym.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a25198bba24b3443d2e3d72300c3308ccc742325/gdb/buildsym.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/buildsym.c?ref=a25198bba24b3443d2e3d72300c3308ccc742325",
      "patch": "@@ -691,29 +691,28 @@ buildsym_compunit::record_line (struct subfile *subfile, int line,\n \t\t      * sizeof (struct linetable_entry))));\n     }\n \n-  /* The end of sequence marker is special.  We need to reset the\n-     is_stmt flag on previous lines at the same PC, otherwise these\n-     lines may cause problems since they might be at the same address\n-     as the following function.  For instance suppose a function calls\n-     abort there is no reason to emit a ret after that point (no joke).\n-     So the label may be at the same address where the following\n-     function begins.  A similar problem appears if a label is at the\n-     same address where an inline function ends we cannot reliably tell\n-     if this is considered part of the inline function or the calling\n-     program or even the next inline function, so stack traces may\n-     give surprising results.  Expect gdb.cp/step-and-next-inline.exp\n-     to fail if these lines are not modified here.  */\n-  if (line == 0 && subfile->line_vector->nitems > 0)\n+  /* Normally, we treat lines as unsorted.  But the end of sequence\n+     marker is special.  We sort line markers at the same PC by line\n+     number, so end of sequence markers (which have line == 0) appear\n+     first.  This is right if the marker ends the previous function,\n+     and there is no padding before the next function.  But it is\n+     wrong if the previous line was empty and we are now marking a\n+     switch to a different subfile.  We must leave the end of sequence\n+     marker at the end of this group of lines, not sort the empty line\n+     to after the marker.  The easiest way to accomplish this is to\n+     delete any empty lines from our table, if they are followed by\n+     end of sequence markers.  All we lose is the ability to set\n+     breakpoints at some lines which contain no instructions\n+     anyway.  */\n+  if (line == 0)\n     {\n-      e = subfile->line_vector->item + subfile->line_vector->nitems;\n-      do\n+      while (subfile->line_vector->nitems > 0)\n \t{\n-\t  e--;\n-\t  if (e->pc != pc || e->line == 0)\n+\t  e = subfile->line_vector->item + subfile->line_vector->nitems - 1;\n+\t  if (e->pc != pc)\n \t    break;\n-\t  e->is_stmt = 0;\n+\t  subfile->line_vector->nitems--;\n \t}\n-      while (e > subfile->line_vector->item);\n     }\n \n   e = subfile->line_vector->item + subfile->line_vector->nitems++;"
    }
  ]
}