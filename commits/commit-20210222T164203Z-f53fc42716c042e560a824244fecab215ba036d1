{
  "sha": "f53fc42716c042e560a824244fecab215ba036d1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjUzZmM0MjcxNmMwNDJlNTYwYTgyNDI0NGZlY2FiMjE1YmEwMzZkMQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-02-22T16:42:03Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-02-22T16:42:03Z"
    },
    "message": "gdb: add asserts in thread code\n\nUnlike the previous patch, I don't propose that we take this patch into\ngdb-10-branch.\n\nThis patch adds two asserts, prompted by investigating and fixing the\nbug fixed by the previous patch.\n\nThe assert in find_thread_ptid would have caught the original issue\nbefore the segfault (I think it's slightly more use friendly).\n\nThe assert in add_thread_silent would have made it clear that the\nsolution proposed in [1] isn't the right one.  The solution ended up\npassing nullptr as a target to add_thread.  We don't want that, because\nadd_thread_silent uses it to look up the inferior to which to add the\nthread.  If the target is nullptr, we could find an inferior with the\nsame pid, but belonging to an unrelated target.  So we always want a\nnon-nullptr target in add_thread_silent.\n\ngdb/ChangeLog:\n\n\t* thread.c (add_thread_silent): Add assert.\n\t(find_thread_ptid): Add assert.\n\n[1] https://sourceware.org/pipermail/gdb-patches/2021-February/176202.html\n\nChange-Id: Ie593ee45c5eb02235e8e9fbcda612d48ce883852",
    "tree": {
      "sha": "6875fa0ee4046623dc13690a01d1a2895ce340d8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6875fa0ee4046623dc13690a01d1a2895ce340d8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f53fc42716c042e560a824244fecab215ba036d1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f53fc42716c042e560a824244fecab215ba036d1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f53fc42716c042e560a824244fecab215ba036d1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f53fc42716c042e560a824244fecab215ba036d1/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "de146e1946ee45f2552c6b56714793a2eba9b823",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de146e1946ee45f2552c6b56714793a2eba9b823",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/de146e1946ee45f2552c6b56714793a2eba9b823"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 9,
    "deletions": 0
  },
  "files": [
    {
      "sha": "9de0e235dc0cd089115936a5ef5330c69ca644b0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f53fc42716c042e560a824244fecab215ba036d1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f53fc42716c042e560a824244fecab215ba036d1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f53fc42716c042e560a824244fecab215ba036d1",
      "patch": "@@ -1,3 +1,8 @@\n+2021-02-22  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* thread.c (add_thread_silent): Add assert.\n+\t(find_thread_ptid): Add assert.\n+\n 2021-02-22  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \tPR gdb/27435"
    },
    {
      "sha": "3e7d6e14bf740a4d9b28972a6c279961e318f8ec",
      "filename": "gdb/thread.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f53fc42716c042e560a824244fecab215ba036d1/gdb/thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f53fc42716c042e560a824244fecab215ba036d1/gdb/thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread.c?ref=f53fc42716c042e560a824244fecab215ba036d1",
      "patch": "@@ -246,6 +246,8 @@ new_thread (struct inferior *inf, ptid_t ptid)\n struct thread_info *\n add_thread_silent (process_stratum_target *targ, ptid_t ptid)\n {\n+  gdb_assert (targ != nullptr);\n+\n   inferior *inf = find_inferior_ptid (targ, ptid);\n \n   /* We may have an old thread with the same id in the thread list.\n@@ -535,6 +537,8 @@ find_thread_ptid (process_stratum_target *targ, ptid_t ptid)\n struct thread_info *\n find_thread_ptid (inferior *inf, ptid_t ptid)\n {\n+  gdb_assert (inf != nullptr);\n+\n   for (thread_info *tp : inf->non_exited_threads ())\n     if (tp->ptid == ptid)\n       return tp;"
    }
  ]
}