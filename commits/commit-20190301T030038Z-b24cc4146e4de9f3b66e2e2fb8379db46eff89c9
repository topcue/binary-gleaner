{
  "sha": "b24cc4146e4de9f3b66e2e2fb8379db46eff89c9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjI0Y2M0MTQ2ZTRkZTlmM2I2NmUyZTJmYjgzNzlkYjQ2ZWZmODljOQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-02-28T22:58:47Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-03-01T03:00:38Z"
    },
    "message": "PR24272, out-of-bounds read in pex64_xdata_print_uwd_codes\n\nThe fix here is to use an unsigned comparison for\n    if (a->NumberOfRvaAndSizes > IMAGE_NUMBEROF_DIRECTORY_ENTRIES)\n\ninclude/\n\tPR 24272\n\t* coff/internal.h (struct internal_extra_pe_aouthdr): Change type\n\tof SizeOfCode, SizeOfInitializedData, and SizeOfUninitializedData\n\tto bfd_vma.  Change type of SectionAlignment, FileAlignment,\n\tReserved1, SizeOfImage, SizeOfHeaders, CheckSum, LoaderFlags,\n\tand NumberOfRvaAndSizes to uint32_t.\nbfd/\n\tPR 24272\n\t* peXXigen.c (_bfd_XXi_swap_aouthdr_in): Use unsigned index.\n\t(_bfd_XX_print_private_bfd_data_common): Adjust for type changes.",
    "tree": {
      "sha": "42abb0936ca9a71b8901ea94202d75b4f94c8527",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/42abb0936ca9a71b8901ea94202d75b4f94c8527"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b24cc4146e4de9f3b66e2e2fb8379db46eff89c9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b24cc4146e4de9f3b66e2e2fb8379db46eff89c9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b24cc4146e4de9f3b66e2e2fb8379db46eff89c9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b24cc4146e4de9f3b66e2e2fb8379db46eff89c9/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b09e83c1f814a6f218519abeb94aaf45869ba03c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b09e83c1f814a6f218519abeb94aaf45869ba03c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b09e83c1f814a6f218519abeb94aaf45869ba03c"
    }
  ],
  "stats": {
    "total": 77,
    "additions": 38,
    "deletions": 39
  },
  "files": [
    {
      "sha": "77fb4933e73e61d466ade551be8f6d79b509cbe7",
      "filename": "bfd/peXXigen.c",
      "status": "modified",
      "additions": 17,
      "deletions": 18,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b24cc4146e4de9f3b66e2e2fb8379db46eff89c9/bfd/peXXigen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b24cc4146e4de9f3b66e2e2fb8379db46eff89c9/bfd/peXXigen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/peXXigen.c?ref=b24cc4146e4de9f3b66e2e2fb8379db46eff89c9",
      "patch": "@@ -522,15 +522,15 @@ _bfd_XXi_swap_aouthdr_in (bfd * abfd,\n   a->NumberOfRvaAndSizes = H_GET_32 (abfd, src->NumberOfRvaAndSizes);\n \n   {\n-    int idx;\n+    unsigned idx;\n \n     /* PR 17512: Corrupt PE binaries can cause seg-faults.  */\n     if (a->NumberOfRvaAndSizes > IMAGE_NUMBEROF_DIRECTORY_ENTRIES)\n       {\n \t/* xgettext:c-format */\n \t_bfd_error_handler\n-\t  (_(\"%pB: aout header specifies an invalid number of data-directory entries: %ld\"),\n-\t   abfd, a->NumberOfRvaAndSizes);\n+\t  (_(\"%pB: aout header specifies an invalid number of\"\n+\t     \" data-directory entries: %u\"), abfd, a->NumberOfRvaAndSizes);\n \tbfd_set_error (bfd_error_bad_value);\n \n \t/* Paranoia: If the number is corrupt, then assume that the\n@@ -2806,12 +2806,13 @@ _bfd_XX_print_private_bfd_data_common (bfd * abfd, void * vfile)\n     fprintf (file, \"\\t(%s)\",name);\n   fprintf (file, \"\\nMajorLinkerVersion\\t%d\\n\", i->MajorLinkerVersion);\n   fprintf (file, \"MinorLinkerVersion\\t%d\\n\", i->MinorLinkerVersion);\n-  fprintf (file, \"SizeOfCode\\t\\t%08lx\\n\", (unsigned long) i->SizeOfCode);\n-  fprintf (file, \"SizeOfInitializedData\\t%08lx\\n\",\n-\t   (unsigned long) i->SizeOfInitializedData);\n-  fprintf (file, \"SizeOfUninitializedData\\t%08lx\\n\",\n-\t   (unsigned long) i->SizeOfUninitializedData);\n-  fprintf (file, \"AddressOfEntryPoint\\t\");\n+  fprintf (file, \"SizeOfCode\\t\\t\");\n+  bfd_fprintf_vma (abfd, file, i->SizeOfCode);\n+  fprintf (file, \"\\nSizeOfInitializedData\\t\");\n+  bfd_fprintf_vma (abfd, file, i->SizeOfInitializedData);\n+  fprintf (file, \"\\nSizeOfUninitializedData\\t\");\n+  bfd_fprintf_vma (abfd, file, i->SizeOfUninitializedData);\n+  fprintf (file, \"\\nAddressOfEntryPoint\\t\");\n   bfd_fprintf_vma (abfd, file, i->AddressOfEntryPoint);\n   fprintf (file, \"\\nBaseOfCode\\t\\t\");\n   bfd_fprintf_vma (abfd, file, i->BaseOfCode);\n@@ -2823,20 +2824,18 @@ _bfd_XX_print_private_bfd_data_common (bfd * abfd, void * vfile)\n \n   fprintf (file, \"\\nImageBase\\t\\t\");\n   bfd_fprintf_vma (abfd, file, i->ImageBase);\n-  fprintf (file, \"\\nSectionAlignment\\t\");\n-  bfd_fprintf_vma (abfd, file, i->SectionAlignment);\n-  fprintf (file, \"\\nFileAlignment\\t\\t\");\n-  bfd_fprintf_vma (abfd, file, i->FileAlignment);\n-  fprintf (file, \"\\nMajorOSystemVersion\\t%d\\n\", i->MajorOperatingSystemVersion);\n+  fprintf (file, \"\\nSectionAlignment\\t%08x\\n\", i->SectionAlignment);\n+  fprintf (file, \"FileAlignment\\t\\t%08x\\n\", i->FileAlignment);\n+  fprintf (file, \"MajorOSystemVersion\\t%d\\n\", i->MajorOperatingSystemVersion);\n   fprintf (file, \"MinorOSystemVersion\\t%d\\n\", i->MinorOperatingSystemVersion);\n   fprintf (file, \"MajorImageVersion\\t%d\\n\", i->MajorImageVersion);\n   fprintf (file, \"MinorImageVersion\\t%d\\n\", i->MinorImageVersion);\n   fprintf (file, \"MajorSubsystemVersion\\t%d\\n\", i->MajorSubsystemVersion);\n   fprintf (file, \"MinorSubsystemVersion\\t%d\\n\", i->MinorSubsystemVersion);\n-  fprintf (file, \"Win32Version\\t\\t%08lx\\n\", (unsigned long) i->Reserved1);\n-  fprintf (file, \"SizeOfImage\\t\\t%08lx\\n\", (unsigned long) i->SizeOfImage);\n-  fprintf (file, \"SizeOfHeaders\\t\\t%08lx\\n\", (unsigned long) i->SizeOfHeaders);\n-  fprintf (file, \"CheckSum\\t\\t%08lx\\n\", (unsigned long) i->CheckSum);\n+  fprintf (file, \"Win32Version\\t\\t%08x\\n\", i->Reserved1);\n+  fprintf (file, \"SizeOfImage\\t\\t%08x\\n\", i->SizeOfImage);\n+  fprintf (file, \"SizeOfHeaders\\t\\t%08x\\n\", i->SizeOfHeaders);\n+  fprintf (file, \"CheckSum\\t\\t%08x\\n\", i->CheckSum);\n \n   switch (i->Subsystem)\n     {"
    },
    {
      "sha": "c87dc8abaf72420f51cdac097174b7dc86a868b7",
      "filename": "include/coff/internal.h",
      "status": "modified",
      "additions": 21,
      "deletions": 21,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b24cc4146e4de9f3b66e2e2fb8379db46eff89c9/include/coff/internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b24cc4146e4de9f3b66e2e2fb8379db46eff89c9/include/coff/internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/internal.h?ref=b24cc4146e4de9f3b66e2e2fb8379db46eff89c9",
      "patch": "@@ -197,11 +197,11 @@ struct internal_extra_pe_aouthdr\n   /* Linker minor version number.  */\n   char MinorLinkerVersion;\t\n   /* Total size of all code sections.  */\n-  long SizeOfCode;\n+  bfd_vma SizeOfCode;\n   /* Total size of all initialized data sections.  */\n-  long SizeOfInitializedData;\n+  bfd_vma SizeOfInitializedData;\n   /* Total size of all uninitialized data sections.  */\n-  long SizeOfUninitializedData;\n+  bfd_vma SizeOfUninitializedData;\n   /* Address of entry point relative to image base.  */\n   bfd_vma AddressOfEntryPoint;\n   /* Address of the first code section relative to image base.  */\n@@ -211,21 +211,21 @@ struct internal_extra_pe_aouthdr\n \n   /* PE stuff  */\n   bfd_vma ImageBase;\t\t/* Address of specific location in memory that\n-\t\t\t\t    file is located, NT default 0x10000.  */\n-\n-  bfd_vma SectionAlignment;\t/* Section alignment default 0x1000.  */\n-  bfd_vma FileAlignment;\t/* File alignment default 0x200.  */\n-  short   MajorOperatingSystemVersion; /* Minimum version of the operating.  */\n-  short   MinorOperatingSystemVersion; /* System req'd for exe, default to 1.  */\n-  short   MajorImageVersion;\t/* User defineable field to store version of */\n-  short   MinorImageVersion;\t/*  exe or dll being created, default to 0.  */ \n-  short   MajorSubsystemVersion; /* Minimum subsystem version required to */\n-  short   MinorSubsystemVersion; /*  run exe; default to 3.1.  */\n-  long    Reserved1;\t\t/* Seems to be 0.  */\n-  long    SizeOfImage;\t\t/* Size of memory to allocate for prog.  */\n-  long    SizeOfHeaders;\t/* Size of PE header and section table.  */\n-  long    CheckSum;\t\t/* Set to 0.  */\n-  short   Subsystem;\t\n+\t\t\t\t   file is located, NT default 0x10000.  */\n+\n+  uint32_t SectionAlignment;\t/* Section alignment default 0x1000.  */\n+  uint32_t FileAlignment;\t/* File alignment default 0x200.  */\n+  short MajorOperatingSystemVersion; /* Minimum version of the operating.  */\n+  short MinorOperatingSystemVersion; /* System req'd for exe, default 1.  */\n+  short MajorImageVersion;\t/* User defineable field to store version of */\n+  short MinorImageVersion;\t/*  exe or dll being created, default to 0.  */\n+  short MajorSubsystemVersion;\t/* Minimum subsystem version required to */\n+  short MinorSubsystemVersion;\t/*  run exe; default to 3.1.  */\n+  uint32_t Reserved1;\t\t/* Seems to be 0.  */\n+  uint32_t SizeOfImage;\t\t/* Size of memory to allocate for prog.  */\n+  uint32_t SizeOfHeaders;\t/* Size of PE header and section table.  */\n+  uint32_t CheckSum;\t\t/* Set to 0.  */\n+  short Subsystem;\n \n   /* Type of subsystem exe uses for user interface,\n      possible values:\n@@ -237,11 +237,11 @@ struct internal_extra_pe_aouthdr\n   unsigned short DllCharacteristics; /* flags for DLL init.  */\n   bfd_vma SizeOfStackReserve;\t/* Amount of memory to reserve.  */\n   bfd_vma SizeOfStackCommit;\t/* Amount of memory initially committed for\n-\t\t\t\t    initial thread's stack, default is 0x1000.  */\n+\t\t\t\t   initial thread's stack, default 0x1000.  */\n   bfd_vma SizeOfHeapReserve;\t/* Amount of virtual memory to reserve and */\n   bfd_vma SizeOfHeapCommit;\t/*  commit, don't know what to defaut it to.  */\n-  long    LoaderFlags;\t\t/* Can probably set to 0.  */\n-  long    NumberOfRvaAndSizes;\t/* Number of entries in next entry, 16.  */\n+  uint32_t LoaderFlags;\t\t/* Can probably set to 0.  */\n+  uint32_t NumberOfRvaAndSizes;\t/* Number of entries in next entry, 16.  */\n   IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];\n };\n "
    }
  ]
}