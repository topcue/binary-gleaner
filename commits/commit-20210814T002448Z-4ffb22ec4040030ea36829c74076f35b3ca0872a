{
  "sha": "4ffb22ec4040030ea36829c74076f35b3ca0872a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGZmYjIyZWM0MDQwMDMwZWEzNjgyOWM3NDA3NmYzNWIzY2EwODcyYQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-08-14T00:02:35Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-08-14T00:24:48Z"
    },
    "message": "ld script fill pattern expression\n\nIt turns out we do need to backtrack when parsing after all.  The\nfill_opt component in the section rule swiches to EXPRESSION and back\nto SCRIPT, and to find the end of an expression it is necessary to\nlook ahead one token.\n\n\t* ldgram.y (section): Throw away lookahead NAME token.\n\t(overlay_section): Likewise.\n\t* testsuite/ld-elf/overlay.t: Add fill pattern on overlays.\n\tTest fill pattern before stupidly named normal sections too,\n\tand before /DISCARD/.",
    "tree": {
      "sha": "16484472ec9b5cdaf746debdd2f62cb499f94406",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/16484472ec9b5cdaf746debdd2f62cb499f94406"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4ffb22ec4040030ea36829c74076f35b3ca0872a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ffb22ec4040030ea36829c74076f35b3ca0872a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4ffb22ec4040030ea36829c74076f35b3ca0872a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ffb22ec4040030ea36829c74076f35b3ca0872a/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "96ddc891f296b9a5f4a2e6788adb38d93b1e14ca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96ddc891f296b9a5f4a2e6788adb38d93b1e14ca",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/96ddc891f296b9a5f4a2e6788adb38d93b1e14ca"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 27,
    "deletions": 3
  },
  "files": [
    {
      "sha": "a0c881e9a736344d817bc9dd17d73b4e7990db48",
      "filename": "ld/ldgram.y",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffb22ec4040030ea36829c74076f35b3ca0872a/ld/ldgram.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffb22ec4040030ea36829c74076f35b3ca0872a/ld/ldgram.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldgram.y?ref=4ffb22ec4040030ea36829c74076f35b3ca0872a",
      "patch": "@@ -1063,6 +1063,18 @@ section:\tNAME\n \t\t\t{ ldlex_popstate (); }\n \t\tmemspec_opt memspec_at_opt phdr_opt fill_opt\n \t\t\t{\n+\t\t\t  /* fill_opt may have switched the lexer into\n+\t\t\t     expression state, and back again, but in\n+\t\t\t     order to find the end of the fill\n+\t\t\t     expression the parser must look ahead one\n+\t\t\t     token.  If it is a NAME, throw it away as\n+\t\t\t     it will have been lexed in the wrong\n+\t\t\t     state.  */\n+\t\t\t  if (yychar == NAME)\n+\t\t\t    {\n+\t\t\t      yyclearin;\n+\t\t\t      ldlex_backup ();\n+\t\t\t    }\n \t\t\t  lang_leave_output_section_statement ($17, $14,\n \t\t\t\t\t\t\t       $16, $15);\n \t\t\t}\n@@ -1079,6 +1091,11 @@ section:\tNAME\n \t\t'}'\n \t\tmemspec_opt memspec_at_opt phdr_opt fill_opt\n \t\t\t{\n+\t\t\t  if (yychar == NAME)\n+\t\t\t    {\n+\t\t\t      yyclearin;\n+\t\t\t      ldlex_backup ();\n+\t\t\t    }\n \t\t\t  lang_leave_overlay ($5, (int) $4,\n \t\t\t\t\t      $15, $12, $14, $13);\n \t\t\t}\n@@ -1179,6 +1196,11 @@ overlay_section:\n \t\t\t{ ldlex_popstate (); }\n \t\tphdr_opt fill_opt\n \t\t\t{\n+\t\t\t  if (yychar == NAME)\n+\t\t\t    {\n+\t\t\t      yyclearin;\n+\t\t\t      ldlex_backup ();\n+\t\t\t    }\n \t\t\t  lang_leave_overlay_section ($9, $8);\n \t\t\t}\n \t\topt_comma"
    },
    {
      "sha": "640af9650fb609bd383ab2b00e22f37c11422e60",
      "filename": "ld/testsuite/ld-elf/overlay.t",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffb22ec4040030ea36829c74076f35b3ca0872a/ld/testsuite/ld-elf/overlay.t",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffb22ec4040030ea36829c74076f35b3ca0872a/ld/testsuite/ld-elf/overlay.t",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/overlay.t?ref=4ffb22ec4040030ea36829c74076f35b3ca0872a",
      "patch": "@@ -6,9 +6,11 @@ SECTIONS\n   {\n     .text1 {*(.text1)}\n     .text2 {*(.text2)}\n-    .silly-name1 { *(.silly-name1) }\n-    .silly-name2 { *(.silly-name2) }\n-  }\n+    .silly-name1 { *(.silly-name1) } = 0\n+    .silly-name2 { *(.silly-name2) } = 0\n+  } = 0\n+  .silly-name3 : { *(.silly-name3) } = 0\n+  .silly-name4 : { *(.silly-name4) } = 0\n   /DISCARD/ : { *(.*) }\n   ASSERT(ADDR(.text1)==ADDR(.text2), \"overlay error\")\n   ASSERT(ADDR(.silly-name1)==ADDR(.silly-name2), \"silly overlay error\")"
    }
  ]
}