{
  "sha": "bab05c83ac4333bb087a41f843af0e66218ec054",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmFiMDVjODNhYzQzMzNiYjA4N2E0MWY4NDNhZjBlNjYyMThlYzA1NA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-28T03:42:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-28T15:04:10Z"
    },
    "message": "Make two range_bounds bitfields unsigned\n\nWhile debugging gdb, I noticed that the bitfields in a range_bounds\nwere signed, causing the values of these fields to be -1.\n\nI think this is odd; and while we haven't yet committed to boolean\nbitfields, I think it is a small improvement to change these types to\nunsigned.\n\ngdb/ChangeLog\n2019-11-28  Tom Tromey  <tom@tromey.com>\n\n\t* gdbtypes.h (struct range_bounds) <flag_upper_bound_is_count,\n\tflag_bound_evaluated>: Now unsigned.\n\nChange-Id: Ia377fd931594bbf8653180d4dcb4e60354d90139",
    "tree": {
      "sha": "79b9e6379085d130a1c9d9e89980459dd6d8292c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/79b9e6379085d130a1c9d9e89980459dd6d8292c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bab05c83ac4333bb087a41f843af0e66218ec054",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bab05c83ac4333bb087a41f843af0e66218ec054",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bab05c83ac4333bb087a41f843af0e66218ec054",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bab05c83ac4333bb087a41f843af0e66218ec054/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2522f049dfad1c5dcaa641bf41341e0c5bbeca2b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2522f049dfad1c5dcaa641bf41341e0c5bbeca2b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2522f049dfad1c5dcaa641bf41341e0c5bbeca2b"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 7,
    "deletions": 2
  },
  "files": [
    {
      "sha": "c777def757b0c46f1db7d89d067f252fa9741bfb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bab05c83ac4333bb087a41f843af0e66218ec054/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bab05c83ac4333bb087a41f843af0e66218ec054/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bab05c83ac4333bb087a41f843af0e66218ec054",
      "patch": "@@ -1,3 +1,8 @@\n+2019-11-28  Tom Tromey  <tom@tromey.com>\n+\n+\t* gdbtypes.h (struct range_bounds) <flag_upper_bound_is_count,\n+\tflag_bound_evaluated>: Now unsigned.\n+\n 2019-11-28  Tom Tromey  <tom@tromey.com>\n \n \t* guile/guile-internal.h (vlscm_scm_from_value_unsafe): Don't"
    },
    {
      "sha": "2e128aae063f9dec3802cb893e146c06ddd53fc1",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bab05c83ac4333bb087a41f843af0e66218ec054/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bab05c83ac4333bb087a41f843af0e66218ec054/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=bab05c83ac4333bb087a41f843af0e66218ec054",
      "patch": "@@ -631,12 +631,12 @@ struct range_bounds\n   /* True if HIGH range bound contains the number of elements in the\n      subrange.  This affects how the final high bound is computed.  */\n \n-  int flag_upper_bound_is_count : 1;\n+  unsigned int flag_upper_bound_is_count : 1;\n \n   /* True if LOW or/and HIGH are resolved into a static bound from\n      a dynamic one.  */\n \n-  int flag_bound_evaluated : 1;\n+  unsigned int flag_bound_evaluated : 1;\n };\n \n /* Compare two range_bounds objects for equality.  Simply does"
    }
  ]
}