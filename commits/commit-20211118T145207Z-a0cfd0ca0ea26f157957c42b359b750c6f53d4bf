{
  "sha": "a0cfd0ca0ea26f157957c42b359b750c6f53d4bf",
  "node_id": "C_kwDOANOeidoAKGEwY2ZkMGNhMGVhMjZmMTU3OTU3YzQyYjM1OWI3NTBjNmY1M2Q0YmY",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-18T14:52:07Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-18T14:52:07Z"
    },
    "message": "[gdb/testsuite] Add missing wait in gdb.base/signals-state-child.exp\n\nOn OBS I ran into:\n...\n(gdb) shell diff -s outputs/gdb.base/signals-state-child/standalone.txt \\\n  outputs/gdb.base/signals-state-child/gdb.txt^M\ndiff: outputs/gdb.base/signals-state-child/standalone.txt: \\\n  No such file or directory^M\n(gdb) FAIL: gdb.base/signals-state-child.exp: signals states are identical\n...\n\nI managed to reproduce this by adding \"sleep (5)\" at the start of main in\nsignals-state-child.c.\n\nFix this by waiting on the result of the spawned command.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "7aab70760b1d2b67fb3e5d67df9ae013a66d2e4b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7aab70760b1d2b67fb3e5d67df9ae013a66d2e4b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a0cfd0ca0ea26f157957c42b359b750c6f53d4bf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0cfd0ca0ea26f157957c42b359b750c6f53d4bf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a0cfd0ca0ea26f157957c42b359b750c6f53d4bf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0cfd0ca0ea26f157957c42b359b750c6f53d4bf/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7a53275579e7cec9389ccb924f5ecf69e8d89d41",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a53275579e7cec9389ccb924f5ecf69e8d89d41",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7a53275579e7cec9389ccb924f5ecf69e8d89d41"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 11,
    "deletions": 3
  },
  "files": [
    {
      "sha": "733d7cebd5ac52aa6d461468206ebe65791ef6ef",
      "filename": "gdb/testsuite/gdb.base/signals-state-child.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 3,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a0cfd0ca0ea26f157957c42b359b750c6f53d4bf/gdb/testsuite/gdb.base/signals-state-child.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a0cfd0ca0ea26f157957c42b359b750c6f53d4bf/gdb/testsuite/gdb.base/signals-state-child.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/signals-state-child.exp?ref=a0cfd0ca0ea26f157957c42b359b750c6f53d4bf",
      "patch": "@@ -69,9 +69,11 @@ set res [remote_spawn target \"$binfile-standalone\"]\n if { $res < 0 || $res == \"\" } {\n     untested \"spawning $binfile-standalone failed\"\n     return 1\n-} else {\n-    pass \"collect standalone signals state\"\n }\n+\n+set wait_status [remote_wait target 60]\n+set have_standalone [expr [lindex $wait_status 0] == 0]\n+gdb_assert { $have_standalone } \"collect standalone signals state\"\n remote_close target\n \n # Now run the program through gdb, and dump its initial signal actions\n@@ -85,6 +87,12 @@ if { ! [ runto_main ] } then {\n \n gdb_continue_to_end \"collect signals state under gdb\"\n \n+set test \"signals states are identical\"\n+if { ! $have_standalone } {\n+    untested $test\n+    return -1\n+}\n+\n if {!$purely_local} {\n     # Copy file from target to host through build.\n     remote_download host [remote_upload target gdb.txt] gdb.txt\n@@ -94,4 +102,4 @@ if {!$purely_local} {\n # Diff the .txt files.  They should be identical.\n gdb_test \"shell diff -s $standalone_txt $gdb_txt\" \\\n     \"Files .* are identical.*\" \\\n-    \"signals states are identical\"\n+    $test"
    }
  ]
}