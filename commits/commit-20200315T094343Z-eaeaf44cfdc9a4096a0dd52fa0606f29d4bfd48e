{
  "sha": "eaeaf44cfdc9a4096a0dd52fa0606f29d4bfd48e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWFlYWY0NGNmZGM5YTQwOTZhMGRkNTJmYTA2MDZmMjlkNGJmZDQ4ZQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-15T09:43:43Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-15T09:43:43Z"
    },
    "message": "[gdb/testsuite] Fix check-read1 FAIL with gdb.base/maint.exp\n\nWhen running test-case gdb.base/maint.exp with check-read1, I run into:\n...\nFAIL: gdb.base/maint.exp: (timeout) maint print objfiles\n...\n\nThe FAIL happens because command output contains long lines like this:\n...\nfile1 at $hex, file2 at $hex, ..., $file$n at $hex,\n...\nF.i., such a line for libc.so.debug contains 82000 chars.\n\nFix this this by reading long lines bit by bit.\n\nAlso, replace the testing of the command output formulated using a gdb_send\ncombined with gdb_expect-in-a-loop, with a regular gdb_test_multiple with\nexp_continue.\n\nTested on x86_64-linux, with make targets check and check-read1.\n\ngdb/testsuite/ChangeLog:\n\n2020-03-15  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/maint.exp: Use exp_continue in long lines for \"maint print\n\tobjfiles\".",
    "tree": {
      "sha": "14c6421249eecab364e76099b1c1abe5c65a51ec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/14c6421249eecab364e76099b1c1abe5c65a51ec"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eaeaf44cfdc9a4096a0dd52fa0606f29d4bfd48e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eaeaf44cfdc9a4096a0dd52fa0606f29d4bfd48e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eaeaf44cfdc9a4096a0dd52fa0606f29d4bfd48e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eaeaf44cfdc9a4096a0dd52fa0606f29d4bfd48e/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3293bbaffac9a22fc6d1a08ac6602a4a63b5e68b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3293bbaffac9a22fc6d1a08ac6602a4a63b5e68b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3293bbaffac9a22fc6d1a08ac6602a4a63b5e68b"
    }
  ],
  "stats": {
    "total": 50,
    "additions": 24,
    "deletions": 26
  },
  "files": [
    {
      "sha": "7c3fd4cf4cba4539a7e776dbef350ed3b022656e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eaeaf44cfdc9a4096a0dd52fa0606f29d4bfd48e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eaeaf44cfdc9a4096a0dd52fa0606f29d4bfd48e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=eaeaf44cfdc9a4096a0dd52fa0606f29d4bfd48e",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-15  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/maint.exp: Use exp_continue in long lines for \"maint print\n+\tobjfiles\".\n+\n 2020-03-14  Tom Tromey  <tom@tromey.com>\n \n \t* gdb.base/cvexpr.exp: Add test for _Atomic and restrict."
    },
    {
      "sha": "3431f2c6dc54436ec1bc0de53ba63b0f50e181b1",
      "filename": "gdb/testsuite/gdb.base/maint.exp",
      "status": "modified",
      "additions": 19,
      "deletions": 26,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eaeaf44cfdc9a4096a0dd52fa0606f29d4bfd48e/gdb/testsuite/gdb.base/maint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eaeaf44cfdc9a4096a0dd52fa0606f29d4bfd48e/gdb/testsuite/gdb.base/maint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/maint.exp?ref=eaeaf44cfdc9a4096a0dd52fa0606f29d4bfd48e",
      "patch": "@@ -215,7 +215,7 @@ gdb_expect  {\n # There aren't any ...\n gdb_test_no_output \"maint print dummy-frames\"\n \n-send_gdb \"maint print objfiles\\n\"\n+\n \n # To avoid timeouts, we avoid expects with many .* patterns that match\n # many lines.  Instead, we keep track of which milestones we've seen\n@@ -224,31 +224,24 @@ send_gdb \"maint print objfiles\\n\"\n set header 0\n set psymtabs 0\n set symtabs 0\n-set keep_looking 1\n-\n-while {$keep_looking} {\n-    gdb_expect  {\n-\n-\t-re \"\\r\\n\" {\n-\t    set output $expect_out(buffer)\n-\t    if {[regexp \".*Object file.*maint($EXEEXT)?:  Objfile at ${hex}\" $output]} {\n-\t\tset header 1\n-\t    }\n-\t    if {[regexp \".*Psymtabs:\\[\\r\\t \\]+\\n\" $output]} {\n-\t\tset psymtabs 1\n-\t    }\n-\t    if {[regexp \".*Symtabs:\\[\\r\\t \\]+\\n\" $output]} {\n-\t\tset symtabs 1\n-\t    }\n-\t}\n-\n-\t-re \".*$gdb_prompt $\" { \n-\t    set keep_looking 0\n-\t}\n-\ttimeout { \n-\t    fail \"(timeout) maint print objfiles\" \n-\t    set keep_looking 0\n-\t}\n+gdb_test_multiple \"maint print objfiles\" \"\" -lbl {\n+    -re \"\\r\\nObject file.*maint($EXEEXT)?:  Objfile at ${hex}\" {\n+\tset header 1\n+\texp_continue\n+    }\n+    -re \"\\r\\nPsymtabs:\\[\\r\\t \\]+\" {\n+\tset psymtabs 1\n+\texp_continue\n+    }\n+    -re \"\\r\\nSymtabs:\\[\\r\\t \\]+\\n\" {\n+\tset symtabs 1\n+\texp_continue\n+    }\n+    -re \" at $hex,\" {\n+\texp_continue\n+    }\n+    -re -wrap \"\" {\n+\tpass $gdb_test_name\n     }\n }\n "
    }
  ]
}