{
  "sha": "b58a68fe5709ed205c3ac54065f1783ce58d9a01",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjU4YTY4ZmU1NzA5ZWQyMDVjM2FjNTQwNjVmMTc4M2NlNThkOWEwMQ==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-07-09T18:26:15Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-07-09T18:26:15Z"
    },
    "message": "Fix \"info break\" + \"catch catch\" + -static-{libstdc++,libgcc}\n\nIf you debug current GDB, set a \"catch catch/throw/rethrow\"\ncatchpoint, and then do \"info breakpoints\", the top GDB hits an\ninternal error:\n\n (top-gdb) catch catch\n Catchpoint 1 (catch)\n (top-gdb) info breakpoints\n Num     Type           Disp Enb Address            What\n 1       breakpoint     keep y   src/gdb/breakpoint.c:6040: internal-error: void print_one_breakpoint_location(breakpoint*, bp_location*, int, bp_location**, int): Assertion `b->loc == NULL || b->loc->next == NULL' failed.\n A problem internal to GDB has been detected,\n further debugging may prove unreliable.\n Quit this debugging session? (y or n)\n\nThe assertion in question is asserting that a breakpoint with a\nprint_one method only has one location, and it fails because this\ncatchpoint ends up with two locations.\n\nInternally, \"catch catch\" sets a breakpoint at __cxa_begin_catch.  If\nwe do that manually, we see the locations:\n\n  (top-gdb) b -qualified __cxa_begin_catch\n  Breakpoint 2 at 0xb122b0 (2 locations)\n  (top-gdb) info breakpoints\n  Num     Type           Disp Enb Address            What\n  2       breakpoint     keep y   <MULTIPLE>\n  2.1                         y   0x0000000000b122b0 <__cxa_begin_catch>\n  2.2                         y   0x00007ffff2f4ddb0 in __cxxabiv1::__cxa_begin_catch(void*) at ../../../../libstdc++-v3/libsupc++/eh_catch.cc:41\n\nNote that I had used -qualified.  It seems strange that we get a\nlocation for a namespaced symbol, but that happens because the minimal\nsymbol for that address is indeed called __cxa_begin_catch.\n\nThe real issue is that gdb is linked with\n-static-libgcc/-static-libstdc++.  And then, it _also_ ends up with\nshared libstc++ loaded:\n\n  (top-gdb) info sharedlibrary stdc++\n  From                To                  Syms Read   Shared Object Library\n  0x00007ffff2f4b380  0x00007ffff2ffc018  Yes         /lib64/libstdc++.so.6\n\nLocation 2.2 is set within libstdc++.so.6's range:\n\n  (top-gdb) p 0x00007ffff2f4b380 <= 0x00007ffff2f4ddb0 && 0x00007ffff2f4ddb0 < 0x00007ffff2ffc018\n  $1 = true\n\nSo due to -static-lib*, we end up with _two_ copies of the\n__cxa_begin_catch code:\n\n  (top-gdb) disassemble 0x0000000000b122b0\n  Dump of assembler code for function __cxa_begin_catch:\n     0x0000000000b122b0 <+0>:     push   %rbx\n     0x0000000000b122b1 <+1>:     mov    %rdi,%rbx\n     0x0000000000b122b4 <+4>:     callq  0xb11a80 <__cxa_get_globals>\n     0x0000000000b122b9 <+9>:     movabs $0xb8b1aabcbcd4d500,%rdx\n  ...\n\n  (top-gdb) disassemble 0x00007ffff2f4ddb0\n  Dump of assembler code for function __cxxabiv1::__cxa_begin_catch(void*):\n     0x00007ffff2f4ddb0 <+0>:     push   %rbx\n     0x00007ffff2f4ddb1 <+1>:     mov    %rdi,%rbx\n     0x00007ffff2f4ddb4 <+4>:     callq  0x7ffff2f4a090 <__cxa_get_globals@plt>\n     0x00007ffff2f4ddb9 <+9>:     movabs $0xb8b1aabcbcd4d500,%rdx\n  ...\n\nI think we end up with libstdc++.so.6 loaded because\nlibsource-highlight.so depends on it.\n\nIrrespective of whether it's a good idea to use\n-static-libgcc/-static-libstdc++, GDB should not crash.  Since there\nare two copies of the code, it seems right to have more than one\nlocation.  So the fix is just to remove the assertion.\n\nA testcase is included, which mimics the scenerio described above,\nwith binary linked with -static-lib{stdc++,gcc} and a shared library\nthat is linked normally, along with other combinations for good\nmeasure.\n\ngdb/ChangeLog:\n2019-07-09  Pedro Alves  <palves@redhat.com>\n\n\tPR c++/15468\n\t* breakpoint.c (print_one_breakpoint_location): Remove\n\tsingle-location assert.\n\ngdb/testsuite/ChangeLog:\n2019-07-09  Pedro Alves  <palves@redhat.com>\n\n\tPR c++/15468\n\t* gdb.cp/except-multi-location-lib.cc: New.\n\t* gdb.cp/except-multi-location-main.cc: New.\n\t* gdb.cp/except-multi-location.exp: New.",
    "tree": {
      "sha": "eaa30d30308c4ea5efa3804d4b0fec7ef68eebb0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eaa30d30308c4ea5efa3804d4b0fec7ef68eebb0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b58a68fe5709ed205c3ac54065f1783ce58d9a01",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b58a68fe5709ed205c3ac54065f1783ce58d9a01",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b58a68fe5709ed205c3ac54065f1783ce58d9a01",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b58a68fe5709ed205c3ac54065f1783ce58d9a01/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0826779b99b49f7f8df5d186f3c481b6007010d4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0826779b99b49f7f8df5d186f3c481b6007010d4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0826779b99b49f7f8df5d186f3c481b6007010d4"
    }
  ],
  "stats": {
    "total": 169,
    "additions": 162,
    "deletions": 7
  },
  "files": [
    {
      "sha": "de2b02ca42b0217ab5cbfcf9008e70de91113a19",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b58a68fe5709ed205c3ac54065f1783ce58d9a01/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b58a68fe5709ed205c3ac54065f1783ce58d9a01/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b58a68fe5709ed205c3ac54065f1783ce58d9a01",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-09  Pedro Alves  <palves@redhat.com>\n+\n+\tPR c++/15468\n+\t* breakpoint.c (print_one_breakpoint_location): Remove\n+\tsingle-location assert.\n+\n 2019-07-09  Tom Tromey  <tom@tromey.com>\n \n \t* contrib/ari/gdb_ari.sh: Change common to gdbsupport."
    },
    {
      "sha": "db46741fd1db538bf20850137d386fe48b2e132e",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 7,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b58a68fe5709ed205c3ac54065f1783ce58d9a01/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b58a68fe5709ed205c3ac54065f1783ce58d9a01/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=b58a68fe5709ed205c3ac54065f1783ce58d9a01",
      "patch": "@@ -6033,13 +6033,7 @@ print_one_breakpoint_location (struct breakpoint *b,\n \n   /* 5 and 6 */\n   if (b->ops != NULL && b->ops->print_one != NULL)\n-    {\n-      /* Although the print_one can possibly print all locations,\n-\t calling it here is not likely to get any nice result.  So,\n-\t make sure there's just one location.  */\n-      gdb_assert (b->loc == NULL || b->loc->next == NULL);\n-      b->ops->print_one (b, last_loc);\n-    }\n+    b->ops->print_one (b, last_loc);\n   else\n     switch (b->type)\n       {"
    },
    {
      "sha": "46a16470446c9598efeb33400b9f9f9a74ba1395",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b58a68fe5709ed205c3ac54065f1783ce58d9a01/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b58a68fe5709ed205c3ac54065f1783ce58d9a01/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b58a68fe5709ed205c3ac54065f1783ce58d9a01",
      "patch": "@@ -1,3 +1,10 @@\n+2019-07-09  Pedro Alves  <palves@redhat.com>\n+\n+\tPR c++/15468\n+\t* gdb.cp/except-multi-location-lib.cc: New.\n+\t* gdb.cp/except-multi-location-main.cc: New.\n+\t* gdb.cp/except-multi-location.exp: New.\n+\n 2019-07-09  Sergio Durigan Junior  <sergiodj@redhat.com>\n \n \t* gdb.base/printcmds.exp (test_printf_convenience_var): Set"
    },
    {
      "sha": "8767d756b3335eddf9fc00bb9021972ed600eabf",
      "filename": "gdb/testsuite/gdb.cp/except-multi-location-lib.cc",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b58a68fe5709ed205c3ac54065f1783ce58d9a01/gdb/testsuite/gdb.cp/except-multi-location-lib.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b58a68fe5709ed205c3ac54065f1783ce58d9a01/gdb/testsuite/gdb.cp/except-multi-location-lib.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/except-multi-location-lib.cc?ref=b58a68fe5709ed205c3ac54065f1783ce58d9a01",
      "patch": "@@ -0,0 +1,25 @@\n+/* Copyright 2019 Free Software Foundation, Inc.\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+void\n+trycatch_lib ()\n+{\n+  try\n+    {\n+      throw 1;\n+    }\n+  catch (...)\n+    {\n+    }\n+}"
    },
    {
      "sha": "161897a22eea31acaae647154bcc58e61af254e0",
      "filename": "gdb/testsuite/gdb.cp/except-multi-location-main.cc",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b58a68fe5709ed205c3ac54065f1783ce58d9a01/gdb/testsuite/gdb.cp/except-multi-location-main.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b58a68fe5709ed205c3ac54065f1783ce58d9a01/gdb/testsuite/gdb.cp/except-multi-location-main.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/except-multi-location-main.cc?ref=b58a68fe5709ed205c3ac54065f1783ce58d9a01",
      "patch": "@@ -0,0 +1,36 @@\n+/* Copyright 2019 Free Software Foundation, Inc.\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+extern void trycatch_lib ();\n+\n+void\n+trycatch_main ()\n+{\n+  try\n+    {\n+      throw 1;\n+    }\n+  catch (...)\n+    {\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  trycatch_lib ();\n+  trycatch_main ();\n+\n+  return 0;\n+}"
    },
    {
      "sha": "60d6d0b935141d5bf14acffa0a73410316532da1",
      "filename": "gdb/testsuite/gdb.cp/except-multi-location.exp",
      "status": "added",
      "additions": 87,
      "deletions": 0,
      "changes": 87,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b58a68fe5709ed205c3ac54065f1783ce58d9a01/gdb/testsuite/gdb.cp/except-multi-location.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b58a68fe5709ed205c3ac54065f1783ce58d9a01/gdb/testsuite/gdb.cp/except-multi-location.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/except-multi-location.exp?ref=b58a68fe5709ed205c3ac54065f1783ce58d9a01",
      "patch": "@@ -0,0 +1,87 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Regression test for a GDB internal error that would trigger if a\n+# \"catch catch\" catchpoint ended up with multiple locations.  This\n+# testcase exercises that scenario by building the binary with\n+# -static-libgcc/-static-libstdc++ and a shared library that depends\n+# on the libstc++.so DSO (which is how GDB was built and revealed the\n+# bug), and vice versa.\n+\n+if {[skip_shlib_tests]} {\n+    return 0\n+}\n+\n+# STATIC_BIN indicates whether to build the main binary with\n+# -static-libgcc/-static-libstdc++.  STATIC_LIB is the same, but for\n+# the shared library.\n+proc test_multi_libstdcpp {static_bin static_lib} {\n+    global srcdir subdir\n+    global decimal hex\n+\n+    # Library file.\n+    set libname \"except-multi-location-lib\"\n+    set srcfile_lib ${srcdir}/${subdir}/${libname}.cc\n+    set binfile_lib [standard_output_file ${libname}-$static_bin-$static_lib.so]\n+    set lib_flags {debug c++}\n+    if {$static_lib} {\n+\tlappend lib_flags additional_flags=-static-libgcc additional_flags=-static-libstdc++\n+    }\n+\n+    # Binary file.\n+    set testfile \"except-multi-location-main\"\n+    set srcfile ${srcdir}/${subdir}/${testfile}.cc\n+    set binfile [standard_output_file ${testfile}-$static_bin-$static_lib]\n+    set bin_flags [list debug c++ shlib=${binfile_lib}]\n+    if {$static_bin} {\n+\tlappend bin_flags additional_flags=-static-libgcc additional_flags=-static-libstdc++\n+    }\n+\n+    if { [gdb_compile_shlib ${srcfile_lib} ${binfile_lib} $lib_flags] != \"\"\n+\t || [gdb_compile ${srcfile} ${binfile} executable $bin_flags] != \"\" } {\n+\tuntested \"failed to compile\"\n+\treturn -1\n+    }\n+\n+    clean_restart\n+\n+    gdb_load ${binfile}\n+    gdb_load_shlib $binfile_lib\n+\n+    if ![runto_main] {\n+\tfail \"can't run to main\"\n+\treturn 0\n+    }\n+\n+    gdb_test \"catch catch\" \"Catchpoint \\[0-9\\]+ \\\\(catch\\\\)\" \\\n+\t\"catch catch\"\n+    gdb_test \"catch throw\" \"Catchpoint \\[0-9\\]+ \\\\(throw\\\\)\" \\\n+\t\"catch throw\"\n+    gdb_test \"catch rethrow\" \"Catchpoint \\[0-9\\]+ \\\\(rethrow\\\\)\" \\\n+\t\"catch rethrow\"\n+\n+    set ws \"\\[ \\t\\]*\"\n+    gdb_test \"info breakpoints\" \\\n+\t[multi_line \\\n+\t     \"${decimal}${ws}breakpoint${ws}keep${ws}y${ws}${hex}${ws}exception catch\" \\\n+\t     \"${decimal}${ws}breakpoint${ws}keep${ws}y${ws}${hex}${ws}exception throw\" \\\n+\t     \"${decimal}${ws}breakpoint${ws}keep${ws}y${ws}${hex}${ws}exception rethrow\"]\n+}\n+\n+# Try different static/not-static combinations.\n+foreach_with_prefix static_lib {\"0\" \"1\"} {\n+    foreach_with_prefix static_bin {\"0\" \"1\"} {\n+\ttest_multi_libstdcpp $static_lib $static_bin\n+    }\n+}"
    }
  ]
}