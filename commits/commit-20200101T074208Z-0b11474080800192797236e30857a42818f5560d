{
  "sha": "0b11474080800192797236e30857a42818f5560d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGIxMTQ3NDA4MDgwMDE5Mjc5NzIzNmUzMDg1N2E0MjgxOGY1NTYwZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-01T07:37:11Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-01T07:42:08Z"
    },
    "message": "ChangeLog rotation",
    "tree": {
      "sha": "e3f32443a35f2507ca5c782df4d92556b4bbb9b6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e3f32443a35f2507ca5c782df4d92556b4bbb9b6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0b11474080800192797236e30857a42818f5560d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b11474080800192797236e30857a42818f5560d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0b11474080800192797236e30857a42818f5560d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b11474080800192797236e30857a42818f5560d/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e5d78223eaf178ebb23aa20f209f71497aaae722",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e5d78223eaf178ebb23aa20f209f71497aaae722",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e5d78223eaf178ebb23aa20f209f71497aaae722"
    }
  ],
  "stats": {
    "total": 32266,
    "additions": 16196,
    "deletions": 16070
  },
  "files": [
    {
      "sha": "43dd3f31db701088338730ebc7579da09d72f8a1",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 3173,
      "changes": 3175,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=0b11474080800192797236e30857a42818f5560d"
    },
    {
      "sha": "003f013b41537b3721bd1c30161a96712cbf03f2",
      "filename": "bfd/ChangeLog-2019",
      "status": "added",
      "additions": 3185,
      "deletions": 0,
      "changes": 3185,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/bfd/ChangeLog-2019",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/bfd/ChangeLog-2019",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog-2019?ref=0b11474080800192797236e30857a42818f5560d"
    },
    {
      "sha": "43dd3f31db701088338730ebc7579da09d72f8a1",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 1513,
      "changes": 1515,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=0b11474080800192797236e30857a42818f5560d",
      "patch": "@@ -1,1517 +1,6 @@\n-2019-12-30  Alan Modra  <amodra@gmail.com>\n-\n-\t* od-macho.c: Include elfcomm.h.\n-\t(dump_dyld_info_rebase, dump_dyld_info_bind): Fix read_leb128 args.\n-\t(dump_dyld_info_export_1, dump_segment_split_info): Likewise.\n-\n-2019-12-23  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* dwarf.c (display_debug_lines_decoded): Cast printf parameter to\n-\tformat type to correct last change.\n-\n-2019-12-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* dwarf.h (read_leb128): Update prototype.\n-\t(report_leb_status): New inline function.\n-\t(SKIP_ULEB, SKIP_SLEB, READ_ULEB, READ_SLEB): Define.\n-\t* dwarf.c: Use above macros throughout file.  Formatting.\n-\t(read_leb128): Reorder params.  Add status return param.\n-\tDon't stop reading until finding terminator or end of data.\n-\tDetect loss of significant bits.  Sign extend only on\n-\tterminating byte.\n-\t(read_sleb128, read_uleb128): Delete functions.\n-\t(SKIP_ULEB, SKIP_SLEB, READ_ULEB, READ_SLEB): Delete macros.\n-\t(read_and_print_leb128): Rewrite.\n-\t(process_extended_line_op): Return a size_t.  Use size_t vars.\n-\tAdjust to suit new macros.  Add proper name size to \"data\" when\n-\tprocessing DW_LNE_define_file.\n-\t(process_abbrev_section): Adjust to suit new macros.\n-\t(decode_location_expression, skip_attr_bytes): Likewise.\n-\t(get_type_signedness): Likewise.\n-\t(read_and_display_attr_value): Likewise.  Consolidate block code.\n-\t(process_debug_info): Adjust to suit new macros.\n-\t(display_formatted_table, display_debug_lines_raw): Likewise.\n-\t(display_debug_lines_decoded): Likewise.  Properly check for end\n-\tof DW_LNS_extended_op.\n-\t(display_debug_macinfo): Adjust to suit new macros.\n-\t(get_line_filename_and_dirname, display_debug_macro): Likewise.\n-\t(display_view_pair_list): Likewise.  Don't back off when hitting\n-\tend of data.\n-\t(display_loc_list): Adjust to suit new macros.\n-\t(display_loclists_list, display_loc_list_dwo): Likewise.\n-\t(display_debug_rnglists_list, read_cie): Likewise.\n-\t(display_debug_frames): Likewise.\n-\t* readelf.c: Use new ULEB macros throughout file.\n-\t(read_uleb128): Delete.\n-\t(decode_arm_unwind_bytecode): Use read_leb128.\n-\t(decode_tic6x_unwind_bytecode): Likewise.\n-\t(display_tag_value): Adjust to suit new macros.\n-\t(display_arc_attribute, display_arm_attribute): Likewise.\n-\t(display_gnu_attribute, display_power_gnu_attribute): Likewise.\n-\t(display_s390_gnu_attribute, display_sparc_gnu_attribute): Likewise.\n-\t(display_mips_gnu_attribute, display_tic6x_attribute): Likewise.\n-\t(display_msp430x_attribute, display_msp430_gnu_attribute): Likewise.\n-\t(display_riscv_attribute, process_attributes): Likewise.\n-\n-2019-12-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* objdump.c (compare_section): New static var.\n-\t(compare_symbols): Sort by current section only.  Don't access\n-\tsymbol name out of bounds when checking for file symbols.\n-\tSort section symbols and object symbols.\n-\t(find_symbol_for_address): Remove bogus debugging and section\n-\tsymbol test.\n-\t(disassemble_data): Move symbol sort from here..\n-\t(disassemble_section): ..to here.  Set compare_section.\n-\n-2019-12-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objcopy.exp: Remove tic80 support.\n-\t* testsuite/binutils-all/objdump.exp: Likewise.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* od-xcoff.c (dump_dumpx_core): Adjust for bfd_h_get_8 change.\n-\n-2019-12-10  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24960\n-\t* objdump.c (disassemble_data): Call disassemble_free_target.\n-\n-2019-12-10  Alan Modra  <amodra@gmail.com>\n-\n-\t* objdump.c (struct objdump_disasm_info): Delete \"sec\".\n-\t(find_symbol_for_address): Use inf->section rather than aux->sec.\n-\t(objdump_print_addr, disassemble_bytes): Likewise.\n-\t(disassemble_section): Don't set aux->sec.\n-\n-2019-12-08  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (regexp_diff): Support #?REGEXP.\n-\n-2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* dwarf.c (regname_internal_riscv): New function.\n-\t(init_dwarf_regnames_riscv): Use new function.\n-\n-2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* dwarf.c (typedef dwarf_regname_lookup_ftype): New typedef.\n-\t(dwarf_regnames_lookup_func): New static global.\n-\t(init_dwarf_regnames_i386): Set dwarf_regnames_lookup_func.\n-\t(init_dwarf_regnames_iamcu): Likewise.\n-\t(init_dwarf_regnames_x86_64): Likewise.\n-\t(init_dwarf_regnames_aarch64): Likewise.\n-\t(init_dwarf_regnames_s390): Likewise.\n-\t(init_dwarf_regnames_riscv): Likewise.\n-\t(init_dwarf_regnames_by_elf_machine_code): Reset\n-\tdwarf_regnames_lookup_func to NULL.\n-\t(init_dwarf_regnames_by_bfd_arch_and_mach): Likewise.\n-\t(regname_internal_by_table_only): New function.\n-\t(regname): Make use of dwarf_regnames_lookup_func.\n-\n-2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* dwarf.c (init_dwarf_regnames_i386): Make static.\n-\t(init_dwarf_regnames_iamcu): Make static.\n-\t(init_dwarf_regnames_x86_64): Make static.\n-\t(init_dwarf_regnames_aarch64): Make static.\n-\t(init_dwarf_regnames_s390): Make static.\n-\t(init_dwarf_regnames_riscv): Make static.\n-\t* dwarf.h (init_dwarf_regnames_i386): Delete declaration.\n-\t(init_dwarf_regnames_iamcu): Delete declaration.\n-\t(init_dwarf_regnames_x86_64): Delete declaration.\n-\t(init_dwarf_regnames_aarch64): Delete declaration.\n-\t(init_dwarf_regnames_s390): Delete declaration.\n-\t(init_dwarf_regnames_riscv): Delete declaration.\n-\n-2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* dwarf.c (init_dwarf_regnames_by_bfd_arch_and_mach): New\n-\tfunction.\n-\t* dwarf.h (init_dwarf_regnames_by_bfd_arch_and_mach): Declare.\n-\t* objdump.c (dump_dwarf): Call new function instead of calling\n-\tspecific initialization routines.  Restrucure so that eh_addr_size\n-\tis still calculated correctly.\n-\n-2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* dwarf.c (init_dwarf_regnames): Renamed to...\n-\t(init_dwarf_regnames_by_elf_machine_code): ...this.\n-\t* dwarf.h (init_dwarf_regnames): Renamed to...\n-\t(init_dwarf_regnames_by_elf_machine_code): ...this.\n-\t* readelf.c (process_file_header): Update call to use new name.\n-\n-2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* dwarf.c (frame_need_space): Compare dwarf_regnames_count against\n-\t0, and only warn about large numbers of registers if the number is\n-\tmore than the dwarf_regnames_count.\n-\n-2019-11-25  Christian Eggers  <ceggers@gmx.de>\n-\n-\t* objdump.c (disassemble_data): Provide section parameter to\n-\tbfd_octets_per_byte.\n-\t(dump_section): likewise\n-\t(dump_section_header): likewise. Show SEC_ELF_OCTETS flag if set.\n-\n-2019-11-21  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 273\n-\t* size.c (sysv_internal_sizer, sysv_internal_printer): Exclude\n-\tsections with no flag bits set.\n-\t* testsuite/binutils-all/size.exp: Allow $CODE$ as a text section.\n-\n-2019-11-21  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objcopy.c (merge_gnu_build_notes): Allow for the possibility\n-\tthat the new notes might actually be larger than the original\n-\tnotes.\n-\n-2019-11-21  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (is_pecoff_format): Rewrite\n-\twith positive logic and add more target triples.\n-\n-2019-11-19  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24499\n-\t* objcopy.c (copy_file): Ignore --add-gnu-debuglink for archives.\n-\n-2019-11-19  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24968\n-\t* objcopy.c (copy_object): For ELF output and non-ELF input without\n-\tarch, take arch from output file if not given by -B.  Don't\n-\tbfd_get_arch_info when we already have iarch.\n-\n-2019-11-19  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25191\n-\t* objcopy.c (is_nondebug_keep_contents_section): Use bfd_get_flavour.\n-\t(copy_object): Likewise.\n-\t(setup_section): Likewise.  If flavour of input and output files\n-\tdiffer, restrict section flags to the intersection of input and\n-\toutput bfd_applicable_section_flags.\n-\n-2019-11-19  Alan Modra  <amodra@gmail.com>\n-\n-\t* bucomm.c (bfd_nonfatal_message): Add a space between program\n-\tname and file.\n-\n-2019-11-18  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25198\n-\t* prdbg.c (tg_start_class_type): Correct scope of idbuf.\n-\n-2019-11-08  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25172\n-\t* objdump.c (usage): Correct --stop-address description.\n-\n-2019-11-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* ar.c (open_output_file): Check for filename validity before\n-\tprefixing with output directory.\n-\tDisplay the constructed output filename if in verbose mode.\n-\t(extract_file): Let open_output_file display the filename.\n-\n-2019-11-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objcopy.c (copy_object): Skip note sections that do not have\n-\tan output section.  Always copy note sections, even if no\n-\tchanges are made.\n-\n-2019-11-06  Christian Eggers  <ceggers@gmx.de>\n-\n-\t* readelf.c (IN_RANGE): Rename parameter OFF to NELEM. Add\n-\tcomment.  Catch potential integer overflow and fix off by one\n-\terror whilst checking reloc location against section size.\n-\t(apply_relocations): Use IN_RANGE macro.\n-\n-2019-11-04  Fangrui Song  <maskray@google.com>\n-\n-\t* objcopy.c (enum option_values): Add OPTION_KEEP_SECTION.\n-\t(SECTION_CONTEXT_KEEP): Define.  Adjust other SECTION_CONTEXT macros.\n-\t(copy_usage): Describe --keep-section.\n-\t(strip_usage): Likewise.\n-\t(copy_main): Handle SECTION_CONTEXT_KEEP.\n-\t(strip_main): Likewise.\n-\t(is_strip_section_1): Likewise.\n-\t* testsuite/binutils-all/objcopy.exp: Add tests.\n-\t* testsuite/binutils-all/keep-section-1.d: New test driver file.\n-\t* testsuite/binutils-all/keep-section-2.d: Likewise.\n-\t* doc/binutils.texi: Document the new feature.\n-\t* NEWS: Mention the new feature.\n-\n-2019-10-20  Palmer Dabbelt  <palmer@sifive.com>\n-\n-        * MAINTAINERS: Change palmer@sifive.com to palmer@dabbelt.com.\n-\n-2019-10-30  Fangrui Song  <i@maskray.me>\n-\t    Nick Clifton  <nickc@redhat.com>\n-\n-\t* ar.c (emum long option numbers): Declare.  Use to provide\n-\tnumerical values for long options.\n-\t(long_options): Add --output option.\n-\t(usage): Mention the --output option.\n-\t(open_output_file): New function.  Create a filepath for an output\n-\tfile and open it.\n-\t(extract_file): Use open_output_file().\n-\t(open_output_file):\n-\t* testsuite/binutils-all/ar.exp: Add a test of the new feature.\n-\t* doc/binutils.texi: Document the new feature.\n-\t* NEWS: Mention the new feature.\n-\n-2019-10-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* objcopy.c (sort_gnu_build_notes): Correct sort of deleted\n-\tnote2.\n-\n-2019-10-25  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elfedit.c (elf_x86_feature): Report unknown x86 feature.\n-\n-2019-10-25  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elfedit.c (update_gnu_property): Replace BYTE_PUT with byte_put.\n-\n-2019-10-25  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objcopy.c (struct merged_note_section): New structure.  Used to\n-\tchain together details of mergeable note sections.\n-\t(is_merged_note_section): Rename to is_megreable_note_section and\n-\treturn true for note sections that use GNU_BUILD_ATTRS_SECTION_NAME\n-\tas a prefix.\n-\t(num_bytes): Delete\n-\t(objcoopy_internal_note): Add padded_namesz field.\n-\t(DEBUG_MERGE): New macro.  Set to non-zero to enable debugging of\n-\tthe note merging code.\n-\t(gap_exists): Rename to overlaps_or_adjoins and return TRUE for\n-\toverlapping notes or adjoining notes.\n-\t(contained_by, is_deleted_note, is_version_note)\n-\t(compare_gnu_build_notes, sort_gnu_build_notes): New functions.\n-\t(merge_gnu_build_notes):  Rework.  Sort notes into a mergeable\n-\torder first.  Merge them.  Then sort them into an ascending\n-\taddress order before writing them out.\n-\t(copy_object): Handle more than one mergeable note section.\n-\t* testsuite/binutils-all/note-2-32.d: Update for new merging\n-\tbehaviour.\n-\t* testsuite/binutils-all/note-2-32.s: Likewise.\n-\t* testsuite/binutils-all/note-2-64.d: Likewise.\n-\t* testsuite/binutils-all/note-2-64.s: Likewise.\n-\t* testsuite/binutils-all/note-3-32.d: Likewise.\n-\t* testsuite/binutils-all/note-3-32.s: Likewise.\n-\t* testsuite/binutils-all/note-3-64.d: Likewise.\n-\t* testsuite/binutils-all/note-3-64.s: Likewise.\n-\t* testsuite/binutils-all/note-4-32.d: Likewise.\n-\t* testsuite/binutils-all/note-4-32.s: Likewise.\n-\t* testsuite/binutils-all/note-4-64.d: Likewise.\n-\t* testsuite/binutils-all/note-4-64.s: Likewise.\n-\t* testsuite/binutils-all/note-6-32.s: New test source file.\n-\t* testsuite/binutils-all/note-6-64.s: New test source file.\n-\t* testsuite/binutils-all/note-6-32.d: New test driver file.\n-\t* testsuite/binutils-all/note-6-64.d: New test driver file.\n-\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n-\n-2019-10-25  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_program_headers): Check PT_PHDR p_offset\n-\tas well as p_vaddr.  Use p_filesz, not p_memsz, in vaddr test.\n-\n-2019-10-21  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 452\n-\tPR 25104\n-\t* ar.c (write_archive): Set BFD_ARCHIVE_FULL_PATH.\n-\t* doc/binutils.texi (extract from archive): Mention\n-\trestrictions when extracting from archives with full paths.\n-\t(ar P): Update to current P support.\n-\t(ar -X32_64): Fix spelling.\n-\n-2019-10-14  Alan Modra  <amodra@gmail.com>\n-\n-\t* objcopy.c (compare_section_lma): Correct comment.  Dereference\n-\tsection pointer earlier and lose unnecessary const.  Style fixes.\n-\tAdd final sort by id.\n-\n-2019-10-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Add a note to reset the\n-\tdevelopment flag back to true after making a point release.\n-\n-2019-10-12  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Tweak a few sections based on the\n-\tresults of the 2.33.1 release.\n-\n-2019-10-11  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/zh_TW.po: Updated Chinese (traditional) translation.\n-\n-2019-10-09  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25079\n-\t* ar.c (decode_options): Don't try for command options if\n-\twrite_armap or mri_mode is selected.\n-\n-2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n-\n-\t* readelf.c (display_msp430_gnu_attribute): New.\n-\t(process_arch_specific): Use msp430 specific handler for GNU\n-\tattributes.\n-\n-2019-09-30  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* objdump.c (main): Fix tabdamage.\n-\t* readelf.c (CTF_DUMP): Likewise.\n-\t(options): Likewise.\n-\t(dump_section_as_ctf): Likewise.\n-\n-2019-08-03  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* objdump.c (dump_ctf): Use the default CTF archive member as the\n-\tparent even when no parent section is specified.\n-\t(dump_ctf_archive_member): Only import from the parent\n-\tif this is not the default \".ctf\" member.\n-\n-2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* Makefile.am (LIBCTF): Mention the .la file.\n-\t(LIBCTF_NOBFD): New.\n-\t(readelf_DEPENDENCIES): Use it.\n-\t(readelf_LDADD): Likewise.\n-\t* Makefile.in: Regenerated.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* readelf.c (dump_ctf_symtab_name): Give default value.\n-\t(dump_ctf_strtab_name): Likewise.\n-\t(dump_section_as_ctf): Allow for the null string.\n-\n-2019-07-08  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* objdump.c (dump_ctf_archive_member): Dump the CTF header.\n-\t* readelf.c (dump_section_as_ctf): Likewise.\n-\n-2019-10-02  Niklas G\u00fcrtler  <profclonk@gmail.com>\n-\n-\tPR 24942\n-\t* objcopy.c (copy_usage): Update description of\n-\t--set-section-alignment.\n-\t(copy_main): Interpret numeric argument of --set-section-alignment\n-\tas a byte alignment, not a power of two alignment.\n-\t* doc/binutils.texi: Update description of\n-\t--set-section-alignment.\n-\t* testsuite/binutils-all/set-section-alignment.d: New test.\n-\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n-\n-2019-09-30  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25046\n-\t* readelf.c (process_program_headers): Clear dynamic_addr and\n-\tdynamic_size earlier.\n-\n-2019-09-24  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25031\n-\t* nm.c (print_format_string): New.\n-\t(get_print_format): Delete saved_format.  Move earlier.\n-\t(set_print_width): Call get_print_format.\n-\t(print_value): Use print_format_string.\n-\n-2019-09-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* dlltool.c: Include coff-bfd.h.\n-\n-2019-09-23  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25018\n-\t* dwarf.c (get_type_signedness): Delete ineffective pointer\n-\tcomparison check.  Properly range check uvalue offset on\n-\trecursive call.\n-\t(read_and_display_attr_value): Range check uvalue offset before\n-\tcalling get_type_signedness.\n-\n-2019-09-20  Alan Modra  <amodra@gmail.com>\n-\n-\t* ar.c (write_archive): Use bfd_set_thin_archive.\n-\n-2019-09-18  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* testsuite/binutils-all/objdump.exp (objump -S): Update testcases.\n-\n-2019-09-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* addr2line.c, * bucomm.c, * coffgrok.c, * dlltool.c, * nm.c,\n-\t* objcopy.c, * objdump.c, * od-elf32_avr.c, * od-macho.c,\n-\t* od-xcoff.c, * prdbg.c, * rdcoff.c, * rddbg.c, * rescoff.c,\n-\t* resres.c, * size.c, * srconv.c, * strings.c, * windmc.c: Update\n-\tthroughout for bfd section macro and function changes.\n-\n-2019-09-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* nm.c: Update bfd_get_section to bfd_asymbol_section throughout.\n-\t* objcopy.c: Likewise.\n-\t* objdump.c: Likewise.\n-\t* rdcoff.c: Likewise.\n-\t* objcopy.c (create_new_symbol): Use bfd_set_asymbol_name.\n-\t(filter_symbols): Likewise.\n-\n-2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n-\n-\t* doc/Makefile.am (MOSTLYCLEANFILES): Clean all man pages,\n-\tcxxfilt.man and binutils.info.\n-\t(MAINTAINERCLEANFILES): Remove.\n-\t* doc/Makefile.in: Re-generate.\n-\n-2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n-\n-\t* doc/Makefile.am: Remove references to binutils_TEXINFOS.\n-\t* doc/Makefile.in: Re-generate.\n-\n-2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n-\n-\t* doc/Makefile.am (install-data-loca): Remove target.\n-\t(DISTCLEANFILES): Remove variable.\n-\t* doc/Makefile.in: Re-generate.\n-\n-2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n-\n-\t* Makefile.in: Re-generate.\n-\t* configure: Re-generate.\n-\t* doc/Makefile.in: Re-generate.\n-\n-2019-09-16  Phil Blundell  <pb@pbcl.net>\n-\n-\t* Makefile.in, configure. doc/Makefile.in: Regenerated.\n-\n-2019-09-11  Tom Tromey  <tom@tromey.com>\n-\n-\t* objcopy.c (copy_archive): Update.\n-\t* bucomm.h (make_tempname, make_tempdir): Make argument const.\n-\t* bucomm.c (make_tempname, make_tempdir): Make argument const.\n-\n-2019-09-11  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24907\n-\t* objdump.c (disassemble_bytes): Adjust code to avoid overlong\n-\tlines.  Correct max_reloc_offset_into_insn test.\n-\n-2019-09-10  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24907\n-\t* objdump.c (null_print): New function.\n-\t(disassemble_bytes): Delete previous_octets local and replace with\n-\ta test of the max_reloc_offset_into_insn field of the\n-\tbfd_arch_info structure.  If a reloc is a potential match for the\n-\tnext insn, then perform a dummy disassembly in order to calculate\n-\tits real length.\n-\n-2019-09-09  Phil Blundell  <pb@pbcl.net>\n-\n-\tbinutils 2.33 branch created.\n-\n-2019-09-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* nm.c (print_object_filename_bsd, print_object_filename_sysv),\n-\t(print_object_filename_posix, print_archive_filename_bsd),\n-\t(print_archive_filename_sysv, print_archive_filename_posix),\n-\t(print_archive_member_bsd, print_archive_member_sysv),\n-\t(print_archive_member_posix): Constify parameter.\n-\t(struct output_fns <print_object_filename, print_archive_filename>),\n-\t(<print_archive_member>): Likewise.\n-\t* objcopy.c (copy_archive): Add cast for make_tempdir.\n-\n-2019-08-29  Alan Modra  <amodra@gmail.com>\n-\n-\t* dwarf.c (check_uvalue): Remove unnecessary pointer checks.\n-\n-2019-08-28  Niklas G\u00fcrtler  <profclonk@gmail.com>\n-\n-\tPR 24942\n-\t* objcopy.c (SECTION_CONTEXT_SET_ALIGNMENT): New constant.\n-\t(struct section_list): Add alignment field.\n-\t(command_line_switch): Add OPTION_SET_SECTION_ALIGNMENT.\n-\t(copy_options): Add --set-section-alignment.\n-\t(copy_usage): Describe --set-section-alignment.\n-\t(find_section_list): Initialise the alignment field.\n-\t(setup_section): Handle the alignment field.\n-\t(copy_main): Handle OPTION_SET_SECTION_ALIGNMENT.\n-\t* doc/binutils.texi: Document the new feature.\n-\t* NEWS: Mention the new feature.\n-\n-2019-08-28  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24931\n-\t* objdump.c (source_comment): New static variable.\n-\t(option_values): Add OPTION_SOURCE_COMMENT.\n-\t(long_opions): Add --source-comment.\n-\t(print_line): If source comment is set, use it as a prefix to the\n-\tsource code line.\n-\t(main): Handle OPTION_SOURCE_COMMENT.\n-\t* doc/binutils.texi: Document the new option.\n-\t* NEWS: Mention the new feature.\n-\t* testsuite/binutils-all/objdump.exp (test_objdump_S): Add tests\n-\tof the -S and --source-comment options.\n-\n-2019-08-27  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24510\n-\t* dwarf.c (MAX_CU_NESTING): New constant.\n-\t(level_type_signed): New static array.\n-\t(skip_attr_bytes): New function.\n-\t(get_type_signedness): New function.\n-\t(read_and_print_leb128): New function.\n-\t(display_discr_list): New function.\n-\t(read_and_display_attr_value): Add start parameter.\n-\tUse new functions when handling DW_AT_type and DW_AT_discr_list.\n-\t(read_and_display_attr): Add start parameter.  Pass to\n-\tread_and_display_attr_value.\n-\t(process_debug_info): Update call to read_and_display_attr.\n-\t(display_formatted_table): Likewise.\n-\t(display_debug_lines_decoded): Likewise.  Also add start\n-\tparameter.\n-\t(display_debug_lines): Likewise.\n-\t* testsuite/binutils-all/dwarf-attributes.S: Update discrimination\n-\tlists.\n-\t* testsuite/binutils-all/dwarf-attributes.W: Update expected\n-\toutput.\n-\n-2019-08-26  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24938\n-\t* debug.c (debug_write_type): Call empty_type for NULL type here..\n-\t(debug_write_type): ..rather than in just one case here.\n-\n-2019-08-23  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24829\n-\t* dwarf.c (check_uvalue): New function.  Ensures that a block's\n-\tsize is valid.\n-\t(read_and_display_attr_value): Use check_value when processsing\n-\tDW_FORM_block<n> attributes.\n-\n-2019-08-22  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24921\n-\t* dwarf.c (process_cu_tu_index): Handle the case where a table\n-\tdoes not have any columns.\n-\n-2019-08-19  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24898\n-\t* dwarf.c (display_debug_frames): Use the read_cie check and error\n-\tfor augmentation data length.\n-\n-2019-08-17  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24911\n-\t* dwarf.c (comp_addr_base): Dereference args.\n-\n-2019-08-16  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24909\n-\tPR 23499\n-\t* readelf.c (get_symbol_version_string): Set sym_info earlier.\n-\n-2019-08-15  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24767\n-\t* doc/binutils.texi (nm): Document the 'n' symbol type.\n-\n-2019-08-15  Christophe Vidal  <support@krizalys.com>\n-\n-\t* docs/binutils.texi: Fixed notice message disassembler options\n-\tsection of the man page.\n-\n-2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>\n-\n-\t* readelf.c (get_mips_dynamic_type): Return MIPS_XHASH dynamic type.\n-\t(get_mips_section_type_name): Return MI{S_XHASH name string.\n-\t(dynamic_section_mips_val): Initialize the .MIPS.xhash dynamic\n-\tinfo.\n-\t(process_symbol_table): Initialize the .MIPS.xhash section\n-\tpointer. Adjust the readelf output to support the new section.\n-\t(process_object): Set the .MIPS.xhash dynamic info to zero.\n-\n-2019-08-09  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* testsuite/binutils-all/arm/in-order-all.d: Skip on pe, wince, coff.\n-\t* testsuite/binutils-all/arm/in-order.d: Likewise.\n-\t* testsuite/binutils-all/arm/out-of-order-all.d: Likewise.\n-\t* testsuite/binutils-all/arm/out-of-order.d: Likewise.\n-\n-2019-08-08  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24887\n-\t* readelf.c (process_notes_at): Left justify the \"Data size\"\n-\tcolumn heading.\n-\t* testsuite/binutils-all/i386/empty.d: Adjust for new output format.\n-\t* testsuite/binutils-all/i386/ibt.d: Likewise.\n-\t* testsuite/binutils-all/i386/pr21231a.d: Likewise.\n-\t* testsuite/binutils-all/i386/pr21231b.d: Likewise.\n-\t* testsuite/binutils-all/i386/shstk.d: Likewise.\n-\t* testsuite/binutils-all/note-2-32.d: Likewise.\n-\t* testsuite/binutils-all/note-2-64.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/empty.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/ibt-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/ibt.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr21231a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/shstk-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/shstk.d: Likewise.\n-\n-2019-08-08  Nick Clifton  <nickc@redhat.com>\n-\n-\t* testsuite/gentestdlls.c (main): Move declaration of loop\n-\tvariable outside of the for() statement.\n-\n-2019-08-08  Jordan Rupprecht  <rupprecht@google.com>\n-\n-\t* readelf.c (process_note): Mask unknown description data bytes.\n-\n-2019-08-08  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (get_data): Improve overflow checks.\n-\n-2019-08-07  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24777\n-\t* doc/binutils.texi: Ensure consistent formating of title strings\n-\tfor man pages.  Extend the title of the size man page to be more\n-\tinformative.\n-\n-2019-08-07  Omair Majid  <omajid@redhat.com>\n-\n-\t* testsuite/binutils-all/objdump.exp\n-\t(test_objdump_dotnet_assemblies): Fix test to distinguish errors\n-\tin parsing simple pei-i386 and pei-x86-64 vs parsing the newly\n-\tintroduced machine types.\n-\t* testsuite/gentestdlls.c (write_simple_dll): New function.\n-\t(main): Generate simple and Linux-specific variants of pei-i386\n-\tand pei-x86-64 files so both can be used by tests.\n-\n-2019-08-07  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24876\n-\t* readelf.c (dump_ia64_unwind): Check that buffer is large\n-\tenough for \"stamp\" before reading.\n-\n-2019-08-05  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24874\n-\t* objcopy.c (merge_gnu_build_notes): Do not insist on the first\n-\tnote being a version note.\n-\tRemove spurious debugging fprintf.\n-\n-2019-08-05  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24829\n-\t* readelf.c (apply_relocations): Catch potential integer overflow\n-\twhilst checking reloc location against section size.\n-\n-2019-08-02  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24871\n-\t* readelf.c (ABSADDR): Delete.\n-\t(dump_ia64_unwind): Expand ABSADDR.  Check validity of info.section.\n-\n-2019-07-29  Martin Liska  <mliska@suse.cz>\n-\n-\tPR 24768\n-\t* nm.c (filter_symbols): Set report_plugin_err if\n-\terror is reported.\n-\t(display_rel_file): Report error for a missing LTO plugin.\n-\n-2019-07-26  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24798\n-\t* dwarf.c (process_cu_tu_index): Avoid integer overflow on 64-bit\n-\tsystems by casting ncols and nslots expressions to size_t.  Display\n-\tnumber of columns and slots before giving up due to buffer overflow.\n-\tUse %u to display unsigned ints.  Perform more pointer wrap tests.\n-\n-2019-07-25  Tom Tromey <tromey@adacore.com>\n-\n-\tPR 24809\n-\t* dwarf.c (display_debug_names): Display the contents of the\n-\taugmentation string, if it is printable.\n-\n-2019-07-25  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24837\n-\t* readelf.c (process_mips_specific): Check for buffer overflow\n-\tbefore reading reginfo information.\n-\n-2019-07-24  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 13256\n-\t* ar.c (decode_options): Restart option scanning if no operation\n-\tis detected and argument remain to be scanned.\n-\n-2019-07-23  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24818\n-\t* objdump.c (is_relocateable): Delete.\n-\t(load_specific_debug_section): Test the abfd for relocations\n-\tdirectly, rather than relying upon is_relocateable.\n-\t(dump_dwarf): Delete initlialization of is_relocateable.\n-\n-2019-07-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (get_parisc_segment_type): Split off hpux entries..\n-\t(get_ia64_segment_type): ..and these..\n-\t(get_hpux_segment_type): ..to here.\n-\t(get_segment_type): Condition GNU_MBIND on osabi.  Use\n-\tget_hpux_segment_type.\n-\t(get_symbol_binding): Do not print UNIQUE for ELFOSABI_NONE.\n-\t(get_symbol_type): Do not print IFUNC for ELFOSABI_NONE.\n-\n-2019-07-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objcopy.exp (elf64): Correct object\n-\tfile used to set this variable.\n-\n-2019-07-23  Omar Majid  <omajid@redhat.com>\n-\n-\t* Makefile.am (AUTOMAKE_OPTIONS): Add subdir-objects\n-\t(GENTESTDLLSPROG): Define.\n-\t(TEST_PROGS): Add GENTESTDLLSPROG.\n-\t* Makefile.in: Regenerate.\n-\t* testsuite/binutils-all/objdump.exp\n-\t(test_objdump_dotnet_assemblies): New proc.\n-\tRun the new proc.\n-\t* testsuite/gentestdlls.c: New source file.\n-\n-2019-06-28  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24707\n-\t* objdump.c (slurp_symtab): Fail with a helpful error message if\n-\tthe symbol table is too large.  Skip this check for MMO format\n-\tfiles.\n-\n-2019-06-26  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24703\n-\t* bucomm.c (bfd_nonfatal): If no bfd error code has been set then\n-\tindicate this in the output.\n-\t(bfd_nonfatal_message): Likewise.\n-\n-2019-06-25  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* readelf.c (dump_ctf_indent_lines): Rename local variable\n-\t\"spaces\" to \"blanks\".\n-\n-2019-06-25  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* objdump.c (dump_ctf_indent_lines): Rename local variable\n-\t\"spaces\" to \"blanks\".\n-\n-2019-06-14  Alan Modra  <amodra@gmail.com>\n-\n-\t* Makefile.in: Regenerate.\n-\t* aclocal.m4: Regenerate.\n-\t* doc/Makefile.in: Regenerate.\n-\n-2019-06-12  Christos Zoulas  <christos@zoulas.com>\n-\n-\tPR 24663\n-\t* readelf.c (process_netbsd_elf_note): Add support for\n-\tNT_NETBSD_PAX.\n-\t(process_note): Add support for PaX notes.\n-\n-2019-06-12  Christos Zoulas  <christos@zoulas.com>\n-\n-\tPR 24665\n-\t* readelf.c (get_netbsd_elfcore_note_type): Add support for SH\n-\tcore notes.\n-\n-2019-06-12  Christos Zoulas  <christos@zoulas.com>\n-\n-\tPR 24664\n-\t* readelf.c (get_netbsd_elfcore_note_type): Add support for NetBSD\n-\tauxv notes.\n-\n-2019-06-11  Christos Zoulas  <christos@zoulas.com>\n-\n-\tPR 24662\n-\t* readelf.c (get_alpha_symbol_other): New function.\n-\t(get_symbol_other): Use for Alpha symbols.\n-\t(is_32bit_pcrel_reloc): Add R_VAX_PCREL32.\n-\n-2019-06-11  Christos Zoulas  <christos@zoulas.com>\n-\n-\tPR 24661\n-\t* readelf.c (decode_arm_unwind): Ensure that the local variable\n-\t'addr' is always initialised.\n-\n-2019-06-10  Christos Zoulas  <christos@zoulas.com>\n-\n-\tPR 24651\n-\t* strings.c (print_strings): Use %u to print unsigned values in\n-\tdecimal.\n-\n-2019-06-10  Christos Zoulas  <christos@zoulas.com>\n-\n-\tPR 24649\n-\t* arsup.c (ar_open): Use asprintf in place of xmalloc and\n-\tsprintf.\n-\n-2019-06-03  Nick Clifton  <nickc@redhat.com>\n-\n-\tRevert:\n-\t2019-05-29  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure.ac (LIBCTF): Export.  Set to empty for non-ELF based\n-\ttargets.\n-\t(HAVE_LIBCTF): Define if libctf support is available.\n-\t* Makefile.am (LIBCTF): Set value to @LIBCTF@.\n-\t* objdump.c: Make CTF code conditional upon HAVE_LIBCTF being\n-\tdefined.\n-\t* readelf.c: Likewise.\n-\t* configure: Regenerate.\n-\t* Makefile.in: Regenerate.\n-\t* config.in: Regenerate.\n-\n-2019-05-30  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* objdump.c (make_ctfsect): Drop cts_type, cts_flags, and\n-\tcts_offset.\n-\t* readelf.c (shdr_to_ctf_sect): Likewise.\n-\n-2019-05-30  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24627\n-\t* readelf.c (process_version_sections): Add 0x prefix to address\n-\tdisplay.  Correct indentation.\n-\n-2019-05-30  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (supports_gnu_unique): Add\n-\ts12z to targets not supporting this feature.\n-\n-2019-05-30  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (run_dump_test): Support\n-\ttcl procedures for xfail args.\n-\n-2019-05-29  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Add libctf to list of directories\n-\tthat need updates in their ChangeLogs.\n-\n-2019-05-29  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure.ac (LIBCTF): Export.  Set to empty for non-ELF based\n-\ttargets.\n-\t(HAVE_LIBCTF): Define if libctf support is available.\n-\t* Makefile.am (LIBCTF): Set value to @LIBCTF@.\n-\t* objdump.c: Make CTF code conditional upon HAVE_LIBCTF being\n-\tdefined.\n-\t* readelf.c: Likewise.\n-\t* configure: Regenerate.\n-\t* Makefile.in: Regenerate.\n-\t* config.in: Regenerate.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* MAINTAINERS: Add myself as CTF maintainer.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* objdump.c (ctf-api.h): New include.\n-\t(dump_ctf_section_info): New variable.\n-\t(dump_ctf_section_name): Likewise.\n-\t(usage): Describe new options.\n-\t(enum option_values): Add OPTION_CTF and OPTION_CTF_PARENT.\n-\t(main): Use them to add --ctf and --ctf-parent.\n-\t(read_section_stabs): Add new parameter, entsize_ptr.\n-\t(find_stabs_section): Adjust accordingly.\n-\t(make_ctfsect): New.\n-\t(dump_ctf_indent_lines): New.\n-\t(dump_ctf_archive_member): New.\n-\t(dump_ctf): New.\n-\t(dump_bfd): Call it.  Free resources afterwards.\n-\t* readelf.c (ctf-api.h): New include.\n-\t(CTF_DUMP): New.\n-\t(static bfd_boolean do_ctf): Likewise.\n-\t(dump_ctf_parent_name): Likewise.\n-\t(dump_ctf_symtab_name): Likewise.\n-\t(dump_ctf_strtab_name): Likewise.\n-\t(OPTION_CTF_DUMP): Likewise.\n-\t(OPTION_CTF_PARENT): Likewise.\n-\t(OPTION_CTF_SYMBOLS): Likewise.\n-\t(OPTION_CTF_STRINGS): Likewise.\n-\t(options): Add them.\n-\t(usage): Likewise.\n-\t(parse_args): Handle the new options, requesting CTF_DUMP.\n-\t(process_section_contents): Handle CTF_DUMP.\n-\t(shdr_to_ctf_sect): New.\n-\t(dump_ctf_indent_lines): New.\n-\t(dump_section_as_ctf): New.\n-\t(main): Free resources.\n-\t* Makefile.am (LIBCTF): New variable.\n-\t(objdump_DEPENDENCIES): Use it.\n-\t(readelf_DEPENDENCIES): Likewise.\n-\t(objdump_LDADD): Likewise.\n-\t(readelf_LDADD): Likewise.\n-\t* aclocal.m4: Regenerated.\n-\t* Makefile.in: Likewise.\n-\n-\t* doc/binutils.texi (objdump): Document the new options.\n-\t(readelf): Likewise.\n-\t* doc/ctf.options.texi: New.\n-\t* doc/Makefile.in: Regenerated.\n-\t* NEWS: Mention the new feature.\n-\n-2019-05-27  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_section_groups): Continue processing groups\n-\twhen sh_entsize exceeds group size.\n-\n-2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n-\n-\t* readelf.c (get_aarch64_dynamic_type): Handle DT_AARCH64_VARIANT_PCS.\n-\t(get_aarch64_symbol_other): New, handles STO_AARCH64_VARIANT_PCS.\n-\t(get_symbol_other): Call get_aarch64_symbol_other.\n-\n-2019-05-24  Alan Modra  <amodra@gmail.com>\n-\n-\t* objdump.c (disassemble_bytes): Set WIDE_OUTPUT in flags.\n-\n-2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>\n-\n-\t* MAINTAINERS: Add myself as the maintainer for BPF.\n-\n-2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>\n-\n-\t* readelf.c: Include elf/bpf.h.\n-\t(guess_is_rela): Hanle EM_BPF.\n-\t(dump_relocations): Likewise.\n-\t(is_32bit_abs_reloc): Likewise.\n-\t* testsuite/binutils-all/nm.exp: Add bpf-*-* to the list of\n-\tELF targets.\n-\n-2019-05-21  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* dwarf.c (dwarf_regnames_aarch64): Add SVE registers.\n-\t* testsuite/binutils-all/aarch64/sve-dwarf-registers.d: New test.\n-\t* testsuite/binutils-all/aarch64/sve-dwarf-registers.s: New test.\n-\n-2019-05-20  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n-\n-\tPR 14798\n-\t* testsuite/binutils-all/readelf.ss-mips: Update reference output.\n-\t* testsuite/binutils-all/readelf.ss-tmips: Likewise.\n-\n-2019-05-20  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/ca.po: Updated Catalan translation.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\n-\t* NEWS: Mention Armv8.1-M Mainline and MVE.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\n-\t* readelf.c (arm_attr_tag_MVE_arch): New array for Tag_MVE_arch values.\n-\t(arm_attr_public_tag arm_attr_public_tags): Add case for Tag_MVE_arch.\n-\n-2019-05-14  Jamey Hicks  <jamey.hicks@gmail.com>\n-\n-\tPR 19921\n-\t* objcopy.c: Add new option --verilog-data-width.  Use it to set\n-\tthe value of VerilogDataWidth.\n-\t* doc/binutils.texi: Document the new option.\n-\t* testsuite/binutils-all/objcopy.exp: Run tests of new option.\n-\t* testsuite/binutils-all/verilog-1.hex: New file.\n-\t* testsuite/binutils-all/verilog-2.hex: New file.\n-\t* testsuite/binutils-all/verilog-4.hex: New file.\n-\t* testsuite/binutils-all/verilog-8.hex: New file.\n-\t* NEWS: Mention the new feature.\n-\n-2019-05-10  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objdump.exp (test_objdump_disas_limited),\n-\t(test_objdump_content_limited): Add text arg, use in place of .text.\n-\t(bintest_signed.o): Call get_standard_section_names for name of\n-\ttext section.\n-\n-2019-05-08  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n-\n-\t* objdump.c (sign_extend_address): New function.\n-\t(dump_bfd): Sign-extend user-specified start/stop addresses\n-\tfor targets that need it.\n-\t* testsuite/binutils-all/objdump.exp: Add tests for objdump\n-\twith start and stop addresses in higher address ranges.\n-\n-2019-05-01  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* testsuite/binutils-all/objdump.exp: Correct executable\n-\tspelling.\n-\t* testsuite/binutils-all/compress.exp: Likewise.\n-\n-2019-05-01  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24507\n-\t* nm.c: (print_format): New variable.\n-\t(value_format_32bit, value_format_64bit): Delete.\n-\t(set_print_radix): Remove code to alter value_format strings.\n-\t(set_output_format): Record chosen format in print_format.\n-\t(get_print_format): New function - constructs a printf formatting\n-\tstring according to the requirements of size, radix, and output\n-\tformat.\n-\t(print_value): Use get_print_format.\n-\t* testsuite/binutils-all/nm.exp: Add tests of \"nm --format=posix\"\n-\tand \"nm -t d\".\n-\n-2019-04-30  Alan Modra  <amodra@gmail.com>\n-\n-\t* wrstabs.c (stab_start_class_type): Add assert to work around\n-\tgcc9 warning.  Tidy.\n-\n-2019-04-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objcopy.c (strip_main): Do not enable note merging by default if\n-\tjust stripping debug or dwo information.\n-\t* doc/binutils.texi (strip): Update documentation.\n-\n-2019-04-23  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Add note to update the symbolic\n-\tlink from \"docs\" to \"docs-2.x\" on the sourceware website.\n-\n-2019-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/copy-2.d: Don't run for ns32k-*-*.\n-\t* testsuite/binutils-all/copy-3.d: Likewise.\n-\n-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* readelf.c (arm_attr_tag_CPU_arch): Add entry for Armv8.1-M Mainline.\n-\n-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* readelf.c (decode_x86_isa): Handle\n-\tGNU_PROPERTY_X86_ISA_1_AVX512_BF16.\n-\t* testsuite/binutils-all/i386/pr21231b.d: Updated.\n-\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n-\n-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/binutils-all/nm.exp: Count i386-moss as ELF.\n-\n-2019-03-26  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* testsuite/binutils-all/aarch64/in-order-all.d: Update.\n-\t* testsuite/binutils-all/aarch64/in-order.d: Likewise.\n-\t* testsuite/binutils-all/aarch64/out-of-order-all.d: Likewise.\n-\t* testsuite/binutils-all/aarch64/out-of-order.d: Likewise.\n-\t* testsuite/binutils-all/aarch64/out-of-order.s: Likewise.\n-\t* testsuite/binutils-all/arm/in-order-all.d: Likewise.\n-\t* testsuite/binutils-all/arm/in-order.d: Likewise.\n-\t* testsuite/binutils-all/arm/out-of-order-all.d: Likewise.\n-\t* testsuite/binutils-all/arm/out-of-order.d: Likewise.\n-\t* testsuite/binutils-all/arm/out-of-order.s: Likewise.\n-\n-2019-03-26  Nick Clifton  <nickc@redhat.com>\n-\n-\t* MAINTAINERS: Take over Dave Brolley's maintainerships for FR30,\n-\tFRV and MEP.\n-\n-2019-03-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* objdump.c (dump_relocs_in_section): Warning fix.\n-\n-2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* testsuite/binutils-all/arm/in-order-all.d: New test.\n-\t* testsuite/binutils-all/arm/in-order.d: New test.\n-\t* testsuite/binutils-all/arm/objdump.exp: Support .d tests.\n-\t* testsuite/binutils-all/arm/out-of-order-all.d: New test.\n-\t* testsuite/binutils-all/arm/out-of-order.T: New test.\n-\t* testsuite/binutils-all/arm/out-of-order.d: New test.\n-\t* testsuite/binutils-all/arm/out-of-order.s: New test.\n-\n-\n-2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* testsuite/binutils-all/aarch64/in-order-all.d: New test.\n-\t* testsuite/binutils-all/aarch64/out-of-order-all.d: New test.\n-\t* testsuite/binutils-all/aarch64/out-of-order.d:\n-\n-2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* testsuite/binutils-all/aarch64/in-order.d: New test.\n-\t* testsuite/binutils-all/aarch64/out-of-order.d: Disassemble data as\n-\twell.\n-\n-2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* objdump.c (disassemble_bytes): Pass stop_offset.\n-\t* testsuite/binutils-all/aarch64/out-of-order.T: New test.\n-\t* testsuite/binutils-all/aarch64/out-of-order.d: New test.\n-\t* testsuite/binutils-all/aarch64/out-of-order.s: New test.\n-\n-2019-03-19  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24360\n-\t* objdump.c (load_specific_debug_section): Check that the amount\n-\tof memory to be allocated matches the size of the section.\n-\n-2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* readelf.c (get_aarch64_dynamic_type): Add case for\n-\tDT_AARCH64_PAC_PLT.\n-\t(dynamic_section_aarch64_val): Likewise.\n-\n-2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n-\t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n-\n-\t* readelf.c (get_aarch64_dynamic_type): New.\n-\t(get_dynamic_type): Use above for EM_AARCH64.\n-\t(dynamic_section_aarch64_val): New.\n-\t(process_dynamic_section): Use above for EM_AARCH64.\n-\n-2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* readelf.c (decode_aarch64_feature_1_and): New.\n-\t(print_gnu_property_note): Add case for AArch64 gnu notes.\n-\n-2019-03-12  Alan Modra  <amodra@gmail.com>\n-\n-\t* objdump.c (load_specific_debug_section): Don't compare section\n-\tsize against file size.\n-\t(dump_relocs_in_section): Don't compare reloc size against file size.\n-\tPrint \"failed to read relocs\" on bfd_get_reloc_upper_bound error.\n-\n-2019-03-05  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24295\n-\t* doc/binutils.texi (ar cmdline): Fix spelling mistake.\n-\n-2019-03-05  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sv.po: Updated Swedish translation.\n-\n-2019-03-05  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\tPR 24287\n-\t* testsuite/lib/binutils-common.exp (run_dump_test): Replace a use\n-\tof \"lmap\" with a \"foreach\" loop.\n-\n-2019-03-04  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24281\n-\t* objcopy.c (copy_archive): Do not copy thin  archives.\n-\n-2019-02-27  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* testsuite/lib/binutils-common.exp: Allow multiple \"as\" lines.\n-\n-2019-02-25  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objdump.c (sym_ok): New function.\n-\t(find_symbol_for_address): Use new function.\n-\t(disassemble_section): Compare sections by name, not pointer.\n-\t(dump_dwarf): Move code to initialise byte_get pointer and iterate\n-\tover separate debug files from here to ...\n-\t(dump_bfd): ... here.  Add parameter indicating that a separate\n-\tdebug info file is being dumped.  For main file, pull in the\n-\tsymbol tables from all separate debug info files.\n-\t(display_object): Update call to dump_bfd.\n-\t* doc/binutils.texi: Document extened behaviour of the\n-\t--dwarf=follow-links option.\n-\t* NEWS: Mention this new feature.\n-\t* testsuite/binutils-all/objdump.WK2: Update expected output.\n-\t* testsuite/binutils-all/objdump.exp (test_follow_debuglink): Add\n-\toptions and dump file parameters.\n-\tAdd extra test.\n-\t* testsuite/binutils-all/objdump.WK3: New file.\n-\t* testsuite/binutils-all/readelf.exp: Change expected output for\n-\treadelf -wKis test.\n-\t* testsuite/binutils-all/readelf.wKis: New file.\n-\n-2019-02-22  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 23843\n-\t* dwarf.h (struct separate_info): New structure for containing\n-\tinformation on separate debug info files.\n-\t* dwarf.c (struct dwo_info): New structure for containing dwo\n-\tlinks.\n-\t(first_dwo_info): Chain of dwo_info structures.\n-\t(first_separate_file): Chain of separate_info structures.\n-\t(separate_debug_file, separate_debug_filename): Delete.\n-\t(fetch_alt_indirect_string): Scan all separate debug info files\n-\tfor the requested string.\n-\t(add_dwo_info): New function.\n-\t(add_dwo_name): New function.\n-\t(add_dwo_dir): New function.\n-\t(add_dwo_id: New function.\n-\t(free_dwo_info): New function.\n-\t(read_and_display_attr_value): Store DWO data using the new\n-\tfunctions.\n-\t(load_debug_section_with_follow): If necessary, scan the list of\n-\tseparate debug info files for the requested section.\n-\t(add_separate_debug_file): New function.\n-\t(load_separate_debug_info): Call add_separate_debug_file to store\n-\tthe information on the newly loaded file.\n-\t(load_dwo_file): Likewise.\n-\t(load_separate_debif_file): Rename to load_separate_debug_files.\n-\tChange return type to boolean.  If following links then attempt to\n-\tload all separate debug info files, not just the first one.\n-\t(free_debug_memory): Release memory in dwo_info and separate_info\n-\tchains.\n-\t* objdump.c (dump_dwarf): Iterate over all loaded debg info files.\n-\t* readelf.c (process_object): Likewise.\n-\t* doc/debug.options.texi: Update descriptions of links and\n-\tfollow-links options.\n-\t* testsuite/binutils-all/objdump.WK2: Update expected output.\n-\t* testsuite/binutils-all/readelf.k2: Likewise.\n-\t* NEWS: Announce the new feature.\n-\n-2019-02-21  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24247\n-\t* unwind-ia64.c: Include sysdep.h.\n-\t(unw_decode_x1): Check current pointer against end pointer before\n-\taccessing memory.\n-\t(unw_decode_x2): Likewise.\n-\t(unw_decode_x3): Likewise.\n-\t(unw_decode_x4): Likewise.\n-\t(unw_decode_r2): Likewise.\n-\t(unw_decode_p2_p5): Likewise.\n-\t(unw_decode_p7_p10): Likewise.\n-\t(unw_decode): Likewise.\n-\n-2019-02-20  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24246\n-\t* readelf.c (print_stapsdt_note): Harden against corrupt notes.\n-\n-\tPR 24244\n-\t* unwind-ia64.c (unw_decode_uleb128): Add end parameter, use it to\n-\tprevent walking off the end of the buffer.\n-\t(unw_decode_x1): Add end paramter, pass it to unw_decode_uleb128.\n-\t(unw_decode_x2): Likewise.\n-\t(unw_decode_x3): Likewise.\n-\t(unw_decode_x4): Likewise.\n-\t(unw_decode_r2): Pass the end parameter to unw_decode_uleb128.\n-\t(unw_decode_r3): Likewise.\n-\t(unw_decode_p7_p10): Likewise.\n-\t(unw_decode_b2): Likewise.\n-\t(unw_decode_b3_x4): Likewise.\n-\n-\tPR 24243\n-\t* readelf.c (process_mips_specific): Check for an options section\n-\tthat is too small to even contain a single option.\n-\n-\tPR 24242\n-\t* readelf.c (print_ia64_vms_note): Harden against corrupt notes.\n-\n-2019-02-20  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24132\n-\tPR 24138\n-\t* readelf.c (get_data): Avoid possibility of overflow when\n-\tchecking for a read that may extend past end of file.\n-\t(process_program_headers): Likewise.\n-\n-2019-02-20  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24233\n-\t* objdump.c (dump_bfd_private_header): Print warning if\n-\tbfd_print_private_bfd_data returns false.\n-\n-2019-02-12  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 23440\n-\t* README-how-to-make-a-release: Use git clean to delete spurious\n-\tfiles from the local source repository.\n-\n-2019-02-08  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* size.c (berkeley_format): Delete.\n-\t(enum output_format): New enum.\n-\t(selected_output_format): New variable.\n-\t(usage): Update to mention GNU format.\n-\t(main): Update to extract options, and select format as needed.\n-\tHandle GNU format where needed.\n-\t(berkeley_sum): Renamed to...\n-\t(berkeley_or_gnu_sum): ...this, and updated to handle both formats.\n-\t(berkeley_format): Renamed to...\n-\t(berkeley_or_gnu_format): ...this, and updated to handle both\n-\tformats.\n-\t(print_sizes): Handle GNU format.\n-\t* doc/binutils.texi (size): Document new GNU format.\n-\t* testsuite/binutils-all/size.exp: Add test of extended\n-\tfunctionality.\n-\t* NEWS: Mention new functionality.\n-\n-2019-02-08  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* doc/binutils.texi (size): Update example output for Berkeley\n-\tformat output.\n-\n-2019-02-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Add a note about updating the\n-\tobsolete targets in the bfd/config.bfd file.\n-\n-2019-02-04  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Add more notes on making a release.\n-\n-2019-01-25  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24131\n-\t* readelf.c (process_notes_at): Prevent an illegal memory access\n-\twhen the note's namesize is zero.\n-\t(decode_tic6x_unwind_bytecode): Add code to handle the case where\n-\tno registers are specified in a frame pop instruction.\n-\n-2019-01-25  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/bg.po: Updated Bulgarian translation.\n-\n-2019-01-23  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/fr.po: Updated French translation.\n-\t* po/pt.po: Updated Portuguese translation.\n-\n-2019-01-21  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2019-01-19  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\t* binutils/po/binutils.pot.\n-\n-\t* README-how-to-make-a-release: Update description on how to make\n-\ta branch.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.32 branch created.\n-\n-2019-01-17  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objdump.c (disassemble_section): When disassembling from a\n-\tsymbol only stop at the next symbol if the original symbol was not\n-\ta function symbol.  Otherwise continue disassembling until a new\n-\tfunction is reached.\n-\t* testsuite/binutils-all/objdump.exp: Add tests of extended\n-\tfunctionality.\n-\t* testsuite/binutils-all/disasm.s: New test source file.\n-\n-2019-01-16  Kito Cheng  <kito@andestech.com>\n-\t    Nelson Chu  <nelson@andestech.com>\n-\n-\t* readelf.c (get_riscv_section_type_name): New function.\n-\t(get_section_type_name): Add handler for RISC-V.\n-\t(riscv_attr_tag_t): Declare.\n-\t(riscv_attr_tag): New.\n-\t(display_riscv_attribute): New function.\n-\t(process_attributes): Add handler for RISC-V.\n-\t* testsuite/binutils-all/strip-3.d: Remove .riscv.attribute\n-\tsection.\n-\n-2019-01-10  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 23963\n-\t* objdump.c (sanitize_string): New function.  Removes control\n-\tcharacters from symbol names.\n-\t(dump_section_header): Use new function.\n-\t(objdump_print_symname): Likewise.\n-\t(objdump_print_addr_with_sym): Likewise.\n-\t(show_line): Likewise.\n-\t(disassemble_bytes): Likewise.\n-\t(disassemble_section): Likewise.\n-\t(load_specific_debug_section): Likewise.\n-\t(read_section_stabs): Likewise.\n-\t(print_section_stabs): Likewise.\n-\t(dump_section): Likewise.\n-\t(dump_reloc_set): Likewise.\n-\t(dump_relocs_in_section): Likewise.\n-\t(dump_bfd): Likewise.\n-\t(display_any_bfd): Likewise.\n-\n-2019-01-09  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24049\n-\t* readelf.c (process_archive): Use arch.file_name in error\n-\tmessages until the qualified name is available.\n-\n-2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>\n-\n-\t* configure: Regenerate.\n-\n-2019-01-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/cxxfilt.exp: Pass --no-strip-underscores\n-\tunconditionally to tests needing the option rather than via a\n-\tlist of targets.\n-\n-2019-01-08  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24044\n-\t* cxxfilt.c (hp_symbol_characters): Delete.\n-\t(main): Remove depcreated demangling styles.\n-\t* stabs.c (parse_stab_argtypes): Remove support for old gnu v2\n-\tdemangling opnames.\n-\t* testsuite/binutils-all/cxxfilt.exp: Use the\n-\t--no-strip-underscore option for targets that do prefix their\n-\tsymbols with underscores.\n-\tUpdate tests to eliminate those that use gnu v2 encoding.\n-\n-2019-01-08  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR 24065\n-\t* testsuite/binutils-all/copy-6.d: New test.\n-\t* testsuite/binutils-all/objcopy.exp: Use it.\n-\n-2019-01-08  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (run_dump_test): Don't prepend\n-\t$srcdir/$subdir to source file name if it starts with \"./\".\n-\n-2019-01-05  Yoshinori Sato <ysato@users.sourceforge.jp>\n-\n-\t* readelf.c (get_machine_flags): Add RXv3 output.\n-\n-2019-01-04  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24005\n-\t* objdump.c (load_specific_debug_section): Check for integer\n-\toverflow before attempting to allocate contents.\n-\n-2019-01-04  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24001\n-\t* objcopy.c (copy_object): Free dhandle after writing out the\n-\tdebug information.\n-\t* objdump.c (dump_bfd): Free dhandle after printing out the debug\n-\tinformation.\n-\n-\n-2019-01-01  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2018\n+For older changes see ChangeLog-2019\n \f\n-Copyright (C) 2019 Free Software Foundation, Inc.\n+Copyright (C) 2020 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "2e6126327158dfb58c325a522163147778fc5d6a",
      "filename": "binutils/ChangeLog-2019",
      "status": "added",
      "additions": 1525,
      "deletions": 0,
      "changes": 1525,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/binutils/ChangeLog-2019",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/binutils/ChangeLog-2019",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog-2019?ref=0b11474080800192797236e30857a42818f5560d",
      "patch": "@@ -0,0 +1,1525 @@\n+2019-12-30  Alan Modra  <amodra@gmail.com>\n+\n+\t* od-macho.c: Include elfcomm.h.\n+\t(dump_dyld_info_rebase, dump_dyld_info_bind): Fix read_leb128 args.\n+\t(dump_dyld_info_export_1, dump_segment_split_info): Likewise.\n+\n+2019-12-23  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* dwarf.c (display_debug_lines_decoded): Cast printf parameter to\n+\tformat type to correct last change.\n+\n+2019-12-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf.h (read_leb128): Update prototype.\n+\t(report_leb_status): New inline function.\n+\t(SKIP_ULEB, SKIP_SLEB, READ_ULEB, READ_SLEB): Define.\n+\t* dwarf.c: Use above macros throughout file.  Formatting.\n+\t(read_leb128): Reorder params.  Add status return param.\n+\tDon't stop reading until finding terminator or end of data.\n+\tDetect loss of significant bits.  Sign extend only on\n+\tterminating byte.\n+\t(read_sleb128, read_uleb128): Delete functions.\n+\t(SKIP_ULEB, SKIP_SLEB, READ_ULEB, READ_SLEB): Delete macros.\n+\t(read_and_print_leb128): Rewrite.\n+\t(process_extended_line_op): Return a size_t.  Use size_t vars.\n+\tAdjust to suit new macros.  Add proper name size to \"data\" when\n+\tprocessing DW_LNE_define_file.\n+\t(process_abbrev_section): Adjust to suit new macros.\n+\t(decode_location_expression, skip_attr_bytes): Likewise.\n+\t(get_type_signedness): Likewise.\n+\t(read_and_display_attr_value): Likewise.  Consolidate block code.\n+\t(process_debug_info): Adjust to suit new macros.\n+\t(display_formatted_table, display_debug_lines_raw): Likewise.\n+\t(display_debug_lines_decoded): Likewise.  Properly check for end\n+\tof DW_LNS_extended_op.\n+\t(display_debug_macinfo): Adjust to suit new macros.\n+\t(get_line_filename_and_dirname, display_debug_macro): Likewise.\n+\t(display_view_pair_list): Likewise.  Don't back off when hitting\n+\tend of data.\n+\t(display_loc_list): Adjust to suit new macros.\n+\t(display_loclists_list, display_loc_list_dwo): Likewise.\n+\t(display_debug_rnglists_list, read_cie): Likewise.\n+\t(display_debug_frames): Likewise.\n+\t* readelf.c: Use new ULEB macros throughout file.\n+\t(read_uleb128): Delete.\n+\t(decode_arm_unwind_bytecode): Use read_leb128.\n+\t(decode_tic6x_unwind_bytecode): Likewise.\n+\t(display_tag_value): Adjust to suit new macros.\n+\t(display_arc_attribute, display_arm_attribute): Likewise.\n+\t(display_gnu_attribute, display_power_gnu_attribute): Likewise.\n+\t(display_s390_gnu_attribute, display_sparc_gnu_attribute): Likewise.\n+\t(display_mips_gnu_attribute, display_tic6x_attribute): Likewise.\n+\t(display_msp430x_attribute, display_msp430_gnu_attribute): Likewise.\n+\t(display_riscv_attribute, process_attributes): Likewise.\n+\n+2019-12-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (compare_section): New static var.\n+\t(compare_symbols): Sort by current section only.  Don't access\n+\tsymbol name out of bounds when checking for file symbols.\n+\tSort section symbols and object symbols.\n+\t(find_symbol_for_address): Remove bogus debugging and section\n+\tsymbol test.\n+\t(disassemble_data): Move symbol sort from here..\n+\t(disassemble_section): ..to here.  Set compare_section.\n+\n+2019-12-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objcopy.exp: Remove tic80 support.\n+\t* testsuite/binutils-all/objdump.exp: Likewise.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* od-xcoff.c (dump_dumpx_core): Adjust for bfd_h_get_8 change.\n+\n+2019-12-10  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24960\n+\t* objdump.c (disassemble_data): Call disassemble_free_target.\n+\n+2019-12-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (struct objdump_disasm_info): Delete \"sec\".\n+\t(find_symbol_for_address): Use inf->section rather than aux->sec.\n+\t(objdump_print_addr, disassemble_bytes): Likewise.\n+\t(disassemble_section): Don't set aux->sec.\n+\n+2019-12-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (regexp_diff): Support #?REGEXP.\n+\n+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf.c (regname_internal_riscv): New function.\n+\t(init_dwarf_regnames_riscv): Use new function.\n+\n+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf.c (typedef dwarf_regname_lookup_ftype): New typedef.\n+\t(dwarf_regnames_lookup_func): New static global.\n+\t(init_dwarf_regnames_i386): Set dwarf_regnames_lookup_func.\n+\t(init_dwarf_regnames_iamcu): Likewise.\n+\t(init_dwarf_regnames_x86_64): Likewise.\n+\t(init_dwarf_regnames_aarch64): Likewise.\n+\t(init_dwarf_regnames_s390): Likewise.\n+\t(init_dwarf_regnames_riscv): Likewise.\n+\t(init_dwarf_regnames_by_elf_machine_code): Reset\n+\tdwarf_regnames_lookup_func to NULL.\n+\t(init_dwarf_regnames_by_bfd_arch_and_mach): Likewise.\n+\t(regname_internal_by_table_only): New function.\n+\t(regname): Make use of dwarf_regnames_lookup_func.\n+\n+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf.c (init_dwarf_regnames_i386): Make static.\n+\t(init_dwarf_regnames_iamcu): Make static.\n+\t(init_dwarf_regnames_x86_64): Make static.\n+\t(init_dwarf_regnames_aarch64): Make static.\n+\t(init_dwarf_regnames_s390): Make static.\n+\t(init_dwarf_regnames_riscv): Make static.\n+\t* dwarf.h (init_dwarf_regnames_i386): Delete declaration.\n+\t(init_dwarf_regnames_iamcu): Delete declaration.\n+\t(init_dwarf_regnames_x86_64): Delete declaration.\n+\t(init_dwarf_regnames_aarch64): Delete declaration.\n+\t(init_dwarf_regnames_s390): Delete declaration.\n+\t(init_dwarf_regnames_riscv): Delete declaration.\n+\n+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf.c (init_dwarf_regnames_by_bfd_arch_and_mach): New\n+\tfunction.\n+\t* dwarf.h (init_dwarf_regnames_by_bfd_arch_and_mach): Declare.\n+\t* objdump.c (dump_dwarf): Call new function instead of calling\n+\tspecific initialization routines.  Restrucure so that eh_addr_size\n+\tis still calculated correctly.\n+\n+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf.c (init_dwarf_regnames): Renamed to...\n+\t(init_dwarf_regnames_by_elf_machine_code): ...this.\n+\t* dwarf.h (init_dwarf_regnames): Renamed to...\n+\t(init_dwarf_regnames_by_elf_machine_code): ...this.\n+\t* readelf.c (process_file_header): Update call to use new name.\n+\n+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf.c (frame_need_space): Compare dwarf_regnames_count against\n+\t0, and only warn about large numbers of registers if the number is\n+\tmore than the dwarf_regnames_count.\n+\n+2019-11-25  Christian Eggers  <ceggers@gmx.de>\n+\n+\t* objdump.c (disassemble_data): Provide section parameter to\n+\tbfd_octets_per_byte.\n+\t(dump_section): likewise\n+\t(dump_section_header): likewise. Show SEC_ELF_OCTETS flag if set.\n+\n+2019-11-21  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 273\n+\t* size.c (sysv_internal_sizer, sysv_internal_printer): Exclude\n+\tsections with no flag bits set.\n+\t* testsuite/binutils-all/size.exp: Allow $CODE$ as a text section.\n+\n+2019-11-21  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (merge_gnu_build_notes): Allow for the possibility\n+\tthat the new notes might actually be larger than the original\n+\tnotes.\n+\n+2019-11-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (is_pecoff_format): Rewrite\n+\twith positive logic and add more target triples.\n+\n+2019-11-19  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24499\n+\t* objcopy.c (copy_file): Ignore --add-gnu-debuglink for archives.\n+\n+2019-11-19  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24968\n+\t* objcopy.c (copy_object): For ELF output and non-ELF input without\n+\tarch, take arch from output file if not given by -B.  Don't\n+\tbfd_get_arch_info when we already have iarch.\n+\n+2019-11-19  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25191\n+\t* objcopy.c (is_nondebug_keep_contents_section): Use bfd_get_flavour.\n+\t(copy_object): Likewise.\n+\t(setup_section): Likewise.  If flavour of input and output files\n+\tdiffer, restrict section flags to the intersection of input and\n+\toutput bfd_applicable_section_flags.\n+\n+2019-11-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* bucomm.c (bfd_nonfatal_message): Add a space between program\n+\tname and file.\n+\n+2019-11-18  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25198\n+\t* prdbg.c (tg_start_class_type): Correct scope of idbuf.\n+\n+2019-11-08  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25172\n+\t* objdump.c (usage): Correct --stop-address description.\n+\n+2019-11-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* ar.c (open_output_file): Check for filename validity before\n+\tprefixing with output directory.\n+\tDisplay the constructed output filename if in verbose mode.\n+\t(extract_file): Let open_output_file display the filename.\n+\n+2019-11-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (copy_object): Skip note sections that do not have\n+\tan output section.  Always copy note sections, even if no\n+\tchanges are made.\n+\n+2019-11-06  Christian Eggers  <ceggers@gmx.de>\n+\n+\t* readelf.c (IN_RANGE): Rename parameter OFF to NELEM. Add\n+\tcomment.  Catch potential integer overflow and fix off by one\n+\terror whilst checking reloc location against section size.\n+\t(apply_relocations): Use IN_RANGE macro.\n+\n+2019-11-04  Fangrui Song  <maskray@google.com>\n+\n+\t* objcopy.c (enum option_values): Add OPTION_KEEP_SECTION.\n+\t(SECTION_CONTEXT_KEEP): Define.  Adjust other SECTION_CONTEXT macros.\n+\t(copy_usage): Describe --keep-section.\n+\t(strip_usage): Likewise.\n+\t(copy_main): Handle SECTION_CONTEXT_KEEP.\n+\t(strip_main): Likewise.\n+\t(is_strip_section_1): Likewise.\n+\t* testsuite/binutils-all/objcopy.exp: Add tests.\n+\t* testsuite/binutils-all/keep-section-1.d: New test driver file.\n+\t* testsuite/binutils-all/keep-section-2.d: Likewise.\n+\t* doc/binutils.texi: Document the new feature.\n+\t* NEWS: Mention the new feature.\n+\n+2019-10-20  Palmer Dabbelt  <palmer@sifive.com>\n+\n+        * MAINTAINERS: Change palmer@sifive.com to palmer@dabbelt.com.\n+\n+2019-10-30  Fangrui Song  <i@maskray.me>\n+\t    Nick Clifton  <nickc@redhat.com>\n+\n+\t* ar.c (emum long option numbers): Declare.  Use to provide\n+\tnumerical values for long options.\n+\t(long_options): Add --output option.\n+\t(usage): Mention the --output option.\n+\t(open_output_file): New function.  Create a filepath for an output\n+\tfile and open it.\n+\t(extract_file): Use open_output_file().\n+\t(open_output_file):\n+\t* testsuite/binutils-all/ar.exp: Add a test of the new feature.\n+\t* doc/binutils.texi: Document the new feature.\n+\t* NEWS: Mention the new feature.\n+\n+2019-10-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* objcopy.c (sort_gnu_build_notes): Correct sort of deleted\n+\tnote2.\n+\n+2019-10-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elfedit.c (elf_x86_feature): Report unknown x86 feature.\n+\n+2019-10-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elfedit.c (update_gnu_property): Replace BYTE_PUT with byte_put.\n+\n+2019-10-25  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (struct merged_note_section): New structure.  Used to\n+\tchain together details of mergeable note sections.\n+\t(is_merged_note_section): Rename to is_megreable_note_section and\n+\treturn true for note sections that use GNU_BUILD_ATTRS_SECTION_NAME\n+\tas a prefix.\n+\t(num_bytes): Delete\n+\t(objcoopy_internal_note): Add padded_namesz field.\n+\t(DEBUG_MERGE): New macro.  Set to non-zero to enable debugging of\n+\tthe note merging code.\n+\t(gap_exists): Rename to overlaps_or_adjoins and return TRUE for\n+\toverlapping notes or adjoining notes.\n+\t(contained_by, is_deleted_note, is_version_note)\n+\t(compare_gnu_build_notes, sort_gnu_build_notes): New functions.\n+\t(merge_gnu_build_notes):  Rework.  Sort notes into a mergeable\n+\torder first.  Merge them.  Then sort them into an ascending\n+\taddress order before writing them out.\n+\t(copy_object): Handle more than one mergeable note section.\n+\t* testsuite/binutils-all/note-2-32.d: Update for new merging\n+\tbehaviour.\n+\t* testsuite/binutils-all/note-2-32.s: Likewise.\n+\t* testsuite/binutils-all/note-2-64.d: Likewise.\n+\t* testsuite/binutils-all/note-2-64.s: Likewise.\n+\t* testsuite/binutils-all/note-3-32.d: Likewise.\n+\t* testsuite/binutils-all/note-3-32.s: Likewise.\n+\t* testsuite/binutils-all/note-3-64.d: Likewise.\n+\t* testsuite/binutils-all/note-3-64.s: Likewise.\n+\t* testsuite/binutils-all/note-4-32.d: Likewise.\n+\t* testsuite/binutils-all/note-4-32.s: Likewise.\n+\t* testsuite/binutils-all/note-4-64.d: Likewise.\n+\t* testsuite/binutils-all/note-4-64.s: Likewise.\n+\t* testsuite/binutils-all/note-6-32.s: New test source file.\n+\t* testsuite/binutils-all/note-6-64.s: New test source file.\n+\t* testsuite/binutils-all/note-6-32.d: New test driver file.\n+\t* testsuite/binutils-all/note-6-64.d: New test driver file.\n+\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n+\n+2019-10-25  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_program_headers): Check PT_PHDR p_offset\n+\tas well as p_vaddr.  Use p_filesz, not p_memsz, in vaddr test.\n+\n+2019-10-21  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 452\n+\tPR 25104\n+\t* ar.c (write_archive): Set BFD_ARCHIVE_FULL_PATH.\n+\t* doc/binutils.texi (extract from archive): Mention\n+\trestrictions when extracting from archives with full paths.\n+\t(ar P): Update to current P support.\n+\t(ar -X32_64): Fix spelling.\n+\n+2019-10-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* objcopy.c (compare_section_lma): Correct comment.  Dereference\n+\tsection pointer earlier and lose unnecessary const.  Style fixes.\n+\tAdd final sort by id.\n+\n+2019-10-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Add a note to reset the\n+\tdevelopment flag back to true after making a point release.\n+\n+2019-10-12  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Tweak a few sections based on the\n+\tresults of the 2.33.1 release.\n+\n+2019-10-11  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/zh_TW.po: Updated Chinese (traditional) translation.\n+\n+2019-10-09  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25079\n+\t* ar.c (decode_options): Don't try for command options if\n+\twrite_armap or mri_mode is selected.\n+\n+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* readelf.c (display_msp430_gnu_attribute): New.\n+\t(process_arch_specific): Use msp430 specific handler for GNU\n+\tattributes.\n+\n+2019-09-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (main): Fix tabdamage.\n+\t* readelf.c (CTF_DUMP): Likewise.\n+\t(options): Likewise.\n+\t(dump_section_as_ctf): Likewise.\n+\n+2019-08-03  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (dump_ctf): Use the default CTF archive member as the\n+\tparent even when no parent section is specified.\n+\t(dump_ctf_archive_member): Only import from the parent\n+\tif this is not the default \".ctf\" member.\n+\n+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* Makefile.am (LIBCTF): Mention the .la file.\n+\t(LIBCTF_NOBFD): New.\n+\t(readelf_DEPENDENCIES): Use it.\n+\t(readelf_LDADD): Likewise.\n+\t* Makefile.in: Regenerated.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* readelf.c (dump_ctf_symtab_name): Give default value.\n+\t(dump_ctf_strtab_name): Likewise.\n+\t(dump_section_as_ctf): Allow for the null string.\n+\n+2019-07-08  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (dump_ctf_archive_member): Dump the CTF header.\n+\t* readelf.c (dump_section_as_ctf): Likewise.\n+\n+2019-10-02  Niklas G\u00fcrtler  <profclonk@gmail.com>\n+\n+\tPR 24942\n+\t* objcopy.c (copy_usage): Update description of\n+\t--set-section-alignment.\n+\t(copy_main): Interpret numeric argument of --set-section-alignment\n+\tas a byte alignment, not a power of two alignment.\n+\t* doc/binutils.texi: Update description of\n+\t--set-section-alignment.\n+\t* testsuite/binutils-all/set-section-alignment.d: New test.\n+\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n+\n+2019-09-30  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25046\n+\t* readelf.c (process_program_headers): Clear dynamic_addr and\n+\tdynamic_size earlier.\n+\n+2019-09-24  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25031\n+\t* nm.c (print_format_string): New.\n+\t(get_print_format): Delete saved_format.  Move earlier.\n+\t(set_print_width): Call get_print_format.\n+\t(print_value): Use print_format_string.\n+\n+2019-09-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* dlltool.c: Include coff-bfd.h.\n+\n+2019-09-23  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25018\n+\t* dwarf.c (get_type_signedness): Delete ineffective pointer\n+\tcomparison check.  Properly range check uvalue offset on\n+\trecursive call.\n+\t(read_and_display_attr_value): Range check uvalue offset before\n+\tcalling get_type_signedness.\n+\n+2019-09-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* ar.c (write_archive): Use bfd_set_thin_archive.\n+\n+2019-09-18  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* testsuite/binutils-all/objdump.exp (objump -S): Update testcases.\n+\n+2019-09-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* addr2line.c, * bucomm.c, * coffgrok.c, * dlltool.c, * nm.c,\n+\t* objcopy.c, * objdump.c, * od-elf32_avr.c, * od-macho.c,\n+\t* od-xcoff.c, * prdbg.c, * rdcoff.c, * rddbg.c, * rescoff.c,\n+\t* resres.c, * size.c, * srconv.c, * strings.c, * windmc.c: Update\n+\tthroughout for bfd section macro and function changes.\n+\n+2019-09-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* nm.c: Update bfd_get_section to bfd_asymbol_section throughout.\n+\t* objcopy.c: Likewise.\n+\t* objdump.c: Likewise.\n+\t* rdcoff.c: Likewise.\n+\t* objcopy.c (create_new_symbol): Use bfd_set_asymbol_name.\n+\t(filter_symbols): Likewise.\n+\n+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* doc/Makefile.am (MOSTLYCLEANFILES): Clean all man pages,\n+\tcxxfilt.man and binutils.info.\n+\t(MAINTAINERCLEANFILES): Remove.\n+\t* doc/Makefile.in: Re-generate.\n+\n+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* doc/Makefile.am: Remove references to binutils_TEXINFOS.\n+\t* doc/Makefile.in: Re-generate.\n+\n+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* doc/Makefile.am (install-data-loca): Remove target.\n+\t(DISTCLEANFILES): Remove variable.\n+\t* doc/Makefile.in: Re-generate.\n+\n+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* Makefile.in: Re-generate.\n+\t* configure: Re-generate.\n+\t* doc/Makefile.in: Re-generate.\n+\n+2019-09-16  Phil Blundell  <pb@pbcl.net>\n+\n+\t* Makefile.in, configure. doc/Makefile.in: Regenerated.\n+\n+2019-09-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* objcopy.c (copy_archive): Update.\n+\t* bucomm.h (make_tempname, make_tempdir): Make argument const.\n+\t* bucomm.c (make_tempname, make_tempdir): Make argument const.\n+\n+2019-09-11  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24907\n+\t* objdump.c (disassemble_bytes): Adjust code to avoid overlong\n+\tlines.  Correct max_reloc_offset_into_insn test.\n+\n+2019-09-10  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24907\n+\t* objdump.c (null_print): New function.\n+\t(disassemble_bytes): Delete previous_octets local and replace with\n+\ta test of the max_reloc_offset_into_insn field of the\n+\tbfd_arch_info structure.  If a reloc is a potential match for the\n+\tnext insn, then perform a dummy disassembly in order to calculate\n+\tits real length.\n+\n+2019-09-09  Phil Blundell  <pb@pbcl.net>\n+\n+\tbinutils 2.33 branch created.\n+\n+2019-09-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* nm.c (print_object_filename_bsd, print_object_filename_sysv),\n+\t(print_object_filename_posix, print_archive_filename_bsd),\n+\t(print_archive_filename_sysv, print_archive_filename_posix),\n+\t(print_archive_member_bsd, print_archive_member_sysv),\n+\t(print_archive_member_posix): Constify parameter.\n+\t(struct output_fns <print_object_filename, print_archive_filename>),\n+\t(<print_archive_member>): Likewise.\n+\t* objcopy.c (copy_archive): Add cast for make_tempdir.\n+\n+2019-08-29  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf.c (check_uvalue): Remove unnecessary pointer checks.\n+\n+2019-08-28  Niklas G\u00fcrtler  <profclonk@gmail.com>\n+\n+\tPR 24942\n+\t* objcopy.c (SECTION_CONTEXT_SET_ALIGNMENT): New constant.\n+\t(struct section_list): Add alignment field.\n+\t(command_line_switch): Add OPTION_SET_SECTION_ALIGNMENT.\n+\t(copy_options): Add --set-section-alignment.\n+\t(copy_usage): Describe --set-section-alignment.\n+\t(find_section_list): Initialise the alignment field.\n+\t(setup_section): Handle the alignment field.\n+\t(copy_main): Handle OPTION_SET_SECTION_ALIGNMENT.\n+\t* doc/binutils.texi: Document the new feature.\n+\t* NEWS: Mention the new feature.\n+\n+2019-08-28  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24931\n+\t* objdump.c (source_comment): New static variable.\n+\t(option_values): Add OPTION_SOURCE_COMMENT.\n+\t(long_opions): Add --source-comment.\n+\t(print_line): If source comment is set, use it as a prefix to the\n+\tsource code line.\n+\t(main): Handle OPTION_SOURCE_COMMENT.\n+\t* doc/binutils.texi: Document the new option.\n+\t* NEWS: Mention the new feature.\n+\t* testsuite/binutils-all/objdump.exp (test_objdump_S): Add tests\n+\tof the -S and --source-comment options.\n+\n+2019-08-27  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24510\n+\t* dwarf.c (MAX_CU_NESTING): New constant.\n+\t(level_type_signed): New static array.\n+\t(skip_attr_bytes): New function.\n+\t(get_type_signedness): New function.\n+\t(read_and_print_leb128): New function.\n+\t(display_discr_list): New function.\n+\t(read_and_display_attr_value): Add start parameter.\n+\tUse new functions when handling DW_AT_type and DW_AT_discr_list.\n+\t(read_and_display_attr): Add start parameter.  Pass to\n+\tread_and_display_attr_value.\n+\t(process_debug_info): Update call to read_and_display_attr.\n+\t(display_formatted_table): Likewise.\n+\t(display_debug_lines_decoded): Likewise.  Also add start\n+\tparameter.\n+\t(display_debug_lines): Likewise.\n+\t* testsuite/binutils-all/dwarf-attributes.S: Update discrimination\n+\tlists.\n+\t* testsuite/binutils-all/dwarf-attributes.W: Update expected\n+\toutput.\n+\n+2019-08-26  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24938\n+\t* debug.c (debug_write_type): Call empty_type for NULL type here..\n+\t(debug_write_type): ..rather than in just one case here.\n+\n+2019-08-23  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24829\n+\t* dwarf.c (check_uvalue): New function.  Ensures that a block's\n+\tsize is valid.\n+\t(read_and_display_attr_value): Use check_value when processsing\n+\tDW_FORM_block<n> attributes.\n+\n+2019-08-22  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24921\n+\t* dwarf.c (process_cu_tu_index): Handle the case where a table\n+\tdoes not have any columns.\n+\n+2019-08-19  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24898\n+\t* dwarf.c (display_debug_frames): Use the read_cie check and error\n+\tfor augmentation data length.\n+\n+2019-08-17  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24911\n+\t* dwarf.c (comp_addr_base): Dereference args.\n+\n+2019-08-16  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24909\n+\tPR 23499\n+\t* readelf.c (get_symbol_version_string): Set sym_info earlier.\n+\n+2019-08-15  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24767\n+\t* doc/binutils.texi (nm): Document the 'n' symbol type.\n+\n+2019-08-15  Christophe Vidal  <support@krizalys.com>\n+\n+\t* docs/binutils.texi: Fixed notice message disassembler options\n+\tsection of the man page.\n+\n+2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>\n+\n+\t* readelf.c (get_mips_dynamic_type): Return MIPS_XHASH dynamic type.\n+\t(get_mips_section_type_name): Return MI{S_XHASH name string.\n+\t(dynamic_section_mips_val): Initialize the .MIPS.xhash dynamic\n+\tinfo.\n+\t(process_symbol_table): Initialize the .MIPS.xhash section\n+\tpointer. Adjust the readelf output to support the new section.\n+\t(process_object): Set the .MIPS.xhash dynamic info to zero.\n+\n+2019-08-09  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* testsuite/binutils-all/arm/in-order-all.d: Skip on pe, wince, coff.\n+\t* testsuite/binutils-all/arm/in-order.d: Likewise.\n+\t* testsuite/binutils-all/arm/out-of-order-all.d: Likewise.\n+\t* testsuite/binutils-all/arm/out-of-order.d: Likewise.\n+\n+2019-08-08  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24887\n+\t* readelf.c (process_notes_at): Left justify the \"Data size\"\n+\tcolumn heading.\n+\t* testsuite/binutils-all/i386/empty.d: Adjust for new output format.\n+\t* testsuite/binutils-all/i386/ibt.d: Likewise.\n+\t* testsuite/binutils-all/i386/pr21231a.d: Likewise.\n+\t* testsuite/binutils-all/i386/pr21231b.d: Likewise.\n+\t* testsuite/binutils-all/i386/shstk.d: Likewise.\n+\t* testsuite/binutils-all/note-2-32.d: Likewise.\n+\t* testsuite/binutils-all/note-2-64.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/empty.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/ibt-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/ibt.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr21231a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/shstk-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/shstk.d: Likewise.\n+\n+2019-08-08  Nick Clifton  <nickc@redhat.com>\n+\n+\t* testsuite/gentestdlls.c (main): Move declaration of loop\n+\tvariable outside of the for() statement.\n+\n+2019-08-08  Jordan Rupprecht  <rupprecht@google.com>\n+\n+\t* readelf.c (process_note): Mask unknown description data bytes.\n+\n+2019-08-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_data): Improve overflow checks.\n+\n+2019-08-07  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24777\n+\t* doc/binutils.texi: Ensure consistent formating of title strings\n+\tfor man pages.  Extend the title of the size man page to be more\n+\tinformative.\n+\n+2019-08-07  Omair Majid  <omajid@redhat.com>\n+\n+\t* testsuite/binutils-all/objdump.exp\n+\t(test_objdump_dotnet_assemblies): Fix test to distinguish errors\n+\tin parsing simple pei-i386 and pei-x86-64 vs parsing the newly\n+\tintroduced machine types.\n+\t* testsuite/gentestdlls.c (write_simple_dll): New function.\n+\t(main): Generate simple and Linux-specific variants of pei-i386\n+\tand pei-x86-64 files so both can be used by tests.\n+\n+2019-08-07  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24876\n+\t* readelf.c (dump_ia64_unwind): Check that buffer is large\n+\tenough for \"stamp\" before reading.\n+\n+2019-08-05  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24874\n+\t* objcopy.c (merge_gnu_build_notes): Do not insist on the first\n+\tnote being a version note.\n+\tRemove spurious debugging fprintf.\n+\n+2019-08-05  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24829\n+\t* readelf.c (apply_relocations): Catch potential integer overflow\n+\twhilst checking reloc location against section size.\n+\n+2019-08-02  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24871\n+\t* readelf.c (ABSADDR): Delete.\n+\t(dump_ia64_unwind): Expand ABSADDR.  Check validity of info.section.\n+\n+2019-07-29  Martin Liska  <mliska@suse.cz>\n+\n+\tPR 24768\n+\t* nm.c (filter_symbols): Set report_plugin_err if\n+\terror is reported.\n+\t(display_rel_file): Report error for a missing LTO plugin.\n+\n+2019-07-26  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24798\n+\t* dwarf.c (process_cu_tu_index): Avoid integer overflow on 64-bit\n+\tsystems by casting ncols and nslots expressions to size_t.  Display\n+\tnumber of columns and slots before giving up due to buffer overflow.\n+\tUse %u to display unsigned ints.  Perform more pointer wrap tests.\n+\n+2019-07-25  Tom Tromey <tromey@adacore.com>\n+\n+\tPR 24809\n+\t* dwarf.c (display_debug_names): Display the contents of the\n+\taugmentation string, if it is printable.\n+\n+2019-07-25  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24837\n+\t* readelf.c (process_mips_specific): Check for buffer overflow\n+\tbefore reading reginfo information.\n+\n+2019-07-24  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 13256\n+\t* ar.c (decode_options): Restart option scanning if no operation\n+\tis detected and argument remain to be scanned.\n+\n+2019-07-23  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24818\n+\t* objdump.c (is_relocateable): Delete.\n+\t(load_specific_debug_section): Test the abfd for relocations\n+\tdirectly, rather than relying upon is_relocateable.\n+\t(dump_dwarf): Delete initlialization of is_relocateable.\n+\n+2019-07-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_parisc_segment_type): Split off hpux entries..\n+\t(get_ia64_segment_type): ..and these..\n+\t(get_hpux_segment_type): ..to here.\n+\t(get_segment_type): Condition GNU_MBIND on osabi.  Use\n+\tget_hpux_segment_type.\n+\t(get_symbol_binding): Do not print UNIQUE for ELFOSABI_NONE.\n+\t(get_symbol_type): Do not print IFUNC for ELFOSABI_NONE.\n+\n+2019-07-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objcopy.exp (elf64): Correct object\n+\tfile used to set this variable.\n+\n+2019-07-23  Omar Majid  <omajid@redhat.com>\n+\n+\t* Makefile.am (AUTOMAKE_OPTIONS): Add subdir-objects\n+\t(GENTESTDLLSPROG): Define.\n+\t(TEST_PROGS): Add GENTESTDLLSPROG.\n+\t* Makefile.in: Regenerate.\n+\t* testsuite/binutils-all/objdump.exp\n+\t(test_objdump_dotnet_assemblies): New proc.\n+\tRun the new proc.\n+\t* testsuite/gentestdlls.c: New source file.\n+\n+2019-06-28  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24707\n+\t* objdump.c (slurp_symtab): Fail with a helpful error message if\n+\tthe symbol table is too large.  Skip this check for MMO format\n+\tfiles.\n+\n+2019-06-26  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24703\n+\t* bucomm.c (bfd_nonfatal): If no bfd error code has been set then\n+\tindicate this in the output.\n+\t(bfd_nonfatal_message): Likewise.\n+\n+2019-06-25  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* readelf.c (dump_ctf_indent_lines): Rename local variable\n+\t\"spaces\" to \"blanks\".\n+\n+2019-06-25  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* objdump.c (dump_ctf_indent_lines): Rename local variable\n+\t\"spaces\" to \"blanks\".\n+\n+2019-06-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* doc/Makefile.in: Regenerate.\n+\n+2019-06-12  Christos Zoulas  <christos@zoulas.com>\n+\n+\tPR 24663\n+\t* readelf.c (process_netbsd_elf_note): Add support for\n+\tNT_NETBSD_PAX.\n+\t(process_note): Add support for PaX notes.\n+\n+2019-06-12  Christos Zoulas  <christos@zoulas.com>\n+\n+\tPR 24665\n+\t* readelf.c (get_netbsd_elfcore_note_type): Add support for SH\n+\tcore notes.\n+\n+2019-06-12  Christos Zoulas  <christos@zoulas.com>\n+\n+\tPR 24664\n+\t* readelf.c (get_netbsd_elfcore_note_type): Add support for NetBSD\n+\tauxv notes.\n+\n+2019-06-11  Christos Zoulas  <christos@zoulas.com>\n+\n+\tPR 24662\n+\t* readelf.c (get_alpha_symbol_other): New function.\n+\t(get_symbol_other): Use for Alpha symbols.\n+\t(is_32bit_pcrel_reloc): Add R_VAX_PCREL32.\n+\n+2019-06-11  Christos Zoulas  <christos@zoulas.com>\n+\n+\tPR 24661\n+\t* readelf.c (decode_arm_unwind): Ensure that the local variable\n+\t'addr' is always initialised.\n+\n+2019-06-10  Christos Zoulas  <christos@zoulas.com>\n+\n+\tPR 24651\n+\t* strings.c (print_strings): Use %u to print unsigned values in\n+\tdecimal.\n+\n+2019-06-10  Christos Zoulas  <christos@zoulas.com>\n+\n+\tPR 24649\n+\t* arsup.c (ar_open): Use asprintf in place of xmalloc and\n+\tsprintf.\n+\n+2019-06-03  Nick Clifton  <nickc@redhat.com>\n+\n+\tRevert:\n+\t2019-05-29  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure.ac (LIBCTF): Export.  Set to empty for non-ELF based\n+\ttargets.\n+\t(HAVE_LIBCTF): Define if libctf support is available.\n+\t* Makefile.am (LIBCTF): Set value to @LIBCTF@.\n+\t* objdump.c: Make CTF code conditional upon HAVE_LIBCTF being\n+\tdefined.\n+\t* readelf.c: Likewise.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* config.in: Regenerate.\n+\n+2019-05-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (make_ctfsect): Drop cts_type, cts_flags, and\n+\tcts_offset.\n+\t* readelf.c (shdr_to_ctf_sect): Likewise.\n+\n+2019-05-30  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24627\n+\t* readelf.c (process_version_sections): Add 0x prefix to address\n+\tdisplay.  Correct indentation.\n+\n+2019-05-30  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (supports_gnu_unique): Add\n+\ts12z to targets not supporting this feature.\n+\n+2019-05-30  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (run_dump_test): Support\n+\ttcl procedures for xfail args.\n+\n+2019-05-29  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Add libctf to list of directories\n+\tthat need updates in their ChangeLogs.\n+\n+2019-05-29  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure.ac (LIBCTF): Export.  Set to empty for non-ELF based\n+\ttargets.\n+\t(HAVE_LIBCTF): Define if libctf support is available.\n+\t* Makefile.am (LIBCTF): Set value to @LIBCTF@.\n+\t* objdump.c: Make CTF code conditional upon HAVE_LIBCTF being\n+\tdefined.\n+\t* readelf.c: Likewise.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* config.in: Regenerate.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* MAINTAINERS: Add myself as CTF maintainer.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (ctf-api.h): New include.\n+\t(dump_ctf_section_info): New variable.\n+\t(dump_ctf_section_name): Likewise.\n+\t(usage): Describe new options.\n+\t(enum option_values): Add OPTION_CTF and OPTION_CTF_PARENT.\n+\t(main): Use them to add --ctf and --ctf-parent.\n+\t(read_section_stabs): Add new parameter, entsize_ptr.\n+\t(find_stabs_section): Adjust accordingly.\n+\t(make_ctfsect): New.\n+\t(dump_ctf_indent_lines): New.\n+\t(dump_ctf_archive_member): New.\n+\t(dump_ctf): New.\n+\t(dump_bfd): Call it.  Free resources afterwards.\n+\t* readelf.c (ctf-api.h): New include.\n+\t(CTF_DUMP): New.\n+\t(static bfd_boolean do_ctf): Likewise.\n+\t(dump_ctf_parent_name): Likewise.\n+\t(dump_ctf_symtab_name): Likewise.\n+\t(dump_ctf_strtab_name): Likewise.\n+\t(OPTION_CTF_DUMP): Likewise.\n+\t(OPTION_CTF_PARENT): Likewise.\n+\t(OPTION_CTF_SYMBOLS): Likewise.\n+\t(OPTION_CTF_STRINGS): Likewise.\n+\t(options): Add them.\n+\t(usage): Likewise.\n+\t(parse_args): Handle the new options, requesting CTF_DUMP.\n+\t(process_section_contents): Handle CTF_DUMP.\n+\t(shdr_to_ctf_sect): New.\n+\t(dump_ctf_indent_lines): New.\n+\t(dump_section_as_ctf): New.\n+\t(main): Free resources.\n+\t* Makefile.am (LIBCTF): New variable.\n+\t(objdump_DEPENDENCIES): Use it.\n+\t(readelf_DEPENDENCIES): Likewise.\n+\t(objdump_LDADD): Likewise.\n+\t(readelf_LDADD): Likewise.\n+\t* aclocal.m4: Regenerated.\n+\t* Makefile.in: Likewise.\n+\n+\t* doc/binutils.texi (objdump): Document the new options.\n+\t(readelf): Likewise.\n+\t* doc/ctf.options.texi: New.\n+\t* doc/Makefile.in: Regenerated.\n+\t* NEWS: Mention the new feature.\n+\n+2019-05-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_section_groups): Continue processing groups\n+\twhen sh_entsize exceeds group size.\n+\n+2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* readelf.c (get_aarch64_dynamic_type): Handle DT_AARCH64_VARIANT_PCS.\n+\t(get_aarch64_symbol_other): New, handles STO_AARCH64_VARIANT_PCS.\n+\t(get_symbol_other): Call get_aarch64_symbol_other.\n+\n+2019-05-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (disassemble_bytes): Set WIDE_OUTPUT in flags.\n+\n+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* MAINTAINERS: Add myself as the maintainer for BPF.\n+\n+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* readelf.c: Include elf/bpf.h.\n+\t(guess_is_rela): Hanle EM_BPF.\n+\t(dump_relocations): Likewise.\n+\t(is_32bit_abs_reloc): Likewise.\n+\t* testsuite/binutils-all/nm.exp: Add bpf-*-* to the list of\n+\tELF targets.\n+\n+2019-05-21  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* dwarf.c (dwarf_regnames_aarch64): Add SVE registers.\n+\t* testsuite/binutils-all/aarch64/sve-dwarf-registers.d: New test.\n+\t* testsuite/binutils-all/aarch64/sve-dwarf-registers.s: New test.\n+\n+2019-05-20  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n+\n+\tPR 14798\n+\t* testsuite/binutils-all/readelf.ss-mips: Update reference output.\n+\t* testsuite/binutils-all/readelf.ss-tmips: Likewise.\n+\n+2019-05-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/ca.po: Updated Catalan translation.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* NEWS: Mention Armv8.1-M Mainline and MVE.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* readelf.c (arm_attr_tag_MVE_arch): New array for Tag_MVE_arch values.\n+\t(arm_attr_public_tag arm_attr_public_tags): Add case for Tag_MVE_arch.\n+\n+2019-05-14  Jamey Hicks  <jamey.hicks@gmail.com>\n+\n+\tPR 19921\n+\t* objcopy.c: Add new option --verilog-data-width.  Use it to set\n+\tthe value of VerilogDataWidth.\n+\t* doc/binutils.texi: Document the new option.\n+\t* testsuite/binutils-all/objcopy.exp: Run tests of new option.\n+\t* testsuite/binutils-all/verilog-1.hex: New file.\n+\t* testsuite/binutils-all/verilog-2.hex: New file.\n+\t* testsuite/binutils-all/verilog-4.hex: New file.\n+\t* testsuite/binutils-all/verilog-8.hex: New file.\n+\t* NEWS: Mention the new feature.\n+\n+2019-05-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objdump.exp (test_objdump_disas_limited),\n+\t(test_objdump_content_limited): Add text arg, use in place of .text.\n+\t(bintest_signed.o): Call get_standard_section_names for name of\n+\ttext section.\n+\n+2019-05-08  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n+\n+\t* objdump.c (sign_extend_address): New function.\n+\t(dump_bfd): Sign-extend user-specified start/stop addresses\n+\tfor targets that need it.\n+\t* testsuite/binutils-all/objdump.exp: Add tests for objdump\n+\twith start and stop addresses in higher address ranges.\n+\n+2019-05-01  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* testsuite/binutils-all/objdump.exp: Correct executable\n+\tspelling.\n+\t* testsuite/binutils-all/compress.exp: Likewise.\n+\n+2019-05-01  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24507\n+\t* nm.c: (print_format): New variable.\n+\t(value_format_32bit, value_format_64bit): Delete.\n+\t(set_print_radix): Remove code to alter value_format strings.\n+\t(set_output_format): Record chosen format in print_format.\n+\t(get_print_format): New function - constructs a printf formatting\n+\tstring according to the requirements of size, radix, and output\n+\tformat.\n+\t(print_value): Use get_print_format.\n+\t* testsuite/binutils-all/nm.exp: Add tests of \"nm --format=posix\"\n+\tand \"nm -t d\".\n+\n+2019-04-30  Alan Modra  <amodra@gmail.com>\n+\n+\t* wrstabs.c (stab_start_class_type): Add assert to work around\n+\tgcc9 warning.  Tidy.\n+\n+2019-04-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (strip_main): Do not enable note merging by default if\n+\tjust stripping debug or dwo information.\n+\t* doc/binutils.texi (strip): Update documentation.\n+\n+2019-04-23  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Add note to update the symbolic\n+\tlink from \"docs\" to \"docs-2.x\" on the sourceware website.\n+\n+2019-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/copy-2.d: Don't run for ns32k-*-*.\n+\t* testsuite/binutils-all/copy-3.d: Likewise.\n+\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* readelf.c (arm_attr_tag_CPU_arch): Add entry for Armv8.1-M Mainline.\n+\n+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* readelf.c (decode_x86_isa): Handle\n+\tGNU_PROPERTY_X86_ISA_1_AVX512_BF16.\n+\t* testsuite/binutils-all/i386/pr21231b.d: Updated.\n+\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n+\n+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/binutils-all/nm.exp: Count i386-moss as ELF.\n+\n+2019-03-26  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* testsuite/binutils-all/aarch64/in-order-all.d: Update.\n+\t* testsuite/binutils-all/aarch64/in-order.d: Likewise.\n+\t* testsuite/binutils-all/aarch64/out-of-order-all.d: Likewise.\n+\t* testsuite/binutils-all/aarch64/out-of-order.d: Likewise.\n+\t* testsuite/binutils-all/aarch64/out-of-order.s: Likewise.\n+\t* testsuite/binutils-all/arm/in-order-all.d: Likewise.\n+\t* testsuite/binutils-all/arm/in-order.d: Likewise.\n+\t* testsuite/binutils-all/arm/out-of-order-all.d: Likewise.\n+\t* testsuite/binutils-all/arm/out-of-order.d: Likewise.\n+\t* testsuite/binutils-all/arm/out-of-order.s: Likewise.\n+\n+2019-03-26  Nick Clifton  <nickc@redhat.com>\n+\n+\t* MAINTAINERS: Take over Dave Brolley's maintainerships for FR30,\n+\tFRV and MEP.\n+\n+2019-03-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (dump_relocs_in_section): Warning fix.\n+\n+2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* testsuite/binutils-all/arm/in-order-all.d: New test.\n+\t* testsuite/binutils-all/arm/in-order.d: New test.\n+\t* testsuite/binutils-all/arm/objdump.exp: Support .d tests.\n+\t* testsuite/binutils-all/arm/out-of-order-all.d: New test.\n+\t* testsuite/binutils-all/arm/out-of-order.T: New test.\n+\t* testsuite/binutils-all/arm/out-of-order.d: New test.\n+\t* testsuite/binutils-all/arm/out-of-order.s: New test.\n+\n+\n+2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* testsuite/binutils-all/aarch64/in-order-all.d: New test.\n+\t* testsuite/binutils-all/aarch64/out-of-order-all.d: New test.\n+\t* testsuite/binutils-all/aarch64/out-of-order.d:\n+\n+2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* testsuite/binutils-all/aarch64/in-order.d: New test.\n+\t* testsuite/binutils-all/aarch64/out-of-order.d: Disassemble data as\n+\twell.\n+\n+2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* objdump.c (disassemble_bytes): Pass stop_offset.\n+\t* testsuite/binutils-all/aarch64/out-of-order.T: New test.\n+\t* testsuite/binutils-all/aarch64/out-of-order.d: New test.\n+\t* testsuite/binutils-all/aarch64/out-of-order.s: New test.\n+\n+2019-03-19  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24360\n+\t* objdump.c (load_specific_debug_section): Check that the amount\n+\tof memory to be allocated matches the size of the section.\n+\n+2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* readelf.c (get_aarch64_dynamic_type): Add case for\n+\tDT_AARCH64_PAC_PLT.\n+\t(dynamic_section_aarch64_val): Likewise.\n+\n+2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n+\t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* readelf.c (get_aarch64_dynamic_type): New.\n+\t(get_dynamic_type): Use above for EM_AARCH64.\n+\t(dynamic_section_aarch64_val): New.\n+\t(process_dynamic_section): Use above for EM_AARCH64.\n+\n+2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* readelf.c (decode_aarch64_feature_1_and): New.\n+\t(print_gnu_property_note): Add case for AArch64 gnu notes.\n+\n+2019-03-12  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (load_specific_debug_section): Don't compare section\n+\tsize against file size.\n+\t(dump_relocs_in_section): Don't compare reloc size against file size.\n+\tPrint \"failed to read relocs\" on bfd_get_reloc_upper_bound error.\n+\n+2019-03-05  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24295\n+\t* doc/binutils.texi (ar cmdline): Fix spelling mistake.\n+\n+2019-03-05  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sv.po: Updated Swedish translation.\n+\n+2019-03-05  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\tPR 24287\n+\t* testsuite/lib/binutils-common.exp (run_dump_test): Replace a use\n+\tof \"lmap\" with a \"foreach\" loop.\n+\n+2019-03-04  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24281\n+\t* objcopy.c (copy_archive): Do not copy thin  archives.\n+\n+2019-02-27  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* testsuite/lib/binutils-common.exp: Allow multiple \"as\" lines.\n+\n+2019-02-25  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objdump.c (sym_ok): New function.\n+\t(find_symbol_for_address): Use new function.\n+\t(disassemble_section): Compare sections by name, not pointer.\n+\t(dump_dwarf): Move code to initialise byte_get pointer and iterate\n+\tover separate debug files from here to ...\n+\t(dump_bfd): ... here.  Add parameter indicating that a separate\n+\tdebug info file is being dumped.  For main file, pull in the\n+\tsymbol tables from all separate debug info files.\n+\t(display_object): Update call to dump_bfd.\n+\t* doc/binutils.texi: Document extened behaviour of the\n+\t--dwarf=follow-links option.\n+\t* NEWS: Mention this new feature.\n+\t* testsuite/binutils-all/objdump.WK2: Update expected output.\n+\t* testsuite/binutils-all/objdump.exp (test_follow_debuglink): Add\n+\toptions and dump file parameters.\n+\tAdd extra test.\n+\t* testsuite/binutils-all/objdump.WK3: New file.\n+\t* testsuite/binutils-all/readelf.exp: Change expected output for\n+\treadelf -wKis test.\n+\t* testsuite/binutils-all/readelf.wKis: New file.\n+\n+2019-02-22  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 23843\n+\t* dwarf.h (struct separate_info): New structure for containing\n+\tinformation on separate debug info files.\n+\t* dwarf.c (struct dwo_info): New structure for containing dwo\n+\tlinks.\n+\t(first_dwo_info): Chain of dwo_info structures.\n+\t(first_separate_file): Chain of separate_info structures.\n+\t(separate_debug_file, separate_debug_filename): Delete.\n+\t(fetch_alt_indirect_string): Scan all separate debug info files\n+\tfor the requested string.\n+\t(add_dwo_info): New function.\n+\t(add_dwo_name): New function.\n+\t(add_dwo_dir): New function.\n+\t(add_dwo_id: New function.\n+\t(free_dwo_info): New function.\n+\t(read_and_display_attr_value): Store DWO data using the new\n+\tfunctions.\n+\t(load_debug_section_with_follow): If necessary, scan the list of\n+\tseparate debug info files for the requested section.\n+\t(add_separate_debug_file): New function.\n+\t(load_separate_debug_info): Call add_separate_debug_file to store\n+\tthe information on the newly loaded file.\n+\t(load_dwo_file): Likewise.\n+\t(load_separate_debif_file): Rename to load_separate_debug_files.\n+\tChange return type to boolean.  If following links then attempt to\n+\tload all separate debug info files, not just the first one.\n+\t(free_debug_memory): Release memory in dwo_info and separate_info\n+\tchains.\n+\t* objdump.c (dump_dwarf): Iterate over all loaded debg info files.\n+\t* readelf.c (process_object): Likewise.\n+\t* doc/debug.options.texi: Update descriptions of links and\n+\tfollow-links options.\n+\t* testsuite/binutils-all/objdump.WK2: Update expected output.\n+\t* testsuite/binutils-all/readelf.k2: Likewise.\n+\t* NEWS: Announce the new feature.\n+\n+2019-02-21  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24247\n+\t* unwind-ia64.c: Include sysdep.h.\n+\t(unw_decode_x1): Check current pointer against end pointer before\n+\taccessing memory.\n+\t(unw_decode_x2): Likewise.\n+\t(unw_decode_x3): Likewise.\n+\t(unw_decode_x4): Likewise.\n+\t(unw_decode_r2): Likewise.\n+\t(unw_decode_p2_p5): Likewise.\n+\t(unw_decode_p7_p10): Likewise.\n+\t(unw_decode): Likewise.\n+\n+2019-02-20  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24246\n+\t* readelf.c (print_stapsdt_note): Harden against corrupt notes.\n+\n+\tPR 24244\n+\t* unwind-ia64.c (unw_decode_uleb128): Add end parameter, use it to\n+\tprevent walking off the end of the buffer.\n+\t(unw_decode_x1): Add end paramter, pass it to unw_decode_uleb128.\n+\t(unw_decode_x2): Likewise.\n+\t(unw_decode_x3): Likewise.\n+\t(unw_decode_x4): Likewise.\n+\t(unw_decode_r2): Pass the end parameter to unw_decode_uleb128.\n+\t(unw_decode_r3): Likewise.\n+\t(unw_decode_p7_p10): Likewise.\n+\t(unw_decode_b2): Likewise.\n+\t(unw_decode_b3_x4): Likewise.\n+\n+\tPR 24243\n+\t* readelf.c (process_mips_specific): Check for an options section\n+\tthat is too small to even contain a single option.\n+\n+\tPR 24242\n+\t* readelf.c (print_ia64_vms_note): Harden against corrupt notes.\n+\n+2019-02-20  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24132\n+\tPR 24138\n+\t* readelf.c (get_data): Avoid possibility of overflow when\n+\tchecking for a read that may extend past end of file.\n+\t(process_program_headers): Likewise.\n+\n+2019-02-20  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24233\n+\t* objdump.c (dump_bfd_private_header): Print warning if\n+\tbfd_print_private_bfd_data returns false.\n+\n+2019-02-12  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 23440\n+\t* README-how-to-make-a-release: Use git clean to delete spurious\n+\tfiles from the local source repository.\n+\n+2019-02-08  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* size.c (berkeley_format): Delete.\n+\t(enum output_format): New enum.\n+\t(selected_output_format): New variable.\n+\t(usage): Update to mention GNU format.\n+\t(main): Update to extract options, and select format as needed.\n+\tHandle GNU format where needed.\n+\t(berkeley_sum): Renamed to...\n+\t(berkeley_or_gnu_sum): ...this, and updated to handle both formats.\n+\t(berkeley_format): Renamed to...\n+\t(berkeley_or_gnu_format): ...this, and updated to handle both\n+\tformats.\n+\t(print_sizes): Handle GNU format.\n+\t* doc/binutils.texi (size): Document new GNU format.\n+\t* testsuite/binutils-all/size.exp: Add test of extended\n+\tfunctionality.\n+\t* NEWS: Mention new functionality.\n+\n+2019-02-08  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* doc/binutils.texi (size): Update example output for Berkeley\n+\tformat output.\n+\n+2019-02-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Add a note about updating the\n+\tobsolete targets in the bfd/config.bfd file.\n+\n+2019-02-04  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Add more notes on making a release.\n+\n+2019-01-25  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24131\n+\t* readelf.c (process_notes_at): Prevent an illegal memory access\n+\twhen the note's namesize is zero.\n+\t(decode_tic6x_unwind_bytecode): Add code to handle the case where\n+\tno registers are specified in a frame pop instruction.\n+\n+2019-01-25  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/bg.po: Updated Bulgarian translation.\n+\n+2019-01-23  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/fr.po: Updated French translation.\n+\t* po/pt.po: Updated Portuguese translation.\n+\n+2019-01-21  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2019-01-19  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\t* binutils/po/binutils.pot.\n+\n+\t* README-how-to-make-a-release: Update description on how to make\n+\ta branch.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.32 branch created.\n+\n+2019-01-17  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objdump.c (disassemble_section): When disassembling from a\n+\tsymbol only stop at the next symbol if the original symbol was not\n+\ta function symbol.  Otherwise continue disassembling until a new\n+\tfunction is reached.\n+\t* testsuite/binutils-all/objdump.exp: Add tests of extended\n+\tfunctionality.\n+\t* testsuite/binutils-all/disasm.s: New test source file.\n+\n+2019-01-16  Kito Cheng  <kito@andestech.com>\n+\t    Nelson Chu  <nelson@andestech.com>\n+\n+\t* readelf.c (get_riscv_section_type_name): New function.\n+\t(get_section_type_name): Add handler for RISC-V.\n+\t(riscv_attr_tag_t): Declare.\n+\t(riscv_attr_tag): New.\n+\t(display_riscv_attribute): New function.\n+\t(process_attributes): Add handler for RISC-V.\n+\t* testsuite/binutils-all/strip-3.d: Remove .riscv.attribute\n+\tsection.\n+\n+2019-01-10  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 23963\n+\t* objdump.c (sanitize_string): New function.  Removes control\n+\tcharacters from symbol names.\n+\t(dump_section_header): Use new function.\n+\t(objdump_print_symname): Likewise.\n+\t(objdump_print_addr_with_sym): Likewise.\n+\t(show_line): Likewise.\n+\t(disassemble_bytes): Likewise.\n+\t(disassemble_section): Likewise.\n+\t(load_specific_debug_section): Likewise.\n+\t(read_section_stabs): Likewise.\n+\t(print_section_stabs): Likewise.\n+\t(dump_section): Likewise.\n+\t(dump_reloc_set): Likewise.\n+\t(dump_relocs_in_section): Likewise.\n+\t(dump_bfd): Likewise.\n+\t(display_any_bfd): Likewise.\n+\n+2019-01-09  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24049\n+\t* readelf.c (process_archive): Use arch.file_name in error\n+\tmessages until the qualified name is available.\n+\n+2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>\n+\n+\t* configure: Regenerate.\n+\n+2019-01-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/cxxfilt.exp: Pass --no-strip-underscores\n+\tunconditionally to tests needing the option rather than via a\n+\tlist of targets.\n+\n+2019-01-08  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24044\n+\t* cxxfilt.c (hp_symbol_characters): Delete.\n+\t(main): Remove depcreated demangling styles.\n+\t* stabs.c (parse_stab_argtypes): Remove support for old gnu v2\n+\tdemangling opnames.\n+\t* testsuite/binutils-all/cxxfilt.exp: Use the\n+\t--no-strip-underscore option for targets that do prefix their\n+\tsymbols with underscores.\n+\tUpdate tests to eliminate those that use gnu v2 encoding.\n+\n+2019-01-08  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR 24065\n+\t* testsuite/binutils-all/copy-6.d: New test.\n+\t* testsuite/binutils-all/objcopy.exp: Use it.\n+\n+2019-01-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (run_dump_test): Don't prepend\n+\t$srcdir/$subdir to source file name if it starts with \"./\".\n+\n+2019-01-05  Yoshinori Sato <ysato@users.sourceforge.jp>\n+\n+\t* readelf.c (get_machine_flags): Add RXv3 output.\n+\n+2019-01-04  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24005\n+\t* objdump.c (load_specific_debug_section): Check for integer\n+\toverflow before attempting to allocate contents.\n+\n+2019-01-04  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24001\n+\t* objcopy.c (copy_object): Free dhandle after writing out the\n+\tdebug information.\n+\t* objdump.c (dump_bfd): Free dhandle after printing out the debug\n+\tinformation.\n+\n+\n+2019-01-01  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2018\n+\f\n+Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "43dd3f31db701088338730ebc7579da09d72f8a1",
      "filename": "elfcpp/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 57,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/elfcpp/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/elfcpp/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/ChangeLog?ref=0b11474080800192797236e30857a42818f5560d",
      "patch": "@@ -1,61 +1,6 @@\n-2019-09-09  Phil Blundell  <pb@pbcl.net>\n-\n-\tbinutils 2.33 branch created.\n-\n-2019-08-02  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.h (R_PPC64_TPREL34, R_PPC64_DTPREL34),\n-\t(R_PPC64_GOT_TLSGD34, R_PPC64_GOT_TLSLD34),\n-\t(R_PPC64_GOT_TPREL34, R_PPC64_GOT_DTPREL34): Define.\n-\n-2019-07-13  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.h (R_PPC64_PCREL_OPT, R_PPC64_D34, R_PPC64_D34_LO),\n-\t(R_PPC64_D34_HI30, R_PPC64_D34_HA30, R_PPC64_PCREL34),\n-\t(R_PPC64_GOT_PCREL34, R_PPC64_PLT_PCREL34, R_PPC64_PLT_PCREL34_NOTOC),\n-\t(R_PPC64_ADDR16_HIGHER34, R_PPC64_ADDR16_HIGHERA34),\n-\t(R_PPC64_ADDR16_HIGHEST34, R_PPC64_ADDR16_HIGHESTA34),\n-\t(R_PPC64_REL16_HIGHER34, R_PPC64_REL16_HIGHERA34),\n-\t(R_PPC64_REL16_HIGHEST34, R_PPC64_REL16_HIGHESTA34),\n-\t(R_PPC64_D28, R_PPC64_PCREL28): Define.\n-\n-2019-07-13  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.h (R_PPC64_PLTSEQ_NOTOC, R_PPC64_PLTCALL_NOTOC): Define.\n-\n-2019-06-28  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.h (R_PPC64_REL16_HIGH, R_PPC64_REL16_HIGHA),\n-\t(R_PPC64_REL16_HIGHER, R_PPC64_REL16_HIGHERA),\n-\t(R_PPC64_REL16_HIGHEST, R_PPC64_REL16_HIGHESTA): Define.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\n-\t* arm.h (Tag_MVE_arch): Define new enum value.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm.h (R_ARM_THM_BF12): New relocation code.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm.h (R_ARM_THM_BF18): New relocation code.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm.h (R_ARM_THM_BF16): New relocation code.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.32 branch created.\n-\n-2019-01-01  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2018\n+For older changes see ChangeLog-2019\n \f\n-Copyright (C) 2019 Free Software Foundation, Inc.\n+Copyright (C) 2020 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "3f7e39e6e335b7096440a9cb062bf576c5986294",
      "filename": "elfcpp/ChangeLog-2019",
      "status": "added",
      "additions": 69,
      "deletions": 0,
      "changes": 69,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/elfcpp/ChangeLog-2019",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/elfcpp/ChangeLog-2019",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/ChangeLog-2019?ref=0b11474080800192797236e30857a42818f5560d",
      "patch": "@@ -0,0 +1,69 @@\n+2019-09-09  Phil Blundell  <pb@pbcl.net>\n+\n+\tbinutils 2.33 branch created.\n+\n+2019-08-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.h (R_PPC64_TPREL34, R_PPC64_DTPREL34),\n+\t(R_PPC64_GOT_TLSGD34, R_PPC64_GOT_TLSLD34),\n+\t(R_PPC64_GOT_TPREL34, R_PPC64_GOT_DTPREL34): Define.\n+\n+2019-07-13  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.h (R_PPC64_PCREL_OPT, R_PPC64_D34, R_PPC64_D34_LO),\n+\t(R_PPC64_D34_HI30, R_PPC64_D34_HA30, R_PPC64_PCREL34),\n+\t(R_PPC64_GOT_PCREL34, R_PPC64_PLT_PCREL34, R_PPC64_PLT_PCREL34_NOTOC),\n+\t(R_PPC64_ADDR16_HIGHER34, R_PPC64_ADDR16_HIGHERA34),\n+\t(R_PPC64_ADDR16_HIGHEST34, R_PPC64_ADDR16_HIGHESTA34),\n+\t(R_PPC64_REL16_HIGHER34, R_PPC64_REL16_HIGHERA34),\n+\t(R_PPC64_REL16_HIGHEST34, R_PPC64_REL16_HIGHESTA34),\n+\t(R_PPC64_D28, R_PPC64_PCREL28): Define.\n+\n+2019-07-13  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.h (R_PPC64_PLTSEQ_NOTOC, R_PPC64_PLTCALL_NOTOC): Define.\n+\n+2019-06-28  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.h (R_PPC64_REL16_HIGH, R_PPC64_REL16_HIGHA),\n+\t(R_PPC64_REL16_HIGHER, R_PPC64_REL16_HIGHERA),\n+\t(R_PPC64_REL16_HIGHEST, R_PPC64_REL16_HIGHESTA): Define.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* arm.h (Tag_MVE_arch): Define new enum value.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm.h (R_ARM_THM_BF12): New relocation code.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm.h (R_ARM_THM_BF18): New relocation code.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm.h (R_ARM_THM_BF16): New relocation code.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.32 branch created.\n+\n+2019-01-01  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2018\n+\f\n+Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "43dd3f31db701088338730ebc7579da09d72f8a1",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 4872,
      "changes": 4874,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=0b11474080800192797236e30857a42818f5560d"
    },
    {
      "sha": "dc028c9f055fbfc67fd43da101c28ea5ac8dd5b4",
      "filename": "gas/ChangeLog-2019",
      "status": "added",
      "additions": 4884,
      "deletions": 0,
      "changes": 4884,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/gas/ChangeLog-2019",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/gas/ChangeLog-2019",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog-2019?ref=0b11474080800192797236e30857a42818f5560d"
    },
    {
      "sha": "43dd3f31db701088338730ebc7579da09d72f8a1",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 276,
      "changes": 278,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=0b11474080800192797236e30857a42818f5560d",
      "patch": "@@ -1,280 +1,6 @@\n-2019-11-26  Martin Liska  <mliska@suse.cz>\n-\n-\t* layout.cc (Layout::special_ordering_of_input_section):\n-\tAdd \".text.sorted\".\n-\t* output.cc: Special case \".text.sorted\".\n-\t* testsuite/section_sorting_name.cc: Cover also .text.sorted\n-\tsubsections.\n-\t* testsuite/section_sorting_name.sh: Likewise.\n-\n-2019-11-19  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24853\n-\t* symtab.h (set_has_gnu_output, has_gnu_output_): New.\n-\t* symtab.cc (Symbol_table::Symbol_table): Init has_gnu_output_.\n-\t(Symbol_table::finalize): Set ELFOSABI_GNU when has_gnu_output_.\n-\t(Symbol_table::set_dynsym_indexes, Symbol_table::sized_finalize):\n-\tCall set_has_gnu_output for STT_GNU_IFUNC and STB_GNU_UNIQUE globals.\n-\t* object.cc (Sized_relobj_file::do_finalize_local_symbols): Call\n-\tset_has_gnu_output when STT_GNU_IFUNC locals will be output.\n-\n-2019-11-11  Miguel Saldivar  <saldivarcher@gmail.com>\n-\n-\tPR 24996\n-\t* expression.cc (Trinary_expression::arg2_value): Use correct integer\n-\texpression when calling \"eval_maybe_dot\" method.\n-\t(Trinary_expression::arg3_value): Likewise.\n-\n-2019-09-28  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 16794\n-\t* i386.cc (Target_i386::Relocate::relocate <R_386_GOTOFF>): Don't\n-\tignore addend, apply using pcrel32.\n-\t* x86_64.cc (Target_x86_64::Relocate::relocate <R_X86_64_GOTOFF64>):\n-\tSimilarly use pcrel64.\n-\n-2019-09-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t* descriptors.cc: Include <string>\n-\n-2019-09-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/plugin_new_section_layout.c (new_input_hook): Correct\n-\treturn status enum values.\n-\n-2019-09-20  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24768\n-\t* layout.cc (Layout::Layout): Init lto_slim_object_.\n-\t* object.cc (Sized_relobj_file::do_layout): Wrap overlong line.\n-\tDon't use C cast.  Validate section size.  Don't copy contents.\n-\n-2019-09-20  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc::Scan::check_non_pic): Move REL24\n-\tto 32-bit supported.\n-\n-2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n-\n-\t* testsuite/Makefile.in: Re-generate.\n-\n-2019-09-09  Phil Blundell  <pb@pbcl.net>\n-\n-\tbinutils 2.33 branch created.\n-\n-2019-08-16  Martin Liska  <mliska@suse.cz>\n-\n-\tPR ld/24912\n-\t* object.cc (big_endian>::do_layout): Do not report error,\n-\tbut only set a flag.\n-\t(big_endian>::do_add_symbols): Report error only for when\n-\trelocatable.\n-\n-2019-08-02  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc::Scan::get_reference_flags): Set\n-\tflags for new relocations, and some missing older relocs.\n-\t(Target_powerpc::Scan::local): Handle new pcrel tls relocs.\n-\tCall set_has_static_tls for tprel relocs.\n-\t(Target_powerpc::Scan::global): Likewise.\n-\t(Target_powerpc::Relocate::relocate): Handle new pcrel tls relocs.\n-\n-2019-08-02  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Powerpc_relocate_functions::rela, rela_ua): Perform\n-\tsigned right shift for signed overflow check.\n-\n-2019-07-29  Martin Liska  <mliska@suse.cz>\n-\n-\tPR 24768\n-\t* layout.h (class Layout): Add is_lto_slim_object and\n-\tset_lto_slim_object.\n-\t* object.cc (struct lto_section): Add lto_slim_object_.\n-\t(big_endian>::do_layout): Parse content of\n-\t.gnu_lto_.lto section.\n-\t(big_endian>::do_add_symbols): Report error for a missing\n-\tLTO plugin.\n-\n-2019-07-13  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (xlate_pcrel_opt): New function.\n-\t(Target_powerpc::Relocate::relocate): Optimise PCREL34 and\n-\tGOT_PCREL34 sequences marked with PCREL_OPT.\n-\n-2019-07-13  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Powerpc_relobj::make_got_relative): New function.\n-\t(relative_value_is_known): New functions.\n-\t(Target_powerpc::Relocate::relocate): Edit code using\n-\tGOT16_HA, GOT16_LO_DS, and GOT_PCREL34 relocs.\n-\n-2019-07-13  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc): Add powerxx_stubs_ and accessor\n-\tfunctions.\n-\t(Target_powerpc::maybe_skip_tls_get_addr_call): Handle PLT_PCREL34\n-\tand PLT_PCREL34_NOTOC relocs.\n-\t(Powerpc_relocate_functions): Add addr34, addr34_hi, addr34_ha,\n-\taddr28, addr16_higher34, addr16_highera34, addr16_highest34,\n-\taddr16_highest34a functions.\n-\t(li_11_0, ori_11_11_0, sldi_11_11_34): Define.\n-\t(paddi_12_pc, pld_12_pc, pnop): Define.\n-\t(d34, ha34): New inline functions.\n-\t(Stub_table::add_plt_call_entry): Handle powerxx_stubs.\n-\t(Stub_table::add_eh_frame): Likewise.\n-\t(build_powerxx_offset): New function.\n-\t(Stub_table::plt_call_size): Handle powerxx_stubs.\n-\t(Stub_table::branch_stub_size): Likewise.\n-\t(Stub_table::do_write): Likewise.\n-\t(Target_powerpc::Scan::get_reference_flags): Handle new relocs.\n-\t(Target_powerpc::Scan::reloc_needs_plt_for_ifunc: Likewise.\n-\t(Target_powerpc::Scan::local, global, relocate): Likewise.\n-\n-2019-07-13  Alan Modra  <amodra@gmail.com>\n-\n-\t* ehframe.cc (Fde::operator==): Delete.\n-\t(Cie::remove_fde): Delete.\n-\t(Eh_frame::remove_ehframe_for_plt): Delete fde_data and fde_length\n-\tparameters.  Remove all post-map plt FDEs.\n-\t* ehframe.h (Fde:post_map): Make const, add variant to compare plt.\n-\t(Fde::operator==): Delete.\n-\t(Cie::remove_fde): Implement here.\n-\t(Cie::last_fde): New accessor.\n-\t(Eh_frame::remove_ehframe_for_plt): Update prototype.\n-\t* layout.cc (Layout::remove_eh_frame_for_plt): Delete fde_data and\n-\tfde_length parameters.\n-\t* layout.h (Layout::remove_eh_frame_for_plt): Update prototype.\n-\t* powerpc.cc (Stub_table::tls_get_addr_opt_bctrl_): Delete.\n-\t(Stub_table::plt_fde_len_, plt_fde_, init_plt_fde): Delete.\n-\t(Stub_table::add_plt_call_entry): Don't set tls_get_addr_opt_bctrl_.\n-\t(eh_advance): New function.\n-\t(stub_sort): New function.\n-\t(Stub_table::add_eh_frame): Emit eh_frame for notoc plt calls and\n-\tbranches as well as __tls_get_addr_opt plt call stub.\n-\t(Stub_table::remove_eh_frame): Update to suit.\n-\n-2019-07-13  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc::maybe_skip_tls_get_addr_call): Handle\n-\tnotoc calls.\n-\t(is_branch_reloc): Template on size.  Return true for REL24_NOTOC.\n-\tUpdate all callers.\n-\t(max_branch_delta): Likewise.\n-\t(Target_powerpc::Branch_info::make_stub): Add a stub for notoc\n-\tcalls to functions needing a valid toc pointer.\n-\t(Target_powerpc::do_relax): Layout stubs again if any need resize.\n-\t(add_12_11_12, addi_12_11, addis_12_11, ldx_12_11_12, ori_12_12_0),\n-\t(oris_12_12_0, sldi_12_12_32): Define.\n-\t(Stub_table::Plt_stub_ent): Add notoc_ and iter_ fields.\n-\t(Stub_table::Branch_stub_key, Branch_stub_key_hash): Rename from\n-\tBranch_stub_ent and Branch_stub_ent hash.  Remove save_res_ from key.\n-\t(Stub_table::Branch_stub_ent): New struct.\n-\t(class Stub_table): Add need_resize and resizing vars.\n-\t(Stub_table::need_resize, branch_size): New accessors.\n-\t(Stub_table::set_resizing): New function.\n-\t(Stub_table::add_plt_call_entry): Handle notoc calls and resizing\n-\ton seeing such or a tocsave stubs after a normal stub using the\n-\tsame sym.\n-\t(Stub_table::add_long_branch_entry): Similarly.\n-\t(Stub_table::find_long_branch_entry): Return a Branch_stub_ent*.\n-\t(Stub_table::define_stub_syms): Adjust\n-\t(Stub_table::build_tls_opt_head, build_tls_opt_tail): New functions.\n-\t(build_notoc_offset): New function.\n-\t(Stub_table::plt_call_size): Move out of line.  Handle notoc calls.\n-\t(Stub_table::branch_stub_size): Similarly.\n-\t(Stub_table::do_write): Separate loop for ELFv2 stubs, handling\n-\tnotoc calls.  Simplify ELFv1 loop.  Output notoc branch stubs.\n-\tUse build_tls_opt_head and build_tls_opt_tail.\n-\t(Target_powerpc::Scan::get_reference_flags): Handle REL24_NOTOC.\n-\t(Target_powerpc::Scan::reloc_needs_plt_for_ifunc): Likewise,\n-\tand PLTSEQ_NOTOC and PLTCALL_NOTOC.\n-\t(Target_powerpc::Scan::local, global, relocate): Likewise.\n-\n-2019-06-28  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc::Relocate::relocate): Don't look\n-\tat next/previous reloc when relnum is -1.\n-\n-2019-06-28  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Stub_table::plt_error): New function.\n-\t(Stub_table::do_write): Use it.\n-\t(Output_data_glink::do_write): Don't segfault emitting linkage\n-\ttable error.\n-\n-2019-06-28  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc::Scan::get_reference_flags): Handle\n-\tREL16_HIGH* relocs.\n-\t(Target_powerpc::Scan::local): Likewise.\n-\t(Target_powerpc::Scan::global): Likewise.\n-\t(Target_powerpc::Relocate::relocate): Likewise.\n-\n-2019-06-10  Martin Liska  <mliska@suse.cz>\n-\n-\t* errors.h: Include string.\n-\n-2019-05-10  Joshua Oreman  <oremanj@hudson-trading.com>\n-\n-\tPR gold/21066\n-\t* gc.h (gc_process_relocs): Track relocations in .eh_frame sections\n-\twhen ICF is enabled, even though the .eh_frame sections themselves\n-\tare not foldable.\n-\t* icf.cc (get_section_contents): Change arguments to permit operation\n-\ton just part of a section. Include extra identity regions in the\n-\treferring section's contents recursively.\n-\t(match_sections): Lock object here instead of in get_section_contents\n-\tso that get_section_contents can operate recursively.\n-\t(Icf::add_ehframe_links): New method.\n-\t(Icf::find_identical_sections): Pass .eh_frame sections to\n-\tadd_ehframe_links(). Increase default iteration count from 2 to 3\n-\tbecause handling exception info typically requires one extra iteration.\n-\t* icf.h (Icf::extra_identity_list_): New data member with accessor.\n-\t(is_section_foldable_candidate): Include .gcc_except_table sections.\n-\t* options.h: Update documentation for new default ICF iteration count.\n-\t* testsuite/Makefile.am (icf_test_pr21066): New test case.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/icf_test_pr21066.cc: New source file.\n-\t* testsuite/icf_test_pr21066.sh: New test script.\n-\n-2019-02-19  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>\n-\n-     PR gold/23870\n-     * aarch64.cc (Target_aarch64::Scan::global): Check if a symbol with\n-     R_AARCH64_MOVW_.ABS_* relocations requires a PLT entry.\n-     * testsuite/Makefile.am: Add aarch64_pr23870 test case.\n-     * testsuite/Makefile.in: Regenerate.\n-     * testsuite/aarch64_pr23870_bar.c: New file.\n-     * testsuite/aarch64_pr23870_foo.c: New file.\n-     * testsuite/aarch64_pr23870_main.S: New file.\n-\n-2019-02-12  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/fr.po: Updated French translation.\n-\n-2019-01-21  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2019-01-19  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/gold.pot: Regenerate.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.32 branch created.\n-\n-2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>\n-\n-\t* configure: Regenerate.\n-\n-2019-01-01  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2018\n+For older changes see ChangeLog-2019\n \f\n-Copyright (C) 2019 Free Software Foundation, Inc.\n+Copyright (C) 2020 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "3dc2ce81b7265d3fc631d50b6cf8123f3f6f0938",
      "filename": "gold/ChangeLog-2019",
      "status": "added",
      "additions": 288,
      "deletions": 0,
      "changes": 288,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/gold/ChangeLog-2019",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/gold/ChangeLog-2019",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog-2019?ref=0b11474080800192797236e30857a42818f5560d",
      "patch": "@@ -0,0 +1,288 @@\n+2019-11-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* layout.cc (Layout::special_ordering_of_input_section):\n+\tAdd \".text.sorted\".\n+\t* output.cc: Special case \".text.sorted\".\n+\t* testsuite/section_sorting_name.cc: Cover also .text.sorted\n+\tsubsections.\n+\t* testsuite/section_sorting_name.sh: Likewise.\n+\n+2019-11-19  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24853\n+\t* symtab.h (set_has_gnu_output, has_gnu_output_): New.\n+\t* symtab.cc (Symbol_table::Symbol_table): Init has_gnu_output_.\n+\t(Symbol_table::finalize): Set ELFOSABI_GNU when has_gnu_output_.\n+\t(Symbol_table::set_dynsym_indexes, Symbol_table::sized_finalize):\n+\tCall set_has_gnu_output for STT_GNU_IFUNC and STB_GNU_UNIQUE globals.\n+\t* object.cc (Sized_relobj_file::do_finalize_local_symbols): Call\n+\tset_has_gnu_output when STT_GNU_IFUNC locals will be output.\n+\n+2019-11-11  Miguel Saldivar  <saldivarcher@gmail.com>\n+\n+\tPR 24996\n+\t* expression.cc (Trinary_expression::arg2_value): Use correct integer\n+\texpression when calling \"eval_maybe_dot\" method.\n+\t(Trinary_expression::arg3_value): Likewise.\n+\n+2019-09-28  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 16794\n+\t* i386.cc (Target_i386::Relocate::relocate <R_386_GOTOFF>): Don't\n+\tignore addend, apply using pcrel32.\n+\t* x86_64.cc (Target_x86_64::Relocate::relocate <R_X86_64_GOTOFF64>):\n+\tSimilarly use pcrel64.\n+\n+2019-09-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* descriptors.cc: Include <string>\n+\n+2019-09-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/plugin_new_section_layout.c (new_input_hook): Correct\n+\treturn status enum values.\n+\n+2019-09-20  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24768\n+\t* layout.cc (Layout::Layout): Init lto_slim_object_.\n+\t* object.cc (Sized_relobj_file::do_layout): Wrap overlong line.\n+\tDon't use C cast.  Validate section size.  Don't copy contents.\n+\n+2019-09-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::Scan::check_non_pic): Move REL24\n+\tto 32-bit supported.\n+\n+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* testsuite/Makefile.in: Re-generate.\n+\n+2019-09-09  Phil Blundell  <pb@pbcl.net>\n+\n+\tbinutils 2.33 branch created.\n+\n+2019-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ld/24912\n+\t* object.cc (big_endian>::do_layout): Do not report error,\n+\tbut only set a flag.\n+\t(big_endian>::do_add_symbols): Report error only for when\n+\trelocatable.\n+\n+2019-08-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::Scan::get_reference_flags): Set\n+\tflags for new relocations, and some missing older relocs.\n+\t(Target_powerpc::Scan::local): Handle new pcrel tls relocs.\n+\tCall set_has_static_tls for tprel relocs.\n+\t(Target_powerpc::Scan::global): Likewise.\n+\t(Target_powerpc::Relocate::relocate): Handle new pcrel tls relocs.\n+\n+2019-08-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Powerpc_relocate_functions::rela, rela_ua): Perform\n+\tsigned right shift for signed overflow check.\n+\n+2019-07-29  Martin Liska  <mliska@suse.cz>\n+\n+\tPR 24768\n+\t* layout.h (class Layout): Add is_lto_slim_object and\n+\tset_lto_slim_object.\n+\t* object.cc (struct lto_section): Add lto_slim_object_.\n+\t(big_endian>::do_layout): Parse content of\n+\t.gnu_lto_.lto section.\n+\t(big_endian>::do_add_symbols): Report error for a missing\n+\tLTO plugin.\n+\n+2019-07-13  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (xlate_pcrel_opt): New function.\n+\t(Target_powerpc::Relocate::relocate): Optimise PCREL34 and\n+\tGOT_PCREL34 sequences marked with PCREL_OPT.\n+\n+2019-07-13  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Powerpc_relobj::make_got_relative): New function.\n+\t(relative_value_is_known): New functions.\n+\t(Target_powerpc::Relocate::relocate): Edit code using\n+\tGOT16_HA, GOT16_LO_DS, and GOT_PCREL34 relocs.\n+\n+2019-07-13  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc): Add powerxx_stubs_ and accessor\n+\tfunctions.\n+\t(Target_powerpc::maybe_skip_tls_get_addr_call): Handle PLT_PCREL34\n+\tand PLT_PCREL34_NOTOC relocs.\n+\t(Powerpc_relocate_functions): Add addr34, addr34_hi, addr34_ha,\n+\taddr28, addr16_higher34, addr16_highera34, addr16_highest34,\n+\taddr16_highest34a functions.\n+\t(li_11_0, ori_11_11_0, sldi_11_11_34): Define.\n+\t(paddi_12_pc, pld_12_pc, pnop): Define.\n+\t(d34, ha34): New inline functions.\n+\t(Stub_table::add_plt_call_entry): Handle powerxx_stubs.\n+\t(Stub_table::add_eh_frame): Likewise.\n+\t(build_powerxx_offset): New function.\n+\t(Stub_table::plt_call_size): Handle powerxx_stubs.\n+\t(Stub_table::branch_stub_size): Likewise.\n+\t(Stub_table::do_write): Likewise.\n+\t(Target_powerpc::Scan::get_reference_flags): Handle new relocs.\n+\t(Target_powerpc::Scan::reloc_needs_plt_for_ifunc: Likewise.\n+\t(Target_powerpc::Scan::local, global, relocate): Likewise.\n+\n+2019-07-13  Alan Modra  <amodra@gmail.com>\n+\n+\t* ehframe.cc (Fde::operator==): Delete.\n+\t(Cie::remove_fde): Delete.\n+\t(Eh_frame::remove_ehframe_for_plt): Delete fde_data and fde_length\n+\tparameters.  Remove all post-map plt FDEs.\n+\t* ehframe.h (Fde:post_map): Make const, add variant to compare plt.\n+\t(Fde::operator==): Delete.\n+\t(Cie::remove_fde): Implement here.\n+\t(Cie::last_fde): New accessor.\n+\t(Eh_frame::remove_ehframe_for_plt): Update prototype.\n+\t* layout.cc (Layout::remove_eh_frame_for_plt): Delete fde_data and\n+\tfde_length parameters.\n+\t* layout.h (Layout::remove_eh_frame_for_plt): Update prototype.\n+\t* powerpc.cc (Stub_table::tls_get_addr_opt_bctrl_): Delete.\n+\t(Stub_table::plt_fde_len_, plt_fde_, init_plt_fde): Delete.\n+\t(Stub_table::add_plt_call_entry): Don't set tls_get_addr_opt_bctrl_.\n+\t(eh_advance): New function.\n+\t(stub_sort): New function.\n+\t(Stub_table::add_eh_frame): Emit eh_frame for notoc plt calls and\n+\tbranches as well as __tls_get_addr_opt plt call stub.\n+\t(Stub_table::remove_eh_frame): Update to suit.\n+\n+2019-07-13  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::maybe_skip_tls_get_addr_call): Handle\n+\tnotoc calls.\n+\t(is_branch_reloc): Template on size.  Return true for REL24_NOTOC.\n+\tUpdate all callers.\n+\t(max_branch_delta): Likewise.\n+\t(Target_powerpc::Branch_info::make_stub): Add a stub for notoc\n+\tcalls to functions needing a valid toc pointer.\n+\t(Target_powerpc::do_relax): Layout stubs again if any need resize.\n+\t(add_12_11_12, addi_12_11, addis_12_11, ldx_12_11_12, ori_12_12_0),\n+\t(oris_12_12_0, sldi_12_12_32): Define.\n+\t(Stub_table::Plt_stub_ent): Add notoc_ and iter_ fields.\n+\t(Stub_table::Branch_stub_key, Branch_stub_key_hash): Rename from\n+\tBranch_stub_ent and Branch_stub_ent hash.  Remove save_res_ from key.\n+\t(Stub_table::Branch_stub_ent): New struct.\n+\t(class Stub_table): Add need_resize and resizing vars.\n+\t(Stub_table::need_resize, branch_size): New accessors.\n+\t(Stub_table::set_resizing): New function.\n+\t(Stub_table::add_plt_call_entry): Handle notoc calls and resizing\n+\ton seeing such or a tocsave stubs after a normal stub using the\n+\tsame sym.\n+\t(Stub_table::add_long_branch_entry): Similarly.\n+\t(Stub_table::find_long_branch_entry): Return a Branch_stub_ent*.\n+\t(Stub_table::define_stub_syms): Adjust\n+\t(Stub_table::build_tls_opt_head, build_tls_opt_tail): New functions.\n+\t(build_notoc_offset): New function.\n+\t(Stub_table::plt_call_size): Move out of line.  Handle notoc calls.\n+\t(Stub_table::branch_stub_size): Similarly.\n+\t(Stub_table::do_write): Separate loop for ELFv2 stubs, handling\n+\tnotoc calls.  Simplify ELFv1 loop.  Output notoc branch stubs.\n+\tUse build_tls_opt_head and build_tls_opt_tail.\n+\t(Target_powerpc::Scan::get_reference_flags): Handle REL24_NOTOC.\n+\t(Target_powerpc::Scan::reloc_needs_plt_for_ifunc): Likewise,\n+\tand PLTSEQ_NOTOC and PLTCALL_NOTOC.\n+\t(Target_powerpc::Scan::local, global, relocate): Likewise.\n+\n+2019-06-28  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::Relocate::relocate): Don't look\n+\tat next/previous reloc when relnum is -1.\n+\n+2019-06-28  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Stub_table::plt_error): New function.\n+\t(Stub_table::do_write): Use it.\n+\t(Output_data_glink::do_write): Don't segfault emitting linkage\n+\ttable error.\n+\n+2019-06-28  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::Scan::get_reference_flags): Handle\n+\tREL16_HIGH* relocs.\n+\t(Target_powerpc::Scan::local): Likewise.\n+\t(Target_powerpc::Scan::global): Likewise.\n+\t(Target_powerpc::Relocate::relocate): Likewise.\n+\n+2019-06-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* errors.h: Include string.\n+\n+2019-05-10  Joshua Oreman  <oremanj@hudson-trading.com>\n+\n+\tPR gold/21066\n+\t* gc.h (gc_process_relocs): Track relocations in .eh_frame sections\n+\twhen ICF is enabled, even though the .eh_frame sections themselves\n+\tare not foldable.\n+\t* icf.cc (get_section_contents): Change arguments to permit operation\n+\ton just part of a section. Include extra identity regions in the\n+\treferring section's contents recursively.\n+\t(match_sections): Lock object here instead of in get_section_contents\n+\tso that get_section_contents can operate recursively.\n+\t(Icf::add_ehframe_links): New method.\n+\t(Icf::find_identical_sections): Pass .eh_frame sections to\n+\tadd_ehframe_links(). Increase default iteration count from 2 to 3\n+\tbecause handling exception info typically requires one extra iteration.\n+\t* icf.h (Icf::extra_identity_list_): New data member with accessor.\n+\t(is_section_foldable_candidate): Include .gcc_except_table sections.\n+\t* options.h: Update documentation for new default ICF iteration count.\n+\t* testsuite/Makefile.am (icf_test_pr21066): New test case.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/icf_test_pr21066.cc: New source file.\n+\t* testsuite/icf_test_pr21066.sh: New test script.\n+\n+2019-02-19  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>\n+\n+     PR gold/23870\n+     * aarch64.cc (Target_aarch64::Scan::global): Check if a symbol with\n+     R_AARCH64_MOVW_.ABS_* relocations requires a PLT entry.\n+     * testsuite/Makefile.am: Add aarch64_pr23870 test case.\n+     * testsuite/Makefile.in: Regenerate.\n+     * testsuite/aarch64_pr23870_bar.c: New file.\n+     * testsuite/aarch64_pr23870_foo.c: New file.\n+     * testsuite/aarch64_pr23870_main.S: New file.\n+\n+2019-02-12  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/fr.po: Updated French translation.\n+\n+2019-01-21  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2019-01-19  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/gold.pot: Regenerate.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.32 branch created.\n+\n+2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>\n+\n+\t* configure: Regenerate.\n+\n+2019-01-01  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2018\n+\f\n+Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "43dd3f31db701088338730ebc7579da09d72f8a1",
      "filename": "gprof/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 82,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/gprof/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/gprof/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gprof/ChangeLog?ref=0b11474080800192797236e30857a42818f5560d",
      "patch": "@@ -1,86 +1,6 @@\n-2019-11-15  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 2587\n-\t* Makefile.am: Revert change from 2019-11-13.\n-\t* Makefile.in: Regenerate.\n-\n-2019-11-14  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 2587\n-\t* Makefile.am (SUFFIXES): Add .c.\n-\t* Makefile.in: Regenerate.\n-\n-2019-11-13  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 2587\n-\t* Makefile.am: Fix rule to build .c files from .m files.\n-\n-2019-09-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* corefile.c, * symtab.c: Update throughout for bfd section\n-\tmacro and function changes.\n-\n-2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n-\n-\t* Makefile.in: Re-generate.\n-\t* configure: Re-generate.\n-\n-2019-09-16  Phil Blundell  <pb@pbcl.net>\n-\n-\t* Makefile.in, configure: Regenerated.\n-\n-2019-09-09  Phil Blundell  <pb@pbcl.net>\n-\n-\tbinutils 2.33 branch created.\n-\n-2019-05-20  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24569\n-\t* gprof.c (usage): Restore alphabetical sorting to short options\n-\tlist.  Add -r, -R and -t short options to the list.\n-\t(main): Add comment about -g and -G possibly being deprecated.\n-\t* gprof.texi: Update usage example in line with changes above.\n-\n-2019-05-20  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/de.po: Updated German translation.\n-\n-2019-05-08  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24520\n-\t* corefile.c (core_init): Set BFD_DECOMPRESS.\n-\n-2019-04-01  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24402\n-\t* symtab.c (symtab_finalize): Init prev_addr to one less than\n-\tfirst symbol address, not one more.  Correct test for symbols\n-\twith leading underscores.\n-\n-2019-01-21  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/tr.po: Updated Turkish translation.\n-\n-2019-01-19  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\t* po/gprof.pot: Regenerate.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.32 branch created.\n-\n-2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>\n-\n-\t* configure: Regenerate.\n-\n-2019-01-01  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2018\n+For older changes see ChangeLog-2019\n \f\n-Copyright (C) 2019 Free Software Foundation, Inc.\n+Copyright (C) 2020 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "f638de2ebade2b760e8aef4c52393b0b6f43a419",
      "filename": "gprof/ChangeLog-2019",
      "status": "added",
      "additions": 94,
      "deletions": 0,
      "changes": 94,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/gprof/ChangeLog-2019",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/gprof/ChangeLog-2019",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gprof/ChangeLog-2019?ref=0b11474080800192797236e30857a42818f5560d",
      "patch": "@@ -0,0 +1,94 @@\n+2019-11-15  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 2587\n+\t* Makefile.am: Revert change from 2019-11-13.\n+\t* Makefile.in: Regenerate.\n+\n+2019-11-14  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 2587\n+\t* Makefile.am (SUFFIXES): Add .c.\n+\t* Makefile.in: Regenerate.\n+\n+2019-11-13  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 2587\n+\t* Makefile.am: Fix rule to build .c files from .m files.\n+\n+2019-09-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* corefile.c, * symtab.c: Update throughout for bfd section\n+\tmacro and function changes.\n+\n+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* Makefile.in: Re-generate.\n+\t* configure: Re-generate.\n+\n+2019-09-16  Phil Blundell  <pb@pbcl.net>\n+\n+\t* Makefile.in, configure: Regenerated.\n+\n+2019-09-09  Phil Blundell  <pb@pbcl.net>\n+\n+\tbinutils 2.33 branch created.\n+\n+2019-05-20  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24569\n+\t* gprof.c (usage): Restore alphabetical sorting to short options\n+\tlist.  Add -r, -R and -t short options to the list.\n+\t(main): Add comment about -g and -G possibly being deprecated.\n+\t* gprof.texi: Update usage example in line with changes above.\n+\n+2019-05-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/de.po: Updated German translation.\n+\n+2019-05-08  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24520\n+\t* corefile.c (core_init): Set BFD_DECOMPRESS.\n+\n+2019-04-01  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24402\n+\t* symtab.c (symtab_finalize): Init prev_addr to one less than\n+\tfirst symbol address, not one more.  Correct test for symbols\n+\twith leading underscores.\n+\n+2019-01-21  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/tr.po: Updated Turkish translation.\n+\n+2019-01-19  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\t* po/gprof.pot: Regenerate.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.32 branch created.\n+\n+2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>\n+\n+\t* configure: Regenerate.\n+\n+2019-01-01  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2018\n+\f\n+Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "43dd3f31db701088338730ebc7579da09d72f8a1",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 761,
      "changes": 763,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=0b11474080800192797236e30857a42818f5560d",
      "patch": "@@ -1,765 +1,6 @@\n-2019-12-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* coff/tic80.h: Delete file.\n-\t* opcode/tic80.h: Delete file.\n-\n-2019-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcode/crx.h (inst <match>): Make unsigned int.\n-\n-2019-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcode/nds32.h (N32_BIT): Define using 1u.\n-\t(__SEXT): Use __MASK and N32_BIT.\n-\t(N32_IMMS): Remove duplicate mask.\n-\n-2019-12-12  Luis Machado  <luis.machado@linaro.org>\n-\n-\t* diagnostics.h (DIAGNOSTIC_IGNORE_UNUSED_FUNCTION). Remove\n-\tdefinitions.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcode/mmix.h (PUSHGO_INSN_BYTE): Make unsigned.\n-\t(GO_INSN_BYTE, SETL_INSN_BYTE, INCML_INSN_BYTE, INCMH_INSN_BYTE),\n-\t(INCH_INSN_BYTE, SWYM_INSN_BYTE, JMP_INSN_BYTE): Likewise.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* dis-asm.h (INSN_HAS_RELOC, DISASSEMBLE_DATA),\n-\t(USER_SPECIFIED_MACHINE_TYPE, WIDE_OUTPUT): Make unsigned.\n-\t* opcode/tic80.h (TIC80_OPERAND_*): Likewise.\n-\n-2019-12-10  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24960\n-\t* dis-asm.h (disassemble_free_target): Declare.\n-\n-2019-12-10  Alan Modra  <amodra@gmail.com>\n-\n-\t* dis-asm.h (struct disassemble_info): Delete insn_sets.\n-\t(INIT_DISASSEMBLE_INFO_NO_ARCH): Don't define.\n-\n-2019-12-05  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_CRYPTO): Expand to the\n-\tcombination of AES and SHA2.\n-\n-2019-11-25  Alan Modra  <amodra@gmail.com>\n-\n-\t* coff/ti.h (GET_SCNHDR_SIZE, PUT_SCNHDR_SIZE, GET_SCN_SCNLEN),\n-\t(PUT_SCN_SCNLEN): Adjust bfd_octets_per_byte calls.\n-\n-2019-11-22  Mihail Ionescu  <mihail.ionescu@arm.com>\n-\n-\t* opcode/arm.h (ARM_EXT2_CRC): New extension feature\n-\tto replace CRC_EXT_ARMV8.\n-\t(CRC_EXT_ARMV8): Remove and mark bit as unused.\n-\t(ARM_ARCH_V8A_CRC, ARM_ARCH_V8_1A, ARM_ARCH_V8_2A,\n-\tARM_ARCH_V8_3A, ARM_ARCH_V8_4A, ARM_ARCH_V8_5A,\n-\tARM_ARCH_V8_6A): Redefine using ARM_EXT2_CRC instead of\n-\tCRC_EXT_ARMV8.\n-\n-2019-11-18  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* dwarf2.h (DW_CIE_VERSION): Delete.\n-\n-2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n-\n-\t* opcode/arm.h (ARM_EXT2_I8MM): New feature macro.\n-\n-2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_I8MM): New.\n-\t(AARCH64_FEATURE_F32MM): New.\n-\t(AARCH64_FEATURE_F64MM): New.\n-\t(AARCH64_OPND_SVE_ADDR_RI_S4x32): New.\n-\t(enum aarch64_insn_class): Add new instruction class \"aarch64_misc\" for\n-\tinstructions that do not require special handling.\n-\n-2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n-\t    Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/arm.h (ARM_EXT2_V8_6A, ARM_AEXT2_V8_6A,\n-\tARM_ARCH_V8_6A): New.\n-\t* opcode/arm.h (ARM_EXT2_BF16): New feature macro.\n-\t(ARM_AEXT2_V8_6A): Include above macro in definition.\n-\n-2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n-\t    Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_BFLOAT16): New feature macros.\n-\t(AARCH64_ARCH_V8_6): Include BFloat16 feature macros.\n-\t(enum aarch64_opnd_qualifier): Introduce new operand qualifier\n-\tAARCH64_OPND_QLF_S_2H.\n-\t(enum aarch64_insn_class): Introduce new class \"bfloat16\".\n-\t(BFLOAT16_SVE_INSNC): New feature set for bfloat16\n-\tinstructions to support the movprfx constraint.\n-\n-2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n-\t    Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_V8_6): New.\n-\t(AARCH64_ARCH_V8_6): New.\n-\n-2019-11-07  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/cr16c.h: Delete.\n-\n-2019-10-29  Andrew Eikum  <aeikum@codeweavers.com>\n-\n-\t* coff/internal.h (struct internal_extra_pe_filehdr): Use ints\n-\tinstead of longs to hold dos_message.\n-\n-2019-10-25  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 4499\n-\t* elf/internal.h (struct elf_segment_map): Delete header_size.\n-\tAdd no_sort_lma and idx.\n-\n-2019-10-16  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 13616\n-\t* bfdlink.h (struct bfd_link_info <big_endian>): New field.\n-\n-2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n-\n-\t* elf/msp430.h: Add enums for MSPABI and GNU object attribute tag\n-\tnames and values.\n-\n-2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_cuname_set): Can now fail, returning int.\n-\t(ctf_parent_name_set): Likewise.\n-\n-2019-08-05  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ECTF_NONREPRESENTABLE): New.\n-\n-2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h: Note the instability of the ctf_link interfaces.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* bfdlink.h (elf_strtab_hash): New forward.\n-\t(elf_sym_strtab): Likewise.\n-\t(struct bfd_link_callbacks <examine_strtab>): New.\n-\t(struct bfd_link_callbacks <emit_ctf>): Likewise.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (includes): No longer include <sys/param.h>.\n-\n-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_link_add_cu_mapping): New.\n-\t(ctf_link_memb_name_changer_f): New.\n-\t(ctf_link_set_memb_name_changer): New.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ECTF_INTERNAL): New.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (struct ctf_link_sym): New, a symbol in flight to the\n-\tlibctf linking machinery.\n-\t(CTF_LINK_SHARE_UNCONFLICTED): New.\n-\t(CTF_LINK_SHARE_DUPLICATED): New.\n-\t(ECTF_LINKADDEDLATE): New, replacing ECTF_UNUSED.\n-\t(ECTF_NOTYET): New, a 'not yet implemented' message.\n-\t(ctf_link_add_ctf): New, add an input file's CTF to the link.\n-\t(ctf_link): New, merge the type and string sections.\n-\t(ctf_link_strtab_string_f): New, callback for feeding strtab info.\n-\t(ctf_link_iter_symbol_f): New, callback for feeding symtab info.\n-\t(ctf_link_add_strtab): New, tell the CTF linker about the ELF\n-\tstrtab's strings.\n-\t(ctf_link_shuffle_syms): New, ask the CTF linker to shuffle its\n-\tsymbols into symtab order.\n-\t(ctf_link_write): New, ask the CTF linker to write the CTF out.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_arc_write_fd): New.\n-\t(ctf_write_mem): Likewise.\n-\t(ctf_gzwrite): Spacing fix.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf.h (CTF_SET_STID): New.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_type_all_f): New.\n-\t(ctf_type_iter_all): New.\n-\n-2019-07-11  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf.h: Add object index and function index sections.  Describe\n-\tthem. Improve the description of the variable section and clarify\n-\tthe constraints on backward-pointing type nodes.\n-\t(ctf_header): Add cth_objtidxoff, cth_funcidxoff.\n-\n-2019-07-06  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_cuname): New function.\n-\t(ctf_cuname_set): Likewise.\n-\t* ctf.h: Improve comment around upgrading, no longer\n-\timplying that v2 is the target of upgrades (it is v3 now).\n-\t(ctf_header_v2_t): New, old-format header for backward\n-\tcompatibility.\n-\t(ctf_header_t): Add cth_cuname: this is the first of several\n-\theader changes in format v3.\n-\n-2019-09-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* bfdlink.h (struct bfd_section_already_linked): Forward declare.\n-\t(bfd_section_already_linked_table_init),\n-\t(bfd_section_already_linked_table_free),\n-\t(_bfd_handle_already_linked, _bfd_nearby_section),\n-\t(_bfd_fix_excluded_sec_syms): Declare.\n-\n-2019-09-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* bfdlink.h (enum notice_asneeded_action): Define.\n-\n-2019-09-17  Maxim Blinov  <maxim.blinov@embecosm.com>\n-\n-\t* opcode/riscv.h (riscv_insn_class): New enum.\n-\t* opcode/riscv.h (struct riscv_opcode): Change\n-\tsubset field to insn_class field.\n-\n-2019-09-09  Phil Blundell  <pb@pbcl.net>\n-\n-\tbinutils 2.33 branch created.\n-\n-2019-08-30  Claudiu Zissulescu <claziss@gmail.com>\n-\n-\t* opcode/arc.h (FASTMATH): Move it from insn_class_t to\n-\tinsn_subclass_t enum.\n-\n-2019-08-22  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/arm.h (ARM_GET_SYM_CMSE_SPCL, ARM_SET_SYM_CMSE_SPCL): Delete.\n-\n-2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>\n-\n-\t* elf/mips.h (SHT_GNU_XHASH): New define.\n-\t(DT_GNU_XHASH): New define.\n-\n-2019-08-08  Yoshinori Sato  <ysato@users.sourceforge.jp>\n-\n-\t* opcode/h8300.h (EXPAND_UNOP_EXTENDED_B): Add MODEL.\n-\t(EXPAND_UNOP_EXTENDED_W): Likewise.\n-\t(EXPAND_UNOP_EXTENDED_L): Likewise.\n-\t(struct h8_opcode h8_opcodes): Likewise.\n-\t(struct h8_opcode h8_opcodes): tas / ldm / stm supported H8S or\n-\tlater.\n-\n-2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>\n-\n-\t* opcode/arc.h (FASTMATH): Add.\n-\t(SWITCH): Likewise.\n-\n-2019-07-24  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/internal.h (ELF_SECTION_IN_SEGMENT_1): Exclude non-alloc\n-\tsections in GNU_MBIND segments.\n-\n-2019-07-23  Omar Majid  <omajid@redhat.com>\n-\n-\t* coff/i386.h (IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE): Define.\n-\t(IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE): Define.\n-\t(IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE): Define.\n-\t(IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE): Define.\n-\t(I386_APPLE_MAGIC): Define.\n-\t(I386_FREEBSD_MAGIC): Define.\n-\t(I386_LINUX_MAGIC): Define.\n-\t(I386_NETBSD_MAGIC): Define.\n-\t(I386BADMAG): Extend macro to allow new magic numbers.\n-\t* coff/x86_64.h (IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE): Define.\n-\t(IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE): Define.\n-\t(IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE): Define.\n-\t(IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE): Define.\n-\t(AMD64_APPLE_MAGIC): Define.\n-\t(AMD64_FREEBSD_MAGIC): Define.\n-\t(AMD64_LINUX_MAGIC): Define.\n-\t(AMD64_NETBSD_MAGIC): Define.\n-\t(AMD64BADMAG): Extend macro to allow new magic numbers.\n-\n-2019-07-19  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/ppc64.h (R_PPC64_TPREL34, R_PPC64_DTPREL34),\n-\t(R_PPC64_GOT_TLSGD34, R_PPC64_GOT_TLSLD34),\n-\t(R_PPC64_GOT_TPREL34, R_PPC64_GOT_DTPREL34): Define.\n-\t(IS_PPC64_TLS_RELOC): Include new tls relocs.\n-\n-2019-07-18  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ECTF_NOTFUNC): Fix description.\n-\t(ctf_func_type_info): New.\n-\t(ctf_func_type_args): Likewise.\n-\t(ctf_type_aname_raw): Likewise.\n-\n-2019-07-16  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* opcode/i386.h (POP_SEG386_SHORT): New.\n-\n-2019-07-01  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_insn_class): sve_size_013\n-\trenamed to sve_size_13.\n-\n-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf.h (ctf_slice_t): Make cts_offset and cts_bits unsigned\n-\tshort, so following structures are properly aligned.\n-\n-2019-06-14  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n-\n-\t* elf/aarch64.h (R_AARCH64_P32_MOVW_PREL_G0): Define.\n-\t(R_AARCH64_P32_MOVW_PREL_G0_NC): Define.\n-\t(R_AARCH64_P32_MOVW_PREL_G1): Define.\n-\n-2019-06-03  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf.h (ctf_enum.cte_value): Fix type to int32_t.\n-\n-2019-05-29  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_sect_t): Drop cts_type, cts_flags, and cts_offset.\n-\t(ctf_id_t): This is now an unsigned type.\n-\t(CTF_ERR): Cast it to ctf_id_t.  Note that it should only be used\n-\tfor ctf_id_t-returning functions.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_dump_decorate_f): New.\n-\t(ctf_dump_state_t): new.\n-\t(ctf_dump): New.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_label_f): New.\n-\t(ctf_label_set): New.\n-\t(ctf_label_get): New.\n-\t(ctf_label_topmost): New.\n-\t(ctf_label_info): New.\n-\t(ctf_label_iter): New.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_version): New.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_func_info): New.\n-\t(ctf_func_args): Likewise.\n-\t(ctf_lookup_by_symbol): Likewise.\n-\t(ctf_lookup_by_symbol): Likewise.\n-\t(ctf_lookup_variable): Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_visit_f): New definition.\n-\t(ctf_member_f): Likewise.\n-\t(ctf_enum_f): Likewise.\n-\t(ctf_variable_f): Likewise.\n-\t(ctf_type_f): Likewise.\n-\t(ctf_type_isparent): Likewise.\n-\t(ctf_type_ischild): Likewise.\n-\t(ctf_type_resolve): Likewise.\n-\t(ctf_type_aname): Likewise.\n-\t(ctf_type_lname): Likewise.\n-\t(ctf_type_name): Likewise.\n-\t(ctf_type_sizee): Likewise.\n-\t(ctf_type_align): Likewise.\n-\t(ctf_type_kind): Likewise.\n-\t(ctf_type_reference): Likewise.\n-\t(ctf_type_pointer): Likewise.\n-\t(ctf_type_encoding): Likewise.\n-\t(ctf_type_visit): Likewise.\n-\t(ctf_type_cmp): Likewise.\n-\t(ctf_type_compat): Likewise.\n-\t(ctf_member_info): Likewise.\n-\t(ctf_array_info): Likewise.\n-\t(ctf_enum_name): Likewise.\n-\t(ctf_enum_value): Likewise.\n-\t(ctf_member_iter): Likewise.\n-\t(ctf_enum_iter): Likewise.\n-\t(ctf_type_iter): Likewise.\n-\t(ctf_variable_iter): Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (struct bfd): New forward.\n-\t(ctf_fdopen): New.\n-\t(ctf_bfdopen): Likewise.\n-\t(ctf_open): Likewise.\n-\t(ctf_arc_open): Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf.h (CTFA_MAGIC): New.\n-\t(struct ctf_archive): New.\n-\t(struct ctf_archive_modent): Likewise.\n-\t* ctf-api.h (ctf_archive_member_f): New.\n-\t(ctf_archive_raw_member_f): Likewise.\n-\t(ctf_arc_write): Likewise.\n-\t(ctf_arc_close): Likewise.\n-\t(ctf_arc_open_by_name): Likewise.\n-\t(ctf_archive_iter): Likewise.\n-\t(ctf_archive_raw_iter): Likewise.\n-\t(ctf_get_arc): Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_file_close): New declaration.\n-\t(ctf_getdatasect): Likewise.\n-\t(ctf_parent_file): Likewise.\n-\t(ctf_parent_name): Likewise.\n-\t(ctf_parent_name_set): Likewise.\n-\t(ctf_import): Likewise.\n-\t(ctf_setmodel): Likewise.\n-\t(ctf_getmodel): Likewise.\n-\t(ctf_setspecific): Likewise.\n-\t(ctf_getspecific): Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (zlib.h): New include.\n-\t(ctf_sect_t): New.\n-\t(ctf_sect_names_t): Likewise.\n-\t(ctf_encoding_t): Likewise.\n-\t(ctf_membinfo_t): Likewise.\n-\t(ctf_arinfo_t): Likewise.\n-\t(ctf_funcinfo_t): Likewise.\n-\t(ctf_lblinfo_t): Likewise.\n-\t(ctf_snapshot_id_t): Likewise.\n-\t(CTF_FUNC_VARARG): Likewise.\n-\t(ctf_simple_open): Likewise.\n-\t(ctf_bufopen): Likewise.\n-\t(ctf_create): Likewise.\n-\t(ctf_add_array): Likewise.\n-\t(ctf_add_const): Likewise.\n-\t(ctf_add_enum_encoded): Likewise.\n-\t(ctf_add_enum): Likewise.\n-\t(ctf_add_float): Likewise.\n-\t(ctf_add_forward): Likewise.\n-\t(ctf_add_function): Likewise.\n-\t(ctf_add_integer): Likewise.\n-\t(ctf_add_slice): Likewise.\n-\t(ctf_add_pointer): Likewise.\n-\t(ctf_add_type): Likewise.\n-\t(ctf_add_typedef): Likewise.\n-\t(ctf_add_restrict): Likewise.\n-\t(ctf_add_struct): Likewise.\n-\t(ctf_add_union): Likewise.\n-\t(ctf_add_struct_sized): Likewise.\n-\t(ctf_add_union_sized): Likewise.\n-\t(ctf_add_volatile): Likewise.\n-\t(ctf_add_enumerator): Likewise.\n-\t(ctf_add_member): Likewise.\n-\t(ctf_add_member_offset): Likewise.\n-\t(ctf_add_member_encoded): Likewise.\n-\t(ctf_add_variable): Likewise.\n-\t(ctf_set_array): Likewise.\n-\t(ctf_update): Likewise.\n-\t(ctf_snapshot): Likewise.\n-\t(ctf_rollback): Likewise.\n-\t(ctf_discard): Likewise.\n-\t(ctf_write): Likewise.\n-\t(ctf_gzwrite): Likewise.\n-\t(ctf_compress_write): Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_errno): New declaration.\n-\t(ctf_errmsg): Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_setdebug): New.\n-\t(ctf_getdebug): Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h: New file.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf.h: New file.\n-\n-2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n-\n-\t* elf/aarch64.h (DT_AARCH64_VARIANT_PCS): Define.\n-\t(STO_AARCH64_VARIANT_PCS): Define.\n-\n-2019-05-24  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/ppc64.h (R_PPC64_PLTSEQ_NOTOC, R_PPC64_PLTCALL_NOTOC),\n-\t(R_PPC64_PCREL_OPT, R_PPC64_D34, R_PPC64_D34_LO, R_PPC64_D34_HI30),\n-\t(R_PPC64_D34_HA30, R_PPC64_PCREL34, R_PPC64_GOT_PCREL34),\n-\t(R_PPC64_PLT_PCREL34, R_PPC64_PLT_PCREL34_NOTOC),\n-\t(R_PPC64_ADDR16_HIGHER34, R_PPC64_ADDR16_HIGHERA34),\n-\t(R_PPC64_ADDR16_HIGHEST34, R_PPC64_ADDR16_HIGHESTA34),\n-\t(R_PPC64_REL16_HIGHER34, R_PPC64_REL16_HIGHERA34),\n-\t(R_PPC64_REL16_HIGHEST34, R_PPC64_REL16_HIGHESTA34),\n-\t(R_PPC64_D28, R_PPC64_PCREL28): Define.\n-\n-2019-05-24  Peter Bergner  <bergner@linux.ibm.com>\n-\t    Alan Modra  <amodra@gmail.com>\n-\n-\t* dis-asm.h (WIDE_OUTPUT): Define.\n-\t* opcode/ppc.h (prefix_opcodes, prefix_num_opcodes): Declare.\n-\t(PPC_OPCODE_POWERXX, PPC_GET_PREFIX, PPC_GET_SUFFIX),\n-\t(PPC_PREFIX_P, PPC_PREFIX_SEG): Define.\n-\n-2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>\n-\n-\t* elf/bpf.h: New file.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\n-\t* elf/arm.h (Tag_MVE_arch): Define new enum value.\n-\t* opcode/arm.h (FPU_MVE, FPU_MVE_FP): New MACROs for new features.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_SHLIMM_UNPRED_22\n-\toperand.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_tsz_bhs\n-\ticlass.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_Zm4_11_INDEX operand.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_shift_tsz_bhsd\n-\ticlass.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_SHRIMM_UNPRED_22\n-\toperand.\n-\t(enum aarch64_insn_class): Add sve_shift_tsz_hsd iclass.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_013 iclass.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_bh iclass.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_sd2 iclass.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_ADDR_ZX operand.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_Zm3_11_INDEX operand.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_hsd2 iclass.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_IMM_ROT3 operand.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_SVE2\n-\tAARCH64_FEATURE_SVE2_AES, AARCH64_FEATURE_SVE2_BITPERM,\n-\tAARCH64_FEATURE_SVE2_SM4, AARCH64_FEATURE_SVE2_SHA3): New\n-\tfeature macros.\n-\n-2019-05-06  Andrew Bennett  <andrew.bennett@imgtec.com>\n-\t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n-\n-\t* opcode/mips.h (ASE_EVA_R6): New macro.\n-\t(M_LLWPE_AB, M_SCWPE_AB): New enum values.\n-\n-2019-05-01  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_TME): New.\n-\t(enum aarch64_opnd): Add AARCH64_OPND_TME_UIMM16.\n-\n-2019-04-26  Andrew Bennett  <andrew.bennett@imgtec.com>\n-\t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n-\n-\t* opcode/mips.h (M_LLWP_AB, M_LLDP_AB): New enum values.\n-\t(M_SCWP_AB, M_SCDP_AB): Likewise.\n-\n-2019-04-25  Maciej W. Rozycki  <macro@linux-mips.org>\n-\n-\t* opcode/mips.h: Update comment for MIPS32 CODE20 operand.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF12.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF18.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF16.\n-\n-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* elf/arm.h (TAG_CPU_ARCH_V8_1M_MAIN): new macro.\n-\t(MAX_TAG_CPU_ARCH): Set value to above macro.\n-\t* opcode/arm.h (ARM_EXT2_V8_1M_MAIN): New macro.\n-\t(ARM_AEXT_V8_1M_MAIN): Likewise.\n-\t(ARM_AEXT2_V8_1M_MAIN): Likewise.\n-\t(ARM_ARCH_V8_1M_MAIN): Likewise.\n-\n-2019-04-11  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_opnd): Add AARCH64_OPND_Rt_SP.\n-\n-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elf/common.h (GNU_PROPERTY_X86_ISA_1_AVX512_BF16): New.\n-\n-2019-04-07  Alan Modra  <amodra@gmail.com>\n-\n-\tMerge from gcc.\n-\t2019-04-03  Vineet Gupta  <vgupta@synopsys.com>\n-\tPR89877\n-\t* longlong.h [__arc__] (add_ssaaaa): Add cc clobber.\n-\t(sub_ddmmss): Likewise.\n-\n-2019-04-06  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* bfdlink.h (bfd_link_info): Remove x86-specific linker options.\n-\n-2019-04-01  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\n-\t* opcode/arm.h (FPU_NEON_ARMV8_1): New.\n-\t(FPU_ARCH_NEON_VFP_ARMV8_1): Use FPU_NEON_ARMV8_1.\n-\t(FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_1): Likewise.\n-\t(FPU_ARCH_DOTPROD_NEON_VFP_ARMV8): Likewise.\n-\t(FPU_ARCH_NEON_VFP_ARMV8_2_FP16): New.\n-\t(FPU_ARCH_NEON_VFP_ARMV8_2_FP16FML): New.\n-\t(FPU_ARCH_NEON_VFP_ARMV8_4_FP16FML): New.\n-\t(FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_4): New.\n-\n-2019-03-28  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24390\n-\t* opcode/ppc.h (PPC_OPERAND_CR_REG): Comment.\n-\n-2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* dis-asm.h (struct disassemble_info): Add stop_offset.\n-\n-2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* elf/aarch64.h (DT_AARCH64_PAC_PLT): New.\n-\n-2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n-\t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n-\n-\t* elf/aarch64.h (DT_AARCH64_BTI_PLT): New.\n-\n-2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* elf/common.h (GNU_PROPERTY_AARCH64_FEATURE_1_AND): New.\n-\t(GNU_PROPERTY_AARCH64_FEATURE_1_BTI): New.\n-\t(GNU_PROPERTY_AARCH64_FEATURE_1_PAC): New.\n-\n-2019-02-20  Alan Hayward  <alan.hayward@arm.com>\n-\n-\t* elf/common.h (NT_ARM_PAC_MASK): Add define.\n-\n-2019-02-15  Saagar Jha  <saagar@saagarjha.com>\n-\n-\t* mach-o/loader.h: Use new OS names in comments.\n-\n-2019-02-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n-\n-\t* splay-tree.h (splay_tree_delete_key_fn): Update comment.\n-\t(splay_tree_delete_value_fn): Likewise.\n-\n-2019-01-31  Andreas Krebbel  <krebbel@linux.ibm.com>\n-\n-\t* opcode/s390.h (enum s390_opcode_cpu_val): Add\n-\tS390_OPCODE_ARCH13.\n-\n-2019-01-25  Sudakshina Das  <sudi.das@arm.com>\n-\t    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_opnd): Remove\n-\tAARCH64_OPND_ADDR_SIMPLE_2.\n-\t(enum aarch64_insn_class): Remove ldstgv_indexed.\n-\n-2019-01-22  Tom Tromey  <tom@tromey.com>\n-\n-\t* coff/ecoff.h: Include coff/sym.h.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.32 branch created.\n-\n-2019-01-16  Kito Cheng  <kito@andestech.com>\n-\n-\t* elf/riscv.h (SHT_RISCV_ATTRIBUTES): Define.\n-\t(Tag_RISCV_arch): Likewise.\n-\t(Tag_RISCV_priv_spec): Likewise.\n-\t(Tag_RISCV_priv_spec_minor): Likewise.\n-\t(Tag_RISCV_priv_spec_revision): Likewise.\n-\t(Tag_RISCV_unaligned_access): Likewise.\n-\t(Tag_RISCV_stack_align): Likewise.\n-\n-2019-01-14  Pavel I. Kryukov  <kryukov@frtk.ru>\n-\n-\t* dis-asm.h: include <string.h>\n-\n-2019-01-10  Nick Clifton  <nickc@redhat.com>\n-\n-\t* Merge from GCC:\n-\t2018-12-22  Jason Merrill  <jason@redhat.com>\n-\n-\t* demangle.h: Remove support for ancient GNU (pre-3.0), Lucid,\n-\tARM, HP, and EDG demangling styles.\n-\n-2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n-\n-\tMerge from GCC:\n-\tPR other/16615\n-\n-\t* libiberty.h: Mechanically replace \"can not\" with \"cannot\".\n-\t* plugin-api.h: Likewise.\n-\n-2018-12-25  Yoshinori Sato <ysato@users.sourceforge.jp>\n-\n-\t* elf/rx.h (EF_RX_CPU_MASK): Update new bits.\n-\t(E_FLAG_RX_V3): New RXv3 type.\n-\t* opcode/rx.h (RX_Size): Add double size.\n-\t(RX_Operand_Type): Add double FPU registers.\n-\t(RX_Opcode_ID): Add new instuctions.\n-\n-2019-01-01  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2018\n+For older changes see ChangeLog-2019\n \f\n-Copyright (C) 2019 Free Software Foundation, Inc.\n+Copyright (C) 2020 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "ce3e0496068c32b13f11b04707d68858b80668f6",
      "filename": "include/ChangeLog-2019",
      "status": "added",
      "additions": 773,
      "deletions": 0,
      "changes": 773,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/include/ChangeLog-2019",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/include/ChangeLog-2019",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog-2019?ref=0b11474080800192797236e30857a42818f5560d",
      "patch": "@@ -0,0 +1,773 @@\n+2019-12-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff/tic80.h: Delete file.\n+\t* opcode/tic80.h: Delete file.\n+\n+2019-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/crx.h (inst <match>): Make unsigned int.\n+\n+2019-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/nds32.h (N32_BIT): Define using 1u.\n+\t(__SEXT): Use __MASK and N32_BIT.\n+\t(N32_IMMS): Remove duplicate mask.\n+\n+2019-12-12  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* diagnostics.h (DIAGNOSTIC_IGNORE_UNUSED_FUNCTION). Remove\n+\tdefinitions.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/mmix.h (PUSHGO_INSN_BYTE): Make unsigned.\n+\t(GO_INSN_BYTE, SETL_INSN_BYTE, INCML_INSN_BYTE, INCMH_INSN_BYTE),\n+\t(INCH_INSN_BYTE, SWYM_INSN_BYTE, JMP_INSN_BYTE): Likewise.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* dis-asm.h (INSN_HAS_RELOC, DISASSEMBLE_DATA),\n+\t(USER_SPECIFIED_MACHINE_TYPE, WIDE_OUTPUT): Make unsigned.\n+\t* opcode/tic80.h (TIC80_OPERAND_*): Likewise.\n+\n+2019-12-10  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24960\n+\t* dis-asm.h (disassemble_free_target): Declare.\n+\n+2019-12-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* dis-asm.h (struct disassemble_info): Delete insn_sets.\n+\t(INIT_DISASSEMBLE_INFO_NO_ARCH): Don't define.\n+\n+2019-12-05  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_CRYPTO): Expand to the\n+\tcombination of AES and SHA2.\n+\n+2019-11-25  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff/ti.h (GET_SCNHDR_SIZE, PUT_SCNHDR_SIZE, GET_SCN_SCNLEN),\n+\t(PUT_SCN_SCNLEN): Adjust bfd_octets_per_byte calls.\n+\n+2019-11-22  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* opcode/arm.h (ARM_EXT2_CRC): New extension feature\n+\tto replace CRC_EXT_ARMV8.\n+\t(CRC_EXT_ARMV8): Remove and mark bit as unused.\n+\t(ARM_ARCH_V8A_CRC, ARM_ARCH_V8_1A, ARM_ARCH_V8_2A,\n+\tARM_ARCH_V8_3A, ARM_ARCH_V8_4A, ARM_ARCH_V8_5A,\n+\tARM_ARCH_V8_6A): Redefine using ARM_EXT2_CRC instead of\n+\tCRC_EXT_ARMV8.\n+\n+2019-11-18  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf2.h (DW_CIE_VERSION): Delete.\n+\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* opcode/arm.h (ARM_EXT2_I8MM): New feature macro.\n+\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_I8MM): New.\n+\t(AARCH64_FEATURE_F32MM): New.\n+\t(AARCH64_FEATURE_F64MM): New.\n+\t(AARCH64_OPND_SVE_ADDR_RI_S4x32): New.\n+\t(enum aarch64_insn_class): Add new instruction class \"aarch64_misc\" for\n+\tinstructions that do not require special handling.\n+\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\t    Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/arm.h (ARM_EXT2_V8_6A, ARM_AEXT2_V8_6A,\n+\tARM_ARCH_V8_6A): New.\n+\t* opcode/arm.h (ARM_EXT2_BF16): New feature macro.\n+\t(ARM_AEXT2_V8_6A): Include above macro in definition.\n+\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\t    Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_BFLOAT16): New feature macros.\n+\t(AARCH64_ARCH_V8_6): Include BFloat16 feature macros.\n+\t(enum aarch64_opnd_qualifier): Introduce new operand qualifier\n+\tAARCH64_OPND_QLF_S_2H.\n+\t(enum aarch64_insn_class): Introduce new class \"bfloat16\".\n+\t(BFLOAT16_SVE_INSNC): New feature set for bfloat16\n+\tinstructions to support the movprfx constraint.\n+\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\t    Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_V8_6): New.\n+\t(AARCH64_ARCH_V8_6): New.\n+\n+2019-11-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/cr16c.h: Delete.\n+\n+2019-10-29  Andrew Eikum  <aeikum@codeweavers.com>\n+\n+\t* coff/internal.h (struct internal_extra_pe_filehdr): Use ints\n+\tinstead of longs to hold dos_message.\n+\n+2019-10-25  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 4499\n+\t* elf/internal.h (struct elf_segment_map): Delete header_size.\n+\tAdd no_sort_lma and idx.\n+\n+2019-10-16  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 13616\n+\t* bfdlink.h (struct bfd_link_info <big_endian>): New field.\n+\n+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* elf/msp430.h: Add enums for MSPABI and GNU object attribute tag\n+\tnames and values.\n+\n+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_cuname_set): Can now fail, returning int.\n+\t(ctf_parent_name_set): Likewise.\n+\n+2019-08-05  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ECTF_NONREPRESENTABLE): New.\n+\n+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h: Note the instability of the ctf_link interfaces.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* bfdlink.h (elf_strtab_hash): New forward.\n+\t(elf_sym_strtab): Likewise.\n+\t(struct bfd_link_callbacks <examine_strtab>): New.\n+\t(struct bfd_link_callbacks <emit_ctf>): Likewise.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (includes): No longer include <sys/param.h>.\n+\n+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_link_add_cu_mapping): New.\n+\t(ctf_link_memb_name_changer_f): New.\n+\t(ctf_link_set_memb_name_changer): New.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ECTF_INTERNAL): New.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (struct ctf_link_sym): New, a symbol in flight to the\n+\tlibctf linking machinery.\n+\t(CTF_LINK_SHARE_UNCONFLICTED): New.\n+\t(CTF_LINK_SHARE_DUPLICATED): New.\n+\t(ECTF_LINKADDEDLATE): New, replacing ECTF_UNUSED.\n+\t(ECTF_NOTYET): New, a 'not yet implemented' message.\n+\t(ctf_link_add_ctf): New, add an input file's CTF to the link.\n+\t(ctf_link): New, merge the type and string sections.\n+\t(ctf_link_strtab_string_f): New, callback for feeding strtab info.\n+\t(ctf_link_iter_symbol_f): New, callback for feeding symtab info.\n+\t(ctf_link_add_strtab): New, tell the CTF linker about the ELF\n+\tstrtab's strings.\n+\t(ctf_link_shuffle_syms): New, ask the CTF linker to shuffle its\n+\tsymbols into symtab order.\n+\t(ctf_link_write): New, ask the CTF linker to write the CTF out.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_arc_write_fd): New.\n+\t(ctf_write_mem): Likewise.\n+\t(ctf_gzwrite): Spacing fix.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf.h (CTF_SET_STID): New.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_type_all_f): New.\n+\t(ctf_type_iter_all): New.\n+\n+2019-07-11  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf.h: Add object index and function index sections.  Describe\n+\tthem. Improve the description of the variable section and clarify\n+\tthe constraints on backward-pointing type nodes.\n+\t(ctf_header): Add cth_objtidxoff, cth_funcidxoff.\n+\n+2019-07-06  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_cuname): New function.\n+\t(ctf_cuname_set): Likewise.\n+\t* ctf.h: Improve comment around upgrading, no longer\n+\timplying that v2 is the target of upgrades (it is v3 now).\n+\t(ctf_header_v2_t): New, old-format header for backward\n+\tcompatibility.\n+\t(ctf_header_t): Add cth_cuname: this is the first of several\n+\theader changes in format v3.\n+\n+2019-09-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* bfdlink.h (struct bfd_section_already_linked): Forward declare.\n+\t(bfd_section_already_linked_table_init),\n+\t(bfd_section_already_linked_table_free),\n+\t(_bfd_handle_already_linked, _bfd_nearby_section),\n+\t(_bfd_fix_excluded_sec_syms): Declare.\n+\n+2019-09-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* bfdlink.h (enum notice_asneeded_action): Define.\n+\n+2019-09-17  Maxim Blinov  <maxim.blinov@embecosm.com>\n+\n+\t* opcode/riscv.h (riscv_insn_class): New enum.\n+\t* opcode/riscv.h (struct riscv_opcode): Change\n+\tsubset field to insn_class field.\n+\n+2019-09-09  Phil Blundell  <pb@pbcl.net>\n+\n+\tbinutils 2.33 branch created.\n+\n+2019-08-30  Claudiu Zissulescu <claziss@gmail.com>\n+\n+\t* opcode/arc.h (FASTMATH): Move it from insn_class_t to\n+\tinsn_subclass_t enum.\n+\n+2019-08-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/arm.h (ARM_GET_SYM_CMSE_SPCL, ARM_SET_SYM_CMSE_SPCL): Delete.\n+\n+2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>\n+\n+\t* elf/mips.h (SHT_GNU_XHASH): New define.\n+\t(DT_GNU_XHASH): New define.\n+\n+2019-08-08  Yoshinori Sato  <ysato@users.sourceforge.jp>\n+\n+\t* opcode/h8300.h (EXPAND_UNOP_EXTENDED_B): Add MODEL.\n+\t(EXPAND_UNOP_EXTENDED_W): Likewise.\n+\t(EXPAND_UNOP_EXTENDED_L): Likewise.\n+\t(struct h8_opcode h8_opcodes): Likewise.\n+\t(struct h8_opcode h8_opcodes): tas / ldm / stm supported H8S or\n+\tlater.\n+\n+2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* opcode/arc.h (FASTMATH): Add.\n+\t(SWITCH): Likewise.\n+\n+2019-07-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/internal.h (ELF_SECTION_IN_SEGMENT_1): Exclude non-alloc\n+\tsections in GNU_MBIND segments.\n+\n+2019-07-23  Omar Majid  <omajid@redhat.com>\n+\n+\t* coff/i386.h (IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE): Define.\n+\t(IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE): Define.\n+\t(IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE): Define.\n+\t(IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE): Define.\n+\t(I386_APPLE_MAGIC): Define.\n+\t(I386_FREEBSD_MAGIC): Define.\n+\t(I386_LINUX_MAGIC): Define.\n+\t(I386_NETBSD_MAGIC): Define.\n+\t(I386BADMAG): Extend macro to allow new magic numbers.\n+\t* coff/x86_64.h (IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE): Define.\n+\t(IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE): Define.\n+\t(IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE): Define.\n+\t(IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE): Define.\n+\t(AMD64_APPLE_MAGIC): Define.\n+\t(AMD64_FREEBSD_MAGIC): Define.\n+\t(AMD64_LINUX_MAGIC): Define.\n+\t(AMD64_NETBSD_MAGIC): Define.\n+\t(AMD64BADMAG): Extend macro to allow new magic numbers.\n+\n+2019-07-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/ppc64.h (R_PPC64_TPREL34, R_PPC64_DTPREL34),\n+\t(R_PPC64_GOT_TLSGD34, R_PPC64_GOT_TLSLD34),\n+\t(R_PPC64_GOT_TPREL34, R_PPC64_GOT_DTPREL34): Define.\n+\t(IS_PPC64_TLS_RELOC): Include new tls relocs.\n+\n+2019-07-18  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ECTF_NOTFUNC): Fix description.\n+\t(ctf_func_type_info): New.\n+\t(ctf_func_type_args): Likewise.\n+\t(ctf_type_aname_raw): Likewise.\n+\n+2019-07-16  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* opcode/i386.h (POP_SEG386_SHORT): New.\n+\n+2019-07-01  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_insn_class): sve_size_013\n+\trenamed to sve_size_13.\n+\n+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf.h (ctf_slice_t): Make cts_offset and cts_bits unsigned\n+\tshort, so following structures are properly aligned.\n+\n+2019-06-14  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* elf/aarch64.h (R_AARCH64_P32_MOVW_PREL_G0): Define.\n+\t(R_AARCH64_P32_MOVW_PREL_G0_NC): Define.\n+\t(R_AARCH64_P32_MOVW_PREL_G1): Define.\n+\n+2019-06-03  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf.h (ctf_enum.cte_value): Fix type to int32_t.\n+\n+2019-05-29  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_sect_t): Drop cts_type, cts_flags, and cts_offset.\n+\t(ctf_id_t): This is now an unsigned type.\n+\t(CTF_ERR): Cast it to ctf_id_t.  Note that it should only be used\n+\tfor ctf_id_t-returning functions.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_dump_decorate_f): New.\n+\t(ctf_dump_state_t): new.\n+\t(ctf_dump): New.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_label_f): New.\n+\t(ctf_label_set): New.\n+\t(ctf_label_get): New.\n+\t(ctf_label_topmost): New.\n+\t(ctf_label_info): New.\n+\t(ctf_label_iter): New.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_version): New.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_func_info): New.\n+\t(ctf_func_args): Likewise.\n+\t(ctf_lookup_by_symbol): Likewise.\n+\t(ctf_lookup_by_symbol): Likewise.\n+\t(ctf_lookup_variable): Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_visit_f): New definition.\n+\t(ctf_member_f): Likewise.\n+\t(ctf_enum_f): Likewise.\n+\t(ctf_variable_f): Likewise.\n+\t(ctf_type_f): Likewise.\n+\t(ctf_type_isparent): Likewise.\n+\t(ctf_type_ischild): Likewise.\n+\t(ctf_type_resolve): Likewise.\n+\t(ctf_type_aname): Likewise.\n+\t(ctf_type_lname): Likewise.\n+\t(ctf_type_name): Likewise.\n+\t(ctf_type_sizee): Likewise.\n+\t(ctf_type_align): Likewise.\n+\t(ctf_type_kind): Likewise.\n+\t(ctf_type_reference): Likewise.\n+\t(ctf_type_pointer): Likewise.\n+\t(ctf_type_encoding): Likewise.\n+\t(ctf_type_visit): Likewise.\n+\t(ctf_type_cmp): Likewise.\n+\t(ctf_type_compat): Likewise.\n+\t(ctf_member_info): Likewise.\n+\t(ctf_array_info): Likewise.\n+\t(ctf_enum_name): Likewise.\n+\t(ctf_enum_value): Likewise.\n+\t(ctf_member_iter): Likewise.\n+\t(ctf_enum_iter): Likewise.\n+\t(ctf_type_iter): Likewise.\n+\t(ctf_variable_iter): Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (struct bfd): New forward.\n+\t(ctf_fdopen): New.\n+\t(ctf_bfdopen): Likewise.\n+\t(ctf_open): Likewise.\n+\t(ctf_arc_open): Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf.h (CTFA_MAGIC): New.\n+\t(struct ctf_archive): New.\n+\t(struct ctf_archive_modent): Likewise.\n+\t* ctf-api.h (ctf_archive_member_f): New.\n+\t(ctf_archive_raw_member_f): Likewise.\n+\t(ctf_arc_write): Likewise.\n+\t(ctf_arc_close): Likewise.\n+\t(ctf_arc_open_by_name): Likewise.\n+\t(ctf_archive_iter): Likewise.\n+\t(ctf_archive_raw_iter): Likewise.\n+\t(ctf_get_arc): Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_file_close): New declaration.\n+\t(ctf_getdatasect): Likewise.\n+\t(ctf_parent_file): Likewise.\n+\t(ctf_parent_name): Likewise.\n+\t(ctf_parent_name_set): Likewise.\n+\t(ctf_import): Likewise.\n+\t(ctf_setmodel): Likewise.\n+\t(ctf_getmodel): Likewise.\n+\t(ctf_setspecific): Likewise.\n+\t(ctf_getspecific): Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (zlib.h): New include.\n+\t(ctf_sect_t): New.\n+\t(ctf_sect_names_t): Likewise.\n+\t(ctf_encoding_t): Likewise.\n+\t(ctf_membinfo_t): Likewise.\n+\t(ctf_arinfo_t): Likewise.\n+\t(ctf_funcinfo_t): Likewise.\n+\t(ctf_lblinfo_t): Likewise.\n+\t(ctf_snapshot_id_t): Likewise.\n+\t(CTF_FUNC_VARARG): Likewise.\n+\t(ctf_simple_open): Likewise.\n+\t(ctf_bufopen): Likewise.\n+\t(ctf_create): Likewise.\n+\t(ctf_add_array): Likewise.\n+\t(ctf_add_const): Likewise.\n+\t(ctf_add_enum_encoded): Likewise.\n+\t(ctf_add_enum): Likewise.\n+\t(ctf_add_float): Likewise.\n+\t(ctf_add_forward): Likewise.\n+\t(ctf_add_function): Likewise.\n+\t(ctf_add_integer): Likewise.\n+\t(ctf_add_slice): Likewise.\n+\t(ctf_add_pointer): Likewise.\n+\t(ctf_add_type): Likewise.\n+\t(ctf_add_typedef): Likewise.\n+\t(ctf_add_restrict): Likewise.\n+\t(ctf_add_struct): Likewise.\n+\t(ctf_add_union): Likewise.\n+\t(ctf_add_struct_sized): Likewise.\n+\t(ctf_add_union_sized): Likewise.\n+\t(ctf_add_volatile): Likewise.\n+\t(ctf_add_enumerator): Likewise.\n+\t(ctf_add_member): Likewise.\n+\t(ctf_add_member_offset): Likewise.\n+\t(ctf_add_member_encoded): Likewise.\n+\t(ctf_add_variable): Likewise.\n+\t(ctf_set_array): Likewise.\n+\t(ctf_update): Likewise.\n+\t(ctf_snapshot): Likewise.\n+\t(ctf_rollback): Likewise.\n+\t(ctf_discard): Likewise.\n+\t(ctf_write): Likewise.\n+\t(ctf_gzwrite): Likewise.\n+\t(ctf_compress_write): Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_errno): New declaration.\n+\t(ctf_errmsg): Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_setdebug): New.\n+\t(ctf_getdebug): Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h: New file.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf.h: New file.\n+\n+2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* elf/aarch64.h (DT_AARCH64_VARIANT_PCS): Define.\n+\t(STO_AARCH64_VARIANT_PCS): Define.\n+\n+2019-05-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/ppc64.h (R_PPC64_PLTSEQ_NOTOC, R_PPC64_PLTCALL_NOTOC),\n+\t(R_PPC64_PCREL_OPT, R_PPC64_D34, R_PPC64_D34_LO, R_PPC64_D34_HI30),\n+\t(R_PPC64_D34_HA30, R_PPC64_PCREL34, R_PPC64_GOT_PCREL34),\n+\t(R_PPC64_PLT_PCREL34, R_PPC64_PLT_PCREL34_NOTOC),\n+\t(R_PPC64_ADDR16_HIGHER34, R_PPC64_ADDR16_HIGHERA34),\n+\t(R_PPC64_ADDR16_HIGHEST34, R_PPC64_ADDR16_HIGHESTA34),\n+\t(R_PPC64_REL16_HIGHER34, R_PPC64_REL16_HIGHERA34),\n+\t(R_PPC64_REL16_HIGHEST34, R_PPC64_REL16_HIGHESTA34),\n+\t(R_PPC64_D28, R_PPC64_PCREL28): Define.\n+\n+2019-05-24  Peter Bergner  <bergner@linux.ibm.com>\n+\t    Alan Modra  <amodra@gmail.com>\n+\n+\t* dis-asm.h (WIDE_OUTPUT): Define.\n+\t* opcode/ppc.h (prefix_opcodes, prefix_num_opcodes): Declare.\n+\t(PPC_OPCODE_POWERXX, PPC_GET_PREFIX, PPC_GET_SUFFIX),\n+\t(PPC_PREFIX_P, PPC_PREFIX_SEG): Define.\n+\n+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* elf/bpf.h: New file.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* elf/arm.h (Tag_MVE_arch): Define new enum value.\n+\t* opcode/arm.h (FPU_MVE, FPU_MVE_FP): New MACROs for new features.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_SHLIMM_UNPRED_22\n+\toperand.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_tsz_bhs\n+\ticlass.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_Zm4_11_INDEX operand.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_shift_tsz_bhsd\n+\ticlass.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_SHRIMM_UNPRED_22\n+\toperand.\n+\t(enum aarch64_insn_class): Add sve_shift_tsz_hsd iclass.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_013 iclass.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_bh iclass.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_sd2 iclass.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_ADDR_ZX operand.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_Zm3_11_INDEX operand.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_hsd2 iclass.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_IMM_ROT3 operand.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_SVE2\n+\tAARCH64_FEATURE_SVE2_AES, AARCH64_FEATURE_SVE2_BITPERM,\n+\tAARCH64_FEATURE_SVE2_SM4, AARCH64_FEATURE_SVE2_SHA3): New\n+\tfeature macros.\n+\n+2019-05-06  Andrew Bennett  <andrew.bennett@imgtec.com>\n+\t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n+\n+\t* opcode/mips.h (ASE_EVA_R6): New macro.\n+\t(M_LLWPE_AB, M_SCWPE_AB): New enum values.\n+\n+2019-05-01  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_TME): New.\n+\t(enum aarch64_opnd): Add AARCH64_OPND_TME_UIMM16.\n+\n+2019-04-26  Andrew Bennett  <andrew.bennett@imgtec.com>\n+\t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n+\n+\t* opcode/mips.h (M_LLWP_AB, M_LLDP_AB): New enum values.\n+\t(M_SCWP_AB, M_SCDP_AB): Likewise.\n+\n+2019-04-25  Maciej W. Rozycki  <macro@linux-mips.org>\n+\n+\t* opcode/mips.h: Update comment for MIPS32 CODE20 operand.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF12.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF18.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF16.\n+\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* elf/arm.h (TAG_CPU_ARCH_V8_1M_MAIN): new macro.\n+\t(MAX_TAG_CPU_ARCH): Set value to above macro.\n+\t* opcode/arm.h (ARM_EXT2_V8_1M_MAIN): New macro.\n+\t(ARM_AEXT_V8_1M_MAIN): Likewise.\n+\t(ARM_AEXT2_V8_1M_MAIN): Likewise.\n+\t(ARM_ARCH_V8_1M_MAIN): Likewise.\n+\n+2019-04-11  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): Add AARCH64_OPND_Rt_SP.\n+\n+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elf/common.h (GNU_PROPERTY_X86_ISA_1_AVX512_BF16): New.\n+\n+2019-04-07  Alan Modra  <amodra@gmail.com>\n+\n+\tMerge from gcc.\n+\t2019-04-03  Vineet Gupta  <vgupta@synopsys.com>\n+\tPR89877\n+\t* longlong.h [__arc__] (add_ssaaaa): Add cc clobber.\n+\t(sub_ddmmss): Likewise.\n+\n+2019-04-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* bfdlink.h (bfd_link_info): Remove x86-specific linker options.\n+\n+2019-04-01  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* opcode/arm.h (FPU_NEON_ARMV8_1): New.\n+\t(FPU_ARCH_NEON_VFP_ARMV8_1): Use FPU_NEON_ARMV8_1.\n+\t(FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_1): Likewise.\n+\t(FPU_ARCH_DOTPROD_NEON_VFP_ARMV8): Likewise.\n+\t(FPU_ARCH_NEON_VFP_ARMV8_2_FP16): New.\n+\t(FPU_ARCH_NEON_VFP_ARMV8_2_FP16FML): New.\n+\t(FPU_ARCH_NEON_VFP_ARMV8_4_FP16FML): New.\n+\t(FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_4): New.\n+\n+2019-03-28  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24390\n+\t* opcode/ppc.h (PPC_OPERAND_CR_REG): Comment.\n+\n+2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* dis-asm.h (struct disassemble_info): Add stop_offset.\n+\n+2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* elf/aarch64.h (DT_AARCH64_PAC_PLT): New.\n+\n+2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n+\t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* elf/aarch64.h (DT_AARCH64_BTI_PLT): New.\n+\n+2019-03-13  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* elf/common.h (GNU_PROPERTY_AARCH64_FEATURE_1_AND): New.\n+\t(GNU_PROPERTY_AARCH64_FEATURE_1_BTI): New.\n+\t(GNU_PROPERTY_AARCH64_FEATURE_1_PAC): New.\n+\n+2019-02-20  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* elf/common.h (NT_ARM_PAC_MASK): Add define.\n+\n+2019-02-15  Saagar Jha  <saagar@saagarjha.com>\n+\n+\t* mach-o/loader.h: Use new OS names in comments.\n+\n+2019-02-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* splay-tree.h (splay_tree_delete_key_fn): Update comment.\n+\t(splay_tree_delete_value_fn): Likewise.\n+\n+2019-01-31  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* opcode/s390.h (enum s390_opcode_cpu_val): Add\n+\tS390_OPCODE_ARCH13.\n+\n+2019-01-25  Sudakshina Das  <sudi.das@arm.com>\n+\t    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): Remove\n+\tAARCH64_OPND_ADDR_SIMPLE_2.\n+\t(enum aarch64_insn_class): Remove ldstgv_indexed.\n+\n+2019-01-22  Tom Tromey  <tom@tromey.com>\n+\n+\t* coff/ecoff.h: Include coff/sym.h.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.32 branch created.\n+\n+2019-01-16  Kito Cheng  <kito@andestech.com>\n+\n+\t* elf/riscv.h (SHT_RISCV_ATTRIBUTES): Define.\n+\t(Tag_RISCV_arch): Likewise.\n+\t(Tag_RISCV_priv_spec): Likewise.\n+\t(Tag_RISCV_priv_spec_minor): Likewise.\n+\t(Tag_RISCV_priv_spec_revision): Likewise.\n+\t(Tag_RISCV_unaligned_access): Likewise.\n+\t(Tag_RISCV_stack_align): Likewise.\n+\n+2019-01-14  Pavel I. Kryukov  <kryukov@frtk.ru>\n+\n+\t* dis-asm.h: include <string.h>\n+\n+2019-01-10  Nick Clifton  <nickc@redhat.com>\n+\n+\t* Merge from GCC:\n+\t2018-12-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* demangle.h: Remove support for ancient GNU (pre-3.0), Lucid,\n+\tARM, HP, and EDG demangling styles.\n+\n+2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tMerge from GCC:\n+\tPR other/16615\n+\n+\t* libiberty.h: Mechanically replace \"can not\" with \"cannot\".\n+\t* plugin-api.h: Likewise.\n+\n+2018-12-25  Yoshinori Sato <ysato@users.sourceforge.jp>\n+\n+\t* elf/rx.h (EF_RX_CPU_MASK): Update new bits.\n+\t(E_FLAG_RX_V3): New RXv3 type.\n+\t* opcode/rx.h (RX_Size): Add double size.\n+\t(RX_Operand_Type): Add double FPU registers.\n+\t(RX_Opcode_ID): Add new instuctions.\n+\n+2019-01-01  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2018\n+\f\n+Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "43dd3f31db701088338730ebc7579da09d72f8a1",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 2892,
      "changes": 2894,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=0b11474080800192797236e30857a42818f5560d"
    },
    {
      "sha": "f29913e9cf924adeb9ffb5f9acb567a780427d14",
      "filename": "ld/ChangeLog-2019",
      "status": "added",
      "additions": 2904,
      "deletions": 0,
      "changes": 2904,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/ld/ChangeLog-2019",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/ld/ChangeLog-2019",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog-2019?ref=0b11474080800192797236e30857a42818f5560d"
    },
    {
      "sha": "43dd3f31db701088338730ebc7579da09d72f8a1",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 2444,
      "changes": 2446,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=0b11474080800192797236e30857a42818f5560d",
      "patch": "@@ -1,2448 +1,6 @@\n-2019-12-30  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25319\n-\t* tic4x-dis.c (tic4x_print_cond): Correct order of xcalloc args.\n-\n-2019-12-29  Alan Modra  <amodra@gmail.com>\n-\n-\t* sparc-dis.c (SEX): Don't use left and right shift to sign extend.\n-\t(compare_opcodes): Avoid signed shift left overflow.\n-\t(print_insn_sparc): Likewise.\n-\n-2019-12-29  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25319\n-\t* tic4x-dis.c (tic4x_print_cond): Init all of condtable.\n-\n-2019-12-27  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (Jdqw): Define.\n-\t(dqw_mode): Adjust associated comment.\n-\t(rm_table): Use Jdqw for XBEGIN.\n-\t(OP_J): Handle dqw_mode.\n-\n-2019-12-27  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (process_i386_operand_type): Don't set Disp32 for\n-\tCpu64 templates.\n-\t* i386-opc.tbl (mov): Fold two templates.\n-\t(jcxz, jecxz, jrcxz, loop, loope, loopne, loopnz, loopz): Drop\n-\tDisp16, Disp32, and Disp32S.\n-\t(xbegin): Add Disp32S.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-12-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* crx-dis.c (get_number_of_operands): Don't access operands[]\n-\tout of bounds.\n-\n-2019-12-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* v850-dis.c (disassemble): Avoid signed overflow.  Don't use\n-\tlong vars when unsigned int will do.\n-\n-2019-12-24  Alan Modra  <amodra@gmail.com>\n-\n-\t* arm-dis.c (print_insn_arm): Don't shift by 32 on unsigned int var.\n-\n-2019-12-23  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* ppc-dis.c (print_insn_powerpc): Rename local variable \"spaces\"\n-\tto \"blanks\".\n-\t* ppc-opc.c (D34, SI34, NSI34): Use UINT64_C().\n-\n-2019-12-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* score-dis.c (print_insn_score32): Avoid signed overflow.\n-\t(print_insn_score48): Likewise.  Don't cast to int when printing\n-\thex values.\n-\n-2019-12-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* iq2000-ibld.c: Regenerate.\n-\n-2019-12-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* d30v-dis.c (extract_value): Make num param a uint64_t, constify\n-\toper.  Use unsigned vars.\n-\t(print_insn): Make num var uint64_t.  Constify oper and remove now\n-\tunnecessary casts on extract_value calls.\n-\t(print_insn_d30v): Use unsigned vars.  Adjust printf formats.\n-\n-2019-12-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* wasm32-dis.c (wasm_read_leb128): Don't allow oversize shifts.\n-\tCatch value overflow.  Sign extend only on terminating byte.\n-\n-2019-12-20  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25281\n-\t* sh-dis.c (print_insn_ddt): Properly check validity of MOVX_NOPY\n-\tand MOVY_NOPX insns.  For invalid cases include 0xf000 in the word\n-\tprinted.  Print .word in more cases.\n-\n-2019-12-20  Alan Modra  <amodra@gmail.com>\n-\n-\t* or1k-ibld.c: Regenerate.\n-\n-2019-12-20  Alan Modra  <amodra@gmail.com>\n-\n-\t* hppa-dis.c (extract_16, extract_21, print_insn_hppa): Use\n-\tunsigned variables.\n-\n-2019-12-20  Alan Modra  <amodra@gmail.com>\n-\n-\t* m68hc11-dis.c (read_memory): Delete forward decls.\n-\t(print_indexed_operand, print_insn): Likewise.\n-\t(print_indexed_operand): Formatting.  Don't rely on short being\n-\texactly 16 bits, make sign extension explicit.\n-\t(print_insn): Likewise.  Avoid signed overflow.\n-\n-2019-12-19  Alan Modra  <amodra@gmail.com>\n-\n-\t* vax-dis.c (print_insn_mode): Stop index mode recursion.\n-\n-2019-12-19  Dr N.W. Filardo  <nwf20@cam.ac.uk>\n-\n-\tPR 25277\n-\t* microblaze-opcm.h (enum microblaze_instr): Prefix fadd, fmul and\n-\tfdiv with \"mbi_\".\n-\t* microblaze-opc.h (opcodes): Adjust to suit.\n-\n-2019-12-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* alpha-opc.c (OP): Avoid signed overflow.\n-\t* arm-dis.c (print_insn): Likewise.\n-\t* mcore-dis.c (print_insn_mcore): Likewise.\n-\t* pj-dis.c (get_int): Likewise.\n-\t* ppc-opc.c (EBD15, EBD15BI): Likewise.\n-\t* score7-dis.c (s7_print_insn): Likewise.\n-\t* tic30-dis.c (print_insn_tic30): Likewise.\n-\t* v850-opc.c (insert_SELID): Likewise.\n-\t* vax-dis.c (print_insn_vax): Likewise.\n-\t* arc-ext.c (create_map): Likewise.\n-\t(struct ExtAuxRegister): Make \"address\" field unsigned int.\n-\t(arcExtMap_auxRegName): Pass unsigned address.\n-\t(dump_ARC_extmap): Adjust.\n-\t* arc-ext.h (arcExtMap_auxRegName): Update prototype.\n-\n-2019-12-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* visium-dis.c (print_insn_visium): Avoid signed overflow.\n-\n-2019-12-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* aarch64-opc.c (value_fit_signed_field_p): Avoid signed overflow.\n-\t(value_fit_unsigned_field_p): Likewise.\n-\t(aarch64_wide_constant_p): Likewise.\n-\t(operand_general_constraint_met_p): Likewise.\n-\t* aarch64-opc.h (aarch64_wide_constant_p): Update prototype.\n-\n-2019-12-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* nds32-dis.c (nds32_mask_opcode): Avoid signed overflow.\n-\t(print_insn_nds32): Use uint64_t for \"given\" and \"given1\".\n-\n-2019-12-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* tic80-dis.c: Delete file.\n-\t* tic80-opc.c: Delete file.\n-\t* disassemble.c: Remove tic80 support.\n-\t* disassemble.h: Likewise.\n-\t* Makefile.am: Likewise.\n-\t* configure.ac: Likewise.\n-\t* Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2019-12-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* bpf-ibld.c: Regenerate.\n-\n-2019-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* aarch64-dis.c (sign_extend): Return uint64_t.  Rewrite without\n-\tconditional.\n-\t(aarch64_ext_imm): Avoid signed overflow.\n-\n-2019-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* microblaze-dis.c (read_insn_microblaze): Avoid signed overflow.\n-\n-2019-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* nios2-dis.c (nios2_print_insn_arg): Avoid signed overflow\n-\n-2019-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* xstormy16-ibld.c: Regenerate.\n-\n-2019-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* score-dis.c (print_insn_score16): Move rpush/rpop imm field\n-\tvalue adjustment so that it doesn't affect reg field too.\n-\n-2019-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* crx-dis.c (EXTRACT, SBM): Avoid signed overflow.\n-\t(get_number_of_operands, getargtype, getbits, getregname),\n-\t(getcopregname, getprocregname, gettrapstring, getcinvstring),\n-\t(getregliststring, get_word_at_PC, get_words_at_PC, build_mask),\n-\t(powerof2, match_opcode, make_instruction, print_arguments),\n-\t(print_arg): Delete forward declarations, moving static to..\n-\t(getregname, getcopregname, getregliststring): ..these definitions.\n-\t(build_mask): Return unsigned int mask.\n-\t(match_opcode): Use unsigned int vars.\n-\n-2019-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* bfin-dis.c (fmtconst, fmtconst_val): Avoid signed overflow.\n-\n-2019-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* nds32-dis.c (print_insn16, print_insn32): Remove forward decls.\n-\t(struct objdump_disasm_info): Delete.\n-\t(nds32_parse_audio_ext, nds32_parse_opcode): Cast result of\n-\tN32_IMMS to unsigned before shifting left.\n-\n-2019-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* moxie-dis.c (INST2OFFSET): Don't left shift a signed value.\n-\t(print_insn_moxie): Remove unnecessary cast.\n-\n-2019-12-12  Alan Modra  <amodra@gmail.com>\n-\n-\t* csky-dis.c (csky_chars_to_number): Remove abort and unnecessary\n-\tmask.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* arc-dis.c (BITS): Don't truncate high bits with shifts.\n-\t* nios2-dis.c (nios2_print_insn_arg): Don't sign extend with shifts.\n-\t* tic54x-dis.c (print_instruction): Likewise.\n-\t* tilegx-opc.c (parse_insn_tilegx): Likewise.\n-\t* tilepro-opc.c (parse_insn_tilepro): Likewise.\n-\t* visium-dis.c (disassem_class0): Likewise.\n-\t* pdp11-dis.c (sign_extend): Likewise.\n-\t(SIGN_BITS): Delete.\n-\t* epiphany-ibld.c: Regenerate.\n-\t* lm32-ibld.c: Regenerate.\n-\t* m32c-ibld.c: Regenerate.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* ns32k-dis.c (sign_extend): Correct last patch.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* vax-dis.c (NEXTLONG): Avoid signed overflow.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* v850-dis.c (get_operand_value): Use unsigned arithmetic.  Don't\n-\tsign extend using shifts.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* tic6x-dis.c (tic6x_extract_32): Avoid signed overflow.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* tic4x-dis.c (tic4x_print_register): Formatting.  Don't segfault\n-\ton NULL registertable entry.\n-\t(tic4x_hash_opcode): Use unsigned arithmetic.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* s12z-opc.c (z_decode_signed_value): Avoid signed overflow.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* ns32k-dis.c (bit_extract): Use unsigned arithmetic.\n-\t(bit_extract_simple, sign_extend): Likewise.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* nios2-dis.c (nios2_print_insn_arg): Use 1u << 31.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* moxie-dis.c (INST2OFFSET): Don't sign extend using shifts.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* m68k-dis.c (COERCE32): Cast value first.\n-\t(NEXTLONG, NEXTULONG): Avoid signed overflow.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* h8300-dis.c (extract_immediate): Avoid signed overflow.\n-\t(bfd_h8_disassemble): Likewise.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* d30v-dis.c (print_insn): Make opind unsigned.  Don't access\n-\tpast end of operands array.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* csky-dis.c (csky_chars_to_number): Rewrite.  Avoid signed\n-\toverflow when collecting bytes of a number.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* cris-dis.c (print_with_operands): Avoid signed integer\n-\toverflow when collecting bytes of a 32-bit integer.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* cr16-dis.c (EXTRACT, SBM): Rewrite.\n-\t(cr16_match_opcode): Delete duplicate bcond test.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* bfin-dis.c (HOST_LONG_WORD_SIZE, XFIELD): Delete.\n-\t(SIGNBIT): New.\n-\t(MASKBITS, SIGNEXTEND): Rewrite.\n-\t(fmtconst): Don't use ? expression now that SIGNEXTEND uses\n-\tunsigned arithmetic, instead assign result of SIGNEXTEND back\n-\tto x.\n-\t(fmtconst_val): Use 1u in shift expression.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* arc-dis.c (find_format_from_table): Use ull constant when\n-\tshifting by up to 32.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25270\n-\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Return\n-\tfalse when field is zero for sve_size_tsz_bhs.\n-\n-2019-12-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* epiphany-ibld.c: Regenerate.\n-\n-2019-12-10  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24960\n-\t* disassemble.c (disassemble_free_target): New function.\n-\n-2019-12-10  Alan Modra  <amodra@gmail.com>\n-\n-\t* cgen-dis.in (print_insn_@arch@): Replace insn_sets with private_data.\n-\t* disassemble.c (disassemble_init_for_target): Likewise.\n-\t* bpf-dis.c: Regenerate.\n-\t* epiphany-dis.c: Regenerate.\n-\t* fr30-dis.c: Regenerate.\n-\t* frv-dis.c: Regenerate.\n-\t* ip2k-dis.c: Regenerate.\n-\t* iq2000-dis.c: Regenerate.\n-\t* lm32-dis.c: Regenerate.\n-\t* m32c-dis.c: Regenerate.\n-\t* m32r-dis.c: Regenerate.\n-\t* mep-dis.c: Regenerate.\n-\t* mt-dis.c: Regenerate.\n-\t* or1k-dis.c: Regenerate.\n-\t* xc16x-dis.c: Regenerate.\n-\t* xstormy16-dis.c: Regenerate.\n-\n-2019-12-10  Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-dis.c (private): Delete variable.\n-\t(get_powerpc_dialect): Don't segfault on NULL info->private_data.\n-\t(powerpc_init_dialect): Don't use global private.\n-\n-2019-12-10  Alan Modra  <amodra@gmail.com>\n-\n-\t* s12z-opc.c: Formatting.\n-\n-2019-12-08  Alan Modra  <amodra@gmail.com>\n-\n-\t* s12z-opc.c (exg_sex_discrim): Don't leak memory on invalid\n-\tregisters.\n-\n-2019-12-05  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* aarch64-tbl.h (aarch64_feature_crypto,\n-\taarch64_feature_crypto_v8_2, CRYPTO, CRYPTO_V8_2, CRYP_INSN,\n-\tCRYPTO_V8_2_INSN): Delete.\n-\n-2019-12-05  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25249\n-\t* microblaze-dis.c (NUM_STRBUFS, STRBUF_SIZE): Define.\n-\t(struct string_buf): New.\n-\t(strbuf): New function.\n-\t(get_field): Use strbuf rather than strdup of local temp.\n-\t(get_field_imm, get_field_imm5, get_field_imm5_mbar): Likewise.\n-\t(get_field_rfsl, get_field_imm15): Likewise.\n-\t(get_field_rd, get_field_r1, get_field_r2): Update macros.\n-\t(get_field_special): Likewise.  Don't strcpy spr.  Formatting.\n-\t(print_insn_microblaze): Formatting.  Init and pass string_buf to\n-\tget_field functions.\n-\n-2019-12-04  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (lfs, lgs, lss): Drop No_qSuf.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-12-04  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (mod_table): Use Ev instead of Em for movdiri.\n-\n-2019-12-04  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (push, pop): Drop DefaultSize from GPR-only\n-\tforms.\n-\t(xbegin): Drop DefaultSize.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-11-22  Mihail Ionescu  <mihail.ionescu@arm.com>\n-\n-\t* opcodes/arm-dis.c (arm_opcodes, thumb32_opcodes):\n-\tChange the coproc CRC conditions to use the extension\n-\tfeature set, second word, base on ARM_EXT2_CRC.\n-\n-2019-11-14  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (syscall, sysret): Drop Cpu64 forms.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-11-14  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (opcode_modifiers): Remove JumpDword, JumpByte,\n-\tJumpInterSegment, and JumpAbsolute entries.\n-\t* i386-opc.h (JUMP, JUMP_DWORD, JUMP_BYTE, JUMP_INTERSEGMENT,\n-\tJUMP_ABSOLUTE): Define.\n-\t(struct i386_opcode_modifier): Extend jump field to 3 bits.\n-\tRemove jumpdword, jumpbyte, jumpintersegment, and jumpabsolute\n-\tfields.\n-\t* i386-opc.tbl (JumpByte, JumpDword, JumpAbsolute,\n-\tJumpInterSegment): Define.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-11-14  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_init): Remove\n-\tOPERAND_TYPE_JUMPABSOLUTE entry.\n-\t(opcode_modifiers): Add JumpAbsolute entry.\n-\t(operand_types): Remove JumpAbsolute entry.\n-\t* i386-opc.h (JumpAbsolute): Move between enums.\n-\t(struct i386_opcode_modifier): Add jumpabsolute field.\n-\t(union i386_operand_type): Remove jumpabsolute field.\n-\t* i386-opc.tbl (call, lcall, jmp, ljmp): Move JumpAbsolute.\n-\t* i386-init.h, i386-tbl.h: Re-generate.\n-\n-2019-11-14  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (opcode_modifiers): Add AnySize entry.\n-\t(operand_types): Remove AnySize entry.\n-\t* i386-opc.h (AnySize): Move between enums.\n-\t(struct i386_opcode_modifier): Add anysize field.\n-\t(OTUnused): Un-comment.\n-\t(union i386_operand_type): Remove anysize field.\n-\t* i386-opc.tbl (lea, invlpg, clflush, prefetchnta, prefetcht0,\n-\tprefetcht1, prefetcht2, prefetchtw, bndmk, bndcl, bndcu, bndcn,\n-\tbndstx, bndldx, prefetchwt1, clflushopt, clwb, cldemote): Move\n-\tAnySize.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-11-12  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* riscv-opc.c (riscv_insn_types): Replace the INSN_CLASS_I with\n-\tINSN_CLASS_F and the INSN_CLASS_C with INSN_CLASS_F_AND_C if we\n-\tuse the floating point register (FPR).\n-\n-2019-11-12  Mihail Ionescu  <mihail.ionescu@arm.com>\n-\n-\t* opcodes/arm-dis.c (mve_opcodes): Enable VMOV imm to vec with\n-\tcmode 1101.\n-\t(is_mve_encoding_conflict): Update cmode conflict checks for\n-\tMVE_VMVN_IMM.\n-\n-2019-11-12  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_init): Remove OPERAND_TYPE_ESSEG\n-\tentry.\n-\t(operand_types): Remove EsSeg entry.\n-\t(main): Replace stale use of OTMax.\n-\t* i386-opc.h (IS_STRING_ES_OP0, IS_STRING_ES_OP1): Define.\n-\t(struct i386_opcode_modifier): Expand isstring field to 2 bits.\n-\t(EsSeg): Delete.\n-\t(OTUnused): Comment out.\n-\t(union i386_operand_type): Remove esseg field.\n-\t* i386-opc.tbl (IsStringEsOp0, IsStringEsOp1): Define.\n-\t(cmps, scmp, scas, ssca, cmpsd): Add IsStringEsOp0.\n-\t(ins, movs, smov, movsd): Add IsStringEsOpOp1.\n-\t(stos, ssto): Add IsStringEsOp0/IsStringEsOpOp1.\n-\t* i386-init.h, i386-tbl.h: Re-generate.\n-\n-2019-11-12  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_instances): Add RegB entry.\n-\t* i386-opc.h (enum operand_instance): Add RegB.\n-\t* i386-opc.tbl (RegC, RegD, RegB): Define.\n-\t(Acc, ShiftCount, InOutPortReg): Adjust definitions.\n-\t(monitor, mwait, invlpga, skinit, vmload, vmrun, vmsave, clzero,\n-\tmonitorx, mwaitx): Drop ImmExt and convert encodings\n-\taccordingly.\n-\t* i386-reg.tbl (ecx, rcx): Add Instance=RegC.\n-\t(edx, rdx): Add Instance=RegD.\n-\t(ebx, rbx): Add Instance=RegB.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-11-12  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_init): Adjust\n-\tOPERAND_TYPE_INOUTPORTREG, OPERAND_TYPE_SHIFTCOUNT,\n-\tOPERAND_TYPE_FLOATACC, OPERAND_TYPE_ACC8, OPERAND_TYPE_ACC16,\n-\tOPERAND_TYPE_ACC32, and OPERAND_TYPE_ACC64 entries.\n-\t(operand_instances): New.\n-\t(operand_types): Drop InOutPortReg, ShiftCount, and Acc entries.\n-\t(output_operand_type): New parameter \"instance\". Process it.\n-\t(process_i386_operand_type): New local variable \"instance\".\n-\t(main): Adjust static assertions.\n-\t* i386-opc.h (INSTANCE_WIDTH): Define.\n-\t(enum operand_instance): New.\n-\t(Acc, InOutPortReg, ShiftCount): Replace by ClassInstance.\n-\t(union i386_operand_type): Replace acc, inoutportreg, and\n-\tshiftcount by instance.\n-\t* i386-opc.tbl (Acc, InOutPortReg, ShiftCount): Define.\n-\t* i386-reg.tbl (st, al, cl, ax, dx, eax, rax, xmm0, st(0)):\n-\tAdd Instance=.\n-\t* i386-init.h, i386-tbl.h: Re-generate.\n-\n-2019-11-11  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* aarch64-tbl.h (aarch64_opcode_table): Switch SVE2's\n-\tsmaxp/sminp entries' \"tied_operand\" field to 2.\n-\n-2019-11-11  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Replace\n-\t\"index\" local variable by that of the already existing \"num\".\n-\n-2019-11-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/25167\n-\t* i386-opc.tbl: Remove IgnoreSize from cmpsd and movsd.\n-\t* i386-tbl.h: Regenerated.\n-\n-2019-11-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_init): Add Class= to\n-\tOPERAND_TYPE_REGMASK and OPERAND_TYPE_REGBND entries. Move up\n-\tOPERAND_TYPE_REGBND entry.\n-\t(operand_classes): Add RegMask and RegBND entries.\n-\t(operand_types): Drop RegMask and RegBND entry.\n-\t* i386-opc.h (enum operand_class): Add RegMask and RegBND.\n-\t(RegMask, RegBND): Delete.\n-\t(union i386_operand_type): Remove regmask and regbnd fields.\n-\t* i386-opc.tbl (RegMask, RegBND): Define.\n-\t* i386-reg.tbl: Replace RegMask by Class=RegMask and RegBND by\n-\tClass=RegBND.\n-\t* i386-init.h, i386-tbl.h: Re-generate.\n-\n-2019-11-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_init): Add Class= to\n-\tOPERAND_TYPE_REGMMX, OPERAND_TYPE_REGXMM, OPERAND_TYPE_REGYMM, and\n-\tOPERAND_TYPE_REGZMM entries.\n-\t(operand_classes): Add RegMMX and RegSIMD entries.\n-\t(operand_types): Drop RegMMX and RegSIMD entries.\n-\t* i386-opc.h (enum operand_class): Add RegMMX and RegSIMD.\n-\t(RegMMX, RegSIMD): Delete.\n-\t(union i386_operand_type): Remove regmmx and regsimd fields.\n-\t* i386-opc.tbl (RegMMX): Define.\n-\t(RegXMM, RegYMM, RegZMM): Add Class=.\n-\t* i386-reg.tbl: Replace RegMMX by Class=RegMMX and RegSIMD by\n-\tClass=RegSIMD.\n-\t* i386-init.h, i386-tbl.h: Re-generate.\n-\n-2019-11-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_init): Add Class= to\n-\tOPERAND_TYPE_CONTROL, OPERAND_TYPE_TEST, and OPERAND_TYPE_DEBUG\n-\tentries.\n-\t(operand_classes): Add RegCR, RegDR, and RegTR entries.\n-\t(operand_types): Drop Control, Debug, and Test entries.\n-\t* i386-opc.h (enum operand_class): Add RegCR, RegDR, and RegTR.\n-\t(Control, Debug, Test): Delete.\n-\t(union i386_operand_type): Remove control, debug, and test\n-\tfields.\n-\t* i386-opc.tbl (Control, Debug, Test): Define.\n-\t* i386-reg.tbl: Replace Control by Class=RegCR, Debug by\n-\tClass=RegDR, and Test by Class=RegTR.\n-\t* i386-init.h, i386-tbl.h: Re-generate.\n-\n-2019-11-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_init): Add Class= to\n-\tOPERAND_TYPE_SREG entry.\n-\t(operand_classes): Add SReg entry.\n-\t(operand_types): Drop SReg entry.\n-\t* i386-opc.h (enum operand_class): Add SReg.\n-\t(SReg): Delete.\n-\t(union i386_operand_type): Remove sreg field.\n-\t* i386-opc.tbl (SReg): Define.\n-\t* i386-reg.tbl: Replace SReg by Class=SReg.\n-\t* i386-init.h, i386-tbl.h: Re-generate.\n-\n-2019-11-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_init): Add Class=. New\n-\tOPERAND_TYPE_ANYIMM entry.\n-\t(operand_classes): New.\n-\t(operand_types): Drop Reg entry.\n-\t(output_operand_type): New parameter \"class\". Process it.\n-\t(process_i386_operand_type): New local variable \"class\".\n-\t(main): Adjust static assertions.\n-\t* i386-opc.h (CLASS_WIDTH): Define.\n-\t(enum operand_class): New.\n-\t(Reg): Replace by Class. Adjust comment.\n-\t(union i386_operand_type): Replace reg by class.\n-\t* i386-opc.tbl (Reg8, Reg16, Reg32, Reg64, FloatReg): Add\n-\tClass=.\n-\t* i386-reg.tbl: Replace Reg by Class=Reg.\n-\t* i386-init.h: Re-generate.\n-\n-2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n-\n-\t* opcodes/aarch64-tbl.h (V8_6_INSN): New macro for v8.6 instructions.\n-\t(aarch64_opcode_table): Add data gathering hint mnemonic.\n-\t* opcodes/aarch64-dis-2.c: Account for new instruction.\n-\n-2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n-\n-\t* arm-dis.c (neon_opcodes): Add i8mm SIMD instructions.\n-\n-\n-2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n-\n-\t* aarch64-tbl.h (aarch64_feature_i8mm_sve, aarch64_feature_f32mm_sve,\n-\taarch64_feature_f64mm_sve, aarch64_feature_i8mm, aarch64_feature_f32mm,\n-\taarch64_feature_f64mm): New feature sets.\n-\t(INT8MATMUL_INSN, F64MATMUL_SVE_INSN, F64MATMUL_INSN,\n-\tF32MATMUL_SVE_INSN, F32MATMUL_INSN): New macros to define matrix multiply\n-\tinstructions.\n-\t(I8MM_SVE, F32MM_SVE, F64MM_SVE, I8MM, F32MM, F64MM): New feature set\n-\tmacros.\n-\t(QL_MMLA64, OP_SVE_SBB): New qualifiers.\n-\t(OP_SVE_QQQ): New qualifier.\n-\t(INT8MATMUL_SVE_INSNC, F64MATMUL_SVE_INSNC,\n-\tF32MATMUL_SVE_INSNC): New feature set for bfloat16 instructions to support\n-\tthe movprfx constraint.\n-\t(aarch64_opcode_table): Support for SVE_ADDR_RI_S4x32.\n-\t(aarch64_opcode_table): Define new instructions smmla,\n-\tummla, usmmla, usdot, sudot, fmmla, ld1rob, ld1roh, ld1row, ld1rod,\n-\tuzip{1/2}, trn{1/2}.\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Handle\n-\tAARCH64_OPND_SVE_ADDR_RI_S4x32.\n-\t(aarch64_print_operand): Handle AARCH64_OPND_SVE_ADDR_RI_S4x32.\n-\t* aarch64-dis-2.c (aarch64_opcode_lookup_1, aarch64_find_next_opcode):\n-\tAccount for new instructions.\n-\t* opcodes/aarch64-asm-2.c (aarch64_insert_operand): Support the new\n-\tS4x32 operand.\n-\t* aarch64-opc-2.c (aarch64_operands): Support the new S4x32 operand.\n-\n-2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n-2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* arm-dis.c (select_arm_features): Update bfd_march_arm_8 with\n-\tArmv8.6-A.\n-\t(coprocessor_opcodes): Add bfloat16 vcvt{t,b}.\n-\t(neon_opcodes): Add bfloat SIMD instructions.\n-\t(print_insn_coprocessor): Add new control character %b to print\n-\tcondition code without checking cp_num.\n-\t(print_insn_neon): Account for BFloat16 instructions that have no\n-\tspecial top-byte handling.\n-\n-2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n-2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* arm-dis.c (print_insn_coprocessor,\n-\tprint_insn_generic_coprocessor): Create wrapper functions around\n-\tthe implementation of the print_insn_coprocessor control codes.\n-\t(print_insn_coprocessor_1): Original print_insn_coprocessor\n-\tfunction that now takes which array to look at as an argument.\n-\t(print_insn_arm): Use both print_insn_coprocessor and\n-\tprint_insn_generic_coprocessor.\n-\t(print_insn_thumb32): As above.\n-\n-2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n-2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm.c (aarch64_ins_reglane): Use AARCH64_OPND_QLF_S_2H\n-\tin reglane special case.\n-\t* aarch64-dis-2.c (aarch64_opcode_lookup_1,\n-\taarch64_find_next_opcode): Account for new instructions.\n-\t* aarch64-dis.c (aarch64_ext_reglane): Use AARCH64_OPND_QLF_S_2H\n-\tin reglane special case.\n-\t* aarch64-opc.c (struct operand_qualifier_data): Add data for\n-\tnew AARCH64_OPND_QLF_S_2H qualifier.\n-\t* aarch64-tbl.h (QL_BFDOT QL_BFDOT64, QL_BFDOT64I, QL_BFMMLA2,\n-\tQL_BFCVT64, QL_BFCVTN64, QL_BFCVTN2_64): New qualifiers.\n-\t(aarch64_feature_bfloat16, aarch64_feature_bfloat16_sve): New feature\n-\tsets.\n-\t(BFLOAT_SVE, BFLOAT): New feature set macros.\n-\t(BFLOAT_SVE_INSN, BFLOAT_INSN): New macros to define BFloat16\n-\tinstructions.\n-\t(aarch64_opcode_table): Define new instructions bfdot,\n-\tbfmmla, bfcvt, bfcvtnt, bfdot, bfdot, bfcvtn, bfmlal[b/t]\n-\tbfcvtn2, bfcvt.\n-\n-2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n-2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-tbl.h (ARMV8_6): New macro.\n-\n-2019-11-07  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (prefix_table): Add mcommit.\n-\t(rm_table): Add rdpru.\n-\t* i386-gen.c (cpu_flag_init): Adjust CPU_ZNVER2_FLAGS entry. Add\n-\tCPU_RDPRU_FLAGS and CPU_MCOMMIT_FLAGS entries.\n-\t(cpu_flags): Add CpuRDPRU and CpuMCOMMIT entries.\n-\t* i386-opc.h (CpuRDPRU, CpuMCOMMIT): New.\n-\t(union i386_cpu_flags): Add cpurdpru and cpumcommit fields.\n-\t* i386-opc.tbl (mcommit, rdpru): New.\n-\t* i386-init.h, i386-tbl.h: Re-generate.\n-\n-2019-11-07  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (OP_Mwait): Drop local variable \"names\", use\n-\t\"names32\" instead.\n-\t(OP_Monitor): Drop local variable \"op1_names\", re-purpose\n-\t\"names\" for it instead, and replace former \"names\" uses by\n-\t\"names32\" ones.\n-\n-2019-11-07  Jan Beulich  <jbeulich@suse.com>\n-\n-\tPR/gas 25167\n-\t* opcodes/i386-opc.tbl (movsd, cmpsd): Drop IgnoreSize from\n-\toperand-less forms.\n-\t* opcodes/i386-tbl.h: Re-generate.\n-\n-2019-11-05  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (OP_Mwaitx): Delete.\n-\t(prefix_table): Use OP_Mwait for mwaitx entry.\n-\t(OP_Mwait): Also handle mwaitx.\n-\n-2019-11-05  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (PREFIX_0F01_REG_7_MOD_3_RM_2,\n-\tPREFIX_0F01_REG_7_MOD_3_RM_3): New.\n-\t(prefix_table): Add respective entries.\n-\t(rm_table): Link to those entries.\n-\n-2019-11-05  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (REG_0F1C_MOD_0): Rename to ...\n-\t(REG_0F1C_P_0_MOD_0): ... this.\n-\t(REG_0F1E_MOD_3): Rename to ...\n-\t(REG_0F1E_P_1_MOD_3): ... this.\n-\t(RM_0F01_REG_5): Rename to ...\n-\t(RM_0F01_REG_5_MOD_3): ... this.\n-\t(RM_0F01_REG_7): Rename to ...\n-\t(RM_0F01_REG_7_MOD_3): ... this.\n-\t(RM_0F1E_MOD_3_REG_7): Rename to ...\n-\t(RM_0F1E_P_1_MOD_3_REG_7): ... this.\n-\t(RM_0FAE_REG_6): Rename to ...\n-\t(RM_0FAE_REG_6_MOD_3_P_0): ... this.\n-\t(RM_0FAE_REG_7): Rename to ...\n-\t(RM_0FAE_REG_7_MOD_3): ... this.\n-\t(PREFIX_MOD_0_0F01_REG_5): Rename to ...\n-\t(PREFIX_0F01_REG_5_MOD_0): ... this.\n-\t(PREFIX_MOD_3_0F01_REG_5_RM_0): Rename to ...\n-\t(PREFIX_0F01_REG_5_MOD_3_RM_0): ... this.\n-\t(PREFIX_MOD_3_0F01_REG_5_RM_2): Rename to ...\n-\t(PREFIX_0F01_REG_5_MOD_3_RM_2): ... this.\n-\t(PREFIX_0FAE_REG_0): Rename to ...\n-\t(PREFIX_0FAE_REG_0_MOD_3): ... this.\n-\t(PREFIX_0FAE_REG_1): Rename to ...\n-\t(PREFIX_0FAE_REG_1_MOD_3): ... this.\n-\t(PREFIX_0FAE_REG_2): Rename to ...\n-\t(PREFIX_0FAE_REG_2_MOD_3): ... this.\n-\t(PREFIX_0FAE_REG_3): Rename to ...\n-\t(PREFIX_0FAE_REG_3_MOD_3): ... this.\n-\t(PREFIX_MOD_0_0FAE_REG_4): Rename to ...\n-\t(PREFIX_0FAE_REG_4_MOD_0): ... this.\n-\t(PREFIX_MOD_3_0FAE_REG_4): Rename to ...\n-\t(PREFIX_0FAE_REG_4_MOD_3): ... this.\n-\t(PREFIX_MOD_0_0FAE_REG_5): Rename to ...\n-\t(PREFIX_0FAE_REG_5_MOD_0): ... this.\n-\t(PREFIX_MOD_3_0FAE_REG_5): Rename to ...\n-\t(PREFIX_0FAE_REG_5_MOD_3): ... this.\n-\t(PREFIX_MOD_0_0FAE_REG_6): Rename to ...\n-\t(PREFIX_0FAE_REG_6_MOD_0): ... this.\n-\t(PREFIX_MOD_1_0FAE_REG_6): Rename to ...\n-\t(PREFIX_0FAE_REG_6_MOD_3): ... this.\n-\t(PREFIX_0FAE_REG_7): Rename to ...\n-\t(PREFIX_0FAE_REG_7_MOD_0): ... this.\n-\t(PREFIX_MOD_0_0FC3): Rename to ...\n-\t(PREFIX_0FC3_MOD_0): ... this.\n-\t(PREFIX_MOD_0_0FC7_REG_6): Rename to ...\n-\t(PREFIX_0FC7_REG_6_MOD_0): ... this.\n-\t(PREFIX_MOD_3_0FC7_REG_6): Rename to ...\n-\t(PREFIX_0FC7_REG_6_MOD_3): ... this.\n-\t(PREFIX_MOD_3_0FC7_REG_7): Rename to ...\n-\t(PREFIX_0FC7_REG_7_MOD_3): ... this.\n-\t(reg_table, prefix_table, mod_table, rm_table): Adjust\n-\taccordingly.\n-\n-2019-11-04  Nick Clifton  <nickc@redhat.com>\n-\n-\t* v850-dis.c (get_v850_sreg_name): New function.  Returns the name\n-\tof a v850 system register.  Move the v850_sreg_names array into\n-\tthis function.\n-\t(get_v850_reg_name): Likewise for ordinary register names.\n-\t(get_v850_vreg_name): Likewise for vector register names.\n-\t(get_v850_cc_name): Likewise for condition codes.\n-\t* get_v850_float_cc_name): Likewise for floating point condition\n-\tcodes.\n-\t(get_v850_cacheop_name): Likewise for cache-ops.\n-\t(get_v850_prefop_name): Likewise for pref-ops.\n-\t(disassemble): Use the new accessor functions.\n-\n-2019-10-30  Delia Burduv   <delia.burduv@arm.com>\n-\n-\t* aarch64-opc.c (print_immediate_offset_address): Don't print the\n-\timmediate for the writeback form of ldraa/ldrab if it is 0.\n-\t* aarch64-tbl.h: Updated the documentation for ADDR_SIMM10.\n-\t* aarch64-opc-2.c: Regenerated.\n-\n-2019-10-30  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_shorthands): Delete.\n-\t(operand_type_init): Expand previous shorthands.\n-\t(set_bitfield_from_shorthand): Rename back to ...\n-\t(set_bitfield_from_cpu_flag_init): ... this.  Drop processing\n-\tof operand_type_init[].\n-\t(set_bitfield): Adjust call to the above function.\n-\t* i386-opc.tbl (Reg8, Reg16, Reg32, Reg64, FloatAcc, FloatReg,\n-\tRegXMM, RegYMM, RegZMM): Define.\n-\t* i386-reg.tbl: Expand prior shorthands.\n-\n-2019-10-30  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (output_i386_opcode): Change order of fields\n-\temitted to output.\n-\t* i386-opc.h (struct insn_template): Move operands field.\n-\tConvert extension_opcode field to unsigned short.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-10-30  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (process_i386_opcode_modifier): Report bogus uses\n-\tof W.\n-\t* i386-opc.h (W): Extend comment.\n-\t* i386-opc.tbl (mov, movabs, movq): Drop W and adjust opcodes of\n-\tgeneral purpose variants not allowing for byte operands.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-10-29  Nick Clifton  <nickc@redhat.com>\n-\n-\t* tic30-dis.c (print_branch): Correct size of operand array.\n-\n-2019-10-29  Nick Clifton  <nickc@redhat.com>\n-\n-\t* d30v-dis.c (print_insn): Check that operand index is valid\n-\tbefore attempting to access the operands array.\n-\n-2019-10-29  Nick Clifton  <nickc@redhat.com>\n-\n-\t* ia64-opc.c (locate_opcode_ent): Prevent a negative shift when\n-\tlocating the bit to be tested.\n-\n-2019-10-29  Nick Clifton  <nickc@redhat.com>\n-\n-\t* s12z-dis.c (opr_emit_disassembly): Check for illegal register\n-\tvalues.\n-\t(shift_size_table): Use a fixed size defined as S12Z_N_SIZES.\n-\t(print_insn_s12z):  Check for illegal size values.\n-\n-2019-10-28  Nick Clifton  <nickc@redhat.com>\n-\n-\t* csky-dis.c (csky_chars_to_number): Check for a negative\n-\tcount. Use an unsigned integer to construct the return value.\n-\n-2019-10-28  Nick Clifton  <nickc@redhat.com>\n-\n-\t* tic30-dis.c (OPERAND_BUFFER_LEN): Define.  Use as length of\n-\toperand buffer.  Set value to 15 not 13.\n-\t(get_register_operand): Use OPERAND_BUFFER_LEN.\n-\t(get_indirect_operand): Likewise.\n-\t(print_two_operand): Likewise.\n-\t(print_three_operand): Likewise.\n-\t(print_oar_insn): Likewise.\n-\n-2019-10-28  Nick Clifton  <nickc@redhat.com>\n-\n-\t* ns32k-dis.c (bit_extract): Add sanitiy check of parameters.\n-\t(bit_extract_simple): Likewise.\n-\t(bit_copy): Likewise.\n-\t(pirnt_insn_ns32k): Ensure that uninitialised elements in the\n-\tindex_offset array are not accessed.\n-\n-2019-10-28  Nick Clifton  <nickc@redhat.com>\n-\n-\t* xgate-dis.c (print_insn): Fix decoding of the XGATE_OP_DYA\n-\toperand.\n-\n-2019-10-25  Nick Clifton  <nickc@redhat.com>\n-\n-\t* rx-dis.c (print_insn_rx): Use parenthesis to ensure correct\n-\taccess to opcodes.op array element.\n-\n-2019-10-23  Nick Clifton  <nickc@redhat.com>\n-\n-\t* rx-dis.c (get_register_name): Fix spelling typo in error\n-\tmessage.\n-\t(get_condition_name, get_flag_name, get_double_register_name)\n-\t(get_double_register_high_name, get_double_register_low_name)\n-\t(get_double_control_register_name, get_double_condition_name)\n-\t(get_opsize_name, get_size_name): Likewise.\n-\n-2019-10-22  Nick Clifton  <nickc@redhat.com>\n-\n-\t* rx-dis.c (get_size_name): New function.  Provides safe\n-\taccess to name array.\n-\t(get_opsize_name): Likewise.\n-\t(print_insn_rx): Use the accessor functions.\n-\n-2019-10-16  Nick Clifton  <nickc@redhat.com>\n-\n-\t* rx-dis.c (get_register_name): New function.  Provides safe\n-\taccess to name array.\n-\t(get_condition_name, get_flag_name, get_double_register_name)\n-\t(get_double_register_high_name, get_double_register_low_name)\n-\t(get_double_control_register_name, get_double_condition_name):\n-\tLikewise.\n-\t(print_insn_rx): Use the accessor functions.\n-\n-2019-10-09  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 25041\n-\t* avr-dis.c (avr_operand): Fix construction of address for lds/sts\n-\tinstructions.\n-\n-2019-10-07  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* opcodes/i386-opc.tbl (movsd): Add Dword and IgnoreSize.\n-\t(cmpsd): Likewise. Move EsSeg to other operand.\n-\t* opcodes/i386-tbl.h: Re-generate.\n-\n-2019-09-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* m68k-dis.c: Include cpu-m68k.h\n-\n-2019-09-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* mips-dis.c: Include elfxx-mips.h.  Move \"elf-bfd.h\" and\n-\t\"elf/mips.h\" earlier.\n-\n-2018-09-20  Jan Beulich  <jbeulich@suse.com>\n-\n-\tPR gas/25012\n-\t* i386-opc.tbl (push, pop): Re-instate distinct Cpu64 templates\n-\twith SReg operand.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-09-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* arc-ext.c: Update throughout for bfd section macro changes.\n-\n-2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n-\n-\t* Makefile.in: Re-generate.\n-\t* configure: Re-generate.\n-\n-2019-09-17  Maxim Blinov  <maxim.blinov@embecosm.com>\n-\n-\t* riscv-opc.c (riscv_opcodes): Change subset field\n-\tto insn_class field for all instructions.\n-\t(riscv_insn_types): Likewise.\n-\n-2019-09-16  Phil Blundell  <pb@pbcl.net>\n-\n-\t* configure: Regenerated.\n-\n-2019-09-10  Miod Vallat  <miod@online.fr>\n-\n-\tPR 24982\n-\t* m68k-opc.c: Correct aliases for tdivsl and tdivul.\n-\n-2019-09-09  Phil Blundell  <pb@pbcl.net>\n-\n-\tbinutils 2.33 branch created.\n-\n-2019-09-03  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24961\n-\t* tic30-dis.c (get_indirect_operand): Check for bufcnt being\n-\tgreater than zero before indexing via (bufcnt -1).\n-\n-2019-09-03  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24958\n-\t* mmix-dis.c (MAX_REG_NAME_LEN): Define.\n-\t(MAX_SPEC_REG_NAME_LEN): Define.\n-\t(struct mmix_dis_info): Use defined constants for array lengths.\n-\t(get_reg_name): New function.\n-\t(get_sprec_reg_name): New function.\n-\t(print_insn_mmix): Use new functions.\n-\n-2019-08-27  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n-\n-\t* arm-dis.c (mve_opcodes): Add entry for MVE_VMOV_VEC_TO_VEC.\n-\t(is_mve_undefined): Add case for MVE_VMOV_VEC_TO_VEC.\n-\t(print_insn_mve): Add condition to check Qm==Qn of VORR instruction.\n-\n-2019-08-22  Kyrylo Tkachov <kyrylo.tkachov@arm.com>\n-\n-\t* aarch64-opc.c (aarch64_sys_regs): Update encoding of tfsre0_el1,\n-\ttfsr_el1, tfsr_el2, tfsr_el3, tfsr_el12.\n-\t(aarch64_sys_reg_supported_p): Update checks for the above.\n-\n-2019-08-12  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n-\n-\t* arm-dis.c (struct mopcode32 mve_opcodes): Modify the mask for\n-\tcases MVE_SQRSHRL and MVE_UQRSHLL.\n-\t(print_insn_mve): Add case for specifier 'k' to check\n-\tspecific bit of the instruction.\n-\n-2019-08-07  Phillipe Antoine  <p.antoine@catenacyber.fr>\n-\n-\tPR 24854\n-\t* arc-dis.c (arc_insn_length): Return 0 rather than aborting when\n-\tencountering an unknown machine type.\n-\t(print_insn_arc): Handle arc_insn_length returning 0.  In error\n-\tcases return -1 rather than calling abort.\n-\n-2019-08-07  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (fld, fstp): Drop FloatMF from extended forms.\n-\t(fldcw, fnstcw, fstcw, fnstsw, fstsw): Replace FloatMF by\n-\tIgnoreSize.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-08-05  Barnaby Wilks  <barnaby.wilks@arm.com>\n-\n-\t* arm-dis.c: Only accept signed variants of VQ(R)DMLAH and VQ(R)DMLASH\n-\tinstructions.\n-\n-2019-07-30  Mel Chen <mel.chen@sifive.com>\n-\n-\t* riscv-opc.c (riscv_opcodes): Set frsr, fssr, frcsr, fscsr, frrm,\n-\tfsrm, fsrmi, frflags, fsflags, fsflagsi to alias instructions.\n-\n-\t* riscv-opc.c (riscv_opcodes): Adjust order of frsr, frcsr, fssr,\n-\tfscsr.\n-\n-2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>\n-\n-\t* arc-dis.c (skip_this_opcode): Check also for 0x07 major opcodes,\n-\tand MPY class instructions.\n-\t(parse_option): Add nps400 option.\n-\t(print_arc_disassembler_options): Add nps400 info.\n-\n-2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>\n-\n-\t* arc-ext-tbl.h (bspeek): Remove it, added to main table.\n-\t(bspop): Likewise.\n-\t(modapp): Likewise.\n-\t* arc-opc.c (RAD_CHK): Add.\n-\t* arc-tbl.h: Regenerate.\n-\n-2019-07-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n-\n-\t* aarch64-opc.c (aarch64_sys_regs): Add gmid_el1 entry.\n-\t(aarch64_sys_reg_supported_p): Handle gmid_el1 encoding.\n-\n-2019-07-22  Barnaby Wilks  <barnaby.wilks@arm.com>\n-\n-\t* arm-dis.c (is_mve_unpredictable): Stop marking some MVE\n-\tinstructions as UNPREDICTABLE.\n-\n-2019-07-19  Jose E. Marchesi  <jose.marchesi@oracle.com>\n-\n-\t* bpf-desc.c: Regenerated.\n-\n-2019-07-17  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (static_assert): Define.\n-\t(main): Use it.\n-\t* i386-opc.h (Opcode_Modifier_Max): Rename to ...\n-\t(Opcode_Modifier_Num): ... this.\n-\t(Mem): Delete.\n-\n-2019-07-16  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_types): Move RegMem ...\n-\t(opcode_modifiers): ... here.\n-\t* i386-opc.h (RegMem): Move to opcode modifer enum.\n-\t(union i386_operand_type): Move regmem field ...\n-\t(struct i386_opcode_modifier): ... here.\n-\t* i386-opc.tbl (RegMem): Define.\n-\t(mov, movq): Move RegMem on segment, control, debug, and test\n-\tregister flavors.\n-\t(pextrb): Move RegMem on register only flavors. Add IgnoreSize\n-\tto non-SSE2AVX flavor.\n-\t(extractps, pextrw, vcvtps2ph, vextractps, vpextrb, vpextrw):\n-\tMove RegMem on register only flavors. Drop IgnoreSize from\n-\tlegacy encoding flavors.\n-\t(movss, movsd, vmovss, vmovsd): Drop RegMem from register only\n-\tflavors.\n-\t(vpinsrb, vpinsrw): Drop IgnoreSize where still present on\n-\tregister only flavors.\n-\t(vmovd): Move RegMem and drop IgnoreSize on register only\n-\tflavor. Change opcode and operand order to store form.\n-\t* opcodes/i386-init.h, i386-tbl.h: Re-generate.\n-\n-2019-07-16  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_init, operand_types): Replace SReg\n-\tentries.\n-\t* i386-opc.h (SReg2, SReg3): Replace by ...\n-\t(SReg): ... this.\n-\t(union i386_operand_type): Replace sreg fields.\n-\t* i386-opc.tbl (mov, ): Use SReg.\n-\t(push, pop): Likewies. Drop i386 and x86-64 specific segment\n-\tregister flavors.\n-\t* i386-reg.tbl (cs, ds, es, fs, gs, ss, flat): Use SReg.\n-\t* opcodes/i386-init.h, i386-tbl.h: Re-generate.\n-\n-2019-07-15  Jose E. Marchesi  <jose.marchesi@oracle.com>\n-\n-\t* bpf-desc.c: Regenerate.\n-\t* bpf-opc.c: Likewise.\n-\t* bpf-opc.h: Likewise.\n-\n-2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>\n-\n-\t* bpf-desc.c: Regenerate.\n-\t* bpf-opc.c: Likewise.\n-\n-2019-07-10  Hans-Peter Nilsson  <hp@bitrange.com>\n-\n-\t* arm-dis.c (print_insn_coprocessor): Rename index to\n-\tindex_operand.\n-\n-2019-07-05  Kito Cheng <kito.cheng@sifive.com>\n-\n-\t* riscv-opc.c (riscv_insn_types): Add r4 type.\n-\n-\t* riscv-opc.c (riscv_insn_types): Add b and j type.\n-\n-\t* opcodes/riscv-opc.c (riscv_insn_types): Remove incorrect\n-\tformat for sb type and correct s type.\n-\n-2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>\n-\n-\t* aarch64-tbl.h (aarch64_opcode): Set C_SCAN_MOVPRFX for the\n-\tSVE FMOV alias of FCPY.\n-\n-2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>\n-\n-\t* aarch64-tbl.h (aarch64_opcode_table): Add C_MAX_ELEM flags\n-\tto SVE fcvtzs, fcvtzu, scvtf and ucvtf entries.\n-\n-2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>\n-\n-\t* aarch64-opc.c (verify_constraints): Skip GPRs when scanning the\n-\tregisters in an instruction prefixed by MOVPRFX.\n-\n-2019-07-01  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Use new\n-\tsve_size_13 icode to account for variant behaviour of\n-\tpmull{t,b}.\n-\t* aarch64-dis-2.c: Regenerate.\n-\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Use new\n-\tsve_size_13 icode to account for variant behaviour of\n-\tpmull{t,b}.\n-\t* aarch64-tbl.h (OP_SVE_VVV_HD_BS): Add new qualifier.\n-\t(OP_SVE_VVV_Q_D): Add new qualifier.\n-\t(OP_SVE_VVV_QHD_DBS): Remove now unused qualifier.\n-\t(struct aarch64_opcode): Split pmull{t,b} into those requiring\n-\tAES and those not.\n-\n-2019-07-01  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* opcodes/i386-gen.c (operand_type_init): Remove\n-\tOPERAND_TYPE_VEC_IMM4 entry.\n-\t(operand_types): Remove Vec_Imm4.\n-\t* opcodes/i386-opc.h (Vec_Imm4): Delete.\n-\t(union i386_operand_type): Remove vec_imm4.\n-\t* i386-opc.tbl (vpermil2pd, vpermil2ps): Remove Vec_Imm4.\n-\t* opcodes/i386-init.h, i386-tbl.h: Re-generate.\n-\n-2019-07-01  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (lfence, mfence, sfence, monitor, mwait, vmcall,\n-\tvmlaunch, vmresume, vmxoff, vmfunc, xgetbv, xsetbv, swapgs,\n-\trdtscp, clgi, invlpga, skinit, stgi, vmload, vmmcall, vmrun,\n-\tvmsave, montmul, xsha1, xsha256, xstorerng, xcryptecb,\n-\txcryptcbc, xcryptctr, xcryptcfb, xcryptofb, xstore, clac, stac,\n-\tmonitorx, mwaitx): Drop ImmExt from operand-less forms.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-07-01  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (and, or): Add Optimize to forms allowing two\n-\tregister operands.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-07-01  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (C): New.\n-\t(paddb, paddw, paddd, paddq, paddsb, paddsw, paddusb, paddusw,\n-\tpand, pcmpeqb, pcmpeqw, pcmpeqd, pmaddwd, pmulhw, pmullw,\n-\tpor, pxor, andps, cmpeqps, cmpeqss, cmpneqps, cmpneqss,\n-\tcmpordps, cmpordss, cmpunordps, cmpunordss, orps, pavgb, pavgw,\n-\tpmaxsw, pmaxub, pminsw, pminub, pmulhuw, xorps, andpd, cmpeqpd,\n-\tcmpeqsd, cmpneqpd, cmpneqsd, cmpordpd, cmpordsd, cmpunordpd,\n-\tcmpunordsd, orpd, xorpd, pmuludq, vandpd, vandps, vcmpeq_ospd,\n-\tvcmpeq_osps, vcmpeq_ossd, vcmpeq_osss, vcmpeqpd, vcmpeqps,\n-\tvcmpeqsd, vcmpeqss, vcmpeq_uqpd, vcmpeq_uqps, vcmpeq_uqsd,\n-\tvcmpeq_uqss, vcmpeq_uspd, vcmpeq_usps, vcmpeq_ussd,\n-\tvcmpeq_usss, vcmpfalse_ospd, vcmpfalse_osps, vcmpfalse_ossd,\n-\tvcmpfalse_osss, vcmpfalsepd, vcmpfalseps, vcmpfalsesd,\n-\tvcmpfalsess, vcmpneq_oqpd, vcmpneq_oqps, vcmpneq_oqsd,\n-\tvcmpneq_oqss, vcmpneq_ospd, vcmpneq_osps, vcmpneq_ossd,\n-\tvcmpneq_osss, vcmpneqpd, vcmpneqps, vcmpneqsd, vcmpneqss,\n-\tvcmpneq_uspd, vcmpneq_usps, vcmpneq_ussd, vcmpneq_usss,\n-\tvcmpordpd, vcmpordps, vcmpordsd, vcmpord_spd, vcmpord_sps,\n-\tvcmpordss, vcmpord_ssd, vcmpord_sss, vcmptruepd, vcmptrueps,\n-\tvcmptruesd, vcmptruess, vcmptrue_uspd, vcmptrue_usps,\n-\tvcmptrue_ussd, vcmptrue_usss, vcmpunordpd, vcmpunordps,\n-\tvcmpunordsd, vcmpunord_spd, vcmpunord_sps, vcmpunordss,\n-\tvcmpunord_ssd, vcmpunord_sss, vorpd, vorps, vpaddsb, vpaddsw,\n-\tvpaddb, vpaddd, vpaddq, vpaddw, vpaddusb, vpaddusw, vpand,\n-\tvpavgb, vpavgw, vpcmpeqb, vpcmpeqd, vpcmpeqw, vpmaddwd,\n-\tvpmaxsw, vpmaxub, vpminsw, vpminub, vpmulhuw, vpmulhw, vpmullw,\n-\tvpmuludq, vpor, vpxor, vxorpd, vxorps): Add C to VEX-encoded\n-\tflavors.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-07-01  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (and, or): Add Optimize to forms allowing two\n-\tregister operands.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-07-01  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis-evex-prefix.h: Use PCLMUL for vpclmulqdq.\n-\t* i386-opc.tbl (vpclmullqlqdq, vpclmulhqlqdq, vpclmullqhqdq,\n-\tvpclmulhqhqdq): Add CpuVPCLMULQDQ flavors.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-07-01  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vextractps, vpextrw, vpinsrw): Remove\n-\tDisp8MemShift from register only templates.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-07-01  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (EXdScalarS, MOD_EVEX_0F10_PREFIX_1,\n-\tMOD_EVEX_0F10_PREFIX_3, MOD_EVEX_0F11_PREFIX_1,\n-\tMOD_EVEX_0F11_PREFIX_3, EVEX_W_0F10_P_1_M_0,\n-\tEVEX_W_0F10_P_1_M_1, EVEX_W_0F10_P_3_M_0, EVEX_W_0F10_P_3_M_1,\n-\tEVEX_W_0F11_P_1_M_0, EVEX_W_0F11_P_1_M_1, EVEX_W_0F11_P_3_M_0,\n-\tEVEX_W_0F11_P_3_M_1): Delete.\n-\t(EVEX_W_0F10_P_1, EVEX_W_0F10_P_3, EVEX_W_0F11_P_1,\n-\tEVEX_W_0F11_P_3): New.\n-\t* i386-dis-evex-mod.h: Remove MOD_EVEX_0F10_PREFIX_1,\n-\tMOD_EVEX_0F10_PREFIX_3, MOD_EVEX_0F11_PREFIX_1, and\n-\tMOD_EVEX_0F11_PREFIX_3 table entries.\n-\t* i386-dis-evex-prefix.h: Adjust PREFIX_EVEX_0F10 and\n-\tPREFIX_EVEX_0F11 table entries.\n-\t* i386-dis-evex-w.h: Replace EVEX_W_0F10_P_1_M_{0,1},\n-\tEVEX_W_0F10_P_3_M_{0,1}, EVEX_W_0F11_P_1_M_{0,1}, and\n-\tEVEX_W_0F11_P_3_M_{0,1} table entries.\n-\n-2019-07-01  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (EXdVex, EXdVexS, EXqVex, EXqVexS, XMVex):\n-\tDelete.\n-\n-2019-06-27  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/24719\n-\t* i386-dis-evex-len.h: Add EVEX_LEN_0F38C6_REG_1_PREFIX_2,\n-\tEVEX_LEN_0F38C6_REG_2_PREFIX_2, EVEX_LEN_0F38C6_REG_5_PREFIX_2,\n-\tEVEX_LEN_0F38C6_REG_6_PREFIX_2, EVEX_LEN_0F38C7_R_1_P_2_W_0,\n-\tEVEX_LEN_0F38C7_R_1_P_2_W_1, EVEX_LEN_0F38C7_R_2_P_2_W_0,\n-\tEVEX_LEN_0F38C7_R_2_P_2_W_1, EVEX_LEN_0F38C7_R_5_P_2_W_0,\n-\tEVEX_LEN_0F38C7_R_5_P_2_W_1, EVEX_LEN_0F38C7_R_6_P_2_W_0 and\n-\tEVEX_LEN_0F38C7_R_6_P_2_W_1.\n-\t* i386-dis-evex-prefix.h: Update PREFIX_EVEX_0F38C6_REG_1,\n-\tPREFIX_EVEX_0F38C6_REG_2, PREFIX_EVEX_0F38C6_REG_5 and\n-\tPREFIX_EVEX_0F38C6_REG_6 entries.\n-\t* i386-dis-evex-w.h: Update EVEX_W_0F38C7_R_1_P_2,\n-\tEVEX_W_0F38C7_R_2_P_2, EVEX_W_0F38C7_R_5_P_2 and\n-\tEVEX_W_0F38C7_R_6_P_2 entries.\n-\t* i386-dis.c: Add EVEX_LEN_0F38C6_REG_1_PREFIX_2,\n-\tEVEX_LEN_0F38C6_REG_2_PREFIX_2, EVEX_LEN_0F38C6_REG_5_PREFIX_2,\n-\tEVEX_LEN_0F38C6_REG_6_PREFIX_2, EVEX_LEN_0F38C7_R_1_P_2_W_0,\n-\tEVEX_LEN_0F38C7_R_1_P_2_W_1, EVEX_LEN_0F38C7_R_2_P_2_W_0,\n-\tEVEX_LEN_0F38C7_R_2_P_2_W_1, EVEX_LEN_0F38C7_R_5_P_2_W_0,\n-\tEVEX_LEN_0F38C7_R_5_P_2_W_1, EVEX_LEN_0F38C7_R_6_P_2_W_0 and\n-\tEVEX_LEN_0F38C7_R_6_P_2_W_1 enums.\n-\n-2019-06-27  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (VEX_LEN_0F2A_P_1, VEX_LEN_0F2A_P_3,\n-\tVEX_LEN_0F2C_P_1, VEX_LEN_0F2C_P_3, VEX_LEN_0F2D_P_1,\n-\tVEX_LEN_0F2D_P_3): Delete.\n-\t(vex_len_table): Move vcvtsi2ss, vcvtsi2sd, vcvttss2si,\n-\tvcvttsd2si, vcvtss2si, and vcvtsd2si leaf entries ...\n-\t(prefix_table): ... here.\n-\n-2019-06-27  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (Iq): Delete.\n-\t(Id): New.\n-\t(reg_table): Use it for lwpins, lwpval, and bextr. Use Edq for\n-\tTBM insns.\n-\t(vex_len_table): Use Edq for vcvtsi2ss, vcvtsi2sd. Use Gdq for\n-\tvcvttss2si, vcvttsd2si, vcvtss2si, and vcvtsd2si.\n-\t(OP_E_memory): Also honor needindex when deciding whether an\n-\taddress size prefix needs printing.\n-\t(OP_I): Remove handling of q_mode. Add handling of d_mode.\n-\n-2019-06-26  Jim Wilson  <jimw@sifive.com>\n-\n-\tPR binutils/24739\n-\t* riscv-dis.c (riscv_disasemble_insn): Set info->endian_code.\n-\tSet info->display_endian to info->endian_code.\n-\n-2019-06-25  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_init): Correct OPERAND_TYPE_DEBUG\n-\tentry. Drop OPERAND_TYPE_ACC entry. Add OPERAND_TYPE_ACC8 and\n-\tOPERAND_TYPE_ACC16 entries. Adjust OPERAND_TYPE_ACC32 and\n-\tOPERAND_TYPE_ACC64 entries.\n-\t* i386-init.h: Re-generate.\n-\n-2019-06-25  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (Edqa, dqa_mode, EVEX_W_0F2A_P_1, EVEX_W_0F7B_P_1):\n-\tDelete.\n-\t(intel_operand_size, OP_E_register, OP_E_memory): Drop handling\n-\tof dqa_mode.\n-\t* i386-dis-evex-prefix.h: Move vcvtsi2ss and vcvtusi2ss leaf\n-\tentries here.\n-\t* i386-dis-evex-w.h: Drop EVEX_W_0F2A_P_1 and EVEX_W_0F7B_P_1\n-\tentries. Use Edq for vcvtsi2sd and vcvtusi2sd.\n-\n-2019-06-25  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (OP_I64): Forword more cases to OP_I(). Drop local\n-\tvariables.\n-\n-2019-06-25  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (prefix_table): Use Edq for cvtsi2ss and cvtsi2sd.\n-\tUse Gdq for cvttss2si, cvttsd2si, cvtss2si, and cvtsd2si, and\n-\tmovnti.\n-\t* i386-opc.tbl (movnti): Add IgnoreSize.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-06-25  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (and): Mark Imm8S form for optimization.\n-\t* i386-tbl.h: Re-generate.\n-\n-2019-06-21  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-dis-evex.h: Break into ...\n-\t* i386-dis-evex-len.h: New file.\n-\t* i386-dis-evex-mod.h: Likewise.\n-\t* i386-dis-evex-prefix.h: Likewise.\n-\t* i386-dis-evex-reg.h: Likewise.\n-\t* i386-dis-evex-w.h: Likewise.\n-\t* i386-dis.c: Include i386-dis-evex-reg.h, i386-dis-evex-prefix.h,\n-\ti386-dis-evex.h, i386-dis-evex-len.h, i386-dis-evex-w.h and\n-\ti386-dis-evex-mod.h.\n-\n-2019-06-19  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/24700\n-\t* i386-dis-evex.h (evex_table): Update EVEX_W_0F3819_P_2,\n-\tEVEX_W_0F381A_P_2, EVEX_W_0F381B_P_2, EVEX_W_0F385A_P_2 and\n-\tEVEX_W_0F385B_P_2.\n-\t(evex_len_table): Add EVEX_LEN_0F3819_P_2_W_0,\n-\tEVEX_LEN_0F3819_P_2_W_1, EVEX_LEN_0F381A_P_2_W_0,\n-\tEVEX_LEN_0F381A_P_2_W_1, EVEX_LEN_0F381B_P_2_W_0,\n-\tEVEX_LEN_0F381B_P_2_W_1, EVEX_LEN_0F385A_P_2_W_0,\n-\tEVEX_LEN_0F385A_P_2_W_1, EVEX_LEN_0F385B_P_2_W_0 and\n-\tEVEX_LEN_0F385B_P_2_W_1.\n-\t* i386-dis.c (EVEX_LEN_0F3819_P_2_W_0): New enum.\n-\t(EVEX_LEN_0F3819_P_2_W_1): Likewise.\n-\t(EVEX_LEN_0F381A_P_2_W_0): Likewise.\n-\t(EVEX_LEN_0F381A_P_2_W_1): Likewise.\n-\t(EVEX_LEN_0F381B_P_2_W_0): Likewise.\n-\t(EVEX_LEN_0F381B_P_2_W_1): Likewise.\n-\t(EVEX_LEN_0F385A_P_2_W_0): Likewise.\n-\t(EVEX_LEN_0F385A_P_2_W_1): Likewise.\n-\t(EVEX_LEN_0F385B_P_2_W_0): Likewise.\n-\t(EVEX_LEN_0F385B_P_2_W_1): Likewise.\n-\n-2019-06-17  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/24691\n-\t* i386-dis-evex.h (evex_table): Update EVEX_W_0F3A23_P_2,\n-\tEVEX_W_0F3A38_P_2, EVEX_W_0F3A39_P_2, EVEX_W_0F3A3A_P_2,\n-\tEVEX_W_0F3A3B_P_2 and EVEX_W_0F3A43_P_2.\n-\t(evex_len_table): Add EVEX_LEN_0F3A23_P_2_W_0,\n-\tEVEX_LEN_0F3A23_P_2_W_1, EVEX_LEN_0F3A38_P_2_W_0,\n-\tEVEX_LEN_0F3A38_P_2_W_1, EVEX_LEN_0F3A39_P_2_W_0,\n-\tEVEX_LEN_0F3A39_P_2_W_1, EVEX_LEN_0F3A3A_P_2_W_0,\n-\tEVEX_LEN_0F3A3A_P_2_W_1, EVEX_LEN_0F3A3B_P_2_W_0,\n-\tEVEX_LEN_0F3A3B_P_2_W_1, EVEX_LEN_0F3A43_P_2_W_0 and\n-\tEVEX_LEN_0F3A43_P_2_W_1.\n-\t* i386-dis.c (EVEX_LEN_0F3A23_P_2_W_0): New enum.\n-\t(EVEX_LEN_0F3A23_P_2_W_1): Likewise.\n-\t(EVEX_LEN_0F3A38_P_2_W_0): Likewise.\n-\t(EVEX_LEN_0F3A38_P_2_W_1): Likewise.\n-\t(EVEX_LEN_0F3A39_P_2_W_0): Likewise.\n-\t(EVEX_LEN_0F3A39_P_2_W_1): Likewise.\n-\t(EVEX_LEN_0F3A3A_P_2_W_0): Likewise.\n-\t(EVEX_LEN_0F3A3A_P_2_W_1): Likewise.\n-\t(EVEX_LEN_0F3A3B_P_2_W_0): Likewise.\n-\t(EVEX_LEN_0F3A3B_P_2_W_1): Likewise.\n-\t(EVEX_LEN_0F3A43_P_2_W_0): Likewise.\n-\t(EVEX_LEN_0F3A43_P_2_W_1): Likewise.\n-\n-2019-06-14  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/fr.po; Updated French translation.\n-\n-2019-06-13  Stafford Horne  <shorne@gmail.com>\n-\n-\t* or1k-asm.c: Regenerated.\n-\t* or1k-desc.c: Regenerated.\n-\t* or1k-desc.h: Regenerated.\n-\t* or1k-dis.c: Regenerated.\n-\t* or1k-ibld.c: Regenerated.\n-\t* or1k-opc.c: Regenerated.\n-\t* or1k-opc.h: Regenerated.\n-\t* or1k-opinst.c: Regenerated.\n-\n-2019-06-12  Peter Bergner  <bergner@linux.ibm.com>\n-\n-\t* ppc-opc.c (powerpc_opcodes) <ldmx>: Delete mnemonic.\n-\n-2019-06-05  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/24633\n-\t* i386-dis-evex.h (evex_table): Update EVEX_W_0F3A18_P_2,\n-\tEVEX_W_0F3A19_P_2, EVEX_W_0F3A1A_P_2 and EVEX_W_0F3A1B_P_2.\n-\t(evex_len_table): EVEX_LEN_0F3A18_P_2_W_0,\n-\tEVEX_LEN_0F3A18_P_2_W_1, EVEX_LEN_0F3A19_P_2_W_0,\n-\tEVEX_LEN_0F3A19_P_2_W_1, EVEX_LEN_0F3A1A_P_2_W_0,\n-\tEVEX_LEN_0F3A1A_P_2_W_1, EVEX_LEN_0F3A1B_P_2_W_0,\n-\tEVEX_LEN_0F3A1B_P_2_W_1.\n-\t* i386-dis.c (EVEX_LEN_0F3A18_P_2_W_0): New enum.\n-\t(EVEX_LEN_0F3A18_P_2_W_1): Likewise.\n-\t(EVEX_LEN_0F3A19_P_2_W_0): Likewise.\n-\t(EVEX_LEN_0F3A19_P_2_W_1): Likewise.\n-\t(EVEX_LEN_0F3A1A_P_2_W_0): Likewise.\n-\t(EVEX_LEN_0F3A1A_P_2_W_1): Likewise.\n-\t(EVEX_LEN_0F3A1B_P_2_W_0): Likewise.\n-\t(EVEX_LEN_0F3A1B_P_2_W_1): Likewise.\n-\n-2019-06-04  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/24626\n-\t* i386-dis.c (print_insn): Check for unused VEX.vvvv and\n-\tEVEX.vvvv when disassembling VEX and EVEX instructions.\n-\t(OP_VEX): Set vex.register_specifier to 0 after readding\n-\tvex.register_specifier.\n-\t(OP_Vex_2src_1): Likewise.\n-\t(OP_Vex_2src_2): Likewise.\n-\t(OP_LWP_E): Likewise.\n-\t(OP_EX_Vex): Don't check vex.register_specifier.\n-\t(OP_XMM_Vex): Likewise.\n-\n-2019-06-04  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n-\t    Lili Cui  <lili.cui@intel.com>\n-\n-\t* i386-dis.c (enum): Add PREFIX_EVEX_0F3868, EVEX_W_0F3868_P_3.\n-\t* i386-dis-evex.h (evex_table): Add AVX512_VP2INTERSECT\n-\tinstructions.\n-\t* i386-gen.c (cpu_flag_init): Add CPU_AVX512_VP2INTERSECT_FLAGS,\n-\tCPU_ANY_AVX512_VP2INTERSECT_FLAGS.\n-\t(cpu_flags): Add CpuAVX512_VP2INTERSECT.\n-\t* i386-opc.h (enum): Add CpuAVX512_VP2INTERSECT.\n-\t(i386_cpu_flags): Add cpuavx512_vp2intersect.\n-\t* i386-opc.tbl: Add AVX512_VP2INTERSECT insns.\n-\t* i386-init.h: Regenerated.\n-\t* i386-tbl.h: Likewise.\n-\n-2019-06-04  Xuepeng Guo  <xuepeng.guo@intel.com>\n-\t    Lili Cui  <lili.cui@intel.com>\n-\n-\t* doc/c-i386.texi: Document enqcmd.\n-\t* testsuite/gas/i386/enqcmd-intel.d: New file.\n-\t* testsuite/gas/i386/enqcmd-inval.l: Likewise.\n-\t* testsuite/gas/i386/enqcmd-inval.s: Likewise.\n-\t* testsuite/gas/i386/enqcmd.d: Likewise.\n-\t* testsuite/gas/i386/enqcmd.s: Likewise.\n-\t* testsuite/gas/i386/x86-64-enqcmd-intel.d: Likewise.\n-\t* testsuite/gas/i386/x86-64-enqcmd-inval.l: Likewise.\n-\t* testsuite/gas/i386/x86-64-enqcmd-inval.s: Likewise.\n-\t* testsuite/gas/i386/x86-64-enqcmd.d: Likewise.\n-\t* testsuite/gas/i386/x86-64-enqcmd.s: Likewise.\n-\t* testsuite/gas/i386/i386.exp: Run enqcmd-intel, enqcmd-inval,\n-\tenqcmd, x86-64-enqcmd-intel, x86-64-enqcmd-inval,\n-\tand x86-64-enqcmd.\n-\n-2019-06-04  Alan Hayward  <alan.hayward@arm.com>\n-\n-\t* arm-dis.c (is_mve_unpredictable): Remove spurious paranthesis.\n-\n-2019-06-03  Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-dis.c (prefix_opcd_indices): Correct size.\n-\n-2019-05-28  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/24625\n-\t* i386-opc.tbl: Add CheckRegSize to AVX512_BF16 instructions with\n-\tDisp8ShiftVL.\n-\t* i386-tbl.h: Regenerated.\n-\n-2019-05-24  Alan Modra  <amodra@gmail.com>\n-\n-\t* po/POTFILES.in: Regenerate.\n-\n-2019-05-24  Peter Bergner  <bergner@linux.ibm.com>\n-\t    Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-opc.c (insert_d34, extract_d34, insert_nsi34, extract_nsi34),\n-\t(insert_pcrel, extract_pcrel, extract_pcrel0): New functions.\n-\t(extract_esync, extract_raq, extract_tbr, extract_sxl): Comment.\n-\t(powerpc_operands <D34, SI34, NSI34, PRA0, PRAQ, PCREL, PCREL0,\n-\tXTOP>): Define and add entries.\n-\t(P8LS, PMLS, P_D_MASK, P_DRAPCREL_MASK): Define.\n-\t(prefix_opcodes): Add pli, paddi, pla, psubi, plwz, plbz, pstw,\n-\tpstb, plhz, plha, psth, plfs, plfd, pstfs, pstfd, plq, plxsd,\n-\tplxssp, pld, plwa, pstxsd, pstxssp, pstxv, pstd, and pstq.\n-\n-2019-05-24  Peter Bergner  <bergner@linux.ibm.com>\n-\t    Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-dis.c (ppc_opts): Add \"future\" entry.\n-\t(PREFIX_OPCD_SEGS): Define.\n-\t(prefix_opcd_indices): New array.\n-\t(disassemble_init_powerpc): Initialize prefix_opcd_indices.\n-\t(lookup_prefix): New function.\n-\t(print_insn_powerpc): Handle 64-bit prefix instructions.\n-\t* ppc-opc.c (PREFIX_OP, PREFIX_FORM, SUFFIX_MASK, PREFIX_MASK),\n-\t(PMRR, POWERXX): Define.\n-\t(prefix_opcodes): New instruction table.\n-\t(prefix_num_opcodes): New constant.\n-\n-2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>\n-\n-\t* configure.ac (SHARED_DEPENDENCIES): Add case for bfd_bpf_arch.\n-\t* configure: Regenerated.\n-\t* Makefile.am: Add rules for the files generated from cpu/bpf.cpu\n-\tand cpu/bpf.opc.\n-\t(HFILES): Add bpf-desc.h and bpf-opc.h.\n-\t(TARGET_LIBOPCODES_CFILES): Add bpf-asm.c, bpf-desc.c, bpf-dis.c,\n-\tbpf-ibld.c and bpf-opc.c.\n-\t(BPF_DEPS): Define.\n-\t* Makefile.in: Regenerated.\n-\t* disassemble.c (ARCH_bpf): Define.\n-\t(disassembler): Add case for bfd_arch_bpf.\n-\t(disassemble_init_for_target): Likewise.\n-\t(enum epbf_isa_attr): Define.\n-\t* disassemble.h: extern print_insn_bpf.\n-\t* bpf-asm.c: Generated.\n-\t* bpf-opc.h: Likewise.\n-\t* bpf-opc.c: Likewise.\n-\t* bpf-ibld.c: Likewise.\n-\t* bpf-dis.c: Likewise.\n-\t* bpf-desc.h: Likewise.\n-\t* bpf-desc.c: Likewise.\n-\n-2019-05-21  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (coprocessor_opcodes): New instructions for VMRS\n-\tand VMSR with the new operands.\n-\n-2019-05-21  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): New enum\n-\tfor csinc, csinv, csneg, csel, cset, csetm, cinv, cinv\n-\tand cneg.\n-\t(mve_opcodes): New instructions as above.\n-\t(is_mve_encoding_conflict): Add cases for csinc, csinv,\n-\tcsneg and csel.\n-\t(print_insn_mve): Accept new %<bitfield>c and %<bitfield>C.\n-\n-2019-05-21  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (emun mve_instructions): Updated for new instructions.\n-\t(mve_opcodes): New instructions for asrl, lsll, lsrl, sqrshrl,\n-\tsqrshr, sqshl, sqshll, srshr, srshrl, uqrshll, uqrshl, uqshll,\n-\tuqshl, urshrl and urshr.\n-\t(is_mve_okay_in_it): Add new instructions to TRUE list.\n-\t(is_mve_unpredictable): Add cases for UNPRED_R13 and UNPRED_R15.\n-\t(print_insn_mve): Updated to accept new %j,\n-\t%<bitfield>m and %<bitfield>n patterns.\n-\n-2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n-\n-\t* mips-opc.c (mips_builtin_opcodes): Change source register\n-\tconstraint for DAUI.\n-\n-2019-05-20  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/fr.po: Updated French translation.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n-\t(enum mve_instructions): Likewise.\n-\t(enum mve_undefined): Add new reasons.\n-\t(is_mve_encoding_conflict): Handle new instructions.\n-\t(is_mve_undefined): Likewise.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_undefined): Likewise.\n-\t(print_mve_size): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n-\t(enum mve_instructions): Likewise.\n-\t(is_mve_encoding_conflict): Handle new instructions.\n-\t(is_mve_undefined): Likewise.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_size): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n-\t(enum mve_instructions): Likewise.\n-\t(is_mve_encoding_conflict): Likewise.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_size): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n-\t(enum mve_instructions): Likewise.\n-\t(is_mve_encoding_conflict): Handle new instructions.\n-\t(is_mve_undefined): Likewise.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_size): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n-\t(enum mve_instructions): Likewise.\n-\t(is_mve_encoding_conflict): Handle new instructions.\n-\t(is_mve_undefined): Likewise.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_size): Likewise.\n-\t(print_insn_mve): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n-\t(print_insn_thumb32): Handle new instructions.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): Add new instructions.\n-\t(enum mve_undefined): Add new reasons.\n-\t(is_mve_encoding_conflict): Handle new instructions.\n-\t(is_mve_undefined): Likewise.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_undefined): Likewise.\n-\t(print_mve_size): Likewise.\n-\t(print_mve_shift_n): Likewise.\n-\t(print_insn_mve): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): Add new instructions.\n-\t(is_mve_encoding_conflict): Handle new instructions.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_rotate): Likewise.\n-\t(print_mve_size): Likewise.\n-\t(print_insn_mve): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): Add new instructions.\n-\t(is_mve_encoding_conflict): Handle new instructions.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_size): Likewise.\n-\t(print_insn_mve): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): Add new instructions.\n-\t(enum mve_undefined): Add new reasons.\n-\t(is_mve_encoding_conflict): Handle new instructions.\n-\t(is_mve_undefined): Likewise.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_undefined): Likewise.\n-\t(print_mve_size): Likewise.\n-\t(print_insn_mve): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): Add new instructions.\n-\t(is_mve_encoding_conflict): Handle new instructions.\n-\t(is_mve_undefined): Likewise.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_size): Likewise.\n-\t(print_insn_mve): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): Add new instructions.\n-\t(enum mve_unpredictable): Add new reasons.\n-\t(enum mve_undefined): Likewise.\n-\t(is_mve_okay_in_it): Handle new isntructions.\n-\t(is_mve_encoding_conflict): Likewise.\n-\t(is_mve_undefined): Likewise.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_vmov_index): Likewise.\n-\t(print_simd_imm8): Likewise.\n-\t(print_mve_undefined): Likewise.\n-\t(print_mve_unpredictable): Likewise.\n-\t(print_mve_size): Likewise.\n-\t(print_insn_mve): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): Add new instructions.\n-\t(enum mve_unpredictable): Add new reasons.\n-\t(enum mve_undefined): Likewise.\n-\t(is_mve_encoding_conflict): Handle new instructions.\n-\t(is_mve_undefined): Likewise.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_undefined): Likewise.\n-\t(print_mve_unpredictable): Likewise.\n-\t(print_mve_rounding_mode): Likewise.\n-\t(print_mve_vcvt_size): Likewise.\n-\t(print_mve_size): Likewise.\n-\t(print_insn_mve): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): Add new instructions.\n-\t(enum mve_unpredictable): Add new reasons.\n-\t(enum mve_undefined): Likewise.\n-\t(is_mve_undefined): Handle new instructions.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_undefined): Likewise.\n-\t(print_mve_unpredictable): Likewise.\n-\t(print_mve_size): Likewise.\n-\t(print_insn_mve): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): Add new instructions.\n-\t(enum mve_undefined): Add new reasons.\n-\t(insns): Add new instructions.\n-\t(is_mve_encoding_conflict):\n-\t(print_mve_vld_str_addr): New print function.\n-\t(is_mve_undefined): Handle new instructions.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_undefined): Likewise.\n-\t(print_mve_size): Likewise.\n-\t(print_insn_coprocessor_1): Handle MVE VLDR, VSTR instructions.\n-\t(print_insn_mve):  Handle new operands.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): Add new instructions.\n-\t(enum mve_unpredictable): Add new reasons.\n-\t(is_mve_encoding_conflict): Handle new instructions.\n-\t(is_mve_unpredictable): Likewise.\n-\t(mve_opcodes): Add new instructions.\n-\t(print_mve_unpredictable): Handle new reasons.\n-\t(print_mve_register_blocks): New print function.\n-\t(print_mve_size): Handle new instructions.\n-\t(print_insn_mve): Likewise.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): Add new instructions.\n-\t(enum mve_unpredictable): Add new reasons.\n-\t(enum mve_undefined): Likewise.\n-\t(is_mve_encoding_conflict): Handle new instructions.\n-\t(is_mve_undefined): Likewise.\n-\t(is_mve_unpredictable): Likewise.\n-\t(coprocessor_opcodes): Move NEON VDUP from here...\n-\t(neon_opcodes): ... to here.\n-\t(mve_opcodes): Add new instructions.\n-\t(print_mve_undefined):  Handle new reasons.\n-\t(print_mve_unpredictable): Likewise.\n-\t(print_mve_size): Handle new instructions.\n-\t(print_insn_neon): Handle vdup.\n-\t(print_insn_mve): Handle new operands.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): Add new instructions.\n-\t(enum mve_unpredictable): Add new values.\n-\t(mve_opcodes): Add new instructions.\n-\t(vec_condnames): New array with vector conditions.\n-\t(mve_predicatenames): New array with predicate suffixes.\n-\t(mve_vec_sizename): New array with vector sizes.\n-\t(enum vpt_pred_state): New enum with vector predication states.\n-\t(struct vpt_block): New struct type for vpt blocks.\n-\t(vpt_block_state): Global struct to keep track of state.\n-\t(mve_extract_pred_mask): New helper function.\n-\t(num_instructions_vpt_block): Likewise.\n-\t(mark_outside_vpt_block): Likewise.\n-\t(mark_inside_vpt_block): Likewise.\n-\t(invert_next_predicate_state): Likewise.\n-\t(update_next_predicate_state): Likewise.\n-\t(update_vpt_block_state): Likewise.\n-\t(is_vpt_instruction): Likewise.\n-\t(is_mve_encoding_conflict): Add entries for new instructions.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_unpredictable): Handle new cases.\n-\t(print_instruction_predicate): Likewise.\n-\t(print_mve_size): New function.\n-\t(print_vec_condition): New function.\n-\t(print_insn_mve): Handle vpt blocks and new print operands.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\n-\t* arm-dis.c (print_insn_coprocessor_1): Disable the use of coprocessors\n-\t8, 14 and 15 for Armv8.1-M Mainline.\n-\n-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\t    Michael Collison <michael.collison@arm.com>\n-\n-\t* arm-dis.c (enum mve_instructions): New enum.\n-\t(enum mve_unpredictable): Likewise.\n-\t(enum mve_undefined): Likewise.\n-\t(struct mopcode32): New struct.\n-\t(is_mve_okay_in_it): New function.\n-\t(is_mve_architecture): Likewise.\n-\t(arm_decode_field): Likewise.\n-\t(arm_decode_field_multiple): Likewise.\n-\t(is_mve_encoding_conflict): Likewise.\n-\t(is_mve_undefined): Likewise.\n-\t(is_mve_unpredictable): Likewise.\n-\t(print_mve_undefined): Likewise.\n-\t(print_mve_unpredictable): Likewise.\n-\t(print_insn_coprocessor_1): Use arm_decode_field_multiple.\n-\t(print_insn_mve): New function.\n-\t(print_insn_thumb32): Handle MVE architecture.\n-\t(select_arm_features): Force thumb for Armv8.1-m Mainline.\n-\n-2019-05-10  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 24538\n-\t* ia64-opc.c (ia64_find_matching_opcode): Check for reaching the\n-\tend of the table prematurely.\n-\n-2019-05-10  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n-\n-        * mips-opc.c (mips_opcodes): Enable ADD, SUB, DADD and DSUB\n-\tmacros for R6.\n-\n-2019-05-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-dis.c (print_insn_powerpc) Don't skip optional operands\n-\twhen -Mraw is in effect.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-dis-2.c: Regenerate.\n-\t* aarch64-tbl.h (OP_SVE_BBU): New variant set.\n-\t(OP_SVE_BBB): New variant set.\n-\t(OP_SVE_DDDD): New variant set.\n-\t(OP_SVE_HHH): New variant set.\n-\t(OP_SVE_HHHU): New variant set.\n-\t(OP_SVE_SSS): New variant set.\n-\t(OP_SVE_SSSU): New variant set.\n-\t(OP_SVE_SHH): New variant set.\n-\t(OP_SVE_SBBU): New variant set.\n-\t(OP_SVE_DSS): New variant set.\n-\t(OP_SVE_DHHU): New variant set.\n-\t(OP_SVE_VMV_HSD_BHS): New variant set.\n-\t(OP_SVE_VVU_HSD_BHS): New variant set.\n-\t(OP_SVE_VVVU_SD_BH): New variant set.\n-\t(OP_SVE_VVVU_BHSD): New variant set.\n-\t(OP_SVE_VVV_QHD_DBS): New variant set.\n-\t(OP_SVE_VVV_HSD_BHS): New variant set.\n-\t(OP_SVE_VVV_HSD_BHS2): New variant set.\n-\t(OP_SVE_VVV_BHS_HSD): New variant set.\n-\t(OP_SVE_VV_BHS_HSD): New variant set.\n-\t(OP_SVE_VVV_SD): New variant set.\n-\t(OP_SVE_VVU_BHS_HSD): New variant set.\n-\t(OP_SVE_VZVV_SD): New variant set.\n-\t(OP_SVE_VZVV_BH): New variant set.\n-\t(OP_SVE_VZV_SD): New variant set.\n-\t(aarch64_opcode_table): Add sve2 instructions.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n-\tfor SVE_SHLIMM_UNPRED_22.\n-\t(aarch64_print_operand): Add printing for SVE_SHLIMM_UNPRED_22.\n-\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_SHLIMM_UNPRED_22\n-\toperand.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n-\tsve_size_tsz_bhs iclass encode.\n-\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n-\tsve_size_tsz_bhs iclass decode.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n-\tfor SVE_Zm4_11_INDEX.\n-\t(aarch64_print_operand): Add printing for SVE_Zm4_11_INDEX.\n-\t(fields): Handle SVE_i2h field.\n-\t* aarch64-opc.h (enum aarch64_field_kind): New SVE_i2h field.\n-\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_Zm4_11_INDEX operand.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n-\tsve_shift_tsz_bhsd iclass encode.\n-\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n-\tsve_shift_tsz_bhsd iclass decode.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\t* aarch64-asm.c (aarch64_ins_sve_shrimm):\n-\t(aarch64_encode_variant_using_iclass): Handle\n-\tsve_shift_tsz_hsd iclass encode.\n-\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n-\tsve_shift_tsz_hsd iclass decode.\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n-\tfor SVE_SHRIMM_UNPRED_22.\n-\t(aarch64_print_operand): Add printing for SVE_SHRIMM_UNPRED_22.\n-\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_SHRIMM_UNPRED_22\n-\toperand.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n-\tsve_size_013 iclass encode.\n-\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n-\tsve_size_013 iclass decode.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n-\tsve_size_bh iclass encode.\n-\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n-\tsve_size_bh iclass decode.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n-\tsve_size_sd2 iclass encode.\n-\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n-\tsve_size_sd2 iclass decode.\n-\t* aarch64-opc.c (fields): Handle SVE_sz2 field.\n-\t* aarch64-opc.h (enum aarch64_field_kind): New SVE_sz2 field.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n-\tfor SVE_ADDR_ZX.\n-\t(aarch64_print_operand): Add printing for SVE_ADDR_ZX.\n-\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_ADDR_ZX operand.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n-\tfor SVE_Zm3_11_INDEX.\n-\t(aarch64_print_operand): Add printing for SVE_Zm3_11_INDEX.\n-\t(fields): Handle SVE_i3l and SVE_i3h2 fields.\n-\t* aarch64-opc.h (enum aarch64_field_kind): New SVE_i3l and SVE_i3h2\n-\tfields.\n-\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_Zm3_11_INDEX operand.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n-\tsve_size_hsd2 iclass encode.\n-\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n-\tsve_size_hsd2 iclass decode.\n-\t* aarch64-opc.c (fields): Handle SVE_size field.\n-\t* aarch64-opc.h (enum aarch64_field_kind): New SVE_size field.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n-\tfor SVE_IMM_ROT3.\n-\t(aarch64_print_operand): Add printing for SVE_IMM_ROT3.\n-\t(fields): Handle SVE_rot3 field.\n-\t* aarch64-opc.h (enum aarch64_field_kind): New SVE_rot3 field.\n-\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_IMM_ROT3 operand.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-opc.c (verify_constraints): Check for movprfx for sve2\n-\tinstructions.\n-\n-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-tbl.h\n-\t(aarch64_feature_sve2, aarch64_feature_sve2aes,\n-\taarch64_feature_sve2sha3, aarch64_feature_sve2sm4,\n-\taarch64_feature_sve2bitperm): New feature sets.\n-\t(SVE2, SVE2_AES, SVE2_SHA3, SVE2_SM4, SVE2_BITPERM): New macros\n-\tfor feature set addresses.\n-\t(SVE2_INSN, SVE2_INSNC, SVE2AES_INSN, SVE2SHA3_INSN,\n-\tSVE2SM4_INSN, SVE2SM4_INSNC, SVE2BITPERM_INSN): New macros.\n-\n-2019-05-06  Andrew Bennett  <andrew.bennett@imgtec.com>\n-\t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n-\n-\t* mips-dis.c (mips_calculate_combination_ases): Add ISA\n-\targument and set ASE_EVA_R6 appropriately.\n-\t(set_default_mips_dis_options): Pass ISA to above.\n-\t(parse_mips_dis_option): Likewise.\n-\t* mips-opc.c (EVAR6): New macro.\n-\t(mips_builtin_opcodes): Add llwpe, scwpe.\n-\n-2019-05-01  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Add case for\n-\tAARCH64_OPND_TME_UIMM16.\n-\t(aarch64_print_operand): Likewise.\n-\t* aarch64-tbl.h (QL_IMM_NIL): New.\n-\t(TME): New.\n-\t(_TME_INSN): New.\n-\t(struct aarch64_opcode): Add tstart, tcommit, ttest and tcancel.\n-\n-2019-04-29  John Darrington  <john@darrington.wattle.id.au>\n-\n-        * s12z-opc.c (shift_discrim): Return OP_INVALID when reading fails.\n-\n-2019-04-26  Andrew Bennett  <andrew.bennett@imgtec.com>\n-\t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n-\n-\t* mips-opc.c (mips_builtin_opcodes): Add llwp, lldp, scwp, scdp.\n-\n-2019-04-24  John Darrington  <john@darrington.wattle.id.au>\n-\n-        * s12z-opc.h: Add extern \"C\" bracketing to help\n-\tusers who wish to use this interface in c++ code.\n-\n-2019-04-24  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* s12z-opc.c (bm_decode): Handle bit map operations with the\n-\t\"reserved0\" mode.\n-\n-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* arm-dis.c (coprocessor_opcodes): Document new %J and %K format\n-\tspecifier.  Add entries for VLDR and VSTR of system registers.\n-\t(print_insn_coprocessor): Forbid coprocessor numbers 8, 14 and 15 in\n-\tcoprocessor instructions on Armv8.1-M Mainline targets.  Add handling\n-\tof %J and %K format specifier.\n-\n-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* arm-dis.c (coprocessor_opcodes): Document new %C format control code.\n-\tAdd new entries for VSCCLRM instruction.\n-\t(print_insn_coprocessor): Handle new %C format control code.\n-\n-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* arm-dis.c (enum isa): New enum.\n-\t(struct sopcode32): New structure.\n-\t(coprocessor_opcodes): change type of entries to struct sopcode32 and\n-\tset isa field of all current entries to ANY.\n-\t(print_insn_coprocessor): Change type of insn to struct sopcode32.\n-\tOnly match an entry if its isa field allows the current mode.\n-\n-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* arm-dis.c (thumb_opcodes): Document %n control code.  Add entry for\n-\tCLRM.\n-\t(print_insn_thumb32): Add logic to print %n CLRM register list.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (print_insn_thumb32): Updated to accept new %P\n-\tand %Q patterns.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (thumb32_opcodes): New instruction bfcsel.\n-\t(print_insn_thumb32): Edit the switch case for %Z.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (print_insn_thumb32): Updated to accept new %Z pattern.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (thumb32_opcodes): New instruction bfl.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (print_insn_thumb32): Updated to accept new %Y pattern.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (print_insn_thumb32): Add '%<bitfield>S' to print an\n-\tArm register with r13 and r15 unpredictable.\n-\t(thumb32_opcodes): New instructions for bfx and bflx.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (thumb32_opcodes): New instructions for bf.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (print_insn_thumb32): Updated to accept new %W pattern.\n-\n-2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (print_insn_thumb32): Updated to accept new %G pattern.\n-\n-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* arm-dis.c (select_arm_features): Add logic for Armv8.1-M Mainline.\n-\n-2019-04-12  John Darrington <john@darrington.wattle.id.au>\n-\n-\ts12z-dis.c, s12z-opc.c, s12z-opc.h: Replace \"operator\" with\n-\t\"optr\". (\"operator\" is a reserved word in c++).\n-\n-2019-04-11  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-opc.c (aarch64_print_operand): Add case for\n-\tAARCH64_OPND_Rt_SP.\n-\t(verify_constraints): Likewise.\n-\t* aarch64-tbl.h (QL_LDST_AT): Update to add SP qualifier.\n-\t(struct aarch64_opcode): Update stg, stzg, st2g, stz2g instructions\n-\tto accept Rt|SP as first operand.\n-\t(AARCH64_OPERANDS): Add new Rt_SP.\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\n-2019-04-11  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Likewise.\n-\t* aarch64-opc-2.c: Likewise.\n-\t* aarch64-tbl.h (aarch64_opcode): Add new ldgm and stgm.\n-\n-2019-04-09  Robert Suchanek  <robert.suchanek@mips.com>\n-\n-\t* mips-opc.c (mips_builtin_opcodes): Add RDHWR rt rd sel.\n-\n-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-opc.tbl: Consolidate AVX512 BF16 entries.\n-\t* i386-init.h: Regenerated.\n-\n-2019-04-07  Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-dis.c (print_insn_powerpc): Use a tiny state machine\n-\top_separator to control printing of spaces, comma and parens\n-\trather than need_comma, need_paren and spaces vars.\n-\n-2019-04-07  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24421\n-\t* arm-dis.c (print_insn_coprocessor): Correct bracket placement.\n-\t(print_insn_neon, print_insn_arm): Likewise.\n-\n-2019-04-05  Xuepeng Guo  <xuepeng.guo@intel.com>\n-\n-\t* i386-dis-evex.h (evex_table): Updated to support BF16\n-\tinstructions.\n-\t* i386-dis.c (enum): Add EVEX_W_0F3852_P_1, EVEX_W_0F3872_P_1\n-\tand EVEX_W_0F3872_P_3.\n-\t* i386-gen.c (cpu_flag_init): Add CPU_AVX512_BF16_FLAGS.\n-\t(cpu_flags): Add bitfield for CpuAVX512_BF16.\n-\t* i386-opc.h (enum): Add CpuAVX512_BF16.\n-\t(i386_cpu_flags): Add bitfield for cpuavx512_bf16.\n-\t* i386-opc.tbl: Add AVX512 BF16 instructions.\n-\t* i386-init.h: Regenerated.\n-\t* i386-tbl.h: Likewise.\n-\n-2019-04-05  Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-opc.c (XLBH_MASK): Subtract off BH field from BB_MASK.\n-\t(powerpc_opcodes): Reorder bcctr and bclr extended mnemonics\n-\tto favour printing of \"-\" branch hint when using the \"y\" bit.\n-\tAllow BH field on bc{ctr,lr,tar}{,l}{-,+}.\n-\n-2019-04-05  Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-dis.c (print_insn_powerpc): Delay printing spaces after\n-\topcode until first operand is output.\n-\n-2019-04-04  Peter Bergner  <bergner@linux.ibm.com>\n-\n-\tPR gas/24349\n-\t* ppc-opc.c (valid_bo_pre_v2): Add comments.\n-\t(valid_bo_post_v2): Add support for 'at' branch hints.\n-\t(insert_bo): Only error on branch on ctr.\n-\t(get_bo_hint_mask): New function.\n-\t(insert_boe): Add new 'branch_taken' formal argument.  Add support\n-\tfor inserting 'at' branch hints.\n-\t(extract_boe): Add new 'branch_taken' formal argument.  Add support\n-\tfor extracting 'at' branch hints.\n-\t(insert_bom, extract_bom, insert_bop, extract_bop): New functions.\n-\t(BOE): Delete operand.\n-\t(BOM, BOP): New operands.\n-\t(RM): Update value.\n-\t(XLYLK, XLYLK_MASK, XLYBB_MASK): Delete.\n-\t(powerpc_opcodes) <bc-, bcl-, bca-, bcla-, bclr-, bclrl-, bcctr-,\n-\tbcctrl-, bctar-, bctarl->: Replace BOE with BOM.\n-\t(powerpc_opcodes) <bc+, bcl+, bca+, bcla+, bclr+, bclrl+, bcctr+,\n-\tbcctrl+, bctar+, bctarl+>: Replace BOE with BOP.\n-\t<bdnztar, bdnztarl, bdztar, bdztarl, btar, btarl, bdnztar-, bdnztarl-,\n-\tbdnztar+, bdnztarl+, bdztar-, bdztarl-, bdztar+, bdztarl+, bgetar,\n-\tbnltar, bgetarl, bnltarl, bletar, bngtar, bletarl, bngtarl, bnetar,\n-\tbnetarl, bnstar, bnutar, bnstarl, bnutarl, bgetar-, bnltar-, bgetarl-,\n-\tbnltarl-, bletar-, bngtar-, bletarl-, bngtarl-, bnetar-, bnetarl-,\n-\tbnstar-, bnutar-, bnstarl-, bnutarl-, bgetar+, bnltar+, bgetarl+,\n-\tbnltarl+, bletar+, bngtar+, bletarl+, bngtarl+, bnetar+, bnetarl+,\n-\tbnstar+, bnutar+, bnstarl+, bnutarl+, blttar, blttarl, bgttar, bgttarl,\n-\tbeqtar, beqtarl, bsotar, buntar, bsotarl, buntarl, blttar-, blttarl-,\n-\tbgttar-, bgttarl-, beqtar-, beqtarl-, bsotar-, buntar-, bsotarl-,\n-\tbuntarl-, blttar+, blttarl+, bgttar+, bgttarl+, beqtar+, beqtarl+,\n-\tbsotar+, buntar+, bsotarl+, buntarl+, bdnzftar, bdnzftarl, bdzftar,\n-\tbdzftarl, bftar, bftarl, bftar-, bftarl-, bftar+, bftarl+, bdnzttar,\n-\tbdnzttarl, bdzttar, bdzttarl, bttar, bttarl, bttar-, bttarl-, bttar+,\n-\tbttarl+>: New extended mnemonics.\n-\n-2019-03-28  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24390\n-\t* ppc-opc.c (BTF): Define.\n-\t(powerpc_opcodes): Use for mtfsb*.\n-\t* ppc-dis.c (print_insn_powerpc): Print fields with both\n-\tPPC_OPERAND_CR_REG and PPC_OPERAND_CR_BIT as a plain number.\n-\n-2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* arm-dis.c (struct arm_private_data): Remove has_mapping_symbols.\n-\t(mapping_symbol_for_insn): Implement new algorithm.\n-\t(print_insn): Remove duplicate code.\n-\n-2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-dis.c (print_insn_aarch64):\n-\tImplement override.\n-\n-2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-dis.c (print_insn_aarch64): Update the mapping symbol search\n-\torder.\n-\n-2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-dis.c (last_stop_offset): New.\n-\t(print_insn_aarch64): Use stop_offset.\n-\n-2019-03-19  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/24359\n-\t* i386-gen.c (cpu_flag_init): Add CPU_ANY_AVX512F_FLAGS to\n-\tCPU_ANY_AVX2_FLAGS.\n-\t* i386-init.h: Regenerated.\n-\n-2019-03-18  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/24348\n-\t* i386-opc.tbl: Add Optimize to vmovdqa32, vmovdqa64, vmovdqu8,\n-\tvmovdqu16, vmovdqu32 and vmovdqu64.\n-\t* i386-tbl.h: Regenerated.\n-\n-2019-03-12  Andreas Krebbel  <krebbel@linux.ibm.com>\n-\n-\t* s390-opc.txt: Rename selhhhr to selfhr.  Remove optional operand\n-\tfrom vstrszb, vstrszh, and vstrszf.\n-\n-2019-03-12  Andreas Krebbel  <krebbel@linux.ibm.com>\n-\n-\t* s390-opc.txt: Add instruction descriptions.\n-\n-2019-02-08  Jim Wilson  <jimw@sifive.com>\n-\n-\t* riscv-opc.c (riscv_opcodes) <beq>: Use Cz to compress 3 operand form.\n-\t<bne>: Likewise.\n-\n-2019-02-07  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* arm-dis.c (arm_opcodes): Redefine hlt to armv1.\n-\n-2019-02-07  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/23212\n-\t* aarch64-opc.h (enum aarch64_field_kind): Add FLD_sz.\n-\t* aarch64-opc.c (verify_elem_sd): New.\n-\t(fields): Add FLD_sz entr.\n-\t* aarch64-tbl.h (_SIMD_INSN): New.\n-\t(aarch64_opcode_table): Add elem_sd verifier to fmla, fmls, fmul and\n-\tfmulx scalar and vector by element isns.\n-\n-2019-02-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sv.po: Updated Swedish translation.\n-\n-2019-01-31  Andreas Krebbel  <krebbel@linux.ibm.com>\n-\n-\t* s390-mkopc.c (main): Accept arch13 as cpu string.\n-\t* s390-opc.c: Add new instruction formats and instruction opcode\n-\tmasks.\n-\t* s390-opc.txt: Add new arch13 instructions.\n-\n-2019-01-25  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-tbl.h (QL_LDST_AT): Update macro.\n-\t(aarch64_opcode): Change encoding for stg, stzg\n-\tst2g and st2zg.\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\n-2019-01-25  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Likewise.\n-\t* aarch64-opc-2.c: Likewise.\n-\t* aarch64-tbl.h (aarch64_opcode): Add new stzgm.\n-\n-2019-01-25  Sudakshina Das  <sudi.das@arm.com>\n-\t    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n-\n-\t* aarch64-asm.c (aarch64_ins_addr_simple_2): Remove.\n-\t* aarch64-asm.h (ins_addr_simple_2): Likeiwse.\n-\t* aarch64-dis.c (aarch64_ext_addr_simple_2): Likewise.\n-\t* aarch64-dis.h (ext_addr_simple_2): Likewise.\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Remove\n-\tcase for ldstgv_indexed.\n-\t(aarch64_print_operand): Remove case for AARCH64_OPND_ADDR_SIMPLE_2.\n-\t* aarch64-tbl.h (struct aarch64_opcode): Remove ldgv and stgv.\n-\t(AARCH64_OPERANDS): Remove ADDR_SIMPLE_2.\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\n-2019-01-23  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/pt_BR.po: Updated Brazilian Portuguese translation.\n-\n-2019-01-21  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/de.po: Updated German translation.\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2019-01-20  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\t* mips-dis.c (mips_arch_choices): Fix typo in\n-\tgs464, gs464e and gs264e descriptors.\n-\n-2019-01-19  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\t* po/opcodes.pot: Regenerate.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.32 branch created.\n-\n-2019-01-09  John Darrington <john@darrington.wattle.id.au>\n-\n-\t* s12z-dis.c (print_insn_s12z):  Do not dereference an operand\n-\tif it is null.\n-\t-dis.c (opr_emit_disassembly): Do not omit an index if it is\n-\tzero.\n-\n-2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>\n-\n-\t* configure: Regenerate.\n-\n-2019-01-07  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2019-01-03  John Darrington <john@darrington.wattle.id.au>\n-\n-\t* s12z-opc.c: New file.\n-\t* s12z-opc.h: New file.\n-\t* s12z-dis.c: Removed all code not directly related to display\n-\tof instructions.  Used the interface provided by the new files\n-\tinstead.\n-\t* Makefile.am (TARGET_LIBOPCODES_CFILES) Add s12z-opc.c.\n-\t* Makefile.in: Regenerate.\n-\t* configure.ac (bfd_s12z_arch): Correct the dependencies.\n-\t* configure: Regenerate.\n-\n-2019-01-01  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2018\n+For older changes see ChangeLog-2019\n \f\n-Copyright (C) 2019 Free Software Foundation, Inc.\n+Copyright (C) 2020 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "5021447c18b7dc909fe13c420afc3651d924bb62",
      "filename": "opcodes/ChangeLog-2019",
      "status": "added",
      "additions": 2456,
      "deletions": 0,
      "changes": 2456,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b11474080800192797236e30857a42818f5560d/opcodes/ChangeLog-2019",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b11474080800192797236e30857a42818f5560d/opcodes/ChangeLog-2019",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog-2019?ref=0b11474080800192797236e30857a42818f5560d",
      "patch": "@@ -0,0 +1,2456 @@\n+2019-12-30  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25319\n+\t* tic4x-dis.c (tic4x_print_cond): Correct order of xcalloc args.\n+\n+2019-12-29  Alan Modra  <amodra@gmail.com>\n+\n+\t* sparc-dis.c (SEX): Don't use left and right shift to sign extend.\n+\t(compare_opcodes): Avoid signed shift left overflow.\n+\t(print_insn_sparc): Likewise.\n+\n+2019-12-29  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25319\n+\t* tic4x-dis.c (tic4x_print_cond): Init all of condtable.\n+\n+2019-12-27  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (Jdqw): Define.\n+\t(dqw_mode): Adjust associated comment.\n+\t(rm_table): Use Jdqw for XBEGIN.\n+\t(OP_J): Handle dqw_mode.\n+\n+2019-12-27  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (process_i386_operand_type): Don't set Disp32 for\n+\tCpu64 templates.\n+\t* i386-opc.tbl (mov): Fold two templates.\n+\t(jcxz, jecxz, jrcxz, loop, loope, loopne, loopnz, loopz): Drop\n+\tDisp16, Disp32, and Disp32S.\n+\t(xbegin): Add Disp32S.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-12-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* crx-dis.c (get_number_of_operands): Don't access operands[]\n+\tout of bounds.\n+\n+2019-12-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* v850-dis.c (disassemble): Avoid signed overflow.  Don't use\n+\tlong vars when unsigned int will do.\n+\n+2019-12-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* arm-dis.c (print_insn_arm): Don't shift by 32 on unsigned int var.\n+\n+2019-12-23  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* ppc-dis.c (print_insn_powerpc): Rename local variable \"spaces\"\n+\tto \"blanks\".\n+\t* ppc-opc.c (D34, SI34, NSI34): Use UINT64_C().\n+\n+2019-12-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* score-dis.c (print_insn_score32): Avoid signed overflow.\n+\t(print_insn_score48): Likewise.  Don't cast to int when printing\n+\thex values.\n+\n+2019-12-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* iq2000-ibld.c: Regenerate.\n+\n+2019-12-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* d30v-dis.c (extract_value): Make num param a uint64_t, constify\n+\toper.  Use unsigned vars.\n+\t(print_insn): Make num var uint64_t.  Constify oper and remove now\n+\tunnecessary casts on extract_value calls.\n+\t(print_insn_d30v): Use unsigned vars.  Adjust printf formats.\n+\n+2019-12-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* wasm32-dis.c (wasm_read_leb128): Don't allow oversize shifts.\n+\tCatch value overflow.  Sign extend only on terminating byte.\n+\n+2019-12-20  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25281\n+\t* sh-dis.c (print_insn_ddt): Properly check validity of MOVX_NOPY\n+\tand MOVY_NOPX insns.  For invalid cases include 0xf000 in the word\n+\tprinted.  Print .word in more cases.\n+\n+2019-12-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* or1k-ibld.c: Regenerate.\n+\n+2019-12-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* hppa-dis.c (extract_16, extract_21, print_insn_hppa): Use\n+\tunsigned variables.\n+\n+2019-12-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* m68hc11-dis.c (read_memory): Delete forward decls.\n+\t(print_indexed_operand, print_insn): Likewise.\n+\t(print_indexed_operand): Formatting.  Don't rely on short being\n+\texactly 16 bits, make sign extension explicit.\n+\t(print_insn): Likewise.  Avoid signed overflow.\n+\n+2019-12-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* vax-dis.c (print_insn_mode): Stop index mode recursion.\n+\n+2019-12-19  Dr N.W. Filardo  <nwf20@cam.ac.uk>\n+\n+\tPR 25277\n+\t* microblaze-opcm.h (enum microblaze_instr): Prefix fadd, fmul and\n+\tfdiv with \"mbi_\".\n+\t* microblaze-opc.h (opcodes): Adjust to suit.\n+\n+2019-12-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* alpha-opc.c (OP): Avoid signed overflow.\n+\t* arm-dis.c (print_insn): Likewise.\n+\t* mcore-dis.c (print_insn_mcore): Likewise.\n+\t* pj-dis.c (get_int): Likewise.\n+\t* ppc-opc.c (EBD15, EBD15BI): Likewise.\n+\t* score7-dis.c (s7_print_insn): Likewise.\n+\t* tic30-dis.c (print_insn_tic30): Likewise.\n+\t* v850-opc.c (insert_SELID): Likewise.\n+\t* vax-dis.c (print_insn_vax): Likewise.\n+\t* arc-ext.c (create_map): Likewise.\n+\t(struct ExtAuxRegister): Make \"address\" field unsigned int.\n+\t(arcExtMap_auxRegName): Pass unsigned address.\n+\t(dump_ARC_extmap): Adjust.\n+\t* arc-ext.h (arcExtMap_auxRegName): Update prototype.\n+\n+2019-12-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* visium-dis.c (print_insn_visium): Avoid signed overflow.\n+\n+2019-12-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* aarch64-opc.c (value_fit_signed_field_p): Avoid signed overflow.\n+\t(value_fit_unsigned_field_p): Likewise.\n+\t(aarch64_wide_constant_p): Likewise.\n+\t(operand_general_constraint_met_p): Likewise.\n+\t* aarch64-opc.h (aarch64_wide_constant_p): Update prototype.\n+\n+2019-12-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* nds32-dis.c (nds32_mask_opcode): Avoid signed overflow.\n+\t(print_insn_nds32): Use uint64_t for \"given\" and \"given1\".\n+\n+2019-12-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* tic80-dis.c: Delete file.\n+\t* tic80-opc.c: Delete file.\n+\t* disassemble.c: Remove tic80 support.\n+\t* disassemble.h: Likewise.\n+\t* Makefile.am: Likewise.\n+\t* configure.ac: Likewise.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2019-12-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* bpf-ibld.c: Regenerate.\n+\n+2019-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* aarch64-dis.c (sign_extend): Return uint64_t.  Rewrite without\n+\tconditional.\n+\t(aarch64_ext_imm): Avoid signed overflow.\n+\n+2019-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* microblaze-dis.c (read_insn_microblaze): Avoid signed overflow.\n+\n+2019-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* nios2-dis.c (nios2_print_insn_arg): Avoid signed overflow\n+\n+2019-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* xstormy16-ibld.c: Regenerate.\n+\n+2019-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* score-dis.c (print_insn_score16): Move rpush/rpop imm field\n+\tvalue adjustment so that it doesn't affect reg field too.\n+\n+2019-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* crx-dis.c (EXTRACT, SBM): Avoid signed overflow.\n+\t(get_number_of_operands, getargtype, getbits, getregname),\n+\t(getcopregname, getprocregname, gettrapstring, getcinvstring),\n+\t(getregliststring, get_word_at_PC, get_words_at_PC, build_mask),\n+\t(powerof2, match_opcode, make_instruction, print_arguments),\n+\t(print_arg): Delete forward declarations, moving static to..\n+\t(getregname, getcopregname, getregliststring): ..these definitions.\n+\t(build_mask): Return unsigned int mask.\n+\t(match_opcode): Use unsigned int vars.\n+\n+2019-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* bfin-dis.c (fmtconst, fmtconst_val): Avoid signed overflow.\n+\n+2019-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* nds32-dis.c (print_insn16, print_insn32): Remove forward decls.\n+\t(struct objdump_disasm_info): Delete.\n+\t(nds32_parse_audio_ext, nds32_parse_opcode): Cast result of\n+\tN32_IMMS to unsigned before shifting left.\n+\n+2019-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* moxie-dis.c (INST2OFFSET): Don't left shift a signed value.\n+\t(print_insn_moxie): Remove unnecessary cast.\n+\n+2019-12-12  Alan Modra  <amodra@gmail.com>\n+\n+\t* csky-dis.c (csky_chars_to_number): Remove abort and unnecessary\n+\tmask.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* arc-dis.c (BITS): Don't truncate high bits with shifts.\n+\t* nios2-dis.c (nios2_print_insn_arg): Don't sign extend with shifts.\n+\t* tic54x-dis.c (print_instruction): Likewise.\n+\t* tilegx-opc.c (parse_insn_tilegx): Likewise.\n+\t* tilepro-opc.c (parse_insn_tilepro): Likewise.\n+\t* visium-dis.c (disassem_class0): Likewise.\n+\t* pdp11-dis.c (sign_extend): Likewise.\n+\t(SIGN_BITS): Delete.\n+\t* epiphany-ibld.c: Regenerate.\n+\t* lm32-ibld.c: Regenerate.\n+\t* m32c-ibld.c: Regenerate.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* ns32k-dis.c (sign_extend): Correct last patch.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* vax-dis.c (NEXTLONG): Avoid signed overflow.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* v850-dis.c (get_operand_value): Use unsigned arithmetic.  Don't\n+\tsign extend using shifts.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* tic6x-dis.c (tic6x_extract_32): Avoid signed overflow.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* tic4x-dis.c (tic4x_print_register): Formatting.  Don't segfault\n+\ton NULL registertable entry.\n+\t(tic4x_hash_opcode): Use unsigned arithmetic.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* s12z-opc.c (z_decode_signed_value): Avoid signed overflow.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* ns32k-dis.c (bit_extract): Use unsigned arithmetic.\n+\t(bit_extract_simple, sign_extend): Likewise.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* nios2-dis.c (nios2_print_insn_arg): Use 1u << 31.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* moxie-dis.c (INST2OFFSET): Don't sign extend using shifts.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* m68k-dis.c (COERCE32): Cast value first.\n+\t(NEXTLONG, NEXTULONG): Avoid signed overflow.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* h8300-dis.c (extract_immediate): Avoid signed overflow.\n+\t(bfd_h8_disassemble): Likewise.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* d30v-dis.c (print_insn): Make opind unsigned.  Don't access\n+\tpast end of operands array.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* csky-dis.c (csky_chars_to_number): Rewrite.  Avoid signed\n+\toverflow when collecting bytes of a number.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* cris-dis.c (print_with_operands): Avoid signed integer\n+\toverflow when collecting bytes of a 32-bit integer.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* cr16-dis.c (EXTRACT, SBM): Rewrite.\n+\t(cr16_match_opcode): Delete duplicate bcond test.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* bfin-dis.c (HOST_LONG_WORD_SIZE, XFIELD): Delete.\n+\t(SIGNBIT): New.\n+\t(MASKBITS, SIGNEXTEND): Rewrite.\n+\t(fmtconst): Don't use ? expression now that SIGNEXTEND uses\n+\tunsigned arithmetic, instead assign result of SIGNEXTEND back\n+\tto x.\n+\t(fmtconst_val): Use 1u in shift expression.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* arc-dis.c (find_format_from_table): Use ull constant when\n+\tshifting by up to 32.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25270\n+\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Return\n+\tfalse when field is zero for sve_size_tsz_bhs.\n+\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* epiphany-ibld.c: Regenerate.\n+\n+2019-12-10  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24960\n+\t* disassemble.c (disassemble_free_target): New function.\n+\n+2019-12-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* cgen-dis.in (print_insn_@arch@): Replace insn_sets with private_data.\n+\t* disassemble.c (disassemble_init_for_target): Likewise.\n+\t* bpf-dis.c: Regenerate.\n+\t* epiphany-dis.c: Regenerate.\n+\t* fr30-dis.c: Regenerate.\n+\t* frv-dis.c: Regenerate.\n+\t* ip2k-dis.c: Regenerate.\n+\t* iq2000-dis.c: Regenerate.\n+\t* lm32-dis.c: Regenerate.\n+\t* m32c-dis.c: Regenerate.\n+\t* m32r-dis.c: Regenerate.\n+\t* mep-dis.c: Regenerate.\n+\t* mt-dis.c: Regenerate.\n+\t* or1k-dis.c: Regenerate.\n+\t* xc16x-dis.c: Regenerate.\n+\t* xstormy16-dis.c: Regenerate.\n+\n+2019-12-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-dis.c (private): Delete variable.\n+\t(get_powerpc_dialect): Don't segfault on NULL info->private_data.\n+\t(powerpc_init_dialect): Don't use global private.\n+\n+2019-12-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* s12z-opc.c: Formatting.\n+\n+2019-12-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* s12z-opc.c (exg_sex_discrim): Don't leak memory on invalid\n+\tregisters.\n+\n+2019-12-05  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* aarch64-tbl.h (aarch64_feature_crypto,\n+\taarch64_feature_crypto_v8_2, CRYPTO, CRYPTO_V8_2, CRYP_INSN,\n+\tCRYPTO_V8_2_INSN): Delete.\n+\n+2019-12-05  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25249\n+\t* microblaze-dis.c (NUM_STRBUFS, STRBUF_SIZE): Define.\n+\t(struct string_buf): New.\n+\t(strbuf): New function.\n+\t(get_field): Use strbuf rather than strdup of local temp.\n+\t(get_field_imm, get_field_imm5, get_field_imm5_mbar): Likewise.\n+\t(get_field_rfsl, get_field_imm15): Likewise.\n+\t(get_field_rd, get_field_r1, get_field_r2): Update macros.\n+\t(get_field_special): Likewise.  Don't strcpy spr.  Formatting.\n+\t(print_insn_microblaze): Formatting.  Init and pass string_buf to\n+\tget_field functions.\n+\n+2019-12-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (lfs, lgs, lss): Drop No_qSuf.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-12-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (mod_table): Use Ev instead of Em for movdiri.\n+\n+2019-12-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (push, pop): Drop DefaultSize from GPR-only\n+\tforms.\n+\t(xbegin): Drop DefaultSize.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-11-22  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* opcodes/arm-dis.c (arm_opcodes, thumb32_opcodes):\n+\tChange the coproc CRC conditions to use the extension\n+\tfeature set, second word, base on ARM_EXT2_CRC.\n+\n+2019-11-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (syscall, sysret): Drop Cpu64 forms.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-11-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (opcode_modifiers): Remove JumpDword, JumpByte,\n+\tJumpInterSegment, and JumpAbsolute entries.\n+\t* i386-opc.h (JUMP, JUMP_DWORD, JUMP_BYTE, JUMP_INTERSEGMENT,\n+\tJUMP_ABSOLUTE): Define.\n+\t(struct i386_opcode_modifier): Extend jump field to 3 bits.\n+\tRemove jumpdword, jumpbyte, jumpintersegment, and jumpabsolute\n+\tfields.\n+\t* i386-opc.tbl (JumpByte, JumpDword, JumpAbsolute,\n+\tJumpInterSegment): Define.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-11-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_init): Remove\n+\tOPERAND_TYPE_JUMPABSOLUTE entry.\n+\t(opcode_modifiers): Add JumpAbsolute entry.\n+\t(operand_types): Remove JumpAbsolute entry.\n+\t* i386-opc.h (JumpAbsolute): Move between enums.\n+\t(struct i386_opcode_modifier): Add jumpabsolute field.\n+\t(union i386_operand_type): Remove jumpabsolute field.\n+\t* i386-opc.tbl (call, lcall, jmp, ljmp): Move JumpAbsolute.\n+\t* i386-init.h, i386-tbl.h: Re-generate.\n+\n+2019-11-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (opcode_modifiers): Add AnySize entry.\n+\t(operand_types): Remove AnySize entry.\n+\t* i386-opc.h (AnySize): Move between enums.\n+\t(struct i386_opcode_modifier): Add anysize field.\n+\t(OTUnused): Un-comment.\n+\t(union i386_operand_type): Remove anysize field.\n+\t* i386-opc.tbl (lea, invlpg, clflush, prefetchnta, prefetcht0,\n+\tprefetcht1, prefetcht2, prefetchtw, bndmk, bndcl, bndcu, bndcn,\n+\tbndstx, bndldx, prefetchwt1, clflushopt, clwb, cldemote): Move\n+\tAnySize.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-11-12  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* riscv-opc.c (riscv_insn_types): Replace the INSN_CLASS_I with\n+\tINSN_CLASS_F and the INSN_CLASS_C with INSN_CLASS_F_AND_C if we\n+\tuse the floating point register (FPR).\n+\n+2019-11-12  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* opcodes/arm-dis.c (mve_opcodes): Enable VMOV imm to vec with\n+\tcmode 1101.\n+\t(is_mve_encoding_conflict): Update cmode conflict checks for\n+\tMVE_VMVN_IMM.\n+\n+2019-11-12  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_init): Remove OPERAND_TYPE_ESSEG\n+\tentry.\n+\t(operand_types): Remove EsSeg entry.\n+\t(main): Replace stale use of OTMax.\n+\t* i386-opc.h (IS_STRING_ES_OP0, IS_STRING_ES_OP1): Define.\n+\t(struct i386_opcode_modifier): Expand isstring field to 2 bits.\n+\t(EsSeg): Delete.\n+\t(OTUnused): Comment out.\n+\t(union i386_operand_type): Remove esseg field.\n+\t* i386-opc.tbl (IsStringEsOp0, IsStringEsOp1): Define.\n+\t(cmps, scmp, scas, ssca, cmpsd): Add IsStringEsOp0.\n+\t(ins, movs, smov, movsd): Add IsStringEsOpOp1.\n+\t(stos, ssto): Add IsStringEsOp0/IsStringEsOpOp1.\n+\t* i386-init.h, i386-tbl.h: Re-generate.\n+\n+2019-11-12  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_instances): Add RegB entry.\n+\t* i386-opc.h (enum operand_instance): Add RegB.\n+\t* i386-opc.tbl (RegC, RegD, RegB): Define.\n+\t(Acc, ShiftCount, InOutPortReg): Adjust definitions.\n+\t(monitor, mwait, invlpga, skinit, vmload, vmrun, vmsave, clzero,\n+\tmonitorx, mwaitx): Drop ImmExt and convert encodings\n+\taccordingly.\n+\t* i386-reg.tbl (ecx, rcx): Add Instance=RegC.\n+\t(edx, rdx): Add Instance=RegD.\n+\t(ebx, rbx): Add Instance=RegB.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-11-12  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_init): Adjust\n+\tOPERAND_TYPE_INOUTPORTREG, OPERAND_TYPE_SHIFTCOUNT,\n+\tOPERAND_TYPE_FLOATACC, OPERAND_TYPE_ACC8, OPERAND_TYPE_ACC16,\n+\tOPERAND_TYPE_ACC32, and OPERAND_TYPE_ACC64 entries.\n+\t(operand_instances): New.\n+\t(operand_types): Drop InOutPortReg, ShiftCount, and Acc entries.\n+\t(output_operand_type): New parameter \"instance\". Process it.\n+\t(process_i386_operand_type): New local variable \"instance\".\n+\t(main): Adjust static assertions.\n+\t* i386-opc.h (INSTANCE_WIDTH): Define.\n+\t(enum operand_instance): New.\n+\t(Acc, InOutPortReg, ShiftCount): Replace by ClassInstance.\n+\t(union i386_operand_type): Replace acc, inoutportreg, and\n+\tshiftcount by instance.\n+\t* i386-opc.tbl (Acc, InOutPortReg, ShiftCount): Define.\n+\t* i386-reg.tbl (st, al, cl, ax, dx, eax, rax, xmm0, st(0)):\n+\tAdd Instance=.\n+\t* i386-init.h, i386-tbl.h: Re-generate.\n+\n+2019-11-11  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* aarch64-tbl.h (aarch64_opcode_table): Switch SVE2's\n+\tsmaxp/sminp entries' \"tied_operand\" field to 2.\n+\n+2019-11-11  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Replace\n+\t\"index\" local variable by that of the already existing \"num\".\n+\n+2019-11-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/25167\n+\t* i386-opc.tbl: Remove IgnoreSize from cmpsd and movsd.\n+\t* i386-tbl.h: Regenerated.\n+\n+2019-11-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_init): Add Class= to\n+\tOPERAND_TYPE_REGMASK and OPERAND_TYPE_REGBND entries. Move up\n+\tOPERAND_TYPE_REGBND entry.\n+\t(operand_classes): Add RegMask and RegBND entries.\n+\t(operand_types): Drop RegMask and RegBND entry.\n+\t* i386-opc.h (enum operand_class): Add RegMask and RegBND.\n+\t(RegMask, RegBND): Delete.\n+\t(union i386_operand_type): Remove regmask and regbnd fields.\n+\t* i386-opc.tbl (RegMask, RegBND): Define.\n+\t* i386-reg.tbl: Replace RegMask by Class=RegMask and RegBND by\n+\tClass=RegBND.\n+\t* i386-init.h, i386-tbl.h: Re-generate.\n+\n+2019-11-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_init): Add Class= to\n+\tOPERAND_TYPE_REGMMX, OPERAND_TYPE_REGXMM, OPERAND_TYPE_REGYMM, and\n+\tOPERAND_TYPE_REGZMM entries.\n+\t(operand_classes): Add RegMMX and RegSIMD entries.\n+\t(operand_types): Drop RegMMX and RegSIMD entries.\n+\t* i386-opc.h (enum operand_class): Add RegMMX and RegSIMD.\n+\t(RegMMX, RegSIMD): Delete.\n+\t(union i386_operand_type): Remove regmmx and regsimd fields.\n+\t* i386-opc.tbl (RegMMX): Define.\n+\t(RegXMM, RegYMM, RegZMM): Add Class=.\n+\t* i386-reg.tbl: Replace RegMMX by Class=RegMMX and RegSIMD by\n+\tClass=RegSIMD.\n+\t* i386-init.h, i386-tbl.h: Re-generate.\n+\n+2019-11-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_init): Add Class= to\n+\tOPERAND_TYPE_CONTROL, OPERAND_TYPE_TEST, and OPERAND_TYPE_DEBUG\n+\tentries.\n+\t(operand_classes): Add RegCR, RegDR, and RegTR entries.\n+\t(operand_types): Drop Control, Debug, and Test entries.\n+\t* i386-opc.h (enum operand_class): Add RegCR, RegDR, and RegTR.\n+\t(Control, Debug, Test): Delete.\n+\t(union i386_operand_type): Remove control, debug, and test\n+\tfields.\n+\t* i386-opc.tbl (Control, Debug, Test): Define.\n+\t* i386-reg.tbl: Replace Control by Class=RegCR, Debug by\n+\tClass=RegDR, and Test by Class=RegTR.\n+\t* i386-init.h, i386-tbl.h: Re-generate.\n+\n+2019-11-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_init): Add Class= to\n+\tOPERAND_TYPE_SREG entry.\n+\t(operand_classes): Add SReg entry.\n+\t(operand_types): Drop SReg entry.\n+\t* i386-opc.h (enum operand_class): Add SReg.\n+\t(SReg): Delete.\n+\t(union i386_operand_type): Remove sreg field.\n+\t* i386-opc.tbl (SReg): Define.\n+\t* i386-reg.tbl: Replace SReg by Class=SReg.\n+\t* i386-init.h, i386-tbl.h: Re-generate.\n+\n+2019-11-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_init): Add Class=. New\n+\tOPERAND_TYPE_ANYIMM entry.\n+\t(operand_classes): New.\n+\t(operand_types): Drop Reg entry.\n+\t(output_operand_type): New parameter \"class\". Process it.\n+\t(process_i386_operand_type): New local variable \"class\".\n+\t(main): Adjust static assertions.\n+\t* i386-opc.h (CLASS_WIDTH): Define.\n+\t(enum operand_class): New.\n+\t(Reg): Replace by Class. Adjust comment.\n+\t(union i386_operand_type): Replace reg by class.\n+\t* i386-opc.tbl (Reg8, Reg16, Reg32, Reg64, FloatReg): Add\n+\tClass=.\n+\t* i386-reg.tbl: Replace Reg by Class=Reg.\n+\t* i386-init.h: Re-generate.\n+\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* opcodes/aarch64-tbl.h (V8_6_INSN): New macro for v8.6 instructions.\n+\t(aarch64_opcode_table): Add data gathering hint mnemonic.\n+\t* opcodes/aarch64-dis-2.c: Account for new instruction.\n+\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* arm-dis.c (neon_opcodes): Add i8mm SIMD instructions.\n+\n+\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* aarch64-tbl.h (aarch64_feature_i8mm_sve, aarch64_feature_f32mm_sve,\n+\taarch64_feature_f64mm_sve, aarch64_feature_i8mm, aarch64_feature_f32mm,\n+\taarch64_feature_f64mm): New feature sets.\n+\t(INT8MATMUL_INSN, F64MATMUL_SVE_INSN, F64MATMUL_INSN,\n+\tF32MATMUL_SVE_INSN, F32MATMUL_INSN): New macros to define matrix multiply\n+\tinstructions.\n+\t(I8MM_SVE, F32MM_SVE, F64MM_SVE, I8MM, F32MM, F64MM): New feature set\n+\tmacros.\n+\t(QL_MMLA64, OP_SVE_SBB): New qualifiers.\n+\t(OP_SVE_QQQ): New qualifier.\n+\t(INT8MATMUL_SVE_INSNC, F64MATMUL_SVE_INSNC,\n+\tF32MATMUL_SVE_INSNC): New feature set for bfloat16 instructions to support\n+\tthe movprfx constraint.\n+\t(aarch64_opcode_table): Support for SVE_ADDR_RI_S4x32.\n+\t(aarch64_opcode_table): Define new instructions smmla,\n+\tummla, usmmla, usdot, sudot, fmmla, ld1rob, ld1roh, ld1row, ld1rod,\n+\tuzip{1/2}, trn{1/2}.\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Handle\n+\tAARCH64_OPND_SVE_ADDR_RI_S4x32.\n+\t(aarch64_print_operand): Handle AARCH64_OPND_SVE_ADDR_RI_S4x32.\n+\t* aarch64-dis-2.c (aarch64_opcode_lookup_1, aarch64_find_next_opcode):\n+\tAccount for new instructions.\n+\t* opcodes/aarch64-asm-2.c (aarch64_insert_operand): Support the new\n+\tS4x32 operand.\n+\t* aarch64-opc-2.c (aarch64_operands): Support the new S4x32 operand.\n+\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* arm-dis.c (select_arm_features): Update bfd_march_arm_8 with\n+\tArmv8.6-A.\n+\t(coprocessor_opcodes): Add bfloat16 vcvt{t,b}.\n+\t(neon_opcodes): Add bfloat SIMD instructions.\n+\t(print_insn_coprocessor): Add new control character %b to print\n+\tcondition code without checking cp_num.\n+\t(print_insn_neon): Account for BFloat16 instructions that have no\n+\tspecial top-byte handling.\n+\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* arm-dis.c (print_insn_coprocessor,\n+\tprint_insn_generic_coprocessor): Create wrapper functions around\n+\tthe implementation of the print_insn_coprocessor control codes.\n+\t(print_insn_coprocessor_1): Original print_insn_coprocessor\n+\tfunction that now takes which array to look at as an argument.\n+\t(print_insn_arm): Use both print_insn_coprocessor and\n+\tprint_insn_generic_coprocessor.\n+\t(print_insn_thumb32): As above.\n+\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_ins_reglane): Use AARCH64_OPND_QLF_S_2H\n+\tin reglane special case.\n+\t* aarch64-dis-2.c (aarch64_opcode_lookup_1,\n+\taarch64_find_next_opcode): Account for new instructions.\n+\t* aarch64-dis.c (aarch64_ext_reglane): Use AARCH64_OPND_QLF_S_2H\n+\tin reglane special case.\n+\t* aarch64-opc.c (struct operand_qualifier_data): Add data for\n+\tnew AARCH64_OPND_QLF_S_2H qualifier.\n+\t* aarch64-tbl.h (QL_BFDOT QL_BFDOT64, QL_BFDOT64I, QL_BFMMLA2,\n+\tQL_BFCVT64, QL_BFCVTN64, QL_BFCVTN2_64): New qualifiers.\n+\t(aarch64_feature_bfloat16, aarch64_feature_bfloat16_sve): New feature\n+\tsets.\n+\t(BFLOAT_SVE, BFLOAT): New feature set macros.\n+\t(BFLOAT_SVE_INSN, BFLOAT_INSN): New macros to define BFloat16\n+\tinstructions.\n+\t(aarch64_opcode_table): Define new instructions bfdot,\n+\tbfmmla, bfcvt, bfcvtnt, bfdot, bfdot, bfcvtn, bfmlal[b/t]\n+\tbfcvtn2, bfcvt.\n+\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-tbl.h (ARMV8_6): New macro.\n+\n+2019-11-07  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (prefix_table): Add mcommit.\n+\t(rm_table): Add rdpru.\n+\t* i386-gen.c (cpu_flag_init): Adjust CPU_ZNVER2_FLAGS entry. Add\n+\tCPU_RDPRU_FLAGS and CPU_MCOMMIT_FLAGS entries.\n+\t(cpu_flags): Add CpuRDPRU and CpuMCOMMIT entries.\n+\t* i386-opc.h (CpuRDPRU, CpuMCOMMIT): New.\n+\t(union i386_cpu_flags): Add cpurdpru and cpumcommit fields.\n+\t* i386-opc.tbl (mcommit, rdpru): New.\n+\t* i386-init.h, i386-tbl.h: Re-generate.\n+\n+2019-11-07  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (OP_Mwait): Drop local variable \"names\", use\n+\t\"names32\" instead.\n+\t(OP_Monitor): Drop local variable \"op1_names\", re-purpose\n+\t\"names\" for it instead, and replace former \"names\" uses by\n+\t\"names32\" ones.\n+\n+2019-11-07  Jan Beulich  <jbeulich@suse.com>\n+\n+\tPR/gas 25167\n+\t* opcodes/i386-opc.tbl (movsd, cmpsd): Drop IgnoreSize from\n+\toperand-less forms.\n+\t* opcodes/i386-tbl.h: Re-generate.\n+\n+2019-11-05  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (OP_Mwaitx): Delete.\n+\t(prefix_table): Use OP_Mwait for mwaitx entry.\n+\t(OP_Mwait): Also handle mwaitx.\n+\n+2019-11-05  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (PREFIX_0F01_REG_7_MOD_3_RM_2,\n+\tPREFIX_0F01_REG_7_MOD_3_RM_3): New.\n+\t(prefix_table): Add respective entries.\n+\t(rm_table): Link to those entries.\n+\n+2019-11-05  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (REG_0F1C_MOD_0): Rename to ...\n+\t(REG_0F1C_P_0_MOD_0): ... this.\n+\t(REG_0F1E_MOD_3): Rename to ...\n+\t(REG_0F1E_P_1_MOD_3): ... this.\n+\t(RM_0F01_REG_5): Rename to ...\n+\t(RM_0F01_REG_5_MOD_3): ... this.\n+\t(RM_0F01_REG_7): Rename to ...\n+\t(RM_0F01_REG_7_MOD_3): ... this.\n+\t(RM_0F1E_MOD_3_REG_7): Rename to ...\n+\t(RM_0F1E_P_1_MOD_3_REG_7): ... this.\n+\t(RM_0FAE_REG_6): Rename to ...\n+\t(RM_0FAE_REG_6_MOD_3_P_0): ... this.\n+\t(RM_0FAE_REG_7): Rename to ...\n+\t(RM_0FAE_REG_7_MOD_3): ... this.\n+\t(PREFIX_MOD_0_0F01_REG_5): Rename to ...\n+\t(PREFIX_0F01_REG_5_MOD_0): ... this.\n+\t(PREFIX_MOD_3_0F01_REG_5_RM_0): Rename to ...\n+\t(PREFIX_0F01_REG_5_MOD_3_RM_0): ... this.\n+\t(PREFIX_MOD_3_0F01_REG_5_RM_2): Rename to ...\n+\t(PREFIX_0F01_REG_5_MOD_3_RM_2): ... this.\n+\t(PREFIX_0FAE_REG_0): Rename to ...\n+\t(PREFIX_0FAE_REG_0_MOD_3): ... this.\n+\t(PREFIX_0FAE_REG_1): Rename to ...\n+\t(PREFIX_0FAE_REG_1_MOD_3): ... this.\n+\t(PREFIX_0FAE_REG_2): Rename to ...\n+\t(PREFIX_0FAE_REG_2_MOD_3): ... this.\n+\t(PREFIX_0FAE_REG_3): Rename to ...\n+\t(PREFIX_0FAE_REG_3_MOD_3): ... this.\n+\t(PREFIX_MOD_0_0FAE_REG_4): Rename to ...\n+\t(PREFIX_0FAE_REG_4_MOD_0): ... this.\n+\t(PREFIX_MOD_3_0FAE_REG_4): Rename to ...\n+\t(PREFIX_0FAE_REG_4_MOD_3): ... this.\n+\t(PREFIX_MOD_0_0FAE_REG_5): Rename to ...\n+\t(PREFIX_0FAE_REG_5_MOD_0): ... this.\n+\t(PREFIX_MOD_3_0FAE_REG_5): Rename to ...\n+\t(PREFIX_0FAE_REG_5_MOD_3): ... this.\n+\t(PREFIX_MOD_0_0FAE_REG_6): Rename to ...\n+\t(PREFIX_0FAE_REG_6_MOD_0): ... this.\n+\t(PREFIX_MOD_1_0FAE_REG_6): Rename to ...\n+\t(PREFIX_0FAE_REG_6_MOD_3): ... this.\n+\t(PREFIX_0FAE_REG_7): Rename to ...\n+\t(PREFIX_0FAE_REG_7_MOD_0): ... this.\n+\t(PREFIX_MOD_0_0FC3): Rename to ...\n+\t(PREFIX_0FC3_MOD_0): ... this.\n+\t(PREFIX_MOD_0_0FC7_REG_6): Rename to ...\n+\t(PREFIX_0FC7_REG_6_MOD_0): ... this.\n+\t(PREFIX_MOD_3_0FC7_REG_6): Rename to ...\n+\t(PREFIX_0FC7_REG_6_MOD_3): ... this.\n+\t(PREFIX_MOD_3_0FC7_REG_7): Rename to ...\n+\t(PREFIX_0FC7_REG_7_MOD_3): ... this.\n+\t(reg_table, prefix_table, mod_table, rm_table): Adjust\n+\taccordingly.\n+\n+2019-11-04  Nick Clifton  <nickc@redhat.com>\n+\n+\t* v850-dis.c (get_v850_sreg_name): New function.  Returns the name\n+\tof a v850 system register.  Move the v850_sreg_names array into\n+\tthis function.\n+\t(get_v850_reg_name): Likewise for ordinary register names.\n+\t(get_v850_vreg_name): Likewise for vector register names.\n+\t(get_v850_cc_name): Likewise for condition codes.\n+\t* get_v850_float_cc_name): Likewise for floating point condition\n+\tcodes.\n+\t(get_v850_cacheop_name): Likewise for cache-ops.\n+\t(get_v850_prefop_name): Likewise for pref-ops.\n+\t(disassemble): Use the new accessor functions.\n+\n+2019-10-30  Delia Burduv   <delia.burduv@arm.com>\n+\n+\t* aarch64-opc.c (print_immediate_offset_address): Don't print the\n+\timmediate for the writeback form of ldraa/ldrab if it is 0.\n+\t* aarch64-tbl.h: Updated the documentation for ADDR_SIMM10.\n+\t* aarch64-opc-2.c: Regenerated.\n+\n+2019-10-30  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_shorthands): Delete.\n+\t(operand_type_init): Expand previous shorthands.\n+\t(set_bitfield_from_shorthand): Rename back to ...\n+\t(set_bitfield_from_cpu_flag_init): ... this.  Drop processing\n+\tof operand_type_init[].\n+\t(set_bitfield): Adjust call to the above function.\n+\t* i386-opc.tbl (Reg8, Reg16, Reg32, Reg64, FloatAcc, FloatReg,\n+\tRegXMM, RegYMM, RegZMM): Define.\n+\t* i386-reg.tbl: Expand prior shorthands.\n+\n+2019-10-30  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (output_i386_opcode): Change order of fields\n+\temitted to output.\n+\t* i386-opc.h (struct insn_template): Move operands field.\n+\tConvert extension_opcode field to unsigned short.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-10-30  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (process_i386_opcode_modifier): Report bogus uses\n+\tof W.\n+\t* i386-opc.h (W): Extend comment.\n+\t* i386-opc.tbl (mov, movabs, movq): Drop W and adjust opcodes of\n+\tgeneral purpose variants not allowing for byte operands.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-10-29  Nick Clifton  <nickc@redhat.com>\n+\n+\t* tic30-dis.c (print_branch): Correct size of operand array.\n+\n+2019-10-29  Nick Clifton  <nickc@redhat.com>\n+\n+\t* d30v-dis.c (print_insn): Check that operand index is valid\n+\tbefore attempting to access the operands array.\n+\n+2019-10-29  Nick Clifton  <nickc@redhat.com>\n+\n+\t* ia64-opc.c (locate_opcode_ent): Prevent a negative shift when\n+\tlocating the bit to be tested.\n+\n+2019-10-29  Nick Clifton  <nickc@redhat.com>\n+\n+\t* s12z-dis.c (opr_emit_disassembly): Check for illegal register\n+\tvalues.\n+\t(shift_size_table): Use a fixed size defined as S12Z_N_SIZES.\n+\t(print_insn_s12z):  Check for illegal size values.\n+\n+2019-10-28  Nick Clifton  <nickc@redhat.com>\n+\n+\t* csky-dis.c (csky_chars_to_number): Check for a negative\n+\tcount. Use an unsigned integer to construct the return value.\n+\n+2019-10-28  Nick Clifton  <nickc@redhat.com>\n+\n+\t* tic30-dis.c (OPERAND_BUFFER_LEN): Define.  Use as length of\n+\toperand buffer.  Set value to 15 not 13.\n+\t(get_register_operand): Use OPERAND_BUFFER_LEN.\n+\t(get_indirect_operand): Likewise.\n+\t(print_two_operand): Likewise.\n+\t(print_three_operand): Likewise.\n+\t(print_oar_insn): Likewise.\n+\n+2019-10-28  Nick Clifton  <nickc@redhat.com>\n+\n+\t* ns32k-dis.c (bit_extract): Add sanitiy check of parameters.\n+\t(bit_extract_simple): Likewise.\n+\t(bit_copy): Likewise.\n+\t(pirnt_insn_ns32k): Ensure that uninitialised elements in the\n+\tindex_offset array are not accessed.\n+\n+2019-10-28  Nick Clifton  <nickc@redhat.com>\n+\n+\t* xgate-dis.c (print_insn): Fix decoding of the XGATE_OP_DYA\n+\toperand.\n+\n+2019-10-25  Nick Clifton  <nickc@redhat.com>\n+\n+\t* rx-dis.c (print_insn_rx): Use parenthesis to ensure correct\n+\taccess to opcodes.op array element.\n+\n+2019-10-23  Nick Clifton  <nickc@redhat.com>\n+\n+\t* rx-dis.c (get_register_name): Fix spelling typo in error\n+\tmessage.\n+\t(get_condition_name, get_flag_name, get_double_register_name)\n+\t(get_double_register_high_name, get_double_register_low_name)\n+\t(get_double_control_register_name, get_double_condition_name)\n+\t(get_opsize_name, get_size_name): Likewise.\n+\n+2019-10-22  Nick Clifton  <nickc@redhat.com>\n+\n+\t* rx-dis.c (get_size_name): New function.  Provides safe\n+\taccess to name array.\n+\t(get_opsize_name): Likewise.\n+\t(print_insn_rx): Use the accessor functions.\n+\n+2019-10-16  Nick Clifton  <nickc@redhat.com>\n+\n+\t* rx-dis.c (get_register_name): New function.  Provides safe\n+\taccess to name array.\n+\t(get_condition_name, get_flag_name, get_double_register_name)\n+\t(get_double_register_high_name, get_double_register_low_name)\n+\t(get_double_control_register_name, get_double_condition_name):\n+\tLikewise.\n+\t(print_insn_rx): Use the accessor functions.\n+\n+2019-10-09  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25041\n+\t* avr-dis.c (avr_operand): Fix construction of address for lds/sts\n+\tinstructions.\n+\n+2019-10-07  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* opcodes/i386-opc.tbl (movsd): Add Dword and IgnoreSize.\n+\t(cmpsd): Likewise. Move EsSeg to other operand.\n+\t* opcodes/i386-tbl.h: Re-generate.\n+\n+2019-09-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* m68k-dis.c: Include cpu-m68k.h\n+\n+2019-09-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* mips-dis.c: Include elfxx-mips.h.  Move \"elf-bfd.h\" and\n+\t\"elf/mips.h\" earlier.\n+\n+2018-09-20  Jan Beulich  <jbeulich@suse.com>\n+\n+\tPR gas/25012\n+\t* i386-opc.tbl (push, pop): Re-instate distinct Cpu64 templates\n+\twith SReg operand.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-09-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* arc-ext.c: Update throughout for bfd section macro changes.\n+\n+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* Makefile.in: Re-generate.\n+\t* configure: Re-generate.\n+\n+2019-09-17  Maxim Blinov  <maxim.blinov@embecosm.com>\n+\n+\t* riscv-opc.c (riscv_opcodes): Change subset field\n+\tto insn_class field for all instructions.\n+\t(riscv_insn_types): Likewise.\n+\n+2019-09-16  Phil Blundell  <pb@pbcl.net>\n+\n+\t* configure: Regenerated.\n+\n+2019-09-10  Miod Vallat  <miod@online.fr>\n+\n+\tPR 24982\n+\t* m68k-opc.c: Correct aliases for tdivsl and tdivul.\n+\n+2019-09-09  Phil Blundell  <pb@pbcl.net>\n+\n+\tbinutils 2.33 branch created.\n+\n+2019-09-03  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24961\n+\t* tic30-dis.c (get_indirect_operand): Check for bufcnt being\n+\tgreater than zero before indexing via (bufcnt -1).\n+\n+2019-09-03  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24958\n+\t* mmix-dis.c (MAX_REG_NAME_LEN): Define.\n+\t(MAX_SPEC_REG_NAME_LEN): Define.\n+\t(struct mmix_dis_info): Use defined constants for array lengths.\n+\t(get_reg_name): New function.\n+\t(get_sprec_reg_name): New function.\n+\t(print_insn_mmix): Use new functions.\n+\n+2019-08-27  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n+\n+\t* arm-dis.c (mve_opcodes): Add entry for MVE_VMOV_VEC_TO_VEC.\n+\t(is_mve_undefined): Add case for MVE_VMOV_VEC_TO_VEC.\n+\t(print_insn_mve): Add condition to check Qm==Qn of VORR instruction.\n+\n+2019-08-22  Kyrylo Tkachov <kyrylo.tkachov@arm.com>\n+\n+\t* aarch64-opc.c (aarch64_sys_regs): Update encoding of tfsre0_el1,\n+\ttfsr_el1, tfsr_el2, tfsr_el3, tfsr_el12.\n+\t(aarch64_sys_reg_supported_p): Update checks for the above.\n+\n+2019-08-12  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n+\n+\t* arm-dis.c (struct mopcode32 mve_opcodes): Modify the mask for\n+\tcases MVE_SQRSHRL and MVE_UQRSHLL.\n+\t(print_insn_mve): Add case for specifier 'k' to check\n+\tspecific bit of the instruction.\n+\n+2019-08-07  Phillipe Antoine  <p.antoine@catenacyber.fr>\n+\n+\tPR 24854\n+\t* arc-dis.c (arc_insn_length): Return 0 rather than aborting when\n+\tencountering an unknown machine type.\n+\t(print_insn_arc): Handle arc_insn_length returning 0.  In error\n+\tcases return -1 rather than calling abort.\n+\n+2019-08-07  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (fld, fstp): Drop FloatMF from extended forms.\n+\t(fldcw, fnstcw, fstcw, fnstsw, fstsw): Replace FloatMF by\n+\tIgnoreSize.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-08-05  Barnaby Wilks  <barnaby.wilks@arm.com>\n+\n+\t* arm-dis.c: Only accept signed variants of VQ(R)DMLAH and VQ(R)DMLASH\n+\tinstructions.\n+\n+2019-07-30  Mel Chen <mel.chen@sifive.com>\n+\n+\t* riscv-opc.c (riscv_opcodes): Set frsr, fssr, frcsr, fscsr, frrm,\n+\tfsrm, fsrmi, frflags, fsflags, fsflagsi to alias instructions.\n+\n+\t* riscv-opc.c (riscv_opcodes): Adjust order of frsr, frcsr, fssr,\n+\tfscsr.\n+\n+2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* arc-dis.c (skip_this_opcode): Check also for 0x07 major opcodes,\n+\tand MPY class instructions.\n+\t(parse_option): Add nps400 option.\n+\t(print_arc_disassembler_options): Add nps400 info.\n+\n+2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* arc-ext-tbl.h (bspeek): Remove it, added to main table.\n+\t(bspop): Likewise.\n+\t(modapp): Likewise.\n+\t* arc-opc.c (RAD_CHK): Add.\n+\t* arc-tbl.h: Regenerate.\n+\n+2019-07-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* aarch64-opc.c (aarch64_sys_regs): Add gmid_el1 entry.\n+\t(aarch64_sys_reg_supported_p): Handle gmid_el1 encoding.\n+\n+2019-07-22  Barnaby Wilks  <barnaby.wilks@arm.com>\n+\n+\t* arm-dis.c (is_mve_unpredictable): Stop marking some MVE\n+\tinstructions as UNPREDICTABLE.\n+\n+2019-07-19  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* bpf-desc.c: Regenerated.\n+\n+2019-07-17  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (static_assert): Define.\n+\t(main): Use it.\n+\t* i386-opc.h (Opcode_Modifier_Max): Rename to ...\n+\t(Opcode_Modifier_Num): ... this.\n+\t(Mem): Delete.\n+\n+2019-07-16  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_types): Move RegMem ...\n+\t(opcode_modifiers): ... here.\n+\t* i386-opc.h (RegMem): Move to opcode modifer enum.\n+\t(union i386_operand_type): Move regmem field ...\n+\t(struct i386_opcode_modifier): ... here.\n+\t* i386-opc.tbl (RegMem): Define.\n+\t(mov, movq): Move RegMem on segment, control, debug, and test\n+\tregister flavors.\n+\t(pextrb): Move RegMem on register only flavors. Add IgnoreSize\n+\tto non-SSE2AVX flavor.\n+\t(extractps, pextrw, vcvtps2ph, vextractps, vpextrb, vpextrw):\n+\tMove RegMem on register only flavors. Drop IgnoreSize from\n+\tlegacy encoding flavors.\n+\t(movss, movsd, vmovss, vmovsd): Drop RegMem from register only\n+\tflavors.\n+\t(vpinsrb, vpinsrw): Drop IgnoreSize where still present on\n+\tregister only flavors.\n+\t(vmovd): Move RegMem and drop IgnoreSize on register only\n+\tflavor. Change opcode and operand order to store form.\n+\t* opcodes/i386-init.h, i386-tbl.h: Re-generate.\n+\n+2019-07-16  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_init, operand_types): Replace SReg\n+\tentries.\n+\t* i386-opc.h (SReg2, SReg3): Replace by ...\n+\t(SReg): ... this.\n+\t(union i386_operand_type): Replace sreg fields.\n+\t* i386-opc.tbl (mov, ): Use SReg.\n+\t(push, pop): Likewies. Drop i386 and x86-64 specific segment\n+\tregister flavors.\n+\t* i386-reg.tbl (cs, ds, es, fs, gs, ss, flat): Use SReg.\n+\t* opcodes/i386-init.h, i386-tbl.h: Re-generate.\n+\n+2019-07-15  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* bpf-desc.c: Regenerate.\n+\t* bpf-opc.c: Likewise.\n+\t* bpf-opc.h: Likewise.\n+\n+2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* bpf-desc.c: Regenerate.\n+\t* bpf-opc.c: Likewise.\n+\n+2019-07-10  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* arm-dis.c (print_insn_coprocessor): Rename index to\n+\tindex_operand.\n+\n+2019-07-05  Kito Cheng <kito.cheng@sifive.com>\n+\n+\t* riscv-opc.c (riscv_insn_types): Add r4 type.\n+\n+\t* riscv-opc.c (riscv_insn_types): Add b and j type.\n+\n+\t* opcodes/riscv-opc.c (riscv_insn_types): Remove incorrect\n+\tformat for sb type and correct s type.\n+\n+2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* aarch64-tbl.h (aarch64_opcode): Set C_SCAN_MOVPRFX for the\n+\tSVE FMOV alias of FCPY.\n+\n+2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* aarch64-tbl.h (aarch64_opcode_table): Add C_MAX_ELEM flags\n+\tto SVE fcvtzs, fcvtzu, scvtf and ucvtf entries.\n+\n+2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* aarch64-opc.c (verify_constraints): Skip GPRs when scanning the\n+\tregisters in an instruction prefixed by MOVPRFX.\n+\n+2019-07-01  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Use new\n+\tsve_size_13 icode to account for variant behaviour of\n+\tpmull{t,b}.\n+\t* aarch64-dis-2.c: Regenerate.\n+\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Use new\n+\tsve_size_13 icode to account for variant behaviour of\n+\tpmull{t,b}.\n+\t* aarch64-tbl.h (OP_SVE_VVV_HD_BS): Add new qualifier.\n+\t(OP_SVE_VVV_Q_D): Add new qualifier.\n+\t(OP_SVE_VVV_QHD_DBS): Remove now unused qualifier.\n+\t(struct aarch64_opcode): Split pmull{t,b} into those requiring\n+\tAES and those not.\n+\n+2019-07-01  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* opcodes/i386-gen.c (operand_type_init): Remove\n+\tOPERAND_TYPE_VEC_IMM4 entry.\n+\t(operand_types): Remove Vec_Imm4.\n+\t* opcodes/i386-opc.h (Vec_Imm4): Delete.\n+\t(union i386_operand_type): Remove vec_imm4.\n+\t* i386-opc.tbl (vpermil2pd, vpermil2ps): Remove Vec_Imm4.\n+\t* opcodes/i386-init.h, i386-tbl.h: Re-generate.\n+\n+2019-07-01  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (lfence, mfence, sfence, monitor, mwait, vmcall,\n+\tvmlaunch, vmresume, vmxoff, vmfunc, xgetbv, xsetbv, swapgs,\n+\trdtscp, clgi, invlpga, skinit, stgi, vmload, vmmcall, vmrun,\n+\tvmsave, montmul, xsha1, xsha256, xstorerng, xcryptecb,\n+\txcryptcbc, xcryptctr, xcryptcfb, xcryptofb, xstore, clac, stac,\n+\tmonitorx, mwaitx): Drop ImmExt from operand-less forms.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-07-01  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (and, or): Add Optimize to forms allowing two\n+\tregister operands.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-07-01  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (C): New.\n+\t(paddb, paddw, paddd, paddq, paddsb, paddsw, paddusb, paddusw,\n+\tpand, pcmpeqb, pcmpeqw, pcmpeqd, pmaddwd, pmulhw, pmullw,\n+\tpor, pxor, andps, cmpeqps, cmpeqss, cmpneqps, cmpneqss,\n+\tcmpordps, cmpordss, cmpunordps, cmpunordss, orps, pavgb, pavgw,\n+\tpmaxsw, pmaxub, pminsw, pminub, pmulhuw, xorps, andpd, cmpeqpd,\n+\tcmpeqsd, cmpneqpd, cmpneqsd, cmpordpd, cmpordsd, cmpunordpd,\n+\tcmpunordsd, orpd, xorpd, pmuludq, vandpd, vandps, vcmpeq_ospd,\n+\tvcmpeq_osps, vcmpeq_ossd, vcmpeq_osss, vcmpeqpd, vcmpeqps,\n+\tvcmpeqsd, vcmpeqss, vcmpeq_uqpd, vcmpeq_uqps, vcmpeq_uqsd,\n+\tvcmpeq_uqss, vcmpeq_uspd, vcmpeq_usps, vcmpeq_ussd,\n+\tvcmpeq_usss, vcmpfalse_ospd, vcmpfalse_osps, vcmpfalse_ossd,\n+\tvcmpfalse_osss, vcmpfalsepd, vcmpfalseps, vcmpfalsesd,\n+\tvcmpfalsess, vcmpneq_oqpd, vcmpneq_oqps, vcmpneq_oqsd,\n+\tvcmpneq_oqss, vcmpneq_ospd, vcmpneq_osps, vcmpneq_ossd,\n+\tvcmpneq_osss, vcmpneqpd, vcmpneqps, vcmpneqsd, vcmpneqss,\n+\tvcmpneq_uspd, vcmpneq_usps, vcmpneq_ussd, vcmpneq_usss,\n+\tvcmpordpd, vcmpordps, vcmpordsd, vcmpord_spd, vcmpord_sps,\n+\tvcmpordss, vcmpord_ssd, vcmpord_sss, vcmptruepd, vcmptrueps,\n+\tvcmptruesd, vcmptruess, vcmptrue_uspd, vcmptrue_usps,\n+\tvcmptrue_ussd, vcmptrue_usss, vcmpunordpd, vcmpunordps,\n+\tvcmpunordsd, vcmpunord_spd, vcmpunord_sps, vcmpunordss,\n+\tvcmpunord_ssd, vcmpunord_sss, vorpd, vorps, vpaddsb, vpaddsw,\n+\tvpaddb, vpaddd, vpaddq, vpaddw, vpaddusb, vpaddusw, vpand,\n+\tvpavgb, vpavgw, vpcmpeqb, vpcmpeqd, vpcmpeqw, vpmaddwd,\n+\tvpmaxsw, vpmaxub, vpminsw, vpminub, vpmulhuw, vpmulhw, vpmullw,\n+\tvpmuludq, vpor, vpxor, vxorpd, vxorps): Add C to VEX-encoded\n+\tflavors.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-07-01  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (and, or): Add Optimize to forms allowing two\n+\tregister operands.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-07-01  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis-evex-prefix.h: Use PCLMUL for vpclmulqdq.\n+\t* i386-opc.tbl (vpclmullqlqdq, vpclmulhqlqdq, vpclmullqhqdq,\n+\tvpclmulhqhqdq): Add CpuVPCLMULQDQ flavors.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-07-01  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vextractps, vpextrw, vpinsrw): Remove\n+\tDisp8MemShift from register only templates.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-07-01  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (EXdScalarS, MOD_EVEX_0F10_PREFIX_1,\n+\tMOD_EVEX_0F10_PREFIX_3, MOD_EVEX_0F11_PREFIX_1,\n+\tMOD_EVEX_0F11_PREFIX_3, EVEX_W_0F10_P_1_M_0,\n+\tEVEX_W_0F10_P_1_M_1, EVEX_W_0F10_P_3_M_0, EVEX_W_0F10_P_3_M_1,\n+\tEVEX_W_0F11_P_1_M_0, EVEX_W_0F11_P_1_M_1, EVEX_W_0F11_P_3_M_0,\n+\tEVEX_W_0F11_P_3_M_1): Delete.\n+\t(EVEX_W_0F10_P_1, EVEX_W_0F10_P_3, EVEX_W_0F11_P_1,\n+\tEVEX_W_0F11_P_3): New.\n+\t* i386-dis-evex-mod.h: Remove MOD_EVEX_0F10_PREFIX_1,\n+\tMOD_EVEX_0F10_PREFIX_3, MOD_EVEX_0F11_PREFIX_1, and\n+\tMOD_EVEX_0F11_PREFIX_3 table entries.\n+\t* i386-dis-evex-prefix.h: Adjust PREFIX_EVEX_0F10 and\n+\tPREFIX_EVEX_0F11 table entries.\n+\t* i386-dis-evex-w.h: Replace EVEX_W_0F10_P_1_M_{0,1},\n+\tEVEX_W_0F10_P_3_M_{0,1}, EVEX_W_0F11_P_1_M_{0,1}, and\n+\tEVEX_W_0F11_P_3_M_{0,1} table entries.\n+\n+2019-07-01  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (EXdVex, EXdVexS, EXqVex, EXqVexS, XMVex):\n+\tDelete.\n+\n+2019-06-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/24719\n+\t* i386-dis-evex-len.h: Add EVEX_LEN_0F38C6_REG_1_PREFIX_2,\n+\tEVEX_LEN_0F38C6_REG_2_PREFIX_2, EVEX_LEN_0F38C6_REG_5_PREFIX_2,\n+\tEVEX_LEN_0F38C6_REG_6_PREFIX_2, EVEX_LEN_0F38C7_R_1_P_2_W_0,\n+\tEVEX_LEN_0F38C7_R_1_P_2_W_1, EVEX_LEN_0F38C7_R_2_P_2_W_0,\n+\tEVEX_LEN_0F38C7_R_2_P_2_W_1, EVEX_LEN_0F38C7_R_5_P_2_W_0,\n+\tEVEX_LEN_0F38C7_R_5_P_2_W_1, EVEX_LEN_0F38C7_R_6_P_2_W_0 and\n+\tEVEX_LEN_0F38C7_R_6_P_2_W_1.\n+\t* i386-dis-evex-prefix.h: Update PREFIX_EVEX_0F38C6_REG_1,\n+\tPREFIX_EVEX_0F38C6_REG_2, PREFIX_EVEX_0F38C6_REG_5 and\n+\tPREFIX_EVEX_0F38C6_REG_6 entries.\n+\t* i386-dis-evex-w.h: Update EVEX_W_0F38C7_R_1_P_2,\n+\tEVEX_W_0F38C7_R_2_P_2, EVEX_W_0F38C7_R_5_P_2 and\n+\tEVEX_W_0F38C7_R_6_P_2 entries.\n+\t* i386-dis.c: Add EVEX_LEN_0F38C6_REG_1_PREFIX_2,\n+\tEVEX_LEN_0F38C6_REG_2_PREFIX_2, EVEX_LEN_0F38C6_REG_5_PREFIX_2,\n+\tEVEX_LEN_0F38C6_REG_6_PREFIX_2, EVEX_LEN_0F38C7_R_1_P_2_W_0,\n+\tEVEX_LEN_0F38C7_R_1_P_2_W_1, EVEX_LEN_0F38C7_R_2_P_2_W_0,\n+\tEVEX_LEN_0F38C7_R_2_P_2_W_1, EVEX_LEN_0F38C7_R_5_P_2_W_0,\n+\tEVEX_LEN_0F38C7_R_5_P_2_W_1, EVEX_LEN_0F38C7_R_6_P_2_W_0 and\n+\tEVEX_LEN_0F38C7_R_6_P_2_W_1 enums.\n+\n+2019-06-27  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (VEX_LEN_0F2A_P_1, VEX_LEN_0F2A_P_3,\n+\tVEX_LEN_0F2C_P_1, VEX_LEN_0F2C_P_3, VEX_LEN_0F2D_P_1,\n+\tVEX_LEN_0F2D_P_3): Delete.\n+\t(vex_len_table): Move vcvtsi2ss, vcvtsi2sd, vcvttss2si,\n+\tvcvttsd2si, vcvtss2si, and vcvtsd2si leaf entries ...\n+\t(prefix_table): ... here.\n+\n+2019-06-27  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (Iq): Delete.\n+\t(Id): New.\n+\t(reg_table): Use it for lwpins, lwpval, and bextr. Use Edq for\n+\tTBM insns.\n+\t(vex_len_table): Use Edq for vcvtsi2ss, vcvtsi2sd. Use Gdq for\n+\tvcvttss2si, vcvttsd2si, vcvtss2si, and vcvtsd2si.\n+\t(OP_E_memory): Also honor needindex when deciding whether an\n+\taddress size prefix needs printing.\n+\t(OP_I): Remove handling of q_mode. Add handling of d_mode.\n+\n+2019-06-26  Jim Wilson  <jimw@sifive.com>\n+\n+\tPR binutils/24739\n+\t* riscv-dis.c (riscv_disasemble_insn): Set info->endian_code.\n+\tSet info->display_endian to info->endian_code.\n+\n+2019-06-25  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_init): Correct OPERAND_TYPE_DEBUG\n+\tentry. Drop OPERAND_TYPE_ACC entry. Add OPERAND_TYPE_ACC8 and\n+\tOPERAND_TYPE_ACC16 entries. Adjust OPERAND_TYPE_ACC32 and\n+\tOPERAND_TYPE_ACC64 entries.\n+\t* i386-init.h: Re-generate.\n+\n+2019-06-25  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (Edqa, dqa_mode, EVEX_W_0F2A_P_1, EVEX_W_0F7B_P_1):\n+\tDelete.\n+\t(intel_operand_size, OP_E_register, OP_E_memory): Drop handling\n+\tof dqa_mode.\n+\t* i386-dis-evex-prefix.h: Move vcvtsi2ss and vcvtusi2ss leaf\n+\tentries here.\n+\t* i386-dis-evex-w.h: Drop EVEX_W_0F2A_P_1 and EVEX_W_0F7B_P_1\n+\tentries. Use Edq for vcvtsi2sd and vcvtusi2sd.\n+\n+2019-06-25  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (OP_I64): Forword more cases to OP_I(). Drop local\n+\tvariables.\n+\n+2019-06-25  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (prefix_table): Use Edq for cvtsi2ss and cvtsi2sd.\n+\tUse Gdq for cvttss2si, cvttsd2si, cvtss2si, and cvtsd2si, and\n+\tmovnti.\n+\t* i386-opc.tbl (movnti): Add IgnoreSize.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-06-25  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (and): Mark Imm8S form for optimization.\n+\t* i386-tbl.h: Re-generate.\n+\n+2019-06-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-dis-evex.h: Break into ...\n+\t* i386-dis-evex-len.h: New file.\n+\t* i386-dis-evex-mod.h: Likewise.\n+\t* i386-dis-evex-prefix.h: Likewise.\n+\t* i386-dis-evex-reg.h: Likewise.\n+\t* i386-dis-evex-w.h: Likewise.\n+\t* i386-dis.c: Include i386-dis-evex-reg.h, i386-dis-evex-prefix.h,\n+\ti386-dis-evex.h, i386-dis-evex-len.h, i386-dis-evex-w.h and\n+\ti386-dis-evex-mod.h.\n+\n+2019-06-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/24700\n+\t* i386-dis-evex.h (evex_table): Update EVEX_W_0F3819_P_2,\n+\tEVEX_W_0F381A_P_2, EVEX_W_0F381B_P_2, EVEX_W_0F385A_P_2 and\n+\tEVEX_W_0F385B_P_2.\n+\t(evex_len_table): Add EVEX_LEN_0F3819_P_2_W_0,\n+\tEVEX_LEN_0F3819_P_2_W_1, EVEX_LEN_0F381A_P_2_W_0,\n+\tEVEX_LEN_0F381A_P_2_W_1, EVEX_LEN_0F381B_P_2_W_0,\n+\tEVEX_LEN_0F381B_P_2_W_1, EVEX_LEN_0F385A_P_2_W_0,\n+\tEVEX_LEN_0F385A_P_2_W_1, EVEX_LEN_0F385B_P_2_W_0 and\n+\tEVEX_LEN_0F385B_P_2_W_1.\n+\t* i386-dis.c (EVEX_LEN_0F3819_P_2_W_0): New enum.\n+\t(EVEX_LEN_0F3819_P_2_W_1): Likewise.\n+\t(EVEX_LEN_0F381A_P_2_W_0): Likewise.\n+\t(EVEX_LEN_0F381A_P_2_W_1): Likewise.\n+\t(EVEX_LEN_0F381B_P_2_W_0): Likewise.\n+\t(EVEX_LEN_0F381B_P_2_W_1): Likewise.\n+\t(EVEX_LEN_0F385A_P_2_W_0): Likewise.\n+\t(EVEX_LEN_0F385A_P_2_W_1): Likewise.\n+\t(EVEX_LEN_0F385B_P_2_W_0): Likewise.\n+\t(EVEX_LEN_0F385B_P_2_W_1): Likewise.\n+\n+2019-06-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/24691\n+\t* i386-dis-evex.h (evex_table): Update EVEX_W_0F3A23_P_2,\n+\tEVEX_W_0F3A38_P_2, EVEX_W_0F3A39_P_2, EVEX_W_0F3A3A_P_2,\n+\tEVEX_W_0F3A3B_P_2 and EVEX_W_0F3A43_P_2.\n+\t(evex_len_table): Add EVEX_LEN_0F3A23_P_2_W_0,\n+\tEVEX_LEN_0F3A23_P_2_W_1, EVEX_LEN_0F3A38_P_2_W_0,\n+\tEVEX_LEN_0F3A38_P_2_W_1, EVEX_LEN_0F3A39_P_2_W_0,\n+\tEVEX_LEN_0F3A39_P_2_W_1, EVEX_LEN_0F3A3A_P_2_W_0,\n+\tEVEX_LEN_0F3A3A_P_2_W_1, EVEX_LEN_0F3A3B_P_2_W_0,\n+\tEVEX_LEN_0F3A3B_P_2_W_1, EVEX_LEN_0F3A43_P_2_W_0 and\n+\tEVEX_LEN_0F3A43_P_2_W_1.\n+\t* i386-dis.c (EVEX_LEN_0F3A23_P_2_W_0): New enum.\n+\t(EVEX_LEN_0F3A23_P_2_W_1): Likewise.\n+\t(EVEX_LEN_0F3A38_P_2_W_0): Likewise.\n+\t(EVEX_LEN_0F3A38_P_2_W_1): Likewise.\n+\t(EVEX_LEN_0F3A39_P_2_W_0): Likewise.\n+\t(EVEX_LEN_0F3A39_P_2_W_1): Likewise.\n+\t(EVEX_LEN_0F3A3A_P_2_W_0): Likewise.\n+\t(EVEX_LEN_0F3A3A_P_2_W_1): Likewise.\n+\t(EVEX_LEN_0F3A3B_P_2_W_0): Likewise.\n+\t(EVEX_LEN_0F3A3B_P_2_W_1): Likewise.\n+\t(EVEX_LEN_0F3A43_P_2_W_0): Likewise.\n+\t(EVEX_LEN_0F3A43_P_2_W_1): Likewise.\n+\n+2019-06-14  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/fr.po; Updated French translation.\n+\n+2019-06-13  Stafford Horne  <shorne@gmail.com>\n+\n+\t* or1k-asm.c: Regenerated.\n+\t* or1k-desc.c: Regenerated.\n+\t* or1k-desc.h: Regenerated.\n+\t* or1k-dis.c: Regenerated.\n+\t* or1k-ibld.c: Regenerated.\n+\t* or1k-opc.c: Regenerated.\n+\t* or1k-opc.h: Regenerated.\n+\t* or1k-opinst.c: Regenerated.\n+\n+2019-06-12  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\t* ppc-opc.c (powerpc_opcodes) <ldmx>: Delete mnemonic.\n+\n+2019-06-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/24633\n+\t* i386-dis-evex.h (evex_table): Update EVEX_W_0F3A18_P_2,\n+\tEVEX_W_0F3A19_P_2, EVEX_W_0F3A1A_P_2 and EVEX_W_0F3A1B_P_2.\n+\t(evex_len_table): EVEX_LEN_0F3A18_P_2_W_0,\n+\tEVEX_LEN_0F3A18_P_2_W_1, EVEX_LEN_0F3A19_P_2_W_0,\n+\tEVEX_LEN_0F3A19_P_2_W_1, EVEX_LEN_0F3A1A_P_2_W_0,\n+\tEVEX_LEN_0F3A1A_P_2_W_1, EVEX_LEN_0F3A1B_P_2_W_0,\n+\tEVEX_LEN_0F3A1B_P_2_W_1.\n+\t* i386-dis.c (EVEX_LEN_0F3A18_P_2_W_0): New enum.\n+\t(EVEX_LEN_0F3A18_P_2_W_1): Likewise.\n+\t(EVEX_LEN_0F3A19_P_2_W_0): Likewise.\n+\t(EVEX_LEN_0F3A19_P_2_W_1): Likewise.\n+\t(EVEX_LEN_0F3A1A_P_2_W_0): Likewise.\n+\t(EVEX_LEN_0F3A1A_P_2_W_1): Likewise.\n+\t(EVEX_LEN_0F3A1B_P_2_W_0): Likewise.\n+\t(EVEX_LEN_0F3A1B_P_2_W_1): Likewise.\n+\n+2019-06-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/24626\n+\t* i386-dis.c (print_insn): Check for unused VEX.vvvv and\n+\tEVEX.vvvv when disassembling VEX and EVEX instructions.\n+\t(OP_VEX): Set vex.register_specifier to 0 after readding\n+\tvex.register_specifier.\n+\t(OP_Vex_2src_1): Likewise.\n+\t(OP_Vex_2src_2): Likewise.\n+\t(OP_LWP_E): Likewise.\n+\t(OP_EX_Vex): Don't check vex.register_specifier.\n+\t(OP_XMM_Vex): Likewise.\n+\n+2019-06-04  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\t    Lili Cui  <lili.cui@intel.com>\n+\n+\t* i386-dis.c (enum): Add PREFIX_EVEX_0F3868, EVEX_W_0F3868_P_3.\n+\t* i386-dis-evex.h (evex_table): Add AVX512_VP2INTERSECT\n+\tinstructions.\n+\t* i386-gen.c (cpu_flag_init): Add CPU_AVX512_VP2INTERSECT_FLAGS,\n+\tCPU_ANY_AVX512_VP2INTERSECT_FLAGS.\n+\t(cpu_flags): Add CpuAVX512_VP2INTERSECT.\n+\t* i386-opc.h (enum): Add CpuAVX512_VP2INTERSECT.\n+\t(i386_cpu_flags): Add cpuavx512_vp2intersect.\n+\t* i386-opc.tbl: Add AVX512_VP2INTERSECT insns.\n+\t* i386-init.h: Regenerated.\n+\t* i386-tbl.h: Likewise.\n+\n+2019-06-04  Xuepeng Guo  <xuepeng.guo@intel.com>\n+\t    Lili Cui  <lili.cui@intel.com>\n+\n+\t* doc/c-i386.texi: Document enqcmd.\n+\t* testsuite/gas/i386/enqcmd-intel.d: New file.\n+\t* testsuite/gas/i386/enqcmd-inval.l: Likewise.\n+\t* testsuite/gas/i386/enqcmd-inval.s: Likewise.\n+\t* testsuite/gas/i386/enqcmd.d: Likewise.\n+\t* testsuite/gas/i386/enqcmd.s: Likewise.\n+\t* testsuite/gas/i386/x86-64-enqcmd-intel.d: Likewise.\n+\t* testsuite/gas/i386/x86-64-enqcmd-inval.l: Likewise.\n+\t* testsuite/gas/i386/x86-64-enqcmd-inval.s: Likewise.\n+\t* testsuite/gas/i386/x86-64-enqcmd.d: Likewise.\n+\t* testsuite/gas/i386/x86-64-enqcmd.s: Likewise.\n+\t* testsuite/gas/i386/i386.exp: Run enqcmd-intel, enqcmd-inval,\n+\tenqcmd, x86-64-enqcmd-intel, x86-64-enqcmd-inval,\n+\tand x86-64-enqcmd.\n+\n+2019-06-04  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* arm-dis.c (is_mve_unpredictable): Remove spurious paranthesis.\n+\n+2019-06-03  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-dis.c (prefix_opcd_indices): Correct size.\n+\n+2019-05-28  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/24625\n+\t* i386-opc.tbl: Add CheckRegSize to AVX512_BF16 instructions with\n+\tDisp8ShiftVL.\n+\t* i386-tbl.h: Regenerated.\n+\n+2019-05-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* po/POTFILES.in: Regenerate.\n+\n+2019-05-24  Peter Bergner  <bergner@linux.ibm.com>\n+\t    Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-opc.c (insert_d34, extract_d34, insert_nsi34, extract_nsi34),\n+\t(insert_pcrel, extract_pcrel, extract_pcrel0): New functions.\n+\t(extract_esync, extract_raq, extract_tbr, extract_sxl): Comment.\n+\t(powerpc_operands <D34, SI34, NSI34, PRA0, PRAQ, PCREL, PCREL0,\n+\tXTOP>): Define and add entries.\n+\t(P8LS, PMLS, P_D_MASK, P_DRAPCREL_MASK): Define.\n+\t(prefix_opcodes): Add pli, paddi, pla, psubi, plwz, plbz, pstw,\n+\tpstb, plhz, plha, psth, plfs, plfd, pstfs, pstfd, plq, plxsd,\n+\tplxssp, pld, plwa, pstxsd, pstxssp, pstxv, pstd, and pstq.\n+\n+2019-05-24  Peter Bergner  <bergner@linux.ibm.com>\n+\t    Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-dis.c (ppc_opts): Add \"future\" entry.\n+\t(PREFIX_OPCD_SEGS): Define.\n+\t(prefix_opcd_indices): New array.\n+\t(disassemble_init_powerpc): Initialize prefix_opcd_indices.\n+\t(lookup_prefix): New function.\n+\t(print_insn_powerpc): Handle 64-bit prefix instructions.\n+\t* ppc-opc.c (PREFIX_OP, PREFIX_FORM, SUFFIX_MASK, PREFIX_MASK),\n+\t(PMRR, POWERXX): Define.\n+\t(prefix_opcodes): New instruction table.\n+\t(prefix_num_opcodes): New constant.\n+\n+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* configure.ac (SHARED_DEPENDENCIES): Add case for bfd_bpf_arch.\n+\t* configure: Regenerated.\n+\t* Makefile.am: Add rules for the files generated from cpu/bpf.cpu\n+\tand cpu/bpf.opc.\n+\t(HFILES): Add bpf-desc.h and bpf-opc.h.\n+\t(TARGET_LIBOPCODES_CFILES): Add bpf-asm.c, bpf-desc.c, bpf-dis.c,\n+\tbpf-ibld.c and bpf-opc.c.\n+\t(BPF_DEPS): Define.\n+\t* Makefile.in: Regenerated.\n+\t* disassemble.c (ARCH_bpf): Define.\n+\t(disassembler): Add case for bfd_arch_bpf.\n+\t(disassemble_init_for_target): Likewise.\n+\t(enum epbf_isa_attr): Define.\n+\t* disassemble.h: extern print_insn_bpf.\n+\t* bpf-asm.c: Generated.\n+\t* bpf-opc.h: Likewise.\n+\t* bpf-opc.c: Likewise.\n+\t* bpf-ibld.c: Likewise.\n+\t* bpf-dis.c: Likewise.\n+\t* bpf-desc.h: Likewise.\n+\t* bpf-desc.c: Likewise.\n+\n+2019-05-21  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (coprocessor_opcodes): New instructions for VMRS\n+\tand VMSR with the new operands.\n+\n+2019-05-21  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): New enum\n+\tfor csinc, csinv, csneg, csel, cset, csetm, cinv, cinv\n+\tand cneg.\n+\t(mve_opcodes): New instructions as above.\n+\t(is_mve_encoding_conflict): Add cases for csinc, csinv,\n+\tcsneg and csel.\n+\t(print_insn_mve): Accept new %<bitfield>c and %<bitfield>C.\n+\n+2019-05-21  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (emun mve_instructions): Updated for new instructions.\n+\t(mve_opcodes): New instructions for asrl, lsll, lsrl, sqrshrl,\n+\tsqrshr, sqshl, sqshll, srshr, srshrl, uqrshll, uqrshl, uqshll,\n+\tuqshl, urshrl and urshr.\n+\t(is_mve_okay_in_it): Add new instructions to TRUE list.\n+\t(is_mve_unpredictable): Add cases for UNPRED_R13 and UNPRED_R15.\n+\t(print_insn_mve): Updated to accept new %j,\n+\t%<bitfield>m and %<bitfield>n patterns.\n+\n+2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n+\n+\t* mips-opc.c (mips_builtin_opcodes): Change source register\n+\tconstraint for DAUI.\n+\n+2019-05-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/fr.po: Updated French translation.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n+\t(enum mve_instructions): Likewise.\n+\t(enum mve_undefined): Add new reasons.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_undefined): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_undefined): Likewise.\n+\t(print_mve_size): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n+\t(enum mve_instructions): Likewise.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_undefined): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_size): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n+\t(enum mve_instructions): Likewise.\n+\t(is_mve_encoding_conflict): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_size): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n+\t(enum mve_instructions): Likewise.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_undefined): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_size): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n+\t(enum mve_instructions): Likewise.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_undefined): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_size): Likewise.\n+\t(print_insn_mve): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n+\t(print_insn_thumb32): Handle new instructions.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(enum mve_undefined): Add new reasons.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_undefined): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_undefined): Likewise.\n+\t(print_mve_size): Likewise.\n+\t(print_mve_shift_n): Likewise.\n+\t(print_insn_mve): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_rotate): Likewise.\n+\t(print_mve_size): Likewise.\n+\t(print_insn_mve): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_size): Likewise.\n+\t(print_insn_mve): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(enum mve_undefined): Add new reasons.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_undefined): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_undefined): Likewise.\n+\t(print_mve_size): Likewise.\n+\t(print_insn_mve): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_undefined): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_size): Likewise.\n+\t(print_insn_mve): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(enum mve_unpredictable): Add new reasons.\n+\t(enum mve_undefined): Likewise.\n+\t(is_mve_okay_in_it): Handle new isntructions.\n+\t(is_mve_encoding_conflict): Likewise.\n+\t(is_mve_undefined): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_vmov_index): Likewise.\n+\t(print_simd_imm8): Likewise.\n+\t(print_mve_undefined): Likewise.\n+\t(print_mve_unpredictable): Likewise.\n+\t(print_mve_size): Likewise.\n+\t(print_insn_mve): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(enum mve_unpredictable): Add new reasons.\n+\t(enum mve_undefined): Likewise.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_undefined): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_undefined): Likewise.\n+\t(print_mve_unpredictable): Likewise.\n+\t(print_mve_rounding_mode): Likewise.\n+\t(print_mve_vcvt_size): Likewise.\n+\t(print_mve_size): Likewise.\n+\t(print_insn_mve): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(enum mve_unpredictable): Add new reasons.\n+\t(enum mve_undefined): Likewise.\n+\t(is_mve_undefined): Handle new instructions.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_undefined): Likewise.\n+\t(print_mve_unpredictable): Likewise.\n+\t(print_mve_size): Likewise.\n+\t(print_insn_mve): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(enum mve_undefined): Add new reasons.\n+\t(insns): Add new instructions.\n+\t(is_mve_encoding_conflict):\n+\t(print_mve_vld_str_addr): New print function.\n+\t(is_mve_undefined): Handle new instructions.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_undefined): Likewise.\n+\t(print_mve_size): Likewise.\n+\t(print_insn_coprocessor_1): Handle MVE VLDR, VSTR instructions.\n+\t(print_insn_mve):  Handle new operands.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(enum mve_unpredictable): Add new reasons.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_unpredictable): Likewise.\n+\t(mve_opcodes): Add new instructions.\n+\t(print_mve_unpredictable): Handle new reasons.\n+\t(print_mve_register_blocks): New print function.\n+\t(print_mve_size): Handle new instructions.\n+\t(print_insn_mve): Likewise.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(enum mve_unpredictable): Add new reasons.\n+\t(enum mve_undefined): Likewise.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_undefined): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(coprocessor_opcodes): Move NEON VDUP from here...\n+\t(neon_opcodes): ... to here.\n+\t(mve_opcodes): Add new instructions.\n+\t(print_mve_undefined):  Handle new reasons.\n+\t(print_mve_unpredictable): Likewise.\n+\t(print_mve_size): Handle new instructions.\n+\t(print_insn_neon): Handle vdup.\n+\t(print_insn_mve): Handle new operands.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(enum mve_unpredictable): Add new values.\n+\t(mve_opcodes): Add new instructions.\n+\t(vec_condnames): New array with vector conditions.\n+\t(mve_predicatenames): New array with predicate suffixes.\n+\t(mve_vec_sizename): New array with vector sizes.\n+\t(enum vpt_pred_state): New enum with vector predication states.\n+\t(struct vpt_block): New struct type for vpt blocks.\n+\t(vpt_block_state): Global struct to keep track of state.\n+\t(mve_extract_pred_mask): New helper function.\n+\t(num_instructions_vpt_block): Likewise.\n+\t(mark_outside_vpt_block): Likewise.\n+\t(mark_inside_vpt_block): Likewise.\n+\t(invert_next_predicate_state): Likewise.\n+\t(update_next_predicate_state): Likewise.\n+\t(update_vpt_block_state): Likewise.\n+\t(is_vpt_instruction): Likewise.\n+\t(is_mve_encoding_conflict): Add entries for new instructions.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_unpredictable): Handle new cases.\n+\t(print_instruction_predicate): Likewise.\n+\t(print_mve_size): New function.\n+\t(print_vec_condition): New function.\n+\t(print_insn_mve): Handle vpt blocks and new print operands.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* arm-dis.c (print_insn_coprocessor_1): Disable the use of coprocessors\n+\t8, 14 and 15 for Armv8.1-M Mainline.\n+\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): New enum.\n+\t(enum mve_unpredictable): Likewise.\n+\t(enum mve_undefined): Likewise.\n+\t(struct mopcode32): New struct.\n+\t(is_mve_okay_in_it): New function.\n+\t(is_mve_architecture): Likewise.\n+\t(arm_decode_field): Likewise.\n+\t(arm_decode_field_multiple): Likewise.\n+\t(is_mve_encoding_conflict): Likewise.\n+\t(is_mve_undefined): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_undefined): Likewise.\n+\t(print_mve_unpredictable): Likewise.\n+\t(print_insn_coprocessor_1): Use arm_decode_field_multiple.\n+\t(print_insn_mve): New function.\n+\t(print_insn_thumb32): Handle MVE architecture.\n+\t(select_arm_features): Force thumb for Armv8.1-m Mainline.\n+\n+2019-05-10  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24538\n+\t* ia64-opc.c (ia64_find_matching_opcode): Check for reaching the\n+\tend of the table prematurely.\n+\n+2019-05-10  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n+\n+        * mips-opc.c (mips_opcodes): Enable ADD, SUB, DADD and DSUB\n+\tmacros for R6.\n+\n+2019-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-dis.c (print_insn_powerpc) Don't skip optional operands\n+\twhen -Mraw is in effect.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-dis-2.c: Regenerate.\n+\t* aarch64-tbl.h (OP_SVE_BBU): New variant set.\n+\t(OP_SVE_BBB): New variant set.\n+\t(OP_SVE_DDDD): New variant set.\n+\t(OP_SVE_HHH): New variant set.\n+\t(OP_SVE_HHHU): New variant set.\n+\t(OP_SVE_SSS): New variant set.\n+\t(OP_SVE_SSSU): New variant set.\n+\t(OP_SVE_SHH): New variant set.\n+\t(OP_SVE_SBBU): New variant set.\n+\t(OP_SVE_DSS): New variant set.\n+\t(OP_SVE_DHHU): New variant set.\n+\t(OP_SVE_VMV_HSD_BHS): New variant set.\n+\t(OP_SVE_VVU_HSD_BHS): New variant set.\n+\t(OP_SVE_VVVU_SD_BH): New variant set.\n+\t(OP_SVE_VVVU_BHSD): New variant set.\n+\t(OP_SVE_VVV_QHD_DBS): New variant set.\n+\t(OP_SVE_VVV_HSD_BHS): New variant set.\n+\t(OP_SVE_VVV_HSD_BHS2): New variant set.\n+\t(OP_SVE_VVV_BHS_HSD): New variant set.\n+\t(OP_SVE_VV_BHS_HSD): New variant set.\n+\t(OP_SVE_VVV_SD): New variant set.\n+\t(OP_SVE_VVU_BHS_HSD): New variant set.\n+\t(OP_SVE_VZVV_SD): New variant set.\n+\t(OP_SVE_VZVV_BH): New variant set.\n+\t(OP_SVE_VZV_SD): New variant set.\n+\t(aarch64_opcode_table): Add sve2 instructions.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n+\tfor SVE_SHLIMM_UNPRED_22.\n+\t(aarch64_print_operand): Add printing for SVE_SHLIMM_UNPRED_22.\n+\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_SHLIMM_UNPRED_22\n+\toperand.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n+\tsve_size_tsz_bhs iclass encode.\n+\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n+\tsve_size_tsz_bhs iclass decode.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n+\tfor SVE_Zm4_11_INDEX.\n+\t(aarch64_print_operand): Add printing for SVE_Zm4_11_INDEX.\n+\t(fields): Handle SVE_i2h field.\n+\t* aarch64-opc.h (enum aarch64_field_kind): New SVE_i2h field.\n+\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_Zm4_11_INDEX operand.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n+\tsve_shift_tsz_bhsd iclass encode.\n+\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n+\tsve_shift_tsz_bhsd iclass decode.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\t* aarch64-asm.c (aarch64_ins_sve_shrimm):\n+\t(aarch64_encode_variant_using_iclass): Handle\n+\tsve_shift_tsz_hsd iclass encode.\n+\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n+\tsve_shift_tsz_hsd iclass decode.\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n+\tfor SVE_SHRIMM_UNPRED_22.\n+\t(aarch64_print_operand): Add printing for SVE_SHRIMM_UNPRED_22.\n+\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_SHRIMM_UNPRED_22\n+\toperand.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n+\tsve_size_013 iclass encode.\n+\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n+\tsve_size_013 iclass decode.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n+\tsve_size_bh iclass encode.\n+\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n+\tsve_size_bh iclass decode.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n+\tsve_size_sd2 iclass encode.\n+\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n+\tsve_size_sd2 iclass decode.\n+\t* aarch64-opc.c (fields): Handle SVE_sz2 field.\n+\t* aarch64-opc.h (enum aarch64_field_kind): New SVE_sz2 field.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n+\tfor SVE_ADDR_ZX.\n+\t(aarch64_print_operand): Add printing for SVE_ADDR_ZX.\n+\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_ADDR_ZX operand.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n+\tfor SVE_Zm3_11_INDEX.\n+\t(aarch64_print_operand): Add printing for SVE_Zm3_11_INDEX.\n+\t(fields): Handle SVE_i3l and SVE_i3h2 fields.\n+\t* aarch64-opc.h (enum aarch64_field_kind): New SVE_i3l and SVE_i3h2\n+\tfields.\n+\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_Zm3_11_INDEX operand.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n+\tsve_size_hsd2 iclass encode.\n+\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n+\tsve_size_hsd2 iclass decode.\n+\t* aarch64-opc.c (fields): Handle SVE_size field.\n+\t* aarch64-opc.h (enum aarch64_field_kind): New SVE_size field.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n+\tfor SVE_IMM_ROT3.\n+\t(aarch64_print_operand): Add printing for SVE_IMM_ROT3.\n+\t(fields): Handle SVE_rot3 field.\n+\t* aarch64-opc.h (enum aarch64_field_kind): New SVE_rot3 field.\n+\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_IMM_ROT3 operand.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-opc.c (verify_constraints): Check for movprfx for sve2\n+\tinstructions.\n+\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-tbl.h\n+\t(aarch64_feature_sve2, aarch64_feature_sve2aes,\n+\taarch64_feature_sve2sha3, aarch64_feature_sve2sm4,\n+\taarch64_feature_sve2bitperm): New feature sets.\n+\t(SVE2, SVE2_AES, SVE2_SHA3, SVE2_SM4, SVE2_BITPERM): New macros\n+\tfor feature set addresses.\n+\t(SVE2_INSN, SVE2_INSNC, SVE2AES_INSN, SVE2SHA3_INSN,\n+\tSVE2SM4_INSN, SVE2SM4_INSNC, SVE2BITPERM_INSN): New macros.\n+\n+2019-05-06  Andrew Bennett  <andrew.bennett@imgtec.com>\n+\t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n+\n+\t* mips-dis.c (mips_calculate_combination_ases): Add ISA\n+\targument and set ASE_EVA_R6 appropriately.\n+\t(set_default_mips_dis_options): Pass ISA to above.\n+\t(parse_mips_dis_option): Likewise.\n+\t* mips-opc.c (EVAR6): New macro.\n+\t(mips_builtin_opcodes): Add llwpe, scwpe.\n+\n+2019-05-01  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Add case for\n+\tAARCH64_OPND_TME_UIMM16.\n+\t(aarch64_print_operand): Likewise.\n+\t* aarch64-tbl.h (QL_IMM_NIL): New.\n+\t(TME): New.\n+\t(_TME_INSN): New.\n+\t(struct aarch64_opcode): Add tstart, tcommit, ttest and tcancel.\n+\n+2019-04-29  John Darrington  <john@darrington.wattle.id.au>\n+\n+        * s12z-opc.c (shift_discrim): Return OP_INVALID when reading fails.\n+\n+2019-04-26  Andrew Bennett  <andrew.bennett@imgtec.com>\n+\t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n+\n+\t* mips-opc.c (mips_builtin_opcodes): Add llwp, lldp, scwp, scdp.\n+\n+2019-04-24  John Darrington  <john@darrington.wattle.id.au>\n+\n+        * s12z-opc.h: Add extern \"C\" bracketing to help\n+\tusers who wish to use this interface in c++ code.\n+\n+2019-04-24  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* s12z-opc.c (bm_decode): Handle bit map operations with the\n+\t\"reserved0\" mode.\n+\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* arm-dis.c (coprocessor_opcodes): Document new %J and %K format\n+\tspecifier.  Add entries for VLDR and VSTR of system registers.\n+\t(print_insn_coprocessor): Forbid coprocessor numbers 8, 14 and 15 in\n+\tcoprocessor instructions on Armv8.1-M Mainline targets.  Add handling\n+\tof %J and %K format specifier.\n+\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* arm-dis.c (coprocessor_opcodes): Document new %C format control code.\n+\tAdd new entries for VSCCLRM instruction.\n+\t(print_insn_coprocessor): Handle new %C format control code.\n+\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* arm-dis.c (enum isa): New enum.\n+\t(struct sopcode32): New structure.\n+\t(coprocessor_opcodes): change type of entries to struct sopcode32 and\n+\tset isa field of all current entries to ANY.\n+\t(print_insn_coprocessor): Change type of insn to struct sopcode32.\n+\tOnly match an entry if its isa field allows the current mode.\n+\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* arm-dis.c (thumb_opcodes): Document %n control code.  Add entry for\n+\tCLRM.\n+\t(print_insn_thumb32): Add logic to print %n CLRM register list.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (print_insn_thumb32): Updated to accept new %P\n+\tand %Q patterns.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (thumb32_opcodes): New instruction bfcsel.\n+\t(print_insn_thumb32): Edit the switch case for %Z.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (print_insn_thumb32): Updated to accept new %Z pattern.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (thumb32_opcodes): New instruction bfl.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (print_insn_thumb32): Updated to accept new %Y pattern.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (print_insn_thumb32): Add '%<bitfield>S' to print an\n+\tArm register with r13 and r15 unpredictable.\n+\t(thumb32_opcodes): New instructions for bfx and bflx.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (thumb32_opcodes): New instructions for bf.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (print_insn_thumb32): Updated to accept new %W pattern.\n+\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (print_insn_thumb32): Updated to accept new %G pattern.\n+\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* arm-dis.c (select_arm_features): Add logic for Armv8.1-M Mainline.\n+\n+2019-04-12  John Darrington <john@darrington.wattle.id.au>\n+\n+\ts12z-dis.c, s12z-opc.c, s12z-opc.h: Replace \"operator\" with\n+\t\"optr\". (\"operator\" is a reserved word in c++).\n+\n+2019-04-11  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-opc.c (aarch64_print_operand): Add case for\n+\tAARCH64_OPND_Rt_SP.\n+\t(verify_constraints): Likewise.\n+\t* aarch64-tbl.h (QL_LDST_AT): Update to add SP qualifier.\n+\t(struct aarch64_opcode): Update stg, stzg, st2g, stz2g instructions\n+\tto accept Rt|SP as first operand.\n+\t(AARCH64_OPERANDS): Add new Rt_SP.\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\n+2019-04-11  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Likewise.\n+\t* aarch64-opc-2.c: Likewise.\n+\t* aarch64-tbl.h (aarch64_opcode): Add new ldgm and stgm.\n+\n+2019-04-09  Robert Suchanek  <robert.suchanek@mips.com>\n+\n+\t* mips-opc.c (mips_builtin_opcodes): Add RDHWR rt rd sel.\n+\n+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-opc.tbl: Consolidate AVX512 BF16 entries.\n+\t* i386-init.h: Regenerated.\n+\n+2019-04-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-dis.c (print_insn_powerpc): Use a tiny state machine\n+\top_separator to control printing of spaces, comma and parens\n+\trather than need_comma, need_paren and spaces vars.\n+\n+2019-04-07  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24421\n+\t* arm-dis.c (print_insn_coprocessor): Correct bracket placement.\n+\t(print_insn_neon, print_insn_arm): Likewise.\n+\n+2019-04-05  Xuepeng Guo  <xuepeng.guo@intel.com>\n+\n+\t* i386-dis-evex.h (evex_table): Updated to support BF16\n+\tinstructions.\n+\t* i386-dis.c (enum): Add EVEX_W_0F3852_P_1, EVEX_W_0F3872_P_1\n+\tand EVEX_W_0F3872_P_3.\n+\t* i386-gen.c (cpu_flag_init): Add CPU_AVX512_BF16_FLAGS.\n+\t(cpu_flags): Add bitfield for CpuAVX512_BF16.\n+\t* i386-opc.h (enum): Add CpuAVX512_BF16.\n+\t(i386_cpu_flags): Add bitfield for cpuavx512_bf16.\n+\t* i386-opc.tbl: Add AVX512 BF16 instructions.\n+\t* i386-init.h: Regenerated.\n+\t* i386-tbl.h: Likewise.\n+\n+2019-04-05  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-opc.c (XLBH_MASK): Subtract off BH field from BB_MASK.\n+\t(powerpc_opcodes): Reorder bcctr and bclr extended mnemonics\n+\tto favour printing of \"-\" branch hint when using the \"y\" bit.\n+\tAllow BH field on bc{ctr,lr,tar}{,l}{-,+}.\n+\n+2019-04-05  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-dis.c (print_insn_powerpc): Delay printing spaces after\n+\topcode until first operand is output.\n+\n+2019-04-04  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR gas/24349\n+\t* ppc-opc.c (valid_bo_pre_v2): Add comments.\n+\t(valid_bo_post_v2): Add support for 'at' branch hints.\n+\t(insert_bo): Only error on branch on ctr.\n+\t(get_bo_hint_mask): New function.\n+\t(insert_boe): Add new 'branch_taken' formal argument.  Add support\n+\tfor inserting 'at' branch hints.\n+\t(extract_boe): Add new 'branch_taken' formal argument.  Add support\n+\tfor extracting 'at' branch hints.\n+\t(insert_bom, extract_bom, insert_bop, extract_bop): New functions.\n+\t(BOE): Delete operand.\n+\t(BOM, BOP): New operands.\n+\t(RM): Update value.\n+\t(XLYLK, XLYLK_MASK, XLYBB_MASK): Delete.\n+\t(powerpc_opcodes) <bc-, bcl-, bca-, bcla-, bclr-, bclrl-, bcctr-,\n+\tbcctrl-, bctar-, bctarl->: Replace BOE with BOM.\n+\t(powerpc_opcodes) <bc+, bcl+, bca+, bcla+, bclr+, bclrl+, bcctr+,\n+\tbcctrl+, bctar+, bctarl+>: Replace BOE with BOP.\n+\t<bdnztar, bdnztarl, bdztar, bdztarl, btar, btarl, bdnztar-, bdnztarl-,\n+\tbdnztar+, bdnztarl+, bdztar-, bdztarl-, bdztar+, bdztarl+, bgetar,\n+\tbnltar, bgetarl, bnltarl, bletar, bngtar, bletarl, bngtarl, bnetar,\n+\tbnetarl, bnstar, bnutar, bnstarl, bnutarl, bgetar-, bnltar-, bgetarl-,\n+\tbnltarl-, bletar-, bngtar-, bletarl-, bngtarl-, bnetar-, bnetarl-,\n+\tbnstar-, bnutar-, bnstarl-, bnutarl-, bgetar+, bnltar+, bgetarl+,\n+\tbnltarl+, bletar+, bngtar+, bletarl+, bngtarl+, bnetar+, bnetarl+,\n+\tbnstar+, bnutar+, bnstarl+, bnutarl+, blttar, blttarl, bgttar, bgttarl,\n+\tbeqtar, beqtarl, bsotar, buntar, bsotarl, buntarl, blttar-, blttarl-,\n+\tbgttar-, bgttarl-, beqtar-, beqtarl-, bsotar-, buntar-, bsotarl-,\n+\tbuntarl-, blttar+, blttarl+, bgttar+, bgttarl+, beqtar+, beqtarl+,\n+\tbsotar+, buntar+, bsotarl+, buntarl+, bdnzftar, bdnzftarl, bdzftar,\n+\tbdzftarl, bftar, bftarl, bftar-, bftarl-, bftar+, bftarl+, bdnzttar,\n+\tbdnzttarl, bdzttar, bdzttarl, bttar, bttarl, bttar-, bttarl-, bttar+,\n+\tbttarl+>: New extended mnemonics.\n+\n+2019-03-28  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24390\n+\t* ppc-opc.c (BTF): Define.\n+\t(powerpc_opcodes): Use for mtfsb*.\n+\t* ppc-dis.c (print_insn_powerpc): Print fields with both\n+\tPPC_OPERAND_CR_REG and PPC_OPERAND_CR_BIT as a plain number.\n+\n+2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* arm-dis.c (struct arm_private_data): Remove has_mapping_symbols.\n+\t(mapping_symbol_for_insn): Implement new algorithm.\n+\t(print_insn): Remove duplicate code.\n+\n+2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-dis.c (print_insn_aarch64):\n+\tImplement override.\n+\n+2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-dis.c (print_insn_aarch64): Update the mapping symbol search\n+\torder.\n+\n+2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-dis.c (last_stop_offset): New.\n+\t(print_insn_aarch64): Use stop_offset.\n+\n+2019-03-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/24359\n+\t* i386-gen.c (cpu_flag_init): Add CPU_ANY_AVX512F_FLAGS to\n+\tCPU_ANY_AVX2_FLAGS.\n+\t* i386-init.h: Regenerated.\n+\n+2019-03-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/24348\n+\t* i386-opc.tbl: Add Optimize to vmovdqa32, vmovdqa64, vmovdqu8,\n+\tvmovdqu16, vmovdqu32 and vmovdqu64.\n+\t* i386-tbl.h: Regenerated.\n+\n+2019-03-12  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* s390-opc.txt: Rename selhhhr to selfhr.  Remove optional operand\n+\tfrom vstrszb, vstrszh, and vstrszf.\n+\n+2019-03-12  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* s390-opc.txt: Add instruction descriptions.\n+\n+2019-02-08  Jim Wilson  <jimw@sifive.com>\n+\n+\t* riscv-opc.c (riscv_opcodes) <beq>: Use Cz to compress 3 operand form.\n+\t<bne>: Likewise.\n+\n+2019-02-07  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* arm-dis.c (arm_opcodes): Redefine hlt to armv1.\n+\n+2019-02-07  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/23212\n+\t* aarch64-opc.h (enum aarch64_field_kind): Add FLD_sz.\n+\t* aarch64-opc.c (verify_elem_sd): New.\n+\t(fields): Add FLD_sz entr.\n+\t* aarch64-tbl.h (_SIMD_INSN): New.\n+\t(aarch64_opcode_table): Add elem_sd verifier to fmla, fmls, fmul and\n+\tfmulx scalar and vector by element isns.\n+\n+2019-02-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sv.po: Updated Swedish translation.\n+\n+2019-01-31  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* s390-mkopc.c (main): Accept arch13 as cpu string.\n+\t* s390-opc.c: Add new instruction formats and instruction opcode\n+\tmasks.\n+\t* s390-opc.txt: Add new arch13 instructions.\n+\n+2019-01-25  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-tbl.h (QL_LDST_AT): Update macro.\n+\t(aarch64_opcode): Change encoding for stg, stzg\n+\tst2g and st2zg.\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\n+2019-01-25  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Likewise.\n+\t* aarch64-opc-2.c: Likewise.\n+\t* aarch64-tbl.h (aarch64_opcode): Add new stzgm.\n+\n+2019-01-25  Sudakshina Das  <sudi.das@arm.com>\n+\t    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_ins_addr_simple_2): Remove.\n+\t* aarch64-asm.h (ins_addr_simple_2): Likeiwse.\n+\t* aarch64-dis.c (aarch64_ext_addr_simple_2): Likewise.\n+\t* aarch64-dis.h (ext_addr_simple_2): Likewise.\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Remove\n+\tcase for ldstgv_indexed.\n+\t(aarch64_print_operand): Remove case for AARCH64_OPND_ADDR_SIMPLE_2.\n+\t* aarch64-tbl.h (struct aarch64_opcode): Remove ldgv and stgv.\n+\t(AARCH64_OPERANDS): Remove ADDR_SIMPLE_2.\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\n+2019-01-23  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/pt_BR.po: Updated Brazilian Portuguese translation.\n+\n+2019-01-21  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/de.po: Updated German translation.\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2019-01-20  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\t* mips-dis.c (mips_arch_choices): Fix typo in\n+\tgs464, gs464e and gs264e descriptors.\n+\n+2019-01-19  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\t* po/opcodes.pot: Regenerate.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.32 branch created.\n+\n+2019-01-09  John Darrington <john@darrington.wattle.id.au>\n+\n+\t* s12z-dis.c (print_insn_s12z):  Do not dereference an operand\n+\tif it is null.\n+\t-dis.c (opr_emit_disassembly): Do not omit an index if it is\n+\tzero.\n+\n+2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>\n+\n+\t* configure: Regenerate.\n+\n+2019-01-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2019-01-03  John Darrington <john@darrington.wattle.id.au>\n+\n+\t* s12z-opc.c: New file.\n+\t* s12z-opc.h: New file.\n+\t* s12z-dis.c: Removed all code not directly related to display\n+\tof instructions.  Used the interface provided by the new files\n+\tinstead.\n+\t* Makefile.am (TARGET_LIBOPCODES_CFILES) Add s12z-opc.c.\n+\t* Makefile.in: Regenerate.\n+\t* configure.ac (bfd_s12z_arch): Correct the dependencies.\n+\t* configure: Regenerate.\n+\n+2019-01-01  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2018\n+\f\n+Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    }
  ]
}