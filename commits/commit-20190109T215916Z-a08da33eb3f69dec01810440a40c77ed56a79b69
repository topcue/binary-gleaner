{
  "sha": "a08da33eb3f69dec01810440a40c77ed56a79b69",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTA4ZGEzM2ViM2Y2OWRlYzAxODEwNDQwYTQwYzc3ZWQ1NmE3OWI2OQ==",
  "commit": {
    "author": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2019-01-09T21:59:16Z"
    },
    "committer": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2019-01-09T21:59:16Z"
    },
    "message": "Merge from gcc: use \"cannot\" instead of \"can not\" in libiberty and include.\n\n2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tMerge from GCC:\n\n\t2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tPR other/16615 [2/5]\n\n\tinclude/\n\t* libiberty.h: Mechanically replace \"can not\" with \"cannot\".\n\t* plugin-api.h: Likewise.\n\n\tlibiberty/\n\t* cp-demangle.c: Mechanically replace \"can not\" with \"cannot\".\n\t* floatformat.c: Likewise.\n\t* strerror.c: Likewise.",
    "tree": {
      "sha": "f3aafc631bfdd3154ca7168e359d3a2e724f7344",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f3aafc631bfdd3154ca7168e359d3a2e724f7344"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a08da33eb3f69dec01810440a40c77ed56a79b69",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a08da33eb3f69dec01810440a40c77ed56a79b69",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a08da33eb3f69dec01810440a40c77ed56a79b69",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a08da33eb3f69dec01810440a40c77ed56a79b69/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "669e09f609d30e070dc26db34d938a0888a01928",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/669e09f609d30e070dc26db34d938a0888a01928",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/669e09f609d30e070dc26db34d938a0888a01928"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 24,
    "deletions": 7
  },
  "files": [
    {
      "sha": "626ed4c45e43b2db169fbba4126fa42b26f8b5ce",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a08da33eb3f69dec01810440a40c77ed56a79b69/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a08da33eb3f69dec01810440a40c77ed56a79b69/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=a08da33eb3f69dec01810440a40c77ed56a79b69",
      "patch": "@@ -1,3 +1,11 @@\n+2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tMerge from GCC:\n+\tPR other/16615\n+\n+\t* libiberty.h: Mechanically replace \"can not\" with \"cannot\".\n+\t* plugin-api.h: Likewise.\n+\n 2018-12-25  Yoshinori Sato <ysato@users.sourceforge.jp>\n \n \t* elf/rx.h (EF_RX_CPU_MASK): Update new bits."
    },
    {
      "sha": "574761350267b1eaa281343a11fe5dd5c737f9e5",
      "filename": "include/libiberty.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a08da33eb3f69dec01810440a40c77ed56a79b69/include/libiberty.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a08da33eb3f69dec01810440a40c77ed56a79b69/include/libiberty.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/libiberty.h?ref=a08da33eb3f69dec01810440a40c77ed56a79b69",
      "patch": "@@ -558,15 +558,15 @@ extern FILE *pex_input_file (struct pex_obj *obj, int flags,\n extern FILE *pex_input_pipe (struct pex_obj *obj, int binary);\n \n /* Read the standard output of the last program to be executed.\n-   pex_run can not be called after this.  BINARY should be non-zero if\n+   pex_run cannot be called after this.  BINARY should be non-zero if\n    the file should be opened in binary mode; this is ignored on Unix.\n    Returns NULL on error.  Don't call fclose on the returned FILE; it\n    will be closed by pex_free.  */\n \n extern FILE *pex_read_output (struct pex_obj *, int binary);\n \n /* Read the standard error of the last program to be executed.\n-   pex_run can not be called after this.  BINARY should be non-zero if\n+   pex_run cannot be called after this.  BINARY should be non-zero if\n    the file should be opened in binary mode; this is ignored on Unix.\n    Returns NULL on error.  Don't call fclose on the returned FILE; it\n    will be closed by pex_free.  */"
    },
    {
      "sha": "2076bdaae655e23c581bc170fe10630240fab476",
      "filename": "include/plugin-api.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a08da33eb3f69dec01810440a40c77ed56a79b69/include/plugin-api.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a08da33eb3f69dec01810440a40c77ed56a79b69/include/plugin-api.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/plugin-api.h?ref=a08da33eb3f69dec01810440a40c77ed56a79b69",
      "patch": "@@ -34,7 +34,7 @@\n #include <sys/types.h>\n #if !defined(HAVE_STDINT_H) && !defined(HAVE_INTTYPES_H) && \\\n     !defined(UINT64_MAX) && !defined(uint64_t)\n-#error can not find uint64_t type\n+#error cannot find uint64_t type\n #endif\n \n #ifdef __cplusplus"
    },
    {
      "sha": "2ada84e22c10d49cc31291de8d18ee02fbd25410",
      "filename": "libiberty/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a08da33eb3f69dec01810440a40c77ed56a79b69/libiberty/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a08da33eb3f69dec01810440a40c77ed56a79b69/libiberty/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/ChangeLog?ref=a08da33eb3f69dec01810440a40c77ed56a79b69",
      "patch": "@@ -1,3 +1,12 @@\n+2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tMerge from GCC:\n+\tPR other/16615\n+\n+\t* cp-demangle.c: Mechanically replace \"can not\" with \"cannot\".\n+\t* floatformat.c: Likewise.\n+\t* strerror.c: Likewise.\n+\n 2018-12-07  Nick Clifton  <nickc@redhat.com>\n \n \tPR 87681"
    },
    {
      "sha": "ddcd3be6b8f524c91a12f131d657e68cf0886100",
      "filename": "libiberty/cp-demangle.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a08da33eb3f69dec01810440a40c77ed56a79b69/libiberty/cp-demangle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a08da33eb3f69dec01810440a40c77ed56a79b69/libiberty/cp-demangle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/cp-demangle.c?ref=a08da33eb3f69dec01810440a40c77ed56a79b69",
      "patch": "@@ -6201,13 +6201,13 @@ cplus_demangle_init_info (const char *mangled, int options, size_t len,\n \n   di->n = mangled;\n \n-  /* We can not need more components than twice the number of chars in\n+  /* We cannot need more components than twice the number of chars in\n      the mangled string.  Most components correspond directly to\n      chars, but the ARGLIST types are exceptions.  */\n   di->num_comps = 2 * len;\n   di->next_comp = 0;\n \n-  /* Similarly, we can not need more substitutions than there are\n+  /* Similarly, we cannot need more substitutions than there are\n      chars in the mangled string.  */\n   di->num_subs = len;\n   di->next_sub = 0;"
    },
    {
      "sha": "8632253b4c14f4341384c814db8dc48d9de0f683",
      "filename": "libiberty/floatformat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a08da33eb3f69dec01810440a40c77ed56a79b69/libiberty/floatformat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a08da33eb3f69dec01810440a40c77ed56a79b69/libiberty/floatformat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/floatformat.c?ref=a08da33eb3f69dec01810440a40c77ed56a79b69",
      "patch": "@@ -489,7 +489,7 @@ floatformat_to_double (const struct floatformat *fmt,\n       int nan = mant_bits_set (fmt, ufrom);\n \n       /* On certain systems (such as GNU/Linux), the use of the\n-\t INFINITY macro below may generate a warning that can not be\n+\t INFINITY macro below may generate a warning that cannot be\n \t silenced due to a bug in GCC (PR preprocessor/11931).  The\n \t preprocessor fails to recognise the __extension__ keyword in\n \t conjunction with the GNU/C99 extension for hexadecimal"
    },
    {
      "sha": "cc7692c1d6951ce7008b59d7f93766777d256547",
      "filename": "libiberty/strerror.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a08da33eb3f69dec01810440a40c77ed56a79b69/libiberty/strerror.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a08da33eb3f69dec01810440a40c77ed56a79b69/libiberty/strerror.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/strerror.c?ref=a08da33eb3f69dec01810440a40c77ed56a79b69",
      "patch": "@@ -299,7 +299,7 @@ static const struct error_info error_table[] =\n   ENTRY(EREMCHG, \"EREMCHG\", \"Remote address changed\"),\n #endif\n #if defined (ELIBACC)\n-  ENTRY(ELIBACC, \"ELIBACC\", \"Can not access a needed shared library\"),\n+  ENTRY(ELIBACC, \"ELIBACC\", \"Cannot access a needed shared library\"),\n #endif\n #if defined (ELIBBAD)\n   ENTRY(ELIBBAD, \"ELIBBAD\", \"Accessing a corrupted shared library\"),"
    }
  ]
}