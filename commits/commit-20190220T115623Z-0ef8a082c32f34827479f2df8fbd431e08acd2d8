{
  "sha": "0ef8a082c32f34827479f2df8fbd431e08acd2d8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGVmOGEwODJjMzJmMzQ4Mjc0NzlmMmRmOGZiZDQzMWUwOGFjZDJkOA==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-02-20T11:56:23Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-02-20T11:56:23Z"
    },
    "message": "AArch64: Add default reggroups\n\nAArch64 does not define any reggroups.  This causes \"maintenance print\nreggroups\" to dump the default set (which is ok).\n\nHowever, if a new group is added via an xml file, then this now becomes\nthe only group.\n\nFixes gdb.xml/tdesc-regs.exp on AArch64.\n\ngdb/ChangeLog:\n\n\t* aarch64-tdep.c (aarch64_add_reggroups): New function\n\t(aarch64_gdbarch_init): Call aarch64_add_reggroups.",
    "tree": {
      "sha": "43db042231e915026d01907215457223773beb1f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/43db042231e915026d01907215457223773beb1f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0ef8a082c32f34827479f2df8fbd431e08acd2d8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ef8a082c32f34827479f2df8fbd431e08acd2d8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0ef8a082c32f34827479f2df8fbd431e08acd2d8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ef8a082c32f34827479f2df8fbd431e08acd2d8/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "eed62915fd5b733632af343fbf3d47c7364f8e36",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eed62915fd5b733632af343fbf3d47c7364f8e36",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/eed62915fd5b733632af343fbf3d47c7364f8e36"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 21,
    "deletions": 0
  },
  "files": [
    {
      "sha": "721e636fdca4e53eaef1c1a94110544e4b8ea50a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ef8a082c32f34827479f2df8fbd431e08acd2d8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ef8a082c32f34827479f2df8fbd431e08acd2d8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0ef8a082c32f34827479f2df8fbd431e08acd2d8",
      "patch": "@@ -1,3 +1,8 @@\n+2019-02-20  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* aarch64-tdep.c (aarch64_add_reggroups): New function.\n+\t(aarch64_gdbarch_init): Call aarch64_add_reggroups.\n+\n 2019-02-19  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* top.h (source_file_name): Change to std::string."
    },
    {
      "sha": "f85539313fe8bd2788013e738efe3ae7b84da6f4",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ef8a082c32f34827479f2df8fbd431e08acd2d8/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ef8a082c32f34827479f2df8fbd431e08acd2d8/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=0ef8a082c32f34827479f2df8fbd431e08acd2d8",
      "patch": "@@ -2955,6 +2955,19 @@ aarch64_get_tdesc_vq (const struct target_desc *tdesc)\n   return sve_vq_from_vl (vl);\n }\n \n+/* Add all the expected register sets into GDBARCH.  */\n+\n+static void\n+aarch64_add_reggroups (struct gdbarch *gdbarch)\n+{\n+  reggroup_add (gdbarch, general_reggroup);\n+  reggroup_add (gdbarch, float_reggroup);\n+  reggroup_add (gdbarch, system_reggroup);\n+  reggroup_add (gdbarch, vector_reggroup);\n+  reggroup_add (gdbarch, all_reggroup);\n+  reggroup_add (gdbarch, save_reggroup);\n+  reggroup_add (gdbarch, restore_reggroup);\n+}\n \n /* Initialize the current architecture based on INFO.  If possible,\n    re-use an architecture from ARCHES, which is a list of\n@@ -3137,6 +3150,9 @@ aarch64_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   /* Virtual tables.  */\n   set_gdbarch_vbit_in_delta (gdbarch, 1);\n \n+  /* Register architecture.  */\n+  aarch64_add_reggroups (gdbarch);\n+\n   /* Hook in the ABI-specific overrides, if they have been registered.  */\n   info.target_desc = tdesc;\n   info.tdesc_data = tdesc_data;"
    }
  ]
}