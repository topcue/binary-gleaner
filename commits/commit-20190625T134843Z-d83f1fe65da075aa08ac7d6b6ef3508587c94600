{
  "sha": "d83f1fe65da075aa08ac7d6b6ef3508587c94600",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDgzZjFmZTY1ZGEwNzVhYTA4YWM3ZDZiNmVmMzUwODU4N2M5NDYwMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-18T00:48:00Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:43Z"
    },
    "message": "Introduce tui_win_info::update_tab_width\n\nThis introduces a new tui_win_info::update_tab_width method, and\nchanges the TUI to call it.  This fixes another spot that was checking\nthe window type.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-win.c (tui_source_window_base::update_tab_width): New\n\tmethod.\n\t(update_tab_width): Call update_tab_width method.\n\t* tui/tui-data.h (struct tui_win_info)\n\t(struct tui_source_window_base) <update_tab_width>: New methods.",
    "tree": {
      "sha": "75a5b57bf86f3695bfff08926a2769e95474929d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/75a5b57bf86f3695bfff08926a2769e95474929d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d83f1fe65da075aa08ac7d6b6ef3508587c94600",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d83f1fe65da075aa08ac7d6b6ef3508587c94600",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d83f1fe65da075aa08ac7d6b6ef3508587c94600",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d83f1fe65da075aa08ac7d6b6ef3508587c94600/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "17374de40e7be36e4eb27d29bb8aac89586ce4a1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17374de40e7be36e4eb27d29bb8aac89586ce4a1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/17374de40e7be36e4eb27d29bb8aac89586ce4a1"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 32,
    "deletions": 16
  },
  "files": [
    {
      "sha": "4f7d82bcdefa308f9c65b1fe0c3a9c5b06e951d9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d83f1fe65da075aa08ac7d6b6ef3508587c94600/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d83f1fe65da075aa08ac7d6b6ef3508587c94600/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d83f1fe65da075aa08ac7d6b6ef3508587c94600",
      "patch": "@@ -1,3 +1,11 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-win.c (tui_source_window_base::update_tab_width): New\n+\tmethod.\n+\t(update_tab_width): Call update_tab_width method.\n+\t* tui/tui-data.h (struct tui_win_info)\n+\t(struct tui_source_window_base) <update_tab_width>: New methods.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-wingeneral.h (tui_make_window): Change type of \"box_it\""
    },
    {
      "sha": "7030e84d902a55339848603ca8b6cceadd216cc3",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d83f1fe65da075aa08ac7d6b6ef3508587c94600/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d83f1fe65da075aa08ac7d6b6ef3508587c94600/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=d83f1fe65da075aa08ac7d6b6ef3508587c94600",
      "patch": "@@ -306,6 +306,11 @@ struct tui_win_info : public tui_gen_win_info\n   /* Compute the maximum height of this window.  */\n   virtual int max_height () const;\n \n+  /* Called after the tab width has been changed.  */\n+  virtual void update_tab_width ()\n+  {\n+  }\n+\n   /* Set whether this window is highglighted.  */\n   void set_highlight (bool highlight)\n   {\n@@ -362,6 +367,8 @@ struct tui_source_window_base : public tui_win_info\n \n   void set_new_height (int height) override;\n \n+  void update_tab_width () override;\n+\n   /* Does the locator belong to this window?  */\n   bool m_has_locator = false;\n   /* Execution information window.  */"
    },
    {
      "sha": "d67f42eaa7769c4fde670631cc2797cb18f0adde",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 17,
      "deletions": 16,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d83f1fe65da075aa08ac7d6b6ef3508587c94600/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d83f1fe65da075aa08ac7d6b6ef3508587c94600/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=d83f1fe65da075aa08ac7d6b6ef3508587c94600",
      "patch": "@@ -923,29 +923,30 @@ unsigned int tui_tab_width = DEFAULT_TAB_LEN;\n \n static unsigned int internal_tab_width = DEFAULT_TAB_LEN;\n \n-/* After the tab width is set, call this to update the relevant\n-   windows.  */\n+/* See tui-data.h.  */\n \n-static void\n-update_tab_width ()\n+void\n+tui_source_window_base::update_tab_width ()\n {\n   /* We don't really change the height of any windows, but\n      calling these 2 functions causes a complete regeneration\n      and redisplay of the window's contents, which will take\n      the new tab width into account.  */\n-  if (tui_win_list[SRC_WIN]\n-      && tui_win_list[SRC_WIN]->is_visible)\n-    {\n-      make_invisible_and_set_new_height (TUI_SRC_WIN,\n-\t\t\t\t\t TUI_SRC_WIN->height);\n-      make_visible_with_new_height (TUI_SRC_WIN);\n-    }\n-  if (tui_win_list[DISASSEM_WIN]\n-      && tui_win_list[DISASSEM_WIN]->is_visible)\n+  make_invisible_and_set_new_height (this, height);\n+  make_visible_with_new_height (this);\n+}\n+\n+/* After the tab width is set, call this to update the relevant\n+   windows.  */\n+\n+static void\n+update_tab_width ()\n+{\n+  for (int win_type = SRC_WIN; win_type < MAX_MAJOR_WINDOWS; win_type++)\n     {\n-      make_invisible_and_set_new_height (TUI_DISASM_WIN,\n-\t\t\t\t\t TUI_DISASM_WIN->height);\n-      make_visible_with_new_height (TUI_DISASM_WIN);\n+      if (tui_win_list[win_type] != NULL\n+\t  && tui_win_list[win_type]->is_visible)\n+\ttui_win_list[win_type]->update_tab_width ();\n     }\n }\n "
    }
  ]
}