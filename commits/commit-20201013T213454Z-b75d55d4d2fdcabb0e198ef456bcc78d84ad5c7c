{
  "sha": "b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Yjc1ZDU1ZDRkMmZkY2FiYjBlMTk4ZWY0NTZiY2M3OGQ4NGFkNWM3Yw==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-10-11T20:58:31Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-10-13T21:34:54Z"
    },
    "message": "Eliminate mi_run_to_main, introduce mi_clean_restart\n\nSince we now have mi_runto_main which is like runto_main, eliminate\nmi_run_to_main, in favor of a new MI clean_restart counterpart --\nmi_clean_restart -- and mi_runto_main.\n\nThis makes MI testcases look a bit more like CLI testcases.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/mi-support.exp (mi_clean_restart): New.\n\t(mi_run_to_main): Delete.\n\tAll callers adjust to use mi_clean_restart / mi_runto_main.\n\nChange-Id: I34920bab4fea1f23fb752928c2969c1f6ad714b6",
    "tree": {
      "sha": "0a63ed30a00d185922de6c2d73dd7039305148ba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0a63ed30a00d185922de6c2d73dd7039305148ba"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e777225bfd79e0667ba7105f1f9f8375a6abc034"
    }
  ],
  "stats": {
    "total": 590,
    "additions": 190,
    "deletions": 400
  },
  "files": [
    {
      "sha": "4261e4a7204793da01753b3ca0d9b466a11518f9",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -1,3 +1,9 @@\n+2020-10-13  Pedro Alves  <pedro@palves.net>\n+\n+\t* lib/mi-support.exp (mi_clean_restart): New.\n+\t(mi_run_to_main): Delete.\n+\tAll callers adjust to use mi_clean_restart / mi_runto_main.\n+\n 2020-10-13  Pedro Alves  <pedro@palves.net>\n \n \t* config/monitor.exp: Use \"list -q\"."
    },
    {
      "sha": "095815d1829356d3cfbc1fdfa7b99e16eb155ce8",
      "filename": "gdb/testsuite/gdb.ada/mi_catch_assert.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_catch_assert.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_catch_assert.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_catch_assert.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -58,14 +58,7 @@ gdb_test_multiple \"catch exception\" $msg {\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n-mi_delete_breakpoints\n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load ${binfile}\n+mi_clean_restart $binfile\n \n ###################################################\n # 2. Try catching conditionnal failed assertion.  #\n@@ -77,7 +70,7 @@ mi_gdb_load ${binfile}\n #  - continue, we should see the second failed assertion\n #  - continue, the program exits.\n \n-if ![mi_run_to_main] then {\n+if {[mi_runto_main] < 0} {\n    fail \"cannot run to main, testcase aborted\"\n    return 0\n }"
    },
    {
      "sha": "103ec85f862b14a6ba3610d35ca46faab1ff6ec5",
      "filename": "gdb/testsuite/gdb.ada/mi_catch_ex.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 10,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_catch_ex.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_catch_ex.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_catch_ex.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -58,21 +58,14 @@ gdb_test_multiple \"catch exception\" $msg {\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n-mi_delete_breakpoints\n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load ${binfile}\n+mi_clean_restart $binfile\n \n ####################################\n # 1. Try catching all exceptions.  #\n ####################################\n \n with_test_prefix \"scenario 1\" {\n-    if ![mi_run_to_main] then {\n+    if {[mi_runto_main] < 0} {\n \tfail \"cannot run to main, testcase aborted\"\n \treturn 0\n     }\n@@ -130,7 +123,7 @@ continue_to_exception \\\n #  - continue, the program exits.\n \n with_test_prefix \"scenario 2\" {\n-    if ![mi_run_to_main] then {\n+    if {[mi_runto_main] < 0} {\n \tfail \"cannot run to main, testcase aborted\"\n \treturn 0\n     }"
    },
    {
      "sha": "ef3dd24979019054f3b15959dadceb8e8c854e4f",
      "filename": "gdb/testsuite/gdb.ada/mi_catch_ex_hand.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_catch_ex_hand.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_catch_ex_hand.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_catch_ex_hand.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -57,17 +57,14 @@ gdb_test_multiple \"catch handlers\" $msg {\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n+mi_clean_restart $binfile\n \n #############################################\n # 1. Try catching all exceptions handlers.  #\n #############################################\n \n with_test_prefix \"scenario 1\" {\n-    if ![mi_run_to_main] then {\n+    if {[mi_runto_main] < 0} {\n \tfail \"cannot run to main, testcase aborted\"\n \treturn 0\n     }\n@@ -119,7 +116,7 @@ continue_to_exception_handler \\\n #    but exit instead.\n \n with_test_prefix \"scenario 2\" {\n-    if ![mi_run_to_main] then {\n+    if {[mi_runto_main] < 0} {\n \tfail \"cannot run to main, testcase aborted\"\n \treturn 0\n     }"
    },
    {
      "sha": "4b5d2c10d585bd88d1367cac5acbf9e23e05ff44",
      "filename": "gdb/testsuite/gdb.ada/mi_dyn_arr.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_dyn_arr.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_dyn_arr.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_dyn_arr.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -26,16 +26,9 @@ if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable [list debug]] != \"\" }\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n-mi_delete_breakpoints\n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load ${binfile}\n+mi_clean_restart $binfile\n \n-if ![mi_run_to_main] then {\n+if {[mi_runto_main] < 0} {\n    fail \"cannot run to main, testcase aborted\"\n    return 0\n }"
    },
    {
      "sha": "52c37c453485e46ebb279c98168233b1b1bb3bd2",
      "filename": "gdb/testsuite/gdb.ada/mi_exc_info.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_exc_info.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_exc_info.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_exc_info.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -26,12 +26,9 @@ if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable [list debug]] != \"\" }\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n+mi_clean_restart $binfile\n \n-if ![mi_run_to_main] then {\n+if {[mi_runto_main] < 0} {\n    fail \"cannot run to main, testcase aborted\"\n    return 0\n }"
    },
    {
      "sha": "a2c0d0453e425ed1a62d7feba90b8cea8b87857f",
      "filename": "gdb/testsuite/gdb.ada/mi_interface.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 10,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_interface.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_interface.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_interface.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -26,17 +26,10 @@ if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable [list debug additional\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n-mi_delete_breakpoints\n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load ${binfile}\n+mi_clean_restart $binfile\n \n-if ![mi_run_to_main] then {\n-   fail \"cannot run to main, testcase aborted\"\n+if {[mi_runto_main] < 0} {\n+    fail \"cannot run to main, testcase aborted\"\n    return 0\n }\n "
    },
    {
      "sha": "703fabdacdcc334a67ae986bf7db5afe1872478a",
      "filename": "gdb/testsuite/gdb.ada/mi_prot.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_prot.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_prot.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_prot.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -30,12 +30,9 @@ if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable \\\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if {[mi_gdb_start]} {\n-    continue\n-}\n+mi_clean_restart $binfile\n \n-if {![mi_run_to_main]} then {\n+if {[mi_runto_main] < 0} {\n    fail \"cannot run to main, testcase aborted\"\n    return 0\n }"
    },
    {
      "sha": "86df5680ddadacf488c743196910904f1ed3e429",
      "filename": "gdb/testsuite/gdb.ada/mi_ref_changeable.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_ref_changeable.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_ref_changeable.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_ref_changeable.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -26,16 +26,9 @@ if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable [list debug]] != \"\" }\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n-mi_delete_breakpoints\n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load ${binfile}\n+mi_clean_restart $binfile\n \n-if ![mi_run_to_main] then {\n+if {[mi_runto_main] < 0} {\n    fail \"cannot run to main, testcase aborted\"\n    return 0\n }"
    },
    {
      "sha": "56c8522e196267ba064eee7ee2249b1ec995599f",
      "filename": "gdb/testsuite/gdb.ada/mi_string_access.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_string_access.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_string_access.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_string_access.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -26,16 +26,9 @@ if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable [list debug]] != \"\" }\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n-mi_delete_breakpoints\n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load ${binfile}\n+mi_clean_restart $binfile\n \n-if ![mi_run_to_main] then {\n+if {[mi_runto_main] < 0} {\n    fail \"cannot run to main, testcase aborted\"\n    return 0\n }"
    },
    {
      "sha": "196daff904e2a6363e059f093b8b528ca69594b8",
      "filename": "gdb/testsuite/gdb.ada/mi_var_access.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_var_access.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_var_access.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_var_access.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -28,15 +28,9 @@ if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable debug] != \"\" } {\n     return -1\n }\n \n-if {[mi_gdb_start]} {\n-    continue\n-}\n-\n-mi_delete_breakpoints\n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load ${binfile}\n+mi_clean_restart $binfile\n \n-if ![mi_run_to_main] then {\n+if {[mi_runto_main] < 0} {\n     fail \"cannot run to main, testcase aborted\"\n     return 0\n }"
    },
    {
      "sha": "09b89ce4e46243d512b701972e48a596f1c3f2d8",
      "filename": "gdb/testsuite/gdb.ada/mi_var_array.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_var_array.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_var_array.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_var_array.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -32,16 +32,9 @@ foreach_with_prefix scenario {none all minimal} {\n \treturn -1\n     }\n \n-    gdb_exit\n-    if [mi_gdb_start] {\n-\tcontinue\n-    }\n-\n-    mi_delete_breakpoints\n-    mi_gdb_reinitialize_dir $srcdir/$subdir\n-    mi_gdb_load ${binfile}\n+    mi_clean_restart $binfile\n \n-    if ![mi_run_to_main] then {\n+    if {[mi_runto_main] < 0} {\n \tfail \"cannot run to main, testcase aborted\"\n \treturn 0\n     }"
    },
    {
      "sha": "da09d7abedb72cd5a69e99579f362f0957cded49",
      "filename": "gdb/testsuite/gdb.ada/mi_var_union.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_var_union.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_var_union.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_var_union.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -34,16 +34,9 @@ foreach_with_prefix scenario {none all minimal} {\n \treturn -1\n     }\n \n-    gdb_exit\n-    if [mi_gdb_start] {\n-\tcontinue\n-    }\n-\n-    mi_delete_breakpoints\n-    mi_gdb_reinitialize_dir $srcdir/$subdir\n-    mi_gdb_load ${binfile}\n+    mi_clean_restart $binfile\n \n-    if ![mi_run_to_main] then {\n+    if {[mi_runto_main] < 0} {\n \tfail \"cannot run to main, testcase aborted\"\n \treturn 0\n     }"
    },
    {
      "sha": "d7e619191aec9d1f5391d0b95d2a86e1763eca18",
      "filename": "gdb/testsuite/gdb.ada/mi_variant.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_variant.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.ada/mi_variant.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_variant.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -33,16 +33,9 @@ foreach_with_prefix scenario {none all minimal} {\n \treturn -1\n     }\n \n-    gdb_exit\n-    if [mi_gdb_start] {\n-\tcontinue\n-    }\n-\n-    mi_delete_breakpoints\n-    mi_gdb_reinitialize_dir $srcdir/$subdir\n-    mi_gdb_load ${binfile}\n+    mi_clean_restart $binfile\n \n-    if ![mi_run_to_main] then {\n+    if {[mi_runto_main] < 0} {\n \tfail \"cannot run to main, testcase aborted\"\n \treturn 0\n     }"
    },
    {
      "sha": "54ef3b7143595d0ed1e13e979733c8b9d320a4e1",
      "filename": "gdb/testsuite/gdb.mi/gdb2549.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 6,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/gdb2549.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/gdb2549.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/gdb2549.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -25,11 +25,6 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile basics.c\n \n if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n@@ -103,8 +98,12 @@ proc register_tests { } {\n     }\n }\n \n+mi_clean_restart $binfile\n+\n register_tests_no_exec\n-mi_run_to_main\n+\n+mi_runto_main\n+\n register_tests\n \n mi_gdb_exit"
    },
    {
      "sha": "edd076ec3a5a940aca3f94a0d95f84b5a07c7fdb",
      "filename": "gdb/testsuite/gdb.mi/gdb669.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/gdb669.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/gdb669.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/gdb669.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -20,11 +20,6 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if {[mi_gdb_start]} {\n-    continue\n-}\n-\n #\n # Start here\n #\n@@ -35,7 +30,8 @@ if {[gdb_compile_pthreads \"$srcdir/$subdir/$srcfile\" $binfile executable $option\n     return -1\n }\n \n-mi_run_to_main\n+mi_clean_restart $binfile\n+mi_runto_main\n check_mi_and_console_threads \"at main\"\n \n for {set i 0} {$i < 4} {incr i} {"
    },
    {
      "sha": "85c48f2ea7cf8ea544d18b0abed700521c2cd664",
      "filename": "gdb/testsuite/gdb.mi/gdb701.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/gdb701.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/gdb701.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/gdb701.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -20,11 +20,6 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile\n \n if {[gdb_compile $srcdir/$subdir/$srcfile $binfile executable debug] != \"\"} {\n@@ -40,7 +35,8 @@ if {[gdb_compile $srcdir/$subdir/$srcfile $binfile executable debug] != \"\"} {\n # If it doesn't, Bad Things Happen(TM).\n \n # Run to main\n-mi_run_to_main\n+mi_clean_restart $binfile\n+mi_runto_main\n \n # Step over \"foo = 0\"\n mi_next \"step over \\\"foo = 0\\\"\""
    },
    {
      "sha": "1fec75b0b93338fc5097dd0fee6d27a4f86566f1",
      "filename": "gdb/testsuite/gdb.mi/gdb792.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 11,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/gdb792.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/gdb792.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/gdb792.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -13,20 +13,14 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-#\n-# test gdb/792\n-#\n+# Test that children of classes are properly reported.  Regression\n+# test for gdb/792.\n \n if { [skip_cplus_tests] } { continue }\n \n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile .cc\n \n if [get_compiler_info \"c++\"] {\n@@ -38,10 +32,9 @@ if {[gdb_compile $srcdir/$subdir/$srcfile $binfile executable {debug c++}] != \"\"\n   return -1\n }\n \n-# Test that children of classes are properly reported\n+mi_clean_restart $binfile\n \n-# Run to main\n-mi_run_to_main\n+mi_runto_main\n \n mi_create_varobj \"var1\" \"a\" \"create var for class A\"\n "
    },
    {
      "sha": "3c594c8de4f7d424d22627a4a482ae39c0e1d003",
      "filename": "gdb/testsuite/gdb.mi/mi-break.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-break.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-break.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-break.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -272,7 +272,7 @@ proc test_breakpoint_commands {} {\n \t\"\\\\^done,[mi_make_breakpoint_table [list $bp_no_script]]\" \\\n         \"breakpoint commands: check that commands are cleared\"\n \n-    mi_run_to_main\n+    mi_runto_main\n \n     mi_create_breakpoint \"basics.c:callee2\" \\\n \t\"breakpoint commands: insert breakpoint at basics.c:callee2, again\" \\"
    },
    {
      "sha": "3f3acfd9967ad61bf45279fc3a59ddf88e78057e",
      "filename": "gdb/testsuite/gdb.mi/mi-breakpoint-changed.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-breakpoint-changed.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-breakpoint-changed.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-breakpoint-changed.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -46,15 +46,13 @@ if { [gdb_compile $srcdir/$subdir/$srcfile $binfile executable $exec_opts] != \"\"\n proc test_insert_delete_modify { } {\n     global mi_gdb_prompt\n     global lib_sl1 lib_sl2\n+    global binfile\n \n-    gdb_exit\n-    if [mi_gdb_start] {\n-\tcontinue\n-    }\n+    mi_clean_restart $binfile\n \n     mi_load_shlibs $lib_sl1 $lib_sl2\n \n-    mi_run_to_main\n+    mi_runto_main\n \n     mi_gdb_test \"break marker\" \\\n \t{(&.*)*.*~\"Breakpoint 2 at.*\\\\n\".*=breakpoint-created,bkpt=\\{number=\"2\",type=\"breakpoint\".*\\}.*\\n\\^done}"
    },
    {
      "sha": "0f5d33599a994b457d1f387e807b7d59001c7650",
      "filename": "gdb/testsuite/gdb.mi/mi-breakpoint-multiple-locations.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-breakpoint-multiple-locations.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-breakpoint-multiple-locations.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-breakpoint-multiple-locations.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -53,15 +53,12 @@ proc make_breakpoints_pattern { expect_fixed_output bp_num loc1_en loc2_en } {\n proc do_test { mi_version use_fix_flag expect_fixed_output } {\n     with_test_prefix \"mi_version=${mi_version}\" {\n \twith_test_prefix \"use_fix_flag=${use_fix_flag}\" {\n-\t    global MIFLAGS decimal\n+\t    global MIFLAGS decimal binfile\n \t    set MIFLAGS \"-i=mi${mi_version}\"\n \n-\t    gdb_exit\n-\t    if {[mi_gdb_start]} {\n-\t\treturn\n-\t    }\n+\t    mi_clean_restart $binfile\n \n-\t    mi_run_to_main\n+\t    mi_runto_main\n \n \t    if $use_fix_flag {\n \t\tmi_gdb_test \"-fix-multi-location-breakpoint-output\" \"\\\\^done\" \\"
    },
    {
      "sha": "54383f66d65f359d0955c7acb157b93deac41f41",
      "filename": "gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 7,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -27,13 +27,8 @@ if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {deb\n     return -1\n }\n \n-if [mi_gdb_start] {\n-    continue\n-}\n-mi_delete_breakpoints\n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load ${binfile}\n-if {![mi_run_to_main]} {\n+mi_clean_restart $binfile\n+if {[mi_runto_main] < 0} {\n     return -1\n }\n set libstdcxx_probe_tests_supported [expr ![mi_skip_libstdcxx_probe_tests]]"
    },
    {
      "sha": "21f3fe03db6a87ecf59ff0221076a1cae9b632aa",
      "filename": "gdb/testsuite/gdb.mi/mi-catch-load.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 13,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-catch-load.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-catch-load.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-catch-load.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -18,11 +18,6 @@ if {[skip_shlib_tests]} {\n     return -1\n }\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n if {[get_compiler_info]} {\n     warning \"Could not get compiler info\"\n     untested \"no compiler info\"\n@@ -44,7 +39,9 @@ if { [gdb_compile_shlib \"${srcdir}/${subdir}/${srcfile2}\" ${binfile2} {debug}] !\n     untested \"failed to compile shared library\"\n     return -1\n }\n-mi_run_to_main\n+\n+mi_clean_restart $binfile\n+mi_runto_main\n \n # test -catch-load\n mi_gdb_test \"111-gdb-set auto-solib-add on\" \"111\\\\^done\" \"catch-load: auto-solib-add on\"\n@@ -66,13 +63,8 @@ gdb_expect {\n     }\n }\n \n-mi_gdb_exit\n-\n-\n-if [mi_gdb_start] {\n-    continue\n-}\n-mi_run_to_main\n+mi_clean_restart $binfile\n+mi_runto_main\n \n # test -catch-unload\n mi_gdb_test \"111-gdb-set auto-solib-add on\" \"111\\\\^done\" \"catch-unload: auto-solib-add on\""
    },
    {
      "sha": "ad06c7c05dac851b67b0bc7db1bf34ffab312d35",
      "filename": "gdb/testsuite/gdb.mi/mi-cli.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-cli.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-cli.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-cli.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -22,18 +22,15 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile basics.c\n \n if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n      untested \"failed to compile\"\n      return -1\n }\n \n+mi_clean_restart $binfile\n+\n mi_gdb_test \"-interpreter-exec\" \\\n   {\\^error,msg=\"-interpreter-exec: Usage: -interpreter-exec interp command\"} \\\n   \"-interpreter-exec with no arguments\"\n@@ -59,7 +56,7 @@ mi_gdb_test \"-interpreter-exec console \\\"file $binfile\\\"\" \\\n   {~\"Reading symbols from .*mi-cli...\\\\n\".*} \\\n   \"-interpreter-exec console \\\"file \\$binfile\\\"\"\n \n-mi_run_to_main\n+mi_runto_main\n \n set line_main_head    [gdb_get_line_number \"main (\"]\n set line_main_body    [expr $line_main_head + 2]"
    },
    {
      "sha": "1715c764d24021a7ddd9b1fb3b67fac29b453a00",
      "filename": "gdb/testsuite/gdb.mi/mi-cmd-param-changed.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-cmd-param-changed.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-cmd-param-changed.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-cmd-param-changed.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -28,12 +28,11 @@ if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {deb\n \n proc test_command_param_changed { } {\n     global scheduler_locking_supported\n+    global binfile\n \n     with_test_prefix \"cmd param\" {\n-\tif [mi_gdb_start] {\n-\t    return\n-\t}\n-\tmi_run_to_main\n+\tmi_clean_restart $binfile\n+\tmi_runto_main\n \n \tif { $scheduler_locking_supported } {\n \t    foreach opt { \"on\" \"off\" \"step\" } {"
    },
    {
      "sha": "a1ab50d3d9c1e7851f747cc2508d709ad59adec7",
      "filename": "gdb/testsuite/gdb.mi/mi-complete.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-complete.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-complete.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-complete.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -19,19 +19,16 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile .cc\n \n if { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug c++}] != \"\" } {\n      untested \"failed to compile\"\n      return -1\n }\n \n-mi_run_to_main\n+mi_clean_restart $binfile\n+\n+mi_runto_main\n \n mi_gdb_test \"1-complete br\" \\\n             \"1\\\\^done,completion=\\\"break\\\",matches=\\\\\\[.*\\\"break\\\",.*\\\"break-range\\\".*\\\\\\],max_completions_reached=\\\"0\\\"\" \\"
    },
    {
      "sha": "02e70c01f807947b781182c4ee4df0dbd1d09b97",
      "filename": "gdb/testsuite/gdb.mi/mi-console.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-console.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-console.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-console.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -58,7 +58,9 @@ if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {deb\n      return -1\n }\n \n-mi_run_to_main\n+mi_gdb_reinitialize_dir $srcdir/$subdir\n+mi_gdb_load ${binfile}\n+mi_runto_main\n \n # The output we get from the target depends on how it is hosted.  If\n # we are semihosted (e.g., the sim or a remote target that supports"
    },
    {
      "sha": "1027488eeb4ab260574a7c72897e98ea3cf374ae",
      "filename": "gdb/testsuite/gdb.mi/mi-detach.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-detach.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-detach.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-detach.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -18,18 +18,14 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile basics.c\n \n if {[build_executable $testfile.exp $testfile $srcfile {debug}] == -1} {\n      untested \"failed to compile\"\n      return -1\n }\n \n-mi_run_to_main\n+mi_clean_restart $binfile\n+mi_runto_main\n \n mi_gdb_test \"-target-detach\" \"=thread-exited,id=\\\"1\\\".*=thread-group-exited,id=\\\"i1\\\".*\" \"detach\""
    },
    {
      "sha": "87f8c72251c3a6b08facc4bbf22a6003f508e672",
      "filename": "gdb/testsuite/gdb.mi/mi-disassemble.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-disassemble.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-disassemble.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-disassemble.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -23,11 +23,6 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile basics.c\n \n if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n@@ -244,7 +239,8 @@ proc test_disassembly_bogus_args {} {\n \n }\n \n-mi_run_to_main\n+mi_clean_restart $binfile\n+mi_runto_main\n test_disassembly_only\n test_disassembly_with_opcodes\n test_disassembly_mixed"
    },
    {
      "sha": "6254787f2124d48721c5ae5ae08320504fd96b32",
      "filename": "gdb/testsuite/gdb.mi/mi-dprintf.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-dprintf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-dprintf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-dprintf.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -17,24 +17,18 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile\n \n if {[build_executable $testfile.exp $testfile $srcfile {debug}] == -1} {\n     untested \"failed to compile\"\n     return -1\n }\n \n-mi_delete_breakpoints\n-\n set bp_location1 [gdb_get_line_number \"set breakpoint 1 here\"]\n set dp_location1 [gdb_get_line_number \"set dprintf 1 here\"]\n \n-mi_run_to_main\n+mi_clean_restart $binfile\n+mi_runto_main\n \n set i 0\n mi_gdb_test \"[incr i]-dprintf-insert\" \\"
    },
    {
      "sha": "b8a133a19c0aa59de628a02bca460af5df58e7b9",
      "filename": "gdb/testsuite/gdb.mi/mi-exit-code.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-exit-code.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-exit-code.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-exit-code.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -16,11 +16,6 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile\n \n if { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n@@ -31,15 +26,20 @@ if { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debu\n proc test_list_thread_groups { } {\n     global hex\n     global decimal\n+    global binfile\n+\n+    mi_clean_restart\n \n     # Before any run, exit-code should not be present.\n     mi_gdb_test \\\n \t\"122-list-thread-groups\" \\\n \t\"122\\\\^done,groups=\\\\\\[\\{id=\\\"i1\\\",type=\\\"process\\\"\\}\\]\" \\\n \t\"-list-thread-groups before run shows no exit-code\"\n \n+    mi_clean_restart $binfile\n+\n     with_test_prefix \"first run\" {\n-\tmi_run_to_main\n+\tmi_runto_main\n \n \t# During the run, exit-code should not be present.\n \tmi_gdb_test \\\n@@ -59,7 +59,7 @@ proc test_list_thread_groups { } {\n     }\n \n     with_test_prefix \"second run\" {\n-\tmi_run_to_main\n+\tmi_runto_main\n \n \t# Write the exit code we want in the global var\n \tmi_gdb_test \"set var exit_code = 8\" \".*\\\\^done\" \"write exit code\""
    },
    {
      "sha": "658da39bce3db6199ef5585cfde29350f1861a42",
      "filename": "gdb/testsuite/gdb.mi/mi-fill-memory.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-fill-memory.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-fill-memory.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-fill-memory.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -20,19 +20,15 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile \"mi-read-memory\"\n  \n if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}.c\" \"${binfile}\" executable {debug}] != \"\" } {\n      untested \"failed to compile\"\n      return -1\n }\n \n-mi_run_to_main\n+mi_clean_restart $binfile\n+mi_runto_main\n mi_next_to \"main\" \"\" \"mi-read-memory.c\" \"20\" \"next at main\"\n \n mi_gdb_test \"1-data-write-memory-bytes\"\\"
    },
    {
      "sha": "de5657d2823b675904719af8a7c6fcb79318a90f",
      "filename": "gdb/testsuite/gdb.mi/mi-fortran-modules.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-fortran-modules.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-fortran-modules.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-fortran-modules.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -26,12 +26,9 @@ if {[prepare_for_testing \"failed to prepare\" ${testfile} \\\n     return -1\n }\n \n-gdb_exit\n-if {[mi_gdb_start]} {\n-    continue\n-}\n+mi_clean_restart $binfile\n \n-mi_run_to_main\n+mi_runto_main\n \n \n # Patterns to skip optional system modules that appear with later versions of GFortran."
    },
    {
      "sha": "420fe7a878d588b8cb99170d38d15eeeff6c20f4",
      "filename": "gdb/testsuite/gdb.mi/mi-frame-regs.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-frame-regs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-frame-regs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-frame-regs.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -58,17 +58,16 @@ proc breakpoint_address {bpnum} {\n # breakpoints in different functions.\n \n proc_with_prefix do_floating_varobj_test {} {\n-    global srcfile\n+    global srcfile binfile\n     global hex\n     global expect_out\n \n-    gdb_exit\n-    if {[mi_gdb_start]} then {\n+    if {[mi_clean_restart $binfile]} {\n \tfail \"couldn't start gdb\"\n \treturn\n     }\n \n-    mi_run_to_main\n+    mi_runto_main\n \n     # Create a floating varobj for $pc.\n     mi_gdb_test \"-var-create --thread 1 --frame 0 - @ \\$pc\" \\\n@@ -111,16 +110,15 @@ proc_with_prefix do_floating_varobj_test {} {\n # counter changes (without substantially changing the stack).\n \n proc_with_prefix do_fixed_varobj_test {} {\n-    global srcfile\n+    global srcfile binfile\n     global hex\n \n-    gdb_exit\n-    if {[mi_gdb_start]} then {\n+    if {[mi_clean_restart $binfile] != 0} {\n \tfail \"couldn't start gdb\"\n \treturn\n     }\n \n-    mi_run_to_main\n+    mi_runto_main\n \n     # Run to the function 'callee3' so we have several frames.\n     mi_create_breakpoint \"basics.c:callee3\" \\"
    },
    {
      "sha": "347b01c10fef5db25b572eadc355205431d07b21",
      "filename": "gdb/testsuite/gdb.mi/mi-info-os.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-info-os.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-info-os.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-info-os.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -45,7 +45,7 @@ if {[mi_gdb_load $binfile] < 0} {\n # When testing a cross configuration, we need to be sure to first\n # connect to the target.  If we didn't do that, GDB would try running\n # the command against the default run target.  The usual way to do\n-# that and cover all targets is to run to main, with mi_run_to_main.\n+# that and cover all targets is to run to main, with mi_runto_main.\n # However, with native configurations, -info-os should work before\n # running any program, so we want to avoid \"run\".  Using\n # mi_gdb_target_load directly instead achieves this."
    },
    {
      "sha": "0f8f59b5a416293ff067c1dc25f9bac080f71333",
      "filename": "gdb/testsuite/gdb.mi/mi-linespec-err-cp.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-linespec-err-cp.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-linespec-err-cp.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-linespec-err-cp.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -31,17 +31,14 @@ if {[prepare_for_testing \"failed to prepare\" $exefile $srcfile {debug c++}]} {\n     return -1\n }\n \n-gdb_exit\n-if {[mi_gdb_start]} {\n-    continue\n-}\n+mi_clean_restart $binfile\n \n # Turn off the pending breakpoint queries.\n mi_gdb_test \"-interpreter-exec console \\\"set breakpoint pending off\\\"\" \\\n   {=cmd-param-changed,param=\\\"breakpoint pending\\\",.*\\^done} \\\n   \"-interpreter-exec console \\\"set breakpoint pending off\\\"\"\n \n-mi_run_to_main\n+mi_runto_main\n \n # Run to a location in the file.\n set bp_location [gdb_get_line_number \"set breakpoint here\"]"
    },
    {
      "sha": "6da365ef68ed191c1dea1f8bb21cd6bbea26b0b9",
      "filename": "gdb/testsuite/gdb.mi/mi-logging.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-logging.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-logging.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-logging.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -16,11 +16,6 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile basics.c\n set opts {debug}\n \n@@ -29,7 +24,9 @@ if [build_executable $testfile.exp $testfile $srcfile $opts] {\n     return -1\n }\n \n-if {[mi_run_to_main] < 0} {\n+mi_clean_restart $binfile\n+\n+if {[mi_runto_main] < 0} {\n     return -1\n }\n "
    },
    {
      "sha": "3e58754c9a42a60b284acba044490a0fc0b6e9ff",
      "filename": "gdb/testsuite/gdb.mi/mi-nonstop-exit.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 9,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-nonstop-exit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-nonstop-exit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-nonstop-exit.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -21,11 +21,6 @@ if { ![support_displaced_stepping] } {\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if {[mi_gdb_start]} {\n-    continue\n-}\n-\n #\n # Start here\n #\n@@ -36,14 +31,13 @@ if {[gdb_compile_pthreads \"$srcdir/$subdir/$srcfile\" $binfile executable $option\n     return -1\n }\n \n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load $binfile\n+mi_clean_restart $binfile\n \n mi_gdb_test \"-gdb-set non-stop 1\" \".*\"\n mi_gdb_test \"-gdb-set mi-async 1\" \".*\"\n mi_detect_async\n \n-if { [mi_run_to_main] < 0 } {\n+if { [mi_runto_main] < 0 } {\n     continue\n }\n \n@@ -53,7 +47,9 @@ mi_expect_stop \"exited-normally\" \"\" \"\" \"\" \"\" \"\" \"finished exec continue\"\n \n # Run the program again.\n \n-if { [mi_run_to_main] < 0 } {\n+mi_delete_breakpoints\n+\n+if { [mi_runto_main] < 0 } {\n     continue\n }\n "
    },
    {
      "sha": "bb4520e933700bdca571f7fff272942d4864caf2",
      "filename": "gdb/testsuite/gdb.mi/mi-nonstop.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 12,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-nonstop.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-nonstop.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-nonstop.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -22,15 +22,6 @@ if { ![support_displaced_stepping] } {\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-\n-save_vars { GDBFLAGS } {\n-    append GDBFLAGS \" -ex \\\"set non-stop on\\\"\"\n-    if {[mi_gdb_start]} {\n-\tcontinue\n-    }\n-}\n-\n proc mi_nonstop_resume { command test } {\n     if { [mi_send_resuming_command $command $test] != 0 } {\n \t# If a resume fails, assume non-stop is broken or unsupported\n@@ -50,13 +41,16 @@ if {[gdb_compile_pthreads \"$srcdir/$subdir/$srcfile\" $binfile executable $option\n     return -1\n }\n \n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load $binfile\n+\n+save_vars { GDBFLAGS } {\n+    append GDBFLAGS \" -ex \\\"set non-stop on\\\"\"\n+    mi_clean_restart $binfile\n+}\n \n mi_gdb_test \"-gdb-set mi-async 1\" \".*\"\n mi_detect_async\n \n-if { [mi_run_to_main] < 0 } {\n+if { [mi_runto_main] < 0 } {\n     continue\n }\n "
    },
    {
      "sha": "ebbdb4186a4d464b5bab418ef325d9a2b22945dc",
      "filename": "gdb/testsuite/gdb.mi/mi-ns-stale-regcache.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-ns-stale-regcache.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-ns-stale-regcache.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-ns-stale-regcache.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -24,11 +24,6 @@ if { ![support_displaced_stepping] } {\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if {[mi_gdb_start]} {\n-    continue\n-}\n-\n proc mi_nonstop_resume { command test } {\n     if { [mi_send_resuming_command $command $test] != 0 } {\n \t# If a resume fails, assume non-stop is broken or unsupported\n@@ -49,14 +44,13 @@ if {[gdb_compile \"$srcdir/$subdir/$srcfile\" \\\n     return -1\n }\n \n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load $binfile\n+mi_clean_restart $binfile\n \n mi_gdb_test \"-gdb-set non-stop 1\" \".*\"\n mi_gdb_test \"-gdb-set mi-async 1\" \".*\"\n mi_detect_async\n \n-if { [mi_run_to_main] < 0 } {\n+if { [mi_runto_main] < 0 } {\n     continue\n }\n "
    },
    {
      "sha": "aa0e81c84ca7c9e78367492516c60250ad30373a",
      "filename": "gdb/testsuite/gdb.mi/mi-nsintrall.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-nsintrall.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-nsintrall.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-nsintrall.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -21,11 +21,6 @@ if { ![support_displaced_stepping] } {\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if {[mi_gdb_start]} {\n-    continue\n-}\n-\n #\n # Start here\n #\n@@ -36,14 +31,13 @@ if {[gdb_compile_pthreads \"$srcdir/$subdir/$srcfile\" $binfile executable $option\n     return -1\n }\n \n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load $binfile\n+mi_clean_restart $binfile\n \n mi_gdb_test \"-gdb-set non-stop 1\" \".*\"\n mi_gdb_test \"-gdb-set mi-async 1\" \".*\"\n mi_detect_async\n \n-if { [mi_run_to_main] < 0 } {\n+if { [mi_runto_main] < 0 } {\n     continue\n }\n "
    },
    {
      "sha": "3e99b5f0c6f902339235033be27ed9977fe707f7",
      "filename": "gdb/testsuite/gdb.mi/mi-nsmoribund.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-nsmoribund.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-nsmoribund.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-nsmoribund.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -21,11 +21,6 @@ if { ![support_displaced_stepping] } {\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if {[mi_gdb_start]} {\n-    continue\n-}\n-\n #\n # Start here\n #\n@@ -36,14 +31,13 @@ if {[gdb_compile_pthreads \"$srcdir/$subdir/$srcfile\" $binfile executable $option\n     return -1\n }\n \n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load $binfile\n+mi_clean_restart $binfile\n \n mi_gdb_test \"-gdb-set non-stop 1\" \".*\"\n mi_gdb_test \"-gdb-set mi-async 1\" \".*\"\n mi_detect_async\n \n-if { [mi_run_to_main] < 0 } {\n+if { [mi_runto_main] < 0 } {\n     continue\n }\n "
    },
    {
      "sha": "6f4800aa912be04ca63a70ee07077326b1c05a7b",
      "filename": "gdb/testsuite/gdb.mi/mi-nsthrexec.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-nsthrexec.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-nsthrexec.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-nsthrexec.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -26,11 +26,6 @@ if { ![support_displaced_stepping] } {\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if {[mi_gdb_start]} {\n-    continue\n-}\n-\n #\n # Start here\n #\n@@ -41,14 +36,13 @@ if {[gdb_compile_pthreads \"$srcdir/$subdir/$srcfile\" $binfile executable $option\n     return -1\n }\n \n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load $binfile\n+mi_clean_restart $binfile\n \n mi_gdb_test \"-gdb-set non-stop 1\" \".*\"\n mi_gdb_test \"-gdb-set mi-async 1\" \".*\"\n mi_detect_async\n \n-if { [mi_run_to_main] < 0 } {\n+if { [mi_runto_main] < 0 } {\n     continue\n }\n "
    },
    {
      "sha": "7c1047eeea0bee3b71c09470170ae3d2c792eaa6",
      "filename": "gdb/testsuite/gdb.mi/mi-read-memory.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-read-memory.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-read-memory.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-read-memory.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -18,20 +18,16 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile\n \n if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n      untested \"failed to compile\"\n      return -1\n }\n \n+mi_clean_restart $binfile\n+mi_runto_main\n \n-mi_run_to_main\n mi_next_to \"main\" \"\" \"mi-read-memory.c\" \"20\" \"next at main\"\n \n mi_gdb_test \"1-data-read-memory\" \\"
    },
    {
      "sha": "bed77c89d15f2fc92e0ad1dc1d00728e6fbb1d0d",
      "filename": "gdb/testsuite/gdb.mi/mi-record-changed.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-record-changed.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-record-changed.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-record-changed.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -26,10 +26,9 @@ if { [gdb_compile \"$srcdir/$subdir/$srcfile\" $binfile \\\n \n load_lib mi-support.exp\n \n-if [mi_gdb_start] {\n-    return\n-}\n-mi_run_to_main\n+mi_clean_restart $binfile\n+\n+mi_runto_main\n \n mi_gdb_test \"record\" \".*=record-started,thread-group=\\\"i${decimal}\\\",method=\\\"full\\\".*\\\\^done\" \\\n     \"record\""
    },
    {
      "sha": "13ab59c13576a8163b7f2df5c9dcbc8ce3090992",
      "filename": "gdb/testsuite/gdb.mi/mi-regs.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-regs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-regs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-regs.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -25,11 +25,6 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile basics.c\n \n if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n@@ -110,8 +105,10 @@ proc sparc_register_tests { } {\n }\n \n if [istarget \"sparc-*-*\"] then {\n+    mi_clean_restart\n     sparc_register_tests_no_exec\n-    mi_run_to_main\n+    mi_clean_restart $binfile\n+    mi_runto_main\n     sparc_register_tests\n } else {\n     verbose \"mi-regs.exp tests ignored for this target\""
    },
    {
      "sha": "f92450eb2d66969efaab50fe0ae2a9318a3536a0",
      "filename": "gdb/testsuite/gdb.mi/mi-reverse.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-reverse.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-reverse.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-reverse.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -34,19 +34,15 @@ if ![supports_reverse] {\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile basics.c\n \n if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n      untested \"failed to compile\"\n      return -1\n }\n \n-mi_run_to_main\n+mi_clean_restart $binfile\n+mi_runto_main\n \n if [supports_process_record] {\n     # Activate process record/replay"
    },
    {
      "sha": "1f3e5593a069a9aa303936b37fd54a113c2b287d",
      "filename": "gdb/testsuite/gdb.mi/mi-stepi.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-stepi.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-stepi.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-stepi.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -23,11 +23,6 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile basics.c\n \n if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n@@ -68,7 +63,8 @@ proc test_stepi_nexti {} {\n     }\n }\n \n-mi_run_to_main\n+mi_clean_restart $binfile\n+mi_runto_main\n test_stepi_nexti\n \n mi_gdb_exit"
    },
    {
      "sha": "9a0a68d5c0021f665be1857a287b145ca21f60ea",
      "filename": "gdb/testsuite/gdb.mi/mi-stepn.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-stepn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-stepn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-stepn.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -19,19 +19,16 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile\n \n set opts {debug}\n if [build_executable ${testfile}.exp ${testfile} ${srcfile} $opts] {\n     return -1\n }\n \n-if {[mi_run_to_main] < 0} {\n+mi_clean_restart $binfile\n+\n+if {[mi_runto_main] < 0} {\n     return -1\n }\n "
    },
    {
      "sha": "f12b758c2f6cf4d5d6bc4e40bce77e5701eb531c",
      "filename": "gdb/testsuite/gdb.mi/mi-sym-info.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-sym-info.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-sym-info.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-sym-info.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -33,12 +33,9 @@ if {[prepare_for_testing \"failed to prepare\" ${testfile} \\\n     return -1\n }\n \n-gdb_exit\n-if {[mi_gdb_start]} {\n-    continue\n-}\n+mi_clean_restart $binfile\n \n-mi_run_to_main\n+mi_runto_main\n \n set qstr \"\\\"\\[^\\\"\\]+\\\"\"\n set fun_re \"\\{line=\\\"$decimal\\\",name=${qstr},type=${qstr},description=${qstr}\\}\""
    },
    {
      "sha": "4207f31647a4a0ecc6572fb0cd8cb19bc09bd9d9",
      "filename": "gdb/testsuite/gdb.mi/mi-syn-frame.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-syn-frame.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-syn-frame.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-syn-frame.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -32,9 +32,9 @@ if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {deb\n      return -1\n }\n \n-mi_gdb_exit\n-mi_gdb_start\n-mi_run_to_main\n+mi_clean_restart $binfile\n+\n+mi_runto_main\n \n mi_create_breakpoint \"foo\" \\\n     \"insert breakpoint foo\" \\"
    },
    {
      "sha": "3ad3b5c682926a7c1f2f9cc7a4b60e2c3aca7fe4",
      "filename": "gdb/testsuite/gdb.mi/mi-var-create-rtti.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-var-create-rtti.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-var-create-rtti.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-var-create-rtti.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -16,23 +16,16 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if [mi_gdb_start] {\n-    continue\n-}\n-\n standard_testfile .c\n set opts {debug}\n \n if [build_executable $testfile.exp $testfile $srcfile $opts] {\n     return -1\n }\n \n-mi_delete_breakpoints\n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load ${binfile}\n+mi_clean_restart $binfile\n \n-if ![mi_run_to_main] {\n+if {[mi_runto_main] < 0} {\n     untested \"could not run to main\"\n     return -1\n }"
    },
    {
      "sha": "6b56f384239a330a50a1d015e94639e7c82584bf",
      "filename": "gdb/testsuite/gdb.mi/mi-watch-nonstop.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-watch-nonstop.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/mi-watch-nonstop.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-watch-nonstop.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -25,11 +25,6 @@ if { ![support_displaced_stepping] } {\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if {[mi_gdb_start]} {\n-    continue\n-}\n-\n proc mi_nonstop_resume { command test } {\n     if { [mi_send_resuming_command $command $test] != 0 } {\n \t# If a resume fails, assume non-stop is broken or unsupported\n@@ -48,14 +43,13 @@ if {[gdb_compile \"$srcdir/$subdir/$srcfile\" $binfile executable {debug}] != \"\" }\n     return -1\n }\n \n-mi_gdb_reinitialize_dir $srcdir/$subdir\n-mi_gdb_load $binfile\n+mi_clean_restart $binfile\n \n mi_gdb_test \"-gdb-set non-stop 1\" \".*\"\n mi_gdb_test \"-gdb-set mi-async 1\" \".*\"\n mi_detect_async\n \n-if { [mi_run_to_main] < 0 } {\n+if { [mi_runto_main] < 0 } {\n     continue\n }\n "
    },
    {
      "sha": "850261b83e19e6113a2a12edcab0c6570aebaa22",
      "filename": "gdb/testsuite/gdb.mi/pr11022.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/pr11022.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.mi/pr11022.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/pr11022.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -29,12 +29,10 @@ if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {deb\n \n proc test_memory_changed_observer { mi_command } {\n     with_test_prefix \"${mi_command}\" {\n-\tglobal srcfile\n+\tglobal srcfile binfile\n \n-\tif [mi_gdb_start] {\n-\t    return\n-\t}\n-\tmi_run_to_main\n+\tmi_clean_restart $binfile\n+\tmi_runto_main\n \n \tset line_number [gdb_get_line_number \"break here\"]\n \tmi_gdb_test \"-break-insert ${srcfile}:${line_number}\" \\"
    },
    {
      "sha": "f76a4719e4ed4633e06ade3496c9ac70f32e60cc",
      "filename": "gdb/testsuite/gdb.python/py-mi-events.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.python/py-mi-events.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.python/py-mi-events.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-mi-events.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -49,7 +49,8 @@ if [is_remote host] {\n }\n \n mi_gdb_test \"-file-exec-and-symbols ${filename}\"  \".*\\\\^done\" \"file-exec-and-symbols operation\"\n-mi_run_to_main\n+mi_gdb_load ${binfile}\n+mi_runto_main\n \n \n # register the python event handlers with test-events command"
    },
    {
      "sha": "2e611c7d964a2113676c54c51100e0e3d613f560",
      "filename": "gdb/testsuite/gdb.python/py-mi-var-info-path-expression.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 8,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.python/py-mi-var-info-path-expression.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.python/py-mi-var-info-path-expression.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-mi-var-info-path-expression.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -18,11 +18,6 @@\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-gdb_exit\n-if {[mi_gdb_start]} {\n-    continue\n-}\n-\n #\n # Start here\n #\n@@ -32,6 +27,8 @@ if {[gdb_compile \"$srcdir/$subdir/$srcfile\" $binfile executable {debug}] != \"\" }\n     return -1\n }\n \n+mi_clean_restart $binfile\n+\n # Skip all tests if Python scripting is not enabled.\n if { [mi_skip_python_tests] } { continue }\n \n@@ -48,9 +45,7 @@ mi_gdb_test \"set python print-stack full\" \\\n   \".*\\\\^done\" \\\n   \"set python print-stack full\"\n \n-\n-mi_run_to_main\n-\n+mi_runto_main\n \n mi_continue_to_line [gdb_get_line_number \"next line\" ${srcfile}] \\\n   \"step to breakpoint\""
    },
    {
      "sha": "4c7c103605cf77813e33409042816a2517c74a1c",
      "filename": "gdb/testsuite/gdb.trace/mi-trace-frame-collected.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.trace/mi-trace-frame-collected.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.trace/mi-trace-frame-collected.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.trace/mi-trace-frame-collected.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -41,10 +41,8 @@ gdb_exit\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-if [mi_gdb_start] {\n-    return\n-}\n-mi_run_to_main\n+mi_clean_restart $binfile\n+mi_runto_main\n \n mi_gdb_test \"-break-insert end\" \\\n     \"\\\\^done,bkpt=\\{number=\\\"${decimal}\\\",type=\\\"breakpoint\\\".*\\\"\\}\" \\"
    },
    {
      "sha": "4abb92be1075ab7614701acb87d005fc72f6e68a",
      "filename": "gdb/testsuite/gdb.trace/mi-trace-unavailable.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.trace/mi-trace-unavailable.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.trace/mi-trace-unavailable.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.trace/mi-trace-unavailable.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -36,10 +36,8 @@ gdb_exit\n load_lib mi-support.exp\n set MIFLAGS \"-i=mi\"\n \n-if [mi_gdb_start] {\n-    return\n-}\n-mi_run_to_main\n+mi_clean_restart $binfile\n+mi_runto_main\n \n mi_gdb_test \"-break-insert marker\" \\\n     \"\\\\^done,bkpt=\\{number=\\\"${decimal}\\\",type=\\\"breakpoint\\\".*\\\"\\}\" \\"
    },
    {
      "sha": "a4c7cf6f6b7b6b726205693af5cc435dd1e257c1",
      "filename": "gdb/testsuite/gdb.trace/mi-traceframe-changed.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.trace/mi-traceframe-changed.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/gdb.trace/mi-traceframe-changed.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.trace/mi-traceframe-changed.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -49,10 +49,7 @@ proc test_tfind_tfile { } {\n \tglobal decimal\n \tglobal tfile_basic\n \n-\tif [mi_gdb_start] {\n-\t    return\n-\t}\n-\tmi_gdb_load ${binfile}\n+\tmi_clean_restart $binfile\n \n \tmi_gdb_test \"-target-select tfile ${tfile_basic}\" \\\n \t    \".*=breakpoint-created,bkpt=\\{number=\\\"${decimal}\\\",type=\\\"tracepoint\\\",disp=\\\"keep\\\",enabled=\\\"y\\\",.*,func=\\\"write_basic_trace_file\\\".*\\\\^connected\" \\\n@@ -124,11 +121,10 @@ gdb_exit\n proc test_tfind_remote { } {\n     with_test_prefix \"remote\" {\n \tglobal decimal\n+\tglobal binfile\n \n-\tif [mi_gdb_start] {\n-\t    return\n-\t}\n-\tmi_run_to_main\n+\tmi_clean_restart $binfile\n+\tmi_runto_main\n \n \tmi_gdb_test \"-break-insert end\" \"\\\\^done.*\" \"break end\"\n \tmi_gdb_test \"-break-insert -a func2\" \"\\\\^done.*\" \"break func2\""
    },
    {
      "sha": "3dea699a0b2997a10670166067e359663fb40f6a",
      "filename": "gdb/testsuite/lib/mi-support.exp",
      "status": "modified",
      "additions": 28,
      "deletions": 15,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/lib/mi-support.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c/gdb/testsuite/lib/mi-support.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/mi-support.exp?ref=b75d55d4d2fdcabb0e198ef456bcc78d84ad5c7c",
      "patch": "@@ -1023,28 +1023,41 @@ proc mi_run_with_cli {args} {\n     return [eval mi_run_cmd_full 0 $args]\n }\n \n-#\n-# Just like run-to-main but works with the MI interface\n-#\n-\n-proc mi_run_to_main { } {\n-    global suppress_flag\n-    if { $suppress_flag } {\n-\treturn -1\n-    }\n+# Starts fresh GDB binary and loads an optional executable into GDB.\n+# Usage: mi_clean_restart [executable]\n+# EXECUTABLE is the basename of the binary.\n+# Return -1 if starting gdb or loading the executable failed.\n \n+proc mi_clean_restart { args } {\n     global srcdir\n     global subdir\n-    global binfile\n-    global srcfile\n+    global errcnt\n+    global warncnt\n+\n+    if { [llength $args] > 1 } {\n+\terror \"bad number of args: [llength $args]\"\n+    }\n+\n+    gdb_exit\n+\n+    # This is a clean restart, so reset error and warning count.\n+    set errcnt 0\n+    set warncnt 0\n+\n+    if {[mi_gdb_start]} {\n+\treturn -1\n+    }\n \n-    mi_delete_breakpoints\n     mi_gdb_reinitialize_dir $srcdir/$subdir\n-    mi_gdb_load ${binfile}\n \n-    mi_runto_main\n-}\n+    if { [llength $args] >= 1 } {\n+\tset executable [lindex $args 0]\n+\tset binfile [standard_output_file ${executable}]\n+\treturn [mi_gdb_load ${binfile}]\n+    }\n \n+    return 0\n+}\n \n # Just like gdb's \"runto\" proc, it will run the target to a given\n # function.  The big difference here between mi_runto and mi_execute_to"
    }
  ]
}