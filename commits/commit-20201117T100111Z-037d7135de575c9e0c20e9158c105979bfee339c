{
  "sha": "037d7135de575c9e0c20e9158c105979bfee339c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDM3ZDcxMzVkZTU3NWM5ZTBjMjBlOTE1OGMxMDU5NzliZmVlMzM5Yw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-11-16T11:36:56Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-11-17T10:01:11Z"
    },
    "message": "gdb: improve command completion for 'print', 'x', and 'display'\n\nThe /FMT specification on the print command currently breaks command\ncompletion, so:\n\n  (gdb) p var.<TAB><TAB>\n  .... list of fields in var .....\n\nBut,\n\n  (gdb) p/d var.<TAB><TAB>\n  ..... list of all symbols .....\n\nAfter this commit this issue is now resolved.\n\nThere are some other details around tab-completion and /FMT which\nhopefully this commit improves.  So, before:\n\n  (gdb) p/<TAB><TAB>\n  .... lists all symbols .....\n\nAfter:\n\n  (gdb) p/<TAB><TAB>\t\t# Nothing changes...\n\nThe thinking here is that after a / the user must type a FMT, but we\ndon't offer tab completion on FMT characters.  Placing a symbol\ndirectly after a / will not do what the user expects, so offering that\nseems wrong.\n\nSimilarly, before we had:\n\n  (gdb) p/d<TAB><TAB>\n  ... lists all symbols starting with 'd' ....\n\nBut afterwards:\n\n  (gdb) p/d<TAB><TAB>\t\t# Adds a single space, so we get:\n  (gdb) p/d <CURSOR>\n\nAs before, typing a symbol where FMT is expected will not do what the\nuser expects.  If the user has added a FMT string then upon tab\ncompletion GDB assumes the FMT string is complete and prepares the\nuser to type an expression.\n\nIn this commit I have also added completion functions for the 'x' and\n'display' commands.  These commands also support /FMT specifiers and\nso share some code with 'print'.\n\ngdb/ChangeLog:\n\n\t* printcmd.c: Include 'safe-ctype.c'.\n\t(skip_over_slash_fmt): New function.\n\t(print_command_completer): Call skip_over_slash_fmt.\n\t(display_and_x_command_completer): New function.\n\t(_initialize_printcmd): Add command completion for 'x' and\n\t'display'.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/completion.exp: Add new tests.",
    "tree": {
      "sha": "78dacfb3bfcbbdd11b0a2de7646fcc85ff9d5ca3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/78dacfb3bfcbbdd11b0a2de7646fcc85ff9d5ca3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/037d7135de575c9e0c20e9158c105979bfee339c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/037d7135de575c9e0c20e9158c105979bfee339c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/037d7135de575c9e0c20e9158c105979bfee339c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/037d7135de575c9e0c20e9158c105979bfee339c/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0bfc584f6630cba3d7bbaab80517e0936ed8a113",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0bfc584f6630cba3d7bbaab80517e0936ed8a113",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0bfc584f6630cba3d7bbaab80517e0936ed8a113"
    }
  ],
  "stats": {
    "total": 123,
    "additions": 121,
    "deletions": 2
  },
  "files": [
    {
      "sha": "214d04814ba2eeba05accd9a48fa1934ec2574af",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/037d7135de575c9e0c20e9158c105979bfee339c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/037d7135de575c9e0c20e9158c105979bfee339c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=037d7135de575c9e0c20e9158c105979bfee339c",
      "patch": "@@ -1,3 +1,12 @@\n+2020-11-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* printcmd.c: Include 'safe-ctype.c'.\n+\t(skip_over_slash_fmt): New function.\n+\t(print_command_completer): Call skip_over_slash_fmt.\n+\t(display_and_x_command_completer): New function.\n+\t(_initialize_printcmd): Add command completion for 'x' and\n+\t'display'.\n+\n 2020-11-16  Pedro Alves  <pedro@palves.net>\n \n \t* frame.c (get_prev_frame): Move get_frame_id call from here ..."
    },
    {
      "sha": "8c05ac8c8337f8d2769f6fd54a6a3f24c4bd60cc",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 79,
      "deletions": 2,
      "changes": 81,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/037d7135de575c9e0c20e9158c105979bfee339c/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/037d7135de575c9e0c20e9158c105979bfee339c/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=037d7135de575c9e0c20e9158c105979bfee339c",
      "patch": "@@ -53,6 +53,7 @@\n #include \"source.h\"\n #include \"gdbsupport/byte-vector.h\"\n #include \"gdbsupport/gdb_optional.h\"\n+#include \"safe-ctype.h\"\n \n /* Last specified output format.  */\n \n@@ -1233,6 +1234,62 @@ print_command_1 (const char *args, int voidprint)\n     print_value (val, print_opts);\n }\n \n+/* Called from command completion function to skip over /FMT\n+   specifications, allowing the rest of the line to be completed.  Returns\n+   true if the /FMT is at the end of the current line and there is nothing\n+   left to complete, otherwise false is returned.\n+\n+   In either case *ARGS can be updated to point after any part of /FMT that\n+   is present.\n+\n+   This function is designed so that trying to complete '/' will offer no\n+   completions, the user needs to insert the format specification\n+   themselves.  Trying to complete '/FMT' (where FMT is any non-empty set\n+   of alpha-numeric characters) will cause readline to insert a single\n+   space, setting the user up to enter the expression.  */\n+\n+static bool\n+skip_over_slash_fmt (completion_tracker &tracker, const char **args)\n+{\n+  const char *text = *args;\n+\n+  if (text[0] == '/')\n+    {\n+      bool in_fmt;\n+      tracker.set_use_custom_word_point (true);\n+\n+      if (ISALNUM (text[1]) || ISSPACE (text[1]))\n+\t{\n+\t  /* Skip over the actual format specification.  */\n+\t  while (*text != '\\0' && !ISSPACE (*text))\n+\t    ++text;\n+\n+\t  if (*text == '\\0')\n+\t    {\n+\t      in_fmt = true;\n+\t      tracker.add_completion (make_unique_xstrdup (text));\n+\t    }\n+\t  else\n+\t    {\n+\t      in_fmt = false;\n+\t      while (ISSPACE (*text))\n+\t\t++text;\n+\t    }\n+\t}\n+      else if (text[1] == '\\0')\n+\t{\n+\t  in_fmt = true;\n+\t  ++text;\n+\t}\n+\n+      tracker.advance_custom_word_point_by (text - *args);\n+      *args = text;\n+      return in_fmt;\n+    }\n+\n+  return false;\n+}\n+\n /* See valprint.h.  */\n \n void\n@@ -1245,6 +1302,9 @@ print_command_completer (struct cmd_list_element *ignore,\n       (tracker, &text, gdb::option::PROCESS_OPTIONS_REQUIRE_DELIMITER, group))\n     return;\n \n+  if (skip_over_slash_fmt (tracker, &text))\n+    return;\n+\n   const char *word = advance_to_expression_complete_word_point (tracker, text);\n   expression_completer (ignore, tracker, text, word);\n }\n@@ -1735,6 +1795,21 @@ x_command (const char *exp, int from_tty)\n \tset_internalvar (lookup_internalvar (\"__\"), last_examine_value.get ());\n     }\n }\n+\n+/* Command completion for the 'display' and 'x' commands.  */\n+\n+static void\n+display_and_x_command_completer (struct cmd_list_element *ignore,\n+\t\t\t\t completion_tracker &tracker,\n+\t\t\t\t const char *text, const char * /*word*/)\n+{\n+  if (skip_over_slash_fmt (tracker, &text))\n+    return;\n+\n+  const char *word = advance_to_expression_complete_word_point (tracker, text);\n+  expression_completer (ignore, tracker, text, word);\n+}\n+\n \f\n \n /* Add an expression to the auto-display chain.\n@@ -2713,7 +2788,7 @@ Describe what symbol is at location ADDR.\\n\\\n Usage: info symbol ADDR\\n\\\n Only for symbols with fixed locations (global or static scope).\"));\n \n-  add_com (\"x\", class_vars, x_command, _(\"\\\n+  c = add_com (\"x\", class_vars, x_command, _(\"\\\n Examine memory: x/FMT ADDRESS.\\n\\\n ADDRESS is an expression for the memory address to examine.\\n\\\n FMT is a repeat count followed by a format letter and a size letter.\\n\\\n@@ -2727,6 +2802,7 @@ examined backward from the address.\\n\\n\\\n Defaults for format and size letters are those previously used.\\n\\\n Default count is 1.  Default address is following last thing printed\\n\\\n with this command or \\\"print\\\".\"));\n+  set_cmd_completer_handle_brkchars (c, display_and_x_command_completer);\n \n   add_info (\"display\", info_display_command, _(\"\\\n Expressions to display when program stops, with code numbers.\\n\\\n@@ -2741,7 +2817,7 @@ No argument means cancel all automatic-display expressions.\\n\\\n Do \\\"info display\\\" to see current list of code numbers.\"),\n \t   &cmdlist);\n \n-  add_com (\"display\", class_vars, display_command, _(\"\\\n+  c = add_com (\"display\", class_vars, display_command, _(\"\\\n Print value of expression EXP each time the program stops.\\n\\\n Usage: display[/FMT] EXP\\n\\\n /FMT may be used before EXP as in the \\\"print\\\" command.\\n\\\n@@ -2750,6 +2826,7 @@ as in the \\\"x\\\" command, and then EXP is used to get the address to examine\\n\\\n and examining is done as in the \\\"x\\\" command.\\n\\n\\\n With no argument, display all currently requested auto-display expressions.\\n\\\n Use \\\"undisplay\\\" to cancel display requests previously made.\"));\n+  set_cmd_completer_handle_brkchars (c, display_and_x_command_completer);\n \n   add_cmd (\"display\", class_vars, enable_display_command, _(\"\\\n Enable some expressions to be displayed when program stops.\\n\\"
    },
    {
      "sha": "3795205309d7d26eb705973711144df88bc4d5af",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/037d7135de575c9e0c20e9158c105979bfee339c/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/037d7135de575c9e0c20e9158c105979bfee339c/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=037d7135de575c9e0c20e9158c105979bfee339c",
      "patch": "@@ -1,3 +1,7 @@\n+2020-11-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.base/completion.exp: Add new tests.\n+\n 2020-11-16  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.dwarf2/data-loc.exp: Update expected output.  Remove C"
    },
    {
      "sha": "090f52150a880df810899936fb238ba65a7177a1",
      "filename": "gdb/testsuite/gdb.base/completion.exp",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/037d7135de575c9e0c20e9158c105979bfee339c/gdb/testsuite/gdb.base/completion.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/037d7135de575c9e0c20e9158c105979bfee339c/gdb/testsuite/gdb.base/completion.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/completion.exp?ref=037d7135de575c9e0c20e9158c105979bfee339c",
      "patch": "@@ -172,6 +172,11 @@ if { ![readline_is_used] } {\n     return -1\n }\n \n+# The bulk of this test script pre-dates the completion-support\n+# library, and should probably (where possible) be converted.\n+# However, for now, new tests are being added using this library.\n+load_lib completion-support.exp\n+\n set test \"complete 'hfgfh'\"\n send_gdb \"hfgfh\\t\"\n gdb_test_multiple \"\" \"$test\" {\n@@ -922,3 +927,27 @@ gdb_test_multiple \"\" \"$test\" {\n \tpass \"$test\"\n     }\n }\n+\n+# Test completion of 'p', 'x', and 'display' all using a /FMT.\n+foreach_with_prefix spc { \" \" \"\" } {\n+    test_gdb_complete_multiple \"p${spc}/d some_union_global.\" \"\" \"f\" {\n+\t\"f1\"\n+\t\"f2\"\n+    }\n+\n+    test_gdb_complete_none \"p${spc}/\"\n+    test_gdb_complete_unique \"p${spc}/d\" \"p${spc}/d\"\n+\n+    test_gdb_complete_unique \"x${spc}/1w values\\[0\\].b\"\\\n+\t\"x${spc}/1w values\\[0\\].b_field\"\n+\n+    test_gdb_complete_unique \"display${spc}/x values\\[0\\].z\"\\\n+\t\"display${spc}/x values\\[0\\].z_field\"\n+}\n+\n+# Test 'p' using both options and /FMT.\n+test_gdb_complete_multiple \"p -array on -- /d some_union_global.\" \\\n+    \"\" \"f\" {\n+\t\"f1\"\n+\t\"f2\"\n+    }"
    }
  ]
}