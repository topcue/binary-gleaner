{
  "sha": "95441c43cc0a8f30a27fe9bfc7f42f63f80b95c5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTU0NDFjNDNjYzBhOGYzMGEyN2ZlOWJmYzdmNDJmNjNmODBiOTVjNQ==",
  "commit": {
    "author": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2020-01-31T18:32:48Z"
    },
    "committer": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2020-01-31T18:32:48Z"
    },
    "message": "nios2: recognize %gotoff relocation in assembler\n\nThe nios2 ABI documentation lists %gotoff as assembler syntax for the\nR_NIOS2_GOTOFF relocation, used to represent a 32-bit GOT-relative offset\nin data sections.  This was previously unimplemented in GAS.\n\n2020-01-31  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgas/\n\t* config/tc-nios2.c (nios2_cons): Handle %gotoff as well as\n\t%tls_ldo.",
    "tree": {
      "sha": "d4c340308afa8f4159d655d9f3a30efabc952a23",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d4c340308afa8f4159d655d9f3a30efabc952a23"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/95441c43cc0a8f30a27fe9bfc7f42f63f80b95c5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95441c43cc0a8f30a27fe9bfc7f42f63f80b95c5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/95441c43cc0a8f30a27fe9bfc7f42f63f80b95c5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95441c43cc0a8f30a27fe9bfc7f42f63f80b95c5/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "d465d69579d477be265960820c283166cdd221d9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d465d69579d477be265960820c283166cdd221d9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d465d69579d477be265960820c283166cdd221d9"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 35,
    "deletions": 10
  },
  "files": [
    {
      "sha": "bc149c161f998a8187ea7f289435143675801125",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95441c43cc0a8f30a27fe9bfc7f42f63f80b95c5/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95441c43cc0a8f30a27fe9bfc7f42f63f80b95c5/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=95441c43cc0a8f30a27fe9bfc7f42f63f80b95c5",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-31  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* config/tc-nios2.c (nios2_cons): Handle %gotoff as well as\n+\t%tls_ldo.\n+\n 2020-01-31  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \tPR gas/25472"
    },
    {
      "sha": "a7039e4c17016f60ef0037f642c5eb8f95501797",
      "filename": "gas/config/tc-nios2.c",
      "status": "modified",
      "additions": 30,
      "deletions": 10,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95441c43cc0a8f30a27fe9bfc7f42f63f80b95c5/gas/config/tc-nios2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95441c43cc0a8f30a27fe9bfc7f42f63f80b95c5/gas/config/tc-nios2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-nios2.c?ref=95441c43cc0a8f30a27fe9bfc7f42f63f80b95c5",
      "patch": "@@ -4011,31 +4011,48 @@ nios2_elf_section_flags (flagword flags, int attr, int type ATTRIBUTE_UNUSED)\n   return flags;\n }\n \n-/* Implement TC_PARSE_CONS_EXPRESSION to handle %tls_ldo(...) */\n+/* Implement TC_PARSE_CONS_EXPRESSION to handle %tls_ldo(...) and\n+   %gotoff(...).  */\n bfd_reloc_code_real_type\n nios2_cons (expressionS *exp, int size)\n {\n-  bfd_reloc_code_real_type nios2_tls_ldo_reloc = BFD_RELOC_NONE;\n+  bfd_reloc_code_real_type explicit_reloc = BFD_RELOC_NONE;\n+  const char *reloc_name = NULL;\n \n   SKIP_WHITESPACE ();\n   if (input_line_pointer[0] == '%')\n     {\n       if (strprefix (input_line_pointer + 1, \"tls_ldo\"))\n \t{\n+\t  reloc_name = \"%tls_ldo\";\n \t  if (size != 4)\n \t    as_bad (_(\"Illegal operands: %%tls_ldo in %d-byte data field\"),\n \t\t    size);\n \t  else\n \t    {\n \t      input_line_pointer += 8;\n-\t      nios2_tls_ldo_reloc = BFD_RELOC_NIOS2_TLS_DTPREL;\n+\t      explicit_reloc = BFD_RELOC_NIOS2_TLS_DTPREL;\n \t    }\n \t}\n-      if (nios2_tls_ldo_reloc != BFD_RELOC_NONE)\n+      else if (strprefix (input_line_pointer + 1, \"gotoff\"))\n+\t{\n+\t  reloc_name = \"%gotoff\";\n+\t  if (size != 4)\n+\t    as_bad (_(\"Illegal operands: %%gotoff in %d-byte data field\"),\n+\t\t    size);\n+\t  else\n+\t    {\n+\t      input_line_pointer += 7;\n+\t      explicit_reloc = BFD_RELOC_NIOS2_GOTOFF;\n+\t    }\n+\t}\n+\n+      if (explicit_reloc != BFD_RELOC_NONE)\n \t{\n \t  SKIP_WHITESPACE ();\n \t  if (input_line_pointer[0] != '(')\n-\t    as_bad (_(\"Illegal operands: %%tls_ldo requires arguments in ()\"));\n+\t    as_bad (_(\"Illegal operands: %s requires arguments in ()\"),\n+\t\t    reloc_name);\n \t  else\n \t    {\n \t      int c;\n@@ -4053,29 +4070,32 @@ nios2_cons (expressionS *exp, int size)\n \t\t  }\n \n \t      if (c != ')')\n-\t\tas_bad (_(\"Illegal operands: %%tls_ldo requires arguments in ()\"));\n+\t\tas_bad (_(\"Illegal operands: %s requires arguments in ()\"),\n+\t\t\treloc_name);\n \t      else\n \t\t{\n \t\t  *end = '\\0';\n \t\t  expression (exp);\n \t\t  *end = c;\n \t\t  if (input_line_pointer != end)\n-\t\t    as_bad (_(\"Illegal operands: %%tls_ldo requires arguments in ()\"));\n+\t\t    as_bad (_(\"Illegal operands: %s requires arguments in ()\"),\n+\t\t\t    reloc_name);\n \t\t  else\n \t\t    {\n \t\t      input_line_pointer++;\n \t\t      SKIP_WHITESPACE ();\n \t\t      c = *input_line_pointer;\n \t\t      if (! is_end_of_line[c] && c != ',')\n-\t\t\tas_bad (_(\"Illegal operands: garbage after %%tls_ldo()\"));\n+\t\t\tas_bad (_(\"Illegal operands: garbage after %s()\"),\n+\t\t\t\treloc_name);\n \t\t    }\n \t\t}\n \t    }\n \t}\n     }\n-  if (nios2_tls_ldo_reloc == BFD_RELOC_NONE)\n+  if (explicit_reloc == BFD_RELOC_NONE)\n     expression (exp);\n-  return nios2_tls_ldo_reloc;\n+  return explicit_reloc;\n }\n \n /* Implement HANDLE_ALIGN.  */"
    }
  ]
}