{
  "sha": "fa16423949fc78b3d9c499eddefa91b99228fbc9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmExNjQyMzk0OWZjNzhiM2Q5YzQ5OWVkZGVmYTkxYjk5MjI4ZmJjOQ==",
  "commit": {
    "author": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2020-02-19T22:51:07Z"
    },
    "committer": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2020-02-19T22:51:07Z"
    },
    "message": "RISC-V: Convert the ADD/ADDI to the compressed MV/LI if RS1 is zero.\n\n\t2020-02-19  Nelson Chu  <nelson.chu@sifive.com>\n\tgas/\n\t* testsuite/gas/riscv/c-add-addi.d: New testcase.\n\t* testsuite/gas/riscv/c-add-addi.s: Likewise.\n\topcodes/\n\t* riscv-opc.c (riscv_opcodes): Convert add/addi to the compressed\n\tc.mv/c.li if rs1 is zero.\n\nChange-Id: Id939b5e6db80d267a832545f3ffef7b9ba881f7d",
    "tree": {
      "sha": "a7092b040556f52f3d0e236b1786524a0f32bb07",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a7092b040556f52f3d0e236b1786524a0f32bb07"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fa16423949fc78b3d9c499eddefa91b99228fbc9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa16423949fc78b3d9c499eddefa91b99228fbc9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fa16423949fc78b3d9c499eddefa91b99228fbc9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa16423949fc78b3d9c499eddefa91b99228fbc9/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "741cb83912fffbc65784168204ce1a597e0fbd26",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/741cb83912fffbc65784168204ce1a597e0fbd26",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/741cb83912fffbc65784168204ce1a597e0fbd26"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 26,
    "deletions": 0
  },
  "files": [
    {
      "sha": "92869a3e0036967e85dec610d88e53dcf9d4729e",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa16423949fc78b3d9c499eddefa91b99228fbc9/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa16423949fc78b3d9c499eddefa91b99228fbc9/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=fa16423949fc78b3d9c499eddefa91b99228fbc9",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-19  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* testsuite/gas/riscv/c-add-addi.d: New testcase.\n+\t* testsuite/gas/riscv/c-add-addi.s: Likewise.\n+\n 2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>\n \n \tPR 25576"
    },
    {
      "sha": "14913dfd7fbad0e922cf99377eaa8058e892d05c",
      "filename": "gas/testsuite/gas/riscv/c-add-addi.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa16423949fc78b3d9c499eddefa91b99228fbc9/gas/testsuite/gas/riscv/c-add-addi.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa16423949fc78b3d9c499eddefa91b99228fbc9/gas/testsuite/gas/riscv/c-add-addi.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/c-add-addi.d?ref=fa16423949fc78b3d9c499eddefa91b99228fbc9",
      "patch": "@@ -0,0 +1,11 @@\n+#as:\n+#objdump: -dr\n+\n+.*:[ \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <.text>:\n+[ \t]+0:[ \t]+4605[ \t]+li[ \t]+a2,1\n+[ \t]+2:[ \t]+852e[ \t]+mv[ \t]+a0,a1"
    },
    {
      "sha": "527449111dc56872056a7ba73b9ef44e41cd95b4",
      "filename": "gas/testsuite/gas/riscv/c-add-addi.s",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa16423949fc78b3d9c499eddefa91b99228fbc9/gas/testsuite/gas/riscv/c-add-addi.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa16423949fc78b3d9c499eddefa91b99228fbc9/gas/testsuite/gas/riscv/c-add-addi.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/c-add-addi.s?ref=fa16423949fc78b3d9c499eddefa91b99228fbc9",
      "patch": "@@ -0,0 +1,3 @@\n+.option rvc\n+addi a2, zero, 1\n+add a0, zero, a1"
    },
    {
      "sha": "e5aa59d03a619d795601fe5c1c063ebafa9b10c8",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa16423949fc78b3d9c499eddefa91b99228fbc9/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa16423949fc78b3d9c499eddefa91b99228fbc9/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=fa16423949fc78b3d9c499eddefa91b99228fbc9",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-19  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* riscv-opc.c (riscv_opcodes): Convert add/addi to the compressed\n+\tc.mv/c.li if rs1 is zero.\n+\n 2020-02-17  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* i386-gen.c (cpu_flag_init): Replace CpuABM with"
    },
    {
      "sha": "ceedcafc191ea99516e758345810478de2bcced6",
      "filename": "opcodes/riscv-opc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa16423949fc78b3d9c499eddefa91b99228fbc9/opcodes/riscv-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa16423949fc78b3d9c499eddefa91b99228fbc9/opcodes/riscv-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-opc.c?ref=fa16423949fc78b3d9c499eddefa91b99228fbc9",
      "patch": "@@ -269,12 +269,14 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"addi\",        0, INSN_CLASS_C,   \"d,CU,Cj\",  MATCH_C_ADDI, MASK_C_ADDI, match_rd_nonzero, INSN_ALIAS },\n {\"addi\",        0, INSN_CLASS_C,   \"d,CU,z\",    MATCH_C_NOP, MASK_C_ADDI | MASK_RVC_IMM, match_c_nop, INSN_ALIAS },\n {\"addi\",        0, INSN_CLASS_C,   \"Cc,Cc,CL\", MATCH_C_ADDI16SP, MASK_C_ADDI16SP, match_c_addi16sp, INSN_ALIAS },\n+{\"addi\",        0, INSN_CLASS_C,   \"d,Cz,Co\",  MATCH_C_LI, MASK_C_LI, match_rd_nonzero, INSN_ALIAS },\n {\"addi\",        0, INSN_CLASS_I,   \"d,s,j\",  MATCH_ADDI, MASK_ADDI, match_opcode, 0 },\n {\"add\",         0, INSN_CLASS_C,   \"d,CU,CV\",  MATCH_C_ADD, MASK_C_ADD, match_c_add, INSN_ALIAS },\n {\"add\",         0, INSN_CLASS_C,   \"d,CV,CU\",  MATCH_C_ADD, MASK_C_ADD, match_c_add, INSN_ALIAS },\n {\"add\",         0, INSN_CLASS_C,   \"d,CU,Co\",  MATCH_C_ADDI, MASK_C_ADDI, match_rd_nonzero, INSN_ALIAS },\n {\"add\",         0, INSN_CLASS_C,   \"Ct,Cc,CK\", MATCH_C_ADDI4SPN, MASK_C_ADDI4SPN, match_c_addi4spn, INSN_ALIAS },\n {\"add\",         0, INSN_CLASS_C,   \"Cc,Cc,CL\", MATCH_C_ADDI16SP, MASK_C_ADDI16SP, match_c_addi16sp, INSN_ALIAS },\n+{\"add\",         0, INSN_CLASS_C,   \"d,Cz,CV\",  MATCH_C_MV, MASK_C_MV, match_c_add, INSN_ALIAS },\n {\"add\",         0, INSN_CLASS_I,   \"d,s,t\",  MATCH_ADD, MASK_ADD, match_opcode, 0 },\n /* This is used for TLS, where the fourth arg is %tprel_add, to get a reloc\n    applied to an add instruction, for relaxation to use.  */"
    }
  ]
}