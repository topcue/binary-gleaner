{
  "sha": "faa1dfd751a2b9aed57cf344a78905591708bb58",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmFhMWRmZDc1MWEyYjlhZWQ1N2NmMzQ0YTc4OTA1NTkxNzA4YmI1OA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:11Z"
    },
    "message": "Split out ada_mult_binop\n\nThis splits BINOP_MUL into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_mult_binop): New function.\n\t(ada_evaluate_subexp): Use it.",
    "tree": {
      "sha": "22ae3aff4023136020421c814073b9565b06a534",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/22ae3aff4023136020421c814073b9565b06a534"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/faa1dfd751a2b9aed57cf344a78905591708bb58",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/faa1dfd751a2b9aed57cf344a78905591708bb58",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/faa1dfd751a2b9aed57cf344a78905591708bb58",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/faa1dfd751a2b9aed57cf344a78905591708bb58/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d05e24e61a7dc22076568a59b3d4bbbd63ca764c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d05e24e61a7dc22076568a59b3d4bbbd63ca764c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d05e24e61a7dc22076568a59b3d4bbbd63ca764c"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 27,
    "deletions": 11
  },
  "files": [
    {
      "sha": "b3eed7cd613fbf570a5b8917ec721151cf65c468",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/faa1dfd751a2b9aed57cf344a78905591708bb58/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/faa1dfd751a2b9aed57cf344a78905591708bb58/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=faa1dfd751a2b9aed57cf344a78905591708bb58",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_mult_binop): New function.\n+\t(ada_evaluate_subexp): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_abs): New function."
    },
    {
      "sha": "21c718e9c2d8450336650e259126e14b02467078",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 22,
      "deletions": 11,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/faa1dfd751a2b9aed57cf344a78905591708bb58/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/faa1dfd751a2b9aed57cf344a78905591708bb58/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=faa1dfd751a2b9aed57cf344a78905591708bb58",
      "patch": "@@ -10065,6 +10065,26 @@ ada_abs (struct type *expect_type,\n     return arg1;\n }\n \n+/* A helper function for BINOP_MUL.  */\n+\n+static value *\n+ada_mult_binop (struct type *expect_type,\n+\t\tstruct expression *exp,\n+\t\tenum noside noside, enum exp_opcode op,\n+\t\tstruct value *arg1, struct value *arg2)\n+{\n+  if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+    {\n+      binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n+      return value_zero (value_type (arg1), not_lval);\n+    }\n+  else\n+    {\n+      binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n+      return ada_value_binop (arg1, arg2, op);\n+    }\n+}\n+\n /* Implement the evaluate_exp routine in the exp_descriptor structure\n    for the Ada language.  */\n \n@@ -10223,17 +10243,8 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n       arg2 = evaluate_subexp (nullptr, exp, pos, noside);\n       if (noside == EVAL_SKIP)\n \tgoto nosideret;\n-      else if (noside == EVAL_AVOID_SIDE_EFFECTS)\n-\t{\n-\t  binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n-\t  return value_zero (value_type (arg1), not_lval);\n-\t}\n-      else\n-\t{\n-\t  type = builtin_type (exp->gdbarch)->builtin_double;\n-\t  binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n-\t  return ada_value_binop (arg1, arg2, op);\n-\t}\n+      return ada_mult_binop (expect_type, exp, noside, op,\n+\t\t\t     arg1, arg2);\n \n     case BINOP_EQUAL:\n     case BINOP_NOTEQUAL:"
    }
  ]
}