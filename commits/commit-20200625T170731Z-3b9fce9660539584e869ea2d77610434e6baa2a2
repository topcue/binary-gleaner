{
  "sha": "3b9fce9660539584e869ea2d77610434e6baa2a2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2I5ZmNlOTY2MDUzOTU4NGU4NjllYTJkNzc2MTA0MzRlNmJhYTJhMg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-16T09:02:09Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-25T17:07:31Z"
    },
    "message": "gdb/riscv: Improve support for matching against target descriptions\n\nFor the RISC-V target it is desirable if the three floating pointer\nstatus CSRs fflags, frm, and fcsr can be placed into either the FPU\nfeature or the CSR feature.  This allows different targets to build\nthe features in a way that better reflects their target.\n\nThe change to support this within GDB is fairly simple, so this is\ndone in this commit, and some tests added to check this new\nfunctionality.\n\ngdb/ChangeLog:\n\n\t* riscv-tdep.c (value_of_riscv_user_reg): Moved to here from later\n\tin the file.\n\t(class riscv_pending_register_alias): Likewise.\n\t(riscv_register_feature::register_info): Change 'required_p' field\n\tto 'required', and change its type.  Add 'check' member function.\n\t(riscv_register_feature::register_info::check): Define new member\n\tfunction.\n\t(riscv_xreg_feature): Change initialisation of 'required' field.\n\t(riscv_freg_feature): Likewise.\n\t(riscv_virtual_feature): Likewise.\n\t(riscv_csr_feature): Likewise.\n\t(riscv_check_tdesc_feature): Take extra parameter, the csr\n\ttdesc_feature, rewrite the function to use the new\n\triscv_register_feature::register_info::check function.\n\t(riscv_gdbarch_init): Pass the csr tdesc_feature where needed.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.arch/riscv-tdesc-loading-01.xml: New file.\n\t* gdb.arch/riscv-tdesc-loading-02.xml: New file.\n\t* gdb.arch/riscv-tdesc-loading-03.xml: New file.\n\t* gdb.arch/riscv-tdesc-loading-04.xml: New file.\n\t* gdb.arch/riscv-tdesc-loading.exp: New file.",
    "tree": {
      "sha": "77a7d44329854da2186a0ab06610794864299c15",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/77a7d44329854da2186a0ab06610794864299c15"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3b9fce9660539584e869ea2d77610434e6baa2a2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b9fce9660539584e869ea2d77610434e6baa2a2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3b9fce9660539584e869ea2d77610434e6baa2a2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b9fce9660539584e869ea2d77610434e6baa2a2/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "865bad2602bd212875063968ae429fca8f9190d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/865bad2602bd212875063968ae429fca8f9190d1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/865bad2602bd212875063968ae429fca8f9190d1"
    }
  ],
  "stats": {
    "total": 720,
    "additions": 578,
    "deletions": 142
  },
  "files": [
    {
      "sha": "2550d640478ffc5662f4212594b69e8cb4f862bc",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3b9fce9660539584e869ea2d77610434e6baa2a2",
      "patch": "@@ -1,3 +1,21 @@\n+2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* riscv-tdep.c (value_of_riscv_user_reg): Moved to here from later\n+\tin the file.\n+\t(class riscv_pending_register_alias): Likewise.\n+\t(riscv_register_feature::register_info): Change 'required_p' field\n+\tto 'required', and change its type.  Add 'check' member function.\n+\t(riscv_register_feature::register_info::check): Define new member\n+\tfunction.\n+\t(riscv_xreg_feature): Change initialisation of 'required' field.\n+\t(riscv_freg_feature): Likewise.\n+\t(riscv_virtual_feature): Likewise.\n+\t(riscv_csr_feature): Likewise.\n+\t(riscv_check_tdesc_feature): Take extra parameter, the csr\n+\ttdesc_feature, rewrite the function to use the new\n+\triscv_register_feature::register_info::check function.\n+\t(riscv_gdbarch_init): Pass the csr tdesc_feature where needed.\n+\n 2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* features/Makefile: Remove all references to the deleted files"
    },
    {
      "sha": "b1dd79f28939c2c31b50687604cc598bf4024664",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 193,
      "deletions": 142,
      "changes": 335,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=3b9fce9660539584e869ea2d77610434e6baa2a2",
      "patch": "@@ -101,6 +101,66 @@ struct riscv_unwind_cache\n \n static reggroup *csr_reggroup = NULL;\n \n+/* Callback function for user_reg_add.  */\n+\n+static struct value *\n+value_of_riscv_user_reg (struct frame_info *frame, const void *baton)\n+{\n+  const int *reg_p = (const int *) baton;\n+  return value_of_register (*reg_p, frame);\n+}\n+\n+/* Information about a register alias that needs to be set up for this\n+   target.  These are collected when the target's XML description is\n+   analysed, and then processed later, once the gdbarch has been created.  */\n+\n+class riscv_pending_register_alias\n+{\n+public:\n+  /* Constructor.  */\n+\n+  riscv_pending_register_alias (const char *name, const void *baton)\n+    : m_name (name),\n+      m_baton (baton)\n+  { /* Nothing.  */ }\n+\n+  /* Convert this into a user register for GDBARCH.  */\n+\n+  void create (struct gdbarch *gdbarch) const\n+  {\n+    user_reg_add (gdbarch, m_name, value_of_riscv_user_reg, m_baton);\n+  }\n+\n+private:\n+  /* The name for this alias.  */\n+  const char *m_name;\n+\n+  /* The baton value for passing to user_reg_add.  This must point to some\n+     data that will live for at least as long as the gdbarch object to\n+     which the user register is attached.  */\n+  const void *m_baton;\n+};\n+\n+/* Registers in the RISCV_REGISTER_FEATURE lists below are either optional,\n+   or required.  For example the $pc register is always going to be a\n+   required register, you can't do much debugging without that.  In\n+   contrast, most of the CSRs are optional, GDB doesn't require them in\n+   order to have a useful debug session.  This enum models the difference\n+   between these register types.  */\n+\n+enum riscv_register_required_status\n+{\n+  /* This register is optional within this feature.  */\n+  RISCV_REG_OPTIONAL,\n+\n+  /* This register is required within this feature.  */\n+  RISCV_REG_REQUIRED,\n+\n+  /* This register is required, the register must either be in this\n+     feature, or it could appear within the CSR feature.  */\n+  RISCV_REG_REQUIRED_MAYBE_CSR\n+};\n+\n /* A set of registers that we expect to find in a tdesc_feature.  These\n    are use in RISCV_GDBARCH_INIT when processing the target description.  */\n \n@@ -117,8 +177,18 @@ struct riscv_register_feature\n        register.  */\n     std::vector<const char *> names;\n \n-    /* When true this register is required in this feature set.  */\n-    bool required_p;\n+    /* Is this register required within this feature?  In some cases the\n+       register could be required, but might also be in the CSR feature.  */\n+    riscv_register_required_status required;\n+\n+    /* Look in FEATURE for a register with a name from this classes names\n+       list.  If the register is found then register its number with\n+       TDESC_DATA and add all its aliases to the ALIASES list.  REG_SET is\n+       used to help create the aliases.  */\n+    bool check (struct tdesc_arch_data *tdesc_data,\n+\t\tconst struct tdesc_feature *feature,\n+\t\tconst struct riscv_register_feature *reg_set,\n+\t\tstd::vector<riscv_pending_register_alias> *aliases) const;\n   };\n \n   /* The name for this feature.  This is the name used to find this feature\n@@ -144,45 +214,79 @@ struct riscv_register_feature\n   std::vector<struct register_info> registers;\n };\n \n+/* See description in the class declaration above.  */\n+\n+bool\n+riscv_register_feature::register_info::check\n+\t(struct tdesc_arch_data *tdesc_data,\n+\t const struct tdesc_feature *feature,\n+\t const struct riscv_register_feature *reg_set,\n+\t std::vector<riscv_pending_register_alias> *aliases) const\n+{\n+  for (const char *name : this->names)\n+    {\n+      bool found = tdesc_numbered_register (feature, tdesc_data,\n+\t\t\t\t\t    this->regnum, name);\n+      if (found)\n+\t{\n+\t  /* We know that the target description mentions this\n+\t     register.  In RISCV_REGISTER_NAME we ensure that GDB\n+\t     always uses the first name for each register, so here we\n+\t     add aliases for all of the remaining names.  */\n+\t  bool prefer_first_name = reg_set->prefer_first_name;\n+\t  int start_index = prefer_first_name ? 1 : 0;\n+\t  for (int i = start_index; i < this->names.size (); ++i)\n+\t    {\n+\t      const char *alias = this->names[i];\n+\t      if (alias == name && !prefer_first_name)\n+\t\tcontinue;\n+\t      aliases->emplace_back (alias, (void *) &this->regnum);\n+\t    }\n+\t  return true;\n+\t}\n+    }\n+  return false;\n+}\n+\n /* The general x-registers feature set.  */\n \n static const struct riscv_register_feature riscv_xreg_feature =\n {\n  \"org.gnu.gdb.riscv.cpu\", true,\n  {\n-   { RISCV_ZERO_REGNUM + 0, { \"zero\", \"x0\" }, true },\n-   { RISCV_ZERO_REGNUM + 1, { \"ra\", \"x1\" }, true },\n-   { RISCV_ZERO_REGNUM + 2, { \"sp\", \"x2\" }, true },\n-   { RISCV_ZERO_REGNUM + 3, { \"gp\", \"x3\" }, true },\n-   { RISCV_ZERO_REGNUM + 4, { \"tp\", \"x4\" }, true },\n-   { RISCV_ZERO_REGNUM + 5, { \"t0\", \"x5\" }, true },\n-   { RISCV_ZERO_REGNUM + 6, { \"t1\", \"x6\" }, true },\n-   { RISCV_ZERO_REGNUM + 7, { \"t2\", \"x7\" }, true },\n-   { RISCV_ZERO_REGNUM + 8, { \"fp\", \"x8\", \"s0\" }, true },\n-   { RISCV_ZERO_REGNUM + 9, { \"s1\", \"x9\" }, true },\n-   { RISCV_ZERO_REGNUM + 10, { \"a0\", \"x10\" }, true },\n-   { RISCV_ZERO_REGNUM + 11, { \"a1\", \"x11\" }, true },\n-   { RISCV_ZERO_REGNUM + 12, { \"a2\", \"x12\" }, true },\n-   { RISCV_ZERO_REGNUM + 13, { \"a3\", \"x13\" }, true },\n-   { RISCV_ZERO_REGNUM + 14, { \"a4\", \"x14\" }, true },\n-   { RISCV_ZERO_REGNUM + 15, { \"a5\", \"x15\" }, true },\n-   { RISCV_ZERO_REGNUM + 16, { \"a6\", \"x16\" }, true },\n-   { RISCV_ZERO_REGNUM + 17, { \"a7\", \"x17\" }, true },\n-   { RISCV_ZERO_REGNUM + 18, { \"s2\", \"x18\" }, true },\n-   { RISCV_ZERO_REGNUM + 19, { \"s3\", \"x19\" }, true },\n-   { RISCV_ZERO_REGNUM + 20, { \"s4\", \"x20\" }, true },\n-   { RISCV_ZERO_REGNUM + 21, { \"s5\", \"x21\" }, true },\n-   { RISCV_ZERO_REGNUM + 22, { \"s6\", \"x22\" }, true },\n-   { RISCV_ZERO_REGNUM + 23, { \"s7\", \"x23\" }, true },\n-   { RISCV_ZERO_REGNUM + 24, { \"s8\", \"x24\" }, true },\n-   { RISCV_ZERO_REGNUM + 25, { \"s9\", \"x25\" }, true },\n-   { RISCV_ZERO_REGNUM + 26, { \"s10\", \"x26\" }, true },\n-   { RISCV_ZERO_REGNUM + 27, { \"s11\", \"x27\" }, true },\n-   { RISCV_ZERO_REGNUM + 28, { \"t3\", \"x28\" }, true },\n-   { RISCV_ZERO_REGNUM + 29, { \"t4\", \"x29\" }, true },\n-   { RISCV_ZERO_REGNUM + 30, { \"t5\", \"x30\" }, true },\n-   { RISCV_ZERO_REGNUM + 31, { \"t6\", \"x31\" }, true },\n-   { RISCV_ZERO_REGNUM + 32, { \"pc\" }, true }\n+   { RISCV_ZERO_REGNUM + 0, { \"zero\", \"x0\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 1, { \"ra\", \"x1\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 2, { \"sp\", \"x2\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 3, { \"gp\", \"x3\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 4, { \"tp\", \"x4\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 5, { \"t0\", \"x5\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 6, { \"t1\", \"x6\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 7, { \"t2\", \"x7\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 8, { \"fp\", \"x8\", \"s0\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 9, { \"s1\", \"x9\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 10, { \"a0\", \"x10\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 11, { \"a1\", \"x11\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 12, { \"a2\", \"x12\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 13, { \"a3\", \"x13\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 14, { \"a4\", \"x14\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 15, { \"a5\", \"x15\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 16, { \"a6\", \"x16\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 17, { \"a7\", \"x17\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 18, { \"s2\", \"x18\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 19, { \"s3\", \"x19\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 20, { \"s4\", \"x20\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 21, { \"s5\", \"x21\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 22, { \"s6\", \"x22\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 23, { \"s7\", \"x23\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 24, { \"s8\", \"x24\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 25, { \"s9\", \"x25\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 26, { \"s10\", \"x26\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 27, { \"s11\", \"x27\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 28, { \"t3\", \"x28\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 29, { \"t4\", \"x29\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 30, { \"t5\", \"x30\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 31, { \"t6\", \"x31\" }, RISCV_REG_REQUIRED },\n+   { RISCV_ZERO_REGNUM + 32, { \"pc\" }, RISCV_REG_REQUIRED }\n  }\n };\n \n@@ -192,42 +296,42 @@ static const struct riscv_register_feature riscv_freg_feature =\n {\n  \"org.gnu.gdb.riscv.fpu\", true,\n  {\n-   { RISCV_FIRST_FP_REGNUM + 0, { \"ft0\", \"f0\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 1, { \"ft1\", \"f1\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 2, { \"ft2\", \"f2\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 3, { \"ft3\", \"f3\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 4, { \"ft4\", \"f4\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 5, { \"ft5\", \"f5\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 6, { \"ft6\", \"f6\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 7, { \"ft7\", \"f7\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 8, { \"fs0\", \"f8\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 9, { \"fs1\", \"f9\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 10, { \"fa0\", \"f10\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 11, { \"fa1\", \"f11\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 12, { \"fa2\", \"f12\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 13, { \"fa3\", \"f13\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 14, { \"fa4\", \"f14\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 15, { \"fa5\", \"f15\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 16, { \"fa6\", \"f16\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 17, { \"fa7\", \"f17\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 18, { \"fs2\", \"f18\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 19, { \"fs3\", \"f19\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 20, { \"fs4\", \"f20\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 21, { \"fs5\", \"f21\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 22, { \"fs6\", \"f22\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 23, { \"fs7\", \"f23\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 24, { \"fs8\", \"f24\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 25, { \"fs9\", \"f25\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 26, { \"fs10\", \"f26\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 27, { \"fs11\", \"f27\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 28, { \"ft8\", \"f28\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 29, { \"ft9\", \"f29\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 30, { \"ft10\", \"f30\" }, true },\n-   { RISCV_FIRST_FP_REGNUM + 31, { \"ft11\", \"f31\" }, true },\n-\n-   { RISCV_CSR_FFLAGS_REGNUM, { \"fflags\" }, true },\n-   { RISCV_CSR_FRM_REGNUM, { \"frm\" }, true },\n-   { RISCV_CSR_FCSR_REGNUM, { \"fcsr\" }, true },\n+   { RISCV_FIRST_FP_REGNUM + 0, { \"ft0\", \"f0\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 1, { \"ft1\", \"f1\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 2, { \"ft2\", \"f2\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 3, { \"ft3\", \"f3\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 4, { \"ft4\", \"f4\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 5, { \"ft5\", \"f5\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 6, { \"ft6\", \"f6\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 7, { \"ft7\", \"f7\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 8, { \"fs0\", \"f8\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 9, { \"fs1\", \"f9\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 10, { \"fa0\", \"f10\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 11, { \"fa1\", \"f11\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 12, { \"fa2\", \"f12\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 13, { \"fa3\", \"f13\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 14, { \"fa4\", \"f14\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 15, { \"fa5\", \"f15\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 16, { \"fa6\", \"f16\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 17, { \"fa7\", \"f17\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 18, { \"fs2\", \"f18\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 19, { \"fs3\", \"f19\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 20, { \"fs4\", \"f20\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 21, { \"fs5\", \"f21\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 22, { \"fs6\", \"f22\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 23, { \"fs7\", \"f23\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 24, { \"fs8\", \"f24\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 25, { \"fs9\", \"f25\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 26, { \"fs10\", \"f26\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 27, { \"fs11\", \"f27\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 28, { \"ft8\", \"f28\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 29, { \"ft9\", \"f29\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 30, { \"ft10\", \"f30\" }, RISCV_REG_REQUIRED },\n+   { RISCV_FIRST_FP_REGNUM + 31, { \"ft11\", \"f31\" }, RISCV_REG_REQUIRED },\n+\n+   { RISCV_CSR_FFLAGS_REGNUM, { \"fflags\", \"csr1\" }, RISCV_REG_REQUIRED_MAYBE_CSR },\n+   { RISCV_CSR_FRM_REGNUM, { \"frm\", \"csr2\" }, RISCV_REG_REQUIRED_MAYBE_CSR },\n+   { RISCV_CSR_FCSR_REGNUM, { \"fcsr\", \"csr3\" }, RISCV_REG_REQUIRED_MAYBE_CSR },\n \n  }\n };\n@@ -242,7 +346,7 @@ static const struct riscv_register_feature riscv_virtual_feature =\n {\n  \"org.gnu.gdb.riscv.virtual\", false,\n  {\n-   { RISCV_PRIV_REGNUM, { \"priv\" }, false }\n+   { RISCV_PRIV_REGNUM, { \"priv\" }, RISCV_REG_OPTIONAL }\n  }\n };\n \n@@ -255,7 +359,7 @@ static struct riscv_register_feature riscv_csr_feature =\n  \"org.gnu.gdb.riscv.csr\", false,\n  {\n #define DECLARE_CSR(NAME,VALUE,CLASS,DEFINE_VER,ABORT_VER) \\\n-  { RISCV_ ## VALUE ## _REGNUM, { # NAME }, false },\n+  { RISCV_ ## VALUE ## _REGNUM, { # NAME }, RISCV_REG_OPTIONAL },\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR\n  }\n@@ -475,15 +579,6 @@ riscv_sw_breakpoint_from_kind (struct gdbarch *gdbarch, int kind, int *size)\n     }\n }\n \n-/* Callback function for user_reg_add.  */\n-\n-static struct value *\n-value_of_riscv_user_reg (struct frame_info *frame, const void *baton)\n-{\n-  const int *reg_p = (const int *) baton;\n-  return value_of_register (*reg_p, frame);\n-}\n-\n /* Implement the register_name gdbarch method.  This is used instead of\n    the function supplied by calling TDESC_USE_REGISTERS so that we can\n    ensure the preferred names are offered for x-regs and f-regs.  */\n@@ -2965,78 +3060,33 @@ riscv_find_default_target_description (const struct gdbarch_info info)\n   return riscv_lookup_target_description (features);\n }\n \n-/* Information about a register alias that needs to be set up for this\n-   target.  These are collected when the target's XML description is\n-   analysed, and then processed later, once the gdbarch has been created.  */\n-\n-class riscv_pending_register_alias\n-{\n-public:\n-  /* Constructor.  */\n-\n-  riscv_pending_register_alias (const char *name, const void *baton)\n-    : m_name (name),\n-      m_baton (baton)\n-  { /* Nothing.  */ }\n-\n-  /* Convert this into a user register for GDBARCH.  */\n-\n-  void create (struct gdbarch *gdbarch) const\n-  {\n-    user_reg_add (gdbarch, m_name, value_of_riscv_user_reg, m_baton);\n-  }\n-\n-private:\n-  /* The name for this alias.  */\n-  const char *m_name;\n-\n-  /* The baton value for passing to user_reg_add.  This must point to some\n-     data that will live for at least as long as the gdbarch object to\n-     which the user register is attached.  */\n-  const void *m_baton;\n-};\n-\n /* All of the registers in REG_SET are checked for in FEATURE, TDESC_DATA\n    is updated with the register numbers for each register as listed in\n    REG_SET.  If any register marked as required in REG_SET is not found in\n    FEATURE then this function returns false, otherwise, it returns true.  */\n \n static bool\n riscv_check_tdesc_feature (struct tdesc_arch_data *tdesc_data,\n-                           const struct tdesc_feature *feature,\n+                           const struct tdesc_feature *main_feature,\n+                           const struct tdesc_feature *csr_feature,\n                            const struct riscv_register_feature *reg_set,\n                            std::vector<riscv_pending_register_alias> *aliases)\n {\n   for (const auto &reg : reg_set->registers)\n     {\n-      bool found = false;\n+      bool found = reg.check (tdesc_data, main_feature, reg_set, aliases);\n \n-      for (const char *name : reg.names)\n+      if (!found && reg.required != RISCV_REG_OPTIONAL)\n \t{\n-\t  found = tdesc_numbered_register (feature, tdesc_data, reg.regnum,\n-\t\t\t\t\t   name);\n-\n-\t  if (found)\n-            {\n-              /* We know that the target description mentions this\n-                 register.  In RISCV_REGISTER_NAME we ensure that GDB\n-                 always uses the first name for each register, so here we\n-                 add aliases for all of the remaining names.  */\n-\t      bool prefer_first_name = reg_set->prefer_first_name;\n-\t      int start_index = prefer_first_name ? 1 : 0;\n-\t      for (int i = start_index; i < reg.names.size (); ++i)\n-                {\n-\t\t  const char *alias = reg.names[i];\n-                  if (alias == name && !prefer_first_name)\n-\t\t    continue;\n-\t\t  aliases->emplace_back (alias, (void *) &reg.regnum);\n-                }\n-              break;\n-            }\n+\t  if (reg.required == RISCV_REG_REQUIRED_MAYBE_CSR\n+\t      && csr_feature != nullptr)\n+\t    {\n+\t      gdb_assert (main_feature != csr_feature);\n+\t      found = reg.check (tdesc_data, csr_feature,  reg_set, aliases);\n+\t    }\n+\t  if (!found)\n+\t    return false;\n \t}\n-\n-      if (!found && reg.required_p)\n-\treturn false;\n     }\n \n   return true;\n@@ -3166,7 +3216,7 @@ riscv_gdbarch_init (struct gdbarch_info info,\n   std::vector<riscv_pending_register_alias> pending_aliases;\n \n   bool valid_p = riscv_check_tdesc_feature (tdesc_data,\n-                                            feature_cpu,\n+                                            feature_cpu, feature_csr,\n                                             &riscv_xreg_feature,\n                                             &pending_aliases);\n   if (valid_p)\n@@ -3188,6 +3238,7 @@ riscv_gdbarch_init (struct gdbarch_info info,\n   if (feature_fpu != NULL)\n     {\n       valid_p &= riscv_check_tdesc_feature (tdesc_data, feature_fpu,\n+\t\t\t\t\t    feature_csr,\n                                             &riscv_freg_feature,\n                                             &pending_aliases);\n \n@@ -3224,12 +3275,12 @@ riscv_gdbarch_init (struct gdbarch_info info,\n     }\n \n   if (feature_virtual)\n-    riscv_check_tdesc_feature (tdesc_data, feature_virtual,\n+    riscv_check_tdesc_feature (tdesc_data, feature_virtual, feature_csr,\n                                &riscv_virtual_feature,\n                                &pending_aliases);\n \n   if (feature_csr)\n-    riscv_check_tdesc_feature (tdesc_data, feature_csr,\n+    riscv_check_tdesc_feature (tdesc_data, feature_csr, nullptr,\n                                &riscv_csr_feature,\n                                &pending_aliases);\n "
    },
    {
      "sha": "b02db0945e61dd27344acd128a2c3618370ac241",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3b9fce9660539584e869ea2d77610434e6baa2a2",
      "patch": "@@ -1,3 +1,11 @@\n+2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.arch/riscv-tdesc-loading-01.xml: New file.\n+\t* gdb.arch/riscv-tdesc-loading-02.xml: New file.\n+\t* gdb.arch/riscv-tdesc-loading-03.xml: New file.\n+\t* gdb.arch/riscv-tdesc-loading-04.xml: New file.\n+\t* gdb.arch/riscv-tdesc-loading.exp: New file.\n+\n 2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.arch/riscv-tdesc-regs.exp: Extend test case."
    },
    {
      "sha": "39bde201c6347caf1a4e79c10e2f4a5845832042",
      "filename": "gdb/testsuite/gdb.arch/riscv-tdesc-loading-01.xml",
      "status": "added",
      "additions": 83,
      "deletions": 0,
      "changes": 83,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/testsuite/gdb.arch/riscv-tdesc-loading-01.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/testsuite/gdb.arch/riscv-tdesc-loading-01.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/riscv-tdesc-loading-01.xml?ref=3b9fce9660539584e869ea2d77610434e6baa2a2",
      "patch": "@@ -0,0 +1,83 @@\n+<?xml version=\"1.0\"?>\n+<!DOCTYPE target SYSTEM \"gdb-target.dtd\">\n+<target>\n+  <architecture>riscv</architecture>\n+  <feature name=\"org.gnu.gdb.riscv.cpu\">\n+    <reg name=\"zero\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"ra\" bitsize=\"64\" type=\"code_ptr\"/>\n+    <reg name=\"sp\" bitsize=\"64\" type=\"data_ptr\"/>\n+    <reg name=\"gp\" bitsize=\"64\" type=\"data_ptr\"/>\n+    <reg name=\"tp\" bitsize=\"64\" type=\"data_ptr\"/>\n+    <reg name=\"t0\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"t1\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"t2\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"fp\" bitsize=\"64\" type=\"data_ptr\"/>\n+    <reg name=\"s1\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a0\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a1\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a2\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a3\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a4\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a5\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a6\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a7\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s2\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s3\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s4\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s5\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s6\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s7\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s8\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s9\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s10\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s11\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"t3\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"t4\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"t5\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"t6\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"pc\" bitsize=\"64\" type=\"code_ptr\"/>\n+  </feature>\n+  <feature name=\"org.gnu.gdb.riscv.fpu\">\n+    <union id=\"riscv_double\">\n+      <field name=\"float\" type=\"ieee_single\"/>\n+      <field name=\"double\" type=\"ieee_double\"/>\n+    </union>\n+    <reg name=\"ft0\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft1\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft2\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft3\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft4\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft5\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft6\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft7\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs0\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs1\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa0\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa1\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa2\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa3\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa4\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa5\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa6\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa7\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs2\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs3\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs4\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs5\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs6\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs7\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs8\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs9\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs10\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs11\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft8\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft9\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft10\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft11\" bitsize=\"64\" type=\"riscv_double\"/>\n+  </feature>\n+  <feature name=\"org.gnu.gdb.riscv.csr\">\n+    <reg name=\"fflags\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"frm\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"fcsr\" bitsize=\"32\" type=\"int\"/>\n+  </feature>\n+</target>"
    },
    {
      "sha": "db0771b863ae59cda35a43042b6f2284bf0e41ca",
      "filename": "gdb/testsuite/gdb.arch/riscv-tdesc-loading-02.xml",
      "status": "added",
      "additions": 81,
      "deletions": 0,
      "changes": 81,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/testsuite/gdb.arch/riscv-tdesc-loading-02.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/testsuite/gdb.arch/riscv-tdesc-loading-02.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/riscv-tdesc-loading-02.xml?ref=3b9fce9660539584e869ea2d77610434e6baa2a2",
      "patch": "@@ -0,0 +1,81 @@\n+<?xml version=\"1.0\"?>\n+<!DOCTYPE target SYSTEM \"gdb-target.dtd\">\n+<target>\n+  <architecture>riscv</architecture>\n+  <feature name=\"org.gnu.gdb.riscv.cpu\">\n+    <reg name=\"zero\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"ra\" bitsize=\"64\" type=\"code_ptr\"/>\n+    <reg name=\"sp\" bitsize=\"64\" type=\"data_ptr\"/>\n+    <reg name=\"gp\" bitsize=\"64\" type=\"data_ptr\"/>\n+    <reg name=\"tp\" bitsize=\"64\" type=\"data_ptr\"/>\n+    <reg name=\"t0\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"t1\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"t2\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"fp\" bitsize=\"64\" type=\"data_ptr\"/>\n+    <reg name=\"s1\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a0\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a1\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a2\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a3\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a4\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a5\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a6\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"a7\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s2\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s3\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s4\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s5\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s6\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s7\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s8\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s9\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s10\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"s11\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"t3\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"t4\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"t5\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"t6\" bitsize=\"64\" type=\"int\"/>\n+    <reg name=\"pc\" bitsize=\"64\" type=\"code_ptr\"/>\n+  </feature>\n+  <feature name=\"org.gnu.gdb.riscv.fpu\">\n+    <union id=\"riscv_double\">\n+      <field name=\"float\" type=\"ieee_single\"/>\n+      <field name=\"double\" type=\"ieee_double\"/>\n+    </union>\n+    <reg name=\"ft0\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft1\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft2\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft3\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft4\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft5\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft6\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft7\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs0\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs1\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa0\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa1\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa2\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa3\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa4\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa5\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa6\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fa7\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs2\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs3\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs4\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs5\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs6\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs7\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs8\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs9\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs10\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fs11\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft8\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft9\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft10\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"ft11\" bitsize=\"64\" type=\"riscv_double\"/>\n+    <reg name=\"fflags\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"frm\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"fcsr\" bitsize=\"32\" type=\"int\"/>\n+  </feature>\n+</target>"
    },
    {
      "sha": "b4af362c19683cd2874444842e441659fdf4213f",
      "filename": "gdb/testsuite/gdb.arch/riscv-tdesc-loading-03.xml",
      "status": "added",
      "additions": 79,
      "deletions": 0,
      "changes": 79,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/testsuite/gdb.arch/riscv-tdesc-loading-03.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/testsuite/gdb.arch/riscv-tdesc-loading-03.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/riscv-tdesc-loading-03.xml?ref=3b9fce9660539584e869ea2d77610434e6baa2a2",
      "patch": "@@ -0,0 +1,79 @@\n+<?xml version=\"1.0\"?>\n+<!DOCTYPE target SYSTEM \"gdb-target.dtd\">\n+<target>\n+  <architecture>riscv</architecture>\n+  <feature name=\"org.gnu.gdb.riscv.cpu\">\n+    <reg name=\"zero\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"ra\" bitsize=\"32\" type=\"code_ptr\"/>\n+    <reg name=\"sp\" bitsize=\"32\" type=\"data_ptr\"/>\n+    <reg name=\"gp\" bitsize=\"32\" type=\"data_ptr\"/>\n+    <reg name=\"tp\" bitsize=\"32\" type=\"data_ptr\"/>\n+    <reg name=\"t0\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"t1\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"t2\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"fp\" bitsize=\"32\" type=\"data_ptr\"/>\n+    <reg name=\"s1\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a0\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a1\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a2\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a3\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a4\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a5\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a6\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a7\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s2\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s3\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s4\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s5\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s6\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s7\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s8\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s9\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s10\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s11\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"t3\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"t4\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"t5\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"t6\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"pc\" bitsize=\"32\" type=\"code_ptr\"/>\n+  </feature>\n+  <feature name=\"org.gnu.gdb.riscv.fpu\">\n+    <reg name=\"ft0\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft1\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft2\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft3\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft4\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft5\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft6\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft7\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs0\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs1\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa0\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa1\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa2\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa3\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa4\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa5\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa6\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa7\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs2\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs3\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs4\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs5\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs6\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs7\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs8\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs9\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs10\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs11\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft8\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft9\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft10\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft11\" bitsize=\"32\" type=\"float\"/>\n+  </feature>\n+  <feature name=\"org.gnu.gdb.riscv.csr\">\n+    <reg name=\"fflags\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"frm\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"fcsr\" bitsize=\"32\" type=\"int\"/>\n+  </feature>\n+</target>"
    },
    {
      "sha": "d44d7e27d8721395241415e863fa2a7166f0bbc9",
      "filename": "gdb/testsuite/gdb.arch/riscv-tdesc-loading-04.xml",
      "status": "added",
      "additions": 77,
      "deletions": 0,
      "changes": 77,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/testsuite/gdb.arch/riscv-tdesc-loading-04.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/testsuite/gdb.arch/riscv-tdesc-loading-04.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/riscv-tdesc-loading-04.xml?ref=3b9fce9660539584e869ea2d77610434e6baa2a2",
      "patch": "@@ -0,0 +1,77 @@\n+<?xml version=\"1.0\"?>\n+<!DOCTYPE target SYSTEM \"gdb-target.dtd\">\n+<target>\n+  <architecture>riscv</architecture>\n+  <feature name=\"org.gnu.gdb.riscv.cpu\">\n+    <reg name=\"zero\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"ra\" bitsize=\"32\" type=\"code_ptr\"/>\n+    <reg name=\"sp\" bitsize=\"32\" type=\"data_ptr\"/>\n+    <reg name=\"gp\" bitsize=\"32\" type=\"data_ptr\"/>\n+    <reg name=\"tp\" bitsize=\"32\" type=\"data_ptr\"/>\n+    <reg name=\"t0\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"t1\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"t2\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"fp\" bitsize=\"32\" type=\"data_ptr\"/>\n+    <reg name=\"s1\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a0\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a1\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a2\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a3\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a4\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a5\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a6\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"a7\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s2\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s3\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s4\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s5\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s6\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s7\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s8\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s9\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s10\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"s11\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"t3\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"t4\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"t5\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"t6\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"pc\" bitsize=\"32\" type=\"code_ptr\"/>\n+  </feature>\n+  <feature name=\"org.gnu.gdb.riscv.fpu\">\n+    <reg name=\"ft0\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft1\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft2\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft3\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft4\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft5\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft6\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft7\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs0\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs1\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa0\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa1\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa2\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa3\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa4\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa5\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa6\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fa7\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs2\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs3\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs4\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs5\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs6\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs7\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs8\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs9\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs10\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fs11\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft8\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft9\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft10\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"ft11\" bitsize=\"32\" type=\"float\"/>\n+    <reg name=\"fflags\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"frm\" bitsize=\"32\" type=\"int\"/>\n+    <reg name=\"fcsr\" bitsize=\"32\" type=\"int\"/>\n+  </feature>\n+</target>"
    },
    {
      "sha": "e11117280c329e821e28162388341880f24b09d7",
      "filename": "gdb/testsuite/gdb.arch/riscv-tdesc-loading.exp",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/testsuite/gdb.arch/riscv-tdesc-loading.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b9fce9660539584e869ea2d77610434e6baa2a2/gdb/testsuite/gdb.arch/riscv-tdesc-loading.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/riscv-tdesc-loading.exp?ref=3b9fce9660539584e869ea2d77610434e6baa2a2",
      "patch": "@@ -0,0 +1,39 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Check that we can load different RISC-V target descriptions.\n+\n+if {![istarget \"riscv*-*-*\"]} {\n+    verbose \"Skipping ${gdb_test_file_name}.\"\n+    return\n+}\n+\n+clean_restart\n+\n+# Run over every test XML file and check the target description can be\n+# loaded.\n+foreach filename [lsort [glob $srcdir/$subdir/riscv-tdesc-loading-*.xml]] {\n+    if {[is_remote host]} {\n+       set test_path [remote_download host $filename]\n+    } else {\n+       set test_path $filename\n+    }\n+\n+    # Currently it is expected that all of the target descriptions in\n+    # this test will load successfully, so we expect no additonal\n+    # output from GDB.\n+    gdb_test_no_output \"set tdesc filename $test_path\" \\\n+\t\"check [file tail $filename]\"\n+}"
    }
  ]
}