{
  "sha": "d30182b51edd04b9f09b1a79d429fc286458b221",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDMwMTgyYjUxZWRkMDRiOWYwOWIxYTc5ZDQyOWZjMjg2NDU4YjIyMQ==",
  "commit": {
    "author": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@axis.com",
      "date": "2021-05-11T14:12:24Z"
    },
    "committer": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@bitrange.com",
      "date": "2021-05-11T14:26:30Z"
    },
    "message": "dwarf.c (process_abbrev_set): Properly parenthesize, fix fallout\n\nBuilding as ILP32 shows:\n\n gcc -m32 -DHAVE_CONFIG_H -I. -I/checkout/binutils  -I. -I/checkout/binutils -I../bfd -I/checkout/binutils/../bfd -I/checkout/binutils/../include -DLOCALEDIR=\"\\\"/usr/local/share/locale\\\"\" -Dbin_dummy_emulation=bin_vanilla_emulation  -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wshadow -Wstack-usage=262144 -Werror -I/checkout/binutils/../zlib -g -O2   -MT dwarf.o -MD -MP -MF $depbase.Tpo -c -o dwarf.o /checkout/binutils/dwarf.c &&\\\n mv -f $depbase.Tpo $depbase.Po\n In file included from /checkout/binutils/sysdep.h:101:0,\n                  from /checkout/binutils/dwarf.c:21:\n /checkout/binutils/dwarf.c: In function 'process_abbrev_set':\n /checkout/binutils/dwarf.c:1072:15: error: format '%lx' expects argument of type 'long unsigned int', but argument 2 has type 'dwarf_vma {aka long long unsigned int}' [-Werror=format=]\n        warn (_(\"Debug info is corrupted, abbrev size (%lx) is larger than \"\n                ^\n /checkout/binutils/dwarf.c:1072:13: note: in expansion of macro '_'\n        warn (_(\"Debug info is corrupted, abbrev size (%lx) is larger than \"\n              ^\n cc1: all warnings being treated as errors\n Makefile:1101: recipe for target 'dwarf.o' failed\n\nThe recent commit, casting one of the terms, has an obvious\ntypo.  To wit, the (non-cast) term abbrev_size is a\ndwarf_vma and causes the whole expression to (still) be 64\nbits.\n\nbinutils:\n\t* dwarf.c (process_abbrev_set): Properly parenthesize before\n\tcasting to unsigned long.",
    "tree": {
      "sha": "3b6c2b3b723e56aac34566132779d974c6638e60",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3b6c2b3b723e56aac34566132779d974c6638e60"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d30182b51edd04b9f09b1a79d429fc286458b221",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d30182b51edd04b9f09b1a79d429fc286458b221",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d30182b51edd04b9f09b1a79d429fc286458b221",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d30182b51edd04b9f09b1a79d429fc286458b221/comments",
  "author": {
    "login": "hpataxisdotcom",
    "id": 80339731,
    "node_id": "MDQ6VXNlcjgwMzM5NzMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hpataxisdotcom",
    "html_url": "https://github.com/hpataxisdotcom",
    "followers_url": "https://api.github.com/users/hpataxisdotcom/followers",
    "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}",
    "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions",
    "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs",
    "repos_url": "https://api.github.com/users/hpataxisdotcom/repos",
    "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": null,
  "parents": [
    {
      "sha": "5048549af94ccac1ac76de35120c2e85c44d3391",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5048549af94ccac1ac76de35120c2e85c44d3391",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5048549af94ccac1ac76de35120c2e85c44d3391"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 6,
    "deletions": 1
  },
  "files": [
    {
      "sha": "242563ed3a5332acecd9c5656b100e6eb3ad85af",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d30182b51edd04b9f09b1a79d429fc286458b221/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d30182b51edd04b9f09b1a79d429fc286458b221/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=d30182b51edd04b9f09b1a79d429fc286458b221",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-11  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* dwarf.c (process_abbrev_set): Properly parenthesize before\n+\tcasting to unsigned long.\n+\n 2021-05-11  Alan Modra  <amodra@gmail.com>\n \n \tPR 27845"
    },
    {
      "sha": "8bc0acb270c2c2025553f0ac2896b86ac4865256",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d30182b51edd04b9f09b1a79d429fc286458b221/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d30182b51edd04b9f09b1a79d429fc286458b221/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=d30182b51edd04b9f09b1a79d429fc286458b221",
      "patch": "@@ -1071,7 +1071,7 @@ process_abbrev_set (struct dwarf_section *section,\n       /* PR 17531: file:4bcd9ce9.  */\n       warn (_(\"Debug info is corrupted, abbrev size (%lx) is larger than \"\n \t      \"abbrev section size (%lx)\\n\"),\n-\t      (unsigned long) abbrev_base + abbrev_size,\n+\t      (unsigned long) (abbrev_base + abbrev_size),\n \t      (unsigned long) section->size);\n       return NULL;\n     }"
    }
  ]
}