{
  "sha": "6fa7408d72b3805536e3579ba46b48f07f2e780a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmZhNzQwOGQ3MmIzODA1NTM2ZTM1NzliYTQ2YjQ4ZjA3ZjJlNzgwYQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-04T15:55:01Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-04T15:55:01Z"
    },
    "message": "ld: don't generate base relocations in PE output for absolute symbols\n\nIt is the very nature of absolute symbols that they don't change even\nif the loader decides to put the image at other than its link-time base\naddress. Of the linker-defined (and PE-specific) symbols __image_base__\n(and its alias) needs special casing, as it'll still appear to be\nabsolute at this point.\n\nA new inquiry function in ldexp.c is needed because PE base relocations\nget generated before ldexp_finalize_syms() runs, yet whether a\nrelocation is needed depends on the ultimate property of a symbol.",
    "tree": {
      "sha": "4bf2a749afaa5ad0866b5659d2f4f6534fad2d5d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4bf2a749afaa5ad0866b5659d2f4f6534fad2d5d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6fa7408d72b3805536e3579ba46b48f07f2e780a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fa7408d72b3805536e3579ba46b48f07f2e780a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6fa7408d72b3805536e3579ba46b48f07f2e780a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fa7408d72b3805536e3579ba46b48f07f2e780a/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1178743e4c05d9c0daad5a105277fbc42872c9ea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1178743e4c05d9c0daad5a105277fbc42872c9ea",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1178743e4c05d9c0daad5a105277fbc42872c9ea"
    }
  ],
  "stats": {
    "total": 72,
    "additions": 69,
    "deletions": 3
  },
  "files": [
    {
      "sha": "95bb3f6c1a8aab29cc45cc861b46c572b79ad1ba",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=6fa7408d72b3805536e3579ba46b48f07f2e780a",
      "patch": "@@ -1,3 +1,11 @@\n+2021-03-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* ldexp.c (ldexp_is_final_sym_absolute): New.\n+\t* ldexp.h (ldexp_is_final_sym_absolute): Declare.\n+\t* pe-dll.c (generate_reloc): Skip absolute symbols.\n+\t* testsuite/ld-pe/reloc.s, testsuite/ld-pe/reloc.d: New.\n+\t* testsuite/ld-pe/pe.exp: Run new test.\n+\n 2021-03-03  Alan Modra  <amodra@gmail.com>\n \n \tPR 27500"
    },
    {
      "sha": "7a95e561a03e203092d9933c9411715660957248",
      "filename": "ld/ldexp.c",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/ldexp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/ldexp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldexp.c?ref=6fa7408d72b3805536e3579ba46b48f07f2e780a",
      "patch": "@@ -1699,6 +1699,28 @@ ldexp_finalize_syms (void)\n   bfd_hash_traverse (&definedness_table, set_sym_sections, NULL);\n }\n \n+/* Determine whether a symbol is going to remain absolute even after\n+   ldexp_finalize_syms() has run.  */\n+\n+bfd_boolean\n+ldexp_is_final_sym_absolute (const struct bfd_link_hash_entry *h)\n+{\n+  if (h->type == bfd_link_hash_defined\n+      && h->u.def.section == bfd_abs_section_ptr)\n+    {\n+      const struct definedness_hash_entry *def;\n+\n+      if (!h->ldscript_def)\n+\treturn TRUE;\n+\n+      def = symbol_defined (h->root.string);\n+      if (def != NULL)\n+\treturn def->final_sec == bfd_abs_section_ptr;\n+    }\n+\n+  return FALSE;\n+}\n+\n void\n ldexp_finish (void)\n {"
    },
    {
      "sha": "1055053e28dd03f03160aa08223a16a72771060e",
      "filename": "ld/ldexp.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/ldexp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/ldexp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldexp.h?ref=6fa7408d72b3805536e3579ba46b48f07f2e780a",
      "patch": "@@ -239,6 +239,7 @@ bfd_vma exp_get_abs_int\n   (etree_type *, int, char *);\n void ldexp_init (void);\n void ldexp_finalize_syms (void);\n+bfd_boolean ldexp_is_final_sym_absolute (const struct bfd_link_hash_entry *);\n void ldexp_finish (void);\n \n #endif"
    },
    {
      "sha": "afcf6fea93e4d8071acc3185d06b89df57844dc6",
      "filename": "ld/pe-dll.c",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/pe-dll.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/pe-dll.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/pe-dll.c?ref=6fa7408d72b3805536e3579ba46b48f07f2e780a",
      "patch": "@@ -1579,13 +1579,13 @@ generate_reloc (bfd *abfd, struct bfd_link_info *info)\n \t\t  && relocs[i]->howto->type != pe_details->imagebase_reloc)\n \t\t{\n \t\t  struct bfd_symbol *sym = *relocs[i]->sym_ptr_ptr;\n+\t\t  const struct bfd_link_hash_entry *blhe\n+\t\t    = bfd_wrapped_link_hash_lookup (abfd, info, sym->name,\n+\t\t\t\t\t\t    FALSE, FALSE, FALSE);\n \n \t\t  /* Don't create relocs for undefined weak symbols.  */\n \t\t  if (sym->flags == BSF_WEAK)\n \t\t    {\n-\t\t      struct bfd_link_hash_entry *blhe\n-\t\t\t= bfd_wrapped_link_hash_lookup (abfd, info, sym->name,\n-\t\t\t\t\t\tFALSE, FALSE, FALSE);\n \t\t      if (blhe && blhe->type == bfd_link_hash_undefweak)\n \t\t\t{\n \t\t\t  /* Check aux sym and see if it is defined or not. */\n@@ -1617,6 +1617,12 @@ generate_reloc (bfd *abfd, struct bfd_link_info *info)\n \t\t      if (!strcmp (s->name, \".eh_frame\"))\n \t\t\tcontinue;\n \t\t    }\n+\t\t  /* Nor for absolute symbols.  */\n+\t\t  else if (blhe && ldexp_is_final_sym_absolute (blhe)\n+\t\t\t   && (!blhe->linker_def\n+\t\t\t       || (strcmp (sym->name, \"__image_base__\")\n+\t\t\t\t   && strcmp (sym->name, U (\"__ImageBase\")))))\n+\t\t    continue;\n \n \t\t  reloc_data[total_relocs].vma = sec_vma + relocs[i]->address;\n \t\t  reloc_data[total_relocs].idx = total_relocs;"
    },
    {
      "sha": "b1a200180be58df2371a40b66c3816053e178a76",
      "filename": "ld/testsuite/ld-pe/pe.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/testsuite/ld-pe/pe.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/testsuite/ld-pe/pe.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pe.exp?ref=6fa7408d72b3805536e3579ba46b48f07f2e780a",
      "patch": "@@ -76,6 +76,8 @@ run_dump_test \"longsecn-5\"\n run_dump_test \"orphan\"\n run_dump_test \"orphan_nu\"\n \n+run_dump_test \"reloc\"\n+\n run_dump_test \"weakdef-1\"\n \n run_dump_test \"pr19803\""
    },
    {
      "sha": "55888c3bdf122eb326c684324756439727b4eef3",
      "filename": "ld/testsuite/ld-pe/reloc.d",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/testsuite/ld-pe/reloc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/testsuite/ld-pe/reloc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/reloc.d?ref=6fa7408d72b3805536e3579ba46b48f07f2e780a",
      "patch": "@@ -0,0 +1,14 @@\n+#name: PE base relocations\n+#ld: --enable-reloc-section\n+#objdump: -p\n+\n+.*:     file format .*\n+\n+#...\n+PE File Base Relocations.*\n+Virtual Address: .* Number of fixups 4\n+[ \t]*reloc    0 offset    0 .* (LOW|HIGHLOW|DIR64)\n+[ \t]*reloc    1 offset    [248] .* (LOW|HIGHLOW|DIR64)\n+[ \t]*reloc    2 offset   [124]0 .* (LOW|HIGHLOW|DIR64)\n+[ \t]*reloc    3 offset    0 .* ABSOLUTE\n+#pass"
    },
    {
      "sha": "3ed2e02e70de0f42a85d29dec01db6de9897ca77",
      "filename": "ld/testsuite/ld-pe/reloc.s",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/testsuite/ld-pe/reloc.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fa7408d72b3805536e3579ba46b48f07f2e780a/ld/testsuite/ld-pe/reloc.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/reloc.s?ref=6fa7408d72b3805536e3579ba46b48f07f2e780a",
      "patch": "@@ -0,0 +1,13 @@\n+\t.data\n+\t.p2align 4\n+start:\n+\t.dc.a\t__image_base__\n+\t.dc.a\tstart\n+\t.dc.a\t__section_alignment__\n+\t.dc.a\t__file_alignment__\n+\t.dc.a\t__major_os_version__\n+\t.dc.a\t__minor_os_version__\n+\t.dc.a\t__major_subsystem_version__\n+\t.dc.a\t__minor_subsystem_version__\n+\t.dc.a\tend\n+end:"
    }
  ]
}