{
  "sha": "9d7c67bfbde3b948704b46f8a6fd479e98ecf2c8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWQ3YzY3YmZiZGUzYjk0ODcwNGI0NmY4YTZmZDQ3OWU5OGVjZjJjOA==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-01-12T06:37:36Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-01-12T06:40:46Z"
    },
    "message": "Fix 'obj' may be used uninitialized warning in symtab.c:matching_obj_sections.\n\nFix warning:\n\ngdb/symtab.c: In function \u2018int matching_obj_sections(obj_section*, obj_section*)\u2019:\ngdb/symtab.c:1024:12: warning: \u2018obj\u2019 may be used uninitialized in this function [-Wmaybe-uninitialized]\n   if (obj->separate_debug_objfile_backlink != NULL\n\n2019-01-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* symtab.c (matching_obj_sections): Initialize obj,\n\tdeclare it closer to its usage.",
    "tree": {
      "sha": "0804132a16e3218b2d897ff4c46046a3c806bfdc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0804132a16e3218b2d897ff4c46046a3c806bfdc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9d7c67bfbde3b948704b46f8a6fd479e98ecf2c8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d7c67bfbde3b948704b46f8a6fd479e98ecf2c8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9d7c67bfbde3b948704b46f8a6fd479e98ecf2c8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d7c67bfbde3b948704b46f8a6fd479e98ecf2c8/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "7d62943cd492bb502f0d335cc695be15ae50cea3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7d62943cd492bb502f0d335cc695be15ae50cea3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7d62943cd492bb502f0d335cc695be15ae50cea3"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 6,
    "deletions": 1
  },
  "files": [
    {
      "sha": "e0b47b4bb09a0bd612780f53a081505cccb2d071",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d7c67bfbde3b948704b46f8a6fd479e98ecf2c8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d7c67bfbde3b948704b46f8a6fd479e98ecf2c8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9d7c67bfbde3b948704b46f8a6fd479e98ecf2c8",
      "patch": "@@ -1,3 +1,8 @@\n+2019-01-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* symtab.c (matching_obj_sections): Initialize obj,\n+\tdeclare it closer to its usage.\n+\n 2019-01-10  Tom Tromey  <tom@tromey.com>\n \n \t* thread-iter.h (inf_threads_iterator): Use next_iterator."
    },
    {
      "sha": "29b24328fbed417490846af0587d90684a5fbfbf",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d7c67bfbde3b948704b46f8a6fd479e98ecf2c8/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d7c67bfbde3b948704b46f8a6fd479e98ecf2c8/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=9d7c67bfbde3b948704b46f8a6fd479e98ecf2c8",
      "patch": "@@ -970,7 +970,6 @@ matching_obj_sections (struct obj_section *obj_first,\n {\n   asection *first = obj_first? obj_first->the_bfd_section : NULL;\n   asection *second = obj_second? obj_second->the_bfd_section : NULL;\n-  struct objfile *obj;\n \n   /* If they're the same section, then they match.  */\n   if (first == second)\n@@ -1010,6 +1009,7 @@ matching_obj_sections (struct obj_section *obj_first,\n \n   /* Otherwise check that they are in corresponding objfiles.  */\n \n+  struct objfile *obj = NULL;\n   for (objfile *objfile : all_objfiles (current_program_space))\n     if (objfile->obfd == first->owner)\n       {"
    }
  ]
}