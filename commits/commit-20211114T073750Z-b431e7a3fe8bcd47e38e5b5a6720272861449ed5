{
  "sha": "b431e7a3fe8bcd47e38e5b5a6720272861449ed5",
  "node_id": "C_kwDOANOeidoAKGI0MzFlN2EzZmU4YmNkNDdlMzhlNWI1YTY3MjAyNzI4NjE0NDllZDU",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-11-14T07:37:50Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-11-14T07:37:50Z"
    },
    "message": "sync libbacktrace from gcc",
    "tree": {
      "sha": "f8259b49a397158eb38cc46b79c4d262d2a0fa05",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f8259b49a397158eb38cc46b79c4d262d2a0fa05"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b431e7a3fe8bcd47e38e5b5a6720272861449ed5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b431e7a3fe8bcd47e38e5b5a6720272861449ed5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b431e7a3fe8bcd47e38e5b5a6720272861449ed5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b431e7a3fe8bcd47e38e5b5a6720272861449ed5/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9d6a1a6496016c07afa8ce3f4b55f4acf64d4b25",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d6a1a6496016c07afa8ce3f4b55f4acf64d4b25",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9d6a1a6496016c07afa8ce3f4b55f4acf64d4b25"
    }
  ],
  "stats": {
    "total": 75,
    "additions": 54,
    "deletions": 21
  },
  "files": [
    {
      "sha": "983f81672fb1d1c7e9fd93b5dca273acc57dae2a",
      "filename": "libbacktrace/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b431e7a3fe8bcd47e38e5b5a6720272861449ed5/libbacktrace/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b431e7a3fe8bcd47e38e5b5a6720272861449ed5/libbacktrace/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libbacktrace/ChangeLog?ref=b431e7a3fe8bcd47e38e5b5a6720272861449ed5",
      "patch": "@@ -1,3 +1,20 @@\n+2021-11-12  Martin Liska  <mliska@suse.cz>\n+\n+\tPR libbacktrace/103167\n+\t* elf.c (elf_uncompress_lzma_block): Cast to unsigned int.\n+\t(elf_uncompress_lzma): Likewise.\n+\t* xztest.c (test_samples): memcpy only if v > 0.\n+\n+2021-10-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR testsuite/102742\n+\t* btest.c (MIN_DESCRIPTOR): New.\n+\t(MAX_DESCRIPTOR): Likewise.\n+\t(check_available_files): Likewise.\n+\t(check_open_files): Check only file descriptors that\n+\twere not available at the entry.\n+\t(main): Call check_available_files.\n+\n 2021-08-13  Sergei Trofimovich  <siarheit@google.com>\n \n \t* install-debuginfo-for-buildid.sh.in: Force non-localized readelf"
    },
    {
      "sha": "7ef6d320497cbe1e3875a75f48970797658b773c",
      "filename": "libbacktrace/btest.c",
      "status": "modified",
      "additions": 20,
      "deletions": 4,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b431e7a3fe8bcd47e38e5b5a6720272861449ed5/libbacktrace/btest.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b431e7a3fe8bcd47e38e5b5a6720272861449ed5/libbacktrace/btest.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libbacktrace/btest.c?ref=b431e7a3fe8bcd47e38e5b5a6720272861449ed5",
      "patch": "@@ -38,6 +38,7 @@ POSSIBILITY OF SUCH DAMAGE.  */\n #include <stdlib.h>\n #include <string.h>\n #include <unistd.h>\n+#include <sys/stat.h>\n \n #include \"filenames.h\"\n \n@@ -458,16 +459,29 @@ test5 (void)\n   return failures;\n }\n \n+#define MIN_DESCRIPTOR 3\n+#define MAX_DESCRIPTOR 10\n+\n+static int fstat_status[MAX_DESCRIPTOR];\n+\n+/* Check files that are available.  */\n+\n+static void\n+check_available_files (void)\n+{\n+  struct stat s;\n+  for (unsigned i = MIN_DESCRIPTOR; i < MAX_DESCRIPTOR; i++)\n+    fstat_status[i] = fstat (i, &s);\n+}\n+\n /* Check that are no files left open.  */\n \n static void\n check_open_files (void)\n {\n-  int i;\n-\n-  for (i = 3; i < 10; i++)\n+  for (unsigned i = MIN_DESCRIPTOR; i < MAX_DESCRIPTOR; i++)\n     {\n-      if (close (i) == 0)\n+      if (fstat_status[i] != 0 && close (i) == 0)\n \t{\n \t  fprintf (stderr,\n \t\t   \"ERROR: descriptor %d still open after tests complete\\n\",\n@@ -482,6 +496,8 @@ check_open_files (void)\n int\n main (int argc ATTRIBUTE_UNUSED, char **argv)\n {\n+  check_available_files ();\n+\n   state = backtrace_create_state (argv[0], BACKTRACE_SUPPORTS_THREADS,\n \t\t\t\t  error_callback_create, NULL);\n "
    },
    {
      "sha": "8b87b2dd6b9069697eb43f5c1c940f37c68e062f",
      "filename": "libbacktrace/elf.c",
      "status": "modified",
      "additions": 16,
      "deletions": 16,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b431e7a3fe8bcd47e38e5b5a6720272861449ed5/libbacktrace/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b431e7a3fe8bcd47e38e5b5a6720272861449ed5/libbacktrace/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libbacktrace/elf.c?ref=b431e7a3fe8bcd47e38e5b5a6720272861449ed5",
      "patch": "@@ -3172,10 +3172,10 @@ elf_uncompress_lzma_block (const unsigned char *compressed,\n   /* Block header CRC.  */\n   computed_crc = elf_crc32 (0, compressed + block_header_offset,\n \t\t\t    block_header_size - 4);\n-  stream_crc = (compressed[off]\n-\t\t| (compressed[off + 1] << 8)\n-\t\t| (compressed[off + 2] << 16)\n-\t\t| (compressed[off + 3] << 24));\n+  stream_crc = ((uint32_t)compressed[off]\n+\t\t| ((uint32_t)compressed[off + 1] << 8)\n+\t\t| ((uint32_t)compressed[off + 2] << 16)\n+\t\t| ((uint32_t)compressed[off + 3] << 24));\n   if (unlikely (computed_crc != stream_crc))\n     {\n       elf_uncompress_failed ();\n@@ -3785,10 +3785,10 @@ elf_uncompress_lzma (struct backtrace_state *state,\n \n   /* Next comes a CRC of the stream flags.  */\n   computed_crc = elf_crc32 (0, compressed + 6, 2);\n-  stream_crc = (compressed[8]\n-\t\t| (compressed[9] << 8)\n-\t\t| (compressed[10] << 16)\n-\t\t| (compressed[11] << 24));\n+  stream_crc = ((uint32_t)compressed[8]\n+\t\t| ((uint32_t)compressed[9] << 8)\n+\t\t| ((uint32_t)compressed[10] << 16)\n+\t\t| ((uint32_t)compressed[11] << 24));\n   if (unlikely (computed_crc != stream_crc))\n     {\n       elf_uncompress_failed ();\n@@ -3829,10 +3829,10 @@ elf_uncompress_lzma (struct backtrace_state *state,\n \n   /* Before that is a footer CRC.  */\n   computed_crc = elf_crc32 (0, compressed + offset, 6);\n-  stream_crc = (compressed[offset - 4]\n-\t\t| (compressed[offset - 3] << 8)\n-\t\t| (compressed[offset - 2] << 16)\n-\t\t| (compressed[offset - 1] << 24));\n+  stream_crc = ((uint32_t)compressed[offset - 4]\n+\t\t| ((uint32_t)compressed[offset - 3] << 8)\n+\t\t| ((uint32_t)compressed[offset - 2] << 16)\n+\t\t| ((uint32_t)compressed[offset - 1] << 24));\n   if (unlikely (computed_crc != stream_crc))\n     {\n       elf_uncompress_failed ();\n@@ -3888,10 +3888,10 @@ elf_uncompress_lzma (struct backtrace_state *state,\n   /* Next is a CRC of the index.  */\n   computed_crc = elf_crc32 (0, compressed + index_offset,\n \t\t\t    offset - index_offset);\n-  stream_crc = (compressed[offset]\n-\t\t| (compressed[offset + 1] << 8)\n-\t\t| (compressed[offset + 2] << 16)\n-\t\t| (compressed[offset + 3] << 24));\n+  stream_crc = ((uint32_t)compressed[offset]\n+\t\t| ((uint32_t)compressed[offset + 1] << 8)\n+\t\t| ((uint32_t)compressed[offset + 2] << 16)\n+\t\t| ((uint32_t)compressed[offset + 3] << 24));\n   if (unlikely (computed_crc != stream_crc))\n     {\n       elf_uncompress_failed ();"
    },
    {
      "sha": "6c60ff5015917c7df73b98519350f1d6ac651247",
      "filename": "libbacktrace/xztest.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b431e7a3fe8bcd47e38e5b5a6720272861449ed5/libbacktrace/xztest.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b431e7a3fe8bcd47e38e5b5a6720272861449ed5/libbacktrace/xztest.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libbacktrace/xztest.c?ref=b431e7a3fe8bcd47e38e5b5a6720272861449ed5",
      "patch": "@@ -172,7 +172,7 @@ test_samples (struct backtrace_state *state)\n \t\t       tests[i].name, uncompressed_len, v);\n \t      ++failures;\n \t    }\n-\t  else if (memcmp (tests[i].uncompressed, uncompressed, v) != 0)\n+\t  else if (v > 0 && memcmp (tests[i].uncompressed, uncompressed, v) != 0)\n \t    {\n \t      size_t j;\n "
    }
  ]
}