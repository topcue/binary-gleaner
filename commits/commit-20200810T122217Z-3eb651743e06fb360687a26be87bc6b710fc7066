{
  "sha": "3eb651743e06fb360687a26be87bc6b710fc7066",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2ViNjUxNzQzZTA2ZmIzNjA2ODdhMjZiZTg3YmM2YjcxMGZjNzA2Ng==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-10T12:11:36Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-10T12:22:17Z"
    },
    "message": "Implement missing powerpc mtspr and mfspr extended insns\n\n\t* ppc-opc.c (powerpc_opcodes): Add many mtspr and mfspr extended\n\tinstructions.",
    "tree": {
      "sha": "be292b11a1484204b01382f4f9834b94fa02b460",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/be292b11a1484204b01382f4f9834b94fa02b460"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3eb651743e06fb360687a26be87bc6b710fc7066",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3eb651743e06fb360687a26be87bc6b710fc7066",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3eb651743e06fb360687a26be87bc6b710fc7066",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3eb651743e06fb360687a26be87bc6b710fc7066/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8b2742a1567273f2ecc9fe6d7df1c9287865f5b6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8b2742a1567273f2ecc9fe6d7df1c9287865f5b6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8b2742a1567273f2ecc9fe6d7df1c9287865f5b6"
    }
  ],
  "stats": {
    "total": 167,
    "additions": 161,
    "deletions": 6
  },
  "files": [
    {
      "sha": "ec44f4496eda893e954322e38b25cce7d6b8994c",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3eb651743e06fb360687a26be87bc6b710fc7066/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3eb651743e06fb360687a26be87bc6b710fc7066/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=3eb651743e06fb360687a26be87bc6b710fc7066",
      "patch": "@@ -1,3 +1,8 @@\n+2020-08-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-opc.c (powerpc_opcodes): Add many mtspr and mfspr extended\n+\tinstructions.\n+\n 2020-08-10  Alan Modra  <amodra@gmail.com>\n \n \t* ppc-opc.c (powerpc_opcodes): Add exser, msgsndu, msgclru."
    },
    {
      "sha": "d62475e62f965387906f8e4f18d4be84fbba87c5",
      "filename": "opcodes/ppc-opc.c",
      "status": "modified",
      "additions": 156,
      "deletions": 6,
      "changes": 162,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3eb651743e06fb360687a26be87bc6b710fc7066/opcodes/ppc-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3eb651743e06fb360687a26be87bc6b710fc7066/opcodes/ppc-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-opc.c?ref=3eb651743e06fb360687a26be87bc6b710fc7066",
      "patch": "@@ -6741,11 +6741,13 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n \n {\"mfmq\",\tXSPR(31,339,  0), XSPR_MASK, M601,\t0,\t\t{RT}},\n {\"mfxer\",\tXSPR(31,339,  1), XSPR_MASK, COM,\t0,\t\t{RT}},\n+{\"mfudscr\",\tXSPR(31,339,  3), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n {\"mfrtcu\",\tXSPR(31,339,  4), XSPR_MASK, COM,\tTITAN,\t\t{RT}},\n {\"mfrtcl\",\tXSPR(31,339,  5), XSPR_MASK, COM,\tTITAN,\t\t{RT}},\n {\"mfdec\",\tXSPR(31,339,  6), XSPR_MASK, MFDEC1,\t0,\t\t{RT}},\n {\"mflr\",\tXSPR(31,339,  8), XSPR_MASK, COM,\t0,\t\t{RT}},\n {\"mfctr\",\tXSPR(31,339,  9), XSPR_MASK, COM,\t0,\t\t{RT}},\n+{\"mfuamr\",\tXSPR(31,339, 13), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n {\"mfdscr\",\tXSPR(31,339, 17), XSPR_MASK, POWER6,\t0,\t\t{RT}},\n {\"mftid\",\tXSPR(31,339, 17), XSPR_MASK, POWER,\t0,\t\t{RT}},\n {\"mfdsisr\",\tXSPR(31,339, 18), XSPR_MASK, COM,\tTITAN,\t\t{RT}},\n@@ -6756,9 +6758,12 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"mfsrr0\",\tXSPR(31,339, 26), XSPR_MASK, COM,\t0,\t\t{RT}},\n {\"mfsrr1\",\tXSPR(31,339, 27), XSPR_MASK, COM,\t0,\t\t{RT}},\n {\"mfcfar\",\tXSPR(31,339, 28), XSPR_MASK, POWER6,\t0,\t\t{RT}},\n+{\"mfamr\",\tXSPR(31,339, 29), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mfpidr\",\tXSPR(31,339, 48), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfpid\",\tXSPR(31,339, 48), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfcsrr0\",\tXSPR(31,339, 58), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfcsrr1\",\tXSPR(31,339, 59), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mfiamr\",\tXSPR(31,339, 61), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfdear\",\tXSPR(31,339, 61), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfesr\",\tXSPR(31,339, 62), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfivpr\",\tXSPR(31,339, 63), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n@@ -6772,16 +6777,28 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"mfcounta\",\tXSPR(31,339,150), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfcountb\",\tXSPR(31,339,151), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfcmpe\",\tXSPR(31,339,152), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n+{\"mffscr\",\tXSPR(31,339,153), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfcmpf\",\tXSPR(31,339,153), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfcmpg\",\tXSPR(31,339,154), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfcmph\",\tXSPR(31,339,155), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mflctrl1\",\tXSPR(31,339,156), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n+{\"mfuamor\",\tXSPR(31,339,157), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n {\"mflctrl2\",\tXSPR(31,339,157), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfictrl\",\tXSPR(31,339,158), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n+{\"mfpspb\",\tXSPR(31,339,159), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfbar\",\tXSPR(31,339,159), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n+{\"mfdpdes\",\tXSPR(31,339,176), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfdawr0\",\tXSPR(31,339,180), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfdawr1\",\tXSPR(31,339,181), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfrpr\",\tXSPR(31,339,186), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfciabr\",\tXSPR(31,339,187), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfdawrx0\",\tXSPR(31,339,188), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfdawrx1\",\tXSPR(31,339,189), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfhfscr\",\tXSPR(31,339,190), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfvrsave\",\tXSPR(31,339,256), XSPR_MASK, PPCVEC,\t0,\t\t{RT}},\n {\"mfusprg0\",\tXSPR(31,339,256), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfsprg\",\tXSPR(31,339,256), XSPRG_MASK, PPC,\t0,\t\t{RT, SPRG}},\n+{\"mfusprg3\",\tXSPR(31,339,259), XSPR_MASK, POWER10,\t0,\t\t{RT}},\n {\"mfsprg4\",\tXSPR(31,339,260), XSPR_MASK, PPC405|BOOKE, 0,\t\t{RT}},\n {\"mfsprg5\",\tXSPR(31,339,261), XSPR_MASK, PPC405|BOOKE, 0,\t\t{RT}},\n {\"mfsprg6\",\tXSPR(31,339,262), XSPR_MASK, PPC405|BOOKE, 0,\t\t{RT}},\n@@ -6797,20 +6814,37 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"mfear\",\tXSPR(31,339,282), XSPR_MASK, PPC,\tTITAN,\t\t{RT}},\n {\"mfpir\",\tXSPR(31,339,286), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfpvr\",\tXSPR(31,339,287), XSPR_MASK, PPC,\t0,\t\t{RT}},\n+{\"mfhsprg0\",\tXSPR(31,339,304), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfdbsr\",\tXSPR(31,339,304), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mfhsprg1\",\tXSPR(31,339,305), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfhdisr\",\tXSPR(31,339,306), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfhdar\",\tXSPR(31,339,307), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfspurr\",\tXSPR(31,339,308), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfdbcr0\",\tXSPR(31,339,308), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mfpurr\",\tXSPR(31,339,309), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfdbcr1\",\tXSPR(31,339,309), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mfhdec\",\tXSPR(31,339,310), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfdbcr2\",\tXSPR(31,339,310), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfiac1\",\tXSPR(31,339,312), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mfhrmor\",\tXSPR(31,339,313), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfiac2\",\tXSPR(31,339,313), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mfhsrr0\",\tXSPR(31,339,314), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfiac3\",\tXSPR(31,339,314), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mfhsrr1\",\tXSPR(31,339,315), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfiac4\",\tXSPR(31,339,315), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfdac1\",\tXSPR(31,339,316), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfdac2\",\tXSPR(31,339,317), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mflpcr\",\tXSPR(31,339,318), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfdvc1\",\tXSPR(31,339,318), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mflpidr\",\tXSPR(31,339,319), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfdvc2\",\tXSPR(31,339,319), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mfhmer\",\tXSPR(31,339,336), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n {\"mftsr\",\tXSPR(31,339,336), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mfhmeer\",\tXSPR(31,339,337), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mfpcr\",\tXSPR(31,339,338), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfheir\",\tXSPR(31,339,339), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mftcr\",\tXSPR(31,339,340), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mfamor\",\tXSPR(31,339,349), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n {\"mfivor0\",\tXSPR(31,339,400), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfivor1\",\tXSPR(31,339,401), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfivor2\",\tXSPR(31,339,402), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n@@ -6827,6 +6861,14 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"mfivor13\",\tXSPR(31,339,413), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfivor14\",\tXSPR(31,339,414), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n {\"mfivor15\",\tXSPR(31,339,415), XSPR_MASK, BOOKE,\t0,\t\t{RT}},\n+{\"mftir\",\tXSPR(31,339,446), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfptcr\",\tXSPR(31,339,464), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfuspgr0\",\tXSPR(31,339,496), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfuspgr1\",\tXSPR(31,339,497), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfurmor\",\tXSPR(31,339,505), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfusrr0\",\tXSPR(31,339,506), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfusrr1\",\tXSPR(31,339,507), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mfsmfctrl\",\tXSPR(31,339,511), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfspefscr\",\tXSPR(31,339,512), XSPR_MASK, PPCSPE,\t0,\t\t{RT}},\n {\"mfbbear\",\tXSPR(31,339,513), XSPR_MASK, PPCBRLK,\t0,\t\t{RT}},\n {\"mfbbtar\",\tXSPR(31,339,514), XSPR_MASK, PPCBRLK,\t0,\t\t{RT}},\n@@ -6851,18 +6893,36 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"mfdpdr\",\tXSPR(31,339,630), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfdpir\",\tXSPR(31,339,631), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfimmr\",\tXSPR(31,339,638), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n+{\"mfusier2\",\tXSPR(31,339,736), XSPR_MASK, POWER10,\t0, \t\t{RT}},\n+{\"mfsier2\",\tXSPR(31,339,736), XSPR_MASK, POWER10,\t0, \t\t{RT}},\n+{\"mfusier3\",\tXSPR(31,339,737), XSPR_MASK, POWER10,\t0, \t\t{RT}},\n+{\"mfsier3\",\tXSPR(31,339,737), XSPR_MASK, POWER10,\t0, \t\t{RT}},\n+{\"mfummcr3\",\tXSPR(31,339,738), XSPR_MASK, POWER10,\t0, \t\t{RT}},\n+{\"mfmmcr3\",\tXSPR(31,339,738), XSPR_MASK, POWER10,\t0, \t\t{RT}},\n+{\"mfusier\",\tXSPR(31,339,768), XSPR_MASK, POWER10,\t0, \t\t{RT}},\n+{\"mfsier\",\tXSPR(31,339,768), XSPR_MASK, POWER10,\t0, \t\t{RT}},\n+{\"mfummcra\",\tXSPR(31,339,770), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfmmcra\",\tXSPR(31,339,770), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n {\"mfupmc1\",\tXSPR(31,339,771), XSPR_MASK, POWER9,\t0, \t\t{RT}},\n-{\"mfpmc1\",\tXSPR(31,339,771), XSPR_MASK, POWER9,\t0,\t\t{RT}},\n+{\"mfpmc1\",\tXSPR(31,339,771), XSPR_MASK, POWER7,\t0,\t\t{RT}},\n {\"mfupmc2\",\tXSPR(31,339,772), XSPR_MASK, POWER9,\t0,\t\t{RT}},\n-{\"mfpmc2\",\tXSPR(31,339,772), XSPR_MASK, POWER9,\t0,\t\t{RT}},\n+{\"mfpmc2\",\tXSPR(31,339,772), XSPR_MASK, POWER7,\t0,\t\t{RT}},\n {\"mfupmc3\",\tXSPR(31,339,773), XSPR_MASK, POWER9,\t0,\t\t{RT}},\n-{\"mfpmc3\",\tXSPR(31,339,773), XSPR_MASK, POWER9,\t0,\t\t{RT}},\n+{\"mfpmc3\",\tXSPR(31,339,773), XSPR_MASK, POWER7,\t0,\t\t{RT}},\n {\"mfupmc4\",\tXSPR(31,339,774), XSPR_MASK, POWER9,\t0,\t\t{RT}},\n-{\"mfpmc4\",\tXSPR(31,339,774), XSPR_MASK, POWER9,\t0,\t\t{RT}},\n+{\"mfpmc4\",\tXSPR(31,339,774), XSPR_MASK, POWER7,\t0,\t\t{RT}},\n {\"mfupmc5\",\tXSPR(31,339,775), XSPR_MASK, POWER9,\t0,\t\t{RT}},\n-{\"mfpmc5\",\tXSPR(31,339,775), XSPR_MASK, POWER9,\t0,\t\t{RT}},\n+{\"mfpmc5\",\tXSPR(31,339,775), XSPR_MASK, POWER7,\t0,\t\t{RT}},\n {\"mfupmc6\",\tXSPR(31,339,776), XSPR_MASK, POWER9,\t0,\t\t{RT}},\n-{\"mfpmc6\",\tXSPR(31,339,776), XSPR_MASK, POWER9,\t0,\t\t{RT}},\n+{\"mfpmc6\",\tXSPR(31,339,776), XSPR_MASK, POWER7,\t0,\t\t{RT}},\n+{\"mfummcr0\",\tXSPR(31,339,779), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfmmcr0\",\tXSPR(31,339,779), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mfusiar\",\tXSPR(31,339,780), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfsiar\",\tXSPR(31,339,780), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfusdar\",\tXSPR(31,339,781), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfsdar\",\tXSPR(31,339,781), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfummcr1\",\tXSPR(31,339,782), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfmmcr1\",\tXSPR(31,339,782), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n {\"mfmi_ctr\",\tXSPR(31,339,784), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfmi_ap\",\tXSPR(31,339,786), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfmi_epn\",\tXSPR(31,339,787), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n@@ -6876,12 +6936,25 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"mfmd_twc\",\tXSPR(31,339,797), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfmd_rpn\",\tXSPR(31,339,798), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfm_tw\",\tXSPR(31,339,799), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n+{\"mfbescrs\",\tXSPR(31,339,800), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfbescrsu\",\tXSPR(31,339,801), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfbescrr\",\tXSPR(31,339,802), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfbescrru\",\tXSPR(31,339,803), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfebbhr\",\tXSPR(31,339,804), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfebbrr\",\tXSPR(31,339,805), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfbescr\",\tXSPR(31,339,806), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mftar\",\tXSPR(31,339,815), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mfasdr\",\tXSPR(31,339,816), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfmi_dbcam\",\tXSPR(31,339,816), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfmi_dbram0\",\tXSPR(31,339,817), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfmi_dbram1\",\tXSPR(31,339,818), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n+{\"mfpsscr\",\tXSPR(31,339,823), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfmd_dbcam\",\tXSPR(31,339,824), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfmd_dbram0\",\tXSPR(31,339,825), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n {\"mfmd_dbram1\",\tXSPR(31,339,826), XSPR_MASK, PPC860,\t0,\t\t{RT}},\n+{\"mfic\",\tXSPR(31,339,848), XSPR_MASK, POWER8,\t0,\t\t{RS}},\n+{\"mfvtb\",\tXSPR(31,339,849), XSPR_MASK, POWER8,\t0,\t\t{RS}},\n+{\"mfhpsscr\",\tXSPR(31,339,855), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mfivndx\",\tXSPR(31,339,880), XSPR_MASK, TITAN,\t0,\t\t{RT}},\n {\"mfdvndx\",\tXSPR(31,339,881), XSPR_MASK, TITAN,\t0,\t\t{RT}},\n {\"mfivlim\",\tXSPR(31,339,882), XSPR_MASK, TITAN,\t0,\t\t{RT}},\n@@ -7128,8 +7201,10 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n \n {\"mtmq\",\tXSPR(31,467,  0), XSPR_MASK, M601,\t0,\t\t{RS}},\n {\"mtxer\",\tXSPR(31,467,  1), XSPR_MASK, COM,\t0,\t\t{RS}},\n+{\"mtudscr\",\tXSPR(31,467,  3), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n {\"mtlr\",\tXSPR(31,467,  8), XSPR_MASK, COM,\t0,\t\t{RS}},\n {\"mtctr\",\tXSPR(31,467,  9), XSPR_MASK, COM,\t0,\t\t{RS}},\n+{\"mtuamr\",\tXSPR(31,467, 13), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n {\"mtdscr\",\tXSPR(31,467, 17), XSPR_MASK, POWER6,\t0,\t\t{RS}},\n {\"mttid\",\tXSPR(31,467, 17), XSPR_MASK, POWER,\t0,\t\t{RS}},\n {\"mtdsisr\",\tXSPR(31,467, 18), XSPR_MASK, COM,\tTITAN,\t\t{RS}},\n@@ -7142,13 +7217,20 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"mtsrr0\",\tXSPR(31,467, 26), XSPR_MASK, COM,\t0,\t\t{RS}},\n {\"mtsrr1\",\tXSPR(31,467, 27), XSPR_MASK, COM,\t0,\t\t{RS}},\n {\"mtcfar\",\tXSPR(31,467, 28), XSPR_MASK, POWER6,\t0,\t\t{RS}},\n+{\"mtamr\",\tXSPR(31,467, 29), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mtpidr\",\tXSPR(31,467, 48), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtpid\",\tXSPR(31,467, 48), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtdecar\",\tXSPR(31,467, 54), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtcsrr0\",\tXSPR(31,467, 58), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtcsrr1\",\tXSPR(31,467, 59), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mtiamr\",\tXSPR(31,467, 61), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtdear\",\tXSPR(31,467, 61), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtesr\",\tXSPR(31,467, 62), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtivpr\",\tXSPR(31,467, 63), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mttfhar\",\tXSPR(31,467,128), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mttfiar\",\tXSPR(31,467,129), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mttexasr\",\tXSPR(31,467,130), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mttexasru\",\tXSPR(31,467,131), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n {\"mtcmpa\",\tXSPR(31,467,144), XSPR_MASK, PPC860,\t0,\t\t{RS}},\n {\"mtcmpb\",\tXSPR(31,467,145), XSPR_MASK, PPC860,\t0,\t\t{RS}},\n {\"mtcmpc\",\tXSPR(31,467,146), XSPR_MASK, PPC860,\t0,\t\t{RS}},\n@@ -7159,13 +7241,24 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"mtcountb\",\tXSPR(31,467,151), XSPR_MASK, PPC860,\t0,\t\t{RS}},\n {\"mtctrl\",\tXSPR(31,467,152), XSPR_MASK, POWER4,\t0,\t\t{RS}},\n {\"mtcmpe\",\tXSPR(31,467,152), XSPR_MASK, PPC860,\t0,\t\t{RS}},\n+{\"mtfscr\",\tXSPR(31,467,153), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtcmpf\",\tXSPR(31,467,153), XSPR_MASK, PPC860,\t0,\t\t{RS}},\n {\"mtcmpg\",\tXSPR(31,467,154), XSPR_MASK, PPC860,\t0,\t\t{RS}},\n {\"mtcmph\",\tXSPR(31,467,155), XSPR_MASK, PPC860,\t0,\t\t{RS}},\n {\"mtlctrl1\",\tXSPR(31,467,156), XSPR_MASK, PPC860,\t0,\t\t{RS}},\n+{\"mtuamor\",\tXSPR(31,467,157), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n {\"mtlctrl2\",\tXSPR(31,467,157), XSPR_MASK, PPC860,\t0,\t\t{RS}},\n {\"mtictrl\",\tXSPR(31,467,158), XSPR_MASK, PPC860,\t0,\t\t{RS}},\n+{\"mtpspb\",\tXSPR(31,467,159), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtbar\",\tXSPR(31,467,159), XSPR_MASK, PPC860,\t0,\t\t{RS}},\n+{\"mtdpdes\",\tXSPR(31,467,176), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtdawr0\",\tXSPR(31,467,180), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtdawr1\",\tXSPR(31,467,181), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtrpr\",\tXSPR(31,467,186), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtciabr\",\tXSPR(31,467,187), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtdawrx0\",\tXSPR(31,467,188), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtdawrx1\",\tXSPR(31,467,189), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mthfscr\",\tXSPR(31,467,190), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtvrsave\",\tXSPR(31,467,256), XSPR_MASK, PPCVEC,\t0,\t\t{RS}},\n {\"mtusprg0\",\tXSPR(31,467,256), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtsprg\",\tXSPR(31,467,256), XSPRG_MASK, PPC,\t0,\t\t{SPRG, RS}},\n@@ -7181,20 +7274,38 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"mtear\",\tXSPR(31,467,282), XSPR_MASK, PPC,\tTITAN,\t\t{RS}},\n {\"mttbl\",\tXSPR(31,467,284), XSPR_MASK, PPC,\t0,\t\t{RS}},\n {\"mttbu\",\tXSPR(31,467,285), XSPR_MASK, PPC,\t0,\t\t{RS}},\n+{\"mttbu40\",\tXSPR(31,467,286), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mthsprg0\",\tXSPR(31,467,304), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtdbsr\",\tXSPR(31,467,304), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mthsprg1\",\tXSPR(31,467,305), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mthdisr\",\tXSPR(31,467,306), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mthdar\",\tXSPR(31,467,307), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtspurr\",\tXSPR(31,467,308), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtdbcr0\",\tXSPR(31,467,308), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mtpurr\",\tXSPR(31,467,309), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtdbcr1\",\tXSPR(31,467,309), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mthdec\",\tXSPR(31,467,310), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtdbcr2\",\tXSPR(31,467,310), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtiac1\",\tXSPR(31,467,312), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mthrmor\",\tXSPR(31,467,313), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtiac2\",\tXSPR(31,467,313), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mthsrr0\",\tXSPR(31,467,314), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtiac3\",\tXSPR(31,467,314), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mthsrr1\",\tXSPR(31,467,315), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtiac4\",\tXSPR(31,467,315), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtdac1\",\tXSPR(31,467,316), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtdac2\",\tXSPR(31,467,317), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mtlpcr\",\tXSPR(31,467,318), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtdvc1\",\tXSPR(31,467,318), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mtlpidr\",\tXSPR(31,467,319), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtdvc2\",\tXSPR(31,467,319), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mthmer\",\tXSPR(31,467,336), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n {\"mttsr\",\tXSPR(31,467,336), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mthmeer\",\tXSPR(31,467,337), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mtpcr\",\tXSPR(31,467,338), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtheir\",\tXSPR(31,467,339), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mttcr\",\tXSPR(31,467,340), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mtamor\",\tXSPR(31,467,349), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n {\"mtivor0\",\tXSPR(31,467,400), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtivor1\",\tXSPR(31,467,401), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtivor2\",\tXSPR(31,467,402), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n@@ -7211,6 +7322,13 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"mtivor13\",\tXSPR(31,467,413), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtivor14\",\tXSPR(31,467,414), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n {\"mtivor15\",\tXSPR(31,467,415), XSPR_MASK, BOOKE,\t0,\t\t{RS}},\n+{\"mtptcr\",\tXSPR(31,467,464), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtuspgr0\",\tXSPR(31,467,496), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtuspgr1\",\tXSPR(31,467,497), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mturmor\",\tXSPR(31,467,505), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtusrr0\",\tXSPR(31,467,506), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtusrr1\",\tXSPR(31,467,507), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtsmfctrl\",\tXSPR(31,467,511), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtspefscr\",\tXSPR(31,467,512), XSPR_MASK, PPCSPE,\t0,\t\t{RS}},\n {\"mtbbear\",\tXSPR(31,467,513), XSPR_MASK, PPCBRLK,\t0,\t\t{RS}},\n {\"mtbbtar\",\tXSPR(31,467,514), XSPR_MASK, PPCBRLK,\t0,\t\t{RS}},\n@@ -7225,12 +7343,44 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"mtmcsrr0\",\tXSPR(31,467,570), XSPR_MASK, PPCRFMCI,\t0,\t\t{RS}},\n {\"mtmcsrr1\",\tXSPR(31,467,571), XSPR_MASK, PPCRFMCI,\t0,\t\t{RS}},\n {\"mtmcsr\",\tXSPR(31,467,572), XSPR_MASK, PPCRFMCI,\t0,\t\t{RS}},\n+{\"mtsier2\",\tXSPR(31,467,752), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtsier3\",\tXSPR(31,467,753), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtmmcr3\",\tXSPR(31,467,754), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtummcr2\",\tXSPR(31,467,769), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mtmmcr2\",\tXSPR(31,467,769), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mtummcra\",\tXSPR(31,467,770), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n {\"mtupmc1\",\tXSPR(31,467,771), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n {\"mtupmc2\",\tXSPR(31,467,772), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n {\"mtupmc3\",\tXSPR(31,467,773), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n {\"mtupmc4\",\tXSPR(31,467,774), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n {\"mtupmc5\",\tXSPR(31,467,775), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n {\"mtupmc6\",\tXSPR(31,467,776), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mtummcr0\",\tXSPR(31,467,779), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mtsier\",\tXSPR(31,467,784), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtmmcra\",\tXSPR(31,467,786), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mtpmc1\",\tXSPR(31,467,787), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mtpmc2\",\tXSPR(31,467,788), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mtpmc3\",\tXSPR(31,467,789), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mtpmc4\",\tXSPR(31,467,790), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mtpmc5\",\tXSPR(31,467,791), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mtpmc6\",\tXSPR(31,467,792), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mtmmcr0\",\tXSPR(31,467,795), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mtsiar\",\tXSPR(31,467,796), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtsdar\",\tXSPR(31,467,797), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtmmcr1\",\tXSPR(31,467,798), XSPR_MASK, POWER7,\t0,\t\t{RS}},\n+{\"mtbescrs\",\tXSPR(31,467,800), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mtbescrsu\",\tXSPR(31,467,801), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mtbescrr\",\tXSPR(31,467,802), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mtbescrru\",\tXSPR(31,467,803), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mtebbhr\",\tXSPR(31,467,804), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mtebbrr\",\tXSPR(31,467,805), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mtbescr\",\tXSPR(31,467,806), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mttar\",\tXSPR(31,467,815), XSPR_MASK, POWER9,\t0,\t\t{RS}},\n+{\"mtasdr\",\tXSPR(31,467,816), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtpsscr\",\tXSPR(31,467,823), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n+{\"mtic\",\tXSPR(31,467,848), XSPR_MASK, POWER8,\t0,\t\t{RS}},\n+{\"mtvtb\",\tXSPR(31,467,849), XSPR_MASK, POWER8,\t0,\t\t{RS}},\n+{\"mthpsscr\",\tXSPR(31,467,855), XSPR_MASK, POWER10,\t0,\t\t{RS}},\n {\"mtivndx\",\tXSPR(31,467,880), XSPR_MASK, TITAN,\t0,\t\t{RS}},\n {\"mtdvndx\",\tXSPR(31,467,881), XSPR_MASK, TITAN,\t0,\t\t{RS}},\n {\"mtivlim\",\tXSPR(31,467,882), XSPR_MASK, TITAN,\t0,\t\t{RS}},"
    }
  ]
}