{
  "sha": "c7c6e55b60b072cdcc5c3fc27164b890a0f34520",
  "node_id": "C_kwDOANOeidoAKGM3YzZlNTViNjBiMDcyY2RjYzVjM2ZjMjcxNjRiODkwYTBmMzQ1MjA",
  "commit": {
    "author": {
      "name": "Stafford Horne",
      "email": "shorne@gmail.com",
      "date": "2022-02-02T11:11:56Z"
    },
    "committer": {
      "name": "Stafford Horne",
      "email": "shorne@gmail.com",
      "date": "2022-02-02T11:11:56Z"
    },
    "message": "or1k: Avoid R_OR1K_GOT16 signed overflow by using special howto\n\nPreviously when fixing PR 21464 we masked out upper bits of the\nrelocation value in order to avoid overflow complaints when acceptable.\nIt turns out this does not work when the relocation value ends up being\nsigned.\n\nTo fix this this patch introduces a special howto with\ncomplain_on_overflow set to complain_overflow_dont.  This is used in\nplace of the normal R_OR1K_GOT16 howto when we detect R_OR1K_GOT_AHI16\nrelocations.\n\nbfd/ChangeLog:\n\n\tPR 28735\n\t* elf32-or1k.c (or1k_elf_got16_no_overflow_howto): Define.\n\t(or1k_elf_relocate_section): Use new howto instead of trying to\n\tmask out relocation bits.",
    "tree": {
      "sha": "107c07240dc4eb049999322d336551e7fd8212fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/107c07240dc4eb049999322d336551e7fd8212fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c7c6e55b60b072cdcc5c3fc27164b890a0f34520",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7c6e55b60b072cdcc5c3fc27164b890a0f34520",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c7c6e55b60b072cdcc5c3fc27164b890a0f34520",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7c6e55b60b072cdcc5c3fc27164b890a0f34520/comments",
  "author": {
    "login": "stffrdhrn",
    "id": 2404255,
    "node_id": "MDQ6VXNlcjI0MDQyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stffrdhrn",
    "html_url": "https://github.com/stffrdhrn",
    "followers_url": "https://api.github.com/users/stffrdhrn/followers",
    "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}",
    "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions",
    "organizations_url": "https://api.github.com/users/stffrdhrn/orgs",
    "repos_url": "https://api.github.com/users/stffrdhrn/repos",
    "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stffrdhrn/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "stffrdhrn",
    "id": 2404255,
    "node_id": "MDQ6VXNlcjI0MDQyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stffrdhrn",
    "html_url": "https://github.com/stffrdhrn",
    "followers_url": "https://api.github.com/users/stffrdhrn/followers",
    "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}",
    "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions",
    "organizations_url": "https://api.github.com/users/stffrdhrn/orgs",
    "repos_url": "https://api.github.com/users/stffrdhrn/repos",
    "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stffrdhrn/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "14f983573850419b8354a112f6ab048cb4bc130d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14f983573850419b8354a112f6ab048cb4bc130d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/14f983573850419b8354a112f6ab048cb4bc130d"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 27,
    "deletions": 4
  },
  "files": [
    {
      "sha": "b213764785538f7918fc9bd76ccf4fce558ed89b",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7c6e55b60b072cdcc5c3fc27164b890a0f34520/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7c6e55b60b072cdcc5c3fc27164b890a0f34520/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=c7c6e55b60b072cdcc5c3fc27164b890a0f34520",
      "patch": "@@ -1,3 +1,10 @@\n+2022-02-02  Stafford Horne  <shorne@gmail.com>\n+\n+\tPR 28735\n+\t* elf32-or1k.c (or1k_elf_got16_no_overflow_howto): Define.\n+\t(or1k_elf_relocate_section): Use new howto instead of trying to\n+\tmask out relocation bits.\n+\n 2022-01-24  Roland McGrath  <mcgrathr@google.com>\n \n \t* doc/local.mk (%D%/bfdver.texi): Add mkdir command."
    },
    {
      "sha": "2a06b3e19e6c54067adb7e9c582b9949a10571ad",
      "filename": "bfd/elf32-or1k.c",
      "status": "modified",
      "additions": 20,
      "deletions": 4,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7c6e55b60b072cdcc5c3fc27164b890a0f34520/bfd/elf32-or1k.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7c6e55b60b072cdcc5c3fc27164b890a0f34520/bfd/elf32-or1k.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-or1k.c?ref=c7c6e55b60b072cdcc5c3fc27164b890a0f34520",
      "patch": "@@ -828,6 +828,23 @@ static reloc_howto_type or1k_elf_howto_table[] =\n \t false),\t\t/* pcrel_offset */\n };\n \n+/* A copy of the R_OR1K_GOT16 used in the presense of R_OR1K_GOT_AHI16\n+   relocations when we know we can ignore overflows.  */\n+static reloc_howto_type or1k_elf_got16_no_overflow_howto =\n+  HOWTO (R_OR1K_GOT16,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 2,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 16,\t\t\t/* bitsize */\n+\t false,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_dont, /* complain_on_overflow */\n+\t bfd_elf_generic_reloc, /* special_function */\n+\t \"R_OR1K_GOT16\",\t/* name */\n+\t false,\t\t\t/* partial_inplace */\n+\t 0,\t\t\t/* src_mask */\n+\t 0xffff,\t\t/* dst_mask */\n+\t false);\t\t/* pcrel_offset */\n+\n /* Map BFD reloc types to Or1k ELF reloc types.  */\n \n struct or1k_reloc_map\n@@ -1506,12 +1523,11 @@ or1k_elf_relocate_section (bfd *output_bfd,\n \t    if (r_type == R_OR1K_GOT_AHI16)\n \t      saw_gotha = true;\n \n-\t    /* If we have a R_OR1K_GOT16 followed by a R_OR1K_GOT_AHI16\n+\t    /* If we have a R_OR1K_GOT16 following a R_OR1K_GOT_AHI16\n \t       relocation we assume the code is doing the right thing to avoid\n-\t       overflows.  Here we mask the lower 16-bit of the relocation to\n-\t       avoid overflow validation failures.  */\n+\t       overflows.  */\n \t    if (r_type == R_OR1K_GOT16 && saw_gotha)\n-\t      relocation &= 0xffff;\n+\t      howto = &or1k_elf_got16_no_overflow_howto;\n \n \t  /* Addend should be zero.  */\n \t  if (rel->r_addend != 0)"
    }
  ]
}