{
  "sha": "e08109f24b9c05f93415eb59fd8faba4889e9881",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTA4MTA5ZjI0YjljMDVmOTM0MTVlYjU5ZmQ4ZmFiYTQ4ODllOTg4MQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:05Z"
    },
    "message": "Split out eval_op_f_mod\n\nThis splits BINOP_MOD into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* f-lang.c (eval_op_f_mod): New function.\n\t(evaluate_subexp_f): Use it.",
    "tree": {
      "sha": "0985f340b4a6815845122b0e20edc3da492626e8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0985f340b4a6815845122b0e20edc3da492626e8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e08109f24b9c05f93415eb59fd8faba4889e9881",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e08109f24b9c05f93415eb59fd8faba4889e9881",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e08109f24b9c05f93415eb59fd8faba4889e9881",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e08109f24b9c05f93415eb59fd8faba4889e9881/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cc05c68ee0d7903a2f21588b5d5b93d69fa5c1d1"
    }
  ],
  "stats": {
    "total": 73,
    "additions": 44,
    "deletions": 29
  },
  "files": [
    {
      "sha": "4ef687f613e8673ea657929ac4ebfde92043d799",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e08109f24b9c05f93415eb59fd8faba4889e9881/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e08109f24b9c05f93415eb59fd8faba4889e9881/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e08109f24b9c05f93415eb59fd8faba4889e9881",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* f-lang.c (eval_op_f_mod): New function.\n+\t(evaluate_subexp_f): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* f-lang.c (eval_op_f_abs): New function."
    },
    {
      "sha": "57e393614fe0029ad22360e8b5b459e73741b2e2",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 39,
      "deletions": 29,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e08109f24b9c05f93415eb59fd8faba4889e9881/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e08109f24b9c05f93415eb59fd8faba4889e9881/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=e08109f24b9c05f93415eb59fd8faba4889e9881",
      "patch": "@@ -1003,6 +1003,44 @@ eval_op_f_abs (struct type *expect_type, struct expression *exp,\n   error (_(\"ABS of type %s not supported\"), TYPE_SAFE_NAME (type));\n }\n \n+/* A helper function for BINOP_MOD.  */\n+\n+static struct value *\n+eval_op_f_mod (struct type *expect_type, struct expression *exp,\n+\t       enum noside noside,\n+\t       struct value *arg1, struct value *arg2)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+  struct type *type = value_type (arg1);\n+  if (type->code () != value_type (arg2)->code ())\n+    error (_(\"non-matching types for parameters to MOD ()\"));\n+  switch (type->code ())\n+    {\n+    case TYPE_CODE_FLT:\n+      {\n+\tdouble d1\n+\t  = target_float_to_host_double (value_contents (arg1),\n+\t\t\t\t\t value_type (arg1));\n+\tdouble d2\n+\t  = target_float_to_host_double (value_contents (arg2),\n+\t\t\t\t\t value_type (arg2));\n+\tdouble d3 = fmod (d1, d2);\n+\treturn value_from_host_double (type, d3);\n+      }\n+    case TYPE_CODE_INT:\n+      {\n+\tLONGEST v1 = value_as_long (arg1);\n+\tLONGEST v2 = value_as_long (arg2);\n+\tif (v2 == 0)\n+\t  error (_(\"calling MOD (N, 0) is undefined\"));\n+\tLONGEST v3 = v1 - (v1 / v2) * v2;\n+\treturn value_from_longest (value_type (arg1), v3);\n+      }\n+    }\n+  error (_(\"MOD of type %s not supported\"), TYPE_SAFE_NAME (type));\n+}\n+\n /* Special expression evaluation cases for Fortran.  */\n \n static struct value *\n@@ -1031,35 +1069,7 @@ evaluate_subexp_f (struct type *expect_type, struct expression *exp,\n     case BINOP_MOD:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);\n       arg2 = evaluate_subexp (value_type (arg1), exp, pos, noside);\n-      if (noside == EVAL_SKIP)\n-\treturn eval_skip_value (exp);\n-      type = value_type (arg1);\n-      if (type->code () != value_type (arg2)->code ())\n-\terror (_(\"non-matching types for parameters to MOD ()\"));\n-      switch (type->code ())\n-\t{\n-\tcase TYPE_CODE_FLT:\n-\t  {\n-\t    double d1\n-\t      = target_float_to_host_double (value_contents (arg1),\n-\t\t\t\t\t     value_type (arg1));\n-\t    double d2\n-\t      = target_float_to_host_double (value_contents (arg2),\n-\t\t\t\t\t     value_type (arg2));\n-\t    double d3 = fmod (d1, d2);\n-\t    return value_from_host_double (type, d3);\n-\t  }\n-\tcase TYPE_CODE_INT:\n-\t  {\n-\t    LONGEST v1 = value_as_long (arg1);\n-\t    LONGEST v2 = value_as_long (arg2);\n-\t    if (v2 == 0)\n-\t      error (_(\"calling MOD (N, 0) is undefined\"));\n-\t    LONGEST v3 = v1 - (v1 / v2) * v2;\n-\t    return value_from_longest (value_type (arg1), v3);\n-\t  }\n-\t}\n-      error (_(\"MOD of type %s not supported\"), TYPE_SAFE_NAME (type));\n+      return eval_op_f_mod (expect_type, exp, noside, arg1, arg2);\n \n     case UNOP_FORTRAN_CEILING:\n       {"
    }
  ]
}