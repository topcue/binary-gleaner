{
  "sha": "60fa02ca6fdaaf3f0afef842a4eb6b13286828a5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjBmYTAyY2E2ZmRhYWYzZjBhZmVmODQyYTRlYjZiMTMyODY4MjhhNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:33Z"
    },
    "message": "Implement some Ada OP_ATR_ operations\n\nThis implements a few Ada OP_ATR_ operations.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_unop_atr_operation::evaluate): New method.\n\t* ada-exp.h (class ada_unop_atr_operation): New.",
    "tree": {
      "sha": "19c30663e51e81280447fb20b2d726c3814bb6e6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/19c30663e51e81280447fb20b2d726c3814bb6e6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/60fa02ca6fdaaf3f0afef842a4eb6b13286828a5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60fa02ca6fdaaf3f0afef842a4eb6b13286828a5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/60fa02ca6fdaaf3f0afef842a4eb6b13286828a5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60fa02ca6fdaaf3f0afef842a4eb6b13286828a5/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "82c3886e24b3fed8d7e61b41f8cfdc17eedd88f8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82c3886e24b3fed8d7e61b41f8cfdc17eedd88f8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/82c3886e24b3fed8d7e61b41f8cfdc17eedd88f8"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 42,
    "deletions": 0
  },
  "files": [
    {
      "sha": "ee370533123b39ae975b50a52025b93aab7bbca8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60fa02ca6fdaaf3f0afef842a4eb6b13286828a5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60fa02ca6fdaaf3f0afef842a4eb6b13286828a5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=60fa02ca6fdaaf3f0afef842a4eb6b13286828a5",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_unop_atr_operation::evaluate): New method.\n+\t* ada-exp.h (class ada_unop_atr_operation): New.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_binop_in_bounds): No longer static."
    },
    {
      "sha": "e92ae469b63073584eabef2cd689765bb76f71af",
      "filename": "gdb/ada-exp.h",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60fa02ca6fdaaf3f0afef842a4eb6b13286828a5/gdb/ada-exp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60fa02ca6fdaaf3f0afef842a4eb6b13286828a5/gdb/ada-exp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-exp.h?ref=60fa02ca6fdaaf3f0afef842a4eb6b13286828a5",
      "patch": "@@ -267,6 +267,22 @@ class ada_binop_in_bounds_operation\n   { return BINOP_IN_BOUNDS; }\n };\n \n+/* Implement several unary Ada OP_ATR_* operations.  */\n+class ada_unop_atr_operation\n+  : public maybe_constant_operation<operation_up, enum exp_opcode, int>\n+{\n+public:\n+\n+  using maybe_constant_operation::maybe_constant_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override;\n+\n+  enum exp_opcode opcode () const override\n+  { return std::get<1> (m_storage); }\n+};\n+\n } /* namespace expr */\n \n #endif /* ADA_EXP_H */"
    },
    {
      "sha": "9103ecedecb9f66e8ab0aca24c5bd55c080b38a2",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60fa02ca6fdaaf3f0afef842a4eb6b13286828a5/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60fa02ca6fdaaf3f0afef842a4eb6b13286828a5/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=60fa02ca6fdaaf3f0afef842a4eb6b13286828a5",
      "patch": "@@ -10532,6 +10532,27 @@ ada_binop_addsub_operation::evaluate (struct type *expect_type,\n   return arg1;\n }\n \n+value *\n+ada_unop_atr_operation::evaluate (struct type *expect_type,\n+\t\t\t\t  struct expression *exp,\n+\t\t\t\t  enum noside noside)\n+{\n+  struct type *type_arg = nullptr;\n+  value *val = nullptr;\n+\n+  if (std::get<0> (m_storage)->opcode () == OP_TYPE)\n+    {\n+      value *tem = std::get<0> (m_storage)->evaluate (nullptr, exp,\n+\t\t\t\t\t\t      EVAL_AVOID_SIDE_EFFECTS);\n+      type_arg = value_type (tem);\n+    }\n+  else\n+    val = std::get<0> (m_storage)->evaluate (nullptr, exp, noside);\n+\n+  return ada_unop_atr (exp, noside, std::get<1> (m_storage),\n+\t\t       val, type_arg, std::get<2> (m_storage));\n+}\n+\n }\n \n /* Implement the evaluate_exp routine in the exp_descriptor structure"
    }
  ]
}