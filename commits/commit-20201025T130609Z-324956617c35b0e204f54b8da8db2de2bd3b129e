{
  "sha": "324956617c35b0e204f54b8da8db2de2bd3b129e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzI0OTU2NjE3YzM1YjBlMjA0ZjU0YjhkYThkYjJkZTJiZDNiMTI5ZQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-25T02:59:51Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-25T13:06:09Z"
    },
    "message": "gdb: make jit.c use the inferior_created inferior parameter\n\nUse the inferior parameter now available in jit_inferior_created_hook.\nIt is passed down to jit_inferior_init, which uses it as much as\npossible instead of the current inferior or current program space.\n\ngdb/ChangeLog:\n\n\t* jit.c (jit_reader_load_command): Pass current inferior.\n\t(jit_inferior_init): Change parameter type to inferior, use it.\n\t(jit_inferior_created): Remove.\n\t(jit_inferior_created_hook): Pass inferior parameter down.\n\t(_initialize_jit): Use jit_inferior_created_hook instead of\n\tjit_inferior_created.\n\t* jit.h (jit_inferior_created_hook): Add inferior parameter.\n\t* infrun.c (follow_exec): Pass inferior to\n\tjit_inferior_created_hook.\n\nChange-Id: If3a2114a933370dd313d5abd623136d273cdb8fa",
    "tree": {
      "sha": "27c477731c7b60c9a7fbbd88db7ce6b9ef453024",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/27c477731c7b60c9a7fbbd88db7ce6b9ef453024"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/324956617c35b0e204f54b8da8db2de2bd3b129e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/324956617c35b0e204f54b8da8db2de2bd3b129e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/324956617c35b0e204f54b8da8db2de2bd3b129e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/324956617c35b0e204f54b8da8db2de2bd3b129e/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3f66685e9e92717af0cafa20480de5548aea7298",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f66685e9e92717af0cafa20480de5548aea7298",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3f66685e9e92717af0cafa20480de5548aea7298"
    }
  ],
  "stats": {
    "total": 44,
    "additions": 25,
    "deletions": 19
  },
  "files": [
    {
      "sha": "c1a92bb7bd51abc2592c66c33f390b66f904bd8d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/324956617c35b0e204f54b8da8db2de2bd3b129e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/324956617c35b0e204f54b8da8db2de2bd3b129e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=324956617c35b0e204f54b8da8db2de2bd3b129e",
      "patch": "@@ -1,3 +1,15 @@\n+2020-10-24  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* jit.c (jit_reader_load_command): Pass current inferior.\n+\t(jit_inferior_init): Change parameter type to inferior, use it.\n+\t(jit_inferior_created): Remove.\n+\t(jit_inferior_created_hook): Pass inferior parameter down.\n+\t(_initialize_jit): Use jit_inferior_created_hook instead of\n+\tjit_inferior_created.\n+\t* jit.h (jit_inferior_created_hook): Add inferior parameter.\n+\t* infrun.c (follow_exec): Pass inferior to\n+\tjit_inferior_created_hook.\n+\n 2020-10-24  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* linux-thread-db.c (check_pid_namespace_match): Add inferior"
    },
    {
      "sha": "5a6ff165802ce688c0d8641af4be6d5ac554890b",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/324956617c35b0e204f54b8da8db2de2bd3b129e/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/324956617c35b0e204f54b8da8db2de2bd3b129e/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=324956617c35b0e204f54b8da8db2de2bd3b129e",
      "patch": "@@ -1236,7 +1236,7 @@ follow_exec (ptid_t ptid, const char *exec_file_target)\n \n   solib_create_inferior_hook (0);\n \n-  jit_inferior_created_hook ();\n+  jit_inferior_created_hook (inf);\n \n   breakpoint_re_set ();\n "
    },
    {
      "sha": "fd24d539159635e312b82ddfc54620f0831de72a",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 10,
      "deletions": 17,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/324956617c35b0e204f54b8da8db2de2bd3b129e/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/324956617c35b0e204f54b8da8db2de2bd3b129e/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=324956617c35b0e204f54b8da8db2de2bd3b129e",
      "patch": "@@ -49,7 +49,6 @@ static const char jit_break_name[] = \"__jit_debug_register_code\";\n \n static const char jit_descriptor_name[] = \"__jit_debug_descriptor\";\n \n-static void jit_inferior_init (struct gdbarch *gdbarch);\n static void jit_inferior_exit_hook (struct inferior *inf);\n \n /* An unwinder is registered for every gdbarch.  This key is used to\n@@ -221,7 +220,7 @@ jit_reader_load_command (const char *args, int from_tty)\n \n   loaded_jit_reader = jit_reader_load (file.get ());\n   reinit_frame_cache ();\n-  jit_inferior_created_hook ();\n+  jit_inferior_created_hook (current_inferior ());\n }\n \n /* Provides the jit-reader-unload command.  */\n@@ -1178,20 +1177,22 @@ jit_prepend_unwinder (struct gdbarch *gdbarch)\n /* Register any already created translations.  */\n \n static void\n-jit_inferior_init (struct gdbarch *gdbarch)\n+jit_inferior_init (inferior *inf)\n {\n   struct jit_descriptor descriptor;\n   struct jit_code_entry cur_entry;\n   CORE_ADDR cur_entry_addr;\n+  struct gdbarch *gdbarch = inf->gdbarch;\n+  program_space *pspace = inf->pspace;\n \n   if (jit_debug)\n     fprintf_unfiltered (gdb_stdlog, \"jit_inferior_init\\n\");\n \n   jit_prepend_unwinder (gdbarch);\n \n-  jit_breakpoint_re_set_internal (gdbarch, current_program_space);\n+  jit_breakpoint_re_set_internal (gdbarch, pspace);\n \n-  for (objfile *jiter : current_program_space->objfiles ())\n+  for (objfile *jiter : pspace->objfiles ())\n     {\n       if (jiter->jiter_data == nullptr)\n \tcontinue;\n@@ -1229,20 +1230,12 @@ jit_inferior_init (struct gdbarch *gdbarch)\n     }\n }\n \n-/* inferior_created observer.  */\n-\n-static void\n-jit_inferior_created (inferior *inf)\n-{\n-  jit_inferior_created_hook ();\n-}\n-\n-/* Exported routine to call when an inferior has been created.  */\n+/* See jit.h.  */\n \n void\n-jit_inferior_created_hook (void)\n+jit_inferior_created_hook (inferior *inf)\n {\n-  jit_inferior_init (target_gdbarch ());\n+  jit_inferior_init (inf);\n }\n \n /* Exported routine to call to re-set the jit breakpoints,\n@@ -1343,7 +1336,7 @@ _initialize_jit ()\n \t\t\t     show_jit_debug,\n \t\t\t     &setdebuglist, &showdebuglist);\n \n-  gdb::observers::inferior_created.attach (jit_inferior_created);\n+  gdb::observers::inferior_created.attach (jit_inferior_created_hook);\n   gdb::observers::inferior_exit.attach (jit_inferior_exit_hook);\n   gdb::observers::breakpoint_deleted.attach (jit_breakpoint_deleted);\n "
    },
    {
      "sha": "6f972a6e077afcff6e5a6dd5414e9d1b4e1605d8",
      "filename": "gdb/jit.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/324956617c35b0e204f54b8da8db2de2bd3b129e/gdb/jit.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/324956617c35b0e204f54b8da8db2de2bd3b129e/gdb/jit.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.h?ref=324956617c35b0e204f54b8da8db2de2bd3b129e",
      "patch": "@@ -20,6 +20,7 @@\n #ifndef JIT_H\n #define JIT_H\n \n+struct inferior;\n struct objfile;\n struct minimal_symbol;\n \n@@ -107,7 +108,7 @@ struct jited_objfile_data\n    already JITed code.  If it has already found the symbols, then it\n    doesn't try again.  */\n \n-extern void jit_inferior_created_hook (void);\n+extern void jit_inferior_created_hook (inferior *inf);\n \n /* Re-establish the jit breakpoint(s).  */\n "
    }
  ]
}