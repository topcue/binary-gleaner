{
  "sha": "7bed846687589e1346626e8bc9f2948340ef454b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2JlZDg0NjY4NzU4OWUxMzQ2NjI2ZThiYzlmMjk0ODM0MGVmNDU0Yg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-12-15T11:24:09Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-12-15T14:43:58Z"
    },
    "message": "PR27071, gas bugs uncovered by fuzzing\n\n\tPR 27071\n\t* config/obj-elf.c (elf_obj_symbol_clone_hook): New function.\n\t(elf_format_ops): Set symbol_clone_hook.\n\t* config/obj-elf.h (elf_obj_symbol_clone_hook): Declare.\n\t(obj_symbol_clone_hook): Define.\n\t* listing.c (buffer_line): Avoid integer overflow on paper_width\n\tset to zero.",
    "tree": {
      "sha": "4b656167da9efec90ae7711faf78e32f36762099",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4b656167da9efec90ae7711faf78e32f36762099"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7bed846687589e1346626e8bc9f2948340ef454b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7bed846687589e1346626e8bc9f2948340ef454b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7bed846687589e1346626e8bc9f2948340ef454b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7bed846687589e1346626e8bc9f2948340ef454b/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9f132af9e189a6c1e90b1ab7ed84c6613c8ac596",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 34,
    "deletions": 8
  },
  "files": [
    {
      "sha": "1a6c85a46992ed09eed72488d076c46319eddb2a",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7bed846687589e1346626e8bc9f2948340ef454b/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7bed846687589e1346626e8bc9f2948340ef454b/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=7bed846687589e1346626e8bc9f2948340ef454b",
      "patch": "@@ -1,3 +1,13 @@\n+2020-12-15  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 27071\n+\t* config/obj-elf.c (elf_obj_symbol_clone_hook): New function.\n+\t(elf_format_ops): Set symbol_clone_hook.\n+\t* config/obj-elf.h (elf_obj_symbol_clone_hook): Declare.\n+\t(obj_symbol_clone_hook): Define.\n+\t* listing.c (buffer_line): Avoid integer overflow on paper_width\n+\tset to zero.\n+\n 2020-12-14  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/gas/elf/section27.s: Reorder .text, .data and .bss"
    },
    {
      "sha": "bee95c3f0f5c5e3e20c16c3e0ed81234c7a22386",
      "filename": "gas/config/obj-elf.c",
      "status": "modified",
      "additions": 17,
      "deletions": 1,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7bed846687589e1346626e8bc9f2948340ef454b/gas/config/obj-elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7bed846687589e1346626e8bc9f2948340ef454b/gas/config/obj-elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.c?ref=7bed846687589e1346626e8bc9f2948340ef454b",
      "patch": "@@ -2102,6 +2102,22 @@ elf_obj_symbol_new_hook (symbolS *symbolP)\n #endif\n }\n \n+/* Deduplicate size expressions.  We might get into trouble with\n+   multiple freeing or use after free if we leave them pointing to the\n+   same expressionS.  */\n+\n+void\n+elf_obj_symbol_clone_hook (symbolS *newsym, symbolS *orgsym ATTRIBUTE_UNUSED)\n+{\n+  struct elf_obj_sy *newelf = symbol_get_obj (newsym);\n+  if (newelf->size)\n+    {\n+      expressionS *exp = XNEW (expressionS);\n+      *exp = *newelf->size;\n+      newelf->size = exp;\n+    }\n+}\n+\n /* When setting one symbol equal to another, by default we probably\n    want them to have the same \"size\", whatever it means in the current\n    context.  */\n@@ -3088,6 +3104,6 @@ const struct format_ops elf_format_ops =\n #endif\n   elf_obj_read_begin_hook,\n   elf_obj_symbol_new_hook,\n-  0,\n+  elf_obj_symbol_clone_hook,\n   elf_adjust_symtab\n };"
    },
    {
      "sha": "951109ee4207961eb5e7ed5943a11506e50adb90",
      "filename": "gas/config/obj-elf.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7bed846687589e1346626e8bc9f2948340ef454b/gas/config/obj-elf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7bed846687589e1346626e8bc9f2948340ef454b/gas/config/obj-elf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.h?ref=7bed846687589e1346626e8bc9f2948340ef454b",
      "patch": "@@ -223,6 +223,11 @@ void elf_obj_symbol_new_hook (symbolS *);\n #define obj_symbol_new_hook\telf_obj_symbol_new_hook\n #endif\n \n+void elf_obj_symbol_clone_hook (symbolS *, symbolS *);\n+#ifndef obj_symbol_clone_hook\n+#define obj_symbol_clone_hook\telf_obj_symbol_clone_hook\n+#endif\n+\n void elf_copy_symbol_attributes (symbolS *, symbolS *);\n #ifndef OBJ_COPY_SYMBOL_ATTRIBUTES\n #define OBJ_COPY_SYMBOL_ATTRIBUTES(DEST, SRC) \\"
    },
    {
      "sha": "bf38c1ae9c268a4663f2672bea7e632865c46ac3",
      "filename": "gas/listing.c",
      "status": "modified",
      "additions": 2,
      "deletions": 7,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7bed846687589e1346626e8bc9f2948340ef454b/gas/listing.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7bed846687589e1346626e8bc9f2948340ef454b/gas/listing.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/listing.c?ref=7bed846687589e1346626e8bc9f2948340ef454b",
      "patch": "@@ -508,17 +508,12 @@ buffer_line (file_info_type *file, char *line, unsigned int size)\n \tfseek (last_open_file, file->pos, SEEK_SET);\n     }\n \n-  /* Leave room for null.  */\n-  size -= 1;\n-\n   c = fgetc (last_open_file);\n \n   while (c != EOF && c != '\\n' && c != '\\r')\n     {\n-      if (count < size)\n+      if (++count < size)\n \t*p++ = c;\n-      count++;\n-\n       c = fgetc (last_open_file);\n     }\n \n@@ -536,7 +531,7 @@ buffer_line (file_info_type *file, char *line, unsigned int size)\n   if (c == EOF)\n     {\n       file->at_end = 1;\n-      if (count + 2 < size)\n+      if (count + 3 < size)\n \t{\n \t  *p++ = '.';\n \t  *p++ = '.';"
    }
  ]
}