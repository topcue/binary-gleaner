{
  "sha": "e3ec872f8012377e50f0c9c888d2bc3163a356b2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTNlYzg3MmY4MDEyMzc3ZTUwZjBjOWM4ODhkMmJjMzE2M2EzNTZiMg==",
  "commit": {
    "author": {
      "name": "Yoshinori Sato",
      "email": "ysato@users.sourceforge.jp",
      "date": "2019-08-20T15:24:37Z"
    },
    "committer": {
      "name": "Yoshinori Sato",
      "email": "ysato@users.sourceforge.jp",
      "date": "2019-08-25T08:00:08Z"
    },
    "message": "Convert the RX target to make use of target descriptions.\n\ngdb/ChangeLog\n\n2019-08-25  Yoshinori Sato <ysato@users.sourceforge.jp>\n\n\t* gdb/rx-tdep.c (rx_register_names): New.\n\t(rx_register_name): Delete.\n\t(rx_psw_type): Delete.\n\t(rx_fpsw_type): Delete.\n\t(rx_register_type): Delete.\n\t(rx_gdbarch_init): Convert target-descriptions.\n\t(_initialize_rx_tdep): Add initialize_tdesc_rx.\n\t* gdb/features/Makefile: Add rx.xml.\n\t* gdb/features/rx.xml: New.\n\t* gdb/features/rx.c: Generated.\n\t* gdb/NEWS: Mention target description support.\n\ngdb/doc/ChangeLog:\n\n2019-08-25  Yoshinori Sato <ysato@users.sourceforge.jp>\n\n\t* gdb.texinfo (Standard Target Features): Add RX Features sub-section.",
    "tree": {
      "sha": "94033235c8b64c9ccea348d759a3a615312716c5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/94033235c8b64c9ccea348d759a3a615312716c5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e3ec872f8012377e50f0c9c888d2bc3163a356b2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3ec872f8012377e50f0c9c888d2bc3163a356b2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e3ec872f8012377e50f0c9c888d2bc3163a356b2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3ec872f8012377e50f0c9c888d2bc3163a356b2/comments",
  "author": {
    "login": "ysat0",
    "id": 390647,
    "node_id": "MDQ6VXNlcjM5MDY0Nw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/390647?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ysat0",
    "html_url": "https://github.com/ysat0",
    "followers_url": "https://api.github.com/users/ysat0/followers",
    "following_url": "https://api.github.com/users/ysat0/following{/other_user}",
    "gists_url": "https://api.github.com/users/ysat0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ysat0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ysat0/subscriptions",
    "organizations_url": "https://api.github.com/users/ysat0/orgs",
    "repos_url": "https://api.github.com/users/ysat0/repos",
    "events_url": "https://api.github.com/users/ysat0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ysat0/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ysat0",
    "id": 390647,
    "node_id": "MDQ6VXNlcjM5MDY0Nw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/390647?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ysat0",
    "html_url": "https://github.com/ysat0",
    "followers_url": "https://api.github.com/users/ysat0/followers",
    "following_url": "https://api.github.com/users/ysat0/following{/other_user}",
    "gists_url": "https://api.github.com/users/ysat0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ysat0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ysat0/subscriptions",
    "organizations_url": "https://api.github.com/users/ysat0/orgs",
    "repos_url": "https://api.github.com/users/ysat0/repos",
    "events_url": "https://api.github.com/users/ysat0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ysat0/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "25602020bc462ddf4f0cc831e53bff20dbcfbb5f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/25602020bc462ddf4f0cc831e53bff20dbcfbb5f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/25602020bc462ddf4f0cc831e53bff20dbcfbb5f"
    }
  ],
  "stats": {
    "total": 346,
    "additions": 231,
    "deletions": 115
  },
  "files": [
    {
      "sha": "cbb83347f1e613751e2f69edd95a1e20e0c1ae28",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e3ec872f8012377e50f0c9c888d2bc3163a356b2",
      "patch": "@@ -1,3 +1,17 @@\n+2019-08-25  Yoshinori Sato <ysato@users.sourceforge.jp>\n+\n+        * gdb/rx-tdep.c (rx_register_names): New.\n+        (rx_register_name): Delete.\n+        (rx_psw_type): Delete.\n+        (rx_fpsw_type): Delete.\n+        (rx_register_type): Delete.\n+        (rx_gdbarch_init): Convert target-descriptions.\n+        (_initialize_rx_tdep): Add initialize_tdesc_rx.\n+        * gdb/features/Makefile: Add rx.xml.\n+        * gdb/features/rx.xml: New.\n+        * gdb/features/rx.c: Generated.\n+        * gdb/NEWS: Mention target description support.\n+\n 2019-08-22  Christian Biesinger  <cbiesinger@google.com>\n \n \t* symtab.c (symbol_cache_lookup): Always initialize *bsc_ptr and"
    },
    {
      "sha": "0d78237085563fdfb679663acb88e2daa1cd4a66",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=e3ec872f8012377e50f0c9c888d2bc3163a356b2",
      "patch": "@@ -27,6 +27,8 @@\n   provide the exitcode or exit status of the shell commands launched by\n   GDB commands such as \"shell\", \"pipe\" and \"make\".\n \n+* The RX port now supports XML target descriptions.\n+\n * Python API\n \n   ** The gdb.Value type has a new method 'format_string' which returns a"
    },
    {
      "sha": "7fa73fb40f63c7140a651b78c658a4fa08bb9105",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=e3ec872f8012377e50f0c9c888d2bc3163a356b2",
      "patch": "@@ -1,3 +1,7 @@\n+2019-08-25  Yoshinori Sato <ysato@users.sourceforge.jp>\n+\n+        * gdb.texinfo (Standard Target Features): Add RX Features sub-section.\n+\n 2019-08-16  Alan Hayward  <alan.hayward@arm.com>\n \n \t* gdb.texinfo (AArch64 Pointer Authentication)"
    },
    {
      "sha": "e1bc8143e6b99bbcebd17a7a3b56158b2ab721d1",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=e3ec872f8012377e50f0c9c888d2bc3163a356b2",
      "patch": "@@ -44084,6 +44084,7 @@ registers using the capitalization used in the description.\n * OpenRISC 1000 Features::\n * PowerPC Features::\n * RISC-V Features::\n+* RX Features::\n * S/390 and System z Features::\n * Sparc Features::\n * TIC6x Features::\n@@ -44514,6 +44515,15 @@ target has floating point hardware, but can be moved into the csr\n feature if the target has the floating point control registers, but no\n other floating point hardware.\n \n+@node RX Features\n+@subsection RX Features\n+@cindex target descriptions, RX Features\n+\n+The @samp{org.gnu.gdb.rx.core} feature is required for RX\n+targets.  It should contain the registers @samp{r0} through\n+@samp{r15}, @samp{usp}, @samp{isp}, @samp{psw}, @samp{pc}, @samp{intb},\n+@samp{bpsw}, @samp{bpc}, @samp{fintv}, @samp{fpsw}, and @samp{acc}.\n+\n @node S/390 and System z Features\n @subsection S/390 and System z Features\n @cindex target descriptions, S/390 features"
    },
    {
      "sha": "2b65d46df094f7ec50205951a23af2638cffec27",
      "filename": "gdb/features/Makefile",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/features/Makefile",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/features/Makefile",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/Makefile?ref=e3ec872f8012377e50f0c9c888d2bc3163a356b2",
      "patch": "@@ -161,6 +161,7 @@ XMLTOC = \\\n \trs6000/powerpc-vsx64.xml \\\n \trs6000/powerpc-vsx64l.xml \\\n \trs6000/rs6000.xml \\\n+\trx.xml \\\n \ts390-linux32.xml \\\n \ts390-linux32v1.xml \\\n \ts390-linux32v2.xml \\\n@@ -238,6 +239,7 @@ FEATURE_XMLFILES = aarch64-core.xml \\\n \triscv/64bit-cpu.xml \\\n \triscv/64bit-csr.xml \\\n \triscv/64bit-fpu.xml \\\n+\trx.xml \\\n \ttic6x-c6xp.xml \\\n \ttic6x-core.xml \\\n \ttic6x-gp.xml"
    },
    {
      "sha": "d2c29c126f7ac11135d9f575bb1d78dee498d34c",
      "filename": "gdb/features/rx.c",
      "status": "added",
      "additions": 80,
      "deletions": 0,
      "changes": 80,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/features/rx.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/features/rx.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/rx.c?ref=e3ec872f8012377e50f0c9c888d2bc3163a356b2",
      "patch": "@@ -0,0 +1,80 @@\n+/* THIS FILE IS GENERATED.  -*- buffer-read-only: t -*- vi:set ro:\n+  Original: rx.xml.tmp */\n+\n+#include \"defs.h\"\n+#include \"osabi.h\"\n+#include \"target-descriptions.h\"\n+\n+struct target_desc *tdesc_rx;\n+static void\n+initialize_tdesc_rx (void)\n+{\n+  struct target_desc *result = allocate_target_description ();\n+  struct tdesc_feature *feature;\n+\n+  feature = tdesc_create_feature (result, \"org.gnu.gdb.rx.core\");\n+  tdesc_type_with_fields *type_with_fields;\n+  type_with_fields = tdesc_create_flags (feature, \"psw_flags\", 4);\n+  tdesc_add_flag (type_with_fields, 0, \"C\");\n+  tdesc_add_flag (type_with_fields, 1, \"Z\");\n+  tdesc_add_flag (type_with_fields, 2, \"S\");\n+  tdesc_add_flag (type_with_fields, 3, \"O\");\n+  tdesc_add_flag (type_with_fields, 16, \"I\");\n+  tdesc_add_flag (type_with_fields, 17, \"U\");\n+  tdesc_add_flag (type_with_fields, 20, \"PM\");\n+  tdesc_add_flag (type_with_fields, 24, \"IPL0\");\n+  tdesc_add_flag (type_with_fields, 25, \"IPL1\");\n+  tdesc_add_flag (type_with_fields, 26, \"IPL2\");\n+  tdesc_add_flag (type_with_fields, 27, \"IPL3\");\n+\n+  type_with_fields = tdesc_create_flags (feature, \"fpsw_flags\", 4);\n+  tdesc_add_flag (type_with_fields, 0, \"RM0\");\n+  tdesc_add_flag (type_with_fields, 1, \"RM1\");\n+  tdesc_add_flag (type_with_fields, 2, \"CV\");\n+  tdesc_add_flag (type_with_fields, 3, \"CO\");\n+  tdesc_add_flag (type_with_fields, 4, \"CZ\");\n+  tdesc_add_flag (type_with_fields, 5, \"CU\");\n+  tdesc_add_flag (type_with_fields, 6, \"CX\");\n+  tdesc_add_flag (type_with_fields, 7, \"CE\");\n+  tdesc_add_flag (type_with_fields, 8, \"DN\");\n+  tdesc_add_flag (type_with_fields, 10, \"EV\");\n+  tdesc_add_flag (type_with_fields, 11, \"EO\");\n+  tdesc_add_flag (type_with_fields, 12, \"EZ\");\n+  tdesc_add_flag (type_with_fields, 13, \"EU\");\n+  tdesc_add_flag (type_with_fields, 14, \"EX\");\n+  tdesc_add_flag (type_with_fields, 26, \"FV\");\n+  tdesc_add_flag (type_with_fields, 27, \"FO\");\n+  tdesc_add_flag (type_with_fields, 28, \"FZ\");\n+  tdesc_add_flag (type_with_fields, 29, \"FU\");\n+  tdesc_add_flag (type_with_fields, 30, \"FX\");\n+  tdesc_add_flag (type_with_fields, 31, \"FS\");\n+\n+  tdesc_create_reg (feature, \"r0\", 0, 1, NULL, 32, \"data_ptr\");\n+  tdesc_create_reg (feature, \"r1\", 1, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r2\", 2, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r3\", 3, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r4\", 4, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r5\", 5, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r6\", 6, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r7\", 7, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r8\", 8, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r9\", 9, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r10\", 10, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r11\", 11, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r12\", 12, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r13\", 13, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r14\", 14, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"r15\", 15, 1, NULL, 32, \"uint32\");\n+  tdesc_create_reg (feature, \"usp\", 16, 1, NULL, 32, \"data_ptr\");\n+  tdesc_create_reg (feature, \"isp\", 17, 1, NULL, 32, \"data_ptr\");\n+  tdesc_create_reg (feature, \"psw\", 18, 1, NULL, 32, \"psw_flags\");\n+  tdesc_create_reg (feature, \"pc\", 19, 1, NULL, 32, \"code_ptr\");\n+  tdesc_create_reg (feature, \"intb\", 20, 1, NULL, 32, \"data_ptr\");\n+  tdesc_create_reg (feature, \"bpsw\", 21, 1, NULL, 32, \"psw_flags\");\n+  tdesc_create_reg (feature, \"bpc\", 22, 1, NULL, 32, \"code_ptr\");\n+  tdesc_create_reg (feature, \"fintv\", 23, 1, NULL, 32, \"code_ptr\");\n+  tdesc_create_reg (feature, \"fpsw\", 24, 1, NULL, 32, \"fpsw_flags\");\n+  tdesc_create_reg (feature, \"acc\", 25, 1, NULL, 64, \"uint64\");\n+\n+  tdesc_rx = result;\n+}"
    },
    {
      "sha": "597f92974bcd0ca06b5dfdbf06b70fac3aedacce",
      "filename": "gdb/features/rx.xml",
      "status": "added",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/features/rx.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/features/rx.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/rx.xml?ref=e3ec872f8012377e50f0c9c888d2bc3163a356b2",
      "patch": "@@ -0,0 +1,74 @@\n+<?xml version=\"1.0\"?>\n+<!-- Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+     Copying and distribution of this file, with or without modification,\n+     are permitted in any medium without royalty provided the copyright\n+     notice and this notice are preserved.  -->\n+\n+<!DOCTYPE feature SYSTEM \"gdb-target.dtd\">\n+<feature name=\"org.gnu.gdb.rx.core\">\n+  <reg name=\"r0\" bitsize=\"32\" type=\"data_ptr\"/>\n+  <reg name=\"r1\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r2\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r3\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r4\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r5\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r6\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r7\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r8\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r9\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r10\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r11\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r12\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r13\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r14\" bitsize=\"32\" type=\"uint32\"/>\n+  <reg name=\"r15\" bitsize=\"32\" type=\"uint32\"/>\n+\n+  <flags id=\"psw_flags\" size=\"4\">\n+    <field name=\"C\" start=\"0\" end=\"0\"/>\n+    <field name=\"Z\" start=\"1\" end=\"1\"/>\n+    <field name=\"S\" start=\"2\" end=\"2\"/>\n+    <field name=\"O\" start=\"3\" end=\"3\"/>\n+    <field name=\"I\" start=\"16\" end=\"16\"/>\n+    <field name=\"U\" start=\"17\" end=\"17\"/>\n+    <field name=\"PM\" start=\"20\" end=\"20\"/>\n+    <field name=\"IPL0\" start=\"24\" end=\"24\"/>\n+    <field name=\"IPL1\" start=\"25\" end=\"25\"/>\n+    <field name=\"IPL2\" start=\"26\" end=\"26\"/>\n+    <field name=\"IPL3\" start=\"27\" end=\"27\"/>\n+  </flags>\n+\n+  <flags id=\"fpsw_flags\" size=\"4\">\n+    <field name=\"RM0\" start=\"0\" end=\"0\"/>\n+    <field name=\"RM1\" start=\"1\" end=\"1\"/>\n+    <field name=\"CV\" start=\"2\" end=\"2\"/>\n+    <field name=\"CO\" start=\"3\" end=\"3\"/>\n+    <field name=\"CZ\" start=\"4\" end=\"4\"/>\n+    <field name=\"CU\" start=\"5\" end=\"5\"/>\n+    <field name=\"CX\" start=\"6\" end=\"6\"/>\n+    <field name=\"CE\" start=\"7\" end=\"7\"/>\n+    <field name=\"DN\" start=\"8\" end=\"8\"/>\n+    <field name=\"EV\" start=\"10\" end=\"10\"/>\n+    <field name=\"EO\" start=\"11\" end=\"11\"/>\n+    <field name=\"EZ\" start=\"12\" end=\"12\"/>\n+    <field name=\"EU\" start=\"13\" end=\"13\"/>\n+    <field name=\"EX\" start=\"14\" end=\"14\"/>\n+    <field name=\"FV\" start=\"26\" end=\"26\"/>\n+    <field name=\"FO\" start=\"27\" end=\"27\"/>\n+    <field name=\"FZ\" start=\"28\" end=\"28\"/>\n+    <field name=\"FU\" start=\"29\" end=\"29\"/>\n+    <field name=\"FX\" start=\"30\" end=\"30\"/>\n+    <field name=\"FS\" start=\"31\" end=\"31\"/>\n+  </flags>\n+\n+  <reg name=\"usp\" bitsize=\"32\" type=\"data_ptr\"/>\n+  <reg name=\"isp\" bitsize=\"32\" type=\"data_ptr\"/>\n+  <reg name=\"psw\" bitsize=\"32\" type=\"psw_flags\"/>\n+  <reg name=\"pc\" bitsize=\"32\" type=\"code_ptr\"/>\n+  <reg name=\"intb\" bitsize=\"32\" type=\"data_ptr\"/>\n+  <reg name=\"bpsw\" bitsize=\"32\" type=\"psw_flags\"/>\n+  <reg name=\"bpc\" bitsize=\"32\" type=\"code_ptr\"/>\n+  <reg name=\"fintv\" bitsize=\"32\" type=\"code_ptr\"/>\n+  <reg name=\"fpsw\" bitsize=\"32\" type=\"fpsw_flags\"/>\n+  <reg name=\"acc\" bitsize=\"64\" type=\"uint64\"/>\n+</feature>"
    },
    {
      "sha": "45cc8b453564c7b3562693ead03120d2a868d10c",
      "filename": "gdb/rx-tdep.c",
      "status": "modified",
      "additions": 45,
      "deletions": 115,
      "changes": 160,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/rx-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3ec872f8012377e50f0c9c888d2bc3163a356b2/gdb/rx-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rx-tdep.c?ref=e3ec872f8012377e50f0c9c888d2bc3163a356b2",
      "patch": "@@ -33,11 +33,15 @@\n #include \"value.h\"\n #include \"gdbcore.h\"\n #include \"dwarf2-frame.h\"\n+#include \"remote.h\"\n+#include \"target-descriptions.h\"\n \n #include \"elf/rx.h\"\n #include \"elf-bfd.h\"\n #include <algorithm>\n \n+#include \"features/rx.c\"\n+\n /* Certain important register numbers.  */\n enum\n {\n@@ -114,117 +118,13 @@ struct rx_prologue\n   int reg_offset[RX_NUM_REGS];\n };\n \n-/* Implement the \"register_name\" gdbarch method.  */\n-static const char *\n-rx_register_name (struct gdbarch *gdbarch, int regnr)\n-{\n-  static const char *const reg_names[] = {\n-    \"r0\",\n-    \"r1\",\n-    \"r2\",\n-    \"r3\",\n-    \"r4\",\n-    \"r5\",\n-    \"r6\",\n-    \"r7\",\n-    \"r8\",\n-    \"r9\",\n-    \"r10\",\n-    \"r11\",\n-    \"r12\",\n-    \"r13\",\n-    \"r14\",\n-    \"r15\",\n-    \"usp\",\n-    \"isp\",\n-    \"psw\",\n-    \"pc\",\n-    \"intb\",\n-    \"bpsw\",\n-    \"bpc\",\n-    \"fintv\",\n-    \"fpsw\",\n-    \"acc\"\n-  };\n-\n-  return reg_names[regnr];\n-}\n-\n-/* Construct the flags type for PSW and BPSW.  */\n-\n-static struct type *\n-rx_psw_type (struct gdbarch *gdbarch)\n-{\n-  struct gdbarch_tdep *tdep = gdbarch_tdep (gdbarch);\n-\n-  if (tdep->rx_psw_type == NULL)\n-    {\n-      tdep->rx_psw_type = arch_flags_type (gdbarch, \"rx_psw_type\", 32);\n-      append_flags_type_flag (tdep->rx_psw_type, 0, \"C\");\n-      append_flags_type_flag (tdep->rx_psw_type, 1, \"Z\");\n-      append_flags_type_flag (tdep->rx_psw_type, 2, \"S\");\n-      append_flags_type_flag (tdep->rx_psw_type, 3, \"O\");\n-      append_flags_type_flag (tdep->rx_psw_type, 16, \"I\");\n-      append_flags_type_flag (tdep->rx_psw_type, 17, \"U\");\n-      append_flags_type_flag (tdep->rx_psw_type, 20, \"PM\");\n-      append_flags_type_flag (tdep->rx_psw_type, 24, \"IPL0\");\n-      append_flags_type_flag (tdep->rx_psw_type, 25, \"IPL1\");\n-      append_flags_type_flag (tdep->rx_psw_type, 26, \"IPL2\");\n-      append_flags_type_flag (tdep->rx_psw_type, 27, \"IPL3\");\n-    }\n-  return tdep->rx_psw_type;\n-}\n-\n-/* Construct flags type for FPSW.  */\n-\n-static struct type *\n-rx_fpsw_type (struct gdbarch *gdbarch)\n-{\n-  struct gdbarch_tdep *tdep = gdbarch_tdep (gdbarch);\n-\n-  if (tdep->rx_fpsw_type == NULL)\n-    {\n-      tdep->rx_fpsw_type = arch_flags_type (gdbarch, \"rx_fpsw_type\", 32);\n-      append_flags_type_flag (tdep->rx_fpsw_type, 0, \"RM0\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 1, \"RM1\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 2, \"CV\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 3, \"CO\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 4, \"CZ\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 5, \"CU\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 6, \"CX\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 7, \"CE\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 8, \"DN\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 10, \"EV\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 11, \"EO\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 12, \"EZ\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 13, \"EU\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 14, \"EX\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 26, \"FV\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 27, \"FO\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 28, \"FZ\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 29, \"FU\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 30, \"FX\");\n-      append_flags_type_flag (tdep->rx_fpsw_type, 31, \"FS\");\n-    }\n-\n-  return tdep->rx_fpsw_type;\n-}\n-\n-/* Implement the \"register_type\" gdbarch method.  */\n-static struct type *\n-rx_register_type (struct gdbarch *gdbarch, int reg_nr)\n-{\n-  if (reg_nr == RX_PC_REGNUM)\n-    return builtin_type (gdbarch)->builtin_func_ptr;\n-  else if (reg_nr == RX_PSW_REGNUM || reg_nr == RX_BPSW_REGNUM)\n-    return rx_psw_type (gdbarch);\n-  else if (reg_nr == RX_FPSW_REGNUM)\n-    return rx_fpsw_type (gdbarch);\n-  else if (reg_nr == RX_ACC_REGNUM)\n-    return builtin_type (gdbarch)->builtin_unsigned_long_long;\n-  else\n-    return builtin_type (gdbarch)->builtin_unsigned_long;\n-}\n+/* RX register names */\n+static const char *const rx_register_names[] = {\n+  \"r0\",  \"r1\",  \"r2\",  \"r3\",  \"r4\",  \"r5\",  \"r6\",  \"r7\",\n+  \"r8\",  \"r9\",  \"r10\", \"r11\", \"r12\", \"r13\", \"r14\", \"r15\",\n+  \"usp\", \"isp\", \"psw\", \"pc\",  \"intb\", \"bpsw\",\"bpc\",\"fintv\",\n+  \"fpsw\", \"acc\",\n+};\n \n \n /* Function for finding saved registers in a 'struct pv_area'; this\n@@ -1044,6 +944,8 @@ rx_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   struct gdbarch *gdbarch;\n   struct gdbarch_tdep *tdep;\n   int elf_flags;\n+  struct tdesc_arch_data *tdesc_data = NULL;\n+  const struct target_desc *tdesc = info.target_desc;\n \n   /* Extract the elf_flags if available.  */\n   if (info.abfd != NULL\n@@ -1065,16 +967,42 @@ rx_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n       return arches->gdbarch;\n     }\n \n-  /* None found, create a new architecture from the information\n-     provided.  */\n+  if (tdesc == NULL)\n+      tdesc = tdesc_rx;\n+\n+  /* Check any target description for validity.  */\n+  if (tdesc_has_registers (tdesc))\n+    {\n+      const struct tdesc_feature *feature;\n+      bool valid_p = true;\n+\n+      feature = tdesc_find_feature (tdesc, \"org.gnu.gdb.rx.core\");\n+\n+      if (feature != NULL)\n+\t{\n+\t  tdesc_data = tdesc_data_alloc ();\n+\t  for (int i = 0; i < RX_NUM_REGS; i++)\n+\t    valid_p &= tdesc_numbered_register (feature, tdesc_data, i,\n+                                            rx_register_names[i]);\n+\t}\n+\n+      if (!valid_p)\n+\t{\n+\t  tdesc_data_cleanup (tdesc_data);\n+\t  return NULL;\n+\t}\n+    }\n+\n+  gdb_assert(tdesc_data != NULL);\n+\n   tdep = XCNEW (struct gdbarch_tdep);\n   gdbarch = gdbarch_alloc (&info, tdep);\n   tdep->elf_flags = elf_flags;\n \n   set_gdbarch_num_regs (gdbarch, RX_NUM_REGS);\n+  tdesc_use_registers (gdbarch, tdesc, tdesc_data);\n+\n   set_gdbarch_num_pseudo_regs (gdbarch, 0);\n-  set_gdbarch_register_name (gdbarch, rx_register_name);\n-  set_gdbarch_register_type (gdbarch, rx_register_type);\n   set_gdbarch_pc_regnum (gdbarch, RX_PC_REGNUM);\n   set_gdbarch_sp_regnum (gdbarch, RX_SP_REGNUM);\n   set_gdbarch_inner_than (gdbarch, core_addr_lessthan);\n@@ -1092,6 +1020,7 @@ rx_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   set_gdbarch_ptr_bit (gdbarch, 32);\n   set_gdbarch_float_bit (gdbarch, 32);\n   set_gdbarch_float_format (gdbarch, floatformats_ieee_single);\n+\n   if (elf_flags & E_FLAG_RX_64BIT_DOUBLES)\n     {\n       set_gdbarch_double_bit (gdbarch, 64);\n@@ -1132,4 +1061,5 @@ void\n _initialize_rx_tdep (void)\n {\n   register_gdbarch_init (bfd_arch_rx, rx_gdbarch_init);\n+  initialize_tdesc_rx ();\n }"
    }
  ]
}