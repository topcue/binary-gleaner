{
  "sha": "d460f6600a4452b09ee875519ebc70362863fcba",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDQ2MGY2NjAwYTQ0NTJiMDllZTg3NTUxOWViYzcwMzYyODYzZmNiYQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-05-27T15:13:56Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:15:55Z"
    },
    "message": "Make queue_and_load_dwo_tu receive a dwarf2_cu\n\nqueue_and_load_dwo_tu, used as a callback for htab_traverse_noresize,\ncurrently receives a dwarf2_per_cu_data as its `info` user data.  It\naccesses the current dwarf2_cu object through the dwarf2_per_cu_data::cu field.\nThis field will be removed, because the dwarf2_per_cu_data will become\nobjfile-independent, while dwarf_cu will remain objfile-dependent.\n\nTo remove references to this field, change queue_and_load_dwo_tu so\nthat it expects to receive a pointer to the dwarf2_cu as its info\nparameter.\n\nA reference to dwarf2_per_cu_data::cu needs to be added, but it will get\nremoved in a subsequent patch, when this function gets re-worked.\n\nI kept this as a separate patch, because since there's no strong typing\nhere, it's easy to miss something.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (queue_and_load_dwo_tu): Expect a dwarf2_cu as\n\tthe info parameter.\n\t(queue_and_load_all_dwo_tus): Pass per_cu->cu.\n\nChange-Id: I3db2a780f0e2157d52ce6939f478558ffe20abcf",
    "tree": {
      "sha": "64787f5ea2f88b977e14cb76f936fd0954bf94b5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/64787f5ea2f88b977e14cb76f936fd0954bf94b5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d460f6600a4452b09ee875519ebc70362863fcba",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d460f6600a4452b09ee875519ebc70362863fcba",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d460f6600a4452b09ee875519ebc70362863fcba",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d460f6600a4452b09ee875519ebc70362863fcba/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ab4324907782afa676f6d8f7fe7589c99458f64b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab4324907782afa676f6d8f7fe7589c99458f64b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ab4324907782afa676f6d8f7fe7589c99458f64b"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 12,
    "deletions": 7
  },
  "files": [
    {
      "sha": "952722f3ac8acf546a33604f5544dd5d741eafb3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d460f6600a4452b09ee875519ebc70362863fcba/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d460f6600a4452b09ee875519ebc70362863fcba/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d460f6600a4452b09ee875519ebc70362863fcba",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* dwarf2/read.c (queue_and_load_dwo_tu): Expect a dwarf2_cu as\n+\tthe info parameter.\n+\t(queue_and_load_all_dwo_tus): Pass per_cu->cu.\n+\n 2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* dwarf2/read.c (class cutu_reader) <cutu_reader>: Add"
    },
    {
      "sha": "64cf5f47f7b1530934fb35dc5208c6158fb82802",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 6,
      "deletions": 7,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d460f6600a4452b09ee875519ebc70362863fcba/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d460f6600a4452b09ee875519ebc70362863fcba/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=d460f6600a4452b09ee875519ebc70362863fcba",
      "patch": "@@ -12830,10 +12830,9 @@ static int\n queue_and_load_dwo_tu (void **slot, void *info)\n {\n   struct dwo_unit *dwo_unit = (struct dwo_unit *) *slot;\n-  struct dwarf2_per_cu_data *per_cu = (struct dwarf2_per_cu_data *) info;\n+  dwarf2_cu *cu = (dwarf2_cu *) info;\n   ULONGEST signature = dwo_unit->signature;\n-  struct signatured_type *sig_type =\n-    lookup_dwo_signatured_type (per_cu->cu, signature);\n+  signatured_type *sig_type = lookup_dwo_signatured_type (cu, signature);\n \n   if (sig_type != NULL)\n     {\n@@ -12842,9 +12841,9 @@ queue_and_load_dwo_tu (void **slot, void *info)\n       /* We pass NULL for DEPENDENT_CU because we don't yet know if there's\n \t a real dependency of PER_CU on SIG_TYPE.  That is detected later\n \t while processing PER_CU.  */\n-      if (maybe_queue_comp_unit (NULL, sig_cu, per_cu->cu->language))\n-\tload_full_type_unit (sig_cu, per_cu->cu->per_objfile);\n-      per_cu->imported_symtabs_push (sig_cu);\n+      if (maybe_queue_comp_unit (NULL, sig_cu, cu->language))\n+\tload_full_type_unit (sig_cu, cu->per_objfile);\n+      cu->per_cu->imported_symtabs_push (sig_cu);\n     }\n \n   return 1;\n@@ -12871,7 +12870,7 @@ queue_and_load_all_dwo_tus (struct dwarf2_per_cu_data *per_cu)\n   dwo_file = dwo_unit->dwo_file;\n   if (dwo_file->tus != NULL)\n     htab_traverse_noresize (dwo_file->tus.get (), queue_and_load_dwo_tu,\n-\t\t\t    per_cu);\n+\t\t\t    per_cu->cu);\n }\n \n /* Read in various DIEs.  */"
    }
  ]
}