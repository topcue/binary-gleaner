{
  "sha": "ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmY4NTc3ZjY0OTg3YTg5OGUxZGM1ZWI2YWZiNjZhNDA0ZmI3YmIxNg==",
  "commit": {
    "author": {
      "name": "Sergio Durigan Junior",
      "email": "sergiodj@redhat.com",
      "date": "2019-07-10T20:18:27Z"
    },
    "committer": {
      "name": "Sergio Durigan Junior",
      "email": "sergiodj@redhat.com",
      "date": "2019-12-14T04:49:29Z"
    },
    "message": "Guard against 'current_directory == NULL' on gdb_abspath (PR gdb/23613)\n\nRef.: https://bugzilla.redhat.com/show_bug.cgi?id=1728147\nRef.: https://sourceware.org/bugzilla/show_bug.cgi?id=23613\n\nHi,\n\nThis bug has been reported against Fedora GDB, but there's also an\nupstream bug.  The problem reported is that GDB segfaults when the\nworking directory is deleted.  It's pretty use to reproduce it:\n\n  mkdir bla\n  cd bla\n  rmdir ../bla\n  gdb echo\n\nDebugging the problem is a bit tricky, because, since the current\ndirectory doesn't exist anymore, a corefile cannot be saved there.\nAfter a few attempts, I came up with the following:\n\n  gdb -ex 'shell mkdir bla' -ex 'cd bla' -ex 'shell rmdir ../bla' -ex 'r echo' ./gdb/gdb\n\nThis assumes that you're inside a build directory which contains\n./gdb/gdb, of course.\n\nAfter investigating it, I found that the problem happens at\ngdb_abspath, where we're dereferencing 'current_directory' without\nchecking if it's NULL:\n\n    ...\n    (concat (current_directory,\n\t     IS_DIR_SEPARATOR (current_directory[strlen (current_directory) - 1])\n\t     ? \"\" : SLASH_STRING,\n    ...\n\nSo I fixed the problem with the patch below.  The idea is that, if\n'current_directory' is NULL, then the final string returned should be\njust the \"path\".\n\nAfter fixing the bug, I found a similar one reported against our\nbugzilla: PR gdb/23613.  The problem is the same, but the reproducer\nis a bit different.\n\nI really tried writing a testcase for this, but unfortunately it's\napparently not possible to start GDB inside a non-existent directory\nwith DejaGNU.\n\nI regression tested this patch on the BuildBot, and no regressions\nwere found.\n\ngdb/ChangeLog:\n2019-12-14  Sergio Durigan Junior  <sergiodj@redhat.com>\n\n\thttps://bugzilla.redhat.com/show_bug.cgi?id=1728147\n\tPR gdb/23613\n\t* bsd-kvm.c (bsd_kvm_target_open): Use 'gdb_abspath'.\n\t* corelow.c: Include 'gdbsupport/pathstuff.h'.\n\t(core_target_open): Use 'gdb_abspath'.\n\t* gdbsupport/pathstuff.c (gdb_abspath): Guard against\n\t'current_directory == NULL' case.\n\t* gdbsupport/pathstuff.h (gdb_abspath): Expand comment and\n\texplain what happens when 'current_directory' is NULL.\n\t* go32-nat.c (go32_nat_target::wait): Check if\n\t'current_directory' is NULL before call to 'chdir'.\n\t* source.c (add_path): Use 'gdb_abspath'.\n\t* top.c: Include 'gdbsupport/pathstuff.h'.\n\t(init_history): Use 'gdb_abspath'.\n\t(set_history_filename): Likewise.\n\t* tracefile-tfile.c: Include 'gdbsupport/pathstuff.h'.\n\t(tfile_target_open): Use 'gdb_abspath'.\n\nChange-Id: Ibb0932fa25bc5c2d3ae4a7f64bd7f32885ca403b",
    "tree": {
      "sha": "2dbd4a20d96ccb502a73a98b7d8a2e5a417525e8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2dbd4a20d96ccb502a73a98b7d8a2e5a417525e8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "e97e2dcd466b43824713e85e307c287b34c8b4bc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e97e2dcd466b43824713e85e307c287b34c8b4bc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e97e2dcd466b43824713e85e307c287b34c8b4bc"
    }
  ],
  "stats": {
    "total": 66,
    "additions": 47,
    "deletions": 19
  },
  "files": [
    {
      "sha": "1a452be1756109f1c8787de7e9ad75cb937c2bf0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
      "patch": "@@ -1,3 +1,23 @@\n+2019-12-14  Sergio Durigan Junior  <sergiodj@redhat.com>\n+\n+\thttps://bugzilla.redhat.com/show_bug.cgi?id=1728147\n+\tPR gdb/23613\n+\t* bsd-kvm.c (bsd_kvm_target_open): Use 'gdb_abspath'.\n+\t* corelow.c: Include 'gdbsupport/pathstuff.h'.\n+\t(core_target_open): Use 'gdb_abspath'.\n+\t* gdbsupport/pathstuff.c (gdb_abspath): Guard against\n+\t'current_directory == NULL' case.\n+\t* gdbsupport/pathstuff.h (gdb_abspath): Expand comment and\n+\texplain what happens when 'current_directory' is NULL.\n+\t* go32-nat.c (go32_nat_target::wait): Check if\n+\t'current_directory' is NULL before call to 'chdir'.\n+\t* source.c (add_path): Use 'gdb_abspath'.\n+\t* top.c: Include 'gdbsupport/pathstuff.h'.\n+\t(init_history): Use 'gdb_abspath'.\n+\t(set_history_filename): Likewise.\n+\t* tracefile-tfile.c: Include 'gdbsupport/pathstuff.h'.\n+\t(tfile_target_open): Use 'gdb_abspath'.\n+\n 2019-12-13  Tom Tromey  <tromey@adacore.com>\n \n \t* contrib/ari/gdb_ari.sh: Remove check for multiple calls to"
    },
    {
      "sha": "895686ef628a72b2d1599308da018ea991617634",
      "filename": "gdb/bsd-kvm.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/bsd-kvm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/bsd-kvm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bsd-kvm.c?ref=ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
      "patch": "@@ -114,14 +114,13 @@ bsd_kvm_target_open (const char *arg, int from_tty)\n \n   if (arg)\n     {\n-      char *temp;\n-\n       filename = tilde_expand (arg);\n       if (filename[0] != '/')\n \t{\n-\t  temp = concat (current_directory, \"/\", filename, (char *)NULL);\n+\t  gdb::unique_xmalloc_ptr<char> temp (gdb_abspath (filename));\n+\n \t  xfree (filename);\n-\t  filename = temp;\n+\t  filename = temp.release ();\n \t}\n     }\n "
    },
    {
      "sha": "6c1e47a555674ddb20002a9fb40d434b6d7799f7",
      "filename": "gdb/corelow.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/corelow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/corelow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/corelow.c?ref=ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
      "patch": "@@ -44,6 +44,7 @@\n #include \"completer.h\"\n #include \"gdbsupport/filestuff.h\"\n #include \"build-id.h\"\n+#include \"gdbsupport/pathstuff.h\"\n \n #ifndef O_LARGEFILE\n #define O_LARGEFILE 0\n@@ -395,8 +396,7 @@ core_target_open (const char *arg, int from_tty)\n \n   gdb::unique_xmalloc_ptr<char> filename (tilde_expand (arg));\n   if (!IS_ABSOLUTE_PATH (filename.get ()))\n-    filename.reset (concat (current_directory, \"/\",\n-\t\t\t    filename.get (), (char *) NULL));\n+    filename = gdb_abspath (filename.get ());\n \n   flags = O_BINARY | O_LARGEFILE;\n   if (write_files)"
    },
    {
      "sha": "aa51e8f36eb8c7abaff8599ac9d354b4d62be608",
      "filename": "gdb/gdbsupport/pathstuff.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/gdbsupport/pathstuff.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/gdbsupport/pathstuff.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/pathstuff.c?ref=ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
      "patch": "@@ -134,7 +134,7 @@ gdb_abspath (const char *path)\n   if (path[0] == '~')\n     return gdb_tilde_expand_up (path);\n \n-  if (IS_ABSOLUTE_PATH (path))\n+  if (IS_ABSOLUTE_PATH (path) || current_directory == NULL)\n     return make_unique_xstrdup (path);\n \n   /* Beware the // my son, the Emacs barfs, the botch that catch...  */"
    },
    {
      "sha": "e84685b65483fc99abe28592a212203d986426a5",
      "filename": "gdb/gdbsupport/pathstuff.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/gdbsupport/pathstuff.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/gdbsupport/pathstuff.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/pathstuff.h?ref=ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
      "patch": "@@ -44,7 +44,10 @@ extern gdb::unique_xmalloc_ptr<char>\n \n    Contrary to \"gdb_realpath\", this function uses CURRENT_DIRECTORY\n    for the path expansion.  This may lead to scenarios the current\n-   working directory (CWD) is different than CURRENT_DIRECTORY.  */\n+   working directory (CWD) is different than CURRENT_DIRECTORY.\n+\n+   If CURRENT_DIRECTORY is NULL, this function returns a copy of\n+   PATH.  */\n \n extern gdb::unique_xmalloc_ptr<char> gdb_abspath (const char *path);\n "
    },
    {
      "sha": "94972a2f5c281e705ea72a0d5c648c5dc94eb767",
      "filename": "gdb/go32-nat.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/go32-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/go32-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go32-nat.c?ref=ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
      "patch": "@@ -507,7 +507,8 @@ go32_nat_target::wait (ptid_t ptid, struct target_waitstatus *status,\n     }\n \n   getcwd (child_cwd, sizeof (child_cwd)); /* in case it has changed */\n-  chdir (current_directory);\n+  if (current_directory != NULL)\n+    chdir (current_directory);\n \n   if (a_tss.tss_irqn == 0x21)\n     {"
    },
    {
      "sha": "cf752a69380c7ddc860e0eca0dc7c76c2ae721b8",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
      "patch": "@@ -540,8 +540,7 @@ add_path (const char *dirname, char **which_path, int parse_separators)\n \tnew_name_holder.reset (concat (name, \".\", (char *) NULL));\n #endif\n       else if (!IS_ABSOLUTE_PATH (name) && name[0] != '$')\n-\tnew_name_holder.reset (concat (current_directory, SLASH_STRING, name,\n-\t\t\t\t       (char *) NULL));\n+\tnew_name_holder = gdb_abspath (name);\n       else\n \tnew_name_holder.reset (savestring (name, p - name));\n       name = new_name_holder.get ();"
    },
    {
      "sha": "bc300e47542a67fb5ca28bbf64f671fa30859aa4",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 12,
      "deletions": 6,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
      "patch": "@@ -54,6 +54,7 @@\n #include \"gdb_select.h\"\n #include \"gdbsupport/scope-exit.h\"\n #include \"gdbarch.h\"\n+#include \"gdbsupport/pathstuff.h\"\n \n /* readline include files.  */\n #include \"readline/readline.h\"\n@@ -1994,12 +1995,13 @@ init_history (void)\n          that was read.  */\n #ifdef __MSDOS__\n       /* No leading dots in file names are allowed on MSDOS.  */\n-      history_filename = concat (current_directory, \"/_gdb_history\",\n-\t\t\t\t (char *)NULL);\n+      const char *fname = \"_gdb_history\";\n #else\n-      history_filename = concat (current_directory, \"/.gdb_history\",\n-\t\t\t\t (char *)NULL);\n+      const char *fname = \".gdb_history\";\n #endif\n+\n+      gdb::unique_xmalloc_ptr<char> temp (gdb_abspath (fname));\n+      history_filename = temp.release ();\n     }\n   read_history (history_filename);\n }\n@@ -2077,8 +2079,12 @@ set_history_filename (const char *args,\n      directories the file written will be the same as the one\n      that was read.  */\n   if (!IS_ABSOLUTE_PATH (history_filename))\n-    history_filename = reconcat (history_filename, current_directory, \"/\", \n-\t\t\t\t history_filename, (char *) NULL);\n+    {\n+      gdb::unique_xmalloc_ptr<char> temp (gdb_abspath (history_filename));\n+\n+      xfree (history_filename);\n+      history_filename = temp.release ();\n+    }\n }\n \n static void"
    },
    {
      "sha": "0953b03781ff6864db1e3ae4c9fd9d90976ab6a1",
      "filename": "gdb/tracefile-tfile.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/tracefile-tfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff8577f64987a898e1dc5eb6afb66a404fb7bb16/gdb/tracefile-tfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracefile-tfile.c?ref=ff8577f64987a898e1dc5eb6afb66a404fb7bb16",
      "patch": "@@ -32,6 +32,7 @@\n #include \"xml-tdesc.h\"\n #include \"target-descriptions.h\"\n #include \"gdbsupport/buffer.h\"\n+#include \"gdbsupport/pathstuff.h\"\n #include <algorithm>\n \n #ifndef O_LARGEFILE\n@@ -470,8 +471,7 @@ tfile_target_open (const char *arg, int from_tty)\n \n   gdb::unique_xmalloc_ptr<char> filename (tilde_expand (arg));\n   if (!IS_ABSOLUTE_PATH (filename.get ()))\n-    filename.reset (concat (current_directory, \"/\", filename.get (),\n-\t\t\t    (char *) NULL));\n+    filename = gdb_abspath (filename.get ());\n \n   flags = O_BINARY | O_LARGEFILE;\n   flags |= O_RDONLY;"
    }
  ]
}