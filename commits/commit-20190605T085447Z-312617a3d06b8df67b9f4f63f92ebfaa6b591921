{
  "sha": "312617a3d06b8df67b9f4f63f92ebfaa6b591921",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzEyNjE3YTNkMDZiOGRmNjdiOWY0ZjYzZjkyZWJmYWE2YjU5MTkyMQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-06-04T09:30:41Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-06-05T08:54:47Z"
    },
    "message": "gdb/riscv: Don't error when decoding a 6 or 8 byte instruction\n\nIf the RISC-V prologue scanner finds a 6 or 8 byte instruction we\ncurrently throw an internal error, which is not great for the user.\n\nA mechanism already exists in the prologue scanner to leave\ninstructions marked as unknown so that we can stop the prologue scan\nwithout raising an error, this is used for all 2 and 4 byte\ninstructions that are not part of the small set the prologue scanner\nactually understands.\n\nThis commit changes GDB so that all 6 and 8 byte instructions are\nmarked as unknown, rather than causing an error.\n\ngdb/ChangeLog:\n\n\t* riscv-tdep.c (riscv_insn::decode): Gracefully ignore\n\tinstructions of lengths 6 or 8 bytes.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.arch/riscv-unwind-long-insn-6.s: New file.\n\t* gdb.arch/riscv-unwind-long-insn-8.s: New file.\n\t* gdb.arch/riscv-unwind-long-insn.c: New file.\n\t* gdb.arch/riscv-unwind-long-insn.exp: New file.",
    "tree": {
      "sha": "37d49c97d82d795c3d0c0519f78283531543a0b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/37d49c97d82d795c3d0c0519f78283531543a0b9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/312617a3d06b8df67b9f4f63f92ebfaa6b591921",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/312617a3d06b8df67b9f4f63f92ebfaa6b591921",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/312617a3d06b8df67b9f4f63f92ebfaa6b591921",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/312617a3d06b8df67b9f4f63f92ebfaa6b591921/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fbe4d6650d714643fe340d9ccba7fc500c26b91d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fbe4d6650d714643fe340d9ccba7fc500c26b91d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fbe4d6650d714643fe340d9ccba7fc500c26b91d"
    }
  ],
  "stats": {
    "total": 198,
    "additions": 194,
    "deletions": 4
  },
  "files": [
    {
      "sha": "ef741d7c5f9bb845daec81291facccc019d6394a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=312617a3d06b8df67b9f4f63f92ebfaa6b591921",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-05  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* riscv-tdep.c (riscv_insn::decode): Gracefully ignore\n+\tinstructions of lengths 6 or 8 bytes.\n+\n 2019-06-04  Pedro Alves  <palves@redhat.com>\n \n \t* common/gdb_unique_ptr.h (make_unique_xstrdup): New."
    },
    {
      "sha": "bae987cf66ba4b052550a8f822ba515ba85797b4",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=312617a3d06b8df67b9f4f63f92ebfaa6b591921",
      "patch": "@@ -1385,10 +1385,12 @@ riscv_insn::decode (struct gdbarch *gdbarch, CORE_ADDR pc)\n \tm_opcode = OTHER;\n     }\n   else\n-    internal_error (__FILE__, __LINE__,\n-\t\t    _(\"unable to decode %d byte instructions in \"\n-\t\t      \"prologue at %s\"), m_length,\n-\t\t    core_addr_to_string (pc));\n+    {\n+      /* This must be a 6 or 8 byte instruction, we don't currently decode\n+\t any of these, so just ignore it.  */\n+      gdb_assert (m_length == 6 || m_length == 8);\n+      m_opcode = OTHER;\n+    }\n }\n \n /* The prologue scanner.  This is currently only used for skipping the"
    },
    {
      "sha": "1912909debe93bbd2046d324ac22be548c9783de",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=312617a3d06b8df67b9f4f63f92ebfaa6b591921",
      "patch": "@@ -1,3 +1,10 @@\n+2019-06-05  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.arch/riscv-unwind-long-insn-6.s: New file.\n+\t* gdb.arch/riscv-unwind-long-insn-8.s: New file.\n+\t* gdb.arch/riscv-unwind-long-insn.c: New file.\n+\t* gdb.arch/riscv-unwind-long-insn.exp: New file.\n+\n 2019-06-04  Christian Biesinger  <cbiesinger@google.com>\n \n \t* gdb.python/py-type.exp: Test for new gdb.Type.objfile property."
    },
    {
      "sha": "b21b1e10f328033e672ced2b2688414c44d083ba",
      "filename": "gdb/testsuite/gdb.arch/riscv-unwind-long-insn-6.s",
      "status": "added",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/testsuite/gdb.arch/riscv-unwind-long-insn-6.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/testsuite/gdb.arch/riscv-unwind-long-insn-6.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/riscv-unwind-long-insn-6.s?ref=312617a3d06b8df67b9f4f63f92ebfaa6b591921",
      "patch": "@@ -0,0 +1,45 @@\n+/* Copyright 2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+\t.option nopic\n+\t.text\n+\n+        .align\t1\n+\t.globl\tbar\n+\t.type\tbar, @function\n+bar:\n+        tail       1f\n+\t.size\tbar, .-func\n+\n+\t.align\t1\n+\t.globl\tfunc\n+\t.type\tfunc, @function\n+func:\n+        /* A fake 6 byte instruction.  This is never executed, but the\n+\t   prologue scanner will try to decode it.  These long\n+\t   instructions are ISA extensions, I use .byte rather than an\n+\t   actual instruction mnemonic so that the test can be compiled\n+\t   with a toolchain that doesn't include any long instruction\n+\t   extensions.  */\n+        .byte 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00\n+1:\n+\taddi\tsp,sp,-16\n+\tsw\ts0,12(sp)\n+\taddi\ts0,sp,16\n+\tnop\n+\tlw\ts0,12(sp)\n+\taddi\tsp,sp,16\n+\tjr\tra\n+\t.size\tfunc, .-func"
    },
    {
      "sha": "3fad07b59ddabb0d41ad906f607d11d52f4a75fc",
      "filename": "gdb/testsuite/gdb.arch/riscv-unwind-long-insn-8.s",
      "status": "added",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/testsuite/gdb.arch/riscv-unwind-long-insn-8.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/testsuite/gdb.arch/riscv-unwind-long-insn-8.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/riscv-unwind-long-insn-8.s?ref=312617a3d06b8df67b9f4f63f92ebfaa6b591921",
      "patch": "@@ -0,0 +1,45 @@\n+/* Copyright 2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+\t.option nopic\n+\t.text\n+\n+        .align\t1\n+\t.globl\tbar\n+\t.type\tbar, @function\n+bar:\n+        tail       1f\n+\t.size\tbar, .-func\n+\n+\t.align\t1\n+\t.globl\tfunc\n+\t.type\tfunc, @function\n+func:\n+        /* A fake 8 byte instruction.  This is never executed, but the\n+\t   prologue scanner will try to decode it.  These long\n+\t   instructions are ISA extensions, I use .byte rather than an\n+\t   actual instruction mnemonic so that the test can be compiled\n+\t   with a toolchain that doesn't include any long instruction\n+\t   extensions.  */\n+        .byte 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n+1:\n+\taddi\tsp,sp,-16\n+\tsw\ts0,12(sp)\n+\taddi\ts0,sp,16\n+\tnop\n+\tlw\ts0,12(sp)\n+\taddi\tsp,sp,16\n+\tjr\tra\n+\t.size\tfunc, .-func"
    },
    {
      "sha": "d601e2d3d8670e07eb86668ee7ef33e0c1491029",
      "filename": "gdb/testsuite/gdb.arch/riscv-unwind-long-insn.c",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/testsuite/gdb.arch/riscv-unwind-long-insn.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/testsuite/gdb.arch/riscv-unwind-long-insn.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/riscv-unwind-long-insn.c?ref=312617a3d06b8df67b9f4f63f92ebfaa6b591921",
      "patch": "@@ -0,0 +1,25 @@\n+/* Copyright 2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+extern void func (void);\n+extern void bar (void);\n+\n+int\n+main ()\n+{\n+  bar ();\n+  func ();\n+  return 0;\n+}"
    },
    {
      "sha": "ddb914295c30a94b0917b03363ecc90834addd92",
      "filename": "gdb/testsuite/gdb.arch/riscv-unwind-long-insn.exp",
      "status": "added",
      "additions": 61,
      "deletions": 0,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/testsuite/gdb.arch/riscv-unwind-long-insn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/312617a3d06b8df67b9f4f63f92ebfaa6b591921/gdb/testsuite/gdb.arch/riscv-unwind-long-insn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/riscv-unwind-long-insn.exp?ref=312617a3d06b8df67b9f4f63f92ebfaa6b591921",
      "patch": "@@ -0,0 +1,61 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# This tests GDB's ability to handle 6 and 8 byte instructions in the\n+# RISC-V prologue scanner.  These instruction should be ignored, but\n+# should not result in an error that interrupts the debug session.\n+#\n+# Each of the files riscv-unwind-long-insn-*.s include a function\n+# (func) that contains a fake long instruction (6 or 8 bytes) in the\n+# prologue.  We trick GDB into parsing the fake instruction by tail\n+# calling from a different function, 'bar' to the middle of 'func'.\n+\n+if {![istarget \"riscv*-*-*\"]} {\n+    verbose \"Skipping ${gdb_test_file_name}.\"\n+    return\n+}\n+\n+foreach_with_prefix {insn_size} {6 8} {\n+    standard_testfile riscv-unwind-long-insn.c \\\n+\triscv-unwind-long-insn-${insn_size}.s\n+\n+    set testfile \"${testfile}-${insn_size}\"\n+    if {[prepare_for_testing \"failed to prepare\" $testfile \\\n+\t     \"$srcfile $srcfile2\"  debug]} {\n+\treturn -1\n+    }\n+\n+    if ![runto_main] then {\n+\tfail \"can't run to main\"\n+\treturn 0\n+    }\n+\n+    gdb_breakpoint \"bar\"\n+    gdb_continue_to_breakpoint \"bar\"\n+\n+    # This next single instruction step takes us through a tail-call\n+    # from 'bar' into 'func'.\n+    gdb_test \"si\" \"func \\(\\).*\"\n+\n+    # Now check that we have a sane backtrace.\n+    gdb_test \"bt\" \\\n+\t[multi_line \\\n+\t     \"#0\\[ \\t\\]*func \\\\\\(\\\\\\) at .*$srcfile2:\\[0-9\\]+\" \\\n+\t     \"#1\\[ \\t\\]*$hex in main \\\\\\(\\\\\\) at .*$srcfile:\\[0-9\\]+\"] \\\n+\t\"Backtrace to the main frame\"\n+\n+    # Finally finish, and we should end up back in main.\n+    gdb_test \"finish\" \"main \\\\\\(\\\\\\) at .*$srcfile:.*\"\n+}"
    }
  ]
}