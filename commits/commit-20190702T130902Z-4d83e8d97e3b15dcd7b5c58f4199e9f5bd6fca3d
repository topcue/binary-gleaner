{
  "sha": "4d83e8d97e3b15dcd7b5c58f4199e9f5bd6fca3d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGQ4M2U4ZDk3ZTNiMTVkY2Q3YjVjNThmNDE5OWU5ZjViZDZmY2EzZA==",
  "commit": {
    "author": {
      "name": "Christophe Lyon",
      "email": "christophe.lyon@linaro.org",
      "date": "2019-07-02T13:09:02Z"
    },
    "committer": {
      "name": "Christophe Lyon",
      "email": "christophe.lyon@linaro.org",
      "date": "2019-07-02T13:09:02Z"
    },
    "message": "PR ld/24709 [arm] linker crash and assertion failure with CMSE\n\nAs discussed in the PR, we do not support the case where CMSE stubs\nare inserted too far from their destination. This would require an\nintermediate long-branch stub, which is tricky in this context.\n\nInstead of crashing, this patch emit an error message and exits.\n\n2019-07-02  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* bfd/elf32-arm.c (CMSE_STUB_NAME): New define.\n\t(elf32_arm_get_stub_entry): Do not try to emit long-branch stubs\n\tfor CMSE stubs.\n\t(arm_dedicated_stub_output_section_name): Use CMSE_STUB_NAME.\n\nChange-Id: I6d4e1c0fdee6bb9f4b07e5e1b46700b5ba31c62e",
    "tree": {
      "sha": "ea3ffc06faef177c6e90bc74851fcaf34023846a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ea3ffc06faef177c6e90bc74851fcaf34023846a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4d83e8d97e3b15dcd7b5c58f4199e9f5bd6fca3d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4d83e8d97e3b15dcd7b5c58f4199e9f5bd6fca3d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4d83e8d97e3b15dcd7b5c58f4199e9f5bd6fca3d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4d83e8d97e3b15dcd7b5c58f4199e9f5bd6fca3d/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "bb32413ff7247f5ac3685ca9075b3432bca69a82",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb32413ff7247f5ac3685ca9075b3432bca69a82",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bb32413ff7247f5ac3685ca9075b3432bca69a82"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 31,
    "deletions": 1
  },
  "files": [
    {
      "sha": "af25e433af55c872ee6d8f5a4b3f4cca927995b6",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4d83e8d97e3b15dcd7b5c58f4199e9f5bd6fca3d/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4d83e8d97e3b15dcd7b5c58f4199e9f5bd6fca3d/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=4d83e8d97e3b15dcd7b5c58f4199e9f5bd6fca3d",
      "patch": "@@ -1,3 +1,10 @@\n+2019-07-02  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* bfd/elf32-arm.c (CMSE_STUB_NAME): New define.\n+\t(elf32_arm_get_stub_entry): Do not try to emit long-branch stubs\n+\tfor CMSE stubs.\n+\t(arm_dedicated_stub_output_section_name): Use CMSE_STUB_NAME.\n+\n 2019-07-02  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n \n \t* elf32-arm.c (elf32_arm_gc_mark_extra_sections): Mark debug"
    },
    {
      "sha": "6b6897692d2f2d473920f40a6345b8fc2fcdc2bd",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 24,
      "deletions": 1,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4d83e8d97e3b15dcd7b5c58f4199e9f5bd6fca3d/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4d83e8d97e3b15dcd7b5c58f4199e9f5bd6fca3d/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=4d83e8d97e3b15dcd7b5c58f4199e9f5bd6fca3d",
      "patch": "@@ -2300,6 +2300,8 @@ typedef unsigned short int insn16;\n \n #define CMSE_PREFIX \"__acle_se_\"\n \n+#define CMSE_STUB_NAME \".gnu.sgstubs\"\n+\n /* The name of the dynamic interpreter.  This is put in the .interp\n    section.  */\n #define ELF_DYNAMIC_INTERPRETER     \"/usr/lib/ld.so.1\"\n@@ -4583,6 +4585,27 @@ elf32_arm_get_stub_entry (const asection *input_section,\n   if ((input_section->flags & SEC_CODE) == 0)\n     return NULL;\n \n+  /* If the input section is the CMSE stubs one and it needs a long\n+     branch stub to reach it's final destination, give up with an\n+     error message: this is not supported.  See PR ld/24709.  */\n+  if (!strncmp (input_section->name, CMSE_STUB_NAME, strlen(CMSE_STUB_NAME)))\n+    {\n+      bfd *output_bfd = htab->obfd;\n+      asection *out_sec = bfd_get_section_by_name (output_bfd, CMSE_STUB_NAME);\n+\n+      _bfd_error_handler (_(\"ERROR: CMSE stub (%s section) too far \"\n+\t\t\t    \"(%#\" PRIx64 \") from destination (%#\" PRIx64 \")\"),\n+\t\t\t  CMSE_STUB_NAME,\n+\t\t\t  (uint64_t)out_sec->output_section->vma\n+\t\t\t    + out_sec->output_offset,\n+\t\t\t  (uint64_t)sym_sec->output_section->vma\n+\t\t\t    + sym_sec->output_offset\n+\t\t\t    + h->root.root.u.def.value);\n+      /* Exit, rather than leave incompletely processed\n+\t relocations.  */\n+      xexit(1);\n+    }\n+\n   /* If this input section is part of a group of sections sharing one\n      stub section, then use the id of the first section in the group.\n      Stub names need to include a section id, as there may well be\n@@ -4676,7 +4699,7 @@ arm_dedicated_stub_output_section_name (enum elf32_arm_stub_type stub_type)\n   switch (stub_type)\n     {\n     case arm_stub_cmse_branch_thumb_only:\n-      return \".gnu.sgstubs\";\n+      return CMSE_STUB_NAME;\n \n     default:\n       BFD_ASSERT (!arm_dedicated_stub_output_section_required (stub_type));"
    }
  ]
}