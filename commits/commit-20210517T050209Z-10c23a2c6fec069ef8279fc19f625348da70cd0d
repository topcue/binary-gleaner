{
  "sha": "10c23a2c6fec069ef8279fc19f625348da70cd0d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTBjMjNhMmM2ZmVjMDY5ZWY4Mjc5ZmMxOWY2MjUzNDhkYTcwY2QwZA==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-13T09:44:02Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-17T05:02:09Z"
    },
    "message": "sim: riscv: invert sim_state storage",
    "tree": {
      "sha": "cf41d7afc62bb9f64c08aa8fb9fb9a57456c8bde",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cf41d7afc62bb9f64c08aa8fb9fb9a57456c8bde"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/10c23a2c6fec069ef8279fc19f625348da70cd0d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10c23a2c6fec069ef8279fc19f625348da70cd0d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/10c23a2c6fec069ef8279fc19f625348da70cd0d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10c23a2c6fec069ef8279fc19f625348da70cd0d/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2ad10cb22246b16fdebece06646db288dbea1fdb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2ad10cb22246b16fdebece06646db288dbea1fdb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2ad10cb22246b16fdebece06646db288dbea1fdb"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 22,
    "deletions": 12
  },
  "files": [
    {
      "sha": "e7cd0a36f51cabb56b720595ec2d4e108d7e1f3d",
      "filename": "sim/riscv/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10c23a2c6fec069ef8279fc19f625348da70cd0d/sim/riscv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10c23a2c6fec069ef8279fc19f625348da70cd0d/sim/riscv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/ChangeLog?ref=10c23a2c6fec069ef8279fc19f625348da70cd0d",
      "patch": "@@ -1,3 +1,12 @@\n+2021-05-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_open): Call sim_state_alloc_extra.\n+\t* sim-main.c (execute_a): Change sd to riscv_sim_state.\n+\t* sim-main.h (SIM_HAVE_COMMON_SIM_STATE): Define.\n+\t(struct sim_state): Delete.\n+\t(struct riscv_sim_state): New struct.\n+\t(RISCV_SIM_STATE): Define.\n+\n 2021-05-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c, machs.c, sim-main.c: Replace config.h include with defs.h."
    },
    {
      "sha": "f3754da1ed8a9c4c94a5eb8251275a03a5a0dd55",
      "filename": "sim/riscv/interp.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10c23a2c6fec069ef8279fc19f625348da70cd0d/sim/riscv/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10c23a2c6fec069ef8279fc19f625348da70cd0d/sim/riscv/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/interp.c?ref=10c23a2c6fec069ef8279fc19f625348da70cd0d",
      "patch": "@@ -59,7 +59,8 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n {\n   char c;\n   int i;\n-  SIM_DESC sd = sim_state_alloc (kind, callback);\n+  SIM_DESC sd = sim_state_alloc_extra (kind, callback,\n+\t\t\t\t       sizeof (struct riscv_sim_state));\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)"
    },
    {
      "sha": "a09ae033cac256218d5e6783b3064bf5df03cf7b",
      "filename": "sim/riscv/sim-main.c",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10c23a2c6fec069ef8279fc19f625348da70cd0d/sim/riscv/sim-main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10c23a2c6fec069ef8279fc19f625348da70cd0d/sim/riscv/sim-main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/sim-main.c?ref=10c23a2c6fec069ef8279fc19f625348da70cd0d",
      "patch": "@@ -794,6 +794,7 @@ static sim_cia\n execute_a (SIM_CPU *cpu, unsigned_word iw, const struct riscv_opcode *op)\n {\n   SIM_DESC sd = CPU_STATE (cpu);\n+  struct riscv_sim_state *state = RISCV_SIM_STATE (sd);\n   int rd = (iw >> OP_SH_RD) & OP_MASK_RD;\n   int rs1 = (iw >> OP_SH_RS1) & OP_MASK_RS1;\n   int rs2 = (iw >> OP_SH_RS2) & OP_MASK_RS2;\n@@ -813,7 +814,7 @@ execute_a (SIM_CPU *cpu, unsigned_word iw, const struct riscv_opcode *op)\n \tsim_core_read_unaligned_4 (cpu, cpu->pc, read_map, cpu->regs[rs1]));\n \n       /* Walk the reservation list to find an existing match.  */\n-      amo_curr = sd->amo_reserved_list;\n+      amo_curr = state->amo_reserved_list;\n       while (amo_curr)\n \t{\n \t  if (amo_curr->addr == cpu->regs[rs1])\n@@ -824,15 +825,15 @@ execute_a (SIM_CPU *cpu, unsigned_word iw, const struct riscv_opcode *op)\n       /* No reservation exists, so add one.  */\n       amo_curr = xmalloc (sizeof (*amo_curr));\n       amo_curr->addr = cpu->regs[rs1];\n-      amo_curr->next = sd->amo_reserved_list;\n-      sd->amo_reserved_list = amo_curr;\n+      amo_curr->next = state->amo_reserved_list;\n+      state->amo_reserved_list = amo_curr;\n       goto done;\n     case MATCH_SC_W:\n       TRACE_INSN (cpu, \"%s %s, %s, (%s);\", op->name, rd_name, rs2_name,\n \t\t  rs1_name);\n \n       /* Walk the reservation list to find a match.  */\n-      amo_curr = amo_prev = sd->amo_reserved_list;\n+      amo_curr = amo_prev = state->amo_reserved_list;\n       while (amo_curr)\n \t{\n \t  if (amo_curr->addr == cpu->regs[rs1])\n@@ -841,8 +842,8 @@ execute_a (SIM_CPU *cpu, unsigned_word iw, const struct riscv_opcode *op)\n \t      sim_core_write_unaligned_4 (cpu, cpu->pc, write_map,\n \t\t\t\t\t  cpu->regs[rs1], cpu->regs[rs2]);\n \t      store_rd (cpu, rd, 0);\n-\t      if (amo_curr == sd->amo_reserved_list)\n-\t\tsd->amo_reserved_list = amo_curr->next;\n+\t      if (amo_curr == state->amo_reserved_list)\n+\t\tstate->amo_reserved_list = amo_curr->next;\n \t      else\n \t\tamo_prev->next = amo_curr->next;\n \t      free (amo_curr);"
    },
    {
      "sha": "fd095397df0354e05aea724369db8a907cc5c6bc",
      "filename": "sim/riscv/sim-main.h",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10c23a2c6fec069ef8279fc19f625348da70cd0d/sim/riscv/sim-main.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10c23a2c6fec069ef8279fc19f625348da70cd0d/sim/riscv/sim-main.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/sim-main.h?ref=10c23a2c6fec069ef8279fc19f625348da70cd0d",
      "patch": "@@ -21,6 +21,8 @@\n #ifndef SIM_MAIN_H\n #define SIM_MAIN_H\n \n+#define SIM_HAVE_COMMON_SIM_STATE\n+\n #include \"sim-basics.h\"\n #include \"machs.h\"\n #include \"sim-base.h\"\n@@ -66,13 +68,10 @@ struct atomic_mem_reserved_list {\n   address_word addr;\n };\n \n-struct sim_state {\n-  sim_cpu *cpu[MAX_NR_PROCESSORS];\n+struct riscv_sim_state {\n   struct atomic_mem_reserved_list *amo_reserved_list;\n-\n-  /* ... simulator specific members ... */\n-  sim_state_base base;\n };\n+#define RISCV_SIM_STATE(sd) ((struct riscv_sim_state *) STATE_ARCH_DATA (sd))\n \n extern void step_once (SIM_CPU *);\n extern void initialize_cpu (SIM_DESC, SIM_CPU *, int);"
    }
  ]
}