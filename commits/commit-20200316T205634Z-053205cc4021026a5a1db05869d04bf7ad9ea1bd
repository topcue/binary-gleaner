{
  "sha": "053205cc4021026a5a1db05869d04bf7ad9ea1bd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDUzMjA1Y2M0MDIxMDI2YTVhMWRiMDU4NjlkMDRiZjdhZDllYTFiZA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-03-16T20:56:34Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-03-16T20:56:34Z"
    },
    "message": "gdb: add Windows OS ABI\n\nGDB currently uses the \"Cygwin\" OS ABI (GDB_OSABI_CYGWIN) for everything\nrelated to Windows.  If you build a GDB for a MinGW or Cygwin target, it\nwill have \"Cygwin\" as the default OS ABI in both cases (see\nconfigure.tgt).  If you load either a MinGW or Cygwin binary, the\n\"Cygwin\" OS ABI will be selected in both cases.\n\nThis is misleading, because Cygwin binaries are a subset of the binaries\nrunning on Windows.  When building something with MinGW, the resulting\nbinary has nothing to do with Cygwin.  Cygwin binaries are only special\nin that they are Windows binaries that link to the cygwin1.dll library\n(if my understanding is correct).\n\nLooking at i386-cygwin-tdep.c, we can see that GDB does nothing\ndifferent when dealing with Cygwin binaries versus non-Cygwin Windows\nbinaries.  However, there is at least one known bug which would require\nus to make a distinction between the two OS ABIs, and that is the size\nof the built-in \"long\" type on x86-64.  On native Windows, this is 4,\nwhereas on Cygwin it's 8.\n\nSo, this patch adds a new OS ABI, \"Windows\", and makes GDB use it for\ni386 and x86-64 PE executables, instead of the \"Cygwin\" OS ABI.  A\nsubsequent patch will improve the OS ABI detection so that GDB\ndifferentiates the non-Cygwin Windows binaries from the Cygwin Windows\nbinaries, and applies the \"Cygwin\" OS ABI for the latter.\n\nThe default OS ABI remains \"Cygwin\" for the GDBs built with a Cygwin\ntarget.\n\nI've decided to split the i386_cygwin_osabi_sniffer function in two,\nI think it's cleaner to have a separate sniffer for Windows binaries and\nCygwin cores, each checking one specific thing.\n\ngdb/ChangeLog:\n\n\t* osabi.h (enum gdb_osabi): Add GDB_OSABI_WINDOWS.\n\t* osabi.c (gdb_osabi_names): Add \"Windows\".\n\t* i386-cygwin-tdep.c (i386_cygwin_osabi_sniffer): Return\n\tGDB_OSABI_WINDOWS when the binary's target is \"pei-i386\".\n\t(i386_cygwin_core_osabi_sniffer): New function, extracted from\n\ti386_cygwin_osabi_sniffer.\n\t(_initialize_i386_cygwin_tdep): Register OS ABI\n\tGDB_OSABI_WINDOWS for i386.\n\t* amd64-windows-tdep.c (amd64_windows_osabi_sniffer): Return\n\tGDB_OSABI_WINDOWS when the binary's target is \"pei-x86-64\".\n\t(_initialize_amd64_windows_tdep): Register OS ABI GDB_OSABI_WINDOWS\n\tfor x86-64.\n\t* configure.tgt: Use GDB_OSABI_WINDOWS as the default OS ABI\n\twhen the target matches '*-*-mingw*'.",
    "tree": {
      "sha": "074ec9a8a97c454c0b14e28be0f55bf445d58b44",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/074ec9a8a97c454c0b14e28be0f55bf445d58b44"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/053205cc4021026a5a1db05869d04bf7ad9ea1bd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/053205cc4021026a5a1db05869d04bf7ad9ea1bd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/053205cc4021026a5a1db05869d04bf7ad9ea1bd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/053205cc4021026a5a1db05869d04bf7ad9ea1bd/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fe4b2ee65cfe923fcb25427db884e1d2e90fef6e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe4b2ee65cfe923fcb25427db884e1d2e90fef6e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fe4b2ee65cfe923fcb25427db884e1d2e90fef6e"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 39,
    "deletions": 6
  },
  "files": [
    {
      "sha": "441029abf029ce8269f919be83f0ee84470180f0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/053205cc4021026a5a1db05869d04bf7ad9ea1bd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/053205cc4021026a5a1db05869d04bf7ad9ea1bd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=053205cc4021026a5a1db05869d04bf7ad9ea1bd",
      "patch": "@@ -1,3 +1,20 @@\n+2020-03-16  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* osabi.h (enum gdb_osabi): Add GDB_OSABI_WINDOWS.\n+\t* osabi.c (gdb_osabi_names): Add \"Windows\".\n+\t* i386-cygwin-tdep.c (i386_cygwin_osabi_sniffer): Return\n+\tGDB_OSABI_WINDOWS when the binary's target is \"pei-i386\".\n+\t(i386_cygwin_core_osabi_sniffer): New function, extracted from\n+\ti386_cygwin_osabi_sniffer.\n+\t(_initialize_i386_cygwin_tdep): Register OS ABI\n+\tGDB_OSABI_WINDOWS for i386.\n+\t* amd64-windows-tdep.c (amd64_windows_osabi_sniffer): Return\n+\tGDB_OSABI_WINDOWS when the binary's target is \"pei-x86-64\".\n+\t(_initialize_amd64_windows_tdep): Register OS ABI GDB_OSABI_WINDOWS\n+\tfor x86-64.\n+\t* configure.tgt: Use GDB_OSABI_WINDOWS as the default OS ABI\n+\twhen the target matches '*-*-mingw*'.\n+\n 2020-03-16  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* defs.h (enum gdb_osabi): Move to..."
    },
    {
      "sha": "88ff794abcb61b9ad84ae31f1fe5c1e487c14bd3",
      "filename": "gdb/amd64-windows-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/053205cc4021026a5a1db05869d04bf7ad9ea1bd/gdb/amd64-windows-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/053205cc4021026a5a1db05869d04bf7ad9ea1bd/gdb/amd64-windows-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-windows-tdep.c?ref=053205cc4021026a5a1db05869d04bf7ad9ea1bd",
      "patch": "@@ -1250,7 +1250,7 @@ amd64_windows_osabi_sniffer (bfd *abfd)\n   const char *target_name = bfd_get_target (abfd);\n \n   if (strcmp (target_name, \"pei-x86-64\") == 0)\n-    return GDB_OSABI_CYGWIN;\n+    return GDB_OSABI_WINDOWS;\n \n   return GDB_OSABI_UNKNOWN;\n }\n@@ -1259,6 +1259,9 @@ void _initialize_amd64_windows_tdep ();\n void\n _initialize_amd64_windows_tdep ()\n {\n+  /* The Cygwin and Windows OS ABIs are currently equivalent.  */\n+  gdbarch_register_osabi (bfd_arch_i386, bfd_mach_x86_64, GDB_OSABI_WINDOWS,\n+                          amd64_windows_init_abi);\n   gdbarch_register_osabi (bfd_arch_i386, bfd_mach_x86_64, GDB_OSABI_CYGWIN,\n                           amd64_windows_init_abi);\n "
    },
    {
      "sha": "6ebd32410e996060aee080a70da7ba275dde0832",
      "filename": "gdb/configure.tgt",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/053205cc4021026a5a1db05869d04bf7ad9ea1bd/gdb/configure.tgt",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/053205cc4021026a5a1db05869d04bf7ad9ea1bd/gdb/configure.tgt",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure.tgt?ref=053205cc4021026a5a1db05869d04bf7ad9ea1bd",
      "patch": "@@ -771,8 +771,8 @@ m68*-*-openbsd* | m88*-*-openbsd* | vax-*-openbsd*) ;;\n *-*-*-gnu*)\t;; # prevent non-GNU kernels to match the Hurd rule below\n *-*-gnu*)\tgdb_osabi=GDB_OSABI_HURD ;;\n *-*-mingw32ce*)\tgdb_osabi=GDB_OSABI_WINCE ;;\n-*-*-mingw* | *-*-cygwin*)\n-\t\tgdb_osabi=GDB_OSABI_CYGWIN ;;\n+*-*-mingw*)\tgdb_osabi=GDB_OSABI_WINDOWS ;;\n+*-*-cygwin*)\tgdb_osabi=GDB_OSABI_CYGWIN ;;\n *-*-dicos*)\tgdb_osabi=GDB_OSABI_DICOS ;;\n *-*-symbianelf*)\n \t\tgdb_osabi=GDB_OSABI_SYMBIAN ;;"
    },
    {
      "sha": "b9a959d3c7d4d4ad90eb2418b906d00c93522560",
      "filename": "gdb/i386-cygwin-tdep.c",
      "status": "modified",
      "additions": 14,
      "deletions": 3,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/053205cc4021026a5a1db05869d04bf7ad9ea1bd/gdb/i386-cygwin-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/053205cc4021026a5a1db05869d04bf7ad9ea1bd/gdb/i386-cygwin-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-cygwin-tdep.c?ref=053205cc4021026a5a1db05869d04bf7ad9ea1bd",
      "patch": "@@ -232,14 +232,22 @@ i386_cygwin_osabi_sniffer (bfd *abfd)\n   const char *target_name = bfd_get_target (abfd);\n \n   if (strcmp (target_name, \"pei-i386\") == 0)\n-    return GDB_OSABI_CYGWIN;\n+    return GDB_OSABI_WINDOWS;\n+\n+  return GDB_OSABI_UNKNOWN;\n+}\n+\n+static enum gdb_osabi\n+i386_cygwin_core_osabi_sniffer (bfd *abfd)\n+{\n+  const char *target_name = bfd_get_target (abfd);\n \n   /* Cygwin uses elf core dumps.  Do not claim all ELF executables,\n      check whether there is a .reg section of proper size.  */\n   if (strcmp (target_name, \"elf32-i386\") == 0)\n     {\n       asection *section = bfd_get_section_by_name (abfd, \".reg\");\n-      if (section\n+      if (section != nullptr\n \t  && bfd_section_size (section) == I386_WINDOWS_SIZEOF_GREGSET)\n \treturn GDB_OSABI_CYGWIN;\n     }\n@@ -256,8 +264,11 @@ _initialize_i386_cygwin_tdep ()\n \n   /* Cygwin uses elf core dumps.  */\n   gdbarch_register_osabi_sniffer (bfd_arch_i386, bfd_target_elf_flavour,\n-                                  i386_cygwin_osabi_sniffer);\n+                                  i386_cygwin_core_osabi_sniffer);\n \n+  /* The Cygwin and Windows OS ABIs are currently equivalent.  */\n   gdbarch_register_osabi (bfd_arch_i386, 0, GDB_OSABI_CYGWIN,\n                           i386_cygwin_init_abi);\n+  gdbarch_register_osabi (bfd_arch_i386, 0, GDB_OSABI_WINDOWS,\n+                          i386_cygwin_init_abi);\n }"
    },
    {
      "sha": "627b9d98151513d1af0126ae8474139c3a515350",
      "filename": "gdb/osabi.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/053205cc4021026a5a1db05869d04bf7ad9ea1bd/gdb/osabi.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/053205cc4021026a5a1db05869d04bf7ad9ea1bd/gdb/osabi.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/osabi.c?ref=053205cc4021026a5a1db05869d04bf7ad9ea1bd",
      "patch": "@@ -72,6 +72,7 @@ static const struct osabi_names gdb_osabi_names[] =\n   { \"DJGPP\", NULL },\n   { \"QNX-Neutrino\", NULL },\n   { \"Cygwin\", NULL },\n+  { \"Windows\", NULL },\n   { \"AIX\", NULL },\n   { \"DICOS\", NULL },\n   { \"Darwin\", NULL },"
    },
    {
      "sha": "a7e6a10d01983c66d16420e557b53705b92a830b",
      "filename": "gdb/osabi.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/053205cc4021026a5a1db05869d04bf7ad9ea1bd/gdb/osabi.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/053205cc4021026a5a1db05869d04bf7ad9ea1bd/gdb/osabi.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/osabi.h?ref=053205cc4021026a5a1db05869d04bf7ad9ea1bd",
      "patch": "@@ -37,6 +37,7 @@ enum gdb_osabi\n   GDB_OSABI_GO32,\n   GDB_OSABI_QNXNTO,\n   GDB_OSABI_CYGWIN,\n+  GDB_OSABI_WINDOWS,\n   GDB_OSABI_AIX,\n   GDB_OSABI_DICOS,\n   GDB_OSABI_DARWIN,"
    }
  ]
}