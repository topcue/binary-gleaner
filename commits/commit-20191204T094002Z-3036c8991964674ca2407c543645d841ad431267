{
  "sha": "3036c8991964674ca2407c543645d841ad431267",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzAzNmM4OTkxOTY0Njc0Y2EyNDA3YzU0MzY0NWQ4NDFhZDQzMTI2Nw==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2019-12-04T09:40:02Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2019-12-04T09:40:02Z"
    },
    "message": "x86: drop some stray/bogus DefaultSize\n\nInsns permitting only GPR operands (and hence implicit sizing when\nthere's no suffix) don't ever have their DefaultSize attribute\ninspected, so it shouldn't be there in the first place.\n\nAdditionally XBEGIN is like JMP, not CALL, and hence shouldn't be\nconverted to 32-bit operand size in .code16gcc mode. While the same is\ntrue for SYSRET, it permitting more than one suffix makes it FLDENV-\nlike, and hence rather than dropping the attribute, for now add it to\nthe exclusion list to avoid it getting an operand size prefix emitted\nin .code16gcc mode. (This will be dealt with later, perhaps together\nwith FLDENV and friends.)",
    "tree": {
      "sha": "89dce4cc7e0b04d33f770f0b28f388bc7172a5d7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/89dce4cc7e0b04d33f770f0b28f388bc7172a5d7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3036c8991964674ca2407c543645d841ad431267",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3036c8991964674ca2407c543645d841ad431267",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3036c8991964674ca2407c543645d841ad431267",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3036c8991964674ca2407c543645d841ad431267/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "508559397632e046a1f734f27d2b1971b1d172d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/508559397632e046a1f734f27d2b1971b1d172d1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/508559397632e046a1f734f27d2b1971b1d172d1"
    }
  ],
  "stats": {
    "total": 130,
    "additions": 111,
    "deletions": 19
  },
  "files": [
    {
      "sha": "7307dc8e44457d4a1a33f0e6e245c9bfe7ef7955",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3036c8991964674ca2407c543645d841ad431267/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3036c8991964674ca2407c543645d841ad431267/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=3036c8991964674ca2407c543645d841ad431267",
      "patch": "@@ -1,3 +1,10 @@\n+2019-12-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (process_suffix): Exclude SYSRET alongside\n+\tFLDENV et al.\n+\t* testsuite/gas/i386/general.s: Expand .code16gcc set of insns.\n+\t* testsuite/gas/i386/general.l: Adjust expectations.\n+\n 2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* as.c (flag_dwarf_cie_version): Change initial value to -1, and"
    },
    {
      "sha": "64312d27ab0bee014b9716aa2490aaa741333810",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3036c8991964674ca2407c543645d841ad431267/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3036c8991964674ca2407c543645d841ad431267/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=3036c8991964674ca2407c543645d841ad431267",
      "patch": "@@ -6311,7 +6311,9 @@ process_suffix (void)\n   else if (i.tm.opcode_modifier.defaultsize\n \t   && !i.suffix\n \t   /* exclude fldenv/frstor/fsave/fstenv */\n-\t   && i.tm.opcode_modifier.no_ssuf)\n+\t   && i.tm.opcode_modifier.no_ssuf\n+\t   /* exclude sysret */\n+\t   && i.tm.base_opcode != 0x0f07)\n     {\n       if (stackop_size == LONG_MNEM_SUFFIX\n \t  && i.tm.base_opcode == 0xcf)"
    },
    {
      "sha": "d5f74d11a63240b96afb822f75a3a0560f98a0af",
      "filename": "gas/testsuite/gas/i386/general.l",
      "status": "modified",
      "additions": 47,
      "deletions": 8,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3036c8991964674ca2407c543645d841ad431267/gas/testsuite/gas/i386/general.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3036c8991964674ca2407c543645d841ad431267/gas/testsuite/gas/i386/general.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/general.l?ref=3036c8991964674ca2407c543645d841ad431267",
      "patch": "@@ -31,6 +31,7 @@\n .*:143: Warning:.*\n .*:144: Warning:.*\n .*:178: Warning:.*\n+.*:224: Warning:.*\n    1                       \t.psize 0\n    2                       \t.text\n    3                       \t#test jumps and calls\n@@ -283,11 +284,49 @@\n  217 022a 0FB6C8            \t\tmovzb\t%al,%ecx\n  218                       \t\n  219                       \t.code16gcc\n- 220                       \t# Use 16-bit layout by default for fldenv.\n- 221 022d 67D920            \t\tfldenv\t\\(%eax\\)\n- 222 0230 67D920            \t\tfldenvs\t\\(%eax\\)\n- 223 0233 6766D920          \t\tfldenvl\t\\(%eax\\)\n- 224                       \t\n- 225                       \t\t# Force a good alignment.\n- 226 0237 00000000 00000000 \t\t.p2align\t4,0\n- 226      00\n+[ \t]*[1-9][0-9]*[ \t]*# Except for IRET use 32-bit implicit stack accesses by default.\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+66E8FAFF FFFF[ \t]+call\t\\.\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+66FF17[ \t]+call\t\\*\\(%bx\\)\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+66C80000 00[ \t]+enter\t\\$0,\\$0\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+CF[ \t]+iret\n+.*Warning:.*16-bit.*iret.*\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+66FF1F[ \t]+lcall\t\\*\\(%bx\\)\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+669A0000 00000000[ \t]+lcall\t\\$0,\\$0\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+66C9[ \t]+leave\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+66CB[ \t]+lret\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+66CA0000[ \t]+lret\t\\$0\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+666A00[ \t]+push\t\\$0\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+66683412 0000[ \t]+push\t\\$0x1234\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+66FF37[ \t]+push\t\\(%bx\\)\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+6660[ \t]+pusha\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+669C[ \t]+pushf\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+668F07[ \t]+pop\t\\(%bx\\)\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+6661[ \t]+popa\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+669D[ \t]+popf\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+66C3[ \t]+ret\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+66C20000[ \t]+ret\t\\$0\n+[ \t]*[1-9][0-9]*[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]*# However use 16-bit branches not accessing the stack by default.\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+77FE[ \t]+ja\t\\.\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+0F873012[ \t]+ja\t\\.\\+0x1234\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+E3FE[ \t]+jcxz\t\\.\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+EBFE[ \t]+jmp\t\\.\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+E93112[ \t]+jmp\t\\.\\+0x1234\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+FF27[ \t]+jmp\t\\*\\(%bx\\)\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+FF2F[ \t]+ljmp\t\\*\\(%bx\\)\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+EA000000 00[ \t]+ljmp\t\\$0,\\$0\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+E2FE[ \t]+loop\t\\.\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+0F05[ \t]+syscall\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+0F34[ \t]+sysenter\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+0F35[ \t]+sysexit\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+0F07[ \t]+sysret\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+C7F8FCFF[ \t]+xbegin\t\\.\n+[ \t]*[1-9][0-9]*[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]*# Use 16-bit layout by default for fldenv.\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+67D920[ \t]+fldenv\t\\(%eax\\)\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+67D920[ \t]+fldenvs\t\\(%eax\\)\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]*[ \t]+6766D920[ \t]+fldenvl\t\\(%eax\\)\n+[ \t]*[1-9][0-9]*[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]*# Force a good alignment.\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f \t]+\\.p2align\t4,0\n+#pass"
    },
    {
      "sha": "add14fd3f2d06f6bfa285a2a11b14f1b23d7ed2c",
      "filename": "gas/testsuite/gas/i386/general.s",
      "status": "modified",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3036c8991964674ca2407c543645d841ad431267/gas/testsuite/gas/i386/general.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3036c8991964674ca2407c543645d841ad431267/gas/testsuite/gas/i386/general.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/general.s?ref=3036c8991964674ca2407c543645d841ad431267",
      "patch": "@@ -217,6 +217,43 @@\n \tmovzb\t%al,%ecx\n \n .code16gcc\n+# Except for IRET use 32-bit implicit stack accesses by default.\n+\tcall\t.\n+\tcall\t*(%bx)\n+\tenter\t$0,$0\n+\tiret\n+\tlcall\t*(%bx)\n+\tlcall\t$0,$0\n+\tleave\n+\tlret\n+\tlret\t$0\n+\tpush\t$0\n+\tpush\t$0x1234\n+\tpush\t(%bx)\n+\tpusha\n+\tpushf\n+\tpop\t(%bx)\n+\tpopa\n+\tpopf\n+\tret\n+\tret\t$0\n+\n+# However use 16-bit branches not accessing the stack by default.\n+\tja\t.\n+\tja\t.+0x1234\n+\tjcxz\t.\n+\tjmp\t.\n+\tjmp\t.+0x1234\n+\tjmp\t*(%bx)\n+\tljmp\t*(%bx)\n+\tljmp\t$0,$0\n+\tloop\t.\n+\tsyscall\n+\tsysenter\n+\tsysexit\n+\tsysret\n+\txbegin\t.\n+\n # Use 16-bit layout by default for fldenv.\n \tfldenv\t(%eax)\n \tfldenvs\t(%eax)"
    },
    {
      "sha": "79f12e936581d74bac7f62480d4628d73405dc0f",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3036c8991964674ca2407c543645d841ad431267/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3036c8991964674ca2407c543645d841ad431267/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=3036c8991964674ca2407c543645d841ad431267",
      "patch": "@@ -1,3 +1,10 @@\n+2019-12-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (push, pop): Drop DefaultSize from GPR-only\n+\tforms.\n+\t(xbegin): Drop DefaultSize.\n+\t* i386-tbl.h: Re-generate.\n+\n 2019-11-22  Mihail Ionescu  <mihail.ionescu@arm.com>\n \n \t* opcodes/arm-dis.c (arm_opcodes, thumb32_opcodes):"
    },
    {
      "sha": "1d2c76b9ad2a03de660afee3168d2230ce5a0977",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3036c8991964674ca2407c543645d841ad431267/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3036c8991964674ca2407c543645d841ad431267/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=3036c8991964674ca2407c543645d841ad431267",
      "patch": "@@ -151,13 +151,13 @@ movzx, 2, 0xfb6, None, 2, Cpu386, Modrm|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf\n movzx, 2, 0xfb7, None, 2, Cpu386, Modrm|No_bSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IntelSyntax, { Reg16|Word|BaseIndex, Reg32|Reg64 }\n \n // Push instructions.\n-push, 1, 0x50, None, 1, CpuNo64, ShortForm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg16|Reg32 }\n+push, 1, 0x50, None, 1, CpuNo64, ShortForm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg16|Reg32 }\n push, 1, 0xff, 0x6, 1, CpuNo64, Modrm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg16|Reg32|Word|Dword|Unspecified|BaseIndex }\n push, 1, 0x6a, None, 1, Cpu186|CpuNo64, DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8S }\n push, 1, 0x68, None, 1, Cpu186|CpuNo64, DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm16|Imm32 }\n push, 1, 0x6, None, 1, CpuNo64, ShortForm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { SReg }\n // In 64bit mode, the operand size is implicitly 64bit.\n-push, 1, 0x50, None, 1, Cpu64, ShortForm|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Reg16|Reg64 }\n+push, 1, 0x50, None, 1, Cpu64, ShortForm|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Reg16|Reg64 }\n push, 1, 0xff, 0x6, 1, Cpu64, Modrm|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Reg16|Reg64|Word|Qword|Unspecified|BaseIndex }\n push, 1, 0x6a, None, 1, Cpu64, DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Imm8S }\n push, 1, 0x68, None, 1, Cpu64, DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Imm16|Imm32S }\n@@ -166,11 +166,11 @@ push, 1, 0xfa0, None, 2, Cpu64, ShortForm|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No\n pusha, 0, 0x60, None, 1, Cpu186|CpuNo64, DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n \n // Pop instructions.\n-pop, 1, 0x58, None, 1, CpuNo64, ShortForm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg16|Reg32 }\n+pop, 1, 0x58, None, 1, CpuNo64, ShortForm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg16|Reg32 }\n pop, 1, 0x8f, 0x0, 1, CpuNo64, Modrm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg16|Reg32|Word|Dword|Unspecified|BaseIndex }\n pop, 1, 0x7, None, 1, CpuNo64, ShortForm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { SReg }\n // In 64bit mode, the operand size is implicitly 64bit.\n-pop, 1, 0x58, None, 1, Cpu64, ShortForm|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Reg16|Reg64 }\n+pop, 1, 0x58, None, 1, Cpu64, ShortForm|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Reg16|Reg64 }\n pop, 1, 0x8f, 0x0, 1, Cpu64, Modrm|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Reg16|Reg64|Word|Qword|Unspecified|BaseIndex }\n pop, 1, 0xfa1, None, 2, Cpu64, ShortForm|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { SReg }\n \n@@ -2550,7 +2550,7 @@ xrelease, 0, 0xf3, None, 1, CpuHLE, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_l\n \n // RTM instructions\n xabort, 1, 0xc6f8, None, 2, CpuRTM, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8 }\n-xbegin, 1, 0xc7f8, None, 2, CpuRTM,  JumpDword|DefaultSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Disp16|Disp32 }\n+xbegin, 1, 0xc7f8, None, 2, CpuRTM,  JumpDword|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Disp16|Disp32 }\n xend, 0, 0xf01d5, None, 3, CpuRTM, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n xtest, 0, 0xf01d6, None, 3, CpuHLE|CpuRTM, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n "
    },
    {
      "sha": "8120fb9743d66857734642a16a06b7b51e798bc7",
      "filename": "opcodes/i386-tbl.h",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3036c8991964674ca2407c543645d841ad431267/opcodes/i386-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3036c8991964674ca2407c543645d841ad431267/opcodes/i386-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-tbl.h?ref=3036c8991964674ca2407c543645d841ad431267",
      "patch": "@@ -547,7 +547,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 } },\n-    { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0,\n+    { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,\n@@ -607,7 +607,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } },\n-    { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0,\n+    { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n@@ -679,7 +679,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 } },\n-    { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0,\n+    { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,\n@@ -715,7 +715,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } },\n-    { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0,\n+    { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n@@ -42835,7 +42835,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n-    { 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n+    { 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,"
    }
  ]
}