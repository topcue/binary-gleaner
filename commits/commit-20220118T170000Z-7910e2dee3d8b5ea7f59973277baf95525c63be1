{
  "sha": "7910e2dee3d8b5ea7f59973277baf95525c63be1",
  "node_id": "C_kwDOANOeidoAKDc5MTBlMmRlZTNkOGI1ZWE3ZjU5OTczMjc3YmFmOTU1MjVjNjNiZTE",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-14T14:26:12Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-18T17:00:00Z"
    },
    "message": "Boolify explicit_to_string_internal\n\nThis changes explicit_to_string_internal to use 'bool' rather than\n'int'.",
    "tree": {
      "sha": "2b62a86360968320c9e808e16eb2a9f068c97d46",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2b62a86360968320c9e808e16eb2a9f068c97d46"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7910e2dee3d8b5ea7f59973277baf95525c63be1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7910e2dee3d8b5ea7f59973277baf95525c63be1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7910e2dee3d8b5ea7f59973277baf95525c63be1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7910e2dee3d8b5ea7f59973277baf95525c63be1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dab863ef408588aba1c396901e3e5070948d2047",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dab863ef408588aba1c396901e3e5070948d2047",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dab863ef408588aba1c396901e3e5070948d2047"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 8,
    "deletions": 8
  },
  "files": [
    {
      "sha": "35ca2ac71b8b91450e1c91a548bb93e91db27712",
      "filename": "gdb/location.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7910e2dee3d8b5ea7f59973277baf95525c63be1/gdb/location.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7910e2dee3d8b5ea7f59973277baf95525c63be1/gdb/location.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/location.c?ref=7910e2dee3d8b5ea7f59973277baf95525c63be1",
      "patch": "@@ -228,14 +228,14 @@ get_explicit_location_const (const struct event_location *location)\n /* This convenience function returns a malloc'd string which\n    represents the location in EXPLICIT_LOC.\n \n-   AS_LINESPEC is non-zero if this string should be a linespec.\n+   AS_LINESPEC is true if this string should be a linespec.\n    Otherwise it will be output in explicit form.  */\n \n static gdb::unique_xmalloc_ptr<char>\n-explicit_to_string_internal (int as_linespec,\n+explicit_to_string_internal (bool as_linespec,\n \t\t\t     const struct explicit_location *explicit_loc)\n {\n-  int need_space = 0;\n+  bool need_space = false;\n   char space = as_linespec ? ':' : ' ';\n   string_file buf;\n \n@@ -244,7 +244,7 @@ explicit_to_string_internal (int as_linespec,\n       if (!as_linespec)\n \tbuf.puts (\"-source \");\n       buf.puts (explicit_loc->source_filename);\n-      need_space = 1;\n+      need_space = true;\n     }\n \n   if (explicit_loc->function_name != NULL)\n@@ -256,7 +256,7 @@ explicit_to_string_internal (int as_linespec,\n       if (!as_linespec)\n \tbuf.puts (\"-function \");\n       buf.puts (explicit_loc->function_name);\n-      need_space = 1;\n+      need_space = true;\n     }\n \n   if (explicit_loc->label_name != NULL)\n@@ -266,7 +266,7 @@ explicit_to_string_internal (int as_linespec,\n       if (!as_linespec)\n \tbuf.puts (\"-label \");\n       buf.puts (explicit_loc->label_name);\n-      need_space = 1;\n+      need_space = true;\n     }\n \n   if (explicit_loc->line_offset.sign != LINE_OFFSET_UNKNOWN)\n@@ -290,15 +290,15 @@ explicit_to_string_internal (int as_linespec,\n static gdb::unique_xmalloc_ptr<char>\n explicit_location_to_string (const struct explicit_location *explicit_loc)\n {\n-  return explicit_to_string_internal (0, explicit_loc);\n+  return explicit_to_string_internal (false, explicit_loc);\n }\n \n /* See description in location.h.  */\n \n gdb::unique_xmalloc_ptr<char>\n explicit_location_to_linespec (const struct explicit_location *explicit_loc)\n {\n-  return explicit_to_string_internal (1, explicit_loc);\n+  return explicit_to_string_internal (true, explicit_loc);\n }\n \n /* See description in location.h.  */"
    }
  ]
}