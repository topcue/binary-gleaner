{
  "sha": "729a53530e86972d1143553a415db34e6e01d5d2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzI5YTUzNTMwZTg2OTcyZDExNDM1NTNhNDE1ZGIzNGU2ZTAxZDVkMg==",
  "commit": {
    "author": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2020-12-02T09:18:35Z"
    },
    "committer": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2020-12-10T02:37:43Z"
    },
    "message": "RISC-V: Control fence.i and csr instructions by zifencei and zicsr.\n\nbfd/\n    * elfxx-riscv.c (riscv_ext_dont_care_version): New function.  Return\n    TRUE if we don't care the versions of the extensions.  These extensions\n    are added to the subset list for special purposes, with the explicit\n    versions or the RISCV_UNKNOWN_VERSION versions.\n    (riscv_parse_add_subset): If we do care the versions of the extension,\n    and the versions are unknown, then report errors for the non-implicit\n    extensions, and return directly for the implicit one.\n    (riscv_arch_str1): Do not output i extension after e, and the extensions\n    which versions are unknown.\ngas/\n    * config/tc-riscv.c (riscv_multi_subset_supports): Handle INSN_CLASS_ZICSR\n    and INSN_CLASS_ZIFENCEI.\n    * testsuite/gas/riscv/march-imply-i.s: New testcase.\n    * testsuite/gas/riscv/march-imply-i2p0-01.d: New testcase.  The version\n    of i is less than 2.1, and zi* are supported in the chosen spec, so\n    enable the fence.i and csr instructions, also output the implicit zi* to\n    the arch string.\n    * testsuite/gas/riscv/march-imply-i2p0-02.d: Likewise, but the zi* are\n    not supported in the spec 2.2.  Enable the related instructions since\n    i's version is less than 2.1, but do not output them.\n    * testsuite/gas/riscv/march-imply-i2p1-01.d: New testcase.  The version\n    of i is 2.1, so don't add it's implicit zi*, and disable the related\n    instructions.\n    * testsuite/gas/riscv/march-imply-i2p1-01.l: Likewise.\n    * testsuite/gas/riscv/march-imply-i2p1-02.d: Likewise, and set the zi*\n    explicitly, so enable the related instructions.\n    * testsuite/gas/riscv/march-imply-i2p0.d: Removed.\n    * testsuite/gas/riscv/march-imply-i2p1.d: Removed.\ninclude/\n    * opcode/riscv.h: Add INSN_CLASS_ZICSR and INSN_CLASS_ZIFENCEI.\nopcodes/\n    * riscv-opc.c (riscv_opcodes): Control fence.i and csr instructions by\n    zifencei and zicsr.",
    "tree": {
      "sha": "e8a27c9d6d7f0cd468a089616450dca0ef0e7e4e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e8a27c9d6d7f0cd468a089616450dca0ef0e7e4e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/729a53530e86972d1143553a415db34e6e01d5d2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/729a53530e86972d1143553a415db34e6e01d5d2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/729a53530e86972d1143553a415db34e6e01d5d2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/729a53530e86972d1143553a415db34e6e01d5d2/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "cd6b05c1b2321cafe3ad9335aaa734a28f2a058e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd6b05c1b2321cafe3ad9335aaa734a28f2a058e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cd6b05c1b2321cafe3ad9335aaa734a28f2a058e"
    }
  ],
  "stats": {
    "total": 232,
    "additions": 179,
    "deletions": 53
  },
  "files": [
    {
      "sha": "8be401858260ebd0cc92c46217614199bcae6512",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -1,3 +1,15 @@\n+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* elfxx-riscv.c (riscv_ext_dont_care_version): New function.  Return\n+\tTRUE if we don't care the versions of the extensions.  These extensions\n+\tare added to the subset list for special purposes, with the explicit\n+\tversions or the RISCV_UNKNOWN_VERSION versions.\n+\t(riscv_parse_add_subset): If we do care the versions of the extension,\n+\tand the versions are unknown, then report errors for the non-implicit\n+\textensions, and return directly for the implicit one.\n+\t(riscv_arch_str1): Do not output i extension after e, and the extensions\n+\twhich versions are unknown.\n+\n 2020-12-07  Siddhesh Poyarekar  <siddhesh@sourceware.org>\n \n \tPR 26945"
    },
    {
      "sha": "35e46faa4103071363b66587f0965db7a49d40d8",
      "filename": "bfd/elfxx-riscv.c",
      "status": "modified",
      "additions": 39,
      "deletions": 20,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/bfd/elfxx-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/bfd/elfxx-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-riscv.c?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -1148,6 +1148,21 @@ riscv_add_implicit_subset (riscv_subset_list_t *subset_list,\n     }\n }\n \n+/* These extensions are added to the subset list for special purposes,\n+   with the explicit versions or the RISCV_UNKNOWN_VERSION versions.\n+   Therefore, we won't output them to the output arch string in the\n+   riscv_arch_str1, if the versions are unknown.  */\n+\n+static bfd_boolean\n+riscv_ext_dont_care_version (const char *subset)\n+{\n+  if (strcmp (subset, \"g\") == 0\n+      || strcmp (subset, \"zicsr\") == 0\n+      || strcmp (subset, \"zifencei\") == 0)\n+    return TRUE;\n+  return FALSE;\n+}\n+\n /* We have to add all arch string extensions first, and then start to\n    add their implicit extensions.  The arch string extensions must be\n    set in order, so we can add them to the last of the subset list\n@@ -1172,11 +1187,15 @@ riscv_parse_add_subset (riscv_parse_subset_t *rps,\n       && rps->get_default_version != NULL)\n     rps->get_default_version (subset, &major_version, &minor_version);\n \n-  if (!implicit\n-      && strcmp (subset, \"g\") != 0\n+  if (!riscv_ext_dont_care_version (subset)\n       && (major_version == RISCV_UNKNOWN_VERSION\n \t  || minor_version == RISCV_UNKNOWN_VERSION))\n     {\n+      /* We only add the implicit extension if it is supported in the\n+\t chosen ISA spec.  */\n+      if (implicit)\n+\treturn;\n+\n       if (subset[0] == 'x')\n \trps->error_handler\n \t  (_(\"x ISA extension `%s' must be set with the versions\"),\n@@ -1191,10 +1210,7 @@ riscv_parse_add_subset (riscv_parse_subset_t *rps,\n   if (!implicit)\n     riscv_add_subset (rps->subset_list, subset,\n \t\t      major_version, minor_version);\n-  else if (major_version != RISCV_UNKNOWN_VERSION\n-\t   && minor_version != RISCV_UNKNOWN_VERSION)\n-    /* We only add the implicit extension if it is supported in the\n-       chosen ISA spec.  */\n+  else\n     riscv_add_implicit_subset (rps->subset_list, subset,\n \t\t\t       major_version, minor_version);\n }\n@@ -1907,31 +1923,34 @@ riscv_arch_str1 (riscv_subset_t *subset,\n \t\t char *attr_str, char *buf, size_t bufsz)\n {\n   const char *underline = \"_\";\n+  riscv_subset_t *subset_t = subset;\n \n-  if (subset == NULL)\n+  if (subset_t == NULL)\n     return;\n \n   /* No underline between rvXX and i/e.   */\n-  if ((strcasecmp (subset->name, \"i\") == 0)\n-      || (strcasecmp (subset->name, \"e\") == 0))\n+  if ((strcasecmp (subset_t->name, \"i\") == 0)\n+      || (strcasecmp (subset_t->name, \"e\") == 0))\n     underline = \"\";\n \n   snprintf (buf, bufsz, \"%s%s%dp%d\",\n \t    underline,\n-\t    subset->name,\n-\t    subset->major_version,\n-\t    subset->minor_version);\n+\t    subset_t->name,\n+\t    subset_t->major_version,\n+\t    subset_t->minor_version);\n \n   strncat (attr_str, buf, bufsz);\n \n-  /* Skip 'i' extension after 'e', and skip 'g' extension.  */\n-  if (subset->next\n-      && ((strcmp (subset->name, \"e\") == 0\n-\t   && strcmp (subset->next->name, \"i\") == 0)\n-\t  || strcmp (subset->next->name, \"g\") == 0))\n-    riscv_arch_str1 (subset->next->next, attr_str, buf, bufsz);\n-  else\n-    riscv_arch_str1 (subset->next, attr_str, buf, bufsz);\n+  /* Skip 'i' extension after 'e', or skip extensions which\n+     versions are unknown.  */\n+  while (subset_t->next\n+\t && ((strcmp (subset_t->name, \"e\") == 0\n+\t      && strcmp (subset_t->next->name, \"i\") == 0)\n+\t     || subset_t->next->major_version == RISCV_UNKNOWN_VERSION\n+\t     || subset_t->next->minor_version == RISCV_UNKNOWN_VERSION))\n+    subset_t = subset_t->next;\n+\n+  riscv_arch_str1 (subset_t->next, attr_str, buf, bufsz);\n }\n \n /* Convert subset info to string with explicit version info.  */"
    },
    {
      "sha": "d657f87aa67cc903837ffa66429882c111b5547d",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -1,3 +1,24 @@\n+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* config/tc-riscv.c (riscv_multi_subset_supports): Handle INSN_CLASS_ZICSR\n+\tand INSN_CLASS_ZIFENCEI.\n+\t* testsuite/gas/riscv/march-imply-i.s: New testcase.\n+\t* testsuite/gas/riscv/march-imply-i2p0-01.d: New testcase.  The version\n+\tof i is less than 2.1, and zi* are supported in the chosen spec, so\n+\tenable the fence.i and csr instructions, also output the implicit zi* to\n+\tthe arch string.\n+\t* testsuite/gas/riscv/march-imply-i2p0-02.d: Likewise, but the zi* are\n+\tnot supported in the spec 2.2.  Enable the related instructions since\n+\ti's version is less than 2.1, but do not output them.\n+\t* testsuite/gas/riscv/march-imply-i2p1-01.d: New testcase.  The version\n+\tof i is 2.1, so don't add it's implicit zi*, and disable the related\n+\tinstructions.\n+\t* testsuite/gas/riscv/march-imply-i2p1-01.l: Likewise.\n+\t* testsuite/gas/riscv/march-imply-i2p1-02.d: Likewise, and set the zi*\n+\texplicitly, so enable the related instructions.\n+\t* testsuite/gas/riscv/march-imply-i2p0.d: Removed.\n+\t* testsuite/gas/riscv/march-imply-i2p1.d: Removed.\n+\n 2020-12-08  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/obj-elf.c (SEC_ASSEMBLER_SHF_MASK): New."
    },
    {
      "sha": "dfdbadf19ee98a516ba5eceb8d0aaa6661941259",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -237,13 +237,19 @@ riscv_multi_subset_supports (enum riscv_insn_class insn_class)\n     case INSN_CLASS_M: return riscv_subset_supports (\"m\");\n     case INSN_CLASS_F: return riscv_subset_supports (\"f\");\n     case INSN_CLASS_D: return riscv_subset_supports (\"d\");\n-    case INSN_CLASS_D_AND_C:\n-      return riscv_subset_supports (\"d\") && riscv_subset_supports (\"c\");\n+    case INSN_CLASS_Q: return riscv_subset_supports (\"q\");\n \n     case INSN_CLASS_F_AND_C:\n-      return riscv_subset_supports (\"f\") && riscv_subset_supports (\"c\");\n+      return (riscv_subset_supports (\"f\")\n+\t      && riscv_subset_supports (\"c\"));\n+    case INSN_CLASS_D_AND_C:\n+      return (riscv_subset_supports (\"d\")\n+\t      && riscv_subset_supports (\"c\"));\n \n-    case INSN_CLASS_Q: return riscv_subset_supports (\"q\");\n+    case INSN_CLASS_ZICSR:\n+      return riscv_subset_supports (\"zicsr\");\n+    case INSN_CLASS_ZIFENCEI:\n+      return riscv_subset_supports (\"zifencei\");\n \n     default:\n       as_fatal (\"Unreachable\");"
    },
    {
      "sha": "b65c3c32aa633773910e7222f086435b6066f664",
      "filename": "gas/testsuite/gas/riscv/march-imply-i.s",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/gas/testsuite/gas/riscv/march-imply-i.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/gas/testsuite/gas/riscv/march-imply-i.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/march-imply-i.s?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -0,0 +1,24 @@\n+target:\n+\t# zicsr\n+\tcsrr\tt0, ustatus\n+\tcsrwi\tustatus, 0x0\n+\tcsrsi\tustatus, 0x0\n+\tcsrci\tustatus, 0x0\n+\tcsrw\tustatus, t0\n+\tcsrw\tustatus, 0x0\n+\tcsrs\tustatus, t0\n+\tcsrs\tustatus, 0x0\n+\tcsrc\tustatus, t0\n+\tcsrc\tustatus, 0x0\n+\tcsrrwi\tt0, ustatus, 0x0\n+\tcsrrsi\tt0, ustatus, 0x0\n+\tcsrrci\tt0, ustatus, 0x0\n+\tcsrrw\tt0, ustatus, t0\n+\tcsrrw\tt0, ustatus, 0x0\n+\tcsrrs\tt0, ustatus, t0\n+\tcsrrs\tt0, ustatus, 0x0\n+\tcsrrc\tt0, ustatus, t0\n+\tcsrrc\tt0, ustatus, 0x0\n+\n+\t# zifencei\n+\tfence.i"
    },
    {
      "sha": "6d86034f8c7cd11484fcbd1f3cde780bb760250a",
      "filename": "gas/testsuite/gas/riscv/march-imply-i2p0-01.d",
      "status": "renamed",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/gas/testsuite/gas/riscv/march-imply-i2p0-01.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/gas/testsuite/gas/riscv/march-imply-i2p0-01.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/march-imply-i2p0-01.d?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -1,6 +1,7 @@\n #as: -march=rv32i2p0 -march-attr -misa-spec=20191213\n #readelf: -A\n-#source: empty.s\n+#source: march-imply-i.s\n Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: \"rv32i2p0_zicsr2p0_zifencei2p0\"\n+#...",
      "previous_filename": "gas/testsuite/gas/riscv/march-imply-i2p0.d"
    },
    {
      "sha": "7686296ca717a8a7841e91fc2072c6fb57a6fe2a",
      "filename": "gas/testsuite/gas/riscv/march-imply-i2p0-02.d",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/gas/testsuite/gas/riscv/march-imply-i2p0-02.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/gas/testsuite/gas/riscv/march-imply-i2p0-02.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/march-imply-i2p0-02.d?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -0,0 +1,7 @@\n+#as: -march=rv32i -march-attr -misa-spec=2.2\n+#readelf: -A\n+#source: march-imply-i.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: \"rv32i2p0\"\n+#..."
    },
    {
      "sha": "fcf22ed3aee57f8112311e23408a7e04cbcd27a0",
      "filename": "gas/testsuite/gas/riscv/march-imply-i2p1-01.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/gas/testsuite/gas/riscv/march-imply-i2p1-01.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/gas/testsuite/gas/riscv/march-imply-i2p1-01.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/march-imply-i2p1-01.d?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -0,0 +1,3 @@\n+#as: -march=rv32i -march-attr -misa-spec=20191213\n+#source: march-imply-i.s\n+#error_output: march-imply-i2p1-01.l"
    },
    {
      "sha": "b54d4ae9acdeb432440ead790e71a3b8b86ff106",
      "filename": "gas/testsuite/gas/riscv/march-imply-i2p1-01.l",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/gas/testsuite/gas/riscv/march-imply-i2p1-01.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/gas/testsuite/gas/riscv/march-imply-i2p1-01.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/march-imply-i2p1-01.l?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -0,0 +1,21 @@\n+.*Assembler messages:\n+.*Error: unrecognized opcode `csrr t0,ustatus'\n+.*Error: unrecognized opcode `csrwi ustatus,0x0'\n+.*Error: unrecognized opcode `csrsi ustatus,0x0'\n+.*Error: unrecognized opcode `csrci ustatus,0x0'\n+.*Error: unrecognized opcode `csrw ustatus,t0'\n+.*Error: unrecognized opcode `csrw ustatus,0x0'\n+.*Error: unrecognized opcode `csrs ustatus,t0'\n+.*Error: unrecognized opcode `csrs ustatus,0x0'\n+.*Error: unrecognized opcode `csrc ustatus,t0'\n+.*Error: unrecognized opcode `csrc ustatus,0x0'\n+.*Error: unrecognized opcode `csrrwi t0,ustatus,0x0'\n+.*Error: unrecognized opcode `csrrsi t0,ustatus,0x0'\n+.*Error: unrecognized opcode `csrrci t0,ustatus,0x0'\n+.*Error: unrecognized opcode `csrrw t0,ustatus,t0'\n+.*Error: unrecognized opcode `csrrw t0,ustatus,0x0'\n+.*Error: unrecognized opcode `csrrs t0,ustatus,t0'\n+.*Error: unrecognized opcode `csrrs t0,ustatus,0x0'\n+.*Error: unrecognized opcode `csrrc t0,ustatus,t0'\n+.*Error: unrecognized opcode `csrrc t0,ustatus,0x0'\n+.*Error: unrecognized opcode `fence.i'"
    },
    {
      "sha": "b8065b62520eb1c688e32718e18642f7f4eefa2f",
      "filename": "gas/testsuite/gas/riscv/march-imply-i2p1-02.d",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/gas/testsuite/gas/riscv/march-imply-i2p1-02.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/gas/testsuite/gas/riscv/march-imply-i2p1-02.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/march-imply-i2p1-02.d?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -0,0 +1,7 @@\n+#as: -march=rv32i_zicsr_zifencei -march-attr -misa-spec=20191213\n+#readelf: -A\n+#source: march-imply-i.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: \"rv32i2p1_zicsr2p0_zifencei2p0\"\n+#..."
    },
    {
      "sha": "0e9a464d6168bba877759f4e382afa4d1c6601f3",
      "filename": "gas/testsuite/gas/riscv/march-imply-i2p1.d",
      "status": "removed",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6b05c1b2321cafe3ad9335aaa734a28f2a058e/gas/testsuite/gas/riscv/march-imply-i2p1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6b05c1b2321cafe3ad9335aaa734a28f2a058e/gas/testsuite/gas/riscv/march-imply-i2p1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/march-imply-i2p1.d?ref=cd6b05c1b2321cafe3ad9335aaa734a28f2a058e",
      "patch": "@@ -1,6 +0,0 @@\n-#as: -march=rv32i -march-attr -misa-spec=20191213\n-#readelf: -A\n-#source: empty.s\n-Attribute Section: riscv\n-File Attributes\n-  Tag_RISCV_arch: \"rv32i2p1\""
    },
    {
      "sha": "6f4614f4a26f243537107507684f80926a21c225",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv.h: Add INSN_CLASS_ZICSR and INSN_CLASS_ZIFENCEI.\n+\n 2020-12-07  Nick Clifton  <nickc@redhat.com>\n \n \t* elf/common.h (SHF_GNU_BUILD_NOTE): Delete."
    },
    {
      "sha": "6a9fd4a7dcf91b38e2470c2a7bef2ccf48946d20",
      "filename": "include/opcode/riscv.h",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/include/opcode/riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/include/opcode/riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv.h?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -306,9 +306,11 @@ enum riscv_insn_class\n    INSN_CLASS_M,\n    INSN_CLASS_F,\n    INSN_CLASS_D,\n-   INSN_CLASS_D_AND_C,\n-   INSN_CLASS_F_AND_C,\n    INSN_CLASS_Q,\n+   INSN_CLASS_F_AND_C,\n+   INSN_CLASS_D_AND_C,\n+   INSN_CLASS_ZICSR,\n+   INSN_CLASS_ZIFENCEI,\n   };\n \n /* This structure holds information for a particular instruction.  */"
    },
    {
      "sha": "b0cc885e8e4e96ee03956c1a0d9d33fd98e82e6e",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -1,3 +1,8 @@\n+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* riscv-opc.c (riscv_opcodes): Control fence.i and csr instructions by\n+\tzifencei and zicsr.\n+\n 2020-12-04  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* s390-opc.txt: Add risbgz and risbgnz."
    },
    {
      "sha": "4d9ba369d741804592e83c2fa310ecd0043eb1c4",
      "filename": "opcodes/riscv-opc.c",
      "status": "modified",
      "additions": 20,
      "deletions": 20,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a53530e86972d1143553a415db34e6e01d5d2/opcodes/riscv-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a53530e86972d1143553a415db34e6e01d5d2/opcodes/riscv-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-opc.c?ref=729a53530e86972d1143553a415db34e6e01d5d2",
      "patch": "@@ -345,7 +345,7 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"sw\",          0, INSN_CLASS_I,   \"t,A,s\",  0, (int) M_SW, match_never, INSN_MACRO },\n {\"fence\",       0, INSN_CLASS_I,   \"\",  MATCH_FENCE | MASK_PRED | MASK_SUCC, MASK_FENCE | MASK_RD | MASK_RS1 | MASK_IMM, match_opcode, INSN_ALIAS },\n {\"fence\",       0, INSN_CLASS_I,   \"P,Q\",  MATCH_FENCE, MASK_FENCE | MASK_RD | MASK_RS1 | (MASK_IMM & ~MASK_PRED & ~MASK_SUCC), match_opcode, 0 },\n-{\"fence.i\",     0, INSN_CLASS_I,   \"\",  MATCH_FENCE_I, MASK_FENCE | MASK_RD | MASK_RS1 | MASK_IMM, match_opcode, 0 },\n+{\"fence.i\",     0, INSN_CLASS_ZIFENCEI,   \"\",  MATCH_FENCE_I, MASK_FENCE | MASK_RD | MASK_RS1 | MASK_IMM, match_opcode, 0 },\n {\"fence.tso\",   0, INSN_CLASS_I,   \"\",  MATCH_FENCE_TSO, MASK_FENCE_TSO | MASK_RD | MASK_RS1, match_opcode, INSN_ALIAS },\n {\"rdcycle\",     0, INSN_CLASS_I,   \"d\",  MATCH_RDCYCLE, MASK_RDCYCLE, match_opcode, INSN_ALIAS },\n {\"rdinstret\",   0, INSN_CLASS_I,   \"d\",  MATCH_RDINSTRET, MASK_RDINSTRET, match_opcode, INSN_ALIAS },\n@@ -749,25 +749,25 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"c.fsw\",     32, INSN_CLASS_F_AND_C, \"CD,Ck(Cs)\",  MATCH_C_FSW, MASK_C_FSW, match_opcode, INSN_DREF|INSN_4_BYTE },\n \n /* Supervisor instructions */\n-{\"csrr\",       0, INSN_CLASS_I,   \"d,E\",  MATCH_CSRRS, MASK_CSRRS | MASK_RS1, match_opcode, INSN_ALIAS },\n-{\"csrwi\",      0, INSN_CLASS_I,   \"E,Z\",  MATCH_CSRRWI, MASK_CSRRWI | MASK_RD, match_opcode, INSN_ALIAS },\n-{\"csrsi\",      0, INSN_CLASS_I,   \"E,Z\",  MATCH_CSRRSI, MASK_CSRRSI | MASK_RD, match_opcode, INSN_ALIAS },\n-{\"csrci\",      0, INSN_CLASS_I,   \"E,Z\",  MATCH_CSRRCI, MASK_CSRRCI | MASK_RD, match_opcode, INSN_ALIAS },\n-{\"csrw\",       0, INSN_CLASS_I,   \"E,s\",  MATCH_CSRRW, MASK_CSRRW | MASK_RD, match_opcode, INSN_ALIAS },\n-{\"csrw\",       0, INSN_CLASS_I,   \"E,Z\",  MATCH_CSRRWI, MASK_CSRRWI | MASK_RD, match_opcode, INSN_ALIAS },\n-{\"csrs\",       0, INSN_CLASS_I,   \"E,s\",  MATCH_CSRRS, MASK_CSRRS | MASK_RD, match_opcode, INSN_ALIAS },\n-{\"csrs\",       0, INSN_CLASS_I,   \"E,Z\",  MATCH_CSRRSI, MASK_CSRRSI | MASK_RD, match_opcode, INSN_ALIAS },\n-{\"csrc\",       0, INSN_CLASS_I,   \"E,s\",  MATCH_CSRRC, MASK_CSRRC | MASK_RD, match_opcode, INSN_ALIAS },\n-{\"csrc\",       0, INSN_CLASS_I,   \"E,Z\",  MATCH_CSRRCI, MASK_CSRRCI | MASK_RD, match_opcode, INSN_ALIAS },\n-{\"csrrwi\",     0, INSN_CLASS_I,   \"d,E,Z\",  MATCH_CSRRWI, MASK_CSRRWI, match_opcode, 0 },\n-{\"csrrsi\",     0, INSN_CLASS_I,   \"d,E,Z\",  MATCH_CSRRSI, MASK_CSRRSI, match_opcode, 0 },\n-{\"csrrci\",     0, INSN_CLASS_I,   \"d,E,Z\",  MATCH_CSRRCI, MASK_CSRRCI, match_opcode, 0 },\n-{\"csrrw\",      0, INSN_CLASS_I,   \"d,E,s\",  MATCH_CSRRW, MASK_CSRRW, match_opcode, 0 },\n-{\"csrrw\",      0, INSN_CLASS_I,   \"d,E,Z\",  MATCH_CSRRWI, MASK_CSRRWI, match_opcode, INSN_ALIAS },\n-{\"csrrs\",      0, INSN_CLASS_I,   \"d,E,s\",  MATCH_CSRRS, MASK_CSRRS, match_opcode, 0 },\n-{\"csrrs\",      0, INSN_CLASS_I,   \"d,E,Z\",  MATCH_CSRRSI, MASK_CSRRSI, match_opcode, INSN_ALIAS },\n-{\"csrrc\",      0, INSN_CLASS_I,   \"d,E,s\",  MATCH_CSRRC, MASK_CSRRC, match_opcode, 0 },\n-{\"csrrc\",      0, INSN_CLASS_I,   \"d,E,Z\",  MATCH_CSRRCI, MASK_CSRRCI, match_opcode, INSN_ALIAS },\n+{\"csrr\",       0, INSN_CLASS_ZICSR,   \"d,E\",  MATCH_CSRRS, MASK_CSRRS | MASK_RS1, match_opcode, INSN_ALIAS },\n+{\"csrwi\",      0, INSN_CLASS_ZICSR,   \"E,Z\",  MATCH_CSRRWI, MASK_CSRRWI | MASK_RD, match_opcode, INSN_ALIAS },\n+{\"csrsi\",      0, INSN_CLASS_ZICSR,   \"E,Z\",  MATCH_CSRRSI, MASK_CSRRSI | MASK_RD, match_opcode, INSN_ALIAS },\n+{\"csrci\",      0, INSN_CLASS_ZICSR,   \"E,Z\",  MATCH_CSRRCI, MASK_CSRRCI | MASK_RD, match_opcode, INSN_ALIAS },\n+{\"csrw\",       0, INSN_CLASS_ZICSR,   \"E,s\",  MATCH_CSRRW, MASK_CSRRW | MASK_RD, match_opcode, INSN_ALIAS },\n+{\"csrw\",       0, INSN_CLASS_ZICSR,   \"E,Z\",  MATCH_CSRRWI, MASK_CSRRWI | MASK_RD, match_opcode, INSN_ALIAS },\n+{\"csrs\",       0, INSN_CLASS_ZICSR,   \"E,s\",  MATCH_CSRRS, MASK_CSRRS | MASK_RD, match_opcode, INSN_ALIAS },\n+{\"csrs\",       0, INSN_CLASS_ZICSR,   \"E,Z\",  MATCH_CSRRSI, MASK_CSRRSI | MASK_RD, match_opcode, INSN_ALIAS },\n+{\"csrc\",       0, INSN_CLASS_ZICSR,   \"E,s\",  MATCH_CSRRC, MASK_CSRRC | MASK_RD, match_opcode, INSN_ALIAS },\n+{\"csrc\",       0, INSN_CLASS_ZICSR,   \"E,Z\",  MATCH_CSRRCI, MASK_CSRRCI | MASK_RD, match_opcode, INSN_ALIAS },\n+{\"csrrwi\",     0, INSN_CLASS_ZICSR,   \"d,E,Z\",  MATCH_CSRRWI, MASK_CSRRWI, match_opcode, 0 },\n+{\"csrrsi\",     0, INSN_CLASS_ZICSR,   \"d,E,Z\",  MATCH_CSRRSI, MASK_CSRRSI, match_opcode, 0 },\n+{\"csrrci\",     0, INSN_CLASS_ZICSR,   \"d,E,Z\",  MATCH_CSRRCI, MASK_CSRRCI, match_opcode, 0 },\n+{\"csrrw\",      0, INSN_CLASS_ZICSR,   \"d,E,s\",  MATCH_CSRRW, MASK_CSRRW, match_opcode, 0 },\n+{\"csrrw\",      0, INSN_CLASS_ZICSR,   \"d,E,Z\",  MATCH_CSRRWI, MASK_CSRRWI, match_opcode, INSN_ALIAS },\n+{\"csrrs\",      0, INSN_CLASS_ZICSR,   \"d,E,s\",  MATCH_CSRRS, MASK_CSRRS, match_opcode, 0 },\n+{\"csrrs\",      0, INSN_CLASS_ZICSR,   \"d,E,Z\",  MATCH_CSRRSI, MASK_CSRRSI, match_opcode, INSN_ALIAS },\n+{\"csrrc\",      0, INSN_CLASS_ZICSR,   \"d,E,s\",  MATCH_CSRRC, MASK_CSRRC, match_opcode, 0 },\n+{\"csrrc\",      0, INSN_CLASS_ZICSR,   \"d,E,Z\",  MATCH_CSRRCI, MASK_CSRRCI, match_opcode, INSN_ALIAS },\n {\"uret\",       0, INSN_CLASS_I,   \"\",     MATCH_URET, MASK_URET, match_opcode, 0 },\n {\"sret\",       0, INSN_CLASS_I,   \"\",     MATCH_SRET, MASK_SRET, match_opcode, 0 },\n {\"hret\",       0, INSN_CLASS_I,   \"\",     MATCH_HRET, MASK_HRET, match_opcode, 0 },"
    }
  ]
}