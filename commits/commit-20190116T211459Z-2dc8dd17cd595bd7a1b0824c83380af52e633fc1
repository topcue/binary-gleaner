{
  "sha": "2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmRjOGRkMTdjZDU5NWJkN2ExYjA4MjRjODMzODBhZjUyZTYzM2ZjMQ==",
  "commit": {
    "author": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2019-01-16T21:14:59Z"
    },
    "committer": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2019-01-16T21:14:59Z"
    },
    "message": "RISC-V: Support ELF attribute for gas and readelf.\n\n\t2019-01-16  Kito Cheng  <kito@andestech.com>\n\t\t    Nelson Chu  <nelson@andestech.com>\n\n\tbfd/\n\t* elfnn-riscv.c (riscv_elf_obj_attrs_arg_type): New.\n\t(elf_backend_obj_attrs_vendor): Define.\n\t(elf_backend_obj_attrs_section_type): Likewise.\n\t(elf_backend_obj_attrs_section): Likewise.\n\t(elf_backend_obj_attrs_arg_type): Define as\n\triscv_elf_obj_attrs_arg_type.\n\t* elfxx-riscv.c (riscv_estimate_digit): New.\n\t(riscv_estimate_arch_strlen1): Likewise.\n\t(riscv_estimate_arch_strlen): Likewise.\n\t(riscv_arch_str1): Likewise.\n\t(riscv_arch_str): Likewise.\n\t* elfxx-riscv.h (riscv_arch_str): Declare.\n\tbinutils/\n\t* readelf.c (get_riscv_section_type_name): New function.\n\t(get_section_type_name): Add handler for RISC-V.\n\t(riscv_attr_tag_t): Declare.\n\t(riscv_attr_tag): New.\n\t(display_riscv_attribute): New function.\n\t(process_attributes): Add handler for RISC-V.\n\t* testsuite/binutils-all/strip-3.d: Remove .riscv.attribute\n\tsection.\n\tgas/\n\t* config/tc-riscv.c (DEFAULT_RISCV_ATTR): Define to 0 if not defined.\n\t(riscv_set_options): Add `arch_attr` field.\n\t(riscv_opts): Set default value for arch_attr.\n\t(riscv_write_out_arch_attr): New.\n\t(riscv_set_public_attributes): Likewise.\n\t(riscv_md_end): Likewise.\n\t(riscv_convert_symbolic_attribute): Likewise.\n\t(s_riscv_attribute): Likewise.\n\t(explicit_arch_attr): Likewise.\n\t(riscv_pseudo_table): Add .attribute to the table.\n\t(options): Add OPTION_ARCH_ATTR and OPTION_NO_ARCH_ATTR\n\tenumeration constants.\n\t(md_longopts): Add `march-attr' and `mno-arch-attr' options.\n\t(md_parse_option): Handle the new options.\n\t(md_show_usage): Document the `march-attr' option.\n\t* config/tc-riscv.h (md_end): Define as riscv_md_end\n\t(riscv_md_end): Declare.\n\t(CONVERT_SYMBOLIC_ATTRIBUTE): Define as\n\triscv_convert_symbolic_attribute.\n\t(riscv_convert_symbolic_attribute): Declare.\n\t(start_assemble): Declare.\n\t* testsuite/gas/elf/elf.exp: Adjust test case for section2.e.\n\t* testsuite/gas/elf/section2.e-riscv: New.\n\t* testsuite/gas/riscv/attribute-01.d: New test\n\t* testsuite/gas/riscv/attribute-02.d: Likewise.\n\t* testsuite/gas/riscv/attribute-03.d: Likewise.\n\t* testsuite/gas/riscv/attribute-04.d: Likewise.\n\t* testsuite/gas/riscv/attribute-04.s: Likewise.\n\t* testsuite/gas/riscv/attribute-05.d: Likewise.\n\t* testsuite/gas/riscv/attribute-05.s: Likewise.\n\t* testsuite/gas/riscv/attribute-06.d: Likewise.\n\t* testsuite/gas/riscv/attribute-06.s: Likewise.\n\t* testsuite/gas/riscv/attribute-07.d: Likewise.\n\t* testsuite/gas/riscv/attribute-07.s: Likewise.\n\t* testsuite/gas/riscv/attribute-08.d: Likewise.\n\t* testsuite/gas/riscv/attribute-08.s: Likewise.\n\t* testsuite/gas/riscv/attribute-unknown.d: Likewise.\n\t* testsuite/gas/riscv/attribute-unknown.s: Likewise.\n\t* testsuite/gas/riscv/empty.l: Likewise.\n\t* doc/c-riscv.texi (.attribute): Add documentation.\n\t* configure.ac (--enable-default-riscv-attribute): New options.\n\t* configure: Re-generate.\n\t* config.in: Re-generate.\n\tinclude/\n\t* elf/riscv.h (SHT_RISCV_ATTRIBUTES): Define.\n\t(Tag_RISCV_arch): Likewise.\n\t(Tag_RISCV_priv_spec): Likewise.\n\t(Tag_RISCV_priv_spec_minor): Likewise.\n\t(Tag_RISCV_priv_spec_revision): Likewise.\n\t(Tag_RISCV_unaligned_access): Likewise.\n\t(Tag_RISCV_stack_align): Likewise.",
    "tree": {
      "sha": "b8544b528899d0a68c41c4e2c12236b3a18f30eb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b8544b528899d0a68c41c4e2c12236b3a18f30eb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "7516c26f867b8c235f28a4d449efb9990125e0a1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7516c26f867b8c235f28a4d449efb9990125e0a1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7516c26f867b8c235f28a4d449efb9990125e0a1"
    }
  ],
  "stats": {
    "total": 661,
    "additions": 654,
    "deletions": 7
  },
  "files": [
    {
      "sha": "cea6d704d37d86c3783ec6957970566dd60adf11",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -1,3 +1,19 @@\n+2019-01-16  Kito Cheng  <kito@andestech.com>\n+\t    Nelson Chu  <nelson@andestech.com>\n+\n+\t* elfnn-riscv.c (riscv_elf_obj_attrs_arg_type): New.\n+\t(elf_backend_obj_attrs_vendor): Define.\n+\t(elf_backend_obj_attrs_section_type): Likewise.\n+\t(elf_backend_obj_attrs_section): Likewise.\n+\t(elf_backend_obj_attrs_arg_type): Define as\n+\triscv_elf_obj_attrs_arg_type.\n+\t* elfxx-riscv.c (riscv_estimate_digit): New.\n+\t(riscv_estimate_arch_strlen1): Likewise.\n+\t(riscv_estimate_arch_strlen): Likewise.\n+\t(riscv_arch_str1): Likewise.\n+\t(riscv_arch_str): Likewise.\n+\t* elfxx-riscv.h (riscv_arch_str): Declare.\n+\n 2019-01-14  John Darrington <john@darrington.wattle.id.au>\n \n \t* bfd-in2.h [BFD_RELOC_S12Z_OPR]: New reloc."
    },
    {
      "sha": "5430f61a7b87844f761db7c353d134d24777dbb2",
      "filename": "bfd/elfnn-riscv.c",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/bfd/elfnn-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/bfd/elfnn-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-riscv.c?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -3654,6 +3654,14 @@ riscv_elf_object_p (bfd *abfd)\n   return TRUE;\n }\n \n+/* Determine whether an object attribute tag takes an integer, a\n+   string or both.  */\n+\n+static int\n+riscv_elf_obj_attrs_arg_type (int tag)\n+{\n+  return (tag & 1) != 0 ? ATTR_TYPE_FLAG_STR_VAL : ATTR_TYPE_FLAG_INT_VAL;\n+}\n \n #define TARGET_LITTLE_SYM\t\triscv_elfNN_vec\n #define TARGET_LITTLE_NAME\t\t\"elfNN-littleriscv\"\n@@ -3696,4 +3704,13 @@ riscv_elf_object_p (bfd *abfd)\n #define elf_backend_rela_normal\t\t1\n #define elf_backend_default_execstack\t0\n \n+#undef  elf_backend_obj_attrs_vendor\n+#define elf_backend_obj_attrs_vendor            \"riscv\"\n+#undef  elf_backend_obj_attrs_arg_type\n+#define elf_backend_obj_attrs_arg_type          riscv_elf_obj_attrs_arg_type\n+#undef  elf_backend_obj_attrs_section_type\n+#define elf_backend_obj_attrs_section_type      SHT_RISCV_ATTRIBUTES\n+#undef  elf_backend_obj_attrs_section\n+#define elf_backend_obj_attrs_section           \".riscv.attributes\"\n+\n #include \"elfNN-target.h\""
    },
    {
      "sha": "29592db97814763c61a0a62aad16a5f0ec3c1801",
      "filename": "bfd/elfxx-riscv.c",
      "status": "modified",
      "additions": 89,
      "deletions": 0,
      "changes": 89,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/bfd/elfxx-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/bfd/elfxx-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-riscv.c?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -1484,3 +1484,92 @@ riscv_release_subset_list (riscv_subset_list_t *subset_list)\n \n   subset_list->tail = NULL;\n }\n+\n+/* Return the number of digits for the input.  */\n+\n+static size_t\n+riscv_estimate_digit (unsigned num)\n+{\n+  size_t digit = 0;\n+  if (num == 0)\n+    return 1;\n+\n+  for (digit = 0; num ; num /= 10)\n+    digit++;\n+\n+  return digit;\n+}\n+\n+/* Auxiliary function to estimate string length of subset list.  */\n+\n+static size_t\n+riscv_estimate_arch_strlen1 (const riscv_subset_t *subset)\n+{\n+  if (subset == NULL)\n+    return 6; /* For rv32/rv64/rv128 and string terminator.  */\n+\n+  return riscv_estimate_arch_strlen1 (subset->next)\n+\t + strlen (subset->name)\n+\t + riscv_estimate_digit (subset->major_version)\n+\t + 1 /* For version seperator: 'p'.  */\n+\t + riscv_estimate_digit (subset->minor_version)\n+\t + 1 /* For underscore.  */;\n+}\n+\n+/* Estimate the string length of this subset list.  */\n+\n+static size_t\n+riscv_estimate_arch_strlen (const riscv_subset_list_t *subset_list)\n+{\n+  return riscv_estimate_arch_strlen1 (subset_list->head);\n+}\n+\n+/* Auxiliary function to convert subset info to string.  */\n+\n+static void\n+riscv_arch_str1 (riscv_subset_t *subset,\n+\t\t char *attr_str, char *buf, size_t bufsz)\n+{\n+  const char *underline = \"_\";\n+\n+  if (subset == NULL)\n+    return;\n+\n+  /* No underline between rvXX and i/e.   */\n+  if ((strcasecmp (subset->name, \"i\") == 0)\n+      || (strcasecmp (subset->name, \"e\") == 0))\n+    underline = \"\";\n+\n+  snprintf (buf, bufsz, \"%s%s%dp%d\",\n+\t    underline,\n+            subset->name,\n+            subset->major_version,\n+            subset->minor_version);\n+\n+  strncat (attr_str, buf, bufsz);\n+\n+  /* Skip 'i' extension after 'e'.  */\n+  if ((strcasecmp (subset->name, \"e\") == 0)\n+      && subset->next\n+      && (strcasecmp (subset->next->name, \"i\") == 0))\n+    riscv_arch_str1 (subset->next->next, attr_str, buf, bufsz);\n+  else\n+    riscv_arch_str1 (subset->next, attr_str, buf, bufsz);\n+}\n+\n+/* Convert subset info to string with explicit version info.  */\n+\n+char *\n+riscv_arch_str (unsigned xlen, const riscv_subset_list_t *subset)\n+{\n+  size_t arch_str_len = riscv_estimate_arch_strlen (subset);\n+  char *attr_str = xmalloc (arch_str_len);\n+  char *buf = xmalloc (arch_str_len);\n+\n+  snprintf (attr_str, arch_str_len, \"rv%u\", xlen);\n+\n+  riscv_arch_str1 (subset->head, attr_str, buf, arch_str_len);\n+  free (buf);\n+\n+  return attr_str;\n+}"
    },
    {
      "sha": "19f7bd2ecc901e24526f34da623deed65b16cfae",
      "filename": "bfd/elfxx-riscv.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/bfd/elfxx-riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/bfd/elfxx-riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-riscv.h?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -83,3 +83,6 @@ riscv_supported_std_ext (void);\n \n extern void\n riscv_release_subset_list (riscv_subset_list_t *);\n+\n+extern char *\n+riscv_arch_str (unsigned, const riscv_subset_list_t *);"
    },
    {
      "sha": "bec3ddcd138c7a0994e6e3a637472f6fb518cad3",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -1,3 +1,15 @@\n+2019-01-16  Kito Cheng  <kito@andestech.com>\n+\t    Nelson Chu  <nelson@andestech.com>\n+\n+\t* readelf.c (get_riscv_section_type_name): New function.\n+\t(get_section_type_name): Add handler for RISC-V.\n+\t(riscv_attr_tag_t): Declare.\n+\t(riscv_attr_tag): New.\n+\t(display_riscv_attribute): New function.\n+\t(process_attributes): Add handler for RISC-V.\n+\t* testsuite/binutils-all/strip-3.d: Remove .riscv.attribute\n+\tsection.\n+\n 2019-01-10  Nick Clifton  <nickc@redhat.com>\n \n \tPR 23963"
    },
    {
      "sha": "b13eb6a43ba34f6346a2a080573d972540c91010",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 100,
      "deletions": 0,
      "changes": 100,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -4204,6 +4204,16 @@ get_v850_section_type_name (unsigned int sh_type)\n     }\n }\n \n+static const char *\n+get_riscv_section_type_name (unsigned int sh_type)\n+{\n+  switch (sh_type)\n+    {\n+    case SHT_RISCV_ATTRIBUTES:  return \"RISCV_ATTRIBUTES\";\n+    default: return NULL;\n+    }\n+}\n+\n static const char *\n get_section_type_name (Filedata * filedata, unsigned int sh_type)\n {\n@@ -4284,6 +4294,9 @@ get_section_type_name (Filedata * filedata, unsigned int sh_type)\n \t    case EM_CYGNUS_V850:\n \t      result = get_v850_section_type_name (sh_type);\n \t      break;\n+\t    case EM_RISCV:\n+\t      result = get_riscv_section_type_name (sh_type);\n+\t      break;\n \t    default:\n \t      result = NULL;\n \t      break;\n@@ -15362,6 +15375,88 @@ display_msp430x_attribute (unsigned char * p,\n   return p;\n }\n \n+struct riscv_attr_tag_t {\n+  const char *name;\n+  int tag;\n+};\n+\n+static struct riscv_attr_tag_t riscv_attr_tag[] =\n+{\n+#define T(tag) {\"Tag_RISCV_\" #tag, Tag_RISCV_##tag}\n+  T(arch),\n+  T(priv_spec),\n+  T(priv_spec_minor),\n+  T(priv_spec_revision),\n+  T(unaligned_access),\n+  T(stack_align),\n+#undef T\n+};\n+\n+static unsigned char *\n+display_riscv_attribute (unsigned char *p,\n+\t\t\t const unsigned char * const end)\n+{\n+  unsigned int len;\n+  int val;\n+  int tag;\n+  struct riscv_attr_tag_t *attr = NULL;\n+  unsigned i;\n+\n+  tag = read_uleb128 (p, &len, end);\n+  p += len;\n+\n+  /* Find the name of attribute. */\n+  for (i = 0; i < ARRAY_SIZE (riscv_attr_tag); i++)\n+    {\n+      if (riscv_attr_tag[i].tag == tag)\n+\t{\n+\t  attr = &riscv_attr_tag[i];\n+\t  break;\n+\t}\n+    }\n+\n+  if (attr)\n+    printf (\"  %s: \", attr->name);\n+  else\n+    return display_tag_value (tag, p, end);\n+\n+  switch (tag)\n+    {\n+    case Tag_RISCV_priv_spec:\n+    case Tag_RISCV_priv_spec_minor:\n+    case Tag_RISCV_priv_spec_revision:\n+      val = read_uleb128 (p, &len, end);\n+      p += len;\n+      printf (_(\"%d\\n\"), val);\n+      break;\n+    case Tag_RISCV_unaligned_access:\n+      val = read_uleb128 (p, &len, end);\n+      p += len;\n+      switch (val)\n+\t{\n+\tcase 0:\n+\t  printf (_(\"No unaligned access\\n\"));\n+\t  break;\n+\tcase 1:\n+\t  printf (_(\"Unaligned access\\n\"));\n+\t  break;\n+\t}\n+      break;\n+    case Tag_RISCV_stack_align:\n+      val = read_uleb128 (p, &len, end);\n+      p += len;\n+      printf (_(\"%d-bytes\\n\"), val);\n+      break;\n+    case Tag_RISCV_arch:\n+      p = display_tag_value (-1, p, end);\n+      break;\n+    default:\n+      return display_tag_value (tag, p, end);\n+    }\n+\n+  return p;\n+}\n+\n static bfd_boolean\n process_attributes (Filedata * filedata,\n \t\t    const char * public_name,\n@@ -18896,6 +18991,11 @@ process_arch_specific (Filedata * filedata)\n \t\t\t\tdisplay_msp430x_attribute,\n \t\t\t\tdisplay_generic_attribute);\n \n+    case EM_RISCV:\n+     return process_attributes (filedata, \"riscv\", SHT_RISCV_ATTRIBUTES,\n+\t\t\t\tdisplay_riscv_attribute,\n+\t\t\t\tdisplay_generic_attribute);\n+\n     case EM_NDS32:\n       return process_nds32_specific (filedata);\n "
    },
    {
      "sha": "2a886d2dcc6f7c27eef9acdd4e7b0e705c044cc6",
      "filename": "binutils/testsuite/binutils-all/strip-3.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/binutils/testsuite/binutils-all/strip-3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/binutils/testsuite/binutils-all/strip-3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/strip-3.d?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -1,6 +1,6 @@\n #PROG: strip\n #source: empty.s\n-#strip: -R .text -R .data -R .bss -R .ARM.attributes -R .reginfo -R .gnu.attributes -R .MIPS.abiflags -R .pdr -R .xtensa.info -R .ARC.attributes -R .note.gnu.property\n+#strip: -R .text -R .data -R .bss -R .ARM.attributes -R .reginfo -R .gnu.attributes -R .MIPS.abiflags -R .pdr -R .xtensa.info -R .ARC.attributes -R .note.gnu.property -R .riscv.attributes\n #readelf: -S --wide\n #name: strip empty file\n #target: *-*-linux* *-*-gnu* arm*-*-uclinuxfdpiceabi"
    },
    {
      "sha": "3228342d4b789318ae890768ee65c099ad8d2096",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -1,3 +1,50 @@\n+2019-01-16  Kito Cheng  <kito@andestech.com>\n+\t    Nelson Chu  <nelson@andestech.com>\n+\n+\t* config/tc-riscv.c (DEFAULT_RISCV_ATTR): Define to 0 if not defined.\n+\t(riscv_set_options): Add `arch_attr` field.\n+\t(riscv_opts): Set default value for arch_attr.\n+\t(riscv_write_out_arch_attr): New.\n+\t(riscv_set_public_attributes): Likewise.\n+\t(riscv_md_end): Likewise.\n+\t(riscv_convert_symbolic_attribute): Likewise.\n+\t(s_riscv_attribute): Likewise.\n+\t(explicit_arch_attr): Likewise.\n+\t(riscv_pseudo_table): Add .attribute to the table.\n+\t(options): Add OPTION_ARCH_ATTR and OPTION_NO_ARCH_ATTR\n+\tenumeration constants.\n+\t(md_longopts): Add `march-attr' and `mno-arch-attr' options.\n+\t(md_parse_option): Handle the new options.\n+\t(md_show_usage): Document the `march-attr' option.\n+\t* config/tc-riscv.h (md_end): Define as riscv_md_end\n+\t(riscv_md_end): Declare.\n+\t(CONVERT_SYMBOLIC_ATTRIBUTE): Define as\n+\triscv_convert_symbolic_attribute.\n+\t(riscv_convert_symbolic_attribute): Declare.\n+\t(start_assemble): Declare.\n+\t* testsuite/gas/elf/elf.exp: Adjust test case for section2.e.\n+\t* testsuite/gas/elf/section2.e-riscv: New.\n+\t* testsuite/gas/riscv/attribute-01.d: New test\n+\t* testsuite/gas/riscv/attribute-02.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-03.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-04.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-04.s: Likewise.\n+\t* testsuite/gas/riscv/attribute-05.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-05.s: Likewise.\n+\t* testsuite/gas/riscv/attribute-06.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-06.s: Likewise.\n+\t* testsuite/gas/riscv/attribute-07.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-07.s: Likewise.\n+\t* testsuite/gas/riscv/attribute-08.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-08.s: Likewise.\n+\t* testsuite/gas/riscv/attribute-unknown.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-unknown.s: Likewise.\n+\t* testsuite/gas/riscv/empty.l: Likewise.\n+\t* doc/c-riscv.texi (.attribute): Add documentation.\n+\t* configure.ac (--enable-default-riscv-attribute): New options.\n+\t* configure: Re-generate.\n+\t* config.in: Re-generate.\n+\n 2019-01-16  John Darrington <john@darrington.wattle.id.au>\n \n \t* config/tc-s12z.c (lex_reg_name): Compare the length of the strings"
    },
    {
      "sha": "e4c55700afb21fbec15aff9e8b3dc66b2e1771de",
      "filename": "gas/config.in",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config.in?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -50,6 +50,10 @@\n /* Define to 1 if you want to generate x86 relax relocations by default. */\n #undef DEFAULT_GENERATE_X86_RELAX_RELOCATIONS\n \n+/* Define to 1 if you want to generate RISC-V arch attribute by default.\n+   */\n+#undef DEFAULT_RISCV_ATTR\n+\n /* Define to 1 if you want to generate GNU x86 used ISA and feature properties\n    by default. */\n #undef DEFAULT_X86_USED_NOTE"
    },
    {
      "sha": "993161568ffa96f3b9b5328c8ed85b692993e357",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 127,
      "deletions": 0,
      "changes": 127,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -59,6 +59,10 @@ struct riscv_cl_insn\n #define DEFAULT_ARCH \"riscv64\"\n #endif\n \n+#ifndef DEFAULT_RISCV_ATTR\n+#define DEFAULT_RISCV_ATTR 0\n+#endif\n+\n static const char default_arch[] = DEFAULT_ARCH;\n \n static unsigned xlen = 0; /* width of an x-register */\n@@ -78,6 +82,7 @@ struct riscv_set_options\n   int rvc; /* Generate RVC code.  */\n   int rve; /* Generate RVE code.  */\n   int relax; /* Emit relocs the linker is allowed to relax.  */\n+  int arch_attr; /* Emit arch attribute.  */\n };\n \n static struct riscv_set_options riscv_opts =\n@@ -86,6 +91,7 @@ static struct riscv_set_options riscv_opts =\n   0,\t/* rvc */\n   0,\t/* rve */\n   1,\t/* relax */\n+  DEFAULT_RISCV_ATTR, /* arch_attr */\n };\n \n static void\n@@ -170,6 +176,12 @@ const char EXP_CHARS[] = \"eE\";\n /* or    0d1.2345e12 */\n const char FLT_CHARS[] = \"rRsSfFdDxXpP\";\n \n+/* Indicate we are already assemble any instructions or not.  */\n+static bfd_boolean start_assemble = FALSE;\n+\n+/* Indicate arch attribute is explictly set.  */\n+static bfd_boolean explicit_arch_attr = FALSE;\n+\n /* Macros for encoding relaxation state for RVC branches and far jumps.  */\n #define RELAX_BRANCH_ENCODE(uncond, rvc, length)\t\\\n   ((relax_substateT) \t\t\t\t\t\\\n@@ -2097,6 +2109,8 @@ md_assemble (char *str)\n \n   const char *error = riscv_ip (str, &insn, &imm_expr, &imm_reloc, op_hash);\n \n+  start_assemble = TRUE;\n+\n   if (error)\n     {\n       as_bad (\"%s `%s'\", error, str);\n@@ -2131,6 +2145,8 @@ enum options\n   OPTION_MABI,\n   OPTION_RELAX,\n   OPTION_NO_RELAX,\n+  OPTION_ARCH_ATTR,\n+  OPTION_NO_ARCH_ATTR,\n   OPTION_END_OF_ENUM\n };\n \n@@ -2143,6 +2159,8 @@ struct option md_longopts[] =\n   {\"mabi\", required_argument, NULL, OPTION_MABI},\n   {\"mrelax\", no_argument, NULL, OPTION_RELAX},\n   {\"mno-relax\", no_argument, NULL, OPTION_NO_RELAX},\n+  {\"march-attr\", no_argument, NULL, OPTION_ARCH_ATTR},\n+  {\"mno-arch-attr\", no_argument, NULL, OPTION_NO_ARCH_ATTR},\n \n   {NULL, no_argument, NULL, 0}\n };\n@@ -2213,6 +2231,14 @@ md_parse_option (int c, const char *arg)\n       riscv_opts.relax = FALSE;\n       break;\n \n+    case OPTION_ARCH_ATTR:\n+      riscv_opts.arch_attr = TRUE;\n+      break;\n+\n+    case OPTION_NO_ARCH_ATTR:\n+      riscv_opts.arch_attr = FALSE;\n+      break;\n+\n     default:\n       return 0;\n     }\n@@ -2948,6 +2974,8 @@ RISC-V options:\\n\\\n   -mabi=ABI      set the RISC-V ABI\\n\\\n   -mrelax        enable relax (default)\\n\\\n   -mno-relax     disable relax\\n\\\n+  -march-attr    generate RISC-V arch attribute\\n\\\n+  -mno-arch-attr don't generate RISC-V arch attribute\\n\\\n \"));\n }\n \n@@ -3031,6 +3059,104 @@ s_riscv_insn (int x ATTRIBUTE_UNUSED)\n   demand_empty_rest_of_line ();\n }\n \n+/* Update arch attributes.  */\n+\n+static void\n+riscv_write_out_arch_attr (void)\n+{\n+  const char *arch_str = riscv_arch_str (xlen, &riscv_subsets);\n+\n+  bfd_elf_add_proc_attr_string (stdoutput, Tag_RISCV_arch, arch_str);\n+\n+  xfree ((void *)arch_str);\n+}\n+\n+/* Add the default contents for the .riscv.attributes section.  */\n+\n+static void\n+riscv_set_public_attributes (void)\n+{\n+  if (riscv_opts.arch_attr || explicit_arch_attr)\n+    /* Re-write arch attribute to normalize the arch string.  */\n+    riscv_write_out_arch_attr ();\n+}\n+\n+/* Called after all assembly has been done.  */\n+\n+void\n+riscv_md_end (void)\n+{\n+  riscv_set_public_attributes ();\n+}\n+\n+/* Given a symbolic attribute NAME, return the proper integer value.\n+   Returns -1 if the attribute is not known.  */\n+\n+int\n+riscv_convert_symbolic_attribute (const char *name)\n+{\n+  static const struct\n+  {\n+    const char * name;\n+    const int    tag;\n+  }\n+  attribute_table[] =\n+    {\n+      /* When you modify this table you should\n+\t also modify the list in doc/c-riscv.texi.  */\n+#define T(tag) {#tag, Tag_RISCV_##tag},  {\"Tag_RISCV_\" #tag, Tag_RISCV_##tag}\n+      T(arch),\n+      T(priv_spec),\n+      T(priv_spec_minor),\n+      T(priv_spec_revision),\n+      T(unaligned_access),\n+      T(stack_align),\n+#undef T\n+    };\n+\n+  unsigned int i;\n+\n+  if (name == NULL)\n+    return -1;\n+\n+  for (i = 0; i < ARRAY_SIZE (attribute_table); i++)\n+    if (strcmp (name, attribute_table[i].name) == 0)\n+      return attribute_table[i].tag;\n+\n+  return -1;\n+}\n+\n+/* Parse a .attribute directive.  */\n+\n+static void\n+s_riscv_attribute (int ignored ATTRIBUTE_UNUSED)\n+{\n+  int tag = obj_elf_vendor_attribute (OBJ_ATTR_PROC);\n+\n+  if (tag == Tag_RISCV_arch)\n+    {\n+      unsigned old_xlen = xlen;\n+\n+      explicit_arch_attr = TRUE;\n+      obj_attribute *attr;\n+      attr = elf_known_obj_attributes_proc (stdoutput);\n+      if (!start_assemble)\n+\triscv_set_arch (attr[Tag_RISCV_arch].s);\n+      else\n+\tas_fatal (_(\".attribute arch must set before any instructions\"));\n+\n+      if (old_xlen != xlen)\n+\t{\n+\t  /* We must re-init bfd again if xlen is changed.  */\n+\t  unsigned long mach = xlen == 64 ? bfd_mach_riscv64 : bfd_mach_riscv32;\n+\t  bfd_find_target (riscv_target_format (), stdoutput);\n+\n+\t  if (! bfd_set_arch_mach (stdoutput, bfd_arch_riscv, mach))\n+\t    as_warn (_(\"Could not set architecture and machine\"));\n+\t}\n+    }\n+}\n+\n /* Pseudo-op table.  */\n \n static const pseudo_typeS riscv_pseudo_table[] =\n@@ -3046,6 +3172,7 @@ static const pseudo_typeS riscv_pseudo_table[] =\n   {\"uleb128\", s_riscv_leb128, 0},\n   {\"sleb128\", s_riscv_leb128, 1},\n   {\"insn\", s_riscv_insn, 0},\n+  {\"attribute\", s_riscv_attribute, 0},\n \n   { NULL, NULL, 0 },\n };"
    },
    {
      "sha": "e1dd508c30bb7ed2d8ec4fbb38387e8142fc7ae3",
      "filename": "gas/config/tc-riscv.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/config/tc-riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/config/tc-riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.h?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -120,4 +120,10 @@ extern void riscv_elf_final_processing (void);\n /* Adjust debug_line after relaxation.  */\n #define DWARF2_USE_FIXED_ADVANCE_PC 1\n \n+#define md_end riscv_md_end\n+#define CONVERT_SYMBOLIC_ATTRIBUTE riscv_convert_symbolic_attribute\n+\n+extern void riscv_md_end (void);\n+extern int riscv_convert_symbolic_attribute (const char *);\n+\n #endif /* TC_RISCV */"
    },
    {
      "sha": "64de9f19da510ef21636a8510c2e9951c87aef04",
      "filename": "gas/configure",
      "status": "modified",
      "additions": 32,
      "deletions": 2,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/configure?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -809,6 +809,7 @@ enable_x86_relax_relocations\n enable_elf_stt_common\n enable_generate_build_notes\n enable_x86_used_note\n+enable_default_riscv_attribute\n enable_werror\n enable_build_warnings\n with_cpu\n@@ -1471,6 +1472,8 @@ Optional Features:\n                           generate GNU Build notes if none are provided by the\n                           input\n   --enable-x86-used-note  generate GNU x86 used ISA and feature properties\n+  --enable-default-riscv-attribute\n+                          generate RISC-V arch attribute by default\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings\n   --disable-nls           do not use Native Language Support\n@@ -11337,7 +11340,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11340 \"configure\"\n+#line 11343 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11443,7 +11446,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11446 \"configure\"\n+#line 11449 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12125,6 +12128,16 @@ if test \"${enable_x86_used_note+set}\" = set; then :\n esac\n fi\n \n+# Decide if the RISC-V ELF assembler should default to generating attribute.\n+ac_default_generate_riscv_attr=unset\n+# Provide a configuration option to override the default.\n+# Check whether --enable-default-riscv-attribute was given.\n+if test \"${enable_default_riscv_attribute+set}\" = set; then :\n+  enableval=$enable_default_riscv_attribute; case \"${enableval}\" in\n+  yes)  ac_default_generate_riscv_attr=1 ;;\n+  no)   ac_default_generate_riscv_attr=0 ;;\n+esac\n+fi\n \n using_cgen=no\n \n@@ -13102,6 +13115,23 @@ cat >>confdefs.h <<_ACEOF\n _ACEOF\n \n \n+if test ${ac_default_generate_riscv_attr} = unset; then\n+    case ${target_os} in\n+      elf)\n+\tac_default_generate_riscv_attr=1\n+\t;;\n+      *)\n+\tac_default_generate_riscv_attr=0\n+\t;;\n+  esac\n+fi\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define DEFAULT_RISCV_ATTR $ac_default_generate_riscv_attr\n+_ACEOF\n+\n+\n if test x$ac_default_compressed_debug_sections = xyes ; then\n \n $as_echo \"#define DEFAULT_FLAG_COMPRESS_DEBUG 1\" >>confdefs.h"
    },
    {
      "sha": "105d708253a68e327a9a0bc5e2acd009deefb02e",
      "filename": "gas/configure.ac",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/configure.ac?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -125,6 +125,16 @@ AC_ARG_ENABLE(x86-used-note,\n   no)   ac_default_generate_x86_used_note=0 ;;\n esac])dnl\n \n+# Decide if the RISC-V ELF assembler should default to generating attribute.\n+ac_default_generate_riscv_attr=unset\n+# Provide a configuration option to override the default.\n+AC_ARG_ENABLE(default-riscv-attribute,\n+\t      AS_HELP_STRING([--enable-default-riscv-attribute],\n+\t      [generate RISC-V arch attribute by default]),\n+[case \"${enableval}\" in\n+  yes)  ac_default_generate_riscv_attr=1 ;;\n+  no)   ac_default_generate_riscv_attr=0 ;;\n+esac])dnl\n \n using_cgen=no\n \n@@ -663,6 +673,21 @@ AC_DEFINE_UNQUOTED(DEFAULT_X86_USED_NOTE,\n   [Define to 1 if you want to generate GNU x86 used ISA and feature\n    properties by default.])\n \n+if test ${ac_default_generate_riscv_attr} = unset; then\n+    case ${target_os} in\n+      elf)\n+\tac_default_generate_riscv_attr=1\n+\t;;\n+      *)\n+\tac_default_generate_riscv_attr=0\n+\t;;\n+  esac\n+fi\n+\n+AC_DEFINE_UNQUOTED(DEFAULT_RISCV_ATTR,\n+  $ac_default_generate_riscv_attr,\n+  [Define to 1 if you want to generate RISC-V arch attribute by default.])\n+\n if test x$ac_default_compressed_debug_sections = xyes ; then\n   AC_DEFINE(DEFAULT_FLAG_COMPRESS_DEBUG, 1, [Define if you want compressed debug sections by default.])\n fi"
    },
    {
      "sha": "42d1ce3e5f3cedf45c98a40abbf984b9ebd89dd0",
      "filename": "gas/doc/c-riscv.texi",
      "status": "modified",
      "additions": 53,
      "deletions": 0,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/doc/c-riscv.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/doc/c-riscv.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-riscv.texi?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -18,6 +18,7 @@\n * RISC-V-Options::        RISC-V Options\n * RISC-V-Directives::     RISC-V Directives\n * RISC-V-Formats::        RISC-V Instruction Formats\n+* RISC-V-ATTRIBUTE::      RISC-V Object Attribute\n @end menu\n \n @node RISC-V-Options\n@@ -168,6 +169,15 @@ instruction formats for @samp{.insn} (@ref{RISC-V-Formats}).\n For example, the instruction @samp{add a0, a1, a2} could be written as\n @samp{.insn r 0x33, 0, 0, a0, a1, a2}.\n \n+@cindex @code{.attribute} directive, RISC-V\n+@item .attribute @var{tag}, @var{value}\n+Set the object attribute @var{tag} to @var{value}.\n+\n+The @var{tag} is either an attribute number, or one of the following:\n+@code{Tag_RISCV_arch}, @code{Tag_RISCV_stack_align},\n+@code{Tag_RISCV_unaligned_access}, @code{Tag_RISCV_priv_spec},\n+@code{Tag_RISCV_priv_spec_minor}, @code{Tag_RISCV_priv_spec_revision}.\n+\n @end table\n \n @node RISC-V-Formats\n@@ -409,3 +419,46 @@ with the @samp{.insn} pseudo directive:\n \n For the complete list of all instruction format variants see\n The RISC-V Instruction Set Manual Volume I: User-Level ISA.\n+\n+@node RISC-V-ATTRIBUTE\n+@section RISC-V Object Attribute\n+@cindex Object Attribute, RISC-V\n+\n+RISC-V attributes have a string value if the tag number is odd and an integer\n+value if the tag number is even.\n+\n+@table @r\n+@item Tag_RISCV_stack_align (4)\n+Tag_RISCV_strict_align records the N-byte stack alignment for this object.  The\n+default value is 16 for RV32I or RV64I, and 4 for RV32E.\n+\n+The smallest value will be used if object files with different\n+Tag_RISCV_stack_align values are merged.\n+\n+@item Tag_RISCV_arch (5)\n+Tag_RISCV_arch contains a string for the target architecture taken from the\n+option @option{-march}.  Different architectures will be integrated into a\n+superset when object files are merged.\n+\n+Note that the version information of the target architecture must be presented\n+explicitly in the attribute and abbreviations must be expanded.  The version\n+information, if not given by @option{-march}, must be in accordance with the\n+default specified by the tool.  For example, the architecture @code{RV32I} has\n+to be recorded in the attribute as @code{RV32I2P0} in which @code{2P0} stands\n+for the default version of its base ISA.  On the other hand, the architecture\n+@code{RV32G} has to be presented as @code{RV32I2P0_M2P0_A2P0_F2P0_D2P0} in\n+which the abbreviation @code{G} is expanded to the @code{IMAFD} combination\n+with default versions of the standard extensions.\n+\n+@item Tag_RISCV_unaligned_access (6)\n+Tag_RISCV_unaligned_access is 0 for files that do not allow any unaligned\n+memory accesses, and 1 for files that do allow unaligned memory accesses.\n+\n+@item Tag_RISCV_priv_spec (8)\n+@item Tag_RISCV_priv_spec_minor (10)\n+@item Tag_RISCV_priv_spec_revision (12)\n+Tag_RISCV_priv_spec contains the major/minor/revision version information of\n+the privileged specification.  It will report errors if object files of\n+different privileged specification versions are merged.\n+\n+@end table"
    },
    {
      "sha": "d616d5de7662e9d88e47bf94f7858b5fdd6c9f34",
      "filename": "gas/testsuite/gas/elf/elf.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 4,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/elf/elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/elf/elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/elf.exp?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -76,6 +76,9 @@ if { [is_elf_format] } then {\n     if {[istarget \"rx-*-*\"]} then {\n \tset target_machine -rx\n     }\n+    if {[istarget \"riscv*-*-*\"]} then {\n+\tset target_machine -riscv\n+    }\n     if {[istarget \"v850*-*-*\"]} then {\n \tset target_machine -v850\n     }\n@@ -170,10 +173,16 @@ if { [is_elf_format] } then {\n     if {! [istarget \"h8300-*-*\"]} then {\n \t# The h8300 port issues a warning message for\n \t# new sections created without atrributes.\n-\tif  { [istarget \"i*86-*-*\"] || [istarget \"x86_64-*-*\"] } then {\n-\t    run_elf_list_test \"section2\" \"$target_machine\" \"-al -mx86-used-note=no\" \"-s\" \"\"\n-\t} {\n-\t    run_elf_list_test \"section2\" \"$target_machine\" \"-al\" \"-s\" \"\"\n+\tcase $target_triplet in {\n+\t    { i*86-*-* x86_64-*-* } {\n+\t\trun_elf_list_test \"section2\" \"$target_machine\" \"-al -mx86-used-note=no\" \"-s\" \"\"\n+\t    }\n+\t    { riscv*-*-* } {\n+\t\trun_elf_list_test \"section2\" \"$target_machine\" \"-al -march-attr\" \"-s\" \"\"\n+\t    }\n+\t    default {\n+\t\trun_elf_list_test \"section2\" \"$target_machine\" \"-al\" \"-s\" \"\"\n+\t    }\n \t}\n     }\n     run_dump_test \"section3\""
    },
    {
      "sha": "115bae2173da02d4ffb58e61fb1f17fa8bef570c",
      "filename": "gas/testsuite/gas/elf/section2.e-riscv",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/elf/section2.e-riscv",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/elf/section2.e-riscv",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section2.e-riscv?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1,9 @@\n+\n+Symbol table '.symtab' contains 6 entries:\n+ +Num: +Value +Size +Type +Bind +Vis +Ndx +Name\n+ +0: 0+0 +0 +NOTYPE +LOCAL +DEFAULT +UND \n+ +1: 0+0 +0 +SECTION +LOCAL +DEFAULT +1 \n+ +2: 0+0 +0 +SECTION +LOCAL +DEFAULT +2 \n+ +3: 0+0 +0 +SECTION +LOCAL +DEFAULT +3 \n+ +4: 0+0 +0 +SECTION +LOCAL +DEFAULT +4 \n+ +5: 0+0 +0 +SECTION +LOCAL +DEFAULT +5 "
    },
    {
      "sha": "e22773e22b86ff2c63f371b933a534da30130f88",
      "filename": "gas/testsuite/gas/riscv/attribute-01.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-01.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-01.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-01.d?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1,6 @@\n+#as: -march=rv32g -march-attr\n+#readelf: -A\n+#source: empty.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: \"rv32i2p0_m2p0_a2p0_f2p0_d2p0\""
    },
    {
      "sha": "bc3295be7effb785613a3c80210399d92865143f",
      "filename": "gas/testsuite/gas/riscv/attribute-02.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-02.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-02.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-02.d?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1,6 @@\n+#as: -march=rv32gxargle -march-attr\n+#readelf: -A\n+#source: empty.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: \"rv32i2p0_m2p0_a2p0_f2p0_d2p0_xargle2p0\""
    },
    {
      "sha": "78b706a73adcd3b102a47913fe1821d2b66dd25a",
      "filename": "gas/testsuite/gas/riscv/attribute-03.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-03.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-03.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-03.d?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1,6 @@\n+#as: -march=rv32gxargle_xfoo -march-attr\n+#readelf: -A\n+#source: empty.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: \"rv32i2p0_m2p0_a2p0_f2p0_d2p0_xargle2p0_xfoo2p0\""
    },
    {
      "sha": "c97bf03d5e4c1f65b8f15559886d2e8b69d935f7",
      "filename": "gas/testsuite/gas/riscv/attribute-04.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-04.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-04.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-04.d?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1,6 @@\n+#as: -march-attr\n+#readelf: -A\n+#source: attribute-04.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: \"rv32i2p0_m2p0_a2p0_f2p0_d2p0\""
    },
    {
      "sha": "26362277022ccdecdb8b26afcb9535fac5e0e774",
      "filename": "gas/testsuite/gas/riscv/attribute-04.s",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-04.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-04.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-04.s?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1 @@\n+\t.attribute arch,\"rv32g\""
    },
    {
      "sha": "f9b65f206b7867eafa7833af742c8b8324f2a499",
      "filename": "gas/testsuite/gas/riscv/attribute-05.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-05.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-05.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-05.d?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1,11 @@\n+#as: -march-attr\n+#readelf: -A\n+#source: attribute-05.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_stack_align: 16-bytes\n+  Tag_RISCV_arch: \"rv32i2p0_m2p0_a2p0_f2p0_d2p0\"\n+  Tag_RISCV_unaligned_access: Unaligned access\n+  Tag_RISCV_priv_spec: 1\n+  Tag_RISCV_priv_spec_minor: 2\n+  Tag_RISCV_priv_spec_revision: 3"
    },
    {
      "sha": "3b3b7f6d5616f468a5e8b36f4ec156af57c77f9a",
      "filename": "gas/testsuite/gas/riscv/attribute-05.s",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-05.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-05.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-05.s?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1,6 @@\n+\t.attribute arch, \"rv32g\"\n+\t.attribute priv_spec, 1\n+\t.attribute priv_spec_minor, 2\n+\t.attribute priv_spec_revision, 3\n+\t.attribute unaligned_access, 1\n+\t.attribute stack_align, 16"
    },
    {
      "sha": "1abeb47383d9946aaeb3c41f8c0df86440013b53",
      "filename": "gas/testsuite/gas/riscv/attribute-06.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-06.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-06.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-06.d?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1,6 @@\n+#as: -march=rv32g2p0 -march-attr\n+#readelf: -A\n+#source: attribute-06.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: \"rv32i2p0\""
    },
    {
      "sha": "de50251e9088faa9c38076ae32f1c587873d9373",
      "filename": "gas/testsuite/gas/riscv/attribute-06.s",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-06.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-06.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-06.s?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1 @@\n+\t.attribute arch, \"rv32i\""
    },
    {
      "sha": "dfd7e6bd6e58454bec411506f16de6c038997cf2",
      "filename": "gas/testsuite/gas/riscv/attribute-07.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-07.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-07.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-07.d?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1,6 @@\n+#as: -march=rv64g2p0 -march-attr\n+#readelf: -A\n+#source: attribute-07.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: \"rv64i2p0\""
    },
    {
      "sha": "35e6ae3f2edbcf3a468298254d3e5a0c8da8b074",
      "filename": "gas/testsuite/gas/riscv/attribute-07.s",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-07.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-07.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-07.s?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1 @@\n+\t.attribute arch, \"rv64i\""
    },
    {
      "sha": "c10ac0ca353b489e04b10379a89593c150c6c740",
      "filename": "gas/testsuite/gas/riscv/attribute-08.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-08.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-08.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-08.d?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1,6 @@\n+#as: -march-attr\n+#readelf: -A\n+#source: attribute-08.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: \"rv32e1p9\""
    },
    {
      "sha": "44e7a8da746132bae497b0bc43d42296c7c39284",
      "filename": "gas/testsuite/gas/riscv/attribute-08.s",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-08.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-08.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-08.s?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1 @@\n+\t.attribute arch, \"rv32e1p9\""
    },
    {
      "sha": "667f21acfc1dd9c34ed76657d8bbef8e6185936d",
      "filename": "gas/testsuite/gas/riscv/attribute-unknown.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-unknown.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-unknown.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-unknown.d?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1,8 @@\n+#as: -march-attr\n+#readelf: -A\n+#source: attribute-unknown.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n+  Tag_unknown_255: \"test\"\n+  Tag_unknown_256: 123 \\(0x7b\\)"
    },
    {
      "sha": "7e63a35551ea5a3fedf0620c9c08e14bf1dab011",
      "filename": "gas/testsuite/gas/riscv/attribute-unknown.s",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-unknown.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/attribute-unknown.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-unknown.s?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1,2 @@\n+\t.attribute 255, \"test\"\n+\t.attribute 256, 123"
    },
    {
      "sha": "8b137891791fe96927ad78e64b0aad7bded08bdc",
      "filename": "gas/testsuite/gas/riscv/empty.l",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/empty.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/gas/testsuite/gas/riscv/empty.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/empty.l?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -0,0 +1 @@\n+"
    },
    {
      "sha": "45f52af0eb1c68859977484741815ea0c4ed676c",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -1,3 +1,13 @@\n+2019-01-16  Kito Cheng  <kito@andestech.com>\n+\n+\t* elf/riscv.h (SHT_RISCV_ATTRIBUTES): Define.\n+\t(Tag_RISCV_arch): Likewise.\n+\t(Tag_RISCV_priv_spec): Likewise.\n+\t(Tag_RISCV_priv_spec_minor): Likewise.\n+\t(Tag_RISCV_priv_spec_revision): Likewise.\n+\t(Tag_RISCV_unaligned_access): Likewise.\n+\t(Tag_RISCV_stack_align): Likewise.\n+\n 2019-01-14  Pavel I. Kryukov  <kryukov@frtk.ru>\n \n \t* dis-asm.h: include <string.h>"
    },
    {
      "sha": "2f98aa4a3e07eb49fa58a76fdd6aba41f27d6fc2",
      "filename": "include/elf/riscv.h",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/include/elf/riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc8dd17cd595bd7a1b0824c83380af52e633fc1/include/elf/riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/riscv.h?ref=2dc8dd17cd595bd7a1b0824c83380af52e633fc1",
      "patch": "@@ -116,4 +116,20 @@ END_RELOC_NUMBERS (R_RISCV_max)\n /* The name of the global pointer symbol.  */\n #define RISCV_GP_SYMBOL \"__global_pointer$\"\n \n+/* Additional section types.  */\n+#define SHT_RISCV_ATTRIBUTES   0x70000003  /* Section holds attributes.  */\n+\n+/* Object attributes.  */\n+\n+enum\n+{\n+  /* 0-3 are generic.  */\n+  Tag_RISCV_stack_align = 4,\n+  Tag_RISCV_arch = 5,\n+  Tag_RISCV_unaligned_access = 6,\n+  Tag_RISCV_priv_spec = 8,\n+  Tag_RISCV_priv_spec_minor = 10,\n+  Tag_RISCV_priv_spec_revision = 12\n+};\n+\n #endif /* _ELF_RISCV_H */"
    }
  ]
}