{
  "sha": "5e0a033bd2927a027a5fb2c93d9e403c4f505bd0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWUwYTAzM2JkMjkyN2EwMjdhNWZiMmM5M2Q5ZTQwM2M0ZjUwNWJkMA==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-05-03T11:28:30Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-05-03T11:28:30Z"
    },
    "message": "x86: allow @secrel32 also in data definitions\n\nNow that lex_got() is uniform for all targets using it, permit COFF\ntargets to also use @secrel32 with, in particular, .long. This is more\nnatural than the custom .secrel32 directive, and also allows more\nflexibility (the \"+six\" form of the two added test lines doesn't work\nwith a .secrel32 equivalent, in that it silently produces an unintended\nrelocation type).\n\nAs an extra benefit this also makes sure that data definitions in Intel\nsyntax mode would get treated like they do for e.g. ELF targets.",
    "tree": {
      "sha": "fdc1c442126f599f958e27df0f7f262ac9b06e4e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fdc1c442126f599f958e27df0f7f262ac9b06e4e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5e0a033bd2927a027a5fb2c93d9e403c4f505bd0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e0a033bd2927a027a5fb2c93d9e403c4f505bd0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5e0a033bd2927a027a5fb2c93d9e403c4f505bd0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e0a033bd2927a027a5fb2c93d9e403c4f505bd0/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3e301ce0b54002d92808f6bba08b8f793a5cdfa5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3e301ce0b54002d92808f6bba08b8f793a5cdfa5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3e301ce0b54002d92808f6bba08b8f793a5cdfa5"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 22,
    "deletions": 7
  },
  "files": [
    {
      "sha": "0ec2886e254db30d762202f5e5c882458e185dd5",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e0a033bd2927a027a5fb2c93d9e403c4f505bd0/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e0a033bd2927a027a5fb2c93d9e403c4f505bd0/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=5e0a033bd2927a027a5fb2c93d9e403c4f505bd0",
      "patch": "@@ -1,3 +1,11 @@\n+2021-05-03  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.h (TC_PARSE_CONS_EXPRESSION): Adjust surrounding\n+\t#if.\n+\t* testsuite/gas/i386/secrel.s: Convert some .secrel32 to .long.\n+\tAdd two further .long and an .equ.\n+\t* testsuite/gas/i386/secrel.d: Adjust expecations.\n+\n 2021-05-03  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/gas/i386/secrel.d, testsuite/gas/i386/secrel.s:"
    },
    {
      "sha": "9ca9727d4ca26451fc6b361105ac7cc4ecd3cb95",
      "filename": "gas/config/tc-i386.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e0a033bd2927a027a5fb2c93d9e403c4f505bd0/gas/config/tc-i386.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e0a033bd2927a027a5fb2c93d9e403c4f505bd0/gas/config/tc-i386.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.h?ref=5e0a033bd2927a027a5fb2c93d9e403c4f505bd0",
      "patch": "@@ -126,7 +126,8 @@ extern const char *i386_comment_chars;\n #define GLOBAL_OFFSET_TABLE_NAME \"_GLOBAL_OFFSET_TABLE_\"\n #endif\n \n-#if (defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF)) && !defined (LEX_AT)\n+#if ((defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF)) \\\n+     && !defined (LEX_AT)) || defined (TE_PE)\n #define TC_PARSE_CONS_EXPRESSION(EXP, NBYTES) x86_cons (EXP, NBYTES)\n #endif\n extern bfd_reloc_code_real_type x86_cons (expressionS *, int);"
    },
    {
      "sha": "f6e31c726eaaca606c6b375096e107eac6e34154",
      "filename": "gas/testsuite/gas/i386/secrel.d",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e0a033bd2927a027a5fb2c93d9e403c4f505bd0/gas/testsuite/gas/i386/secrel.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e0a033bd2927a027a5fb2c93d9e403c4f505bd0/gas/testsuite/gas/i386/secrel.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/secrel.d?ref=5e0a033bd2927a027a5fb2c93d9e403c4f505bd0",
      "patch": "@@ -21,7 +21,9 @@ OFFSET[ \t]+TYPE[ \t]+VALUE *\n 0+89 secrel32          ext2d\n 0+8e secrel32          ext36\n 0+93 secrel32          ext3f\n-0+a2 secrel32          bar\n+0+a0 secrel32          \\.text\n+0+a4 secrel32          \\.text\n+0+aa secrel32          bar\n \n Contents of section \\.text:\n  0000 3e3e3e3e 3c3c3c3c 3e3e3e3e 3e3c3c3c  >>>><<<<>>>>><<<\n@@ -37,7 +39,7 @@ Contents of section \\.data:\n  0070 0000111f 00000011 3c3c3c3c 3c3c3c3c  ........<<<<<<<<\n  0080 3e3e3e3e 00000000 11000000 00110000  >>>>............\n  0090 00001100 00000011 3c3c3c3c 3c3c3c3c  ........<<<<<<<<\n- 00a0 8d902c00 00000000                    ..,..... *\n+ 00a0 10000000 1c000000 8d902c00 00000000  ..........,.....\n Contents of section \\.rdata:\n  0000 3e3e3e3e 3c3c3c3c 3e3e3e3e 3e3c3c3c  >>>><<<<>>>>><<<\n  0010 3e3e3e3e 3e3e3c3c 3e3e3e3e 3e3e3e3c  >>>>>><<>>>>>>><"
    },
    {
      "sha": "c43ad9270dd88981373f828d9ad9ca49ca4bef14",
      "filename": "gas/testsuite/gas/i386/secrel.s",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e0a033bd2927a027a5fb2c93d9e403c4f505bd0/gas/testsuite/gas/i386/secrel.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e0a033bd2927a027a5fb2c93d9e403c4f505bd0/gas/testsuite/gas/i386/secrel.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/secrel.s?ref=5e0a033bd2927a027a5fb2c93d9e403c4f505bd0",
      "patch": "@@ -27,7 +27,7 @@ sam1f:\t.ascii \"<\"\n \t.byte 0x11\n \t.secrel32 pre16\n \t.byte 0x11\n-\t.secrel32 pre1f\n+\t.long pre1f@secrel32\n \t.byte 0x11\n \t.ascii \"<<<<<<<<\"\n \n@@ -36,7 +36,7 @@ sam1f:\t.ascii \"<\"\n \t.byte 0x11\n \t.secrel32 sam0d\n \t.byte 0x11\n-\t.secrel32 sam16\n+\t.long sam16@secrel32\n \t.byte 0x11\n \t.secrel32 sam1f\n \t.byte 0x11\n@@ -45,7 +45,7 @@ sam1f:\t.ascii \"<\"\n \t.ascii \">>>>\"\n \t.secrel32 nex04\n \t.byte 0x11\n-\t.secrel32 nex0d\n+\t.long nex0d@secrel32\n \t.byte 0x11\n \t.secrel32 nex16\n \t.byte 0x11\n@@ -54,7 +54,7 @@ sam1f:\t.ascii \"<\"\n \t.ascii \"<<<<<<<<\"\n \n \t.ascii \">>>>\"\n-\t.secrel32 ext24\n+\t.long ext24@secrel32\n \t.byte 0x11\n \t.secrel32 ext2d\n \t.byte 0x11\n@@ -64,6 +64,9 @@ sam1f:\t.ascii \"<\"\n \t.byte 0x11\n \t.ascii \"<<<<<<<<\"\n \n+\t.long pre0d@secrel32+3\n+\t.long pre16@secrel32+six\n+\n \tleal\tbar@SECREL32+44(%eax), %edx\n \n .section .rdata\n@@ -79,3 +82,4 @@ nex1f:\t.ascii \"<\"\n \t.ascii \">>>>\"\n \n \t.p2align 4,0\n+\t.equ six,6"
    }
  ]
}