{
  "sha": "81817dacd6dd6f8204518ad50e0c8b534d6a4366",
  "node_id": "C_kwDOANOeidoAKDgxODE3ZGFjZDZkZDZmODIwNDUxOGFkNTBlMGM4YjUzNGQ2YTQzNjY",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-07T01:09:08Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-07T01:09:08Z"
    },
    "message": "sim: sh: fix conversion of PC to an integer\n\nOn LLP64 targets where sizeof(long) != sizeof(void*), this code fails:\nsim/sh/interp.c:704:24: error: cast from pointer to integer of different size  -Werror=pointer-to-int-cast]\n  704 |   do { memstalls += ((((long) PC & 3) != 0) ? (n) : ((n) - 1)); } while (0)\n      |                        ^\n\nSince this code simply needs to check alignment, cast it using uintptr_t\nwhich is the right type for this.",
    "tree": {
      "sha": "f847d7f68ba634a2d66a9ab948f9ae8e8d384855",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f847d7f68ba634a2d66a9ab948f9ae8e8d384855"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/81817dacd6dd6f8204518ad50e0c8b534d6a4366",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81817dacd6dd6f8204518ad50e0c8b534d6a4366",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/81817dacd6dd6f8204518ad50e0c8b534d6a4366",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81817dacd6dd6f8204518ad50e0c8b534d6a4366/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a11cd3ddb2af90da3e5af9917a3cf1c749479983",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a11cd3ddb2af90da3e5af9917a3cf1c749479983",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a11cd3ddb2af90da3e5af9917a3cf1c749479983"
    }
  ],
  "stats": {
    "total": 2,
    "additions": 1,
    "deletions": 1
  },
  "files": [
    {
      "sha": "93923fa2c56c72858994be320596fd925b56486a",
      "filename": "sim/sh/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81817dacd6dd6f8204518ad50e0c8b534d6a4366/sim/sh/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81817dacd6dd6f8204518ad50e0c8b534d6a4366/sim/sh/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/interp.c?ref=81817dacd6dd6f8204518ad50e0c8b534d6a4366",
      "patch": "@@ -701,7 +701,7 @@ do { \\\n #else\n \n #define MA(n) \\\n-  do { memstalls += ((((long) PC & 3) != 0) ? (n) : ((n) - 1)); } while (0)\n+  do { memstalls += ((((uintptr_t) PC & 3) != 0) ? (n) : ((n) - 1)); } while (0)\n \n #define L(x)   thislock = x;\n #define TL(x)  if ((x) == prevlock) stalls++;"
    }
  ]
}