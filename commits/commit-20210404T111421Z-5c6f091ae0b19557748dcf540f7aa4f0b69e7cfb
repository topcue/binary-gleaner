{
  "sha": "5c6f091ae0b19557748dcf540f7aa4f0b69e7cfb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWM2ZjA5MWFlMGIxOTU1Nzc0OGRjZjU0MGY3YWE0ZjBiNjllN2NmYg==",
  "commit": {
    "author": {
      "name": "Faraz Shahbazker",
      "email": "fshahbazker@wavecomp.com",
      "date": "2021-04-04T06:12:43Z"
    },
    "committer": {
      "name": "Faraz Shahbazker",
      "email": "fshahbazker@wavecomp.com",
      "date": "2021-04-04T11:14:21Z"
    },
    "message": "sim: mips: Add handlers to simulator monitor for unlink, lseek and stat\n\nsim/mips/ChangeLog\n\t* interp.c (sim_monitor): Add switch entries for unlink (13),\n\tlseek (14), and stat (15).\n\nDerived from patch authored by Steve Ellcey <sellcey@mips.com>",
    "tree": {
      "sha": "0ec22e59982e517ff6aabc0ccf3d7d56340f5690",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0ec22e59982e517ff6aabc0ccf3d7d56340f5690"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5c6f091ae0b19557748dcf540f7aa4f0b69e7cfb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c6f091ae0b19557748dcf540f7aa4f0b69e7cfb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5c6f091ae0b19557748dcf540f7aa4f0b69e7cfb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c6f091ae0b19557748dcf540f7aa4f0b69e7cfb/comments",
  "author": {
    "login": "farazs-github",
    "id": 57776434,
    "node_id": "MDQ6VXNlcjU3Nzc2NDM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/57776434?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/farazs-github",
    "html_url": "https://github.com/farazs-github",
    "followers_url": "https://api.github.com/users/farazs-github/followers",
    "following_url": "https://api.github.com/users/farazs-github/following{/other_user}",
    "gists_url": "https://api.github.com/users/farazs-github/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/farazs-github/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/farazs-github/subscriptions",
    "organizations_url": "https://api.github.com/users/farazs-github/orgs",
    "repos_url": "https://api.github.com/users/farazs-github/repos",
    "events_url": "https://api.github.com/users/farazs-github/events{/privacy}",
    "received_events_url": "https://api.github.com/users/farazs-github/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "farazs-github",
    "id": 57776434,
    "node_id": "MDQ6VXNlcjU3Nzc2NDM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/57776434?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/farazs-github",
    "html_url": "https://github.com/farazs-github",
    "followers_url": "https://api.github.com/users/farazs-github/followers",
    "following_url": "https://api.github.com/users/farazs-github/following{/other_user}",
    "gists_url": "https://api.github.com/users/farazs-github/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/farazs-github/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/farazs-github/subscriptions",
    "organizations_url": "https://api.github.com/users/farazs-github/orgs",
    "repos_url": "https://api.github.com/users/farazs-github/repos",
    "events_url": "https://api.github.com/users/farazs-github/events{/privacy}",
    "received_events_url": "https://api.github.com/users/farazs-github/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9bcbcdf2291908d3d4978bc883ec790cebb3a455",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9bcbcdf2291908d3d4978bc883ec790cebb3a455",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9bcbcdf2291908d3d4978bc883ec790cebb3a455"
    }
  ],
  "stats": {
    "total": 76,
    "additions": 75,
    "deletions": 1
  },
  "files": [
    {
      "sha": "8c2bc70336fad78c8b0208166fa827e2a6e86219",
      "filename": "sim/mips/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c6f091ae0b19557748dcf540f7aa4f0b69e7cfb/sim/mips/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c6f091ae0b19557748dcf540f7aa4f0b69e7cfb/sim/mips/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/ChangeLog?ref=5c6f091ae0b19557748dcf540f7aa4f0b69e7cfb",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-04  Steve Ellcey  <sellcey@mips.com>\n+\t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n+\n+\t* interp.c (sim_monitor): Add switch entries for unlink (13),\n+\tlseek (14), and stat (15).\n+\n 2021-04-02  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Makefile.in (../igen/igen): Delete rule."
    },
    {
      "sha": "55b089dbee935cd9eedb1cbe8094b67292b39463",
      "filename": "sim/mips/interp.c",
      "status": "modified",
      "additions": 69,
      "deletions": 1,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c6f091ae0b19557748dcf540f7aa4f0b69e7cfb/sim/mips/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c6f091ae0b19557748dcf540f7aa4f0b69e7cfb/sim/mips/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/interp.c?ref=5c6f091ae0b19557748dcf540f7aa4f0b69e7cfb",
      "patch": "@@ -50,6 +50,7 @@ code on the hardware.\n #include \"elf-bfd.h\"\n #include \"gdb/callback.h\"   /* GDB simulator callback interface */\n #include \"gdb/remote-sim.h\" /* GDB simulator interface */\n+#include \"sim-syscall.h\"   /* Simulator system call support */\n \n char* pr_addr (SIM_ADDR addr);\n char* pr_uword64 (uword64 addr);\n@@ -1147,6 +1148,23 @@ Recognized firmware names are: `idt', `pmon', `lsipmon', and `none'.\\n\",\n   return SIM_RC_OK;\n }\n \n+/* stat structures from MIPS32/64.  */\n+static const char stat32_map[] =\n+\"st_dev,2:st_ino,2:st_mode,4:st_nlink,2:st_uid,2:st_gid,2\"\n+\":st_rdev,2:st_size,4:st_atime,4:st_spare1,4:st_mtime,4:st_spare2,4\"\n+\":st_ctime,4:st_spare3,4:st_blksize,4:st_blocks,4:st_spare4,8\";\n+\n+static const char stat64_map[] =\n+\"st_dev,2:st_ino,2:st_mode,4:st_nlink,2:st_uid,2:st_gid,2\"\n+\":st_rdev,2:st_size,8:st_atime,8:st_spare1,8:st_mtime,8:st_spare2,8\"\n+\":st_ctime,8:st_spare3,8:st_blksize,8:st_blocks,8:st_spare4,16\";\n+\n+/* Map for calls using the host struct stat.  */\n+static const CB_TARGET_DEFS_MAP CB_stat_map[] =\n+{\n+  { \"stat\", CB_SYS_stat, 15 },\n+  { 0, -1, -1 }\n+};\n \n \n /* Simple monitor interface (currently setup for the IDT and PMON monitors) */\n@@ -1167,7 +1185,7 @@ sim_monitor (SIM_DESC sd,\n \n   /* The following callback functions are available, however the\n      monitor we are simulating does not make use of them: get_errno,\n-     isatty, lseek, rename, system, time and unlink */\n+     isatty, rename, system and time.  */\n   switch (reason)\n     {\n \n@@ -1241,6 +1259,56 @@ sim_monitor (SIM_DESC sd,\n \tbreak;\n       }\n \n+    case 13: /* int unlink(const char *path) */\n+      {\n+\tchar *path = fetch_str (sd, A0);\n+\tV0 = sim_io_unlink (sd, path);\n+\tfree (path);\n+\tbreak;\n+      }\n+\n+    case 14: /* int lseek(int fd, int offset, int whence) */\n+      {\n+\tV0 = sim_io_lseek (sd, A0, A1, A2);\n+\tbreak;\n+      }\n+\n+    case 15: /* int stat(const char *path, struct stat *buf); */\n+      {\n+\t/* As long as the infrastructure doesn't cache anything\n+\t   related to the stat mapping, this trick gets us a dual\n+\t   \"struct stat\"-type mapping in the least error-prone way.  */\n+\thost_callback *cb = STATE_CALLBACK (sd);\n+\tconst char *saved_map = cb->stat_map;\n+\tCB_TARGET_DEFS_MAP *saved_syscall_map = cb->syscall_map;\n+\tbfd *prog_bfd = STATE_PROG_BFD (sd);\n+\tint is_elf32bit = (elf_elfheader(prog_bfd)->e_ident[EI_CLASS] ==\n+\t\t\t   ELFCLASS32);\n+\tstatic CB_SYSCALL s;\n+\tCB_SYSCALL_INIT (&s);\n+\ts.func = 15;\n+\t/* Mask out the sign extension part for 64-bit targets because the\n+\t   MIPS simulator's memory model is still 32-bit.  */\n+\ts.arg1 = A0 & 0xFFFFFFFF;\n+\ts.arg2 = A1 & 0xFFFFFFFF;\n+\ts.p1 = (PTR) sd;\n+\ts.p2 = (PTR) cpu;\n+\ts.read_mem = sim_syscall_read_mem;\n+\ts.write_mem = sim_syscall_write_mem;\n+\n+\tcb->syscall_map = (CB_TARGET_DEFS_MAP *) CB_stat_map;\n+\tcb->stat_map = is_elf32bit ? stat32_map : stat64_map;\n+\n+\tif (cb_syscall (cb, &s) != CB_RC_OK)\n+\t  sim_engine_halt (sd, cpu, NULL, mips_pc_get (cpu),\n+\t\t\t   sim_stopped, SIM_SIGILL);\n+\n+\tV0 = s.result;\n+\tcb->stat_map = saved_map;\n+\tcb->syscall_map = saved_syscall_map;\n+\tbreak;\n+      }\n+\n     case 17: /* void _exit() */\n       {\n \tsim_io_eprintf (sd, \"sim_monitor(17): _exit(int reason) to be coded\\n\");"
    }
  ]
}