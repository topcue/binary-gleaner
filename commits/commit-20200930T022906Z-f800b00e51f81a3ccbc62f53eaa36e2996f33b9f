{
  "sha": "f800b00e51f81a3ccbc62f53eaa36e2996f33b9f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjgwMGIwMGU1MWY4MWEzY2NiYzYyZjUzZWFhMzZlMjk5NmYzM2I5Zg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-30T00:49:08Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-30T02:29:06Z"
    },
    "message": "Add attribute::value_as_string method\n\nThe full DIE reader checks that an attribute has a \"string\" form in\nsome spots, but the partial DIE reader does not.  This patch brings\nthe two readers in sync for one specific case, namely when examining\nthe linkage name.  This avoids regressions in an existing DWARF test\ncase.\n\nA full fix for this problem would be preferable.  An accessor like\nDW_STRING should always check the form.  However, I haven't attempted\nthat in this series.\n\nAlso the fact that the partial and full readers can disagree like this\nis a design flaw.\n\ngdb/ChangeLog\n2020-09-29  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (partial_die_info::read) <case\n\tDW_AT_linkage_name>: Use value_as_string.\n\t(dwarf2_string_attr): Use value_as_string.\n\t* dwarf2/attribute.h (struct attribute) <value_as_string>: Declare\n\tmethod.\n\t* dwarf2/attribute.c (attribute::value_as_string): New method.",
    "tree": {
      "sha": "07b2b8e7062206edcea24cd2d519fb818715dd12",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/07b2b8e7062206edcea24cd2d519fb818715dd12"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f800b00e51f81a3ccbc62f53eaa36e2996f33b9f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f800b00e51f81a3ccbc62f53eaa36e2996f33b9f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f800b00e51f81a3ccbc62f53eaa36e2996f33b9f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f800b00e51f81a3ccbc62f53eaa36e2996f33b9f/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9dc318a3e5092796616f71adcfe8fdf28083dfc0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9dc318a3e5092796616f71adcfe8fdf28083dfc0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9dc318a3e5092796616f71adcfe8fdf28083dfc0"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 9,
    "deletions": 5
  },
  "files": [
    {
      "sha": "cd5958ccc4459fed0bac8c0cff5ea775693800bd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f800b00e51f81a3ccbc62f53eaa36e2996f33b9f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f800b00e51f81a3ccbc62f53eaa36e2996f33b9f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f800b00e51f81a3ccbc62f53eaa36e2996f33b9f",
      "patch": "@@ -1,3 +1,12 @@\n+2020-09-29  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (partial_die_info::read) <case\n+\tDW_AT_linkage_name>: Use value_as_string.\n+\t(dwarf2_string_attr): Use value_as_string.\n+\t* dwarf2/attribute.h (struct attribute) <value_as_string>: Declare\n+\tmethod.\n+\t* dwarf2/attribute.c (attribute::value_as_string): New method.\n+\n 2020-09-29  Pedro Alves  <pedro@palves.net>\n \n \t* unittests/enum-flags-selftests.c: Check whether __GNUC__ is"
    },
    {
      "sha": "3a2a918f4ed42fbc9587355ec7a8e5d90fbd650f",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f800b00e51f81a3ccbc62f53eaa36e2996f33b9f/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f800b00e51f81a3ccbc62f53eaa36e2996f33b9f/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=f800b00e51f81a3ccbc62f53eaa36e2996f33b9f",
      "patch": "@@ -19031,11 +19031,6 @@ partial_die_info::read (const struct die_reader_specs *reader,\n \t     assume they will be the same, and we only store the last\n \t     one we see.  */\n \t  linkage_name = attr.value_as_string ();\n-\t  /* rustc emits invalid values for DW_AT_linkage_name.  Ignore these.\n-\t     See https://github.com/rust-lang/rust/issues/32925.  */\n-\t  if (cu->language == language_rust && linkage_name != NULL\n-\t      && strchr (linkage_name, '{') != NULL)\n-\t    linkage_name = NULL;\n \t  break;\n \tcase DW_AT_low_pc:\n \t  has_low_pc_attr = 1;"
    }
  ]
}