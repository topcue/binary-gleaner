{
  "sha": "62d4bd947e056a28c2b5086fa82a84b0721b3c97",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjJkNGJkOTQ3ZTA1NmEyOGMyYjUwODZmYTgyYTg0YjA3MjFiM2M5Nw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:10Z"
    },
    "message": "Split out eval_ternop_in_range\n\nThis splits TERNOP_IN_RANGE into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (eval_ternop_in_range): New function.\n\t(ada_evaluate_subexp): Use it.",
    "tree": {
      "sha": "1c7a39d10d6d54b9e1ee371f96cbf1e802508ab0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1c7a39d10d6d54b9e1ee371f96cbf1e802508ab0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/62d4bd947e056a28c2b5086fa82a84b0721b3c97",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62d4bd947e056a28c2b5086fa82a84b0721b3c97",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/62d4bd947e056a28c2b5086fa82a84b0721b3c97",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62d4bd947e056a28c2b5086fa82a84b0721b3c97/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3634f66996bef21692e4343d5271c4c7e5fe5f52",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3634f66996bef21692e4343d5271c4c7e5fe5f52",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3634f66996bef21692e4343d5271c4c7e5fe5f52"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 27,
    "deletions": 12
  },
  "files": [
    {
      "sha": "6eddb9f4b72b5797312e3179a8a059661d3e0478",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62d4bd947e056a28c2b5086fa82a84b0721b3c97/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62d4bd947e056a28c2b5086fa82a84b0721b3c97/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=62d4bd947e056a28c2b5086fa82a84b0721b3c97",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (eval_ternop_in_range): New function.\n+\t(ada_evaluate_subexp): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* opencl-lang.c (eval_opencl_assign): New function."
    },
    {
      "sha": "b311609fe4188d94c568abdc6c4590b4768ff98f",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 22,
      "deletions": 12,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62d4bd947e056a28c2b5086fa82a84b0721b3c97/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62d4bd947e056a28c2b5086fa82a84b0721b3c97/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=62d4bd947e056a28c2b5086fa82a84b0721b3c97",
      "patch": "@@ -9939,6 +9939,27 @@ ada_evaluate_subexp_for_cast (expression *exp, int *pos,\n   return ada_value_cast (to_type, val);\n }\n \n+/* A helper function for TERNOP_IN_RANGE.  */\n+\n+static value *\n+eval_ternop_in_range (struct type *expect_type, struct expression *exp,\n+\t\t      enum noside noside,\n+\t\t      value *arg1, value *arg2, value *arg3)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+\n+  binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n+  binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg3);\n+  struct type *type = language_bool_type (exp->language_defn, exp->gdbarch);\n+  return\n+    value_from_longest (type,\n+\t\t\t(value_less (arg1, arg3)\n+\t\t\t || value_equal (arg1, arg3))\n+\t\t\t&& (value_less (arg2, arg1)\n+\t\t\t    || value_equal (arg2, arg1)));\n+}\n+\n /* Implement the evaluate_exp routine in the exp_descriptor structure\n    for the Ada language.  */\n \n@@ -10551,18 +10572,7 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n       arg2 = evaluate_subexp (nullptr, exp, pos, noside);\n       arg3 = evaluate_subexp (nullptr, exp, pos, noside);\n \n-      if (noside == EVAL_SKIP)\n-\tgoto nosideret;\n-\n-      binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n-      binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg3);\n-      type = language_bool_type (exp->language_defn, exp->gdbarch);\n-      return\n-\tvalue_from_longest (type,\n-\t\t\t    (value_less (arg1, arg3)\n-\t\t\t     || value_equal (arg1, arg3))\n-\t\t\t    && (value_less (arg2, arg1)\n-\t\t\t\t|| value_equal (arg2, arg1)));\n+      return eval_ternop_in_range (expect_type, exp, noside, arg1, arg2, arg3);\n \n     case OP_ATR_FIRST:\n     case OP_ATR_LAST:"
    }
  ]
}