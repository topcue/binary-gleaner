{
  "sha": "5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec",
  "node_id": "C_kwDOANOeidoAKDVkZmU0YmZjYjk2OTQ1ZGM1Y2MxZjg3MTdiZTQ1NGYxZjdmNmJiZWM",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-09-29T18:51:15Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-10-19T19:14:48Z"
    },
    "message": "Fix format_pieces selftest on Windows\n\nThe format_pieces selftest currently fails on Windows hosts.\n\nThe selftest doesn't handle the \"%ll\" -> \"%I64\" rewrite that the\nformatter may perform, but also gdbsupport was missing a configure\ncheck for PRINTF_HAS_LONG_LONG.  This patch fixes both issues.",
    "tree": {
      "sha": "aae9e022c794f4887ad3e9ac759bcb0de647e183",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aae9e022c794f4887ad3e9ac759bcb0de647e183"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "05fb05a94729473cb04b1299fe5c36e06525c78f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05fb05a94729473cb04b1299fe5c36e06525c78f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/05fb05a94729473cb04b1299fe5c36e06525c78f"
    }
  ],
  "stats": {
    "total": 199,
    "additions": 127,
    "deletions": 72
  },
  "files": [
    {
      "sha": "d5c1883c25be0a9826fbfab2402dfed2d9501742",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 46,
      "deletions": 46,
      "changes": 92,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec",
      "patch": "@@ -15282,6 +15282,52 @@ fi\n     fi\n   fi\n \n+  # Check if the compiler and runtime support printing long longs.\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for long long support in printf\" >&5\n+$as_echo_n \"checking for long long support in printf... \" >&6; }\n+if ${gdb_cv_printf_has_long_long+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test \"$cross_compiling\" = yes; then :\n+  gdb_cv_printf_has_long_long=no\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+char buf[32];\n+    long long l = 0;\n+    l = (l << 16) + 0x0123;\n+    l = (l << 16) + 0x4567;\n+    l = (l << 16) + 0x89ab;\n+    l = (l << 16) + 0xcdef;\n+    sprintf (buf, \"0x%016llx\", l);\n+    return (strcmp (\"0x0123456789abcdef\", buf));\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  gdb_cv_printf_has_long_long=yes\n+else\n+  gdb_cv_printf_has_long_long=no\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_printf_has_long_long\" >&5\n+$as_echo \"$gdb_cv_printf_has_long_long\" >&6; }\n+  if test \"$gdb_cv_printf_has_long_long\" = yes; then\n+\n+$as_echo \"#define PRINTF_HAS_LONG_LONG 1\" >>confdefs.h\n+\n+  fi\n+\n \n $as_echo \"#define _STRUCTURED_PROC 1\" >>confdefs.h\n \n@@ -16176,52 +16222,6 @@ if test \"$gdb_cv_c_long_long\" != yes; then\n   as_fn_error $? \"Compiler must support long long for GDB.\" \"$LINENO\" 5\n fi\n \n-# Check if the compiler and runtime support printing long longs.\n-\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for long long support in printf\" >&5\n-$as_echo_n \"checking for long long support in printf... \" >&6; }\n-if ${gdb_cv_printf_has_long_long+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if test \"$cross_compiling\" = yes; then :\n-  gdb_cv_printf_has_long_long=no\n-else\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-$ac_includes_default\n-int\n-main ()\n-{\n-char buf[32];\n-  long long l = 0;\n-  l = (l << 16) + 0x0123;\n-  l = (l << 16) + 0x4567;\n-  l = (l << 16) + 0x89ab;\n-  l = (l << 16) + 0xcdef;\n-  sprintf (buf, \"0x%016llx\", l);\n-  return (strcmp (\"0x0123456789abcdef\", buf));\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_run \"$LINENO\"; then :\n-  gdb_cv_printf_has_long_long=yes\n-else\n-  gdb_cv_printf_has_long_long=no\n-fi\n-rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n-  conftest.$ac_objext conftest.beam conftest.$ac_ext\n-fi\n-\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_printf_has_long_long\" >&5\n-$as_echo \"$gdb_cv_printf_has_long_long\" >&6; }\n-if test \"$gdb_cv_printf_has_long_long\" = yes; then\n-\n-$as_echo \"#define PRINTF_HAS_LONG_LONG 1\" >>confdefs.h\n-\n-fi\n-\n # Check if the compiler and runtime support printing decfloats.\n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for decfloat support in printf\" >&5"
    },
    {
      "sha": "d4cfb6a7624176eb017039c9787c06f5210eae7c",
      "filename": "gdb/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/gdb/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/gdb/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure.ac?ref=5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec",
      "patch": "@@ -1513,27 +1513,6 @@ if test \"$gdb_cv_c_long_long\" != yes; then\n   AC_MSG_ERROR([Compiler must support long long for GDB.])\n fi\n \n-# Check if the compiler and runtime support printing long longs.\n-\n-AC_CACHE_CHECK([for long long support in printf],\n-               gdb_cv_printf_has_long_long,\n-               [AC_RUN_IFELSE([AC_LANG_PROGRAM([AC_INCLUDES_DEFAULT],\n-[[char buf[32];\n-  long long l = 0;\n-  l = (l << 16) + 0x0123;\n-  l = (l << 16) + 0x4567;\n-  l = (l << 16) + 0x89ab;\n-  l = (l << 16) + 0xcdef;\n-  sprintf (buf, \"0x%016llx\", l);\n-  return (strcmp (\"0x0123456789abcdef\", buf));]])],\n-                              gdb_cv_printf_has_long_long=yes,\n-                              gdb_cv_printf_has_long_long=no,\n-                              gdb_cv_printf_has_long_long=no)])\n-if test \"$gdb_cv_printf_has_long_long\" = yes; then\n-  AC_DEFINE(PRINTF_HAS_LONG_LONG, 1,\n-            [Define to 1 if the \"%ll\" format works to print long longs.])\n-fi\n-\n # Check if the compiler and runtime support printing decfloats.\n \n AC_CACHE_CHECK([for decfloat support in printf],"
    },
    {
      "sha": "6a15b5e29ef9c43a8020c4259c2fcc2cd0c95d8a",
      "filename": "gdb/unittests/format_pieces-selftests.c",
      "status": "modified",
      "additions": 11,
      "deletions": 5,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/gdb/unittests/format_pieces-selftests.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/gdb/unittests/format_pieces-selftests.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/format_pieces-selftests.c?ref=5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec",
      "patch": "@@ -21,6 +21,12 @@\n #include \"gdbsupport/format.h\"\n #include \"gdbsupport/selftest.h\"\n \n+#if USE_PRINTF_I64\n+#define LL \"I64\"\n+#else\n+#define LL \"ll\"\n+#endif\n+\n namespace selftests {\n namespace format_pieces {\n \n@@ -55,7 +61,7 @@ test_format_specifier ()\n     {\n       format_piece (\"Hello\\t \", literal_piece, 0),\n       format_piece (\"%d\", int_arg, 0),\n-      format_piece (\"%llx\", long_long_arg, 0), /* ARI: %ll */\n+      format_piece (\"%\" LL \"x\", long_long_arg, 0),\n       format_piece (\"%%d\", literal_piece, 0),\n       format_piece (\"%d\", int_arg, 0),\n     });\n@@ -87,7 +93,7 @@ test_format_int_sizes ()\n       format_piece (\"Hello\\t \", literal_piece, 0),\n       format_piece (\"%hu\", int_arg, 0),\n       format_piece (\"%lu\", long_arg, 0),\n-      format_piece (\"%llu\", long_long_arg, 0), /* ARI: %ll */\n+      format_piece (\"%\" LL \"u\", long_long_arg, 0),\n       format_piece (\"%zu\", size_t_arg, 0)\n     });\n \n@@ -96,7 +102,7 @@ test_format_int_sizes ()\n       format_piece (\"Hello\\t \", literal_piece, 0),\n       format_piece (\"%hx\", int_arg, 0),\n       format_piece (\"%lx\", long_arg, 0),\n-      format_piece (\"%llx\", long_long_arg, 0), /* ARI: %ll */\n+      format_piece (\"%\" LL \"x\", long_long_arg, 0),\n       format_piece (\"%zx\", size_t_arg, 0)\n     });\n \n@@ -105,7 +111,7 @@ test_format_int_sizes ()\n       format_piece (\"Hello\\t \", literal_piece, 0),\n       format_piece (\"%ho\", int_arg, 0),\n       format_piece (\"%lo\", long_arg, 0),\n-      format_piece (\"%llo\", long_long_arg, 0), /* ARI: %ll */\n+      format_piece (\"%\" LL \"o\", long_long_arg, 0),\n       format_piece (\"%zo\", size_t_arg, 0)\n     });\n \n@@ -114,7 +120,7 @@ test_format_int_sizes ()\n       format_piece (\"Hello\\t \", literal_piece, 0),\n       format_piece (\"%hd\", int_arg, 0),\n       format_piece (\"%ld\", long_arg, 0),\n-      format_piece (\"%lld\", long_long_arg, 0), /* ARI: %ll */\n+      format_piece (\"%\" LL \"d\", long_long_arg, 0),\n       format_piece (\"%zd\", size_t_arg, 0)\n     });\n }"
    },
    {
      "sha": "07c7b2a9bec3635407d43b8c446afd6adf2a57bd",
      "filename": "gdbsupport/common.m4",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/gdbsupport/common.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/gdbsupport/common.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/common.m4?ref=5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec",
      "patch": "@@ -163,6 +163,27 @@ AC_DEFUN([GDB_AC_COMMON], [\n     fi\n   fi\n \n+  # Check if the compiler and runtime support printing long longs.\n+\n+  AC_CACHE_CHECK([for long long support in printf],\n+\t\t gdb_cv_printf_has_long_long,\n+\t\t [AC_RUN_IFELSE([AC_LANG_PROGRAM([AC_INCLUDES_DEFAULT],\n+  [[char buf[32];\n+    long long l = 0;\n+    l = (l << 16) + 0x0123;\n+    l = (l << 16) + 0x4567;\n+    l = (l << 16) + 0x89ab;\n+    l = (l << 16) + 0xcdef;\n+    sprintf (buf, \"0x%016llx\", l);\n+    return (strcmp (\"0x0123456789abcdef\", buf));]])],\n+\t\t\t\tgdb_cv_printf_has_long_long=yes,\n+\t\t\t\tgdb_cv_printf_has_long_long=no,\n+\t\t\t\tgdb_cv_printf_has_long_long=no)])\n+  if test \"$gdb_cv_printf_has_long_long\" = yes; then\n+    AC_DEFINE(PRINTF_HAS_LONG_LONG, 1,\n+\t      [Define to 1 if the \"%ll\" format works to print long longs.])\n+  fi\n+\n   BFD_SYS_PROCFS_H\n   if test \"$ac_cv_header_sys_procfs_h\" = yes; then\n     BFD_HAVE_SYS_PROCFS_TYPE(gregset_t)"
    },
    {
      "sha": "f6b0159bd6269c06787caec24e2942cf22e1d5fb",
      "filename": "gdbsupport/config.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/gdbsupport/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/gdbsupport/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/config.in?ref=5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec",
      "patch": "@@ -321,6 +321,9 @@\n /* Define to the version of this package. */\n #undef PACKAGE_VERSION\n \n+/* Define to 1 if the \"%ll\" format works to print long longs. */\n+#undef PRINTF_HAS_LONG_LONG\n+\n /* Define to necessary symbol if this constant uses a non-standard name on\n    your system. */\n #undef PTHREAD_CREATE_JOINABLE"
    },
    {
      "sha": "d22f225ef7e4361a1f6e0a260fba558a517be02f",
      "filename": "gdbsupport/configure",
      "status": "modified",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/gdbsupport/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec/gdbsupport/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/configure?ref=5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec",
      "patch": "@@ -9571,6 +9571,52 @@ fi\n     fi\n   fi\n \n+  # Check if the compiler and runtime support printing long longs.\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for long long support in printf\" >&5\n+$as_echo_n \"checking for long long support in printf... \" >&6; }\n+if ${gdb_cv_printf_has_long_long+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test \"$cross_compiling\" = yes; then :\n+  gdb_cv_printf_has_long_long=no\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+char buf[32];\n+    long long l = 0;\n+    l = (l << 16) + 0x0123;\n+    l = (l << 16) + 0x4567;\n+    l = (l << 16) + 0x89ab;\n+    l = (l << 16) + 0xcdef;\n+    sprintf (buf, \"0x%016llx\", l);\n+    return (strcmp (\"0x0123456789abcdef\", buf));\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  gdb_cv_printf_has_long_long=yes\n+else\n+  gdb_cv_printf_has_long_long=no\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_printf_has_long_long\" >&5\n+$as_echo \"$gdb_cv_printf_has_long_long\" >&6; }\n+  if test \"$gdb_cv_printf_has_long_long\" = yes; then\n+\n+$as_echo \"#define PRINTF_HAS_LONG_LONG 1\" >>confdefs.h\n+\n+  fi\n+\n \n $as_echo \"#define _STRUCTURED_PROC 1\" >>confdefs.h\n "
    }
  ]
}