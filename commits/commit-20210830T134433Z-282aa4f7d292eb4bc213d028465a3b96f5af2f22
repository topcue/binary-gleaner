{
  "sha": "282aa4f7d292eb4bc213d028465a3b96f5af2f22",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjgyYWE0ZjdkMjkyZWI0YmMyMTNkMDI4NDY1YTNiOTZmNWFmMmYyMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-08-28T19:16:50Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-08-30T13:44:33Z"
    },
    "message": "Add some parallel_for_each tests\n\nTom de Vries noticed that a patch in the DWARF scanner rewrite series\ncaused a regression in parallel_for_each -- it started crashing in the\ncase where the number of threads is 0 (there was an unchecked use of\n\"n-1\" that was used to size an array).\n\nHe also pointed out that there were no tests of parallel_for_each.\nThis adds a few tests of parallel_for_each, primarily testing that\ndifferent settings for the number of threads will work.  This test\ncatches the bug that he found in that series.",
    "tree": {
      "sha": "201a33541c392cba219d0a4d9fea0574b78b39ff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/201a33541c392cba219d0a4d9fea0574b78b39ff"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/282aa4f7d292eb4bc213d028465a3b96f5af2f22",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/282aa4f7d292eb4bc213d028465a3b96f5af2f22",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/282aa4f7d292eb4bc213d028465a3b96f5af2f22",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/282aa4f7d292eb4bc213d028465a3b96f5af2f22/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ee8b88452c1cb1be97199942aee7a76bbca210ee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ee8b88452c1cb1be97199942aee7a76bbca210ee",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ee8b88452c1cb1be97199942aee7a76bbca210ee"
    }
  ],
  "stats": {
    "total": 87,
    "additions": 87,
    "deletions": 0
  },
  "files": [
    {
      "sha": "320d3326a8170ea09c94ba51f4b842c4726f360c",
      "filename": "gdb/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/282aa4f7d292eb4bc213d028465a3b96f5af2f22/gdb/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/282aa4f7d292eb4bc213d028465a3b96f5af2f22/gdb/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/Makefile.in?ref=282aa4f7d292eb4bc213d028465a3b96f5af2f22",
      "patch": "@@ -456,6 +456,7 @@ SELFTESTS_SRCS = \\\n \tunittests/offset-type-selftests.c \\\n \tunittests/observable-selftests.c \\\n \tunittests/optional-selftests.c \\\n+\tunittests/parallel-for-selftests.c \\\n \tunittests/parse-connection-spec-selftests.c \\\n \tunittests/ptid-selftests.c \\\n \tunittests/main-thread-selftests.c \\"
    },
    {
      "sha": "7f61b709fa713c38edfa247590de431b8cf7fa47",
      "filename": "gdb/unittests/parallel-for-selftests.c",
      "status": "added",
      "additions": 86,
      "deletions": 0,
      "changes": 86,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/282aa4f7d292eb4bc213d028465a3b96f5af2f22/gdb/unittests/parallel-for-selftests.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/282aa4f7d292eb4bc213d028465a3b96f5af2f22/gdb/unittests/parallel-for-selftests.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/parallel-for-selftests.c?ref=282aa4f7d292eb4bc213d028465a3b96f5af2f22",
      "patch": "@@ -0,0 +1,86 @@\n+/* Self tests for parallel_for_each\n+\n+   Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"defs.h\"\n+#include \"gdbsupport/selftest.h\"\n+#include \"gdbsupport/parallel-for.h\"\n+#include \"gdbsupport/thread-pool.h\"\n+\n+#if CXX_STD_THREAD\n+\n+namespace selftests {\n+namespace parallel_for {\n+\n+struct save_restore_n_threads\n+{\n+  save_restore_n_threads ()\n+    : n_threads (gdb::thread_pool::g_thread_pool->thread_count ())\n+  {\n+  }\n+\n+  ~save_restore_n_threads ()\n+  {\n+    gdb::thread_pool::g_thread_pool->set_thread_count (n_threads);\n+  }\n+\n+  int n_threads;\n+};\n+\n+static void\n+test (int n_threads)\n+{\n+  save_restore_n_threads saver;\n+  gdb::thread_pool::g_thread_pool->set_thread_count (n_threads);\n+\n+#define NUMBER 10000\n+\n+  std::atomic<int> counter = 0;\n+  gdb::parallel_for_each (0, NUMBER,\n+\t\t\t  [&] (int start, int end)\n+\t\t\t  {\n+\t\t\t    counter += end - start;\n+\t\t\t  });\n+\n+  SELF_CHECK (counter == NUMBER);\n+\n+#undef NUMBER\n+}\n+\n+static void\n+test_n_threads ()\n+{\n+  test (0);\n+  test (1);\n+  test (3);\n+}\n+\n+}\n+}\n+\n+#endif /* CXX_STD_THREAD */\n+\n+void _initialize_parallel_for_selftests ();\n+void\n+_initialize_parallel_for_selftests ()\n+{\n+#ifdef CXX_STD_THREAD\n+  selftests::register_test (\"parallel_for\",\n+\t\t\t    selftests::parallel_for::test_n_threads);\n+#endif /* CXX_STD_THREAD */\n+}"
    }
  ]
}