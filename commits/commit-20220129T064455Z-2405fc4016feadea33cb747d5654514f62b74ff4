{
  "sha": "2405fc4016feadea33cb747d5654514f62b74ff4",
  "node_id": "C_kwDOANOeidoAKDI0MDVmYzQwMTZmZWFkZWEzM2NiNzQ3ZDU2NTQ1MTRmNjJiNzRmZjQ",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2022-01-29T01:57:31Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2022-01-29T06:44:55Z"
    },
    "message": "Re: PR28827, assertion building LLVM 9 on powerpc64le-linux-gnu\n\nThe previous patch wasn't quite correct.  The size and padding depends\non offset used in the current iteration, and if we're fudging the\noffset past STUB_SHRINK_ITER then we'd better use that offset.  We\ncan't have plt_stub_pad using stub_sec->size as the offset.\n\n\tPR 28827\n\t* elf64-ppc.c (plt_stub_pad): Add stub_off param.\n\t(ppc_size_one_stub): Set up stub_offset to value used in this\n\titeration before sizing the stub.  Adjust plt_stub_pad calls.",
    "tree": {
      "sha": "0f3b4abfddede1106b6680e3bad80fcc1112f19f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0f3b4abfddede1106b6680e3bad80fcc1112f19f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2405fc4016feadea33cb747d5654514f62b74ff4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2405fc4016feadea33cb747d5654514f62b74ff4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2405fc4016feadea33cb747d5654514f62b74ff4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2405fc4016feadea33cb747d5654514f62b74ff4/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7c4643efe7befea8e5063e8b56c0400fd8cee2d5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c4643efe7befea8e5063e8b56c0400fd8cee2d5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7c4643efe7befea8e5063e8b56c0400fd8cee2d5"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 10,
    "deletions": 11
  },
  "files": [
    {
      "sha": "d53128debc6aabdebae26d6bc526a2d37dc9ee37",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 10,
      "deletions": 11,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2405fc4016feadea33cb747d5654514f62b74ff4/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2405fc4016feadea33cb747d5654514f62b74ff4/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=2405fc4016feadea33cb747d5654514f62b74ff4",
      "patch": "@@ -11174,12 +11174,12 @@ plt_stub_size (struct ppc_link_hash_table *htab,\n static inline unsigned int\n plt_stub_pad (struct ppc_link_hash_table *htab,\n \t      struct ppc_stub_hash_entry *stub_entry,\n+\t      bfd_vma stub_off,\n \t      bfd_vma plt_off,\n \t      unsigned int odd)\n {\n   int stub_align;\n   unsigned stub_size;\n-  bfd_vma stub_off = stub_entry->group->stub_sec->size;\n \n   if (htab->params->plt_stub_align >= 0)\n     {\n@@ -12205,6 +12205,9 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \n   /* Make a note of the offset within the stubs for this entry.  */\n   stub_offset = stub_entry->group->stub_sec->size;\n+  if (htab->stub_iteration > STUB_SHRINK_ITER\n+      && stub_entry->stub_offset > stub_offset)\n+    stub_offset = stub_entry->stub_offset;\n \n   if (stub_entry->h != NULL\n       && stub_entry->h->save_res\n@@ -12430,10 +12433,9 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \n       if (htab->params->plt_stub_align != 0)\n \t{\n-\t  unsigned pad = plt_stub_pad (htab, stub_entry, off, odd);\n+\t  unsigned pad = plt_stub_pad (htab, stub_entry, stub_offset, off, odd);\n \n-\t  stub_entry->group->stub_sec->size += pad;\n-\t  stub_offset = stub_entry->group->stub_sec->size;\n+\t  stub_offset += pad;\n \t  off -= pad;\n \t  odd ^= pad & 4;\n \t}\n@@ -12505,10 +12507,9 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \n       if (htab->params->plt_stub_align != 0)\n \t{\n-\t  unsigned pad = plt_stub_pad (htab, stub_entry, off, 0);\n+\t  unsigned pad = plt_stub_pad (htab, stub_entry, stub_offset, off, 0);\n \n-\t  stub_entry->group->stub_sec->size += pad;\n-\t  stub_offset = stub_entry->group->stub_sec->size;\n+\t  stub_offset += pad;\n \t}\n \n       if (info->emitrelocations)\n@@ -12557,10 +12558,8 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \n   if (stub_entry->stub_offset != stub_offset)\n     htab->stub_changed = true;\n-  if (htab->stub_iteration <= STUB_SHRINK_ITER\n-      || stub_entry->stub_offset < stub_offset)\n-    stub_entry->stub_offset = stub_offset;\n-  stub_entry->group->stub_sec->size = stub_entry->stub_offset + size;\n+  stub_entry->stub_offset = stub_offset;\n+  stub_entry->group->stub_sec->size = stub_offset + size;\n   return true;\n }\n "
    }
  ]
}