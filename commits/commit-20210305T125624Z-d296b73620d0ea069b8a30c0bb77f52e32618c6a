{
  "sha": "d296b73620d0ea069b8a30c0bb77f52e32618c6a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDI5NmI3MzYyMGQwZWEwNjliOGEzMGMwYmI3N2Y1MmUzMjYxOGM2YQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-03-05T12:56:24Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-03-05T12:56:24Z"
    },
    "message": "Fix the dislay of .debug_macro.dwo sections.\n\n\tPR 27387\n\t* dwarf.c (display_debug_macro): Handle the displaying of\n\tDW_MACRO_define_strp and DW_MACRO_undef_strp in v4\n\t.debug_macro.dwo sections.",
    "tree": {
      "sha": "e34fd86207c205c2d82ca69429c00e15e7af1c59",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e34fd86207c205c2d82ca69429c00e15e7af1c59"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d296b73620d0ea069b8a30c0bb77f52e32618c6a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d296b73620d0ea069b8a30c0bb77f52e32618c6a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d296b73620d0ea069b8a30c0bb77f52e32618c6a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d296b73620d0ea069b8a30c0bb77f52e32618c6a/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b01b5d9a0b16fd81cc5535ba70c3ed267d9d7ac0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b01b5d9a0b16fd81cc5535ba70c3ed267d9d7ac0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b01b5d9a0b16fd81cc5535ba70c3ed267d9d7ac0"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 28,
    "deletions": 11
  },
  "files": [
    {
      "sha": "da24027199e6fc3642ea195eb61f05f307959195",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d296b73620d0ea069b8a30c0bb77f52e32618c6a/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d296b73620d0ea069b8a30c0bb77f52e32618c6a/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=d296b73620d0ea069b8a30c0bb77f52e32618c6a",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-05  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 27387\n+\t* dwarf.c (display_debug_macro): Handle the displaying of\n+\tDW_MACRO_define_strp and DW_MACRO_undef_strp in v4\n+\t.debug_macro.dwo sections.\n+\n 2021-03-04  Nick Clifton  <nickc@redhat.com>\n \n \tPR 27478"
    },
    {
      "sha": "74f28f563ce848fd560294b9275f6375dcc10357",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 21,
      "deletions": 11,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d296b73620d0ea069b8a30c0bb77f52e32618c6a/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d296b73620d0ea069b8a30c0bb77f52e32618c6a/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=d296b73620d0ea069b8a30c0bb77f52e32618c6a",
      "patch": "@@ -690,7 +690,7 @@ fetch_indirect_string (dwarf_vma offset)\n \n   if (offset >= section->size)\n     {\n-      warn (_(\"DW_FORM_strp offset too big: %s\\n\"),\n+      warn (_(\"DW_FORM_strp offset too big: 0x%s\\n\"),\n \t    dwarf_vmatoa (\"x\", offset));\n       return (const unsigned char *) _(\"<offset is too big>\");\n     }\n@@ -718,7 +718,7 @@ fetch_indirect_line_string (dwarf_vma offset)\n \n   if (offset >= section->size)\n     {\n-      warn (_(\"DW_FORM_line_strp offset too big: %s\\n\"),\n+      warn (_(\"DW_FORM_line_strp offset too big: 0x%s\\n\"),\n \t    dwarf_vmatoa (\"x\", offset));\n       return (const unsigned char *) _(\"<offset is too big>\");\n     }\n@@ -803,7 +803,7 @@ fetch_indexed_string (dwarf_vma idx, struct cu_tu_set *this_set,\n \n   if (index_offset >= length)\n     {\n-      warn (_(\"DW_FORM_GNU_str_index offset too big: %s vs %s\\n\"),\n+      warn (_(\"DW_FORM_GNU_str_index offset too big: 0x%s vs 0x%s\\n\"),\n \t    dwarf_vmatoa (\"x\", index_offset),\n \t    dwarf_vmatoa (\"x\", length));\n       return _(\"<index offset is too big>\");\n@@ -813,7 +813,7 @@ fetch_indexed_string (dwarf_vma idx, struct cu_tu_set *this_set,\n   str_offset -= str_section->address;\n   if (str_offset >= str_section->size)\n     {\n-      warn (_(\"DW_FORM_GNU_str_index indirect offset too big: %s\\n\"),\n+      warn (_(\"DW_FORM_GNU_str_index indirect offset too big: 0x%s\\n\"),\n \t    dwarf_vmatoa (\"x\", str_offset));\n       return _(\"<indirect index offset is too big>\");\n     }\n@@ -839,7 +839,7 @@ fetch_indexed_value (dwarf_vma offset, dwarf_vma bytes)\n \n   if (offset + bytes > section->size)\n     {\n-      warn (_(\"Offset into section %s too big: %s\\n\"),\n+      warn (_(\"Offset into section %s too big: 0x%s\\n\"),\n \t    section->name, dwarf_vmatoa (\"x\", offset));\n       return \"<offset too big>\";\n     }\n@@ -6045,17 +6045,22 @@ display_debug_macro (struct dwarf_section *section,\n   unsigned char *end = start + section->size;\n   unsigned char *curr = start;\n   unsigned char *extended_op_buf[256];\n+  bfd_boolean is_dwo = FALSE;\n+  const char *suffix = strrchr (section->name, '.');\n+\n+  if (suffix && strcmp (suffix, \".dwo\") == 0)\n+    is_dwo = TRUE;\n \n   load_debug_section_with_follow (str, file);\n   load_debug_section_with_follow (line, file);\n   load_debug_section_with_follow (str_index, file);\n-\n+  \n   introduce (section, FALSE);\n \n   while (curr < end)\n     {\n       unsigned int lineno, version, flags;\n-      unsigned int offset_size = 4;\n+      unsigned int offset_size;\n       const unsigned char *string;\n       dwarf_vma line_offset = 0, sec_offset = curr - start, offset;\n       unsigned char **extended_ops = NULL;\n@@ -6069,8 +6074,7 @@ display_debug_macro (struct dwarf_section *section,\n \t}\n \n       SAFE_BYTE_GET_AND_INC (flags, curr, 1, end);\n-      if (flags & 1)\n-\toffset_size = 8;\n+      offset_size = (flags & 1) ? 8 : 4;\n       printf (_(\"  Offset:                      0x%lx\\n\"),\n \t      (unsigned long) sec_offset);\n       printf (_(\"  Version:                     %d\\n\"), version);\n@@ -6202,15 +6206,21 @@ display_debug_macro (struct dwarf_section *section,\n \n \t    case DW_MACRO_define_strp:\n \t      READ_ULEB (lineno, curr, end);\n-\t      SAFE_BYTE_GET_AND_INC (offset, curr, offset_size, end);\n+\t      if (version == 4 && is_dwo)\n+\t\tREAD_ULEB (offset, curr, end);\n+\t      else\n+\t\tSAFE_BYTE_GET_AND_INC (offset, curr, offset_size, end);\n \t      string = fetch_indirect_string (offset);\n \t      printf (_(\" DW_MACRO_define_strp - lineno : %d macro : %s\\n\"),\n \t\t      lineno, string);\n \t      break;\n \n \t    case DW_MACRO_undef_strp:\n \t      READ_ULEB (lineno, curr, end);\n-\t      SAFE_BYTE_GET_AND_INC (offset, curr, offset_size, end);\n+\t      if (version == 4 && is_dwo)\n+\t\tREAD_ULEB (offset, curr, end);\n+\t      else\n+\t\tSAFE_BYTE_GET_AND_INC (offset, curr, offset_size, end);\n \t      string = fetch_indirect_string (offset);\n \t      printf (_(\" DW_MACRO_undef_strp - lineno : %d macro : %s\\n\"),\n \t\t      lineno, string);"
    }
  ]
}