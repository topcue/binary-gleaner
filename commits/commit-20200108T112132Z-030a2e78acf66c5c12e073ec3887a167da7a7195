{
  "sha": "030a2e78acf66c5c12e073ec3887a167da7a7195",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDMwYTJlNzhhY2Y2NmM1YzEyZTA3M2VjMzg4N2ExNjdkYTdhNzE5NQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-08T01:12:36Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-08T11:21:32Z"
    },
    "message": "ubsan: z8k: index 10 out of bounds for type 'unsigned int const[10]'\n\nThe fix is the additional ARRAY_SIZE test, the rest just tidies\nvariable types rather than adding a cast to avoid warnings.\n\nopcodes/\n\t* z8k-dis.c: Include libiberty.h\n\t(instr_data_s): Make max_fetched unsigned.\n\t(z8k_lookup_instr): Make nibl_index and tabl_index unsigned.\n\tDon't exceed byte_info bounds.\n\t(output_instr): Make num_bytes unsigned.\n\t(unpack_instr): Likewise for nibl_count and loop.\n\t* z8kgen.c (gas <opcode_entry_type>): Make noperands, length and\n\tidx unsigned.\n\t* z8k-opc.h: Regenerate.\ngas/\n\t* config/tc-z8k.c (md_begin): Make idx unsigned.\n\t(get_specific): Likewise for this_index.",
    "tree": {
      "sha": "a96dc0b6fda94acff746f176f72c21aa2beed27d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a96dc0b6fda94acff746f176f72c21aa2beed27d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/030a2e78acf66c5c12e073ec3887a167da7a7195",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/030a2e78acf66c5c12e073ec3887a167da7a7195",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/030a2e78acf66c5c12e073ec3887a167da7a7195",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/030a2e78acf66c5c12e073ec3887a167da7a7195/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4c6ee6465acc58f0f86c44668c4e862901186239",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c6ee6465acc58f0f86c44668c4e862901186239",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4c6ee6465acc58f0f86c44668c4e862901186239"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 33,
    "deletions": 13
  },
  "files": [
    {
      "sha": "46ce02ee6509892a5d201194241dc5318f74d525",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/030a2e78acf66c5c12e073ec3887a167da7a7195/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/030a2e78acf66c5c12e073ec3887a167da7a7195/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=030a2e78acf66c5c12e073ec3887a167da7a7195",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/tc-z8k.c (md_begin): Make idx unsigned.\n+\t(get_specific): Likewise for this_index.\n+\n 2020-01-07  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* onfig/tc-arc.c (parse_reloc_symbol): New function."
    },
    {
      "sha": "ea4ee3a6b1f3be1d4944621b67eaa74008434199",
      "filename": "gas/config/tc-z8k.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/030a2e78acf66c5c12e073ec3887a167da7a7195/gas/config/tc-z8k.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/030a2e78acf66c5c12e073ec3887a167da7a7195/gas/config/tc-z8k.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-z8k.c?ref=030a2e78acf66c5c12e073ec3887a167da7a7195",
      "patch": "@@ -143,7 +143,7 @@ void\n md_begin (void)\n {\n   const opcode_entry_type *opcode;\n-  int idx = -1;\n+  unsigned int idx = -1u;\n \n   opcode_hash_control = hash_new ();\n \n@@ -861,7 +861,7 @@ get_specific (opcode_entry_type *opcode, op_type *operands)\n   int found = 0;\n   unsigned int noperands = opcode->noperands;\n \n-  int this_index = opcode->idx;\n+  unsigned int this_index = opcode->idx;\n \n   while (this_index == opcode->idx && !found)\n     {"
    },
    {
      "sha": "011943d55a8ded64d63094e1836b3f79bd062168",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/030a2e78acf66c5c12e073ec3887a167da7a7195/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/030a2e78acf66c5c12e073ec3887a167da7a7195/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=030a2e78acf66c5c12e073ec3887a167da7a7195",
      "patch": "@@ -1,3 +1,15 @@\n+2020-01-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* z8k-dis.c: Include libiberty.h\n+\t(instr_data_s): Make max_fetched unsigned.\n+\t(z8k_lookup_instr): Make nibl_index and tabl_index unsigned.\n+\tDon't exceed byte_info bounds.\n+\t(output_instr): Make num_bytes unsigned.\n+\t(unpack_instr): Likewise for nibl_count and loop.\n+\t* z8kgen.c (gas <opcode_entry_type>): Make noperands, length and\n+\tidx unsigned.\n+\t* z8k-opc.h: Regenerate.\n+\n 2020-01-07  Shahab Vahedi  <shahab@synopsys.com>\n \n \t* arc-tbl.h (llock): Use 'LLOCK' as class."
    },
    {
      "sha": "cb871decfaba7033f601b5b347171db068940135",
      "filename": "opcodes/z8k-dis.c",
      "status": "modified",
      "additions": 8,
      "deletions": 5,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/030a2e78acf66c5c12e073ec3887a167da7a7195/opcodes/z8k-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/030a2e78acf66c5c12e073ec3887a167da7a7195/opcodes/z8k-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/z8k-dis.c?ref=030a2e78acf66c5c12e073ec3887a167da7a7195",
      "patch": "@@ -20,6 +20,7 @@\n \n #include \"sysdep.h\"\n #include \"disassemble.h\"\n+#include \"libiberty.h\"\n \n #define DEFINE_TABLE\n #include \"z8k-opc.h\"\n@@ -35,7 +36,7 @@ typedef struct\n   unsigned short words[24];\n \n   /* Nibble number of first word not yet fetched.  */\n-  int max_fetched;\n+  unsigned int max_fetched;\n   bfd_vma insn_start;\n   OPCODES_SIGJMP_BUF bailout;\n \n@@ -189,7 +190,7 @@ print_insn_z8002 (bfd_vma addr, disassemble_info *info)\n int\n z8k_lookup_instr (unsigned char *nibbles, disassemble_info *info)\n {\n-  int nibl_index, tabl_index;\n+  unsigned int nibl_index, tabl_index;\n   int nibl_matched;\n   int need_fetch = 0;\n   unsigned short instr_nibl;\n@@ -202,7 +203,9 @@ z8k_lookup_instr (unsigned char *nibbles, disassemble_info *info)\n     {\n       nibl_matched = 1;\n       for (nibl_index = 0;\n-\t   nibl_index < z8k_table[tabl_index].length * 2 && nibl_matched;\n+\t   nibl_matched\n+\t     && nibl_index < ARRAY_SIZE (z8k_table[0].byte_info)\n+\t     && nibl_index < z8k_table[tabl_index].length * 2;\n \t   nibl_index++)\n \t{\n \t  if ((nibl_index % 4) == 0)\n@@ -281,7 +284,7 @@ output_instr (instr_data_s *instr_data,\n               unsigned long addr ATTRIBUTE_UNUSED,\n               disassemble_info *info)\n {\n-  int num_bytes;\n+  unsigned int num_bytes;\n   char out_str[100];\n \n   out_str[0] = 0;\n@@ -297,7 +300,7 @@ output_instr (instr_data_s *instr_data,\n static void\n unpack_instr (instr_data_s *instr_data, int is_segmented, disassemble_info *info)\n {\n-  int nibl_count, loop;\n+  unsigned int nibl_count, loop;\n   unsigned short instr_nibl, instr_byte, instr_word;\n   long instr_long;\n   unsigned int tabl_datum, datum_class;"
    },
    {
      "sha": "35ce4bc655e030cf9db0efed7dfb313ee34e55d2",
      "filename": "opcodes/z8k-opc.h",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/030a2e78acf66c5c12e073ec3887a167da7a7195/opcodes/z8k-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/030a2e78acf66c5c12e073ec3887a167da7a7195/opcodes/z8k-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/z8k-opc.h?ref=030a2e78acf66c5c12e073ec3887a167da7a7195",
      "patch": "@@ -292,9 +292,9 @@ typedef struct {\n   void (*func) (void);\n   unsigned int arg_info[4];\n   unsigned int byte_info[10];\n-  int noperands;\n-  int length;\n-  int idx;\n+  unsigned int noperands;\n+  unsigned int length;\n+  unsigned int idx;\n } opcode_entry_type;\n \n #ifdef DEFINE_TABLE"
    },
    {
      "sha": "b72fcffa35721c2c40856bb889c60d53b45efff0",
      "filename": "opcodes/z8kgen.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/030a2e78acf66c5c12e073ec3887a167da7a7195/opcodes/z8kgen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/030a2e78acf66c5c12e073ec3887a167da7a7195/opcodes/z8kgen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/z8kgen.c?ref=030a2e78acf66c5c12e073ec3887a167da7a7195",
      "patch": "@@ -1290,9 +1290,9 @@ gas (void)\n   printf (\"  void (*func) (void);\\n\");\n   printf (\"  unsigned int arg_info[4];\\n\");\n   printf (\"  unsigned int byte_info[%d];\\n\", BYTE_INFO_LEN);\n-  printf (\"  int noperands;\\n\");\n-  printf (\"  int length;\\n\");\n-  printf (\"  int idx;\\n\");\n+  printf (\"  unsigned int noperands;\\n\");\n+  printf (\"  unsigned int length;\\n\");\n+  printf (\"  unsigned int idx;\\n\");\n   printf (\"} opcode_entry_type;\\n\\n\");\n   printf (\"#ifdef DEFINE_TABLE\\n\");\n   printf (\"const opcode_entry_type z8k_table[] = {\\n\");"
    }
  ]
}