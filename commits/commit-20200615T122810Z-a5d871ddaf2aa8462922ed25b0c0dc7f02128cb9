{
  "sha": "a5d871ddaf2aa8462922ed25b0c0dc7f02128cb9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTVkODcxZGRhZjJhYTg0NjI5MjJlZDI1YjBjMGRjN2YwMjEyOGNiOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-06-15T12:28:09Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-06-15T12:28:10Z"
    },
    "message": "Remove a use of target_read_string\n\nlinux-tdep.c:dump_mapping_p uses target_read_string, but in a way that\ndoes not really make sense.  It's better to use target_read_memory\nhere.\n\ngdb/ChangeLog\n2020-06-15  Tom Tromey  <tromey@adacore.com>\n\n\t* linux-tdep.c (dump_mapping_p): Use target_read_memory.",
    "tree": {
      "sha": "58bb13fd9e677c9592da1f9a740b091d0654aff0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/58bb13fd9e677c9592da1f9a740b091d0654aff0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a5d871ddaf2aa8462922ed25b0c0dc7f02128cb9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a5d871ddaf2aa8462922ed25b0c0dc7f02128cb9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a5d871ddaf2aa8462922ed25b0c0dc7f02128cb9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a5d871ddaf2aa8462922ed25b0c0dc7f02128cb9/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "670e35fad9c17e8e166c5a6260201eebcc2ba9e6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/670e35fad9c17e8e166c5a6260201eebcc2ba9e6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/670e35fad9c17e8e166c5a6260201eebcc2ba9e6"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 7,
    "deletions": 9
  },
  "files": [
    {
      "sha": "af82b2310a6ec6024a342b56e38ceb99b6673ae9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a5d871ddaf2aa8462922ed25b0c0dc7f02128cb9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a5d871ddaf2aa8462922ed25b0c0dc7f02128cb9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a5d871ddaf2aa8462922ed25b0c0dc7f02128cb9",
      "patch": "@@ -1,3 +1,7 @@\n+2020-06-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* linux-tdep.c (dump_mapping_p): Use target_read_memory.\n+\n 2020-06-15  Tom Tromey  <tromey@adacore.com>\n \n \t* valprint.c (read_string): Update comment."
    },
    {
      "sha": "2dcdc63076907881868601271fdbe509db81198e",
      "filename": "gdb/linux-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 9,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a5d871ddaf2aa8462922ed25b0c0dc7f02128cb9/gdb/linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a5d871ddaf2aa8462922ed25b0c0dc7f02128cb9/gdb/linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-tdep.c?ref=a5d871ddaf2aa8462922ed25b0c0dc7f02128cb9",
      "patch": "@@ -701,22 +701,16 @@ dump_mapping_p (filter_flags filterflags, const struct smaps_vmflags *v,\n   if (!dump_p && private_p && offset == 0\n       && (filterflags & COREFILTER_ELF_HEADERS) != 0)\n     {\n-      /* Let's check if we have an ELF header.  */\n-      gdb::unique_xmalloc_ptr<char> header;\n-      int errcode;\n-\n       /* Useful define specifying the size of the ELF magical\n \t header.  */\n #ifndef SELFMAG\n #define SELFMAG 4\n #endif\n \n-      /* Read the first SELFMAG bytes and check if it is ELFMAG.  */\n-      if (target_read_string (addr, &header, SELFMAG, &errcode) == SELFMAG\n-\t  && errcode == 0)\n+      /* Let's check if we have an ELF header.  */\n+      gdb_byte h[SELFMAG];\n+      if (target_read_memory (addr, h, SELFMAG) == 0)\n \t{\n-\t  const char *h = header.get ();\n-\n \t  /* The EI_MAG* and ELFMAG* constants come from\n \t     <elf/common.h>.  */\n \t  if (h[EI_MAG0] == ELFMAG0 && h[EI_MAG1] == ELFMAG1"
    }
  ]
}