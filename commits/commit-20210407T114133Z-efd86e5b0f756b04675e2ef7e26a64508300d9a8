{
  "sha": "efd86e5b0f756b04675e2ef7e26a64508300d9a8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWZkODZlNWIwZjc1NmIwNDY3NWUyZWY3ZTI2YTY0NTA4MzAwZDlhOA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-05T14:58:56Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-04-07T11:41:33Z"
    },
    "message": "sim: m32c: opc2c: remove unused vlist variable\n\nWhen building with AddressSanitizer, sim/m32c fails with:\n\n./opc2c -l r8c.out /home/simark/src/binutils-gdb/sim/m32c/r8c.opc > r8c.c\nsim_log: r8c.out\n\n=================================================================\n==3919390==ERROR: LeakSanitizer: detected memory leaks\n\n    Direct leak of 4 byte(s) in 1 object(s) allocated from:\n        #0 0x7ffff7677459 in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cpp:145\n        #1 0x55555555b3df in main /home/simark/src/binutils-gdb/sim/m32c/opc2c.c:658\n        #2 0x7ffff741fb24 in __libc_start_main (/usr/lib/libc.so.6+0x27b24)\n\nFix the leak in main by removing the vlist variable, which seems unused.",
    "tree": {
      "sha": "8861a79ddfe2f5cdb16f052cf5da3e3986cefcc5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8861a79ddfe2f5cdb16f052cf5da3e3986cefcc5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/efd86e5b0f756b04675e2ef7e26a64508300d9a8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/efd86e5b0f756b04675e2ef7e26a64508300d9a8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/efd86e5b0f756b04675e2ef7e26a64508300d9a8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/efd86e5b0f756b04675e2ef7e26a64508300d9a8/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "56d467f4ee376e28a16740f26e5f6eec3c743632",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56d467f4ee376e28a16740f26e5f6eec3c743632",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/56d467f4ee376e28a16740f26e5f6eec3c743632"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 4,
    "deletions": 3
  },
  "files": [
    {
      "sha": "31e3523bd533b3ad73e68c412d41390ae680aeee",
      "filename": "sim/m32c/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/efd86e5b0f756b04675e2ef7e26a64508300d9a8/sim/m32c/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/efd86e5b0f756b04675e2ef7e26a64508300d9a8/sim/m32c/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/ChangeLog?ref=efd86e5b0f756b04675e2ef7e26a64508300d9a8",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-07  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* opc2c.c (main): Remove vlist variable.\n+\n 2021-04-02  Mike Frysinger  <vapier@gentoo.org>\n \n \t* aclocal.m4, configure: Regenerate."
    },
    {
      "sha": "3d8f2c1bac8f5c3ec52864ba2bedf090373ccfc2",
      "filename": "sim/m32c/opc2c.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/efd86e5b0f756b04675e2ef7e26a64508300d9a8/sim/m32c/opc2c.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/efd86e5b0f756b04675e2ef7e26a64508300d9a8/sim/m32c/opc2c.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/opc2c.c?ref=efd86e5b0f756b04675e2ef7e26a64508300d9a8",
      "patch": "@@ -507,7 +507,6 @@ main (int argc, char **argv)\n   FILE *in;\n   int lineno = 0;\n   int i;\n-  VaryRef *vlist;\n \n   if (argc > 2 && strcmp (argv[1], \"-l\") == 0)\n     {\n@@ -655,8 +654,6 @@ main (int argc, char **argv)\n \n   qsort (opcodes, n_opcodes, sizeof (opcodes[0]), op_cmp);\n \n-  vlist = (VaryRef *) malloc (n_varies * sizeof (VaryRef));\n-\n   for (i = 0; i < n_opcodes; i++)\n     {\n       int j, b, v;"
    }
  ]
}