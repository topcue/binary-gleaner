{
  "sha": "a52d0b9de195d91bdf6730e114ee09fe4d1e67ad",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTUyZDBiOWRlMTk1ZDkxYmRmNjczMGUxMTRlZTA5ZmU0ZDFlNjdhZA==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-05-14T14:34:06Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-06-28T18:20:55Z"
    },
    "message": "Sanitize the address before working with allocation tags\n\nRemove the logical tag/top byte from the address whenever we have to work with\nallocation tags.\n\ngdb/ChangeLog:\n\n2021-06-28  Luis Machado  <luis.machado@linaro.org>\n\n\t* aarch64-linux-tdep.c (aarch64_linux_memtag_matches_p): Remove the top\n\tbyte.\n\t(aarch64_linux_set_memtags): Likewise.\n\t(aarch64_linux_get_memtag): Likewise.\n\t(aarch64_linux_report_signal_info): Likewise.",
    "tree": {
      "sha": "1dee5b28e29df8a2eeef71e409f57d905ff08f9f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1dee5b28e29df8a2eeef71e409f57d905ff08f9f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a52d0b9de195d91bdf6730e114ee09fe4d1e67ad",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a52d0b9de195d91bdf6730e114ee09fe4d1e67ad",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a52d0b9de195d91bdf6730e114ee09fe4d1e67ad",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a52d0b9de195d91bdf6730e114ee09fe4d1e67ad/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e660f4e9054d03549c565a762ba3a8b6e0092d99",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e660f4e9054d03549c565a762ba3a8b6e0092d99",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e660f4e9054d03549c565a762ba3a8b6e0092d99"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 17,
    "deletions": 2
  },
  "files": [
    {
      "sha": "51132e4a44db82a916fbfc80f0c5fff766370032",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a52d0b9de195d91bdf6730e114ee09fe4d1e67ad/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a52d0b9de195d91bdf6730e114ee09fe4d1e67ad/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a52d0b9de195d91bdf6730e114ee09fe4d1e67ad",
      "patch": "@@ -1,3 +1,11 @@\n+2021-06-28  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* aarch64-linux-tdep.c (aarch64_linux_memtag_matches_p): Remove the top\n+\tbyte.\n+\t(aarch64_linux_set_memtags): Likewise.\n+\t(aarch64_linux_get_memtag): Likewise.\n+\t(aarch64_linux_report_signal_info): Likewise.\n+\n 2021-06-28  Luis Machado  <luis.machado@linaro.org>\n \n \t* aarch64-linux-tdep.c"
    },
    {
      "sha": "63c200b47f7bb8edf009aa2b71609cff67153bd5",
      "filename": "gdb/aarch64-linux-tdep.c",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a52d0b9de195d91bdf6730e114ee09fe4d1e67ad/gdb/aarch64-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a52d0b9de195d91bdf6730e114ee09fe4d1e67ad/gdb/aarch64-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-tdep.c?ref=a52d0b9de195d91bdf6730e114ee09fe4d1e67ad",
      "patch": "@@ -1587,7 +1587,8 @@ aarch64_linux_memtag_matches_p (struct gdbarch *gdbarch,\n   CORE_ADDR addr = value_as_address (address);\n \n   /* Fetch the allocation tag for ADDRESS.  */\n-  gdb::optional<CORE_ADDR> atag = aarch64_mte_get_atag (addr);\n+  gdb::optional<CORE_ADDR> atag\n+    = aarch64_mte_get_atag (address_significant (gdbarch, addr));\n \n   if (!atag.has_value ())\n     return true;\n@@ -1625,6 +1626,9 @@ aarch64_linux_set_memtags (struct gdbarch *gdbarch, struct value *address,\n     }\n   else\n     {\n+      /* Remove the top byte.  */\n+      addr = address_significant (gdbarch, addr);\n+\n       /* Make sure we are dealing with a tagged address to begin with.  */\n       if (!aarch64_linux_tagged_address_p (gdbarch, address))\n \treturn false;\n@@ -1679,6 +1683,8 @@ aarch64_linux_get_memtag (struct gdbarch *gdbarch, struct value *address,\n       if (!aarch64_linux_tagged_address_p (gdbarch, address))\n \treturn nullptr;\n \n+      /* Remove the top byte.  */\n+      addr = address_significant (gdbarch, addr);\n       gdb::optional<CORE_ADDR> atag = aarch64_mte_get_atag (addr);\n \n       if (!atag.has_value ())\n@@ -1751,7 +1757,8 @@ aarch64_linux_report_signal_info (struct gdbarch *gdbarch,\n       uiout->field_core_addr (\"fault-addr\", gdbarch, fault_addr);\n       uiout->text (\"\\n\");\n \n-      gdb::optional<CORE_ADDR> atag = aarch64_mte_get_atag (fault_addr);\n+      gdb::optional<CORE_ADDR> atag\n+\t= aarch64_mte_get_atag (address_significant (gdbarch, fault_addr));\n       gdb_byte ltag = aarch64_mte_get_ltag (fault_addr);\n \n       if (!atag.has_value ())"
    }
  ]
}