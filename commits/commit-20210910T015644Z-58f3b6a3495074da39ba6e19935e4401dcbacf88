{
  "sha": "58f3b6a3495074da39ba6e19935e4401dcbacf88",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NThmM2I2YTM0OTUwNzRkYTM5YmE2ZTE5OTM1ZTQ0MDFkY2JhY2Y4OA==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-09-09T16:14:42Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-09-10T01:56:44Z"
    },
    "message": "gas: Use the directory name in .file 0\n\nDWARF5 allows .file 0 to take an optional directory name.  Set the entry\n0 of the directory table to the directory name in .file 0.\n\n\tPR gas/28266\n\t* dwarf2dbg.c (get_directory_table_entry): Add an argument for\n\tthe directory name in .file 0 and use it, instead of PWD.\n\t(allocate_filenum): Pass NULL to get_directory_table_entry.\n\t(allocate_filename_to_slot): Pass the incoming dirname to\n\tget_directory_table_entry.\n\t* testsuite/gas/elf/dwarf-5-file0-2.d: New file.\n\t* testsuite/gas/elf/dwarf-5-file0-2.s: Likewise.\n\t* testsuite/gas/elf/elf.exp: Run dwarf-5-file0-2.",
    "tree": {
      "sha": "0502264d6cdc1b9524a452871a6bfe36636b61a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0502264d6cdc1b9524a452871a6bfe36636b61a9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/58f3b6a3495074da39ba6e19935e4401dcbacf88",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58f3b6a3495074da39ba6e19935e4401dcbacf88",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/58f3b6a3495074da39ba6e19935e4401dcbacf88",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58f3b6a3495074da39ba6e19935e4401dcbacf88/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "653cc1a141ca3ce901f31479f0f27abc99866cd5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/653cc1a141ca3ce901f31479f0f27abc99866cd5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/653cc1a141ca3ce901f31479f0f27abc99866cd5"
    }
  ],
  "stats": {
    "total": 139,
    "additions": 135,
    "deletions": 4
  },
  "files": [
    {
      "sha": "9e3437b894829714fefd557d405bb4e9580787fd",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58f3b6a3495074da39ba6e19935e4401dcbacf88/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58f3b6a3495074da39ba6e19935e4401dcbacf88/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=58f3b6a3495074da39ba6e19935e4401dcbacf88",
      "patch": "@@ -592,6 +592,7 @@ get_basename (const char * pathname)\n \n static unsigned int\n get_directory_table_entry (const char *dirname,\n+\t\t\t   const char *file0_dirname,\n \t\t\t   size_t dirlen,\n \t\t\t   bool can_use_zero)\n {\n@@ -621,7 +622,7 @@ get_directory_table_entry (const char *dirname,\n     {\n       if (dirs == NULL || dirs[0] == NULL)\n \t{\n-\t  const char * pwd = getpwd ();\n+\t  const char * pwd = file0_dirname ? file0_dirname : getpwd ();\n \n \t  if (dwarf_level >= 5 && strcmp (dirname, pwd) != 0)\n \t    {\n@@ -630,7 +631,8 @@ get_directory_table_entry (const char *dirname,\n \t\t directory).  Since we are about to create a directory entry that\n \t\t is not the same, allocate the current directory first.\n \t\t FIXME: Alternatively we could generate an error message here.  */\n-\t      (void) get_directory_table_entry (pwd, strlen (pwd), true);\n+\t      (void) get_directory_table_entry (pwd, NULL, strlen (pwd),\n+\t\t\t\t\t\ttrue);\n \t      d = 1;\n \t    }\n \t  else\n@@ -726,7 +728,7 @@ allocate_filenum (const char * pathname)\n   file = get_basename (pathname);\n   dir_len = file - pathname;\n \n-  dir = get_directory_table_entry (pathname, dir_len, false);\n+  dir = get_directory_table_entry (pathname, NULL, dir_len, false);\n \n   /* Do not use slot-0.  That is specifically reserved for use by\n      the '.file 0 \"name\"' directive.  */\n@@ -766,6 +768,7 @@ allocate_filename_to_slot (const char *dirname,\n   const char *file;\n   size_t dirlen;\n   unsigned int i, d;\n+  const char *file0_dirname = dirname;\n \n   /* Short circuit the common case of adding the same pathname\n      as last time.  */\n@@ -856,7 +859,8 @@ allocate_filename_to_slot (const char *dirname,\n       file = filename;\n     }\n \n-  d = get_directory_table_entry (dirname, dirlen, num == 0);\n+  d = get_directory_table_entry (dirname, file0_dirname, dirlen,\n+\t\t\t\t num == 0);\n   i = num;\n \n   if (! assign_file_to_slot (i, file, d))"
    },
    {
      "sha": "4b3ed29f4c91b3ab40926c20d0019eec1f27055a",
      "filename": "gas/testsuite/gas/elf/dwarf-5-file0-2.d",
      "status": "added",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58f3b6a3495074da39ba6e19935e4401dcbacf88/gas/testsuite/gas/elf/dwarf-5-file0-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58f3b6a3495074da39ba6e19935e4401dcbacf88/gas/testsuite/gas/elf/dwarf-5-file0-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/dwarf-5-file0-2.d?ref=58f3b6a3495074da39ba6e19935e4401dcbacf88",
      "patch": "@@ -0,0 +1,15 @@\n+#as: --gdwarf-5\n+#name: DWARF5 .file 0 dir file\n+#readelf: -wl\n+\n+#...\n+ The Directory Table \\(offset 0x.*, lines 1, columns 1\\):\n+  Entry\tName\n+#...\n+  0\t\\(indirect line string, offset: 0x.*\\): /example\n+\n+ The File Name Table \\(offset 0x.*, lines 2, columns 2\\):\n+  Entry\tDir\tName\n+  0\t0\t\\(indirect line string, offset: 0x.*\\): test.c\n+  1\t0\t\\(indirect line string, offset: 0x.*\\): test.c\n+#pass"
    },
    {
      "sha": "135a03bf4930264bca9b8e67678ac17fbe89c12e",
      "filename": "gas/testsuite/gas/elf/dwarf-5-file0-2.s",
      "status": "added",
      "additions": 111,
      "deletions": 0,
      "changes": 111,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58f3b6a3495074da39ba6e19935e4401dcbacf88/gas/testsuite/gas/elf/dwarf-5-file0-2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58f3b6a3495074da39ba6e19935e4401dcbacf88/gas/testsuite/gas/elf/dwarf-5-file0-2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/dwarf-5-file0-2.s?ref=58f3b6a3495074da39ba6e19935e4401dcbacf88",
      "patch": "@@ -0,0 +1,111 @@\n+\t.file\t\"test.c\"\n+\t.text\n+.Ltext0:\n+\t.file 0 \"/example\" \"test.c\"\n+\t.globl\tx\n+\t.section\t.bss\n+\t.balign 4\n+\t.type\tx, @object\n+\t.size\tx, 4\n+x:\n+\t.zero\t4\n+\t.text\n+.Letext0:\n+\t.file 1 \"test.c\"\n+\t.section\t.debug_info,\"\",%progbits\n+.Ldebug_info0:\n+\t.long\t0x32\n+\t.2byte\t0x5\n+\t.byte\t0x1\n+\t.byte\t0x4\n+\t.long\t.Ldebug_abbrev0\n+\t.uleb128 0x1\n+\t.long\t.LASF2\n+\t.byte\t0x1d\n+\t.long\t.LASF0\n+\t.long\t.LASF1\n+\t.long\t.Ldebug_line0\n+\t.uleb128 0x2\n+\t.string\t\"x\"\n+\t.byte\t0x1\n+\t.byte\t0x1\n+\t.byte\t0x5\n+\t.long\t0x2e\n+\t.uleb128 0x5\n+\t.byte\t0x3\n+\t.long\tx\n+\t.uleb128 0x3\n+\t.byte\t0x4\n+\t.byte\t0x5\n+\t.string\t\"int\"\n+\t.byte\t0\n+\t.section\t.debug_abbrev,\"\",%progbits\n+.Ldebug_abbrev0:\n+\t.uleb128 0x1\n+\t.uleb128 0x11\n+\t.byte\t0x1\n+\t.uleb128 0x25\n+\t.uleb128 0xe\n+\t.uleb128 0x13\n+\t.uleb128 0xb\n+\t.uleb128 0x3\n+\t.uleb128 0x1f\n+\t.uleb128 0x1b\n+\t.uleb128 0x1f\n+\t.uleb128 0x10\n+\t.uleb128 0x17\n+\t.byte\t0\n+\t.byte\t0\n+\t.uleb128 0x2\n+\t.uleb128 0x34\n+\t.byte\t0\n+\t.uleb128 0x3\n+\t.uleb128 0x8\n+\t.uleb128 0x3a\n+\t.uleb128 0xb\n+\t.uleb128 0x3b\n+\t.uleb128 0xb\n+\t.uleb128 0x39\n+\t.uleb128 0xb\n+\t.uleb128 0x49\n+\t.uleb128 0x13\n+\t.uleb128 0x3f\n+\t.uleb128 0x19\n+\t.uleb128 0x2\n+\t.uleb128 0x18\n+\t.byte\t0\n+\t.byte\t0\n+\t.uleb128 0x3\n+\t.uleb128 0x24\n+\t.byte\t0\n+\t.uleb128 0xb\n+\t.uleb128 0xb\n+\t.uleb128 0x3e\n+\t.uleb128 0xb\n+\t.uleb128 0x3\n+\t.uleb128 0x8\n+\t.byte\t0\n+\t.byte\t0\n+\t.byte\t0\n+\t.section\t.debug_aranges,\"\",%progbits\n+\t.long\t0x14\n+\t.2byte\t0x2\n+\t.long\t.Ldebug_info0\n+\t.byte\t0x4\n+\t.byte\t0\n+\t.2byte\t0\n+\t.2byte\t0\n+\t.long\t0\n+\t.long\t0\n+\t.section\t.debug_line,\"\",%progbits\n+.Ldebug_line0:\n+\t.section\t.debug_str,\"MS\",%progbits,1\n+.LASF2:\n+\t.string\t\"GNU C17 11.2.1 -g\"\n+\t.section\t.debug_line_str,\"MS\",%progbits,1\n+.LASF1:\n+\t.string\t\"/example\"\n+.LASF0:\n+\t.string\t\"test.c\"\n+\t.ident\t\"GCC: (GNU) 11.2.1\"\n+\t.section\t.note.GNU-stack,\"\",%progbits"
    },
    {
      "sha": "2485008d56938d59925479c2411adce0694ef74b",
      "filename": "gas/testsuite/gas/elf/elf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58f3b6a3495074da39ba6e19935e4401dcbacf88/gas/testsuite/gas/elf/elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58f3b6a3495074da39ba6e19935e4401dcbacf88/gas/testsuite/gas/elf/elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/elf.exp?ref=58f3b6a3495074da39ba6e19935e4401dcbacf88",
      "patch": "@@ -297,6 +297,7 @@ if { [is_elf_format] } then {\n     run_dump_test \"dwarf2-19\" $dump_opts\n     run_dump_test \"dwarf2-20\" $dump_opts\n     run_dump_test \"dwarf-5-file0\" $dump_opts\n+    run_dump_test \"dwarf-5-file0-2\" $dump_opts\n     run_dump_test \"dwarf-5-dir0\" $dump_opts\n     run_dump_test \"dwarf-4-cu\" $dump_opts\n     run_dump_test \"dwarf-5-cu\" $dump_opts"
    }
  ]
}