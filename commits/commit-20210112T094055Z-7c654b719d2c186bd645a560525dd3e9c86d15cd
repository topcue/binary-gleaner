{
  "sha": "7c654b719d2c186bd645a560525dd3e9c86d15cd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2M2NTRiNzE5ZDJjMTg2YmQ2NDVhNTYwNTI1ZGQzZTljODZkMTVjZA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-01-11T14:14:02Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-01-12T09:40:55Z"
    },
    "message": "gdb/fortran: add symbol base comparison operators\n\nFortran supports symbol based comparison operators as well as the\nclassic text based comparison operators, so we have:\n\n   Text     | Symbol\n   Operator | Operator\n   ---------|---------\n   .eq.     | ==\n   .ne.     | /=\n   .le.     | <=\n   .ge.     | >=\n   .gt.     | >\n   .lt.     | <\n\nThis commit adds the symbol based operators as well as some tests.\n\ngdb/ChangeLog:\n\n\t* f-exp.y (dot_ops): Rename to...\n\t(fortran_operators): ...this.  Add a header comment.  Add symbol\n\tbased operators.\n\t(yylex): Update to use fortran_operators not dot_ops.  Remove\n\tspecial handling for '**', this is now included in\n\tfortran_operators.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.fortran/dot-ops.exp: Add new tests.",
    "tree": {
      "sha": "ca0796d3a81e868c0c293de82474d3ae50af5792",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ca0796d3a81e868c0c293de82474d3ae50af5792"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7c654b719d2c186bd645a560525dd3e9c86d15cd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c654b719d2c186bd645a560525dd3e9c86d15cd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7c654b719d2c186bd645a560525dd3e9c86d15cd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c654b719d2c186bd645a560525dd3e9c86d15cd/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e998918e9890d5efc0270ad6f140e098eaf0081f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e998918e9890d5efc0270ad6f140e098eaf0081f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e998918e9890d5efc0270ad6f140e098eaf0081f"
    }
  ],
  "stats": {
    "total": 79,
    "additions": 61,
    "deletions": 18
  },
  "files": [
    {
      "sha": "720d3b230b2088a7f78843a9fee5afc0d1655a03",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c654b719d2c186bd645a560525dd3e9c86d15cd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c654b719d2c186bd645a560525dd3e9c86d15cd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7c654b719d2c186bd645a560525dd3e9c86d15cd",
      "patch": "@@ -1,3 +1,12 @@\n+2021-01-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* f-exp.y (dot_ops): Rename to...\n+\t(fortran_operators): ...this.  Add a header comment.  Add symbol\n+\tbased operators.\n+\t(yylex): Update to use fortran_operators not dot_ops.  Remove\n+\tspecial handling for '**', this is now included in\n+\tfortran_operators.\n+\n 2021-01-11  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* arch/aarch64-insn.h (aarch64_debug_printf): New."
    },
    {
      "sha": "3b0f23d5d730d55c6b6e8dc2c397679aea95835d",
      "filename": "gdb/f-exp.y",
      "status": "modified",
      "additions": 18,
      "deletions": 18,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c654b719d2c186bd645a560525dd3e9c86d15cd/gdb/f-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c654b719d2c186bd645a560525dd3e9c86d15cd/gdb/f-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-exp.y?ref=7c654b719d2c186bd645a560525dd3e9c86d15cd",
      "patch": "@@ -979,19 +979,28 @@ struct token\n   bool case_sensitive;\n };\n \n-static const struct token dot_ops[] =\n+/* List of Fortran operators.  */\n+\n+static const struct token fortran_operators[] =\n {\n   { \".and.\", BOOL_AND, BINOP_END, false },\n   { \".or.\", BOOL_OR, BINOP_END, false },\n   { \".not.\", BOOL_NOT, BINOP_END, false },\n   { \".eq.\", EQUAL, BINOP_END, false },\n   { \".eqv.\", EQUAL, BINOP_END, false },\n   { \".neqv.\", NOTEQUAL, BINOP_END, false },\n+  { \"==\", EQUAL, BINOP_END, false },\n   { \".ne.\", NOTEQUAL, BINOP_END, false },\n+  { \"/=\", NOTEQUAL, BINOP_END, false },\n   { \".le.\", LEQ, BINOP_END, false },\n+  { \"<=\", LEQ, BINOP_END, false },\n   { \".ge.\", GEQ, BINOP_END, false },\n+  { \">=\", GEQ, BINOP_END, false },\n   { \".gt.\", GREATERTHAN, BINOP_END, false },\n+  { \">\", GREATERTHAN, BINOP_END, false },\n   { \".lt.\", LESSTHAN, BINOP_END, false },\n+  { \"<\", LESSTHAN, BINOP_END, false },\n+  { \"**\", STARSTAR, BINOP_EXP, false },\n };\n \n /* Holds the Fortran representation of a boolean, and the integer value we\n@@ -1163,26 +1172,17 @@ yylex (void)\n \t}\n     }\n \n-  /* See if it is a special .foo. operator.  */\n-  for (int i = 0; i < ARRAY_SIZE (dot_ops); i++)\n-    if (strncasecmp (tokstart, dot_ops[i].oper,\n-\t\t     strlen (dot_ops[i].oper)) == 0)\n+  /* See if it is a Fortran operator.  */\n+  for (int i = 0; i < ARRAY_SIZE (fortran_operators); i++)\n+    if (strncasecmp (tokstart, fortran_operators[i].oper,\n+\t\t     strlen (fortran_operators[i].oper)) == 0)\n       {\n-\tgdb_assert (!dot_ops[i].case_sensitive);\n-\tpstate->lexptr += strlen (dot_ops[i].oper);\n-\tyylval.opcode = dot_ops[i].opcode;\n-\treturn dot_ops[i].token;\n+\tgdb_assert (!fortran_operators[i].case_sensitive);\n+\tpstate->lexptr += strlen (fortran_operators[i].oper);\n+\tyylval.opcode = fortran_operators[i].opcode;\n+\treturn fortran_operators[i].token;\n       }\n \n-  /* See if it is an exponentiation operator.  */\n-\n-  if (strncmp (tokstart, \"**\", 2) == 0)\n-    {\n-      pstate->lexptr += 2;\n-      yylval.opcode = BINOP_EXP;\n-      return STARSTAR;\n-    }\n-\n   switch (c = *tokstart)\n     {\n     case 0:"
    },
    {
      "sha": "e31b712f01c5d24811d8f2f8cd82dab520a4fc9a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c654b719d2c186bd645a560525dd3e9c86d15cd/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c654b719d2c186bd645a560525dd3e9c86d15cd/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=7c654b719d2c186bd645a560525dd3e9c86d15cd",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.fortran/dot-ops.exp: Add new tests.\n+\n 2021-01-11  Tom de Vries  <tdevries@suse.de>\n \n \tPR testsuite/26968"
    },
    {
      "sha": "cc9adf37aa4f0fa04d665c8225d40c083c3723f0",
      "filename": "gdb/testsuite/gdb.fortran/dot-ops.exp",
      "status": "modified",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c654b719d2c186bd645a560525dd3e9c86d15cd/gdb/testsuite/gdb.fortran/dot-ops.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c654b719d2c186bd645a560525dd3e9c86d15cd/gdb/testsuite/gdb.fortran/dot-ops.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/dot-ops.exp?ref=7c654b719d2c186bd645a560525dd3e9c86d15cd",
      "patch": "@@ -109,6 +109,36 @@ proc test_dot_operations {} {\n \tgdb_test \"p 4 $gt 4\" \" = .FALSE.\"\n \tgdb_test \"p 3 $gt 4\" \" = .FALSE.\"\n     }\n+\n+    # Now test the symbol based comparison operators.\n+\n+    # Arithmetic EQ\n+    gdb_test \"p 5 == 4\" \" = .FALSE.\"\n+    gdb_test \"p 4 == 4\" \" = .TRUE.\"\n+\n+    # Arithmetic NE\n+    gdb_test \"p 5 /= 4\" \" = .TRUE.\"\n+    gdb_test \"p 4 /= 4\" \" = .FALSE.\"\n+\n+    # Arithmetic LE\n+    gdb_test \"p 5 <= 4\" \" = .FALSE.\"\n+    gdb_test \"p 4 <= 4\" \" = .TRUE.\"\n+    gdb_test \"p 3 <= 4\" \" = .TRUE.\"\n+\n+    # Arithmetic LT\n+    gdb_test \"p 5 < 4\" \" = .FALSE.\"\n+    gdb_test \"p 4 < 4\" \" = .FALSE.\"\n+    gdb_test \"p 3 < 4\" \" = .TRUE.\"\n+\n+    # Arithmetic GE\n+    gdb_test \"p 5 >= 4\" \" = .TRUE.\"\n+    gdb_test \"p 4 >= 4\" \" = .TRUE.\"\n+    gdb_test \"p 3 >= 4\" \" = .FALSE.\"\n+\n+    # Arithmetic GT\n+    gdb_test \"p 5 > 4\" \" = .TRUE.\"\n+    gdb_test \"p 4 > 4\" \" = .FALSE.\"\n+    gdb_test \"p 3 > 4\" \" = .FALSE.\"\n }\n \n # Start of test script."
    }
  ]
}