{
  "sha": "0eb32b6e1dee07ac199b4bba855205e4de099213",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGViMzJiNmUxZGVlMDdhYzE5OWI0YmJhODU1MjA1ZTRkZTA5OTIxMw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-05-27T06:08:55Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-05-28T00:35:02Z"
    },
    "message": "XCOFF linker segmentation fault\n\nThe XCOFF linker temporarily trims the output bfd section list,\nwithout adjusting section_count to suit.  This is a little rude, but\nthe dwarf line number code can easily cope with this situation.  So\ncheck for a NULL end of list as well as limiting the saved section\nVMAs to the first section_count list entries.\n\nAlso fixes\n-FAIL: Weak test 3 (main, static) (32-bit)\n-FAIL: Weak test 3 (main, static) (64-bit)\n\n\tPR 24596\n\t* dwarf2.c (save_section_vma, section_vma_same): Check for NULL\n\tend of section list as well as section_count.\n\t* xcofflink.c (xcoff_link_add_symbols): Fix temporarily changed\n\tsection list before returning error.",
    "tree": {
      "sha": "88dc12d092aaa765abbad027322f67724abbb457",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/88dc12d092aaa765abbad027322f67724abbb457"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0eb32b6e1dee07ac199b4bba855205e4de099213",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0eb32b6e1dee07ac199b4bba855205e4de099213",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0eb32b6e1dee07ac199b4bba855205e4de099213",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0eb32b6e1dee07ac199b4bba855205e4de099213/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "58db964680f0f17197849a714c30430deafb8bc7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58db964680f0f17197849a714c30430deafb8bc7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/58db964680f0f17197849a714c30430deafb8bc7"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 20,
    "deletions": 8
  },
  "files": [
    {
      "sha": "3460d78f3f3cce9f61ae4c70fbb26b6ea51d2988",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0eb32b6e1dee07ac199b4bba855205e4de099213/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0eb32b6e1dee07ac199b4bba855205e4de099213/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=0eb32b6e1dee07ac199b4bba855205e4de099213",
      "patch": "@@ -1,3 +1,11 @@\n+2019-05-28  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24596\n+\t* dwarf2.c (save_section_vma, section_vma_same): Check for NULL\n+\tend of section list as well as section_count.\n+\t* xcofflink.c (xcoff_link_add_symbols): Fix temporarily changed\n+\tsection list before returning error.\n+\n 2019-05-27  Alan Modra  <amodra@gmail.com>\n \n \t* elf.c (bfd_elf_set_group_contents): Exit on zero size section."
    },
    {
      "sha": "65c41611710e33462dc328ce827caa38d87a49f9",
      "filename": "bfd/dwarf2.c",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0eb32b6e1dee07ac199b4bba855205e4de099213/bfd/dwarf2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0eb32b6e1dee07ac199b4bba855205e4de099213/bfd/dwarf2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/dwarf2.c?ref=0eb32b6e1dee07ac199b4bba855205e4de099213",
      "patch": "@@ -4272,7 +4272,9 @@ save_section_vma (const bfd *abfd, struct dwarf2_debug *stash)\n   if (stash->sec_vma == NULL)\n     return FALSE;\n   stash->sec_vma_count = abfd->section_count;\n-  for (i = 0, s = abfd->sections; i < abfd->section_count; i++, s = s->next)\n+  for (i = 0, s = abfd->sections;\n+       s != NULL && i < abfd->section_count;\n+       i++, s = s->next)\n     {\n       if (s->output_section != NULL)\n \tstash->sec_vma[i] = s->output_section->vma + s->output_offset;\n@@ -4301,7 +4303,9 @@ section_vma_same (const bfd *abfd, const struct dwarf2_debug *stash)\n   if (abfd->section_count != stash->sec_vma_count)\n     return FALSE;\n \n-  for (i = 0, s = abfd->sections; i < abfd->section_count; i++, s = s->next)\n+  for (i = 0, s = abfd->sections;\n+       s != NULL && i < abfd->section_count;\n+       i++, s = s->next)\n     {\n       bfd_vma vma;\n "
    },
    {
      "sha": "f9c12e40f343963805e8a76825fc971ce15a9eeb",
      "filename": "bfd/xcofflink.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0eb32b6e1dee07ac199b4bba855205e4de099213/bfd/xcofflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0eb32b6e1dee07ac199b4bba855205e4de099213/bfd/xcofflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/xcofflink.c?ref=0eb32b6e1dee07ac199b4bba855205e4de099213",
      "patch": "@@ -1882,7 +1882,7 @@ xcoff_link_add_symbols (bfd *abfd, struct bfd_link_info *info)\n \n       if (EXTERN_SYM_P (sym.n_sclass))\n \t{\n-\t  bfd_boolean copy;\n+\t  bfd_boolean copy, ok;\n \t  flagword flags;\n \n \t  BFD_ASSERT (section != NULL);\n@@ -2022,12 +2022,12 @@ xcoff_link_add_symbols (bfd *abfd, struct bfd_link_info *info)\n \t  BFD_ASSERT (last_real->next == first_csect);\n \t  last_real->next = NULL;\n \t  flags = (sym.n_sclass == C_EXT ? BSF_GLOBAL : BSF_WEAK);\n-\t  if (! (_bfd_generic_link_add_one_symbol\n-\t\t (info, abfd, name, flags, section, value,\n-\t\t  NULL, copy, TRUE,\n-\t\t  (struct bfd_link_hash_entry **) sym_hash)))\n-\t    goto error_return;\n+\t  ok = (_bfd_generic_link_add_one_symbol\n+\t\t(info, abfd, name, flags, section, value, NULL, copy, TRUE,\n+\t\t (struct bfd_link_hash_entry **) sym_hash));\n \t  last_real->next = first_csect;\n+\t  if (!ok)\n+\t    goto error_return;\n \n \t  if (smtyp == XTY_CM)\n \t    {"
    }
  ]
}