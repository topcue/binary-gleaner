{
  "sha": "3c3de29b048bca6b4aa4235c647b9328e71801b6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2MzZGUyOWIwNDhiY2E2YjRhYTQyMzVjNjQ3YjkzMjhlNzE4MDFiNg==",
  "commit": {
    "author": {
      "name": "Stafford Horne",
      "email": "shorne@gmail.com",
      "date": "2021-05-06T11:51:25Z"
    },
    "committer": {
      "name": "Stafford Horne",
      "email": "shorne@gmail.com",
      "date": "2021-05-06T11:51:25Z"
    },
    "message": "or1k: Avoid R_OR1K_GOT16 overflow failures in presence of R_OR1K_GOT_AHI16\n\nNow that we support R_OR1K_GOT_AHI16 we can relax the R_OR1K_GOT16\noverflow validation check if the section has R_OR1K_GOT_AHI16.\n\nWe cannot simple disable R_OR1K_GOT16 overflow validation as there will\nstill be binaries that will have only R_OR1K_GOT16.  The\nR_OR1K_GOT_AHI16 relocation will only be added by GCC when building with\nthe option -mcmodel=large.\n\nThis assumes that R_OR1K_GOT_AHI16 will come before R_OR1K_GOT16, which\nis the code pattern that will be emitted by GCC.\n\nbfd/ChangeLog:\n\n\tPR 21464\n\t* elf32-or1k.c (or1k_elf_relocate_section): Relax R_OR1K_GOT16\n\toverflow check if we have R_OR1K_GOT_AHI16 followed by\n\tR_OR1K_GOT16.",
    "tree": {
      "sha": "51ae0f8277a170a874621e5d1dfef6b6cce64077",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/51ae0f8277a170a874621e5d1dfef6b6cce64077"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3c3de29b048bca6b4aa4235c647b9328e71801b6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c3de29b048bca6b4aa4235c647b9328e71801b6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3c3de29b048bca6b4aa4235c647b9328e71801b6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c3de29b048bca6b4aa4235c647b9328e71801b6/comments",
  "author": {
    "login": "stffrdhrn",
    "id": 2404255,
    "node_id": "MDQ6VXNlcjI0MDQyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stffrdhrn",
    "html_url": "https://github.com/stffrdhrn",
    "followers_url": "https://api.github.com/users/stffrdhrn/followers",
    "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}",
    "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions",
    "organizations_url": "https://api.github.com/users/stffrdhrn/orgs",
    "repos_url": "https://api.github.com/users/stffrdhrn/repos",
    "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stffrdhrn/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "stffrdhrn",
    "id": 2404255,
    "node_id": "MDQ6VXNlcjI0MDQyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stffrdhrn",
    "html_url": "https://github.com/stffrdhrn",
    "followers_url": "https://api.github.com/users/stffrdhrn/followers",
    "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}",
    "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions",
    "organizations_url": "https://api.github.com/users/stffrdhrn/orgs",
    "repos_url": "https://api.github.com/users/stffrdhrn/repos",
    "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stffrdhrn/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0b3e14c90283c5d234884d0ebe8510bc3c9bc687",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b3e14c90283c5d234884d0ebe8510bc3c9bc687",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0b3e14c90283c5d234884d0ebe8510bc3c9bc687"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 18,
    "deletions": 0
  },
  "files": [
    {
      "sha": "8293e9d7952eabcf8e2f61cfc845b1f5c4337a5f",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c3de29b048bca6b4aa4235c647b9328e71801b6/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c3de29b048bca6b4aa4235c647b9328e71801b6/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=3c3de29b048bca6b4aa4235c647b9328e71801b6",
      "patch": "@@ -1,3 +1,10 @@\n+2021-05-06  Stafford Horne  <shorne@gmail.com>\n+\n+\tPR 21464\n+\t* elf32-or1k.c (or1k_elf_relocate_section): Relax R_OR1K_GOT16\n+\toverflow check if we have R_OR1K_GOT_AHI16 followed by\n+\tR_OR1K_GOT16.\n+\n 2021-05-06  Stafford Horne  <shorne@gmail.com>\n \n \tPR 21464"
    },
    {
      "sha": "5eca4300c4575b8cd529234964339b65dfcec523",
      "filename": "bfd/elf32-or1k.c",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c3de29b048bca6b4aa4235c647b9328e71801b6/bfd/elf32-or1k.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c3de29b048bca6b4aa4235c647b9328e71801b6/bfd/elf32-or1k.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-or1k.c?ref=3c3de29b048bca6b4aa4235c647b9328e71801b6",
      "patch": "@@ -1278,6 +1278,7 @@ or1k_elf_relocate_section (bfd *output_bfd,\n   asection *sgot, *splt;\n   bfd_vma plt_base, got_base, got_sym_value;\n   bool ret_val = true;\n+  bool saw_gotha = false;\n \n   if (htab == NULL)\n     return false;\n@@ -1485,6 +1486,16 @@ or1k_elf_relocate_section (bfd *output_bfd,\n \t\t|| r_type == R_OR1K_GOT_AHI16)\n \t      relocation -= got_sym_value;\n \n+\t    if (r_type == R_OR1K_GOT_AHI16)\n+\t      saw_gotha = true;\n+\n+\t    /* If we have a R_OR1K_GOT16 followed by a R_OR1K_GOT_AHI16\n+\t       relocation we assume the code is doing the right thing to avoid\n+\t       overflows.  Here we mask the lower 16-bit of the relocation to\n+\t       avoid overflow validation failures.  */\n+\t    if (r_type == R_OR1K_GOT16 && saw_gotha)\n+\t      relocation &= 0xffff;\n+\n \t  /* Addend should be zero.  */\n \t  if (rel->r_addend != 0)\n \t    {"
    }
  ]
}