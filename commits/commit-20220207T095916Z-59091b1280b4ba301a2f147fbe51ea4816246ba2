{
  "sha": "59091b1280b4ba301a2f147fbe51ea4816246ba2",
  "node_id": "C_kwDOANOeidoAKDU5MDkxYjEyODBiNGJhMzAxYTJmMTQ3ZmJlNTFlYTQ4MTYyNDZiYTI",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-02-04T16:51:45Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-02-07T09:59:16Z"
    },
    "message": "gdb/disasm: combine the no printing disassembler setup code\n\nWe have three places in gdb where we initialise a disassembler that\nwill not print anything (used for figuring out the length of\ninstructions, or collecting other information from the disassembler).\n\nEach of these places has its own stub function to act as a print like\ncallback, the stub function is identical in each case, and just does\nnothing.\n\nIn this commit I create a new function to initialise a disassembler\nthat doesn't print anything, and have all three locations use this new\nfunction.  There's now only one non-printing stub function.\n\nThere should be no user visible changes after this commit.",
    "tree": {
      "sha": "81fedf649c177123e8efcd6d14b380765928845b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/81fedf649c177123e8efcd6d14b380765928845b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/59091b1280b4ba301a2f147fbe51ea4816246ba2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/59091b1280b4ba301a2f147fbe51ea4816246ba2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/59091b1280b4ba301a2f147fbe51ea4816246ba2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/59091b1280b4ba301a2f147fbe51ea4816246ba2/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "61fb73769a0168afa466bb2245a1a233942203bb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61fb73769a0168afa466bb2245a1a233942203bb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/61fb73769a0168afa466bb2245a1a233942203bb"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 23,
    "deletions": 20
  },
  "files": [
    {
      "sha": "297f83b86508fdb5222471f0dd8153c7235e8107",
      "filename": "gdb/arc-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59091b1280b4ba301a2f147fbe51ea4816246ba2/gdb/arc-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59091b1280b4ba301a2f147fbe51ea4816246ba2/gdb/arc-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arc-tdep.c?ref=59091b1280b4ba301a2f147fbe51ea4816246ba2",
      "patch": "@@ -1306,19 +1306,13 @@ arc_is_in_prologue (struct gdbarch *gdbarch, const struct arc_instruction &insn,\n   return false;\n }\n \n-/* Copy of gdb_buffered_insn_length_fprintf from disasm.c.  */\n-\n-static int ATTRIBUTE_PRINTF (2, 3)\n-arc_fprintf_disasm (void *stream, const char *format, ...)\n-{\n-  return 0;\n-}\n+/* See arc-tdep.h.  */\n \n struct disassemble_info\n arc_disassemble_info (struct gdbarch *gdbarch)\n {\n   struct disassemble_info di;\n-  init_disassemble_info (&di, &null_stream, arc_fprintf_disasm);\n+  init_disassemble_info_for_no_printing (&di);\n   di.arch = gdbarch_bfd_arch_info (gdbarch)->arch;\n   di.mach = gdbarch_bfd_arch_info (gdbarch)->mach;\n   di.endian = gdbarch_byte_order (gdbarch);"
    },
    {
      "sha": "44c702a71779da3e22db97342062f57537d47538",
      "filename": "gdb/disasm.c",
      "status": "modified",
      "additions": 12,
      "deletions": 5,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59091b1280b4ba301a2f147fbe51ea4816246ba2/gdb/disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59091b1280b4ba301a2f147fbe51ea4816246ba2/gdb/disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/disasm.c?ref=59091b1280b4ba301a2f147fbe51ea4816246ba2",
      "patch": "@@ -891,16 +891,23 @@ gdb_insn_length (struct gdbarch *gdbarch, CORE_ADDR addr)\n   return gdb_print_insn (gdbarch, addr, &null_stream, NULL);\n }\n \n-/* fprintf-function for gdb_buffered_insn_length.  This function is a\n-   nop, we don't want to print anything, we just want to compute the\n-   length of the insn.  */\n+/* An fprintf-function for use by the disassembler when we know we don't\n+   want to print anything.  Always returns success.  */\n \n static int ATTRIBUTE_PRINTF (2, 3)\n-gdb_buffered_insn_length_fprintf (void *stream, const char *format, ...)\n+gdb_disasm_null_printf (void *stream, const char *format, ...)\n {\n   return 0;\n }\n \n+/* See disasm.h.  */\n+\n+void\n+init_disassemble_info_for_no_printing (struct disassemble_info *dinfo)\n+{\n+  init_disassemble_info (dinfo, nullptr, gdb_disasm_null_printf);\n+}\n+\n /* Initialize a struct disassemble_info for gdb_buffered_insn_length.\n    Upon return, *DISASSEMBLER_OPTIONS_HOLDER owns the string pointed\n    to by DI.DISASSEMBLER_OPTIONS.  */\n@@ -912,7 +919,7 @@ gdb_buffered_insn_length_init_dis (struct gdbarch *gdbarch,\n \t\t\t\t   CORE_ADDR addr,\n \t\t\t\t   std::string *disassembler_options_holder)\n {\n-  init_disassemble_info (di, NULL, gdb_buffered_insn_length_fprintf);\n+  init_disassemble_info_for_no_printing (di);\n \n   /* init_disassemble_info installs buffer_read_memory, etc.\n      so we don't need to do that here."
    },
    {
      "sha": "359fb6a67fdef53fa2d72c8fdec589c3b0f48797",
      "filename": "gdb/disasm.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59091b1280b4ba301a2f147fbe51ea4816246ba2/gdb/disasm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59091b1280b4ba301a2f147fbe51ea4816246ba2/gdb/disasm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/disasm.h?ref=59091b1280b4ba301a2f147fbe51ea4816246ba2",
      "patch": "@@ -174,4 +174,10 @@ extern char *get_disassembler_options (struct gdbarch *gdbarch);\n \n extern void set_disassembler_options (const char *options);\n \n+/* Setup DINFO with its output function and output stream setup so that\n+   nothing is printed while disassembling.  */\n+\n+extern void init_disassemble_info_for_no_printing\n+  (struct disassemble_info *dinfo);\n+\n #endif"
    },
    {
      "sha": "659adf4f5052a60b7cd2390ba6c16673fcaec85e",
      "filename": "gdb/s12z-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59091b1280b4ba301a2f147fbe51ea4816246ba2/gdb/s12z-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59091b1280b4ba301a2f147fbe51ea4816246ba2/gdb/s12z-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/s12z-tdep.c?ref=59091b1280b4ba301a2f147fbe51ea4816246ba2",
      "patch": "@@ -140,19 +140,15 @@ s12z_dwarf_reg_to_regnum (struct gdbarch *gdbarch, int num)\n \n /* Support functions for frame handling.  */\n \n-/* Copy of gdb_buffered_insn_length_fprintf from disasm.c.  */\n \n-static int ATTRIBUTE_PRINTF (2, 3)\n-s12z_fprintf_disasm (void *stream, const char *format, ...)\n-{\n-  return 0;\n-}\n+/* Return a disassemble_info initialized for s12z disassembly, however,\n+   the disassembler will not actually print anything.  */\n \n static struct disassemble_info\n s12z_disassemble_info (struct gdbarch *gdbarch)\n {\n   struct disassemble_info di;\n-  init_disassemble_info (&di, &null_stream, s12z_fprintf_disasm);\n+  init_disassemble_info_for_no_printing (&di);\n   di.arch = gdbarch_bfd_arch_info (gdbarch)->arch;\n   di.mach = gdbarch_bfd_arch_info (gdbarch)->mach;\n   di.endian = gdbarch_byte_order (gdbarch);"
    }
  ]
}