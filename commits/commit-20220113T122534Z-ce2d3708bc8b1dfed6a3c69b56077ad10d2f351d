{
  "sha": "ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
  "node_id": "C_kwDOANOeidoAKGNlMmQzNzA4YmM4YjFkZmVkNmEzYzY5YjU2MDc3YWQxMGQyZjM1MWQ",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2022-01-13T12:25:34Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2022-01-13T12:25:34Z"
    },
    "message": "Synchronize binutils libiberty sources with gcc version.\n\n+2021-12-30  Lancelot SIX  <lsix@lancelotsix.com>\n+\n+\t* cp-demangle.c (d_clone_suffix): Support digits in clone tag\n+\tnames.\n+\t* testsuite/demangle-expected: Check demangling of clone symbols\n+\twith digits in name.\n+\n+2021-12-16  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tRevert:\n+\t2021-12-16  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* Makefile.in (AR): Add @AR_PLUGIN_OPTION@\n+\t(RANLIB): Add @RANLIB_PLUGIN_OPTION@.\n+\t(configure_deps): Depend on ../config/gcc-plugin.m4.\n+\t* configure.ac: AC_SUBST AR_PLUGIN_OPTION and\n+\tRANLIB_PLUGIN_OPTION.\n+\t* aclocal.m4: Regenerated.\n+\t* configure: Likewise.\n+\n+2021-12-15  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* Makefile.in (AR): Add @AR_PLUGIN_OPTION@\n+\t(RANLIB): Add @RANLIB_PLUGIN_OPTION@.\n+\t(configure_deps): Depend on ../config/gcc-plugin.m4.\n+\t* configure.ac: AC_SUBST AR_PLUGIN_OPTION and\n+\tRANLIB_PLUGIN_OPTION.\n+\t* aclocal.m4: Regenerated.\n+\t* configure: Likewise.\n+\n+2021-11-29  Eric Gallager  <egallager@gcc.gnu.org>\n+\n+\tPR other/103021\n+\t* Makefile.in: Use ETAGS variable in TAGS target.\n+\t* configure: Regenerate.\n+\t* configure.ac: Allow ETAGS variable to be overridden.\n+\n+2021-11-29  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* make-temp-file.c (try_dir): Check to see if the dir\n+\tis actually a directory.\n+\n+2021-10-22  Eric Gallager  <egallager@gcc.gnu.org>\n+\n+\tPR other/102663\n+\t* Makefile.in: Allow dvi-formatted documentation\n+\tto be installed.\n+\n+2021-10-17  Lu?s Ferreira  <contact@lsferreira.net>\n+\n+\tPR d/102618\n+\t* d-demangle.c (dlang_parse_qualified): Handle anonymous\n+\tsymbols correctly.\n+\t* testsuite/d-demangle-expected: New tests to cover anonymous\n+\tsymbols.\n+\n+2021-10-14  Lu?s Ferreira  <contact@lsferreira.net>\n+\n+\t* testsuite/d-demangle-expected: Add test case for function literals.\n+\n+2021-10-14  Lu?s Ferreira  <contact@lsferreira.net>\n+\n+\t* testsuite/d-demangle-expected: Add test cases for simple special\n+\tmangles.\n+\n+2021-10-12  Lu?s Ferreira  <contact@lsferreira.net>\n+\n+\t* d-demangle.c (dlang_parse_qualified): Remove redudant parenthesis\n+\taround lhs and rhs of assignments.\n+\n+2021-10-01  Lu?s Ferreira  <contact@lsferreira.net>\n+\n+\t* testsuite/d-demangle-expected: Add missing format for new test\n+\n+2021-09-23  Lu?s Ferreira  <contact@lsferreira.net>\n+\n+\t* d-demangle.c (dlang_Type): Validate MANGLED is nonnull.\n+\t* testsuite/d-demangle-expected: New test.\n+\n+2021-09-23  Lu?s Ferreira  <contact@lsferreira.net>\n+\n+\t* d-demangle.c (dlang_symbol_backref): Ensure strlen of\n+\tstring is less than length computed by dlang_number.\n+\n+2021-09-01  Iain Sandoe  <iain@sandoe.co.uk>\n\n \t* configure: Regenerate.\n+\t* configure.ac: Do not search for sbrk on Darwin.\n+\t* xmalloc.c: Do not declare sbrk unless it has been found\n+\tby configure.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_identifier): Skip over fake parent manglings.\n+\t* testsuite/d-demangle-expected: Add tests.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_parse_arrayliteral): Add 'info' parameter.\n+\t(dlang_parse_assocarray): Likewise.\n+\t(dlang_parse_structlit): Likewise.\n+\t(dlang_value): Likewise.  Handle function literal symbols.\n+\t(dlang_template_args): Pass 'info' to dlang_value.\n+\t* testsuite/d-demangle-expected: Add new test.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_attributes): Handle typeof(*null).\n+\t(dlang_type): Likewise.  Demangle 'n' as typeof(null).\n+\t* testsuite/d-demangle-expected: Update tests.\n+\n+2021-08-23  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* simple-object-mach-o.c (simple_object_mach_o_write_segment):\n+\tCast the first argument to set_32 as needed.\n\n-2021-07-03  Nick Clifton  <nickc@redhat.com>\n+2021-08-18  Iain Sandoe  <iain@sandoe.co.uk>\n\n+\t* simple-object-mach-o.c (simple_object_mach_o_write_segment):\n+\tArrange to swap the LTO index tables where needed.\n # Please enter the commit message for your changes. Lines starting",
    "tree": {
      "sha": "6e26cf694d94bc76bb00957617033871d7415487",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6e26cf694d94bc76bb00957617033871d7415487"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4b74833d1a27478968e4179a8217521315fa9331",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4b74833d1a27478968e4179a8217521315fa9331",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4b74833d1a27478968e4179a8217521315fa9331"
    }
  ],
  "stats": {
    "total": 563,
    "additions": 360,
    "deletions": 203
  },
  "files": [
    {
      "sha": "7108265f77606ee0ac2414336854b131e8b5a71a",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -1,3 +1,11 @@\n+2022-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\tImport from gcc mainline:\n+\n+\t2021-01-03  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* libiberty.h (strverscmp): Delete duplicate prototype.\n+\n 2021-12-07  John Baldwin  <jhb@FreeBSD.org>\n \n \t* elf/common.h (AT_FREEBSD_FXRNG, AT_FREEBSD_KPRELOAD): Define."
    },
    {
      "sha": "a65ced9c820281ca86dec9aba29ada694e2c0378",
      "filename": "include/libiberty.h",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/include/libiberty.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/include/libiberty.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/libiberty.h?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -713,11 +713,6 @@ extern unsigned long long int strtoull (const char *nptr,\n                                         char **endptr, int base);\n #endif\n \n-#if defined(HAVE_DECL_STRVERSCMP) && !HAVE_DECL_STRVERSCMP\n-/* Compare version strings.  */\n-extern int strverscmp (const char *, const char *);\n-#endif\n-\n /* Set the title of a process */\n extern void setproctitle (const char *name, ...);\n "
    },
    {
      "sha": "b283655f3cd49fb67640f45d4cc20d4d6eb2a1bf",
      "filename": "libiberty/ChangeLog",
      "status": "modified",
      "additions": 116,
      "deletions": 3,
      "changes": 119,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/ChangeLog?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -1,10 +1,123 @@\n-2021-07-03  Nick Clifton  <nickc@redhat.com>\n+2021-12-30  Lancelot SIX  <lsix@lancelotsix.com>\n+\n+\t* cp-demangle.c (d_clone_suffix): Support digits in clone tag\n+\tnames.\n+\t* testsuite/demangle-expected: Check demangling of clone symbols\n+\twith digits in name.\n+\n+2021-12-16  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tRevert:\n+\t2021-12-16  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* Makefile.in (AR): Add @AR_PLUGIN_OPTION@\n+\t(RANLIB): Add @RANLIB_PLUGIN_OPTION@.\n+\t(configure_deps): Depend on ../config/gcc-plugin.m4.\n+\t* configure.ac: AC_SUBST AR_PLUGIN_OPTION and\n+\tRANLIB_PLUGIN_OPTION.\n+\t* aclocal.m4: Regenerated.\n+\t* configure: Likewise.\n+\n+2021-12-15  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* Makefile.in (AR): Add @AR_PLUGIN_OPTION@\n+\t(RANLIB): Add @RANLIB_PLUGIN_OPTION@.\n+\t(configure_deps): Depend on ../config/gcc-plugin.m4.\n+\t* configure.ac: AC_SUBST AR_PLUGIN_OPTION and\n+\tRANLIB_PLUGIN_OPTION.\n+\t* aclocal.m4: Regenerated.\n+\t* configure: Likewise.\n+\n+2021-11-29  Eric Gallager  <egallager@gcc.gnu.org>\n+\n+\tPR other/103021\n+\t* Makefile.in: Use ETAGS variable in TAGS target.\n+\t* configure: Regenerate.\n+\t* configure.ac: Allow ETAGS variable to be overridden.\n+\n+2021-11-29  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* make-temp-file.c (try_dir): Check to see if the dir\n+\tis actually a directory.\n+\n+2021-10-22  Eric Gallager  <egallager@gcc.gnu.org>\n+\n+\tPR other/102663\n+\t* Makefile.in: Allow dvi-formatted documentation\n+\tto be installed.\n+\n+2021-10-17  Lu\u00eds Ferreira  <contact@lsferreira.net>\n+\n+\tPR d/102618\n+\t* d-demangle.c (dlang_parse_qualified): Handle anonymous\n+\tsymbols correctly.\n+\t* testsuite/d-demangle-expected: New tests to cover anonymous\n+\tsymbols.\n+\n+2021-10-14  Lu\u00eds Ferreira  <contact@lsferreira.net>\n+\n+\t* testsuite/d-demangle-expected: Add test case for function literals.\n+\n+2021-10-14  Lu\u00eds Ferreira  <contact@lsferreira.net>\n+\n+\t* testsuite/d-demangle-expected: Add test cases for simple special\n+\tmangles.\n+\n+2021-10-12  Lu\u00eds Ferreira  <contact@lsferreira.net>\n+\n+\t* d-demangle.c (dlang_parse_qualified): Remove redudant parenthesis\n+\taround lhs and rhs of assignments.\n+\n+2021-10-01  Lu\u00eds Ferreira  <contact@lsferreira.net>\n+\n+\t* testsuite/d-demangle-expected: Add missing format for new test\n+\n+2021-09-23  Lu\u00eds Ferreira  <contact@lsferreira.net>\n+\n+\t* d-demangle.c (dlang_Type): Validate MANGLED is nonnull.\n+\t* testsuite/d-demangle-expected: New test.\n+\n+2021-09-23  Lu\u00eds Ferreira  <contact@lsferreira.net>\n+\n+\t* d-demangle.c (dlang_symbol_backref): Ensure strlen of\n+\tstring is less than length computed by dlang_number.\n+\n+2021-09-01  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* configure: Regenerate.\n+\t* configure.ac: Do not search for sbrk on Darwin.\n+\t* xmalloc.c: Do not declare sbrk unless it has been found\n+\tby configure.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_identifier): Skip over fake parent manglings.\n+\t* testsuite/d-demangle-expected: Add tests.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_parse_arrayliteral): Add 'info' parameter.\n+\t(dlang_parse_assocarray): Likewise.\n+\t(dlang_parse_structlit): Likewise.\n+\t(dlang_value): Likewise.  Handle function literal symbols.\n+\t(dlang_template_args): Pass 'info' to dlang_value.\n+\t* testsuite/d-demangle-expected: Add new test.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_attributes): Handle typeof(*null).\n+\t(dlang_type): Likewise.  Demangle 'n' as typeof(null).\n+\t* testsuite/d-demangle-expected: Update tests.\n+\n+2021-08-23  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* simple-object-mach-o.c (simple_object_mach_o_write_segment):\n+\tCast the first argument to set_32 as needed.\n \n-2021-07-03  Nick Clifton  <nickc@redhat.com>\n+2021-08-18  Iain Sandoe  <iain@sandoe.co.uk>\n \n-\t* 2.37 release branch created.\n+\t* simple-object-mach-o.c (simple_object_mach_o_write_segment):\n+\tArrange to swap the LTO index tables where needed.\n \n 2021-06-30  Gerald Pfeifer  <gerald@pfeifer.com>\n "
    },
    {
      "sha": "1b17c2e3a47eba7aa75c1564116b06621ef32e1d",
      "filename": "libiberty/Makefile.in",
      "status": "modified",
      "additions": 24,
      "deletions": 5,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/Makefile.in?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -29,6 +29,7 @@ bindir = @bindir@\n libdir = @libdir@\n includedir = @includedir@\n target_header_dir = @target_header_dir@\n+dvidir = @dvidir@\n objext = @OBJEXT@\n \n SHELL = @SHELL@\n@@ -49,13 +50,13 @@ mkinstalldirs = $(SHELL) $(libiberty_topdir)/mkinstalldirs\n # Some compilers can't handle cc -c blah.c -o foo/blah.o.\n OUTPUT_OPTION = @OUTPUT_OPTION@\n \n-AR = @AR@ @AR_PLUGIN_OPTION@\n+AR = @AR@\n AR_FLAGS = rc\n \n CC = @CC@\n CFLAGS = @CFLAGS@\n CPPFLAGS = @CPPFLAGS@\n-RANLIB = @RANLIB@ @RANLIB_PLUGIN_OPTION@\n+RANLIB = @RANLIB@\n MAKEINFO = @MAKEINFO@\n PERL = @PERL@\n \n@@ -276,7 +277,24 @@ $(TESTLIB): $(REQUIRED_OFILES) $(CONFIGURED_OFILES)\n info: libiberty.info info-subdir\n install-info: install-info-subdir\n clean-info: clean-info-subdir\n-dvi: libiberty.dvi dvi-subdir\n+\n+LIBIBERTY_DVIFILES = libiberty.dvi\n+\n+dvi: $(LIBIBERTY_DVIFILES) dvi-subdir\n+\n+.PHONY: install-dvi\n+\n+dvi__strip_dir = `echo $$p | sed -e 's|^.*/||'`;\n+\n+install-dvi: $(LIBIBERTY_DVIFILES)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(dvidir)\" || $(mkinstalldirs) \"$(DESTDIR)$(dvidir)\"\n+\t@list='$(LIBIBERTY_DVIFILES)'; for p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  f=$(dvi__strip_dir) \\\n+\t  echo \" $(INSTALL_DATA) '$$d$$p' '$(DESTDIR)$(dvidir)/$$f'\"; \\\n+\t  $(INSTALL_DATA) \"$$d$$p\" \"$(DESTDIR)$(dvidir)/$$f\"; \\\n+\tdone\n \n LIBIBERTY_PDFFILES = libiberty.pdf\n \n@@ -411,8 +429,10 @@ stamp-noasandir:\n \n .PHONY: all etags tags TAGS ls clean stage1 stage2\n \n+ETAGS = @ETAGS@\n+\n etags tags TAGS: etags-subdir\n-\tcd $(srcdir) && etags $(CFILES)\n+\tcd $(srcdir) && $(ETAGS) $(CFILES)\n \n # The standalone demangler (c++filt) has been moved to binutils.\n # But make this target work anyway for demangler hacking.\n@@ -487,7 +507,6 @@ aclocal_deps = \\\n \t$(srcdir)/../config/acx.m4 \\\n \t$(srcdir)/../config/cet.m4 \\\n \t$(srcdir)/../config/enable.m4 \\\n-\t$(srcdir)/../config/gcc-plugin.m4 \\\n \t$(srcdir)/../config/no-executables.m4 \\\n \t$(srcdir)/../config/override.m4 \\\n \t$(srcdir)/../config/picflag.m4 \\"
    },
    {
      "sha": "3378316dced982635e91397312018e5ea1f5f6e4",
      "filename": "libiberty/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/aclocal.m4?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -15,7 +15,6 @@ m4_ifndef([AC_CONFIG_MACRO_DIRS], [m4_defun([_AM_CONFIG_MACRO_DIRS], [])m4_defun\n m4_include([../config/acx.m4])\n m4_include([../config/cet.m4])\n m4_include([../config/enable.m4])\n-m4_include([../config/gcc-plugin.m4])\n m4_include([../config/no-executables.m4])\n m4_include([../config/picflag.m4])\n m4_include([../config/warnings.m4])"
    },
    {
      "sha": "56c8e6b26b53cf25ffb9947f8232a9e9b7063d01",
      "filename": "libiberty/configure",
      "status": "modified",
      "additions": 33,
      "deletions": 144,
      "changes": 177,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/configure?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -645,8 +645,6 @@ CPPFLAGS\n LDFLAGS\n CFLAGS\n CC\n-RANLIB_PLUGIN_OPTION\n-AR_PLUGIN_OPTION\n RANLIB\n AR\n host_os\n@@ -661,6 +659,7 @@ HAVE_PERL\n PERL\n BUILD_INFO\n MAKEINFO\n+ETAGS\n NOTMAINT\n MAINT\n libiberty_topdir\n@@ -683,6 +682,7 @@ infodir\n docdir\n oldincludedir\n includedir\n+runstatedir\n localstatedir\n sharedstatedir\n sysconfdir\n@@ -762,6 +762,7 @@ datadir='${datarootdir}'\n sysconfdir='${prefix}/etc'\n sharedstatedir='${prefix}/com'\n localstatedir='${prefix}/var'\n+runstatedir='${localstatedir}/run'\n includedir='${prefix}/include'\n oldincludedir='/usr/include'\n docdir='${datarootdir}/doc/${PACKAGE}'\n@@ -1014,6 +1015,15 @@ do\n   | -silent | --silent | --silen | --sile | --sil)\n     silent=yes ;;\n \n+  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n+  | --runstate | --runstat | --runsta | --runst | --runs \\\n+  | --run | --ru | --r)\n+    ac_prev=runstatedir ;;\n+  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n+  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n+  | --run=* | --ru=* | --r=*)\n+    runstatedir=$ac_optarg ;;\n+\n   -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n     ac_prev=sbindir ;;\n   -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n@@ -1151,7 +1161,7 @@ fi\n for ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n \t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n \t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n-\t\tlibdir localedir mandir\n+\t\tlibdir localedir mandir runstatedir\n do\n   eval ac_val=\\$$ac_var\n   # Remove trailing slashes.\n@@ -1304,6 +1314,7 @@ Fine tuning of the installation directories:\n   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n+  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n   --libdir=DIR            object code libraries [EPREFIX/lib]\n   --includedir=DIR        C header files [PREFIX/include]\n   --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n@@ -2560,6 +2571,11 @@ else\n   NOTMAINT=''\n fi\n \n+if test -z \"$ETAGS\"; then\n+  ETAGS=etags\n+fi\n+\n+\n # Do we have a single-tree copy of texinfo?  Even if we do, we can't\n # rely on it - libiberty is built before texinfo.\n # Extract the first word of \"makeinfo\", so it can be a program name with args.\n@@ -2931,144 +2947,6 @@ else\n fi\n \n \n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -plugin option\" >&5\n-$as_echo_n \"checking for -plugin option... \" >&6; }\n-\n-plugin_names=\"liblto_plugin.so liblto_plugin-0.dll cyglto_plugin-0.dll\"\n-plugin_option=\n-for plugin in $plugin_names; do\n-  plugin_so=`${CC} ${CFLAGS} --print-prog-name $plugin`\n-  if test x$plugin_so = x$plugin; then\n-    plugin_so=`${CC} ${CFLAGS} --print-file-name $plugin`\n-  fi\n-  if test x$plugin_so != x$plugin; then\n-    plugin_option=\"--plugin $plugin_so\"\n-    break\n-  fi\n-done\n-if test -n \"$ac_tool_prefix\"; then\n-  # Extract the first word of \"${ac_tool_prefix}ar\", so it can be a program name with args.\n-set dummy ${ac_tool_prefix}ar; ac_word=$2\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n-$as_echo_n \"checking for $ac_word... \" >&6; }\n-if ${ac_cv_prog_AR+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if test -n \"$AR\"; then\n-  ac_cv_prog_AR=\"$AR\" # Let the user override the test.\n-else\n-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-    for ac_exec_ext in '' $ac_executable_extensions; do\n-  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_prog_AR=\"${ac_tool_prefix}ar\"\n-    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-  done\n-IFS=$as_save_IFS\n-\n-fi\n-fi\n-AR=$ac_cv_prog_AR\n-if test -n \"$AR\"; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AR\" >&5\n-$as_echo \"$AR\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-fi\n-\n-\n-fi\n-if test -z \"$ac_cv_prog_AR\"; then\n-  ac_ct_AR=$AR\n-  # Extract the first word of \"ar\", so it can be a program name with args.\n-set dummy ar; ac_word=$2\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n-$as_echo_n \"checking for $ac_word... \" >&6; }\n-if ${ac_cv_prog_ac_ct_AR+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if test -n \"$ac_ct_AR\"; then\n-  ac_cv_prog_ac_ct_AR=\"$ac_ct_AR\" # Let the user override the test.\n-else\n-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-    for ac_exec_ext in '' $ac_executable_extensions; do\n-  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_prog_ac_ct_AR=\"ar\"\n-    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-  done\n-IFS=$as_save_IFS\n-\n-fi\n-fi\n-ac_ct_AR=$ac_cv_prog_ac_ct_AR\n-if test -n \"$ac_ct_AR\"; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR\" >&5\n-$as_echo \"$ac_ct_AR\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-fi\n-\n-  if test \"x$ac_ct_AR\" = x; then\n-    AR=\"\"\n-  else\n-    case $cross_compiling:$ac_tool_warned in\n-yes:)\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n-$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\n-ac_tool_warned=yes ;;\n-esac\n-    AR=$ac_ct_AR\n-  fi\n-else\n-  AR=\"$ac_cv_prog_AR\"\n-fi\n-\n-if test \"${AR}\" = \"\" ; then\n-  as_fn_error $? \"Required archive tool 'ar' not found on PATH.\" \"$LINENO\" 5\n-fi\n-touch conftest.c\n-${AR} $plugin_option rc conftest.a conftest.c\n-if test \"$?\" != 0; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: Failed: $AR $plugin_option rc\" >&5\n-$as_echo \"$as_me: WARNING: Failed: $AR $plugin_option rc\" >&2;}\n-  plugin_option=\n-fi\n-rm -f conftest.*\n-if test -n \"$plugin_option\"; then\n-  PLUGIN_OPTION=\"$plugin_option\"\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $plugin_option\" >&5\n-$as_echo \"$plugin_option\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-fi\n-\n-if test -n \"$PLUGIN_OPTION\"; then\n-  if $AR --help 2>&1 | grep -q \"\\--plugin\"; then\n-    AR_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n-\n-  fi\n-  if $RANLIB --help 2>&1 | grep -q \"\\--plugin\"; then\n-    RANLIB_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n-\n-  fi\n-fi\n-\n # Add --enable-multilib to configure.\n # Default to --enable-multilib\n # Check whether --enable-multilib was given.\n@@ -6155,9 +6033,16 @@ vars=\"sys_errlist sys_nerr sys_siglist\"\n \n checkfuncs=\"__fsetlocking canonicalize_file_name dup3 getrlimit getrusage \\\n  getsysinfo gettimeofday on_exit pipe2 psignal pstat_getdynamic pstat_getstatic \\\n- realpath setrlimit sbrk spawnve spawnvpe strerror strsignal sysconf sysctl \\\n+ realpath setrlimit spawnve spawnvpe strerror strsignal sysconf sysctl \\\n  sysmp table times wait3 wait4\"\n \n+#\u00a0Darwin has sbrk, but it is deprecated and that produces build-time warnings\n+#\u00a0so do not check for it.\n+case \"${host}\" in\n+  *-*-darwin*) ;;\n+  *) checkfuncs=\"$checkfuncs sbrk\"\n+esac\n+\n # These are neither executed nor required, but they help keep\n # autoheader happy without adding a bunch of text to acconfig.h.\n if test \"x\" = \"y\"; then\n@@ -7386,7 +7271,10 @@ fi\n cat >>confdefs.h <<_ACEOF\n #define HAVE_DECL_REALLOC $ac_have_decl\n _ACEOF\n-ac_fn_c_check_decl \"$LINENO\" \"sbrk\" \"ac_cv_have_decl_sbrk\" \"$ac_includes_default\"\n+\n+  case \"${host}\" in\n+      *-*-darwin*) ;; # Darwin's sbrk implementation is deprecated.\n+      *) ac_fn_c_check_decl \"$LINENO\" \"sbrk\" \"ac_cv_have_decl_sbrk\" \"$ac_includes_default\"\n if test \"x$ac_cv_have_decl_sbrk\" = xyes; then :\n   ac_have_decl=1\n else\n@@ -7396,7 +7284,8 @@ fi\n cat >>confdefs.h <<_ACEOF\n #define HAVE_DECL_SBRK $ac_have_decl\n _ACEOF\n-\n+;;\n+  esac\n   ac_fn_c_check_decl \"$LINENO\" \"strtol\" \"ac_cv_have_decl_strtol\" \"$ac_includes_default\"\n if test \"x$ac_cv_have_decl_strtol\" = xyes; then :\n   ac_have_decl=1"
    },
    {
      "sha": "84a7b378fad9d082951d79055a5dd2c435015b37",
      "filename": "libiberty/configure.ac",
      "status": "modified",
      "additions": 18,
      "deletions": 14,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/configure.ac?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -61,6 +61,11 @@ fi\n AC_SUBST(MAINT)dnl\n AC_SUBST(NOTMAINT)dnl\n \n+if test -z \"$ETAGS\"; then\n+  ETAGS=etags\n+fi\n+AC_SUBST([ETAGS])\n+\n # Do we have a single-tree copy of texinfo?  Even if we do, we can't\n # rely on it - libiberty is built before texinfo.\n AC_CHECK_PROG(MAKEINFO, makeinfo, makeinfo, )\n@@ -108,18 +113,6 @@ dnl to call AC_CHECK_PROG.\n AC_CHECK_TOOL(AR, ar)\n AC_CHECK_TOOL(RANLIB, ranlib, :)\n \n-GCC_PLUGIN_OPTION(PLUGIN_OPTION)\n-if test -n \"$PLUGIN_OPTION\"; then\n-  if $AR --help 2>&1 | grep -q \"\\--plugin\"; then\n-    AR_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n-    AC_SUBST(AR_PLUGIN_OPTION)\n-  fi\n-  if $RANLIB --help 2>&1 | grep -q \"\\--plugin\"; then\n-    RANLIB_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n-    AC_SUBST(RANLIB_PLUGIN_OPTION)\n-  fi\n-fi\n-\n dnl When switching to automake, replace the following with AM_ENABLE_MULTILIB.\n # Add --enable-multilib to configure.\n # Default to --enable-multilib\n@@ -407,9 +400,16 @@ vars=\"sys_errlist sys_nerr sys_siglist\"\n \n checkfuncs=\"__fsetlocking canonicalize_file_name dup3 getrlimit getrusage \\\n  getsysinfo gettimeofday on_exit pipe2 psignal pstat_getdynamic pstat_getstatic \\\n- realpath setrlimit sbrk spawnve spawnvpe strerror strsignal sysconf sysctl \\\n+ realpath setrlimit spawnve spawnvpe strerror strsignal sysconf sysctl \\\n  sysmp table times wait3 wait4\"\n \n+#\u00a0Darwin has sbrk, but it is deprecated and that produces build-time warnings\n+#\u00a0so do not check for it.\n+case \"${host}\" in\n+  *-*-darwin*) ;;\n+  *) checkfuncs=\"$checkfuncs sbrk\"\n+esac\n+\n # These are neither executed nor required, but they help keep\n # autoheader happy without adding a bunch of text to acconfig.h.\n if test \"x\" = \"y\"; then\n@@ -707,7 +707,11 @@ if test -z \"${setobjs}\"; then\n \n   AC_CHECK_FUNCS($checkfuncs)\n   AC_CHECK_DECLS([basename(char *), ffs, asprintf, vasprintf, snprintf, vsnprintf])\n-  AC_CHECK_DECLS([calloc, getenv, getopt, malloc, realloc, sbrk])\n+  AC_CHECK_DECLS([calloc, getenv, getopt, malloc, realloc])\n+  case \"${host}\" in\n+      *-*-darwin*) ;; # Darwin's sbrk implementation is deprecated.\n+      *) AC_CHECK_DECLS([sbrk]);;\n+  esac\n   AC_CHECK_DECLS([strtol, strtoul, strtoll, strtoull])\n   AC_CHECK_DECLS([strverscmp])\n   AC_CHECK_DECLS([strnlen])"
    },
    {
      "sha": "6dff7d28fcf2e6bda72c07c6783d3f373c005bb3",
      "filename": "libiberty/cp-demangle.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/cp-demangle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/cp-demangle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/cp-demangle.c?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -3884,10 +3884,11 @@ d_clone_suffix (struct d_info *di, struct demangle_component *encoding)\n   const char *pend = suffix;\n   struct demangle_component *n;\n \n-  if (*pend == '.' && (IS_LOWER (pend[1]) || pend[1] == '_'))\n+  if (*pend == '.' && (IS_LOWER (pend[1]) || IS_DIGIT (pend[1])\n+\t\t       || pend[1] == '_'))\n     {\n       pend += 2;\n-      while (IS_LOWER (*pend) || *pend == '_')\n+      while (IS_LOWER (*pend) || IS_DIGIT (*pend) || *pend == '_')\n \t++pend;\n     }\n   while (*pend == '.' && IS_DIGIT (pend[1]))"
    },
    {
      "sha": "e53990ef4f373cddaa53e81cb8ed6b4778e2355e",
      "filename": "libiberty/d-demangle.c",
      "status": "modified",
      "additions": 74,
      "deletions": 27,
      "changes": 101,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/d-demangle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/d-demangle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/d-demangle.c?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -191,7 +191,8 @@ static const char *dlang_function_args (string *, const char *,\n \n static const char *dlang_type (string *, const char *, struct dlang_info *);\n \n-static const char *dlang_value (string *, const char *, const char *, char);\n+static const char *dlang_value (string *, const char *, const char *, char,\n+\t\t\t\tstruct dlang_info *);\n \n static const char *dlang_parse_qualified (string *, const char *,\n \t\t\t\t\t  struct dlang_info *, int);\n@@ -252,15 +253,15 @@ dlang_hexdigit (const char *mangled, char *ret)\n \n   c = mangled[0];\n   if (!ISDIGIT (c))\n-    (*ret) = (c - (ISUPPER (c) ? 'A' : 'a') + 10);\n+    *ret = c - (ISUPPER (c) ? 'A' : 'a') + 10;\n   else\n-    (*ret) = (c - '0');\n+    *ret = c - '0';\n \n   c = mangled[1];\n   if (!ISDIGIT (c))\n-    (*ret) = (*ret << 4) | (c - (ISUPPER (c) ? 'A' : 'a') + 10);\n+    *ret = (*ret << 4) | (c - (ISUPPER (c) ? 'A' : 'a') + 10);\n   else\n-    (*ret) = (*ret << 4) | (c - '0');\n+    *ret = (*ret << 4) | (c - '0');\n \n   mangled += 2;\n \n@@ -337,7 +338,7 @@ dlang_decode_backref (const char *mangled, long *ret)\n static const char *\n dlang_backref (const char *mangled, const char **ret, struct dlang_info *info)\n {\n-  (*ret) = NULL;\n+  *ret = NULL;\n \n   if (mangled == NULL || *mangled != 'Q')\n     return NULL;\n@@ -355,7 +356,7 @@ dlang_backref (const char *mangled, const char **ret, struct dlang_info *info)\n     return NULL;\n \n   /* Set the position of the back reference.  */\n-  (*ret) = qpos - refpos;\n+  *ret = qpos - refpos;\n \n   return mangled;\n }\n@@ -380,7 +381,7 @@ dlang_symbol_backref (string *decl, const char *mangled,\n \n   /* Must point to a simple identifier.  */\n   backref = dlang_number (backref, &len);\n-  if (backref == NULL)\n+  if (backref == NULL || strlen(backref) < len)\n     return NULL;\n \n   backref = dlang_lname (decl, backref, len);\n@@ -573,9 +574,11 @@ dlang_attributes (string *decl, const char *mangled)\n \tcase 'g':\n \tcase 'h':\n \tcase 'k':\n+\tcase 'n':\n \t  /* inout parameter is represented as 'Ng'.\n \t     vector parameter is represented as 'Nh'.\n-\t     return paramenter is represented as 'Nk'.\n+\t     return parameter is represented as 'Nk'.\n+\t     typeof(*null) parameter is represented as 'Nn'.\n \t     If we see this, then we know we're really in the\n \t     parameter list.  Rewind and break.  */\n \t  mangled--;\n@@ -787,6 +790,12 @@ dlang_type (string *decl, const char *mangled, struct dlang_info *info)\n \t  string_append (decl, \")\");\n \t  return mangled;\n \t}\n+      else if (*mangled == 'n') /* typeof(*null) */\n+\t{\n+\t  mangled++;\n+\t  string_append (decl, \"typeof(*null)\");\n+\t  return mangled;\n+\t}\n       else\n \treturn NULL;\n     case 'A': /* dynamic array (T[]) */\n@@ -866,7 +875,7 @@ dlang_type (string *decl, const char *mangled, struct dlang_info *info)\n       szmods = string_length (&mods);\n \n       /* Back referenced function type.  */\n-      if (*mangled == 'Q')\n+      if (mangled && *mangled == 'Q')\n \tmangled = dlang_type_backref (decl, mangled, info, 1);\n       else\n \tmangled = dlang_function_type (decl, mangled, info);\n@@ -884,7 +893,7 @@ dlang_type (string *decl, const char *mangled, struct dlang_info *info)\n     /* Basic types */\n     case 'n':\n       mangled++;\n-      string_append (decl, \"none\");\n+      string_append (decl, \"typeof(null)\");\n       return mangled;\n     case 'v':\n       mangled++;\n@@ -1035,6 +1044,25 @@ dlang_identifier (string *decl, const char *mangled, struct dlang_info *info)\n       && (mangled[2] == 'T' || mangled[2] == 'U'))\n     return dlang_parse_template (decl, mangled, info, len);\n \n+  /* There can be multiple different declarations in the same function that have\n+     the same mangled name.  To make the mangled names unique, a fake parent in\n+     the form `__Sddd' is added to the symbol.  */\n+  if (len >= 4 && mangled[0] == '_' && mangled[1] == '_' && mangled[2] == 'S')\n+    {\n+      const char *numptr = mangled + 3;\n+      while (numptr < (mangled + len) && ISDIGIT (*numptr))\n+\tnumptr++;\n+\n+      if (mangled + len == numptr)\n+\t{\n+\t  /* Skip over the fake parent.  */\n+\t  mangled += len;\n+\t  return dlang_identifier (decl, mangled, info);\n+\t}\n+\n+      /* else demangle it as a plain identifier.  */\n+    }\n+\n   return dlang_lname (decl, mangled, len);\n }\n \n@@ -1378,7 +1406,8 @@ dlang_parse_string (string *decl, const char *mangled)\n /* Extract the static array value from MANGLED and append it to DECL.\n    Return the remaining string on success or NULL on failure.  */\n static const char *\n-dlang_parse_arrayliteral (string *decl, const char *mangled)\n+dlang_parse_arrayliteral (string *decl, const char *mangled,\n+\t\t\t  struct dlang_info *info)\n {\n   unsigned long elements;\n \n@@ -1389,7 +1418,7 @@ dlang_parse_arrayliteral (string *decl, const char *mangled)\n   string_append (decl, \"[\");\n   while (elements--)\n     {\n-      mangled = dlang_value (decl, mangled, NULL, '\\0');\n+      mangled = dlang_value (decl, mangled, NULL, '\\0', info);\n       if (mangled == NULL)\n \treturn NULL;\n \n@@ -1404,7 +1433,8 @@ dlang_parse_arrayliteral (string *decl, const char *mangled)\n /* Extract the associative array value from MANGLED and append it to DECL.\n    Return the remaining string on success or NULL on failure.  */\n static const char *\n-dlang_parse_assocarray (string *decl, const char *mangled)\n+dlang_parse_assocarray (string *decl, const char *mangled,\n+\t\t\tstruct dlang_info *info)\n {\n   unsigned long elements;\n \n@@ -1415,12 +1445,12 @@ dlang_parse_assocarray (string *decl, const char *mangled)\n   string_append (decl, \"[\");\n   while (elements--)\n     {\n-      mangled = dlang_value (decl, mangled, NULL, '\\0');\n+      mangled = dlang_value (decl, mangled, NULL, '\\0', info);\n       if (mangled == NULL)\n \treturn NULL;\n \n       string_append (decl, \":\");\n-      mangled = dlang_value (decl, mangled, NULL, '\\0');\n+      mangled = dlang_value (decl, mangled, NULL, '\\0', info);\n       if (mangled == NULL)\n \treturn NULL;\n \n@@ -1435,7 +1465,8 @@ dlang_parse_assocarray (string *decl, const char *mangled)\n /* Extract the struct literal value for NAME from MANGLED and append it to DECL.\n    Return the remaining string on success or NULL on failure.  */\n static const char *\n-dlang_parse_structlit (string *decl, const char *mangled, const char *name)\n+dlang_parse_structlit (string *decl, const char *mangled, const char *name,\n+\t\t       struct dlang_info *info)\n {\n   unsigned long args;\n \n@@ -1449,7 +1480,7 @@ dlang_parse_structlit (string *decl, const char *mangled, const char *name)\n   string_append (decl, \"(\");\n   while (args--)\n     {\n-      mangled = dlang_value (decl, mangled, NULL, '\\0');\n+      mangled = dlang_value (decl, mangled, NULL, '\\0', info);\n       if (mangled == NULL)\n \treturn NULL;\n \n@@ -1464,7 +1495,8 @@ dlang_parse_structlit (string *decl, const char *mangled, const char *name)\n /* Extract the value from MANGLED and append it to DECL.\n    Return the remaining string on success or NULL on failure.  */\n static const char *\n-dlang_value (string *decl, const char *mangled, const char *name, char type)\n+dlang_value (string *decl, const char *mangled, const char *name, char type,\n+\t     struct dlang_info *info)\n {\n   if (mangled == NULL || *mangled == '\\0')\n     return NULL;\n@@ -1525,15 +1557,24 @@ dlang_value (string *decl, const char *mangled, const char *name, char type)\n     case 'A':\n       mangled++;\n       if (type == 'H')\n-\tmangled = dlang_parse_assocarray (decl, mangled);\n+\tmangled = dlang_parse_assocarray (decl, mangled, info);\n       else\n-\tmangled = dlang_parse_arrayliteral (decl, mangled);\n+\tmangled = dlang_parse_arrayliteral (decl, mangled, info);\n       break;\n \n       /* Struct values.  */\n     case 'S':\n       mangled++;\n-      mangled = dlang_parse_structlit (decl, mangled, name);\n+      mangled = dlang_parse_structlit (decl, mangled, name, info);\n+      break;\n+\n+      /* Function literal symbol.  */\n+    case 'f':\n+      mangled++;\n+      if (strncmp (mangled, \"_D\", 2) != 0\n+\t  || !dlang_symbol_name_p (mangled + 2, info))\n+\treturn NULL;\n+      mangled = dlang_parse_mangle (decl, mangled, info);\n       break;\n \n     default:\n@@ -1609,13 +1650,19 @@ dlang_parse_qualified (string *decl, const char *mangled,\n   size_t n = 0;\n   do\n     {\n+      /* Skip over anonymous symbols.  */\n+      if (*mangled == '0')\n+      {\n+\tdo\n+\t  mangled++;\n+\twhile (*mangled == '0');\n+\n+\tcontinue;\n+      }\n+\n       if (n++)\n \tstring_append (decl, \".\");\n \n-      /* Skip over anonymous symbols.  */\n-      while (*mangled == '0')\n-\tmangled++;\n-\n       mangled = dlang_identifier (decl, mangled, info);\n \n       /* Consume the encoded arguments.  However if this is not followed by the\n@@ -1806,7 +1853,7 @@ dlang_template_args (string *decl, const char *mangled, struct dlang_info *info)\n \t  string_need (&name, 1);\n \t  *(name.p) = '\\0';\n \n-\t  mangled = dlang_value (decl, mangled, name.b, type);\n+\t  mangled = dlang_value (decl, mangled, name.b, type, info);\n \t  string_delete (&name);\n \t  break;\n \t}"
    },
    {
      "sha": "7bfc65ea61312756a111a9c7268e594dadf9e234",
      "filename": "libiberty/make-temp-file.c",
      "status": "modified",
      "additions": 15,
      "deletions": 1,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/make-temp-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/make-temp-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/make-temp-file.c?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -39,6 +39,10 @@ Boston, MA 02110-1301, USA.  */\n #if defined(_WIN32) && !defined(__CYGWIN__)\n #include <windows.h>\n #endif\n+#if HAVE_SYS_STAT_H\n+#include <sys/stat.h>\n+#endif\n+\n \n #ifndef R_OK\n #define R_OK 4\n@@ -76,7 +80,17 @@ try_dir (const char *dir, const char *base)\n     return base;\n   if (dir != 0\n       && access (dir, R_OK | W_OK | X_OK) == 0)\n-    return dir;\n+    {\n+      /* Check to make sure dir is actually a directory. */\n+#ifdef S_ISDIR\n+      struct stat s;\n+      if (stat (dir, &s))\n+\treturn NULL;\n+      if (!S_ISDIR (s.st_mode))\n+\treturn NULL;\n+#endif\n+      return dir;\n+    }\n   return 0;\n }\n "
    },
    {
      "sha": "bbb7d7550d43967bd0040c678926c33e05c91344",
      "filename": "libiberty/simple-object-mach-o.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/simple-object-mach-o.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/simple-object-mach-o.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/simple-object-mach-o.c?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -1225,6 +1225,11 @@ simple_object_mach_o_write_segment (simple_object_write *sobj, int descriptor,\n \tindex[4 * i] -= index[0];\n       index[0] = 0;\n \n+      /* Swap the indices, if required.  */\n+\n+      for (i = 0; i < (nsects_in * 4); ++i)\n+\tset_32 ((unsigned char *) &index[i], index[i]);\n+\n       sechdr_offset += sechdrsize;\n \n       /* Write out the section names."
    },
    {
      "sha": "47b059c4298c89557e6c45a7c1b535382e9f0dba",
      "filename": "libiberty/testsuite/d-demangle-expected",
      "status": "modified",
      "additions": 57,
      "deletions": 1,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/testsuite/d-demangle-expected",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/testsuite/d-demangle-expected",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/d-demangle-expected?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -18,6 +18,14 @@ _Dmain\n D main\n #\n --format=dlang\n+_D8demangleZ\n+demangle\n+#\n+--format=dlang\n+_D8demangle4testZ\n+demangle.test\n+#\n+--format=dlang\n _D8demangle4testPFLAiYi\n demangle.test\n #\n@@ -83,7 +91,11 @@ demangle.test(ulong)\n #\n --format=dlang\n _D8demangle4testFnZv\n-demangle.test(none)\n+demangle.test(typeof(null))\n+#\n+--format=dlang\n+_D8demangle4testFNnZv\n+demangle.test(typeof(*null))\n #\n --format=dlang\n _D8demangle4testFoZv\n@@ -969,6 +981,10 @@ demangle.test(char)\n _D8demangle000000004testFaZv\n demangle.test(char)\n #\n+--format=dlang\n+_D8demangle__T3abcS_DQt10__lambda13FNaNbNiNfZiZQBhFZi\n+demangle.abc!(demangle.__lambda13()).abc()\n+#\n # Unittests\n #\n --format=dlang\n@@ -992,6 +1008,10 @@ _D00\n _D00\n #\n --format=dlang\n+_D01_D\n+_D01_D\n+#\n+--format=dlang\n _D9223372036854775817\n _D9223372036854775817\n #\n@@ -1414,3 +1434,39 @@ std.algorithm.iteration.FilterResult!(std.typecons.Tuple!(int, \"a\", int, \"b\", in\n --format=dlang\n _D3std3uni__T6toCaseS_DQvQt12toLowerIndexFNaNbNiNewZtVii1043S_DQCjQCi10toLowerTabFNaNbNiNemZwSQDo5ascii7toLowerTAyaZQDzFNaNeQmZ14__foreachbody2MFNaNeKmKwZ14__foreachbody3MFNaNeKwZi\n std.uni.toCase!(std.uni.toLowerIndex(dchar), 1043, std.uni.toLowerTab(ulong), std.ascii.toLower, immutable(char)[]).toCase(immutable(char)[]).__foreachbody2(ref ulong, ref dchar).__foreachbody3(ref dchar)\n+#\n+--format=dlang\n+_D8demangle4mainFZ1xi\n+demangle.main().x\n+#\n+--format=dlang\n+_D8demangle4mainFZ4__S11xi\n+demangle.main().x\n+#\n+--format=dlang\n+_D8demangle4mainFZ1fMFNaNbNiNfZv\n+demangle.main().f()\n+#\n+--format=dlang\n+_D8demangle4mainFZ4__S11fMFNaNbNiNfZv\n+demangle.main().f()\n+#\n+--format=dlang\n+_D3mod4funcFZ__T6nestedTiZQkMFNaNbNiNfZi\n+mod.func().nested!(int).nested()\n+#\n+--format=dlang\n+_D3mod4funcFZ__T6nestedTiZ4__S1QpMFNaNbNiNfZi\n+mod.func().nested!(int).nested()\n+#\n+--format=dlang\n+_D6mangle__T8fun21753VSQv6S21753S1f_DQBj10__lambda71MFNaNbNiNfZvZQCbQp\n+mangle.fun21753!(mangle.S21753(mangle.__lambda71())).fun21753\n+#\n+--format=dlang\n+_D8demangle9anonymous0Z\n+demangle.anonymous\n+#\n+--format=dlang\n+_D8demangle9anonymous03fooZ\n+demangle.anonymous.foo"
    },
    {
      "sha": "de54ad73cc8ee3d36f3b52b3bbdeeaf77d694852",
      "filename": "libiberty/testsuite/demangle-expected",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/testsuite/demangle-expected",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/testsuite/demangle-expected",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/demangle-expected?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -1164,6 +1164,11 @@ foo(int) [clone ._omp_cpyfn.6]\n foo\n #\n --format=gnu-v3 --no-params\n+_Z3fooPfS_S_j.sse4_1.2\n+foo(float*, float*, float*, unsigned int) [clone .sse4_1.2]\n+foo\n+#\n+--format=gnu-v3 --no-params\n _Z1fIKFvvES0_Evv\n void f<void () const, void () const>()\n f<void () const, void () const>"
    },
    {
      "sha": "e7d52683d350ec83539121636dd5bf83fa9f589e",
      "filename": "libiberty/xmalloc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/xmalloc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d/libiberty/xmalloc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/xmalloc.c?ref=ce2d3708bc8b1dfed6a3c69b56077ad10d2f351d",
      "patch": "@@ -87,7 +87,9 @@ extern \"C\" {\n void *malloc (size_t);\n void *realloc (void *, size_t);\n void *calloc (size_t, size_t);\n+#ifdef HAVE_SBRK\n void *sbrk (ptrdiff_t);\n+#endif\n #    ifdef __cplusplus\n }\n #    endif /* __cplusplus */"
    }
  ]
}