{
  "sha": "f9b5d5ea18a3878ca48c1b747e35d456133858bc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjliNWQ1ZWExOGEzODc4Y2E0OGMxYjc0N2UzNWQ0NTYxMzM4NThiYw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-06-03T21:50:16Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-06-03T21:50:16Z"
    },
    "message": "[gdb/symtab] Fix missing breakpoint location for inlined function\n\nConsider the test-case contained in this patch.\n\nWith -readnow, we have two breakpoint locations:\n...\n$ gdb -readnow -batch breakpoint-locs -ex \"b N1::C1::baz\" -ex \"info break\"\nBreakpoint 1 at 0x4004cb: N1::C1::baz. (2 locations)\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   <MULTIPLE>\n1.1                         y   0x00000000004004cb in N1::C1::baz() \\\n                                                     at breakpoint-locs.h:6\n1.2                         y   0x00000000004004f0 in N1::C1::baz() \\\n                                                     at breakpoint-locs.h:6\n...\n\nBut without -readnow, we have instead only one breakpoint location:\n...\n$ gdb -batch breakpoint-locs -ex \"b N1::C1::baz\" -ex \"info break\"\nBreakpoint 1 at 0x4004f0: file breakpoint-locs.h, line 6.\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x00000000004004f0 in N1::C1::baz() \\\n                                                     at breakpoint-locs.h:6\n...\n\nThe relevant dwarf is this bit:\n...\n <0><d2>: Abbrev Number: 1 (DW_TAG_compile_unit)\n    <d8>   DW_AT_name        : breakpoint-locs.cc\n <1><f4>: Abbrev Number: 2 (DW_TAG_namespace)\n    <f5>   DW_AT_name        : N1\n <2><fe>: Abbrev Number: 3 (DW_TAG_class_type)\n    <ff>   DW_AT_name        : C1\n <3><109>: Abbrev Number: 4 (DW_TAG_subprogram)\n    <10a>   DW_AT_name        : baz\n    <110>   DW_AT_linkage_name: _ZN2N12C13bazEv\n <2><116>: Abbrev Number: 5 (DW_TAG_subprogram)\n    <117>   DW_AT_name        : foo\n    <11d>   DW_AT_linkage_name: _ZN2N13fooEv\n <1><146>: Abbrev Number: 8 (DW_TAG_subprogram)\n    <147>   DW_AT_specification: <0x116>\n    <14b>   DW_AT_low_pc      : 0x4004c7\n    <153>   DW_AT_high_pc     : 0x10\n <2><161>: Abbrev Number: 9 (DW_TAG_inlined_subroutine)\n    <162>   DW_AT_abstract_origin: <0x194>\n    <166>   DW_AT_low_pc      : 0x4004cb\n    <16e>   DW_AT_high_pc     : 0x9\n <1><194>: Abbrev Number: 12 (DW_TAG_subprogram)\n    <195>   DW_AT_specification: <0x109>\n    <199>   DW_AT_inline      : 3       (declared as inline and inlined)\n...\n\nThe missing breakpoint location is specified by DIE 0x161, which is ignored by\nthe partial DIE reader because it's a child of a DW_TAG_subprogram DIE (at\n0x146, for foo).\n\nFix this by not ignoring the DIE during partial DIE reading.\n\nTested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2020-06-03  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/26046\n\t* dwarf2/read.c (scan_partial_symbols): Recurse into DW_TAG_subprogram\n\tchildren for C++.\n\t(load_partial_dies): Don't skip DW_TAG_inlined_subroutine child of\n\tDW_TAG_subprogram.\n\ngdb/testsuite/ChangeLog:\n\n2020-06-03  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/26046\n\t* gdb.cp/breakpoint-locs-2.cc: New test.\n\t* gdb.cp/breakpoint-locs.cc: New test.\n\t* gdb.cp/breakpoint-locs.exp: New file.\n\t* gdb.cp/breakpoint-locs.h: New test.",
    "tree": {
      "sha": "c07fc22338ab7a5543416a93bc444c2efe51d22f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c07fc22338ab7a5543416a93bc444c2efe51d22f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f9b5d5ea18a3878ca48c1b747e35d456133858bc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f9b5d5ea18a3878ca48c1b747e35d456133858bc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f9b5d5ea18a3878ca48c1b747e35d456133858bc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f9b5d5ea18a3878ca48c1b747e35d456133858bc/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "338d56a848007d806190e53c8ea53764060a7abb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/338d56a848007d806190e53c8ea53764060a7abb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/338d56a848007d806190e53c8ea53764060a7abb"
    }
  ],
  "stats": {
    "total": 136,
    "additions": 135,
    "deletions": 1
  },
  "files": [
    {
      "sha": "98f4d17412ec49397fea37700d1bcafabd3cf888",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f9b5d5ea18a3878ca48c1b747e35d456133858bc",
      "patch": "@@ -1,3 +1,11 @@\n+2020-06-03  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/26046\n+\t* dwarf2/read.c (scan_partial_symbols): Recurse into DW_TAG_subprogram\n+\tchildren for C++.\n+\t(load_partial_dies): Don't skip DW_TAG_inlined_subroutine child of\n+\tDW_TAG_subprogram.\n+\n 2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_language_data): Delete skip_trampoline"
    },
    {
      "sha": "ac6c15e7b25014603e181d5ab70a01a8cdefef15",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=f9b5d5ea18a3878ca48c1b747e35d456133858bc",
      "patch": "@@ -8146,6 +8146,9 @@ scan_partial_symbols (struct partial_die_info *first_die, CORE_ADDR *lowpc,\n \t    case DW_TAG_subprogram:\n \t    case DW_TAG_inlined_subroutine:\n \t      add_partial_subprogram (pdi, lowpc, highpc, set_addrmap, cu);\n+\t      if (cu->language == language_cplus)\n+\t\tscan_partial_symbols (pdi->die_child, lowpc, highpc,\n+\t\t\t\t      set_addrmap, cu);\n \t      break;\n \t    case DW_TAG_constant:\n \t    case DW_TAG_variable:\n@@ -18246,7 +18249,8 @@ load_partial_dies (const struct die_reader_specs *reader,\n       if (!load_all\n \t  && cu->language == language_cplus\n \t  && parent_die != NULL\n-\t  && parent_die->tag == DW_TAG_subprogram)\n+\t  && parent_die->tag == DW_TAG_subprogram\n+\t  && abbrev->tag != DW_TAG_inlined_subroutine)\n \t{\n \t  info_ptr = skip_one_die (reader, info_ptr + bytes_read, abbrev);\n \t  continue;"
    },
    {
      "sha": "21cfc17294ed8eab10b8ac20e52b06904ed9173f",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f9b5d5ea18a3878ca48c1b747e35d456133858bc",
      "patch": "@@ -1,3 +1,11 @@\n+2020-06-03  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/26046\n+\t* gdb.cp/breakpoint-locs-2.cc: New test.\n+\t* gdb.cp/breakpoint-locs.cc: New test.\n+\t* gdb.cp/breakpoint-locs.exp: New file.\n+\t* gdb.cp/breakpoint-locs.h: New test.\n+\n 2020-06-03  Tom de Vries  <tdevries@suse.de>\n \n \tPR testsuite/25609"
    },
    {
      "sha": "8e0cce8fdd425cc76e86233da9653dd987b39f33",
      "filename": "gdb/testsuite/gdb.cp/breakpoint-locs-2.cc",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/testsuite/gdb.cp/breakpoint-locs-2.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/testsuite/gdb.cp/breakpoint-locs-2.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/breakpoint-locs-2.cc?ref=f9b5d5ea18a3878ca48c1b747e35d456133858bc",
      "patch": "@@ -0,0 +1,29 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"breakpoint-locs.h\"\n+\n+namespace N1\n+{\n+  void bar () { C1::baz (); }\n+}\n+\n+void\n+N1_bar (void)\n+{\n+  N1::bar ();\n+}"
    },
    {
      "sha": "d52a3f416feb8bb48a53a13c65373ebdbe79db10",
      "filename": "gdb/testsuite/gdb.cp/breakpoint-locs.cc",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/testsuite/gdb.cp/breakpoint-locs.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/testsuite/gdb.cp/breakpoint-locs.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/breakpoint-locs.cc?ref=f9b5d5ea18a3878ca48c1b747e35d456133858bc",
      "patch": "@@ -0,0 +1,33 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"breakpoint-locs.h\"\n+\n+namespace N1\n+{\n+  void foo () { C1::baz (); }\n+}\n+\n+extern void N1_bar (void);\n+\n+int\n+main ()\n+{\n+  N1::foo ();\n+  N1_bar ();\n+  return 0;\n+}"
    },
    {
      "sha": "46b64e9de64e0f1c5ed1dc6420a9e1c934b14144",
      "filename": "gdb/testsuite/gdb.cp/breakpoint-locs.exp",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/testsuite/gdb.cp/breakpoint-locs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/testsuite/gdb.cp/breakpoint-locs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/breakpoint-locs.exp?ref=f9b5d5ea18a3878ca48c1b747e35d456133858bc",
      "patch": "@@ -0,0 +1,27 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# This file is part of the gdb testsuite\n+\n+if {[skip_cplus_tests]} { continue }\n+\n+standard_testfile .cc breakpoint-locs-2.cc\n+\n+if { [prepare_for_testing \"failed to prepare\" $testfile \"$srcfile $srcfile2\"\\\n+\t  {debug c++}] } {\n+    return -1\n+}\n+\n+gdb_test \"break N1::C1::baz\" \"\\\\(2 locations\\\\)\""
    },
    {
      "sha": "61af5943968f67f8fabfa5b225240b624b5c21f8",
      "filename": "gdb/testsuite/gdb.cp/breakpoint-locs.h",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/testsuite/gdb.cp/breakpoint-locs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9b5d5ea18a3878ca48c1b747e35d456133858bc/gdb/testsuite/gdb.cp/breakpoint-locs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/breakpoint-locs.h?ref=f9b5d5ea18a3878ca48c1b747e35d456133858bc",
      "patch": "@@ -0,0 +1,25 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+namespace N1\n+{\n+  class C1\n+  {\n+   public:\n+    static void __attribute__((always_inline)) baz () { volatile unsigned i; i++; }\n+  };\n+}"
    }
  ]
}