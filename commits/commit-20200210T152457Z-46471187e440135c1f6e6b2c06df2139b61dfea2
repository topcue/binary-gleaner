{
  "sha": "46471187e440135c1f6e6b2c06df2139b61dfea2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDY0NzExODdlNDQwMTM1YzFmNmU2YjJjMDZkZjIxMzliNjFkZmVhMg==",
  "commit": {
    "author": {
      "name": "Aaron Merey",
      "email": "amerey@redhat.com",
      "date": "2020-02-10T15:24:57Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-02-10T15:24:57Z"
    },
    "message": "More debuginfod tests fixes.\n\n\tStart server before setting environment variable.\n\tSpecify tmpdir as the location of the server's\n\tdatabase.\n\tCheck additional server metrics at start-up.",
    "tree": {
      "sha": "04e5e84461efbba910e517a4174f8843e7332886",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/04e5e84461efbba910e517a4174f8843e7332886"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/46471187e440135c1f6e6b2c06df2139b61dfea2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46471187e440135c1f6e6b2c06df2139b61dfea2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/46471187e440135c1f6e6b2c06df2139b61dfea2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46471187e440135c1f6e6b2c06df2139b61dfea2/comments",
  "author": {
    "login": "aaronmerey",
    "id": 28735867,
    "node_id": "MDQ6VXNlcjI4NzM1ODY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/28735867?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aaronmerey",
    "html_url": "https://github.com/aaronmerey",
    "followers_url": "https://api.github.com/users/aaronmerey/followers",
    "following_url": "https://api.github.com/users/aaronmerey/following{/other_user}",
    "gists_url": "https://api.github.com/users/aaronmerey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aaronmerey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aaronmerey/subscriptions",
    "organizations_url": "https://api.github.com/users/aaronmerey/orgs",
    "repos_url": "https://api.github.com/users/aaronmerey/repos",
    "events_url": "https://api.github.com/users/aaronmerey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aaronmerey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "678d457fb7b822d2a5277ed154a1808eadb3593d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/678d457fb7b822d2a5277ed154a1808eadb3593d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/678d457fb7b822d2a5277ed154a1808eadb3593d"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 30,
    "deletions": 15
  },
  "files": [
    {
      "sha": "fc3783e85161916774e5893bfe62ab34c96a0844",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46471187e440135c1f6e6b2c06df2139b61dfea2/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46471187e440135c1f6e6b2c06df2139b61dfea2/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=46471187e440135c1f6e6b2c06df2139b61dfea2",
      "patch": "@@ -2,6 +2,10 @@\n \n \t* binutils/testsuite/binutils-all/debuginfod.exp:\n \tReplace set ::env with setenv.\n+\tStart server before setting environment variable.\n+\tSpecify tmpdir as the location of the server's\n+\tdatabase.\n+\tCheck additional server metrics at start-up.\n \n 2020-02-07  Nick Clifton  <nickc@redhat.com>\n "
    },
    {
      "sha": "7e1c6380a5e1485422f203b5a073f4fb53b32a1e",
      "filename": "binutils/testsuite/binutils-all/debuginfod.exp",
      "status": "modified",
      "additions": 26,
      "deletions": 15,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46471187e440135c1f6e6b2c06df2139b61dfea2/binutils/testsuite/binutils-all/debuginfod.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46471187e440135c1f6e6b2c06df2139b61dfea2/binutils/testsuite/binutils-all/debuginfod.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/debuginfod.exp?ref=46471187e440135c1f6e6b2c06df2139b61dfea2",
      "patch": "@@ -75,10 +75,10 @@ if { ![binutils_assemble $srcdir/$subdir/linkdebug.s tmpdir/linkdebug.debug] } {\n # Find an unused port\n set port [exec sh -c \"while true; do PORT=`expr '(' \\$RANDOM % 1000 ')' + 9000`; ss -atn | fgrep \\\":\\$PORT\\\" || break; done; echo \\$PORT\"]\n \n-# Specify the directory that files retrieved from the server are written to.\n set cache [file join [pwd] \"tmpdir/.debuginfod_cache\"]\n+set db [file join [pwd] \"tmpdir/.debuginfod.db\"]\n \n-setenv DEBUGINFOD_URLS http://127.0.0.1:$port\n+setenv DEBUGINFOD_URLS \"\"\n setenv DEBUGINFOD_TIMEOUT 30\n setenv DEBUGINFOD_CACHE_PATH $cache\n \n@@ -88,8 +88,9 @@ file mkdir tmpdir/dbg\n file rename -force tmpdir/testprog.debug tmpdir/dbg\n file rename -force tmpdir/linkdebug.debug tmpdir/dbg\n \n-# Remove an old cache if it exists\n+# Remove old cache and database if they exist.\n file delete -force $cache\n+file delete -force $db\n \n # Check whether objdump and readelf are configured with debuginfod.\n # To check this we attempt to follow a broken debuglink. If configured\n@@ -114,32 +115,43 @@ proc sigint_handler {} {\n trap sigint_handler INT\n \n # Start a debuginfod server.\n-set debuginfod_pid [exec debuginfod -p $port -F tmpdir/dbg 2>/dev/null &]\n+set debuginfod_pid [exec debuginfod -d $db -p $port -F tmpdir/dbg 2>/dev/null &]\n \n if { !$debuginfod_pid } {\n     fail \"$test (server init)\"\n     return\n }\n \n-# Wait for debuginfod indicate it's ready.\n-set ready 0\n-for {set timelim 30} {$timelim != 0} {incr timelim -1} {\n-    sleep 1\n-    set want \".*ready 1.*\"\n+set metrics [list \"ready 1\" \\\n+             \"thread_work_total{role=\\\"traverse\\\"} 1\" \\\n+             \"thread_work_pending{role=\\\"scan\\\"} 0\" \\\n+             \"thread_busy{role=\\\"scan\\\"} 0\" \\\n+             \"groom{statistic=\\\"buildids\\\"} 2\"]\n+\n+# Check server metrics to confirm init has completed.\n+foreach m $metrics {\n+  set timelim 20\n+  while { $timelim != 0 } {\n+    sleep 0.5\n+\n     catch {exec curl -s http://127.0.0.1:$port/metrics} got\n \n-    if { [regexp $want $got] } {\n-      set ready 1\n+    if { [regexp $m $got] } {\n       break\n     }\n-}\n \n-if { !$ready } {\n-    fail \"$test (server ready)\"\n+    incr timelim -1\n+  }\n+\n+  if { $timelim == 0 } {\n+    fail \"$test (server init timeout)\"\n     catch {exec kill -INT $debuginfod_pid}\n     return\n+  }\n }\n \n+setenv DEBUGINFOD_URLS http://127.0.0.1:$port\n+\n # Test whether prog can fetch separate debuginfo using debuginfod\n # if it's configured to do so.\n proc test_fetch_debuglink { prog progargs } {\n@@ -185,5 +197,4 @@ if { [regexp \".*DEBUGINFOD.*\" $conf_readelf] } {\n     untested \"$test (readelf not configured with debuginfod)\"\n }\n \n-file delete -force $cache\n catch {exec kill -INT $debuginfod_pid}"
    }
  ]
}