{
  "sha": "52bb090268881cfa1ab615273e281610935f2f95",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTJiYjA5MDI2ODg4MWNmYTFhYjYxNTI3M2UyODE2MTA5MzVmMmY5NQ==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-17T22:33:40Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-17T23:04:12Z"
    },
    "message": "gdb.base/break.exp C++ify\n\nSome adjustments to make gdb.base/break.exp work when compiled as a\nC++ program.  Passes cleanly with Clang++, but not with G++.  The\nlatter puts a breakpoint at an unexpected line in one case.  It seems\nlike a bug that gcc and g++ behave differently here.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/break.exp (func): New.  Use it throughout when\n\texpecting a function name.",
    "tree": {
      "sha": "0848384d943da502513b5c9a3917c24de1a5e56b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0848384d943da502513b5c9a3917c24de1a5e56b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/52bb090268881cfa1ab615273e281610935f2f95",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52bb090268881cfa1ab615273e281610935f2f95",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/52bb090268881cfa1ab615273e281610935f2f95",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52bb090268881cfa1ab615273e281610935f2f95/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "73e18ac9dab5b395fefa2034c7b9829425629b57",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/73e18ac9dab5b395fefa2034c7b9829425629b57",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/73e18ac9dab5b395fefa2034c7b9829425629b57"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 33,
    "deletions": 22
  },
  "files": [
    {
      "sha": "c7e2c4c59befa893607f259ae91ad03682aa6b8e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52bb090268881cfa1ab615273e281610935f2f95/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52bb090268881cfa1ab615273e281610935f2f95/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=52bb090268881cfa1ab615273e281610935f2f95",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-17  Pedro Alves  <pedro@palves.net>\n+\n+\t* gdb.base/break.exp (func): New.  Use it throughout when\n+\texpecting a function name.\n+\n 2020-09-17  Pedro Alves  <pedro@palves.net>\n \n \t* gdb.base/display.exp: Issue \"set print asm-demangle on\"."
    },
    {
      "sha": "35813e3dfee95c5dd63a1c0896f4b5cfbdfda7ae",
      "filename": "gdb/testsuite/gdb.base/break.exp",
      "status": "modified",
      "additions": 28,
      "deletions": 22,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52bb090268881cfa1ab615273e281610935f2f95/gdb/testsuite/gdb.base/break.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52bb090268881cfa1ab615273e281610935f2f95/gdb/testsuite/gdb.base/break.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/break.exp?ref=52bb090268881cfa1ab615273e281610935f2f95",
      "patch": "@@ -121,16 +121,22 @@ set main_line $bp_location6\n set bp_location7 [gdb_get_line_number \"set breakpoint 7 here\"]\n set bp_location8 [gdb_get_line_number \"set breakpoint 8 here\" $srcfile1]\n \n+# In C++ mode, we see a full prototype; in C mode, we only see the\n+# function name, with no parameter info.\n+proc func {name} {\n+    return \"${name}(?:\\(\\[^\\r\\n\\]*\\))?\"\n+}\n+\n gdb_test \"info break\" \\\n     \"Num     Type\\[ \\]+Disp Enb Address\\[ \\]+What.*\n-\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in main at .*$srcfile:$main_line.*\n-\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in marker2 at .*$srcfile1:$bp_location8.*\n-\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in factorial at .*$srcfile:$bp_location7.*\n-\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in main at .*$srcfile:$bp_location1.*\n-\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in main at .*$srcfile:$bp_location1.*\n-\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in main at .*$srcfile:$bp_location2.*\n-\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in multi_line_if_conditional at .*$srcfile:$bp_location3.*\n-\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in multi_line_while_conditional at .*$srcfile:$bp_location4\" \\\n+\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in [func main] at .*$srcfile:$main_line.*\n+\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in [func marker2] at .*$srcfile1:$bp_location8.*\n+\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in [func factorial] at .*$srcfile:$bp_location7.*\n+\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in [func main] at .*$srcfile:$bp_location1.*\n+\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in [func main] at .*$srcfile:$bp_location1.*\n+\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in [func main] at .*$srcfile:$bp_location2.*\n+\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in [func multi_line_if_conditional] at .*$srcfile:$bp_location3.*\n+\\[0-9\\]+\\[\\t \\]+breakpoint     keep y.* in [func multi_line_while_conditional] at .*$srcfile:$bp_location4\" \\\n     \"breakpoint info\"\n \n #\n@@ -149,7 +155,7 @@ gdb_test_multiple \"info break 2 4 6\" \"info break 2 4 6\" {\n \tset see1 1\n \texp_continue\n     }\n-    -re \"2\\[\\t \\]+breakpoint *keep y\\[^\\r\\n\\]* in marker2 at \\[^\\r\\n\\]*\" {\n+    -re \"2\\[\\t \\]+breakpoint *keep y\\[^\\r\\n\\]* in [func marker2] at \\[^\\r\\n\\]*\" {\n \tset see2 1\n \texp_continue\n     }\n@@ -186,11 +192,11 @@ set see5 0\n set see6 0\n \n gdb_test_multiple \"info break 3-5\" \"info break 3-5\" {\n-    -re \"1\\[\\t \\]+breakpoint *keep y.* in main at .*:$main_line\\[^\\r\\n\\]*\" {\n+    -re \"1\\[\\t \\]+breakpoint *keep y.* in [func main] at .*:$main_line\\[^\\r\\n\\]*\" {\n \tset see1 1\n \texp_continue\n     }\n-    -re \"2\\[\\t \\]+breakpoint *keep y\\[^\\r\\n\\]* in marker2 at \\[^\\r\\n\\]*\" {\n+    -re \"2\\[\\t \\]+breakpoint *keep y\\[^\\r\\n\\]* in [func marker2] at \\[^\\r\\n\\]*\" {\n \tset see2 1\n \texp_continue\n     }\n@@ -243,11 +249,11 @@ set see5 0\n set see6 0\n \n gdb_test_multiple \"info break\" \"check disable with history values\" {\n-    -re \"1\\[\\t \\]+breakpoint *keep y.* in main at .*:$main_line\\[^\\r\\n\\]*\" {\n+    -re \"1\\[\\t \\]+breakpoint *keep y.* in [func main] at .*:$main_line\\[^\\r\\n\\]*\" {\n \tset see1 1\n \texp_continue\n     }\n-    -re \"2\\[\\t \\]+breakpoint *keep n\\[^\\r\\n\\]* in marker2 at \\[^\\r\\n\\]*\" {\n+    -re \"2\\[\\t \\]+breakpoint *keep n\\[^\\r\\n\\]* in [func marker2] at \\[^\\r\\n\\]*\" {\n \tset see2 1\n \texp_continue\n     }\n@@ -289,11 +295,11 @@ set see5 0\n set see6 0\n \n gdb_test_multiple \"info break\" \"check disable with convenience values\" {\n-    -re \"1\\[\\t \\]+breakpoint *keep y.* in main at .*:$main_line\\[^\\r\\n\\]*\" {\n+    -re \"1\\[\\t \\]+breakpoint *keep y.* in [func main] at .*:$main_line\\[^\\r\\n\\]*\" {\n \tset see1 1\n \texp_continue\n     }\n-    -re \"2\\[\\t \\]+breakpoint *keep y\\[^\\r\\n\\]* in marker2 at \\[^\\r\\n\\]*\" {\n+    -re \"2\\[\\t \\]+breakpoint *keep y\\[^\\r\\n\\]* in [func marker2] at \\[^\\r\\n\\]*\" {\n \tset see2 1\n \texp_continue\n     }\n@@ -452,12 +458,12 @@ gdb_test  \"tbreak $srcfile:$bp_location11\" \"Temporary breakpoint.*at.* file .*$s\n # check to see what breakpoints are set (temporary this time)\n #\n gdb_test \"info break\" \"Num     Type.*Disp Enb Address.*What.*\\[\\r\\n\\]\n-\\[0-9\\]+\\[\\t \\]+breakpoint     del.*y.*in main at .*$srcfile:$main_line.*\\[\\r\\n\\]\n-\\[0-9\\]+\\[\\t \\]+breakpoint     del.*y.*in factorial at .*$srcfile:$bp_location7.*\\[\\r\\n\\]\n-\\[0-9\\]+\\[\\t \\]+breakpoint     del.*y.*in main at .*$srcfile:$bp_location1.*\\[\\r\\n\\]\n-\\[0-9\\]+\\[\\t \\]+breakpoint     del.*y.*in main at .*$srcfile:$bp_location6.*\\[\\r\\n\\]\n-\\[0-9\\]+\\[\\t \\]+breakpoint     del.*y.*in main at .*$srcfile:$bp_location2.*\\[\\r\\n\\]\n-\\[0-9\\]+\\[\\t \\]+breakpoint     del.*y.*in main at .*$srcfile:$bp_location11.*\" \\\n+\\[0-9\\]+\\[\\t \\]+breakpoint     del.*y.*in [func main] at .*$srcfile:$main_line.*\\[\\r\\n\\]\n+\\[0-9\\]+\\[\\t \\]+breakpoint     del.*y.*in [func factorial] at .*$srcfile:$bp_location7.*\\[\\r\\n\\]\n+\\[0-9\\]+\\[\\t \\]+breakpoint     del.*y.*in [func main] at .*$srcfile:$bp_location1.*\\[\\r\\n\\]\n+\\[0-9\\]+\\[\\t \\]+breakpoint     del.*y.*in [func main] at .*$srcfile:$bp_location6.*\\[\\r\\n\\]\n+\\[0-9\\]+\\[\\t \\]+breakpoint     del.*y.*in [func main] at .*$srcfile:$bp_location2.*\\[\\r\\n\\]\n+\\[0-9\\]+\\[\\t \\]+breakpoint     del.*y.*in [func main] at .*$srcfile:$bp_location11.*\" \\\n     \"Temporary breakpoint info\"\n \n \n@@ -606,7 +612,7 @@ gdb_test \"break marker2\" \\\n     \"set breakpoint on to-be-called function\"\n \n gdb_test \"print marker2(99)\" \\\n-    \"The program being debugged stopped while in a function called from GDB.\\r\\nEvaluation of the expression containing the function\\r\\n.marker2. will be abandoned.\\r\\nWhen the function is done executing, GDB will silently stop.*\" \\\n+    \"The program being debugged stopped while in a function called from GDB.\\r\\nEvaluation of the expression containing the function\\r\\n.[func marker2]. will be abandoned.\\r\\nWhen the function is done executing, GDB will silently stop.*\" \\\n     \"hit breakpoint on called function\"\n \n # As long as we're stopped (breakpointed) in a called function,"
    }
  ]
}