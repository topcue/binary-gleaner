{
  "sha": "4102be5cf925999e1f3f999c95479360291205de",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDEwMmJlNWNmOTI1OTk5ZTFmM2Y5OTljOTU0NzkzNjAyOTEyMDVkZQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-01-31T13:29:18Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-01-31T13:29:18Z"
    },
    "message": "x86: replace EXxmm_mdq by EXVexWdqScalar\n\nThere's no need to have two operand specifiers / enumerators for the\nsame purpose. This then renders xmm_mdq_mode unused.",
    "tree": {
      "sha": "8f434deeda253adf3063bc871170fe51bd03e0ac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8f434deeda253adf3063bc871170fe51bd03e0ac"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4102be5cf925999e1f3f999c95479360291205de",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4102be5cf925999e1f3f999c95479360291205de",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4102be5cf925999e1f3f999c95479360291205de",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4102be5cf925999e1f3f999c95479360291205de/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "825bd36ceadf7fd3288ced262d6aed9f5b9ab919",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/825bd36ceadf7fd3288ced262d6aed9f5b9ab919",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/825bd36ceadf7fd3288ced262d6aed9f5b9ab919"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 29,
    "deletions": 27
  },
  "files": [
    {
      "sha": "f163ad2f3ec1bb33fc27d0283c6ce198e4611f88",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4102be5cf925999e1f3f999c95479360291205de/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4102be5cf925999e1f3f999c95479360291205de/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=4102be5cf925999e1f3f999c95479360291205de",
      "patch": "@@ -1,3 +1,11 @@\n+2020-01-31  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (EXxmm_mdq, xmm_mdq_mode): Delete.\n+\t(intel_operand_size, OP_EX): Drop xmm_mdq_mode case label.\n+\t(OP_E_memory): Replace xmm_mdq_mode case label by\n+\tvex_scalar_w_dq_mode one.\n+\t* i386-dis-evex-prefix.h: Replace EXxmm_mdq by EXVexWdqScalar.\n+\n 2020-01-31  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-dis.c (EXVexWdq, vex_w_dq_mode): Delete."
    },
    {
      "sha": "1ab70470658b3f0a341fce2afb1ed0b9738d27ab",
      "filename": "opcodes/i386-dis-evex-prefix.h",
      "status": "modified",
      "additions": 20,
      "deletions": 20,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4102be5cf925999e1f3f999c95479360291205de/opcodes/i386-dis-evex-prefix.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4102be5cf925999e1f3f999c95479360291205de/opcodes/i386-dis-evex-prefix.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-prefix.h?ref=4102be5cf925999e1f3f999c95479360291205de",
      "patch": "@@ -907,7 +907,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vscalefs%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vscalefs%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_0F3830 */\n   {\n@@ -1021,7 +1021,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vgetexps%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexS }, 0 },\n+    { \"vgetexps%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexS }, 0 },\n   },\n   /* PREFIX_EVEX_0F3844 */\n   {\n@@ -1057,7 +1057,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vrcp14s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq }, 0 },\n+    { \"vrcp14s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar }, 0 },\n   },\n   /* PREFIX_EVEX_0F384E */\n   {\n@@ -1069,7 +1069,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vrsqrt14s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq }, 0 },\n+    { \"vrsqrt14s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar }, 0 },\n   },\n   /* PREFIX_EVEX_0F3850 */\n   {\n@@ -1349,7 +1349,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmadd132s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vfmadd132s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_0F389A */\n   {\n@@ -1362,7 +1362,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmsub132s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vfmsub132s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n     { \"v4fmaddss\",\t{ XMScalar, VexScalar, Mxmm }, 0 },\n   },\n   /* PREFIX_EVEX_0F389C */\n@@ -1375,7 +1375,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfnmadd132s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vfnmadd132s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_0F389E */\n   {\n@@ -1387,7 +1387,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfnmsub132s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vfnmsub132s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_0F38A0 */\n   {\n@@ -1435,7 +1435,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmadd213s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vfmadd213s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_0F38AA */\n   {\n@@ -1448,7 +1448,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmsub213s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vfmsub213s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n     { \"v4fnmaddss\",\t{ XMScalar, VexScalar, Mxmm }, 0 },\n   },\n   /* PREFIX_EVEX_0F38AC */\n@@ -1461,7 +1461,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfnmadd213s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vfnmadd213s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_0F38AE */\n   {\n@@ -1473,7 +1473,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfnmsub213s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vfnmsub213s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_0F38B4 */\n   {\n@@ -1509,7 +1509,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmadd231s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vfmadd231s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_0F38BA */\n   {\n@@ -1521,7 +1521,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmsub231s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vfmsub231s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_0F38BC */\n   {\n@@ -1533,7 +1533,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfnmadd231s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vfnmadd231s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_0F38BE */\n   {\n@@ -1545,7 +1545,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfnmsub231s%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexR }, 0 },\n+    { \"vfnmsub231s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_0F38C4 */\n   {\n@@ -1617,7 +1617,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vrcp28s%XW\",       { XMScalar, VexScalar, EXxmm_mdq, EXxEVexS }, 0 },\n+    { \"vrcp28s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexS }, 0 },\n   },\n   /* PREFIX_EVEX_0F38CC */\n   {\n@@ -1629,7 +1629,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vrsqrt28s%XW\",     { XMScalar, VexScalar, EXxmm_mdq, EXxEVexS }, 0 },\n+    { \"vrsqrt28s%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexS }, 0 },\n   },\n   /* PREFIX_EVEX_0F38CF */\n   {\n@@ -1827,7 +1827,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vgetmants%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexS, Ib }, 0 },\n+    { \"vgetmants%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexS, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A38 */\n   {\n@@ -1905,7 +1905,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfixupimms%XW\",\t{ XMScalar, VexScalar, EXxmm_mdq, EXxEVexS, Ib }, 0 },\n+    { \"vfixupimms%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexS, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A56 */\n   {"
    },
    {
      "sha": "d2b33d0998168c0343fdaac5912d208f2ba616bf",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 7,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4102be5cf925999e1f3f999c95479360291205de/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4102be5cf925999e1f3f999c95479360291205de/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=4102be5cf925999e1f3f999c95479360291205de",
      "patch": "@@ -401,7 +401,6 @@ fetch_data (struct disassemble_info *info, bfd_byte *addr)\n #define EXxmm_mw { OP_EX, xmm_mw_mode }\n #define EXxmm_md { OP_EX, xmm_md_mode }\n #define EXxmm_mq { OP_EX, xmm_mq_mode }\n-#define EXxmm_mdq { OP_EX, xmm_mdq_mode }\n #define EXxmmdw { OP_EX, xmmdw_mode }\n #define EXxmmqd { OP_EX, xmmqd_mode }\n #define EXymmq { OP_EX, ymmq_mode }\n@@ -537,9 +536,6 @@ enum\n   xmm_md_mode,\n   /* XMM register or quad word memory operand */\n   xmm_mq_mode,\n-  /* XMM register or double/quad word memory operand, depending on\n-     VEX.W.  */\n-  xmm_mdq_mode,\n   /* 16-byte XMM, word, double word or quad word operand.  */\n   xmmdw_mode,\n   /* 16-byte XMM, double word, quad word operand or xmm word operand.  */\n@@ -13771,7 +13767,6 @@ intel_operand_size (int bytemode, int sizeflag)\n     case o_mode:\n       oappend (\"OWORD PTR \");\n       break;\n-    case xmm_mdq_mode:\n     case vex_scalar_w_dq_mode:\n       if (!need_vex)\n \tabort ();\n@@ -14016,12 +14011,12 @@ OP_E_memory (int bytemode, int sizeflag)\n \t      break;\n \t    }\n \t    /* fall through */\n+\tcase vex_scalar_w_dq_mode:\n \tcase vex_vsib_d_w_dq_mode:\n \tcase vex_vsib_d_w_d_mode:\n \tcase vex_vsib_q_w_dq_mode:\n \tcase vex_vsib_q_w_d_mode:\n \tcase evex_x_gscat_mode:\n-\tcase xmm_mdq_mode:\n \t  shift = vex.w ? 3 : 2;\n \t  break;\n \tcase x_mode:\n@@ -15367,7 +15362,6 @@ OP_EX (int bytemode, int sizeflag)\n       && bytemode != xmm_mw_mode\n       && bytemode != xmm_md_mode\n       && bytemode != xmm_mq_mode\n-      && bytemode != xmm_mdq_mode\n       && bytemode != xmmq_mode\n       && bytemode != evex_half_bcst_xmmq_mode\n       && bytemode != ymm_mode"
    }
  ]
}