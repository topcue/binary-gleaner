{
  "sha": "81dc3ab59476c9851a6cda321b85dcf8a6ef4be8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODFkYzNhYjU5NDc2Yzk4NTFhNmNkYTMyMWI4NWRjZjhhNmVmNGJlOA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-09-18T22:23:54Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-09-18T22:23:54Z"
    },
    "message": "[gdb/testsuite] Handle unreachable network in server-connect.exp\n\nWhen running gdb.server/server-connect.exp I run into:\n...\nFAIL: gdb.server/server-connect.exp: tcp6: connect to gdbserver using tcp6:::1\nFAIL: gdb.server/server-connect.exp: tcp6-with-brackets: connect to gdbserver \\\n  using tcp6:[::1]\nFAIL: gdb.server/server-connect.exp: udp6: connect to gdbserver using udp6:::1\nFAIL: gdb.server/server-connect.exp: udp6-with-brackets: connect to gdbserver \\\n  using udp6:[::1]\n...\n\nThe FAIL is caused by the fact that the ipv6 loopback address is not available:\n...\nPASS: gdb.server/server-connect.exp: tcp6: start gdbserver\ntarget remote tcp6:::1:2347^M\nA program is being debugged already.  Kill it? (y or n) y^M\ntcp6:::1:2347: Network is unreachable.^M\n(gdb) FAIL: gdb.server/server-connect.exp: tcp6: connect to gdbserver using tcp6:::1\n...\nThis should be marked UNSUPPORTED rather than FAIL.\n\nFurthermore, the test-case takes about 4 minutes, because the 'Network is\nunreachable' response is not explicitly handled in gdb_target_cmd, so instead\nit runs into the timeout case.\n\nFix this by handling the 'Network is unreachable' response as UNSUPPORTED.\nThis reduces testing time from 4 minutes to about 2 seconds.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2019-09-19  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/gdbserver-support.exp (gdb_target_cmd_ext): Return 2 (meaning\n\tUNSUPPORTED) for 'Network is unreachable' message.  Factor out of ...\n\t(gdb_target_cmd): ... here.\n\t* gdb.server/server-connect.exp: Use gdb_target_cmd_ext, handle return\n\tvalue 2.",
    "tree": {
      "sha": "b816302403fc35a17c2d3a2713e4b47e423ddf96",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b816302403fc35a17c2d3a2713e4b47e423ddf96"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/81dc3ab59476c9851a6cda321b85dcf8a6ef4be8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81dc3ab59476c9851a6cda321b85dcf8a6ef4be8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/81dc3ab59476c9851a6cda321b85dcf8a6ef4be8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81dc3ab59476c9851a6cda321b85dcf8a6ef4be8/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a1726c38a9e8ac07b3fd6bbfac04da27c32c0d70",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1726c38a9e8ac07b3fd6bbfac04da27c32c0d70",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a1726c38a9e8ac07b3fd6bbfac04da27c32c0d70"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 26,
    "deletions": 5
  },
  "files": [
    {
      "sha": "2acc1f734232b422fc906902a8b8a4df6fd04bac",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81dc3ab59476c9851a6cda321b85dcf8a6ef4be8/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81dc3ab59476c9851a6cda321b85dcf8a6ef4be8/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=81dc3ab59476c9851a6cda321b85dcf8a6ef4be8",
      "patch": "@@ -1,3 +1,11 @@\n+2019-09-19  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/gdbserver-support.exp (gdb_target_cmd_ext): Return 2 (meaning\n+\tUNSUPPORTED) for 'Network is unreachable' message.  Factor out of ...\n+\t(gdb_target_cmd): ... here.\n+\t* gdb.server/server-connect.exp: Use gdb_target_cmd_ext, handle return\n+\tvalue 2.\n+\n 2019-09-18  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/source-dir.exp: Avoid having directory names in test"
    },
    {
      "sha": "e69f792a1bb60ccbc052f9bf7c4ea58ecef85692",
      "filename": "gdb/testsuite/gdb.server/server-connect.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81dc3ab59476c9851a6cda321b85dcf8a6ef4be8/gdb/testsuite/gdb.server/server-connect.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81dc3ab59476c9851a6cda321b85dcf8a6ef4be8/gdb/testsuite/gdb.server/server-connect.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/server-connect.exp?ref=81dc3ab59476c9851a6cda321b85dcf8a6ef4be8",
      "patch": "@@ -101,10 +101,13 @@ save_vars { GDB_TEST_SOCKETHOST } {\n \t    set gdbserver_gdbport [lindex $res 1]\n \t    set test \"connect to gdbserver using $sockhost\"\n \n-\t    if { [gdb_target_cmd $gdbserver_protocol $gdbserver_gdbport] == 0 } {\n+\t    set res [gdb_target_cmd_ext $gdbserver_protocol $gdbserver_gdbport]\n+\t    if { $res == 0 } {\n \t\tpass $test\n-\t    } else {\n+\t    } elseif { $res == 1 }  {\n \t\tfail $test\n+\t    } else {\n+\t\tunsupported $test\n \t    }\n \t}\n     }"
    },
    {
      "sha": "2ad53c1f6086a863254bc245a7d70be436c5b690",
      "filename": "gdb/testsuite/lib/gdbserver-support.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 3,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81dc3ab59476c9851a6cda321b85dcf8a6ef4be8/gdb/testsuite/lib/gdbserver-support.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81dc3ab59476c9851a6cda321b85dcf8a6ef4be8/gdb/testsuite/lib/gdbserver-support.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdbserver-support.exp?ref=81dc3ab59476c9851a6cda321b85dcf8a6ef4be8",
      "patch": "@@ -41,12 +41,13 @@\n #\n \n #\n-# gdb_target_cmd\n-# Send gdb the \"target\" command.  Returns 0 on success, 1 on failure.\n+# gdb_target_cmd_ext\n+# Send gdb the \"target\" command.  Returns 0 on success, 1 on failure, 2 on\n+# unsupported.\n # If specified, then ADDITIONAL_TEXT must match the text that comes after\n # the connection message in order for the procedure to succeed.\n #\n-proc gdb_target_cmd { targetname serialport {additional_text \"\"} } {\n+proc gdb_target_cmd_ext { targetname serialport {additional_text \"\"} } {\n     global gdb_prompt\n \n     set serialport_re [string_to_regexp $serialport]\n@@ -97,6 +98,9 @@ proc gdb_target_cmd { targetname serialport {additional_text \"\"} } {\n \t\t# Leave it there for the test to diagnose.\n \t\treturn 1\n \t    }\n+\t    -re \": Network is unreachable.\\r\\n.*$gdb_prompt $\" {\n+\t\treturn 2\n+\t    }\n \t    timeout {\n \t\tsend_gdb \"\u0003\"\n \t\tbreak\n@@ -106,6 +110,12 @@ proc gdb_target_cmd { targetname serialport {additional_text \"\"} } {\n     return 1\n }\n \n+# Like gdb_target_cmd_ext, but returns 0 on success, 1 on failure.\n+\n+proc gdb_target_cmd { $args } {\n+    set res [gdb_target_cmd_ext $args]\n+    return [expr $res == 0 ? 0 : 1]\n+}\n \n global portnum\n set portnum \"2345\""
    }
  ]
}