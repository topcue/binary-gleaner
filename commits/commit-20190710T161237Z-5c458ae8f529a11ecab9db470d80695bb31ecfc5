{
  "sha": "5c458ae8f529a11ecab9db470d80695bb31ecfc5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWM0NThhZThmNTI5YTExZWNhYjlkYjQ3MGQ4MDY5NWJiMzFlY2ZjNQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2019-07-10T16:12:37Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-07-10T16:12:37Z"
    },
    "message": "Update breakpoint_1's documentation\n\nI noticed the documentation of breakpoint_1 way way out of date, so this\nis an attempt to update it.  I have changed the parameter names to\nsomething that seems clearer to me.\n\ngdb/ChangeLog:\n\n\t* breakpoint.c (breakpoint_1): Update doc and parameter names.",
    "tree": {
      "sha": "ebb583ee374277876017ff6baecf529867410535",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ebb583ee374277876017ff6baecf529867410535"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5c458ae8f529a11ecab9db470d80695bb31ecfc5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c458ae8f529a11ecab9db470d80695bb31ecfc5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5c458ae8f529a11ecab9db470d80695bb31ecfc5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c458ae8f529a11ecab9db470d80695bb31ecfc5/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4c462cb0efb40a7a1e5297946bed59286dd0cf02",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c462cb0efb40a7a1e5297946bed59286dd0cf02",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4c462cb0efb40a7a1e5297946bed59286dd0cf02"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 36,
    "deletions": 26
  },
  "files": [
    {
      "sha": "c4db1960d3b6bde656ccc30a45e97f1b1ac9e782",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c458ae8f529a11ecab9db470d80695bb31ecfc5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c458ae8f529a11ecab9db470d80695bb31ecfc5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5c458ae8f529a11ecab9db470d80695bb31ecfc5",
      "patch": "@@ -1,3 +1,7 @@\n+2019-07-10  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* breakpoint.c (breakpoint_1): Update doc and parameter names.\n+\n 2019-07-10  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* breakpoint.h (bpstat_explains_signal, bpstat_causes_stop,"
    },
    {
      "sha": "8ae7cd6e7ef0679929f2414611b8090b4d0c9c11",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 32,
      "deletions": 26,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c458ae8f529a11ecab9db470d80695bb31ecfc5/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c458ae8f529a11ecab9db470d80695bb31ecfc5/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=5c458ae8f529a11ecab9db470d80695bb31ecfc5",
      "patch": "@@ -6401,15 +6401,21 @@ pending_breakpoint_p (struct breakpoint *b)\n   return b->loc == NULL;\n }\n \n-/* Print information on user settable breakpoint (watchpoint, etc)\n-   number BNUM.  If BNUM is -1 print all user-settable breakpoints.\n-   If ALLFLAG is non-zero, include non-user-settable breakpoints.  If\n-   FILTER is non-NULL, call it on each breakpoint and only include the\n-   ones for which it returns non-zero.  Return the total number of\n-   breakpoints listed.  */\n+/* Print information on breakpoints (including watchpoints and tracepoints).\n+\n+   If non-NULL, BP_NUM_LIST is a list of numbers and number ranges as\n+   understood by number_or_range_parser.  Only breakpoints included in this\n+   list are then printed.\n+\n+   If SHOW_INTERNAL is true, print internal breakpoints.\n+\n+   If FILTER is non-NULL, call it on each breakpoint and only include the\n+   ones for which it returns true.\n+\n+   Return the total number of breakpoints listed.  */\n \n static int\n-breakpoint_1 (const char *args, int allflag, \n+breakpoint_1 (const char *bp_num_list, bool show_internal,\n \t      int (*filter) (const struct breakpoint *))\n {\n   struct breakpoint *b;\n@@ -6431,17 +6437,17 @@ breakpoint_1 (const char *args, int allflag,\n       if (filter && !filter (b))\n \tcontinue;\n \n-      /* If we have an \"args\" string, it is a list of breakpoints to \n+      /* If we have a BP_NUM_LIST string, it is a list of breakpoints to\n \t accept.  Skip the others.  */\n-      if (args != NULL && *args != '\\0')\n+      if (bp_num_list != NULL && *bp_num_list != '\\0')\n \t{\n-\t  if (allflag && parse_and_eval_long (args) != b->number)\n+\t  if (show_internal && parse_and_eval_long (bp_num_list) != b->number)\n \t    continue;\n-\t  if (!allflag && !number_is_in_list (args, b->number))\n+\t  if (!show_internal && !number_is_in_list (bp_num_list, b->number))\n \t    continue;\n \t}\n \n-      if (allflag || user_breakpoint_p (b))\n+      if (show_internal || user_breakpoint_p (b))\n \t{\n \t  int addr_bit, type_len;\n \n@@ -6500,26 +6506,26 @@ breakpoint_1 (const char *args, int allflag,\n \tif (filter && !filter (b))\n \t  continue;\n \n-\t/* If we have an \"args\" string, it is a list of breakpoints to \n+\t/* If we have a BP_NUM_LIST string, it is a list of breakpoints to\n \t   accept.  Skip the others.  */\n \n-\tif (args != NULL && *args != '\\0')\n+\tif (bp_num_list != NULL && *bp_num_list != '\\0')\n \t  {\n-\t    if (allflag)\t/* maintenance info breakpoint */\n+\t    if (show_internal)\t/* maintenance info breakpoint */\n \t      {\n-\t\tif (parse_and_eval_long (args) != b->number)\n+\t\tif (parse_and_eval_long (bp_num_list) != b->number)\n \t\t  continue;\n \t      }\n \t    else\t\t/* all others */\n \t      {\n-\t\tif (!number_is_in_list (args, b->number))\n+\t\tif (!number_is_in_list (bp_num_list, b->number))\n \t\t  continue;\n \t      }\n \t  }\n \t/* We only print out user settable breakpoints unless the\n-\t   allflag is set.  */\n-\tif (allflag || user_breakpoint_p (b))\n-\t  print_one_breakpoint (b, &last_loc, allflag);\n+\t   show_internal is set.  */\n+\tif (show_internal || user_breakpoint_p (b))\n+\t  print_one_breakpoint (b, &last_loc, show_internal);\n       }\n   }\n \n@@ -6529,11 +6535,11 @@ breakpoint_1 (const char *args, int allflag,\n \t empty list.  */\n       if (!filter)\n \t{\n-\t  if (args == NULL || *args == '\\0')\n+\t  if (bp_num_list == NULL || *bp_num_list == '\\0')\n \t    uiout->message (\"No breakpoints or watchpoints.\\n\");\n \t  else\n \t    uiout->message (\"No breakpoint or watchpoint matching '%s'.\\n\",\n-\t\t\t    args);\n+\t\t\t    bp_num_list);\n \t}\n     }\n   else\n@@ -6573,15 +6579,15 @@ default_collect_info (void)\n static void\n info_breakpoints_command (const char *args, int from_tty)\n {\n-  breakpoint_1 (args, 0, NULL);\n+  breakpoint_1 (args, false, NULL);\n \n   default_collect_info ();\n }\n \n static void\n info_watchpoints_command (const char *args, int from_tty)\n {\n-  int num_printed = breakpoint_1 (args, 0, is_watchpoint);\n+  int num_printed = breakpoint_1 (args, false, is_watchpoint);\n   struct ui_out *uiout = current_uiout;\n \n   if (num_printed == 0)\n@@ -6596,7 +6602,7 @@ info_watchpoints_command (const char *args, int from_tty)\n static void\n maintenance_info_breakpoints (const char *args, int from_tty)\n {\n-  breakpoint_1 (args, 1, NULL);\n+  breakpoint_1 (args, true, NULL);\n \n   default_collect_info ();\n }\n@@ -14673,7 +14679,7 @@ info_tracepoints_command (const char *args, int from_tty)\n   struct ui_out *uiout = current_uiout;\n   int num_printed;\n \n-  num_printed = breakpoint_1 (args, 0, is_tracepoint);\n+  num_printed = breakpoint_1 (args, false, is_tracepoint);\n \n   if (num_printed == 0)\n     {"
    }
  ]
}