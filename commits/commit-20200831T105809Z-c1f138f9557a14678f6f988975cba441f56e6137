{
  "sha": "c1f138f9557a14678f6f988975cba441f56e6137",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzFmMTM4Zjk1NTdhMTQ2NzhmNmY5ODg5NzVjYmE0NDFmNTZlNjEzNw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-30T23:02:32Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-31T10:58:09Z"
    },
    "message": "PR26442 UBSAN: elf32-crx.c:512 cannot be represented in int\n\n\tPR 26442\n\t* elf32-crx.c (crx_elf_final_link_relocate): Calculate reloc_bits\n\twithout undefined behaviour.  Tidy excess casts.",
    "tree": {
      "sha": "1727af28cdcc72b85c08f140115b5563f92a1c16",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1727af28cdcc72b85c08f140115b5563f92a1c16"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c1f138f9557a14678f6f988975cba441f56e6137",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c1f138f9557a14678f6f988975cba441f56e6137",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c1f138f9557a14678f6f988975cba441f56e6137",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c1f138f9557a14678f6f988975cba441f56e6137/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "26e3de8e0a2d95e02b9dec46c67531755303fc4b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26e3de8e0a2d95e02b9dec46c67531755303fc4b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/26e3de8e0a2d95e02b9dec46c67531755303fc4b"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 13,
    "deletions": 14
  },
  "files": [
    {
      "sha": "7388c4d97ce48fb4c4a13b1c0bdc5601cb2165ff",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1f138f9557a14678f6f988975cba441f56e6137/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1f138f9557a14678f6f988975cba441f56e6137/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=c1f138f9557a14678f6f988975cba441f56e6137",
      "patch": "@@ -1,3 +1,9 @@\n+2020-08-31  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26442\n+\t* elf32-crx.c (crx_elf_final_link_relocate): Calculate reloc_bits\n+\twithout undefined behaviour.  Tidy excess casts.\n+\n 2020-08-31  Alan Modra  <amodra@gmail.com>\n \n \t* elf-m10300.c (mn10300_elf_relax_delete_bytes): Calculate"
    },
    {
      "sha": "32db5b7fff2b8f6a869ec28d5715c29e466781ce",
      "filename": "bfd/elf32-crx.c",
      "status": "modified",
      "additions": 7,
      "deletions": 14,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1f138f9557a14678f6f988975cba441f56e6137/bfd/elf32-crx.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1f138f9557a14678f6f988975cba441f56e6137/bfd/elf32-crx.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-crx.c?ref=c1f138f9557a14678f6f988975cba441f56e6137",
      "patch": "@@ -506,33 +506,26 @@ crx_elf_final_link_relocate (reloc_howto_type *howto, bfd *input_bfd,\n      as signed or unsigned.  */\n   check = Rvalue >> howto->rightshift;\n \n-  /* Assumes two's complement.  This expression avoids\n-     overflow if howto->bitsize is the number of bits in\n-     bfd_vma.  */\n-  reloc_bits = (((1 << (howto->bitsize - 1)) - 1) << 1) | 1;\n-\n-  if (((bfd_vma) check & ~reloc_bits) != 0\n-      && (((bfd_vma) check & ~reloc_bits)\n-\t  != (-(bfd_vma) 1 & ~reloc_bits)))\n+  reloc_bits = ((bfd_vma) 1 << (howto->bitsize - 1) << 1) - 1;\n+\n+  if ((check & ~reloc_bits) != 0\n+      && (check & ~reloc_bits) != ((bfd_vma) -1 & ~reloc_bits))\n     {\n       /* The above right shift is incorrect for a signed\n \t value.  See if turning on the upper bits fixes the\n \t overflow.  */\n       if (howto->rightshift && (bfd_signed_vma) Rvalue < 0)\n \t{\n-\t  check |= ((bfd_vma) - 1\n-\t\t    & ~((bfd_vma) - 1\n-\t\t\t>> howto->rightshift));\n-\t  if (((bfd_vma) check & ~reloc_bits)\n-\t      != (-(bfd_vma) 1 & ~reloc_bits))\n+\t  check |= (bfd_vma) -1 & ~((bfd_vma) -1 >> howto->rightshift);\n+\t  if ((check & ~reloc_bits) != ((bfd_vma) -1 & ~reloc_bits))\n \t    return bfd_reloc_overflow;\n \t}\n       else\n \treturn bfd_reloc_overflow;\n     }\n \n   /* Drop unwanted bits from the value we are relocating to.  */\n-  Rvalue >>= (bfd_vma) howto->rightshift;\n+  Rvalue >>= howto->rightshift;\n \n   /* Apply dst_mask to select only relocatable part of the insn.  */\n   Rvalue &= howto->dst_mask;"
    }
  ]
}