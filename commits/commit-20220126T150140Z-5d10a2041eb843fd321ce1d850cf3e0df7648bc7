{
  "sha": "5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
  "node_id": "C_kwDOANOeidoAKDVkMTBhMjA0MWViODQzZmQzMjFjZTFkODUwY2YzZTBkZjc2NDhiYzc",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2022-01-25T01:00:46Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2022-01-26T15:01:40Z"
    },
    "message": "gdb: add string_file::release method\n\nA common pattern for string_file is to want to move out the internal\nstring buffer, because it is the result of the computation that we want\nto return.  It is the reason why string_file::string returns a non-const\nreference, as explained in the comment.  I think it would make sense to\nhave a dedicated method for that instead and make string_file::string\nreturn a const reference.\n\nThis allows removing the explicit std::move in the typical case.  Note\nthat compile_program::compute was missing a move, meaning that the\nresulting string was copied.  With the new version, it's not possible to\nforget to move.\n\nChange-Id: Ieaefa35b73daa7930b2f3a26988b6e3b4121bb79",
    "tree": {
      "sha": "a1bd00ecbd780dc194da8d44b713b09f10446c0a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a1bd00ecbd780dc194da8d44b713b09f10446c0a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b583c328e71369f90f4042ac7973ce9edfdb44b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b583c328e71369f90f4042ac7973ce9edfdb44b3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b583c328e71369f90f4042ac7973ce9edfdb44b3"
    }
  ],
  "stats": {
    "total": 69,
    "additions": 35,
    "deletions": 34
  },
  "files": [
    {
      "sha": "5a67853455da90ead60294480e87ae3fb6abae9c",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -6915,7 +6915,7 @@ type_as_string (struct type *type)\n \n   type_print (type, \"\", &tmp_stream, -1);\n \n-  return std::move (tmp_stream.string ());\n+  return tmp_stream.release ();\n }\n \n /* Given a type TYPE, look up the type of the component of type named NAME."
    },
    {
      "sha": "70e46965c17597bfcd30aa5a6721113bf264df16",
      "filename": "gdb/ada-valprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/ada-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/ada-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-valprint.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -307,7 +307,7 @@ ada_print_floating (const gdb_byte *valaddr, struct type *type,\n \n   print_floating (valaddr, type, &tmp_stream);\n \n-  std::string &s = tmp_stream.string ();\n+  std::string s = tmp_stream.release ();\n   size_t skip_count = 0;\n \n   /* Modify for Ada rules.  */"
    },
    {
      "sha": "3c664687572019c3ebe33dfc3fa6a784c4f3b223",
      "filename": "gdb/ada-varobj.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/ada-varobj.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/ada-varobj.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-varobj.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -82,7 +82,7 @@ ada_varobj_scalar_image (struct type *type, LONGEST val)\n   string_file buf;\n \n   ada_print_scalar (type, val, &buf);\n-  return std::move (buf.string ());\n+  return buf.release ();\n }\n \n /* Assuming that the (PARENT_VALUE, PARENT_TYPE) pair designates\n@@ -817,7 +817,7 @@ ada_varobj_get_value_image (struct value *value,\n   string_file buffer;\n \n   common_val_print (value, &buffer, 0, opts, current_language);\n-  return std::move (buffer.string ());\n+  return buffer.release ();\n }\n \n /* Assuming that the (VALUE, TYPE) pair designates an array varobj,"
    },
    {
      "sha": "464ed44a2297c8e2ad164a11a8b604efe63907c1",
      "filename": "gdb/c-exp.y",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/c-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/c-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-exp.y?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -1780,11 +1780,11 @@ oper:\tOPERATOR NEW\n \t|\tOPERATOR OBJC_LBRAC ']'\n \t\t\t{ $$ = operator_stoken (\"[]\"); }\n \t|\tOPERATOR conversion_type_id\n-\t\t\t{ string_file buf;\n-\n+\t\t\t{\n+\t\t\t  string_file buf;\n \t\t\t  c_print_type ($2, NULL, &buf, -1, 0,\n \t\t\t\t\t&type_print_raw_options);\n-\t\t\t  std::string name = std::move (buf.string ());\n+\t\t\t  std::string name = buf.release ();\n \n \t\t\t  /* This also needs canonicalization.  */\n \t\t\t  gdb::unique_xmalloc_ptr<char> canon"
    },
    {
      "sha": "99f35eb509201161f785a20744e7d39f72beb89b",
      "filename": "gdb/cli/cli-setshow.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/cli/cli-setshow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/cli/cli-setshow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-setshow.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -659,7 +659,7 @@ get_setshow_command_value_string (const setting &var)\n       gdb_assert_not_reached (\"bad var_type\");\n     }\n \n-  return std::move (stb.string ());\n+  return stb.release ();\n }\n \n "
    },
    {
      "sha": "4d9abfb5e89a35e6ff182c8060f9d0b6f6cd7208",
      "filename": "gdb/compile/compile-c-support.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/compile/compile-c-support.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/compile/compile-c-support.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-c-support.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -635,7 +635,7 @@ class compile_program\n       PopUserExpressionPolicy::pop_user_expression (&buf);\n \n     AddCodeFooterPolicy::add_code_footer (m_instance->scope (), &buf);\n-    return buf.string ();\n+    return buf.release ();\n   }\n \n private:"
    },
    {
      "sha": "987660ceaf98550b06d660ea5cc5eb5cb5205b03",
      "filename": "gdb/guile/scm-type.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/guile/scm-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/guile/scm-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-type.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -109,7 +109,7 @@ tyscm_type_name (struct type *type)\n       string_file stb;\n \n       LA_PRINT_TYPE (type, \"\", &stb, -1, 0, &type_print_raw_options);\n-      return std::move (stb.string ());\n+      return stb.release ();\n     }\n   catch (const gdb_exception &except)\n     {"
    },
    {
      "sha": "299ef7ecaddb0064f8004d75f01e0887eeef821b",
      "filename": "gdb/location.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/location.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/location.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/location.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -447,7 +447,7 @@ explicit_to_string_internal (bool as_linespec,\n \t\t  explicit_loc->line_offset.offset);\n     }\n \n-  return std::move (buf.string ());\n+  return buf.release ();\n }\n \n /* See description in location.h.  */"
    },
    {
      "sha": "09175c3a3cfcb7c8f88a55396486575de49de2ef",
      "filename": "gdb/maint-test-options.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/maint-test-options.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/maint-test-options.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint-test-options.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -295,8 +295,7 @@ save_completion_result (const test_options_opts &opts, bool res,\n \n       stream.puts (\"1 \");\n       opts.dump (&stream, text);\n-      maintenance_test_options_command_completion_text\n-\t= std::move (stream.string ());\n+      maintenance_test_options_command_completion_text = stream.release ();\n     }\n   else\n     {"
    },
    {
      "sha": "bb41a18daf9ee6792789d27b5fead138cb4a8e77",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -9519,7 +9519,7 @@ escape_buffer (const char *buf, int n)\n   string_file stb;\n \n   stb.putstrn (buf, n, '\\\\');\n-  return std::move (stb.string ());\n+  return stb.release ();\n }\n \n int"
    },
    {
      "sha": "445503a5af9819ddd1c41fd45d2e8a83e012d805",
      "filename": "gdb/tui/tui-disasm.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/tui/tui-disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/tui/tui-disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -130,14 +130,12 @@ tui_disassemble (struct gdbarch *gdbarch,\n \t}\n \n       /* Capture the disassembled instruction.  */\n-      tal.insn = std::move (gdb_dis_out.string ());\n-      gdb_dis_out.clear ();\n+      tal.insn = gdb_dis_out.release ();\n \n       /* And capture the address the instruction is at.  */\n       tal.addr = orig_pc;\n       print_address (gdbarch, orig_pc, &gdb_dis_out);\n-      tal.addr_string = std::move (gdb_dis_out.string ());\n-      gdb_dis_out.clear ();\n+      tal.addr_string = std::move (gdb_dis_out.release ());\n \n       if (addr_size != nullptr)\n \t{"
    },
    {
      "sha": "d53ce549fb0878d989568b8c9dc93a2320c96653",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -100,7 +100,7 @@ tui_register_format (struct frame_info *frame, int regnum)\n   gdbarch_print_registers_info (gdbarch, &stream, frame, regnum, 1);\n \n   /* Remove the possible \\n.  */\n-  std::string &str = stream.string ();\n+  std::string str = stream.release ();\n   if (!str.empty () && str.back () == '\\n')\n     str.resize (str.size () - 1);\n "
    },
    {
      "sha": "be8ffbd0c124010053a320f98ace0263476ff488",
      "filename": "gdb/tui/tui-stack.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/tui/tui-stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/tui/tui-stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -181,12 +181,14 @@ tui_locator_window::make_status_line () const\n       string.puts (pc_buf);\n     }\n \n+  std::string string_val = string.release ();\n+\n   if (string.size () < status_size)\n-    string.puts (n_spaces (status_size - string.size ()));\n+    string_val.append (status_size - string.size (), ' ');\n   else if (string.size () > status_size)\n-    string.string ().erase (status_size, string.size ());\n+    string_val.erase (status_size, string.size ());\n \n-  return std::move (string.string ());\n+  return string_val;\n }\n \n /* Get a printable name for the function at the address.  The symbol"
    },
    {
      "sha": "d68970b9d6727824eb2fb64fdcbff4b6f0cb1a0e",
      "filename": "gdb/typeprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/typeprint.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -406,7 +406,7 @@ type_to_string (struct type *type)\n       string_file stb;\n \n       type_print (type, \"\", &stb, -1);\n-      return std::move (stb.string ());\n+      return stb.release ();\n     }\n   catch (const gdb_exception &except)\n     {"
    },
    {
      "sha": "7c7b00d91c6b5a5c33a27c709edbc4a61c5aaf2c",
      "filename": "gdb/ui-file.h",
      "status": "modified",
      "additions": 11,
      "deletions": 9,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/ui-file.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/ui-file.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-file.h?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -160,17 +160,19 @@ class string_file : public ui_file\n   /* string_file-specific public API.  */\n \n   /* Accesses the std::string containing the entire output collected\n-     so far.\n+     so far.  */\n+  const std::string &string () { return m_string; }\n \n-     Returns a non-const reference so that it's easy to move the\n-     string contents out of the string_file.  E.g.:\n+  /* Return an std::string containing the entire output collected so far.\n \n-      string_file buf;\n-      buf.printf (....);\n-      buf.printf (....);\n-      return std::move (buf.string ());\n-  */\n-  std::string &string () { return m_string; }\n+     The internal buffer is cleared, such that it's ready to build a new\n+     string.  */\n+  std::string release ()\n+  {\n+    std::string ret = std::move (m_string);\n+    m_string.clear ();\n+    return ret;\n+  }\n \n   /* Provide a few convenience methods with the same API as the\n      underlying std::string.  */"
    },
    {
      "sha": "92266890de4d2c1903b7958a1696be4e21c9b24a",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -1986,7 +1986,7 @@ vfprintf_unfiltered (struct ui_file *stream, const char *format, va_list args)\n       /* Print the message.  */\n       string_file sfile;\n       cli_ui_out (&sfile, 0).vmessage (ui_file_style (), format, args);\n-      std::string linebuffer = std::move (sfile.string ());\n+      const std::string &linebuffer = sfile.string ();\n       fputs_unfiltered (linebuffer.c_str (), stream);\n \n       size_t len = linebuffer.length ();"
    },
    {
      "sha": "80216a455e8636e9c7300a0dbcff2ae7c71952aa",
      "filename": "gdb/varobj.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/varobj.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d10a2041eb843fd321ce1d850cf3e0df7648bc7/gdb/varobj.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/varobj.c?ref=5d10a2041eb843fd321ce1d850cf3e0df7648bc7",
      "patch": "@@ -2242,7 +2242,7 @@ varobj_value_get_print_value (struct value *value,\n     /* All other cases.  */\n     common_val_print (value, &stb, 0, &opts, current_language);\n \n-  return std::move (stb.string ());\n+  return stb.release ();\n }\n \n bool"
    }
  ]
}