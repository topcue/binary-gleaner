{
  "sha": "337882d477675296a22fd8c1f7412ca30c70d9b0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzM3ODgyZDQ3NzY3NTI5NmEyMmZkOGMxZjc0MTJjYTMwYzcwZDliMA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-09-16T12:53:26Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-09-16T12:53:26Z"
    },
    "message": "[gdb/testsuite] Detect gdb prompt after monitor exit\n\nWith this gdbserver-support.exp patch:\n...\n@@ -451,8 +451,10 @@ proc gdbserver_exit { is_mi } {\n \t    # We use expect rather than gdb_expect because\n \t    # we want to suppress printing exception messages, otherwise,\n \t    # remote_expect, invoked by gdb_expect, prints the exceptions.\n+\t    set have_prompt 0\n \t    expect {\n \t\t-i \"$gdb_spawn_id\" -re \"$gdb_prompt $\" {\n+\t\t    set have_prompt 1\n \t\t    exp_continue\n \t\t}\n \t\t-i \"$server_spawn_id\" eof {\n@@ -463,6 +465,7 @@ proc gdbserver_exit { is_mi } {\n                    warning \"Timed out waiting for EOF in server after $monitor_exit\"\n                }\n \t    }\n+\t    gdb_assert {$have_prompt}\n \t}\n     }\n     close_gdbserver\n...\nand with this in parallel:\n...\n$ stress -c 5\n...\nwe run into this and similar FAILs:\n...\nFAIL: gdb.multi/multi-target.exp: continue: non-stop=on: $have_prompt\n...\n\nIn more detail:\n...\n(gdb) PASS: gdb.multi/multi-target.exp: continue: non-stop=on: inferior 5\nRemote debugging from host ::1, port 40712^M\nProcess build/gdb/testsuite/outputs/gdb.multi/multi-target/multi-target \\\n  created; pid = 11098^M\nmonitor exit^M\nKilling process(es): 11098^M\nFAIL: gdb.multi/multi-target.exp: continue: non-stop=on: $have_prompt\nspawn build/gdb/testsuite/../../gdb/gdb -nw -nx -data-directory \\\n  build/gdb/testsuite/../data-directory^M\n...\n\nAfter issuing a \"monitor exit\" command, we should always get a prompt back, so\ncheck for that.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-09-16  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/gdbserver-support.exp (gdbserver_exit): Make sure we\n\tget the gdb prompt after issuing \"monitor exit\".",
    "tree": {
      "sha": "0c10194ecef9ad496caed05c7e62c406f2327128",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0c10194ecef9ad496caed05c7e62c406f2327128"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/337882d477675296a22fd8c1f7412ca30c70d9b0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/337882d477675296a22fd8c1f7412ca30c70d9b0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/337882d477675296a22fd8c1f7412ca30c70d9b0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/337882d477675296a22fd8c1f7412ca30c70d9b0/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0690f591284b7de9fe0a423b148a5617062ccc1f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0690f591284b7de9fe0a423b148a5617062ccc1f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0690f591284b7de9fe0a423b148a5617062ccc1f"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 13,
    "deletions": 1
  },
  "files": [
    {
      "sha": "d368b2dfc1ac5b34bf3656c9db2f676c431115b3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/337882d477675296a22fd8c1f7412ca30c70d9b0/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/337882d477675296a22fd8c1f7412ca30c70d9b0/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=337882d477675296a22fd8c1f7412ca30c70d9b0",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-16  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/gdbserver-support.exp (gdbserver_exit): Make sure we\n+\tget the gdb prompt after issuing \"monitor exit\".\n+\n 2020-09-16  Tom de Vries  <tdevries@suse.de>\n \n \tPR testsuite/26624"
    },
    {
      "sha": "2734ca6c878999cb62ec200f70440de0c0bfa20c",
      "filename": "gdb/testsuite/lib/gdbserver-support.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/337882d477675296a22fd8c1f7412ca30c70d9b0/gdb/testsuite/lib/gdbserver-support.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/337882d477675296a22fd8c1f7412ca30c70d9b0/gdb/testsuite/lib/gdbserver-support.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdbserver-support.exp?ref=337882d477675296a22fd8c1f7412ca30c70d9b0",
      "patch": "@@ -451,13 +451,20 @@ proc gdbserver_exit { is_mi } {\n \t    # We use expect rather than gdb_expect because\n \t    # we want to suppress printing exception messages, otherwise,\n \t    # remote_expect, invoked by gdb_expect, prints the exceptions.\n+\t    set have_prompt 0\n \t    expect {\n \t\t-i \"$gdb_spawn_id\" -re \"$gdb_prompt $\" {\n-\t\t    exp_continue\n+\t\t    set have_prompt 1\n+\t\t    if { [info exists server_spawn_id] } {\n+\t\t\texp_continue\n+\t\t    }\n \t\t}\n \t\t-i \"$server_spawn_id\" eof {\n \t\t    wait -i $expect_out(spawn_id)\n \t\t    unset server_spawn_id\n+\t\t    if { ! $have_prompt } {\n+\t\t\texp_continue\n+\t\t    }\n \t\t}\n                timeout {\n                    warning \"Timed out waiting for EOF in server after $monitor_exit\""
    }
  ]
}