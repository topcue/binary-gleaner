{
  "sha": "e7f2f959e38e929ee04601abf97c4a637305771d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTdmMmY5NTllMzhlOTI5ZWUwNDYwMWFiZjk3YzRhNjM3MzA1NzcxZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-10-15T23:45:57Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-10-16T00:05:23Z"
    },
    "message": "elf32-arc.c: Don't cast between function pointer and void pointer\n\nCasts should be avoided if at all possible, and in particular the C\nstandard doesn't promise that function pointers can be cast to void*\nor vice-versa.  It is only mentioned under J.5 Common extensions,\nsaying \"The following extensions are widely used in many systems, but\nare not portable to all implementations.\"\n\n\t* elf32-arc.c (replace_func): Correct return type.\n\t(get_replace_function): Use a replace_func function pointer rather\n\tthan void*.  Update associated ARC_RELOC_HOWTO define.",
    "tree": {
      "sha": "17325126904dab376d42c74a1317ef0e809847ff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/17325126904dab376d42c74a1317ef0e809847ff"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e7f2f959e38e929ee04601abf97c4a637305771d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e7f2f959e38e929ee04601abf97c4a637305771d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e7f2f959e38e929ee04601abf97c4a637305771d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e7f2f959e38e929ee04601abf97c4a637305771d/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fd63a770b74293b20b150b83782f72d2f106f5c3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd63a770b74293b20b150b83782f72d2f106f5c3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fd63a770b74293b20b150b83782f72d2f106f5c3"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 10,
    "deletions": 4
  },
  "files": [
    {
      "sha": "a7e0caea688e91bee83610a046d6f39ed70aae0f",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e7f2f959e38e929ee04601abf97c4a637305771d/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e7f2f959e38e929ee04601abf97c4a637305771d/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=e7f2f959e38e929ee04601abf97c4a637305771d",
      "patch": "@@ -1,3 +1,9 @@\n+2020-10-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf32-arc.c (replace_func): Correct return type.\n+\t(get_replace_function): Use a replace_func function pointer rather\n+\tthan void*.  Update associated ARC_RELOC_HOWTO define.\n+\n 2020-10-16  Alan Modra  <amodra@gmail.com>\n \n \t* elf32-cr16.c: Formatting."
    },
    {
      "sha": "a05f697b6575410328bb4f87d9d8e7be03e5337b",
      "filename": "bfd/elf32-arc.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e7f2f959e38e929ee04601abf97c4a637305771d/bfd/elf32-arc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e7f2f959e38e929ee04601abf97c4a637305771d/bfd/elf32-arc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arc.c?ref=e7f2f959e38e929ee04601abf97c4a637305771d",
      "patch": "@@ -391,17 +391,17 @@ static const struct arc_reloc_map arc_reloc_map[] =\n \n #undef ARC_RELOC_HOWTO\n \n-typedef ATTRIBUTE_UNUSED bfd_vma (*replace_func) (unsigned, int ATTRIBUTE_UNUSED);\n+typedef ATTRIBUTE_UNUSED unsigned (*replace_func) (unsigned, int ATTRIBUTE_UNUSED);\n \n #define ARC_RELOC_HOWTO(TYPE, VALUE, SIZE, BITSIZE, RELOC_FUNCTION, OVERFLOW, FORMULA) \\\n   case TYPE: \\\n-    func = (void *) RELOC_FUNCTION; \\\n+    func = RELOC_FUNCTION; \\\n     break;\n \n static replace_func\n get_replace_function (bfd *abfd, unsigned int r_type)\n {\n-  void *func = NULL;\n+  replace_func func = NULL;\n \n   switch (r_type)\n     {\n@@ -411,7 +411,7 @@ get_replace_function (bfd *abfd, unsigned int r_type)\n   if (func == replace_bits24 && bfd_big_endian (abfd))\n     func = replace_bits24_be;\n \n-  return (replace_func) func;\n+  return func;\n }\n #undef ARC_RELOC_HOWTO\n "
    }
  ]
}