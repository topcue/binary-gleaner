{
  "sha": "f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjBmOWU3NWE4MjRkY2QwMDUzYWU0ZThmOWFhZjgwNTZhYTFhOGJjNQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-07-21T08:25:42Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-07-21T08:25:42Z"
    },
    "message": "[gdb/testsuite] Make inline-locals.c deterministic\n\nWhen running testcase gdb.opt/inline-locals.exp on openSUSE Tumbleweed, I get:\n...\n(gdb) info locals^M\narray = {0 <repeats 48 times>, 15775231, 0, 194, 0, -11497, 32767, 4199061, \\\n  0, 0, 0, 0, 0, 4198992, 0, 4198432, 0}^M\n(gdb) FAIL: gdb.opt/inline-locals.exp: info locals above bar 2\n...\n\nFix this by:\n- completely initializing array before printing any value\n- updating the pattern to match \"array = {0 <repeats 64 times>}\"\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-07-21  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.opt/inline-locals.c (init_array): New func.\n\t(func1): Use init_array.\n\t* gdb.opt/inline-locals.exp: Update pattern.",
    "tree": {
      "sha": "12bb39412a36df27319712968329a786c12d679b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/12bb39412a36df27319712968329a786c12d679b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bd460ecb313d064e079acacfc1eba77c58684f98",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bd460ecb313d064e079acacfc1eba77c58684f98",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bd460ecb313d064e079acacfc1eba77c58684f98"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 16,
    "deletions": 1
  },
  "files": [
    {
      "sha": "f395665b13238920ccc6d8eb724b8a741a81234e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5",
      "patch": "@@ -1,3 +1,9 @@\n+2020-07-21  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.opt/inline-locals.c (init_array): New func.\n+\t(func1): Use init_array.\n+\t* gdb.opt/inline-locals.exp: Update pattern.\n+\n 2020-07-21  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.debuginfod/fetch_src_and_symbols.exp: Use save_vars for env"
    },
    {
      "sha": "143a09ebc18a65ef0f93a3f04288b06070477acd",
      "filename": "gdb/testsuite/gdb.opt/inline-locals.c",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5/gdb/testsuite/gdb.opt/inline-locals.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5/gdb/testsuite/gdb.opt/inline-locals.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.opt/inline-locals.c?ref=f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5",
      "patch": "@@ -29,9 +29,18 @@ volatile int *array_p;\n \n void bar(void);\n \n+void\n+init_array (int *array, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; ++i)\n+    array[i] = 0;\n+}\n+\n inline ATTR int func1(int arg1)\n {\n   int array[64];\n+  init_array (array, 64);\n   array_p = array;\n   array[0] = result;\n   array[1] = arg1;"
    },
    {
      "sha": "841f1772096e7a5f243b250c10c747fa23201440",
      "filename": "gdb/testsuite/gdb.opt/inline-locals.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5/gdb/testsuite/gdb.opt/inline-locals.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5/gdb/testsuite/gdb.opt/inline-locals.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.opt/inline-locals.exp?ref=f0f9e75a824dcd0053ae4e8f9aaf8056aa1a8bc5",
      "patch": "@@ -43,7 +43,7 @@ if { ! $no_frames } {\n \t\"backtrace from bar 2\"\n     gdb_test \"up\" \"#1  .*func1 .* at .*\" \"up from bar 2\"\n     gdb_test \"info frame\" \".*inlined into frame.*\" \"func1 inlined 2\"\n-    set pass_re \"array = {$decimal, \\[^\\r\\n\\]*}\"\n+    set pass_re \"array = \\\\{0 <repeats 64 times>\\\\}\"\n     set kfail_re [multi_line $pass_re \\\n \t\t      \"array = {<optimized out> <repeats 64 times>}\"]\n     gdb_test_multiple \"info locals\" \"info locals above bar 2\" {"
    }
  ]
}