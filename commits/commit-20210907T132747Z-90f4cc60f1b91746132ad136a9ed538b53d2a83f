{
  "sha": "90f4cc60f1b91746132ad136a9ed538b53d2a83f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTBmNGNjNjBmMWI5MTc0NjEzMmFkMTM2YTllZDUzOGI1M2QyYTgzZg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-08-17T10:54:51Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-09-07T13:27:47Z"
    },
    "message": "gdb: use bool instead of int in struct internal_problem\n\nChange struct internal_problem (gdb/utils.c) to use bool instead of\nint, update the 3 static instances of this structure that we create to\nuse true/false instead of 1/0.\n\nI've also updated the comments on struct internal_problem as the\nexisting comment doesn't seem to be referring to the structure, it\ntalks about returning something, which doesn't make sense in this\ncontext.\n\nThere should be no user visible changes after this commit.",
    "tree": {
      "sha": "bfff9092fc6d2f6f30c41387a84b9629ef01f71e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bfff9092fc6d2f6f30c41387a84b9629ef01f71e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/90f4cc60f1b91746132ad136a9ed538b53d2a83f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90f4cc60f1b91746132ad136a9ed538b53d2a83f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/90f4cc60f1b91746132ad136a9ed538b53d2a83f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90f4cc60f1b91746132ad136a9ed538b53d2a83f/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "611841bb1afc689becfab6dd490e1799aabf547d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/611841bb1afc689becfab6dd490e1799aabf547d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/611841bb1afc689becfab6dd490e1799aabf547d"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 21,
    "deletions": 8
  },
  "files": [
    {
      "sha": "0009cb10d87b1dcb67af253568486f6213e47c02",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 21,
      "deletions": 8,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90f4cc60f1b91746132ad136a9ed538b53d2a83f/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90f4cc60f1b91746132ad136a9ed538b53d2a83f/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=90f4cc60f1b91746132ad136a9ed538b53d2a83f",
      "patch": "@@ -280,16 +280,29 @@ static const char *const internal_problem_modes[] =\n   NULL\n };\n \n-/* Print a message reporting an internal error/warning.  Ask the user\n-   if they want to continue, dump core, or just exit.  Return\n-   something to indicate a quit.  */\n+/* Data structure used to control how the internal_vproblem function\n+   should behave.  An instance of this structure is created for each\n+   problem type that GDB supports.  */\n \n struct internal_problem\n {\n+  /* The name of this problem type.  This must not contain white space as\n+     this string is used to build command names.  */\n   const char *name;\n-  int user_settable_should_quit;\n+\n+  /* When this is true then a user command is created (based on NAME) that\n+     allows the SHOULD_QUIT field to be modified, otherwise, SHOULD_QUIT\n+     can't be changed from its default value by the user.  */\n+  bool user_settable_should_quit;\n+\n+  /* Reference a value from internal_problem_modes to indicate if GDB\n+     should quit when it hits a problem of this type.  */\n   const char *should_quit;\n-  int user_settable_should_dump_core;\n+\n+  /* Like USER_SETTABLE_SHOULD_QUIT but for SHOULD_DUMP_CORE.  */\n+  bool user_settable_should_dump_core;\n+\n+  /* Like SHOULD_QUIT, but whether GDB should dump core.  */\n   const char *should_dump_core;\n };\n \n@@ -435,7 +448,7 @@ internal_vproblem (struct internal_problem *problem,\n }\n \n static struct internal_problem internal_error_problem = {\n-  \"internal-error\", 1, internal_problem_ask, 1, internal_problem_ask\n+  \"internal-error\", true, internal_problem_ask, true, internal_problem_ask,\n };\n \n void\n@@ -446,7 +459,7 @@ internal_verror (const char *file, int line, const char *fmt, va_list ap)\n }\n \n static struct internal_problem internal_warning_problem = {\n-  \"internal-warning\", 1, internal_problem_ask, 1, internal_problem_ask\n+  \"internal-warning\", true, internal_problem_ask, true, internal_problem_ask,\n };\n \n void\n@@ -456,7 +469,7 @@ internal_vwarning (const char *file, int line, const char *fmt, va_list ap)\n }\n \n static struct internal_problem demangler_warning_problem = {\n-  \"demangler-warning\", 1, internal_problem_ask, 0, internal_problem_no\n+  \"demangler-warning\", true, internal_problem_ask, false, internal_problem_no,\n };\n \n void"
    }
  ]
}