{
  "sha": "48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDhlODFkN2Y2MzE0MzQ1YTVkODY0OGFiN2I3YjBhYzBjNmE4YTM4MQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-14T01:20:57Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-14T06:53:56Z"
    },
    "message": "BFD_FAKE_SECTIONS formatting\n\nAfter the ld non-contiguous memory support my regen of bfd-in2.h\ndidn't match exactly what was committed, so I took the opportunity to\nline up all the comments.\n\n\t* section.c (BFD_FAKE_SECTIONS): Formatting.\n\t* bfd-in2.h: Regenerate.",
    "tree": {
      "sha": "983f9db8db581b88f68d17f633aca7e9cd0acf07",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/983f9db8db581b88f68d17f633aca7e9cd0acf07"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "426a9c18dddcdd5f640b702734dd8f9c108b7372",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/426a9c18dddcdd5f640b702734dd8f9c108b7372",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/426a9c18dddcdd5f640b702734dd8f9c108b7372"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 30,
    "deletions": 29
  },
  "files": [
    {
      "sha": "de5375be53424644299d8cf1ba9c224b0dbe7a42",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* section.c (BFD_FAKE_SECTIONS): Formatting.\n+\t* bfd-in2.h: Regenerate.\n+\n 2020-03-13  Kamil Rytarowski  <n54@gmx.com>\n \n \t* elf.c (elfcore_grok_netbsd_note): Add support for"
    },
    {
      "sha": "14e2e3b481995b9a357d8294c73edd35efd08f40",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 12,
      "deletions": 14,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381",
      "patch": "@@ -1346,41 +1346,39 @@ discarded_section (const asection *sec)\n   /* name, id,  section_id, index, next, prev, flags, user_set_vma, */ \\\n   {  NAME, IDX, 0,          0,     NULL, NULL, FLAGS, 0,               \\\n                                                                        \\\n-  /* linker_mark, linker_has_input, gc_mark, decompress_status,    */  \\\n+  /* linker_mark, linker_has_input, gc_mark, decompress_status,     */ \\\n      0,           0,                1,       0,                        \\\n                                                                        \\\n-  /* segment_mark, sec_info_type, use_rela_p,                      */  \\\n+  /* segment_mark, sec_info_type, use_rela_p,                       */ \\\n      0,            0,             0,                                   \\\n                                                                        \\\n-  /* sec_flg0, sec_flg1, sec_flg2, sec_flg3, sec_flg4, sec_flg5,   */  \\\n+  /* sec_flg0, sec_flg1, sec_flg2, sec_flg3, sec_flg4, sec_flg5,    */ \\\n      0,        0,        0,        0,        0,        0,              \\\n                                                                        \\\n-  /* vma, lma, size, rawsize, compressed_size, relax, relax_count, */  \\\n+  /* vma, lma, size, rawsize, compressed_size, relax, relax_count,  */ \\\n      0,   0,   0,    0,       0,               0,     0,               \\\n                                                                        \\\n-  /* output_offset, output_section, alignment_power,               */  \\\n+  /* output_offset, output_section, alignment_power,                */ \\\n      0,             &SEC,           0,                                 \\\n                                                                        \\\n-  /* relocation, orelocation, reloc_count, filepos, rel_filepos,   */  \\\n+  /* relocation, orelocation, reloc_count, filepos, rel_filepos,    */ \\\n      NULL,       NULL,        0,           0,       0,                 \\\n                                                                        \\\n-  /* line_filepos, userdata, contents, lineno, lineno_count,       */  \\\n+  /* line_filepos, userdata, contents, lineno, lineno_count,        */ \\\n      0,            NULL,     NULL,     NULL,   0,                      \\\n                                                                        \\\n   /* entsize, kept_section, moving_line_filepos,                    */ \\\n-     0,       NULL,          0,                                        \\\n+     0,       NULL,         0,                                         \\\n                                                                        \\\n-  /* target_index, used_by_bfd, constructor_chain, owner,          */  \\\n+  /* target_index, used_by_bfd, constructor_chain, owner,           */ \\\n      0,            NULL,        NULL,              NULL,               \\\n                                                                        \\\n-  /* symbol,                    symbol_ptr_ptr,                    */  \\\n+  /* symbol,                    symbol_ptr_ptr,                     */ \\\n      (struct bfd_symbol *) SYM, &SEC.symbol,                           \\\n                                                                        \\\n-  /* map_head, map_tail                                            */  \\\n-     { NULL }, { NULL },                                               \\\n+  /* map_head, map_tail, already_assigned                           */ \\\n+     { NULL }, { NULL }, NULL                                          \\\n                                                                        \\\n-  /* already_assigned                                              */  \\\n-     NULL                                                              \\\n     }\n \n /* We use a macro to initialize the static asymbol structures because"
    },
    {
      "sha": "ecad4cd0b9a82e00233c14b463f60c1553fef1cd",
      "filename": "bfd/section.c",
      "status": "modified",
      "additions": 13,
      "deletions": 15,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381/bfd/section.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381/bfd/section.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/section.c?ref=48e81d7f6314345a5d8648ab7b7b0ac0c6a8a381",
      "patch": "@@ -705,41 +705,39 @@ CODE_FRAGMENT\n .  {* name, id,  section_id, index, next, prev, flags, user_set_vma, *}\t\\\n .  {  NAME, IDX, 0,          0,     NULL, NULL, FLAGS, 0,\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* linker_mark, linker_has_input, gc_mark, decompress_status,    *}\t\\\n+.  {* linker_mark, linker_has_input, gc_mark, decompress_status,     *}\t\\\n .     0,           0,                1,       0,\t\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* segment_mark, sec_info_type, use_rela_p,                      *}\t\\\n+.  {* segment_mark, sec_info_type, use_rela_p,                       *}\t\\\n .     0,            0,             0,\t\t\t\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* sec_flg0, sec_flg1, sec_flg2, sec_flg3, sec_flg4, sec_flg5,   *}\t\\\n+.  {* sec_flg0, sec_flg1, sec_flg2, sec_flg3, sec_flg4, sec_flg5,    *}\t\\\n .     0,        0,        0,        0,        0,        0,\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* vma, lma, size, rawsize, compressed_size, relax, relax_count, *}\t\\\n+.  {* vma, lma, size, rawsize, compressed_size, relax, relax_count,  *}\t\\\n .     0,   0,   0,    0,       0,               0,     0,\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* output_offset, output_section, alignment_power,               *}\t\\\n+.  {* output_offset, output_section, alignment_power,                *}\t\\\n .     0,             &SEC,           0,\t\t\t\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* relocation, orelocation, reloc_count, filepos, rel_filepos,   *}\t\\\n+.  {* relocation, orelocation, reloc_count, filepos, rel_filepos,    *}\t\\\n .     NULL,       NULL,        0,           0,       0,\t\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* line_filepos, userdata, contents, lineno, lineno_count,       *}\t\\\n+.  {* line_filepos, userdata, contents, lineno, lineno_count,        *}\t\\\n .     0,            NULL,     NULL,     NULL,   0,\t\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* entsize, kept_section, moving_line_filepos,\t\t     *}\t\\\n-.     0,       NULL,\t      0,\t\t\t\t\t\\\n+.  {* entsize, kept_section, moving_line_filepos,                    *}\t\\\n+.     0,       NULL,         0,\t\t\t\t\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* target_index, used_by_bfd, constructor_chain, owner,          *}\t\\\n+.  {* target_index, used_by_bfd, constructor_chain, owner,           *}\t\\\n .     0,            NULL,        NULL,              NULL,\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* symbol,                    symbol_ptr_ptr,                    *}\t\\\n+.  {* symbol,                    symbol_ptr_ptr,                     *}\t\\\n .     (struct bfd_symbol *) SYM, &SEC.symbol,\t\t\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* map_head, map_tail                                            *}\t\\\n-.     { NULL }, { NULL },\t\t\t\t\t\t\\\n+.  {* map_head, map_tail, already_assigned                           *}\t\\\n+.     { NULL }, { NULL }, NULL\t\t\t\t\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* already_assigned                                             *}\t\\\n-.     NULL\t\t\t\t\t\t\t\t\\\n .    }\n .\n .{* We use a macro to initialize the static asymbol structures because"
    }
  ]
}