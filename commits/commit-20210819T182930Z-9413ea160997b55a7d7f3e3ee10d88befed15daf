{
  "sha": "9413ea160997b55a7d7f3e3ee10d88befed15daf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTQxM2VhMTYwOTk3YjU1YTdkN2YzZTNlZTEwZDg4YmVmZWQxNWRhZg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-08-19T18:28:59Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-08-19T18:29:30Z"
    },
    "message": "gdb: use bool in notify_command_param_changed_p and do_set_command\n\nTrivial patch to use bool instead of int.\n\nChange-Id: I9e5f8ee4305272a6671cbaaaf2f0484eff0d1ea5",
    "tree": {
      "sha": "d0f08f67321d17520d89a53dab05ec539e035bd7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d0f08f67321d17520d89a53dab05ec539e035bd7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9413ea160997b55a7d7f3e3ee10d88befed15daf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9413ea160997b55a7d7f3e3ee10d88befed15daf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9413ea160997b55a7d7f3e3ee10d88befed15daf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9413ea160997b55a7d7f3e3ee10d88befed15daf/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ca22cf5ed52c1b4c40dbadf893f558ef09d0c66b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ca22cf5ed52c1b4c40dbadf893f558ef09d0c66b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ca22cf5ed52c1b4c40dbadf893f558ef09d0c66b"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 16,
    "deletions": 16
  },
  "files": [
    {
      "sha": "1025ed2f620d330d3f8e39a5e02ff4b21b38d1ef",
      "filename": "gdb/cli/cli-setshow.c",
      "status": "modified",
      "additions": 16,
      "deletions": 16,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9413ea160997b55a7d7f3e3ee10d88befed15daf/gdb/cli/cli-setshow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9413ea160997b55a7d7f3e3ee10d88befed15daf/gdb/cli/cli-setshow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-setshow.c?ref=9413ea160997b55a7d7f3e3ee10d88befed15daf",
      "patch": "@@ -31,17 +31,17 @@\n \n /* Return true if the change of command parameter should be notified.  */\n \n-static int\n-notify_command_param_changed_p (int param_changed, struct cmd_list_element *c)\n+static bool\n+notify_command_param_changed_p (bool param_changed, struct cmd_list_element *c)\n {\n-  if (param_changed == 0)\n-    return 0;\n+  if (!param_changed)\n+    return false;\n \n   if (c->theclass == class_maintenance || c->theclass == class_deprecated\n       || c->theclass == class_obscure)\n-    return 0;\n+    return false;\n \n-  return 1;\n+  return true;\n }\n \n \f\n@@ -305,7 +305,7 @@ void\n do_set_command (const char *arg, int from_tty, struct cmd_list_element *c)\n {\n   /* A flag to indicate the option is changed or not.  */\n-  int option_changed = 0;\n+  bool option_changed = false;\n \n   gdb_assert (c->type == set_cmd);\n \n@@ -359,7 +359,7 @@ do_set_command (const char *arg, int from_tty, struct cmd_list_element *c)\n \t    xfree (*(char **) c->var);\n \t    *(char **) c->var = newobj;\n \n-\t    option_changed = 1;\n+\t    option_changed = true;\n \t  }\n \telse\n \t  xfree (newobj);\n@@ -371,7 +371,7 @@ do_set_command (const char *arg, int from_tty, struct cmd_list_element *c)\n \t  xfree (*(char **) c->var);\n \t  *(char **) c->var = xstrdup (arg);\n \n-\t  option_changed = 1;\n+\t  option_changed = true;\n \t}\n       break;\n     case var_filename:\n@@ -404,7 +404,7 @@ do_set_command (const char *arg, int from_tty, struct cmd_list_element *c)\n \t    xfree (*(char **) c->var);\n \t    *(char **) c->var = val;\n \n-\t    option_changed = 1;\n+\t    option_changed = true;\n \t  }\n \telse\n \t  xfree (val);\n@@ -420,7 +420,7 @@ do_set_command (const char *arg, int from_tty, struct cmd_list_element *c)\n \t  {\n \t    *(bool *) c->var = val;\n \n-\t    option_changed = 1;\n+\t    option_changed = true;\n \t  }\n       }\n       break;\n@@ -432,7 +432,7 @@ do_set_command (const char *arg, int from_tty, struct cmd_list_element *c)\n \t  {\n \t    *(enum auto_boolean *) c->var = val;\n \n-\t    option_changed = 1;\n+\t    option_changed = true;\n \t  }\n       }\n       break;\n@@ -445,7 +445,7 @@ do_set_command (const char *arg, int from_tty, struct cmd_list_element *c)\n \t  {\n \t    *(unsigned int *) c->var = val;\n \n-\t    option_changed = 1;\n+\t    option_changed = true;\n \t  }\n       }\n       break;\n@@ -481,7 +481,7 @@ do_set_command (const char *arg, int from_tty, struct cmd_list_element *c)\n \t  {\n \t    *(int *) c->var = val;\n \n-\t    option_changed = 1;\n+\t    option_changed = true;\n \t  }\n \tbreak;\n       }\n@@ -499,7 +499,7 @@ do_set_command (const char *arg, int from_tty, struct cmd_list_element *c)\n \t  {\n \t    *(const char **) c->var = match;\n \n-\t    option_changed = 1;\n+\t    option_changed = true;\n \t  }\n       }\n       break;\n@@ -510,7 +510,7 @@ do_set_command (const char *arg, int from_tty, struct cmd_list_element *c)\n \tif (*(int *) c->var != val)\n \t  {\n \t    *(int *) c->var = val;\n-\t    option_changed = 1;\n+\t    option_changed = true;\n \t  }\n       }\n       break;"
    }
  ]
}