{
  "sha": "51107df53aeb2f6a5a03a1af29eec773b3aca463",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTExMDdkZjUzYWViMmY2YTVhMDNhMWFmMjllZWM3NzNiM2FjYTQ2Mw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-11T16:21:53Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-11T16:21:53Z"
    },
    "message": "Change current_inferior_ to be a inferior_ref\n\nThis changes current_inferior_ to be an inferior_ref, removing some\nmanual reference counting.\n\ngdb/ChangeLog\n2020-12-11  Tom Tromey  <tom@tromey.com>\n\n\t* inferior.c (current_inferior_): Change type.\n\t(current_inferior, set_current_inferior, initialize_inferiors):\n\tUpdate.",
    "tree": {
      "sha": "64ea015b1da68226155c02e7fb9af6b71ee7448b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/64ea015b1da68226155c02e7fb9af6b71ee7448b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/51107df53aeb2f6a5a03a1af29eec773b3aca463",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51107df53aeb2f6a5a03a1af29eec773b3aca463",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/51107df53aeb2f6a5a03a1af29eec773b3aca463",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51107df53aeb2f6a5a03a1af29eec773b3aca463/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "15f4dddd8a29d064a634140a5fcb830715681889",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/15f4dddd8a29d064a634140a5fcb830715681889",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/15f4dddd8a29d064a634140a5fcb830715681889"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 10,
    "deletions": 7
  },
  "files": [
    {
      "sha": "3d97380727ba48bd31f8447585b575c4c33876b9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51107df53aeb2f6a5a03a1af29eec773b3aca463/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51107df53aeb2f6a5a03a1af29eec773b3aca463/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=51107df53aeb2f6a5a03a1af29eec773b3aca463",
      "patch": "@@ -1,3 +1,9 @@\n+2020-12-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* inferior.c (current_inferior_): Change type.\n+\t(current_inferior, set_current_inferior, initialize_inferiors):\n+\tUpdate.\n+\n 2020-12-11  Tom Tromey  <tom@tromey.com>\n \n \t* gdbthread.h (class enable_thread_stack_temporaries) <m_thr>:"
    },
    {
      "sha": "a6652b69201df8b972a0d110881b1f83d5210fda",
      "filename": "gdb/inferior.c",
      "status": "modified",
      "additions": 4,
      "deletions": 7,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51107df53aeb2f6a5a03a1af29eec773b3aca463/gdb/inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51107df53aeb2f6a5a03a1af29eec773b3aca463/gdb/inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.c?ref=51107df53aeb2f6a5a03a1af29eec773b3aca463",
      "patch": "@@ -51,12 +51,12 @@ bool print_inferior_events = true;\n /* The Current Inferior.  This is a strong reference.  I.e., whenever\n    an inferior is the current inferior, its refcount is\n    incremented.  */\n-static struct inferior *current_inferior_ = NULL;\n+static inferior_ref current_inferior_;\n \n struct inferior*\n current_inferior (void)\n {\n-  return current_inferior_;\n+  return current_inferior_.get ();\n }\n \n void\n@@ -65,9 +65,7 @@ set_current_inferior (struct inferior *inf)\n   /* There's always an inferior.  */\n   gdb_assert (inf != NULL);\n \n-  inf->incref ();\n-  current_inferior_->decref ();\n-  current_inferior_ = inf;\n+  current_inferior_ = inferior_ref::new_reference (inf);\n }\n \n private_inferior::~private_inferior () = default;\n@@ -962,8 +960,7 @@ initialize_inferiors (void)\n      can only allocate an inferior when all those modules have done\n      that.  Do this after initialize_progspace, due to the\n      current_program_space reference.  */\n-  current_inferior_ = add_inferior_silent (0);\n-  current_inferior_->incref ();\n+  set_current_inferior (add_inferior_silent (0));\n   current_inferior_->pspace = current_program_space;\n   current_inferior_->aspace = current_program_space->aspace;\n   /* The architecture will be initialized shortly, by"
    }
  ]
}