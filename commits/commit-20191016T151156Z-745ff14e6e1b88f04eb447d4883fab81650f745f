{
  "sha": "745ff14e6e1b88f04eb447d4883fab81650f745f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzQ1ZmYxNGU2ZTFiODhmMDRlYjQ0N2Q0ODgzZmFiODE2NTBmNzQ1Zg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-10-16T15:11:56Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-10-16T15:11:56Z"
    },
    "message": "[gdb/tdep] Fix 'Unexpected register class' assert in amd64_push_arguments\n\nAtm, when executing gdb.base/infcall-nested-structs.exp on x86_64-linux, we get:\n...\nFAIL: gdb.base/infcall-nested-structs.exp: l=c++: types-tc-tf: \\\n  p/d check_arg_struct_02_01 (ref_val_struct_02_01)\nFAIL: gdb.base/infcall-nested-structs.exp: l=c++: types-ts-tf: \\\n  p/d check_arg_struct_02_01 (ref_val_struct_02_01)\nFAIL: gdb.base/infcall-nested-structs.exp: l=c++: types-ti-tf: \\\n  p/d check_arg_struct_02_01 (ref_val_struct_02_01)\n\n                === gdb Summary ===\n\nnr of expected passes            9255\nnr of unexpected failures        3\nnr of expected failures          142\n...\n\nThe 3 FAILs are reported as PR tdep/25096.\n\nThe 142 XFAILs are for a gdb assertion failure, reported in PR tdep/24104,\nwhich should have been KFAILs since there's a problem in gdb rather than in\nthe environment.\n\nA minimal version of the assertion failure looks like this. Consider test.c:\n...\nstruct s { struct { } es1; long f; };\nstruct s ref = { {}, 'f' };\n\nint __attribute__((noinline,noclone)) check (struct s arg)\n{ return arg.f == 'f'; }\n\nint main (void)\n{ return check (ref); }\n...\n\nWhen calling 'check (ref)' from main, we have '1' as expected:\n...\n$ g++ test3.c -g && ( ./a.out; echo $? )\n1\n...\n\nBut when calling 'check (ref)' from the gdb prompt, we get:\n...\n$ gdb a.out -batch -ex start -ex \"p check (ref)\"\nTemporary breakpoint 1 at 0x4004f7: file test.c, line 8.\n\nTemporary breakpoint 1, main () at test.c:8\n8       { return check (ref); }\nsrc/gdb/amd64-tdep.c:982: internal-error: \\\n  CORE_ADDR amd64_push_arguments(regcache*, int, value**, CORE_ADDR, \\\n                                 function_call_return_method): \\\n  Assertion `!\"Unexpected register class.\"' failed.\n...\n\nThe assert happens in this loop in amd64_push_arguments:\n...\n          for (j = 0; len > 0; j++, len -= 8)\n            {\n              int regnum = -1;\n              int offset = 0;\n\n              switch (theclass[j])\n                {\n                case AMD64_INTEGER:\n                  regnum = integer_regnum[integer_reg++];\n                  break;\n\n                case AMD64_SSE:\n                  regnum = sse_regnum[sse_reg++];\n                  break;\n\n                case AMD64_SSEUP:\n                  gdb_assert (sse_reg > 0);\n                  regnum = sse_regnum[sse_reg - 1];\n                  offset = 8;\n                  break;\n\n                default:\n                  gdb_assert (!\"Unexpected register class.\");\n                }\n\t\t...\n            }\n...\nwhen processing theclass[0], which is AMD64_NO_CLASS:\n...\n(gdb) p theclass\n$1 = {AMD64_NO_CLASS, AMD64_INTEGER}\n...\n\nThe layout of struct s is that the empty field es1 occupies one byte (due to\nc++) at offset 0, and the long field f occupies 8 bytes at offset 8.\n\nWhen compiling at -O2, we can see from the disassembly of main:\n...\n  4003f0:       48 8b 3d 41 0c 20 00    mov    0x200c41(%rip),%rdi \\\n                                               # 601038 <ref+0x8>\n  4003f7:       e9 e4 00 00 00          jmpq   4004e0 <_Z5check1s>\n  4003fc:       0f 1f 40 00             nopl   0x0(%rax)\n...\nthat check is called with field f passed in %rdi, meaning that the\nclassification in theclass is correct, it's just not supported in the loop in\namd64_push_arguments mentioned above.\n\nFix the assert by implementing support for 'AMD64_NO_CLASS' in that loop.\n\nThis exposes 9 more FAILs of the PR tdep/25096 type, so mark all 12 of them as\nKFAIL.\n\nTested on x86_64-linux.\n\nTested with g++ 4.8.5, 7.4.1, 8.3.1, 9.2.1.  With 4.8.5, 3 of the 12 KFAILs\nare KPASSing.\n\nTested with clang++ 5.0.2 (which requires removing additional_flags=-Wno-psabi\nand adding additional_flags=-Wno-deprecated).\n\ngdb/ChangeLog:\n\n2019-10-16  Tom de Vries  <tdevries@suse.de>\n\n\tPR tdep/24104\n\t* amd64-tdep.c (amd64_push_arguments): Handle AMD64_NO_CLASS in loop\n\tthat handles 'theclass'.\n\ngdb/testsuite/ChangeLog:\n\n2019-10-16  Tom de Vries  <tdevries@suse.de>\n\n\tPR tdep/24104\n\t* gdb.base/infcall-nested-structs.exp: Remove XFAIL for PR tdep/24104.\n\tAdd KFAIL for PR tdep/25096.\n\nChange-Id: I8b66345bbf5c00209ca75b1209fd4d60b36e9ede",
    "tree": {
      "sha": "7b8728ac46412b1349f6eaf7b273f16b1798db24",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7b8728ac46412b1349f6eaf7b273f16b1798db24"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/745ff14e6e1b88f04eb447d4883fab81650f745f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/745ff14e6e1b88f04eb447d4883fab81650f745f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/745ff14e6e1b88f04eb447d4883fab81650f745f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/745ff14e6e1b88f04eb447d4883fab81650f745f/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "03e1ab9424bd1d37da5818549067ef7a7b7ec641",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/03e1ab9424bd1d37da5818549067ef7a7b7ec641",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/03e1ab9424bd1d37da5818549067ef7a7b7ec641"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 21,
    "deletions": 12
  },
  "files": [
    {
      "sha": "eeba0eed17eade0e3754172ae6775d4d8265e126",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/745ff14e6e1b88f04eb447d4883fab81650f745f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/745ff14e6e1b88f04eb447d4883fab81650f745f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=745ff14e6e1b88f04eb447d4883fab81650f745f",
      "patch": "@@ -1,3 +1,9 @@\n+2019-10-16  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR tdep/24104\n+\t* amd64-tdep.c (amd64_push_arguments): Handle AMD64_NO_CLASS in loop\n+\tthat handles 'theclass'.\n+\n 2019-10-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* linespec.c (decode_digits_ordinary): Update comment."
    },
    {
      "sha": "9006ec0167adab73515f8cbc5347938c97590a89",
      "filename": "gdb/amd64-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/745ff14e6e1b88f04eb447d4883fab81650f745f/gdb/amd64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/745ff14e6e1b88f04eb447d4883fab81650f745f/gdb/amd64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-tdep.c?ref=745ff14e6e1b88f04eb447d4883fab81650f745f",
      "patch": "@@ -978,6 +978,9 @@ if (return_method == return_method_struct)\n \t\t  offset = 8;\n \t\t  break;\n \n+\t\tcase AMD64_NO_CLASS:\n+\t\t  continue;\n+\n \t\tdefault:\n \t\t  gdb_assert (!\"Unexpected register class.\");\n \t\t}"
    },
    {
      "sha": "3277ee3009869e3b85b8a9258cf289cf0c4eae49",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/745ff14e6e1b88f04eb447d4883fab81650f745f/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/745ff14e6e1b88f04eb447d4883fab81650f745f/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=745ff14e6e1b88f04eb447d4883fab81650f745f",
      "patch": "@@ -1,3 +1,9 @@\n+2019-10-16  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR tdep/24104\n+\t* gdb.base/infcall-nested-structs.exp: Remove XFAIL for PR tdep/24104.\n+\tAdd KFAIL for PR tdep/25096.\n+\n 2019-10-16  Tom de Vries  <tdevries@suse.de>\n \n \tPR testsuite/25059"
    },
    {
      "sha": "957eb31bdc22dd391828e7fcc075a16f4411a9fb",
      "filename": "gdb/testsuite/gdb.base/infcall-nested-structs.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 12,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/745ff14e6e1b88f04eb447d4883fab81650f745f/gdb/testsuite/gdb.base/infcall-nested-structs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/745ff14e6e1b88f04eb447d4883fab81650f745f/gdb/testsuite/gdb.base/infcall-nested-structs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/infcall-nested-structs.exp?ref=745ff14e6e1b88f04eb447d4883fab81650f745f",
      "patch": "@@ -132,16 +132,9 @@ proc run_tests { lang types } {\n \t    continue\n \t}\n \n-\tif { $lang == \"c++\"\n-\t     && ( ( [regexp \"struct_01_0(1|2|3)\" $name match] && [regexp \"^types-(td($|-)|tl(|l)(|-tf|-td|-tld)$)\" $types match] )\n-\t\t  || ( $name == \"struct_01_02\" && $types == \"types-tfc\" )\n-\t\t  || ( $name == \"struct_01_04\" && [regexp \"^types-(tf($|-)|ti(|-tf|-td|-tld)$)\" $types match] )\n-\t\t  || ( $name == \"struct_02_01\" && [regexp \"^types-tf-t(c|s|i)\" $types match] )\n-\t\t  || ( $name == \"struct_static_02_02\" && [regexp \"^types-(t(f|d|ld)-t(d|l|ll)$|t(d|l|ll)$|t(c|s|i|l|ll)-td)\" $types match] )\n-\t\t  || ( $name == \"struct_static_02_03\" && [regexp \"^types-(ti-t(f|l|d|)|tf(-|$)|ti$)\" $types match] )\n-\t\t  || ( $name == \"struct_static_04_02\" && [regexp \"^types-(t(c|s)-tf|tf-ts)\" $types match] )\n-\t\t  || ( $name == \"struct_static_06_04\" && ![regexp \"^types-(t(c|dc|ldc|ld)$|t.-tld|tl(l|d)-tld|t(f|d|ld)-tc)\" $types match] ) ) } {\n-\t    setup_xfail gdb/24104 \"x86_64-*-linux*\"\n+\tif { $lang == \"c++\" && $name == \"struct_02_01\"\n+\t     && [regexp \"^types-(tf-t(c|s|i)|t(c|s|i)-tf)\" $types match] } {\n+\t    setup_kfail gdb/25096 \"x86_64-*-linux*\"\n \t}\n \tgdb_test \"p/d check_arg_${name} (ref_val_${name})\" \"= 1\"\n \n@@ -154,8 +147,9 @@ proc run_tests { lang types } {\n \t    set answer [ get_valueof \"\" \"rtn_str_${name} ()\" \"XXXX\"]\n \t    verbose -log \"Answer: ${answer}\"\n \n-\t    if { ($lang == \"c++\" && $name == \"struct_02_01\" && [regexp \"^types-(tf-t(c|s|i)|t(c|s|i)-tf)\" $types match] ) } {\n-\t\tsetup_xfail gdb/24104 \"x86_64-*-linux*\"\n+\t    if { $lang == \"c++\" && $name == \"struct_02_01\"\n+\t\t && [regexp \"^types-(tf-t(c|s|i)|t(c|s|i)-tf)\" $types match] } {\n+\t\tsetup_kfail gdb/25096 \"x86_64-*-linux*\"\n \t    }\n \t    gdb_assert [string eq ${answer} ${refval}] ${test}\n \t} else {"
    }
  ]
}