{
  "sha": "e9534bd257ac9ea2f7921e8000d27c5dc4477b4e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTk1MzRiZDI1N2FjOWVhMmY3OTIxZTgwMDBkMjdjNWRjNDQ3N2I0ZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-08T20:33:35Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-08T20:47:57Z"
    },
    "message": "Use new and delete for windows_thread_info\n\nThis adds a constructor, destructor, and member initializers to\nwindows_thread_info, and changes gdb and gdbserver to use new and\ndelete.\n\ngdb/ChangeLog\n2020-04-08  Tom Tromey  <tromey@adacore.com>\n\n\t* windows-nat.c (windows_add_thread): Use new.\n\t(windows_init_thread_list, windows_delete_thread): Use delete.\n\t(get_windows_debug_event): Update.\n\t* nat/windows-nat.h (struct windows_thread_info): Add constructor,\n\tdestructor, and initializers.\n\ngdbserver/ChangeLog\n2020-04-08  Tom Tromey  <tromey@adacore.com>\n\n\t* win32-low.c (child_add_thread): Use new.\n\t(delete_thread_info): Use delete.",
    "tree": {
      "sha": "b35d6e3be01a4fea2dd0650cbcfd549ae5b8c872",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b35d6e3be01a4fea2dd0650cbcfd549ae5b8c872"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ae1f8880758d8087ad9fdb137d45c4abc1137b52",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ae1f8880758d8087ad9fdb137d45c4abc1137b52",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ae1f8880758d8087ad9fdb137d45c4abc1137b52"
    }
  ],
  "stats": {
    "total": 61,
    "additions": 41,
    "deletions": 20
  },
  "files": [
    {
      "sha": "f0b1f334850ef06fd8f1ea01eb9d7d9cb4a48d0d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e9534bd257ac9ea2f7921e8000d27c5dc4477b4e",
      "patch": "@@ -1,3 +1,11 @@\n+2020-04-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* windows-nat.c (windows_add_thread): Use new.\n+\t(windows_init_thread_list, windows_delete_thread): Use delete.\n+\t(get_windows_debug_event): Update.\n+\t* nat/windows-nat.h (struct windows_thread_info): Add constructor,\n+\tdestructor, and initializers.\n+\n 2020-04-08  Tom Tromey  <tromey@adacore.com>\n \n \t* windows-nat.c (struct windows_thread_info): Remove."
    },
    {
      "sha": "a3da268642210e88475541af7074a6948d30b7c9",
      "filename": "gdb/nat/windows-nat.h",
      "status": "modified",
      "additions": 20,
      "deletions": 6,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e/gdb/nat/windows-nat.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e/gdb/nat/windows-nat.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/windows-nat.h?ref=e9534bd257ac9ea2f7921e8000d27c5dc4477b4e",
      "patch": "@@ -25,6 +25,20 @@\n    each thread.  */\n struct windows_thread_info\n {\n+  windows_thread_info (DWORD tid_, HANDLE h_, CORE_ADDR tlb)\n+    : tid (tid_),\n+      h (h_),\n+      thread_local_base (tlb)\n+  {\n+  }\n+\n+  ~windows_thread_info ()\n+  {\n+    xfree (name);\n+  }\n+\n+  DISABLE_COPY_AND_ASSIGN (windows_thread_info);\n+\n   /* The Win32 thread identifier.  */\n   DWORD tid;\n \n@@ -35,32 +49,32 @@ struct windows_thread_info\n   CORE_ADDR thread_local_base;\n \n   /* Non zero if SuspendThread was called on this thread.  */\n-  int suspended;\n+  int suspended = 0;\n \n #ifdef _WIN32_WCE\n   /* The context as retrieved right after suspending the thread. */\n-  CONTEXT base_context;\n+  CONTEXT base_context {};\n #endif\n \n   /* The context of the thread, including any manipulations.  */\n   union\n   {\n-    CONTEXT context;\n+    CONTEXT context {};\n #ifdef __x86_64__\n     WOW64_CONTEXT wow64_context;\n #endif\n   };\n \n   /* Whether debug registers changed since we last set CONTEXT back to\n      the thread.  */\n-  int debug_registers_changed;\n+  int debug_registers_changed = 0;\n \n   /* Nonzero if CONTEXT is invalidated and must be re-read from the\n      inferior thread.  */\n-  int reload_context;\n+  int reload_context = 0;\n \n   /* The name of the thread, allocated by xmalloc.  */\n-  char *name;\n+  char *name = nullptr;\n };\n \n #endif"
    },
    {
      "sha": "715cf602a070f7d0662e0af957ad5d2b9a3e0b95",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=e9534bd257ac9ea2f7921e8000d27c5dc4477b4e",
      "patch": "@@ -468,16 +468,14 @@ windows_add_thread (ptid_t ptid, HANDLE h, void *tlb, bool main_thread_p)\n   if ((th = thread_rec (id, FALSE)))\n     return th;\n \n-  th = XCNEW (windows_thread_info);\n-  th->tid = id;\n-  th->h = h;\n-  th->thread_local_base = (CORE_ADDR) (uintptr_t) tlb;\n+  CORE_ADDR base = (CORE_ADDR) (uintptr_t) tlb;\n #ifdef __x86_64__\n   /* For WOW64 processes, this is actually the pointer to the 64bit TIB,\n      and the 32bit TIB is exactly 2 pages after it.  */\n   if (wow64_process)\n-    th->thread_local_base += 0x2000;\n+    base += 0x2000;\n #endif\n+  th = new windows_thread_info (id, h, base);\n   thread_list.push_back (th);\n \n   /* Add this new thread to the list of threads.\n@@ -536,7 +534,7 @@ windows_init_thread_list (void)\n   init_thread_list ();\n \n   for (windows_thread_info *here : thread_list)\n-    xfree (here);\n+    delete here;\n \n   thread_list.clear ();\n }\n@@ -581,8 +579,7 @@ windows_delete_thread (ptid_t ptid, DWORD exit_code, bool main_thread_p)\n \n   if (iter != thread_list.end ())\n     {\n-      xfree ((*iter)->name);\n-      xfree (*iter);\n+      delete *iter;\n       thread_list.erase (iter);\n     }\n }\n@@ -1718,7 +1715,7 @@ windows_nat_target::get_windows_debug_event (int pid,\n   BOOL debug_event;\n   DWORD continue_status, event_code;\n   windows_thread_info *th;\n-  static windows_thread_info dummy_thread_info;\n+  static windows_thread_info dummy_thread_info (0, 0, 0);\n   DWORD thread_id = 0;\n \n   last_sig = GDB_SIGNAL_0;"
    },
    {
      "sha": "be2f7676628af69307391acda6f8f9563187d772",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=e9534bd257ac9ea2f7921e8000d27c5dc4477b4e",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* win32-low.c (child_add_thread): Use new.\n+\t(delete_thread_info): Use delete.\n+\n 2020-04-08  Tom Tromey  <tromey@adacore.com>\n \n \t* win32-low.h (struct windows_thread_info): Remove."
    },
    {
      "sha": "1284ed177cb5497fe80ed45ec1735f46da2c6727",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9534bd257ac9ea2f7921e8000d27c5dc4477b4e/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=e9534bd257ac9ea2f7921e8000d27c5dc4477b4e",
      "patch": "@@ -212,10 +212,7 @@ child_add_thread (DWORD pid, DWORD tid, HANDLE h, void *tlb)\n   if ((th = thread_rec (ptid, FALSE)))\n     return th;\n \n-  th = XCNEW (windows_thread_info);\n-  th->tid = tid;\n-  th->h = h;\n-  th->thread_local_base = (CORE_ADDR) (uintptr_t) tlb;\n+  th = new windows_thread_info (tid, h, (CORE_ADDR) (uintptr_t) tlb);\n \n   add_thread (ptid, th);\n \n@@ -233,7 +230,7 @@ delete_thread_info (thread_info *thread)\n \n   remove_thread (thread);\n   CloseHandle (th->h);\n-  free (th);\n+  delete th;\n }\n \n /* Delete a thread from the list of threads.  */"
    }
  ]
}