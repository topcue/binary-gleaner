{
  "sha": "e2c0149e8b0ce12accb8f4b02cbbeff3e91e4737",
  "node_id": "C_kwDOANOeidoAKGUyYzAxNDllOGIwY2UxMmFjY2I4ZjRiMDJjYmJlZmYzZTkxZTQ3Mzc",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-11-21T23:46:01Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2022-01-18T00:49:14Z"
    },
    "message": "PR28029, debuginfod tests\n\nbinutils/NEWS says of the change in --process-links semantics:\n  If other debug section display options are also enabled (eg\n  --debug-dump=info) then the contents of matching sections in both the main\n  file and the separate debuginfo file *will* be displayed.  This is because in\n  most cases the debug section will only be present in one of the files.\n\nImplying that debug info is dumped without --process-links.  Indeed\nthat appears to be the case for readelf.  This does the same for\nobjdump.\n\n\tPR 28029\n\t* objdump.c (dump_bfd): Do not exit early when !is_mainfile\n\t&& !processlinks, instead just exclude non-debug output.\n\t(dump_dwarf): Add is_mainfile parameter and pass to\n\tdump_dwarf_section.\n\t(dump_dwarf_section): Only display debug sections when\n\t!is_mainfile and !process_links.",
    "tree": {
      "sha": "a78964fad7a87ad3c1755ced1c621f0198392dd7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a78964fad7a87ad3c1755ced1c621f0198392dd7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e2c0149e8b0ce12accb8f4b02cbbeff3e91e4737",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e2c0149e8b0ce12accb8f4b02cbbeff3e91e4737",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e2c0149e8b0ce12accb8f4b02cbbeff3e91e4737",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e2c0149e8b0ce12accb8f4b02cbbeff3e91e4737/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "48e3e6aec8a4f37d00ea6c0da3ab45e76490e3db",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48e3e6aec8a4f37d00ea6c0da3ab45e76490e3db",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/48e3e6aec8a4f37d00ea6c0da3ab45e76490e3db"
    }
  ],
  "stats": {
    "total": 112,
    "additions": 62,
    "deletions": 50
  },
  "files": [
    {
      "sha": "08a0fe521d88a088e0ed45982ff2895311204ab6",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 62,
      "deletions": 50,
      "changes": 112,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c0149e8b0ce12accb8f4b02cbbeff3e91e4737/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c0149e8b0ce12accb8f4b02cbbeff3e91e4737/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=e2c0149e8b0ce12accb8f4b02cbbeff3e91e4737",
      "patch": "@@ -3942,15 +3942,20 @@ get_build_id (void * data)\n \n static void\n dump_dwarf_section (bfd *abfd, asection *section,\n-\t\t    void *arg ATTRIBUTE_UNUSED)\n+\t\t    void *arg)\n {\n   const char *name = bfd_section_name (section);\n   const char *match;\n   int i;\n+  bool is_mainfile = *(bool *) arg;\n \n   if (*name == 0)\n     return;\n \n+  if (!is_mainfile && !process_links\n+      && (section->flags & SEC_DEBUGGING) == 0)\n+    return;\n+\n   if (startswith (name, \".gnu.linkonce.wi.\"))\n     match = \".debug_info\";\n   else\n@@ -3986,7 +3991,7 @@ dump_dwarf_section (bfd *abfd, asection *section,\n /* Dump the dwarf debugging information.  */\n \n static void\n-dump_dwarf (bfd *abfd)\n+dump_dwarf (bfd *abfd, bool is_mainfile)\n {\n   /* The byte_get pointer should have been set at the start of dump_bfd().  */\n   if (byte_get == NULL)\n@@ -4012,7 +4017,7 @@ dump_dwarf (bfd *abfd)\n   init_dwarf_regnames_by_bfd_arch_and_mach (bfd_get_arch (abfd),\n \t\t\t\t\t    bfd_get_mach (abfd));\n \n-  bfd_map_over_sections (abfd, dump_dwarf_section, NULL);\n+  bfd_map_over_sections (abfd, dump_dwarf_section, (void *) &is_mainfile);\n }\n \f\n /* Read ABFD's stabs section STABSECT_NAME, and return a pointer to\n@@ -5053,23 +5058,23 @@ dump_bfd (bfd *abfd, bool is_mainfile)\n       bfd_map_over_sections (abfd, adjust_addresses, &has_reloc);\n     }\n \n-  if (! is_mainfile && ! process_links)\n-    return;\n-\n-  if (! dump_debugging_tags && ! suppress_bfd_header)\n-    printf (_(\"\\n%s:     file format %s\\n\"),\n-\t    sanitize_string (bfd_get_filename (abfd)),\n-\t    abfd->xvec->name);\n-  if (dump_ar_hdrs)\n-    print_arelt_descr (stdout, abfd, true, false);\n-  if (dump_file_header)\n-    dump_bfd_header (abfd);\n-  if (dump_private_headers)\n-    dump_bfd_private_header (abfd);\n-  if (dump_private_options != NULL)\n-    dump_target_specific (abfd);\n-  if (! dump_debugging_tags && ! suppress_bfd_header)\n-    putchar ('\\n');\n+  if (is_mainfile || process_links)\n+    {\n+      if (! dump_debugging_tags && ! suppress_bfd_header)\n+\tprintf (_(\"\\n%s:     file format %s\\n\"),\n+\t\tsanitize_string (bfd_get_filename (abfd)),\n+\t\tabfd->xvec->name);\n+      if (dump_ar_hdrs)\n+\tprint_arelt_descr (stdout, abfd, true, false);\n+      if (dump_file_header)\n+\tdump_bfd_header (abfd);\n+      if (dump_private_headers)\n+\tdump_bfd_private_header (abfd);\n+      if (dump_private_options != NULL)\n+\tdump_target_specific (abfd);\n+      if (! dump_debugging_tags && ! suppress_bfd_header)\n+\tputchar ('\\n');\n+    }\n \n   if (dump_symtab\n       || dump_reloc_info\n@@ -5112,39 +5117,46 @@ dump_bfd (bfd *abfd, bool is_mainfile)\n \t}\n     }\n \n-  if (dump_section_headers)\n-    dump_headers (abfd);\n+  if (is_mainfile || process_links)\n+    {\n+      if (dump_section_headers)\n+\tdump_headers (abfd);\n \n-  if (dump_dynamic_symtab || dump_dynamic_reloc_info\n-      || (disassemble && bfd_get_dynamic_symtab_upper_bound (abfd) > 0))\n-    dynsyms = slurp_dynamic_symtab (abfd);\n+      if (dump_dynamic_symtab || dump_dynamic_reloc_info\n+\t  || (disassemble && bfd_get_dynamic_symtab_upper_bound (abfd) > 0))\n+\tdynsyms = slurp_dynamic_symtab (abfd);\n \n-  if (disassemble)\n-    {\n-      synthcount = bfd_get_synthetic_symtab (abfd, symcount, syms,\n-\t\t\t\t\t     dynsymcount, dynsyms, &synthsyms);\n-      if (synthcount < 0)\n-\tsynthcount = 0;\n-    }\n+      if (disassemble)\n+\t{\n+\t  synthcount = bfd_get_synthetic_symtab (abfd, symcount, syms,\n+\t\t\t\t\t\t dynsymcount, dynsyms,\n+\t\t\t\t\t\t &synthsyms);\n+\t  if (synthcount < 0)\n+\t    synthcount = 0;\n+\t}\n \n-  if (dump_symtab)\n-    dump_symbols (abfd, false);\n-  if (dump_dynamic_symtab)\n-    dump_symbols (abfd, true);\n+      if (dump_symtab)\n+\tdump_symbols (abfd, false);\n+      if (dump_dynamic_symtab)\n+\tdump_symbols (abfd, true);\n+    }\n   if (dump_dwarf_section_info)\n-    dump_dwarf (abfd);\n-  if (dump_ctf_section_info)\n-    dump_ctf (abfd, dump_ctf_section_name, dump_ctf_parent_name);\n-  if (dump_stab_section_info)\n-    dump_stabs (abfd);\n-  if (dump_reloc_info && ! disassemble)\n-    dump_relocs (abfd);\n-  if (dump_dynamic_reloc_info && ! disassemble)\n-    dump_dynamic_relocs (abfd);\n-  if (dump_section_contents)\n-    dump_data (abfd);\n-  if (disassemble)\n-    disassemble_data (abfd);\n+    dump_dwarf (abfd, is_mainfile);\n+  if (is_mainfile || process_links)\n+    {\n+      if (dump_ctf_section_info)\n+\tdump_ctf (abfd, dump_ctf_section_name, dump_ctf_parent_name);\n+      if (dump_stab_section_info)\n+\tdump_stabs (abfd);\n+      if (dump_reloc_info && ! disassemble)\n+\tdump_relocs (abfd);\n+      if (dump_dynamic_reloc_info && ! disassemble)\n+\tdump_dynamic_relocs (abfd);\n+      if (dump_section_contents)\n+\tdump_data (abfd);\n+      if (disassemble)\n+\tdisassemble_data (abfd);\n+    }\n \n   if (dump_debugging)\n     {\n@@ -5169,7 +5181,7 @@ dump_bfd (bfd *abfd, bool is_mainfile)\n       else if (! dump_dwarf_section_info)\n \t{\n \t  dwarf_select_sections_all ();\n-\t  dump_dwarf (abfd);\n+\t  dump_dwarf (abfd, is_mainfile);\n \t}\n     }\n "
    }
  ]
}