{
  "sha": "c54e42531adb7bf8d58bd4c3c8e0c710305959e1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzU0ZTQyNTMxYWRiN2JmOGQ1OGJkNGMzYzhlMGM3MTAzMDU5NTllMQ==",
  "commit": {
    "author": {
      "name": "Yoshinori Sato",
      "email": "ysato@users.sourceforge.jp",
      "date": "2019-07-24T11:51:52Z"
    },
    "committer": {
      "name": "Yoshinori Sato",
      "email": "ysato@users.sourceforge.jp",
      "date": "2019-07-24T11:51:52Z"
    },
    "message": "gdb/h8300-tdep.c: Fix register name in h8300h machine.\n\nH8/300H general register name \"ER0\" - \"ER7\".\nBut gdb using \"R0\" - \"R7\".\nThis changes register name \"ER0\" - \"ER7\" in h8300h machine mode.\n\ngdb/ChangeLog:\n\n\t* h8300-tdep.c (h8300_register_name_common): New.\n\th8300_register_name): Use h8300_register_name_common.\n\t(h8300s_register_name): Likewise.\n\t(h8300sx_register_name): Likewise.\n\t(h8300h_register_nam): New.\n\t(h8300_gdbarch_init): Use h8300h_register_name in h8300h machine.",
    "tree": {
      "sha": "2108acd3b4989969fcf366bd27ce48d190f7747e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2108acd3b4989969fcf366bd27ce48d190f7747e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c54e42531adb7bf8d58bd4c3c8e0c710305959e1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c54e42531adb7bf8d58bd4c3c8e0c710305959e1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c54e42531adb7bf8d58bd4c3c8e0c710305959e1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c54e42531adb7bf8d58bd4c3c8e0c710305959e1/comments",
  "author": {
    "login": "ysat0",
    "id": 390647,
    "node_id": "MDQ6VXNlcjM5MDY0Nw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/390647?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ysat0",
    "html_url": "https://github.com/ysat0",
    "followers_url": "https://api.github.com/users/ysat0/followers",
    "following_url": "https://api.github.com/users/ysat0/following{/other_user}",
    "gists_url": "https://api.github.com/users/ysat0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ysat0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ysat0/subscriptions",
    "organizations_url": "https://api.github.com/users/ysat0/orgs",
    "repos_url": "https://api.github.com/users/ysat0/repos",
    "events_url": "https://api.github.com/users/ysat0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ysat0/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ysat0",
    "id": 390647,
    "node_id": "MDQ6VXNlcjM5MDY0Nw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/390647?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ysat0",
    "html_url": "https://github.com/ysat0",
    "followers_url": "https://api.github.com/users/ysat0/followers",
    "following_url": "https://api.github.com/users/ysat0/following{/other_user}",
    "gists_url": "https://api.github.com/users/ysat0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ysat0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ysat0/subscriptions",
    "organizations_url": "https://api.github.com/users/ysat0/orgs",
    "repos_url": "https://api.github.com/users/ysat0/repos",
    "events_url": "https://api.github.com/users/ysat0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ysat0/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2f86d5594071a16665711ae13da88af1cc904371",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2f86d5594071a16665711ae13da88af1cc904371",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2f86d5594071a16665711ae13da88af1cc904371"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 42,
    "deletions": 22
  },
  "files": [
    {
      "sha": "2ed8f65ba354bd279c353dc32133dc824f23c373",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54e42531adb7bf8d58bd4c3c8e0c710305959e1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54e42531adb7bf8d58bd4c3c8e0c710305959e1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c54e42531adb7bf8d58bd4c3c8e0c710305959e1",
      "patch": "@@ -1,3 +1,13 @@\n+2019-07-24  Yoshinori Sato  <ysato@users.sourceforge.jp>\n+\n+\t* h8300-tdep.c (h8300_register_name_common): New.\n+\th8300_register_name): Use h8300_register_name_common.\n+\t(h8300s_register_name): Likewise.\n+\t(h8300sx_register_name): Likewise.\n+\t(h8300h_register_nam): New.\n+\t(h8300_gdbarch_init): Use h8300h_register_name in h8300h machine.\n+\n+\n 2019-07-23  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n \n \t* arm-tdep.c (arm_skip_cmse_entry): New function."
    },
    {
      "sha": "2a3d37408587ff1133ec0ca3585380d71e424d15",
      "filename": "gdb/h8300-tdep.c",
      "status": "modified",
      "additions": 32,
      "deletions": 22,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54e42531adb7bf8d58bd4c3c8e0c710305959e1/gdb/h8300-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54e42531adb7bf8d58bd4c3c8e0c710305959e1/gdb/h8300-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/h8300-tdep.c?ref=c54e42531adb7bf8d58bd4c3c8e0c710305959e1",
      "patch": "@@ -928,6 +928,19 @@ h8300_register_sim_regno (struct gdbarch *gdbarch, int regnum)\n   return regnum;\n }\n \n+static const char *\n+h8300_register_name_common (const char *regnames[], int numregs,\n+\t\t\t    struct gdbarch *gdbarch, int regno)\n+{\n+  if (regno < 0\n+      || regno >= numregs)\n+    internal_error (__FILE__, __LINE__,\n+\t\t    _(\"h8300_register_name_common: illegal register number %d\"),\n+\t\t    regno);\n+  else\n+    return regnames[regno];\n+}\n+\n static const char *\n h8300_register_name (struct gdbarch *gdbarch, int regno)\n {\n@@ -938,13 +951,20 @@ h8300_register_name (struct gdbarch *gdbarch, int regno)\n     \"sp\", \"\", \"pc\", \"cycles\", \"tick\", \"inst\",\n     \"ccr\",\t\t\t/* pseudo register */\n   };\n-  if (regno < 0\n-      || regno >= (sizeof (register_names) / sizeof (*register_names)))\n-    internal_error (__FILE__, __LINE__,\n-\t\t    _(\"h8300_register_name: illegal register number %d\"),\n-\t\t    regno);\n-  else\n-    return register_names[regno];\n+  return h8300_register_name_common(register_names, ARRAY_SIZE(register_names),\n+\t\t\t\t    gdbarch, regno);\n+}\n+\n+static const char *\n+h8300h_register_name (struct gdbarch *gdbarch, int regno)\n+{\n+  static const char *register_names[] = {\n+    \"er0\", \"er1\", \"er2\", \"er3\", \"er4\", \"er5\", \"er6\",\n+    \"sp\", \"\", \"pc\", \"cycles\", \"tick\", \"inst\",\n+    \"ccr\",\t\t\t/* pseudo register */\n+  };\n+  return h8300_register_name_common(register_names, ARRAY_SIZE(register_names),\n+\t\t\t\t    gdbarch, regno);\n }\n \n static const char *\n@@ -956,13 +976,8 @@ h8300s_register_name (struct gdbarch *gdbarch, int regno)\n     \"mach\", \"macl\",\n     \"ccr\", \"exr\"\t\t/* pseudo registers */\n   };\n-  if (regno < 0\n-      || regno >= (sizeof (register_names) / sizeof (*register_names)))\n-    internal_error (__FILE__, __LINE__,\n-\t\t    _(\"h8300s_register_name: illegal register number %d\"),\n-\t\t    regno);\n-  else\n-    return register_names[regno];\n+  return h8300_register_name_common(register_names, ARRAY_SIZE(register_names),\n+\t\t\t\t    gdbarch, regno);\n }\n \n static const char *\n@@ -974,13 +989,8 @@ h8300sx_register_name (struct gdbarch *gdbarch, int regno)\n     \"mach\", \"macl\", \"sbr\", \"vbr\",\n     \"ccr\", \"exr\"\t\t/* pseudo registers */\n   };\n-  if (regno < 0\n-      || regno >= (sizeof (register_names) / sizeof (*register_names)))\n-    internal_error (__FILE__, __LINE__,\n-\t\t    _(\"h8300sx_register_name: illegal register number %d\"),\n-\t\t    regno);\n-  else\n-    return register_names[regno];\n+  return h8300_register_name_common(register_names, ARRAY_SIZE(register_names),\n+\t\t\t\t    gdbarch, regno);\n }\n \n static void\n@@ -1259,7 +1269,7 @@ h8300_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n       set_gdbarch_num_pseudo_regs (gdbarch, 1);\n       set_gdbarch_dwarf2_reg_to_regnum (gdbarch, h8300_dbg_reg_to_regnum);\n       set_gdbarch_stab_reg_to_regnum (gdbarch, h8300_dbg_reg_to_regnum);\n-      set_gdbarch_register_name (gdbarch, h8300_register_name);\n+      set_gdbarch_register_name (gdbarch, h8300h_register_name);\n       if (info.bfd_arch_info->mach != bfd_mach_h8300hn)\n \t{\n \t  set_gdbarch_ptr_bit (gdbarch, 4 * TARGET_CHAR_BIT);"
    }
  ]
}