{
  "sha": "9d636d67e0ddf223c6e9127dc058afdb48a7012f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWQ2MzZkNjdlMGRkZjIyM2M2ZTkxMjdkYzA1OGFmZGI0OGE3MDEyZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-09-18T01:11:55Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-01T21:12:40Z"
    },
    "message": "Use styled_string in more places\n\nThis adds more uses of styled_string, changing gdb to style some\noutput that was previously left unstyled.\n\ngdb/ChangeLog\n2019-10-01  Tom Tromey  <tom@tromey.com>\n\n\t* stack.c (print_frame, info_frame_command_core): Use\n\tstyled_string.\n\t* linux-thread-db.c (try_thread_db_load_1)\n\t(try_thread_db_load_from_pdir_1): Use styled_string.\n\t* auto-load.c (file_is_auto_load_safe, execute_script_contents)\n\t(auto_load_section_scripts, info_auto_load_local_gdbinit)\n\t(maybe_print_unsupported_script_warning)\n\t(maybe_print_script_not_found_warning): Use styled_string.\n\t* ada-lang.c (user_select_syms): Use styled_string.",
    "tree": {
      "sha": "16222a0b42498846d8468ac19c08d48d5e3a179a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/16222a0b42498846d8468ac19c08d48d5e3a179a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9d636d67e0ddf223c6e9127dc058afdb48a7012f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d636d67e0ddf223c6e9127dc058afdb48a7012f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9d636d67e0ddf223c6e9127dc058afdb48a7012f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d636d67e0ddf223c6e9127dc058afdb48a7012f/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7f6aba03b929d3d893378760eeeca431005fc5cd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f6aba03b929d3d893378760eeeca431005fc5cd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7f6aba03b929d3d893378760eeeca431005fc5cd"
    }
  ],
  "stats": {
    "total": 78,
    "additions": 55,
    "deletions": 23
  },
  "files": [
    {
      "sha": "652ba77d8344b3286924254cf1d63a7e5f748da2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d636d67e0ddf223c6e9127dc058afdb48a7012f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d636d67e0ddf223c6e9127dc058afdb48a7012f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9d636d67e0ddf223c6e9127dc058afdb48a7012f",
      "patch": "@@ -1,3 +1,15 @@\n+2019-10-01  Tom Tromey  <tom@tromey.com>\n+\n+\t* stack.c (print_frame, info_frame_command_core): Use\n+\tstyled_string.\n+\t* linux-thread-db.c (try_thread_db_load_1)\n+\t(try_thread_db_load_from_pdir_1): Use styled_string.\n+\t* auto-load.c (file_is_auto_load_safe, execute_script_contents)\n+\t(auto_load_section_scripts, info_auto_load_local_gdbinit)\n+\t(maybe_print_unsupported_script_warning)\n+\t(maybe_print_script_not_found_warning): Use styled_string.\n+\t* ada-lang.c (user_select_syms): Use styled_string.\n+\n 2019-10-01  Tom Tromey  <tom@tromey.com>\n \n \t* p-lang.c (pascal_printstr): Use metadata style."
    },
    {
      "sha": "48a400daa7d8cb0757f2745d00120200802a7dfb",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d636d67e0ddf223c6e9127dc058afdb48a7012f/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d636d67e0ddf223c6e9127dc058afdb48a7012f/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=9d636d67e0ddf223c6e9127dc058afdb48a7012f",
      "patch": "@@ -3881,9 +3881,11 @@ See set/show multiple-symbol.\"));\n \t    printf_filtered (_(\" at %p[<no source file available>%p]:%d\\n\"),\n \t\t\t     metadata_style.style ().ptr (), nullptr, sal.line);\n \t  else\n-\t    printf_filtered (_(\" at %s:%d\\n\"),\n-\t\t\t     symtab_to_filename_for_display (sal.symtab),\n-\t\t\t     sal.line);\n+\t    printf_filtered\n+\t      (_(\" at %ps:%d\\n\"),\n+\t       styled_string (file_name_style.style (),\n+\t\t\t      symtab_to_filename_for_display (sal.symtab)),\n+\t       sal.line);\n           continue;\n         }\n       else"
    },
    {
      "sha": "0864ad38a762ffda672ce2a4b533bd23504fb414",
      "filename": "gdb/auto-load.c",
      "status": "modified",
      "additions": 26,
      "deletions": 14,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d636d67e0ddf223c6e9127dc058afdb48a7012f/gdb/auto-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d636d67e0ddf223c6e9127dc058afdb48a7012f/gdb/auto-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/auto-load.c?ref=9d636d67e0ddf223c6e9127dc058afdb48a7012f",
      "patch": "@@ -41,6 +41,7 @@\n #include \"gdb/section-scripts.h\"\n #include <algorithm>\n #include \"gdbsupport/pathstuff.h\"\n+#include \"cli/cli-style.h\"\n \n /* The section to look in for auto-loaded scripts (in file formats that\n    support sections).\n@@ -490,9 +491,10 @@ file_is_auto_load_safe (const char *filename, const char *debug_fmt, ...)\n   if (filename_is_in_auto_load_safe_path_vec (filename, &filename_real))\n     return 1;\n \n-  warning (_(\"File \\\"%s\\\" auto-loading has been declined by your \"\n+  warning (_(\"File \\\"%ps\\\" auto-loading has been declined by your \"\n \t     \"`auto-load safe-path' set to \\\"%s\\\".\"),\n-\t   filename_real.get (), auto_load_safe_path);\n+\t   styled_string (file_name_style.style (), filename_real.get ()),\n+\t   auto_load_safe_path);\n \n   if (!advice_printed)\n     {\n@@ -989,8 +991,10 @@ execute_script_contents (struct auto_load_pspace_info *pspace_info,\n       /* We don't throw an error, the program is still debuggable.  */\n       warning (_(\"\\\n Missing/bad script name in entry at offset %u in section %s\\n\\\n-of file %s.\"),\n-\t       offset, section_name, objfile_name (objfile));\n+of file %ps.\"),\n+\t       offset, section_name,\n+\t       styled_string (file_name_style.style (),\n+\t\t\t      objfile_name (objfile)));\n       return;\n     }\n   script_text = newline + 1;\n@@ -1120,8 +1124,10 @@ auto_load_section_scripts (struct objfile *objfile, const char *section_name)\n     return;\n \n   if (!bfd_get_full_section_contents (abfd, scripts_sect, &data))\n-    warning (_(\"Couldn't read %s section of %s\"),\n-\t     section_name, bfd_get_filename (abfd));\n+    warning (_(\"Couldn't read %s section of %ps\"),\n+\t     section_name,\n+\t     styled_string (file_name_style.style (),\n+\t\t\t    bfd_get_filename (abfd)));\n   else\n     {\n       gdb::unique_xmalloc_ptr<bfd_byte> data_holder (data);\n@@ -1349,11 +1355,13 @@ info_auto_load_local_gdbinit (const char *args, int from_tty)\n   if (auto_load_local_gdbinit_pathname == NULL)\n     printf_filtered (_(\"Local .gdbinit file was not found.\\n\"));\n   else if (auto_load_local_gdbinit_loaded)\n-    printf_filtered (_(\"Local .gdbinit file \\\"%s\\\" has been loaded.\\n\"),\n-\t\t     auto_load_local_gdbinit_pathname);\n+    printf_filtered (_(\"Local .gdbinit file \\\"%ps\\\" has been loaded.\\n\"),\n+\t\t     styled_string (file_name_style.style (),\n+\t\t\t\t    auto_load_local_gdbinit_pathname));\n   else\n-    printf_filtered (_(\"Local .gdbinit file \\\"%s\\\" has not been loaded.\\n\"),\n-\t\t     auto_load_local_gdbinit_pathname);\n+    printf_filtered (_(\"Local .gdbinit file \\\"%ps\\\" has not been loaded.\\n\"),\n+\t\t     styled_string (file_name_style.style (),\n+\t\t\t\t    auto_load_local_gdbinit_pathname));\n }\n \n /* Print an \"unsupported script\" warning if it has not already been printed.\n@@ -1370,9 +1378,11 @@ maybe_print_unsupported_script_warning\n     {\n       warning (_(\"\\\n Unsupported auto-load script at offset %u in section %s\\n\\\n-of file %s.\\n\\\n+of file %ps.\\n\\\n Use `info auto-load %s-scripts [REGEXP]' to list them.\"),\n-\t       offset, section_name, objfile_name (objfile),\n+\t       offset, section_name,\n+\t       styled_string (file_name_style.style (),\n+\t\t\t      objfile_name (objfile)),\n \t       ext_lang_name (language));\n       pspace_info->unsupported_script_warning_printed = true;\n     }\n@@ -1392,9 +1402,11 @@ maybe_print_script_not_found_warning\n     {\n       warning (_(\"\\\n Missing auto-load script at offset %u in section %s\\n\\\n-of file %s.\\n\\\n+of file %ps.\\n\\\n Use `info auto-load %s-scripts [REGEXP]' to list them.\"),\n-\t       offset, section_name, objfile_name (objfile),\n+\t       offset, section_name,\n+\t       styled_string (file_name_style.style (),\n+\t\t\t      objfile_name (objfile)),\n \t       ext_lang_name (language));\n       pspace_info->script_not_found_warning_printed = true;\n     }"
    },
    {
      "sha": "b7c4f245b95ff6672137a8e170216b63e357860a",
      "filename": "gdb/linux-thread-db.c",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d636d67e0ddf223c6e9127dc058afdb48a7012f/gdb/linux-thread-db.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d636d67e0ddf223c6e9127dc058afdb48a7012f/gdb/linux-thread-db.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-thread-db.c?ref=9d636d67e0ddf223c6e9127dc058afdb48a7012f",
      "patch": "@@ -48,6 +48,7 @@\n #include <algorithm>\n #include \"gdbsupport/pathstuff.h\"\n #include \"valprint.h\"\n+#include \"cli/cli-style.h\"\n \n /* GNU/Linux libthread_db support.\n \n@@ -933,8 +934,9 @@ try_thread_db_load_1 (struct thread_db_info *info)\n \t enabled.  User visible output should not depend on debug\n \t settings.  */\n       file = *libthread_db_search_path != '\\0' ? gdb_stdout : gdb_stdlog;\n-      fprintf_unfiltered (file, _(\"Using host libthread_db library \\\"%s\\\".\\n\"),\n-\t\t\t  library);\n+      fprintf_unfiltered (file,\n+\t\t\t  _(\"Using host libthread_db library \\\"%ps\\\".\\n\"),\n+\t\t\t  styled_string (file_name_style.style (), library));\n     }\n \n   /* The thread library was detected.  Activate the thread_db target\n@@ -1028,7 +1030,8 @@ try_thread_db_load_from_pdir_1 (struct objfile *obj, const char *subdir)\n   if (obj_name[0] != '/')\n     {\n       warning (_(\"Expected absolute pathname for libpthread in the\"\n-\t\t \" inferior, but got %s.\"), obj_name);\n+\t\t \" inferior, but got %ps.\"),\n+\t       styled_string (file_name_style.style (), obj_name));\n       return false;\n     }\n "
    },
    {
      "sha": "c7c67fc7d5cbbbda2c394629ca4e5fd7981cb825",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d636d67e0ddf223c6e9127dc058afdb48a7012f/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d636d67e0ddf223c6e9127dc058afdb48a7012f/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=9d636d67e0ddf223c6e9127dc058afdb48a7012f",
      "patch": "@@ -1393,7 +1393,7 @@ print_frame (const frame_print_options &fp_opts,\n \t    annotate_frame_where ();\n \t    uiout->wrap_hint (\"  \");\n \t    uiout->text (\" from \");\n-\t    uiout->field_string (\"from\", lib);\n+\t    uiout->field_string (\"from\", lib, file_name_style.style ());\n \t  }\n       }\n     if (uiout->is_mi_like_p ())\n@@ -1524,8 +1524,11 @@ info_frame_command_core (struct frame_info *fi, bool selected_frame_p)\n     }\n   wrap_here (\"   \");\n   if (sal.symtab)\n-    printf_filtered (\" (%s:%d)\", symtab_to_filename_for_display (sal.symtab),\n-\t\t     sal.line);\n+    printf_filtered\n+      (\" (%ps:%d)\",\n+       styled_string (file_name_style.style (),\n+\t\t      symtab_to_filename_for_display (sal.symtab)),\n+       sal.line);\n   puts_filtered (\"; \");\n   wrap_here (\"    \");\n   printf_filtered (\"saved %s = \", pc_regname);"
    }
  ]
}