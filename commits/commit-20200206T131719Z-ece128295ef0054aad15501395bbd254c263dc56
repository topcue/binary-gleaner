{
  "sha": "ece128295ef0054aad15501395bbd254c263dc56",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWNlMTI4Mjk1ZWYwMDU0YWFkMTU1MDEzOTViYmQyNTRjMjYzZGM1Ng==",
  "commit": {
    "author": {
      "name": "Thomas Troeger",
      "email": "tstroege@gmx.de",
      "date": "2020-02-06T13:17:19Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-02-06T13:17:19Z"
    },
    "message": "Jump visualization: Handle the case where the disassembled bytes occupy two lines.\n\n\t* objdump.c (print_jump_visualisation): New function.\n\t(disassemble_bytes): Call new function.",
    "tree": {
      "sha": "18b2d05fe7a93b23dcb7001a33d1f5946a015ffc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/18b2d05fe7a93b23dcb7001a33d1f5946a015ffc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ece128295ef0054aad15501395bbd254c263dc56",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ece128295ef0054aad15501395bbd254c263dc56",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ece128295ef0054aad15501395bbd254c263dc56",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ece128295ef0054aad15501395bbd254c263dc56/comments",
  "author": {
    "login": "hochl",
    "id": 6332453,
    "node_id": "MDQ6VXNlcjYzMzI0NTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6332453?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hochl",
    "html_url": "https://github.com/hochl",
    "followers_url": "https://api.github.com/users/hochl/followers",
    "following_url": "https://api.github.com/users/hochl/following{/other_user}",
    "gists_url": "https://api.github.com/users/hochl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hochl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hochl/subscriptions",
    "organizations_url": "https://api.github.com/users/hochl/orgs",
    "repos_url": "https://api.github.com/users/hochl/repos",
    "events_url": "https://api.github.com/users/hochl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hochl/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "986ac31487544ed7553e74f4570f6de83fba1c8d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/986ac31487544ed7553e74f4570f6de83fba1c8d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/986ac31487544ed7553e74f4570f6de83fba1c8d"
    }
  ],
  "stats": {
    "total": 90,
    "additions": 53,
    "deletions": 37
  },
  "files": [
    {
      "sha": "2f383eb6bd6df3a4bd38f00ac3312c504b43b735",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ece128295ef0054aad15501395bbd254c263dc56/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ece128295ef0054aad15501395bbd254c263dc56/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=ece128295ef0054aad15501395bbd254c263dc56",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-06  Thomas Troeger  <tstroege@gmx.de>\n+\n+\t* objdump.c (print_jump_visualisation): New function.\n+\t(disassemble_bytes): Call new function.\n+\n 2020-02-06  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/lib/binutils-common.exp (match_target): Accept '!' before"
    },
    {
      "sha": "8182dcc36232775ba1d46a84921fb997e2b5e41b",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 48,
      "deletions": 37,
      "changes": 85,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ece128295ef0054aad15501395bbd254c263dc56/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ece128295ef0054aad15501395bbd254c263dc56/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=ece128295ef0054aad15501395bbd254c263dc56",
      "patch": "@@ -2474,6 +2474,47 @@ null_print (const void * stream ATTRIBUTE_UNUSED, const char * format ATTRIBUTE_\n   return 1;\n }\n \n+/* Print out jump visualization.  */\n+\n+static void\n+print_jump_visualisation (bfd_vma addr, int max_level, char *line_buffer,\n+\t\t\t  uint8_t *color_buffer)\n+{\n+  if (!line_buffer)\n+    return;\n+\n+  jump_info_visualize_address (addr, max_level, line_buffer, color_buffer);\n+\n+  size_t line_buffer_size = strlen (line_buffer);\n+  char last_color = 0;\n+  size_t i;\n+\n+  for (i = 0; i <= line_buffer_size; ++i)\n+    {\n+      if (color_output)\n+\t{\n+\t  uint8_t color = (i < line_buffer_size) ? color_buffer[i]: 0;\n+\n+\t  if (color != last_color)\n+\t    {\n+\t      if (color)\n+\t\tif (extended_color_output)\n+\t\t  /* Use extended 8bit color, but\n+\t\t     do not choose dark colors.  */\n+\t\t  printf (\"\\033[38;5;%dm\", 124 + (color % 108));\n+\t\telse\n+\t\t  /* Use simple terminal colors.  */\n+\t\t  printf (\"\\033[%dm\", 31 + (color % 7));\n+\t      else\n+\t\t/* Clear color.  */\n+\t\tprintf (\"\\033[0m\");\n+\t      last_color = color;\n+\t    }\n+\t}\n+      putchar ((i < line_buffer_size) ? line_buffer[i]: ' ');\n+    }\n+}\n+\n /* Disassemble some data in memory between given values.  */\n \n static void\n@@ -2632,43 +2673,9 @@ disassemble_bytes (struct disassemble_info * inf,\n \t      putchar (' ');\n \t    }\n \n-\t  /* Visualize jumps. */\n-\t  if (line_buffer)\n-\t    {\n-\t      jump_info_visualize_address (section->vma + addr_offset,\n-\t\t\t\t\t   max_level,\n-\t\t\t\t\t   line_buffer,\n-\t\t\t\t\t   color_buffer);\n-\n-\t      size_t line_buffer_size = strlen (line_buffer);\n-\t      char last_color = 0;\n-\t      size_t i;\n-\n-\t      for (i = 0; i <= line_buffer_size; ++i)\n-\t\t{\n-\t\t  if (color_output)\n-\t\t    {\n-\t\t      uint8_t color = (i < line_buffer_size) ? color_buffer[i]: 0;\n-\n-\t\t      if (color != last_color)\n-\t\t\t{\n-\t\t\t  if (color)\n-\t\t\t    if (extended_color_output)\n-\t\t\t      /* Use extended 8bit color, but\n-\t\t\t         do not choose dark colors.  */\n-\t\t\t      printf (\"\\033[38;5;%dm\", 124 + (color % 108));\n-\t\t\t    else\n-\t\t\t      /* Use simple terminal colors.  */\n-\t\t\t      printf (\"\\033[%dm\", 31 + (color % 7));\n-\t\t\t  else\n-\t\t\t    /* Clear color.  */\n-\t\t\t    printf (\"\\033[0m\");\n-\t\t\t  last_color = color;\n-\t\t\t}\n-\t\t    }\n-\t\t  putchar ((i < line_buffer_size) ? line_buffer[i]: ' ');\n-\t\t}\n-\t    }\n+\t  print_jump_visualisation (section->vma + addr_offset,\n+\t\t\t\t    max_level, line_buffer,\n+\t\t\t\t    color_buffer);\n \n \t  if (insns)\n \t    {\n@@ -2860,6 +2867,10 @@ disassemble_bytes (struct disassemble_info * inf,\n \t\t    *--s = '0';\n \t\t  printf (\"%s:\\t\", buf + skip_addr_chars);\n \n+\t\t  print_jump_visualisation (section->vma + j / opb,\n+\t\t\t\t\t    max_level, line_buffer,\n+\t\t\t\t\t    color_buffer);\n+\n \t\t  pb += octets_per_line;\n \t\t  if (pb > octets)\n \t\t    pb = octets;"
    }
  ]
}