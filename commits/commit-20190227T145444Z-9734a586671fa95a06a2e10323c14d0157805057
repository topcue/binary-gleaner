{
  "sha": "9734a586671fa95a06a2e10323c14d0157805057",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTczNGE1ODY2NzFmYTk1YTA2YTJlMTAzMjNjMTRkMDE1NzgwNTA1Nw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2018-12-27T11:52:53Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-02-27T14:54:44Z"
    },
    "message": "gdb/h8300: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc, and gdbarch_unwind_sp where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* gdb/h8300-tdep.c (h8300_unwind_pc): Delete.\n\t(h8300_unwind_sp): Delete.\n\t(h8300_dummy_id): Delete.\n\t(h8300_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "bf3e690285d124cb995d1fcd7f51d3d0d0a1cdc7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bf3e690285d124cb995d1fcd7f51d3d0d0a1cdc7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9734a586671fa95a06a2e10323c14d0157805057",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9734a586671fa95a06a2e10323c14d0157805057",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9734a586671fa95a06a2e10323c14d0157805057",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9734a586671fa95a06a2e10323c14d0157805057/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "68b867f30eeca7e9585e9ee16e824f5a18e2bc6c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68b867f30eeca7e9585e9ee16e824f5a18e2bc6c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/68b867f30eeca7e9585e9ee16e824f5a18e2bc6c"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 8,
    "deletions": 22
  },
  "files": [
    {
      "sha": "a4a1f219833b41418f89a6d12bb6923e755ee4df",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9734a586671fa95a06a2e10323c14d0157805057/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9734a586671fa95a06a2e10323c14d0157805057/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9734a586671fa95a06a2e10323c14d0157805057",
      "patch": "@@ -1,3 +1,11 @@\n+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb/h8300-tdep.c (h8300_unwind_pc): Delete.\n+\t(h8300_unwind_sp): Delete.\n+\t(h8300_dummy_id): Delete.\n+\t(h8300_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb/ft32-tdep.c (ft32_dummy_id): Delete."
    },
    {
      "sha": "b41a0b6c260a9731a22cbcdbc021aac25900def1",
      "filename": "gdb/h8300-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9734a586671fa95a06a2e10323c14d0157805057/gdb/h8300-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9734a586671fa95a06a2e10323c14d0157805057/gdb/h8300-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/h8300-tdep.c?ref=9734a586671fa95a06a2e10323c14d0157805057",
      "patch": "@@ -92,25 +92,6 @@ static int is_h8300_normal_mode (struct gdbarch *gdbarch);\n \t\t  && !is_h8300_normal_mode (gdbarch)) \\\n \t\t ? h8300h_reg_size : h8300_reg_size)\n \n-static CORE_ADDR\n-h8300_unwind_pc (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, E_PC_REGNUM);\n-}\n-\n-static CORE_ADDR\n-h8300_unwind_sp (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, E_SP_REGNUM);\n-}\n-\n-static struct frame_id\n-h8300_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  CORE_ADDR sp = get_frame_register_unsigned (this_frame, E_SP_REGNUM);\n-  return frame_id_build (sp, get_frame_pc (this_frame));\n-}\n-\n /* Normal frames.  */\n \n /* Allocate and initialize a frame cache.  */\n@@ -1349,9 +1330,6 @@ h8300_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   set_gdbarch_skip_prologue (gdbarch, h8300_skip_prologue);\n \n   /* Frame unwinder.  */\n-  set_gdbarch_unwind_pc (gdbarch, h8300_unwind_pc);\n-  set_gdbarch_unwind_sp (gdbarch, h8300_unwind_sp);\n-  set_gdbarch_dummy_id (gdbarch, h8300_dummy_id);\n   frame_base_set_default (gdbarch, &h8300_frame_base);\n \n   /* "
    }
  ]
}