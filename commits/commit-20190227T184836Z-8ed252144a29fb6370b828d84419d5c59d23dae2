{
  "sha": "8ed252144a29fb6370b828d84419d5c59d23dae2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGVkMjUyMTQ0YTI5ZmI2MzcwYjgyOGQ4NDQxOWQ1YzU5ZDIzZGFlMg==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-02-27T18:48:36Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-02-27T18:48:36Z"
    },
    "message": "Make 'show width/height' display \"unlimited\" when capped for readline\n\nWhen we cap the height/width sizes before passing to readline, tweak\nthe corresponding command variable to show \"unlimited\":\n\n  (gdb) set height 0x8000\n  (gdb) show height\n  Number of lines gdb thinks are in a page is unlimited.\n\nInstead of the current output:\n  (gdb) set height 0x8000\n  (gdb) show height\n  Number of lines gdb thinks are in a page is 32768.\n\ngdb/ChangeLog:\n2019-02-27  Pedro Alves  <palves@redhat.com>\n\n\t* utils.c (set_screen_size): When we cap the height/width sizes,\n\ttweak the corresponding command variable to show \"unlimited\":\n\ngdb/testsuite/ChangeLog:\n2019-02-27  Pedro Alves  <palves@redhat.com>\n\n\t* gdb.base/page.exp: Add tests for \"set/show width/height\" with\n\t\"infinite\" values.",
    "tree": {
      "sha": "6cc5175c56e095ab018901fa82622fa42fc88814",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6cc5175c56e095ab018901fa82622fa42fc88814"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8ed252144a29fb6370b828d84419d5c59d23dae2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ed252144a29fb6370b828d84419d5c59d23dae2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8ed252144a29fb6370b828d84419d5c59d23dae2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ed252144a29fb6370b828d84419d5c59d23dae2/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "23031e319207140e76a9c18e308995fe28322b58",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23031e319207140e76a9c18e308995fe28322b58",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/23031e319207140e76a9c18e308995fe28322b58"
    }
  ],
  "stats": {
    "total": 44,
    "additions": 42,
    "deletions": 2
  },
  "files": [
    {
      "sha": "1dc635678422e0e847b7c2f622868ab63c931523",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ed252144a29fb6370b828d84419d5c59d23dae2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ed252144a29fb6370b828d84419d5c59d23dae2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8ed252144a29fb6370b828d84419d5c59d23dae2",
      "patch": "@@ -1,3 +1,8 @@\n+2019-02-27  Pedro Alves  <palves@redhat.com>\n+\n+\t* utils.c (set_screen_size): When we cap the height/width sizes,\n+\ttweak the corresponding command variable to show \"unlimited\":\n+\n 2019-02-27  Saagar Jha  <saagar@saagarjha.com>\n \t    Pedro Alves  <palves@redhat.com>\n "
    },
    {
      "sha": "b5177c7e076664420ea732380f7b6f557cf7d9ac",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ed252144a29fb6370b828d84419d5c59d23dae2/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ed252144a29fb6370b828d84419d5c59d23dae2/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=8ed252144a29fb6370b828d84419d5c59d23dae2",
      "patch": "@@ -1,3 +1,8 @@\n+2019-02-27  Pedro Alves  <palves@redhat.com>\n+\n+\t* gdb.base/page.exp: Add tests for \"set/show width/height\" with\n+\t\"infinite\" values.\n+\n 2019-02-27  Tom Tromey  <tromey@adacore.com>\n \n \t* lib/gdb.exp (skip_python_tests_prompt): Don't check for Python"
    },
    {
      "sha": "8f1698c26ef198ed43a5fbb5319cfa0390062cdc",
      "filename": "gdb/testsuite/gdb.base/page.exp",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ed252144a29fb6370b828d84419d5c59d23dae2/gdb/testsuite/gdb.base/page.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ed252144a29fb6370b828d84419d5c59d23dae2/gdb/testsuite/gdb.base/page.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/page.exp?ref=8ed252144a29fb6370b828d84419d5c59d23dae2",
      "patch": "@@ -94,6 +94,30 @@ gdb_expect_list \"paged count for interrupt\" \\\n \n gdb_test \"q\" \"Quit\" \"quit while paging\"\n \n+# Check that width/height of sqrt(INT_MAX) is treated as unlimited, as\n+# well as \"0\" and explicit \"unlimited\".\n+foreach_with_prefix size {\"0\" \"0x80000000\" \"unlimited\"} {\n+\n+    # Alternate between \"non-unlimited\" values and \"unlimited\" values,\n+    # to make sure we're not seeing stale internal state.\n+\n+    gdb_test \"set width 200\"\n+    gdb_test \"show width\" \\\n+\t\"Number of characters gdb thinks are in a line is 200\\\\.\"\n+\n+    gdb_test \"set height 200\"\n+    gdb_test \"show height\" \\\n+\t\"Number of lines gdb thinks are in a page is 200\\\\.\"\n+\n+    gdb_test \"set width $size\"\n+    gdb_test \"show width unlimited\" \\\n+\t\"Number of characters gdb thinks are in a line is unlimited\\\\.\"\n+\n+    gdb_test \"set height $size\"\n+    gdb_test \"show height unlimited\" \\\n+\t\"Number of lines gdb thinks are in a page is unlimited\\\\.\"\n+}\n+\n gdb_exit\n return 0\n "
    },
    {
      "sha": "60af31f2e4fe4d894479d45ba0a07b6dd1dc6b5e",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ed252144a29fb6370b828d84419d5c59d23dae2/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ed252144a29fb6370b828d84419d5c59d23dae2/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=8ed252144a29fb6370b828d84419d5c59d23dae2",
      "patch": "@@ -1394,10 +1394,16 @@ set_screen_size (void)\n   const int sqrt_int_max = INT_MAX >> (sizeof (int) * 8 / 2);\n \n   if (rows <= 0 || rows > sqrt_int_max)\n-    rows = sqrt_int_max;\n+    {\n+      rows = sqrt_int_max;\n+      lines_per_page = UINT_MAX;\n+    }\n \n   if (cols <= 0 || cols > sqrt_int_max)\n-    cols = sqrt_int_max;\n+    {\n+      cols = sqrt_int_max;\n+      chars_per_line = UINT_MAX;\n+    }\n \n   /* Update Readline's idea of the terminal size.  */\n   rl_set_screen_size (rows, cols);"
    }
  ]
}