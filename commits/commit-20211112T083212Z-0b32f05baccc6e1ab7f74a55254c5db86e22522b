{
  "sha": "0b32f05baccc6e1ab7f74a55254c5db86e22522b",
  "node_id": "C_kwDOANOeidoAKDBiMzJmMDViYWNjYzZlMWFiN2Y3NGE1NTI1NGM1ZGI4NmUyMjUyMmI",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-11-12T08:25:45Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-11-12T08:32:12Z"
    },
    "message": "Don't compile some opcodes files when bfd is 32-bit only\n\n\t* Makefile.am (TARGET_LIBOPCODES_CFILES): Split into..\n\t(TARGET64_LIBOPCODES_CFILES): ..this and..\n\t(TARGET32_LIBOPCODES_CFILES): ..this.\n\t(ALL_MACHINES): Likewise split to\n\t(ALL64_MACHINES, ALL32_MACHINES): ..this.\n\t* disassemble.c: Define some ARCH_* when ARCH_all only if BFD64.\n\t* configure.ac (BFD_MACHINES): Defined depending on BFD_ARCH_SIZE.\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.",
    "tree": {
      "sha": "ea261edea58457c3dab7a8a1ef0f1bd5211cbb28",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ea261edea58457c3dab7a8a1ef0f1bd5211cbb28"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0b32f05baccc6e1ab7f74a55254c5db86e22522b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b32f05baccc6e1ab7f74a55254c5db86e22522b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0b32f05baccc6e1ab7f74a55254c5db86e22522b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b32f05baccc6e1ab7f74a55254c5db86e22522b/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "be472decb251e0a27edf4575e054cce107956d26",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be472decb251e0a27edf4575e054cce107956d26",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/be472decb251e0a27edf4575e054cce107956d26"
    }
  ],
  "stats": {
    "total": 130,
    "additions": 74,
    "deletions": 56
  },
  "files": [
    {
      "sha": "ab7072c0249189ed5482d89f64b6751f234d5826",
      "filename": "opcodes/Makefile.am",
      "status": "modified",
      "additions": 26,
      "deletions": 22,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b32f05baccc6e1ab7f74a55254c5db86e22522b/opcodes/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b32f05baccc6e1ab7f74a55254c5db86e22522b/opcodes/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/Makefile.am?ref=0b32f05baccc6e1ab7f74a55254c5db86e22522b",
      "patch": "@@ -88,7 +88,7 @@ HFILES = \\\n \n # C source files that correspond to .o's ending up in libopcodes\n # for all machines.\n-TARGET_LIBOPCODES_CFILES = \\\n+TARGET64_LIBOPCODES_CFILES = \\\n \taarch64-asm.c \\\n \taarch64-asm-2.c \\\n \taarch64-dis.c \\\n@@ -97,6 +97,27 @@ TARGET_LIBOPCODES_CFILES = \\\n \taarch64-opc-2.c \\\n \talpha-dis.c \\\n \talpha-opc.c \\\n+\tbpf-asm.c \\\n+\tbpf-desc.c \\\n+\tbpf-dis.c \\\n+\tbpf-ibld.c \\\n+\tbpf-opc.c \\\n+\tia64-dis.c \\\n+\tia64-opc.c \\\n+\tloongarch-opc.c \\\n+\tloongarch-dis.c \\\n+\tloongarch-coder.c \\\n+\tmips-dis.c \\\n+\tmips-opc.c \\\n+\tmips16-opc.c \\\n+\tmicromips-opc.c \\\n+\tmmix-dis.c \\\n+\tmmix-opc.c \\\n+\tnfp-dis.c \\\n+\triscv-dis.c \\\n+\triscv-opc.c\n+\n+TARGET32_LIBOPCODES_CFILES = \\\n \tarc-dis.c \\\n \tarc-ext.c \\\n \tarc-opc.c \\\n@@ -120,11 +141,6 @@ TARGET_LIBOPCODES_CFILES = \\\n \td30v-dis.c \\\n \td30v-opc.c \\\n \tdlx-dis.c \\\n-\tbpf-asm.c \\\n-\tbpf-desc.c \\\n-\tbpf-dis.c \\\n-\tbpf-ibld.c \\\n-\tbpf-opc.c \\\n \tepiphany-asm.c \\\n \tepiphany-desc.c \\\n \tepiphany-dis.c \\\n@@ -146,8 +162,6 @@ TARGET_LIBOPCODES_CFILES = \\\n \thppa-dis.c \\\n \ti386-dis.c \\\n \ti386-opc.c \\\n-\tia64-dis.c \\\n-\tia64-opc.c \\\n \tip2k-asm.c \\\n \tip2k-desc.c \\\n \tip2k-dis.c \\\n@@ -164,9 +178,6 @@ TARGET_LIBOPCODES_CFILES = \\\n \tlm32-ibld.c \\\n \tlm32-opc.c \\\n \tlm32-opinst.c \\\n-\tloongarch-opc.c \\\n-\tloongarch-dis.c \\\n-\tloongarch-coder.c \\\n \tm10200-dis.c \\\n \tm10200-opc.c \\\n \tm10300-dis.c \\\n@@ -196,12 +207,6 @@ TARGET_LIBOPCODES_CFILES = \\\n \tmep-opc.c \\\n \tmetag-dis.c \\\n \tmicroblaze-dis.c \\\n-\tmicromips-opc.c \\\n-\tmips-dis.c \\\n-\tmips-opc.c \\\n-\tmips16-opc.c \\\n-\tmmix-dis.c \\\n-\tmmix-opc.c \\\n \tmoxie-dis.c \\\n \tmoxie-opc.c \\\n \tmsp430-decode.c \\\n@@ -213,7 +218,6 @@ TARGET_LIBOPCODES_CFILES = \\\n \tmt-opc.c \\\n \tnds32-asm.c \\\n \tnds32-dis.c \\\n-\tnfp-dis.c \\\n \tnios2-dis.c \\\n \tnios2-opc.c \\\n \tns32k-dis.c \\\n@@ -230,8 +234,6 @@ TARGET_LIBOPCODES_CFILES = \\\n \tppc-opc.c \\\n \tpru-dis.c \\\n \tpru-opc.c \\\n-\triscv-dis.c \\\n-\triscv-opc.c \\\n \trl78-decode.c \\\n \trl78-dis.c \\\n \trx-decode.c \\\n@@ -278,7 +280,8 @@ TARGET_LIBOPCODES_CFILES = \\\n \n # C source files that correspond to .o's ending up in libopcodes.\n LIBOPCODES_CFILES = \\\n-\t$(TARGET_LIBOPCODES_CFILES) \\\n+\t$(TARGET32_LIBOPCODES_CFILES) \\\n+\t$(TARGET64_LIBOPCODES_CFILES) \\\n \tdis-buf.c \\\n \tdis-init.c \\\n \tdisassemble.c\n@@ -299,7 +302,8 @@ CFILES = \\\n \ts390-mkopc.c \\\n \tz8kgen.c\n \n-ALL_MACHINES = $(TARGET_LIBOPCODES_CFILES:.c=.lo)\n+ALL32_MACHINES = $(TARGET32_LIBOPCODES_CFILES:.c=.lo)\n+ALL64_MACHINES = $(TARGET64_LIBOPCODES_CFILES:.c=.lo)\n \n OFILES = @BFD_MACHINES@\n "
    },
    {
      "sha": "59ed0d2c81fd01b3402d1822cd83dadd7f08b49a",
      "filename": "opcodes/Makefile.in",
      "status": "modified",
      "additions": 26,
      "deletions": 22,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b32f05baccc6e1ab7f74a55254c5db86e22522b/opcodes/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b32f05baccc6e1ab7f74a55254c5db86e22522b/opcodes/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/Makefile.in?ref=0b32f05baccc6e1ab7f74a55254c5db86e22522b",
      "patch": "@@ -479,7 +479,7 @@ HFILES = \\\n \n # C source files that correspond to .o's ending up in libopcodes\n # for all machines.\n-TARGET_LIBOPCODES_CFILES = \\\n+TARGET64_LIBOPCODES_CFILES = \\\n \taarch64-asm.c \\\n \taarch64-asm-2.c \\\n \taarch64-dis.c \\\n@@ -488,6 +488,27 @@ TARGET_LIBOPCODES_CFILES = \\\n \taarch64-opc-2.c \\\n \talpha-dis.c \\\n \talpha-opc.c \\\n+\tbpf-asm.c \\\n+\tbpf-desc.c \\\n+\tbpf-dis.c \\\n+\tbpf-ibld.c \\\n+\tbpf-opc.c \\\n+\tia64-dis.c \\\n+\tia64-opc.c \\\n+\tloongarch-opc.c \\\n+\tloongarch-dis.c \\\n+\tloongarch-coder.c \\\n+\tmips-dis.c \\\n+\tmips-opc.c \\\n+\tmips16-opc.c \\\n+\tmicromips-opc.c \\\n+\tmmix-dis.c \\\n+\tmmix-opc.c \\\n+\tnfp-dis.c \\\n+\triscv-dis.c \\\n+\triscv-opc.c\n+\n+TARGET32_LIBOPCODES_CFILES = \\\n \tarc-dis.c \\\n \tarc-ext.c \\\n \tarc-opc.c \\\n@@ -511,11 +532,6 @@ TARGET_LIBOPCODES_CFILES = \\\n \td30v-dis.c \\\n \td30v-opc.c \\\n \tdlx-dis.c \\\n-\tbpf-asm.c \\\n-\tbpf-desc.c \\\n-\tbpf-dis.c \\\n-\tbpf-ibld.c \\\n-\tbpf-opc.c \\\n \tepiphany-asm.c \\\n \tepiphany-desc.c \\\n \tepiphany-dis.c \\\n@@ -537,8 +553,6 @@ TARGET_LIBOPCODES_CFILES = \\\n \thppa-dis.c \\\n \ti386-dis.c \\\n \ti386-opc.c \\\n-\tia64-dis.c \\\n-\tia64-opc.c \\\n \tip2k-asm.c \\\n \tip2k-desc.c \\\n \tip2k-dis.c \\\n@@ -555,9 +569,6 @@ TARGET_LIBOPCODES_CFILES = \\\n \tlm32-ibld.c \\\n \tlm32-opc.c \\\n \tlm32-opinst.c \\\n-\tloongarch-opc.c \\\n-\tloongarch-dis.c \\\n-\tloongarch-coder.c \\\n \tm10200-dis.c \\\n \tm10200-opc.c \\\n \tm10300-dis.c \\\n@@ -587,12 +598,6 @@ TARGET_LIBOPCODES_CFILES = \\\n \tmep-opc.c \\\n \tmetag-dis.c \\\n \tmicroblaze-dis.c \\\n-\tmicromips-opc.c \\\n-\tmips-dis.c \\\n-\tmips-opc.c \\\n-\tmips16-opc.c \\\n-\tmmix-dis.c \\\n-\tmmix-opc.c \\\n \tmoxie-dis.c \\\n \tmoxie-opc.c \\\n \tmsp430-decode.c \\\n@@ -604,7 +609,6 @@ TARGET_LIBOPCODES_CFILES = \\\n \tmt-opc.c \\\n \tnds32-asm.c \\\n \tnds32-dis.c \\\n-\tnfp-dis.c \\\n \tnios2-dis.c \\\n \tnios2-opc.c \\\n \tns32k-dis.c \\\n@@ -621,8 +625,6 @@ TARGET_LIBOPCODES_CFILES = \\\n \tppc-opc.c \\\n \tpru-dis.c \\\n \tpru-opc.c \\\n-\triscv-dis.c \\\n-\triscv-opc.c \\\n \trl78-decode.c \\\n \trl78-dis.c \\\n \trx-decode.c \\\n@@ -670,7 +672,8 @@ TARGET_LIBOPCODES_CFILES = \\\n \n # C source files that correspond to .o's ending up in libopcodes.\n LIBOPCODES_CFILES = \\\n-\t$(TARGET_LIBOPCODES_CFILES) \\\n+\t$(TARGET32_LIBOPCODES_CFILES) \\\n+\t$(TARGET64_LIBOPCODES_CFILES) \\\n \tdis-buf.c \\\n \tdis-init.c \\\n \tdisassemble.c\n@@ -692,7 +695,8 @@ CFILES = \\\n \ts390-mkopc.c \\\n \tz8kgen.c\n \n-ALL_MACHINES = $(TARGET_LIBOPCODES_CFILES:.c=.lo)\n+ALL32_MACHINES = $(TARGET32_LIBOPCODES_CFILES:.c=.lo)\n+ALL64_MACHINES = $(TARGET64_LIBOPCODES_CFILES:.c=.lo)\n OFILES = @BFD_MACHINES@\n \n # development.sh is used to determine -Werror default."
    },
    {
      "sha": "6672c368082828818a719385f6436422999f60b4",
      "filename": "opcodes/configure",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b32f05baccc6e1ab7f74a55254c5db86e22522b/opcodes/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b32f05baccc6e1ab7f74a55254c5db86e22522b/opcodes/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/configure?ref=0b32f05baccc6e1ab7f74a55254c5db86e22522b",
      "patch": "@@ -12319,7 +12319,11 @@ if test x${all_targets} = xfalse ; then\n \n else\t# all_targets is true\n     archdefs=-DARCH_all\n-    BFD_MACHINES='$(ALL_MACHINES)'\n+    if grep '#define BFD_ARCH_SIZE 64' ../bfd/bfd-in3.h > /dev/null; then\n+\tBFD_MACHINES='$(ALL32_MACHINES) $(ALL64_MACHINES)'\n+    else\n+\tBFD_MACHINES='$(ALL32_MACHINES)'\n+    fi\n fi\n \n "
    },
    {
      "sha": "03433157c081da85b17bd213bc89f9f4c71115c8",
      "filename": "opcodes/configure.ac",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b32f05baccc6e1ab7f74a55254c5db86e22522b/opcodes/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b32f05baccc6e1ab7f74a55254c5db86e22522b/opcodes/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/configure.ac?ref=0b32f05baccc6e1ab7f74a55254c5db86e22522b",
      "patch": "@@ -379,7 +379,11 @@ if test x${all_targets} = xfalse ; then\n \n else\t# all_targets is true\n     archdefs=-DARCH_all\n-    BFD_MACHINES='$(ALL_MACHINES)'\n+    if grep '#define BFD_ARCH_SIZE 64' ../bfd/bfd-in3.h > /dev/null; then\n+\tBFD_MACHINES='$(ALL32_MACHINES) $(ALL64_MACHINES)'\n+    else\n+\tBFD_MACHINES='$(ALL32_MACHINES)'\n+    fi\n fi\n \n AC_SUBST(archdefs)"
    },
    {
      "sha": "21d894f57d422204ff03040eb3dfdbdb89692700",
      "filename": "opcodes/disassemble.c",
      "status": "modified",
      "additions": 12,
      "deletions": 10,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b32f05baccc6e1ab7f74a55254c5db86e22522b/opcodes/disassemble.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b32f05baccc6e1ab7f74a55254c5db86e22522b/opcodes/disassemble.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/disassemble.c?ref=0b32f05baccc6e1ab7f74a55254c5db86e22522b",
      "patch": "@@ -24,32 +24,40 @@\n #include \"opintl.h\"\n \n #ifdef ARCH_all\n+#ifdef BFD64\n #define ARCH_aarch64\n #define ARCH_alpha\n+#define ARCH_bpf\n+#define ARCH_cris\n+#define ARCH_ia64\n+#define ARCH_loongarch\n+#define ARCH_mips\n+#define ARCH_mmix\n+#define ARCH_nfp\n+#define ARCH_riscv\n+#define ARCH_score\n+#define ARCH_tilegx\n+#endif\n #define ARCH_arc\n #define ARCH_arm\n #define ARCH_avr\n #define ARCH_bfin\n #define ARCH_cr16\n-#define ARCH_cris\n #define ARCH_crx\n #define ARCH_csky\n #define ARCH_d10v\n #define ARCH_d30v\n #define ARCH_dlx\n-#define ARCH_bpf\n #define ARCH_epiphany\n #define ARCH_fr30\n #define ARCH_frv\n #define ARCH_ft32\n #define ARCH_h8300\n #define ARCH_hppa\n #define ARCH_i386\n-#define ARCH_ia64\n #define ARCH_ip2k\n #define ARCH_iq2000\n #define ARCH_lm32\n-#define ARCH_loongarch\n #define ARCH_m32c\n #define ARCH_m32r\n #define ARCH_m68hc11\n@@ -59,37 +67,31 @@\n #define ARCH_mep\n #define ARCH_metag\n #define ARCH_microblaze\n-#define ARCH_mips\n-#define ARCH_mmix\n #define ARCH_mn10200\n #define ARCH_mn10300\n #define ARCH_moxie\n #define ARCH_mt\n #define ARCH_msp430\n #define ARCH_nds32\n-#define ARCH_nfp\n #define ARCH_nios2\n #define ARCH_ns32k\n #define ARCH_or1k\n #define ARCH_pdp11\n #define ARCH_pj\n #define ARCH_powerpc\n #define ARCH_pru\n-#define ARCH_riscv\n #define ARCH_rs6000\n #define ARCH_rl78\n #define ARCH_rx\n #define ARCH_s12z\n #define ARCH_s390\n-#define ARCH_score\n #define ARCH_sh\n #define ARCH_sparc\n #define ARCH_spu\n #define ARCH_tic30\n #define ARCH_tic4x\n #define ARCH_tic54x\n #define ARCH_tic6x\n-#define ARCH_tilegx\n #define ARCH_tilepro\n #define ARCH_v850\n #define ARCH_vax"
    }
  ]
}