{
  "sha": "96c7f873945c31bb0f9facd526bfe6dac74d3ccb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTZjN2Y4NzM5NDVjMzFiYjBmOWZhY2Q1MjZiZmU2ZGFjNzRkM2NjYg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-13T07:50:51Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-13T07:50:51Z"
    },
    "message": "[gdb/symtab] Fix partial unit psymtabs\n\nConsider test-case gdb.dwarf2/imported-unit.exp.\n\nIt contains a CU with type int:\n...\n <0><129>: Abbrev Number: 2 (DW_TAG_compile_unit)\n    <12a>   DW_AT_language    : 4       (C++)\n    <12b>   DW_AT_name        : imported_unit.c\n <1><13b>: Abbrev Number: 3 (DW_TAG_base_type)\n    <13c>   DW_AT_byte_size   : 4\n    <13d>   DW_AT_encoding    : 5       (signed)\n    <13e>   DW_AT_name        : int\n...\nwhich is imported in another CU:\n...\n <0><d2>: Abbrev Number: 2 (DW_TAG_compile_unit)\n    <d3>   DW_AT_language    : 4        (C++)\n    <d4>   DW_AT_name        : <artificial>\n <1><e1>: Abbrev Number: 3 (DW_TAG_imported_unit)\n    <e2>   DW_AT_import      : <0x129>  [Abbrev Number: 2]\n...\n\nHowever, if we print the partial symbols:\n...\n$ gdb -batch imported-unit  -ex \"maint print psymbols\"\n...\nwe see type int both in the importing CU:\n...\nPartial symtab for source file <artificial>@0xc7 (object 0x29f9b80)\n  ...\n  Depends on 1 other partial symtabs.\n    0 0x2a24240 imported_unit.c\n  Global partial symbols:\n    `main', function, 0x4004b2\n  Static partial symbols:\n    `int', type, 0x0\n...\nand in the imported CU:\n...\nPartial symtab for source file imported_unit.c (object 0x2a24240)\n  ...\n  Depends on 0 other partial symtabs.\n  Shared partial symtab with user 0x29f9b80\n  Static partial symbols:\n    `int', type, 0x0\n...\n\nThis is an artefact resulting from the fact that all CUs in an objfile\nshare the same storage array for static partial symbols (and another array for\nglobal partial symbols), using a range to describe their symbols.\n\nThen when scanning the partial symbols of a CU and encountering an import, either:\n- the referred CU has not been parsed yet, and will be parsed, and the range of\n  static partial symbols of the referred CU will be a subrange of the range of\n  static partial symbols of this CU, or\n- the referred CU has already been parsed, and the range of static partial\n  symbols of the referred CU will not be a subrange of the range of static\n  partial symbols of this CU.\n\nThis is inconsistent handling, and confuses the notion of a symbol belonging to\na single symtab.\n\nFurthermore, it might slow down searches, given that the symbol needs to be\nskipped twice.\n\nFinally, the same issue holds for global partial symbols, where the range of a\nCU is sorted after parsing is finished.  Obviously sorting the range of a CU\nmay invalidate subranges, effectively moving symbols in and out of imported\nCUs.\n\nFix this for both static and global partial symbols, by gathering partial\nsymbols in a per-CU vector, and adding those symbols to the per-objfile\nstorage only once complete.\n\nTested on x86_64-linux, with native and board cc-with-dwz and cc-with-dwz-m.\n\ngdb/ChangeLog:\n\n2020-03-13  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/25646\n\t* psymtab.c (partial_symtab::partial_symtab): Don't set\n\tglobals_offset and statics_offset.  Push element onto\n\tcurrent_global_psymbols and current_static_psymbols stacks.\n\t(concat): New function.\n\t(end_psymtab_common): Set globals_offset and statics_offset.  Pop\n\telement from current_global_psymbols and current_static_psymbols\n\tstacks.  Concat popped elements to global_psymbols and\n\tstatic_symbols.\n\t(add_psymbol_to_list): Use current_global_psymbols and\n\tcurrent_static_psymbols stacks.\n\t* psymtab.h (class psymtab_storage): Add current_global_psymbols and\n\tcurrent_static_psymbols fields.\n\ngdb/testsuite/ChangeLog:\n\n2020-03-13  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/25646\n\t* gdb.dwarf2/imported-unit.exp: Add test.",
    "tree": {
      "sha": "083d3c083a4e235c10ea9550f2f4dee4c3c643ef",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/083d3c083a4e235c10ea9550f2f4dee4c3c643ef"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/96c7f873945c31bb0f9facd526bfe6dac74d3ccb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96c7f873945c31bb0f9facd526bfe6dac74d3ccb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/96c7f873945c31bb0f9facd526bfe6dac74d3ccb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96c7f873945c31bb0f9facd526bfe6dac74d3ccb/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "666318230c54a348763927c80d085542d9890c42",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/666318230c54a348763927c80d085542d9890c42",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/666318230c54a348763927c80d085542d9890c42"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 76,
    "deletions": 8
  },
  "files": [
    {
      "sha": "d83ce81f9d4e150960bfbba453d2d8df7bedb0bb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96c7f873945c31bb0f9facd526bfe6dac74d3ccb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96c7f873945c31bb0f9facd526bfe6dac74d3ccb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=96c7f873945c31bb0f9facd526bfe6dac74d3ccb",
      "patch": "@@ -1,3 +1,19 @@\n+2020-03-13  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/25646\n+\t* psymtab.c (partial_symtab::partial_symtab): Don't set\n+\tglobals_offset and statics_offset.  Push element onto\n+\tcurrent_global_psymbols and current_static_psymbols stacks.\n+\t(concat): New function.\n+\t(end_psymtab_common): Set globals_offset and statics_offset.  Pop\n+\telement from current_global_psymbols and current_static_psymbols\n+\tstacks.  Concat popped elements to global_psymbols and\n+\tstatic_symbols.\n+\t(add_psymbol_to_list): Use current_global_psymbols and\n+\tcurrent_static_psymbols stacks.\n+\t* psymtab.h (class psymtab_storage): Add current_global_psymbols and\n+\tcurrent_static_psymbols fields.\n+\n 2020-03-12  Christian Biesinger  <cbiesinger@google.com>\n \n \t* corelow.c (sniff_core_bfd): Remove."
    },
    {
      "sha": "f77f6d5108fecd8fa0b5b0e3508a4402089a0619",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 36,
      "deletions": 8,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96c7f873945c31bb0f9facd526bfe6dac74d3ccb/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96c7f873945c31bb0f9facd526bfe6dac74d3ccb/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=96c7f873945c31bb0f9facd526bfe6dac74d3ccb",
      "patch": "@@ -1490,19 +1490,47 @@ partial_symtab::partial_symtab (const char *filename,\n {\n   set_text_low (textlow);\n   set_text_high (raw_text_low ()); /* default */\n-  globals_offset = objfile->partial_symtabs->global_psymbols.size ();\n-  statics_offset = objfile->partial_symtabs->static_psymbols.size ();\n+\n+  auto *v1 = new std::vector<partial_symbol *>;\n+  objfile->partial_symtabs->current_global_psymbols.push_back (v1);\n+  auto *v2 = new std::vector<partial_symbol *>;\n+  objfile->partial_symtabs->current_static_psymbols.push_back (v2);\n+}\n+\n+/* Concat vectors V1 and V2.  */\n+\n+static void\n+concat (std::vector<partial_symbol *> *v1, std::vector<partial_symbol *> *v2)\n+{\n+  v1->insert (v1->end (), v2->begin (), v2->end ());\n+  v2->clear ();\n }\n \n /* Perform \"finishing up\" operations of a partial symtab.  */\n \n void\n end_psymtab_common (struct objfile *objfile, struct partial_symtab *pst)\n {\n-  pst->n_global_syms = (objfile->partial_symtabs->global_psymbols.size ()\n-\t\t\t- pst->globals_offset);\n-  pst->n_static_syms = (objfile->partial_symtabs->static_psymbols.size ()\n-\t\t\t- pst->statics_offset);\n+  pst->globals_offset = objfile->partial_symtabs->global_psymbols.size ();\n+  pst->statics_offset = objfile->partial_symtabs->static_psymbols.size ();\n+\n+  auto *current_global_psymbols\n+    = objfile->partial_symtabs->current_global_psymbols.back ();\n+  auto *current_static_psymbols\n+    = objfile->partial_symtabs->current_static_psymbols.back ();\n+  objfile->partial_symtabs->current_global_psymbols.pop_back ();\n+  objfile->partial_symtabs->current_static_psymbols.pop_back ();\n+\n+  pst->n_global_syms\n+    = current_global_psymbols->size ();\n+  pst->n_static_syms\n+    = current_static_psymbols->size ();\n+\n+  concat (&objfile->partial_symtabs->global_psymbols, current_global_psymbols);\n+  concat (&objfile->partial_symtabs->static_psymbols, current_static_psymbols);\n+\n+  delete current_global_psymbols;\n+  delete current_static_psymbols;\n \n   sort_pst_symbols (objfile, pst);\n }\n@@ -1621,8 +1649,8 @@ add_psymbol_to_list (gdb::string_view name, bool copy_name,\n   /* Save pointer to partial symbol in psymtab, growing symtab if needed.  */\n   std::vector<partial_symbol *> *list\n     = (where == psymbol_placement::STATIC\n-       ? &objfile->partial_symtabs->static_psymbols\n-       : &objfile->partial_symtabs->global_psymbols);\n+       ? objfile->partial_symtabs->current_static_psymbols.back ()\n+       : objfile->partial_symtabs->current_global_psymbols.back ());\n   append_psymbol_to_list (list, psym, objfile);\n }\n "
    },
    {
      "sha": "e8bafbe4338f8cd32e79fea653b17704708331b5",
      "filename": "gdb/psymtab.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96c7f873945c31bb0f9facd526bfe6dac74d3ccb/gdb/psymtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96c7f873945c31bb0f9facd526bfe6dac74d3ccb/gdb/psymtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.h?ref=96c7f873945c31bb0f9facd526bfe6dac74d3ccb",
      "patch": "@@ -129,6 +129,12 @@ class psymtab_storage\n   std::vector<partial_symbol *> global_psymbols;\n   std::vector<partial_symbol *> static_psymbols;\n \n+  /* Stack of vectors of partial symbols, using during psymtab\n+     initialization.  */\n+\n+  std::vector<std::vector<partial_symbol *>*> current_global_psymbols;\n+  std::vector<std::vector<partial_symbol *>*> current_static_psymbols;\n+\n private:\n \n   /* The obstack where allocations are made.  This is lazily allocated"
    },
    {
      "sha": "97f891c99a397eb135409d799c8e153fab02f6d7",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96c7f873945c31bb0f9facd526bfe6dac74d3ccb/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96c7f873945c31bb0f9facd526bfe6dac74d3ccb/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=96c7f873945c31bb0f9facd526bfe6dac74d3ccb",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-13  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/25646\n+\t* gdb.dwarf2/imported-unit.exp: Add test.\n+\n 2020-03-13  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.mi/mi-sym-info-2.c (another_char_t, another_short_t): New typedef."
    },
    {
      "sha": "80d66283572342e2eec5717f11dc3a043931d786",
      "filename": "gdb/testsuite/gdb.dwarf2/imported-unit.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96c7f873945c31bb0f9facd526bfe6dac74d3ccb/gdb/testsuite/gdb.dwarf2/imported-unit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96c7f873945c31bb0f9facd526bfe6dac74d3ccb/gdb/testsuite/gdb.dwarf2/imported-unit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/imported-unit.exp?ref=96c7f873945c31bb0f9facd526bfe6dac74d3ccb",
      "patch": "@@ -149,6 +149,19 @@ if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n \n gdb_test_no_output \"set language c++\"\n \n+# Verify that the partial symtab for the unit importing the partial unit does\n+# not contain the static partial symbol int, which is defined in the partial\n+# unit.  Test-case for PR25646.\n+gdb_test \"main print psymbols\" \\\n+    [multi_line \\\n+\t \"  Depends on 1 other partial symtabs\\.\" \\\n+\t \"\\[^\\r\\n\\]*\" \\\n+\t \"  Global partial symbols:\" \\\n+\t \"    `main', function, $hex\" \\\n+\t \"\" \\\n+\t \".*\"] \\\n+    \"no static partial symbols in importing unit\"\n+\n # Sanity check\n gdb_test \"ptype main\" \"= int \\\\(void\\\\)\"\n "
    }
  ]
}