{
  "sha": "e777225bfd79e0667ba7105f1f9f8375a6abc034",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTc3NzIyNWJmZDc5ZTA2NjdiYTcxMDVmMWY5ZjgzNzVhNmFiYzAzNA==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-03T14:38:12Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-10-13T21:34:26Z"
    },
    "message": "gdb/testsuite/: Use \"-qualified\" in explicit \"break main\", etc.\n\nSimilar to the previous patch, but this time add \"-q\" to tests that do\n\"break main\", \"list main\", etc. explicitly.\n\ngdb/testsuite/ChangeLog:\n\n\t* config/monitor.exp: Use \"list -q\".\n\t* gdb.arch/gdb1558.exp: Use \"break -q\".\n\t* gdb.arch/i386-permbkpt.exp: Use \"break -q\".\n\t* gdb.arch/i386-prologue-skip-cf-protection.exp: Use \"break -q\".\n\t* gdb.base/break.exp: Use \"break -q\", \"list -q\" and \"tbreak -q\".\n\t* gdb.base/commands.exp: Use \"break -q\".\n\t* gdb.base/condbreak.exp: Use \"break -q\".\n\t* gdb.base/ctf-ptype.exp: Use \"list -q\".\n\t* gdb.base/define.exp: Use \"break -q\".\n\t* gdb.base/del.exp: Use \"break -q\".\n\t* gdb.base/fullname.exp: Use \"break -q\".\n\t* gdb.base/hbreak-in-shr-unsupported.exp: Use \"hbreak -q\".\n\t* gdb.base/hbreak-unmapped.exp: Use \"hbreak -q\".\n\t* gdb.base/hbreak2.exp: Use \"hbreak -q\" and \"list -q\".\n\t* gdb.base/hw-sw-break-same-address.exp: Use \"break -q\" and\n\t\"hbreak -q\".\n\t* gdb.base/included.exp: Use \"list -q\".\n\t* gdb.base/label.exp: Use \"break -q\".\n\t* gdb.base/lineinc.exp: Use \"break -q\".\n\t* gdb.base/list.exp: Use \"list -q\".\n\t* gdb.base/macscp.exp: Use \"list -q\".\n\t* gdb.base/pending.exp: Use \"break -q\".\n\t* gdb.base/prologue-include.exp: Use \"break -q\".\n\t* gdb.base/ptype.exp: Use \"list -q\".\n\t* gdb.base/sepdebug.exp: Use \"break -q\", \"list -q\" and \"tbreak -q\".\n\t* gdb.base/server-del-break.exp: Use \"break -q\".\n\t* gdb.base/style.exp: Use \"break -q\".\n\t* gdb.base/symbol-without-target_section.exp: Use \"list -q\".\n\t* gdb.base/watchpoint-reuse-slot.exp: Use \"hbreak -q\".\n\t* gdb.cp/exception.exp: Use \"tbreak -q\".\n\t* gdb.dwarf2/dw2-error.exp: Use \"break -q\".\n\t* gdb.dwarf2/fission-mix.exp: Use \"break -q\".\n\t* gdb.dwarf2/fission-reread.exp: Use \"break -q\".\n\t* gdb.dwarf2/pr13961.exp: Use \"break -q\".\n\t* gdb.linespec/explicit.exp: Use \"list -q\".\n\t* gdb.linespec/linespec.exp: Use \"break -q\".\n\t* gdb.mi/mi-simplerun.exp: Use \"--qualified\".\n\t* gdb.python/py-mi-objfile-gdb.py: Use \"list -q\".\n\t* gdb.server/bkpt-other-inferior.exp: Use \"break -q\".\n\t* gdb.server/connect-without-multi-process.exp: Use \"break -q\".\n\t* gdb.trace/change-loc.exp: Use \"break -q\".\n\t* gdb.trace/pending.exp: Use \"break -q\".\n\t* gdb.tui/basic.exp: Use \"list -q\".\n\t* gdb.tui/list-before.exp: Use \"list -q\".\n\t* gdb.tui/list.exp: Use \"list -q\".\n\t* lib/gdb.exp (gdb_has_argv0): Use \"break -q\".\n\nChange-Id: Iab9408e90ed71cbb111cd737d2d81b5ba8adb108",
    "tree": {
      "sha": "149fbcfabf99b4f3297989c8c0c47fa897acd290",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/149fbcfabf99b4f3297989c8c0c47fa897acd290"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e777225bfd79e0667ba7105f1f9f8375a6abc034",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e777225bfd79e0667ba7105f1f9f8375a6abc034",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e777225bfd79e0667ba7105f1f9f8375a6abc034",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e777225bfd79e0667ba7105f1f9f8375a6abc034/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8abd8ee8c878f52469896c716732a974e6abeebe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8abd8ee8c878f52469896c716732a974e6abeebe",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8abd8ee8c878f52469896c716732a974e6abeebe"
    }
  ],
  "stats": {
    "total": 215,
    "additions": 132,
    "deletions": 83
  },
  "files": [
    {
      "sha": "a6b16a094f847a38e6c5640746721a5787303e25",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -1,3 +1,52 @@\n+2020-10-13  Pedro Alves  <pedro@palves.net>\n+\n+\t* config/monitor.exp: Use \"list -q\".\n+\t* gdb.arch/gdb1558.exp: Use \"break -q\".\n+\t* gdb.arch/i386-permbkpt.exp: Use \"break -q\".\n+\t* gdb.arch/i386-prologue-skip-cf-protection.exp: Use \"break -q\".\n+\t* gdb.base/break.exp: Use \"break -q\", \"list -q\" and \"tbreak -q\".\n+\t* gdb.base/commands.exp: Use \"break -q\".\n+\t* gdb.base/condbreak.exp: Use \"break -q\".\n+\t* gdb.base/ctf-ptype.exp: Use \"list -q\".\n+\t* gdb.base/define.exp: Use \"break -q\".\n+\t* gdb.base/del.exp: Use \"break -q\".\n+\t* gdb.base/fullname.exp: Use \"break -q\".\n+\t* gdb.base/hbreak-in-shr-unsupported.exp: Use \"hbreak -q\".\n+\t* gdb.base/hbreak-unmapped.exp: Use \"hbreak -q\".\n+\t* gdb.base/hbreak2.exp: Use \"hbreak -q\" and \"list -q\".\n+\t* gdb.base/hw-sw-break-same-address.exp: Use \"break -q\" and\n+\t\"hbreak -q\".\n+\t* gdb.base/included.exp: Use \"list -q\".\n+\t* gdb.base/label.exp: Use \"break -q\".\n+\t* gdb.base/lineinc.exp: Use \"break -q\".\n+\t* gdb.base/list.exp: Use \"list -q\".\n+\t* gdb.base/macscp.exp: Use \"list -q\".\n+\t* gdb.base/pending.exp: Use \"break -q\".\n+\t* gdb.base/prologue-include.exp: Use \"break -q\".\n+\t* gdb.base/ptype.exp: Use \"list -q\".\n+\t* gdb.base/sepdebug.exp: Use \"break -q\", \"list -q\" and \"tbreak -q\".\n+\t* gdb.base/server-del-break.exp: Use \"break -q\".\n+\t* gdb.base/style.exp: Use \"break -q\".\n+\t* gdb.base/symbol-without-target_section.exp: Use \"list -q\".\n+\t* gdb.base/watchpoint-reuse-slot.exp: Use \"hbreak -q\".\n+\t* gdb.cp/exception.exp: Use \"tbreak -q\".\n+\t* gdb.dwarf2/dw2-error.exp: Use \"break -q\".\n+\t* gdb.dwarf2/fission-mix.exp: Use \"break -q\".\n+\t* gdb.dwarf2/fission-reread.exp: Use \"break -q\".\n+\t* gdb.dwarf2/pr13961.exp: Use \"break -q\".\n+\t* gdb.linespec/explicit.exp: Use \"list -q\".\n+\t* gdb.linespec/linespec.exp: Use \"break -q\".\n+\t* gdb.mi/mi-simplerun.exp: Use \"--qualified\".\n+\t* gdb.python/py-mi-objfile-gdb.py: Use \"list -q\".\n+\t* gdb.server/bkpt-other-inferior.exp: Use \"break -q\".\n+\t* gdb.server/connect-without-multi-process.exp: Use \"break -q\".\n+\t* gdb.trace/change-loc.exp: Use \"break -q\".\n+\t* gdb.trace/pending.exp: Use \"break -q\".\n+\t* gdb.tui/basic.exp: Use \"list -q\".\n+\t* gdb.tui/list-before.exp: Use \"list -q\".\n+\t* gdb.tui/list.exp: Use \"list -q\".\n+\t* lib/gdb.exp (gdb_has_argv0): Use \"break -q\".\n+\n 2020-10-13  Pedro Alves  <pedro@palves.net>\n \n \t* gdb.base/ui-redirect.exp: Expect \"break -qualified main\" in"
    },
    {
      "sha": "fb0736c582c62daab3d25fdcbbd7e01604b526dd",
      "filename": "gdb/testsuite/config/monitor.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/config/monitor.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/config/monitor.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/config/monitor.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -169,7 +169,7 @@ proc gdb_load { arg } {\n \t    }\n \t    if { $state == \"pass\" } {\n \t\tif [gdb_target_monitor $arg] { return -1 }\n-\t\tgdb_test \"list main\" \".*\" \"\"\n+\t\tgdb_test \"list -q main\" \".*\" \"\"\n \t\tverbose \"Loaded $arg into $GDB\\n\"\n \t\treturn 0\n \t    }"
    },
    {
      "sha": "9748e2e9b3928fb1f5516cfde18e42038e1120d3",
      "filename": "gdb/testsuite/gdb.arch/gdb1558.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.arch/gdb1558.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.arch/gdb1558.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/gdb1558.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -41,9 +41,9 @@ gdb_start\n gdb_reinitialize_dir $srcdir/$subdir\n gdb_load ${binfile}\n \n-gdb_test \"b main\" \"Breakpoint 1.*\" \"set breakpoint at main\"\n-gdb_test \"b sub1\" \"Breakpoint 2.*\" \"set breakpoint at sub1\"\n-gdb_test \"b sub2\" \"Breakpoint 3.*\" \"set breakpoint at sub2\"\n+gdb_test \"b -q main\" \"Breakpoint 1.*\" \"set breakpoint at main\"\n+gdb_test \"b -q sub1\" \"Breakpoint 2.*\" \"set breakpoint at sub1\"\n+gdb_test \"b -q sub2\" \"Breakpoint 3.*\" \"set breakpoint at sub2\"\n \n # We can't use \"runto_main\" because that is exactly the problem\n # we are trying to detect, stopping somewhere before main."
    },
    {
      "sha": "7dc2a87d771ec607ec25ae9fc31faf5988789537",
      "filename": "gdb/testsuite/gdb.arch/i386-permbkpt.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.arch/i386-permbkpt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.arch/i386-permbkpt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/i386-permbkpt.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -35,5 +35,5 @@ if { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable [list\n \n clean_restart ${binfile}\n \n-gdb_test \"break main\" \"\" \"first permanent break\"\n-gdb_test \"break main\" \"\" \"second permanent break\"\n+gdb_test \"break -q main\" \"\" \"first permanent break\"\n+gdb_test \"break -q main\" \"\" \"second permanent break\""
    },
    {
      "sha": "c38c7ce7e7cf710f878feb9e591ed4c874cb51be",
      "filename": "gdb/testsuite/gdb.arch/i386-prologue-skip-cf-protection.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.arch/i386-prologue-skip-cf-protection.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.arch/i386-prologue-skip-cf-protection.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/i386-prologue-skip-cf-protection.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -48,7 +48,7 @@ gdb_assert {$main_addr != -1}\n set bp_addr -1\n \n # Put breakpoint on main, get the address where the breakpoint was installed.\n-gdb_test_multiple \"break main\" \"break on main, get address\" {\n+gdb_test_multiple \"break -q main\" \"break on main, get address\" {\n     -re -wrap \"Breakpoint $decimal at ($hex).*\" {\n \tset bp_addr $expect_out(1,string)\n "
    },
    {
      "sha": "ee77d84a443db59ae2c3b8f6350f6c0df0bb2fc6",
      "filename": "gdb/testsuite/gdb.base/break.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/break.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/break.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/break.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -47,7 +47,7 @@ gdb_expect {\n #\n # test break at function\n #\n-gdb_test \"break main\" \\\n+gdb_test \"break -q main\" \\\n     \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n     \"breakpoint function\"\n \n@@ -76,7 +76,7 @@ set bp_location1 [gdb_get_line_number \"set breakpoint 1 here\"]\n # it's wherever the processor was stopped when we connected to the\n # board.  So, to be sure, we do a list command.\n #\n-gdb_test \"list main\" \\\n+gdb_test \"list -q main\" \\\n     \".*main \\\\(int argc, char \\\\*\\\\*argv, char \\\\*\\\\*envp\\\\).*\" \\\n     \"use `list' to establish default source file\"\n gdb_test \"break $bp_location1\" \\\n@@ -426,7 +426,7 @@ delete_breakpoints\n # test temporary breakpoint at function\n #\n \n-gdb_test \"tbreak main\" \"Temporary breakpoint.*at.* file .*$srcfile, line.*\" \"temporary breakpoint function\"\n+gdb_test \"tbreak -q main\" \"Temporary breakpoint.*at.* file .*$srcfile, line.*\" \"temporary breakpoint function\"\n \n #\n # test break at function in file\n@@ -759,7 +759,7 @@ if { [prepare_for_testing \"failed to prepare\" \"breako2\" {break.c break1.c} {debu\n #\n # test break at function\n #\n-gdb_test \"break main\" \\\n+gdb_test \"break -q main\" \\\n     \"Breakpoint.*at.* file .*, line.*\" \\\n     \"breakpoint function, optimized file\"\n "
    },
    {
      "sha": "7ff57f774af04318db0dbc8e41c9a188b80e6116",
      "filename": "gdb/testsuite/gdb.base/commands.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/commands.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/commands.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/commands.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -289,7 +289,7 @@ proc_with_prefix breakpoint_clear_command_test {} {\n     delete_breakpoints\n     gdb_test \"break factorial\" \"Breakpoint.*at.*\"\n     gdb_test_no_output \"set \\$bpnumfactorial = \\$bpnum\"\n-    gdb_test \"break main\" \"Breakpoint.*at.*\"\n+    gdb_test \"break -q main\" \"Breakpoint.*at.*\"\n     gdb_test_no_output \"set \\$bpnummain = \\$bpnum\"\n \n     gdb_test \\\n@@ -873,7 +873,7 @@ proc_with_prefix if_commands_test {} {\n \n     set test \"if_commands_test 1\"\n     gdb_test_no_prompt \"if \\$tem == 2\" { >} $test\n-    gdb_test_no_prompt \"break main\" { >} $test\n+    gdb_test_no_prompt \"break -q main\" { >} $test\n     gdb_test_no_prompt \"else\" { >} $test\n     gdb_test_no_prompt \"break factorial\" { >} $test\n     gdb_test_no_prompt \"commands\" {  >} $test\n@@ -899,7 +899,7 @@ proc_with_prefix if_commands_test {} {\n \n     set test \"if_commands_test 2\"\n     gdb_test_no_prompt \"if \\$tem == 1\" { >} $test\n-    gdb_test_no_prompt \"break main\" { >} $test\n+    gdb_test_no_prompt \"break -q main\" { >} $test\n     gdb_test_no_prompt \"else\" { >} $test\n     gdb_test_no_prompt \"break factorial\" { >} $test\n     gdb_test_no_prompt \"commands\" {  >} $test"
    },
    {
      "sha": "05c90c3004045d1414c088d2ba8064fb5e5d178e",
      "filename": "gdb/testsuite/gdb.base/condbreak.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/condbreak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/condbreak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/condbreak.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -45,7 +45,7 @@ set bp_location17 [gdb_get_line_number \"set breakpoint 17 here\" $srcfile2]\n #\n # test break at function\n #\n-gdb_test \"break main\" \\\n+gdb_test \"break -q main\" \\\n     \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n     \"breakpoint function\"\n \n@@ -182,9 +182,9 @@ gdb_test_multiple \"continue\" \"run until breakpoint at marker2\" {\n }\n \n # Test combinations of conditional and thread-specific breakpoints.\n-gdb_test \"break main if (1==1) thread 999\" \\\n+gdb_test \"break -q main if (1==1) thread 999\" \\\n     \"Unknown thread 999\\\\.\"\n-gdb_test \"break main thread 999 if (1==1)\" \\\n+gdb_test \"break -q main thread 999 if (1==1)\" \\\n     \"Unknown thread 999\\\\.\"\n \n # Verify that both if and thread can be distinguished from a breakpoint"
    },
    {
      "sha": "b123f9b1ddd7777e6a13570591fb031414a51422",
      "filename": "gdb/testsuite/gdb.base/ctf-ptype.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/ctf-ptype.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/ctf-ptype.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/ctf-ptype.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -95,7 +95,7 @@ gdb_test \"ptype enum colors\" \"type = enum colors \\{yellow, purple, pink\\}.*\" \"pt\n #\n gdb_test \"ptype boolean\" \"type = enum (boolean |)\\{FALSE, TRUE\\}.*\" \"ptype unnamed typedef'd enumeration\"\n \n-gdb_test \"list main\" \".*\"\n+gdb_test \"list -q main\" \".*\"\n \n # Same thing with struct and union.\n gdb_test \"ptype t_struct3\" \"type = struct (t_struct3 |)\\{.*"
    },
    {
      "sha": "002bd47fcb80e5005535ce6e45bba657c55b4f1c",
      "filename": "gdb/testsuite/gdb.base/define.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/define.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/define.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/define.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -179,7 +179,7 @@ with_test_prefix \"command abbreviations in define\" {\n       -re \"Type commands for definition of \\\"breakmain\\\".\\r\\nEnd with a line saying just \\\"end\\\".\\r\\n>$\" {\n \t  pass \"$test\"\n \t  set test \"send body of breakmain\"\n-\t  gdb_test_multiple \"break main\\ncommand\\necho\\nend\\nend\" \"$test\"  {\n+\t  gdb_test_multiple \"break -q main\\ncommand\\necho\\nend\\nend\" \"$test\"  {\n \t      -re \"$gdb_prompt $\"\\\n \t\t  {pass \"$test\"}\n \t  }"
    },
    {
      "sha": "3cb43c461870e9c7203f56cc7f15f7e613f2d8fe",
      "filename": "gdb/testsuite/gdb.base/del.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/del.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/del.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/del.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -42,7 +42,7 @@ proc test_delete_alias { alias } {\n     # Now, insert a breakpoint at an easy location, and then remove it\n     # using $alias. We verified that the removal worked by checking\n     # the list of breakpoints.\n-    gdb_test \"break main\" \\\n+    gdb_test \"break -q main\" \\\n              \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n              \"breakpoint insertion ($alias)\"\n     "
    },
    {
      "sha": "8ef5ca973737fb570c2b2f689a01cef346cc78c5",
      "filename": "gdb/testsuite/gdb.base/fullname.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/fullname.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/fullname.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/fullname.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -59,7 +59,7 @@ if { [gdb_breakpoint [standard_output_file tmp-${srcfile}]:${line} {no-message}]\n     fail $msg\n }\n \n-gdb_test \"break main\" \\\n+gdb_test \"break -q main\" \\\n \t \"Breakpoint.*at.*line.*\" \"set breakpoint at main - built absolute\"\n \n set msg \"set breakpoint by full path after loading symbols - built absolute\"\n@@ -86,7 +86,7 @@ if { [gdb_breakpoint [standard_output_file tmp-${srcfile}]:${line} {no-message}]\n     fail $msg\n }\n \n-gdb_test \"break main\" \\\n+gdb_test \"break -q main\" \\\n \t \"Breakpoint.*at.*line.*\" \"set breakpoint at main - built relative\"\n \n set msg \"set breakpoint by full path after loading symbols - built relative\"\n@@ -119,7 +119,7 @@ if { [gdb_breakpoint [standard_output_file tmp-${srcfile}]:${line} {no-message}]\n     fail $msg\n }\n \n-gdb_test \"break main\" \\\n+gdb_test \"break -q main\" \\\n \t \"Breakpoint.*at.*line.*\" \"set breakpoint at main - built other\"\n \n set msg \"set breakpoint by full path after loading symbols - built other\""
    },
    {
      "sha": "c1865e816f0c870524d6b8336148833d07dca50e",
      "filename": "gdb/testsuite/gdb.base/hbreak-in-shr-unsupported.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/hbreak-in-shr-unsupported.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/hbreak-in-shr-unsupported.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/hbreak-in-shr-unsupported.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -70,7 +70,7 @@ if {$is_target_remote} {\n set cant_insert_hbreak 0\n set supports_hbreak 0\n set test \"probe hbreak support\"\n-gdb_test_multiple \"hbreak main\" $test {\n+gdb_test_multiple \"hbreak -q main\" $test {\n     -re \"No hardware breakpoint support in the target.*$gdb_prompt $\" {\n \tpass $test\n     }"
    },
    {
      "sha": "64482b7a9dbe1145ca88d91a1340fb01bb979370",
      "filename": "gdb/testsuite/gdb.base/hbreak-unmapped.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/hbreak-unmapped.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/hbreak-unmapped.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/hbreak-unmapped.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -40,7 +40,7 @@ delete_breakpoints\n \n set supports_hbreak 0\n set test \"probe hardware breakpoint support\"\n-gdb_test_multiple \"hbreak main\" $test {\n+gdb_test_multiple \"hbreak -q main\" $test {\n     -re \"No hardware breakpoint support in the target.*$gdb_prompt $\" {\n \tpass $test\n     }"
    },
    {
      "sha": "9a0ef08e52c9ea22b5fb76e7a48bfe5ef09a7232",
      "filename": "gdb/testsuite/gdb.base/hbreak2.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/hbreak2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/hbreak2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/hbreak2.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -31,7 +31,7 @@ delete_breakpoints\n #\n # Test whether the target supports hardware breakpoints at all.\n #\n-gdb_test_multiple \"hbreak main\" \"hardware breakpoint support\" {\n+gdb_test_multiple \"hbreak -q main\" \"hardware breakpoint support\" {\n     -re \"No hardware breakpoint support in the target.*$gdb_prompt $\" {\n \tunsupported \"hardware breakpoints\"\n \treturn\n@@ -63,7 +63,7 @@ delete_breakpoints\n #\n # Test break at function.\n #\n-gdb_test \"hbreak main\" \\\n+gdb_test \"hbreak -q main\" \\\n     \"Hardware assisted breakpoint.*at.* file .*$srcfile, line.*\" \\\n     \"hardware breakpoint function\"\n delete_breakpoints\n@@ -95,7 +95,7 @@ set bp_location1 [gdb_get_line_number \"set breakpoint 1 here\"]\n # it's wherever the processor was stopped when we connected to the\n # board.  So, to be sure, we do a list command.\n #\n-gdb_test \"list main\" \\\n+gdb_test \"list -q main\" \\\n     \".*main \\\\(int argc, char ..argv, char ..envp\\\\).*\" \\\n     \"use `list' to establish default source file\"\n gdb_test \"hbreak $bp_location1\" \\\n@@ -145,7 +145,7 @@ delete_breakpoints\n #\n # Run until the breakpoint at main is hit.  For non-stubs-using targets.\n #\n-gdb_test \"hbreak main\" \\\n+gdb_test \"hbreak -q main\" \\\n     \"Hardware assisted breakpoint.*at.* file .*$srcfile, line.*\" \\\n     \"hardware breakpoint function (2)\"\n gdb_run_cmd\n@@ -233,7 +233,7 @@ delete_breakpoints\n # Test temporary breakpoint at function.\n #\n \n-gdb_test \"thbreak main\" \\\n+gdb_test \"thbreak -q main\" \\\n     \"Hardware assisted breakpoint.*at.* file .*$srcfile, line.*\" \\\n     \"temporary hardware breakpoint function\"\n delete_breakpoints\n@@ -520,7 +520,7 @@ delete_breakpoints\n #\n # Test break at function.\n #\n-gdb_test \"hbreak main\" \\\n+gdb_test \"hbreak -q main\" \\\n     \"Hardware assisted breakpoint.*at.* file .*, line.*\" \\\n     \"hardware breakpoint function, optimized file\"\n "
    },
    {
      "sha": "cbc74be5d22406c29b2da8045cd03977c1424f66",
      "filename": "gdb/testsuite/gdb.base/hw-sw-break-same-address.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/hw-sw-break-same-address.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/hw-sw-break-same-address.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/hw-sw-break-same-address.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -42,11 +42,11 @@ gdb_test_no_output \"set confirm off\"\n # Test inserting a hw breakpoint first, then a sw breakpoint at the\n # same address.\n with_test_prefix \"hw-sw\" {\n-    gdb_test \"hbreak main\" \\\n+    gdb_test \"hbreak -q main\" \\\n \t\"Hardware assisted breakpoint .* at .*\" \\\n \t\"hbreak\"\n \n-    gdb_test \"break main\" \\\n+    gdb_test \"break -q main\" \\\n \t\"Note: breakpoint .* also set at .*\\r\\nBreakpoint .* at .*\" \\\n \t\"break\"\n \n@@ -61,11 +61,11 @@ with_test_prefix \"hw-sw\" {\n # Now the opposite: test inserting a sw breakpoint first, then a hw\n # breakpoint at the same address.\n with_test_prefix \"sw-hw\" {\n-    gdb_test \"break main\" \\\n+    gdb_test \"break -q main\" \\\n \t\"Breakpoint .* at .*\" \\\n \t\"break\"\n \n-    gdb_test \"hbreak main\" \\\n+    gdb_test \"hbreak -q main\" \\\n \t\"Note: breakpoint .* also set at .*\\r\\nHardware assisted breakpoint .* at .*\" \\\n \t\"hbreak\"\n "
    },
    {
      "sha": "d35a6abb54eb7e42c4519cf6f69ac067c96bad67",
      "filename": "gdb/testsuite/gdb.base/included.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/included.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/included.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/included.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -20,7 +20,7 @@ if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile debug]} {\n \n gdb_test_no_output \"set listsize 1\"\n \n-gdb_test \"list main\" \".*\"\n+gdb_test \"list -q main\" \".*\"\n get_debug_format\n set non_dwarf [expr ! [test_debug_format \"DWARF 2\"]]\n "
    },
    {
      "sha": "83c336c3dc001ab09679de325ab8d536e0c51dd8",
      "filename": "gdb/testsuite/gdb.base/label.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/label.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/label.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/label.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -29,11 +29,11 @@ if {![runto_main]} {\n   return -1\n }\n \n-gdb_test \"break here\" \\\n+gdb_test \"break -q here\" \\\n   \"Breakpoint.*at.*\" \\\n   \"breakpoint here\"\n \n-gdb_test \"break main:there\" \\\n+gdb_test \"break -q main:there\" \\\n   \"Breakpoint.*at.*\" \\\n   \"breakpoint there\"\n "
    },
    {
      "sha": "4f357690f511cdb083832c16fe60fbfdd2405c14",
      "filename": "gdb/testsuite/gdb.base/lineinc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/lineinc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/lineinc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/lineinc.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -90,7 +90,7 @@ clean_restart ${binfile}\n # Any command that causes GDB to read the debugging info for the\n # lineinc.c compilation unit will do here.\n set test_name \"tolerate macro info with multiple #inclusions per line\"\n-gdb_test_multiple \"break main\" $test_name {\n+gdb_test_multiple \"break -q main\" $test_name {\n     -re \"Breakpoint 1 at 0x.*: file .*lineinc.c.*\\\\.\\r\\n${gdb_prompt}\" {\n         pass $test_name\n     }"
    },
    {
      "sha": "b7d0e98978d2ae3d727729d1785a87849e0a0873",
      "filename": "gdb/testsuite/gdb.base/list.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/list.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/list.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/list.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -195,16 +195,16 @@ proc test_list_function {} {\n     # gcc appears to generate incorrect debugging information for code\n     # in include files, which breaks this test.\n     # SunPRO cc is the second case below, it's also correct.\n-    gdb_test \"list main\" \"(5\\[ \\t\\]+int x;.*8\\[ \\t\\]+foo \\[(\\]+.*\\[)\\]+;|1\\[ \\t\\]+#include .*7\\[ \\t\\]+x = 0;)\" \"list function in source file 1\"\n+    gdb_test \"list -q main\" \"(5\\[ \\t\\]+int x;.*8\\[ \\t\\]+foo \\[(\\]+.*\\[)\\]+;|1\\[ \\t\\]+#include .*7\\[ \\t\\]+x = 0;)\" \"list function in source file 1\"\n \n     # Ultrix gdb takes the second case below; it's also correct.\n     # SunPRO cc is the third case.\n-    gdb_test \"list bar\" \"(4\\[ \\t\\]+void.*\\[ \\t\\]*long_line.*;.*bar.*9\\[ \\t\\]*.*|1\\[ \\t\\]+void.*8\\[ \\t\\]+\\}|1\\[ \\t\\]+void.*7\\[ \\t\\]*long_line ..;|7\\[ \\t\\]+void.*14\\[ \\t\\]+\\})\" \"list function in source file 2\"\n+    gdb_test \"list -q bar\" \"(4\\[ \\t\\]+void.*\\[ \\t\\]*long_line.*;.*bar.*9\\[ \\t\\]*.*|1\\[ \\t\\]+void.*8\\[ \\t\\]+\\}|1\\[ \\t\\]+void.*7\\[ \\t\\]*long_line ..;|7\\[ \\t\\]+void.*14\\[ \\t\\]+\\})\" \"list function in source file 2\"\n \n     # Test \"list function\" for C include file\n     # Ultrix gdb is the second case, still correct.\n     # SunPRO cc is the third case.\n-    gdb_test \"list foo\" \"(3\\[ \\t\\]+.*12\\[ \\t\\]+bar \\[(\\]+.*\\[)\\]+;|2\\[ \\t\\]+including file.*11\\[ \\t\\]+bar \\[(\\]+.*\\[)\\]+;|1\\[ \\t\\]+/. An include file.*10\\[ \\t\\]+bar \\[(\\]+.*\\[)\\]+;)\" \"list function in include file\"\n+    gdb_test \"list -q foo\" \"(3\\[ \\t\\]+.*12\\[ \\t\\]+bar \\[(\\]+.*\\[)\\]+;|2\\[ \\t\\]+including file.*11\\[ \\t\\]+bar \\[(\\]+.*\\[)\\]+;|1\\[ \\t\\]+/. An include file.*10\\[ \\t\\]+bar \\[(\\]+.*\\[)\\]+;)\" \"list function in include file\"\n }\n \n proc test_list_forward {} {"
    },
    {
      "sha": "1ecb4b80e4cc467880025603a699872e0bbd0d89",
      "filename": "gdb/testsuite/gdb.base/macscp.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/macscp.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/macscp.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/macscp.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -193,7 +193,7 @@ proc list_and_check_macro {func macro expected} {\n     return [check_macro $macro $expected \"after `list $func'\"]\n }\n \n-gdb_test \"list main\" \".*main.*\" \"list main for support check\"\n+gdb_test \"list -q main\" \".*main.*\" \"list main for support check\"\n set macro_support \"unknown\"\n gdb_test_multiple \"info source\" \"test macro information\"  {\n     -re \"Includes preprocessor macro info\\..*$gdb_prompt $\" {"
    },
    {
      "sha": "cb9e4f2158ebe038014b652947dddd3ba599d8c4",
      "filename": "gdb/testsuite/gdb.base/pending.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/pending.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/pending.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/pending.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -102,7 +102,7 @@ gdb_test \"info break\" \\\n \n set mainline [gdb_get_line_number \"break main here\"]\n \n-gdb_test \"break main\" \\\n+gdb_test \"break -q main\" \\\n     \"Breakpoint.*at.* file .*$srcfile, line $mainline.*\" \\\n     \"breakpoint function\"\n "
    },
    {
      "sha": "483c366772968b171780e89cabffb5d102d3e3b1",
      "filename": "gdb/testsuite/gdb.base/prologue-include.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/prologue-include.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/prologue-include.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/prologue-include.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -21,6 +21,6 @@ if { [prepare_for_testing \"failed to prepare\" ${testfile}] } {\n \n set bp_main [gdb_get_line_number \"break main\" ${testfile}.h]\n \n-gdb_test \"break main\" \\\n+gdb_test \"break -q main\" \\\n     \"Breakpoint.*at.* file .*$testfile.h, line $bp_main\\\\.\" \\\n     \"breakpoint main\""
    },
    {
      "sha": "16d29376047495a4bb365e89cf655cefde2ef152",
      "filename": "gdb/testsuite/gdb.base/ptype.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/ptype.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/ptype.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/ptype.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -116,7 +116,7 @@ if {!$gcc_compiled} {\n }\n \n # For get_debug_format to do its job, we need to have a current source file.\n-gdb_test \"list main\" \".*\"\n+gdb_test \"list -q main\" \".*\"\n get_debug_format\n gdb_test \"whatis v_boolean\" \"type = (enum |)boolean\" \\\n   \"whatis unnamed typedef'd enum (compiler bug in IBM's xlc)\""
    },
    {
      "sha": "502c664d95c9b72d6b2ec59e397cf26fdca83867",
      "filename": "gdb/testsuite/gdb.base/sepdebug.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/sepdebug.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/sepdebug.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/sepdebug.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -81,14 +81,14 @@ if { $gdb_file_cmd_debug_info != \"debug\" } then {\n #\n # test break at function\n #\n-gdb_test \"break main\" \\\n+gdb_test \"break -q main\" \\\n     \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n     \"breakpoint function\"\n \n #\n # test break at quoted function\n #\n-gdb_test \"break \\\"marker2\\\"\" \\\n+gdb_test \"break -q \\\"marker2\\\"\" \\\n     \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n     \"breakpoint quoted function\"\n \n@@ -110,7 +110,7 @@ set bp_location1 [gdb_get_line_number \"set breakpoint 1 here\"]\n # it's wherever the processor was stopped when we connected to the\n # board.  So, to be sure, we do a list command.\n #\n-gdb_test \"list main\" \\\n+gdb_test \"list -q main\" \\\n     \".*main \\\\(int argc, char \\\\*\\\\*argv, char \\\\*\\\\*envp\\\\).*\" \\\n     \"use `list' to establish default source file\"\n gdb_test \"break $bp_location1\" \\\n@@ -227,7 +227,7 @@ delete_breakpoints\n # test temporary breakpoint at function\n #\n \n-gdb_test \"tbreak main\" \"Temporary breakpoint.*at.* file .*$srcfile, line.*\" \"temporary breakpoint function\"\n+gdb_test \"tbreak -q main\" \"Temporary breakpoint.*at.* file .*$srcfile, line.*\" \"temporary breakpoint function\"\n \n #\n # test break at function in file\n@@ -569,7 +569,7 @@ proc test_different_dir {type test_different_dir xfail} {\n \tif {$xfail} {\n \t    setup_xfail \"*-*-*\"\n \t}\n-\tgdb_test \"break main\" \\\n+\tgdb_test \"break -q main\" \\\n \t    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n \t    \"breakpoint function, optimized file\"\n "
    },
    {
      "sha": "7467092eaa307d05fd2c61ff206c9742b4e3537c",
      "filename": "gdb/testsuite/gdb.base/server-del-break.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/server-del-break.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/server-del-break.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/server-del-break.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -24,7 +24,7 @@ if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile debug]} {\n     return -1\n }\n \n-gdb_test \"break main\" \\\n+gdb_test \"break -q main\" \\\n          \"Breakpoint.*at.* file .*$srcfile, line .*\"\n \n # Try deleting all breakpoints, using the \"server\" command prefix."
    },
    {
      "sha": "28c270591bab491a5eb72c2399eb250b9d5853a3",
      "filename": "gdb/testsuite/gdb.base/style.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/style.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/style.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/style.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -63,7 +63,7 @@ save_vars { env(TERM) } {\n \t\"frame without styling\"\n     gdb_test_no_output \"set style sources on\"\n \n-    gdb_test \"break main\" \"file $base_file_expr.*\"\n+    gdb_test \"break -q main\" \"file $base_file_expr.*\"\n \n     gdb_test \"print &main\" \" = .* [style $hex address] <$main_expr>\"\n "
    },
    {
      "sha": "af0797e1fb64da8e79d0c34b2739eb88d046f116",
      "filename": "gdb/testsuite/gdb.base/symbol-without-target_section.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/symbol-without-target_section.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/symbol-without-target_section.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/symbol-without-target_section.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -16,7 +16,7 @@\n # Exploit formerly failed assertion in scan_dyntag when it got called for\n # objfile having \".dynamic\" section but without having data loaded in target.\n # Such file is ${binmainfile} through add-symbol-file here.  Set context first\n-# by \"list main\" to have some local BLOCK set in lookup_symbol_global.\n+# by \"list -q main\" to have some local BLOCK set in lookup_symbol_global.\n \n standard_testfile start.c .c\n set binlibfile ${testfile}.x\n@@ -35,5 +35,5 @@ gdb_test \"add-symbol-file [standard_output_file ${testfile}] 0\" \\\n     \"Reading symbols from .*\" \\\n     \"add-symbol-file\" \\\n     \"add symbol table from file \\\".*\\\" at.*\\\\(y or n\\\\) \" \"y\"\n-gdb_test \"list main\"\n+gdb_test \"list -q main\"\n gdb_test \"print symbol_without_target_section\""
    },
    {
      "sha": "61ad83db55f0be86af04d8d9efbc2e4eaaca8b59",
      "filename": "gdb/testsuite/gdb.base/watchpoint-reuse-slot.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/watchpoint-reuse-slot.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.base/watchpoint-reuse-slot.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/watchpoint-reuse-slot.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -118,7 +118,7 @@ proc build_cmds_list {} {\n     }\n \n     set test \"hbreak\"\n-    gdb_test_multiple \"hbreak main\" $test {\n+    gdb_test_multiple \"hbreak -q main\" $test {\n \t-re \"You may have requested too many.*$gdb_prompt $\" {\n \t    unsupported $test\n \t}"
    },
    {
      "sha": "ce038d083e4ccf6b16ba4f469d57cfd30cd49a9b",
      "filename": "gdb/testsuite/gdb.cp/exception.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.cp/exception.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.cp/exception.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/exception.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -73,7 +73,7 @@ gdb_test_multiple \"info breakpoints\" $name {\n       }\n }\n \n-gdb_test \"tbreak main\" \"Temporary breakpoint 4.*\" \\\n+gdb_test \"tbreak -q main\" \"Temporary breakpoint 4.*\" \\\n     \"Set temporary breakpoint at main\"\n \n set ok 0"
    },
    {
      "sha": "53d6339dee75be89c2387eb2019255785b917a0a",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-error.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.dwarf2/dw2-error.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.dwarf2/dw2-error.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-error.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -45,4 +45,4 @@ gdb_test \"file $binfile\" \\\n     \"file $testfile\"\n \n # Now check that we can still break given the minimal symbol.\n-gdb_test \"break main\" \"Breakpoint $decimal.*\"\n+gdb_test \"break -q main\" \"Breakpoint $decimal.*\""
    },
    {
      "sha": "cede8cb84a180c1eabe1f76811ae99bca34c9a7b",
      "filename": "gdb/testsuite/gdb.dwarf2/fission-mix.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.dwarf2/fission-mix.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.dwarf2/fission-mix.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/fission-mix.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -37,7 +37,7 @@ if {[gdb_compile \"$objfile $objfile2\" $binfile executable {debug}] != \"\" } {\n \n clean_restart $binfile\n \n-gdb_test \"break main\" \"Breakpoint .*\"\n+gdb_test \"break -q main\" \"Breakpoint .*\"\n \n # Bug 15691: gdb would crash here on an assert violation.\n # The debug info for the TU for \"struct s\" has already been read,"
    },
    {
      "sha": "1994ad7a5997290cb14a263e02862d19531315a8",
      "filename": "gdb/testsuite/gdb.dwarf2/fission-reread.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.dwarf2/fission-reread.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.dwarf2/fission-reread.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/fission-reread.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -45,7 +45,7 @@ gdb_test_no_output \"set debug-file-directory [file dirname $binfile]\" \\\n     \"set debug-file-directory\"\n gdb_load $binfile\n \n-gdb_test \"break main\" \"Breakpoint.*at.*\"\n+gdb_test \"break -q main\" \"Breakpoint.*at.*\"\n \n gdb_test \"ptype baz\" \"type = class foo {.*\"\n "
    },
    {
      "sha": "69d6aa17a41d4c2def4ea341a9924700556b2c79",
      "filename": "gdb/testsuite/gdb.dwarf2/pr13961.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.dwarf2/pr13961.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.dwarf2/pr13961.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/pr13961.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -32,7 +32,7 @@ if { [prepare_for_testing \"failed to prepare\" ${testfile} ${srcfile} \\\n     return -1\n }\n \n-gdb_test \"break main\" \"Breakpoint.*at.*\"\n+gdb_test \"break -q main\" \"Breakpoint.*at.*\"\n \n # If we get this far gdb didn't crash.\n pass $testfile"
    },
    {
      "sha": "e9ccbbb74030017bd87558ace83db74130ec232e",
      "filename": "gdb/testsuite/gdb.linespec/explicit.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.linespec/explicit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.linespec/explicit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.linespec/explicit.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -611,15 +611,15 @@ namespace eval $testfile {\n \n     # Test explicit \"ranges.\"  Make sure that using explicit\n     # locations doesn't alter the expected outcome.\n-    gdb_test \"list main\" \".*\" \"list main 1\"\n+    gdb_test \"list -q main\" \".*\" \"list main 1\"\n     set list_result [capture_command_output \"list -,+\" \"\"]\n-    gdb_test \"list main\" \".*\" \"list main 2\"\n+    gdb_test \"list -q main\" \".*\" \"list main 2\"\n     gdb_test \"list -line -,-line +\" [string_to_regexp $list_result]\n \n     # Ditto for the reverse (except that no output is expected).\n-    gdb_test \"list myfunction\" \".*\" \"list myfunction 1\"\n+    gdb_test \"list -q myfunction\" \".*\" \"list myfunction 1\"\n     gdb_test_no_output \"list +,-\"\n-    gdb_test \"list myfunction\" \".*\" \"list myfunction 2\"\n+    gdb_test \"list -q myfunction\" \".*\" \"list myfunction 2\"\n     gdb_test_no_output \"list -line +, -line -\"\n }\n "
    },
    {
      "sha": "d82fc7cdd047974ff9421698c9836dfebcfa1076",
      "filename": "gdb/testsuite/gdb.linespec/linespec.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.linespec/linespec.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.linespec/linespec.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.linespec/linespec.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -213,6 +213,6 @@ gdb_test \"file $binfile\" \\\n     \"Reading symbols from .*\" \\\n     \"set the new inferior file for linespec tests\"\n \n-gdb_test \"break main\" \\\n-    \"Breakpoint \\[0-9\\]+ at $hex: main. .2 locations.\" \\\n+gdb_test \"break -q main\" \\\n+    \"Breakpoint \\[0-9\\]+ at $hex: -qualified main. .2 locations.\" \\\n     \"set breakpoint at main in both inferiors\""
    },
    {
      "sha": "2838c07c6275ea47b4a53c103d9a5a82b4ed588d",
      "filename": "gdb/testsuite/gdb.mi/mi-simplerun.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.mi/mi-simplerun.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.mi/mi-simplerun.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-simplerun.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -65,7 +65,7 @@ proc test_breakpoints_creation_and_listing {} {\n     # -break-info\n \n     set bps {}\n-    lappend bps [mi_create_breakpoint \"main\" \\\n+    lappend bps [mi_create_breakpoint \"--qualified main\" \\\n \t\t     \"break-insert operation\" \\\n \t\t     -number 1 -func main -file \".*basics.c\" \\\n \t\t     -line $line_main_body]"
    },
    {
      "sha": "5266fa2adefa0991e162bc85ac214fc3dfce76a6",
      "filename": "gdb/testsuite/gdb.python/py-mi-objfile-gdb.py",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.python/py-mi-objfile-gdb.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.python/py-mi-objfile-gdb.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-mi-objfile-gdb.py?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -23,4 +23,4 @@\n # parameter change notification.\n gdb.execute(\"set width 101\", to_string=True)\n # And finally a command that will use the console stream without redirection\n-gdb.execute(\"list main\")\n+gdb.execute(\"list -q main\")"
    },
    {
      "sha": "5ff0513ecf31b5b543e750c7b4305089049ef437",
      "filename": "gdb/testsuite/gdb.server/bkpt-other-inferior.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.server/bkpt-other-inferior.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.server/bkpt-other-inferior.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/bkpt-other-inferior.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -79,11 +79,11 @@ foreach inf_sel {1 2} {\n \t    \"switch to inferior\"\n \n \tset test \"set breakpoint\"\n-\tgdb_test_multiple \"break main\" $test {\n+\tgdb_test_multiple \"break -q main\" $test {\n \t    -re \"Sending packet.*$gdb_prompt $\" {\n \t\tfail $test\n \t    }\n-\t    -re \"^break main\\r\\nBreakpoint .* at .*$gdb_prompt $\" {\n+\t    -re \"^break -q main\\r\\nBreakpoint .* at .*$gdb_prompt $\" {\n \t\tpass $test\n \t    }\n \t}"
    },
    {
      "sha": "7e3579f087a7413cdc5df46133573e7dd14054af",
      "filename": "gdb/testsuite/gdb.server/connect-without-multi-process.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.server/connect-without-multi-process.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.server/connect-without-multi-process.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/connect-without-multi-process.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -45,7 +45,7 @@ proc do_test {multiprocess} {\n     set gdbserver_protocol [lindex $res 0]\n     set gdbserver_gdbport [lindex $res 1]\n \n-    gdb_test \"break main\" \"Breakpoint .*\"\n+    gdb_test \"break -q main\" \"Breakpoint .*\"\n \n     gdb_test \"target $gdbserver_protocol $gdbserver_gdbport\" \\\n \t\"Remote debugging using .*\" \\"
    },
    {
      "sha": "8cb8cc66af81f015f277feb9c3762011296aae5c",
      "filename": "gdb/testsuite/gdb.trace/change-loc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.trace/change-loc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.trace/change-loc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.trace/change-loc.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -214,7 +214,7 @@ proc tracepoint_change_loc_2 { trace_type } {\n \t    \"tracepoint with one location\"\n \n \tset main_bp 0\n-\tgdb_test_multiple \"break main\" \"set breakpoint on main\" {\n+\tgdb_test_multiple \"break -q main\" \"set breakpoint on main\" {\n \t    -re \"Breakpoint (\\[0-9\\]*) at .*, line.*$gdb_prompt $\" {\n \t\tset main_bp $expect_out(1,string)\n \t    }"
    },
    {
      "sha": "c817bafff30e86ee57326ca6982c9c33fce18db5",
      "filename": "gdb/testsuite/gdb.trace/pending.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.trace/pending.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.trace/pending.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.trace/pending.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -90,7 +90,7 @@ proc pending_tracepoint_resolved { trace_type } {\n \n \tgdb_load ${binfile}\n \n-\tgdb_test \"break main\" \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n+\tgdb_test \"break -q main\" \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n \t    \"breakpoint function\"\n \n \tgdb_run_cmd\n@@ -132,7 +132,7 @@ proc pending_tracepoint_works { trace_type } {\n \t    \"single pending tracepoint info\"\n \n \t# Run to main which should resolve a pending tracepoint\n-\tgdb_test \"break main\" \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n+\tgdb_test \"break -q main\" \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n \t    \"breakpoint function\"\n \tgdb_run_cmd\n \tgdb_test \"\" \"Breakpoint 2, main.*\""
    },
    {
      "sha": "e334848602d5aded562129c534618cfac19e9e1a",
      "filename": "gdb/testsuite/gdb.tui/basic.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.tui/basic.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.tui/basic.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/basic.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -33,8 +33,8 @@ set text [Term::get_all_lines]\n gdb_assert {![string match \"No Source Available\" $text]} \\\n     \"initial source listing\"\n \n-Term::command \"list main\"\n-Term::check_contents \"list main\" \"21 *return 0\"\n+Term::command \"list -q main\"\n+Term::check_contents \"list -q main\" \"21 *return 0\"\n \n # Get the first source line.\n set line [Term::get_line 1]"
    },
    {
      "sha": "3969516d95ce01a8fa63e514156b1512c2763ea8",
      "filename": "gdb/testsuite/gdb.tui/list-before.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.tui/list-before.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.tui/list-before.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/list-before.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -25,7 +25,7 @@ if {[build_executable \"failed to prepare\" ${testfile} ${srcfile}] == -1} {\n \n Term::clean_restart 24 80 $testfile\n \n-gdb_test \"list main\"\n+gdb_test \"list -q main\"\n \n if {![Term::enter_tui]} {\n     unsupported \"TUI not supported\""
    },
    {
      "sha": "a31c912428ae9309b13bd0acaf58e588e839b16a",
      "filename": "gdb/testsuite/gdb.tui/list.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.tui/list.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/gdb.tui/list.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/list.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -34,9 +34,9 @@ Term::check_contents \"initial source listing\" \"21 *return 0\"\n Term::command \"layout asm\"\n Term::check_contents \"asm window shows main\" \"$hex <main>\"\n \n-Term::command \"list main\"\n-Term::check_contents \"list main\" \"21 *return 0\"\n-# The following 'focus next' must be immediately after 'list main' to\n-# ensure that GDB has a valid idea of what is currently focused.\n+Term::command \"list -q main\"\n+Term::check_contents \"list -q main\" \"21 *return 0\"\n+# The following 'focus next' must be immediately after 'list -q main'\n+# to ensure that GDB has a valid idea of what is currently focused.\n Term::command \"focus next\"\n Term::check_contents \"focus next\" \"Focus set to cmd window\""
    },
    {
      "sha": "63ba8008c3d4df7fb50c5949290710dd592ebc7f",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e777225bfd79e0667ba7105f1f9f8375a6abc034/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=e777225bfd79e0667ba7105f1f9f8375a6abc034",
      "patch": "@@ -5942,7 +5942,7 @@ gdb_caching_proc gdb_has_argv0 {\n \tgdb_load \"$exe\"\n \n \t# Set breakpoint on main.\n-\tgdb_test_multiple \"break main\" \"break main\" {\n+\tgdb_test_multiple \"break -q main\" \"break -q main\" {\n \t    -re \"Breakpoint.*${gdb_prompt} $\" {\n \t    }\n \t    -re \"${gdb_prompt} $\" {"
    }
  ]
}