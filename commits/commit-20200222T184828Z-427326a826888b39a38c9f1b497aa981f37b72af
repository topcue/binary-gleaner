{
  "sha": "427326a826888b39a38c9f1b497aa981f37b72af",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDI3MzI2YTgyNjg4OGIzOWEzOGM5ZjFiNDk3YWE5ODFmMzdiNzJhZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:26Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:28Z"
    },
    "message": "Simplify TUI C-x 2 binding\n\nThe TUI \"C-x 2\" binding tries to switch to a different layout based on\nthe current layout.  Once user-defined layouts are available, this\nwon't really make sense.  I wasn't entirely sure how to handle this.\n\nThis patch changes the binding to simply cycle through the existing\nlayouts.  I considered this a reasonable, though not ideal,\ncompromise.\n\ngdb/ChangeLog\n2020-02-22  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui.c (tui_rl_change_windows): Call tui_next_layout.\n\t* tui/tui-layout.h (tui_next_layout): Declare.\n\t* tui/tui-layout.c (tui_next_layout): New function.\n\nChange-Id: Ic101f0e3831a4235a048b3090ef60f025f7449bb",
    "tree": {
      "sha": "6add38d94856d4c2677f41b60b42be8d6b68ee26",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6add38d94856d4c2677f41b60b42be8d6b68ee26"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/427326a826888b39a38c9f1b497aa981f37b72af",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/427326a826888b39a38c9f1b497aa981f37b72af",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/427326a826888b39a38c9f1b497aa981f37b72af",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/427326a826888b39a38c9f1b497aa981f37b72af/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3fe12b6d67182a81d2ffabbfe405fb5ffc0694b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3fe12b6d67182a81d2ffabbfe405fb5ffc0694b2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3fe12b6d67182a81d2ffabbfe405fb5ffc0694b2"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 18,
    "deletions": 36
  },
  "files": [
    {
      "sha": "4ab0309dc2a08451235ac820789e120d1c8fa181",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/427326a826888b39a38c9f1b497aa981f37b72af/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/427326a826888b39a38c9f1b497aa981f37b72af/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=427326a826888b39a38c9f1b497aa981f37b72af",
      "patch": "@@ -1,3 +1,9 @@\n+2020-02-22  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui.c (tui_rl_change_windows): Call tui_next_layout.\n+\t* tui/tui-layout.h (tui_next_layout): Declare.\n+\t* tui/tui-layout.c (tui_next_layout): New function.\n+\n 2020-02-22  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-regs.c (tui_data_window::display_registers_from): Use"
    },
    {
      "sha": "6a998e8b7d10bc03c4e251a27944fbe77e21bd3c",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/427326a826888b39a38c9f1b497aa981f37b72af/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/427326a826888b39a38c9f1b497aa981f37b72af/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=427326a826888b39a38c9f1b497aa981f37b72af",
      "patch": "@@ -278,6 +278,13 @@ tui_layout_command (const char *layout_name, int from_tty)\n   tui_set_layout (new_layout);\n }\n \n+/* See tui-layout.h.  */\n+\n+void\n+tui_next_layout ()\n+{\n+  tui_layout_command (\"next\", 0);\n+}\n \n static void\n extract_display_start_addr (struct gdbarch **gdbarch_p, CORE_ADDR *addr_p)"
    },
    {
      "sha": "7e4b7b7a816771a6615f754f6ff34fd0ad6d185e",
      "filename": "gdb/tui/tui-layout.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/427326a826888b39a38c9f1b497aa981f37b72af/gdb/tui/tui-layout.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/427326a826888b39a38c9f1b497aa981f37b72af/gdb/tui/tui-layout.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.h?ref=427326a826888b39a38c9f1b497aa981f37b72af",
      "patch": "@@ -181,6 +181,9 @@ extern void tui_add_win_to_layout (enum tui_win_type);\n \n extern void tui_set_layout (enum tui_layout_type);\n \n+/* Switch to the next layout.  */\n+extern void tui_next_layout ();\n+\n /* Apply the current layout.  */\n extern void tui_apply_current_layout ();\n "
    },
    {
      "sha": "74bf32d53b724abfb96feb4e8862851241191461",
      "filename": "gdb/tui/tui.c",
      "status": "modified",
      "additions": 2,
      "deletions": 36,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/427326a826888b39a38c9f1b497aa981f37b72af/gdb/tui/tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/427326a826888b39a38c9f1b497aa981f37b72af/gdb/tui/tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.c?ref=427326a826888b39a38c9f1b497aa981f37b72af",
      "patch": "@@ -140,50 +140,16 @@ tui_rl_switch_mode (int notused1, int notused2)\n /* TUI readline command.\n    Change the TUI layout to show a next layout.\n    This function is bound to CTRL-X 2.  It is intended to provide\n-   a functionality close to the Emacs split-window command.  We\n-   always show two windows (src+asm), (src+regs) or (asm+regs).  */\n+   a functionality close to the Emacs split-window command.  */\n static int\n tui_rl_change_windows (int notused1, int notused2)\n {\n   if (!tui_active)\n     tui_rl_switch_mode (0 /* notused */, 0 /* notused */);\n \n   if (tui_active)\n-    {\n-      enum tui_layout_type new_layout;\n-\n-      new_layout = tui_current_layout ();\n-\n-      /* Select a new layout to have a rolling layout behavior with\n-\t always two windows (except when undefined).  */\n-      switch (new_layout)\n-\t{\n-\tcase SRC_COMMAND:\n-\t  new_layout = SRC_DISASSEM_COMMAND;\n-\t  break;\n-\n-\tcase DISASSEM_COMMAND:\n-\t  new_layout = SRC_DISASSEM_COMMAND;\n-\t  break;\n-\n-\tcase SRC_DATA_COMMAND:\n-\t  new_layout = SRC_DISASSEM_COMMAND;\n-\t  break;\n-\n-\tcase SRC_DISASSEM_COMMAND:\n-\t  new_layout = DISASSEM_DATA_COMMAND;\n-\t  break;\n-\t  \n-\tcase DISASSEM_DATA_COMMAND:\n-\t  new_layout = SRC_DATA_COMMAND;\n-\t  break;\n+    tui_next_layout ();\n \n-\tdefault:\n-\t  new_layout = SRC_COMMAND;\n-\t  break;\n-\t}\n-      tui_set_layout (new_layout);\n-    }\n   return 0;\n }\n "
    }
  ]
}