{
  "sha": "14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTRmYThmYjMwNzNkZmRiODczNmNjZjZiZGU2NTcyZDhiMjI2YzRjZg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-07-22T13:02:30Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-07-28T09:27:53Z"
    },
    "message": "gdb: Add a find method for RegisterDescriptorIterator\n\nAdds a new method 'find' to the gdb.RegisterDescriptorIterator class,\nthis allows gdb.RegisterDescriptor objects to be looked up directly by\nregister name rather than having to iterate over all registers.\n\nThis will be of use for a later commit.\n\nI've documented the new function in the manual, but I don't think a\nNEWS entry is required here, as, since the last release, the whole\nregister descriptor mechanism is new, and is already mentioned in the\nNEWS file.\n\ngdb/ChangeLog:\n\n\t* python/py-registers.c: Add 'user-regs.h' include.\n\t(register_descriptor_iter_find): New function.\n\t(register_descriptor_iterator_object_methods): New static global\n\tmethods array.\n\t(register_descriptor_iterator_object_type): Add pointer to methods\n\tarray.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.python/py-arch-reg-names.exp: Add additional tests.\n\ngdb/doc/ChangeLog:\n\n\t* python.texi (Registers In Python): Document new find function.",
    "tree": {
      "sha": "714047412271f8f7fb8e557f918c2fab03713fe9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/714047412271f8f7fb8e557f918c2fab03713fe9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "67411cbf63a0e841ac6801bf59c854fed8b8dd80",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/67411cbf63a0e841ac6801bf59c854fed8b8dd80",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/67411cbf63a0e841ac6801bf59c854fed8b8dd80"
    }
  ],
  "stats": {
    "total": 85,
    "additions": 84,
    "deletions": 1
  },
  "files": [
    {
      "sha": "106dfcdac816d58969e07d4e40c571b7c1458cf3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf",
      "patch": "@@ -1,3 +1,12 @@\n+2020-07-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* python/py-registers.c: Add 'user-regs.h' include.\n+\t(register_descriptor_iter_find): New function.\n+\t(register_descriptor_iterator_object_methods): New static global\n+\tmethods array.\n+\t(register_descriptor_iterator_object_type): Add pointer to methods\n+\tarray.\n+\n 2020-07-27  John Baldwin  <jhb@FreeBSD.org>\n \n \t* fbsd-nat.h: Include <osreldate.h>.  Define USE_SIGTRAP_SIGINFO"
    },
    {
      "sha": "1074511bcbb4e99bcb40180b9edb2cd9105299d0",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf",
      "patch": "@@ -1,3 +1,7 @@\n+2020-07-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* python.texi (Registers In Python): Document new find function.\n+\n 2020-07-22  Kevin Buettner  <kevinb@redhat.com>\n \n \t* gdb.texinfo (Maintenance Commands): Add documentation for"
    },
    {
      "sha": "c9dc1ff3b7145c181143ffb2d3215a9698c80309",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf",
      "patch": "@@ -5755,6 +5755,15 @@ A @code{gdb.RegisterDescriptor} has the following read-only properties:\n The name of this register.\n @end defvar\n \n+It is also possible to lookup a register descriptor based on its name\n+using the following @code{gdb.RegisterDescriptorIterator} function:\n+\n+@defun RegisterDescriptorIterator.find (@var{name})\n+Takes @var{name} as an argument, which must be a string, and returns a\n+@code{gdb.RegisterDescriptor} for the register with that name, or\n+@code{None} if there is no register with that name.\n+@end defun\n+\n Python code can also request from a @code{gdb.Architecture}\n information about the set of register groups available on a given\n architecture"
    },
    {
      "sha": "fffe3ecb1e6476232596326f678b9093e30abd0a",
      "filename": "gdb/python/py-registers.c",
      "status": "modified",
      "additions": 43,
      "deletions": 1,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/gdb/python/py-registers.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/gdb/python/py-registers.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-registers.c?ref=14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf",
      "patch": "@@ -23,6 +23,7 @@\n #include \"disasm.h\"\n #include \"reggroups.h\"\n #include \"python-internal.h\"\n+#include \"user-regs.h\"\n #include <unordered_map>\n \n /* Token to access per-gdbarch data related to register descriptors.  */\n@@ -337,6 +338,38 @@ gdbpy_register_descriptor_iter_next (PyObject *self)\n   while (true);\n }\n \n+/* Implement:\n+\n+   gdb.RegisterDescriptorIterator.find (self, name) -> gdb.RegisterDescriptor\n+\n+   Look up a descriptor for register with NAME.  If no matching register is\n+   found then return None.  */\n+\n+static PyObject *\n+register_descriptor_iter_find (PyObject *self, PyObject *args, PyObject *kw)\n+{\n+  static const char *keywords[] = { \"name\", NULL };\n+  const char *register_name = NULL;\n+\n+  register_descriptor_iterator_object *iter_obj\n+    = (register_descriptor_iterator_object *) self;\n+  struct gdbarch *gdbarch = iter_obj->gdbarch;\n+\n+  if (!gdb_PyArg_ParseTupleAndKeywords (args, kw, \"s\", keywords,\n+\t\t\t\t\t&register_name))\n+    return NULL;\n+\n+  if (register_name != NULL && *register_name != '\\0')\n+    {\n+      int regnum = user_reg_map_name_to_regnum (gdbarch, register_name,\n+\t\t\t\t\t\tstrlen (register_name));\n+      if (regnum >= 0)\n+\treturn gdbpy_get_register_descriptor (gdbarch, regnum).release ();\n+    }\n+\n+  Py_RETURN_NONE;\n+}\n+\n /* Initializes the new Python classes from this file in the gdb module.  */\n \n int\n@@ -377,6 +410,15 @@ gdbpy_initialize_registers ()\n \t   (PyObject *) &register_descriptor_iterator_object_type));\n }\n \n+static PyMethodDef register_descriptor_iterator_object_methods [] = {\n+  { \"find\", (PyCFunction) register_descriptor_iter_find,\n+    METH_VARARGS | METH_KEYWORDS,\n+    \"registers (name) -> gdb.RegisterDescriptor.\\n\\\n+Return a register descriptor for the register NAME, or None if no register\\n\\\n+with that name exists in this iterator.\" },\n+  {NULL}  /* Sentinel */\n+};\n+\n PyTypeObject register_descriptor_iterator_object_type = {\n   PyVarObject_HEAD_INIT (NULL, 0)\n   \"gdb.RegisterDescriptorIterator\",\t  \t/*tp_name*/\n@@ -405,7 +447,7 @@ PyTypeObject register_descriptor_iterator_object_type = {\n   0,\t\t\t\t  /*tp_weaklistoffset */\n   gdbpy_register_descriptor_iter,\t  /*tp_iter */\n   gdbpy_register_descriptor_iter_next,  /*tp_iternext */\n-  0\t\t\t\t  /*tp_methods */\n+  register_descriptor_iterator_object_methods\t\t/*tp_methods */\n };\n \n static gdb_PyGetSetDef gdbpy_register_descriptor_getset[] = {"
    },
    {
      "sha": "a4b8dfeb8da2d5ba72a19048ad22f07de989ca87",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf",
      "patch": "@@ -1,3 +1,7 @@\n+2020-07-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.python/py-arch-reg-names.exp: Add additional tests.\n+\n 2020-07-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \tPR fortran/23051"
    },
    {
      "sha": "891da1b6af5ebaf85ce800807e3a77532afca4e4",
      "filename": "gdb/testsuite/gdb.python/py-arch-reg-names.exp",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/gdb/testsuite/gdb.python/py-arch-reg-names.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf/gdb/testsuite/gdb.python/py-arch-reg-names.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-arch-reg-names.exp?ref=14fa8fb3073dfdb8736ccf6bde6572d8b226c4cf",
      "patch": "@@ -104,3 +104,18 @@ gdb_py_test_silent_cmd \\\n \t \"    raise gdb.GdbError (\\\"miss-matched objects\\\")\" \\\n \t \"\\004\" ] \\\n     \"check names and objects match\" 1\n+\n+# Ensure that the '.find' method on the iterator returns the same\n+# Python object as we got from the iterator's list of descriptors.\n+gdb_py_test_silent_cmd \\\n+    [multi_line \\\n+\t \"python\" \\\n+\t \"def check_regs (arch, regs):\" \\\n+\t \"   for r in (regs):\" \\\n+\t \"     if (arch.registers ().find (r.name) != r):\" \\\n+\t \"       raise gdb.GdbError (\\\"object miss-match\\\")\" \\\n+\t \"end\" ] \\\n+    \"build check_obj function\" 0\n+gdb_py_test_silent_cmd \\\n+    \"python check_regs (arch, arch.registers (\\\"general\\\"))\" \\\n+    \"ensure find gets expected descriptors\" 1"
    }
  ]
}