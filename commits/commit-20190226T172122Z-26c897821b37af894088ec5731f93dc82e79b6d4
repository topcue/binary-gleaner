{
  "sha": "26c897821b37af894088ec5731f93dc82e79b6d4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjZjODk3ODIxYjM3YWY4OTQwODhlYzU3MzFmOTNkYzgyZTc5YjZkNA==",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-02-17T00:33:47Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-02-26T17:21:22Z"
    },
    "message": "Define unique_ptr specialization for Py_buffer.\n\nThis patch causes PyBuffer_Release() to be called when the associated\nbuffer goes out of scope.  I've been using it as follows:\n\n ...\n Py_buffer_up buffer_up;\n Py_buffer py_buf;\n\n if (PyObject_CheckBuffer (obj)\n     && PyObject_GetBuffer (obj, &py_buf, PyBUF_SIMPLE) == 0)\n   {\n      /* Got a buffer, py_buf, out of obj.  Cause it to released\n         when it goes out of scope.  */\n     buffer_up.reset (&py_buf);\n   }\n   ...\n\nThis snippet of code was taken directly from an upcoming patch to\npython-value.c.\n\ngdb/ChangeLog:\n\n\t* python/python-internal.h (Py_buffer_deleter): New struct.\n\t(Py_buffer_up): New typedef.",
    "tree": {
      "sha": "b183358632ec4c6816525b0da8473c2f505f0f6c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b183358632ec4c6816525b0da8473c2f505f0f6c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/26c897821b37af894088ec5731f93dc82e79b6d4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26c897821b37af894088ec5731f93dc82e79b6d4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/26c897821b37af894088ec5731f93dc82e79b6d4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26c897821b37af894088ec5731f93dc82e79b6d4/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c31307f9c5022205aaf2dff591457ac8b5c1342d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c31307f9c5022205aaf2dff591457ac8b5c1342d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c31307f9c5022205aaf2dff591457ac8b5c1342d"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 18,
    "deletions": 0
  },
  "files": [
    {
      "sha": "f311a24618b0390754a156e82e2c79368ece367b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26c897821b37af894088ec5731f93dc82e79b6d4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26c897821b37af894088ec5731f93dc82e79b6d4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=26c897821b37af894088ec5731f93dc82e79b6d4",
      "patch": "@@ -1,3 +1,8 @@\n+2019-02-26  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* python/python-internal.h (Py_buffer_deleter): New struct.\n+\t(Py_buffer_up): New typedef.\n+\n 2019-02-25  John Baldwin  <jhb@FreeBSD.org>\n \n \t* dwarf2read.c (dwarf2_get_dwz_file): Reset dwz_bfd to nullptr"
    },
    {
      "sha": "d11af83c8e557a1c0fd347b955c0e12e1f3291a8",
      "filename": "gdb/python/python-internal.h",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26c897821b37af894088ec5731f93dc82e79b6d4/gdb/python/python-internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26c897821b37af894088ec5731f93dc82e79b6d4/gdb/python/python-internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python-internal.h?ref=26c897821b37af894088ec5731f93dc82e79b6d4",
      "patch": "@@ -801,4 +801,17 @@ struct varobj;\n struct varobj_iter *py_varobj_get_iterator (struct varobj *var,\n \t\t\t\t\t    PyObject *printer);\n \n+/* Deleter for Py_buffer unique_ptr specialization.  */\n+\n+struct Py_buffer_deleter\n+{\n+  void operator() (Py_buffer *b) const\n+  {\n+    PyBuffer_Release (b);\n+  }\n+};\n+\n+/* A unique_ptr specialization for Py_buffer.  */\n+typedef std::unique_ptr<Py_buffer, Py_buffer_deleter> Py_buffer_up;\n+\n #endif /* PYTHON_PYTHON_INTERNAL_H */"
    }
  ]
}