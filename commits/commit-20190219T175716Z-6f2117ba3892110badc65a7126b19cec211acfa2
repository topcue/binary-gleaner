{
  "sha": "6f2117ba3892110badc65a7126b19cec211acfa2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmYyMTE3YmEzODkyMTEwYmFkYzY1YTcxMjZiMTljZWMyMTFhY2ZhMg==",
  "commit": {
    "author": {
      "name": "Paul Hua",
      "email": "paul.hua.gm@gmail.com",
      "date": "2019-02-19T17:57:16Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-02-19T17:57:16Z"
    },
    "message": "Fix a potential deadlock in some older Loongson 3A1000 MIPS processors.\n\n\t* NEWS: Mention -m[no-]fix-loongson3-llsc.\n\t* configure.ac: Add --enable-mips-fix-loongson3-llsc.\n\tDefine DEFAULT_MIPS_FIX_LOONGSON3_LLSC.\n\t* config.in: Regenerated.\n\t* configure: Likewise.\n\t* config/tc-mips.c (sync_insn, mips_fix_loongson3_llsc):\n\tNew variables.\n\t(options): New OPTION_FIX_LOONGSON3_LLSC,\n\tOPTION_NO_FIX_LOONGSON3_LLSC.\n\t(md_longopts): Add -m[no-]fix-loongson3-llsc.\n\t(md_begin): Initialize sync insn.\n\t(fix_loongson3_llsc): New.\n\t(append_insn): Call fix_loongson3_llsc.\n\t(md_parse_option): Handle OPTION_FIX_LOONGSON3_LLSC,\n\tOPTION_NO_FIX_LOONGSON3_LLSC.\n\t(md_show_usage): Display -m[no-]fix-loongson3-llsc.\n\t* doc/c-mips.texi: Document -m[no-]fix-loongson3-llsc,\n\t--enable-mips-fix-loongson3-llsc=[yes|no].",
    "tree": {
      "sha": "de74092f7e459a02ee1c1c04a2907250d2597650",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/de74092f7e459a02ee1c1c04a2907250d2597650"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6f2117ba3892110badc65a7126b19cec211acfa2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f2117ba3892110badc65a7126b19cec211acfa2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6f2117ba3892110badc65a7126b19cec211acfa2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f2117ba3892110badc65a7126b19cec211acfa2/comments",
  "author": {
    "login": "ChenghuaXu",
    "id": 87753117,
    "node_id": "MDQ6VXNlcjg3NzUzMTE3",
    "avatar_url": "https://avatars.githubusercontent.com/u/87753117?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ChenghuaXu",
    "html_url": "https://github.com/ChenghuaXu",
    "followers_url": "https://api.github.com/users/ChenghuaXu/followers",
    "following_url": "https://api.github.com/users/ChenghuaXu/following{/other_user}",
    "gists_url": "https://api.github.com/users/ChenghuaXu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ChenghuaXu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ChenghuaXu/subscriptions",
    "organizations_url": "https://api.github.com/users/ChenghuaXu/orgs",
    "repos_url": "https://api.github.com/users/ChenghuaXu/repos",
    "events_url": "https://api.github.com/users/ChenghuaXu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ChenghuaXu/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "179f2db0d9c397d7dd8a59907b84208b79f7f48c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/179f2db0d9c397d7dd8a59907b84208b79f7f48c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/179f2db0d9c397d7dd8a59907b84208b79f7f48c"
    }
  ],
  "stats": {
    "total": 342,
    "additions": 285,
    "deletions": 57
  },
  "files": [
    {
      "sha": "2a4f194814444775eee019e94a16e0e26e805740",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f2117ba3892110badc65a7126b19cec211acfa2/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f2117ba3892110badc65a7126b19cec211acfa2/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=6f2117ba3892110badc65a7126b19cec211acfa2",
      "patch": "@@ -1,3 +1,24 @@\n+2019-02-19  Paul Hua  <paul.hua.gm@gmail.com>\n+\n+\t* NEWS: Mention -m[no-]fix-loongson3-llsc.\n+\t* configure.ac: Add --enable-mips-fix-loongson3-llsc.\n+\tDefine DEFAULT_MIPS_FIX_LOONGSON3_LLSC.\n+\t* config.in: Regenerated.\n+\t* configure: Likewise.\n+\t* config/tc-mips.c (sync_insn, mips_fix_loongson3_llsc):\n+\tNew variables.\n+\t(options): New OPTION_FIX_LOONGSON3_LLSC,\n+\tOPTION_NO_FIX_LOONGSON3_LLSC.\n+\t(md_longopts): Add -m[no-]fix-loongson3-llsc.\n+\t(md_begin): Initialize sync insn.\n+\t(fix_loongson3_llsc): New.\n+\t(append_insn): Call fix_loongson3_llsc.\n+\t(md_parse_option): Handle OPTION_FIX_LOONGSON3_LLSC,\n+\tOPTION_NO_FIX_LOONGSON3_LLSC.\n+\t(md_show_usage): Display -m[no-]fix-loongson3-llsc.\n+\t* doc/c-mips.texi: Document -m[no-]fix-loongson3-llsc,\n+\t--enable-mips-fix-loongson3-llsc=[yes|no].\n+\n 2019-02-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR gas/24165"
    },
    {
      "sha": "3903c383c191428f0e39cf4a036d8d6243e2552f",
      "filename": "gas/NEWS",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f2117ba3892110badc65a7126b19cec211acfa2/gas/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f2117ba3892110badc65a7126b19cec211acfa2/gas/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/NEWS?ref=6f2117ba3892110badc65a7126b19cec211acfa2",
      "patch": "@@ -1,5 +1,10 @@\n -*- text -*-\n \n+* For MIPS, Add -m[no-]fix-loongson3-llsc option to fix (or not) Loongson3 LLSC\n+  Errata.  Add a --enable-mips-fix-loongson3-llsc=[yes|no] configure time option\n+  to set the default behavior. Set the default if the configure option is not used\n+  to \"no\".\n+\n Changes in 2.32:\n \n * Add -mvexwig=[0|1] option to x86 assembler to control encoding of"
    },
    {
      "sha": "8724eb153ae6a56ce5645025484cba15ebec3bc6",
      "filename": "gas/config.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f2117ba3892110badc65a7126b19cec211acfa2/gas/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f2117ba3892110badc65a7126b19cec211acfa2/gas/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config.in?ref=6f2117ba3892110badc65a7126b19cec211acfa2",
      "patch": "@@ -50,6 +50,9 @@\n /* Define to 1 if you want to generate x86 relax relocations by default. */\n #undef DEFAULT_GENERATE_X86_RELAX_RELOCATIONS\n \n+/* Define to 1 if you want to fix Loongson3 LLSC Errata by default. */\n+#undef DEFAULT_MIPS_FIX_LOONGSON3_LLSC\n+\n /* Define to 1 if you want to generate RISC-V arch attribute by default. */\n #undef DEFAULT_RISCV_ATTR\n "
    },
    {
      "sha": "81b729a295d13d7b240910eb0e2277b5ff3df6c0",
      "filename": "gas/config/tc-mips.c",
      "status": "modified",
      "additions": 206,
      "deletions": 55,
      "changes": 261,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f2117ba3892110badc65a7126b19cec211acfa2/gas/config/tc-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f2117ba3892110badc65a7126b19cec211acfa2/gas/config/tc-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mips.c?ref=6f2117ba3892110badc65a7126b19cec211acfa2",
      "patch": "@@ -141,6 +141,12 @@ struct mips_cl_insn\n      extension.  */\n   unsigned long insn_opcode;\n \n+  /* The name if this is an label.  */\n+  char label[16];\n+\n+  /* The target label name if this is an branch.  */\n+  char target[16];\n+\n   /* The frag that contains the instruction.  */\n   struct frag *frag;\n \n@@ -511,7 +517,7 @@ static int mips_32bitmode = 0;\n /* True if CPU has a ror instruction.  */\n #define CPU_HAS_ROR(CPU)\tCPU_HAS_DROR (CPU)\n \n-/* True if CPU is in the Octeon family */\n+/* True if CPU is in the Octeon family.  */\n #define CPU_IS_OCTEON(CPU) ((CPU) == CPU_OCTEON || (CPU) == CPU_OCTEONP \\\n \t\t\t    || (CPU) == CPU_OCTEON2 || (CPU) == CPU_OCTEON3)\n \n@@ -660,7 +666,7 @@ static int g_switch_seen = 0;\n    fixed it for the non-PIC mode.  KR 95/04/07  */\n static int nopic_need_relax (symbolS *, int);\n \n-/* handle of the OPCODE hash table */\n+/* Handle of the OPCODE hash table.  */\n static struct hash_control *op_hash = NULL;\n \n /* The opcode hash table we use for the mips16.  */\n@@ -670,12 +676,12 @@ static struct hash_control *mips16_op_hash = NULL;\n static struct hash_control *micromips_op_hash = NULL;\n \n /* This array holds the chars that always start a comment.  If the\n-    pre-processor is disabled, these aren't very useful */\n+    pre-processor is disabled, these aren't very useful.  */\n const char comment_chars[] = \"#\";\n \n /* This array holds the chars that only start a comment at the beginning of\n    a line.  If the line seems to have the form '# 123 filename'\n-   .line and .file directives will appear in the pre-processed output */\n+   .line and .file directives will appear in the pre-processed output.  */\n /* Note that input_file.c hand checks for '#' at the beginning of the\n    first line of the input file.  This is because the compiler outputs\n    #NO_APP at the beginning of its output.  */\n@@ -685,30 +691,31 @@ const char line_comment_chars[] = \"#\";\n /* This array holds machine specific line separator characters.  */\n const char line_separator_chars[] = \";\";\n \n-/* Chars that can be used to separate mant from exp in floating point nums */\n+/* Chars that can be used to separate mant from exp in floating point nums.  */\n const char EXP_CHARS[] = \"eE\";\n \n-/* Chars that mean this number is a floating point constant */\n-/* As in 0f12.456 */\n-/* or    0d1.2345e12 */\n+/* Chars that mean this number is a floating point constant.\n+   As in 0f12.456\n+   or    0d1.2345e12.  */\n const char FLT_CHARS[] = \"rRsSfFdDxXpP\";\n \n /* Also be aware that MAXIMUM_NUMBER_OF_CHARS_FOR_FLOAT may have to be\n    changed in read.c .  Ideally it shouldn't have to know about it at all,\n-   but nothing is ideal around here.\n- */\n+   but nothing is ideal around here.  */\n \n /* Types of printf format used for instruction-related error messages.\n-   \"I\" means int (\"%d\") and \"S\" means string (\"%s\"). */\n-enum mips_insn_error_format {\n+   \"I\" means int (\"%d\") and \"S\" means string (\"%s\").  */\n+enum mips_insn_error_format\n+{\n   ERR_FMT_PLAIN,\n   ERR_FMT_I,\n   ERR_FMT_SS,\n };\n \n /* Information about an error that was found while assembling the current\n    instruction.  */\n-struct mips_insn_error {\n+struct mips_insn_error\n+{\n   /* We sometimes need to match an instruction against more than one\n      opcode table entry.  Errors found during this matching are reported\n      against a particular syntactic argument rather than against the\n@@ -727,7 +734,8 @@ struct mips_insn_error {\n   /* The printf()-style message, including its format and arguments.  */\n   enum mips_insn_error_format format;\n   const char *msg;\n-  union {\n+  union\n+  {\n     int i;\n     const char *ss[2];\n   } u;\n@@ -786,16 +794,20 @@ static int mips_debug = 0;\n /* The maximum number of NOPs needed for any purpose.  */\n #define MAX_NOPS 4\n \n+/* The maximum range of context length of ll/sc.  */\n+#define MAX_LLSC_RANGE 20\n+\n /* A list of previous instructions, with index 0 being the most recent.\n    We need to look back MAX_NOPS instructions when filling delay slots\n    or working around processor errata.  We need to look back one\n    instruction further if we're thinking about using history[0] to\n    fill a branch delay slot.  */\n-static struct mips_cl_insn history[1 + MAX_NOPS];\n+static struct mips_cl_insn history[1 + MAX_NOPS + MAX_LLSC_RANGE];\n \n /* Arrays of operands for each instruction.  */\n #define MAX_OPERANDS 6\n-struct mips_operand_array {\n+struct mips_operand_array\n+{\n   const struct mips_operand *operand[MAX_OPERANDS];\n };\n static struct mips_operand_array *mips_operands;\n@@ -808,6 +820,9 @@ static struct mips_cl_insn mips16_nop_insn;\n static struct mips_cl_insn micromips_nop16_insn;\n static struct mips_cl_insn micromips_nop32_insn;\n \n+/* Sync instructions used by insert sync.  */\n+static struct mips_cl_insn sync_insn;\n+\n /* The appropriate nop for the current mode.  */\n #define NOP_INSN (mips_opts.mips16\t\t\t\t\t\\\n \t\t  ? &mips16_nop_insn\t\t\t\t\t\\\n@@ -943,6 +958,9 @@ static bfd_boolean mips_fix_cn63xxp1;\n static bfd_boolean mips_fix_r5900;\n static bfd_boolean mips_fix_r5900_explicit;\n \n+/* ...likewise -mfix-loongson3-llsc.  */\n+static bfd_boolean mips_fix_loongson3_llsc = DEFAULT_MIPS_FIX_LOONGSON3_LLSC;\n+\n /* We don't relax branches by default, since this causes us to expand\n    `la .l2 - .l1' if there's a branch between .l1 and .l2, because we\n    fail to compute the offset before expanding the macro to the most\n@@ -1482,6 +1500,8 @@ enum options\n     OPTION_NO_FIX_24K,\n     OPTION_FIX_RM7000,\n     OPTION_NO_FIX_RM7000,\n+    OPTION_FIX_LOONGSON3_LLSC,\n+    OPTION_NO_FIX_LOONGSON3_LLSC,\n     OPTION_FIX_LOONGSON2F_JUMP,\n     OPTION_NO_FIX_LOONGSON2F_JUMP,\n     OPTION_FIX_LOONGSON2F_NOP,\n@@ -1628,6 +1648,8 @@ struct option md_longopts[] =\n   {\"mfix7000\", no_argument, NULL, OPTION_M7000_HILO_FIX},\n   {\"no-fix-7000\", no_argument, NULL, OPTION_MNO_7000_HILO_FIX},\n   {\"mno-fix7000\", no_argument, NULL, OPTION_MNO_7000_HILO_FIX},\n+  {\"mfix-loongson3-llsc\",   no_argument, NULL, OPTION_FIX_LOONGSON3_LLSC},\n+  {\"mno-fix-loongson3-llsc\", no_argument, NULL, OPTION_NO_FIX_LOONGSON3_LLSC},\n   {\"mfix-loongson2f-jump\", no_argument, NULL, OPTION_FIX_LOONGSON2F_JUMP},\n   {\"mno-fix-loongson2f-jump\", no_argument, NULL, OPTION_NO_FIX_LOONGSON2F_JUMP},\n   {\"mfix-loongson2f-nop\", no_argument, NULL, OPTION_FIX_LOONGSON2F_NOP},\n@@ -2774,7 +2796,7 @@ struct regname {\n     {\"$ta2\",\tRTYPE_GP | 14}, /* alias for $t6 */ \\\n     {\"$ta3\",\tRTYPE_GP | 15}  /* alias for $t7 */\n \n-/* Remaining symbolic register names */\n+/* Remaining symbolic register names.  */\n #define SYMBOLIC_REGISTER_NAMES \\\n     {\"$zero\",\tRTYPE_GP | 0},  \\\n     {\"$at\",\tRTYPE_GP | 1},  \\\n@@ -2809,8 +2831,8 @@ struct regname {\n     {\"$pc\",\tRTYPE_PC | 0}\n \n #define MDMX_VECTOR_REGISTER_NAMES \\\n-    /* {\"$v0\",\tRTYPE_VEC | 0},  clash with REG 2 above */ \\\n-    /* {\"$v1\",\tRTYPE_VEC | 1},  clash with REG 3 above */ \\\n+    /* {\"$v0\",\tRTYPE_VEC | 0},  Clash with REG 2 above.  */ \\\n+    /* {\"$v1\",\tRTYPE_VEC | 1},  Clash with REG 3 above.  */ \\\n     {\"$v2\",\tRTYPE_VEC | 2},  \\\n     {\"$v3\",\tRTYPE_VEC | 3},  \\\n     {\"$v4\",\tRTYPE_VEC | 4},  \\\n@@ -3671,13 +3693,18 @@ md_begin (void)\n \t  if (!validate_mips_insn (&mips_opcodes[i], 0xffffffff,\n \t\t\t\t   decode_mips_operand, &mips_operands[i]))\n \t    broken = 1;\n+\n \t  if (nop_insn.insn_mo == NULL && strcmp (name, \"nop\") == 0)\n \t    {\n \t      create_insn (&nop_insn, mips_opcodes + i);\n \t      if (mips_fix_loongson2f_nop)\n \t\tnop_insn.insn_opcode = LOONGSON2F_NOP_INSN;\n \t      nop_insn.fixed_p = 1;\n \t    }\n+\n+          if (sync_insn.insn_mo == NULL && strcmp (name, \"sync\") == 0)\n+\t    create_insn (&sync_insn, mips_opcodes + i);\n+\n \t  ++i;\n \t}\n       while ((i < NUMOPCODES) && !strcmp (mips_opcodes[i].name, name));\n@@ -3833,7 +3860,7 @@ md_begin (void)\n \n     /* The ABI says this section should be loaded so that the\n        running program can access it.  However, we don't load it\n-       if we are configured for an embedded target */\n+       if we are configured for an embedded target.  */\n     flags = SEC_READONLY | SEC_DATA;\n     if (strncmp (TARGET_OS, \"elf\", 3) != 0)\n       flags |= SEC_ALLOC | SEC_LOAD;\n@@ -6859,6 +6886,103 @@ fix_loongson2f (struct mips_cl_insn * ip)\n     fix_loongson2f_jump (ip);\n }\n \n+/* Fix loongson3 llsc errata: Insert sync before ll/lld. */\n+\n+static void\n+fix_loongson3_llsc (struct mips_cl_insn * ip)\n+{\n+  gas_assert (!HAVE_CODE_COMPRESSION);\n+\n+  /* If is an local label and the insn is not sync,\n+     look forward that whether an branch between ll/sc jump to here\n+     if so, insert a sync.  */\n+  if (seg_info (now_seg)->label_list\n+      && S_IS_LOCAL (seg_info (now_seg)->label_list->label)\n+      && (strcmp (ip->insn_mo->name, \"sync\") != 0))\n+    {\n+      const char *label_name = S_GET_NAME (seg_info (now_seg)->label_list->label);\n+      unsigned long lookback = ARRAY_SIZE (history);\n+      unsigned long i;\n+\n+      for (i = 0; i < lookback; i++)\n+\t{\n+\t  if (streq (history[i].insn_mo->name, \"ll\")\n+\t      || streq (history[i].insn_mo->name, \"lld\"))\n+\t    break;\n+\n+\t  if (streq (history[i].insn_mo->name, \"sc\")\n+\t      || streq (history[i].insn_mo->name, \"scd\"))\n+\t    {\n+\t      unsigned long j;\n+\n+\t      for (j = i + 1; j < lookback; j++)\n+\t\t{\n+\t\t  if (streq (history[i].insn_mo->name, \"ll\")\n+\t\t      || streq (history[i].insn_mo->name, \"lld\"))\n+\t\t    break;\n+\n+\t\t  if (delayed_branch_p (&history[j]))\n+\t\t    {\n+\t\t      if (streq (history[j].target, label_name))\n+\t\t\t{\n+\t\t\t  add_fixed_insn (&sync_insn);\n+\t\t\t  insert_into_history (0, 1, &sync_insn);\n+\t\t\t  i = lookback;\n+\t\t\t  break;\n+\t\t\t}\n+\t\t    }\n+\t\t}\n+\t    }\n+\t}\n+    }\n+  /* If we find a sc, we look forward to look for an branch insn,\n+     and see whether it jump back and out of ll/sc.  */\n+  else if (streq(ip->insn_mo->name, \"sc\") || streq(ip->insn_mo->name, \"scd\"))\n+    {\n+      unsigned long lookback = ARRAY_SIZE (history) - 1;\n+      unsigned long i;\n+\n+      for (i = 0; i < lookback; i++)\n+\t{\n+\t  if (streq (history[i].insn_mo->name, \"ll\")\n+\t      || streq (history[i].insn_mo->name, \"lld\"))\n+\t    break;\n+\n+\t  if (delayed_branch_p (&history[i]))\n+\t    {\n+\t      unsigned long j;\n+\n+\t      for (j = i + 1; j < lookback; j++)\n+\t\t{\n+\t\t  if (streq (history[j].insn_mo->name, \"ll\")\n+\t\t      || streq (history[i].insn_mo->name, \"lld\"))\n+\t\t    break;\n+\t\t}\n+\n+\t      for (; j < lookback; j++)\n+\t\t{\n+\t\t  if (history[j].label[0] != '\\0'\n+\t\t      && streq (history[j].label, history[i].target)\n+\t\t      && strcmp (history[j+1].insn_mo->name, \"sync\") != 0)\n+\t\t    {\n+\t\t      add_fixed_insn (&sync_insn);\n+\t\t      insert_into_history (++j, 1, &sync_insn);\n+\t\t    }\n+\t\t}\n+\t    }\n+\t}\n+    }\n+\n+  /* Skip if there is a sync before ll/lld.  */\n+  if ((strcmp (ip->insn_mo->name, \"ll\") == 0\n+       || strcmp (ip->insn_mo->name, \"lld\") == 0)\n+      && (strcmp (history[0].insn_mo->name, \"sync\") != 0))\n+    {\n+      add_fixed_insn (&sync_insn);\n+      insert_into_history (0, 1, &sync_insn);\n+    }\n+}\n+\n /* IP is a branch that has a delay slot, and we need to fill it\n    automatically.   Return true if we can do that by swapping IP\n    with the previous instruction.\n@@ -7316,6 +7440,15 @@ append_insn (struct mips_cl_insn *ip, expressionS *address_expr,\n   if (mips_fix_loongson2f && !HAVE_CODE_COMPRESSION)\n     fix_loongson2f (ip);\n \n+  ip->target[0] = '\\0';\n+  if (offset_expr.X_op == O_symbol)\n+    strncpy (ip->target, S_GET_NAME (offset_expr.X_add_symbol), 15);\n+  ip->label[0] = '\\0';\n+  if (seg_info (now_seg)->label_list)\n+    strncpy (ip->label, S_GET_NAME (seg_info (now_seg)->label_list->label), 15);\n+  if (mips_fix_loongson3_llsc && !HAVE_CODE_COMPRESSION)\n+    fix_loongson3_llsc (ip);\n+\n   file_ase_mips16 |= mips_opts.mips16;\n   file_ase_micromips |= mips_opts.micromips;\n \n@@ -10361,7 +10494,7 @@ macro (struct mips_cl_insn *ip, char *str)\n \t  break;\n \t}\n       ++imm_expr.X_add_number;\n-      /* FALLTHROUGH */\n+      /* Fall through.  */\n     case M_BGE_I:\n     case M_BGEL_I:\n       if (mask == M_BGEL_I)\n@@ -10381,7 +10514,7 @@ macro (struct mips_cl_insn *ip, char *str)\n       if (imm_expr.X_add_number <= GPR_SMIN)\n \t{\n \tdo_true:\n-\t  /* result is always true */\n+\t  /* Result is always true.  */\n \t  as_warn (_(\"branch %s is always true\"), ip->insn_mo->name);\n \t  macro_build (&offset_expr, \"b\", \"p\");\n \t  break;\n@@ -10419,7 +10552,7 @@ macro (struct mips_cl_insn *ip, char *str)\n \t      && imm_expr.X_add_number == -1))\n \tgoto do_false;\n       ++imm_expr.X_add_number;\n-      /* FALLTHROUGH */\n+      /* Fall through.  */\n     case M_BGEU_I:\n     case M_BGEUL_I:\n       if (mask == M_BGEUL_I)\n@@ -10497,7 +10630,7 @@ macro (struct mips_cl_insn *ip, char *str)\n       if (imm_expr.X_add_number >= GPR_SMAX)\n \tgoto do_true;\n       ++imm_expr.X_add_number;\n-      /* FALLTHROUGH */\n+      /* Fall through.  */\n     case M_BLT_I:\n     case M_BLTL_I:\n       if (mask == M_BLTL_I)\n@@ -10542,7 +10675,7 @@ macro (struct mips_cl_insn *ip, char *str)\n \t      && imm_expr.X_add_number == -1))\n \tgoto do_true;\n       ++imm_expr.X_add_number;\n-      /* FALLTHROUGH */\n+      /* Fall through.  */\n     case M_BLTU_I:\n     case M_BLTUL_I:\n       if (mask == M_BLTUL_I)\n@@ -12633,20 +12766,18 @@ macro (struct mips_cl_insn *ip, char *str)\n \t  offset_reloc[2] = BFD_RELOC_UNUSED;\n \t}\n       align = 8;\n-      /* Fall through */\n+      /* Fall through.  */\n \n     case M_L_DAB:\n-      /*\n-       * The MIPS assembler seems to check for X_add_number not\n-       * being double aligned and generating:\n-       *\tlui\tat,%hi(foo+1)\n-       *\taddu\tat,at,v1\n-       *\taddiu\tat,at,%lo(foo+1)\n-       *\tlwc1\tf2,0(at)\n-       *\tlwc1\tf3,4(at)\n-       * But, the resulting address is the same after relocation so why\n-       * generate the extra instruction?\n-       */\n+      /* The MIPS assembler seems to check for X_add_number not\n+         being double aligned and generating:\n+        \tlui\tat,%hi(foo+1)\n+        \taddu\tat,at,v1\n+        \taddiu\tat,at,%lo(foo+1)\n+        \tlwc1\tf2,0(at)\n+        \tlwc1\tf3,4(at)\n+         But, the resulting address is the same after relocation so why\n+         generate the extra instruction?  */\n       /* Itbl support may require additional care here.  */\n       coproc = 1;\n       fmt = \"T,o(b)\";\n@@ -13369,7 +13500,7 @@ macro (struct mips_cl_insn *ip, char *str)\n       macro_build (&expr1, \"xori\", \"t,r,i\", op[0], op[0], BFD_RELOC_LO16);\n       break;\n \n-    case M_SGE_I:\t/* X >= I  <==>  not (X < I) */\n+    case M_SGE_I:\t/* X >= I  <==>  not (X < I).  */\n     case M_SGEU_I:\n       if (imm_expr.X_add_number >= -0x8000\n \t  && imm_expr.X_add_number < 0x8000)\n@@ -13385,7 +13516,7 @@ macro (struct mips_cl_insn *ip, char *str)\n       macro_build (&expr1, \"xori\", \"t,r,i\", op[0], op[0], BFD_RELOC_LO16);\n       break;\n \n-    case M_SGT:\t\t/* X > Y  <==>  Y < X */\n+    case M_SGT:\t\t/* X > Y  <==>  Y < X.  */\n       s = \"slt\";\n       goto sgt;\n     case M_SGTU:\n@@ -13394,7 +13525,7 @@ macro (struct mips_cl_insn *ip, char *str)\n       macro_build (NULL, s, \"d,v,t\", op[0], op[2], op[1]);\n       break;\n \n-    case M_SGT_I:\t/* X > I  <==>  I < X */\n+    case M_SGT_I:\t/* X > I  <==>  I < X.  */\n       s = \"slt\";\n       goto sgti;\n     case M_SGTU_I:\n@@ -13405,7 +13536,7 @@ macro (struct mips_cl_insn *ip, char *str)\n       macro_build (NULL, s, \"d,v,t\", op[0], AT, op[1]);\n       break;\n \n-    case M_SLE:\t\t/* X <= Y  <==>  Y >= X  <==>  not (Y < X) */\n+    case M_SLE:\t\t/* X <= Y  <==>  Y >= X  <==>  not (Y < X).  */\n       s = \"slt\";\n       goto sle;\n     case M_SLEU:\n@@ -14731,6 +14862,14 @@ md_parse_option (int c, const char *arg)\n       mips_fix_rm7000 = 0;\n       break;\n \n+    case OPTION_FIX_LOONGSON3_LLSC:\n+      mips_fix_loongson3_llsc = TRUE;\n+      break;\n+\n+    case OPTION_NO_FIX_LOONGSON3_LLSC:\n+      mips_fix_loongson3_llsc = FALSE;\n+      break;\n+\n     case OPTION_FIX_LOONGSON2F_JUMP:\n       mips_fix_loongson2f_jump = TRUE;\n       break;\n@@ -14999,7 +15138,7 @@ mips_after_parse_args (void)\n   const struct mips_cpu_info *arch_info = 0;\n   const struct mips_cpu_info *tune_info = 0;\n \n-  /* GP relative stuff not working for PE */\n+  /* GP relative stuff not working for PE.  */\n   if (strncmp (TARGET_OS, \"pe\", 2) == 0)\n     {\n       if (g_switch_seen && g_switch_value != 0)\n@@ -15078,7 +15217,7 @@ mips_after_parse_args (void)\n void\n mips_init_after_args (void)\n {\n-  /* initialize opcodes */\n+  /* Initialize opcodes.  */\n   bfd_mips_num_opcodes = bfd_mips_num_builtin_opcodes;\n   mips_opcodes = (struct mips_opcode *) mips_builtin_opcodes;\n }\n@@ -15087,6 +15226,7 @@ long\n md_pcrel_from (fixS *fixP)\n {\n   valueT addr = fixP->fx_where + fixP->fx_frag->fr_address;\n+\n   switch (fixP->fx_r_type)\n     {\n     case BFD_RELOC_MICROMIPS_7_PCREL_S1:\n@@ -19703,7 +19843,7 @@ s_mips_mask (int reg_type)\n    gcc's mips_cpu_info_table[].  */\n static const struct mips_cpu_info mips_cpu_info_table[] =\n {\n-  /* Entries for generic ISAs */\n+  /* Entries for generic ISAs.  */\n   { \"mips1\",          MIPS_CPU_IS_ISA, 0,\tISA_MIPS1,    CPU_R3000 },\n   { \"mips2\",          MIPS_CPU_IS_ISA, 0,\tISA_MIPS2,    CPU_R6000 },\n   { \"mips3\",          MIPS_CPU_IS_ISA, 0,\tISA_MIPS3,    CPU_R4000 },\n@@ -19742,7 +19882,7 @@ static const struct mips_cpu_info mips_cpu_info_table[] =\n   { \"orion\",          0, 0,\t\t\tISA_MIPS3,    CPU_R4600 },\n   { \"r4650\",          0, 0,\t\t\tISA_MIPS3,    CPU_R4650 },\n   { \"r5900\",          0, 0,\t\t\tISA_MIPS3,    CPU_R5900 },\n-  /* ST Microelectronics Loongson 2E and 2F cores */\n+  /* ST Microelectronics Loongson 2E and 2F cores.  */\n   { \"loongson2e\",     0, 0,\t\t\tISA_MIPS3,    CPU_LOONGSON_2E },\n   { \"loongson2f\",     0, ASE_LOONGSON_MMI,\tISA_MIPS3,    CPU_LOONGSON_2F },\n \n@@ -19821,12 +19961,12 @@ static const struct mips_cpu_info mips_cpu_info_table[] =\n   { \"1004kf2_1\",      0, ASE_DSP | ASE_MT,\tISA_MIPS32R2, CPU_MIPS32R2 },\n   { \"1004kf\",         0, ASE_DSP | ASE_MT,\tISA_MIPS32R2, CPU_MIPS32R2 },\n   { \"1004kf1_1\",      0, ASE_DSP | ASE_MT,\tISA_MIPS32R2, CPU_MIPS32R2 },\n-  /* interaptiv is the new name for 1004kf */\n+  /* interaptiv is the new name for 1004kf.  */\n   { \"interaptiv\",     0, ASE_DSP | ASE_MT,\tISA_MIPS32R2, CPU_MIPS32R2 },\n   { \"interaptiv-mr2\", 0,\n     ASE_DSP | ASE_EVA | ASE_MT | ASE_MIPS16E2 | ASE_MIPS16E2_MT,\n     ISA_MIPS32R3, CPU_INTERAPTIV_MR2 },\n-  /* M5100 family */\n+  /* M5100 family.  */\n   { \"m5100\",          0, ASE_MCU,\t\tISA_MIPS32R5, CPU_MIPS32R5 },\n   { \"m5101\",          0, ASE_MCU,\t\tISA_MIPS32R5, CPU_MIPS32R5 },\n   /* P5600 with EVA and Virtualization ASEs, other ASEs are optional.  */\n@@ -19838,14 +19978,14 @@ static const struct mips_cpu_info mips_cpu_info_table[] =\n   { \"20kc\",           0, ASE_MIPS3D,\t\tISA_MIPS64,   CPU_MIPS64 },\n   { \"25kf\",           0, ASE_MIPS3D,\t\tISA_MIPS64,   CPU_MIPS64 },\n \n-  /* Broadcom SB-1 CPU core */\n+  /* Broadcom SB-1 CPU core.  */\n   { \"sb1\",            0, ASE_MIPS3D | ASE_MDMX,\tISA_MIPS64,   CPU_SB1 },\n-  /* Broadcom SB-1A CPU core */\n+  /* Broadcom SB-1A CPU core.  */\n   { \"sb1a\",           0, ASE_MIPS3D | ASE_MDMX,\tISA_MIPS64,   CPU_SB1 },\n \n-  /* MIPS 64 Release 2 */\n-  /* Loongson CPU core */\n-  /* -march=loongson3a is an alias of -march=gs464 for compatibility */\n+  /* MIPS 64 Release 2.  */\n+  /* Loongson CPU core.  */\n+  /* -march=loongson3a is an alias of -march=gs464 for compatibility.  */\n   { \"loongson3a\",     0, ASE_LOONGSON_MMI | ASE_LOONGSON_CAM | ASE_LOONGSON_EXT,\n      ISA_MIPS64R2,\tCPU_GS464 },\n   { \"gs464\",          0, ASE_LOONGSON_MMI | ASE_LOONGSON_CAM | ASE_LOONGSON_EXT,\n@@ -19855,7 +19995,7 @@ static const struct mips_cpu_info mips_cpu_info_table[] =\n   { \"gs264e\",         0, ASE_LOONGSON_MMI | ASE_LOONGSON_CAM | ASE_LOONGSON_EXT\n      | ASE_LOONGSON_EXT2 | ASE_MSA | ASE_MSA64,\tISA_MIPS64R2,\tCPU_GS264E },\n \n-  /* Cavium Networks Octeon CPU core */\n+  /* Cavium Networks Octeon CPU core.  */\n   { \"octeon\",\t      0, 0,\t\t\tISA_MIPS64R2, CPU_OCTEON },\n   { \"octeon+\",\t      0, 0,\t\t\tISA_MIPS64R2, CPU_OCTEONP },\n   { \"octeon2\",\t      0, 0,\t\t\tISA_MIPS64R2, CPU_OCTEON2 },\n@@ -19869,11 +20009,11 @@ static const struct mips_cpu_info mips_cpu_info_table[] =\n      MIPS64R2 rather than MIPS64.  */\n   { \"xlp\",\t      0, 0,\t\t\tISA_MIPS64R2, CPU_XLR },\n \n-  /* MIPS 64 Release 6 */\n+  /* MIPS 64 Release 6.  */\n   { \"i6400\",\t      0, ASE_MSA,\t\tISA_MIPS64R6, CPU_MIPS64R6},\n   { \"p6600\",\t      0, ASE_VIRT | ASE_MSA,\tISA_MIPS64R6, CPU_MIPS64R6},\n \n-  /* End marker */\n+  /* End marker.  */\n   { NULL, 0, 0, 0, 0 }\n };\n \n@@ -20140,9 +20280,20 @@ MIPS options:\\n\\\n   fprintf (stream, _(\"\\\n -minsn32\t\tonly generate 32-bit microMIPS instructions\\n\\\n -mno-insn32\t\tgenerate all microMIPS instructions\\n\"));\n+#if DEFAULT_MIPS_FIX_LOONGSON3_LLSC\n+  fprintf (stream, _(\"\\\n+-mfix-loongson3-llsc\twork around Loongson3 LL/SC errata, default\\n\\\n+-mno-fix-loongson3-llsc\tdisable work around Loongson3 LL/SC errata\\n\"));\n+#else\n+  fprintf (stream, _(\"\\\n+-mfix-loongson3-llsc\twork around Loongson3 LL/SC errata\\n\\\n+-mno-fix-loongson3-llsc\tdisable work around Loongson3 LL/SC errata, default\\n\"));\n+#endif\n   fprintf (stream, _(\"\\\n -mfix-loongson2f-jump\twork around Loongson2F JUMP instructions\\n\\\n -mfix-loongson2f-nop\twork around Loongson2F NOP errata\\n\\\n+-mfix-loongson3-llsc\twork around Loongson3 LL/SC errata\\n\\\n+-mno-fix-loongson3-llsc\tdisable work around Loongson3 LL/SC errata\\n\\\n -mfix-vr4120\t\twork around certain VR4120 errata\\n\\\n -mfix-vr4130\t\twork around VR4130 mflo/mfhi errata\\n\\\n -mfix-24k\t\tinsert a nop after ERET and DERET instructions\\n\\"
    },
    {
      "sha": "1aafa6b31d7c8227c55d53db3974ad9b7e153343",
      "filename": "gas/configure",
      "status": "modified",
      "additions": 25,
      "deletions": 2,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f2117ba3892110badc65a7126b19cec211acfa2/gas/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f2117ba3892110badc65a7126b19cec211acfa2/gas/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/configure?ref=6f2117ba3892110badc65a7126b19cec211acfa2",
      "patch": "@@ -808,6 +808,7 @@ enable_compressed_debug_sections\n enable_x86_relax_relocations\n enable_elf_stt_common\n enable_generate_build_notes\n+enable_mips_fix_loongson3_llsc\n enable_x86_used_note\n enable_default_riscv_attribute\n enable_werror\n@@ -1471,6 +1472,8 @@ Optional Features:\n   --enable-generate-build-notes\n                           generate GNU Build notes if none are provided by the\n                           input\n+  --enable-mips-fix-loongson3-llsc\n+                          enable MIPS fix Loongson3 LLSC errata\n   --enable-x86-used-note  generate GNU x86 used ISA and feature properties\n   --enable-default-riscv-attribute\n                           generate RISC-V arch attribute by default\n@@ -11340,7 +11343,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11343 \"configure\"\n+#line 11346 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11446,7 +11449,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11449 \"configure\"\n+#line 11452 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12114,6 +12117,17 @@ if test \"${enable_generate_build_notes+set}\" = set; then :\n esac\n fi\n \n+# Decide if the MIPS assembler should default to enable MIPS fix Loongson3\n+# LLSC errata.\n+ac_default_mips_fix_loongson3_llsc=unset\n+# Provide a configuration option to override the default.\n+# Check whether --enable-mips-fix-loongson3-llsc was given.\n+if test \"${enable_mips_fix_loongson3_llsc+set}\" = set; then :\n+  enableval=$enable_mips_fix_loongson3_llsc; case \"${enableval}\" in\n+  yes)  ac_default_mips_fix_loongson3_llsc=1 ;;\n+  no)   ac_default_mips_fix_loongson3_llsc=0 ;;\n+esac\n+fi\n \n # Decide if the x86 ELF assembler should default to generating GNU x86\n # used ISA and feature properties.\n@@ -13131,6 +13145,15 @@ cat >>confdefs.h <<_ACEOF\n _ACEOF\n \n \n+if test ${ac_default_mips_fix_loongson3_llsc} = unset; then\n+  ac_default_mips_fix_loongson3_llsc=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define DEFAULT_MIPS_FIX_LOONGSON3_LLSC $ac_default_mips_fix_loongson3_llsc\n+_ACEOF\n+\n+\n if test x$ac_default_compressed_debug_sections = xyes ; then\n \n $as_echo \"#define DEFAULT_FLAG_COMPRESS_DEBUG 1\" >>confdefs.h"
    },
    {
      "sha": "4b25b7ca36026b87724c97afb0d86e3d2f9807bd",
      "filename": "gas/configure.ac",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f2117ba3892110badc65a7126b19cec211acfa2/gas/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f2117ba3892110badc65a7126b19cec211acfa2/gas/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/configure.ac?ref=6f2117ba3892110badc65a7126b19cec211acfa2",
      "patch": "@@ -111,6 +111,17 @@ AC_ARG_ENABLE(generate_build_notes,\n   no)   ac_default_generate_build_notes=0 ;;\n esac])dnl\n \n+# Decide if the MIPS assembler should default to enable MIPS fix Loongson3\n+# LLSC errata.\n+ac_default_mips_fix_loongson3_llsc=unset\n+# Provide a configuration option to override the default.\n+AC_ARG_ENABLE(mips-fix-loongson3-llsc,\n+             AS_HELP_STRING([--enable-mips-fix-loongson3-llsc],\n+             [enable MIPS fix Loongson3 LLSC errata]),\n+[case \"${enableval}\" in\n+  yes)  ac_default_mips_fix_loongson3_llsc=1 ;;\n+  no)   ac_default_mips_fix_loongson3_llsc=0 ;;\n+esac])dnl\n \n # Decide if the x86 ELF assembler should default to generating GNU x86\n # used ISA and feature properties.\n@@ -687,6 +698,13 @@ AC_DEFINE_UNQUOTED(DEFAULT_RISCV_ATTR,\n   $ac_default_generate_riscv_attr,\n   [Define to 1 if you want to generate RISC-V arch attribute by default.])\n \n+if test ${ac_default_mips_fix_loongson3_llsc} = unset; then\n+  ac_default_mips_fix_loongson3_llsc=0\n+fi\n+AC_DEFINE_UNQUOTED(DEFAULT_MIPS_FIX_LOONGSON3_LLSC,\n+  $ac_default_mips_fix_loongson3_llsc,\n+  [Define to 1 if you want to fix Loongson3 LLSC Errata by default.])\n+\n if test x$ac_default_compressed_debug_sections = xyes ; then\n   AC_DEFINE(DEFAULT_FLAG_COMPRESS_DEBUG, 1, [Define if you want compressed debug sections by default.])\n fi"
    },
    {
      "sha": "1ef289a0f4974919a4a98a4953885004f6f5369d",
      "filename": "gas/doc/c-mips.texi",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f2117ba3892110badc65a7126b19cec211acfa2/gas/doc/c-mips.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f2117ba3892110badc65a7126b19cec211acfa2/gas/doc/c-mips.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-mips.texi?ref=6f2117ba3892110badc65a7126b19cec211acfa2",
      "patch": "@@ -308,6 +308,13 @@ Replace nops by @code{or at,at,zero} to work around the Loongson2F\n deadlock.  The issue has been solved in later Loongson2F batches, but\n this fix has no side effect to them.\n \n+@item -mfix-loongson3-llsc\n+@itemx -mno-fix-loongson3-llsc\n+Insert @samp{sync} before @samp{ll} and @samp{lld} to work around\n+Loongson3 LLSC errata.  Without it, under extrame cases, the CPU might\n+deadlock. The default can be controlled by the\n+@option{--enable-mips-fix-loongson3-llsc=[yes|no]} configure option.\n+\n @item -mfix-vr4120\n @itemx -mno-fix-vr4120\n Insert nops to work around certain VR4120 errata.  This option is"
    }
  ]
}