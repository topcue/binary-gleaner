{
  "sha": "52e0e32b34e503630e124cd60365a6d3ec5b1181",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTJlMGUzMmIzNGU1MDM2MzBlMTI0Y2Q2MDM2NWE2ZDNlYzViMTE4MQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-06-10T14:47:39Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-08-05T16:24:44Z"
    },
    "message": "gdb/testsuite: gdb.base/attach.exp: fix support check in test_command_line_attach_run\n\nWhen running this test with the native-extended-gdbserver, we get:\n\n    main () at /home/simark/src/binutils-gdb/gdb/testsuite/gdb.base/attach.c:19\n    19\t  while (! should_exit)\n    The program being debugged has been started already.\n    Start it from the beginning? (y or n) PASS: gdb.base/attach.exp: cmdline attach run: run to prompt\n    y\n    Don't know how to run.  Try \"help target\".\n    (gdb) FAIL: gdb.base/attach.exp: cmdline attach run: run to main\n\nThis test tests using both \"-p <pid>\" and \"-ex start\" on the command line,\nmaking sure that we first attach and then run.\n\nNormally, after that \"y\", we should see the program running again.\nHowever, a particuliarity of the native-extended-gdbserver is that it\nuses \"set auto-connect-native-target off\" on the command line.  The full\nGDB command line is:\n\n    ./gdb -nw -nx -data-directory /home/simark/build/binutils-gdb/gdb/testsuite/../data-directory \\\n          -iex set height 0 -iex set width 0 -ex set auto-connect-native-target off \\\n\t  -ex set sysroot -quiet -iex set height 0 -iex set width 0 --pid=536609 -ex start\n\nThe attach succeeds.  I guess it is done before \"set\nauto-connect-native-target off\", or it somehow bypasses it.  When the\n\"start\" is executed, the native target is unpushed, while killing the\nexisting process, but not re-pushed, due to \"set\nauto-connect-native-target off\".  So we get that \"Don't know how to run\"\nmessage.\n\nReally, I think it's a case of the test doing things incompatible with\nthe board, I think it should just be skipped.  And as we can see with\nthe current code, there were some attempts at doing this, just using the\nwrong checks:\n\n - isnative: this is a dejagnu proc which checks if the target board has\n   the same triplet as the build machine.  In the case of\n   native-extended-gdbserver, it does.\n - is_remote target: this checks whether the target board is remote, as\n   in executing on a different machin.  native-extended-gdbserver is not\n   remote.\n\nSince the --pid option specifically attaches to a process using the\nnative target, change the test to use gdb_is_target_native instead.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/attach.exp (test_command_line_attach_run): Use\n\tgdb_is_target_native to check if test is supported.\n\nChange-Id: I762e127f39623889999dc9ed2185540a0951bfb0",
    "tree": {
      "sha": "a1cfe92607fcbbba782d3983be6b2756eba0111e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a1cfe92607fcbbba782d3983be6b2756eba0111e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/52e0e32b34e503630e124cd60365a6d3ec5b1181",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52e0e32b34e503630e124cd60365a6d3ec5b1181",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/52e0e32b34e503630e124cd60365a6d3ec5b1181",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52e0e32b34e503630e124cd60365a6d3ec5b1181/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b765e92113f2a6d13f6cfe09b3a074a6e0dec19f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b765e92113f2a6d13f6cfe09b3a074a6e0dec19f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b765e92113f2a6d13f6cfe09b3a074a6e0dec19f"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 12,
    "deletions": 7
  },
  "files": [
    {
      "sha": "8b78dcc51811ae0de7a04855752bbfbb197da2e0",
      "filename": "gdb/testsuite/gdb.base/attach.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 7,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52e0e32b34e503630e124cd60365a6d3ec5b1181/gdb/testsuite/gdb.base/attach.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52e0e32b34e503630e124cd60365a6d3ec5b1181/gdb/testsuite/gdb.base/attach.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/attach.exp?ref=52e0e32b34e503630e124cd60365a6d3ec5b1181",
      "patch": "@@ -472,14 +472,19 @@ proc_with_prefix test_command_line_attach_run {} {\n     global gdb_prompt\n     global binfile\n \n-    # Skip test if we cannot attach on the command line and use the run command.\n-    # ??? Unclear what condition to use to return here when using gdbserver.\n-    # ??? None of the below works.\n-    #    ![isnative] || [target_is_gdbserver]\n-    #    ![isnative] || [use_gdb_stub]\n-    if { ![isnative] || [is_remote target] } then {\n+    # The --pid option is used to attach to a process using the native target.\n+    # Start GDB and run to main just to see what the execution target is, skip\n+    # if it's not the native target.\n+    clean_restart $binfile\n+\n+    if { ![runto_main] } {\n+\tfail \"could not run to main\"\n+\treturn\n+    }\n+\n+    if { ![gdb_is_target_native] } {\n \tunsupported \"commandline attach run test\"\n-\treturn 0\n+\treturn\n     }\n \n     set test_spawn_id [spawn_wait_for_attach $binfile]"
    }
  ]
}