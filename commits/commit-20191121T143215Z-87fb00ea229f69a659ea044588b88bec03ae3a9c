{
  "sha": "87fb00ea229f69a659ea044588b88bec03ae3a9c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODdmYjAwZWEyMjlmNjlhNjU5ZWEwNDQ1ODhiODhiZWMwM2FlM2E5Yw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2019-11-21T14:32:15Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-11-21T14:32:15Z"
    },
    "message": "gdb: remove gen_ret_current_ui_field_ptr\n\nI think it would be clearer to not use gen_ret_current_ui_field_ptr to\ngenerate the implementation of current_ui_gdb_stdout_ptr et al.  It\ndoesn't save much code, but adds a layer of complexity for the reader.\nPlus, it doesn't work well with IDEs, for example if you ask to find all\nusages the m_gdb_stdout field.\n\ngdb/ChangeLog:\n\n\t* top.c (current_ui_gdb_stdout_ptr): Spell out by hand.\n\t(current_ui_gdb_stdin_ptr): Likewise.\n\t(current_ui_gdb_stderr_ptr): Likewise.\n\t(current_ui_gdb_stdlog_ptr): Likewise.\n\t(current_ui_current_uiout_ptr): Likewise.\n\t(gen_ret_current_ui_field_ptr): Remove.\n\nChange-Id: I86f821c9d119453701caedf0e47124ccddfbab2d",
    "tree": {
      "sha": "e6b9a29e88d72ebc9e8109c35e481494c417b433",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e6b9a29e88d72ebc9e8109c35e481494c417b433"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/87fb00ea229f69a659ea044588b88bec03ae3a9c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87fb00ea229f69a659ea044588b88bec03ae3a9c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/87fb00ea229f69a659ea044588b88bec03ae3a9c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87fb00ea229f69a659ea044588b88bec03ae3a9c/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e19511a60cda301feacdb6244375363b08dccf7d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e19511a60cda301feacdb6244375363b08dccf7d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e19511a60cda301feacdb6244375363b08dccf7d"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 35,
    "deletions": 12
  },
  "files": [
    {
      "sha": "57e8f6b43fd5498d843b681696762f7af6ef4a3a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87fb00ea229f69a659ea044588b88bec03ae3a9c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87fb00ea229f69a659ea044588b88bec03ae3a9c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=87fb00ea229f69a659ea044588b88bec03ae3a9c",
      "patch": "@@ -1,3 +1,12 @@\n+2019-11-21  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* top.c (current_ui_gdb_stdout_ptr): Spell out by hand.\n+\t(current_ui_gdb_stdin_ptr): Likewise.\n+\t(current_ui_gdb_stderr_ptr): Likewise.\n+\t(current_ui_gdb_stdlog_ptr): Likewise.\n+\t(current_ui_current_uiout_ptr): Likewise.\n+\t(gen_ret_current_ui_field_ptr): Remove.\n+\n 2019-11-21  Tom de Vries  <tdevries@suse.de>\n \n \tPR gdb/24956"
    },
    {
      "sha": "2953eac81967dd54f8451ea88f976f24fffaaa82",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 26,
      "deletions": 12,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87fb00ea229f69a659ea044588b88bec03ae3a9c/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87fb00ea229f69a659ea044588b88bec03ae3a9c/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=87fb00ea229f69a659ea044588b88bec03ae3a9c",
      "patch": "@@ -92,21 +92,35 @@ extern void initialize_all_files (void);\n #define DEFAULT_PROMPT\t\"(gdb) \"\n #endif\n \n-/* Generate a function that exports a pointer to a field of the\n-   current UI.  */\n+struct ui_file **\n+current_ui_gdb_stdout_ptr ()\n+{\n+  return &current_ui->m_gdb_stdout;\n+}\n+\n+struct ui_file **\n+current_ui_gdb_stdin_ptr ()\n+{\n+  return &current_ui->m_gdb_stdin;\n+}\n \n-#define gen_ret_current_ui_field_ptr(type, name)\t\\\n-type *\t\t\t\t\t\t\t\\\n-current_ui_## name ## _ptr (void)\t\t\t\\\n-{\t\t\t\t\t\t\t\\\n-  return &current_ui->m_ ## name;\t\t\\\n+struct ui_file **\n+current_ui_gdb_stderr_ptr ()\n+{\n+  return &current_ui->m_gdb_stderr;\n }\n \n-gen_ret_current_ui_field_ptr (struct ui_file *, gdb_stdout)\n-gen_ret_current_ui_field_ptr (struct ui_file *, gdb_stdin)\n-gen_ret_current_ui_field_ptr (struct ui_file *, gdb_stderr)\n-gen_ret_current_ui_field_ptr (struct ui_file *, gdb_stdlog)\n-gen_ret_current_ui_field_ptr (struct ui_out *, current_uiout)\n+struct ui_file **\n+current_ui_gdb_stdlog_ptr ()\n+{\n+  return &current_ui->m_gdb_stdlog;\n+}\n+\n+struct ui_out **\n+current_ui_current_uiout_ptr ()\n+{\n+  return &current_ui->m_current_uiout;\n+}\n \n int inhibit_gdbinit = 0;\n "
    }
  ]
}