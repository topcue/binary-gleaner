{
  "sha": "3f4a0053d9699d19a0251cd8c87871c65994e8e1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2Y0YTAwNTNkOTY5OWQxOWEwMjUxY2Q4Yzg3ODcxYzY1OTk0ZThlMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:34Z"
    },
    "message": "Introduce ada_var_msym_value_operation\n\nThis adds class ada_var_msym_value_operation, which implements\nOP_VAR_MSYM_VALUE for Ada.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_var_msym_value_operation::evaluate_for_cast):\n\tNew method.\n\t* ada-exp.h (class ada_var_msym_value_operation): New.",
    "tree": {
      "sha": "34aa44b40bab445276fcc9f688bd64edc579e166",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/34aa44b40bab445276fcc9f688bd64edc579e166"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3f4a0053d9699d19a0251cd8c87871c65994e8e1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f4a0053d9699d19a0251cd8c87871c65994e8e1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3f4a0053d9699d19a0251cd8c87871c65994e8e1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f4a0053d9699d19a0251cd8c87871c65994e8e1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "99a3b1e77b6bd5fdca5874d3276ab9499308bc08",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/99a3b1e77b6bd5fdca5874d3276ab9499308bc08",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/99a3b1e77b6bd5fdca5874d3276ab9499308bc08"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 48,
    "deletions": 0
  },
  "files": [
    {
      "sha": "34f80b444866e51c25f553ae88000b7b8c67732c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f4a0053d9699d19a0251cd8c87871c65994e8e1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f4a0053d9699d19a0251cd8c87871c65994e8e1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3f4a0053d9699d19a0251cd8c87871c65994e8e1",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_var_msym_value_operation::evaluate_for_cast):\n+\tNew method.\n+\t* ada-exp.h (class ada_var_msym_value_operation): New.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_var_value_operation::evaluate_for_cast)"
    },
    {
      "sha": "0fe6ecf7e93a45cb302a529add2bc3b691bd8534",
      "filename": "gdb/ada-exp.h",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f4a0053d9699d19a0251cd8c87871c65994e8e1/gdb/ada-exp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f4a0053d9699d19a0251cd8c87871c65994e8e1/gdb/ada-exp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-exp.h?ref=3f4a0053d9699d19a0251cd8c87871c65994e8e1",
      "patch": "@@ -304,6 +304,23 @@ class ada_var_value_operation\n   using operation::do_generate_ax;\n };\n \n+/* Variant of var_msym_value_operation for Ada.  */\n+class ada_var_msym_value_operation\n+  : public var_msym_value_operation\n+{\n+public:\n+\n+  using var_msym_value_operation::var_msym_value_operation;\n+\n+  value *evaluate_for_cast (struct type *expect_type,\n+\t\t\t    struct expression *exp,\n+\t\t\t    enum noside noside) override;\n+\n+protected:\n+\n+  using operation::do_generate_ax;\n+};\n+\n } /* namespace expr */\n \n #endif /* ADA_EXP_H */"
    },
    {
      "sha": "eb21748ef6aee430d9270b45764ba080e628d152",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f4a0053d9699d19a0251cd8c87871c65994e8e1/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f4a0053d9699d19a0251cd8c87871c65994e8e1/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=3f4a0053d9699d19a0251cd8c87871c65994e8e1",
      "patch": "@@ -10553,6 +10553,31 @@ ada_unop_atr_operation::evaluate (struct type *expect_type,\n \t\t       val, type_arg, std::get<2> (m_storage));\n }\n \n+value *\n+ada_var_msym_value_operation::evaluate_for_cast (struct type *expect_type,\n+\t\t\t\t\t\t struct expression *exp,\n+\t\t\t\t\t\t enum noside noside)\n+{\n+  if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+    return value_zero (expect_type, not_lval);\n+\n+  value *val = evaluate_var_msym_value (noside,\n+\t\t\t\t\tstd::get<1> (m_storage),\n+\t\t\t\t\tstd::get<0> (m_storage));\n+\n+  val = ada_value_cast (expect_type, val);\n+\n+  /* Follow the Ada language semantics that do not allow taking\n+     an address of the result of a cast (view conversion in Ada).  */\n+  if (VALUE_LVAL (val) == lval_memory)\n+    {\n+      if (value_lazy (val))\n+\tvalue_fetch_lazy (val);\n+      VALUE_LVAL (val) = not_lval;\n+    }\n+  return val;\n+}\n+\n value *\n ada_var_value_operation::evaluate_for_cast (struct type *expect_type,\n \t\t\t\t\t    struct expression *exp,"
    }
  ]
}