{
  "sha": "b3f9469bfa42ef352e1d96f8733817242dd41a2e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjNmOTQ2OWJmYTQyZWYzNTJlMWQ5NmY4NzMzODE3MjQyZGQ0MWEyZQ==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-12-18T15:17:46Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-12-18T21:02:13Z"
    },
    "message": "Fix accessing a method's fields from Python\n\nConsidering this example:\n\nstruct C\n{\n  int func() { return 1; }\n} c;\nint main()\n{\n  return c.func();\n}\n\nAccessing the fields of C::func, when requesting the function by its\ntype, works:\n\n(gdb) py print(gdb.parse_and_eval('C::func').type.fields()[0].type)\nC * const\n\nBut when trying to do the same via a class instance, it fails:\n\n(gdb) py print(gdb.parse_and_eval('c')['func'].type.fields()[0].type)\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nTypeError: Type is not a structure, union, enum, or function type.\nError while executing Python code.\n\nThe difference is that in the former the function type is TYPE_CODE_FUNC:\n\n(gdb) py print(gdb.parse_and_eval('C::func').type.code == gdb.TYPE_CODE_FUNC)\nTrue\n\nAnd in the latter the function type is TYPE_CODE_METHOD:\n\n(gdb) py print(gdb.parse_and_eval('c')['func'].type.code == gdb.TYPE_CODE_METHOD)\nTrue\n\nSo this adds the functionality for TYPE_CODE_METHOD as well.\n\ngdb/ChangeLog:\n\n2020-12-18  Hannes Domani  <ssbssa@yahoo.de>\n\n\t* python/py-type.c (typy_get_composite): Add TYPE_CODE_METHOD.\n\ngdb/testsuite/ChangeLog:\n\n2020-12-18  Hannes Domani  <ssbssa@yahoo.de>\n\n\t* gdb.python/py-type.exp: Add tests for TYPE_CODE_METHOD.",
    "tree": {
      "sha": "07def32995663d9caa9b5e4bca93573a6ec8a34e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/07def32995663d9caa9b5e4bca93573a6ec8a34e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b3f9469bfa42ef352e1d96f8733817242dd41a2e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b3f9469bfa42ef352e1d96f8733817242dd41a2e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b3f9469bfa42ef352e1d96f8733817242dd41a2e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b3f9469bfa42ef352e1d96f8733817242dd41a2e/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a9e48095a8e595f04042f9455a50ce6acbd5232c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9e48095a8e595f04042f9455a50ce6acbd5232c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a9e48095a8e595f04042f9455a50ce6acbd5232c"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 12,
    "deletions": 0
  },
  "files": [
    {
      "sha": "1a104b1f339dd15c62a58360b199e6f4a8bc5ffa",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b3f9469bfa42ef352e1d96f8733817242dd41a2e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b3f9469bfa42ef352e1d96f8733817242dd41a2e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b3f9469bfa42ef352e1d96f8733817242dd41a2e",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-18  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* python/py-type.c (typy_get_composite): Add TYPE_CODE_METHOD.\n+\n 2020-12-18  Jameson Nash  <vtjnash@gmail.com>\n \n \t* coffread.c (linetab_offset): Change type to file_ptr."
    },
    {
      "sha": "3fc0f61c635033699a33a8737c55988f8b0da38a",
      "filename": "gdb/python/py-type.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b3f9469bfa42ef352e1d96f8733817242dd41a2e/gdb/python/py-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b3f9469bfa42ef352e1d96f8733817242dd41a2e/gdb/python/py-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-type.c?ref=b3f9469bfa42ef352e1d96f8733817242dd41a2e",
      "patch": "@@ -471,6 +471,7 @@ typy_get_composite (struct type *type)\n   if (type->code () != TYPE_CODE_STRUCT\n       && type->code () != TYPE_CODE_UNION\n       && type->code () != TYPE_CODE_ENUM\n+      && type->code () != TYPE_CODE_METHOD\n       && type->code () != TYPE_CODE_FUNC)\n     {\n       PyErr_SetString (PyExc_TypeError,"
    },
    {
      "sha": "73425638a23b12b272b3c4c339511fc9edb34d0a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b3f9469bfa42ef352e1d96f8733817242dd41a2e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b3f9469bfa42ef352e1d96f8733817242dd41a2e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b3f9469bfa42ef352e1d96f8733817242dd41a2e",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-18  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* gdb.python/py-type.exp: Add tests for TYPE_CODE_METHOD.\n+\n 2020-12-18  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/fixed_points.exp: Also run with"
    },
    {
      "sha": "5166f9ecee6844d62c2d2c4ab9d6654f0cc44618",
      "filename": "gdb/testsuite/gdb.python/py-type.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b3f9469bfa42ef352e1d96f8733817242dd41a2e/gdb/testsuite/gdb.python/py-type.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b3f9469bfa42ef352e1d96f8733817242dd41a2e/gdb/testsuite/gdb.python/py-type.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-type.exp?ref=b3f9469bfa42ef352e1d96f8733817242dd41a2e",
      "patch": "@@ -83,15 +83,18 @@ proc test_fields {lang} {\n       gdb_test \"python print (gdb.parse_and_eval ('C::a_method').type.fields ()\\[0\\].type)\" \"C \\\\* const\"\n       gdb_test \"python print (gdb.parse_and_eval ('C::a_method').type.fields ()\\[1\\].type)\" \"int\"\n       gdb_test \"python print (gdb.parse_and_eval ('C::a_method').type.fields ()\\[2\\].type)\" \"char\"\n+      gdb_test \"python print (gdb.parse_and_eval ('c')\\['a_method'\\].type.fields ()\\[0\\].type)\" \"C \\\\* const\"\n \n       gdb_test \"python print (len (gdb.parse_and_eval ('C::a_const_method').type.fields ()))\" \"3\"\n       gdb_test \"python print (gdb.parse_and_eval ('C::a_const_method').type.fields ()\\[0\\].type)\" \"const C \\\\* const\"\n       gdb_test \"python print (gdb.parse_and_eval ('C::a_const_method').type.fields ()\\[1\\].type)\" \"int\"\n       gdb_test \"python print (gdb.parse_and_eval ('C::a_const_method').type.fields ()\\[2\\].type)\" \"char\"\n+      gdb_test \"python print (gdb.parse_and_eval ('c')\\['a_const_method'\\].type.fields ()\\[0\\].type)\" \"const C \\\\* const\"\n \n       gdb_test \"python print (len (gdb.parse_and_eval ('C::a_static_method').type.fields ()))\" \"2\"\n       gdb_test \"python print (gdb.parse_and_eval ('C::a_static_method').type.fields ()\\[0\\].type)\" \"int\"\n       gdb_test \"python print (gdb.parse_and_eval ('C::a_static_method').type.fields ()\\[1\\].type)\" \"char\"\n+      gdb_test \"python print (gdb.parse_and_eval ('c')\\['a_static_method'\\].type.fields ()\\[0\\].type)\" \"int\"\n     }\n \n     # Test normal fields usage in structs."
    }
  ]
}