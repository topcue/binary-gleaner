{
  "sha": "229a22cfd2fd3c82a1b57d4af104f361cb0b0a33",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjI5YTIyY2ZkMmZkM2M4MmExYjU3ZDRhZjEwNGYzNjFjYjBiMGEzMw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-11-18T12:09:04Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-11-28T00:03:03Z"
    },
    "message": "binutils: Add a new function to initialise DWARF register name state\n\nAdds a new API function init_dwarf_regnames_by_bfd_arch_and_mach to\ninitialise the register name state from a BFD architecture and machine\ntype.\n\nThere should be no user visible changes after this commit.\n\nbinutils/ChangeLog:\n\n\t* dwarf.c (init_dwarf_regnames_by_bfd_arch_and_mach): New\n\tfunction.\n\t* dwarf.h (init_dwarf_regnames_by_bfd_arch_and_mach): Declare.\n\t* objdump.c (dump_dwarf): Call new function instead of calling\n\tspecific initialization routines.  Restrucure so that eh_addr_size\n\tis still calculated correctly.\n\nChange-Id: I346d665d2079a18ec4d04bd41893d0e9dc05e4b3",
    "tree": {
      "sha": "ba37b7607875260926a21347a499d1ba03c46f78",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ba37b7607875260926a21347a499d1ba03c46f78"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/229a22cfd2fd3c82a1b57d4af104f361cb0b0a33",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/229a22cfd2fd3c82a1b57d4af104f361cb0b0a33",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/229a22cfd2fd3c82a1b57d4af104f361cb0b0a33",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/229a22cfd2fd3c82a1b57d4af104f361cb0b0a33/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "955ff7fcf8ddc90200819a184380c64c27b76e91",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/955ff7fcf8ddc90200819a184380c64c27b76e91",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/955ff7fcf8ddc90200819a184380c64c27b76e91"
    }
  ],
  "stats": {
    "total": 99,
    "additions": 63,
    "deletions": 36
  },
  "files": [
    {
      "sha": "c7cb68ca81a5ea094f72b3fe1cf2d9c1ef3ba5e8",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/229a22cfd2fd3c82a1b57d4af104f361cb0b0a33/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/229a22cfd2fd3c82a1b57d4af104f361cb0b0a33/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=229a22cfd2fd3c82a1b57d4af104f361cb0b0a33",
      "patch": "@@ -1,3 +1,12 @@\n+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf.c (init_dwarf_regnames_by_bfd_arch_and_mach): New\n+\tfunction.\n+\t* dwarf.h (init_dwarf_regnames_by_bfd_arch_and_mach): Declare.\n+\t* objdump.c (dump_dwarf): Call new function instead of calling\n+\tspecific initialization routines.  Restrucure so that eh_addr_size\n+\tis still calculated correctly.\n+\n 2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* dwarf.c (init_dwarf_regnames): Renamed to..."
    },
    {
      "sha": "a770c57f6083416ef2fa32d4526c310366f5bb78",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/229a22cfd2fd3c82a1b57d4af104f361cb0b0a33/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/229a22cfd2fd3c82a1b57d4af104f361cb0b0a33/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=229a22cfd2fd3c82a1b57d4af104f361cb0b0a33",
      "patch": "@@ -7625,6 +7625,54 @@ init_dwarf_regnames_by_elf_machine_code (unsigned int e_machine)\n     }\n }\n \n+/* Initialize the DWARF register name lookup state based on the\n+   architecture and specific machine type of a BFD.  */\n+\n+void\n+init_dwarf_regnames_by_bfd_arch_and_mach (enum bfd_architecture arch,\n+\t\t\t\t\t  unsigned long mach)\n+{\n+  switch (arch)\n+    {\n+    case bfd_arch_i386:\n+      switch (mach)\n+\t{\n+\tcase bfd_mach_x86_64:\n+\tcase bfd_mach_x86_64_intel_syntax:\n+\tcase bfd_mach_x86_64_nacl:\n+\tcase bfd_mach_x64_32:\n+\tcase bfd_mach_x64_32_intel_syntax:\n+\tcase bfd_mach_x64_32_nacl:\n+\t  init_dwarf_regnames_x86_64 ();\n+\t  break;\n+\n+\tdefault:\n+\t  init_dwarf_regnames_i386 ();\n+\t  break;\n+\t}\n+      break;\n+\n+    case bfd_arch_iamcu:\n+      init_dwarf_regnames_iamcu ();\n+      break;\n+\n+    case bfd_arch_aarch64:\n+      init_dwarf_regnames_aarch64();\n+      break;\n+\n+    case bfd_arch_s390:\n+      init_dwarf_regnames_s390 ();\n+      break;\n+\n+    case bfd_arch_riscv:\n+      init_dwarf_regnames_riscv ();\n+      break;\n+\n+    default:\n+      break;\n+    }\n+}\n+\n static const char *\n regname (unsigned int regno, int row)\n {"
    },
    {
      "sha": "8272de857b5b9d1dff825d5640f5463ad2c08637",
      "filename": "binutils/dwarf.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/229a22cfd2fd3c82a1b57d4af104f361cb0b0a33/binutils/dwarf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/229a22cfd2fd3c82a1b57d4af104f361cb0b0a33/binutils/dwarf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.h?ref=229a22cfd2fd3c82a1b57d4af104f361cb0b0a33",
      "patch": "@@ -226,6 +226,8 @@ extern unsigned long dwarf_start_die;\n extern int dwarf_check;\n \n extern void init_dwarf_regnames_by_elf_machine_code (unsigned int);\n+extern void init_dwarf_regnames_by_bfd_arch_and_mach (enum bfd_architecture arch,\n+\t\t\t\t\t\t      unsigned long mach);\n extern void init_dwarf_regnames_i386 (void);\n extern void init_dwarf_regnames_iamcu (void);\n extern void init_dwarf_regnames_x86_64 (void);"
    },
    {
      "sha": "6a1f142a0ebc8f354c2999ba3c5d91aa8148554f",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 4,
      "deletions": 36,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/229a22cfd2fd3c82a1b57d4af104f361cb0b0a33/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/229a22cfd2fd3c82a1b57d4af104f361cb0b0a33/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=229a22cfd2fd3c82a1b57d4af104f361cb0b0a33",
      "patch": "@@ -2975,54 +2975,22 @@ dump_dwarf (bfd *abfd)\n       return;\n     }\n \n-  eh_addr_size = bfd_arch_bits_per_address (abfd) / 8;\n-\n   switch (bfd_get_arch (abfd))\n     {\n-    case bfd_arch_i386:\n-      switch (bfd_get_mach (abfd))\n-\t{\n-\tcase bfd_mach_x86_64:\n-\tcase bfd_mach_x86_64_intel_syntax:\n-\tcase bfd_mach_x86_64_nacl:\n-\tcase bfd_mach_x64_32:\n-\tcase bfd_mach_x64_32_intel_syntax:\n-\tcase bfd_mach_x64_32_nacl:\n-\t  init_dwarf_regnames_x86_64 ();\n-\t  break;\n-\n-\tdefault:\n-\t  init_dwarf_regnames_i386 ();\n-\t  break;\n-\t}\n-      break;\n-\n-    case bfd_arch_iamcu:\n-      init_dwarf_regnames_iamcu ();\n-      break;\n-\n-    case bfd_arch_aarch64:\n-      init_dwarf_regnames_aarch64();\n-      break;\n-\n-    case bfd_arch_s390:\n-      init_dwarf_regnames_s390 ();\n-      break;\n-\n-    case bfd_arch_riscv:\n-      init_dwarf_regnames_riscv ();\n-      break;\n-\n     case bfd_arch_s12z:\n       /* S12Z has a 24 bit address space.  But the only known\n \t producer of dwarf_info encodes addresses into 32 bits.  */\n       eh_addr_size = 4;\n       break;\n \n     default:\n+      eh_addr_size = bfd_arch_bits_per_address (abfd) / 8;\n       break;\n     }\n \n+  init_dwarf_regnames_by_bfd_arch_and_mach (bfd_get_arch (abfd),\n+\t\t\t\t\t    bfd_get_mach (abfd));\n+\n   bfd_map_over_sections (abfd, dump_dwarf_section, NULL);\n }\n \f"
    }
  ]
}