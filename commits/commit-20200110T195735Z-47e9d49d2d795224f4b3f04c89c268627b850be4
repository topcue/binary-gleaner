{
  "sha": "47e9d49d2d795224f4b3f04c89c268627b850be4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDdlOWQ0OWQyZDc5NTIyNGY0YjNmMDRjODljMjY4NjI3Yjg1MGJlNA==",
  "commit": {
    "author": {
      "name": "George Barrett",
      "email": "bob@bob131.so",
      "date": "2020-01-10T19:30:01Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-01-10T19:57:35Z"
    },
    "message": "gdb/testsuite/gdb.base/stap-probe: Minor clean-up\n\nThis patch resolves a couple of issues with the test case for SystemTap\nuser-space probe points:\n  1. The preprocessor macro guarding the semaphore variables in the C\n     file is (rather confusingly) named USE_PROBES. This has been\n     renamed to USE_SEMAPHORES, to better reflect its function.\n  2. The test procedures in the expect file improperly pass the flag\n     defining USE_PROBES to prepare_for_testing; as such, the test\n     binary that's supposed to have probes with semaphores is the same\n     as the one without. This has also been fixed.\n  3. No test is performed to check that `info probes' returns\n     information about probe semaphores. Such a test is included in this\n     patch.\n\ngdb/testsuite/ChangeLog\n2020-01-10  George Barrett  <bob@bob131.so>\n\n\t* gdb.base/stap-probe.c: Rename USE_PROBES to USE_SEMAPHORES.\n\t* gdb.base/stap-probe.exp: Likewise.\n\t(stap_test): Pass argument as an additional flag.\n\t(stap_test_no_debuginfo): Likewise.\n\t(stap_test): Check `info probes stap' output for semaphore\n\taddresses if the test binary is supposed to have them.",
    "tree": {
      "sha": "884f14b0f2b79d843eb5bb78d106d5c7fd6c3df5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/884f14b0f2b79d843eb5bb78d106d5c7fd6c3df5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/47e9d49d2d795224f4b3f04c89c268627b850be4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/47e9d49d2d795224f4b3f04c89c268627b850be4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/47e9d49d2d795224f4b3f04c89c268627b850be4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/47e9d49d2d795224f4b3f04c89c268627b850be4/comments",
  "author": {
    "login": "Bob131",
    "id": 4337852,
    "node_id": "MDQ6VXNlcjQzMzc4NTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4337852?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Bob131",
    "html_url": "https://github.com/Bob131",
    "followers_url": "https://api.github.com/users/Bob131/followers",
    "following_url": "https://api.github.com/users/Bob131/following{/other_user}",
    "gists_url": "https://api.github.com/users/Bob131/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Bob131/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Bob131/subscriptions",
    "organizations_url": "https://api.github.com/users/Bob131/orgs",
    "repos_url": "https://api.github.com/users/Bob131/repos",
    "events_url": "https://api.github.com/users/Bob131/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Bob131/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7f02673206eaef00f240b84c21069b4e5fbe09ea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f02673206eaef00f240b84c21069b4e5fbe09ea",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7f02673206eaef00f240b84c21069b4e5fbe09ea"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 22,
    "deletions": 8
  },
  "files": [
    {
      "sha": "84fa9aec6dbd04c00bb1257b5398d12efc08529e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47e9d49d2d795224f4b3f04c89c268627b850be4/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47e9d49d2d795224f4b3f04c89c268627b850be4/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=47e9d49d2d795224f4b3f04c89c268627b850be4",
      "patch": "@@ -1,3 +1,12 @@\n+2020-01-10  George Barrett  <bob@bob131.so>\n+\n+\t* gdb.base/stap-probe.c: Rename USE_PROBES to USE_SEMAPHORES.\n+\t* gdb.base/stap-probe.exp: Likewise.\n+\t(stap_test): Pass argument as an additional flag.\n+\t(stap_test_no_debuginfo): Likewise.\n+\t(stap_test): Check `info probes stap' output for semaphore\n+\taddresses if the test binary is supposed to have them.\n+\n 2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.tui/basic.exp: Add more scrolling tests."
    },
    {
      "sha": "3d742d1253e12c8679f4a9fde36eb5ea7e528975",
      "filename": "gdb/testsuite/gdb.base/stap-probe.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47e9d49d2d795224f4b3f04c89c268627b850be4/gdb/testsuite/gdb.base/stap-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47e9d49d2d795224f4b3f04c89c268627b850be4/gdb/testsuite/gdb.base/stap-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/stap-probe.c?ref=47e9d49d2d795224f4b3f04c89c268627b850be4",
      "patch": "@@ -15,7 +15,7 @@\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n \n-#if USE_PROBES\n+#if USE_SEMAPHORES\n \n #define _SDT_HAS_SEMAPHORES\n __extension__ unsigned short test_user_semaphore __attribute__ ((unused)) __attribute__ ((section (\".probes\")));"
    },
    {
      "sha": "fce528645100c137cee7f1df8d67dc5e0e8e9db0",
      "filename": "gdb/testsuite/gdb.base/stap-probe.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 7,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47e9d49d2d795224f4b3f04c89c268627b850be4/gdb/testsuite/gdb.base/stap-probe.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47e9d49d2d795224f4b3f04c89c268627b850be4/gdb/testsuite/gdb.base/stap-probe.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/stap-probe.exp?ref=47e9d49d2d795224f4b3f04c89c268627b850be4",
      "patch": "@@ -22,7 +22,7 @@ proc stap_test {exec_name {arg \"\"}} {\n     global testfile hex srcfile\n \n     if {[prepare_for_testing \"failed to prepare\" ${exec_name} $srcfile \\\n-\t   [concat $arg debug]]} {\n+\t   [concat additional_flags=$arg debug]]} {\n \treturn -1\n     }\n \n@@ -33,9 +33,14 @@ proc stap_test {exec_name {arg \"\"}} {\n     gdb_test \"print \\$_probe_argc\" \"No probe at PC $hex\" \\\n \t\"check argument not at probe point\"\n \n-    gdb_test \"info probes stap\" \\\n-\t\"test *user *$hex .*\"\n-    \n+    if {[string first \"-DUSE_SEMAPHORES\" $arg] != -1} {\n+\tgdb_test \"info probes stap\" \\\n+\t    \"test *user *$hex *$hex .*\"\n+    } else {\n+\tgdb_test \"info probes stap\" \\\n+\t    \"test *user *$hex .*\"\n+    }\n+\n     if {[runto \"-pstap test:user\"]} {\n \tpass \"run to -pstap test:user\"\n     } else {\n@@ -96,7 +101,7 @@ proc stap_test_no_debuginfo {exec_name {arg \"\"}} {\n     global testfile hex\n \n     if {[prepare_for_testing \"failed to prepare\" ${exec_name} ${testfile}.c \\\n-\t   {$arg nodebug optimize=-O2}]} {\n+\t   [concat additional_flags=$arg nodebug optimize=-O2]]} {\n \treturn -1\n     }\n \n@@ -166,13 +171,13 @@ with_test_prefix \"without semaphore, not optimized\" {\n }\n \n with_test_prefix \"with semaphore, not optimized\" {\n-    stap_test \"stap-probe-sem-noopt\" \"-DUSE_PROBES\"\n+    stap_test \"stap-probe-sem-noopt\" \"-DUSE_SEMAPHORES\"\n }\n \n with_test_prefix \"without semaphore, optimized\" {\n     stap_test_no_debuginfo \"stap-probe-nosem-opt\"\n }\n \n with_test_prefix \"with semaphore, optimized\" {\n-    stap_test_no_debuginfo \"stap-probe-sem-opt\" \"-DUSE_PROBES\"\n+    stap_test_no_debuginfo \"stap-probe-sem-opt\" \"-DUSE_SEMAPHORES\"\n }"
    }
  ]
}