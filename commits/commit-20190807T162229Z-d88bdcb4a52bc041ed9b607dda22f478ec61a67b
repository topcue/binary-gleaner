{
  "sha": "d88bdcb4a52bc041ed9b607dda22f478ec61a67b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDg4YmRjYjRhNTJiYzA0MWVkOWI2MDdkZGEyMmY0NzhlYzYxYTY3Yg==",
  "commit": {
    "author": {
      "name": "Phillipe Antoine",
      "email": "p.antoine@catenacyber.fr",
      "date": "2019-08-07T16:22:29Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-08-07T16:22:29Z"
    },
    "message": "Prevent objdump from aborting when asked to disassemble an unknown type of ARC binary file.\n\n\tPR 24854\n\t* arc-dis.c (arc_insn_length): Return 0 rather than aborting when\n\tencountering an unknown machine type.\n\t(print_insn_arc): Handle arc_insn_length returning 0.  In error\n\tcases return -1 rather than calling abort.",
    "tree": {
      "sha": "3cc83e5666f0e4b2627053d9d695ec255c6eeabb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3cc83e5666f0e4b2627053d9d695ec255c6eeabb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d88bdcb4a52bc041ed9b607dda22f478ec61a67b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d88bdcb4a52bc041ed9b607dda22f478ec61a67b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d88bdcb4a52bc041ed9b607dda22f478ec61a67b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d88bdcb4a52bc041ed9b607dda22f478ec61a67b/comments",
  "author": {
    "login": "catenacyber",
    "id": 35799796,
    "node_id": "MDQ6VXNlcjM1Nzk5Nzk2",
    "avatar_url": "https://avatars.githubusercontent.com/u/35799796?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/catenacyber",
    "html_url": "https://github.com/catenacyber",
    "followers_url": "https://api.github.com/users/catenacyber/followers",
    "following_url": "https://api.github.com/users/catenacyber/following{/other_user}",
    "gists_url": "https://api.github.com/users/catenacyber/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/catenacyber/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/catenacyber/subscriptions",
    "organizations_url": "https://api.github.com/users/catenacyber/orgs",
    "repos_url": "https://api.github.com/users/catenacyber/repos",
    "events_url": "https://api.github.com/users/catenacyber/events{/privacy}",
    "received_events_url": "https://api.github.com/users/catenacyber/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7c1c1904bedb8f873731651b420a23f573785728",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c1c1904bedb8f873731651b420a23f573785728",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7c1c1904bedb8f873731651b420a23f573785728"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 19,
    "deletions": 6
  },
  "files": [
    {
      "sha": "97c29429299908e964b71c5385d4ddc07f6cb5f0",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d88bdcb4a52bc041ed9b607dda22f478ec61a67b/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d88bdcb4a52bc041ed9b607dda22f478ec61a67b/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=d88bdcb4a52bc041ed9b607dda22f478ec61a67b",
      "patch": "@@ -1,3 +1,11 @@\n+2019-08-07  Phillipe Antoine  <p.antoine@catenacyber.fr>\n+\n+\tPR 24854\n+\t* arc-dis.c (arc_insn_length): Return 0 rather than aborting when\n+\tencountering an unknown machine type.\n+\t(print_insn_arc): Handle arc_insn_length returning 0.  In error\n+\tcases return -1 rather than calling abort.\n+\n 2019-08-07  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-opc.tbl (fld, fstp): Drop FloatMF from extended forms."
    },
    {
      "sha": "3c88c334283717103d100d31782e6da4a83388f9",
      "filename": "opcodes/arc-dis.c",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d88bdcb4a52bc041ed9b607dda22f478ec61a67b/opcodes/arc-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d88bdcb4a52bc041ed9b607dda22f478ec61a67b/opcodes/arc-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arc-dis.c?ref=d88bdcb4a52bc041ed9b607dda22f478ec61a67b",
      "patch": "@@ -672,7 +672,7 @@ arc_insn_length (bfd_byte msb, bfd_byte lsb, struct disassemble_info *info)\n       break;\n \n     default:\n-      abort ();\n+      return 0;\n     }\n }\n \n@@ -1009,15 +1009,13 @@ print_insn_arc (bfd_vma memaddr,\n      the number of bytes objdump should display on a single line.  If\n      the instruction decoder sets this, it should always set it to\n      the same value in order to get reasonable looking output.  */\n-\n   info->bytes_per_line  = 8;\n \n   /* In the next lines, we set two info variables control the way\n      objdump displays the raw data.  For example, if bytes_per_line is\n      8 and bytes_per_chunk is 4, the output will look like this:\n      00:   00000000 00000000\n      with the chunks displayed according to \"display_endian\".  */\n-\n   if (info->section\n       && !(info->section->flags & SEC_CODE))\n     {\n@@ -1072,13 +1070,16 @@ print_insn_arc (bfd_vma memaddr,\n \t  (*info->fprintf_func) (info->stream, \".word\\t0x%08lx\", data);\n \t  break;\n \tdefault:\n-\t  abort ();\n+\t  return -1;\n \t}\n       return size;\n     }\n \n   insn_len = arc_insn_length (buffer[highbyte], buffer[lowbyte], info);\n   pr_debug (\"instruction length = %d bytes\\n\", insn_len);\n+  if (insn_len == 0)\n+    return -1;\n+\n   arc_infop = info->private_data;\n   arc_infop->insn_len = insn_len;\n \n@@ -1131,7 +1132,7 @@ print_insn_arc (bfd_vma memaddr,\n \n     default:\n       /* There is no instruction whose length is not 2, 4, 6, or 8.  */\n-      abort ();\n+      return -1;\n     }\n \n   pr_debug (\"instruction value = %llx\\n\", insn);\n@@ -1159,24 +1160,28 @@ print_insn_arc (bfd_vma memaddr,\n \t  (*info->fprintf_func) (info->stream, \".shor\\t%#04llx\",\n \t\t\t\t insn & 0xffff);\n \t  break;\n+\n \tcase 4:\n \t  (*info->fprintf_func) (info->stream, \".word\\t%#08llx\",\n \t\t\t\t insn & 0xffffffff);\n \t  break;\n+\n \tcase 6:\n \t  (*info->fprintf_func) (info->stream, \".long\\t%#08llx\",\n \t\t\t\t insn & 0xffffffff);\n \t  (*info->fprintf_func) (info->stream, \".long\\t%#04llx\",\n \t\t\t\t (insn >> 32) & 0xffff);\n \t  break;\n+\n \tcase 8:\n \t  (*info->fprintf_func) (info->stream, \".long\\t%#08llx\",\n \t\t\t\t insn & 0xffffffff);\n \t  (*info->fprintf_func) (info->stream, \".long\\t%#08llx\",\n \t\t\t\t insn >> 32);\n \t  break;\n+\n \tdefault:\n-\t  abort ();\n+\t  return -1;\n \t}\n \n       info->insn_type = dis_noninsn;"
    }
  ]
}