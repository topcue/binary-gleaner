{
  "sha": "f489207efde922e436b1b420d4de071927e3b9d5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjQ4OTIwN2VmZGU5MjJlNDM2YjFiNDIwZDRkZTA3MTkyN2UzYjlkNQ==",
  "commit": {
    "author": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2019-03-28T16:29:22Z"
    },
    "committer": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2019-03-28T16:29:22Z"
    },
    "message": "Fix stepping past unwritable kernel helper on nios2-linux-gnu.\n\nThis patch fixes a problem on nios2-linux-gnu with stepping past the\nkernel helper __kuser_cmpxchg, which was exposed by the testcase\ngdb.threads/watchpoint-fork.exp.  The kernel maps this function into\nuser space on an unwritable page.  In this testcase, the cmpxchg\nhelper is invoked indirectly from the setbuf call in the test program.\nSince this target lacks hardware breakpoint/watchpoint support, GDB\ntries to single-step through the program by setting software\nbreakpoints, and was just giving an error when it reached the function\non the unwritable page.\n\nThe solution here is to always step over the call instead of stepping\ninto it; cmpxchg is supposed to be an atomic operation so this\nbehavior seems reasonable.  The hook in nios2_get_next_pc is somewhat\ngeneric, but at present cmpxchg is the only helper provided by the\nLinux kernel that is invoked by an ordinary function call.  (Signal\nreturn trampolines also go through the unwritable page but not by a\nfunction call.)\n\nFixing this issue also revealed that the testcase needs a much larger\ntimeout factor when software single-stepping is used.  That has also\nbeen fixed in this patch.\n\ngdb/ChangeLog\n\n2019-03-28  Sandra Loosemore  <sandra@codesourcery.com>\n\n        * nios2-tdep.h (struct gdbarch_tdep): Add is_kernel_helper.\n        * nios2-tdep.c (nios2_get_next_pc): Skip over kernel helpers.\n        * nios2-linux-tdep.c (nios2_linux_is_kernel_helper): New.\n        (nios2_linux_init_abi): Install it.\n\ngdb/testsuite/ChangeLog\n\n2019-03-28  Sandra Loosemore  <sandra@codesourcery.com>\n\n        * gdb.threads/watchpoint-fork.exp (test): Use large timeout\n        factor when no hardware watchpoint support.",
    "tree": {
      "sha": "d2c155fb7a9b7f4fec5fc0af7d18bbae11ee0d57",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d2c155fb7a9b7f4fec5fc0af7d18bbae11ee0d57"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f489207efde922e436b1b420d4de071927e3b9d5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f489207efde922e436b1b420d4de071927e3b9d5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f489207efde922e436b1b420d4de071927e3b9d5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f489207efde922e436b1b420d4de071927e3b9d5/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "c92df149c29518f6e1d4a3174b3e29162fcd3ad6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c92df149c29518f6e1d4a3174b3e29162fcd3ad6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c92df149c29518f6e1d4a3174b3e29162fcd3ad6"
    }
  ],
  "stats": {
    "total": 88,
    "additions": 71,
    "deletions": 17
  },
  "files": [
    {
      "sha": "0b3ba3c785b05ff914841a5f8ade8a7ba9fd6097",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f489207efde922e436b1b420d4de071927e3b9d5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f489207efde922e436b1b420d4de071927e3b9d5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f489207efde922e436b1b420d4de071927e3b9d5",
      "patch": "@@ -1,3 +1,10 @@\n+2019-03-28  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* nios2-tdep.h (struct gdbarch_tdep): Add is_kernel_helper.\n+\t* nios2-tdep.c (nios2_get_next_pc): Skip over kernel helpers.\n+\t* nios2-linux-tdep.c (nios2_linux_is_kernel_helper): New.\n+\t(nios2_linux_init_abi): Install it.\n+\n 2019-03-28  Alan Hayward  <alan.hayward@arm.com>\n \n \t* aarch64-tdep.c (aarch64_vnv_type): Use vector types."
    },
    {
      "sha": "2d38e603c068a98d503849aeed96268da132e6be",
      "filename": "gdb/nios2-linux-tdep.c",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f489207efde922e436b1b420d4de071927e3b9d5/gdb/nios2-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f489207efde922e436b1b420d4de071927e3b9d5/gdb/nios2-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nios2-linux-tdep.c?ref=f489207efde922e436b1b420d4de071927e3b9d5",
      "patch": "@@ -200,6 +200,17 @@ nios2_linux_syscall_next_pc (struct frame_info *frame,\n   return pc + op->size;\n }\n \n+/* Return true if PC is a kernel helper, a function mapped by the kernel\n+   into user space on an unwritable page.  Currently the only such function\n+   is __kuser_cmpxchg at 0x1004.  See arch/nios2/kernel/entry.S in the Linux\n+   kernel sources and sysdeps/unix/sysv/linux/nios2/atomic-machine.h in\n+   GLIBC.  */\n+static bool\n+nios2_linux_is_kernel_helper (CORE_ADDR pc)\n+{\n+  return pc == 0x1004;\n+}\n+\n /* Hook function for gdbarch_register_osabi.  */\n \n static void\n@@ -230,6 +241,7 @@ nios2_linux_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n \t\t\t\t  &nios2_r1_linux_rt_sigreturn_tramp_frame);\n \n   tdep->syscall_next_pc = nios2_linux_syscall_next_pc;\n+  tdep->is_kernel_helper = nios2_linux_is_kernel_helper;\n \n   /* Index of target address word in glibc jmp_buf.  */\n   tdep->jb_pc = 10;"
    },
    {
      "sha": "08664541133dc9aebac00147ebc75195c43f5f24",
      "filename": "gdb/nios2-tdep.c",
      "status": "modified",
      "additions": 23,
      "deletions": 4,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f489207efde922e436b1b420d4de071927e3b9d5/gdb/nios2-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f489207efde922e436b1b420d4de071927e3b9d5/gdb/nios2-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nios2-tdep.c?ref=f489207efde922e436b1b420d4de071927e3b9d5",
      "patch": "@@ -2169,13 +2169,32 @@ nios2_get_next_pc (struct regcache *regcache, CORE_ADDR pc)\n \t}\n     }\n \n-  else if (nios2_match_jmpi (insn, op, mach, &uimm)\n-\t   || nios2_match_calli (insn, op, mach, &uimm))\n+  else if (nios2_match_jmpi (insn, op, mach, &uimm))\n     pc = (pc & 0xf0000000) | uimm;\n+  else if (nios2_match_calli (insn, op, mach, &uimm))\n+    {\n+      CORE_ADDR callto = (pc & 0xf0000000) | uimm;\n+      if (tdep->is_kernel_helper != NULL\n+\t  && tdep->is_kernel_helper (callto))\n+\t/* Step over call to kernel helper, which we cannot debug\n+\t   from user space.  */\n+\tpc += op->size;\n+      else\n+\tpc = callto;\n+    }\n \n-  else if (nios2_match_jmpr (insn, op, mach, &ra)\n-\t   || nios2_match_callr (insn, op, mach, &ra))\n+  else if (nios2_match_jmpr (insn, op, mach, &ra))\n     pc = regcache_raw_get_unsigned (regcache, ra);\n+  else if (nios2_match_callr (insn, op, mach, &ra))\n+    {\n+      CORE_ADDR callto = regcache_raw_get_unsigned (regcache, ra);\n+      if (tdep->is_kernel_helper != NULL\n+\t  && tdep->is_kernel_helper (callto))\n+\t/* Step over call to kernel helper.  */\n+\tpc += op->size;\n+      else\n+\tpc = callto;\n+    }\n \n   else if (nios2_match_ldwm (insn, op, mach, &uimm, &ra, &imm, &wb, &id, &ret)\n \t   && ret)"
    },
    {
      "sha": "275dcd74aeb53acbf8b00f64f481156df8fe3c58",
      "filename": "gdb/nios2-tdep.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f489207efde922e436b1b420d4de071927e3b9d5/gdb/nios2-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f489207efde922e436b1b420d4de071927e3b9d5/gdb/nios2-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nios2-tdep.h?ref=f489207efde922e436b1b420d4de071927e3b9d5",
      "patch": "@@ -74,6 +74,9 @@ struct gdbarch_tdep\n   CORE_ADDR (*syscall_next_pc) (struct frame_info *frame,\n \t\t\t\tconst struct nios2_opcode *op);\n \n+  /* Returns true if PC points to a kernel helper function.  */\n+  bool (*is_kernel_helper) (CORE_ADDR pc);\n+\n   /* Offset to PC value in jump buffer.\n      If this is negative, longjmp support will be disabled.  */\n   int jb_pc;"
    },
    {
      "sha": "9f0065b016ab2da03a9bc7a384c52e5e0b009b32",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f489207efde922e436b1b420d4de071927e3b9d5/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f489207efde922e436b1b420d4de071927e3b9d5/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f489207efde922e436b1b420d4de071927e3b9d5",
      "patch": "@@ -1,3 +1,8 @@\n+2019-03-28  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* gdb.threads/watchpoint-fork.exp (test): Use large timeout\n+\tfactor when no hardware watchpoint support.\n+\n 2019-03-28  Alan Hayward  <alan.hayward@arm.com>\n \t    Pedro Alves  <palves@redhat.com>\n "
    },
    {
      "sha": "49a6167ed15088cd8281be993faef3f3aaf83018",
      "filename": "gdb/testsuite/gdb.threads/watchpoint-fork.exp",
      "status": "modified",
      "additions": 21,
      "deletions": 13,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f489207efde922e436b1b420d4de071927e3b9d5/gdb/testsuite/gdb.threads/watchpoint-fork.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f489207efde922e436b1b420d4de071927e3b9d5/gdb/testsuite/gdb.threads/watchpoint-fork.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/watchpoint-fork.exp?ref=f489207efde922e436b1b420d4de071927e3b9d5",
      "patch": "@@ -39,6 +39,12 @@ proc test {type symbol} {\n \t    if [target_info exists gdb,no_hardware_watchpoints] {\n \t\t# The software watchpoint functionality is in GDB an unrelated test.\n \t\tgdb_test_no_output \"set can-use-hw-watchpoints 0\"\n+\t\t# Software watchpoints can be quite slow on remote targets\n+\t\t# on this test because it ends up single-stepping through\n+\t\t# code to initialize dynamic libraries, etc.\n+\t\tset factor 20\n+\t    } else {\n+\t\tset factor 1\n \t    }\n \n \t    gdb_test \"show detach-on-fork\" \"Whether gdb will detach the child of a fork is on\\\\.\"\n@@ -63,19 +69,21 @@ proc test {type symbol} {\n \n \t    gdb_breakpoint \"mark_exit\"\n \n-\t    gdb_test \"continue\" \\\n-\t\t\"reakpoint \\[0-9\\]+, marker.*\" \"hardware breakpoints work\"\n-\t    gdb_test \"continue\" \\\n-\t\t\"atchpoint \\[0-9\\]+: var.*Old value = 0.*New value = 1.*forkoff *\\\\(1\\\\).*\" \"watchpoints work\"\n-\t    gdb_test \"continue\" \\\n-\t\t\"reakpoint \\[0-9\\]+, marker.*\" \"breakpoint after the first fork\"\n-\t    gdb_test \"continue\" \\\n-\t\t\"atchpoint \\[0-9\\]+: var.*Old value = 1.*New value = 2.*forkoff *\\\\(2\\\\).*\" \"watchpoint after the first fork\"\n-\t    gdb_test \"continue\" \\\n-\t\t\"reakpoint \\[0-9\\]+, marker.*\" \"breakpoint after the second fork\"\n-\t    gdb_test \"continue\" \\\n-\t\t\"atchpoint \\[0-9\\]+: var.*Old value = 2.*New value = 3.*mark_exit \\\\(\\\\);\" \"watchpoint after the second fork\"\n-\t    gdb_test \"continue\" \"Continuing\\\\..*\\r\\n(Thread .* hit )?Breakpoint \\[0-9\\]+, mark_exit .*\" \"finish\"\n+\t    with_timeout_factor $factor {\n+\t\tgdb_test \"continue\" \\\n+\t\t    \"reakpoint \\[0-9\\]+, marker.*\" \"hardware breakpoints work\"\n+\t\tgdb_test \"continue\" \\\n+\t\t    \"atchpoint \\[0-9\\]+: var.*Old value = 0.*New value = 1.*forkoff *\\\\(1\\\\).*\" \"watchpoints work\"\n+\t\tgdb_test \"continue\" \\\n+\t\t    \"reakpoint \\[0-9\\]+, marker.*\" \"breakpoint after the first fork\"\n+\t\tgdb_test \"continue\" \\\n+\t\t    \"atchpoint \\[0-9\\]+: var.*Old value = 1.*New value = 2.*forkoff *\\\\(2\\\\).*\" \"watchpoint after the first fork\"\n+\t\tgdb_test \"continue\" \\\n+\t\t    \"reakpoint \\[0-9\\]+, marker.*\" \"breakpoint after the second fork\"\n+\t\tgdb_test \"continue\" \\\n+\t\t    \"atchpoint \\[0-9\\]+: var.*Old value = 2.*New value = 3.*mark_exit \\\\(\\\\);\" \"watchpoint after the second fork\"\n+\t\tgdb_test \"continue\" \"Continuing\\\\..*\\r\\n(Thread .* hit )?Breakpoint \\[0-9\\]+, mark_exit .*\" \"finish\"\n+\t    }\n \t}\n \n \t# threads"
    }
  ]
}