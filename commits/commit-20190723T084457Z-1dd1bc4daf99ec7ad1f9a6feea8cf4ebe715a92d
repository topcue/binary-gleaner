{
  "sha": "1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWRkMWJjNGRhZjk5ZWM3YWQxZjlhNmZlZWE4Y2Y0ZWJlNzE1YTkyZA==",
  "commit": {
    "author": {
      "name": "Omar Majid",
      "email": "omajid@redhat.com",
      "date": "2019-07-23T08:44:57Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-07-23T08:44:57Z"
    },
    "message": "Allow objdump to recognise the System.Runtime.dll files that get shipped with .NET Core 2.1.\n\ninclude\t* coff/i386.h (IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE): Define.\n\t(IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE): Define.\n\t(IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE): Define.\n\t(IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE): Define.\n\t(I386_APPLE_MAGIC): Define.\n\t(I386_FREEBSD_MAGIC): Define.\n\t(I386_LINUX_MAGIC): Define.\n\t(I386_NETBSD_MAGIC): Define.\n\t(I386BADMAG): Extend macro to allow new magic numbers.\n\t* coff/x86_64.h (IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE): Define.\n\t(IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE): Define.\n\t(IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE): Define.\n\t(IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE): Define.\n\t(AMD64_APPLE_MAGIC): Define.\n\t(AMD64_FREEBSD_MAGIC): Define.\n\t(AMD64_LINUX_MAGIC): Define.\n\t(AMD64_NETBSD_MAGIC): Define.\n\t(AMD64BADMAG): Extend macro to allow new magic numbers.\n\nbfd\t* coffcode.h (coff_set_arch_mach_hook): Handle I386_APPLE_MAGIC,\n\tI386_FREEBSD_MAGIC, I386_LINUX_MAGIC, I386_NETBSD_MAGIC,\n\tAMD64_APPLE_MAGIC, AMD64_FREEBSD_MAGIC, AMD64_LINUX_MAGIC,\n\tAMD64_NETBSD_MAGIC.\n\t* peXXigen.c: Add comment about source of .NET magic numbers.\n\nbinutils* Makefile.am (AUTOMAKE_OPTIONS): Add subdir-objects\n\t(GENTESTDLLSPROG): Define.\n\t(TEST_PROGS): Add GENTESTDLLSPROG.\n\t* Makefile.in: Regenerate.\n\t* testsuite/binutils-all/objdump.exp\n\t(test_objdump_dotnet_assemblies): New proc.\n\tRun the new proc.\n\t* testsuite/gentestdlls.c: New source file.",
    "tree": {
      "sha": "968e6d80c069a68fcb0bc8630dd2b67ab14362e3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/968e6d80c069a68fcb0bc8630dd2b67ab14362e3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/comments",
  "author": {
    "login": "omajid",
    "id": 174451,
    "node_id": "MDQ6VXNlcjE3NDQ1MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/174451?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/omajid",
    "html_url": "https://github.com/omajid",
    "followers_url": "https://api.github.com/users/omajid/followers",
    "following_url": "https://api.github.com/users/omajid/following{/other_user}",
    "gists_url": "https://api.github.com/users/omajid/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/omajid/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/omajid/subscriptions",
    "organizations_url": "https://api.github.com/users/omajid/orgs",
    "repos_url": "https://api.github.com/users/omajid/repos",
    "events_url": "https://api.github.com/users/omajid/events{/privacy}",
    "received_events_url": "https://api.github.com/users/omajid/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5ba29434765feed692b6342a8b0f853050be2402",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5ba29434765feed692b6342a8b0f853050be2402",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5ba29434765feed692b6342a8b0f853050be2402"
    }
  ],
  "stats": {
    "total": 352,
    "additions": 335,
    "deletions": 17
  },
  "files": [
    {
      "sha": "2beeb3dfe190279d8b8f9be2ec9a12f6c04792a0",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
      "patch": "@@ -1,3 +1,11 @@\n+2019-07-23  Omar Majid  <omajid@redhat.com>\n+\n+\t* coffcode.h (coff_set_arch_mach_hook): Handle I386_APPLE_MAGIC,\n+\tI386_FREEBSD_MAGIC, I386_LINUX_MAGIC, I386_NETBSD_MAGIC,\n+\tAMD64_APPLE_MAGIC, AMD64_FREEBSD_MAGIC, AMD64_LINUX_MAGIC,\n+\tAMD64_NETBSD_MAGIC.\n+\t* peXXigen.c: Add comment about source of .NET magic numbers.\n+\n 2019-07-19  Alan Modra  <amodra@gmail.com>\n \n \t* reloc.c (BFD_RELOC_PPC64_TPREL34, BFD_RELOC_PPC64_DTPREL34),"
    },
    {
      "sha": "c3f13300a43c97dd357fc434506b983f958e9c2d",
      "filename": "bfd/coffcode.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/bfd/coffcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/bfd/coffcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffcode.h?ref=1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
      "patch": "@@ -2107,11 +2107,19 @@ coff_set_arch_mach_hook (bfd *abfd, void * filehdr)\n     case I386PTXMAGIC:\n     case I386AIXMAGIC:\t\t/* Danbury PS/2 AIX C Compiler.  */\n     case LYNXCOFFMAGIC:\n+    case I386_APPLE_MAGIC:\n+    case I386_FREEBSD_MAGIC:\n+    case I386_LINUX_MAGIC:\n+    case I386_NETBSD_MAGIC:\n       arch = bfd_arch_i386;\n       break;\n #endif\n #ifdef AMD64MAGIC\n     case AMD64MAGIC:\n+    case AMD64_APPLE_MAGIC:\n+    case AMD64_FREEBSD_MAGIC:\n+    case AMD64_LINUX_MAGIC:\n+    case AMD64_NETBSD_MAGIC:\n       arch = bfd_arch_i386;\n       machine = bfd_mach_x86_64;\n       break;"
    },
    {
      "sha": "ee6da6480d83f8928a8b5e42581073667df46e5d",
      "filename": "bfd/peXXigen.c",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/bfd/peXXigen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/bfd/peXXigen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/peXXigen.c?ref=1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
      "patch": "@@ -35,6 +35,13 @@\n    \"Peering Inside the PE: A Tour of the Win32 Portable Executable\n    File Format\", MSJ 1994, Volume 9.\n \n+   The PE/PEI format is also used by .NET. ECMA-335 describes this:\n+\n+   \"Standard ECMA-335 Common Language Infrastructure (CLI)\", 6th Edition, June 2012.\n+\n+   This is also available at\n+   https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-335.pdf.\n+\n    The *sole* difference between the pe format and the pei format is that the\n    latter has an MSDOS 2.0 .exe header on the front that prints the message\n    \"This app must be run under Windows.\" (or some such)."
    },
    {
      "sha": "5238b4702646a3cb7f5f32fc399e32334b1c89b6",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
      "patch": "@@ -1,3 +1,14 @@\n+2019-07-23  Omar Majid  <omajid@redhat.com>\n+\n+\t* Makefile.am (AUTOMAKE_OPTIONS): Add subdir-objects\n+\t(GENTESTDLLSPROG): Define.\n+\t(TEST_PROGS): Add GENTESTDLLSPROG.\n+\t* Makefile.in: Regenerate.\n+\t* testsuite/binutils-all/objdump.exp\n+\t(test_objdump_dotnet_assemblies): New proc.\n+\tRun the new proc.\n+\t* testsuite/gentestdlls.c: New source file.\n+\n 2019-06-28  Nick Clifton  <nickc@redhat.com>\n \n \tPR 24707"
    },
    {
      "sha": "de93ffa0400758bbb5911b1f2496bd210065ca2b",
      "filename": "binutils/Makefile.am",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/binutils/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/binutils/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/Makefile.am?ref=1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
      "patch": "@@ -17,7 +17,7 @@\n # <http://www.gnu.org/licenses/>.\n #\n \n-AUTOMAKE_OPTIONS = dejagnu no-dist foreign\n+AUTOMAKE_OPTIONS = dejagnu no-dist foreign subdir-objects\n ACLOCAL_AMFLAGS = -I .. -I ../config -I ../bfd\n \n SUBDIRS = doc po\n@@ -93,8 +93,9 @@ EXTRA_SCRIPTS = embedspu\n ## Test programs.\n BFDTEST1_PROG = bfdtest1\n BFDTEST2_PROG = bfdtest2\n+GENTESTDLLS_PROG = testsuite/gentestdlls\n \n-TEST_PROGS = $(BFDTEST1_PROG) $(BFDTEST2_PROG)\n+TEST_PROGS = $(BFDTEST1_PROG) $(BFDTEST2_PROG) $(GENTESTDLLS_PROG)\n \n ## We need a special rule to install the programs which are built with\n ## -new, and to rename cxxfilt to c++filt."
    },
    {
      "sha": "16c078fdd32c1f9967cdb2dac15314e0219b866b",
      "filename": "binutils/Makefile.in",
      "status": "modified",
      "additions": 42,
      "deletions": 14,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/binutils/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/binutils/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/Makefile.in?ref=1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
      "patch": "@@ -113,7 +113,7 @@ bin_PROGRAMS = $(am__EXEEXT_5) $(am__EXEEXT_6) $(am__EXEEXT_7) \\\n \t@BUILD_SRCONV@ @BUILD_DLLTOOL@ @BUILD_WINDRES@ @BUILD_WINDMC@ \\\n \t$(am__EXEEXT_11) $(am__EXEEXT_12) $(am__EXEEXT_13) \\\n \t@BUILD_DLLWRAP@ $(am__empty)\n-noinst_PROGRAMS = $(am__EXEEXT_17) $(am__EXEEXT_20) @BUILD_MISC@\n+noinst_PROGRAMS = $(am__EXEEXT_17) $(am__EXEEXT_21) @BUILD_MISC@\n EXTRA_PROGRAMS = srconv$(EXEEXT) sysdump$(EXEEXT) coffdump$(EXEEXT) \\\n \t$(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \\\n \t$(am__EXEEXT_4)\n@@ -169,7 +169,8 @@ am__EXEEXT_16 = cxxfilt$(EXEEXT)\n am__EXEEXT_17 = $(am__EXEEXT_14) $(am__EXEEXT_15) $(am__EXEEXT_16)\n am__EXEEXT_18 = bfdtest1$(EXEEXT)\n am__EXEEXT_19 = bfdtest2$(EXEEXT)\n-am__EXEEXT_20 = $(am__EXEEXT_18) $(am__EXEEXT_19)\n+am__EXEEXT_20 = testsuite/gentestdlls$(EXEEXT)\n+am__EXEEXT_21 = $(am__EXEEXT_18) $(am__EXEEXT_19) $(am__EXEEXT_20)\n PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)\n am__objects_1 = bucomm.$(OBJEXT) version.$(OBJEXT) filemode.$(OBJEXT)\n am_addr2line_OBJECTS = addr2line.$(OBJEXT) $(am__objects_1)\n@@ -243,6 +244,12 @@ strip_new_LDADD = $(LDADD)\n am_sysdump_OBJECTS = sysdump.$(OBJEXT) $(am__objects_1)\n sysdump_OBJECTS = $(am_sysdump_OBJECTS)\n sysdump_LDADD = $(LDADD)\n+testsuite_gentestdlls_SOURCES = testsuite/gentestdlls.c\n+am__dirstamp = $(am__leading_dot)dirstamp\n+testsuite_gentestdlls_OBJECTS = testsuite/gentestdlls.$(OBJEXT)\n+testsuite_gentestdlls_LDADD = $(LDADD)\n+testsuite_gentestdlls_DEPENDENCIES = $(BFDLIB) $(LIBIBERTY) \\\n+\t$(am__DEPENDENCIES_1)\n am_windmc_OBJECTS = windmc.$(OBJEXT) mcparse.$(OBJEXT) mclex.$(OBJEXT) \\\n \twinduni.$(OBJEXT) $(am__objects_1)\n windmc_OBJECTS = $(am_windmc_OBJECTS)\n@@ -338,8 +345,8 @@ SOURCES = $(addr2line_SOURCES) $(ar_SOURCES) $(EXTRA_ar_SOURCES) \\\n \t$(nm_new_SOURCES) $(objcopy_SOURCES) $(objdump_SOURCES) \\\n \t$(EXTRA_objdump_SOURCES) $(ranlib_SOURCES) $(readelf_SOURCES) \\\n \t$(size_SOURCES) $(srconv_SOURCES) $(strings_SOURCES) \\\n-\t$(strip_new_SOURCES) $(sysdump_SOURCES) $(windmc_SOURCES) \\\n-\t$(windres_SOURCES)\n+\t$(strip_new_SOURCES) $(sysdump_SOURCES) \\\n+\ttestsuite/gentestdlls.c $(windmc_SOURCES) $(windres_SOURCES)\n RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\\n \tctags-recursive dvi-recursive html-recursive info-recursive \\\n \tinstall-data-recursive install-dvi-recursive \\\n@@ -548,7 +555,7 @@ top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n zlibdir = @zlibdir@\n zlibinc = @zlibinc@\n-AUTOMAKE_OPTIONS = dejagnu no-dist foreign\n+AUTOMAKE_OPTIONS = dejagnu no-dist foreign subdir-objects\n ACLOCAL_AMFLAGS = -I .. -I ../config -I ../bfd\n SUBDIRS = doc po\n tooldir = $(exec_prefix)/$(target_alias)\n@@ -595,7 +602,8 @@ bin_SCRIPTS = @BUILD_INSTALL_MISC@\n EXTRA_SCRIPTS = embedspu\n BFDTEST1_PROG = bfdtest1\n BFDTEST2_PROG = bfdtest2\n-TEST_PROGS = $(BFDTEST1_PROG) $(BFDTEST2_PROG)\n+GENTESTDLLS_PROG = testsuite/gentestdlls\n+TEST_PROGS = $(BFDTEST1_PROG) $(BFDTEST2_PROG) $(GENTESTDLLS_PROG)\n RENAMED_PROGS = $(NM_PROG) $(STRIP_PROG) $(DEMANGLER_PROG)\n \n # Stuff that goes in tooldir/ if appropriate.\n@@ -940,6 +948,18 @@ strip-new$(EXEEXT): $(strip_new_OBJECTS) $(strip_new_DEPENDENCIES) $(EXTRA_strip\n sysdump$(EXEEXT): $(sysdump_OBJECTS) $(sysdump_DEPENDENCIES) $(EXTRA_sysdump_DEPENDENCIES) \n \t@rm -f sysdump$(EXEEXT)\n \t$(AM_V_CCLD)$(LINK) $(sysdump_OBJECTS) $(sysdump_LDADD) $(LIBS)\n+testsuite/$(am__dirstamp):\n+\t@$(MKDIR_P) testsuite\n+\t@: > testsuite/$(am__dirstamp)\n+testsuite/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) testsuite/$(DEPDIR)\n+\t@: > testsuite/$(DEPDIR)/$(am__dirstamp)\n+testsuite/gentestdlls.$(OBJEXT): testsuite/$(am__dirstamp) \\\n+\ttestsuite/$(DEPDIR)/$(am__dirstamp)\n+\n+testsuite/gentestdlls$(EXEEXT): $(testsuite_gentestdlls_OBJECTS) $(testsuite_gentestdlls_DEPENDENCIES) $(EXTRA_testsuite_gentestdlls_DEPENDENCIES) testsuite/$(am__dirstamp)\n+\t@rm -f testsuite/gentestdlls$(EXEEXT)\n+\t$(AM_V_CCLD)$(LINK) $(testsuite_gentestdlls_OBJECTS) $(testsuite_gentestdlls_LDADD) $(LIBS)\n mcparse.h: mcparse.c\n \t@if test ! -f $@; then rm -f mcparse.c; else :; fi\n \t@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) mcparse.c; else :; fi\n@@ -992,6 +1012,7 @@ uninstall-binSCRIPTS:\n \n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)\n+\t-rm -f testsuite/*.$(OBJEXT)\n \n distclean-compile:\n \t-rm -f *.tab.c\n@@ -1057,24 +1078,28 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/windres.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/winduni.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wrstabs.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@testsuite/$(DEPDIR)/gentestdlls.Po@am__quote@\n \n .c.o:\n-@am__fastdepCC_TRUE@\t$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<\n-@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.o$$||'`;\\\n+@am__fastdepCC_TRUE@\t$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\\\n+@am__fastdepCC_TRUE@\t$(am__mv) $$depbase.Tpo $$depbase.Po\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<\n \n .c.obj:\n-@am__fastdepCC_TRUE@\t$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`\n-@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.obj$$||'`;\\\n+@am__fastdepCC_TRUE@\t$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\\\n+@am__fastdepCC_TRUE@\t$(am__mv) $$depbase.Tpo $$depbase.Po\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n \n .c.lo:\n-@am__fastdepCC_TRUE@\t$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<\n-@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.lo$$||'`;\\\n+@am__fastdepCC_TRUE@\t$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\\\n+@am__fastdepCC_TRUE@\t$(am__mv) $$depbase.Tpo $$depbase.Plo\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<\n@@ -1090,6 +1115,7 @@ mostlyclean-libtool:\n \n clean-libtool:\n \t-rm -rf .libs _libs\n+\t-rm -rf testsuite/.libs testsuite/_libs\n \n distclean-libtool:\n \t-rm -f libtool config.lt\n@@ -1269,6 +1295,8 @@ clean-generic:\n distclean-generic:\n \t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n \t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\t-rm -f testsuite/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f testsuite/$(am__dirstamp)\n \t-test -z \"$(DISTCLEANFILES)\" || rm -f $(DISTCLEANFILES)\n \n maintainer-clean-generic:\n@@ -1292,7 +1320,7 @@ clean-am: clean-binPROGRAMS clean-generic clean-libtool \\\n \n distclean: distclean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n-\t-rm -rf ./$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR) testsuite/$(DEPDIR)\n \t-rm -f Makefile\n distclean-am: clean-am distclean-DEJAGNU distclean-compile \\\n \tdistclean-generic distclean-hdr distclean-libtool \\\n@@ -1342,7 +1370,7 @@ installcheck-am: installcheck-local\n maintainer-clean: maintainer-clean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n \t-rm -rf $(top_srcdir)/autom4te.cache\n-\t-rm -rf ./$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR) testsuite/$(DEPDIR)\n \t-rm -f Makefile\n maintainer-clean-am: distclean-am maintainer-clean-generic\n "
    },
    {
      "sha": "b46fd0a8bb44d2616aa35852d88e18991a8f1fe3",
      "filename": "binutils/testsuite/binutils-all/objdump.exp",
      "status": "modified",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/binutils/testsuite/binutils-all/objdump.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/binutils/testsuite/binutils-all/objdump.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/objdump.exp?ref=1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
      "patch": "@@ -732,6 +732,49 @@ if {[is_elf_format]} then {\n     remote_file host delete $testfile3\n }\n \n+# Test objdump on .NET assemblies (PE files)\n+\n+proc test_objdump_dotnet_assemblies {} {\n+    global OBJDUMP\n+    global base_dir\n+\n+    set test \"dotnet-assemblies\"\n+\n+    set got [binutils_run \"$base_dir/testsuite/gentestdlls\" \"tmpdir\"]\n+    set want \"wrote dotnet-linux-x86-64.dll\"\n+    if ![regexp $want $got] then {\n+\tunsupported \"$test\"\n+    }\n+\n+    set test \"dotnet-assemblies (32-bit)\"\n+    set want \"file format pei-i386\"\n+    set got [binutils_run $OBJDUMP \"-x tmpdir/simple-i386.dll\"]\n+    if ![regexp $want $got] then {\n+\tif [regexp \"file format not recognized\" $got] then {\n+\t    unsupported $test\n+\t} else {\n+\t    fail \"$test\"\n+\t}\n+    } else {\n+\tpass $test\n+    }\n+\n+    set test \"dotnet-assemblies (64-bit)\"\n+    set want \"file format pei-x86-64\"\n+    set got [binutils_run $OBJDUMP \"-x tmpdir/dotnet-linux-x86-64.dll\"]\n+    if ![regexp $want $got] then {\n+\tif [regexp \"file format not recognized\" $got] then {\n+\t    unsupported $test\n+\t} else {\n+\t    fail \"$test\"\n+\t}\n+    } else {\n+\tpass $test\n+    }\n+}\n+\n+test_objdump_dotnet_assemblies\n+\n # Options which are not tested: -a -D -R -T -x -l --stabs\n # I don't see any generic way to test any of these other than -a.\n # Tests could be written for specific targets, and that should be done"
    },
    {
      "sha": "b1463c01789f4d91aa63ed74701a95e18b3eba82",
      "filename": "binutils/testsuite/gentestdlls.c",
      "status": "added",
      "additions": 152,
      "deletions": 0,
      "changes": 152,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/binutils/testsuite/gentestdlls.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/binutils/testsuite/gentestdlls.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/gentestdlls.c?ref=1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
      "patch": "@@ -0,0 +1,152 @@\n+/* Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GNU Binutils.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA\n+   02110-1301, USA.  */\n+\n+\n+/* This file generates a number of DLL (PE/COFF binaries traditionally\n+   used on Windows) that we can then utilize in various tests to\n+   ensure objdump can parse these file correctly.\n+\n+   See:\n+   https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-335.pdf  */\n+\n+#include <memory.h>\n+#include <stdint.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <unistd.h>\n+\n+static void\n+write_dos_header_and_stub (FILE* file)\n+{\n+  /* See ECMA-335 II.25.2.1.\n+     Instead of lfanew, lets just hardcode the offset of the next byte\n+     after this header (0x80).  */\n+  char buffer[128] =\n+    {\n+     0x4d, 0x5a, 0x90, 0x00, 0x03, 0x00, 0x00, 0x00,\n+     0x04, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,\n+     0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+     0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+     0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, /* Last 4 bytes are precomputed lfanew.  */\n+     0x0e, 0x1f, 0xba, 0x0e, 0x00, 0xb4, 0x09, 0xcd,\n+     0x21, 0xb8, 0x01, 0x4c, 0xcd, 0x21, 0x54, 0x68,\n+     0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72,\n+     0x61, 0x6d, 0x20, 0x63, 0x61, 0x6e, 0x6e, 0x6f,\n+     0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6e,\n+     0x20, 0x69, 0x6e, 0x20, 0x44, 0x4f, 0x53, 0x20,\n+     0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x0d, 0x0d, 0x0a,\n+     0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n+    };\n+\n+  fwrite (buffer, 1, 128, file);\n+}\n+\n+static void\n+write_pe_signature (FILE* file)\n+{\n+  char buffer[4];\n+  buffer[0] = 'P';\n+  buffer[1] = 'E';\n+  buffer[2] = 0;\n+  buffer[3] = 0;\n+  fwrite (buffer, 1, 4, file);\n+}\n+\n+static void\n+write_coff_header (FILE* file, uint16_t machine)\n+{\n+  char buffer[128];\n+\n+  memset (buffer, 0, sizeof (buffer));\n+\n+  /* Machine.  ECMA-335 says this must be 0x14c but that's not true anymore.  */\n+  buffer[0] = machine & 0xff;\n+  buffer[1] = machine >> 0x8;\n+  fwrite (buffer, 2, 1, file);\n+  memset (buffer, 0, sizeof (buffer));\n+  /* NumberOfSections = 0 */\n+  fwrite (buffer, 2, 1, file);\n+  /* TimeDateStamp = 0 */\n+  fwrite (buffer, 4, 1, file);\n+  /* PointerToSymbolTable = 0 */\n+  fwrite (buffer, 4, 1, file);\n+  /* NumberOfSymbols = 0 */\n+  fwrite (buffer, 4, 1, file);\n+  /* OptionalHeaderSize = 0 */\n+  fwrite (buffer, 2, 1, file);\n+  /* Characteristics = 0x2000 */\n+  buffer[0] = 0x00;\n+  buffer[1] = 0x20;\n+  fwrite (buffer, 2, 1, file);\n+  memset (buffer, 0 , sizeof (buffer));\n+}\n+\n+int\n+main (int argc, char** argv)\n+{\n+  FILE* file;\n+\n+  if (argc < 2)\n+    {\n+      fprintf (stderr, \"usage: %s output-directory\\n\", argv[0]);\n+      exit (2);\n+    }\n+  if (chdir (argv[1]) != 0)\n+    {\n+      fprintf (stderr, \"error: unable to change directory to %s\\n\", argv[0]);\n+      exit (2);\n+    }\n+\n+  /* Generate a simple DLL file.  */\n+  file = fopen (\"simple-i386.dll\", \"w\");\n+  if (file == NULL)\n+    {\n+      fprintf (stderr, \"error: unable to open file for writing\\n\");\n+      exit (1);\n+    }\n+\n+  write_dos_header_and_stub (file);\n+  write_pe_signature (file);\n+  write_coff_header (file, 0x14c);\n+  fclose (file);\n+  printf (\"wrote simple-i386.dll\\n\");\n+\n+  /* Generate a sample .NET Core on Linux dll file.  As opposed to the\n+     more common DLLs that contain bytecode (CIL/MSIL), many .NET Core\n+     DLLs are pre-compiled for specific architectures and platforms.\n+     See https://github.com/jbevain/cecil/issues/337 for an example of\n+     this value being used in practice.  */\n+  file = fopen (\"dotnet-linux-x86-64.dll\", \"w\");\n+  if (file == NULL)\n+    {\n+      fprintf (stderr, \"error: unable to open file for writing\\n\");\n+      exit (1);\n+    }\n+\n+  write_dos_header_and_stub (file);\n+  write_pe_signature (file);\n+  write_coff_header (file, 0xfd1d /* x86-64 + Linux */);\n+  fclose (file);\n+  printf (\"wrote dotnet-linux-x86-64.dll\\n\");\n+\n+  return 0;\n+}"
    },
    {
      "sha": "4c841e35954a2ee39c9b72343f571f21a6b5a301",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
      "patch": "@@ -1,3 +1,24 @@\n+2019-07-23  Omar Majid  <omajid@redhat.com>\n+\n+\t* coff/i386.h (IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE): Define.\n+\t(IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE): Define.\n+\t(IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE): Define.\n+\t(IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE): Define.\n+\t(I386_APPLE_MAGIC): Define.\n+\t(I386_FREEBSD_MAGIC): Define.\n+\t(I386_LINUX_MAGIC): Define.\n+\t(I386_NETBSD_MAGIC): Define.\n+\t(I386BADMAG): Extend macro to allow new magic numbers.\n+\t* coff/x86_64.h (IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE): Define.\n+\t(IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE): Define.\n+\t(IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE): Define.\n+\t(IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE): Define.\n+\t(AMD64_APPLE_MAGIC): Define.\n+\t(AMD64_FREEBSD_MAGIC): Define.\n+\t(AMD64_LINUX_MAGIC): Define.\n+\t(AMD64_NETBSD_MAGIC): Define.\n+\t(AMD64BADMAG): Extend macro to allow new magic numbers.\n+\n 2019-07-19  Alan Modra  <amodra@gmail.com>\n \n \t* elf/ppc64.h (R_PPC64_TPREL34, R_PPC64_DTPREL34),"
    },
    {
      "sha": "8fd2b8d41d28b8ab7091616abdb05719e8a32f7c",
      "filename": "include/coff/i386.h",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/include/coff/i386.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/include/coff/i386.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/i386.h?ref=1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
      "patch": "@@ -43,7 +43,26 @@\n \n #define LYNXCOFFMAGIC\t0415\n \n+/* .NET DLLs XOR the Machine number (above) with an override to\n+    indicate that the DLL contains OS-specific machine code rather\n+    than just IL or bytecode. See\n+    https://github.com/dotnet/coreclr/blob/6f7aa7967c607b8c667518314ab937c0d7547025/src/inc/pedecoder.h#L94-L107. */\n+#define IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE   0x4644\n+#define IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE 0xadc4\n+#define IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE   0x7b79\n+#define IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE  0x1993\n+\n+/* Used in some .NET DLLs that target a specific OS.  */\n+#define I386_APPLE_MAGIC   (I386MAGIC ^ IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE)\n+#define I386_FREEBSD_MAGIC (I386MAGIC ^ IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE)\n+#define I386_LINUX_MAGIC   (I386MAGIC ^ IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE)\n+#define I386_NETBSD_MAGIC  (I386MAGIC ^ IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE)\n+\n #define I386BADMAG(x) (  ((x).f_magic != I386MAGIC) \\\n+\t\t       && (x).f_magic != I386_APPLE_MAGIC \\\n+\t\t       && (x).f_magic != I386_FREEBSD_MAGIC \\\n+\t\t       && (x).f_magic != I386_LINUX_MAGIC \\\n+\t\t       && (x).f_magic != I386_NETBSD_MAGIC \\\n \t\t       && (x).f_magic != I386AIXMAGIC \\\n \t\t       && (x).f_magic != I386PTXMAGIC \\\n \t\t       && (x).f_magic != LYNXCOFFMAGIC)"
    },
    {
      "sha": "c0e6de3b1fdb8789793e905ed252e0f34816b064",
      "filename": "include/coff/x86_64.h",
      "status": "modified",
      "additions": 21,
      "deletions": 1,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/include/coff/x86_64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d/include/coff/x86_64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/x86_64.h?ref=1dd1bc4daf99ec7ad1f9a6feea8cf4ebe715a92d",
      "patch": "@@ -29,7 +29,27 @@\n \n #define AMD64MAGIC\t0x8664\n \n-#define AMD64BADMAG(x)\t((x).f_magic != AMD64MAGIC)\n+/* .NET DLLs XOR the Machine number (above) with an override to\n+    indicate that the DLL contains OS-specific machine code rather\n+    than just IL or bytecode. See\n+    https://github.com/dotnet/coreclr/blob/6f7aa7967c607b8c667518314ab937c0d7547025/src/inc/pedecoder.h#L94-L107. */\n+#define IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE   0x4644\n+#define IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE 0xadc4\n+#define IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE   0x7b79\n+#define IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE  0x1993\n+\n+/* Used in some .NET DLLs that target a specific OS.  */\n+#define AMD64_APPLE_MAGIC   (AMD64MAGIC ^ IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE)\n+#define AMD64_FREEBSD_MAGIC (AMD64MAGIC ^ IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE)\n+#define AMD64_LINUX_MAGIC   (AMD64MAGIC ^ IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE)\n+#define AMD64_NETBSD_MAGIC  (AMD64MAGIC ^ IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE)\n+\n+#define AMD64BADMAG(x) (   ((x).f_magic != AMD64MAGIC) \\\n+                        && ((x).f_magic != AMD64_APPLE_MAGIC) \\\n+                        && ((x).f_magic != AMD64_FREEBSD_MAGIC) \\\n+                        && ((x).f_magic != AMD64_LINUX_MAGIC) \\\n+                        && ((x).f_magic != AMD64_NETBSD_MAGIC))\n+\n #define IMAGE_NT_OPTIONAL_HDR64_MAGIC      0x20b\n \n #define OMAGIC          0404    /* Object files, eg as output.  */"
    }
  ]
}