{
  "sha": "10da644dc4882fd1e82913da94253fd540d91043",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTBkYTY0NGRjNDg4MmZkMWU4MjkxM2RhOTQyNTNmZDU0MGQ5MTA0Mw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-07-17T12:35:44Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-07-17T12:35:44Z"
    },
    "message": "[gdb/testsuite] Drop src arg of MACRO_AT_{func,range}\n\nThe dwarf assembly procs MACRO_AT_func and MACRO_AT_range have a src\nparameter, which is set to $srcdir/$subdir/$srcfile in every single call.\n\nDrop the src parameter and hardcode usage of $srcdir/$subdir/$srcfile in the\nprocs.\n\nBuild and reg-tested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-07-17  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/dwarf.exp (Dwarf::MACRO_AT_func, Dwarf::MACRO_AT_range): Drop\n\tsrc parameter.\n\t* gdb.dlang/watch-loc.exp: Update MACRO_AT_{func,range} calls.\n\t* gdb.dwarf2/bitfield-parent-optimized-out.exp: Same.\n\t* gdb.dwarf2/dw2-ifort-parameter.exp: Same.\n\t* gdb.dwarf2/dw2-opt-structptr.exp: Same.\n\t* gdb.dwarf2/dwz.exp: Same.\n\t* gdb.dwarf2/implptr-optimized-out.exp: Same.\n\t* gdb.dwarf2/implref-array.exp: Same.\n\t* gdb.dwarf2/implref-const.exp: Same.\n\t* gdb.dwarf2/implref-global.exp: Same.\n\t* gdb.dwarf2/implref-struct.exp: Same.\n\t* gdb.dwarf2/info-locals-optimized-out.exp: Same.\n\t* gdb.dwarf2/opaque-type-lookup.exp: Same.\n\t* gdb.dwarf2/var-access.exp: Same.\n\t* gdb.dwarf2/varval.exp: Same.\n\t* gdb.trace/entry-values.exp: Same.",
    "tree": {
      "sha": "1a6b317deb99ce3b7cf724d457760d6ba7b60444",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1a6b317deb99ce3b7cf724d457760d6ba7b60444"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/10da644dc4882fd1e82913da94253fd540d91043",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10da644dc4882fd1e82913da94253fd540d91043",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/10da644dc4882fd1e82913da94253fd540d91043",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10da644dc4882fd1e82913da94253fd540d91043/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "315e6afc824fcc7689dd8f51cbb2d18e97fb5374",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/315e6afc824fcc7689dd8f51cbb2d18e97fb5374",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/315e6afc824fcc7689dd8f51cbb2d18e97fb5374"
    }
  ],
  "stats": {
    "total": 92,
    "additions": 47,
    "deletions": 45
  },
  "files": [
    {
      "sha": "f9ee61251b2cdfbebd1e3ac6150242f4f600d544",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -1,3 +1,23 @@\n+2020-07-17  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/dwarf.exp (Dwarf::MACRO_AT_func, Dwarf::MACRO_AT_range): Drop\n+\tsrc parameter.\n+\t* gdb.dlang/watch-loc.exp: Update MACRO_AT_{func,range} calls.\n+\t* gdb.dwarf2/bitfield-parent-optimized-out.exp: Same.\n+\t* gdb.dwarf2/dw2-ifort-parameter.exp: Same.\n+\t* gdb.dwarf2/dw2-opt-structptr.exp: Same.\n+\t* gdb.dwarf2/dwz.exp: Same.\n+\t* gdb.dwarf2/implptr-optimized-out.exp: Same.\n+\t* gdb.dwarf2/implref-array.exp: Same.\n+\t* gdb.dwarf2/implref-const.exp: Same.\n+\t* gdb.dwarf2/implref-global.exp: Same.\n+\t* gdb.dwarf2/implref-struct.exp: Same.\n+\t* gdb.dwarf2/info-locals-optimized-out.exp: Same.\n+\t* gdb.dwarf2/opaque-type-lookup.exp: Same.\n+\t* gdb.dwarf2/var-access.exp: Same.\n+\t* gdb.dwarf2/varval.exp: Same.\n+\t* gdb.trace/entry-values.exp: Same.\n+\n 2020-07-17  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/dwarf.exp (Dwarf::extern): Remove."
    },
    {
      "sha": "d65f3c674fdac1f9a919b2d03dbc772ef49da126",
      "filename": "gdb/testsuite/gdb.dlang/watch-loc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dlang/watch-loc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dlang/watch-loc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dlang/watch-loc.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -30,8 +30,6 @@ standard_testfile watch-loc.c watch-loc-dw.S\n # Make some DWARF for the test.\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n-\n     cu {} {\n \tcompile_unit {\n \t    {language @DW_LANG_D}\n@@ -56,7 +54,7 @@ Dwarf::assemble $asm_file {\n \t\t}\n \n \t\tsubprogram {\n-\t\t    {MACRO_AT_func { \"_Dmain\" \"${srcdir}/${subdir}/${srcfile}\" }}\n+\t\t    {MACRO_AT_func { \"_Dmain\" }}\n \t\t    {external 1 flag_present}\n \t\t}\n \t    }"
    },
    {
      "sha": "8c4365ace69069833e060bcf2f3d07c649477643",
      "filename": "gdb/testsuite/gdb.dwarf2/bitfield-parent-optimized-out.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/bitfield-parent-optimized-out.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/bitfield-parent-optimized-out.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/bitfield-parent-optimized-out.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -29,8 +29,6 @@ set executable ${testfile}\n # Make some DWARF for the test.\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n-\n     cu { version 3 addr_size 4 } {\n \tcompile_unit {} {\n \t    declare_labels struct_label var_label int_label\n@@ -59,7 +57,7 @@ Dwarf::assemble $asm_file {\n \t    }\n \n \t    subprogram {\n-\t\t{MACRO_AT_func { main ${srcdir}/${subdir}/${srcfile} }}\n+\t\t{MACRO_AT_func { main }}\n \t\t{type :$int_label}\n \t\t{external 1 flag}\n \t    } {"
    },
    {
      "sha": "32ae5ed66aad492a8e8e702e66fcb520ae8455d3",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-ifort-parameter.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/dw2-ifort-parameter.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/dw2-ifort-parameter.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-ifort-parameter.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -29,13 +29,11 @@ set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n     declare_labels int_label\n \n-    global srcdir subdir srcfile\n-\n     cu {} {\n \tcompile_unit {\n \t    {name file1.txt}\n \t    {language @DW_LANG_C}\n-\t    {MACRO_AT_range { func ${srcdir}/${subdir}/${srcfile} }}\n+\t    {MACRO_AT_range { func }}\n \t} {\n \t    int_label: base_type {\n \t\t{name int}\n@@ -45,7 +43,7 @@ Dwarf::assemble $asm_file {\n \n \t    subprogram {\n \t\t{external 1 flag}\n-\t\t{MACRO_AT_func { func ${srcdir}/${subdir}/${srcfile} }}\n+\t\t{MACRO_AT_func { func }}\n \t    } {\n \t\tformal_parameter {\n \t\t    {name param}"
    },
    {
      "sha": "d6e309d0d73b2c53c6ccfeaa06bd29b0f167939f",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-opt-structptr.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/dw2-opt-structptr.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/dw2-opt-structptr.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-opt-structptr.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -41,7 +41,6 @@ proc build_test_program {} {\n     # Make some DWARF for the test.\n     set asm_file [standard_output_file $srcfile2]\n     Dwarf::assemble $asm_file {\n-        global srcdir subdir srcfile\n \n \t# Creating a CU with 4-byte addresses lets this test link on\n \t# both 32- and 64-bit machines.\n@@ -102,7 +101,7 @@ proc build_test_program {} {\n \t\t    {DW_AT_name func01}\n \t\t    {DW_AT_type :$int_label}\n \t\t    {external   1 flag}\n-\t\t    {MACRO_AT_func {func01 ${srcdir}/${subdir}/${srcfile}}}\n+\t\t    {MACRO_AT_func {func01}}\n \t\t} {\n \t\t    DW_TAG_variable {\n \t\t\t{DW_AT_name ptr}\n@@ -115,7 +114,7 @@ proc build_test_program {} {\n \t\t    {DW_AT_name main}\n \t\t    {DW_AT_type :$int_label}\n \t\t    {external   1 flag}\n-\t\t    {MACRO_AT_func {main ${srcdir}/${subdir}/${srcfile}}}\n+\t\t    {MACRO_AT_func {main}}\n \t\t} {\n \t\t}\n \t    }"
    },
    {
      "sha": "7be7313ff806b4325bbf58abc1998cb8f33b02b3",
      "filename": "gdb/testsuite/gdb.dwarf2/dwz.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/dwz.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/dwz.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dwz.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -26,12 +26,11 @@ standard_testfile main.c dwz.S\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n     declare_labels partial_label int_label int_label2\n-    global srcdir subdir srcfile\n \n     cu {} {\n \tpartial_label: partial_unit {} {\n \t    subprogram {\n- \t\t{MACRO_AT_func { main ${srcdir}/${subdir}/${srcfile} }}\n+\t\t{MACRO_AT_func { main }}\n \t    }\n \t}\n     }"
    },
    {
      "sha": "d6ce5dfe1ddbad17cd1b6f26fa59d1a1a6166f0c",
      "filename": "gdb/testsuite/gdb.dwarf2/implptr-optimized-out.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/implptr-optimized-out.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/implptr-optimized-out.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/implptr-optimized-out.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -25,8 +25,6 @@ set executable ${testfile}\n # Create the DWARF.\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n-\n     cu { version 3 addr_size 4 } {\n \tcompile_unit {\n \t    {producer \"GNU C 4.4.3\"}\n@@ -53,7 +51,7 @@ Dwarf::assemble $asm_file {\n \t    }\n \n \t    subprogram {\n-\t\t{MACRO_AT_func { main ${srcdir}/${subdir}/${srcfile} }}\n+\t\t{MACRO_AT_func { main }}\n \t\t{type :$int_label}\n \t\t{external 1 flag}\n \t    } {"
    },
    {
      "sha": "3535be5f5328c926c08358e98f0a2c325a7edcad",
      "filename": "gdb/testsuite/gdb.dwarf2/implref-array.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/implref-array.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/implref-array.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/implref-array.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -51,7 +51,7 @@ set array_length [get_valueof \"/u\" \"sizeof(array) / sizeof(array\\[0\\])\" -1]\n # The variable must be global so that its name is an exported symbol that we\n # can reference from the DWARF using gdb_target_symbol.\n Dwarf::assemble ${asm_file} {\n-    global srcdir subdir srcfile array_length\n+    global array_length\n \n     cu {} {\n \tDW_TAG_compile_unit {\n@@ -99,7 +99,7 @@ Dwarf::assemble ${asm_file} {\n \t    }\n \n \t    DW_TAG_subprogram {\n-\t\t{MACRO_AT_func { \"main\" \"${srcdir}/${subdir}/${srcfile}\" }}\n+\t\t{MACRO_AT_func { \"main\" }}\n \t\t{DW_AT_type :${int_label}}\n \t\t{DW_AT_external 1 DW_FORM_flag}\n \t    } {"
    },
    {
      "sha": "f289f6100e2f728310fa3b4c523058ec714372a7",
      "filename": "gdb/testsuite/gdb.dwarf2/implref-const.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/implref-const.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/implref-const.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/implref-const.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -47,8 +47,6 @@ if [prepare_for_testing \"failed to prepare\" ${testfile} ${srcfile}] {\n # Create the DWARF.  We need a regular variable and a reference to it that'll\n # be marked with DW_OP_GNU_implicit_pointer.\n Dwarf::assemble ${asm_file} {\n-    global srcdir subdir srcfile\n-\n     cu {} {\n \tDW_TAG_compile_unit {\n \t    {DW_AT_language @DW_LANG_C_plus_plus}\n@@ -76,7 +74,7 @@ Dwarf::assemble ${asm_file} {\n \t    }\n \n \t    DW_TAG_subprogram {\n-\t\t{MACRO_AT_func { \"main\" \"${srcdir}/${subdir}/${srcfile}\" }}\n+\t\t{MACRO_AT_func { \"main\" }}\n \t\t{DW_AT_type :${int_label}}\n \t\t{DW_AT_external 1 DW_FORM_flag}\n \t    } {"
    },
    {
      "sha": "86f1c50c4ca6b7d72ab0cc4578f3f676a1280cb7",
      "filename": "gdb/testsuite/gdb.dwarf2/implref-global.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/implref-global.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/implref-global.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/implref-global.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -49,8 +49,6 @@ if [prepare_for_testing \"failed to prepare\" ${testfile} ${srcfile}] {\n # that its name is an exported symbol that we can reference from the DWARF\n # using gdb_target_symbol.\n Dwarf::assemble ${asm_file} {\n-    global srcdir subdir srcfile\n-\n     cu {} {\n \tDW_TAG_compile_unit {\n \t    {DW_AT_language @DW_LANG_C_plus_plus}\n@@ -80,7 +78,7 @@ Dwarf::assemble ${asm_file} {\n \t    }\n \n \t    DW_TAG_subprogram {\n-\t\t{MACRO_AT_func { \"main\" \"${srcdir}/${subdir}/${srcfile}\" }}\n+\t\t{MACRO_AT_func { \"main\" }}\n \t\t{DW_AT_type :${int_label}}\n \t\t{DW_AT_external 1 DW_FORM_flag}\n \t    } {"
    },
    {
      "sha": "e47d74e95d7dd662e05047bfbc8b7f4aef7e2e84",
      "filename": "gdb/testsuite/gdb.dwarf2/implref-struct.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/implref-struct.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/implref-struct.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/implref-struct.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -49,8 +49,6 @@ if [prepare_for_testing \"failed to prepare\" ${testfile} ${srcfile} {debug c++}]\n # global so that its name is an exported symbol that can we can reference from\n # the DWARF using gdb_target_symbol.\n Dwarf::assemble ${asm_file} {\n-    global srcdir subdir srcfile\n-\n     cu {} {\n \tDW_TAG_compile_unit {\n \t    {DW_AT_language @DW_LANG_C_plus_plus}\n@@ -115,7 +113,7 @@ Dwarf::assemble ${asm_file} {\n \t    }\n \n \t    DW_TAG_subprogram {\n-\t\t{MACRO_AT_func { \"main\" \"${srcdir}/${subdir}/${srcfile}\" }}\n+\t\t{MACRO_AT_func { \"main\" }}\n \t\t{DW_AT_type :${int_label}}\n \t\t{DW_AT_external 1 DW_FORM_flag}\n \t    } {"
    },
    {
      "sha": "e270441392e05a124045f14a325c31f0f7869513",
      "filename": "gdb/testsuite/gdb.dwarf2/info-locals-optimized-out.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/info-locals-optimized-out.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/info-locals-optimized-out.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/info-locals-optimized-out.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -28,7 +28,6 @@ standard_testfile .c ${gdb_test_file_name}-dw.S\n \n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n     global dwarf_regnum regname\n \n     set buf_var [gdb_target_symbol buf]\n@@ -48,7 +47,7 @@ Dwarf::assemble $asm_file {\n \t    }\n \n \t    DW_TAG_subprogram {\n-\t\t{MACRO_AT_func { main ${srcdir}/${subdir}/${srcfile} }}\n+\t\t{MACRO_AT_func { main }}\n \t\t{DW_AT_external 1 flag}\n \t    } {\n \t\t# A variable completely optimized out."
    },
    {
      "sha": "d383b98dd94d19f9aff59feeac4a20ae0203d8ec",
      "filename": "gdb/testsuite/gdb.dwarf2/opaque-type-lookup.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/opaque-type-lookup.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/opaque-type-lookup.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/opaque-type-lookup.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -32,7 +32,6 @@ Dwarf::assemble $asm_file {\n     declare_labels struct_a_label struct_b_label\n     declare_labels opaque_struct_a_label opaque_struct_b_label\n     declare_labels char_type1_label char_type2_label\n-    global srcdir subdir srcfile\n \n     # The partial units are laid out so we're not dependent on the order that\n     # they appear in compunit_symtab.includes.  We need the one with the\n@@ -180,7 +179,7 @@ Dwarf::assemble $asm_file {\n \t    {name main}\n \t} {\n \t    subprogram {\n- \t\t{MACRO_AT_func { main ${srcdir}/${subdir}/${srcfile} }}\n+\t\t{MACRO_AT_func { main }}\n \t    }\n \t}\n     }"
    },
    {
      "sha": "ad531488409a0d614c236f78d1674fb2e997ddd2",
      "filename": "gdb/testsuite/gdb.dwarf2/var-access.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/var-access.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/var-access.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/var-access.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -50,7 +50,6 @@ standard_testfile .c ${gdb_test_file_name}-dw.S\n \n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n     global dwarf_regnum regname\n \n     set buf_var [gdb_target_symbol buf]\n@@ -162,7 +161,7 @@ Dwarf::assemble $asm_file {\n \t    }\n \n \t    DW_TAG_subprogram {\n-\t\t{MACRO_AT_func { main ${srcdir}/${subdir}/${srcfile} }}\n+\t\t{MACRO_AT_func { main }}\n \t\t{DW_AT_external 1 flag}\n \t    } {\n \t\t# Simple memory location."
    },
    {
      "sha": "69790e7370e443961ff9df2776809fa21a2c4a08",
      "filename": "gdb/testsuite/gdb.dwarf2/varval.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/varval.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.dwarf2/varval.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/varval.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -48,7 +48,7 @@ proc setup_exec { arg_bad } {\n \n     # Create the DWARF.  \n     Dwarf::assemble ${asm_file} {\n-\tglobal srcdir subdir srcfile bad int_size addr_size\n+\tglobal bad int_size addr_size\n \n \tcu {} {\n \t    DW_TAG_compile_unit {\n@@ -198,7 +198,7 @@ proc setup_exec { arg_bad } {\n \t\t}\n \n \t\tDW_TAG_subprogram {\n-\t\t    {MACRO_AT_func { \"main\" \"${srcdir}/${subdir}/${srcfile}\" }}\n+\t\t    {MACRO_AT_func { \"main\" }}\n \t\t    {DW_AT_type :${int_label}}\n \t\t    {DW_AT_external 1 DW_FORM_flag}\n \t\t} {"
    },
    {
      "sha": "d03626a0e8a27bdb537822c6507884cea531aab7",
      "filename": "gdb/testsuite/gdb.trace/entry-values.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.trace/entry-values.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/gdb.trace/entry-values.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.trace/entry-values.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -108,7 +108,7 @@ Dwarf::assemble $asm_file {\n \n \t    foo_label: subprogram {\n \t\t{decl_file 0 udata}\n-\t\t{MACRO_AT_func { foo ${srcdir}/${subdir}/${srcfile} }}\n+\t\t{MACRO_AT_func { foo }}\n \t    } {\n \t\tformal_parameter {\n \t\t    {type :$int_label}"
    },
    {
      "sha": "ee625c9f8c86e3417d4fc4465bc54aa82ee5ffa5",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10da644dc4882fd1e82913da94253fd540d91043/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=10da644dc4882fd1e82913da94253fd540d91043",
      "patch": "@@ -219,11 +219,11 @@ proc get_func_info { name {options {debug}} } {\n # which will be substituted by one or more standard or macro attributes.\n # supported macro attributes are:\n #\n-#  - MACRO_AT_range { FUNC FILE }\n+#  - MACRO_AT_range { FUNC }\n #  It is substituted by DW_AT_low_pc and DW_AT_high_pc with the start and\n-#  end address of function FUNC in file FILE.\n+#  end address of function FUNC in file $srcdir/$subdir/$srcfile.\n #\n-#  - MACRO_AT_func { FUNC FILE }\n+#  - MACRO_AT_func { FUNC }\n #  It is substituted by DW_AT_name with FUNC and MACRO_AT_range.\n #\n # If FORM is given, it should name a DW_FORM_ constant.\n@@ -621,12 +621,13 @@ namespace eval Dwarf {\n     # Handle macro attribute MACRO_AT_range.\n \n     proc _handle_macro_at_range { attr_value } {\n-\tif {[llength $attr_value] != 2} {\n-\t    error \"usage: MACRO_AT_range { func file }\"\n+\tif {[llength $attr_value] != 1} {\n+\t    error \"usage: MACRO_AT_range { func }\"\n \t}\n \n \tset func [lindex $attr_value 0]\n-\tset src [lindex $attr_value 1]\n+\tglobal srcdir subdir srcfile\n+\tset src ${srcdir}/${subdir}/${srcfile}\n \tset result [function_range $func $src]\n \n \t_handle_attribute DW_AT_low_pc [lindex $result 0] \\\n@@ -638,7 +639,7 @@ namespace eval Dwarf {\n     # Handle macro attribute MACRO_AT_func.\n \n     proc _handle_macro_at_func { attr_value } {\n-\tif {[llength $attr_value] != 2} {\n+\tif {[llength $attr_value] != 1} {\n \t    error \"usage: MACRO_AT_func { func file }\"\n \t}\n \t_handle_attribute DW_AT_name [lindex $attr_value 0] DW_FORM_string"
    }
  ]
}