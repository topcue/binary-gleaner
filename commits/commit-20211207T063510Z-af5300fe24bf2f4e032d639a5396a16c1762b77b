{
  "sha": "af5300fe24bf2f4e032d639a5396a16c1762b77b",
  "node_id": "C_kwDOANOeidoAKGFmNTMwMGZlMjRiZjJmNGUwMzJkNjM5YTUzOTZhMTZjMTc2MmI3N2I",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-12-07T06:35:10Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-12-07T06:35:10Z"
    },
    "message": "[gdb/ada] Fix assert in ada_is_unconstrained_packed_array_type\n\nOn openSUSE Leap 42.3, with system compiler gcc 4.8.5 I run into:\n...\n(gdb) print u_one_two_three^M\nsrc/gdb/gdbtypes.h:1050: internal-error: field: \\\n Assertion `idx >= 0 && idx < num_fields ()' failed.^M\n...\n\nWe run into trouble while doing this in\nada_is_unconstrained_packed_array_type:\n...\n1953          return TYPE_FIELD_BITSIZE (type, 0) > 0;\n...\nwhich tries to get field 0 from a type without fields:\n...\n(gdb) p type->num_fields ()\n$6 = 0\n...\nwhich is the case because the type is a typedef:\n...\n(gdb) p type->code ()\n$7 = TYPE_CODE_TYPEDEF\n...\n\nFix this by using the type referenced by the typedef instead.\n\nTested on x86_64-linux.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=28323",
    "tree": {
      "sha": "acb82164c5b42fd2c38930ab2b61dc9eb64e322b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/acb82164c5b42fd2c38930ab2b61dc9eb64e322b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/af5300fe24bf2f4e032d639a5396a16c1762b77b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af5300fe24bf2f4e032d639a5396a16c1762b77b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/af5300fe24bf2f4e032d639a5396a16c1762b77b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af5300fe24bf2f4e032d639a5396a16c1762b77b/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d91c67e8730354c43fae86fa98fe593925882365",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d91c67e8730354c43fae86fa98fe593925882365",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d91c67e8730354c43fae86fa98fe593925882365"
    }
  ],
  "stats": {
    "total": 2,
    "additions": 2,
    "deletions": 0
  },
  "files": [
    {
      "sha": "336d950ec1d23755e9a3285b3c4562f0c5d11110",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af5300fe24bf2f4e032d639a5396a16c1762b77b/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af5300fe24bf2f4e032d639a5396a16c1762b77b/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=af5300fe24bf2f4e032d639a5396a16c1762b77b",
      "patch": "@@ -1949,6 +1949,8 @@ ada_is_unconstrained_packed_array_type (struct type *type)\n       /* The structure's first field is a pointer to an array, so this\n \t fetches the array type.  */\n       type = TYPE_TARGET_TYPE (type->field (0).type ());\n+      if (type->code () == TYPE_CODE_TYPEDEF)\n+\ttype = ada_typedef_target_type (type);\n       /* Now we can see if the array elements are packed.  */\n       return TYPE_FIELD_BITSIZE (type, 0) > 0;\n     }"
    }
  ]
}