{
  "sha": "59c8a30b81e400d614fad67ec06e040cb38980bc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTljOGEzMGI4MWU0MDBkNjE0ZmFkNjdlYzA2ZTA0MGNiMzg5ODBiYw==",
  "commit": {
    "author": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-10-09T20:30:48Z"
    },
    "committer": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-10-09T20:31:07Z"
    },
    "message": "ada-lang.c::advance_wild_match improve doc and parameter+temporaries types\n\nThis commit fixes the type of one of the parameters as well as a couple\nof temporaries.\n\nWhile at it, the function's description is slightly rewritten to make it\na little clearer what the function does.\n\ngdb/ChangeLog:\n\n        * ada-lang.c (advance_wild_match): Rewrite the function's\n        description.  Change the type of target0, t0 and t1 to char.",
    "tree": {
      "sha": "fafed1c292c024c44795c33a3482112a77a5b9d9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fafed1c292c024c44795c33a3482112a77a5b9d9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/59c8a30b81e400d614fad67ec06e040cb38980bc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/59c8a30b81e400d614fad67ec06e040cb38980bc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/59c8a30b81e400d614fad67ec06e040cb38980bc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/59c8a30b81e400d614fad67ec06e040cb38980bc/comments",
  "author": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7c184d334adac03eb200b0f8b01edaf051bfc01b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c184d334adac03eb200b0f8b01edaf051bfc01b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7c184d334adac03eb200b0f8b01edaf051bfc01b"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 11,
    "deletions": 6
  },
  "files": [
    {
      "sha": "de66f5aae794ea789113c1805037cd60bcc28671",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c8a30b81e400d614fad67ec06e040cb38980bc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c8a30b81e400d614fad67ec06e040cb38980bc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=59c8a30b81e400d614fad67ec06e040cb38980bc",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-09  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* ada-lang.c (advance_wild_match): Rewrite the function's\n+\tdescription.  Change the type of target0, t0 and t1 to char.\n+\n 2020-10-09  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2/read.c (dwarf2_add_field): Handle signed offsets."
    },
    {
      "sha": "be6d0e1d0192a059e46766a1d9b00da20335889f",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c8a30b81e400d614fad67ec06e040cb38980bc/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c8a30b81e400d614fad67ec06e040cb38980bc/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=59c8a30b81e400d614fad67ec06e040cb38980bc",
      "patch": "@@ -186,7 +186,7 @@ static int equiv_types (struct type *, struct type *);\n \n static int is_name_suffix (const char *);\n \n-static int advance_wild_match (const char **, const char *, int);\n+static int advance_wild_match (const char **, const char *, char);\n \n static bool wild_match (const char *name, const char *patn);\n \n@@ -5921,18 +5921,18 @@ is_valid_name_for_wild_match (const char *name0)\n   return 1;\n }\n \n-/* Advance *NAMEP to next occurrence of TARGET0 in the string NAME0\n-   that could start a simple name.  Assumes that *NAMEP points into\n-   the string beginning at NAME0.  */\n+/* Advance *NAMEP to next occurrence in the string NAME0 of the TARGET0\n+   character which could start a simple name.  Assumes that *NAMEP points\n+   somewhere inside the string beginning at NAME0.  */\n \n static int\n-advance_wild_match (const char **namep, const char *name0, int target0)\n+advance_wild_match (const char **namep, const char *name0, char target0)\n {\n   const char *name = *namep;\n \n   while (1)\n     {\n-      int t0, t1;\n+      char t0, t1;\n \n       t0 = *name;\n       if (t0 == '_')"
    }
  ]
}