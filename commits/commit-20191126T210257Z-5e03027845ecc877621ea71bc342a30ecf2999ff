{
  "sha": "5e03027845ecc877621ea71bc342a30ecf2999ff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWUwMzAyNzg0NWVjYzg3NzYyMWVhNzFiYzM0MmEzMGVjZjI5OTlmZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-03-15T23:38:06Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-26T21:02:57Z"
    },
    "message": "Add configure check for std::thread\n\nThis adds a configure check for std::thread.  This is needed because\nstd::thread is not available on some systems, like some versions of\nmingw and DJGPP.\n\nThis also adds configury to make sure that a threaded gdb links\nagainst the correct threading library (-lpthread or the like), and\npasses the right flags (e.g., -pthread) to the compilations.\n\nNote that this also links gdbserver against the thread library.  This\nis not strictly necessary at this point in the series, but a later\npatch will change gdbsupport to use pthread_sigmask, at which point\nthis will be needed.\n\ngdb/ChangeLog\n2019-11-26  Tom Tromey  <tom@tromey.com>\n\n\t* acinclude.m4: Include ax_pthread.m4.\n\t* Makefile.in (PTHREAD_CFLAGS, PTHREAD_LIBS): New variables.\n\t(INTERNAL_CFLAGS_BASE): Use PTHREAD_CFLAGS.\n\t(CLIBS): Use PTHREAD_LIBS.\n\t(aclocal_m4_deps): Add ax_pthread.m4.\n\t* config.in, configure: Rebuild.\n\t* gdbsupport/common.m4 (GDB_AC_COMMON): Check for std::thread.\n\ngdb/gdbserver/ChangeLog\n2019-11-26  Tom Tromey  <tom@tromey.com>\n\n\t* Makefile.in (PTHREAD_CFLAGS, PTHREAD_LIBS): New variables.\n\t(INTERNAL_CFLAGS_BASE): Use PTHREAD_CFLAGS.\n\t(GDBSERVER_LIBS): Use PTHREAD_LIBS.\n\t* acinclude.m4: Include ax_pthread.m4.\n\t* config.in, configure: Rebuild.\n\nChange-Id: I00ec55db6077f2615421a93461fc3be57e916aa0",
    "tree": {
      "sha": "d336c27969b6e4c6ca9d14be8becb15ed7d4cfa2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d336c27969b6e4c6ca9d14be8becb15ed7d4cfa2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5e03027845ecc877621ea71bc342a30ecf2999ff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e03027845ecc877621ea71bc342a30ecf2999ff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5e03027845ecc877621ea71bc342a30ecf2999ff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e03027845ecc877621ea71bc342a30ecf2999ff/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5a79c10755d00b71b33b8715e5a665bfd78c9222",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5a79c10755d00b71b33b8715e5a665bfd78c9222",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5a79c10755d00b71b33b8715e5a665bfd78c9222"
    }
  ],
  "stats": {
    "total": 1621,
    "additions": 1615,
    "deletions": 6
  },
  "files": [
    {
      "sha": "ca9290180cc5386f84e2eaf6c5c7cdcb30cc26da",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5e03027845ecc877621ea71bc342a30ecf2999ff",
      "patch": "@@ -1,3 +1,13 @@\n+2019-11-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* acinclude.m4: Include ax_pthread.m4.\n+\t* Makefile.in (PTHREAD_CFLAGS, PTHREAD_LIBS): New variables.\n+\t(INTERNAL_CFLAGS_BASE): Use PTHREAD_CFLAGS.\n+\t(CLIBS): Use PTHREAD_LIBS.\n+\t(aclocal_m4_deps): Add ax_pthread.m4.\n+\t* config.in, configure: Rebuild.\n+\t* gdbsupport/common.m4 (GDB_AC_COMMON): Check for std::thread.\n+\n 2019-11-26  Tom Tromey  <tom@tromey.com>\n \n \t* symtab.h (struct minimal_symbol) <name_set>: New member."
    },
    {
      "sha": "404f559baef3d3df65f91f5d722b79b56670c0da",
      "filename": "gdb/Makefile.in",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/Makefile.in?ref=5e03027845ecc877621ea71bc342a30ecf2999ff",
      "patch": "@@ -210,6 +210,9 @@ WERROR_CFLAGS = @WERROR_CFLAGS@\n GDB_WARN_CFLAGS = $(WARN_CFLAGS)\n GDB_WERROR_CFLAGS = $(WERROR_CFLAGS)\n \n+PTHREAD_CFLAGS = @PTHREAD_CFLAGS@\n+PTHREAD_LIBS = @PTHREAD_LIBS@\n+\n RDYNAMIC = @RDYNAMIC@\n \n # Where is the INTL library?  Typically in ../intl.\n@@ -581,7 +584,7 @@ INTERNAL_CFLAGS_BASE = \\\n \t$(GDB_CFLAGS) $(OPCODES_CFLAGS) $(READLINE_CFLAGS) $(ZLIBINC) \\\n \t$(BFD_CFLAGS) $(INCLUDE_CFLAGS) $(LIBDECNUMBER_CFLAGS) \\\n \t$(INTL_CFLAGS) $(INCGNU) $(ENABLE_CFLAGS) $(INTERNAL_CPPFLAGS) \\\n-\t$(SRCHIGH_CFLAGS) $(TOP_CFLAGS)\n+\t$(SRCHIGH_CFLAGS) $(TOP_CFLAGS) $(PTHREAD_CFLAGS)\n INTERNAL_WARN_CFLAGS = $(INTERNAL_CFLAGS_BASE) $(GDB_WARN_CFLAGS)\n INTERNAL_CFLAGS = $(INTERNAL_WARN_CFLAGS) $(GDB_WERROR_CFLAGS)\n \n@@ -595,7 +598,7 @@ LDFLAGS = @LDFLAGS@\n # PROFILE_CFLAGS is _not_ included, however, because we use monstartup.\n INTERNAL_LDFLAGS = \\\n \t$(CXXFLAGS) $(GLOBAL_CFLAGS) $(MH_LDFLAGS) \\\n-\t$(LDFLAGS) $(CONFIG_LDFLAGS)\n+\t$(LDFLAGS) $(CONFIG_LDFLAGS) $(PTHREAD_CFLAGS)\n \n # Libraries and corresponding dependencies for compiling gdb.\n # XM_CLIBS, defined in *config files, have host-dependent libs.\n@@ -606,7 +609,7 @@ CLIBS = $(SIM) $(READLINE) $(OPCODES) $(BFD) $(LIBCTF) $(ZLIB) \\\n \t@LIBS@ @GUILE_LIBS@ @PYTHON_LIBS@ \\\n \t$(LIBEXPAT) $(LIBLZMA) $(LIBBABELTRACE) $(LIBIPT) \\\n \t$(LIBIBERTY) $(WIN32LIBS) $(LIBGNU) $(LIBICONV) $(LIBMPFR) \\\n-\t$(SRCHIGH_LIBS) $(LIBXXHASH)\n+\t$(SRCHIGH_LIBS) $(LIBXXHASH) $(PTHREAD_LIBS)\n CDEPS = $(NAT_CDEPS) $(SIM) $(BFD) $(READLINE_DEPS) $(LIBCTF) \\\n \t$(OPCODES) $(INTL_DEPS) $(LIBIBERTY) $(CONFIG_DEPS) $(LIBGNU)\n \n@@ -2063,7 +2066,8 @@ aclocal_m4_deps = \\\n \t../config/depstand.m4 \\\n \t../config/lcmessage.m4 \\\n \t../config/codeset.m4 \\\n-\t../config/zlib.m4\n+\t../config/zlib.m4 \\\n+\t../config/ax_pthread.m4\n \n $(srcdir)/aclocal.m4: @MAINTAINER_MODE_TRUE@ $(aclocal_m4_deps)\n \tcd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)"
    },
    {
      "sha": "8592b6c875b348acefb816a6302ea592d0eb9531",
      "filename": "gdb/acinclude.m4",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/acinclude.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/acinclude.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/acinclude.m4?ref=5e03027845ecc877621ea71bc342a30ecf2999ff",
      "patch": "@@ -73,6 +73,8 @@ m4_include(ptrace.m4)\n \n m4_include(ax_cxx_compile_stdcxx.m4)\n \n+m4_include([../config/ax_pthread.m4])\n+\n ## ----------------------------------------- ##\n ## ANSIfy the C compiler whenever possible.  ##\n ## From Franc,ois Pinard                     ##"
    },
    {
      "sha": "f20693b05d8d9d4c6e3071e89b10dccc51c7b321",
      "filename": "gdb/config.in",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/config.in?ref=5e03027845ecc877621ea71bc342a30ecf2999ff",
      "patch": "@@ -17,6 +17,9 @@\n    */\n #undef CRAY_STACKSEG_END\n \n+/* Define to 1 if std::thread works. */\n+#undef CXX_STD_THREAD\n+\n /* Define to 1 if using `alloca.c'. */\n #undef C_ALLOCA\n \n@@ -336,6 +339,9 @@\n /* Define if <sys/procfs.h> has psaddr_t. */\n #undef HAVE_PSADDR_T\n \n+/* Have PTHREAD_PRIO_INHERIT. */\n+#undef HAVE_PTHREAD_PRIO_INHERIT\n+\n /* Define to 1 if you have the `ptrace64' function. */\n #undef HAVE_PTRACE64\n \n@@ -622,6 +628,10 @@\n /* Define to 1 if the \"%ll\" format works to print long longs. */\n #undef PRINTF_HAS_LONG_LONG\n \n+/* Define to necessary symbol if this constant uses a non-standard name on\n+   your system. */\n+#undef PTHREAD_CREATE_JOINABLE\n+\n /* Define to the type of arg 1 for ptrace. */\n #undef PTRACE_TYPE_ARG1\n "
    },
    {
      "sha": "50164ac8a4aedf65d49865f38cbbef6ef7c353c4",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 767,
      "deletions": 0,
      "changes": 767,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=5e03027845ecc877621ea71bc342a30ecf2999ff",
      "patch": "@@ -702,6 +702,11 @@ SYSTEM_GDBINIT\n TARGET_SYSTEM_ROOT\n CONFIG_LDFLAGS\n RDYNAMIC\n+PTHREAD_CFLAGS\n+PTHREAD_LIBS\n+PTHREAD_CC\n+ax_pthread_config\n+SED\n ALLOCA\n LTLIBIPT\n LIBIPT\n@@ -13126,6 +13131,75 @@ _ACEOF\n \n fi\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output\" >&5\n+$as_echo_n \"checking for a sed that does not truncate output... \" >&6; }\n+if ${ac_cv_path_SED+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n+     for ac_i in 1 2 3 4 5 6 7; do\n+       ac_script=\"$ac_script$as_nl$ac_script\"\n+     done\n+     echo \"$ac_script\" 2>/dev/null | sed 99q >conftest.sed\n+     { ac_script=; unset ac_script;}\n+     if test -z \"$SED\"; then\n+  ac_path_SED_found=false\n+  # Loop through the user's path and test for each of PROGNAME-LIST\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_prog in sed gsed; do\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+      ac_path_SED=\"$as_dir/$ac_prog$ac_exec_ext\"\n+      as_fn_executable_p \"$ac_path_SED\" || continue\n+# Check for GNU ac_path_SED and select it if it is found.\n+  # Check for GNU $ac_path_SED\n+case `\"$ac_path_SED\" --version 2>&1` in\n+*GNU*)\n+  ac_cv_path_SED=\"$ac_path_SED\" ac_path_SED_found=:;;\n+*)\n+  ac_count=0\n+  $as_echo_n 0123456789 >\"conftest.in\"\n+  while :\n+  do\n+    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n+    mv \"conftest.tmp\" \"conftest.in\"\n+    cp \"conftest.in\" \"conftest.nl\"\n+    $as_echo '' >> \"conftest.nl\"\n+    \"$ac_path_SED\" -f conftest.sed < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n+    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n+    as_fn_arith $ac_count + 1 && ac_count=$as_val\n+    if test $ac_count -gt ${ac_path_SED_max-0}; then\n+      # Best one so far, save it but keep looking for a better one\n+      ac_cv_path_SED=\"$ac_path_SED\"\n+      ac_path_SED_max=$ac_count\n+    fi\n+    # 10*(2^10) chars as input seems more than enough\n+    test $ac_count -gt 10 && break\n+  done\n+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\n+esac\n+\n+      $ac_path_SED_found && break 3\n+    done\n+  done\n+  done\n+IFS=$as_save_IFS\n+  if test -z \"$ac_cv_path_SED\"; then\n+    as_fn_error $? \"no acceptable sed could be found in \\$PATH\" \"$LINENO\" 5\n+  fi\n+else\n+  ac_cv_path_SED=$SED\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED\" >&5\n+$as_echo \"$ac_cv_path_SED\" >&6; }\n+ SED=\"$ac_cv_path_SED\"\n+  rm -f conftest.sed\n+\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ANSI C header files\" >&5\n $as_echo_n \"checking for ANSI C header files... \" >&6; }\n@@ -13511,6 +13585,699 @@ cat >>confdefs.h <<_ACEOF\n _ACEOF\n \n \n+  # Check for std::thread.  This does not work on some platforms, like\n+  # mingw and DJGPP.\n+  ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+\n+\n+\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+ax_pthread_ok=no\n+\n+# We used to check for pthread.h first, but this fails if pthread.h\n+# requires special compiler flags (e.g. on Tru64 or Sequent).\n+# It gets checked for in the link test anyway.\n+\n+# First of all, check if the user has set any of the PTHREAD_LIBS,\n+# etcetera environment variables, and if threads linking works using\n+# them:\n+if test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n+        ax_pthread_save_CC=\"$CC\"\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        if test \"x$PTHREAD_CC\" != \"x\"; then :\n+  CC=\"$PTHREAD_CC\"\n+fi\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS\" >&5\n+$as_echo_n \"checking for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS... \" >&6; }\n+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char pthread_join ();\n+int\n+main ()\n+{\n+return pthread_join ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ax_pthread_ok=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_pthread_ok\" >&5\n+$as_echo \"$ax_pthread_ok\" >&6; }\n+        if test \"x$ax_pthread_ok\" = \"xno\"; then\n+                PTHREAD_LIBS=\"\"\n+                PTHREAD_CFLAGS=\"\"\n+        fi\n+        CC=\"$ax_pthread_save_CC\"\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+fi\n+\n+# We must check for the threads library under a number of different\n+# names; the ordering is very important because some systems\n+# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n+# libraries is broken (non-POSIX).\n+\n+# Create a list of thread flags to try.  Items starting with a \"-\" are\n+# C compiler flags, and other items are library names, except for \"none\"\n+# which indicates that we try without any flags at all, and \"pthread-config\"\n+# which is a program returning the flags for the Pth emulation library.\n+\n+ax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n+\n+# The ordering *is* (sometimes) important.  Some notes on the\n+# individual items follow:\n+\n+# pthreads: AIX (must check this before -lpthread)\n+# none: in case threads are in libc; should be tried before -Kthread and\n+#       other compiler flags to prevent continual compiler warnings\n+# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n+#           (Note: HP C rejects this with \"bad form for `-t' option\")\n+# -pthreads: Solaris/gcc (Note: HP C also rejects)\n+# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n+#      doesn't hurt to check since this sometimes defines pthreads and\n+#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n+#      is present but should not be used directly; and before -mthreads,\n+#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n+# -mthreads: Mingw32/gcc, Lynx/gcc\n+# pthread: Linux, etcetera\n+# --thread-safe: KAI C++\n+# pthread-config: use pthread-config program (for GNU Pth library)\n+\n+case $host_os in\n+\n+        freebsd*)\n+\n+        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n+        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n+\n+        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n+        ;;\n+\n+        hpux*)\n+\n+        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n+        # multi-threading and also sets -lpthread.\"\n+\n+        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n+        ;;\n+\n+        openedition*)\n+\n+        # IBM z/OS requires a feature-test macro to be defined in order to\n+        # enable POSIX threads at all, so give the user a hint if this is\n+        # not set. (We don't define these ourselves, as they can affect\n+        # other portions of the system API in unpredictable ways.)\n+\n+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n+             AX_PTHREAD_ZOS_MISSING\n+#            endif\n+\n+_ACEOF\n+if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n+  $EGREP \"AX_PTHREAD_ZOS_MISSING\" >/dev/null 2>&1; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.\" >&5\n+$as_echo \"$as_me: WARNING: IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.\" >&2;}\n+fi\n+rm -f conftest*\n+\n+        ;;\n+\n+        solaris*)\n+\n+        # On Solaris (at least, for some versions), libc contains stubbed\n+        # (non-functional) versions of the pthreads routines, so link-based\n+        # tests will erroneously succeed. (N.B.: The stubs are missing\n+        # pthread_cleanup_push, or rather a function called by this macro,\n+        # so we could check for that, but who knows whether they'll stub\n+        # that too in a future libc.)  So we'll check first for the\n+        # standard Solaris way of linking pthreads (-mt -lpthread).\n+\n+        ax_pthread_flags=\"-mt,pthread pthread $ax_pthread_flags\"\n+        ;;\n+esac\n+\n+# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n+\n+if test \"x$GCC\" = \"xyes\"; then :\n+  ax_pthread_flags=\"-pthread -pthreads $ax_pthread_flags\"\n+fi\n+\n+# The presence of a feature test macro requesting re-entrant function\n+# definitions is, on some systems, a strong hint that pthreads support is\n+# correctly enabled\n+\n+case $host_os in\n+        darwin* | hpux* | linux* | osf* | solaris*)\n+        ax_pthread_check_macro=\"_REENTRANT\"\n+        ;;\n+\n+        aix*)\n+        ax_pthread_check_macro=\"_THREAD_SAFE\"\n+        ;;\n+\n+        *)\n+        ax_pthread_check_macro=\"--\"\n+        ;;\n+esac\n+if test \"x$ax_pthread_check_macro\" = \"x--\"; then :\n+  ax_pthread_check_cond=0\n+else\n+  ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\"\n+fi\n+\n+# Are we compiling with Clang?\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC is Clang\" >&5\n+$as_echo_n \"checking whether $CC is Clang... \" >&6; }\n+if ${ax_cv_PTHREAD_CLANG+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ax_cv_PTHREAD_CLANG=no\n+     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n+     if test \"x$GCC\" = \"xyes\"; then\n+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n+#            if defined(__clang__) && defined(__llvm__)\n+             AX_PTHREAD_CC_IS_CLANG\n+#            endif\n+\n+_ACEOF\n+if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n+  $EGREP \"AX_PTHREAD_CC_IS_CLANG\" >/dev/null 2>&1; then :\n+  ax_cv_PTHREAD_CLANG=yes\n+fi\n+rm -f conftest*\n+\n+     fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_CLANG\" >&5\n+$as_echo \"$ax_cv_PTHREAD_CLANG\" >&6; }\n+ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n+\n+ax_pthread_clang_warning=no\n+\n+# Clang needs special handling, because older versions handle the -pthread\n+# option in a rather... idiosyncratic way\n+\n+if test \"x$ax_pthread_clang\" = \"xyes\"; then\n+\n+        # Clang takes -pthread; it has never supported any other flag\n+\n+        # (Note 1: This will need to be revisited if a system that Clang\n+        # supports has POSIX threads in a separate library.  This tends not\n+        # to be the way of modern systems, but it's conceivable.)\n+\n+        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n+        # to get POSIX threads support; the API is always present and\n+        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n+        # -pthread does define _REENTRANT, and while the Darwin headers\n+        # ignore this macro, third-party headers might not.)\n+\n+        PTHREAD_CFLAGS=\"-pthread\"\n+        PTHREAD_LIBS=\n+\n+        ax_pthread_ok=yes\n+\n+        # However, older versions of Clang make a point of warning the user\n+        # that, in an invocation where only linking and no compilation is\n+        # taking place, the -pthread option has no effect (\"argument unused\n+        # during compilation\").  They expect -pthread to be passed in only\n+        # when source code is being compiled.\n+        #\n+        # Problem is, this is at odds with the way Automake and most other\n+        # C build frameworks function, which is that the same flags used in\n+        # compilation (CFLAGS) are also used in linking.  Many systems\n+        # supported by AX_PTHREAD require exactly this for POSIX threads\n+        # support, and in fact it is often not straightforward to specify a\n+        # flag that is used only in the compilation phase and not in\n+        # linking.  Such a scenario is extremely rare in practice.\n+        #\n+        # Even though use of the -pthread flag in linking would only print\n+        # a warning, this can be a nuisance for well-run software projects\n+        # that build with -Werror.  So if the active version of Clang has\n+        # this misfeature, we search for an option to squash it.\n+\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether Clang needs flag to prevent \\\"argument unused\\\" warning when linking with -pthread\" >&5\n+$as_echo_n \"checking whether Clang needs flag to prevent \\\"argument unused\\\" warning when linking with -pthread... \" >&6; }\n+if ${ax_cv_PTHREAD_CLANG_NO_WARN_FLAG+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n+             # Create an alternate version of $ac_link that compiles and\n+             # links in two steps (.c -> .o, .o -> exe) instead of one\n+             # (.c -> exe), because the warning occurs only in the second\n+             # step\n+             ax_pthread_save_ac_link=\"$ac_link\"\n+             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n+             ax_pthread_link_step=`$as_echo \"$ac_link\" | sed \"$ax_pthread_sed\"`\n+             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n+             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n+                if test \"x$ax_pthread_try\" = \"xunknown\"; then :\n+  break\n+fi\n+                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n+                ac_link=\"$ax_pthread_save_ac_link\"\n+                cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int main(void){return 0;}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_link=\"$ax_pthread_2step_ac_link\"\n+                     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int main(void){return 0;}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  break\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+             done\n+             ac_link=\"$ax_pthread_save_ac_link\"\n+             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+             if test \"x$ax_pthread_try\" = \"x\"; then :\n+  ax_pthread_try=no\n+fi\n+             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" >&5\n+$as_echo \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" >&6; }\n+\n+        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n+                no | unknown) ;;\n+                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n+        esac\n+\n+fi # $ax_pthread_clang = yes\n+\n+if test \"x$ax_pthread_ok\" = \"xno\"; then\n+for ax_pthread_try_flag in $ax_pthread_flags; do\n+\n+        case $ax_pthread_try_flag in\n+                none)\n+                { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether pthreads work without any flags\" >&5\n+$as_echo_n \"checking whether pthreads work without any flags... \" >&6; }\n+                ;;\n+\n+                -mt,pthread)\n+                { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether pthreads work with -mt -lpthread\" >&5\n+$as_echo_n \"checking whether pthreads work with -mt -lpthread... \" >&6; }\n+                PTHREAD_CFLAGS=\"-mt\"\n+                PTHREAD_LIBS=\"-lpthread\"\n+                ;;\n+\n+                -*)\n+                { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether pthreads work with $ax_pthread_try_flag\" >&5\n+$as_echo_n \"checking whether pthreads work with $ax_pthread_try_flag... \" >&6; }\n+                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n+                ;;\n+\n+                pthread-config)\n+                # Extract the first word of \"pthread-config\", so it can be a program name with args.\n+set dummy pthread-config; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_ax_pthread_config+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$ax_pthread_config\"; then\n+  ac_cv_prog_ax_pthread_config=\"$ax_pthread_config\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_ax_pthread_config=\"yes\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+  test -z \"$ac_cv_prog_ax_pthread_config\" && ac_cv_prog_ax_pthread_config=\"no\"\n+fi\n+fi\n+ax_pthread_config=$ac_cv_prog_ax_pthread_config\n+if test -n \"$ax_pthread_config\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_pthread_config\" >&5\n+$as_echo \"$ax_pthread_config\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+                if test \"x$ax_pthread_config\" = \"xno\"; then :\n+  continue\n+fi\n+                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n+                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n+                ;;\n+\n+                *)\n+                { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the pthreads library -l$ax_pthread_try_flag\" >&5\n+$as_echo_n \"checking for the pthreads library -l$ax_pthread_try_flag... \" >&6; }\n+                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n+                ;;\n+        esac\n+\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+\n+        # Check for various functions.  We must include pthread.h,\n+        # since some functions may be macros.  (On the Sequent, we\n+        # need a special flag -Kthread to make this header compile.)\n+        # We check for pthread_join because it is in -lpthread on IRIX\n+        # while pthread_create is in libc.  We check for pthread_attr_init\n+        # due to DEC craziness with -lpthreads.  We check for\n+        # pthread_cleanup_push because it is one of the few pthread\n+        # functions on Solaris that doesn't have a non-functional libc stub.\n+        # We try pthread_create on general principles.\n+\n+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <pthread.h>\n+#                       if $ax_pthread_check_cond\n+#                        error \"$ax_pthread_check_macro must be defined\"\n+#                       endif\n+                        static void routine(void *a) { a = 0; }\n+                        static void *start_routine(void *a) { return a; }\n+int\n+main ()\n+{\n+pthread_t th; pthread_attr_t attr;\n+                        pthread_create(&th, 0, start_routine, 0);\n+                        pthread_join(th, 0);\n+                        pthread_attr_init(&attr);\n+                        pthread_cleanup_push(routine, 0);\n+                        pthread_cleanup_pop(0) /* ; */\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ax_pthread_ok=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_pthread_ok\" >&5\n+$as_echo \"$ax_pthread_ok\" >&6; }\n+        if test \"x$ax_pthread_ok\" = \"xyes\"; then :\n+  break\n+fi\n+\n+        PTHREAD_LIBS=\"\"\n+        PTHREAD_CFLAGS=\"\"\n+done\n+fi\n+\n+# Various other checks:\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+\n+        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for joinable pthread attribute\" >&5\n+$as_echo_n \"checking for joinable pthread attribute... \" >&6; }\n+if ${ax_cv_PTHREAD_JOINABLE_ATTR+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n+             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n+                 cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <pthread.h>\n+int\n+main ()\n+{\n+int attr = $ax_pthread_attr; return attr /* ; */\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+             done\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_JOINABLE_ATTR\" >&5\n+$as_echo \"$ax_cv_PTHREAD_JOINABLE_ATTR\" >&6; }\n+        if test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n+               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n+               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"; then :\n+\n+cat >>confdefs.h <<_ACEOF\n+#define PTHREAD_CREATE_JOINABLE $ax_cv_PTHREAD_JOINABLE_ATTR\n+_ACEOF\n+\n+               ax_pthread_joinable_attr_defined=yes\n+\n+fi\n+\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether more special flags are required for pthreads\" >&5\n+$as_echo_n \"checking whether more special flags are required for pthreads... \" >&6; }\n+if ${ax_cv_PTHREAD_SPECIAL_FLAGS+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ax_cv_PTHREAD_SPECIAL_FLAGS=no\n+             case $host_os in\n+             solaris*)\n+             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n+             ;;\n+             esac\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_SPECIAL_FLAGS\" >&5\n+$as_echo \"$ax_cv_PTHREAD_SPECIAL_FLAGS\" >&6; }\n+        if test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n+               test \"x$ax_pthread_special_flags_added\" != \"xyes\"; then :\n+  PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n+               ax_pthread_special_flags_added=yes\n+fi\n+\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for PTHREAD_PRIO_INHERIT\" >&5\n+$as_echo_n \"checking for PTHREAD_PRIO_INHERIT... \" >&6; }\n+if ${ax_cv_PTHREAD_PRIO_INHERIT+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <pthread.h>\n+int\n+main ()\n+{\n+int i = PTHREAD_PRIO_INHERIT;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ax_cv_PTHREAD_PRIO_INHERIT=yes\n+else\n+  ax_cv_PTHREAD_PRIO_INHERIT=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_PRIO_INHERIT\" >&5\n+$as_echo \"$ax_cv_PTHREAD_PRIO_INHERIT\" >&6; }\n+        if test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n+               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"; then :\n+\n+$as_echo \"#define HAVE_PTHREAD_PRIO_INHERIT 1\" >>confdefs.h\n+\n+               ax_pthread_prio_inherit_defined=yes\n+\n+fi\n+\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+\n+        # More AIX lossage: compile with *_r variant\n+        if test \"x$GCC\" != \"xyes\"; then\n+            case $host_os in\n+                aix*)\n+                case \"x/$CC\" in #(\n+  x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6) :\n+    #handle absolute path differently from PATH based program lookup\n+                     case \"x$CC\" in #(\n+  x/*) :\n+    if as_fn_executable_p ${CC}_r; then :\n+  PTHREAD_CC=\"${CC}_r\"\n+fi ;; #(\n+  *) :\n+    for ac_prog in ${CC}_r\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_PTHREAD_CC+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$PTHREAD_CC\"; then\n+  ac_cv_prog_PTHREAD_CC=\"$PTHREAD_CC\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_PTHREAD_CC=\"$ac_prog\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+PTHREAD_CC=$ac_cv_prog_PTHREAD_CC\n+if test -n \"$PTHREAD_CC\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $PTHREAD_CC\" >&5\n+$as_echo \"$PTHREAD_CC\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+  test -n \"$PTHREAD_CC\" && break\n+done\n+test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+ ;;\n+esac ;; #(\n+  *) :\n+     ;;\n+esac\n+                ;;\n+            esac\n+        fi\n+fi\n+\n+test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+\n+\n+\n+\n+\n+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n+        threads=yes\n+        :\n+else\n+        ax_pthread_ok=no\n+        threads=no\n+fi\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+  if test \"$threads\" = \"yes\"; then\n+    save_LIBS=\"$LIBS\"\n+    LIBS=\"$PTHREAD_LIBS $LIBS\"\n+    save_CXXFLAGS=\"$CXXFLAGS\"\n+    CXXFLAGS=\"$PTHREAD_CFLAGS $save_CXXFLAGS\"\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for std::thread\" >&5\n+$as_echo_n \"checking for std::thread... \" >&6; }\n+if ${gdb_cv_cxx_std_thread+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <thread>\n+      void callback() { }\n+int\n+main ()\n+{\n+std::thread t(callback);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  gdb_cv_cxx_std_thread=yes\n+else\n+  gdb_cv_cxx_std_thread=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_cxx_std_thread\" >&5\n+$as_echo \"$gdb_cv_cxx_std_thread\" >&6; }\n+    LIBS=\"$save_LIBS\"\n+    CXXFLAGS=\"$save_CXXFLAGS\"\n+  fi\n+  if test $gdb_cv_cxx_std_thread = yes; then\n+\n+$as_echo \"#define CXX_STD_THREAD 1\" >>confdefs.h\n+\n+  fi\n+  ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sigsetjmp\" >&5\n $as_echo_n \"checking for sigsetjmp... \" >&6; }\n if ${gdb_cv_func_sigsetjmp+:} false; then :"
    },
    {
      "sha": "eee4b818a25ad99b471eb3e0ff3373f0ce9bda5b",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=5e03027845ecc877621ea71bc342a30ecf2999ff",
      "patch": "@@ -1,3 +1,11 @@\n+2019-11-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* Makefile.in (PTHREAD_CFLAGS, PTHREAD_LIBS): New variables.\n+\t(INTERNAL_CFLAGS_BASE): Use PTHREAD_CFLAGS.\n+\t(GDBSERVER_LIBS): Use PTHREAD_LIBS.\n+\t* acinclude.m4: Include ax_pthread.m4.\n+\t* config.in, configure: Rebuild.\n+\n 2019-11-26  Christian Biesinger  <cbiesinger@google.com>\n \n \t* debug.c (debug_set_output): Call safe_strerror instead of"
    },
    {
      "sha": "e79d24f96f76d2d96fe08cacbb2710f6dbe15dca",
      "filename": "gdb/gdbserver/Makefile.in",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/gdbserver/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/gdbserver/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/Makefile.in?ref=5e03027845ecc877621ea71bc342a30ecf2999ff",
      "patch": "@@ -139,9 +139,12 @@ CFLAGS = @CFLAGS@\n CXXFLAGS = @CXXFLAGS@\n CPPFLAGS = @CPPFLAGS@\n \n+PTHREAD_CFLAGS = @PTHREAD_CFLAGS@\n+PTHREAD_LIBS = @PTHREAD_LIBS@\n+\n # INTERNAL_CFLAGS is the aggregate of all other *CFLAGS macros.\n INTERNAL_CFLAGS_BASE = ${CXXFLAGS} ${GLOBAL_CFLAGS} \\\n-\t${PROFILE_CFLAGS} ${INCLUDE_CFLAGS} ${CPPFLAGS}\n+\t${PROFILE_CFLAGS} ${INCLUDE_CFLAGS} ${CPPFLAGS} $(PTHREAD_CFLAGS)\n INTERNAL_WARN_CFLAGS = ${INTERNAL_CFLAGS_BASE} $(WARN_CFLAGS)\n INTERNAL_CFLAGS = ${INTERNAL_WARN_CFLAGS} $(WERROR_CFLAGS) -DGDBSERVER\n \n@@ -305,7 +308,7 @@ GDBREPLAY_OBS = \\\n \tutils.o \\\n \tversion.o\n \n-GDBSERVER_LIBS = @GDBSERVER_LIBS@\n+GDBSERVER_LIBS = @GDBSERVER_LIBS@ $(PTHREAD_LIBS)\n XM_CLIBS = @LIBS@\n CDEPS = $(srcdir)/proc-service.list\n "
    },
    {
      "sha": "4c18e9b01db0c41e32be39689917f722d468e41e",
      "filename": "gdb/gdbserver/acinclude.m4",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/gdbserver/acinclude.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/gdbserver/acinclude.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/acinclude.m4?ref=5e03027845ecc877621ea71bc342a30ecf2999ff",
      "patch": "@@ -31,6 +31,8 @@ m4_include(../ax_cxx_compile_stdcxx.m4)\n dnl For GDB_AC_SELFTEST.\n m4_include(../selftest.m4)\n \n+m4_include([../../config/ax_pthread.m4])\n+\n dnl Check for existence of a type $1 in libthread_db.h\n dnl Based on BFD_HAVE_SYS_PROCFS_TYPE in bfd/bfd.m4.\n "
    },
    {
      "sha": "4276bce9af06023170dc4f6dd7832112b9636934",
      "filename": "gdb/gdbserver/config.in",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/gdbserver/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/gdbserver/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/config.in?ref=5e03027845ecc877621ea71bc342a30ecf2999ff",
      "patch": "@@ -5,6 +5,9 @@\n    */\n #undef CRAY_STACKSEG_END\n \n+/* Define to 1 if std::thread works. */\n+#undef CXX_STD_THREAD\n+\n /* Define to 1 if using `alloca.c'. */\n #undef C_ALLOCA\n \n@@ -189,6 +192,9 @@\n /* Define if <thread_db.h> has psaddr_t. */\n #undef HAVE_PSADDR_T\n \n+/* Have PTHREAD_PRIO_INHERIT. */\n+#undef HAVE_PTHREAD_PRIO_INHERIT\n+\n /* Define if the target supports PTRACE_GETFPXREGS for extended register\n    access. */\n #undef HAVE_PTRACE_GETFPXREGS\n@@ -334,6 +340,10 @@\n /* Additional package description */\n #undef PKGVERSION\n \n+/* Define to necessary symbol if this constant uses a non-standard name on\n+   your system. */\n+#undef PTHREAD_CREATE_JOINABLE\n+\n /* Define to the type of arg 1 for ptrace. */\n #undef PTRACE_TYPE_ARG1\n "
    },
    {
      "sha": "882c1922a1e152005f55fafe98f6381fa29f5eed",
      "filename": "gdb/gdbserver/configure",
      "status": "modified",
      "additions": 767,
      "deletions": 0,
      "changes": 767,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/gdbserver/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/gdbserver/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/configure?ref=5e03027845ecc877621ea71bc342a30ecf2999ff",
      "patch": "@@ -636,6 +636,11 @@ WERROR_CFLAGS\n WARN_CFLAGS\n ustinc\n ustlibs\n+PTHREAD_CFLAGS\n+PTHREAD_LIBS\n+PTHREAD_CC\n+ax_pthread_config\n+SED\n ALLOCA\n CCDEPMODE\n CONFIG_SRC_SUBDIR\n@@ -6472,6 +6477,75 @@ _ACEOF\n \n fi\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output\" >&5\n+$as_echo_n \"checking for a sed that does not truncate output... \" >&6; }\n+if ${ac_cv_path_SED+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n+     for ac_i in 1 2 3 4 5 6 7; do\n+       ac_script=\"$ac_script$as_nl$ac_script\"\n+     done\n+     echo \"$ac_script\" 2>/dev/null | sed 99q >conftest.sed\n+     { ac_script=; unset ac_script;}\n+     if test -z \"$SED\"; then\n+  ac_path_SED_found=false\n+  # Loop through the user's path and test for each of PROGNAME-LIST\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_prog in sed gsed; do\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+      ac_path_SED=\"$as_dir/$ac_prog$ac_exec_ext\"\n+      as_fn_executable_p \"$ac_path_SED\" || continue\n+# Check for GNU ac_path_SED and select it if it is found.\n+  # Check for GNU $ac_path_SED\n+case `\"$ac_path_SED\" --version 2>&1` in\n+*GNU*)\n+  ac_cv_path_SED=\"$ac_path_SED\" ac_path_SED_found=:;;\n+*)\n+  ac_count=0\n+  $as_echo_n 0123456789 >\"conftest.in\"\n+  while :\n+  do\n+    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n+    mv \"conftest.tmp\" \"conftest.in\"\n+    cp \"conftest.in\" \"conftest.nl\"\n+    $as_echo '' >> \"conftest.nl\"\n+    \"$ac_path_SED\" -f conftest.sed < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n+    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n+    as_fn_arith $ac_count + 1 && ac_count=$as_val\n+    if test $ac_count -gt ${ac_path_SED_max-0}; then\n+      # Best one so far, save it but keep looking for a better one\n+      ac_cv_path_SED=\"$ac_path_SED\"\n+      ac_path_SED_max=$ac_count\n+    fi\n+    # 10*(2^10) chars as input seems more than enough\n+    test $ac_count -gt 10 && break\n+  done\n+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\n+esac\n+\n+      $ac_path_SED_found && break 3\n+    done\n+  done\n+  done\n+IFS=$as_save_IFS\n+  if test -z \"$ac_cv_path_SED\"; then\n+    as_fn_error $? \"no acceptable sed could be found in \\$PATH\" \"$LINENO\" 5\n+  fi\n+else\n+  ac_cv_path_SED=$SED\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED\" >&5\n+$as_echo \"$ac_cv_path_SED\" >&6; }\n+ SED=\"$ac_cv_path_SED\"\n+  rm -f conftest.sed\n+\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ANSI C header files\" >&5\n $as_echo_n \"checking for ANSI C header files... \" >&6; }\n@@ -6857,6 +6931,699 @@ cat >>confdefs.h <<_ACEOF\n _ACEOF\n \n \n+  # Check for std::thread.  This does not work on some platforms, like\n+  # mingw and DJGPP.\n+  ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+\n+\n+\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+ax_pthread_ok=no\n+\n+# We used to check for pthread.h first, but this fails if pthread.h\n+# requires special compiler flags (e.g. on Tru64 or Sequent).\n+# It gets checked for in the link test anyway.\n+\n+# First of all, check if the user has set any of the PTHREAD_LIBS,\n+# etcetera environment variables, and if threads linking works using\n+# them:\n+if test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n+        ax_pthread_save_CC=\"$CC\"\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        if test \"x$PTHREAD_CC\" != \"x\"; then :\n+  CC=\"$PTHREAD_CC\"\n+fi\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS\" >&5\n+$as_echo_n \"checking for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS... \" >&6; }\n+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char pthread_join ();\n+int\n+main ()\n+{\n+return pthread_join ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ax_pthread_ok=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_pthread_ok\" >&5\n+$as_echo \"$ax_pthread_ok\" >&6; }\n+        if test \"x$ax_pthread_ok\" = \"xno\"; then\n+                PTHREAD_LIBS=\"\"\n+                PTHREAD_CFLAGS=\"\"\n+        fi\n+        CC=\"$ax_pthread_save_CC\"\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+fi\n+\n+# We must check for the threads library under a number of different\n+# names; the ordering is very important because some systems\n+# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n+# libraries is broken (non-POSIX).\n+\n+# Create a list of thread flags to try.  Items starting with a \"-\" are\n+# C compiler flags, and other items are library names, except for \"none\"\n+# which indicates that we try without any flags at all, and \"pthread-config\"\n+# which is a program returning the flags for the Pth emulation library.\n+\n+ax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n+\n+# The ordering *is* (sometimes) important.  Some notes on the\n+# individual items follow:\n+\n+# pthreads: AIX (must check this before -lpthread)\n+# none: in case threads are in libc; should be tried before -Kthread and\n+#       other compiler flags to prevent continual compiler warnings\n+# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n+#           (Note: HP C rejects this with \"bad form for `-t' option\")\n+# -pthreads: Solaris/gcc (Note: HP C also rejects)\n+# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n+#      doesn't hurt to check since this sometimes defines pthreads and\n+#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n+#      is present but should not be used directly; and before -mthreads,\n+#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n+# -mthreads: Mingw32/gcc, Lynx/gcc\n+# pthread: Linux, etcetera\n+# --thread-safe: KAI C++\n+# pthread-config: use pthread-config program (for GNU Pth library)\n+\n+case $host_os in\n+\n+        freebsd*)\n+\n+        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n+        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n+\n+        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n+        ;;\n+\n+        hpux*)\n+\n+        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n+        # multi-threading and also sets -lpthread.\"\n+\n+        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n+        ;;\n+\n+        openedition*)\n+\n+        # IBM z/OS requires a feature-test macro to be defined in order to\n+        # enable POSIX threads at all, so give the user a hint if this is\n+        # not set. (We don't define these ourselves, as they can affect\n+        # other portions of the system API in unpredictable ways.)\n+\n+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n+             AX_PTHREAD_ZOS_MISSING\n+#            endif\n+\n+_ACEOF\n+if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n+  $EGREP \"AX_PTHREAD_ZOS_MISSING\" >/dev/null 2>&1; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.\" >&5\n+$as_echo \"$as_me: WARNING: IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.\" >&2;}\n+fi\n+rm -f conftest*\n+\n+        ;;\n+\n+        solaris*)\n+\n+        # On Solaris (at least, for some versions), libc contains stubbed\n+        # (non-functional) versions of the pthreads routines, so link-based\n+        # tests will erroneously succeed. (N.B.: The stubs are missing\n+        # pthread_cleanup_push, or rather a function called by this macro,\n+        # so we could check for that, but who knows whether they'll stub\n+        # that too in a future libc.)  So we'll check first for the\n+        # standard Solaris way of linking pthreads (-mt -lpthread).\n+\n+        ax_pthread_flags=\"-mt,pthread pthread $ax_pthread_flags\"\n+        ;;\n+esac\n+\n+# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n+\n+if test \"x$GCC\" = \"xyes\"; then :\n+  ax_pthread_flags=\"-pthread -pthreads $ax_pthread_flags\"\n+fi\n+\n+# The presence of a feature test macro requesting re-entrant function\n+# definitions is, on some systems, a strong hint that pthreads support is\n+# correctly enabled\n+\n+case $host_os in\n+        darwin* | hpux* | linux* | osf* | solaris*)\n+        ax_pthread_check_macro=\"_REENTRANT\"\n+        ;;\n+\n+        aix*)\n+        ax_pthread_check_macro=\"_THREAD_SAFE\"\n+        ;;\n+\n+        *)\n+        ax_pthread_check_macro=\"--\"\n+        ;;\n+esac\n+if test \"x$ax_pthread_check_macro\" = \"x--\"; then :\n+  ax_pthread_check_cond=0\n+else\n+  ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\"\n+fi\n+\n+# Are we compiling with Clang?\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC is Clang\" >&5\n+$as_echo_n \"checking whether $CC is Clang... \" >&6; }\n+if ${ax_cv_PTHREAD_CLANG+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ax_cv_PTHREAD_CLANG=no\n+     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n+     if test \"x$GCC\" = \"xyes\"; then\n+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n+#            if defined(__clang__) && defined(__llvm__)\n+             AX_PTHREAD_CC_IS_CLANG\n+#            endif\n+\n+_ACEOF\n+if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n+  $EGREP \"AX_PTHREAD_CC_IS_CLANG\" >/dev/null 2>&1; then :\n+  ax_cv_PTHREAD_CLANG=yes\n+fi\n+rm -f conftest*\n+\n+     fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_CLANG\" >&5\n+$as_echo \"$ax_cv_PTHREAD_CLANG\" >&6; }\n+ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n+\n+ax_pthread_clang_warning=no\n+\n+# Clang needs special handling, because older versions handle the -pthread\n+# option in a rather... idiosyncratic way\n+\n+if test \"x$ax_pthread_clang\" = \"xyes\"; then\n+\n+        # Clang takes -pthread; it has never supported any other flag\n+\n+        # (Note 1: This will need to be revisited if a system that Clang\n+        # supports has POSIX threads in a separate library.  This tends not\n+        # to be the way of modern systems, but it's conceivable.)\n+\n+        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n+        # to get POSIX threads support; the API is always present and\n+        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n+        # -pthread does define _REENTRANT, and while the Darwin headers\n+        # ignore this macro, third-party headers might not.)\n+\n+        PTHREAD_CFLAGS=\"-pthread\"\n+        PTHREAD_LIBS=\n+\n+        ax_pthread_ok=yes\n+\n+        # However, older versions of Clang make a point of warning the user\n+        # that, in an invocation where only linking and no compilation is\n+        # taking place, the -pthread option has no effect (\"argument unused\n+        # during compilation\").  They expect -pthread to be passed in only\n+        # when source code is being compiled.\n+        #\n+        # Problem is, this is at odds with the way Automake and most other\n+        # C build frameworks function, which is that the same flags used in\n+        # compilation (CFLAGS) are also used in linking.  Many systems\n+        # supported by AX_PTHREAD require exactly this for POSIX threads\n+        # support, and in fact it is often not straightforward to specify a\n+        # flag that is used only in the compilation phase and not in\n+        # linking.  Such a scenario is extremely rare in practice.\n+        #\n+        # Even though use of the -pthread flag in linking would only print\n+        # a warning, this can be a nuisance for well-run software projects\n+        # that build with -Werror.  So if the active version of Clang has\n+        # this misfeature, we search for an option to squash it.\n+\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether Clang needs flag to prevent \\\"argument unused\\\" warning when linking with -pthread\" >&5\n+$as_echo_n \"checking whether Clang needs flag to prevent \\\"argument unused\\\" warning when linking with -pthread... \" >&6; }\n+if ${ax_cv_PTHREAD_CLANG_NO_WARN_FLAG+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n+             # Create an alternate version of $ac_link that compiles and\n+             # links in two steps (.c -> .o, .o -> exe) instead of one\n+             # (.c -> exe), because the warning occurs only in the second\n+             # step\n+             ax_pthread_save_ac_link=\"$ac_link\"\n+             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n+             ax_pthread_link_step=`$as_echo \"$ac_link\" | sed \"$ax_pthread_sed\"`\n+             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n+             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n+                if test \"x$ax_pthread_try\" = \"xunknown\"; then :\n+  break\n+fi\n+                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n+                ac_link=\"$ax_pthread_save_ac_link\"\n+                cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int main(void){return 0;}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_link=\"$ax_pthread_2step_ac_link\"\n+                     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int main(void){return 0;}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  break\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+             done\n+             ac_link=\"$ax_pthread_save_ac_link\"\n+             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+             if test \"x$ax_pthread_try\" = \"x\"; then :\n+  ax_pthread_try=no\n+fi\n+             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" >&5\n+$as_echo \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" >&6; }\n+\n+        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n+                no | unknown) ;;\n+                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n+        esac\n+\n+fi # $ax_pthread_clang = yes\n+\n+if test \"x$ax_pthread_ok\" = \"xno\"; then\n+for ax_pthread_try_flag in $ax_pthread_flags; do\n+\n+        case $ax_pthread_try_flag in\n+                none)\n+                { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether pthreads work without any flags\" >&5\n+$as_echo_n \"checking whether pthreads work without any flags... \" >&6; }\n+                ;;\n+\n+                -mt,pthread)\n+                { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether pthreads work with -mt -lpthread\" >&5\n+$as_echo_n \"checking whether pthreads work with -mt -lpthread... \" >&6; }\n+                PTHREAD_CFLAGS=\"-mt\"\n+                PTHREAD_LIBS=\"-lpthread\"\n+                ;;\n+\n+                -*)\n+                { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether pthreads work with $ax_pthread_try_flag\" >&5\n+$as_echo_n \"checking whether pthreads work with $ax_pthread_try_flag... \" >&6; }\n+                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n+                ;;\n+\n+                pthread-config)\n+                # Extract the first word of \"pthread-config\", so it can be a program name with args.\n+set dummy pthread-config; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_ax_pthread_config+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$ax_pthread_config\"; then\n+  ac_cv_prog_ax_pthread_config=\"$ax_pthread_config\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_ax_pthread_config=\"yes\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+  test -z \"$ac_cv_prog_ax_pthread_config\" && ac_cv_prog_ax_pthread_config=\"no\"\n+fi\n+fi\n+ax_pthread_config=$ac_cv_prog_ax_pthread_config\n+if test -n \"$ax_pthread_config\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_pthread_config\" >&5\n+$as_echo \"$ax_pthread_config\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+                if test \"x$ax_pthread_config\" = \"xno\"; then :\n+  continue\n+fi\n+                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n+                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n+                ;;\n+\n+                *)\n+                { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the pthreads library -l$ax_pthread_try_flag\" >&5\n+$as_echo_n \"checking for the pthreads library -l$ax_pthread_try_flag... \" >&6; }\n+                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n+                ;;\n+        esac\n+\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+\n+        # Check for various functions.  We must include pthread.h,\n+        # since some functions may be macros.  (On the Sequent, we\n+        # need a special flag -Kthread to make this header compile.)\n+        # We check for pthread_join because it is in -lpthread on IRIX\n+        # while pthread_create is in libc.  We check for pthread_attr_init\n+        # due to DEC craziness with -lpthreads.  We check for\n+        # pthread_cleanup_push because it is one of the few pthread\n+        # functions on Solaris that doesn't have a non-functional libc stub.\n+        # We try pthread_create on general principles.\n+\n+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <pthread.h>\n+#                       if $ax_pthread_check_cond\n+#                        error \"$ax_pthread_check_macro must be defined\"\n+#                       endif\n+                        static void routine(void *a) { a = 0; }\n+                        static void *start_routine(void *a) { return a; }\n+int\n+main ()\n+{\n+pthread_t th; pthread_attr_t attr;\n+                        pthread_create(&th, 0, start_routine, 0);\n+                        pthread_join(th, 0);\n+                        pthread_attr_init(&attr);\n+                        pthread_cleanup_push(routine, 0);\n+                        pthread_cleanup_pop(0) /* ; */\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ax_pthread_ok=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_pthread_ok\" >&5\n+$as_echo \"$ax_pthread_ok\" >&6; }\n+        if test \"x$ax_pthread_ok\" = \"xyes\"; then :\n+  break\n+fi\n+\n+        PTHREAD_LIBS=\"\"\n+        PTHREAD_CFLAGS=\"\"\n+done\n+fi\n+\n+# Various other checks:\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+\n+        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for joinable pthread attribute\" >&5\n+$as_echo_n \"checking for joinable pthread attribute... \" >&6; }\n+if ${ax_cv_PTHREAD_JOINABLE_ATTR+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n+             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n+                 cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <pthread.h>\n+int\n+main ()\n+{\n+int attr = $ax_pthread_attr; return attr /* ; */\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+             done\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_JOINABLE_ATTR\" >&5\n+$as_echo \"$ax_cv_PTHREAD_JOINABLE_ATTR\" >&6; }\n+        if test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n+               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n+               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"; then :\n+\n+cat >>confdefs.h <<_ACEOF\n+#define PTHREAD_CREATE_JOINABLE $ax_cv_PTHREAD_JOINABLE_ATTR\n+_ACEOF\n+\n+               ax_pthread_joinable_attr_defined=yes\n+\n+fi\n+\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether more special flags are required for pthreads\" >&5\n+$as_echo_n \"checking whether more special flags are required for pthreads... \" >&6; }\n+if ${ax_cv_PTHREAD_SPECIAL_FLAGS+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ax_cv_PTHREAD_SPECIAL_FLAGS=no\n+             case $host_os in\n+             solaris*)\n+             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n+             ;;\n+             esac\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_SPECIAL_FLAGS\" >&5\n+$as_echo \"$ax_cv_PTHREAD_SPECIAL_FLAGS\" >&6; }\n+        if test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n+               test \"x$ax_pthread_special_flags_added\" != \"xyes\"; then :\n+  PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n+               ax_pthread_special_flags_added=yes\n+fi\n+\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for PTHREAD_PRIO_INHERIT\" >&5\n+$as_echo_n \"checking for PTHREAD_PRIO_INHERIT... \" >&6; }\n+if ${ax_cv_PTHREAD_PRIO_INHERIT+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <pthread.h>\n+int\n+main ()\n+{\n+int i = PTHREAD_PRIO_INHERIT;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ax_cv_PTHREAD_PRIO_INHERIT=yes\n+else\n+  ax_cv_PTHREAD_PRIO_INHERIT=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_PRIO_INHERIT\" >&5\n+$as_echo \"$ax_cv_PTHREAD_PRIO_INHERIT\" >&6; }\n+        if test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n+               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"; then :\n+\n+$as_echo \"#define HAVE_PTHREAD_PRIO_INHERIT 1\" >>confdefs.h\n+\n+               ax_pthread_prio_inherit_defined=yes\n+\n+fi\n+\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+\n+        # More AIX lossage: compile with *_r variant\n+        if test \"x$GCC\" != \"xyes\"; then\n+            case $host_os in\n+                aix*)\n+                case \"x/$CC\" in #(\n+  x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6) :\n+    #handle absolute path differently from PATH based program lookup\n+                     case \"x$CC\" in #(\n+  x/*) :\n+    if as_fn_executable_p ${CC}_r; then :\n+  PTHREAD_CC=\"${CC}_r\"\n+fi ;; #(\n+  *) :\n+    for ac_prog in ${CC}_r\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_PTHREAD_CC+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$PTHREAD_CC\"; then\n+  ac_cv_prog_PTHREAD_CC=\"$PTHREAD_CC\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_PTHREAD_CC=\"$ac_prog\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+PTHREAD_CC=$ac_cv_prog_PTHREAD_CC\n+if test -n \"$PTHREAD_CC\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $PTHREAD_CC\" >&5\n+$as_echo \"$PTHREAD_CC\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+  test -n \"$PTHREAD_CC\" && break\n+done\n+test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+ ;;\n+esac ;; #(\n+  *) :\n+     ;;\n+esac\n+                ;;\n+            esac\n+        fi\n+fi\n+\n+test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+\n+\n+\n+\n+\n+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n+        threads=yes\n+        :\n+else\n+        ax_pthread_ok=no\n+        threads=no\n+fi\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+  if test \"$threads\" = \"yes\"; then\n+    save_LIBS=\"$LIBS\"\n+    LIBS=\"$PTHREAD_LIBS $LIBS\"\n+    save_CXXFLAGS=\"$CXXFLAGS\"\n+    CXXFLAGS=\"$PTHREAD_CFLAGS $save_CXXFLAGS\"\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for std::thread\" >&5\n+$as_echo_n \"checking for std::thread... \" >&6; }\n+if ${gdb_cv_cxx_std_thread+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <thread>\n+      void callback() { }\n+int\n+main ()\n+{\n+std::thread t(callback);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  gdb_cv_cxx_std_thread=yes\n+else\n+  gdb_cv_cxx_std_thread=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_cxx_std_thread\" >&5\n+$as_echo \"$gdb_cv_cxx_std_thread\" >&6; }\n+    LIBS=\"$save_LIBS\"\n+    CXXFLAGS=\"$save_CXXFLAGS\"\n+  fi\n+  if test $gdb_cv_cxx_std_thread = yes; then\n+\n+$as_echo \"#define CXX_STD_THREAD 1\" >>confdefs.h\n+\n+  fi\n+  ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sigsetjmp\" >&5\n $as_echo_n \"checking for sigsetjmp... \" >&6; }\n if ${gdb_cv_func_sigsetjmp+:} false; then :"
    },
    {
      "sha": "f813c04fd3f5c33a21ca9ce06b22515f5c0bd4ea",
      "filename": "gdb/gdbsupport/common.m4",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/gdbsupport/common.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e03027845ecc877621ea71bc342a30ecf2999ff/gdb/gdbsupport/common.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/common.m4?ref=5e03027845ecc877621ea71bc342a30ecf2999ff",
      "patch": "@@ -37,6 +37,32 @@ AC_DEFUN([GDB_AC_COMMON], [\n \n   AC_CHECK_DECLS([strerror, strstr])\n \n+  # Check for std::thread.  This does not work on some platforms, like\n+  # mingw and DJGPP.\n+  AC_LANG_PUSH([C++])\n+  AX_PTHREAD([threads=yes], [threads=no])\n+  if test \"$threads\" = \"yes\"; then\n+    save_LIBS=\"$LIBS\"\n+    LIBS=\"$PTHREAD_LIBS $LIBS\"\n+    save_CXXFLAGS=\"$CXXFLAGS\"\n+    CXXFLAGS=\"$PTHREAD_CFLAGS $save_CXXFLAGS\"\n+    AC_CACHE_CHECK([for std::thread],\n+\t\t   gdb_cv_cxx_std_thread,\n+\t\t   [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+    [[#include <thread>\n+      void callback() { }]],\n+    [[std::thread t(callback);]])],\n+\t\t\t\t  gdb_cv_cxx_std_thread=yes,\n+\t\t\t\t  gdb_cv_cxx_std_thread=no)])\n+    LIBS=\"$save_LIBS\"\n+    CXXFLAGS=\"$save_CXXFLAGS\"\n+  fi\n+  if test $gdb_cv_cxx_std_thread = yes; then\n+    AC_DEFINE(CXX_STD_THREAD, 1,\n+\t      [Define to 1 if std::thread works.])\n+  fi\n+  AC_LANG_POP\n+\n   dnl Check if sigsetjmp is available.  Using AC_CHECK_FUNCS won't\n   dnl do since sigsetjmp might only be defined as a macro.\n AC_CACHE_CHECK([for sigsetjmp], gdb_cv_func_sigsetjmp,"
    }
  ]
}