{
  "sha": "2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmRhMmVhZjRjZTI5OWM4NGM1YTFmMWJjNmY3OTQ0MjY2Y2IzNmQ2ZQ==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2020-01-16T13:50:52Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2020-01-16T14:33:01Z"
    },
    "message": "[binutils][arm] PR25376 Change MVE into a CORE_HIGH feature\n\nThis patch moves MVE feature bits into the CORE_HIGH section.  This makes sure\n.fpu and -mfpu does not reset the bits set by MVE. This is important because\n.fpu has no option to \"set\" these same bits and thus, mimic'ing GCC, we choose\nto define MVE as an architecture extension rather than put it together with\nother the legacy fpu features.\n\nThis will enable the following behavior:\n.arch armv8.1-m.main\n.arch mve\n.fpu fpv5-sp-d16               #does not disable mve.\nvadd.i32 q0, q1, q2\n\nThis patch also makes sure MVE is not taken into account during auto-detect.\nThis was already the case, but because we moved the MVE bits to the\narchitecture feature space we must make sure ARM_ANY does not include MVE.\n\ngas/ChangeLog:\n2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\tPR 25376\n\t* config/tc-arm.c (mve_ext, mve_fp_ext): Use CORE_HIGH.\n\t(armv8_1m_main_ext_table): Use CORE_HIGH for mve.\n\t* testsuite/arm/armv8_1-m-fpu-mve-1.s: New.\n\t* testsuite/arm/armv8_1-m-fpu-mve-1.d: New.\n\t* testsuite/arm/armv8_1-m-fpu-mve-2.s: New.\n\t* testsuite/arm/armv8_1-m-fpu-mve-2.d: New.\n\ninclude/ChangeLog:\n2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\tPR 25376\n\t* opcodes/arm.h (FPU_MVE, FPU_MVE_FPU): Move these features to...\n\t(ARM_EXT2_MVE, ARM_EXT2_MVE_FP): ... the CORE_HIGH space.\n\t(ARM_ANY): Redefine to not include any MVE bits.\n\t(ARM_FEATURE_ALL): Removed.\n\nopcodes/ChangeLog:\n2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\tPR 25376\n\t* opcodes/arm-dis.c (coprocessor_opcodes): Use CORE_HIGH for MVE bits.\n\t(neon_opcodes): Likewise.\n\t(select_arm_features): Make sure we enable MVE bits when selecting\n\tarmv8.1-m.main.  Make sure we do not enable MVE bits when not selecting\n\tany architecture.",
    "tree": {
      "sha": "19d34c42caae23cf49721b5246304d9a7a34d5cd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/19d34c42caae23cf49721b5246304d9a7a34d5cd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6d0be74bfa2138a204a7954c7b6a6c8a1b63ba77",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d0be74bfa2138a204a7954c7b6a6c8a1b63ba77",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6d0be74bfa2138a204a7954c7b6a6c8a1b63ba77"
    }
  ],
  "stats": {
    "total": 518,
    "additions": 275,
    "deletions": 243
  },
  "files": [
    {
      "sha": "f2b49b7a89d1ba9b45d8192768aee5c265a2f88c",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e",
      "patch": "@@ -1,3 +1,13 @@\n+2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR 25376\n+\t* config/tc-arm.c (mve_ext, mve_fp_ext): Use CORE_HIGH.\n+\t(armv8_1m_main_ext_table): Use CORE_HIGH for mve.\n+\t* testsuite/arm/armv8_1-m-fpu-mve-1.s: New.\n+\t* testsuite/arm/armv8_1-m-fpu-mve-1.d: New.\n+\t* testsuite/arm/armv8_1-m-fpu-mve-2.s: New.\n+\t* testsuite/arm/armv8_1-m-fpu-mve-2.d: New.\n+\n 2020-01-16  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (match_template): Drop found_cpu_match local"
    },
    {
      "sha": "16cbac4279ef96d0edff57f83cb20935ae5196eb",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 6,
      "deletions": 7,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e",
      "patch": "@@ -318,9 +318,9 @@ static const arm_feature_set fpu_neon_ext_v1 =\n static const arm_feature_set fpu_vfp_v3_or_neon_ext =\n   ARM_FEATURE_COPROC (FPU_NEON_EXT_V1 | FPU_VFP_EXT_V3);\n static const arm_feature_set mve_ext =\n-  ARM_FEATURE_COPROC (FPU_MVE);\n+  ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE);\n static const arm_feature_set mve_fp_ext =\n-  ARM_FEATURE_COPROC (FPU_MVE_FP);\n+  ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP);\n #ifdef OBJ_ELF\n static const arm_feature_set fpu_vfp_fp16 =\n   ARM_FEATURE_COPROC (FPU_VFP_EXT_FP16);\n@@ -31298,12 +31298,11 @@ static const struct arm_ext_table armv8_1m_main_ext_table[] =\n   ARM_ADD (\"fp.dp\",\n \t   ARM_FEATURE (0, ARM_EXT2_FP16_INST,\n \t\t\tFPU_VFP_V5D16 | FPU_VFP_EXT_FP16 | FPU_VFP_EXT_FMA)),\n-  ARM_EXT (\"mve\", ARM_FEATURE_COPROC (FPU_MVE),\n-\t   ARM_FEATURE_COPROC (FPU_MVE | FPU_MVE_FP)),\n+  ARM_EXT (\"mve\", ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n+\t   ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE | ARM_EXT2_MVE_FP)),\n   ARM_ADD (\"mve.fp\",\n-\t   ARM_FEATURE (0, ARM_EXT2_FP16_INST,\n-\t\t\tFPU_MVE | FPU_MVE_FP | FPU_VFP_V5_SP_D16 |\n-\t\t\tFPU_VFP_EXT_FP16 | FPU_VFP_EXT_FMA)),\n+\t   ARM_FEATURE (0, ARM_EXT2_FP16_INST | ARM_EXT2_MVE | ARM_EXT2_MVE_FP,\n+\t\t\tFPU_VFP_V5_SP_D16 | FPU_VFP_EXT_FP16 | FPU_VFP_EXT_FMA)),\n   { NULL, 0, ARM_ARCH_NONE, ARM_ARCH_NONE }\n };\n "
    },
    {
      "sha": "9706da7c44dfc2d6fa224bff8d7110ef656af6ff",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e",
      "patch": "@@ -1,3 +1,11 @@\n+2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR 25376\n+\t* opcodes/arm.h (FPU_MVE, FPU_MVE_FPU): Move these features to...\n+\t(ARM_EXT2_MVE, ARM_EXT2_MVE_FP): ... the CORE_HIGH space.\n+\t(ARM_ANY): Redefine to not include any MVE bits.\n+\t(ARM_FEATURE_ALL): Removed.\n+\n 2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* opcode/msp430.h (enum msp430_expp_e): New."
    },
    {
      "sha": "6d8c3d00861f2430d2c8478c71f165dc4e625665",
      "filename": "include/opcode/arm.h",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/include/opcode/arm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/include/opcode/arm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/arm.h?ref=2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e",
      "patch": "@@ -77,6 +77,8 @@\n #define ARM_EXT2_BF16\t     0x00020000 /* ARMv8 bfloat16.\t\t     */\n #define ARM_EXT2_I8MM\t     0x00040000 /* ARMv8.6A i8mm.\t\t     */\n #define ARM_EXT2_CRC\t     0x00080000\t/* ARMv8 CRC32 */\n+#define ARM_EXT2_MVE\t     0x00100000\t/* MVE Integer extension.\t   */\n+#define ARM_EXT2_MVE_FP\t     0x00200000\t/* MVE Floating Point extension.   */\n \n /* Co-processor space extensions.  */\n #define ARM_CEXT_XSCALE\t     0x00000001\t/* Allow MIA etc.\t \t   */\n@@ -107,8 +109,6 @@\n #define FPU_VFP_EXT_ARMV8xD  0x00002000\t/* Single-precision FP for ARMv8.  */\n #define FPU_NEON_EXT_RDMA    0x00001000\t/* v8.1 Adv.SIMD extensions.\t   */\n #define FPU_NEON_EXT_DOTPROD 0x00000800\t/* Dot Product extension.\t   */\n-#define FPU_MVE\t\t     0x00000400 /* MVE Integer extension.\t   */\n-#define FPU_MVE_FP\t     0x00000200 /* MVE Floating Point extension.   */\n \n /* Architectures are the sum of the base and extensions.  The ARM ARM (rev E)\n    defines the following: ARMv3, ARMv3M, ARMv4xM, ARMv4, ARMv4TxM, ARMv4T,\n@@ -372,9 +372,8 @@\n /* Some useful combinations:  */\n #define ARM_ARCH_NONE\tARM_FEATURE_LOW (0, 0)\n #define FPU_NONE\tARM_FEATURE_LOW (0, 0)\n-#define ARM_ANY\t\tARM_FEATURE (-1, -1, 0)\t/* Any basic core.  */\n+#define ARM_ANY\t\tARM_FEATURE (-1, -1 & ~ (ARM_EXT2_MVE | ARM_EXT2_MVE_FP), 0)\t/* Any basic core.  */\n #define FPU_ANY\t\tARM_FEATURE_COPROC (-1) /* Any FPU.  */\n-#define ARM_FEATURE_ALL\tARM_FEATURE (-1, -1, -1)/* All CPU and FPU features.  */\n #define FPU_ANY_HARD\tARM_FEATURE_COPROC (FPU_FPA | FPU_VFP_HARD | FPU_MAVERICK)\n /* Extensions containing some Thumb-2 instructions.  If any is present, Thumb\n    ISA is Thumb-2.  */"
    },
    {
      "sha": "2d3b6d14401a8187f69b5815461a9639b644814b",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e",
      "patch": "@@ -1,3 +1,12 @@\n+2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR 25376\n+\t* opcodes/arm-dis.c (coprocessor_opcodes): Use CORE_HIGH for MVE bits.\n+\t(neon_opcodes): Likewise.\n+\t(select_arm_features): Make sure we enable MVE bits when selecting\n+\tarmv8.1-m.main.  Make sure we do not enable MVE bits when not selecting\n+\tany architecture.\n+\n 2020-01-16  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-opc.tbl: Drop stale comment from XOP section."
    },
    {
      "sha": "c986b5897edaaf4d35ad3f7004d18409ba4aee10",
      "filename": "opcodes/arm-dis.c",
      "status": "modified",
      "additions": 239,
      "deletions": 232,
      "changes": 471,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/opcodes/arm-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e/opcodes/arm-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arm-dis.c?ref=2da2eaf4ce299c84c5a1f1bc6f7944266cb36d6e",
      "patch": "@@ -810,7 +810,7 @@ static const struct sopcode32 coprocessor_opcodes[] =\n   /* Floating point coprocessor (VFP) instructions.  */\n   {ANY, ARM_FEATURE_COPROC (FPU_VFP_EXT_V1xD),\n     0x0ee00a10, 0x0fff0fff, \"vmsr%c\\tfpsid, %12-15r\"},\n-  {ANY, ARM_FEATURE_COPROC (FPU_VFP_EXT_V1xD | FPU_MVE),\n+  {ANY, ARM_FEATURE (0, ARM_EXT2_V8_1M_MAIN, FPU_VFP_EXT_V1xD),\n     0x0ee10a10, 0x0fff0fff, \"vmsr%c\\tfpscr, %12-15r\"},\n   {ANY, ARM_FEATURE_CORE_HIGH (ARM_EXT2_V8_1M_MAIN),\n     0x0ee20a10, 0x0fff0fff, \"vmsr%c\\tfpscr_nzcvqc, %12-15r\"},\n@@ -826,9 +826,9 @@ static const struct sopcode32 coprocessor_opcodes[] =\n     0x0ee90a10, 0x0fff0fff, \"vmsr%c\\tfpinst, %12-15r\\t@ Impl def\"},\n   {ANY, ARM_FEATURE_COPROC (FPU_VFP_EXT_V1xD),\n     0x0eea0a10, 0x0fff0fff, \"vmsr%c\\tfpinst2, %12-15r\\t@ Impl def\"},\n-  {ANY, ARM_FEATURE_COPROC (FPU_MVE),\n+  {ANY, ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n     0x0eec0a10, 0x0fff0fff, \"vmsr%c\\tvpr, %12-15r\"},\n-  {ANY, ARM_FEATURE_COPROC (FPU_MVE),\n+  {ANY, ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n     0x0eed0a10, 0x0fff0fff, \"vmsr%c\\tp0, %12-15r\"},\n   {ANY, ARM_FEATURE_CORE_HIGH (ARM_EXT2_V8_1M_MAIN),\n     0x0eee0a10, 0x0fff0fff, \"vmsr%c\\tfpcxt_ns, %12-15r\"},\n@@ -838,7 +838,7 @@ static const struct sopcode32 coprocessor_opcodes[] =\n     0x0ef00a10, 0x0fff0fff, \"vmrs%c\\t%12-15r, fpsid\"},\n   {ANY, ARM_FEATURE_COPROC (FPU_VFP_EXT_V1xD),\n     0x0ef1fa10, 0x0fffffff, \"vmrs%c\\tAPSR_nzcv, fpscr\"},\n-  {ANY, ARM_FEATURE_COPROC (FPU_VFP_EXT_V1xD | FPU_MVE),\n+  {ANY, ARM_FEATURE (0, ARM_EXT2_V8_1M_MAIN, FPU_VFP_EXT_V1xD),\n     0x0ef10a10, 0x0fff0fff, \"vmrs%c\\t%12-15r, fpscr\"},\n   {ANY, ARM_FEATURE_CORE_HIGH (ARM_EXT2_V8_1M_MAIN),\n     0x0ef20a10, 0x0fff0fff, \"vmrs%c\\t%12-15r, fpscr_nzcvqc\"},\n@@ -854,9 +854,9 @@ static const struct sopcode32 coprocessor_opcodes[] =\n     0x0ef90a10, 0x0fff0fff, \"vmrs%c\\t%12-15r, fpinst\\t@ Impl def\"},\n   {ANY, ARM_FEATURE_COPROC (FPU_VFP_EXT_V1xD),\n     0x0efa0a10, 0x0fff0fff, \"vmrs%c\\t%12-15r, fpinst2\\t@ Impl def\"},\n-  {ANY, ARM_FEATURE_COPROC (FPU_MVE),\n+  {ANY, ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n     0x0efc0a10, 0x0fff0fff, \"vmrs%c\\t%12-15r, vpr\"},\n-  {ANY, ARM_FEATURE_COPROC (FPU_MVE),\n+  {ANY, ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n     0x0efd0a10, 0x0fff0fff, \"vmrs%c\\t%12-15r, p0\"},\n   {ANY, ARM_FEATURE_CORE_HIGH (ARM_EXT2_V8_1M_MAIN),\n     0x0efe0a10, 0x0fff0fff, \"vmrs%c\\t%12-15r, fpcxt_ns\"},\n@@ -2154,640 +2154,640 @@ static const struct mopcode32 mve_opcodes[] =\n {\n   /* MVE.  */\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VPST,\n    0xfe310f4d, 0xffbf1fff,\n    \"vpst%i\"\n   },\n \n   /* Floating point VPT T1.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VPT_FP_T1,\n    0xee310f00, 0xefb10f50,\n    \"vpt%i.f%28s\\t%n, %17-19Q, %1-3,5Q\"},\n   /* Floating point VPT T2.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VPT_FP_T2,\n    0xee310f40, 0xefb10f50,\n    \"vpt%i.f%28s\\t%n, %17-19Q, %0-3Z\"},\n \n   /* Vector VPT T1.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VPT_VEC_T1,\n    0xfe010f00, 0xff811f51,\n    \"vpt%i.i%20-21s\\t%n, %17-19Q, %1-3,5Q\"},\n   /* Vector VPT T2.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VPT_VEC_T2,\n    0xfe010f01, 0xff811f51,\n    \"vpt%i.u%20-21s\\t%n, %17-19Q, %1-3,5Q\"},\n   /* Vector VPT T3.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VPT_VEC_T3,\n    0xfe011f00, 0xff811f50,\n    \"vpt%i.s%20-21s\\t%n, %17-19Q, %1-3,5Q\"},\n   /* Vector VPT T4.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VPT_VEC_T4,\n    0xfe010f40, 0xff811f70,\n    \"vpt%i.i%20-21s\\t%n, %17-19Q, %0-3Z\"},\n   /* Vector VPT T5.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VPT_VEC_T5,\n    0xfe010f60, 0xff811f70,\n    \"vpt%i.u%20-21s\\t%n, %17-19Q, %0-3Z\"},\n   /* Vector VPT T6.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VPT_VEC_T6,\n    0xfe011f40, 0xff811f50,\n    \"vpt%i.s%20-21s\\t%n, %17-19Q, %0-3Z\"},\n \n   /* Vector VBIC immediate.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VBIC_IMM,\n    0xef800070, 0xefb81070,\n    \"vbic%v.i%8-11s\\t%13-15,22Q, %E\"},\n \n   /* Vector VBIC register.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VBIC_REG,\n    0xef100150, 0xffb11f51,\n    \"vbic%v\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VABAV.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VABAV,\n    0xee800f01, 0xefc10f51,\n    \"vabav%v.%u%20-21s\\t%12-15r, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VABD floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VABD_FP,\n    0xff200d40, 0xffa11f51,\n    \"vabd%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VABD.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VABD_VEC,\n    0xef000740, 0xef811f51,\n    \"vabd%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VABS floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VABS_FP,\n    0xFFB10740, 0xFFB31FD1,\n    \"vabs%v.f%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n   /* Vector VABS.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VABS_VEC,\n    0xffb10340, 0xffb31fd1,\n    \"vabs%v.s%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VADD floating point T1.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VADD_FP_T1,\n    0xef000d40, 0xffa11f51,\n    \"vadd%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n   /* Vector VADD floating point T2.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VADD_FP_T2,\n    0xee300f40, 0xefb11f70,\n    \"vadd%v.f%28s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n   /* Vector VADD T1.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VADD_VEC_T1,\n    0xef000840, 0xff811f51,\n    \"vadd%v.i%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n   /* Vector VADD T2.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VADD_VEC_T2,\n    0xee010f40, 0xff811f70,\n    \"vadd%v.i%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VADDLV.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VADDLV,\n    0xee890f00, 0xef8f1fd1,\n    \"vaddlv%5A%v.%u32\\t%13-15l, %20-22h, %1-3Q\"},\n \n   /* Vector VADDV.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VADDV,\n    0xeef10f00, 0xeff31fd1,\n    \"vaddv%5A%v.%u%18-19s\\t%13-15l, %1-3Q\"},\n \n   /* Vector VADC.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VADC,\n    0xee300f00, 0xffb10f51,\n    \"vadc%12I%v.i32\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VAND.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VAND,\n    0xef000150, 0xffb11f51,\n    \"vand%v\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VBRSR register.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VBRSR,\n    0xfe011e60, 0xff811f70,\n    \"vbrsr%v.%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VCADD floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VCADD_FP,\n    0xfc800840, 0xfea11f51,\n    \"vcadd%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q, #%24o\"},\n \n   /* Vector VCADD.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VCADD_VEC,\n    0xfe000f00, 0xff810f51,\n    \"vcadd%v.i%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q, #%12o\"},\n \n   /* Vector VCLS.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VCLS,\n    0xffb00440, 0xffb31fd1,\n    \"vcls%v.s%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VCLZ.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VCLZ,\n    0xffb004c0, 0xffb31fd1,\n    \"vclz%v.i%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VCMLA.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VCMLA_FP,\n    0xfc200840, 0xfe211f51,\n    \"vcmla%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q, #%23-24o\"},\n \n   /* Vector VCMP floating point T1.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VCMP_FP_T1,\n    0xee310f00, 0xeff1ef50,\n    \"vcmp%v.f%28s\\t%n, %17-19Q, %1-3,5Q\"},\n \n   /* Vector VCMP floating point T2.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VCMP_FP_T2,\n    0xee310f40, 0xeff1ef50,\n    \"vcmp%v.f%28s\\t%n, %17-19Q, %0-3Z\"},\n \n   /* Vector VCMP T1.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VCMP_VEC_T1,\n    0xfe010f00, 0xffc1ff51,\n    \"vcmp%v.i%20-21s\\t%n, %17-19Q, %1-3,5Q\"},\n   /* Vector VCMP T2.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VCMP_VEC_T2,\n    0xfe010f01, 0xffc1ff51,\n    \"vcmp%v.u%20-21s\\t%n, %17-19Q, %1-3,5Q\"},\n   /* Vector VCMP T3.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VCMP_VEC_T3,\n    0xfe011f00, 0xffc1ff50,\n    \"vcmp%v.s%20-21s\\t%n, %17-19Q, %1-3,5Q\"},\n   /* Vector VCMP T4.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VCMP_VEC_T4,\n    0xfe010f40, 0xffc1ff70,\n    \"vcmp%v.i%20-21s\\t%n, %17-19Q, %0-3Z\"},\n   /* Vector VCMP T5.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VCMP_VEC_T5,\n    0xfe010f60, 0xffc1ff70,\n    \"vcmp%v.u%20-21s\\t%n, %17-19Q, %0-3Z\"},\n   /* Vector VCMP T6.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VCMP_VEC_T6,\n    0xfe011f40, 0xffc1ff50,\n    \"vcmp%v.s%20-21s\\t%n, %17-19Q, %0-3Z\"},\n \n   /* Vector VDUP.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VDUP,\n    0xeea00b10, 0xffb10f5f,\n    \"vdup%v.%5,22s\\t%17-19,7Q, %12-15r\"},\n \n   /* Vector VEOR.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VEOR,\n    0xff000150, 0xffd11f51,\n    \"veor%v\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VFMA, vector * scalar.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VFMA_FP_SCALAR,\n    0xee310e40, 0xefb11f70,\n    \"vfma%v.f%28s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VFMA floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VFMA_FP,\n    0xef000c50, 0xffa11f51,\n    \"vfma%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VFMS floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VFMS_FP,\n    0xef200c50, 0xffa11f51,\n    \"vfms%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VFMAS, vector * scalar.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VFMAS_FP_SCALAR,\n    0xee311e40, 0xefb11f70,\n    \"vfmas%v.f%28s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VHADD T1.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VHADD_T1,\n    0xef000040, 0xef811f51,\n    \"vhadd%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VHADD T2.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VHADD_T2,\n    0xee000f40, 0xef811f70,\n    \"vhadd%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VHSUB T1.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VHSUB_T1,\n    0xef000240, 0xef811f51,\n    \"vhsub%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VHSUB T2.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VHSUB_T2,\n    0xee001f40, 0xef811f70,\n    \"vhsub%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VCMUL.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VCMUL_FP,\n    0xee300e00, 0xefb10f50,\n    \"vcmul%v.f%28s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q, #%0,12o\"},\n \n    /* Vector VCTP.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VCTP,\n    0xf000e801, 0xffc0ffff,\n    \"vctp%v.%20-21s\\t%16-19r\"},\n \n   /* Vector VDUP.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VDUP,\n    0xeea00b10, 0xffb10f5f,\n    \"vdup%v.%5,22s\\t%17-19,7Q, %12-15r\"},\n \n   /* Vector VRHADD.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VRHADD,\n    0xef000140, 0xef811f51,\n    \"vrhadd%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VCVT.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VCVT_FP_FIX_VEC,\n    0xef800c50, 0xef801cd1,\n    \"vcvt%v.%s\\t%13-15,22Q, %1-3,5Q, #%16-21k\"},\n \n   /* Vector VCVT.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VCVT_BETWEEN_FP_INT,\n    0xffb30640, 0xffb31e51,\n    \"vcvt%v.%s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VCVT between single and half-precision float, bottom half.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VCVT_FP_HALF_FP,\n    0xee3f0e01, 0xefbf1fd1,\n    \"vcvtb%v.%s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VCVT between single and half-precision float, top half.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VCVT_FP_HALF_FP,\n    0xee3f1e01, 0xefbf1fd1,\n    \"vcvtt%v.%s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VCVT.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VCVT_FROM_FP_TO_INT,\n    0xffb30040, 0xffb31c51,\n    \"vcvt%m%v.%s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VDDUP.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VDDUP,\n    0xee011f6e, 0xff811f7e,\n    \"vddup%v.u%20-21s\\t%13-15,22Q, %17-19l, #%0,7u\"},\n \n   /* Vector VDWDUP.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VDWDUP,\n    0xee011f60, 0xff811f70,\n    \"vdwdup%v.u%20-21s\\t%13-15,22Q, %17-19l, %1-3h, #%0,7u\"},\n \n   /* Vector VHCADD.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VHCADD,\n    0xee000f00, 0xff810f51,\n    \"vhcadd%v.s%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q, #%12o\"},\n \n   /* Vector VIWDUP.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VIWDUP,\n    0xee010f60, 0xff811f70,\n    \"viwdup%v.u%20-21s\\t%13-15,22Q, %17-19l, %1-3h, #%0,7u\"},\n \n   /* Vector VIDUP.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VIDUP,\n    0xee010f6e, 0xff811f7e,\n    \"vidup%v.u%20-21s\\t%13-15,22Q, %17-19l, #%0,7u\"},\n \n   /* Vector VLD2.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLD2,\n    0xfc901e00, 0xff901e5f,\n    \"vld2%5d.%7-8s\\t%B, [%16-19r]%w\"},\n \n   /* Vector VLD4.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLD4,\n    0xfc901e01, 0xff901e1f,\n    \"vld4%5-6d.%7-8s\\t%B, [%16-19r]%w\"},\n \n   /* Vector VLDRB gather load.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLDRB_GATHER_T1,\n    0xec900e00, 0xefb01e50,\n    \"vldrb%v.%u%7-8s\\t%13-15,22Q, [%16-19r, %1-3,5Q]\"},\n \n   /* Vector VLDRH gather load.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLDRH_GATHER_T2,\n    0xec900e10, 0xefb01e50,\n    \"vldrh%v.%u%7-8s\\t%13-15,22Q, [%16-19r, %1-3,5Q%o]\"},\n \n   /* Vector VLDRW gather load.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLDRW_GATHER_T3,\n    0xfc900f40, 0xffb01fd0,\n    \"vldrw%v.u32\\t%13-15,22Q, [%16-19r, %1-3,5Q%o]\"},\n \n   /* Vector VLDRD gather load.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLDRD_GATHER_T4,\n    0xec900fd0, 0xefb01fd0,\n    \"vldrd%v.u64\\t%13-15,22Q, [%16-19r, %1-3,5Q%o]\"},\n \n   /* Vector VLDRW gather load.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLDRW_GATHER_T5,\n    0xfd101e00, 0xff111f00,\n    \"vldrw%v.u32\\t%13-15,22Q, [%17-19,7Q, #%a%0-6i]%w\"},\n \n   /* Vector VLDRD gather load, variant T6.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLDRD_GATHER_T6,\n    0xfd101f00, 0xff111f00,\n    \"vldrd%v.u64\\t%13-15,22Q, [%17-19,7Q, #%a%0-6i]%w\"},\n \n   /* Vector VLDRB.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLDRB_T1,\n    0xec100e00, 0xee581e00,\n    \"vldrb%v.%u%7-8s\\t%13-15Q, %d\"},\n \n   /* Vector VLDRH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLDRH_T2,\n    0xec180e00, 0xee581e00,\n    \"vldrh%v.%u%7-8s\\t%13-15Q, %d\"},\n \n   /* Vector VLDRB unsigned, variant T5.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLDRB_T5,\n    0xec101e00, 0xfe101f80,\n    \"vldrb%v.u8\\t%13-15,22Q, %d\"},\n \n   /* Vector VLDRH unsigned, variant T6.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLDRH_T6,\n    0xec101e80, 0xfe101f80,\n    \"vldrh%v.u16\\t%13-15,22Q, %d\"},\n \n   /* Vector VLDRW unsigned, variant T7.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VLDRW_T7,\n    0xec101f00, 0xfe101f80,\n    \"vldrw%v.u32\\t%13-15,22Q, %d\"},\n \n   /* Vector VMAX.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMAX,\n    0xef000640, 0xef811f51,\n    \"vmax%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VMAXA.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMAXA,\n    0xee330e81, 0xffb31fd1,\n    \"vmaxa%v.s%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VMAXNM floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMAXNM_FP,\n    0xff000f50, 0xffa11f51,\n    \"vmaxnm%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VMAXNMA floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMAXNMA_FP,\n    0xee3f0e81, 0xefbf1fd1,\n    \"vmaxnma%v.f%28s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VMAXNMV floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMAXNMV_FP,\n    0xeeee0f00, 0xefff0fd1,\n    \"vmaxnmv%v.f%28s\\t%12-15r, %1-3,5Q\"},\n \n   /* Vector VMAXNMAV floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMAXNMAV_FP,\n    0xeeec0f00, 0xefff0fd1,\n    \"vmaxnmav%v.f%28s\\t%12-15r, %1-3,5Q\"},\n \n   /* Vector VMAXV.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMAXV,\n    0xeee20f00, 0xeff30fd1,\n    \"vmaxv%v.%u%18-19s\\t%12-15r, %1-3,5Q\"},\n \n   /* Vector VMAXAV.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMAXAV,\n    0xeee00f00, 0xfff30fd1,\n    \"vmaxav%v.s%18-19s\\t%12-15r, %1-3,5Q\"},\n \n   /* Vector VMIN.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMIN,\n    0xef000650, 0xef811f51,\n    \"vmin%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VMINA.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMINA,\n    0xee331e81, 0xffb31fd1,\n    \"vmina%v.s%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VMINNM floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMINNM_FP,\n    0xff200f50, 0xffa11f51,\n    \"vminnm%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VMINNMA floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMINNMA_FP,\n    0xee3f1e81, 0xefbf1fd1,\n    \"vminnma%v.f%28s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VMINNMV floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMINNMV_FP,\n    0xeeee0f80, 0xefff0fd1,\n    \"vminnmv%v.f%28s\\t%12-15r, %1-3,5Q\"},\n \n   /* Vector VMINNMAV floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMINNMAV_FP,\n    0xeeec0f80, 0xefff0fd1,\n    \"vminnmav%v.f%28s\\t%12-15r, %1-3,5Q\"},\n \n   /* Vector VMINV.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMINV,\n    0xeee20f80, 0xeff30fd1,\n    \"vminv%v.%u%18-19s\\t%12-15r, %1-3,5Q\"},\n \n   /* Vector VMINAV.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMINAV,\n    0xeee00f80, 0xfff30fd1,\n    \"vminav%v.s%18-19s\\t%12-15r, %1-3,5Q\"},\n \n   /* Vector VMLA.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMLA,\n    0xee010e40, 0xef811f70,\n    \"vmla%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VMLALDAV.  Note must appear before VMLADAV due to instruction\n      opcode aliasing.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMLALDAV,\n    0xee801e00, 0xef801f51,\n    \"vmlaldav%5Ax%v.%u%16s\\t%13-15l, %20-22h, %17-19,7Q, %1-3Q\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMLALDAV,\n    0xee800e00, 0xef801f51,\n    \"vmlalv%5A%v.%u%16s\\t%13-15l, %20-22h, %17-19,7Q, %1-3Q\"},\n \n   /* Vector VMLAV T1 variant, same as VMLADAV but with X == 0.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMLADAV_T1,\n    0xeef00e00, 0xeff01f51,\n    \"vmlav%5A%v.%u%16s\\t%13-15l, %17-19,7Q, %1-3Q\"},\n \n   /* Vector VMLAV T2 variant, same as VMLADAV but with X == 0.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMLADAV_T2,\n    0xeef00f00, 0xeff11f51,\n    \"vmlav%5A%v.%u8\\t%13-15l, %17-19,7Q, %1-3Q\"},\n \n   /* Vector VMLADAV T1 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMLADAV_T1,\n    0xeef01e00, 0xeff01f51,\n    \"vmladav%5Ax%v.%u%16s\\t%13-15l, %17-19,7Q, %1-3Q\"},\n \n   /* Vector VMLADAV T2 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMLADAV_T2,\n    0xeef01f00, 0xeff11f51,\n    \"vmladav%5Ax%v.%u8\\t%13-15l, %17-19,7Q, %1-3Q\"},\n \n   /* Vector VMLAS.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMLAS,\n    0xee011e40, 0xef811f70,\n    \"vmlas%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VRMLSLDAVH.  Note must appear before VMLSDAV due to instruction\n      opcode aliasing.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VRMLSLDAVH,\n    0xfe800e01, 0xff810f51,\n    \"vrmlsldavh%5A%X%v.s32\\t%13-15l, %20-22h, %17-19,7Q, %1-3Q\"},\n \n   /* Vector VMLSLDAV.  Note must appear before VMLSDAV due to instruction\n      opcdoe aliasing.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMLSLDAV,\n    0xee800e01, 0xff800f51,\n    \"vmlsldav%5A%X%v.%u%16s\\t%13-15l, %20-22h, %17-19,7Q, %1-3Q\"},\n \n   /* Vector VMLSDAV T1 Variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMLSDAV_T1,\n    0xeef00e01, 0xfff00f51,\n    \"vmlsdav%5A%X%v.s%16s\\t%13-15l, %17-19,7Q, %1-3Q\"},\n \n   /* Vector VMLSDAV T2 Variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMLSDAV_T2,\n    0xfef00e01, 0xfff10f51,\n    \"vmlsdav%5A%X%v.s8\\t%13-15l, %17-19,7Q, %1-3Q\"},\n \n   /* Vector VMOV between gpr and half precision register, op == 0.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMOV_HFP_TO_GP,\n    0xee000910, 0xfff00f7f,\n    \"vmov.f16\\t%7,16-19F, %12-15r\"},\n \n   /* Vector VMOV between gpr and half precision register, op == 1.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMOV_HFP_TO_GP,\n    0xee100910, 0xfff00f7f,\n    \"vmov.f16\\t%12-15r, %7,16-19F\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMOV_GP_TO_VEC_LANE,\n    0xee000b10, 0xff900f1f,\n    \"vmov%c.%5-6,21-22s\\t%17-19,7Q[%N], %12-15r\"},\n \n   /* Vector VORR immediate to vector.\n      NOTE: MVE_VORR_IMM must appear in the table\n      before MVE_VMOV_IMM_TO_VEC due to opcode aliasing.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VORR_IMM,\n    0xef800050, 0xefb810f0,\n    \"vorr%v.i%8-11s\\t%13-15,22Q, %E\"},\n \n   /* Vector VQSHL T2 Variant.\n      NOTE: MVE_VQSHL_T2 must appear in the table before\n      before MVE_VMOV_IMM_TO_VEC due to opcode aliasing.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQSHL_T2,\n    0xef800750, 0xef801fd1,\n    \"vqshl%v.%u%19-21s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n@@ -2796,203 +2796,203 @@ static const struct mopcode32 mve_opcodes[] =\n      NOTE: MVE_VQSHL_T2 must appear in the table before\n      before MVE_VMOV_IMM_TO_VEC due to opcode aliasing.  */\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQSHLU_T3,\n    0xff800650, 0xff801fd1,\n    \"vqshlu%v.s%19-21s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VRSHR\n      NOTE: MVE_VRSHR must appear in the table before\n      before MVE_VMOV_IMM_TO_VEC due to opcode aliasing.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VRSHR,\n    0xef800250, 0xef801fd1,\n    \"vrshr%v.%u%19-21s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VSHL.\n      NOTE: MVE_VSHL must appear in the table before\n      before MVE_VMOV_IMM_TO_VEC due to opcode aliasing.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSHL_T1,\n    0xef800550, 0xff801fd1,\n    \"vshl%v.i%19-21s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VSHR\n      NOTE: MVE_VSHR must appear in the table before\n      before MVE_VMOV_IMM_TO_VEC due to opcode aliasing.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSHR,\n    0xef800050, 0xef801fd1,\n    \"vshr%v.%u%19-21s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VSLI\n      NOTE: MVE_VSLI must appear in the table before\n      before MVE_VMOV_IMM_TO_VEC due to opcode aliasing.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSLI,\n    0xff800550, 0xff801fd1,\n    \"vsli%v.%19-21s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VSRI\n      NOTE: MVE_VSRI must appear in the table before\n      before MVE_VMOV_IMM_TO_VEC due to opcode aliasing.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSRI,\n    0xff800450, 0xff801fd1,\n    \"vsri%v.%19-21s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VMOV immediate to vector,\n      undefinded for cmode == 1111 */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMVN_IMM, 0xef800f70, 0xefb81ff0, UNDEFINED_INSTRUCTION},\n \n   /* Vector VMOV immediate to vector,\n      cmode == 1101 */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMOV_IMM_TO_VEC, 0xef800d50, 0xefb81fd0,\n    \"vmov%v.%5,8-11s\\t%13-15,22Q, %E\"},\n \n   /* Vector VMOV immediate to vector.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMOV_IMM_TO_VEC,\n    0xef800050, 0xefb810d0,\n    \"vmov%v.%5,8-11s\\t%13-15,22Q, %E\"},\n \n   /* Vector VMOV two 32-bit lanes to two gprs, idx = 0.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMOV2_VEC_LANE_TO_GP,\n    0xec000f00, 0xffb01ff0,\n    \"vmov%c\\t%0-3r, %16-19r, %13-15,22Q[2], %13-15,22Q[0]\"},\n \n   /* Vector VMOV two 32-bit lanes to two gprs, idx = 1.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMOV2_VEC_LANE_TO_GP,\n    0xec000f10, 0xffb01ff0,\n    \"vmov%c\\t%0-3r, %16-19r, %13-15,22Q[3], %13-15,22Q[1]\"},\n \n   /* Vector VMOV Two gprs to two 32-bit lanes, idx = 0.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMOV2_GP_TO_VEC_LANE,\n    0xec100f00, 0xffb01ff0,\n    \"vmov%c\\t%13-15,22Q[2], %13-15,22Q[0], %0-3r, %16-19r\"},\n \n   /* Vector VMOV Two gprs to two 32-bit lanes, idx = 1.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMOV2_GP_TO_VEC_LANE,\n    0xec100f10, 0xffb01ff0,\n    \"vmov%c\\t%13-15,22Q[2], %13-15,22Q[0], %0-3r, %16-19r\"},\n \n   /* Vector VMOV Vector lane to gpr.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMOV_VEC_LANE_TO_GP,\n    0xee100b10, 0xff100f1f,\n    \"vmov%c.%u%5-6,21-22s\\t%12-15r, %17-19,7Q[%N]\"},\n \n   /* Vector VSHLL T1 Variant.  Note: VSHLL T1 must appear before MVE_VMOVL due\n      to instruction opcode aliasing.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSHLL_T1,\n    0xeea00f40, 0xefa00fd1,\n    \"vshll%T%v.%u%19-20s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VMOVL long.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMOVL,\n    0xeea00f40, 0xefa70fd1,\n    \"vmovl%T%v.%u%19-20s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VMOV and narrow.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMOVN,\n    0xfe310e81, 0xffb30fd1,\n    \"vmovn%T%v.i%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Floating point move extract.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMOVX,\n    0xfeb00a40, 0xffbf0fd0,\n    \"vmovx.f16\\t%22,12-15F, %5,0-3F\"},\n \n   /* Vector VMUL floating-point T1 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMUL_FP_T1,\n    0xff000d50, 0xffa11f51,\n    \"vmul%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VMUL floating-point T2 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VMUL_FP_T2,\n    0xee310e60, 0xefb11f70,\n    \"vmul%v.f%28s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VMUL T1 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMUL_VEC_T1,\n    0xef000950, 0xff811f51,\n    \"vmul%v.i%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VMUL T2 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMUL_VEC_T2,\n    0xee011e60, 0xff811f70,\n    \"vmul%v.i%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VMULH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMULH,\n    0xee010e01, 0xef811f51,\n    \"vmulh%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VRMULH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VRMULH,\n    0xee011e01, 0xef811f51,\n    \"vrmulh%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VMULL integer.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMULL_INT,\n    0xee010e00, 0xef810f51,\n    \"vmull%T%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VMULL polynomial.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMULL_POLY,\n    0xee310e00, 0xefb10f51,\n    \"vmull%T%v.%28s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VMVN immediate to vector.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMVN_IMM,\n    0xef800070, 0xefb810f0,\n    \"vmvn%v.i%8-11s\\t%13-15,22Q, %E\"},\n \n   /* Vector VMVN register.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMVN_REG,\n    0xffb005c0, 0xffbf1fd1,\n    \"vmvn%v\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VNEG floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VNEG_FP,\n    0xffb107c0, 0xffb31fd1,\n    \"vneg%v.f%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VNEG.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VNEG_VEC,\n    0xffb103c0, 0xffb31fd1,\n    \"vneg%v.s%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VORN, vector bitwise or not.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VORN,\n    0xef300150, 0xffb11f51,\n    \"vorn%v\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VORR register.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VORR_REG,\n    0xef200150, 0xffb11f51,\n    \"vorr%v\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n@@ -3002,488 +3002,488 @@ static const struct mopcode32 mve_opcodes[] =\n      MVE_VMOV_VEC_TO_VEC need to placed after MVE_VORR_REG in this mve_opcodes\n      array.  */\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VMOV_VEC_TO_VEC,\n    0xef200150, 0xffb11f51,\n    \"vmov%v\\t%13-15,22Q, %17-19,7Q\"},\n \n   /* Vector VQDMULL T1 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQDMULL_T1,\n    0xee300f01, 0xefb10f51,\n    \"vqdmull%T%v.s%28s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VPNOT.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VPNOT,\n    0xfe310f4d, 0xffffffff,\n    \"vpnot%v\"},\n \n   /* Vector VPSEL.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VPSEL,\n    0xfe310f01, 0xffb11f51,\n    \"vpsel%v\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VQABS.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQABS,\n    0xffb00740, 0xffb31fd1,\n    \"vqabs%v.s%18-19s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VQADD T1 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQADD_T1,\n    0xef000050, 0xef811f51,\n    \"vqadd%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VQADD T2 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQADD_T2,\n    0xee000f60, 0xef811f70,\n    \"vqadd%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VQDMULL T2 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQDMULL_T2,\n    0xee300f60, 0xefb10f70,\n    \"vqdmull%T%v.s%28s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VQMOVN.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQMOVN,\n    0xee330e01, 0xefb30fd1,\n    \"vqmovn%T%v.%u%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VQMOVUN.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQMOVUN,\n    0xee310e81, 0xffb30fd1,\n    \"vqmovun%T%v.s%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VQDMLADH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQDMLADH,\n    0xee000e00, 0xff810f51,\n    \"vqdmladh%X%v.s%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VQRDMLADH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQRDMLADH,\n    0xee000e01, 0xff810f51,\n    \"vqrdmladh%X%v.s%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VQDMLAH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQDMLAH,\n    0xee000e60, 0xff811f70,\n    \"vqdmlah%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VQRDMLAH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQRDMLAH,\n    0xee000e40, 0xff811f70,\n    \"vqrdmlah%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VQDMLASH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQDMLASH,\n    0xee001e60, 0xff811f70,\n    \"vqdmlash%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VQRDMLASH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQRDMLASH,\n    0xee001e40, 0xff811f70,\n    \"vqrdmlash%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VQDMLSDH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQDMLSDH,\n    0xfe000e00, 0xff810f51,\n    \"vqdmlsdh%X%v.s%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VQRDMLSDH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQRDMLSDH,\n    0xfe000e01, 0xff810f51,\n    \"vqrdmlsdh%X%v.s%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VQDMULH T1 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQDMULH_T1,\n    0xef000b40, 0xff811f51,\n    \"vqdmulh%v.s%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VQRDMULH T2 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQRDMULH_T2,\n    0xff000b40, 0xff811f51,\n    \"vqrdmulh%v.s%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VQDMULH T3 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQDMULH_T3,\n    0xee010e60, 0xff811f70,\n    \"vqdmulh%v.s%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VQRDMULH T4 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQRDMULH_T4,\n    0xfe010e60, 0xff811f70,\n    \"vqrdmulh%v.s%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VQNEG.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQNEG,\n    0xffb007c0, 0xffb31fd1,\n    \"vqneg%v.s%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VQRSHL T1 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQRSHL_T1,\n    0xef000550, 0xef811f51,\n    \"vqrshl%v.%u%20-21s\\t%13-15,22Q, %1-3,5Q, %17-19,7Q\"},\n \n   /* Vector VQRSHL T2 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQRSHL_T2,\n    0xee331ee0, 0xefb31ff0,\n    \"vqrshl%v.%u%18-19s\\t%13-15,22Q, %0-3r\"},\n \n   /* Vector VQRSHRN.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQRSHRN,\n    0xee800f41, 0xefa00fd1,\n    \"vqrshrn%T%v.%u%19-20s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VQRSHRUN.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQRSHRUN,\n    0xfe800fc0, 0xffa00fd1,\n    \"vqrshrun%T%v.s%19-20s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VQSHL T1 Variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQSHL_T1,\n    0xee311ee0, 0xefb31ff0,\n    \"vqshl%v.%u%18-19s\\t%13-15,22Q, %0-3r\"},\n \n   /* Vector VQSHL T4 Variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQSHL_T4,\n    0xef000450, 0xef811f51,\n    \"vqshl%v.%u%20-21s\\t%13-15,22Q, %1-3,5Q, %17-19,7Q\"},\n \n   /* Vector VQSHRN.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQSHRN,\n    0xee800f40, 0xefa00fd1,\n    \"vqshrn%T%v.%u%19-20s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VQSHRUN.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQSHRUN,\n    0xee800fc0, 0xffa00fd1,\n    \"vqshrun%T%v.s%19-20s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VQSUB T1 Variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQSUB_T1,\n    0xef000250, 0xef811f51,\n    \"vqsub%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VQSUB T2 Variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VQSUB_T2,\n    0xee001f60, 0xef811f70,\n    \"vqsub%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VREV16.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VREV16,\n    0xffb00140, 0xffb31fd1,\n    \"vrev16%v.8\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VREV32.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VREV32,\n    0xffb000c0, 0xffb31fd1,\n    \"vrev32%v.%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VREV64.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VREV64,\n    0xffb00040, 0xffb31fd1,\n    \"vrev64%v.%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VRINT floating point.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VRINT_FP,\n    0xffb20440, 0xffb31c51,\n    \"vrint%m%v.f%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n \n   /* Vector VRMLALDAVH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VRMLALDAVH,\n    0xee800f00, 0xef811f51,\n    \"vrmlalvh%5A%v.%u32\\t%13-15l, %20-22h, %17-19,7Q, %1-3Q\"},\n \n   /* Vector VRMLALDAVH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VRMLALDAVH,\n    0xee801f00, 0xef811f51,\n    \"vrmlaldavh%5Ax%v.%u32\\t%13-15l, %20-22h, %17-19,7Q, %1-3Q\"},\n \n   /* Vector VRSHL T1 Variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VRSHL_T1,\n    0xef000540, 0xef811f51,\n    \"vrshl%v.%u%20-21s\\t%13-15,22Q, %1-3,5Q, %17-19,7Q\"},\n \n   /* Vector VRSHL T2 Variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VRSHL_T2,\n    0xee331e60, 0xefb31ff0,\n    \"vrshl%v.%u%18-19s\\t%13-15,22Q, %0-3r\"},\n \n   /* Vector VRSHRN.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VRSHRN,\n    0xfe800fc1, 0xffa00fd1,\n    \"vrshrn%T%v.i%19-20s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VSBC.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSBC,\n    0xfe300f00, 0xffb10f51,\n    \"vsbc%12I%v.i32\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VSHL T2 Variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSHL_T2,\n    0xee311e60, 0xefb31ff0,\n    \"vshl%v.%u%18-19s\\t%13-15,22Q, %0-3r\"},\n \n   /* Vector VSHL T3 Variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSHL_T3,\n    0xef000440, 0xef811f51,\n    \"vshl%v.%u%20-21s\\t%13-15,22Q, %1-3,5Q, %17-19,7Q\"},\n \n   /* Vector VSHLC.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSHLC,\n    0xeea00fc0, 0xffa01ff0,\n    \"vshlc%v\\t%13-15,22Q, %0-3r, #%16-20d\"},\n \n   /* Vector VSHLL T2 Variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSHLL_T2,\n    0xee310e01, 0xefb30fd1,\n    \"vshll%T%v.%u%18-19s\\t%13-15,22Q, %1-3,5Q, #%18-19d\"},\n \n   /* Vector VSHRN.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSHRN,\n    0xee800fc1, 0xffa00fd1,\n    \"vshrn%T%v.i%19-20s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VST2 no writeback.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VST2,\n    0xfc801e00, 0xffb01e5f,\n    \"vst2%5d.%7-8s\\t%B, [%16-19r]\"},\n \n   /* Vector VST2 writeback.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VST2,\n    0xfca01e00, 0xffb01e5f,\n    \"vst2%5d.%7-8s\\t%B, [%16-19r]!\"},\n \n   /* Vector VST4 no writeback.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VST4,\n    0xfc801e01, 0xffb01e1f,\n    \"vst4%5-6d.%7-8s\\t%B, [%16-19r]\"},\n \n   /* Vector VST4 writeback.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VST4,\n    0xfca01e01, 0xffb01e1f,\n    \"vst4%5-6d.%7-8s\\t%B, [%16-19r]!\"},\n \n   /* Vector VSTRB scatter store, T1 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSTRB_SCATTER_T1,\n    0xec800e00, 0xffb01e50,\n    \"vstrb%v.%7-8s\\t%13-15,22Q, [%16-19r, %1-3,5Q]\"},\n \n   /* Vector VSTRH scatter store, T2 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSTRH_SCATTER_T2,\n    0xec800e10, 0xffb01e50,\n    \"vstrh%v.%7-8s\\t%13-15,22Q, [%16-19r, %1-3,5Q%o]\"},\n \n   /* Vector VSTRW scatter store, T3 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSTRW_SCATTER_T3,\n    0xec800e40, 0xffb01e50,\n    \"vstrw%v.%7-8s\\t%13-15,22Q, [%16-19r, %1-3,5Q%o]\"},\n \n   /* Vector VSTRD scatter store, T4 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSTRD_SCATTER_T4,\n    0xec800fd0, 0xffb01fd0,\n    \"vstrd%v.64\\t%13-15,22Q, [%16-19r, %1-3,5Q%o]\"},\n \n   /* Vector VSTRW scatter store, T5 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSTRW_SCATTER_T5,\n    0xfd001e00, 0xff111f00,\n    \"vstrw%v.32\\t%13-15,22Q, [%17-19,7Q, #%a%0-6i]%w\"},\n \n   /* Vector VSTRD scatter store, T6 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSTRD_SCATTER_T6,\n    0xfd001f00, 0xff111f00,\n    \"vstrd%v.64\\t%13-15,22Q, [%17-19,7Q, #%a%0-6i]%w\"},\n \n   /* Vector VSTRB.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSTRB_T1,\n    0xec000e00, 0xfe581e00,\n    \"vstrb%v.%7-8s\\t%13-15Q, %d\"},\n \n   /* Vector VSTRH.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSTRH_T2,\n    0xec080e00, 0xfe581e00,\n    \"vstrh%v.%7-8s\\t%13-15Q, %d\"},\n \n   /* Vector VSTRB variant T5.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSTRB_T5,\n    0xec001e00, 0xfe101f80,\n    \"vstrb%v.8\\t%13-15,22Q, %d\"},\n \n   /* Vector VSTRH variant T6.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSTRH_T6,\n    0xec001e80, 0xfe101f80,\n    \"vstrh%v.16\\t%13-15,22Q, %d\"},\n \n   /* Vector VSTRW variant T7.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSTRW_T7,\n    0xec001f00, 0xfe101f80,\n    \"vstrw%v.32\\t%13-15,22Q, %d\"},\n \n   /* Vector VSUB floating point T1 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VSUB_FP_T1,\n    0xef200d40, 0xffa11f51,\n    \"vsub%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VSUB floating point T2 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP),\n    MVE_VSUB_FP_T2,\n    0xee301f40, 0xefb11f70,\n    \"vsub%v.f%28s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n   /* Vector VSUB T1 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSUB_VEC_T1,\n    0xff000840, 0xff811f51,\n    \"vsub%v.i%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n \n   /* Vector VSUB T2 variant.  */\n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_VSUB_VEC_T2,\n    0xee011f40, 0xff811f70,\n    \"vsub%v.i%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_ASRLI,\n    0xea50012f, 0xfff1813f,\n    \"asrl%c\\t%17-19l, %9-11h, %j\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_ASRL,\n    0xea50012d, 0xfff101ff,\n    \"asrl%c\\t%17-19l, %9-11h, %12-15S\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_LSLLI,\n    0xea50010f, 0xfff1813f,\n    \"lsll%c\\t%17-19l, %9-11h, %j\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_LSLL,\n    0xea50010d, 0xfff101ff,\n    \"lsll%c\\t%17-19l, %9-11h, %12-15S\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_LSRL,\n    0xea50011f, 0xfff1813f,\n    \"lsrl%c\\t%17-19l, %9-11h, %j\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_SQRSHRL,\n    0xea51012d, 0xfff1017f,\n    \"sqrshrl%c\\t%17-19l, %9-11h, %k, %12-15S\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_SQRSHR,\n    0xea500f2d, 0xfff00fff,\n    \"sqrshr%c\\t%16-19S, %12-15S\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_SQSHLL,\n    0xea51013f, 0xfff1813f,\n    \"sqshll%c\\t%17-19l, %9-11h, %j\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_SQSHL,\n    0xea500f3f, 0xfff08f3f,\n    \"sqshl%c\\t%16-19S, %j\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_SRSHRL,\n    0xea51012f, 0xfff1813f,\n    \"srshrl%c\\t%17-19l, %9-11h, %j\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_SRSHR,\n    0xea500f2f, 0xfff08f3f,\n    \"srshr%c\\t%16-19S, %j\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_UQRSHLL,\n    0xea51010d, 0xfff1017f,\n    \"uqrshll%c\\t%17-19l, %9-11h, %k, %12-15S\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_UQRSHL,\n    0xea500f0d, 0xfff00fff,\n    \"uqrshl%c\\t%16-19S, %12-15S\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_UQSHLL,\n     0xea51010f, 0xfff1813f,\n    \"uqshll%c\\t%17-19l, %9-11h, %j\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_UQSHL,\n    0xea500f0f, 0xfff08f3f,\n    \"uqshl%c\\t%16-19S, %j\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_URSHRL,\n     0xea51011f, 0xfff1813f,\n    \"urshrl%c\\t%17-19l, %9-11h, %j\"},\n \n-  {ARM_FEATURE_COPROC (FPU_MVE),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE),\n    MVE_URSHR,\n    0xea500f1f, 0xfff08f3f,\n    \"urshr%c\\t%16-19S, %j\"},\n@@ -11714,11 +11714,18 @@ select_arm_features (unsigned long mach,\n     case bfd_mach_arm_8M_MAIN:\t ARM_SET_FEATURES (ARM_ARCH_V8M_MAIN); break;\n     case bfd_mach_arm_8_1M_MAIN:\n       ARM_SET_FEATURES (ARM_ARCH_V8_1M_MAIN);\n+      arm_feature_set mve_all\n+\t= ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE | ARM_EXT2_MVE_FP);\n+      ARM_MERGE_FEATURE_SETS (arch_fset, arch_fset, mve_all);\n       force_thumb = 1;\n       break;\n       /* If the machine type is unknown allow all architecture types and all\n-\t extensions.  */\n-    case bfd_mach_arm_unknown:\t ARM_SET_FEATURES (ARM_FEATURE_ALL); break;\n+\t extensions, with the exception of MVE as that clashes with NEON.  */\n+    case bfd_mach_arm_unknown:\n+      ARM_SET_FEATURES (ARM_FEATURE (-1,\n+\t\t\t\t     -1 & ~(ARM_EXT2_MVE | ARM_EXT2_MVE_FP),\n+\t\t\t\t     -1));\n+      break;\n     default:\n       abort ();\n     }"
    }
  ]
}