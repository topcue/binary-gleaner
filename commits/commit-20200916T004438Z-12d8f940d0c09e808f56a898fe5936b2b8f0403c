{
  "sha": "12d8f940d0c09e808f56a898fe5936b2b8f0403c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTJkOGY5NDBkMGMwOWU4MDhmNTZhODk4ZmU1OTM2YjJiOGYwNDAzYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-16T00:44:37Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-16T00:44:38Z"
    },
    "message": "Remove TYPE_CODE_INT case from f_value_print_inner\n\nI looked through the various language value-print functions, to see if\nany code could be consolidated.  Pretty much all I found was that\nf_value_print_inner does not need to handle TYPE_CODE_INT itself, but\ncan simply dispatch to the generic printer.\n\ngdb/ChangeLog\n2020-09-15  Tom Tromey  <tom@tromey.com>\n\n\t* f-valprint.c (f_value_print_inner) <case TYPE_CODE_INT>:\n\tRemove.",
    "tree": {
      "sha": "ff8e232641aefa800617e59e7bc70e1c84543192",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ff8e232641aefa800617e59e7bc70e1c84543192"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/12d8f940d0c09e808f56a898fe5936b2b8f0403c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/12d8f940d0c09e808f56a898fe5936b2b8f0403c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/12d8f940d0c09e808f56a898fe5936b2b8f0403c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/12d8f940d0c09e808f56a898fe5936b2b8f0403c/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6b5a7bc768570edc15532759969cd9bff3f02c28",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b5a7bc768570edc15532759969cd9bff3f02c28",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6b5a7bc768570edc15532759969cd9bff3f02c28"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 6,
    "deletions": 13
  },
  "files": [
    {
      "sha": "40c0c29ad1d48fb42457563252effd695d9b8e4d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/12d8f940d0c09e808f56a898fe5936b2b8f0403c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/12d8f940d0c09e808f56a898fe5936b2b8f0403c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=12d8f940d0c09e808f56a898fe5936b2b8f0403c",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-15  Tom Tromey  <tom@tromey.com>\n+\n+\t* f-valprint.c (f_value_print_inner) <case TYPE_CODE_INT>:\n+\tRemove.\n+\n 2020-09-15  Tom Tromey  <tom@tromey.com>\n \n \t* rust-lang.c (rust_value_print_inner): Remove TYPE_CODE_MEMBERPTR"
    },
    {
      "sha": "b58e10b13360fba298949c579e9c09b978a9b66a",
      "filename": "gdb/f-valprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 13,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/12d8f940d0c09e808f56a898fe5936b2b8f0403c/gdb/f-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/12d8f940d0c09e808f56a898fe5936b2b8f0403c/gdb/f-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-valprint.c?ref=12d8f940d0c09e808f56a898fe5936b2b8f0403c",
      "patch": "@@ -295,19 +295,6 @@ f_value_print_inner (struct value *val, struct ui_file *stream, int recurse,\n \t}\n       break;\n \n-    case TYPE_CODE_INT:\n-      if (options->format || options->output_format)\n-\t{\n-\t  struct value_print_options opts = *options;\n-\n-\t  opts.format = (options->format ? options->format\n-\t\t\t : options->output_format);\n-\t  value_print_scalar_formatted (val, &opts, 0, stream);\n-\t}\n-      else\n-\tvalue_print_scalar_formatted (val, options, 0, stream);\n-      break;\n-\n     case TYPE_CODE_STRUCT:\n     case TYPE_CODE_UNION:\n       /* Starting from the Fortran 90 standard, Fortran supports derived\n@@ -365,6 +352,7 @@ f_value_print_inner (struct value *val, struct ui_file *stream, int recurse,\n \t}\n       break;\n \n+    case TYPE_CODE_INT:\n     case TYPE_CODE_REF:\n     case TYPE_CODE_FUNC:\n     case TYPE_CODE_FLAGS:"
    }
  ]
}