{
  "sha": "251dae91074170036c1a76c5e5df1f45197d7feb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjUxZGFlOTEwNzQxNzAwMzZjMWE3NmM1ZTVkZjFmNDUxOTdkN2ZlYg==",
  "commit": {
    "author": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2020-04-27T16:39:31Z"
    },
    "committer": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2020-04-27T16:41:39Z"
    },
    "message": "x86: Add i386 PE big-object support\n\nThe 64-bit version of binutils got support for the PE COFF BIG OBJ format a\ncouple of years ago.   The BIG OBJ format is a slightly different COFF format\nwhich extends the size of the number of section field in the header from a\nuint16_t to a uint32_t and so greatly increases the number of sections allowed.\n\nHowever the 32-bit version of bfd never got support for this.  The GHC Haskell\ncompiler generates a great deal of symbols due to it's use of\n-ffunction-sections and -fdata-sections.\n\nThis meant that we could not build the 32-bit version of the GHC Compiler for\nmany releases now as binutils didn't have this support.\n\nThis patch adds the support to the 32-bit port of binutils as well and also does\ncome cleanup in the code.\n\nbfd/ChangeLog:\n\n\t* coff-i386.c (COFF_WITH_PE_BIGOBJ): New.\n\t* coff-x86_64.c (COFF_WITH_PE_BIGOBJ): New.\n\t* config.bfd (targ_selvecs): Rename x86_64_pe_be_vec\n\tto x86_64_pe_big_vec as it not a big-endian format.\n\t(vec i386_pe_big_vec): New.\n\t* configure.ac: Likewise.\n\t* targets.c: Likewise.\n\t* configure: Regenerate.\n\t* pe-i386.c (TARGET_SYM_BIG, TARGET_NAME_BIG,\n\tCOFF_WITH_PE_BIGOBJ): New.\n\t* pe-x86_64.c (TARGET_SYM_BIG, TARGET_NAME_BIG):\n\tNew.\n\t(x86_64_pe_be_vec): Moved.\n\ngas/ChangeLog:\n\n\t* NEWS: Add news entry for big-obj.\n\t* config/tc-i386.c (i386_target_format): Support new format.\n\t* doc/c-i386.texi: Add i386 support.\n\t* testsuite/gas/pe/big-obj.d: Rename test to not be x64 specific.\n\t* testsuite/gas/pe/pe.exp (big-obj): Make test run on i386 as well.\n\nld/ChangeLog:\n\n\t* pe-dll.c (pe_detail_list):  Add pe-bigobj-i386.",
    "tree": {
      "sha": "4abe10293202aa8c6cb536b82fa91034e8ef8f9d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4abe10293202aa8c6cb536b82fa91034e8ef8f9d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/251dae91074170036c1a76c5e5df1f45197d7feb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/251dae91074170036c1a76c5e5df1f45197d7feb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/251dae91074170036c1a76c5e5df1f45197d7feb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/251dae91074170036c1a76c5e5df1f45197d7feb/comments",
  "author": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1eb399142793d31d1b7a358baad5fded996e02eb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1eb399142793d31d1b7a358baad5fded996e02eb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1eb399142793d31d1b7a358baad5fded996e02eb"
    }
  ],
  "stats": {
    "total": 280,
    "additions": 205,
    "deletions": 75
  },
  "files": [
    {
      "sha": "0a0995ec09d6c690a29532a0f4989b6ee039f449",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -1,3 +1,19 @@\n+2020-04-27  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* coff-i386.c (COFF_WITH_PE_BIGOBJ): New.\n+\t* coff-x86_64.c (COFF_WITH_PE_BIGOBJ): New.\n+\t* config.bfd (targ_selvecs): Rename x86_64_pe_be_vec\n+\tto x86_64_pe_big_vec as it not a big-endian format.\n+\t(vec i386_pe_big_vec): New.\n+\t* configure.ac: Likewise.\n+\t* targets.c: Likewise.\n+\t* configure: Regenerate.\n+\t* pe-i386.c (TARGET_SYM_BIG, TARGET_NAME_BIG,\n+\tCOFF_WITH_PE_BIGOBJ): New.\n+\t* pe-x86_64.c (TARGET_SYM_BIG, TARGET_NAME_BIG):\n+\tNew.\n+\t(x86_64_pe_be_vec): Moved.\n+\n 2020-04-23  Anton Kolesov  <anton.kolesov@synopsys.com>\n \n \t* elf-bfd.h (elfcore_write_arc_v2): Add prototype."
    },
    {
      "sha": "c89b1fc13be634e369b0dd001e35866d8d362be2",
      "filename": "bfd/coff-i386.c",
      "status": "modified",
      "additions": 72,
      "deletions": 0,
      "changes": 72,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/coff-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/coff-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-i386.c?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -701,3 +701,75 @@ const bfd_target\n \n   COFF_SWAP_TABLE\n };\n+\n+#ifdef COFF_WITH_PE_BIGOBJ\n+const bfd_target\n+  TARGET_SYM_BIG =\n+{\n+  TARGET_NAME_BIG,\n+  bfd_target_coff_flavour,\n+  BFD_ENDIAN_LITTLE,\t\t/* data byte order is little */\n+  BFD_ENDIAN_LITTLE,\t\t/* header byte order is little */\n+\n+  (HAS_RELOC | EXEC_P |\t\t/* object flags */\n+   HAS_LINENO | HAS_DEBUG |\n+   HAS_SYMS | HAS_LOCALS | WP_TEXT | D_PAGED | BFD_COMPRESS | BFD_DECOMPRESS ),\n+\n+  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC /* section flags */\n+#ifdef COFF_WITH_PE\n+   | SEC_LINK_ONCE | SEC_LINK_DUPLICATES | SEC_READONLY | SEC_DEBUGGING\n+#endif\n+   | SEC_CODE | SEC_DATA | SEC_EXCLUDE ),\n+\n+#ifdef TARGET_UNDERSCORE\n+  TARGET_UNDERSCORE,\t\t/* leading underscore */\n+#else\n+  0,\t\t\t\t/* leading underscore */\n+#endif\n+  '/',\t\t\t\t/* ar_pad_char */\n+  15,\t\t\t\t/* ar_max_namelen */\n+  0,\t\t\t\t/* match priority.  */\n+\n+  bfd_getl64, bfd_getl_signed_64, bfd_putl64,\n+     bfd_getl32, bfd_getl_signed_32, bfd_putl32,\n+     bfd_getl16, bfd_getl_signed_16, bfd_putl16, /* data */\n+  bfd_getl64, bfd_getl_signed_64, bfd_putl64,\n+     bfd_getl32, bfd_getl_signed_32, bfd_putl32,\n+     bfd_getl16, bfd_getl_signed_16, bfd_putl16, /* hdrs */\n+\n+/* Note that we allow an object file to be treated as a core file as well.  */\n+\n+  {\t\t\t\t/* bfd_check_format */\n+    _bfd_dummy_target,\n+    COFF_CHECK_FORMAT,\n+    bfd_generic_archive_p,\n+    COFF_CHECK_FORMAT\n+  },\n+  {\t\t\t\t/* bfd_set_format */\n+    _bfd_bool_bfd_false_error,\n+    coff_mkobject,\n+    _bfd_generic_mkarchive,\n+    _bfd_bool_bfd_false_error\n+  },\n+  {\t\t\t\t/* bfd_write_contents */\n+    _bfd_bool_bfd_false_error,\n+    COFF_WRITE_CONTENTS,\n+    _bfd_write_archive_contents,\n+    _bfd_bool_bfd_false_error\n+  },\n+\n+  BFD_JUMP_TABLE_GENERIC (coff),\n+  BFD_JUMP_TABLE_COPY (coff),\n+  BFD_JUMP_TABLE_CORE (_bfd_nocore),\n+  BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_coff),\n+  BFD_JUMP_TABLE_SYMBOLS (coff),\n+  BFD_JUMP_TABLE_RELOCS (coff),\n+  BFD_JUMP_TABLE_WRITE (coff),\n+  BFD_JUMP_TABLE_LINK (coff),\n+  BFD_JUMP_TABLE_DYNAMIC (_bfd_nodynamic),\n+\n+  NULL,\n+\n+  &bigobj_swap_table\n+};\n+#endif\n\\ No newline at end of file"
    },
    {
      "sha": "a6632910da450106048d1b651b6f1c8f096b7475",
      "filename": "bfd/coff-x86_64.c",
      "status": "modified",
      "additions": 73,
      "deletions": 0,
      "changes": 73,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/coff-x86_64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/coff-x86_64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-x86_64.c?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -824,3 +824,76 @@ const bfd_target\n \n   COFF_SWAP_TABLE\n };\n+\n+/* Entry for big object files.  */\n+\n+#ifdef COFF_WITH_PE_BIGOBJ\n+const bfd_target\n+  TARGET_SYM_BIG =\n+{\n+  TARGET_NAME_BIG,\n+  bfd_target_coff_flavour,\n+  BFD_ENDIAN_LITTLE,\t\t/* Data byte order is little.  */\n+  BFD_ENDIAN_LITTLE,\t\t/* Header byte order is little.  */\n+\n+  (HAS_RELOC | EXEC_P\t\t/* Object flags.  */\n+   | HAS_LINENO | HAS_DEBUG\n+   | HAS_SYMS | HAS_LOCALS | WP_TEXT | D_PAGED | BFD_COMPRESS | BFD_DECOMPRESS),\n+\n+  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC /* Section flags.  */\n+#if defined(COFF_WITH_PE)\n+   | SEC_LINK_ONCE | SEC_LINK_DUPLICATES | SEC_READONLY | SEC_DEBUGGING\n+#endif\n+   | SEC_CODE | SEC_DATA | SEC_EXCLUDE ),\n+\n+#ifdef TARGET_UNDERSCORE\n+  TARGET_UNDERSCORE,\t\t/* Leading underscore.  */\n+#else\n+  0,\t\t\t\t/* Leading underscore.  */\n+#endif\n+  '/',\t\t\t\t/* Ar_pad_char.  */\n+  15,\t\t\t\t/* Ar_max_namelen.  */\n+  0,\t\t\t\t/* match priority.  */\n+\n+  bfd_getl64, bfd_getl_signed_64, bfd_putl64,\n+     bfd_getl32, bfd_getl_signed_32, bfd_putl32,\n+     bfd_getl16, bfd_getl_signed_16, bfd_putl16, /* Data.  */\n+  bfd_getl64, bfd_getl_signed_64, bfd_putl64,\n+     bfd_getl32, bfd_getl_signed_32, bfd_putl32,\n+     bfd_getl16, bfd_getl_signed_16, bfd_putl16, /* Hdrs.  */\n+\n+  /* Note that we allow an object file to be treated as a core file as well.  */\n+  {\t\t\t\t/* bfd_check_format.  */\n+    _bfd_dummy_target,\n+    amd64coff_object_p,\n+    bfd_generic_archive_p,\n+    amd64coff_object_p\n+  },\n+  {\t\t\t\t/* bfd_set_format.  */\n+    _bfd_bool_bfd_false_error,\n+    coff_mkobject,\n+    _bfd_generic_mkarchive,\n+    _bfd_bool_bfd_false_error\n+  },\n+  {\t\t\t\t/* bfd_write_contents.  */\n+    _bfd_bool_bfd_false_error,\n+    coff_write_object_contents,\n+    _bfd_write_archive_contents,\n+    _bfd_bool_bfd_false_error\n+  },\n+\n+  BFD_JUMP_TABLE_GENERIC (coff),\n+  BFD_JUMP_TABLE_COPY (coff),\n+  BFD_JUMP_TABLE_CORE (_bfd_nocore),\n+  BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_coff),\n+  BFD_JUMP_TABLE_SYMBOLS (coff),\n+  BFD_JUMP_TABLE_RELOCS (coff),\n+  BFD_JUMP_TABLE_WRITE (coff),\n+  BFD_JUMP_TABLE_LINK (coff),\n+  BFD_JUMP_TABLE_DYNAMIC (_bfd_nodynamic),\n+\n+  NULL,\n+\n+  &bigobj_swap_table\n+};\n+#endif\n\\ No newline at end of file"
    },
    {
      "sha": "40f259c92aa60c89d0b21d0c6c86f4ad8a53200b",
      "filename": "bfd/config.bfd",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/config.bfd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/config.bfd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/config.bfd?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -701,7 +701,7 @@ case \"${targ}\" in\n     ;;\n   x86_64-*-mingw* | x86_64-*-pe | x86_64-*-pep | x86_64-*-cygwin)\n     targ_defvec=x86_64_pe_vec\n-    targ_selvecs=\"x86_64_pe_vec x86_64_pei_vec x86_64_pe_be_vec x86_64_elf64_vec l1om_elf64_vec k1om_elf64_vec i386_pe_vec i386_pei_vec i386_elf32_vec iamcu_elf32_vec\"\n+    targ_selvecs=\"x86_64_pe_vec x86_64_pei_vec x86_64_pe_big_vec x86_64_elf64_vec l1om_elf64_vec k1om_elf64_vec i386_pe_vec i386_pei_vec i386_elf32_vec iamcu_elf32_vec\"\n     want64=true\n     targ_underscore=no\n     ;;\n@@ -751,7 +751,7 @@ case \"${targ}\" in\n     ;;\n   i[3-7]86-*-mingw32* | i[3-7]86-*-cygwin* | i[3-7]86-*-winnt | i[3-7]86-*-pe)\n     targ_defvec=i386_pe_vec\n-    targ_selvecs=\"i386_pe_vec i386_pei_vec i386_elf32_vec iamcu_elf32_vec\"\n+    targ_selvecs=\"i386_pe_vec i386_pe_big_vec i386_pei_vec i386_elf32_vec iamcu_elf32_vec\"\n     targ_underscore=yes\n     ;;\n   i[3-7]86-*-vxworks*)"
    },
    {
      "sha": "59b867bbbf5dea71737a2ab3ebb0d59a31b9e471",
      "filename": "bfd/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -14764,6 +14764,7 @@ do\n     i386_mach_o_vec)\t\t tb=\"$tb mach-o-i386.lo\" ;;\n     i386_msdos_vec)\t\t tb=\"$tb i386msdos.lo\" ;;\n     i386_pe_vec)\t\t tb=\"$tb pe-i386.lo peigen.lo $coff\" ;;\n+    i386_pe_big_vec)\t\t tb=\"$tb pe-i386.lo peigen.lo $coff\" ;;\n     i386_pei_vec)\t\t tb=\"$tb pei-i386.lo peigen.lo $coff\" ;;\n     iamcu_elf32_vec)\t\t tb=\"$tb elf32-i386.lo $elfxx_x86 elf32.lo $elf\" ;;\n     ia64_elf32_be_vec)\t\t tb=\"$tb elf32-ia64.lo elfxx-ia64.lo elf32.lo $elf\" ;;\n@@ -14947,7 +14948,7 @@ do\n     x86_64_elf64_sol2_vec)\t tb=\"$tb elf64-x86-64.lo $elfxx_x86 elf64.lo $elf\"; target_size=64 ;;\n     x86_64_mach_o_vec)\t\t tb=\"$tb mach-o-x86-64.lo\" ;;\n     x86_64_pe_vec)\t\t tb=\"$tb pe-x86_64.lo pex64igen.lo $coff\"; target_size=64 ;;\n-    x86_64_pe_be_vec)\t\t tb=\"$tb pe-x86_64.lo pex64igen.lo $coff\"; target_size=64 ;;\n+    x86_64_pe_big_vec)\t\t tb=\"$tb pe-x86_64.lo pex64igen.lo $coff\"; target_size=64 ;;\n     x86_64_pei_vec)\t\t tb=\"$tb pei-x86_64.lo pex64igen.lo $coff\"; target_size=64 ;;\n     xc16x_elf32_vec)\t\t tb=\"$tb elf32-xc16x.lo elf32.lo $elf\" ;;\n     xgate_elf32_vec)\t\t tb=\"$tb elf32-xgate.lo elf32.lo $elf\" ;;"
    },
    {
      "sha": "0528e54c3b08fd0570af9efc6a27848cfaeee3f8",
      "filename": "bfd/configure.ac",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure.ac?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -500,6 +500,7 @@ do\n     i386_mach_o_vec)\t\t tb=\"$tb mach-o-i386.lo\" ;;\n     i386_msdos_vec)\t\t tb=\"$tb i386msdos.lo\" ;;\n     i386_pe_vec)\t\t tb=\"$tb pe-i386.lo peigen.lo $coff\" ;;\n+    i386_pe_big_vec)\t\t tb=\"$tb pe-i386.lo peigen.lo $coff\" ;;\n     i386_pei_vec)\t\t tb=\"$tb pei-i386.lo peigen.lo $coff\" ;;\n     iamcu_elf32_vec)\t\t tb=\"$tb elf32-i386.lo $elfxx_x86 elf32.lo $elf\" ;;\n     ia64_elf32_be_vec)\t\t tb=\"$tb elf32-ia64.lo elfxx-ia64.lo elf32.lo $elf\" ;;\n@@ -683,7 +684,7 @@ do\n     x86_64_elf64_sol2_vec)\t tb=\"$tb elf64-x86-64.lo $elfxx_x86 elf64.lo $elf\"; target_size=64 ;;\n     x86_64_mach_o_vec)\t\t tb=\"$tb mach-o-x86-64.lo\" ;;\n     x86_64_pe_vec)\t\t tb=\"$tb pe-x86_64.lo pex64igen.lo $coff\"; target_size=64 ;;\n-    x86_64_pe_be_vec)\t\t tb=\"$tb pe-x86_64.lo pex64igen.lo $coff\"; target_size=64 ;;\n+    x86_64_pe_big_vec)\t\t tb=\"$tb pe-x86_64.lo pex64igen.lo $coff\"; target_size=64 ;;\n     x86_64_pei_vec)\t\t tb=\"$tb pei-x86_64.lo pex64igen.lo $coff\"; target_size=64 ;;\n     xc16x_elf32_vec)\t\t tb=\"$tb elf32-xc16x.lo elf32.lo $elf\" ;;\n     xgate_elf32_vec)\t\t tb=\"$tb elf32-xgate.lo elf32.lo $elf\" ;;"
    },
    {
      "sha": "c7e107e0836ccf874cb6900068de32428d0c8e2c",
      "filename": "bfd/pe-i386.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/pe-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/pe-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/pe-i386.c?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -23,7 +23,10 @@\n \n #define TARGET_SYM\t\ti386_pe_vec\n #define TARGET_NAME\t\t\"pe-i386\"\n+#define TARGET_SYM_BIG\t\ti386_pe_big_vec\n+#define TARGET_NAME_BIG\t\t\"pe-bigobj-i386\"\n #define COFF_WITH_PE\n+#define COFF_WITH_PE_BIGOBJ\n #define PCRELOFFSET\t\tTRUE\n #define TARGET_UNDERSCORE\t'_'\n #define COFF_LONG_SECTION_NAMES"
    },
    {
      "sha": "1c383293e115492c3fe159c680109d2d6426e664",
      "filename": "bfd/pe-x86_64.c",
      "status": "modified",
      "additions": 2,
      "deletions": 64,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/pe-x86_64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/pe-x86_64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/pe-x86_64.c?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -25,6 +25,8 @@\n \n #define TARGET_SYM\t\tx86_64_pe_vec\n #define TARGET_NAME\t\t\"pe-x86-64\"\n+#define TARGET_SYM_BIG\t\tx86_64_pe_big_vec\n+#define TARGET_NAME_BIG\t\t\"pe-bigobj-x86-64\"\n #define COFF_WITH_PE\n #define COFF_WITH_pex64\n #define COFF_WITH_PE_BIGOBJ\n@@ -66,67 +68,3 @@ extern bfd_boolean pex64_bfd_print_pdata (bfd *, void *);\n \n #include \"coff-x86_64.c\"\n \n-/* Entry for big object files.  */\n-\n-const bfd_target\n-x86_64_pe_be_vec =\n-{\n-  \"pe-bigobj-x86-64\",\t\t\t/* Name.  */\n-  bfd_target_coff_flavour,\n-  BFD_ENDIAN_LITTLE,\t\t/* Data byte order is little.  */\n-  BFD_ENDIAN_LITTLE,\t\t/* Header byte order is little.  */\n-\n-  (HAS_RELOC | EXEC_P\t\t/* Object flags.  */\n-   | HAS_LINENO | HAS_DEBUG\n-   | HAS_SYMS | HAS_LOCALS | WP_TEXT | D_PAGED | BFD_COMPRESS | BFD_DECOMPRESS),\n-\n-  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC /* Section flags.  */\n-   | SEC_LINK_ONCE | SEC_LINK_DUPLICATES | SEC_READONLY | SEC_DEBUGGING\n-   | SEC_CODE | SEC_DATA | SEC_EXCLUDE ),\n-\n-  TARGET_UNDERSCORE,\t\t/* Leading underscore.  */\n-  '/',\t\t\t\t/* Ar_pad_char.  */\n-  15,\t\t\t\t/* Ar_max_namelen.  */\n-  0,\t\t\t\t/* match priority.  */\n-\n-  bfd_getl64, bfd_getl_signed_64, bfd_putl64,\n-     bfd_getl32, bfd_getl_signed_32, bfd_putl32,\n-     bfd_getl16, bfd_getl_signed_16, bfd_putl16, /* Data.  */\n-  bfd_getl64, bfd_getl_signed_64, bfd_putl64,\n-     bfd_getl32, bfd_getl_signed_32, bfd_putl32,\n-     bfd_getl16, bfd_getl_signed_16, bfd_putl16, /* Hdrs.  */\n-\n-  /* Note that we allow an object file to be treated as a core file as well.  */\n-  {\t\t\t\t/* bfd_check_format.  */\n-    _bfd_dummy_target,\n-    amd64coff_object_p,\n-    bfd_generic_archive_p,\n-    amd64coff_object_p\n-  },\n-  {\t\t\t\t/* bfd_set_format.  */\n-    _bfd_bool_bfd_false_error,\n-    coff_mkobject,\n-    _bfd_generic_mkarchive,\n-    _bfd_bool_bfd_false_error\n-  },\n-  {\t\t\t\t/* bfd_write_contents.  */\n-    _bfd_bool_bfd_false_error,\n-    coff_write_object_contents,\n-    _bfd_write_archive_contents,\n-    _bfd_bool_bfd_false_error\n-  },\n-\n-  BFD_JUMP_TABLE_GENERIC (coff),\n-  BFD_JUMP_TABLE_COPY (coff),\n-  BFD_JUMP_TABLE_CORE (_bfd_nocore),\n-  BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_coff),\n-  BFD_JUMP_TABLE_SYMBOLS (coff),\n-  BFD_JUMP_TABLE_RELOCS (coff),\n-  BFD_JUMP_TABLE_WRITE (coff),\n-  BFD_JUMP_TABLE_LINK (coff),\n-  BFD_JUMP_TABLE_DYNAMIC (_bfd_nodynamic),\n-\n-  NULL,\n-\n-  &bigobj_swap_table\n-};"
    },
    {
      "sha": "9c2db0aeb65293fe6dd259d8c216760830dc710a",
      "filename": "bfd/targets.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/targets.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/bfd/targets.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/targets.c?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -742,6 +742,7 @@ extern const bfd_target i386_elf32_vxworks_vec;\n extern const bfd_target i386_mach_o_vec;\n extern const bfd_target i386_msdos_vec;\n extern const bfd_target i386_pe_vec;\n+extern const bfd_target i386_pe_big_vec;\n extern const bfd_target i386_pei_vec;\n extern const bfd_target iamcu_elf32_vec;\n extern const bfd_target ia64_elf32_be_vec;\n@@ -926,7 +927,7 @@ extern const bfd_target x86_64_elf64_nacl_vec;\n extern const bfd_target x86_64_elf64_sol2_vec;\n extern const bfd_target x86_64_mach_o_vec;\n extern const bfd_target x86_64_pe_vec;\n-extern const bfd_target x86_64_pe_be_vec;\n+extern const bfd_target x86_64_pe_big_vec;\n extern const bfd_target x86_64_pei_vec;\n extern const bfd_target xc16x_elf32_vec;\n extern const bfd_target xgate_elf32_vec;\n@@ -1091,6 +1092,7 @@ static const bfd_target * const _bfd_target_vector[] =\n \t&i386_mach_o_vec,\n \t&i386_msdos_vec,\n \t&i386_pe_vec,\n+\t&i386_pe_big_vec,\n \t&i386_pei_vec,\n \n \t&iamcu_elf32_vec,\n@@ -1343,7 +1345,7 @@ static const bfd_target * const _bfd_target_vector[] =\n \t&x86_64_elf64_sol2_vec,\n \t&x86_64_mach_o_vec,\n \t&x86_64_pe_vec,\n-\t&x86_64_pe_be_vec,\n+\t&x86_64_pe_big_vec,\n \t&x86_64_pei_vec,\n #endif\n "
    },
    {
      "sha": "8cbe5ecf2b957458107cc64ae5794494d15ca6a6",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -1,3 +1,11 @@\n+2020-04-27  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* NEWS: Add news entry for big-obj.\n+\t* config/tc-i386.c (i386_target_format): Support new format.\n+\t* doc/c-i386.texi: Add i386 support.\n+\t* testsuite/gas/pe/big-obj.d: Rename test to not be x64 specific.\n+\t* testsuite/gas/pe/pe.exp (big-obj): Make test run on i386 as well.\n+\n 2020-04-27  Nick Clifton  <nickc@redhat.com>\n \n \tPR 25878"
    },
    {
      "sha": "815359b08fb029bd3503749c9daa10078db97ccd",
      "filename": "gas/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/gas/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/gas/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/NEWS?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -13,6 +13,8 @@\n   (if such output is being generated).  Added the ability to generate\n   version 5 .debug_line sections.\n \n+* Add -mbig-obj support to i386 MingW targets.\n+\n Changes in 2.34:\n \n * Add -malign-branch-boundary=NUM, -malign-branch=TYPE[+TYPE...],"
    },
    {
      "sha": "32fd6c15e1b6e815a1bb9df3837bf27492d876dd",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -13506,7 +13506,7 @@ i386_target_format (void)\n       if (flag_code == CODE_64BIT)\n \treturn use_big_obj ? \"pe-bigobj-x86-64\" : \"pe-x86-64\";\n       else\n-\treturn \"pe-i386\";\n+\treturn use_big_obj ? \"pe-bigobj-i386\" : \"pe-i386\";\n # elif defined (TE_GO32)\n     case bfd_target_coff_flavour:\n       return \"coff-go32\";"
    },
    {
      "sha": "551512f2a99885757ece662e12294f79a02e2021",
      "filename": "gas/doc/c-i386.texi",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/gas/doc/c-i386.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/gas/doc/c-i386.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-i386.texi?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -390,9 +390,10 @@ with default visibility can be preempted.  The resulting code is\n slightly bigger.  This option only affects the handling of branch\n instructions.\n \n+@cindex @samp{-mbig-obj} option, i386\n @cindex @samp{-mbig-obj} option, x86-64\n @item -mbig-obj\n-On x86-64 PE/COFF target this option forces the use of big object file\n+On PE/COFF target this option forces the use of big object file\n format, which allows more than 32768 sections.\n \n @cindex @samp{-momit-lock-prefix=} option, i386"
    },
    {
      "sha": "27b351a7d60e3ed4bef721e61488669f44410e7f",
      "filename": "gas/testsuite/gas/pe/big-obj.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/gas/testsuite/gas/pe/big-obj.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/gas/testsuite/gas/pe/big-obj.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/pe/big-obj.d?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -1,6 +1,6 @@\n #as: -mbig-obj\n #objdump: -h\n-#name: PE x64 big obj\n+#name: PE big obj\n \n .*: *file format pe-bigobj-.*\n "
    },
    {
      "sha": "76345ba50023fec9a94c7990eac142d127aa826a",
      "filename": "gas/testsuite/gas/pe/pe.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/gas/testsuite/gas/pe/pe.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/gas/testsuite/gas/pe/pe.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/pe/pe.exp?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -55,7 +55,6 @@ if ([istarget \"x86_64-*-mingw*\"]) then {\n # Big obj\n \n \n-if ([istarget \"x86_64-*-mingw*\"]) then {\n-        # Currently only supported on x86_64\n+if ([istarget \"*-*-mingw*\"]) then {\n \trun_dump_test \"big-obj\"\n }"
    },
    {
      "sha": "dd5628283b89df142d03c68b4f414f2ccbc7c629",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -1,3 +1,7 @@\n+2020-04-27  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* pe-dll.c (pe_detail_list):  Add pe-bigobj-i386.\n+\n 2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>\n \n \tPR ld/25861"
    },
    {
      "sha": "0ed21facd07dd5a12f29817b32ad2c47fd1a4e92",
      "filename": "ld/pe-dll.c",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/251dae91074170036c1a76c5e5df1f45197d7feb/ld/pe-dll.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/251dae91074170036c1a76c5e5df1f45197d7feb/ld/pe-dll.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/pe-dll.c?ref=251dae91074170036c1a76c5e5df1f45197d7feb",
      "patch": "@@ -280,6 +280,16 @@ static pe_details_type pe_detail_list[] =\n     FALSE,\n     autofilter_symbollist_i386\n   },\n+#else\n+  {\n+    \"pei-i386\",\n+    \"pe-bigobj-i386\",\n+    7 /* R_IMAGEBASE */,\n+    PE_ARCH_i386,\n+    bfd_arch_i386,\n+    TRUE,\n+    autofilter_symbollist_i386\n+  },\n #endif\n   {\n     \"pei-shl\","
    }
  ]
}