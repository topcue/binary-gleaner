{
  "sha": "c6778d00df0fbc7fe53801717eb934a5d7b9674a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzY3NzhkMDBkZjBmYmM3ZmU1MzgwMTcxN2ViOTM0YTVkN2I5Njc0YQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-08-14T15:11:28Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-08-15T13:42:21Z"
    },
    "message": "Simplify write_inferior_memory\n\ngdbserver's write_inferior_memory uses a static variable to avoid\nmemory leaks, and has a comment referring to the lack of cleanups.\nThis patch removes this comment and the code in favor of a\nstraightforward use of std::vector.\n\ngdb/gdbserver/ChangeLog\n2019-08-15  Tom Tromey  <tromey@adacore.com>\n\n\t* target.c (write_inferior_memory): Use std::vector.",
    "tree": {
      "sha": "97a12845481ffc66f619df16df190856b2e2a988",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/97a12845481ffc66f619df16df190856b2e2a988"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c6778d00df0fbc7fe53801717eb934a5d7b9674a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c6778d00df0fbc7fe53801717eb934a5d7b9674a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c6778d00df0fbc7fe53801717eb934a5d7b9674a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c6778d00df0fbc7fe53801717eb934a5d7b9674a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9177214a228f7d0eb8543725287a6163993fbebf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9177214a228f7d0eb8543725287a6163993fbebf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9177214a228f7d0eb8543725287a6163993fbebf"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 9,
    "deletions": 17
  },
  "files": [
    {
      "sha": "e4ad220a6aa4f7ee621984397124eb46877ee676",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c6778d00df0fbc7fe53801717eb934a5d7b9674a/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c6778d00df0fbc7fe53801717eb934a5d7b9674a/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=c6778d00df0fbc7fe53801717eb934a5d7b9674a",
      "patch": "@@ -1,3 +1,7 @@\n+2019-08-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* target.c (write_inferior_memory): Use std::vector.\n+\n 2019-08-06  Frank Ch. Eigler  <fche@redhat.com>\n \n \tPR build/24886"
    },
    {
      "sha": "2587d8aa55040e66546ded8f053e9ade89ad22bb",
      "filename": "gdb/gdbserver/target.c",
      "status": "modified",
      "additions": 5,
      "deletions": 17,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c6778d00df0fbc7fe53801717eb934a5d7b9674a/gdb/gdbserver/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c6778d00df0fbc7fe53801717eb934a5d7b9674a/gdb/gdbserver/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/target.c?ref=c6778d00df0fbc7fe53801717eb934a5d7b9674a",
      "patch": "@@ -150,23 +150,11 @@ int\n write_inferior_memory (CORE_ADDR memaddr, const unsigned char *myaddr,\n \t\t       int len)\n {\n-  /* Lacking cleanups, there is some potential for a memory leak if the\n-     write fails and we go through error().  Make sure that no more than\n-     one buffer is ever pending by making BUFFER static.  */\n-  static unsigned char *buffer = 0;\n-  int res;\n-\n-  if (buffer != NULL)\n-    free (buffer);\n-\n-  buffer = (unsigned char *) xmalloc (len);\n-  memcpy (buffer, myaddr, len);\n-  check_mem_write (memaddr, buffer, myaddr, len);\n-  res = (*the_target->write_memory) (memaddr, buffer, len);\n-  free (buffer);\n-  buffer = NULL;\n-\n-  return res;\n+  /* Make a copy of the data because check_mem_write may need to\n+     update it.  */\n+  std::vector<unsigned char> buffer (myaddr, myaddr + len);\n+  check_mem_write (memaddr, buffer.data (), myaddr, len);\n+  return (*the_target->write_memory) (memaddr, buffer.data (), len);\n }\n \n /* See target/target.h.  */"
    }
  ]
}