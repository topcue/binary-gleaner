{
  "sha": "93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTNkZjRhMWQwNzliYTgwNGZhNjZiNjdkMmIyYWNmMWZkNjJjMmNkOQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-12-16T21:43:18Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-12-16T21:46:53Z"
    },
    "message": "gdb/testsuite: make some tests in gdb.base enable non-stop using GDBFLAGS\n\nFor the same reason as explained in commit 7cb2893dfab1 (\"gdb/testsuite:\ngdb.mi/mi-nonstop-exit.exp: enable non-stop using GDBFLAGS\").\n\nNote that the use of\n\n    set GDBFLAGS \"$GDBFLAGS ...\"\n\ninstead of\n\n    append GDBFLAGS \"...\"\n\nis intentional.  \"append\" is silent when appending to a non-existent\nvariable.  So if this code if moved to a proc (as is the case already\nfor step-sw-breakpoint-adjust-pc.exp) and we forget to add \"global\nGDBFLAGS\", the flag won't be added to the global GDBFLAGS, and we won't\nactually enable non-stop, and it might go unnoticed.  Using the \"set\"\nversion will turn into an error if we forget the \"global\".\n\nThis makes these test work correctly with native-extended-gdbserver.\nSome of them were silently failing because we runto_main is silent when\nit fails.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/async-shell.exp: Enable non-stop through GDBFLAGS.\n\t* gdb.base/continue-all-already-running.exp: Likewise.\n\t* gdb.base/moribund-step.exp: Likewise.\n\t* gdb.base/step-sw-breakpoint-adjust-pc.exp: Likewise.\n\nChange-Id: I19ef05d07a0ec4a9c9476af2ba6e1ea1159ee437",
    "tree": {
      "sha": "43a49b1ba2ec4b9234eae08b70c91b573e2be49e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/43a49b1ba2ec4b9234eae08b70c91b573e2be49e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bcac599f73874fd63a3901f0a9f7d24e50c2ad24",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bcac599f73874fd63a3901f0a9f7d24e50c2ad24",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bcac599f73874fd63a3901f0a9f7d24e50c2ad24"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 27,
    "deletions": 13
  },
  "files": [
    {
      "sha": "e48a6fe0ec1fc13590134b57cedd06646902c3c5",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9",
      "patch": "@@ -1,3 +1,10 @@\n+2020-12-16  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdb.base/async-shell.exp: Enable non-stop through GDBFLAGS.\n+\t* gdb.base/continue-all-already-running.exp: Likewise.\n+\t* gdb.base/moribund-step.exp: Likewise.\n+\t* gdb.base/step-sw-breakpoint-adjust-pc.exp: Likewise.\n+\n 2020-12-16  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.base/batch-preserve-term-settings.exp:"
    },
    {
      "sha": "ad7813aac71ba0aaef7dc1911535ccb52a7a5cb5",
      "filename": "gdb/testsuite/gdb.base/async-shell.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9/gdb/testsuite/gdb.base/async-shell.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9/gdb/testsuite/gdb.base/async-shell.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/async-shell.exp?ref=93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9",
      "patch": "@@ -25,13 +25,15 @@ if [use_gdb_stub] {\n     return 0\n }\n \n-if { [prepare_for_testing \"failed to prepare\" ${testfile} $srcfile] } {\n-    return -1\n+save_vars { GDBFLAGS } {\n+    set GDBFLAGS \"$GDBFLAGS -ex \\\"set non-stop on\\\"\"\n+    if { [prepare_for_testing \"failed to prepare\" ${testfile} $srcfile] } {\n+\treturn -1\n+    }\n }\n \n set gdbindex_warning_re \"warning: Skipping \\[^\\r\\n\\]+ \\\\.gdb_index section \\[^\\r\\n\\]*\\r\\nDo \\\"set use-deprecated-index-sections on\\\" before the file is read\\r\\nto use the section anyway\\\\.\"\n \n-gdb_test_no_output \"set non-stop on\"\n gdb_test \"run &\" \"Starting program: \\[^\\r\\n\\]*(\\r\\n$gdbindex_warning_re)?\"\n \n # `sleep 5' here would workaround the bug, do not sleep here."
    },
    {
      "sha": "39435814d2bf34f9f00a94b953d913bc81e8a8d9",
      "filename": "gdb/testsuite/gdb.base/continue-all-already-running.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9/gdb/testsuite/gdb.base/continue-all-already-running.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9/gdb/testsuite/gdb.base/continue-all-already-running.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/continue-all-already-running.exp?ref=93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9",
      "patch": "@@ -18,12 +18,13 @@\n \n standard_testfile\n \n-if { [prepare_for_testing \"failed to prepare\" ${testfile} $srcfile] } {\n-    return -1\n+save_vars { GDBFLAGS } {\n+    set GDBFLAGS \"$GDBFLAGS -ex \\\"set non-stop on\\\"\"\n+    if { [prepare_for_testing \"failed to prepare\" ${testfile} $srcfile] } {\n+\treturn -1\n+    }\n }\n \n-gdb_test_no_output \"set non-stop on\"\n-\n if ![runto_main] {\n     return\n }"
    },
    {
      "sha": "24ffb61b029316e42d2a632c0528a66a02611b9d",
      "filename": "gdb/testsuite/gdb.base/moribund-step.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9/gdb/testsuite/gdb.base/moribund-step.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9/gdb/testsuite/gdb.base/moribund-step.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/moribund-step.exp?ref=93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9",
      "patch": "@@ -20,12 +20,13 @@ if { ![support_displaced_stepping] } {\n     return -1\n }\n \n-if { [prepare_for_testing \"failed to prepare\" ${testfile} $srcfile] } {\n-    return -1\n+save_vars { GDBFLAGS } {\n+    set GDBFLAGS \"$GDBFLAGS -ex \\\"set non-stop on\\\"\"\n+    if { [prepare_for_testing \"failed to prepare\" ${testfile} $srcfile] } {\n+\treturn -1\n+    }\n }\n \n-gdb_test_no_output \"set non-stop on\"\n-\n if ![runto_main] {\n     return\n }"
    },
    {
      "sha": "528200826bbec227623d8e04a3d9f3a28f73b101",
      "filename": "gdb/testsuite/gdb.base/step-sw-breakpoint-adjust-pc.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9/gdb/testsuite/gdb.base/step-sw-breakpoint-adjust-pc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9/gdb/testsuite/gdb.base/step-sw-breakpoint-adjust-pc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/step-sw-breakpoint-adjust-pc.exp?ref=93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9",
      "patch": "@@ -32,10 +32,13 @@ proc test {non_stop displaced always_inserted} {\n     global binfile\n     global linenum_for_user_bp\n     global linenum_for_step_resume\n+    global GDBFLAGS\n \n-    clean_restart $binfile\n+    save_vars { GDBFLAGS } {\n+\tset GDBFLAGS \"$GDBFLAGS -ex \\\"set non-stop $non_stop\\\"\"\n+\tclean_restart $binfile\n+    }\n \n-    gdb_test_no_output \"set non-stop $non_stop\"\n     gdb_test_no_output \"set displaced-stepping $displaced\"\n     gdb_test_no_output \"set breakpoint always-inserted $always_inserted\"\n "
    }
  ]
}