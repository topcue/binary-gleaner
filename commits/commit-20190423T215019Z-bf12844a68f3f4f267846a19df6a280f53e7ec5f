{
  "sha": "bf12844a68f3f4f267846a19df6a280f53e7ec5f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmYxMjg0NGE2OGYzZjRmMjY3ODQ2YTE5ZGY2YTI4MGY1M2U3ZWM1Zg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-10T18:18:39Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-23T21:50:19Z"
    },
    "message": "gdb/iq2000: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc, and gdbarch_unwind_sp where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* gdb/iq2000-tdep.c (iq2000_unwind_sp): Delete.\n\t(iq2000_unwind_pc): Delete.\n\t(iq2000_dummy_id): Delete.\n\t(iq2000_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "b543e2e9f4fb38d3431640aeaa90c0b09f2dfe14",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b543e2e9f4fb38d3431640aeaa90c0b09f2dfe14"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bf12844a68f3f4f267846a19df6a280f53e7ec5f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf12844a68f3f4f267846a19df6a280f53e7ec5f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bf12844a68f3f4f267846a19df6a280f53e7ec5f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf12844a68f3f4f267846a19df6a280f53e7ec5f/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ecbc06d2a687f369da7c304201c9f2cbfed80ec6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ecbc06d2a687f369da7c304201c9f2cbfed80ec6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ecbc06d2a687f369da7c304201c9f2cbfed80ec6"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 8,
    "deletions": 22
  },
  "files": [
    {
      "sha": "ca9beb827dd347b2b59711856b7d3b279add041b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf12844a68f3f4f267846a19df6a280f53e7ec5f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf12844a68f3f4f267846a19df6a280f53e7ec5f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bf12844a68f3f4f267846a19df6a280f53e7ec5f",
      "patch": "@@ -1,3 +1,11 @@\n+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb/iq2000-tdep.c (iq2000_unwind_sp): Delete.\n+\t(iq2000_unwind_pc): Delete.\n+\t(iq2000_dummy_id): Delete.\n+\t(iq2000_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* nds32-tdep.c (nds32_type_align): Delete."
    },
    {
      "sha": "0c50a72fc923bc51a3070c4df8e7e89e4f3827c0",
      "filename": "gdb/iq2000-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf12844a68f3f4f267846a19df6a280f53e7ec5f/gdb/iq2000-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf12844a68f3f4f267846a19df6a280f53e7ec5f/gdb/iq2000-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/iq2000-tdep.c?ref=bf12844a68f3f4f267846a19df6a280f53e7ec5f",
      "patch": "@@ -434,25 +434,6 @@ static const struct frame_unwind iq2000_frame_unwind = {\n   default_frame_sniffer\n };\n \n-static CORE_ADDR\n-iq2000_unwind_sp (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, E_SP_REGNUM);\n-}   \n-\n-static CORE_ADDR\n-iq2000_unwind_pc (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, E_PC_REGNUM);\n-}\n-\n-static struct frame_id\n-iq2000_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  CORE_ADDR sp = get_frame_register_unsigned (this_frame, E_SP_REGNUM);\n-  return frame_id_build (sp, get_frame_pc (this_frame));\n-}\n-\n static CORE_ADDR\n iq2000_frame_base_address (struct frame_info *this_frame, void **this_cache)\n {\n@@ -843,9 +824,6 @@ iq2000_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   set_gdbarch_inner_than           (gdbarch, core_addr_lessthan);\n   set_gdbarch_register_type (gdbarch, iq2000_register_type);\n   set_gdbarch_frame_align (gdbarch, iq2000_frame_align);\n-  set_gdbarch_unwind_sp (gdbarch, iq2000_unwind_sp);\n-  set_gdbarch_unwind_pc (gdbarch, iq2000_unwind_pc);\n-  set_gdbarch_dummy_id (gdbarch, iq2000_dummy_id);\n   frame_base_set_default (gdbarch, &iq2000_frame_base);\n   set_gdbarch_push_dummy_call (gdbarch, iq2000_push_dummy_call);\n "
    }
  ]
}