{
  "sha": "1a4f81dd7e06f54f4b84f276447eb167f7529b09",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWE0ZjgxZGQ3ZTA2ZjU0ZjRiODRmMjc2NDQ3ZWIxNjdmNzUyOWIwOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-13T21:55:02Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-20T22:22:05Z"
    },
    "message": "Minor rearrangement in tui-regs.c\n\nThis moves a couple of functions earlier in tui-regs.c.  Previously\nthey were in the \"command\" section of the file, but really they belong\nin the \"window implementation\" section.\n\ngdb/ChangeLog\n2019-08-20  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-regs.c (tui_register_format, tui_get_register): Move\n\tearlier.",
    "tree": {
      "sha": "2ca66950b5e3a230ebd00b5510adb89cffff6940",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2ca66950b5e3a230ebd00b5510adb89cffff6940"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1a4f81dd7e06f54f4b84f276447eb167f7529b09",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a4f81dd7e06f54f4b84f276447eb167f7529b09",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1a4f81dd7e06f54f4b84f276447eb167f7529b09",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a4f81dd7e06f54f4b84f276447eb167f7529b09/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0f8d8876d98305671a19b5bf88f125d4d02c7e0f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f8d8876d98305671a19b5bf88f125d4d02c7e0f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0f8d8876d98305671a19b5bf88f125d4d02c7e0f"
    }
  ],
  "stats": {
    "total": 106,
    "additions": 53,
    "deletions": 53
  },
  "files": [
    {
      "sha": "346cc35d0bc21644dc7802106ed55defd26dfe34",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a4f81dd7e06f54f4b84f276447eb167f7529b09/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a4f81dd7e06f54f4b84f276447eb167f7529b09/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1a4f81dd7e06f54f4b84f276447eb167f7529b09",
      "patch": "@@ -1,3 +1,8 @@\n+2019-08-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-regs.c (tui_register_format, tui_get_register): Move\n+\tearlier.\n+\n 2019-08-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-regs.c (tui_reg_command): Remove NULL check."
    },
    {
      "sha": "9ea6e723644968679fdfd7a9a6ea23bc284eec05",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 48,
      "deletions": 53,
      "changes": 101,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a4f81dd7e06f54f4b84f276447eb167f7529b09/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a4f81dd7e06f54f4b84f276447eb167f7529b09/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=1a4f81dd7e06f54f4b84f276447eb167f7529b09",
      "patch": "@@ -49,10 +49,55 @@ static void tui_show_register_group (tui_data_window *win_info,\n \t\t\t\t     struct frame_info *frame,\n \t\t\t\t     int refresh_values_only);\n \n-static void tui_get_register (struct frame_info *frame,\n-\t\t\t      struct tui_data_item_window *data,\n-\t\t\t      int regnum, bool *changedp);\n+/* Get the register from the frame and return a printable\n+   representation of it.  */\n+\n+static char *\n+tui_register_format (struct frame_info *frame, int regnum)\n+{\n+  struct gdbarch *gdbarch = get_frame_arch (frame);\n \n+  string_file stream;\n+\n+  scoped_restore save_pagination\n+    = make_scoped_restore (&pagination_enabled, 0);\n+  scoped_restore save_stdout\n+    = make_scoped_restore (&gdb_stdout, &stream);\n+\n+  gdbarch_print_registers_info (gdbarch, &stream, frame, regnum, 1);\n+\n+  /* Remove the possible \\n.  */\n+  std::string &str = stream.string ();\n+  if (!str.empty () && str.back () == '\\n')\n+    str.resize (str.size () - 1);\n+\n+  /* Expand tabs into spaces, since ncurses on MS-Windows doesn't.  */\n+  return tui_expand_tabs (str.c_str (), 0);\n+}\n+\n+/* Get the register value from the given frame and format it for the\n+   display.  When changep is set, check if the new register value has\n+   changed with respect to the previous call.  */\n+static void\n+tui_get_register (struct frame_info *frame,\n+                  struct tui_data_item_window *data, \n+\t\t  int regnum, bool *changedp)\n+{\n+  if (changedp)\n+    *changedp = false;\n+  if (target_has_registers)\n+    {\n+      char *prev_content = data->content;\n+\n+      data->content = tui_register_format (frame, regnum);\n+\n+      if (changedp != NULL\n+\t  && strcmp (prev_content, data->content) != 0)\n+\t*changedp = true;\n+\n+      xfree (prev_content);\n+    }\n+}\n \n /* See tui-regs.h.  */\n \n@@ -739,56 +784,6 @@ tui_reggroup_completer (struct cmd_list_element *ignore,\n     }\n }\n \n-/* Get the register from the frame and return a printable\n-   representation of it.  */\n-\n-static char *\n-tui_register_format (struct frame_info *frame, int regnum)\n-{\n-  struct gdbarch *gdbarch = get_frame_arch (frame);\n-\n-  string_file stream;\n-\n-  scoped_restore save_pagination\n-    = make_scoped_restore (&pagination_enabled, 0);\n-  scoped_restore save_stdout\n-    = make_scoped_restore (&gdb_stdout, &stream);\n-\n-  gdbarch_print_registers_info (gdbarch, &stream, frame, regnum, 1);\n-\n-  /* Remove the possible \\n.  */\n-  std::string &str = stream.string ();\n-  if (!str.empty () && str.back () == '\\n')\n-    str.resize (str.size () - 1);\n-\n-  /* Expand tabs into spaces, since ncurses on MS-Windows doesn't.  */\n-  return tui_expand_tabs (str.c_str (), 0);\n-}\n-\n-/* Get the register value from the given frame and format it for the\n-   display.  When changep is set, check if the new register value has\n-   changed with respect to the previous call.  */\n-static void\n-tui_get_register (struct frame_info *frame,\n-                  struct tui_data_item_window *data, \n-\t\t  int regnum, bool *changedp)\n-{\n-  if (changedp)\n-    *changedp = false;\n-  if (target_has_registers)\n-    {\n-      char *prev_content = data->content;\n-\n-      data->content = tui_register_format (frame, regnum);\n-\n-      if (changedp != NULL\n-\t  && strcmp (prev_content, data->content) != 0)\n-\t*changedp = true;\n-\n-      xfree (prev_content);\n-    }\n-}\n-\n void\n _initialize_tui_regs (void)\n {"
    }
  ]
}