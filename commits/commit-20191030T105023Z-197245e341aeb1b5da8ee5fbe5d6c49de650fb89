{
  "sha": "197245e341aeb1b5da8ee5fbe5d6c49de650fb89",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTk3MjQ1ZTM0MWFlYjFiNWRhOGVlNWZiZTVkNmM0OWRlNjUwZmI4OQ==",
  "commit": {
    "author": {
      "name": "Fangrui Song",
      "email": "i@maskray.me",
      "date": "2019-10-30T10:50:23Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-10-30T10:50:23Z"
    },
    "message": "Add a --output=<DIR> option to ar to allow the specifying of an output directory.\n\n\t* ar.c (emum long option numbers): Declare.  Use to provide\n\tnumerical values for long options.\n\t(long_options): Add --output option.\n\t(usage): Mention the --output option.\n\t(open_output_file): New function.  Create a filepath for an output\n\tfile and open it.\n\t(extract_file): Use open_output_file().\n\t(open_output_file):\n\t* testsuite/binutils-all/ar.exp: Add a test of the new feature.\n\t* doc/binutils.texi: Document the new feature.\n\t* NEWS: Mention the new feature.",
    "tree": {
      "sha": "046f13d6fd30949d79ec6c7eb88b1d39834c0824",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/046f13d6fd30949d79ec6c7eb88b1d39834c0824"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/197245e341aeb1b5da8ee5fbe5d6c49de650fb89",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/197245e341aeb1b5da8ee5fbe5d6c49de650fb89",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/197245e341aeb1b5da8ee5fbe5d6c49de650fb89",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/197245e341aeb1b5da8ee5fbe5d6c49de650fb89/comments",
  "author": {
    "login": "MaskRay",
    "id": 416322,
    "node_id": "MDQ6VXNlcjQxNjMyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/416322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaskRay",
    "html_url": "https://github.com/MaskRay",
    "followers_url": "https://api.github.com/users/MaskRay/followers",
    "following_url": "https://api.github.com/users/MaskRay/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaskRay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaskRay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaskRay/subscriptions",
    "organizations_url": "https://api.github.com/users/MaskRay/orgs",
    "repos_url": "https://api.github.com/users/MaskRay/repos",
    "events_url": "https://api.github.com/users/MaskRay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaskRay/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a961a1e1749443516d8fe6e0570cf808a09e8f89",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a961a1e1749443516d8fe6e0570cf808a09e8f89",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a961a1e1749443516d8fe6e0570cf808a09e8f89"
    }
  ],
  "stats": {
    "total": 237,
    "additions": 171,
    "deletions": 66
  },
  "files": [
    {
      "sha": "c85d93b9dce193e002df3c0b3d8b9740582aa6a5",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/197245e341aeb1b5da8ee5fbe5d6c49de650fb89/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/197245e341aeb1b5da8ee5fbe5d6c49de650fb89/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=197245e341aeb1b5da8ee5fbe5d6c49de650fb89",
      "patch": "@@ -1,3 +1,18 @@\n+2019-10-30  Fangrui Song  <i@maskray.me>\n+\t    Nick Clifton  <nickc@redhat.com>\n+\n+\t* ar.c (emum long option numbers): Declare.  Use to provide\n+\tnumerical values for long options.\n+\t(long_options): Add --output option.\n+\t(usage): Mention the --output option.\n+\t(open_output_file): New function.  Create a filepath for an output\n+\tfile and open it.\n+\t(extract_file): Use open_output_file().\n+\t(open_output_file):\n+\t* testsuite/binutils-all/ar.exp: Add a test of the new feature.\n+\t* doc/binutils.texi: Document the new feature.\n+\t* NEWS: Mention the new feature.\n+\n 2019-10-26  Alan Modra  <amodra@gmail.com>\n \n \t* objcopy.c (sort_gnu_build_notes): Correct sort of deleted"
    },
    {
      "sha": "fd14d71ce92772928bb2963cb492222c3b360972",
      "filename": "binutils/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/197245e341aeb1b5da8ee5fbe5d6c49de650fb89/binutils/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/197245e341aeb1b5da8ee5fbe5d6c49de650fb89/binutils/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/NEWS?ref=197245e341aeb1b5da8ee5fbe5d6c49de650fb89",
      "patch": "@@ -1,5 +1,8 @@\n -*- text -*-\n \n+* Add --output option to the \"ar\" program.  This option can be used to specify\n+  the output directory when extracting members from an archive.\n+\n Changes in 2.33:\n \n * Add --source-comment[=<txt>] option to objdump which if present,"
    },
    {
      "sha": "0af7954a47a2574f6a7cddac6454abe6f77b3bf4",
      "filename": "binutils/ar.c",
      "status": "modified",
      "additions": 91,
      "deletions": 64,
      "changes": 155,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/197245e341aeb1b5da8ee5fbe5d6c49de650fb89/binutils/ar.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/197245e341aeb1b5da8ee5fbe5d6c49de650fb89/binutils/ar.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ar.c?ref=197245e341aeb1b5da8ee5fbe5d6c49de650fb89",
      "patch": "@@ -35,6 +35,7 @@\n #include \"binemul.h\"\n #include \"plugin-api.h\"\n #include \"plugin.h\"\n+#include \"ansidecl.h\"\n \n #ifdef __GO32___\n #define EXT_NAME_LEN 3\t\t/* Bufflen of addition to name if it's MS-DOS.  */\n@@ -149,15 +150,22 @@ static const char *plugin_target = NULL;\n \n static const char *target = NULL;\n \n-#define OPTION_PLUGIN 201\n-#define OPTION_TARGET 202\n+enum long_option_numbers\n+{\n+  OPTION_PLUGIN = 201,\n+  OPTION_TARGET,\n+  OPTION_OUTPUT\n+};\n+\n+static const char * output_dir = NULL;\n \n static struct option long_options[] =\n {\n   {\"help\", no_argument, &show_help, 1},\n   {\"plugin\", required_argument, NULL, OPTION_PLUGIN},\n   {\"target\", required_argument, NULL, OPTION_TARGET},\n   {\"version\", no_argument, &show_version, 1},\n+  {\"output\", required_argument, NULL, OPTION_OUTPUT},\n   {NULL, no_argument, NULL, 0}\n };\n \n@@ -327,6 +335,7 @@ usage (int help)\n   fprintf (s, _(\"  [V]          - display the version number\\n\"));\n   fprintf (s, _(\"  @<file>      - read options from <file>\\n\"));\n   fprintf (s, _(\"  --target=BFDNAME - specify the target object format as BFDNAME\\n\"));\n+  fprintf (s, _(\"  --output=DIRNAME - specify the output directory for extraction operations\\n\"));\n #if BFD_SUPPORTS_PLUGINS\n   fprintf (s, _(\" optional:\\n\"));\n   fprintf (s, _(\"  --plugin <p> - load the specified plugin\\n\"));\n@@ -592,6 +601,9 @@ decode_options (int argc, char **argv)\n \tcase OPTION_TARGET:\n \t  target = optarg;\n \t  break;\n+\tcase OPTION_OUTPUT:\n+\t  output_dir = optarg;\n+\t  break;\n \tcase 0:\t\t/* A long option that just sets a flag.  */\n \t  break;\n         default:\n@@ -1050,6 +1062,49 @@ print_contents (bfd *abfd)\n   free (cbuf);\n }\n \n+\n+static FILE * open_output_file (bfd *) ATTRIBUTE_RETURNS_NONNULL;\n+\n+static FILE *\n+open_output_file (bfd * abfd)\n+{\n+  output_filename = bfd_get_filename (abfd);\n+\n+  if (output_dir)\n+    {\n+      size_t len = strlen (output_dir);\n+\n+      if (len > 0)\n+\t{\n+\t  /* FIXME: There is a memory leak here, but it is not serious.  */\n+\t  if (IS_DIR_SEPARATOR (output_dir [len - 1]))\n+\t    output_filename = concat (output_dir, output_filename, NULL);\n+\t  else\n+\t    output_filename = concat (output_dir, \"/\", output_filename, NULL);\n+\t}\n+    }\n+    \n+  /* PR binutils/17533: Do not allow directory traversal\n+     outside of the current directory tree.  */\n+  if (! is_valid_archive_path (output_filename))\n+    {\n+      char * base = (char *) lbasename (output_filename);\n+\n+      non_fatal (_(\"illegal output pathname for archive member: %s, using '%s' instead\"),\n+\t\t output_filename, base);\n+      output_filename = base;\n+    }\n+\n+  FILE * ostream = fopen (output_filename, FOPEN_WB);\n+  if (ostream == NULL)\n+    {\n+      perror (output_filename);\n+      xexit (1);\n+    }\n+\n+  return ostream;\n+}\n+\n /* Extract a member of the archive into its own file.\n \n    We defer opening the new file until after we have read a BUFSIZ chunk of the\n@@ -1063,23 +1118,9 @@ print_contents (bfd *abfd)\n void\n extract_file (bfd *abfd)\n {\n-  FILE *ostream;\n-  char *cbuf = (char *) xmalloc (BUFSIZE);\n-  bfd_size_type nread, tocopy;\n-  bfd_size_type ncopied = 0;\n   bfd_size_type size;\n   struct stat buf;\n \n-  /* PR binutils/17533: Do not allow directory traversal\n-     outside of the current directory tree.  */\n-  if (! is_valid_archive_path (bfd_get_filename (abfd)))\n-    {\n-      non_fatal (_(\"illegal pathname found in archive member: %s\"),\n-\t\t bfd_get_filename (abfd));\n-      free (cbuf);\n-      return;\n-    }\n-\n   if (bfd_stat_arch_elt (abfd, &buf) != 0)\n     /* xgettext:c-format */\n     fatal (_(\"internal stat error on %s\"), bfd_get_filename (abfd));\n@@ -1090,75 +1131,61 @@ extract_file (bfd *abfd)\n \n   bfd_seek (abfd, (file_ptr) 0, SEEK_SET);\n \n-  ostream = NULL;\n+  output_file = NULL;\n   if (size == 0)\n     {\n-      /* Seems like an abstraction violation, eh?  Well it's OK! */\n-      output_filename = bfd_get_filename (abfd);\n+      output_file = open_output_file (abfd);\n+    }\n+  else\n+    {\n+      bfd_size_type ncopied = 0;\n+      char *cbuf = (char *) xmalloc (BUFSIZE);\n \n-      ostream = fopen (bfd_get_filename (abfd), FOPEN_WB);\n-      if (ostream == NULL)\n+      while (ncopied < size)\n \t{\n-\t  perror (bfd_get_filename (abfd));\n-\t  xexit (1);\n-\t}\n+\t  bfd_size_type nread, tocopy;\n \n-      output_file = ostream;\n-    }\n-  else\n-    while (ncopied < size)\n-      {\n-\ttocopy = size - ncopied;\n-\tif (tocopy > BUFSIZE)\n-\t  tocopy = BUFSIZE;\n-\n-\tnread = bfd_bread (cbuf, tocopy, abfd);\n-\tif (nread != tocopy)\n-\t  /* xgettext:c-format */\n-\t  fatal (_(\"%s is not a valid archive\"),\n-\t\t bfd_get_filename (abfd->my_archive));\n+\t  tocopy = size - ncopied;\n+\t  if (tocopy > BUFSIZE)\n+\t    tocopy = BUFSIZE;\n \n-\t/* See comment above; this saves disk arm motion */\n-\tif (ostream == NULL)\n-\t  {\n-\t    /* Seems like an abstraction violation, eh?  Well it's OK! */\n-\t    output_filename = bfd_get_filename (abfd);\n+\t  nread = bfd_bread (cbuf, tocopy, abfd);\n+\t  if (nread != tocopy)\n+\t    /* xgettext:c-format */\n+\t    fatal (_(\"%s is not a valid archive\"),\n+\t\t   bfd_get_filename (abfd->my_archive));\n \n-\t    ostream = fopen (bfd_get_filename (abfd), FOPEN_WB);\n-\t    if (ostream == NULL)\n-\t      {\n-\t\tperror (bfd_get_filename (abfd));\n-\t\txexit (1);\n-\t      }\n+\t  /* See comment above; this saves disk arm motion.  */\n+\t  if (output_file == NULL)\n+\t    output_file = open_output_file (abfd);\n \n-\t    output_file = ostream;\n-\t  }\n+\t  /* fwrite in mingw32 may return int instead of bfd_size_type. Cast\n+\t     the return value to bfd_size_type to avoid comparison between\n+\t     signed and unsigned values.  */\n+\t  if ((bfd_size_type) fwrite (cbuf, 1, nread, output_file) != nread)\n+\t    fatal (\"%s: %s\", output_filename, strerror (errno));\n \n-\t/* fwrite in mingw32 may return int instead of bfd_size_type. Cast\n-\t   the return value to bfd_size_type to avoid comparison between\n-\t   signed and unsigned values.  */\n-\tif ((bfd_size_type) fwrite (cbuf, 1, nread, ostream) != nread)\n-\t  fatal (\"%s: %s\", output_filename, strerror (errno));\n-\tncopied += tocopy;\n-      }\n+\t  ncopied += tocopy;\n+\t}\n \n-  if (ostream != NULL)\n-    fclose (ostream);\n+      free (cbuf);\n+    }\n+\n+  fclose (output_file);\n \n   output_file = NULL;\n-  output_filename = NULL;\n \n-  chmod (bfd_get_filename (abfd), buf.st_mode);\n+  chmod (output_filename, buf.st_mode);\n \n   if (preserve_dates)\n     {\n       /* Set access time to modification time.  Only st_mtime is\n \t initialized by bfd_stat_arch_elt.  */\n       buf.st_atime = buf.st_mtime;\n-      set_times (bfd_get_filename (abfd), &buf);\n+      set_times (output_filename, &buf);\n     }\n \n-  free (cbuf);\n+  output_filename = NULL;\n }\n \n static void"
    },
    {
      "sha": "97abf980ba81302af07dca3aadfb47b699ee18ea",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 17,
      "deletions": 2,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/197245e341aeb1b5da8ee5fbe5d6c49de650fb89/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/197245e341aeb1b5da8ee5fbe5d6c49de650fb89/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=197245e341aeb1b5da8ee5fbe5d6c49de650fb89",
      "patch": "@@ -169,7 +169,7 @@ in the section entitled ``GNU Free Documentation License''.\n @c man title ar create, modify, and extract from archives\n \n @smallexample\n-ar [-]@var{p}[@var{mod}] [@option{--plugin} @var{name}] [@option{--target} @var{bfdname}] [@var{relpos}] [@var{count}] @var{archive} [@var{member}@dots{}]\n+ar [-]@var{p}[@var{mod}] [@option{--plugin} @var{name}] [@option{--target} @var{bfdname}] [@option{--output} @var{dirname}] [@var{relpos}] [@var{count}] @var{archive} [@var{member}@dots{}]\n ar -M [ <mri-script ]\n @end smallexample\n \n@@ -253,7 +253,7 @@ program.\n \n @smallexample\n @c man begin SYNOPSIS ar\n-ar [@option{-X32_64}] [@option{-}]@var{p}[@var{mod}] [@option{--plugin} @var{name}] [@option{--target} @var{bfdname}] [@var{relpos}] [@var{count}] @var{archive} [@var{member}@dots{}]\n+ar [@option{-X32_64}] [@option{-}]@var{p}[@var{mod}] [@option{--plugin} @var{name}] [@option{--target} @var{bfdname}] [@option{--output} @var{dirname}] [@var{relpos}] [@var{count}] @var{archive} [@var{member}@dots{}]\n @c man end\n @end smallexample\n \n@@ -579,6 +579,21 @@ The optional command-line switch @option{--target @var{bfdname}}\n specifies that the archive members are in an object code format\n different from your system's default format.  See\n @xref{Target Selection}, for more information.\n+\n+@item --output @var{dirname}\n+The @option{--output} option can be used to specify a path to a\n+directory into which archive members should be extracted.  If this\n+option is not specified then the current directory will be used.\n+\n+Note - although the presence of this option does imply a @option{x} \n+extraction operation that option must still be included on the command\n+line.\n+\n+Note - using this option does not allow archive members to be\n+extracted to locations outside of the current directory, or one of its \n+sub-directories.  This is a security feature to prevent archives\n+created with the @option{P} option from maliciously overwriting user\n+files.\n @end table\n @c man end\n "
    },
    {
      "sha": "c043f7e55081dec496e27a6bc21170e69c32be2e",
      "filename": "binutils/testsuite/binutils-all/ar.exp",
      "status": "modified",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/197245e341aeb1b5da8ee5fbe5d6c49de650fb89/binutils/testsuite/binutils-all/ar.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/197245e341aeb1b5da8ee5fbe5d6c49de650fb89/binutils/testsuite/binutils-all/ar.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/ar.exp?ref=197245e341aeb1b5da8ee5fbe5d6c49de650fb89",
      "patch": "@@ -605,6 +605,50 @@ proc empty_archive { } {\n     pass $testname\n }\n \n+# Test extracting an element.\n+\n+proc extract_an_element { } {\n+    global AR\n+    global AS\n+    global srcdir\n+    global subdir\n+\n+    set testname \"ar extracting an element\"\n+\n+    if ![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.o] {\n+\tunresolved $testname\n+\treturn\n+    }\n+\n+    set archive artest.a\n+\n+    if [is_remote host] {\n+\tset objfile [remote_download host tmpdir/bintest.o]\n+\tremote_file host delete $archive\n+    } else {\n+\tset objfile tmpdir/bintest.o\n+    }\n+\n+    remote_file build delete $archive\n+\n+    set got [binutils_run $AR \"-r -c $archive ${objfile}\"]\n+    if ![string match \"\" $got] {\n+\tfail $testname\n+\treturn\n+    }\n+\n+    set got [binutils_run $AR \"--output=tmpdir -x $archive ${objfile}\"]\n+    if ![string match \"\" $got] {\n+\tfail $testname\n+\treturn\n+    }\n+\n+    remote_file build delete $archive\n+    remote_file build delete tmpdir/$archive\n+\n+    pass $testname\n+}\n+\n # Run the tests.\n \n # Only run the bfdtest checks if the programs exist.  Since these\n@@ -625,6 +669,7 @@ deterministic_archive\n delete_an_element\n move_an_element\n empty_archive\n+extract_an_element\n \n if { [is_elf_format] && [supports_gnu_unique] } {\n     unique_symbol"
    }
  ]
}