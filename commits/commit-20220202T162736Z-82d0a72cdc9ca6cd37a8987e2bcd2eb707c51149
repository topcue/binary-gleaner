{
  "sha": "82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149",
  "node_id": "C_kwDOANOeidoAKDgyZDBhNzJjZGM5Y2E2Y2QzN2E4OTg3ZTJiY2QyZWI3MDdjNTExNDk",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2021-12-07T22:26:05Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-02-02T16:27:36Z"
    },
    "message": "gdb: handle calls to edit command passing only a linespec condition\n\nWhile working on the previous commit to fix PR cli/28665, I noticed\nthat the 'edit' command would suffer from the same problem.  That is,\nsomething like:\n\n  (gdb) edit task 123\n\nwould cause GDB to break.  For a full explanation of what's going on\nhere, see the commit message for the previous commit.\n\nAs with the previous commit, this issue can be prevented by detecting,\nand throwing, a junk at the end of the line error earlier, before\ncalling decode_line_1.\n\nSo, that's what this commit does.  I've also added some tests for this\nissue.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=28665",
    "tree": {
      "sha": "871b135651665b27e60d77fd25022ce98b6df31b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/871b135651665b27e60d77fd25022ce98b6df31b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "3c5fcec6dccb0e598d1e64640e55d50ed3ddedb6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c5fcec6dccb0e598d1e64640e55d50ed3ddedb6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3c5fcec6dccb0e598d1e64640e55d50ed3ddedb6"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 20,
    "deletions": 13
  },
  "files": [
    {
      "sha": "1d14b8e45270743cec04f7a0cad74dd2c2cb9026",
      "filename": "gdb/cli/cli-cmds.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149/gdb/cli/cli-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149/gdb/cli/cli-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-cmds.c?ref=82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149",
      "patch": "@@ -968,6 +968,10 @@ edit_command (const char *arg, int from_tty)\n       arg1 = arg;\n       event_location_up location = string_to_event_location (&arg1,\n \t\t\t\t\t\t\t     current_language);\n+\n+      if (*arg1)\n+\terror (_(\"Junk at end of line specification.\"));\n+\n       std::vector<symtab_and_line> sals = decode_line_1 (location.get (),\n \t\t\t\t\t\t\t DECODE_LINE_LIST_MODE,\n \t\t\t\t\t\t\t NULL, NULL, 0);\n@@ -987,9 +991,6 @@ edit_command (const char *arg, int from_tty)\n \n       sal = sals[0];\n \n-      if (*arg1)\n-\terror (_(\"Junk at end of line specification.\"));\n-\n       /* If line was specified by address, first print exactly which\n \t line, and which file.  In this case, sal.symtab == 0 means\n \t address is outside of all known source files, not that user"
    },
    {
      "sha": "c895e25da03ebe22b4edf9830d40df7103ffb173",
      "filename": "gdb/testsuite/gdb.linespec/errors.exp",
      "status": "modified",
      "additions": 16,
      "deletions": 10,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149/gdb/testsuite/gdb.linespec/errors.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149/gdb/testsuite/gdb.linespec/errors.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.linespec/errors.exp?ref=82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149",
      "patch": "@@ -29,13 +29,19 @@ gdb_test \"list fooc:/foo/bar/baz.c:1\" \"No source file named fooc.\"\n gdb_test \"list fooc:/foo/bar/baz.c\" \"No source file named fooc.\"\n \n # PR cli/28665, gdb/28797\n-gdb_test \"list task 123\" \\\n-    \"Junk at end of line specification\\\\.\"\n-gdb_test \"list if (0)\" \\\n-    \"Junk at end of line specification\\\\.\"\n-gdb_test \"list thread 1\" \\\n-    \"Junk at end of line specification\\\\.\"\n-gdb_test \"list -force-condition\" \\\n-    \"Junk at end of line specification\\\\.\"\n-gdb_test \"list ,,\" \\\n-    \"Junk at end of line specification\\\\.\"\n+save_vars { env(EDITOR) } {\n+    setenv EDITOR true\n+\n+    foreach cmd {list edit} {\n+\tgdb_test \"${cmd} task 123\" \\\n+\t    \"Junk at end of line specification\\\\.\"\n+\tgdb_test \"${cmd} if (0)\" \\\n+\t    \"Junk at end of line specification\\\\.\"\n+\tgdb_test \"${cmd} thread 1\" \\\n+\t    \"Junk at end of line specification\\\\.\"\n+\tgdb_test \"${cmd} -force-condition\" \\\n+\t    \"Junk at end of line specification\\\\.\"\n+\tgdb_test \"${cmd} ,,\" \\\n+\t    \"Junk at end of line specification\\\\.\"\n+    }\n+}"
    }
  ]
}