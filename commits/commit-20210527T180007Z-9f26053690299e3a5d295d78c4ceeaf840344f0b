{
  "sha": "9f26053690299e3a5d295d78c4ceeaf840344f0b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWYyNjA1MzY5MDI5OWUzYTVkMjk1ZDc4YzRjZWVhZjg0MDM0NGYwYg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-27T17:59:00Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-27T18:00:07Z"
    },
    "message": "gdb: remove unnecessary lookup_cmd when deprecating commands\n\nRemove a few instances where we look up a command by name, but could\njust use the return value of a previous \"add command\" function call\ninstead.\n\ngdb/ChangeLog:\n\n\t* mi/mi-main.c (_initialize_mi_main):\n\t* python/py-auto-load.c (gdbpy_initialize_auto_load):\n\t* remote.c (_initialize_remote):\n\nChange-Id: I6d06f9ca636e340c88c1064ae870483ad392607d",
    "tree": {
      "sha": "27cc770378c9ae45c0c723f2401b24af26079550",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/27cc770378c9ae45c0c723f2401b24af26079550"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9f26053690299e3a5d295d78c4ceeaf840344f0b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f26053690299e3a5d295d78c4ceeaf840344f0b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9f26053690299e3a5d295d78c4ceeaf840344f0b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f26053690299e3a5d295d78c4ceeaf840344f0b/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "af7f8f52dd6024951577cfc328c318fdd4089623",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af7f8f52dd6024951577cfc328c318fdd4089623",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/af7f8f52dd6024951577cfc328c318fdd4089623"
    }
  ],
  "stats": {
    "total": 79,
    "additions": 37,
    "deletions": 42
  },
  "files": [
    {
      "sha": "354384a3937f0194ba6eef9bc096008625a5506b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f26053690299e3a5d295d78c4ceeaf840344f0b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f26053690299e3a5d295d78c4ceeaf840344f0b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9f26053690299e3a5d295d78c4ceeaf840344f0b",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* mi/mi-main.c (_initialize_mi_main):\n+\t* python/py-auto-load.c (gdbpy_initialize_auto_load):\n+\t* remote.c (_initialize_remote):\n+\n 2021-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* command.h (set_show_commands): New."
    },
    {
      "sha": "e293dddc08d86dabb372725b485f1464721da284",
      "filename": "gdb/mi/mi-main.c",
      "status": "modified",
      "additions": 14,
      "deletions": 12,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f26053690299e3a5d295d78c4ceeaf840344f0b/gdb/mi/mi-main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f26053690299e3a5d295d78c4ceeaf840344f0b/gdb/mi/mi-main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-main.c?ref=9f26053690299e3a5d295d78c4ceeaf840344f0b",
      "patch": "@@ -2737,21 +2737,23 @@ void _initialize_mi_main ();\n void\n _initialize_mi_main ()\n {\n-  struct cmd_list_element *c;\n-\n-  add_setshow_boolean_cmd (\"mi-async\", class_run,\n-\t\t\t   &mi_async_1, _(\"\\\n+  set_show_commands mi_async_cmds\n+    = add_setshow_boolean_cmd (\"mi-async\", class_run,\n+\t\t\t       &mi_async_1, _(\"\\\n Set whether MI asynchronous mode is enabled.\"), _(\"\\\n Show whether MI asynchronous mode is enabled.\"), _(\"\\\n Tells GDB whether MI should be in asynchronous mode.\"),\n-\t\t\t   set_mi_async_command,\n-\t\t\t   show_mi_async_command,\n-\t\t\t   &setlist,\n-\t\t\t   &showlist);\n+\t\t\t       set_mi_async_command,\n+\t\t\t       show_mi_async_command,\n+\t\t\t       &setlist, &showlist);\n \n   /* Alias old \"target-async\" to \"mi-async\".  */\n-  c = add_alias_cmd (\"target-async\", \"mi-async\", class_run, 0, &setlist);\n-  deprecate_cmd (c, \"set mi-async\");\n-  c = add_alias_cmd (\"target-async\", \"mi-async\", class_run, 0, &showlist);\n-  deprecate_cmd (c, \"show mi-async\");\n+  cmd_list_element *set_target_async_cmd\n+    = add_alias_cmd (\"target-async\", mi_async_cmds.set, class_run, 0, &setlist);\n+  deprecate_cmd (set_target_async_cmd, \"set mi-async\");\n+\n+  cmd_list_element *show_target_async_cmd\n+    = add_alias_cmd (\"target-async\", mi_async_cmds.show, class_run, 0,\n+\t\t     &showlist);\n+  deprecate_cmd (show_target_async_cmd, \"show mi-async\");\n }"
    },
    {
      "sha": "20659858a56458aa5614c12311960588a5113d9c",
      "filename": "gdb/python/py-auto-load.c",
      "status": "modified",
      "additions": 11,
      "deletions": 18,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f26053690299e3a5d295d78c4ceeaf840344f0b/gdb/python/py-auto-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f26053690299e3a5d295d78c4ceeaf840344f0b/gdb/python/py-auto-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-auto-load.c?ref=9f26053690299e3a5d295d78c4ceeaf840344f0b",
      "patch": "@@ -59,9 +59,6 @@ info_auto_load_python_scripts (const char *pattern, int from_tty)\n int\n gdbpy_initialize_auto_load (void)\n {\n-  struct cmd_list_element *cmd;\n-  const char *cmd_name;\n-\n   add_setshow_boolean_cmd (\"python-scripts\", class_support,\n \t\t\t   &auto_load_python_scripts, _(\"\\\n Set the debugger's behaviour regarding auto-loaded Python scripts.\"), _(\"\\\n@@ -73,32 +70,28 @@ This options has security implications for untrusted inferiors.\"),\n \t\t\t   auto_load_set_cmdlist_get (),\n \t\t\t   auto_load_show_cmdlist_get ());\n \n-  add_setshow_boolean_cmd (\"auto-load-scripts\", class_support,\n-\t\t\t   &auto_load_python_scripts, _(\"\\\n+  set_show_commands auto_load_scripts_cmds\n+    = add_setshow_boolean_cmd (\"auto-load-scripts\", class_support,\n+\t\t\t       &auto_load_python_scripts, _(\"\\\n Set the debugger's behaviour regarding auto-loaded Python scripts, \"\n \t\t\t\t\t\t\t\t \"deprecated.\"),\n-\t\t\t   _(\"\\\n+\t\t\t       _(\"\\\n Show the debugger's behaviour regarding auto-loaded Python scripts, \"\n \t\t\t\t\t\t\t\t \"deprecated.\"),\n-\t\t\t   NULL, NULL, show_auto_load_python_scripts,\n-\t\t\t   &setlist, &showlist);\n-  cmd_name = \"auto-load-scripts\";\n-  cmd = lookup_cmd (&cmd_name, setlist, \"\", NULL, -1, 1);\n-  deprecate_cmd (cmd, \"set auto-load python-scripts\");\n-\n-  /* It is needed because lookup_cmd updates the CMD_NAME pointer.  */\n-  cmd_name = \"auto-load-scripts\";\n-  cmd = lookup_cmd (&cmd_name, showlist, \"\", NULL, -1, 1);\n-  deprecate_cmd (cmd, \"show auto-load python-scripts\");\n+\t\t\t       NULL, NULL, show_auto_load_python_scripts,\n+\t\t\t       &setlist, &showlist);\n+  deprecate_cmd (auto_load_scripts_cmds.set, \"set auto-load python-scripts\");\n+  deprecate_cmd (auto_load_scripts_cmds.show, \"show auto-load python-scripts\");\n \n   add_cmd (\"python-scripts\", class_info, info_auto_load_python_scripts,\n \t   _(\"Print the list of automatically loaded Python scripts.\\n\\\n Usage: info auto-load python-scripts [REGEXP]\"),\n \t   auto_load_info_cmdlist_get ());\n \n-  cmd = add_info (\"auto-load-scripts\", info_auto_load_python_scripts, _(\"\\\n+  cmd_list_element *info_auto_load_scripts_cmd\n+    = add_info (\"auto-load-scripts\", info_auto_load_python_scripts, _(\"\\\n Print the list of automatically loaded Python scripts, deprecated.\"));\n-  deprecate_cmd (cmd, \"info auto-load python-scripts\");\n+  deprecate_cmd (info_auto_load_scripts_cmd, \"info auto-load python-scripts\");\n \n   return 0;\n }"
    },
    {
      "sha": "f2cb35116c89ece8dba026618c1273067bc03262",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 6,
      "deletions": 12,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f26053690299e3a5d295d78c4ceeaf840344f0b/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f26053690299e3a5d295d78c4ceeaf840344f0b/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=9f26053690299e3a5d295d78c4ceeaf840344f0b",
      "patch": "@@ -14828,9 +14828,6 @@ void _initialize_remote ();\n void\n _initialize_remote ()\n {\n-  struct cmd_list_element *cmd;\n-  const char *cmd_name;\n-\n   /* architecture specific data */\n   remote_g_packet_data_handle =\n     gdbarch_data_register_pre_init (remote_g_packet_data_init);\n@@ -14875,18 +14872,15 @@ response packet.  GDB supplies the initial `$' character, and the\\n\\\n terminating `#' character and checksum.\"),\n \t   &maintenancelist);\n \n-  add_setshow_boolean_cmd (\"remotebreak\", no_class, &remote_break, _(\"\\\n+  set_show_commands remotebreak_cmds\n+    = add_setshow_boolean_cmd (\"remotebreak\", no_class, &remote_break, _(\"\\\n Set whether to send break if interrupted.\"), _(\"\\\n Show whether to send break if interrupted.\"), _(\"\\\n If set, a break, instead of a cntrl-c, is sent to the remote target.\"),\n-\t\t\t   set_remotebreak, show_remotebreak,\n-\t\t\t   &setlist, &showlist);\n-  cmd_name = \"remotebreak\";\n-  cmd = lookup_cmd (&cmd_name, setlist, \"\", NULL, -1, 1);\n-  deprecate_cmd (cmd, \"set remote interrupt-sequence\");\n-  cmd_name = \"remotebreak\"; /* needed because lookup_cmd updates the pointer */\n-  cmd = lookup_cmd (&cmd_name, showlist, \"\", NULL, -1, 1);\n-  deprecate_cmd (cmd, \"show remote interrupt-sequence\");\n+\t\t\t       set_remotebreak, show_remotebreak,\n+\t\t\t       &setlist, &showlist);\n+  deprecate_cmd (remotebreak_cmds.set, \"set remote interrupt-sequence\");\n+  deprecate_cmd (remotebreak_cmds.show, \"show remote interrupt-sequence\");\n \n   add_setshow_enum_cmd (\"interrupt-sequence\", class_support,\n \t\t\tinterrupt_sequence_modes, &interrupt_sequence_mode,"
    }
  ]
}