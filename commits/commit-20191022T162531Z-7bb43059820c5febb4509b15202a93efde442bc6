{
  "sha": "7bb43059820c5febb4509b15202a93efde442bc6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2JiNDMwNTk4MjBjNWZlYmI0NTA5YjE1MjAyYTkzZWZkZTQ0MmJjNg==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-09-27T17:40:04Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-22T16:25:31Z"
    },
    "message": "Store the mangled name as a string_view\n\nThis should be a bit faster (because we can compare the size first),\nbut it is also a dependency for the next patch.\n\n(3.47% of gdb startup time is spent in eq_demangled_name_entry when\nattaching to Chrome's content_shell binary)\n\ngdb/ChangeLog:\n\n2019-10-22  Christian Biesinger  <cbiesinger@google.com>\n\n\t* symtab.c (struct demangled_name_entry): Change type of mangled\n\tto gdb::string_view. Also adds a constructor that takes the\n\tmangled name.\n\t(hash_demangled_name_entry): Update.\n\t(eq_demangled_name_entry): Update.\n\t(free_demangled_name_entry): New function to call the destructor\n\tnow that this is not a POD anymore.\n\t(create_demangled_names_hash): Pass free_demangled_name_entry to\n\thtab_create_alloc.\n\t(symbol_set_names): Update.\n\nChange-Id: I24711ae2bcaa9e79ca89a6f8fda385d400419175",
    "tree": {
      "sha": "897162cc893ad9a29aae05506f5ef958d8682718",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/897162cc893ad9a29aae05506f5ef958d8682718"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7bb43059820c5febb4509b15202a93efde442bc6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7bb43059820c5febb4509b15202a93efde442bc6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7bb43059820c5febb4509b15202a93efde442bc6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7bb43059820c5febb4509b15202a93efde442bc6/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6207ed28773381859319cf314eb9c4e0683c0773",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6207ed28773381859319cf314eb9c4e0683c0773",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6207ed28773381859319cf314eb9c4e0683c0773"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 21,
    "deletions": 7
  },
  "files": [
    {
      "sha": "d271330400eaf127a6720823b5d19977eb3a5f0c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7bb43059820c5febb4509b15202a93efde442bc6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7bb43059820c5febb4509b15202a93efde442bc6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7bb43059820c5febb4509b15202a93efde442bc6",
      "patch": "@@ -1,3 +1,16 @@\n+2019-10-22  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* symtab.c (struct demangled_name_entry): Change type of mangled\n+\tto gdb::string_view. Also adds a constructor that takes the\n+\tmangled name.\n+\t(hash_demangled_name_entry): Update.\n+\t(eq_demangled_name_entry): Update.\n+\t(free_demangled_name_entry): New function to call the destructor\n+\tnow that this is not a POD anymore.\n+\t(create_demangled_names_hash): Pass free_demangled_name_entry to\n+\thtab_create_alloc.\n+\t(symbol_set_names): Update.\n+\n 2019-10-21  Ali Tamur  <tamu@google.com>\n \n \t* dwarf2read.c (dir_index): Change type."
    },
    {
      "sha": "567d09d355be2a00a0c483e4e803e62e05e68542",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7bb43059820c5febb4509b15202a93efde442bc6/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7bb43059820c5febb4509b15202a93efde442bc6/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=7bb43059820c5febb4509b15202a93efde442bc6",
      "patch": "@@ -68,6 +68,7 @@\n #include \"filename-seen-cache.h\"\n #include \"arch-utils.h\"\n #include <algorithm>\n+#include \"gdbsupport/gdb_string_view.h\"\n #include \"gdbsupport/pathstuff.h\"\n \n /* Forward declarations for local functions.  */\n@@ -713,7 +714,7 @@ symbol_set_language (struct general_symbol_info *gsymbol,\n /* Objects of this type are stored in the demangled name hash table.  */\n struct demangled_name_entry\n {\n-  const char *mangled;\n+  gdb::string_view mangled;\n   ENUM_BITFIELD(language) language : LANGUAGE_BITS;\n   char demangled[1];\n };\n@@ -726,7 +727,7 @@ hash_demangled_name_entry (const void *data)\n   const struct demangled_name_entry *e\n     = (const struct demangled_name_entry *) data;\n \n-  return htab_hash_string (e->mangled);\n+  return iterative_hash (e->mangled.data (), e->mangled.length (), 0);\n }\n \n /* Equality function for the demangled name hash.  */\n@@ -739,7 +740,7 @@ eq_demangled_name_entry (const void *a, const void *b)\n   const struct demangled_name_entry *db\n     = (const struct demangled_name_entry *) b;\n \n-  return strcmp (da->mangled, db->mangled) == 0;\n+  return da->mangled == db->mangled;\n }\n \n /* Create the hash table used for demangled names.  Each hash entry is\n@@ -855,7 +856,7 @@ symbol_set_names (struct general_symbol_info *gsymbol,\n   else\n     linkage_name_copy = linkage_name;\n \n-  entry.mangled = linkage_name_copy;\n+  entry.mangled = gdb::string_view (linkage_name_copy, len);\n   slot = ((struct demangled_name_entry **)\n \t  htab_find_slot (per_bfd->demangled_names_hash.get (),\n \t\t\t  &entry, INSERT));\n@@ -888,7 +889,7 @@ symbol_set_names (struct general_symbol_info *gsymbol,\n \t       obstack_alloc (&per_bfd->storage_obstack,\n \t\t\t      offsetof (struct demangled_name_entry, demangled)\n \t\t\t      + demangled_len + 1));\n-\t  (*slot)->mangled = linkage_name;\n+\t  (*slot)->mangled = gdb::string_view (linkage_name, len);\n \t}\n       else\n \t{\n@@ -904,7 +905,7 @@ symbol_set_names (struct general_symbol_info *gsymbol,\n \t\t\t      + len + demangled_len + 2));\n \t  mangled_ptr = &((*slot)->demangled[demangled_len + 1]);\n \t  strcpy (mangled_ptr, linkage_name_copy);\n-\t  (*slot)->mangled = mangled_ptr;\n+\t  (*slot)->mangled = gdb::string_view (mangled_ptr, len);\n \t}\n       (*slot)->language = gsymbol->language;\n \n@@ -917,7 +918,7 @@ symbol_set_names (struct general_symbol_info *gsymbol,\n \t   || gsymbol->language == language_auto)\n     gsymbol->language = (*slot)->language;\n \n-  gsymbol->name = (*slot)->mangled;\n+  gsymbol->name = (*slot)->mangled.data ();\n   if ((*slot)->demangled[0] != '\\0')\n     symbol_set_demangled_name (gsymbol, (*slot)->demangled,\n \t\t\t       &per_bfd->storage_obstack);"
    }
  ]
}