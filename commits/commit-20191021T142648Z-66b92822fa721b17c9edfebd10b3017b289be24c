{
  "sha": "66b92822fa721b17c9edfebd10b3017b289be24c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjZiOTI4MjJmYTcyMWIxN2M5ZWRmZWJkMTBiMzAxN2IyODliZTI0Yw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-10-21T13:52:37Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-10-21T14:26:48Z"
    },
    "message": "contrib: Update dg-extract-results.* from gcc\n\nThe dg-extract-results scripts have been updated in the gcc\nrepository.  This commit copies the updated versions of the scripts in\nto the binutils-gdb repository.\n\nThere are two changes, these are:\n\n  1. Improved detection of timeout lines, though I suspect this only\n  applies to gcc results, and\n\n  2. Detection of KPASS results, this is of interest to gdb, where\n  these results would not be included in the final .sum file.\n\nA grep over binutils-gdb shows the dg-extract-results is not used by\nld, gas, or binutils, however I tested these anyway and saw no changes\nin the final .sum files (tested on x86-64 GNU/Linux).\n\nOn gdb when running tests in parallel dg-extract-results is used, and\nthe final .sum file now includes the KPASS results.\n\ncontrib/ChangeLog:\n\n\t* dg-extract-results.py: Update from gcc repo.\n\t* dg-extract-results.sh: Likewise.\n\nChange-Id: I54abd07f4e8f5cf88a6db74519674f6939860157",
    "tree": {
      "sha": "81ba9caeb6c8e8414e8d8cddd923f7e4df7bd33d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/81ba9caeb6c8e8414e8d8cddd923f7e4df7bd33d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/66b92822fa721b17c9edfebd10b3017b289be24c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66b92822fa721b17c9edfebd10b3017b289be24c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/66b92822fa721b17c9edfebd10b3017b289be24c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66b92822fa721b17c9edfebd10b3017b289be24c/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a0a461e5b45f6fd9eb81774ad61e55b4917d4305",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0a461e5b45f6fd9eb81774ad61e55b4917d4305",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a0a461e5b45f6fd9eb81774ad61e55b4917d4305"
    }
  ],
  "stats": {
    "total": 72,
    "additions": 60,
    "deletions": 12
  },
  "files": [
    {
      "sha": "489af77445f6ebe1517172f2cfff0f935913d932",
      "filename": "contrib/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66b92822fa721b17c9edfebd10b3017b289be24c/contrib/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66b92822fa721b17c9edfebd10b3017b289be24c/contrib/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/contrib/ChangeLog?ref=66b92822fa721b17c9edfebd10b3017b289be24c",
      "patch": "@@ -1,3 +1,8 @@\n+2019-10-21  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dg-extract-results.py: Update from gcc repo.\n+\t* dg-extract-results.sh: Likewise.\n+\n 2018-08-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* dg-extract-results.sh: Move from gdb/testsuite."
    },
    {
      "sha": "7100794d42ae4de75d0f0ac854de6b7b21309137",
      "filename": "contrib/dg-extract-results.py",
      "status": "modified",
      "additions": 18,
      "deletions": 5,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66b92822fa721b17c9edfebd10b3017b289be24c/contrib/dg-extract-results.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66b92822fa721b17c9edfebd10b3017b289be24c/contrib/dg-extract-results.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/contrib/dg-extract-results.py?ref=66b92822fa721b17c9edfebd10b3017b289be24c",
      "patch": "@@ -117,7 +117,7 @@ def __init__ (self):\n         self.tool_re = re.compile (r'^\\t\\t=== (.*) tests ===$')\n         self.result_re = re.compile (r'^(PASS|XPASS|FAIL|XFAIL|UNRESOLVED'\n                                      r'|WARNING|ERROR|UNSUPPORTED|UNTESTED'\n-                                     r'|KFAIL):\\s*(.+)')\n+                                     r'|KFAIL|KPASS):\\s*(.+)')\n         self.completed_re = re.compile (r'.* completed at (.*)')\n         # Pieces of text to write at the head of the output.\n         # start_line is a pair in which the first element is a datetime\n@@ -239,6 +239,7 @@ def parse_run (self, filename, file, tool, variation, num_variations):\n         harness = None\n         segment = None\n         final_using = 0\n+        has_warning = 0\n \n         # If this is the first run for this variation, add any text before\n         # the first harness to the header.\n@@ -292,10 +293,22 @@ def parse_run (self, filename, file, tool, variation, num_variations):\n                 # Ugly hack to get the right order for gfortran.\n                 if name.startswith ('gfortran.dg/g77/'):\n                     name = 'h' + name\n-                key = (name, len (harness.results))\n-                harness.results.append ((key, line))\n-                if not first_key and sort_logs:\n-                    first_key = key\n+                # If we have a time out warning, make sure it appears\n+                # before the following testcase diagnostic: we insert\n+                # the testname before 'program' so that sort faces a\n+                # list of testnames.\n+                if line.startswith ('WARNING: program timed out'):\n+                  has_warning = 1\n+                else:\n+                  if has_warning == 1:\n+                      key = (name, len (harness.results))\n+                      myline = 'WARNING: %s program timed out.\\n' % name\n+                      harness.results.append ((key, myline))\n+                      has_warning = 0\n+                  key = (name, len (harness.results))\n+                  harness.results.append ((key, line))\n+                  if not first_key and sort_logs:\n+                      first_key = key\n                 if line.startswith ('ERROR: (DejaGnu)'):\n                     for i in range (len (self.count_names)):\n                         if 'DejaGnu errors' in self.count_names[i]:"
    },
    {
      "sha": "f948088370e15de73181ca33950ef18c12356aa0",
      "filename": "contrib/dg-extract-results.sh",
      "status": "modified",
      "additions": 37,
      "deletions": 7,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66b92822fa721b17c9edfebd10b3017b289be24c/contrib/dg-extract-results.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66b92822fa721b17c9edfebd10b3017b289be24c/contrib/dg-extract-results.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/contrib/dg-extract-results.sh?ref=66b92822fa721b17c9edfebd10b3017b289be24c",
      "patch": "@@ -298,6 +298,8 @@ BEGIN {\n   cnt=0\n   print_using=0\n   need_close=0\n+  has_timeout=0\n+  timeout_cnt=0\n }\n /^EXPFILE: / {\n   expfiles[expfileno] = \\$2\n@@ -324,23 +326,51 @@ BEGIN {\n   }\n }\n /^\\t\\t=== .* ===$/ { curvar = \"\"; next }\n-/^(PASS|XPASS|FAIL|XFAIL|UNRESOLVED|WARNING|ERROR|UNSUPPORTED|UNTESTED|KFAIL):/ {\n+/^(PASS|XPASS|FAIL|XFAIL|UNRESOLVED|WARNING|ERROR|UNSUPPORTED|UNTESTED|KFAIL|KPASS):/ {\n   testname=\\$2\n   # Ugly hack for gfortran.dg/dg.exp\n   if (\"$TOOL\" == \"gfortran\" && testname ~ /^gfortran.dg\\/g77\\//)\n     testname=\"h\"testname\n+  if (\"$MODE\" == \"sum\") {\n+    if (\\$0 ~ /^WARNING: program timed out/) {\n+      has_timeout=1\n+      timeout_cnt=cnt+1\n+    } else {\n+      # Prepare timeout replacement message in case it's needed\n+      timeout_msg=\\$0\n+      sub(\\$1, \"WARNING:\", timeout_msg)\n+    }\n+  }\n }\n /^$/ { if (\"$MODE\" == \"sum\") next }\n { if (variant == curvar && curfile) {\n     if (\"$MODE\" == \"sum\") {\n-      printf \"%s %08d|\", testname, cnt >> curfile\n-      cnt = cnt + 1\n+      # Do not print anything if the current line is a timeout\n+      if (has_timeout == 0) {\n+\t# If the previous line was a timeout,\n+\t# insert the full current message without keyword\n+\tif (timeout_cnt != 0) {\n+\t  printf \"%s %08d|%s program timed out.\\n\", testname, timeout_cnt-1, timeout_msg >> curfile\n+\t  timeout_cnt = 0\n+\t  cnt = cnt + 1\n+\t}\n+\tprintf \"%s %08d|\", testname, cnt >> curfile\n+\tcnt = cnt + 1\n+\tfilewritten[curfile]=1\n+\tneed_close=1\n+\tprint >> curfile\n+      }\n+      has_timeout=0\n+    } else {\n+      filewritten[curfile]=1\n+      need_close=1\n+      print >> curfile\n     }\n-    filewritten[curfile]=1\n-    need_close=1\n-    print >> curfile\n-  } else\n+  } else {\n+    has_timeout=0\n+    timeout_cnt=0\n     next\n+  }\n }\n END {\n   n=1"
    }
  ]
}