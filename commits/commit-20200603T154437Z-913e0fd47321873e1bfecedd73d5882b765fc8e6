{
  "sha": "913e0fd47321873e1bfecedd73d5882b765fc8e6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTEzZTBmZDQ3MzIxODczZTFiZmVjZWRkNzNkNTg4MmI3NjVmYzhlNg==",
  "commit": {
    "author": {
      "name": "Joel Anderson",
      "email": "joelanderson333@gmail.com",
      "date": "2020-06-03T15:44:37Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-06-03T15:44:37Z"
    },
    "message": "[PATCH] fix windmc typedef bug\n\nWhile a typedef can be specified in message files for the messages following\nwith the `MessageIdTypedef` directive, only the last typedef was honored by\nwindmc. This corrects this behavior, matching mc.exe functionality.\n\n\t* windmc.h (struct mc_node): Add id_typecast field.\n\t* mcparse.y (message): Initialise the id_typecast field.\n\t* windmc.c (write_dbg): Use the id_typecast field as a parameter\n\twhen calling write_dbg_define.\n\t(write_header): Likewise.",
    "tree": {
      "sha": "757a713b5e6bb5d7b396d27cdc2adccd76933ed0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/757a713b5e6bb5d7b396d27cdc2adccd76933ed0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/913e0fd47321873e1bfecedd73d5882b765fc8e6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/913e0fd47321873e1bfecedd73d5882b765fc8e6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/913e0fd47321873e1bfecedd73d5882b765fc8e6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/913e0fd47321873e1bfecedd73d5882b765fc8e6/comments",
  "author": {
    "login": "goatshriek",
    "id": 981514,
    "node_id": "MDQ6VXNlcjk4MTUxNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/981514?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/goatshriek",
    "html_url": "https://github.com/goatshriek",
    "followers_url": "https://api.github.com/users/goatshriek/followers",
    "following_url": "https://api.github.com/users/goatshriek/following{/other_user}",
    "gists_url": "https://api.github.com/users/goatshriek/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/goatshriek/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/goatshriek/subscriptions",
    "organizations_url": "https://api.github.com/users/goatshriek/orgs",
    "repos_url": "https://api.github.com/users/goatshriek/repos",
    "events_url": "https://api.github.com/users/goatshriek/events{/privacy}",
    "received_events_url": "https://api.github.com/users/goatshriek/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5144dfba285d9b467016b7a2f72f0240fda7ce8f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5144dfba285d9b467016b7a2f72f0240fda7ce8f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5144dfba285d9b467016b7a2f72f0240fda7ce8f"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 12,
    "deletions": 2
  },
  "files": [
    {
      "sha": "44200c224bf3d873af50899b5c21aa4f4286e899",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/913e0fd47321873e1bfecedd73d5882b765fc8e6/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/913e0fd47321873e1bfecedd73d5882b765fc8e6/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=913e0fd47321873e1bfecedd73d5882b765fc8e6",
      "patch": "@@ -1,3 +1,11 @@\n+2020-06-03  Joel Anderson  <joelanderson333@gmail.com>\n+\n+\t* windmc.h (struct mc_node): Add id_typecast field.\n+\t* mcparse.y (message): Initialise the id_typecast field.\n+\t* windmc.c (write_dbg): Use the id_typecast field as a parameter\n+\twhen calling write_dbg_define.\n+\t(write_header): Likewise.\n+\n 2020-06-03  Alan Modra  <amodra@gmail.com>\n \n \tPR 26069"
    },
    {
      "sha": "a274eeee5a53ed2b750f65456c16731f1e18f8f1",
      "filename": "binutils/mcparse.y",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/913e0fd47321873e1bfecedd73d5882b765fc8e6/binutils/mcparse.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/913e0fd47321873e1bfecedd73d5882b765fc8e6/binutils/mcparse.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/mcparse.y?ref=913e0fd47321873e1bfecedd73d5882b765fc8e6",
      "patch": "@@ -181,6 +181,7 @@ message:\n \t    cur_node->severity = mc_cur_severity;\n \t    cur_node->id = ($1 & 0xffffUL);\n \t    cur_node->vid = ($1 & 0xffffUL) | mc_sefa_val;\n+\t    cur_node->id_typecast = mcset_msg_id_typedef;\n \t    mc_last_id = $1;\n \t  }\n \t  lang_entities"
    },
    {
      "sha": "98bb3ad6908dc7f25156b895170c5862b4f4b83d",
      "filename": "binutils/windmc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/913e0fd47321873e1bfecedd73d5882b765fc8e6/binutils/windmc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/913e0fd47321873e1bfecedd73d5882b765fc8e6/binutils/windmc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/windmc.c?ref=913e0fd47321873e1bfecedd73d5882b765fc8e6",
      "patch": "@@ -821,7 +821,7 @@ write_dbg (FILE *fp)\n   while (h != NULL)\n     {\n       if (h->symbol)\n-\twrite_dbg_define (fp, h->symbol, mcset_msg_id_typedef);\n+\twrite_dbg_define (fp, h->symbol, h->id_typecast);\n       h = h->next;\n     }\n   fprintf (fp, \"  { (\");\n@@ -908,7 +908,7 @@ write_header (FILE *fp)\n \t    fprintf (fp, \"%s\", s);\n \t}\n       if (h->symbol)\n-\twrite_header_define (fp, h->symbol, h->vid, mcset_msg_id_typedef, h->sub);\n+\twrite_header_define (fp, h->symbol, h->vid, h->id_typecast, h->sub);\n       h = h->next;\n     }\n }"
    },
    {
      "sha": "5c74124f442cad7301a4d5ba6567a77aa4c980ad",
      "filename": "binutils/windmc.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/913e0fd47321873e1bfecedd73d5882b765fc8e6/binutils/windmc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/913e0fd47321873e1bfecedd73d5882b765fc8e6/binutils/windmc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/windmc.h?ref=913e0fd47321873e1bfecedd73d5882b765fc8e6",
      "patch": "@@ -66,6 +66,7 @@ typedef struct mc_node\n   unichar *symbol;\n   rc_uint_type id;\n   rc_uint_type vid;\n+  unichar *id_typecast;\n   mc_node_lang *sub;\n } mc_node;\n "
    }
  ]
}