{
  "sha": "a15a276b46bf07323a1d270d7abece83ef1ea78f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTE1YTI3NmI0NmJmMDczMjNhMWQyNzBkN2FiZWNlODNlZjFlYTc4Zg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-04-15T16:14:11Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-04-15T16:14:11Z"
    },
    "message": "Avoid crash in Ada value printing with optimized-out array\n\nThe Ada value-printing code could crash when printing an array which\nhad been optimized out.\n\nThe crash is difficult to reproduce, but I did manage to write a test\nthat at least shows that the previous behavior was incorrect -- before\nthe patch, the array is printed as if it is valid and every value is 0.\n\ngdb/ChangeLog\n2021-04-15  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-valprint.c (ada_value_print_array): Handle optimized-out\n\tarrays.\n\ngdb/testsuite/ChangeLog\n2021-04-15  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.dwarf2/arr-stride.exp: Add test.",
    "tree": {
      "sha": "742b28318ab95c69c7cdbf446a4439d6e288ea5f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/742b28318ab95c69c7cdbf446a4439d6e288ea5f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a15a276b46bf07323a1d270d7abece83ef1ea78f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a15a276b46bf07323a1d270d7abece83ef1ea78f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a15a276b46bf07323a1d270d7abece83ef1ea78f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a15a276b46bf07323a1d270d7abece83ef1ea78f/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "644a2e75ace6b5e76f91d38c28c3b97fcfdeeaa5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/644a2e75ace6b5e76f91d38c28c3b97fcfdeeaa5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/644a2e75ace6b5e76f91d38c28c3b97fcfdeeaa5"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 45,
    "deletions": 2
  },
  "files": [
    {
      "sha": "5b2f6c9d7c951921437adc0fc56e394e3225a9fa",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a15a276b46bf07323a1d270d7abece83ef1ea78f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a15a276b46bf07323a1d270d7abece83ef1ea78f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a15a276b46bf07323a1d270d7abece83ef1ea78f",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-valprint.c (ada_value_print_array): Handle optimized-out\n+\tarrays.\n+\n 2021-04-15  Tom Tromey  <tromey@adacore.com>\n \n \t* printcmd.c (print_variable_and_value): Use"
    },
    {
      "sha": "61c903bbed544bc951875118da59891d5e3e156c",
      "filename": "gdb/ada-valprint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a15a276b46bf07323a1d270d7abece83ef1ea78f/gdb/ada-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a15a276b46bf07323a1d270d7abece83ef1ea78f/gdb/ada-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-valprint.c?ref=a15a276b46bf07323a1d270d7abece83ef1ea78f",
      "patch": "@@ -897,7 +897,10 @@ ada_value_print_array (struct value *val, struct ui_file *stream, int recurse,\n \n   fprintf_filtered (stream, \"(\");\n   print_optional_low_bound (stream, type, options);\n-  if (TYPE_FIELD_BITSIZE (type, 0) > 0)\n+\n+  if (value_entirely_optimized_out (val))\n+    val_print_optimized_out (val, stream);\n+  else if (TYPE_FIELD_BITSIZE (type, 0) > 0)\n     {\n       const gdb_byte *valaddr = value_contents_for_printing (val);\n       int offset_aligned = ada_aligned_value_addr (type, valaddr) - valaddr;"
    },
    {
      "sha": "d1b6f5c650fb39d88eace7ff5ddfcedd5edb2ccc",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a15a276b46bf07323a1d270d7abece83ef1ea78f/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a15a276b46bf07323a1d270d7abece83ef1ea78f/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=a15a276b46bf07323a1d270d7abece83ef1ea78f",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.dwarf2/arr-stride.exp: Add test.\n+\n 2021-04-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/startup-file.exp: Add more tests."
    },
    {
      "sha": "f25518f4558211db7c1ace2a7743647464d39f84",
      "filename": "gdb/testsuite/gdb.dwarf2/arr-stride.exp",
      "status": "modified",
      "additions": 32,
      "deletions": 1,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a15a276b46bf07323a1d270d7abece83ef1ea78f/gdb/testsuite/gdb.dwarf2/arr-stride.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a15a276b46bf07323a1d270d7abece83ef1ea78f/gdb/testsuite/gdb.dwarf2/arr-stride.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/arr-stride.exp?ref=a15a276b46bf07323a1d270d7abece83ef1ea78f",
      "patch": "@@ -31,7 +31,7 @@ Dwarf::assemble $asm_file {\n                 {DW_AT_comp_dir /tmp}\n         } {\n \t    declare_labels integer_label array_elt_label array_label \\\n-                big_array_label\n+                big_array_label struct_label\n \n             integer_label: DW_TAG_base_type {\n                 {DW_AT_byte_size 4 DW_FORM_sdata}\n@@ -79,6 +79,34 @@ Dwarf::assemble $asm_file {\n \t\t    {DW_AT_upper_bound 4 DW_FORM_data1}\n \t\t}\n \t    }\n+\n+\t    struct_label: DW_TAG_structure_type {\n+\t\t{name struct_type}\n+\t\t{byte_size 16 DW_FORM_sdata}\n+\t    } {\n+\t\tmember {\n+\t\t    {name intfield}\n+\t\t    {type :$integer_label}\n+\t\t    {data_member_location 0 DW_FORM_sdata}\n+\t\t}\n+\t\tmember {\n+\t\t    {name arrayfield}\n+\t\t    {type :$array_label}\n+\t\t    {data_member_location 4 DW_FORM_sdata}\n+\t\t}\n+\t    }\n+\n+\t    DW_TAG_variable {\n+\t\t{name the_struct}\n+\t\t{external 1 DW_FORM_flag}\n+\t\t{location {\n+\t\t    DW_OP_const1u 1\n+\t\t    DW_OP_stack_value\n+\t\t    DW_OP_piece 4\n+\t\t    DW_OP_piece 12\n+\t\t} SPECIAL_expr}\n+\t\t{type :$struct_label}\n+\t    }\n \t}\n     }\n }\n@@ -95,3 +123,6 @@ gdb_test \"ptype pck.table\" \\\n \n gdb_test \"ptype pck.big_table\" \\\n          \"type = array \\\\(0 \\\\.\\\\. 4\\\\) of pck\\\\.item <packed: 8-bit elements>\"\n+\n+gdb_test \"print the_struct\" \\\n+    \"\\\\(intfield => 1, arrayfield => \\\\(0 => <optimized out>\\\\)\\\\)\""
    }
  ]
}