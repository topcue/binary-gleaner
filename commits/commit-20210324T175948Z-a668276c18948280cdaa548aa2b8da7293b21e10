{
  "sha": "a668276c18948280cdaa548aa2b8da7293b21e10",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTY2ODI3NmMxODk0ODI4MGNkYWE1NDhhYTJiOGRhNzI5M2IyMWUxMA==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2020-06-15T18:51:21Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-03-24T17:59:48Z"
    },
    "message": "Document new \"x\" and \"print\" memory tagging extensions\n\nDocument the changes to the \"print\" and \"x\" commands to support memory\ntagging.\n\ngdb/doc/ChangeLog:\n\n2021-03-24  Luis Machado  <luis.machado@linaro.org>\n\n\t* gdb.texinfo (Data): Document memory tagging changes to the \"print\"\n\tcommand.\n\t(Examining Memory): Document memory tagging changes to the \"x\"\n\tcommand.\n\t(Memory Tagging): Update with more information on changes to the \"x\"\n\tand \"print\" commands.",
    "tree": {
      "sha": "ef8dc5126ff3e5c7e8428d0f8130ff4ab8ef2224",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ef8dc5126ff3e5c7e8428d0f8130ff4ab8ef2224"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a668276c18948280cdaa548aa2b8da7293b21e10",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a668276c18948280cdaa548aa2b8da7293b21e10",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a668276c18948280cdaa548aa2b8da7293b21e10",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a668276c18948280cdaa548aa2b8da7293b21e10/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bef382e61aeff32e46ce987e2af9b7c636dcf038",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bef382e61aeff32e46ce987e2af9b7c636dcf038",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bef382e61aeff32e46ce987e2af9b7c636dcf038"
    }
  ],
  "stats": {
    "total": 51,
    "additions": 48,
    "deletions": 3
  },
  "files": [
    {
      "sha": "cbacf184712982a24ef4b381f87fd58744eaf33a",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a668276c18948280cdaa548aa2b8da7293b21e10/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a668276c18948280cdaa548aa2b8da7293b21e10/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=a668276c18948280cdaa548aa2b8da7293b21e10",
      "patch": "@@ -1,3 +1,12 @@\n+2021-03-24  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* gdb.texinfo (Data): Document memory tagging changes to the \"print\"\n+\tcommand.\n+\t(Examining Memory): Document memory tagging changes to the \"x\"\n+\tcommand.\n+\t(Memory Tagging): Update with more information on changes to the \"x\"\n+\tand \"print\" commands.\n+\n 2021-03-24  Luis Machado  <luis.machado@linaro.org>\n \n \t* gdb.texinfo (Memory Tagging): New subsection and node."
    },
    {
      "sha": "dbf878cdbc35e5d19dd182eee5ba321e52dbf5bd",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 39,
      "deletions": 3,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a668276c18948280cdaa548aa2b8da7293b21e10/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a668276c18948280cdaa548aa2b8da7293b21e10/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=a668276c18948280cdaa548aa2b8da7293b21e10",
      "patch": "@@ -9951,6 +9951,10 @@ If you omit @var{expr}, @value{GDBN} displays the last value again (from the\n conveniently inspect the same value in an alternative format.\n @end table\n \n+If the architecture supports memory tagging, the @code{print} command will\n+display pointer/memory tag mismatches if what is being printed is a pointer\n+or reference type. @xref{Memory Tagging}.\n+\n A more low-level way of examining data is with the @code{x} command.\n It examines data in memory at a specified address and prints it in a\n specified format.  @xref{Memory, ,Examining Memory}.\n@@ -10718,7 +10722,8 @@ number is specified, memory is examined backward from @var{addr}.\n @item @var{f}, the display format\n The display format is one of the formats used by @code{print}\n (@samp{x}, @samp{d}, @samp{u}, @samp{o}, @samp{t}, @samp{a}, @samp{c},\n-@samp{f}, @samp{s}), and in addition @samp{i} (for machine instructions).\n+@samp{f}, @samp{s}), @samp{i} (for machine instructions) and\n+@samp{m} (for displaying memory tags).\n The default is @samp{x} (hexadecimal) initially.  The default changes\n each time you use either @code{x} or @code{print}.\n \n@@ -10813,6 +10818,22 @@ counter is shown with a @code{=>} marker. For example:\n    0x804838c <main+24>: call   0x80482d4 <puts@@plt>\n @end smallexample\n \n+If the architecture supports memory tagging, the tags can be displayed by\n+using @samp{m}.  @xref{Memory Tagging}.\n+\n+The information will be displayed once per granule size\n+(the amount of bytes a particular memory tag covers).  For example, AArch64\n+has a granule size of 16 bytes, so it will display a tag every 16 bytes.\n+\n+Due to the way @value{GDBN} prints information with the @code{x} command (not\n+aligned to a particular boundary), the tag information will refer to the\n+initial address displayed on a particular line.  If a memory tag boundary\n+is crossed in the middle of a line displayed by the @code{x} command, it\n+will be displayed on the next line.\n+\n+The @samp{m} format doesn't affect any other specified formats that were\n+passed to the @code{x} command.\n+\n @cindex @code{$_}, @code{$__}, and value history\n The addresses and contents printed by the @code{x} command are not saved\n in the value history because there is often too much of them and they\n@@ -10890,8 +10911,9 @@ If the underlying architecture supports memory tagging, like AArch64 MTE\n or SPARC ADI do,  @value{GDBN} can make use of it to validate pointers\n against memory allocation tags.\n \n-A command prefix of @code{memory-tag} gives access to the various memory tagging\n-commands.\n+The @code{print} (@pxref{Data}) and @code{x} (@pxref{Memory}) commands will\n+display tag information when appropriate, and a command prefix of\n+@code{memory-tag} gives access to the various memory tagging commands.\n \n The @code{memory-tag} commands are the following:\n \n@@ -11527,6 +11549,20 @@ language, for most languages @code{@{...@}} is used, but Fortran uses\n Display the current threshold after which nested structures are\n replaces with ellipsis.\n \n+@anchor{set print memory-tag-violations}\n+@cindex printing memory tag violation information\n+@item set print memory-tag-violations\n+@itemx set print memory-tag-violations on\n+Cause @value{GDBN} to display additional information about memory tag violations\n+when printing pointers and addresses.\n+\n+@item set print memory-tag-violations off\n+Stop printing memory tag violation information.\n+\n+@item show print memory-tag-violations\n+Show whether memory tag violation information is displayed when printing\n+pointers and addresses.\n+\n @anchor{set print null-stop}\n @item set print null-stop\n @cindex @sc{null} elements in arrays"
    }
  ]
}