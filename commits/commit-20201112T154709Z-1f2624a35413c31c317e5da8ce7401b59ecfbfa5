{
  "sha": "1f2624a35413c31c317e5da8ce7401b59ecfbfa5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWYyNjI0YTM1NDEzYzMxYzMxN2U1ZGE4Y2U3NDAxYjU5ZWNmYmZhNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-11-12T15:47:09Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-11-12T15:47:09Z"
    },
    "message": "Fix Rust regression with -readnow\n\nPR rust/26799 points out that a certain test case fails with -readnow.\nThis happens because, with -readnow, there are no partial symtabs; but\nfind_symbol_at_address requires these.\n\nThis patch fixes this problem by searching all of an objfile's\ncompunit symtabs if it does not have partial symbols.\n\nNote that this test will still fail with .gdb_index.  I don't think\nthat is readily fixable.\n\ngdb/ChangeLog\n2020-11-12  Tom Tromey  <tom@tromey.com>\n\n\tPR rust/26799:\n\t* symtab.c (find_symbol_at_address): Search symtabs if no psymtabs\n\texist.\n\ngdb/testsuite/ChangeLog\n2020-11-12  Tom Tromey  <tom@tromey.com>\n\n\tPR rust/26799:\n\t* gdb.rust/traits.exp: Remove kfails.",
    "tree": {
      "sha": "de75c4db6e08432ce1bf00fae7a2855593e5dab5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/de75c4db6e08432ce1bf00fae7a2855593e5dab5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1f2624a35413c31c317e5da8ce7401b59ecfbfa5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f2624a35413c31c317e5da8ce7401b59ecfbfa5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1f2624a35413c31c317e5da8ce7401b59ecfbfa5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f2624a35413c31c317e5da8ce7401b59ecfbfa5/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9e74f0aef6a73dba185161558cebace2ed9a54e5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e74f0aef6a73dba185161558cebace2ed9a54e5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9e74f0aef6a73dba185161558cebace2ed9a54e5"
    }
  ],
  "stats": {
    "total": 76,
    "additions": 52,
    "deletions": 24
  },
  "files": [
    {
      "sha": "038d45f4ec4caaeada770792e60bec530180cf85",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f2624a35413c31c317e5da8ce7401b59ecfbfa5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f2624a35413c31c317e5da8ce7401b59ecfbfa5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1f2624a35413c31c317e5da8ce7401b59ecfbfa5",
      "patch": "@@ -1,3 +1,9 @@\n+2020-11-12  Tom Tromey  <tom@tromey.com>\n+\n+\tPR rust/26799:\n+\t* symtab.c (find_symbol_at_address): Search symtabs if no psymtabs\n+\texist.\n+\n 2020-11-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* features/Makefile (XMLTOC): Add rx.xml."
    },
    {
      "sha": "dccc3d1e2379af30dfb286658bb45a69735bb020",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 41,
      "deletions": 18,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f2624a35413c31c317e5da8ce7401b59ecfbfa5/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f2624a35413c31c317e5da8ce7401b59ecfbfa5/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=1f2624a35413c31c317e5da8ce7401b59ecfbfa5",
      "patch": "@@ -3024,30 +3024,53 @@ find_pc_compunit_symtab (CORE_ADDR pc)\n struct symbol *\n find_symbol_at_address (CORE_ADDR address)\n {\n-  for (objfile *objfile : current_program_space->objfiles ())\n+  /* A helper function to search a given symtab for a symbol matching\n+     ADDR.  */\n+  auto search_symtab = [] (compunit_symtab *symtab, CORE_ADDR addr) -> symbol *\n     {\n-      if (objfile->sf == NULL\n-\t  || objfile->sf->qf->find_compunit_symtab_by_address == NULL)\n-\tcontinue;\n+      const struct blockvector *bv = COMPUNIT_BLOCKVECTOR (symtab);\n \n-      struct compunit_symtab *symtab\n-\t= objfile->sf->qf->find_compunit_symtab_by_address (objfile, address);\n-      if (symtab != NULL)\n+      for (int i = GLOBAL_BLOCK; i <= STATIC_BLOCK; ++i)\n \t{\n-\t  const struct blockvector *bv = COMPUNIT_BLOCKVECTOR (symtab);\n+\t  const struct block *b = BLOCKVECTOR_BLOCK (bv, i);\n+\t  struct block_iterator iter;\n+\t  struct symbol *sym;\n \n-\t  for (int i = GLOBAL_BLOCK; i <= STATIC_BLOCK; ++i)\n+\t  ALL_BLOCK_SYMBOLS (b, iter, sym)\n \t    {\n-\t      const struct block *b = BLOCKVECTOR_BLOCK (bv, i);\n-\t      struct block_iterator iter;\n-\t      struct symbol *sym;\n+\t      if (SYMBOL_CLASS (sym) == LOC_STATIC\n+\t\t  && SYMBOL_VALUE_ADDRESS (sym) == addr)\n+\t\treturn sym;\n+\t    }\n+\t}\n+      return nullptr;\n+    };\n \n-\t      ALL_BLOCK_SYMBOLS (b, iter, sym)\n-\t\t{\n-\t\t  if (SYMBOL_CLASS (sym) == LOC_STATIC\n-\t\t      && SYMBOL_VALUE_ADDRESS (sym) == address)\n-\t\t    return sym;\n-\t\t}\n+  for (objfile *objfile : current_program_space->objfiles ())\n+    {\n+      /* If this objfile doesn't have \"quick\" functions, then it may\n+\t have been read with -readnow, in which case we need to search\n+\t the symtabs directly.  */\n+      if (objfile->sf == NULL\n+\t  || objfile->sf->qf->find_compunit_symtab_by_address == NULL)\n+\t{\n+\t  for (compunit_symtab *symtab : objfile->compunits ())\n+\t    {\n+\t      struct symbol *sym = search_symtab (symtab, address);\n+\t      if (sym != nullptr)\n+\t\treturn sym;\n+\t    }\n+\t}\n+      else\n+\t{\n+\t  struct compunit_symtab *symtab\n+\t    = objfile->sf->qf->find_compunit_symtab_by_address (objfile,\n+\t\t\t\t\t\t\t\taddress);\n+\t  if (symtab != NULL)\n+\t    {\n+\t      struct symbol *sym = search_symtab (symtab, address);\n+\t      if (sym != nullptr)\n+\t\treturn sym;\n \t    }\n \t}\n     }"
    },
    {
      "sha": "f23721eee86cbfe670300b3f11334910823e763f",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f2624a35413c31c317e5da8ce7401b59ecfbfa5/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f2624a35413c31c317e5da8ce7401b59ecfbfa5/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=1f2624a35413c31c317e5da8ce7401b59ecfbfa5",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-12  Tom Tromey  <tom@tromey.com>\n+\n+\tPR rust/26799:\n+\t* gdb.rust/traits.exp: Remove kfails.\n+\n 2020-11-12  Gary Benson <gbenson@redhat.com>\n \n \t* gdb.threads/tls-so_extern_main.c (tls_ptr): Add missing return"
    },
    {
      "sha": "73a75b08e5479cfc11510083ffde97e1ec391d08",
      "filename": "gdb/testsuite/gdb.rust/traits.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f2624a35413c31c317e5da8ce7401b59ecfbfa5/gdb/testsuite/gdb.rust/traits.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f2624a35413c31c317e5da8ce7401b59ecfbfa5/gdb/testsuite/gdb.rust/traits.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/traits.exp?ref=1f2624a35413c31c317e5da8ce7401b59ecfbfa5",
      "patch": "@@ -45,11 +45,5 @@ if {![runto ${srcfile}:$line]} {\n \n set readnow_p [readnow $binfile]\n \n-if { $readnow_p } {\n-    setup_kfail \"gdb/26799\" *-*-*\n-}\n gdb_test \"print *td\" \" = 23.5\"\n-if { $readnow_p } {\n-    setup_kfail \"gdb/26799\" *-*-*\n-}\n gdb_test \"print *tu\" \" = 23\""
    }
  ]
}