{
  "sha": "4330d61dfb05d77fd925efdca45091f12e3a6266",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDMzMGQ2MWRmYjA1ZDc3ZmQ5MjVlZmRjYTQ1MDkxZjEyZTNhNjI2Ng==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-29T15:34:50Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-29T15:44:09Z"
    },
    "message": "Fix crash in cp_print_value_fields\n\nPR c++/20020 concerns a crash in cp_print_value_fields.  The immediate\ncause is that cp_print_value_fields does not handle the case where\nvalue_static_field fails.  This is fixed in this patch by calling\ncp_print_static_field from the \"try\" block.\n\nDigging a bit deeper, the error occurs because GCC does not emit a\nDW_AT_const_value for a static constexpr member appearing in a\ntemplate class.  I've filed a GCC bug for this.\n\nTested on x86-64 Fedora 29.\n\ngdb/ChangeLog\n2019-05-29  Tom Tromey  <tromey@adacore.com>\n\n\tPR c++/20020:\n\t* cp-valprint.c (cp_print_value_fields): Call\n\tcp_print_static_field inside \"try\".\n\ngdb/testsuite/ChangeLog\n2019-05-29  Tom Tromey  <tromey@adacore.com>\n\n\tPR c++/20020:\n\t* gdb.cp/constexpr-field.exp: New file.\n\t* gdb.cp/constexpr-field.cc: New file.",
    "tree": {
      "sha": "df204aed8586f17ce5b39768483887a843ce036a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/df204aed8586f17ce5b39768483887a843ce036a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4330d61dfb05d77fd925efdca45091f12e3a6266",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4330d61dfb05d77fd925efdca45091f12e3a6266",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4330d61dfb05d77fd925efdca45091f12e3a6266",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4330d61dfb05d77fd925efdca45091f12e3a6266/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6ff185b89017b16e9092142515f0a119b684ac72",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ff185b89017b16e9092142515f0a119b684ac72",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6ff185b89017b16e9092142515f0a119b684ac72"
    }
  ],
  "stats": {
    "total": 97,
    "additions": 90,
    "deletions": 7
  },
  "files": [
    {
      "sha": "82655ea247b1df6c0aa0f595759f5d45833d1ac2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4330d61dfb05d77fd925efdca45091f12e3a6266/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4330d61dfb05d77fd925efdca45091f12e3a6266/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4330d61dfb05d77fd925efdca45091f12e3a6266",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-29  Tom Tromey  <tromey@adacore.com>\n+\n+\tPR c++/20020:\n+\t* cp-valprint.c (cp_print_value_fields): Call\n+\tcp_print_static_field inside \"try\".\n+\n 2019-05-29  Tom Tromey  <tromey@adacore.com>\n \n \t* inflow.c (struct terminal_info): Add default operator=."
    },
    {
      "sha": "d8d5c06fd1eb03abf3127812f689614e3e4e6ae2",
      "filename": "gdb/cp-valprint.c",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4330d61dfb05d77fd925efdca45091f12e3a6266/gdb/cp-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4330d61dfb05d77fd925efdca45091f12e3a6266/gdb/cp-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cp-valprint.c?ref=4330d61dfb05d77fd925efdca45091f12e3a6266",
      "patch": "@@ -329,22 +329,20 @@ cp_print_value_fields (struct type *type, struct type *real_type,\n \t\t}\n \t      else if (field_is_static (&TYPE_FIELD (type, i)))\n \t\t{\n-\t\t  struct value *v = NULL;\n-\n \t\t  try\n \t\t    {\n-\t\t      v = value_static_field (type, i);\n-\t\t    }\n+\t\t      struct value *v = value_static_field (type, i);\n \n+\t\t      cp_print_static_field (TYPE_FIELD_TYPE (type, i),\n+\t\t\t\t\t     v, stream, recurse + 1,\n+\t\t\t\t\t     options);\n+\t\t    }\n \t\t  catch (const gdb_exception_error &ex)\n \t\t    {\n \t\t      fprintf_filtered (stream,\n \t\t\t\t\t_(\"<error reading variable: %s>\"),\n \t\t\t\t\tex.what ());\n \t\t    }\n-\n-\t\t  cp_print_static_field (TYPE_FIELD_TYPE (type, i),\n-\t\t\t\t\t v, stream, recurse + 1, opts);\n \t\t}\n \t      else if (i == vptr_fieldno && type == vptr_basetype)\n \t\t{"
    },
    {
      "sha": "ddcb8346e436b378899b8777bc9c6cde8e106c14",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4330d61dfb05d77fd925efdca45091f12e3a6266/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4330d61dfb05d77fd925efdca45091f12e3a6266/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4330d61dfb05d77fd925efdca45091f12e3a6266",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-29  Tom Tromey  <tromey@adacore.com>\n+\n+\tPR c++/20020:\n+\t* gdb.cp/constexpr-field.exp: New file.\n+\t* gdb.cp/constexpr-field.cc: New file.\n+\n 2019-05-29  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.base/finish.exp (finish_no_print): New proc."
    },
    {
      "sha": "ac2e514cb38b9224aecaf477838bc31c72191de0",
      "filename": "gdb/testsuite/gdb.cp/constexpr-field.cc",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4330d61dfb05d77fd925efdca45091f12e3a6266/gdb/testsuite/gdb.cp/constexpr-field.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4330d61dfb05d77fd925efdca45091f12e3a6266/gdb/testsuite/gdb.cp/constexpr-field.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/constexpr-field.cc?ref=4330d61dfb05d77fd925efdca45091f12e3a6266",
      "patch": "@@ -0,0 +1,37 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+template<typename T>\n+struct X\n+{\n+  static constexpr bool f = true;\n+};\n+\n+X<int> x;\n+\n+struct Y\n+{\n+  static constexpr bool f = true;\n+};\n+\n+Y y;\n+\n+int\n+main (void)\n+{\n+  return 0;\n+}"
    },
    {
      "sha": "e4849efeae9f243b4b243a8b091bf13a2f69df54",
      "filename": "gdb/testsuite/gdb.cp/constexpr-field.exp",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4330d61dfb05d77fd925efdca45091f12e3a6266/gdb/testsuite/gdb.cp/constexpr-field.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4330d61dfb05d77fd925efdca45091f12e3a6266/gdb/testsuite/gdb.cp/constexpr-field.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/constexpr-field.exp?ref=4330d61dfb05d77fd925efdca45091f12e3a6266",
      "patch": "@@ -0,0 +1,36 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# This file is part of the gdb testsuite.\n+\n+if {[skip_cplus_tests]} { continue }\n+\n+standard_testfile .cc\n+\n+if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile \\\n+\t {c++ debug additional_flags=-std=c++17}]} {\n+    return -1\n+}\n+\n+if {![runto_main]} {\n+    perror \"couldn't run to breakpoint\"\n+    continue\n+}\n+\n+# \"x\" sometimes isn't available due to\n+# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90526\n+gdb_test \"print x\" \" = {static f = .*}\"\n+\n+gdb_test \"print y\" \" = {static f = true}\""
    }
  ]
}