{
  "sha": "94b24c74e8658826ae8a688c0eb59685a7db03b8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTRiMjRjNzRlODY1ODgyNmFlOGE2ODhjMGViNTk2ODVhN2RiMDNiOA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-12-04T21:43:54Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-12-04T21:43:54Z"
    },
    "message": "gdb: pass inferior to get_linux_inferior_data\n\nPass to get_linux_inferior_data the inferior for which we want to obtain\nthe linux-specific data, rather than assuming the current inferior.\nThis helps slightly reduce the diff in the upcoming main patch.\n\nUpdate the sole caller to pass the current inferior.\n\ngdb/ChangeLog:\n\n\t* linux-tdep.c (get_linux_inferior_data): Add inferior\n\tparameter.\n\t(linux_vsyscall_range): Pass current inferior.\n\nChange-Id: Ie4b61190e4a2e89b5b55a140cfecd4de66d92393",
    "tree": {
      "sha": "eebc5142d486e8bf9154ae203b12ecff30f8eb99",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eebc5142d486e8bf9154ae203b12ecff30f8eb99"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/94b24c74e8658826ae8a688c0eb59685a7db03b8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/94b24c74e8658826ae8a688c0eb59685a7db03b8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/94b24c74e8658826ae8a688c0eb59685a7db03b8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/94b24c74e8658826ae8a688c0eb59685a7db03b8/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bab37966cfd192a12d5d1d259c7009a02cefe8b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bab37966cfd192a12d5d1d259c7009a02cefe8b3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bab37966cfd192a12d5d1d259c7009a02cefe8b3"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 10,
    "deletions": 6
  },
  "files": [
    {
      "sha": "f1a292258d48f58516e2faa77211f0bddae91c59",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/94b24c74e8658826ae8a688c0eb59685a7db03b8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/94b24c74e8658826ae8a688c0eb59685a7db03b8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=94b24c74e8658826ae8a688c0eb59685a7db03b8",
      "patch": "@@ -1,3 +1,9 @@\n+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* linux-tdep.c (get_linux_inferior_data): Add inferior\n+\tparameter.\n+\t(linux_vsyscall_range): Pass current inferior.\n+\n 2020-12-04  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* infrun.c (displaced_step_prepare_throw): Change return type to"
    },
    {
      "sha": "655a2c33737dbbb79ba0ff27e0aeb4a8c2dae759",
      "filename": "gdb/linux-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/94b24c74e8658826ae8a688c0eb59685a7db03b8/gdb/linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/94b24c74e8658826ae8a688c0eb59685a7db03b8/gdb/linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-tdep.c?ref=94b24c74e8658826ae8a688c0eb59685a7db03b8",
      "patch": "@@ -217,13 +217,11 @@ invalidate_linux_cache_inf (struct inferior *inf)\n    valid INFO pointer.  */\n \n static struct linux_info *\n-get_linux_inferior_data (void)\n+get_linux_inferior_data (inferior *inf)\n {\n-  struct linux_info *info;\n-  struct inferior *inf = current_inferior ();\n+  linux_info *info = linux_inferior_data.get (inf);\n \n-  info = linux_inferior_data.get (inf);\n-  if (info == NULL)\n+  if (info == nullptr)\n     info = linux_inferior_data.emplace (inf);\n \n   return info;\n@@ -2407,7 +2405,7 @@ linux_vsyscall_range_raw (struct gdbarch *gdbarch, struct mem_range *range)\n static int\n linux_vsyscall_range (struct gdbarch *gdbarch, struct mem_range *range)\n {\n-  struct linux_info *info = get_linux_inferior_data ();\n+  struct linux_info *info = get_linux_inferior_data (current_inferior ());\n \n   if (info->vsyscall_range_p == 0)\n     {"
    }
  ]
}