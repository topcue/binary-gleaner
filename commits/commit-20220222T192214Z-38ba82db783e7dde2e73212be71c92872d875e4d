{
  "sha": "38ba82db783e7dde2e73212be71c92872d875e4d",
  "node_id": "C_kwDOANOeidoAKDM4YmE4MmRiNzgzZTdkZGUyZTczMjEyYmU3MWM5Mjg3MmQ4NzVlNGQ",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2022-02-22T19:22:14Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2022-02-22T19:22:14Z"
    },
    "message": "Enable async mode on supported targets in target_resume.\n\nEnabling async mode above the target layer removes duplicate code in\n::resume methods of async-capable targets.  Commit 5b6d1e4fa4f\n(\"Multi-target support\") enabled async mode in do_target_resume after\ntarget_resume returns which is a step in this direction.  However,\nother callers of target_resume such as target_continue do not enable\nasync mode.  Rather than enabling async mode in each of the callers\nafter target_resume returns, enable async mode at the end of\ntarget_resume.",
    "tree": {
      "sha": "f02a9e9e2af784ede8f53ae280e254245d897c5b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f02a9e9e2af784ede8f53ae280e254245d897c5b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/38ba82db783e7dde2e73212be71c92872d875e4d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/38ba82db783e7dde2e73212be71c92872d875e4d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/38ba82db783e7dde2e73212be71c92872d875e4d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/38ba82db783e7dde2e73212be71c92872d875e4d/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cdc8e9b28598e0ededa78f67f4c374c3751b9bbe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cdc8e9b28598e0ededa78f67f4c374c3751b9bbe",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cdc8e9b28598e0ededa78f67f4c374c3751b9bbe"
    }
  ],
  "stats": {
    "total": 6,
    "additions": 3,
    "deletions": 3
  },
  "files": [
    {
      "sha": "5311822fcb847f596ca6b29908c577723632066e",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/38ba82db783e7dde2e73212be71c92872d875e4d/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/38ba82db783e7dde2e73212be71c92872d875e4d/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=38ba82db783e7dde2e73212be71c92872d875e4d",
      "patch": "@@ -2186,9 +2186,6 @@ do_target_resume (ptid_t resume_ptid, bool step, enum gdb_signal sig)\n     target_pass_signals (signal_pass);\n \n   target_resume (resume_ptid, step, sig);\n-\n-  if (target_can_async_p ())\n-    target_async (1);\n }\n \n /* Resume the inferior.  SIG is the signal to give the inferior"
    },
    {
      "sha": "658698b4e2baf38ef6b554298ed3923d2efdb99e",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/38ba82db783e7dde2e73212be71c92872d875e4d/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/38ba82db783e7dde2e73212be71c92872d875e4d/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=38ba82db783e7dde2e73212be71c92872d875e4d",
      "patch": "@@ -2673,6 +2673,9 @@ target_resume (ptid_t ptid, int step, enum gdb_signal signal)\n      thread's stop_pc as side effect.  */\n   set_executing (curr_target, ptid, true);\n   clear_inline_frame_state (curr_target, ptid);\n+\n+  if (target_can_async_p ())\n+    target_async (1);\n }\n \n /* See target.h.  */"
    }
  ]
}