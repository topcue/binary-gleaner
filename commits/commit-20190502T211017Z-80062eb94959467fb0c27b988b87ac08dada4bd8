{
  "sha": "80062eb94959467fb0c27b988b87ac08dada4bd8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODAwNjJlYjk0OTU5NDY3ZmIwYzI3Yjk4OGI4N2FjMDhkYWRhNGJkOA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-05-01T23:40:01Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-05-02T21:10:17Z"
    },
    "message": "gdb/rust: Handle printing structures containing strings\n\nWhen printing a rust structure that contains a string GDB can\ncurrently fail to read the fields that define the string. This is\nbecause GDB mistakenly treats a value that is the parent structure as\nthough it is the structure that defines the string, and then fails to\nfind the fields needed to extract a string.\n\nThe solution is to create a new value to represent the string field of\nthe parent value.\n\ngdb/ChangeLog:\n\n\t* rust-lang.c (val_print_struct): Handle printing structures\n\tcontaining strings.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.rust/simple.exp: Add new test case.\n\t* gdb.rust/simple.rs (struct StringAtOffset): New struct.\n\t(main): Initialise an instance of the new struct.",
    "tree": {
      "sha": "f52adf9f7d8ac622a03731195615afa7537661ae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f52adf9f7d8ac622a03731195615afa7537661ae"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/80062eb94959467fb0c27b988b87ac08dada4bd8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/80062eb94959467fb0c27b988b87ac08dada4bd8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/80062eb94959467fb0c27b988b87ac08dada4bd8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/80062eb94959467fb0c27b988b87ac08dada4bd8/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "06f74c5cb868cfd37af3e680d29784c217700bdf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/06f74c5cb868cfd37af3e680d29784c217700bdf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/06f74c5cb868cfd37af3e680d29784c217700bdf"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 30,
    "deletions": 0
  },
  "files": [
    {
      "sha": "bef807d474cc00437ae561d6c456c5dbd2f8d8d7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80062eb94959467fb0c27b988b87ac08dada4bd8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80062eb94959467fb0c27b988b87ac08dada4bd8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=80062eb94959467fb0c27b988b87ac08dada4bd8",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* rust-lang.c (val_print_struct): Handle printing structures\n+\tcontaining strings.\n+\n 2019-05-02  Tom Tromey  <tromey@adacore.com>\n \n \t* valarith.c (_initialize_valarith): Remove."
    },
    {
      "sha": "79f13311cd8f7f0ce2af55e87de9a83819ee1f30",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80062eb94959467fb0c27b988b87ac08dada4bd8/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80062eb94959467fb0c27b988b87ac08dada4bd8/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=80062eb94959467fb0c27b988b87ac08dada4bd8",
      "patch": "@@ -378,6 +378,14 @@ val_print_struct (struct type *type, int embedded_offset,\n \n   if (rust_slice_type_p (type) && strcmp (TYPE_NAME (type), \"&str\") == 0)\n     {\n+      /* If what we are printing here is actually a string within a\n+\t structure then VAL will be the original parent value, while TYPE\n+\t will be the type of the structure representing the string we want\n+\t to print.\n+\t However, RUST_VAL_PRINT_STR looks up the fields of the string\n+\t inside VAL, assuming that VAL is the string.\n+\t So, recreate VAL as a value representing just the string.  */\n+      val = value_at_lazy (type, value_address (val) + embedded_offset);\n       rust_val_print_str (stream, val, options);\n       return;\n     }"
    },
    {
      "sha": "93e2e41325b3ebbe2e037e0693bd5eece96aff68",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80062eb94959467fb0c27b988b87ac08dada4bd8/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80062eb94959467fb0c27b988b87ac08dada4bd8/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=80062eb94959467fb0c27b988b87ac08dada4bd8",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.rust/simple.exp: Add new test case.\n+\t* gdb.rust/simple.rs (struct StringAtOffset): New struct.\n+\t(main): Initialise an instance of the new struct.\n+\n 2019-05-01  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/packed_array_assign/aggregates.ads (Nested_Packed): New"
    },
    {
      "sha": "7211bd29be2548ed31e2822885129cdd5ac8b04e",
      "filename": "gdb/testsuite/gdb.rust/simple.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80062eb94959467fb0c27b988b87ac08dada4bd8/gdb/testsuite/gdb.rust/simple.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80062eb94959467fb0c27b988b87ac08dada4bd8/gdb/testsuite/gdb.rust/simple.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/simple.exp?ref=80062eb94959467fb0c27b988b87ac08dada4bd8",
      "patch": "@@ -239,6 +239,9 @@ gdb_test \"print custom_some\" \\\n     \" = simple::NonZeroOptimized::Value\\\\(\\[a-z\\]+::string::String .*\"\n gdb_test \"print custom_none\" \" = simple::NonZeroOptimized::Empty\"\n \n+gdb_test \"print st\" \\\n+    \" = simple::StringAtOffset {field1: \\\"hello\\\", field2: 1, field3: \\\"world\\\"}\"\n+\n proc test_one_slice {svar length base range} {\n     global hex\n "
    },
    {
      "sha": "e6e0efd3b16b9e3fd24eeb905a5c74bd50b450cc",
      "filename": "gdb/testsuite/gdb.rust/simple.rs",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80062eb94959467fb0c27b988b87ac08dada4bd8/gdb/testsuite/gdb.rust/simple.rs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80062eb94959467fb0c27b988b87ac08dada4bd8/gdb/testsuite/gdb.rust/simple.rs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/simple.rs?ref=80062eb94959467fb0c27b988b87ac08dada4bd8",
      "patch": "@@ -85,6 +85,12 @@ union Union {\n     f2: u8,\n }\n \n+struct StringAtOffset {\n+    pub field1: &'static str,\n+    pub field2: i32,\n+    pub field3: &'static str,\n+}\n+\n // A simple structure whose layout won't be changed by the compiler,\n // so that ptype/o testing will work on any platform.\n struct SimpleLayout {\n@@ -146,6 +152,8 @@ fn main () {\n     let to1 = &w[..3];\n     let to2 = &slice[..1];\n \n+    let st = StringAtOffset { field1: \"hello\", field2: 1, field3: \"world\" };\n+\n     // tests for enum optimizations\n \n     let str_some = Some(\"hi\".to_string());"
    }
  ]
}