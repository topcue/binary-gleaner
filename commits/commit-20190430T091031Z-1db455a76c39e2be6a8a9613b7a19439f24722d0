{
  "sha": "1db455a76c39e2be6a8a9613b7a19439f24722d0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWRiNDU1YTc2YzM5ZTJiZTZhOGE5NjEzYjdhMTk0MzlmMjQ3MjJkMA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-02-16T22:45:41Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-30T09:10:31Z"
    },
    "message": "gdb/fortran: better types for components of complex numbers\n\nCurrently when using $_creal and $_cimag to access the components of a\ncomplex number the types of these components will have C type names\n'float', 'double', etc.  This is because the components of a complex\nnumber are not given type names in DWARF, so GDB has to pick some\nsuitable names, and currently we always use the C names.\n\nThis commit changes the type names used based on the language, so for\nFortran we will now use the Fortran float types, and so will get the\nFortran float type names 'real', 'real*8', etc.\n\ngdb/ChangeLog:\n\n\t* dwarf2read.c (dwarf2_init_complex_target_type): Use different\n\ttypes for Fortran.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.fortran/complex.exp: Expand.\n\t* gdb.fortran/complex.f: Renamed to...\n\t* gdb.fortran/complex.f90: ...this, and extended to add more\n\tcomplex values.",
    "tree": {
      "sha": "80df9448123cfcc3c159f5e209c2ba94ddd805cc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/80df9448123cfcc3c159f5e209c2ba94ddd805cc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1db455a76c39e2be6a8a9613b7a19439f24722d0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1db455a76c39e2be6a8a9613b7a19439f24722d0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1db455a76c39e2be6a8a9613b7a19439f24722d0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1db455a76c39e2be6a8a9613b7a19439f24722d0/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b6d03bb2b65ac5c919f1d08674bbaa2a9bfb2d0c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6d03bb2b65ac5c919f1d08674bbaa2a9bfb2d0c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b6d03bb2b65ac5c919f1d08674bbaa2a9bfb2d0c"
    }
  ],
  "stats": {
    "total": 160,
    "additions": 118,
    "deletions": 42
  },
  "files": [
    {
      "sha": "2ccda008f067a6e388239b6f0e3e07963544405f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1db455a76c39e2be6a8a9613b7a19439f24722d0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1db455a76c39e2be6a8a9613b7a19439f24722d0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1db455a76c39e2be6a8a9613b7a19439f24722d0",
      "patch": "@@ -1,3 +1,9 @@\n+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\t    Chris January  <chris.january@arm.com>\n+\n+\t* dwarf2read.c (dwarf2_init_complex_target_type): Use different\n+\ttypes for Fortran.\n+\n 2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n \t    Chris January  <chris.january@arm.com>\n \t    David Lecomber  <david.lecomber@arm.com>"
    },
    {
      "sha": "571fe1e768d702d8fdff668842fc573e7716e2da",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 29,
      "deletions": 9,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1db455a76c39e2be6a8a9613b7a19439f24722d0/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1db455a76c39e2be6a8a9613b7a19439f24722d0/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=1db455a76c39e2be6a8a9613b7a19439f24722d0",
      "patch": "@@ -17545,17 +17545,37 @@ dwarf2_init_complex_target_type (struct dwarf2_cu *cu,\n   /* Try to find a suitable floating point builtin type of size BITS.\n      We're going to use the name of this type as the name for the complex\n      target type that we are about to create.  */\n-  switch (bits)\n+  switch (cu->language)\n     {\n-    case 32:\n-      tt = builtin_type (gdbarch)->builtin_float;\n-      break;\n-    case 64:\n-      tt = builtin_type (gdbarch)->builtin_double;\n+    case language_fortran:\n+      switch (bits)\n+\t{\n+\tcase 32:\n+\t  tt = builtin_f_type (gdbarch)->builtin_real;\n+\t  break;\n+\tcase 64:\n+\t  tt = builtin_f_type (gdbarch)->builtin_real_s8;\n+\t  break;\n+\tcase 96:\t/* The x86-32 ABI specifies 96-bit long double.  */\n+\tcase 128:\n+\t  tt = builtin_f_type (gdbarch)->builtin_real_s16;\n+\t  break;\n+\t}\n       break;\n-    case 96:\t/* The x86-32 ABI specifies 96-bit long double.  */\n-    case 128:\n-      tt = builtin_type (gdbarch)->builtin_long_double;\n+    default:\n+      switch (bits)\n+\t{\n+\tcase 32:\n+\t  tt = builtin_type (gdbarch)->builtin_float;\n+\t  break;\n+\tcase 64:\n+\t  tt = builtin_type (gdbarch)->builtin_double;\n+\t  break;\n+\tcase 96:\t/* The x86-32 ABI specifies 96-bit long double.  */\n+\tcase 128:\n+\t  tt = builtin_type (gdbarch)->builtin_long_double;\n+\t  break;\n+\t}\n       break;\n     }\n "
    },
    {
      "sha": "5bbf15185e2f8a4a30da7cb6424ab1c8d088a37e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1db455a76c39e2be6a8a9613b7a19439f24722d0/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1db455a76c39e2be6a8a9613b7a19439f24722d0/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=1db455a76c39e2be6a8a9613b7a19439f24722d0",
      "patch": "@@ -1,3 +1,10 @@\n+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.fortran/complex.exp: Expand.\n+\t* gdb.fortran/complex.f: Renamed to...\n+\t* gdb.fortran/complex.f90: ...this, and extended to add more\n+\tcomplex values.\n+\n 2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.fortran/intrinsics.exp: Extend to cover MOD, CEILING, FLOOR,"
    },
    {
      "sha": "136f1c4df7912776cda840869da36de184761b08",
      "filename": "gdb/testsuite/gdb.fortran/complex.exp",
      "status": "modified",
      "additions": 32,
      "deletions": 9,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1db455a76c39e2be6a8a9613b7a19439f24722d0/gdb/testsuite/gdb.fortran/complex.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1db455a76c39e2be6a8a9613b7a19439f24722d0/gdb/testsuite/gdb.fortran/complex.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/complex.exp?ref=1db455a76c39e2be6a8a9613b7a19439f24722d0",
      "patch": "@@ -13,7 +13,7 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-standard_testfile .f\n+standard_testfile .f90\n \n if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile {debug f90 quiet}]} {\n     return -1\n@@ -24,13 +24,36 @@ if ![runto MAIN__] then {\n     continue\n }\n \n-set bp_location [gdb_get_line_number \"stop\"]\n-gdb_test \"break $bp_location\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line $bp_location\\\\.\" \\\n-    \"breakpoint at stop\"\n \n-gdb_test \"continue\" \\\n-    \"Continuing\\\\..*Breakpoint.*\" \\\n-    \"continue to breakpoint\"\n+gdb_breakpoint [gdb_get_line_number \"stop\"]\n+gdb_continue_to_breakpoint \"continue\"\n+\n+gdb_test \"print c\" \" = \\\\(1000,-50\\\\)\"\n+gdb_test \"print c4\" \" = \\\\(1000,-50\\\\)\"\n+gdb_test \"print c8\" \" = \\\\(321,-22\\\\)\"\n+gdb_test \"print dc\" \" = \\\\(321,-22\\\\)\"\n+\n+setup_kfail gdb/18644 \"*-*-*\"\n+gdb_test \"print c16\" \" = \\\\(-874,19\\\\)\"\n+\n+gdb_test \"whatis c\" \"type = complex\\\\(kind=4\\\\)\"\n+gdb_test \"print \\$_creal (c)\" \" = 1000\"\n+gdb_test \"whatis \\$\" \" = real\"\n+\n+gdb_test \"whatis c4\" \"type = complex\\\\(kind=4\\\\)\"\n+gdb_test \"print \\$_creal (c4)\" \" = 1000\"\n+gdb_test \"whatis \\$\" \" = real\"\n+\n+gdb_test \"whatis c8\" \"type = complex\\\\(kind=8\\\\)\"\n+gdb_test \"print \\$_creal (c8)\" \" = 321\"\n+gdb_test \"whatis \\$\" \" = real\\\\*8\"\n+\n+gdb_test \"whatis dc\" \"type = complex\\\\(kind=8\\\\)\"\n+gdb_test \"print \\$_creal (dc)\" \" = 321\"\n+gdb_test \"whatis \\$\" \" = real\\\\*8\"\n+\n+gdb_test \"whatis c16\" \"type = complex\\\\(kind=16\\\\)\"\n+setup_kfail gdb/18644 \"*-*-*\"\n+gdb_test \"print \\$_creal (c16)\" \" = -874\"\n+gdb_test \"whatis \\$\" \" = real\\\\*16\"\n \n-gdb_test \"print c\" \"\\\\\\$$decimal = \\\\(1000,-50\\\\)\""
    },
    {
      "sha": "2f1a7879f9e58621e41015e562087fee617bbb4f",
      "filename": "gdb/testsuite/gdb.fortran/complex.f",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6d03bb2b65ac5c919f1d08674bbaa2a9bfb2d0c/gdb/testsuite/gdb.fortran/complex.f",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6d03bb2b65ac5c919f1d08674bbaa2a9bfb2d0c/gdb/testsuite/gdb.fortran/complex.f",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/complex.f?ref=b6d03bb2b65ac5c919f1d08674bbaa2a9bfb2d0c",
      "patch": "@@ -1,24 +0,0 @@\n-c Copyright 2007-2019 Free Software Foundation, Inc.\n-\n-c This program is free software; you can redistribute it and/or modify\n-c it under the terms of the GNU General Public License as published by\n-c the Free Software Foundation; either version 3 of the License, or\n-c (at your option) any later version.\n-c\n-c This program is distributed in the hope that it will be useful,\n-c but WITHOUT ANY WARRANTY; without even the implied warranty of\n-c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-c GNU General Public License for more details.\n-c\n-c You should have received a copy of the GNU General Public License\n-c along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-      real*8 a,b\n-      complex*16 c\n-\n-      a = 1000\n-      b = -50\n-      c = cmplx(a,b)\n-      write(*,*) s\n-      stop\n-      end"
    },
    {
      "sha": "2b88c1ee0bbb8a92a9b376b3fbe95abdf7f558ae",
      "filename": "gdb/testsuite/gdb.fortran/complex.f90",
      "status": "added",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1db455a76c39e2be6a8a9613b7a19439f24722d0/gdb/testsuite/gdb.fortran/complex.f90",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1db455a76c39e2be6a8a9613b7a19439f24722d0/gdb/testsuite/gdb.fortran/complex.f90",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/complex.f90?ref=1db455a76c39e2be6a8a9613b7a19439f24722d0",
      "patch": "@@ -0,0 +1,44 @@\n+! Copyright 2007-2019 Free Software Foundation, Inc.\n+!\n+! This program is free software; you can redistribute it and/or modify\n+! it under the terms of the GNU General Public License as published by\n+! the Free Software Foundation; either version 3 of the License, or\n+! (at your option) any later version.\n+!\n+! This program is distributed in the hope that it will be useful,\n+! but WITHOUT ANY WARRANTY; without even the implied warranty of\n+! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+! GNU General Public License for more details.\n+!\n+! You should have received a copy of the GNU General Public License\n+! along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+program test_complex\n+  real*4 r4a, r4b\n+  real*8 r8a, r8b\n+  real*16 r16a, r16b\n+\n+  complex c\n+  complex(kind=4) c4\n+  complex(kind=8) c8\n+  double complex dc\n+  complex(kind=16) c16\n+\n+  r4a = 1000\n+  r4b = -50\n+  r8a = 321\n+  r8b = -22\n+  r16a = -874\n+  r16b = 19\n+\n+  c = cmplx(r4a,r4b)\n+  c4 = cmplx(r4a,r4b)\n+  c8 = cmplx(r8a, r8b)\n+  dc = cmplx(r8a, r8b)\n+  c16 = cmplx(r16a, r16b)\n+\n+  print *, c, c4, c8, dc, c16\t! stop\n+  print *, r4a, r4b\n+  print *, r8a, r8b\n+  print *, r16a, r16b\n+end program test_complex"
    }
  ]
}