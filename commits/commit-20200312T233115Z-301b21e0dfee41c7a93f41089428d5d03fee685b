{
  "sha": "301b21e0dfee41c7a93f41089428d5d03fee685b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzAxYjIxZTBkZmVlNDFjN2E5M2Y0MTA4OTQyOGQ1ZDAzZmVlNjg1Yg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-12T23:31:15Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-12T23:31:15Z"
    },
    "message": "[gdb/testsuite] Fix check-read1 FAIL in gdb.tui/corefile-run.exp\n\nWith test-case gdb.tui/corefile-run.exp and make target check-read1, I run\ninto:\n...\nFAIL: gdb.tui/corefile-run.exp: run until the end\n...\n\nIn more detail, using -v:\n...\nPASS: gdb.tui/corefile-run.exp: load corefile\n^M+++ _ctl_0x0d\n^[[17d+++ _csi_d <<<17>>>\n^[[M+++ _csi_M <<<>>>\n^[[24d+++ _csi_d <<<24>>>\n(INSERT <<(>>\ngINSERT <<g>>\ndINSERT <<d>>\nbINSERT <<b>>\n)INSERT <<)>>\n INSERT << >>\nFAIL: gdb.tui/corefile-run.exp: run until the end\n...\n\nWith some debugging code added in wait_for, what happens becomes more clear:\n...\n\t    if {[regexp -- $wait_for $prev]} {\n+\t\tverbose -log \"\\nwait_for: MATCHED line ($_cur_y): \\\"$prev\\\"\"\n+\t\tverbose -log \"wait_for: AGAINST regexp: \\\"$wait_for\\\"\"\n...\n\nIn corefile-run.exp, we execute:\n...\nTerm::command \"run\"\n...\nand in proc Term::command, we send the command, and then call wait_for:\n...\n    proc command {cmd} {\n        send_gdb \"$cmd\\n\"\n        wait_for [string_to_regexp $cmd]\n    }\n...\nwhich first waits for the command string, and then for the prompt.\n\nIn this case however, the matching of the command string triggers on a\nprevious line:\n...\nwait_for: MATCHED line (16): \\\n  \"(gdb) core-file corefile-run.core[New LWP 6426] <lots-of-spaces>\"\nwait_for: AGAINST regexp: \"run\"\n...\nand from there on things go out of sync, eventually resulting in the FAIL.\n\nFix this in proc command by more precisely specifying the expected pattern:\nadding a ^$gdb_prompt prefix.\n\nAdd a command_no_prompt_prefix variant to use for initial terminal commands\nwhere there's no prompt yet.\n\nTested gdb.tui/*.exp on x86_64-linux, with make target check and check-read1.\n\ngdb/testsuite/ChangeLog:\n\n2020-03-13  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/tuiterm.exp (Term::command_no_prompt_prefix): New proc.\n\t(Term::command): Use prompt prefix.\n\t(Term::enter_tui): Use command_no_prompt_prefix instead of prefix.\n\t* gdb.tui/tui-layout-asm-short-prog.exp: Use\n\tcommand_no_prompt_prefix instead of prefix.\n\t* gdb.tui/tui-layout-asm.exp: Same.",
    "tree": {
      "sha": "8e835d55a80852a10ac1e0006f7d2f3ee7cb1911",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8e835d55a80852a10ac1e0006f7d2f3ee7cb1911"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/301b21e0dfee41c7a93f41089428d5d03fee685b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/301b21e0dfee41c7a93f41089428d5d03fee685b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/301b21e0dfee41c7a93f41089428d5d03fee685b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/301b21e0dfee41c7a93f41089428d5d03fee685b/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6ba0a321037b748f0b1285c44af762021a380bd3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ba0a321037b748f0b1285c44af762021a380bd3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6ba0a321037b748f0b1285c44af762021a380bd3"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 24,
    "deletions": 4
  },
  "files": [
    {
      "sha": "de419eba1872afc0ba6dba3317c9f1132b4036d4",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/301b21e0dfee41c7a93f41089428d5d03fee685b/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/301b21e0dfee41c7a93f41089428d5d03fee685b/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=301b21e0dfee41c7a93f41089428d5d03fee685b",
      "patch": "@@ -1,3 +1,12 @@\n+2020-03-13  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/tuiterm.exp (Term::command_no_prompt_prefix): New proc.\n+\t(Term::command): Use prompt prefix.\n+\t(Term::enter_tui): Use command_no_prompt_prefix instead of prefix.\n+\t* gdb.tui/tui-layout-asm-short-prog.exp: Use\n+\tcommand_no_prompt_prefix instead of prefix.\n+\t* gdb.tui/tui-layout-asm.exp: Same.\n+\n 2020-03-12  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdb.base/break-interp.exp: Use foreach_with_prefix."
    },
    {
      "sha": "4aa1ba3046df41fd67b6f6aaeab50c85cc4e220c",
      "filename": "gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/301b21e0dfee41c7a93f41089428d5d03fee685b/gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/301b21e0dfee41c7a93f41089428d5d03fee685b/gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.exp?ref=301b21e0dfee41c7a93f41089428d5d03fee685b",
      "patch": "@@ -32,7 +32,7 @@ if {![Term::prepare_for_tui]} {\n }\n \n # This puts us into TUI mode, and should display the ASM window.\n-Term::command \"layout asm\"\n+Term::command_no_prompt_prefix \"layout asm\"\n Term::check_box_contents \"check asm box contents\" 0 0 80 15 \"<_start>\"\n \n # Record the first line of output, we'll need this later."
    },
    {
      "sha": "257321fec75b17431923e713ab2ea9f4b3af0266",
      "filename": "gdb/testsuite/gdb.tui/tui-layout-asm.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/301b21e0dfee41c7a93f41089428d5d03fee685b/gdb/testsuite/gdb.tui/tui-layout-asm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/301b21e0dfee41c7a93f41089428d5d03fee685b/gdb/testsuite/gdb.tui/tui-layout-asm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/tui-layout-asm.exp?ref=301b21e0dfee41c7a93f41089428d5d03fee685b",
      "patch": "@@ -30,7 +30,7 @@ if {![Term::prepare_for_tui]} {\n }\n \n # This puts us into TUI mode, and should display the ASM window.\n-Term::command \"layout asm\"\n+Term::command_no_prompt_prefix \"layout asm\"\n Term::check_box_contents \"check asm box contents\" 0 0 80 15 \"<main>\"\n \n # Scroll the ASM window down using the down arrow key.  In an ideal"
    },
    {
      "sha": "8c9f97af6ec5c035eb63ac19b2d46146911f12d7",
      "filename": "gdb/testsuite/lib/tuiterm.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 2,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/301b21e0dfee41c7a93f41089428d5d03fee685b/gdb/testsuite/lib/tuiterm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/301b21e0dfee41c7a93f41089428d5d03fee685b/gdb/testsuite/lib/tuiterm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/tuiterm.exp?ref=301b21e0dfee41c7a93f41089428d5d03fee685b",
      "patch": "@@ -489,16 +489,27 @@ namespace eval Term {\n \t    return 0\n \t}\n \n-\tcommand \"tui enable\"\n+\tcommand_no_prompt_prefix \"tui enable\"\n \treturn 1\n     }\n \n     # Send the command CMD to gdb, then wait for a gdb prompt to be\n     # seen in the TUI.  CMD should not end with a newline -- that will\n     # be supplied by this function.\n     proc command {cmd} {\n+\tglobal gdb_prompt\n+\tsend_gdb \"$cmd\\n\"\n+\tset str [string_to_regexp $cmd]\n+\tset str \"^$gdb_prompt $str\"\n+\twait_for $str\n+    }\n+\n+    # As proc command, but don't wait for a initial prompt.  This is used for\n+    # inital terminal commands, where there's no prompt yet.\n+    proc command_no_prompt_prefix {cmd} {\n \tsend_gdb \"$cmd\\n\"\n-\twait_for [string_to_regexp $cmd]\n+\tset str [string_to_regexp $cmd]\n+\twait_for \"^$str\"\n     }\n \n     # Return the text of screen line N, without attributes.  Lines are"
    }
  ]
}