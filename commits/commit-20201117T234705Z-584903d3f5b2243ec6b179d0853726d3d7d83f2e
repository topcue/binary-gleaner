{
  "sha": "584903d3f5b2243ec6b179d0853726d3d7d83f2e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTg0OTAzZDNmNWIyMjQzZWM2YjE3OWQwODUzNzI2ZDNkN2Q4M2YyZQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-11-17T22:53:27Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-11-17T23:47:05Z"
    },
    "message": "gdb: make get_array_bounds return bool\n\nObvious change from int to bool.  I took the opportunity to move the doc\nto the header file.\n\ngdb/ChangeLog:\n\n\t* gdbtypes.h (get_array_bounds): Return bool, adjust some\n\tcallers.  Move doc here.\n\t* gdbtypes.c (get_array_bounds): Return bool\n\nChange-Id: I8ed20298cb0927963c1f09b345966533d5ed06e2",
    "tree": {
      "sha": "83227830cb2f2dff73323c813e4eb54e93dfcfb5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/83227830cb2f2dff73323c813e4eb54e93dfcfb5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/584903d3f5b2243ec6b179d0853726d3d7d83f2e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/584903d3f5b2243ec6b179d0853726d3d7d83f2e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/584903d3f5b2243ec6b179d0853726d3d7d83f2e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/584903d3f5b2243ec6b179d0853726d3d7d83f2e/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3d955acb36f483c05724181da5ffba46b1303c43",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d955acb36f483c05724181da5ffba46b1303c43",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3d955acb36f483c05724181da5ffba46b1303c43"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 22,
    "deletions": 14
  },
  "files": [
    {
      "sha": "e0be2afb8d55bb1e6110fb25211764ee93380790",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/584903d3f5b2243ec6b179d0853726d3d7d83f2e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/584903d3f5b2243ec6b179d0853726d3d7d83f2e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=584903d3f5b2243ec6b179d0853726d3d7d83f2e",
      "patch": "@@ -1,3 +1,9 @@\n+2020-11-17  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* gdbtypes.h (get_array_bounds): Return bool, adjust some\n+\tcallers.  Move doc here.\n+\t* gdbtypes.c (get_array_bounds): Return bool\n+\n 2020-11-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* arc-linux-tdep.c (arc_linux_sw_breakpoint_from_kind): Add an"
    },
    {
      "sha": "87fc4e55eb2b564eca868354d2388322c5c782fc",
      "filename": "gdb/compile/compile-c-types.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/584903d3f5b2243ec6b179d0853726d3d7d83f2e/gdb/compile/compile-c-types.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/584903d3f5b2243ec6b179d0853726d3d7d83f2e/gdb/compile/compile-c-types.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-c-types.c?ref=584903d3f5b2243ec6b179d0853726d3d7d83f2e",
      "patch": "@@ -70,7 +70,7 @@ convert_array (compile_c_instance *context, struct type *type)\n     {\n       LONGEST low_bound, high_bound, count;\n \n-      if (get_array_bounds (type, &low_bound, &high_bound) == 0)\n+      if (!get_array_bounds (type, &low_bound, &high_bound))\n \tcount = -1;\n       else\n \t{"
    },
    {
      "sha": "e284ceb3e455eae5ab36ba459ee9a36915a9623d",
      "filename": "gdb/compile/compile-cplus-types.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/584903d3f5b2243ec6b179d0853726d3d7d83f2e/gdb/compile/compile-cplus-types.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/584903d3f5b2243ec6b179d0853726d3d7d83f2e/gdb/compile/compile-cplus-types.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-cplus-types.c?ref=584903d3f5b2243ec6b179d0853726d3d7d83f2e",
      "patch": "@@ -491,7 +491,7 @@ compile_cplus_convert_array (compile_cplus_instance *instance,\n     {\n       LONGEST low_bound, high_bound, count;\n \n-      if (get_array_bounds (type, &low_bound, &high_bound) == 0)\n+      if (!get_array_bounds (type, &low_bound, &high_bound))\n \tcount = -1;\n       else\n \t{"
    },
    {
      "sha": "cde077027343a2d28160e3a755fc2b98836db800",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 5,
      "deletions": 10,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/584903d3f5b2243ec6b179d0853726d3d7d83f2e/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/584903d3f5b2243ec6b179d0853726d3d7d83f2e/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=584903d3f5b2243ec6b179d0853726d3d7d83f2e",
      "patch": "@@ -1119,14 +1119,9 @@ get_discrete_bounds (struct type *type, LONGEST *lowp, LONGEST *highp)\n     }\n }\n \n-/* Assuming TYPE is a simple, non-empty array type, compute its upper\n-   and lower bound.  Save the low bound into LOW_BOUND if not NULL.\n-   Save the high bound into HIGH_BOUND if not NULL.\n-\n-   Return 1 if the operation was successful.  Return zero otherwise,\n-   in which case the values of LOW_BOUND and HIGH_BOUNDS are unmodified.  */\n+/* See gdbtypes.h  */\n \n-int\n+bool\n get_array_bounds (struct type *type, LONGEST *low_bound, LONGEST *high_bound)\n {\n   struct type *index = type->index_type ();\n@@ -1135,19 +1130,19 @@ get_array_bounds (struct type *type, LONGEST *low_bound, LONGEST *high_bound)\n   int res;\n \n   if (index == NULL)\n-    return 0;\n+    return false;\n \n   res = get_discrete_bounds (index, &low, &high);\n   if (res == -1)\n-    return 0;\n+    return false;\n \n   if (low_bound)\n     *low_bound = low;\n \n   if (high_bound)\n     *high_bound = high;\n \n-  return 1;\n+  return true;\n }\n \n /* Assuming that TYPE is a discrete type and VAL is a valid integer"
    },
    {
      "sha": "2b6f599f4c7a6aa1d5ba8a4b162ddedc09262fe0",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/584903d3f5b2243ec6b179d0853726d3d7d83f2e/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/584903d3f5b2243ec6b179d0853726d3d7d83f2e/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=584903d3f5b2243ec6b179d0853726d3d7d83f2e",
      "patch": "@@ -2435,8 +2435,15 @@ extern int get_vptr_fieldno (struct type *, struct type **);\n \n extern int get_discrete_bounds (struct type *, LONGEST *, LONGEST *);\n \n-extern int get_array_bounds (struct type *type, LONGEST *low_bound,\n-\t\t\t     LONGEST *high_bound);\n+/* Assuming TYPE is a simple, non-empty array type, compute its upper\n+   and lower bound.  Save the low bound into LOW_BOUND if not NULL.\n+   Save the high bound into HIGH_BOUND if not NULL.\n+\n+   Return true if the operation was successful.  Return false otherwise,\n+   in which case the values of LOW_BOUND and HIGH_BOUNDS are unmodified.  */\n+\n+extern bool get_array_bounds (struct type *type, LONGEST *low_bound,\n+\t\t\t      LONGEST *high_bound);\n \n extern int discrete_position (struct type *type, LONGEST val, LONGEST *pos);\n "
    }
  ]
}