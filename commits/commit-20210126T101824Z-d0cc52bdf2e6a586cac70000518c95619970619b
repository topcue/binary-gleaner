{
  "sha": "d0cc52bdf2e6a586cac70000518c95619970619b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDBjYzUyYmRmMmU2YTU4NmNhYzcwMDAwNTE4Yzk1NjE5OTcwNjE5Yg==",
  "commit": {
    "author": {
      "name": "Shahab Vahedi",
      "email": "shahab@synopsys.com",
      "date": "2020-01-14T23:14:24Z"
    },
    "committer": {
      "name": "Shahab Vahedi",
      "email": "shahab@synopsys.com",
      "date": "2021-01-26T10:18:24Z"
    },
    "message": "gdb: Add default reggroups for ARC\n\nThere is no reggroups set in ARC.  If a \"maintenance print reggroups\"\ncommand is issued, the default register set is dumped (which is fine).\n\nHowever, if a new group is added via an XML file, then that will\nbecome the _only_ group.  This behavior causes gdb.xml/tdesc-regs.exp\nto fail.\n\nFixes gdb.xml/tdesc-regs.exp on ARC.\n\ngdb/ChangeLog:\n\n\t* arc-tdep.c (arc_add_reggroups): New function.\n\t(arc_gdbarch_init): Call arc_add_reggroups.",
    "tree": {
      "sha": "f6ca85090384d0a693c20158487d4bca7e91a8dd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f6ca85090384d0a693c20158487d4bca7e91a8dd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d0cc52bdf2e6a586cac70000518c95619970619b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d0cc52bdf2e6a586cac70000518c95619970619b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d0cc52bdf2e6a586cac70000518c95619970619b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d0cc52bdf2e6a586cac70000518c95619970619b/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "ac3571d9414d13b1f62b8efd58d6512ad29e7e33",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac3571d9414d13b1f62b8efd58d6512ad29e7e33",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ac3571d9414d13b1f62b8efd58d6512ad29e7e33"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 23,
    "deletions": 0
  },
  "files": [
    {
      "sha": "0836eb36e6d175e72b3f5671668a3622fb8b8d3a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0cc52bdf2e6a586cac70000518c95619970619b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0cc52bdf2e6a586cac70000518c95619970619b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d0cc52bdf2e6a586cac70000518c95619970619b",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-26  Shahab Vahedi  <shahab@synopsys.com>\n+\n+\t* arc-tdep.c (arc_add_reggroups): New function.\n+\t(arc_gdbarch_init): Call arc_add_reggroups.\n+\n 2021-01-26  Anton Kolesov  <anton.kolesov@synopsys.com>\n \n \t* arc-tdep.c (arc_skip_prologue): Log \"pc\" address."
    },
    {
      "sha": "8a1da1a9868cc9a478263ade7b87e6bd5215aa7a",
      "filename": "gdb/arc-tdep.c",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0cc52bdf2e6a586cac70000518c95619970619b/gdb/arc-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0cc52bdf2e6a586cac70000518c95619970619b/gdb/arc-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arc-tdep.c?ref=d0cc52bdf2e6a586cac70000518c95619970619b",
      "patch": "@@ -27,6 +27,7 @@\n #include \"frame-base.h\"\n #include \"frame-unwind.h\"\n #include \"gdbcore.h\"\n+#include \"reggroups.h\"\n #include \"gdbcmd.h\"\n #include \"objfiles.h\"\n #include \"osabi.h\"\n@@ -1954,6 +1955,20 @@ static const struct frame_base arc_normal_base = {\n   arc_frame_base_address\n };\n \n+/* Add all the expected register sets into GDBARCH.  */\n+\n+static void\n+arc_add_reggroups (struct gdbarch *gdbarch)\n+{\n+  reggroup_add (gdbarch, general_reggroup);\n+  reggroup_add (gdbarch, float_reggroup);\n+  reggroup_add (gdbarch, system_reggroup);\n+  reggroup_add (gdbarch, vector_reggroup);\n+  reggroup_add (gdbarch, all_reggroup);\n+  reggroup_add (gdbarch, save_reggroup);\n+  reggroup_add (gdbarch, restore_reggroup);\n+}\n+\n static enum arc_isa\n mach_type_to_arc_isa (const unsigned long mach)\n {\n@@ -2352,6 +2367,9 @@ arc_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   /* This doesn't include possible long-immediate value.  */\n   set_gdbarch_max_insn_length (gdbarch, 4);\n \n+  /* Add default register groups.  */\n+  arc_add_reggroups (gdbarch);\n+\n   /* Frame unwinders and sniffers.  */\n   dwarf2_frame_set_init_reg (gdbarch, arc_dwarf2_frame_init_reg);\n   dwarf2_append_unwinders (gdbarch);"
    }
  ]
}