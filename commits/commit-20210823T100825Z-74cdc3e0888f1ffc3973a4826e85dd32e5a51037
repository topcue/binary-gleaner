{
  "sha": "74cdc3e0888f1ffc3973a4826e85dd32e5a51037",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzRjZGMzZTA4ODhmMWZmYzM5NzNhNDgyNmU4NWRkMzJlNWE1MTAzNw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-08-23T10:08:25Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-08-23T10:08:25Z"
    },
    "message": "[gdb/testsuite] Use compiler-generated instead of gas-generated stabs\n\nThe test-case gdb.dwarf2/dw2-ranges.exp is the only one in the gdb testsuite\nthat uses gas-generated stabs.\n\nWhile the use seems natural alongside the use of gas-generated dwarf in the\nsame test-case, there are a few known issues, filed on the gdb side as:\n- PR symtab/12497 - \"stabs: PIE relocation does not work\"\n- PR symtab/28221 - \"[readnow, stabs] FAIL: gdb.dwarf2/dw2-ranges.exp: \\\n  info line func\"\nand on the gas side as:\n- PR gas/28233 - \"[gas, --gstabs] Generate stabs more similar to gcc\"\n\nThe test-case contains a KFAIL for PR12497, but it's outdated and fails to\ntrigger.\n\nThe intention of the test-case is to test gas-generated dwarf, and using\ngcc-generated stabs instead of gas-generated stabs works fine.\n\nSupporting compiler-generated stabs is already a corner-case for gdb, and\nthere's no current commitment/incentive to support/workaround gas-generated\nstabs, which can be considered a corner-case of a corner-case.\n\nWork around these problem by using compiler-generated stabs in the test-case.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2021-08-22  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.dwarf2/dw2-ranges.exp: Use compiler-generated stabs.",
    "tree": {
      "sha": "c8aea60b0ed7f1613dcd5cdfa89f0315ed4a821f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c8aea60b0ed7f1613dcd5cdfa89f0315ed4a821f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/74cdc3e0888f1ffc3973a4826e85dd32e5a51037",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74cdc3e0888f1ffc3973a4826e85dd32e5a51037",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/74cdc3e0888f1ffc3973a4826e85dd32e5a51037",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74cdc3e0888f1ffc3973a4826e85dd32e5a51037/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5ef670d81fd222ae5edfa1428ad48710f5e10d35",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5ef670d81fd222ae5edfa1428ad48710f5e10d35",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5ef670d81fd222ae5edfa1428ad48710f5e10d35"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 3,
    "deletions": 12
  },
  "files": [
    {
      "sha": "288fc941afa451f7dd8e6aa2fe0c141066ff756f",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-ranges.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 12,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74cdc3e0888f1ffc3973a4826e85dd32e5a51037/gdb/testsuite/gdb.dwarf2/dw2-ranges.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74cdc3e0888f1ffc3973a4826e85dd32e5a51037/gdb/testsuite/gdb.dwarf2/dw2-ranges.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-ranges.exp?ref=74cdc3e0888f1ffc3973a4826e85dd32e5a51037",
      "patch": "@@ -35,7 +35,6 @@ if !$gcc_compiled {\n standard_testfile .c -2.c -3.c\n set asmfile [standard_output_file ${testfile}.s]\n set asmfile2 [standard_output_file ${testfile}2.s]\n-set asmfile3 [standard_output_file ${testfile}3.s]\n set objfile [standard_output_file ${testfile}.o]\n set objfile2 [standard_output_file ${testfile}2.o]\n set objfile3 [standard_output_file ${testfile}3.o]\n@@ -55,8 +54,7 @@ if {[gdb_compile \"${srcdir}/${subdir}/${srcfile2}\" \"${asmfile2}\" assembly {}] !=\n # STABS compilation is intentional as it tests the STABS lookup where is no\n # partial_symtab->psymtabs_addrmap supported for that CU (Compilation Unit) in\n # a file containing psymtabs_addrmap-supporting DWARF CUs.\n-if {[gdb_compile \"${srcdir}/${subdir}/${srcfile3}\" \"${asmfile3}\" assembly {}] != \"\"\n-    || [gdb_compile \"${asmfile3}\" \"${objfile3}\" object {additional_flags=-gstabs}] != \"\" } {\n+if {[gdb_compile \"${srcdir}/${subdir}/${srcfile3}\" \"${objfile3}\" object {additional_flags=-gstabs}] != \"\" } {\n     return -1\n }\n \n@@ -82,12 +80,5 @@ gdb_test \"info line func\" \"Line \\[0-9\\]* of .* starts at address .* and ends at\n gdb_test \"info line main2\" \"Line \\[0-9\\]* of .* starts at address .* and ends at .*\"\n gdb_test \"info line func2\" \"Line \\[0-9\\]* of .* starts at address .* and ends at .*\"\n \n-set test \"info line main3\"\n-gdb_test_multiple $test $test {\n-    -re \"Line \\[0-9\\]* of .* starts at address .* and ends at .*\\r\\n$gdb_prompt $\" {\n-\tpass $test\n-    }\n-    -re \"Line \\[0-9\\]* of .* is at address .* but contains no code\\\\.\\r\\n$gdb_prompt $\" {\n-\tkfail symtab/12497 $test\n-    }\n-}\n+gdb_test \"info line main3\" \\\n+    \"Line \\[0-9\\]* of .* starts at address .* and ends at .*\""
    }
  ]
}