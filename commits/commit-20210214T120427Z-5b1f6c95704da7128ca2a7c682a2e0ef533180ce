{
  "sha": "5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWIxZjZjOTU3MDRkYTcxMjhjYTJhN2M2ODJhMmUwZWY1MzMxODBjZQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-02-12T23:21:17Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-02-14T12:04:27Z"
    },
    "message": "ld testsuite: change unresolved to unsupported/fail\n\n\"unresolved\" as a test result means runtest returns an error, which\ncan be confusing when there is no apparent error unless you look in\n.log files.  In particular many tests are skipped without reporting an\nerror if no target C compiler is found, but if a target C compiler is\nfound but won't compile a testcase for some reason we used to mark the\ntest as unresolved.  Which is no more worthy of an error than when\nlacking a C compiler entirely.\n\n\t* testsuite/ld-cdtest/cdtest.exp,\n\t* testsuite/ld-checks/checks.exp,\n\t* testsuite/ld-elf/binutils.exp,\n\t* testsuite/ld-elf/compress.exp,\n\t* testsuite/ld-elf/dwarf.exp,\n\t* testsuite/ld-elf/exclude.exp,\n\t* testsuite/ld-elf/frame.exp,\n\t* testsuite/ld-elf/indirect.exp,\n\t* testsuite/ld-elf/linux-x86.exp,\n\t* testsuite/ld-elf/sec-to-seg.exp,\n\t* testsuite/ld-elf/tls_common.exp,\n\t* testsuite/ld-elfcomm/elfcomm.exp,\n\t* testsuite/ld-elfvers/vers.exp,\n\t* testsuite/ld-elfvsb/elfvsb.exp,\n\t* testsuite/ld-elfweak/elfweak.exp,\n\t* testsuite/ld-ifunc/binutils.exp,\n\t* testsuite/ld-mips-elf/mips-elf-flags.exp,\n\t* testsuite/ld-misc/defsym.exp,\n\t* testsuite/ld-mn10300/mn10300.exp,\n\t* testsuite/ld-plugin/lto.exp,\n\t* testsuite/ld-plugin/plugin.exp,\n\t* testsuite/ld-scripts/align.exp,\n\t* testsuite/ld-scripts/assert.exp,\n\t* testsuite/ld-scripts/crossref.exp,\n\t* testsuite/ld-scripts/defined.exp,\n\t* testsuite/ld-scripts/extern.exp,\n\t* testsuite/ld-scripts/log2.exp,\n\t* testsuite/ld-scripts/map-address.exp,\n\t* testsuite/ld-scripts/phdrs.exp,\n\t* testsuite/ld-scripts/phdrs2.exp,\n\t* testsuite/ld-scripts/script.exp,\n\t* testsuite/ld-scripts/section-flags.exp,\n\t* testsuite/ld-scripts/sizeof.exp,\n\t* testsuite/ld-scripts/weak.exp,\n\t* testsuite/ld-selective/selective.exp,\n\t* testsuite/ld-sh/sh.exp,\n\t* testsuite/ld-shared/shared.exp,\n\t* testsuite/ld-srec/srec.exp,\n\t* testsuite/ld-tic6x/tic6x.exp,\n\t* testsuite/ld-undefined/undefined.exp,\n\t* testsuite/ld-undefined/weak-undef.exp,\n\t* testsuite/lib/ld-lib.exp: Don't use unresolved except after\n\tperror.  Instead report \"unsupported\" or \"fail\".",
    "tree": {
      "sha": "0b17c5490260475e9df6d86e756656257a926e16",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0b17c5490260475e9df6d86e756656257a926e16"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f5b2658b0fbef02a855b7bb7288de051cc687237",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f5b2658b0fbef02a855b7bb7288de051cc687237",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f5b2658b0fbef02a855b7bb7288de051cc687237"
    }
  ],
  "stats": {
    "total": 429,
    "additions": 220,
    "deletions": 209
  },
  "files": [
    {
      "sha": "26fbe401893a26996f2945b8342ec37e69993d24",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -1,3 +1,49 @@\n+2021-02-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/ld-cdtest/cdtest.exp,\n+\t* testsuite/ld-checks/checks.exp,\n+\t* testsuite/ld-elf/binutils.exp,\n+\t* testsuite/ld-elf/compress.exp,\n+\t* testsuite/ld-elf/dwarf.exp,\n+\t* testsuite/ld-elf/exclude.exp,\n+\t* testsuite/ld-elf/frame.exp,\n+\t* testsuite/ld-elf/indirect.exp,\n+\t* testsuite/ld-elf/linux-x86.exp,\n+\t* testsuite/ld-elf/sec-to-seg.exp,\n+\t* testsuite/ld-elf/tls_common.exp,\n+\t* testsuite/ld-elfcomm/elfcomm.exp,\n+\t* testsuite/ld-elfvers/vers.exp,\n+\t* testsuite/ld-elfvsb/elfvsb.exp,\n+\t* testsuite/ld-elfweak/elfweak.exp,\n+\t* testsuite/ld-ifunc/binutils.exp,\n+\t* testsuite/ld-mips-elf/mips-elf-flags.exp,\n+\t* testsuite/ld-misc/defsym.exp,\n+\t* testsuite/ld-mn10300/mn10300.exp,\n+\t* testsuite/ld-plugin/lto.exp,\n+\t* testsuite/ld-plugin/plugin.exp,\n+\t* testsuite/ld-scripts/align.exp,\n+\t* testsuite/ld-scripts/assert.exp,\n+\t* testsuite/ld-scripts/crossref.exp,\n+\t* testsuite/ld-scripts/defined.exp,\n+\t* testsuite/ld-scripts/extern.exp,\n+\t* testsuite/ld-scripts/log2.exp,\n+\t* testsuite/ld-scripts/map-address.exp,\n+\t* testsuite/ld-scripts/phdrs.exp,\n+\t* testsuite/ld-scripts/phdrs2.exp,\n+\t* testsuite/ld-scripts/script.exp,\n+\t* testsuite/ld-scripts/section-flags.exp,\n+\t* testsuite/ld-scripts/sizeof.exp,\n+\t* testsuite/ld-scripts/weak.exp,\n+\t* testsuite/ld-selective/selective.exp,\n+\t* testsuite/ld-sh/sh.exp,\n+\t* testsuite/ld-shared/shared.exp,\n+\t* testsuite/ld-srec/srec.exp,\n+\t* testsuite/ld-tic6x/tic6x.exp,\n+\t* testsuite/ld-undefined/undefined.exp,\n+\t* testsuite/ld-undefined/weak-undef.exp,\n+\t* testsuite/lib/ld-lib.exp: Don't use unresolved except after\n+\tperror.  Instead report \"unsupported\" or \"fail\".\n+\n 2021-02-12  Nick Clifton  <nickc@redhat.com>\n \n \t* testsuite/ld-elf/sec64k.exp: Stop readelf from automatically"
    },
    {
      "sha": "80119802d8df50e506694075b5b2bcec28ca6fb4",
      "filename": "ld/testsuite/ld-cdtest/cdtest.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-cdtest/cdtest.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-cdtest/cdtest.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-cdtest/cdtest.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -41,8 +41,8 @@ if { [which $CXX] == 0 } {\n if {   ![ld_compile \"$CXX $CXXFLAGS -fno-exceptions\" $srcdir/$subdir/cdtest-foo.cc tmpdir/cdtest-foo.o]\n     || ![ld_compile \"$CXX $CXXFLAGS -fno-exceptions\" $srcdir/$subdir/cdtest-bar.cc tmpdir/cdtest-bar.o]\n     || ![ld_compile \"$CXX $CXXFLAGS -fno-exceptions\" $srcdir/$subdir/cdtest-main.cc tmpdir/cdtest-main.o] } {\n-    unresolved $test1\n-    unresolved $test2\n+    unsupported $test1\n+    unsupported $test2\n     return\n }\n "
    },
    {
      "sha": "3cf9c5ba4770aba600c9c52f1a534b49261bd3aa",
      "filename": "ld/testsuite/ld-checks/checks.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-checks/checks.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-checks/checks.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-checks/checks.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -36,7 +36,7 @@ proc section_check {} {\n     set ldflags \"$LDFLAGS --check-sections -e foo\"\n \n     if { ![ld_assemble $as $srcdir/$subdir/asm.s tmpdir/asm.o]} {\n-\tunresolved $test\n+\tunsupported $test\n \treturn\n     }\n "
    },
    {
      "sha": "426f3293b481f28f49b9c60e930993bf4dc90726",
      "filename": "ld/testsuite/ld-elf/binutils.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/binutils.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/binutils.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/binutils.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -53,17 +53,17 @@ proc binutils_test { prog_name ld_options test {test_name \"\"} {readelf_options \"\n     }\n \n     if { ![ld_assemble $as $srcdir/$subdir/$test.s tmpdir/$test.o ] } {\n-\tunresolved \"$test_name\"\n+\tunsupported \"$test_name\"\n \treturn\n     }\n \n     if { ![ld_link $ld tmpdir/$test \"$ld_options -z stack-size=0 tmpdir/$test.o\"] } {\n \tif { [string match \"*not supported*\" $link_output]\n \t     || [string match \"*unrecognized option*\" $link_output]\n-\t     || [string match \"*-z relro ignored*\" $link_output] } {\n+\t     || [string match \"*-z * ignored*\" $link_output] } {\n \t    unsupported \"$ld_options is not supported by this target\"\n \t} else {\n-\t    unresolved \"$test_name\"\n+\t    fail \"$test_name\"\n \t}\n \treturn\n     }\n@@ -72,7 +72,7 @@ proc binutils_test { prog_name ld_options test {test_name \"\"} {readelf_options \"\n     set got [remote_exec host \"$READELF $readelf_options --wide tmpdir/$test\" \"\" \"/dev/null\" \"tmpdir/$test.exp\"]\n     if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n \tsend_log \"$got\\n\"\n-\tunresolved \"$test_name\"\n+\tfail \"$test_name\"\n \treturn\n     }\n \n@@ -134,7 +134,7 @@ proc binutils_test { prog_name ld_options test {test_name \"\"} {readelf_options \"\n     set got [remote_exec host \"$READELF $readelf_options --wide tmpdir/$test\" \"\" \"/dev/null\" \"tmpdir/$test.out\"]\n     if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n \tsend_log \"$got\\n\"\n-\tunresolved \"$test_name\"\n+\tfail \"$test_name\"\n \treturn\n     }\n "
    },
    {
      "sha": "2d28994aab0a31af47ed51ba4a1582e2dd515d71",
      "filename": "ld/testsuite/ld-elf/compress.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/compress.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/compress.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/compress.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -129,7 +129,7 @@ send_log \"$READELF -S -W tmpdir/$test.o > tmpdir/$test.out\\n\"\n set got [remote_exec host \"$READELF -S -W tmpdir/$test.o\" \"\" \"/dev/null\" \"tmpdir/$test.out\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n     send_log \"$got\\n\"\n-    unresolved \"$test_name\"\n+    fail \"$test_name\"\n }\n if { [regexp_diff tmpdir/$test.out $srcdir/$subdir/$test.rS] } then {\n     fail \"$test_name\"\n@@ -143,7 +143,7 @@ send_log \"$READELF -S -W tmpdir/$test.o > tmpdir/$test.out\\n\"\n set got [remote_exec host \"$READELF -S -W tmpdir/$test.o\" \"\" \"/dev/null\" \"tmpdir/$test.out\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n     send_log \"$got\\n\"\n-    unresolved \"$test_name\"\n+    fail \"$test_name\"\n }\n if { [regexp_diff tmpdir/$test.out $srcdir/$subdir/$test.rS] } then {\n     fail \"$test_name\"\n@@ -157,7 +157,7 @@ send_log \"$READELF -t -W tmpdir/$test.o > tmpdir/$test.out\\n\"\n set got [remote_exec host \"$READELF -t -W tmpdir/$test.o\" \"\" \"/dev/null\" \"tmpdir/$test.out\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n     send_log \"$got\\n\"\n-    unresolved \"$test_name\"\n+    fail \"$test_name\"\n }\n if { [regexp_diff tmpdir/$test.out $srcdir/$subdir/$test.rt] } then {\n     fail \"$test_name\"\n@@ -171,7 +171,7 @@ send_log \"$READELF -w tmpdir/$test > tmpdir/$test.out\\n\"\n set got [remote_exec host [concat sh -c [list \"$READELF -w tmpdir/$test > tmpdir/$test.out\"]] \"\" \"/dev/null\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n     send_log \"$got\\n\"\n-    unresolved \"$test_name\"\n+    fail \"$test_name\"\n }\n \n set test_name \"Link with zlib compressed debug output 2\"\n@@ -180,7 +180,7 @@ send_log \"$READELF -w tmpdir/$test | sed -e \\\"s/.zdebug_/.debug_/\\\" > tmpdir/$te\n set got [remote_exec host [concat sh -c [list \"$READELF -w tmpdir/$test | sed -e \\\"s/.zdebug_/.debug_/\\\" > tmpdir/$test.out\"]] \"\" \"/dev/null\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n     send_log \"$got\\n\"\n-    unresolved \"$test_name\"\n+    fail \"$test_name\"\n }\n if { [catch {exec cmp tmpdir/normal.out tmpdir/$test.out}] } then {\n     send_log \"tmpdir/normal.out tmpdir/$test.out differ.\\n\"\n@@ -193,7 +193,7 @@ send_log \"$READELF -S -W tmpdir/$test' > tmpdir/$test.out\\n\"\n set got [remote_exec host \"$READELF -S -W tmpdir/$test\" \"\" \"/dev/null\" \"tmpdir/$test.out\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n     send_log \"$got\\n\"\n-    unresolved \"$test_name\"\n+    fail \"$test_name\"\n }\n if { [regexp_diff tmpdir/$test.out $srcdir/$subdir/$test.rS] } then {\n     fail \"$test_name\"\n@@ -207,7 +207,7 @@ send_log \"$READELF -w tmpdir/$test | sed -e \\\"s/.zdebug_/.debug_/\\\" > tmpdir/$te\n set got [remote_exec host [concat sh -c [list \"$READELF -w tmpdir/$test | sed -e \\\"s/.zdebug_/.debug_/\\\" > tmpdir/$test.out\"]] \"\" \"/dev/null\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n     send_log \"$got\\n\"\n-    unresolved \"$test_name\"\n+    fail \"$test_name\"\n }\n if { [catch {exec cmp tmpdir/normal.out tmpdir/$test.out}] } then {\n     send_log \"tmpdir/normal.out tmpdir/$test.out differ.\\n\"\n@@ -220,7 +220,7 @@ send_log \"$READELF -S -W tmpdir/$test' > tmpdir/$test.out\\n\"\n set got [remote_exec host \"$READELF -S -W tmpdir/$test\" \"\" \"/dev/null\" \"tmpdir/$test.out\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n     send_log \"$got\\n\"\n-    unresolved \"$test_name\"\n+    fail \"$test_name\"\n }\n if { [regexp_diff tmpdir/$test.out $srcdir/$subdir/$test.rS] } then {\n     fail \"$test_name\"\n@@ -234,7 +234,7 @@ send_log \"$READELF -w tmpdir/$test > tmpdir/$test.out\\n\"\n set got [remote_exec host [concat sh -c [list \"$READELF -w tmpdir/$test > tmpdir/$test.out\"]] \"\" \"/dev/null\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n     send_log \"$got\\n\"\n-    unresolved \"$test_name\"\n+    fail \"$test_name\"\n }\n if { [catch {exec cmp tmpdir/normal.out tmpdir/$test.out}] } then {\n     send_log \"tmpdir/normal.out tmpdir/$test.out differ.\\n\"\n@@ -247,7 +247,7 @@ send_log \"$READELF -t -W tmpdir/$test > tmpdir/$test.out\\n\"\n set got [remote_exec host \"$READELF -t -W tmpdir/$test\" \"\" \"/dev/null\" \"tmpdir/$test.out\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n     send_log \"$got\\n\"\n-    unresolved \"$test_name\"\n+    fail \"$test_name\"\n }\n if { [regexp_diff tmpdir/$test.out $srcdir/$subdir/$test.rt] } then {\n     fail \"$test_name\""
    },
    {
      "sha": "e620651efb08e345001e621b3f903f16389ef1ed",
      "filename": "ld/testsuite/ld-elf/dwarf.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/dwarf.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -85,15 +85,15 @@ proc strip_test {} {\n     set prog $strip\n \n     if ![ld_link $ld tmpdir/$test \"-shared tmpdir/dwarf1.o\"] {\n-\tunresolved \"$test_name\"\n+\tfail \"$test_name\"\n \treturn\n     }\n \n     send_log \"$NM -D tmpdir/$test > tmpdir/$test.exp\\n\"\n     catch \"exec $NM -D tmpdir/$test > tmpdir/$test.exp\" got\n     if ![string match \"\" $got] then {\n \tsend_log \"$got\\n\"\n-\tunresolved \"$test_name\"\n+\tfail \"$test_name\"\n \treturn\n     }\n \n@@ -109,7 +109,7 @@ proc strip_test {} {\n     catch \"exec $NM -D tmpdir/$test > tmpdir/$test.out\" got\n     if ![string match \"\" $got] then {\n \tsend_log \"$got\\n\"\n-\tunresolved \"$test_name\"\n+\tfail \"$test_name\"\n  \treturn\n     }\n "
    },
    {
      "sha": "81869a3f57b97c8300c806493d415938f11c8a76",
      "filename": "ld/testsuite/ld-elf/exclude.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/exclude.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/exclude.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/exclude.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -51,14 +51,14 @@ set test9 \"ld don't exclude symbols from archive - --exclude-libs foo:bar\"\n \n if { ![ld_assemble_flags $as $as_opt $srcdir/$subdir/exclude1.s tmpdir/exclude1.o ]\n      || ![ld_assemble_flags $as $as_opt $srcdir/$subdir/exclude2.s tmpdir/exclude2.o] } {\n-    unresolved $test1\n+    unsupported $test1\n     return\n }\n \n remote_file host delete \"tmpdir/libexclude.a\"\n set catch_output [run_host_cmd \"$ar\" \"cq tmpdir/libexclude.a tmpdir/exclude2.o\"]\n if {![string match \"\" $catch_output]} {\n-    unresolved $test1\n+    fail $test1\n     return\n }\n "
    },
    {
      "sha": "b1a964dfe2e1240e4def088b86b2a5f51b601174",
      "filename": "ld/testsuite/ld-elf/frame.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/frame.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/frame.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/frame.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -57,7 +57,7 @@ set test2\t\"read-only .gcc_except_table section\"\n \n if { ![ld_assemble_flags $as $as_opt $srcdir/$subdir/tbss.s tmpdir/tbss.o ]\n      || ![ld_assemble_flags $as $as_opt $srcdir/$subdir/frame.s tmpdir/frame.o] } {\n-    unresolved \"$test1\"\n+    unsupported \"$test1\"\n     return\n }\n \n@@ -74,7 +74,7 @@ if { [ld_link $ld tmpdir/frame.so \"-z separate-code --shared tmpdir/frame.o tmpd\n }\n \n if ![ld_assemble_flags $as $as_opt $srcdir/$subdir/table.s tmpdir/table.o ] {\n-    unresolved \"$test2\"\n+    unsupported \"$test2\"\n     return\n }\n "
    },
    {
      "sha": "bd4dab809db54523c4650988d31b73a3d6c4e8d1",
      "filename": "ld/testsuite/ld-elf/indirect.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/indirect.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/indirect.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/indirect.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -80,7 +80,7 @@ if { ![ld_compile $cc_cmd $srcdir/$subdir/indirect1a.c tmpdir/indirect1a.o]\n      || ![ld_compile \"$cc_cmd -fPIC\" $srcdir/$subdir/pr19553c.c tmpdir/pr19553c.o]\n      || ![ld_compile \"$cc_cmd -fPIC\" $srcdir/$subdir/pr19553b.c tmpdir/pr19553b.o]\n      || ![ld_compile $cc_cmd $srcdir/$subdir/pr19553a.c tmpdir/pr19553a.o] } {\n-    unresolved \"Indirect symbol tests\"\n+    unsupported \"Indirect symbol tests\"\n     return\n }\n "
    },
    {
      "sha": "7e3a0b7d84a407a3b94562a1606ed3a36e4ac948",
      "filename": "ld/testsuite/ld-elf/linux-x86.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/linux-x86.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/linux-x86.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/linux-x86.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -84,13 +84,13 @@ proc elfedit_test { options test output } {\n     set got [remote_exec host \"$ELFEDIT $options tmpdir/$test\" \"\" \"/dev/null\"]\n     if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n \tsend_log \"$got\\n\"\n-\tunresolved \"$test_name\"\n+\tfail \"$test_name\"\n     }\n     send_log \"$READELF -n $options tmpdir/$test > tmpdir/$output.out\\n\"\n     set got [remote_exec host \"$READELF -n tmpdir/$test\" \"\" \"/dev/null\" \"tmpdir/$output.out\"]\n     if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n \tsend_log \"$got\\n\"\n-\tunresolved \"$test_name\"\n+\tfail \"$test_name\"\n }\n     if { [regexp_diff tmpdir/$output.out $srcdir/$subdir/$output.rd] } then {\n \tfail \"$test_name\""
    },
    {
      "sha": "03fdd99adf2a3cdb9676a5aa11cb03b5459720df",
      "filename": "ld/testsuite/ld-elf/sec-to-seg.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/sec-to-seg.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/sec-to-seg.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/sec-to-seg.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -29,7 +29,7 @@ if {! [is_elf_format] } {\n \n if {   ! [ld_assemble $as $srcdir/$subdir/sec-to-seg1.s tmpdir/sec-to-seg1.o]\n     || ! [ld_assemble $as $srcdir/$subdir/sec-to-seg2.s tmpdir/sec-to-seg2.o]} then {\n-    unresolved $testname\n+    unsupported $testname\n     return\n }\n "
    },
    {
      "sha": "62276d9963ce7fcab7eb37baf5f49e0fc654a1d4",
      "filename": "ld/testsuite/ld-elf/tls_common.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/tls_common.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elf/tls_common.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/tls_common.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -32,7 +32,7 @@ if { !([istarget *-*-linux*]\n \n if { ![ld_assemble $as \"--elf-stt-common=no $srcdir/$subdir/tls_common.s\" tmpdir/tls_commona.o]\n       || ![ld_assemble $as \"--elf-stt-common=yes $srcdir/$subdir/tls_common.s\" tmpdir/tls_commonb.o] } {\n-    unresolved \"tls_common\"\n+    unsupported \"tls_common\"\n     return\n }\n \n@@ -46,10 +46,8 @@ if { ![ld_link $ld tmpdir/tls_commona \"tmpdir/tls_common1a.o\"] } {\n     if { [string match \"*not supported*\" $link_output]\n \t || [string match \"*unrecognized option*\" $link_output] } {\n \tunsupported \"$ld_options is not supported by this target\"\n-    } elseif { [string match \"*warning*alignment*of common symbol*\" $link_output] } {\n-\tfail \"tls_common\"\n     } else {\n-\tunresolved \"tls_common\"\n+\tfail \"tls_common\"\n     }\n     return\n }\n@@ -58,10 +56,8 @@ if { ![ld_link $ld tmpdir/tls_commonb \"tmpdir/tls_common1b.o\"] } {\n     if { [string match \"*not supported*\" $link_output]\n \t || [string match \"*unrecognized option*\" $link_output] } {\n \tunsupported \"$ld_options is not supported by this target\"\n-    } elseif { [string match \"*warning*alignment*of common symbol*\" $link_output] } {\n-\tfail \"tls_common\"\n     } else {\n-\tunresolved \"tls_common\"\n+\tfail \"tls_common\"\n     }\n     return\n }"
    },
    {
      "sha": "4e4c92d24b390b76dc7296554ca6eec186fcd874",
      "filename": "ld/testsuite/ld-elfcomm/elfcomm.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 6,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfcomm/elfcomm.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -54,7 +54,7 @@ proc test_sort_common {} {\n     }\n     \n     if { ![ld_assemble $as $srcdir/$subdir/sort-common.s tmpdir/sort-common.o] } {\n-\tunresolved \"$test\"\n+\tunsupported \"$test\"\n \treturn 0\n     }\n \n@@ -147,7 +147,7 @@ proc stt_common_test { options testname } {\n     set options \"$options tmpdir/common1c.o\"\n \n     if { ! [ld_link $ld tmpdir/common.exe $options] } {\n-      unresolved $testname\n+      fail $testname\n       return 0\n     }\n \n@@ -172,15 +172,14 @@ if [istarget nios2*-*-*] {\n if {   ![ld_compile \"$CC $CFLAGS -fcommon $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common1a.c tmpdir/common1a.o]\n     || ![ld_compile \"$CC $CFLAGS -fcommon $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common1b.c tmpdir/common1b.o]\n     || ![ld_compile \"$CC $CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -Wa,--elf-stt-common=yes -fcommon\" $srcdir/$subdir/common1b.c tmpdir/common1c.o] } {\n-    unresolved $test1\n-    unresolved $test1\n+    unsupported $test1\n     return\n }\n \n set options \"-r tmpdir/common1a.o tmpdir/common1b.o\"\n \n if { [ld_link $ld tmpdir/common1.o $options] } {\n-    unresolved $test1w1\n+    fail $test1w1\n     return\n }\n \n@@ -208,7 +207,7 @@ if { [dump_common1 $test1c1] } {\n set options \"-r tmpdir/common1b.o tmpdir/common1a.o\"\n \n if { [ld_link $ld tmpdir/common1.o $options] } {\n-    unresolved $test1w2\n+    fail $test1w2\n     return\n }\n "
    },
    {
      "sha": "8a1383fe840e41901c1f7263a0c47af802c2f5fc",
      "filename": "ld/testsuite/ld-elfvers/vers.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elfvers/vers.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elfvers/vers.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvers/vers.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -105,7 +105,7 @@ proc test_ar { test lib object expect } {\n     set exec_output [prune_warnings $exec_output]\n     if ![string match \"\" $exec_output] {\n \tverbose -log \"$exec_output\"\n-\tunresolved \"$test\"\n+\tfail \"$test\"\n \treturn\n     }\n \n@@ -493,12 +493,12 @@ proc build_binary { shared pic test source libname other mapfile verexp versymex\n     global NOLTO_CFLAGS\n \n     if ![ld_compile \"$CC -S $pic $CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$libname.s]     {\n-\tunresolved \"$test\"\n+\tunsupported \"$test\"\n \treturn\n     }\n \n     if ![ld_assemble $as \"$as_options $tmpdir/$libname.s\" $tmpdir/$libname.o ]     {\n-\tunresolved \"$test\"\n+\tunsupported \"$test\"\n \treturn\n     }\n \n@@ -589,12 +589,12 @@ proc test_ldfail { test flag source execname other mapfile whyfail } {\n     }\n \n     if ![ld_compile \"$CC -S $flag $CFLAGS\" $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n-\tunresolved \"$test\"\n+\tunsupported \"$test\"\n \treturn\n     }\n \n     if ![ld_assemble $as \"$as_options $tmpdir/$execname.s\" $tmpdir/$execname.o ]     {\n-\tunresolved \"$test\"\n+\tunsupported \"$test\"\n \treturn\n     }\n \n@@ -623,7 +623,7 @@ proc test_asfail { test flag source execname whyfail } {\n     global NOLTO_CFLAGS\n \n     if ![ld_compile \"$CC -S $flag $CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n-\tunresolved \"$test\"\n+\tunsupported \"$test\"\n \treturn\n     }\n \n@@ -706,12 +706,12 @@ proc build_exec { test source execname flags solibname verexp versymexp symexp }\n     append cc_cmd \" $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n \n     if ![ld_compile $cc_cmd $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n-\tunresolved \"$test\"\n+\tunsupported \"$test\"\n \treturn\n     }\n \n     if ![ld_assemble $as \"$as_options $tmpdir/$execname.s\" $tmpdir/$execname.o ]     {\n-\tunresolved \"$test\"\n+\tunsupported \"$test\"\n \treturn\n     }\n "
    },
    {
      "sha": "ee73cfe8f650f44996a5231d7e26ae7422153dd0",
      "filename": "ld/testsuite/ld-elfvsb/elfvsb.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elfvsb/elfvsb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elfvsb/elfvsb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvsb/elfvsb.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -238,8 +238,8 @@ proc visibility_run {visibility} {\n     # Compile the main program.  Make sure that PLT is used since PLT\n     # is expected.\n     if ![ld_compile \"$CC -g $PLT_CFLAGS $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/main.c $tmpdir/mainnp.o] {\n-\tunresolved \"visibility ($visibility) (non PIC)\"\n-\tunresolved \"visibility ($visibility)\"\n+\tunsupported \"visibility ($visibility) (non PIC)\"\n+\tunsupported \"visibility ($visibility)\"\n     } else {\n \t# The shared library is composed of two files.  First compile them\n \t# without using -fpic.  That should work on an ELF system,\n@@ -249,7 +249,7 @@ proc visibility_run {visibility} {\n \t# results.  Make sure that PLT is used since PLT is expected.\n \tif { ![ld_compile \"$CC -g $NOPIE_CFLAGS $PLT_CFLAGS $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/sh1.c $tmpdir/sh1np.o]\n \t     || ![ld_compile \"$CC -g $NOPIE_CFLAGS $PLT_CFLAGS $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/sh2.c $tmpdir/sh2np.o] } {\n-\t    unresolved \"visibility ($visibility) (non PIC)\"\n+\t    unsupported \"visibility ($visibility) (non PIC)\"\n \t} else {\n \t    # SunOS non PIC shared libraries don't permit some cases of\n \t    # overriding.\n@@ -338,7 +338,7 @@ proc visibility_run {visibility} {\n \n \tif { ![ld_compile \"$CC -g $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o]\n \t    || ![ld_compile \"$CC -g $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh2.c $tmpdir/sh2p.o] } {\n-\t    unresolved \"visibility ($visibility)\"\n+\t    unsupported \"visibility ($visibility)\"\n \t} else {\n \t    if { [ string match $visibility \"protected\" ]\n \t\t || [ string match $visibility \"protected_undef_def\" ] } {\n@@ -355,8 +355,8 @@ proc visibility_run {visibility} {\n     } else {\n     # Now do the same tests again, but this time compile main.c PIC.\n     if ![ld_compile \"$CC -g $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/main.c $tmpdir/mainp.o] {\n-\tunresolved \"visibility ($visibility) (PIC main, non PIC so)\"\n-\tunresolved \"visibility ($visibility) (PIC main)\"\n+\tunsupported \"visibility ($visibility) (PIC main, non PIC so)\"\n+\tunsupported \"visibility ($visibility) (PIC main)\"\n     } else {\n \tif { [ remote_file host exists $tmpdir/sh1np.o ]\n \t     && [ remote_file host exists $tmpdir/sh2np.o ] } {\n@@ -395,7 +395,7 @@ proc visibility_run {visibility} {\n \n \t    visibility_test $visibility vmpnp \"visibility ($visibility) (PIC main, non PIC so)\" mainp.o sh1np.o sh2np.o elfvsb\n \t} else {\n-\t    unresolved \"visibility (PIC main, non PIC so)\"\n+\t    unsupported \"visibility (PIC main, non PIC so)\"\n \t}\n \n \tif { [ remote_file host exists $tmpdir/sh1p.o ]\n@@ -408,7 +408,7 @@ proc visibility_run {visibility} {\n \t    }\n \t    visibility_test $visibility vmpp \"visibility ($visibility) (PIC main)\" mainp.o sh1p.o sh2p.o elfvsb\n \t} else {\n-\t    unresolved \"visibility ($visibility) (PIC main)\"\n+\t    unsupported \"visibility ($visibility) (PIC main)\"\n \t}\n     }}\n }\n@@ -447,7 +447,7 @@ visibility_run protected_weak\n visibility_run normal\n \n if { ![ld_compile \"$CC -g $CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common.c tmpdir/common.o] } {\n-    unresolved \"common hidden symbol\"\n+    unsupported \"common hidden symbol\"\n } else {\n     if ![ld_link $ld tmpdir/common \"tmpdir/common.o\"] {\n \tfail \"common hidden symbol\"\n@@ -457,10 +457,10 @@ if { ![ld_compile \"$CC -g $CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$sub\n }\n \n if { ![ld_compile \"$CC -g $CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/test.c tmpdir/test.o] } {\n-    unresolved \"weak hidden symbol\"\n+    unsupported \"weak hidden symbol\"\n } else {\n    if { ![ld_compile \"$CC -g $CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh3.c tmpdir/sh3.o] } {\n-\tunresolved \"weak hidden symbol\"\n+\tunsupported \"weak hidden symbol\"\n     } else {\n \tif ![ld_link $ld tmpdir/sh3.so \"-shared tmpdir/sh3.o\"] {\n \t    fail \"weak hidden symbol\""
    },
    {
      "sha": "56949d7431dfca517718f009a562a8d1b6d5330e",
      "filename": "ld/testsuite/ld-elfweak/elfweak.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elfweak/elfweak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-elfweak/elfweak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfweak/elfweak.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -394,7 +394,7 @@ if {![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/foo.c $tmpdir/foo.o]\n     || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/bar1b.c $tmpdir/bar1b.o]\n     || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/bar1c.c $tmpdir/bar1c.o]\n     || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/main1.c $tmpdir/main1.o]} then {\n-    unresolved \"ELF weak\"\n+    unsupported \"ELF weak\"\n } elseif {![ld_link $cc_cmd $tmpdir/libfoo1a.so \"$shared $tmpdir/foo1a.o\"]\n \t  || ![ld_link $cc_cmd $tmpdir/libfoo1b.so \"$shared $tmpdir/foo1b.o\"]\n \t  || ![ld_link $cc_cmd $tmpdir/libbar1a.so \"$shared $tmpdir/bar1a.o $tmpdir/libfoo1a.so\"]} then {\n@@ -428,7 +428,7 @@ if {![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/size_foo.c $tmpdir/s\n     || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar_s.o]\n     || ![ld_compile \"$cc_cmd $CFLAGS $picflag -DSIZE_BIG\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar.o]\n     || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/size_main.c $tmpdir/size_main.o]} then {\n-    unresolved \"ELF weak (size)\"\n+    unsupported \"ELF weak (size)\"\n } else {\n     build_lib \"ELF DSO small bar (size)\" libsize_bar_s \"size_bar_s.o\" \"\"\n     build_lib \"ELF DSO foo with small bar (size)\" libsize_foo \"size_foo.o libsize_bar_s.so\" \"\"\n@@ -444,7 +444,7 @@ if {![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/alias.c $tmpdir/alia\n     || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/aliasmain.c $tmpdir/aliasmain.o]\n     || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/weakref1.c $tmpdir/weakref1.o]\n     || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/weakref2.c $tmpdir/weakref2.o]} then {\n-    unresolved \"ELF weak (alias)\"\n+    unsupported \"ELF weak (alias)\"\n } else {\n     build_exec \"ELF weak (alias)\" alias \"aliasmain.o weakref1.o weakref2.o alias.so\" \"-Wl,-rpath=.,--no-as-needed\" alias \"\" \"\"\n }"
    },
    {
      "sha": "2543a4fb0bb9f6c2280f3b444d10f2db6b09cee2",
      "filename": "ld/testsuite/ld-ifunc/binutils.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-ifunc/binutils.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-ifunc/binutils.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ifunc/binutils.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -46,7 +46,7 @@ proc binutils_test { prog_name ld_options test } {\n     set test_name \"$prog_name $ld_options ($test)\"\n \n     if { ![ld_assemble $as $srcdir/$subdir/$test.s tmpdir/$test.o ] } {\n-\tunresolved \"$test_name\"\n+\tunsupported \"$test_name\"\n \treturn\n     }\n \n@@ -55,7 +55,7 @@ proc binutils_test { prog_name ld_options test } {\n \t     || [string match \"*unrecognized option*\" $link_output] } {\n \t    unsupported \"$ld_options is not supported by this target\"\n \t} else {\n-\t    unresolved \"$test_name\"\n+\t    fail \"$test_name\"\n \t}\n \treturn\n     }\n@@ -64,7 +64,7 @@ proc binutils_test { prog_name ld_options test } {\n     set got [remote_exec host \"$READELF -l --wide tmpdir/$test\" \"\" \"/dev/null\" \"tmpdir/$test.exp\"]\n     if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n \tsend_log \"$got\\n\"\n-\tunresolved \"$test_name\"\n+\tfail \"$test_name\"\n \treturn\n     }\n \n@@ -80,7 +80,7 @@ proc binutils_test { prog_name ld_options test } {\n     set got [remote_exec host \"$READELF -l --wide tmpdir/$test\" \"\" \"/dev/null\" \"tmpdir/$test.out\"]\n     if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n \tsend_log \"$got\\n\"\n-\tunresolved \"$test_name\"\n+\tfail \"$test_name\"\n \treturn\n     }\n "
    },
    {
      "sha": "0a1791913652e57079216bce325dcaa97668165a",
      "filename": "ld/testsuite/ld-mips-elf/mips-elf-flags.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-mips-elf/mips-elf-flags.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-mips-elf/mips-elf-flags.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mips-elf/mips-elf-flags.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -115,7 +115,7 @@ proc good_combination {arglist flags args} {\n \tset cmdret [lindex $cmdret 0]\n \tif {$cmdret != 0 \\\n \t    || ![regexp \"Flags: *(\\[^\\n\\r\\]*)\" $output full gotflags]} {\n-\t    unresolved $testname\n+\t    fail $testname\n \t} else {\n \t    set failed 0\n "
    },
    {
      "sha": "906f14e7cc72edf298c93809787e46a590b6e132",
      "filename": "ld/testsuite/ld-misc/defsym.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-misc/defsym.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-misc/defsym.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-misc/defsym.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -20,17 +20,17 @@\n #\n \n if ![ld_assemble $as $srcdir/$subdir/start.s tmpdir/start.o] { \n-    unresolved \"Build start.o\"\n+    unsupported \"Build start.o\"\n     return\n }\n \n if ![ld_assemble $as $srcdir/$subdir/foo.s tmpdir/foo.o] { \n-    unresolved \"Build foo.o\"\n+    unsupported \"Build foo.o\"\n     return\n }\n \n if { ![ar_simple_create $ar \"\" tmpdir/libfoo.a tmpdir/foo.o] } {\n-    unresolved \"Build libfoo.a\"\n+    fail \"Build libfoo.a\"\n     return\n }\n "
    },
    {
      "sha": "7a44954a4821334531a7ed4a33946c8cf4eac3ee",
      "filename": "ld/testsuite/ld-mn10300/mn10300.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-mn10300/mn10300.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-mn10300/mn10300.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mn10300/mn10300.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -139,23 +139,23 @@ proc i126256-test { } {\n     }\n \n     if { ![ld_compile \"$CC -mrelax -fPIC\" $srcdir/$subdir/i126256-1.c $tmpdir/i126256-1.o] } {\n-\tunresolved $testname\n-    \treturn\n+\tunsupported $testname\n+\treturn\n     }\n \n     if { ![ld_compile \"$CC -mrelax -fPIC\" $srcdir/$subdir/i126256-2.c $tmpdir/i126256-2.o] } {\n-\tunresolved $testname\n-    \treturn\n+\tunsupported $testname\n+\treturn\n     }\n     \n     if { ![ld_link $ld $tmpdir/i126256-1.so \"-shared $tmpdir/i126256-1.o -e 0\"]} {\n-        unresolved $testname\n-    \treturn\n+\tfail $testname\n+\treturn\n     }\n \n     if { ![ld_link $ld $tmpdir/i126256-2.so \"--relax -shared $tmpdir/i126256-2.o $tmpdir/i126256-1.so -e 0\"]} {\n-        fail $testname\n-    \treturn\n+\tfail $testname\n+\treturn\n     }\n \n     pass $testname"
    },
    {
      "sha": "38cea30aed41e23fc00cd563e6823e2890b4ff91",
      "filename": "ld/testsuite/ld-plugin/lto.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-plugin/lto.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-plugin/lto.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/lto.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -679,7 +679,7 @@ set testname \"Build liblto-11.a\"\n remote_file host delete \"tmpdir/liblto-11.a\"\n set catch_output [run_host_cmd \"$ar\" \"rc $plug_opt tmpdir/liblto-11.a tmpdir/lto-11a.o tmpdir/lto-11b.o tmpdir/lto-11c.o\"]\n if {![string match \"\" $catch_output]} {\n-    unresolved $testname\n+    fail $testname\n     restore_notify\n     return\n }"
    },
    {
      "sha": "b8bf29e7ca0f19764abdc5b10077424b19154e23",
      "filename": "ld/testsuite/ld-plugin/plugin.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-plugin/plugin.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-plugin/plugin.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/plugin.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -25,11 +25,9 @@ if ![check_plugin_api_available] {\n \n # And a compiler to be available.\n set can_compile 1\n-set failure_kind \"unresolved\"\n if { ![check_compiler_available] } {\n   # Don't fail immediately, \n   set can_compile 0\n-  set failure_kind \"unsupported\"\n }\n \n pass \"plugin API enabled\"\n@@ -286,11 +284,11 @@ set plugin_extra_elf_tests [list \\\n \n if { !$can_compile || $failed_compile } {\n     foreach testitem $plugin_tests {\n-\t$failure_kind [lindex $testitem 0]\n+\tunsupported [lindex $testitem 0]\n     }\n     if { [is_elf_format] } {\n \tforeach testitem $plugin_extra_elf_tests {\n-\t    $failure_kind [lindex $testitem 0]\n+\t    unsupported [lindex $testitem 0]\n \t}\n     }\n     set CFLAGS \"$old_CFLAGS\"\n@@ -309,7 +307,7 @@ if { [is_elf_format] \\\n if {![ar_simple_create $ar \"\" \"tmpdir/libtext.a\" \"tmpdir/text.o\"] || \\\n     ![ar_simple_create $ar \"\" \"tmpdir/libempty.a\" \"\"]} {\n     foreach testitem $plugin_lib_tests {\n-\tunresolved [lindex $testitem 0]\n+\tunsupported [lindex $testitem 0]\n     }\n } else {\n     run_ld_link_tests $plugin_lib_tests\n@@ -373,7 +371,7 @@ if [ar_simple_create $ar \"--plugin $plugin2_path\" \"tmpdir/libfunc.a\" \\\n     }\n } else {\n     foreach testitem $plugin_src_tests {\n-\tunresolved [lindex $testitem 0]\n+\tunsupported [lindex $testitem 0]\n     }\n }\n \n@@ -393,7 +391,7 @@ if [ar_simple_create $ar \"--plugin $plugin4_path\" \"tmpdir/libpr20070.a\" \\\n \t] \\\n     ]\n } else {\n-    unresolved \"PR ld/20070\"\n+    unsupported \"PR ld/20070\"\n }\n \n set CFLAGS \"$old_CFLAGS\""
    },
    {
      "sha": "db3d30e1610331fac5dfbe7cb6cb946f157742c7",
      "filename": "ld/testsuite/ld-scripts/align.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/align.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/align.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/align.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -22,7 +22,7 @@\n set testname \"align1\"\n \n if ![ld_assemble $as $srcdir/$subdir/align.s tmpdir/align.o] {\n-    unresolved $testname\n+    unsupported $testname\n     return\n }\n "
    },
    {
      "sha": "753f17d21c7db2f12cf4af5fa8914f29f9a2ba2a",
      "filename": "ld/testsuite/ld-scripts/assert.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/assert.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/assert.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/assert.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -22,7 +22,7 @@\n set testname \"ASSERT\"\n \n if ![ld_assemble $as $srcdir/$subdir/assert.s tmpdir/assert.o] {\n-    unresolved $testname\n+    unsupported $testname\n     return\n }\n "
    },
    {
      "sha": "467b5d5d7e94f914a61f776ee6fdd1165549b2a6",
      "filename": "ld/testsuite/ld-scripts/crossref.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/crossref.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/crossref.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/crossref.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -65,8 +65,8 @@ if [istarget tic6x*-*-*] {\n \n if { ![ld_compile \"$CC $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross1.c\" tmpdir/cross1.o] \\\n      || ![ld_compile \"$CC $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross2.c\" tmpdir/cross2.o] } {\n-    unresolved $test1\n-    unresolved $test2\n+    unsupported $test1\n+    unsupported $test2\n     set CFLAGS \"$old_CFLAGS\"\n     set CC \"$old_CC\"\n     return\n@@ -99,7 +99,7 @@ if [string match \"\" $exec_output] then {\n # Check cross references within a single object.\n \n if { ![ld_compile \"$CC $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross3.c\" tmpdir/cross3.o] } {\n-    unresolved $test2\n+    unsupported $test2\n     set CFLAGS \"$old_CFLAGS\"\n     set CC \"$old_CC\"\n     return\n@@ -124,14 +124,14 @@ if [string match \"\" $exec_output] then {\n # Check cross references for ld -r\n \n if { ![ld_compile \"$CC $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross4.c\" tmpdir/cross4.o] } {\n-    unresolved $test3\n+    unsupported $test3\n     set CFLAGS \"$old_CFLAGS\"\n     set CC \"$old_CC\"\n     return\n }\n \n if ![ld_relocate $ld tmpdir/cross3-partial.o \"tmpdir/cross1.o tmpdir/cross4.o\"] {\n-    unresolved $test3\n+    fail $test3\n     set CFLAGS \"$old_CFLAGS\"\n     set CC \"$old_CC\"\n     return"
    },
    {
      "sha": "b2c82f29ae7fd6ff74932fd3738222ef70407064",
      "filename": "ld/testsuite/ld-scripts/defined.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/defined.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/defined.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/defined.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -23,7 +23,7 @@ set testname \"DEFINED\"\n set prms_id 5699\n \n if ![ld_assemble $as $srcdir/$subdir/defined.s tmpdir/def.o] {\n-    unresolved $testname\n+    unsupported $testname\n     return\n }\n "
    },
    {
      "sha": "cea55b8719333fdc3d0f7ff5d74da8ce765c3c62",
      "filename": "ld/testsuite/ld-scripts/extern.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/extern.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/extern.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/extern.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -22,7 +22,7 @@\n set testname \"EXTERN\"\n \n if ![ld_assemble $as $srcdir/$subdir/extern.s tmpdir/extern.o] {\n-    unresolved $testname\n+    unsupported $testname\n     return\n }\n "
    },
    {
      "sha": "c91dcc1a4087d3b58860bc2a916f78ba337010c1",
      "filename": "ld/testsuite/ld-scripts/log2.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/log2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/log2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/log2.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -22,7 +22,7 @@\n set testname \"binary logarithm\"\n \n if {![ld_assemble $as $srcdir/$subdir/log2.s tmpdir/log2.o]} {\n-    unresolved $testname\n+    unsupported $testname\n     return\n }\n "
    },
    {
      "sha": "9e6f2dc3df3b8d2e1aaa15cfa255b6e1bd8954c1",
      "filename": "ld/testsuite/ld-scripts/map-address.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/map-address.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/map-address.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/map-address.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -22,7 +22,7 @@ set testname \"map addresses\"\n \n # The source file doesn't matter.  Pinch one from the sizeof test.\n if {![ld_assemble $as $srcdir/$subdir/sizeof.s tmpdir/map-address.o]} {\n-    unresolved $testname\n+    unsupported $testname\n     return\n }\n "
    },
    {
      "sha": "9edfbbbfa22b21242fcf1283fa237c57ccb7e01b",
      "filename": "ld/testsuite/ld-scripts/phdrs.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/phdrs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/phdrs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/phdrs.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -34,7 +34,7 @@ if { [istarget spu*-*-*] } {\n }\n \n if ![ld_assemble $as $srcdir/$subdir/phdrs.s tmpdir/phdrs.o] {\n-    unresolved $testname\n+    unsupported $testname\n     return\n }\n \n@@ -51,10 +51,6 @@ set ldopt \"$ldopt -T $srcdir/$subdir/phdrs.t tmpdir/phdrs.o\"\n if ![ld_link $ld tmpdir/phdrs $ldopt] {\n     fail $testname\n } else {\n-    if {![is_remote host] && [which $objdump] == 0} {\n-\tunresolved $testname\n-\treturn\n-    }\n     set exec_output [run_host_cmd \"$objdump\" \"--private-headers tmpdir/phdrs\"]\n     set exec_output [prune_warnings $exec_output]\n     verbose -log $exec_output"
    },
    {
      "sha": "55b8e3267ebdc3a774030107c6ad03ec5db9dfd3",
      "filename": "ld/testsuite/ld-scripts/phdrs2.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/phdrs2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/phdrs2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/phdrs2.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -43,7 +43,7 @@ if { [istarget spu*-*-*] } {\n }\n \n if ![ld_assemble $as $srcdir/$subdir/phdrs2.s tmpdir/phdrs2.o] {\n-    unresolved $testname\n+    unsupported $testname\n     return\n }\n \n@@ -54,11 +54,6 @@ set ldopt \"$ldopt -T $srcdir/$subdir/phdrs2.t tmpdir/phdrs2.o\"\n if ![ld_link $ld tmpdir/phdrs2 $ldopt] {\n     fail $testname\n } else {\n-    if {![is_remote host] && [which $objdump] == 0} {\n-\tunresolved $testname\n-\treturn\n-    }\n-\n     set exec_output [run_host_cmd \"$objdump\" \"--private-headers tmpdir/phdrs2\"]\n     set exec_output [prune_warnings $exec_output]\n     verbose -log $exec_output"
    },
    {
      "sha": "961cd08c4b15dd7763396070c286181fa6ea16e4",
      "filename": "ld/testsuite/ld-scripts/script.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/script.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/script.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/script.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -22,7 +22,7 @@\n set testname \"script\"\n \n if ![ld_assemble $as $srcdir/$subdir/script.s tmpdir/script.o] { \n-    unresolved $testname\n+    unsupported $testname\n     return\n }\n "
    },
    {
      "sha": "f36b52aa5d2cf1b16ab5acd2015786194c856c17",
      "filename": "ld/testsuite/ld-scripts/section-flags.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/section-flags.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/section-flags.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/section-flags.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -31,7 +31,7 @@ if { [istarget spu*-*-*] } {\n \n foreach test {\"section-flags-1\" \"section-flags-2\"} {\n     if ![ld_assemble $as $srcdir/$subdir/$test.s tmpdir/$test.o] {\n-\tunresolved $test\n+\tunsupported $test\n     } else {\n \tif ![ld_link $ldcmd tmpdir/$test \\\n \t\t\"-T $srcdir/$subdir/$test.t tmpdir/$test.o\"] {"
    },
    {
      "sha": "6d306c8dcf7685aac8843b03a25b907f4c0aa4a5",
      "filename": "ld/testsuite/ld-scripts/sizeof.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/sizeof.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/sizeof.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/sizeof.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -23,7 +23,7 @@\n set testname \"SIZEOF\"\n \n if ![ld_assemble $as $srcdir/$subdir/sizeof.s tmpdir/sizeof.o] {\n-    unresolved $testname\n+    unsupported $testname\n     return\n }\n "
    },
    {
      "sha": "b0f8a9eb98e67328e04957d894875378d26fe1db",
      "filename": "ld/testsuite/ld-scripts/weak.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 7,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/weak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-scripts/weak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/weak.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -39,7 +39,7 @@ setup_xfail hppa64-*-*\n if {! [ld_assemble $as $srcdir/$subdir/weak1.s tmpdir/weak1.o]\n     || ! [ld_assemble $as $srcdir/$subdir/weak2.s tmpdir/weak2.o]} then {\n     # It's OK if .weak doesn't work on this target.\n-    unresolved $testname\n+    unsupported $testname\n     return\n }\n \n@@ -57,12 +57,6 @@ set weak_regexp_little \\\n if {! [ld_link $ld tmpdir/weak \"$flags -T $srcdir/$subdir/weak.t tmpdir/weak1.o tmpdir/weak2.o\"] } then {\n     fail $testname\n } else {\n-    if {![is_remote host] && [which $objdump] == 0} then {\n-\tunresolved $testname\n-\tset LDFLAGS \"$saved_LDFLAGS\"\n-\treturn\n-    }\n-\n     set exec_output [run_host_cmd \"$objdump\" \"-s tmpdir/weak\"]\n     set exec_output [prune_warnings $exec_output]\n     verbose -log $exec_output"
    },
    {
      "sha": "7b115adb7811ac3f3977577658c3429a10a071b1",
      "filename": "ld/testsuite/ld-selective/selective.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-selective/selective.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-selective/selective.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-selective/selective.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -111,7 +111,7 @@ foreach testitem $seltests {\n     # tests.  It might have been a buglet originally; now I think better\n     # leave as is.\n     if { ![ld_compile \"$compiler $testflags\" $srcdir/$subdir/$testfile $objfile] } {\n-\tunresolved $testname\n+\tunsupported $testname\n \tcontinue\n     }\n "
    },
    {
      "sha": "78905f0d89bb3f1047414aeb8a0de4109bc16449",
      "filename": "ld/testsuite/ld-sh/sh.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-sh/sh.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-sh/sh.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-sh/sh.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -31,7 +31,7 @@ if ![istarget sh*-*-*] {\n set testsimple \"SH simple relaxing\"\n \n if { ![is_elf_format] } {\n-    unresolved $testsimple\n+    unsupported $testsimple\n } elseif { ![ld_assemble $as \"-relax $srcdir/$subdir/sh1.s\" tmpdir/sh1.o] } {\n     fail $testsimple\n } elseif { ![ld_link $ld tmpdir/sh1 \"-relax tmpdir/sh1.o\"] } {\n@@ -56,7 +56,7 @@ if { ![is_elf_format] } {\n set testsrec \"SH relaxing to S-records\"\n \n if { ![remote_file host exists tmpdir/sh1] } {\n-    unresolved $testsrec\n+    unsupported $testsrec\n } else {\n     if { [istarget sh*-linux-*] || [istarget sh-*-vxworks] } {\n \t# On these \"non-embedded\" targets, the default ELF and srec start\n@@ -79,15 +79,15 @@ if { ![remote_file host exists tmpdir/sh1] } {\n \tif ![string match \"\" $exec_output] {\n \t    send_log \"$exec_output\\n\"\n \t    verbose \"$exec_output\"\n-\t    unresolved $testsrec\n+\t    fail $testsrec\n \t} else {\n \t    send_log \"$objcopy -O srec tmpdir/sh1 tmpdir/sh1.s1\\n\"\n \t    verbose \"$objcopy -O srec tmpdir/sh1 tmpdir/sh1.s1\"\n \t    catch \"exec $objcopy -O srec tmpdir/sh1 tmpdir/sh1.s1\" exec_output\n \t    if ![string match \"\" $exec_output] {\n \t\tsend_log \"$exec_output\\n\"\n \t\tverbose \"$exec_output\"\n-\t\tunresolved $testsrec\n+\t\tfail $testsrec\n \t    } else {\n \t\tsend_log \"cmp tmpdir/sh1.s1 tmpdir/sh1.s2\\n\"\n \t\tverbose \"cmp tmpdir/sh1.s1 tmpdir/sh1.s2\"\n@@ -107,7 +107,7 @@ if { ![remote_file host exists tmpdir/sh1] } {\n \n set testadjsw8 \"SH switch8 adjustment after relax\"\n if { ![is_elf_format] } {\n-    unresolved $testadjsw8\n+    unsupported $testadjsw8\n } elseif { ![ld_assemble $as \"-relax $srcdir/$subdir/adjsw8.s\" tmpdir/adjsw8.o] } {\n     fail $testadjsw8\n } elseif { ![ld_link $ld tmpdir/adjsw8 \"-relax tmpdir/adjsw8.o\"] } {\n@@ -145,16 +145,16 @@ if [istarget sh*-*linux*] {\n \n if {![ld_assemble $as \"-relax tmpdir/start.s\" tmpdir/start.o] \\\n     || ![ld_compile $CC \"-O -mrelax -foptimize-sibling-calls $srcdir/$subdir/sh2.c\" tmpdir/sh2.o]} {\n-    unresolved $testlink\n-    unresolved $testjsr\n-    unresolved $testrun\n+    unsupported $testlink\n+    unsupported $testjsr\n+    unsupported $testrun\n     return\n }\n \n if ![ld_link $ld tmpdir/sh2 \"-relax tmpdir/start.o tmpdir/sh2.o\"] {\n     fail $testlink\n-    unresolved $testjsr\n-    unresolved $testrun\n+    unsupported $testjsr\n+    unsupported $testrun\n     return\n }\n "
    },
    {
      "sha": "0e45f5c042310c3a56505f1adaf8adc3646200df",
      "filename": "ld/testsuite/ld-shared/shared.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-shared/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-shared/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-shared/shared.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -213,8 +213,8 @@ verbose \"Using $picflag to compile PIC code\"\n \n # Compile the main program.\n if ![ld_compile \"$CC $CFLAGS $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o] {\n-    unresolved \"shared (non PIC)\"\n-    unresolved \"shared\"\n+    unsupported \"shared (non PIC)\"\n+    unsupported \"shared\"\n } else {\n     # The shared library is composed of two files.  First compile them\n     # without using -fpic.  That should work on an ELF system,\n@@ -225,7 +225,7 @@ if ![ld_compile \"$CC $CFLAGS $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o]\n     global PLT_CFLAGS NOPIE_CFLAGS\n     if { ![ld_compile \"$CC $PLT_CFLAGS $NOPIE_CFLAGS $CFLAGS $SHCFLAG\" $srcdir/$subdir/sh1.c $tmpdir/sh1np.o]\n \t || ![ld_compile \"$CC $PLT_CFLAGS $CFLAGS $SHCFLAG\" $srcdir/$subdir/sh2.c $tmpdir/sh2np.o] } {\n-\tunresolved \"shared (non PIC)\"\n+\tunsupported \"shared (non PIC)\"\n     } else { if { [istarget rs6000*-*-aix*] || [istarget powerpc*-*-aix*] } {\n \tshared_test shnp \"shared (nonPIC)\" mainnp.o sh1np.o sh2np.o xcoff\n     } else {\n@@ -286,7 +286,7 @@ if ![ld_compile \"$CC $CFLAGS $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o]\n \n     if { ![ld_compile \"$CC $CFLAGS $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o]\n \t || ![ld_compile \"$CC $CFLAGS $SHCFLAG $picflag\" $srcdir/$subdir/sh2.c $tmpdir/sh2p.o] } {\n-\tunresolved \"shared\"\n+\tunsupported \"shared\"\n     } else {\n \tif { [istarget rs6000*-*-aix*] || [istarget powerpc*-*-aix*] } {\n \t    shared_test shp \"shared\" mainnp.o sh1p.o sh2p.o xcoff\n@@ -303,8 +303,8 @@ if ![ld_compile \"$CC $CFLAGS $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o]\n \n # Now do the same tests again, but this time compile main.c PIC.\n if ![ld_compile \"$CC $CFLAGS $SHCFLAG $picflag\" $srcdir/$subdir/main.c $tmpdir/mainp.o] {\n-    unresolved \"shared (PIC main, non PIC so)\"\n-    unresolved \"shared (PIC main)\"\n+    unsupported \"shared (PIC main, non PIC so)\"\n+    unsupported \"shared (PIC main)\"\n } else {\n     if { [file exists $tmpdir/sh1np.o ] && [ file exists $tmpdir/sh2np.o ] } {\n         if { [istarget rs6000*-*-aix*] || [istarget powerpc*-*-aix*] } {\n@@ -333,7 +333,7 @@ if ![ld_compile \"$CC $CFLAGS $SHCFLAG $picflag\" $srcdir/$subdir/main.c $tmpdir/m\n \t    shared_test shmpnp \"shared (PIC main, non PIC so)\" mainp.o sh1np.o sh2np.o shared\n \t}\n     } else {\n-\tunresolved \"shared (PIC main, non PIC so)\"\n+\tunsupported \"shared (PIC main, non PIC so)\"\n     }\n \n     if { [file exists $tmpdir/sh1p.o ] && [ file exists $tmpdir/sh2p.o ] } {\n@@ -343,7 +343,7 @@ if ![ld_compile \"$CC $CFLAGS $SHCFLAG $picflag\" $srcdir/$subdir/main.c $tmpdir/m\n \t    shared_test shmpp \"shared (PIC main)\" mainp.o sh1p.o sh2p.o shared\n \t}\n     } else {\n-\tunresolved \"shared (PIC main)\"\n+\tunsupported \"shared (PIC main)\"\n     }\n }\n "
    },
    {
      "sha": "e3e4b98ee3c75d41129c2a781e720c651b00d97e",
      "filename": "ld/testsuite/ld-srec/srec.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-srec/srec.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-srec/srec.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-srec/srec.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -315,7 +315,7 @@ proc run_srec_test { test objs } {\n     if ![string match \"\" $exec_output] {\n \tsend_log \"$exec_output\\n\"\n \tverbose \"$exec_output\"\n-\tunresolved $test\n+\tfail $test\n \treturn\n     }\n \n@@ -367,8 +367,8 @@ if { [is_elf_format] \\\n \n if { ![ld_compile $CC $srcdir/$subdir/sr1.c tmpdir/sr1.o] \\\n      || ![ld_compile $CC $srcdir/$subdir/sr2.c tmpdir/sr2.o] } {\n-    unresolved $test1\n-    unresolved $test2\n+    unsupported $test1\n+    unsupported $test2\n     set CC \"$old_CC\"\n     set CXX \"$old_CXX\"\n     set CXXFLAGS \"$old_CXXFLAGS\"\n@@ -450,7 +450,7 @@ if { ![is_remote host] && [which $CXX] == 0 } {\n }\n \n if ![ld_compile \"$CXX $CXXFLAGS -fno-exceptions\" $srcdir/$subdir/sr3.cc tmpdir/sr3.o] {\n-    unresolved $test2\n+    unsupported $test2\n     set CC \"$old_CC\"\n     set CXX \"$old_CXX\"\n     set CXXFLAGS \"$old_CXXFLAGS\""
    },
    {
      "sha": "ddd0de72a993c95d04a1a2d04de26a553562bd51",
      "filename": "ld/testsuite/ld-tic6x/tic6x.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-tic6x/tic6x.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-tic6x/tic6x.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-tic6x/tic6x.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -175,7 +175,7 @@ proc check_osabi_tic6x { test_name binary_file } {\n \n     if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n \tsend_log \"$got\\n\"\n-\tunresolved \"$test_name\"\n+\tfail \"$test_name\"\n \tremote_file build delete \"dump.out\"\n \treturn\n     }\n@@ -184,7 +184,7 @@ proc check_osabi_tic6x { test_name binary_file } {\n     if { ![regexp \"\\n\\[ \\]*OS/ABI:\\[ \\]*(.+)\\n\\[ \\]*ABI\" \\\n \t   [file_contents dump.out] nil osabi] } {\n \tverbose \"proc check_osabi_tic6x: Readelf failed to extract an ELF header from $binary_file\"\n-\tunresolved \"$test_name\"\n+\tfail \"$test_name\"\n     } elseif { $osabi == $expected_osabi } {\n \tpass \"$test_name\"\n     } else {"
    },
    {
      "sha": "9e2b073881b5e9d28b00fd74731f464918dab16d",
      "filename": "ld/testsuite/ld-undefined/undefined.exp",
      "status": "modified",
      "additions": 42,
      "deletions": 50,
      "changes": 92,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-undefined/undefined.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-undefined/undefined.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-undefined/undefined.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -31,9 +31,9 @@ if { ![check_compiler_available] } {\n     untested $testline\n } elseif { ![ld_compile \"$CC -g $NOLTO_CFLAGS\" $srcdir/$subdir/undefined.c tmpdir/undefined.o] } {\n     verbose \"Unable to compile test file!\" 1\n-    unresolved $testund\n-    unresolved $testfn\n-    unresolved $testline\n+    unsupported $testund\n+    unsupported $testfn\n+    unsupported $testline\n } else {\n     remote_file host delete \"tmpdir/undefined\"\n \n@@ -177,58 +177,50 @@ if { ![is_elf_format] || ![check_shared_lib_support]} then {\n     setup_xfail tic6x-*-*\n     fail $testname\n } else {\n-    if {![is_remote host] && [which $nm] == 0} then {\n-\tunresolved \"$testname (dyn sym)\"\n+    set exec_output [run_host_cmd \"$nm\" \"-D tmpdir/fundef.so\"]\n+    set exec_output [prune_warnings $exec_output]\n+\n+    if { ($asflags == \"\"\n+\t  || ([regexp \".* undef_fun_typed.*\" $exec_output]\n+\t      && [regexp \".* undef_fun_notype.*\" $exec_output]))\n+\t && [regexp \".* undef_data.*\" $exec_output]\n+\t && [regexp \".* undef_pfun.*\" $exec_output]\n+\t && [regexp \".* undef_notype.*\" $exec_output]} then {\n+\tpass \"$testname (dyn sym)\"\n     } else {\n-\tset exec_output [run_host_cmd \"$nm\" \"-D tmpdir/fundef.so\"]\n-\tset exec_output [prune_warnings $exec_output]\n-\n-\tif { ($asflags == \"\"\n-\t      || ([regexp \".* undef_fun_typed.*\" $exec_output]\n-\t\t  && [regexp \".* undef_fun_notype.*\" $exec_output]))\n-\t     && [regexp \".* undef_data.*\" $exec_output]\n-\t     && [regexp \".* undef_pfun.*\" $exec_output]\n-\t     && [regexp \".* undef_notype.*\" $exec_output]} then {\n-\t    pass \"$testname (dyn sym)\"\n-\t} else {\n-\t    fail \"$testname (dyn sym)\"\n-\t}\n+\tfail \"$testname (dyn sym)\"\n     }\n \n     global READELF\n-    if {![is_remote host] && [which $READELF] == 0} then {\n-\tunresolved \"$testname (dyn reloc)\"\n-    } else {\n-\tset exec_output [run_host_cmd \"$READELF\" \"-r tmpdir/fundef.so\"]\n-\tset exec_output [prune_warnings $exec_output]\n-\n-\t# We ought to get two .rel{a}.plt and three .rel{a}.dyn relocs,\n-\t# except for MIPS targets whose psABI mandates an extra\n-\t# R_MIPS_NONE relocation, also used to pad n64 relocation\n-\t# triplets, and S+core targets using an extra R_SCORE_NONE\n-\t# relocation, so adjust for that.\n-\tswitch -glob $target_triplet {\n-\t    \"mips64*-*-openbsd*\" {\n-\t\tset none_count 6\n-\t\tset reloc_count 4\n-\t    }\n-\t    \"mips*\" -\n-\t    \"score*\" {\n-\t\tset none_count 1\n-\t\tset reloc_count 4\n-\t    }\n-\t    \"*\" {\n-\t\tset none_count 0\n-\t\tset reloc_count 3\n-\t    }\n+    set exec_output [run_host_cmd \"$READELF\" \"-r tmpdir/fundef.so\"]\n+    set exec_output [prune_warnings $exec_output]\n+\n+    # We ought to get two .rel{a}.plt and three .rel{a}.dyn relocs,\n+    # except for MIPS targets whose psABI mandates an extra\n+    # R_MIPS_NONE relocation, also used to pad n64 relocation\n+    # triplets, and S+core targets using an extra R_SCORE_NONE\n+    # relocation, so adjust for that.\n+    switch -glob $target_triplet {\n+\t\"mips64*-*-openbsd*\" {\n+\t    set none_count 6\n+\t    set reloc_count 4\n \t}\n-\n-\tif { ($asflags == \"\" || [regexp \".* contains 2 .*\" $exec_output])\n-\t     && [regexp \".* contains $reloc_count .*\" $exec_output]\n-\t     && [regexp -all \"_NONE\" $exec_output] == $none_count } then {\n-\t    pass \"$testname (dyn reloc)\"\n-\t} else {\n-\t    fail \"$testname (dyn reloc)\"\n+\t\"mips*\" -\n+\t\"score*\" {\n+\t    set none_count 1\n+\t    set reloc_count 4\n+\t}\n+\t\"*\" {\n+\t    set none_count 0\n+\t    set reloc_count 3\n \t}\n     }\n+\n+    if { ($asflags == \"\" || [regexp \".* contains 2 .*\" $exec_output])\n+\t && [regexp \".* contains $reloc_count .*\" $exec_output]\n+\t && [regexp -all \"_NONE\" $exec_output] == $none_count } then {\n+\tpass \"$testname (dyn reloc)\"\n+    } else {\n+\tfail \"$testname (dyn reloc)\"\n+    }\n }"
    },
    {
      "sha": "4f470e5924174c1ce5996828bfb82710c37ad9aa",
      "filename": "ld/testsuite/ld-undefined/weak-undef.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 7,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-undefined/weak-undef.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/ld-undefined/weak-undef.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-undefined/weak-undef.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -28,16 +28,14 @@ if { ![is_elf_format] && ![is_pecoff_format] } then {\n } elseif {![ld_assemble $as $srcdir/$subdir/weak-undef.s \\\n \t    tmpdir/weak-undef.o]} then {\n     # It's OK if .weak doesn't work on this target.\n-    unresolved $testname\n+    unsupported $testname\n } elseif {![ld_link $ld tmpdir/weak-undef \\\n \t\t\"tmpdir/weak-undef.o -T $srcdir/$subdir/weak-undef.t\"]} then {\n     # Weak symbols are broken for non-i386 PE targets.\n     if {! [istarget i?86-*-*]} {\n \tsetup_xfail *-*-pe*\n     }\n     fail $testname\n-} elseif {![is_remote host] && [which $objdump] == 0} then {\n-    unresolved $testname\n } else {\n     set exec_output [run_host_cmd \"$objdump\" \"-s tmpdir/weak-undef\"]\n     set exec_output [prune_warnings $exec_output]\n@@ -59,8 +57,6 @@ proc undef_weak_so { testname opts passval } {\n     if {![ld_link $ld tmpdir/weak-fundef.so \\\n \t  \"$opts tmpdir/weak-fundef.o\"]} then {\n \tfail $testname\n-    } elseif {![is_remote host] && [which $nm] == 0} then {\n-\tunresolved $testname\n     } else {\n \tset exec_output [run_host_cmd \"$nm\" \"-D tmpdir/weak-fundef.so\"]\n \tset exec_output [prune_warnings $exec_output]\n@@ -83,8 +79,6 @@ proc undef_weak_exe { testname opts passval } {\n     if {![ld_link $ld tmpdir/weak-fundef \\\n \t  \"$opts tmpdir/weak-fundef.o tmpdir/weak-fundef.so\"]} then {\n \tfail $testname\n-    } elseif {![is_remote host] && [which $nm] == 0} then {\n-\tunresolved $testname\n     } else {\n \tset exec_output [run_host_cmd \"$nm\" \"-D tmpdir/weak-fundef\"]\n \tset exec_output [prune_warnings $exec_output]"
    },
    {
      "sha": "4a08617bb31d25b3814774a141cbfc0de23e5d91",
      "filename": "ld/testsuite/lib/ld-lib.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/lib/ld-lib.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b1f6c95704da7128ca2a7c682a2e0ef533180ce/ld/testsuite/lib/ld-lib.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/lib/ld-lib.exp?ref=5b1f6c95704da7128ca2a7c682a2e0ef533180ce",
      "patch": "@@ -494,7 +494,7 @@ proc run_ld_link_tests { ldtests args } {\n \tset binfile tmpdir/[lindex $testitem 6]\n \tset cflags [lindex $testitem 7]\n \tset objfiles {}\n-\tset is_unresolved 0\n+\tset is_unsupported 0\n \tset failed 0\n \tset maybe_failed 0\n \tset ld_output \"\"\n@@ -523,15 +523,15 @@ proc run_ld_link_tests { ldtests args } {\n \t\tcatch \"$unbzip2\" exec_output\n \t\tif ![string match \"\" $exec_output] then {\n \t\t    send_log \"$exec_output\\n\"\n-\t\t    set is_unresolved 1\n+\t\t    set is_unsupported 1\n \t\t    break\n \t\t}\n \t    } else {\n \t\tset objfile \"tmpdir/$fileroot.o\"\n \t\tif { [file extension $src_file] == \".c\" } {\n \t\t    set as_file \"tmpdir/$fileroot.s\"\n \t\t    if ![ld_compile \"$CC -S $CFLAGS $cflags\" $srcdir/$subdir/$src_file $as_file] {\n-\t\t\tset is_unresolved 1\n+\t\t\tset is_unsupported 1\n \t\t\tbreak\n \t\t    }\n \t\t} else {\n@@ -551,8 +551,8 @@ proc run_ld_link_tests { ldtests args } {\n \t    continue\n \t}\n \t# Catch compiler errors.\n-\tif { $is_unresolved } {\n-\t    unresolved $testname\n+\tif { $is_unsupported } {\n+\t    unsupported $testname\n \t    continue\n \t}\n \n@@ -567,6 +567,7 @@ proc run_ld_link_tests { ldtests args } {\n \t    set ld_output \"$exec_output\"\n \t}\n \n+\tset is_unresolved 0\n \tif { !$failed } {\n \t    foreach actionlist $actions {\n \t\tset action [lindex $actionlist 0]\n@@ -751,7 +752,7 @@ proc run_ld_link_exec_tests { ldtests args } {\n \t    }\n \t}\n \tif { $failed != 0 } {\n-\t    unresolved $testname\n+\t    unsupported $testname\n \t    continue\n \t}\n \n@@ -941,7 +942,7 @@ proc run_cc_link_tests { ldtests } {\n \t    }\n \t}\n \tif { $failed != 0 } {\n-\t    unresolved $testname\n+\t    unsupported $testname\n \t    continue\n \t}\n "
    }
  ]
}