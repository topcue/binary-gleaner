{
  "sha": "89246a0e7919e31f112526c11199ad2496980377",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODkyNDZhMGU3OTE5ZTMxZjExMjUyNmMxMTE5OWFkMjQ5Njk4MDM3Nw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-04-15T05:23:32Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-04-15T07:33:17Z"
    },
    "message": "readelf: increase size of static buffers\n\nTranslated strings might be larger than the original.\n\n\t* readelf.c (get_group_flags): Translate text.\n\t(get_file_type, get_symbol_binding, get_symbol_type),\n\t(get_ppc64_symbol_other, get_symbol_other): Increase size of buffer.",
    "tree": {
      "sha": "fc789d84f1ba2a96ba6d7b10edd713b74da6cd18",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fc789d84f1ba2a96ba6d7b10edd713b74da6cd18"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/89246a0e7919e31f112526c11199ad2496980377",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89246a0e7919e31f112526c11199ad2496980377",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/89246a0e7919e31f112526c11199ad2496980377",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89246a0e7919e31f112526c11199ad2496980377/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c98a4545dc7bf2bcaf1de539c4eb84784680eaa4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c98a4545dc7bf2bcaf1de539c4eb84784680eaa4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c98a4545dc7bf2bcaf1de539c4eb84784680eaa4"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 17,
    "deletions": 23
  },
  "files": [
    {
      "sha": "e6c9c2ea8ae951bbc163fa23cc47f338f3172919",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89246a0e7919e31f112526c11199ad2496980377/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89246a0e7919e31f112526c11199ad2496980377/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=89246a0e7919e31f112526c11199ad2496980377",
      "patch": "@@ -1,3 +1,9 @@\n+2020-04-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_group_flags): Translate text.\n+\t(get_file_type, get_symbol_binding, get_symbol_type),\n+\t(get_ppc64_symbol_other, get_symbol_other): Increase size of buffer.\n+\n 2020-04-15  Alan Modra  <amodra@gmail.com>\n \n \tPR 25821"
    },
    {
      "sha": "fb6f801b9fab53b3f1008abc60aff23d876a1fd6",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 11,
      "deletions": 23,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89246a0e7919e31f112526c11199ad2496980377/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89246a0e7919e31f112526c11199ad2496980377/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=89246a0e7919e31f112526c11199ad2496980377",
      "patch": "@@ -2291,7 +2291,7 @@ get_dynamic_type (Filedata * filedata, unsigned long type)\n static char *\n get_file_type (unsigned e_type)\n {\n-  static char buff[32];\n+  static char buff[64];\n \n   switch (e_type)\n     {\n@@ -6832,25 +6832,13 @@ get_group_flags (unsigned int flags)\n   else if (flags == GRP_COMDAT)\n     return \"COMDAT \";\n \n-  snprintf (buff, 14, _(\"[0x%x: \"), flags);\n+  snprintf (buff, sizeof buff, \"[0x%x: %s%s%s]\",\n+\t    flags,\n+\t    flags & GRP_MASKOS ? _(\"<OS specific>\") : \"\",\n+\t    flags & GRP_MASKPROC ? _(\"<PROC specific>\") : \"\",\n+\t    (flags & ~(GRP_COMDAT | GRP_MASKOS | GRP_MASKPROC)\n+\t     ? _(\"<unknown>\") : \"\"));\n \n-  flags &= ~ GRP_COMDAT;\n-  if (flags & GRP_MASKOS)\n-    {\n-      strcat (buff, \"<OS specific>\");\n-      flags &= ~ GRP_MASKOS;\n-    }\n-\n-  if (flags & GRP_MASKPROC)\n-    {\n-      strcat (buff, \"<PROC specific>\");\n-      flags &= ~ GRP_MASKPROC;\n-    }\n-\n-  if (flags)\n-    strcat (buff, \"<unknown>\");\n-\n-  strcat (buff, \"]\");\n   return buff;\n }\n \n@@ -11467,7 +11455,7 @@ process_version_sections (Filedata * filedata)\n static const char *\n get_symbol_binding (Filedata * filedata, unsigned int binding)\n {\n-  static char buff[32];\n+  static char buff[64];\n \n   switch (binding)\n     {\n@@ -11494,7 +11482,7 @@ get_symbol_binding (Filedata * filedata, unsigned int binding)\n static const char *\n get_symbol_type (Filedata * filedata, unsigned int type)\n {\n-  static char buff[32];\n+  static char buff[64];\n \n   switch (type)\n     {\n@@ -11691,7 +11679,7 @@ get_ppc64_symbol_other (unsigned int other)\n   other >>= STO_PPC64_LOCAL_BIT;\n   if (other <= 6)\n     {\n-      static char buf[32];\n+      static char buf[64];\n       if (other >= 2)\n \tother = ppc64_decode_local_entry (other);\n       snprintf (buf, sizeof buf, _(\"<localentry>: %d\"), other);\n@@ -11704,7 +11692,7 @@ static const char *\n get_symbol_other (Filedata * filedata, unsigned int other)\n {\n   const char * result = NULL;\n-  static char buff [32];\n+  static char buff [64];\n \n   if (other == 0)\n     return \"\";"
    }
  ]
}