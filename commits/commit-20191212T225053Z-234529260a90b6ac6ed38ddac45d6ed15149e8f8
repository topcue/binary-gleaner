{
  "sha": "234529260a90b6ac6ed38ddac45d6ed15149e8f8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjM0NTI5MjYwYTkwYjZhYzZlZDM4ZGRhYzQ1ZDZlZDE1MTQ5ZThmOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-01T22:42:29Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-12T22:50:53Z"
    },
    "message": "Introduce program_space::remove_objfile\n\nThis introduces a new method, program_space::remove_objfile, and\nchanges the objfile destructor not to unlink an objfile from the\nprogram space's list.\n\nThis is cleaner because, like the previous patch, it treats the\nprogram space more like a container for objfiles.  Also, this makes it\npossible to keep an objfile alive even though it has been unlinked\nfrom the program space's list, which is important for processing in a\nworker thread.\n\ngdb/ChangeLog\n2019-12-12  Tom Tromey  <tom@tromey.com>\n\n\t* progspace.h (struct program_space) <remove_objfile>: Declare.\n\t* progspace.c (program_space::remove_objfile): New method.\n\t* objfiles.c (unlink_objfile): Remove.\n\t(objfile::unlink): Call remove_objfile.\n\t(objfile): Don't call unlink_objfile.\n\nChange-Id: I22f768827723dce21886fae9b3664532c8349e68",
    "tree": {
      "sha": "e071a1122c41679020c08c4e19bde65c1a949750",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e071a1122c41679020c08c4e19bde65c1a949750"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/234529260a90b6ac6ed38ddac45d6ed15149e8f8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/234529260a90b6ac6ed38ddac45d6ed15149e8f8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/234529260a90b6ac6ed38ddac45d6ed15149e8f8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/234529260a90b6ac6ed38ddac45d6ed15149e8f8/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 36,
    "deletions": 28
  },
  "files": [
    {
      "sha": "c6345c0d63fcafb5accee1087ce726571787417d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/234529260a90b6ac6ed38ddac45d6ed15149e8f8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/234529260a90b6ac6ed38ddac45d6ed15149e8f8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=234529260a90b6ac6ed38ddac45d6ed15149e8f8",
      "patch": "@@ -1,3 +1,11 @@\n+2019-12-12  Tom Tromey  <tom@tromey.com>\n+\n+\t* progspace.h (struct program_space) <remove_objfile>: Declare.\n+\t* progspace.c (program_space::remove_objfile): New method.\n+\t* objfiles.c (unlink_objfile): Remove.\n+\t(objfile::unlink): Call remove_objfile.\n+\t(objfile): Don't call unlink_objfile.\n+\n 2019-12-12  Tom Tromey  <tom@tromey.com>\n \n \t* progspace.h (struct program_space) <add_objfile>: Declare"
    },
    {
      "sha": "34f6a29387e21d336115b955a9613a425d18a343",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 1,
      "deletions": 28,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/234529260a90b6ac6ed38ddac45d6ed15149e8f8/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/234529260a90b6ac6ed38ddac45d6ed15149e8f8/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=234529260a90b6ac6ed38ddac45d6ed15149e8f8",
      "patch": "@@ -456,27 +456,6 @@ separate_debug_iterator::operator++ ()\n   return *this;\n }\n \n-/* Unlink OBJFILE from the list of known objfiles.  */\n-\n-static void\n-unlink_objfile (struct objfile *objfile)\n-{\n-  struct objfile **objpp;\n-\n-  for (objpp = &object_files; *objpp != NULL; objpp = &((*objpp)->next))\n-    {\n-      if (*objpp == objfile)\n-\t{\n-\t  *objpp = (*objpp)->next;\n-\t  objfile->next = NULL;\n-\t  return;\n-\t}\n-    }\n-\n-  internal_error (__FILE__, __LINE__,\n-\t\t  _(\"unlink_objfile: objfile already unlinked\"));\n-}\n-\n /* Add OBJFILE as a separate debug objfile of PARENT.  */\n \n static void\n@@ -519,6 +498,7 @@ objfile::make (bfd *bfd_, const char *name_, objfile_flags flags_,\n void\n objfile::unlink ()\n {\n+  current_program_space->remove_objfile (this);\n   delete this;\n }\n \n@@ -609,13 +589,6 @@ objfile::~objfile ()\n   else\n     delete per_bfd;\n \n-  /* Remove it from the chain of all objfiles.  */\n-\n-  unlink_objfile (this);\n-\n-  if (this == symfile_objfile)\n-    symfile_objfile = NULL;\n-\n   /* Before the symbol table code was redone to make it easier to\n      selectively load and remove information particular to a specific\n      linkage unit, gdb used to do these things whenever the monolithic"
    },
    {
      "sha": "e6c4f55c4e8b1c39dda555ff7a019d3ec84f4a89",
      "filename": "gdb/progspace.c",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/234529260a90b6ac6ed38ddac45d6ed15149e8f8/gdb/progspace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/234529260a90b6ac6ed38ddac45d6ed15149e8f8/gdb/progspace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/progspace.c?ref=234529260a90b6ac6ed38ddac45d6ed15149e8f8",
      "patch": "@@ -175,6 +175,31 @@ program_space::add_objfile (struct objfile *objfile, struct objfile *before)\n \n }\n \n+/* See progspace.h.  */\n+\n+void\n+program_space::remove_objfile (struct objfile *objfile)\n+{\n+  struct objfile **objpp;\n+\n+  for (objpp = &object_files; *objpp != NULL; objpp = &((*objpp)->next))\n+    {\n+      if (*objpp == objfile)\n+\t{\n+\t  *objpp = (*objpp)->next;\n+\t  objfile->next = NULL;\n+\n+\t  if (objfile == symfile_object_file)\n+\t    symfile_object_file = NULL;\n+\n+\t  return;\n+\t}\n+    }\n+\n+  internal_error (__FILE__, __LINE__,\n+\t\t  _(\"remove_objfile: objfile already unlinked\"));\n+}\n+\n /* Copies program space SRC to DEST.  Copies the main executable file,\n    and the main symbol file.  Returns DEST.  */\n "
    },
    {
      "sha": "e1fcc3c68d2e00932aaa68bee77f8fc080db2271",
      "filename": "gdb/progspace.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/234529260a90b6ac6ed38ddac45d6ed15149e8f8/gdb/progspace.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/234529260a90b6ac6ed38ddac45d6ed15149e8f8/gdb/progspace.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/progspace.h?ref=234529260a90b6ac6ed38ddac45d6ed15149e8f8",
      "patch": "@@ -170,6 +170,8 @@ struct program_space\n      list.  */\n   void add_objfile (struct objfile *objfile, struct objfile *before);\n \n+  /* Remove OBJFILE from the list of objfiles.  */\n+  void remove_objfile (struct objfile *objfile);\n \n   /* Pointer to next in linked list.  */\n   struct program_space *next = NULL;"
    }
  ]
}