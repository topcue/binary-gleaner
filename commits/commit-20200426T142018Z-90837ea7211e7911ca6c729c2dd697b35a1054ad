{
  "sha": "90837ea7211e7911ca6c729c2dd697b35a1054ad",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTA4MzdlYTcyMTFlNzkxMWNhNmM3MjljMmRkNjk3YjM1YTEwNTRhZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-04-26T09:00:50Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-04-26T14:20:18Z"
    },
    "message": "readelf: NULL dereference\n\nThis fixes another missing error check.\n\n\t* readelf.c (get_num_dynamic_syms): Check DT_MIPS_XHASH was\n\tread before dereferencing, and gracefully return.  Remove\n\tgnu_hash_error variable.  Free gnu hash arrays if number of\n\tsyms found is zero.",
    "tree": {
      "sha": "dbdaa80baf63732886a2bb797f741942fad09912",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dbdaa80baf63732886a2bb797f741942fad09912"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/90837ea7211e7911ca6c729c2dd697b35a1054ad",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90837ea7211e7911ca6c729c2dd697b35a1054ad",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/90837ea7211e7911ca6c729c2dd697b35a1054ad",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90837ea7211e7911ca6c729c2dd697b35a1054ad/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bc3609fd3891c1cc0007eccd74bca98aabc03996",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc3609fd3891c1cc0007eccd74bca98aabc03996",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bc3609fd3891c1cc0007eccd74bca98aabc03996"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 16,
    "deletions": 30
  },
  "files": [
    {
      "sha": "7fb2dbe3f9ebba938ef30575d87710d9248afad9",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90837ea7211e7911ca6c729c2dd697b35a1054ad/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90837ea7211e7911ca6c729c2dd697b35a1054ad/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=90837ea7211e7911ca6c729c2dd697b35a1054ad",
      "patch": "@@ -1,3 +1,10 @@\n+2020-04-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_num_dynamic_syms): Check DT_MIPS_XHASH was\n+\tread before dereferencing, and gracefully return.  Remove\n+\tgnu_hash_error variable.  Free gnu hash arrays if number of\n+\tsyms found is zero.\n+\n 2020-04-24  Alan Modra  <amodra@gmail.com>\n \n \t* readelf.c (get_num_dynamic_syms): Check for nbuckets and nchains"
    },
    {
      "sha": "68dfa32f1fa08716195c1ab76676676a330be152",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 9,
      "deletions": 30,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90837ea7211e7911ca6c729c2dd697b35a1054ad/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90837ea7211e7911ca6c729c2dd697b35a1054ad/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=90837ea7211e7911ca6c729c2dd697b35a1054ad",
      "patch": "@@ -10026,7 +10026,6 @@ get_num_dynamic_syms (Filedata * filedata)\n       bfd_vma i, maxchain = 0xffffffff, bitmaskwords;\n       bfd_vma buckets_vma;\n       unsigned long hn;\n-      bfd_boolean gnu_hash_error = FALSE;\n \n       if (fseek (filedata->handle,\n \t\t (filedata->archive_file_offset\n@@ -10036,14 +10035,12 @@ get_num_dynamic_syms (Filedata * filedata)\n \t\t SEEK_SET))\n \t{\n \t  error (_(\"Unable to seek to start of dynamic information\\n\"));\n-\t  gnu_hash_error = TRUE;\n \t  goto no_gnu_hash;\n \t}\n \n       if (fread (nb, 16, 1, filedata->handle) != 1)\n \t{\n \t  error (_(\"Failed to read in number of buckets\\n\"));\n-\t  gnu_hash_error = TRUE;\n \t  goto no_gnu_hash;\n \t}\n \n@@ -10062,37 +10059,27 @@ get_num_dynamic_syms (Filedata * filedata)\n \t\t SEEK_SET))\n \t{\n \t  error (_(\"Unable to seek to start of dynamic information\\n\"));\n-\t  gnu_hash_error = TRUE;\n \t  goto no_gnu_hash;\n \t}\n \n       filedata->gnubuckets\n \t= get_dynamic_data (filedata, filedata->ngnubuckets, 4);\n \n       if (filedata->gnubuckets == NULL)\n-\t{\n-\t  gnu_hash_error = TRUE;\n-\t  goto no_gnu_hash;\n-\t}\n+\tgoto no_gnu_hash;\n \n       for (i = 0; i < filedata->ngnubuckets; i++)\n \tif (filedata->gnubuckets[i] != 0)\n \t  {\n \t    if (filedata->gnubuckets[i] < filedata->gnusymidx)\n-\t      {\n-\t\tgnu_hash_error = TRUE;\n-\t\tgoto no_gnu_hash;\n-\t      }\n+\t      goto no_gnu_hash;\n \n \t    if (maxchain == 0xffffffff || filedata->gnubuckets[i] > maxchain)\n \t      maxchain = filedata->gnubuckets[i];\n \t  }\n \n       if (maxchain == 0xffffffff)\n-\t{\n-\t  gnu_hash_error = TRUE;\n-\t  goto no_gnu_hash;\n-\t}\n+\tgoto no_gnu_hash;\n \n       maxchain -= filedata->gnusymidx;\n \n@@ -10105,7 +10092,6 @@ get_num_dynamic_syms (Filedata * filedata)\n \t\t SEEK_SET))\n \t{\n \t  error (_(\"Unable to seek to start of dynamic information\\n\"));\n-\t  gnu_hash_error = TRUE;\n \t  goto no_gnu_hash;\n \t}\n \n@@ -10114,15 +10100,11 @@ get_num_dynamic_syms (Filedata * filedata)\n \t  if (fread (nb, 4, 1, filedata->handle) != 1)\n \t    {\n \t      error (_(\"Failed to determine last chain length\\n\"));\n-\t      gnu_hash_error = TRUE;\n \t      goto no_gnu_hash;\n \t    }\n \n \t  if (maxchain + 1 == 0)\n-\t    {\n-\t      gnu_hash_error = TRUE;\n-\t      goto no_gnu_hash;\n-\t    }\n+\t    goto no_gnu_hash;\n \n \t  ++maxchain;\n \t}\n@@ -10136,18 +10118,14 @@ get_num_dynamic_syms (Filedata * filedata)\n \t\t SEEK_SET))\n \t{\n \t  error (_(\"Unable to seek to start of dynamic information\\n\"));\n-\t  gnu_hash_error = TRUE;\n \t  goto no_gnu_hash;\n \t}\n \n       filedata->gnuchains = get_dynamic_data (filedata, maxchain, 4);\n       filedata->ngnuchains = maxchain;\n \n       if (filedata->gnuchains == NULL)\n-\t{\n-\t  gnu_hash_error = TRUE;\n-\t  goto no_gnu_hash;\n-\t}\n+\tgoto no_gnu_hash;\n \n       if (filedata->dynamic_info_DT_MIPS_XHASH)\n \t{\n@@ -10159,11 +10137,12 @@ get_num_dynamic_syms (Filedata * filedata)\n \t\t     SEEK_SET))\n \t    {\n \t      error (_(\"Unable to seek to start of dynamic information\\n\"));\n-\t      gnu_hash_error = TRUE;\n \t      goto no_gnu_hash;\n \t    }\n \n \t  filedata->mipsxlat = get_dynamic_data (filedata, maxchain, 4);\n+\t  if (filedata->mipsxlat == NULL)\n+\t    goto no_gnu_hash;\n \t}\n \n       for (hn = 0; hn < filedata->ngnubuckets; ++hn)\n@@ -10190,9 +10169,9 @@ get_num_dynamic_syms (Filedata * filedata)\n \t\t   && (filedata->gnuchains[off++] & 1) == 0);\n \t  }\n \n-    no_gnu_hash:\n-      if (gnu_hash_error)\n+      if (num_of_syms == 0)\n \t{\n+\tno_gnu_hash:\n \t  if (filedata->mipsxlat)\n \t    {\n \t      free (filedata->mipsxlat);"
    }
  ]
}