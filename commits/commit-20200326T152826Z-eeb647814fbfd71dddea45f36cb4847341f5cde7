{
  "sha": "eeb647814fbfd71dddea45f36cb4847341f5cde7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWViNjQ3ODE0ZmJmZDcxZGRkZWE0NWYzNmNiNDg0NzM0MWY1Y2RlNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-26T15:28:08Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-26T15:28:26Z"
    },
    "message": "Rewrite new die_info methods\n\nThis rewrites the two new die_info methods to iterate over attributes\nrather than to do two separate searches.\n\ngdb/ChangeLog\n2020-03-26  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/die.h (struct die_info) <addr_base, ranges_base>:\n\tRewrite.",
    "tree": {
      "sha": "ea50e03859b54fe84ea4fdda4078c595eae66d05",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ea50e03859b54fe84ea4fdda4078c595eae66d05"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eeb647814fbfd71dddea45f36cb4847341f5cde7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eeb647814fbfd71dddea45f36cb4847341f5cde7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eeb647814fbfd71dddea45f36cb4847341f5cde7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eeb647814fbfd71dddea45f36cb4847341f5cde7/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a39fdb411d43824b27d886bab42cada62a9fe431",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a39fdb411d43824b27d886bab42cada62a9fe431",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a39fdb411d43824b27d886bab42cada62a9fe431"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 21,
    "deletions": 12
  },
  "files": [
    {
      "sha": "670f7f6c25b0df630d9ef6e02778bb4077151e35",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eeb647814fbfd71dddea45f36cb4847341f5cde7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eeb647814fbfd71dddea45f36cb4847341f5cde7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=eeb647814fbfd71dddea45f36cb4847341f5cde7",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/die.h (struct die_info) <addr_base, ranges_base>:\n+\tRewrite.\n+\n 2020-03-26  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/die.h (struct die_info) <addr_base, ranges_base>: New"
    },
    {
      "sha": "5522ebdf3114f013b70184811c930db8d90be194",
      "filename": "gdb/dwarf2/die.h",
      "status": "modified",
      "additions": 16,
      "deletions": 12,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eeb647814fbfd71dddea45f36cb4847341f5cde7/gdb/dwarf2/die.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eeb647814fbfd71dddea45f36cb4847341f5cde7/gdb/dwarf2/die.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/die.h?ref=eeb647814fbfd71dddea45f36cb4847341f5cde7",
      "patch": "@@ -38,25 +38,29 @@ struct die_info\n      DW_AT_addr_base.  */\n   gdb::optional<ULONGEST> addr_base ()\n   {\n-    struct attribute *attr = this->attr (DW_AT_addr_base);\n-    if (attr == nullptr)\n-      attr = this->attr (DW_AT_GNU_addr_base);\n-    if (attr == nullptr)\n-      return gdb::optional<ULONGEST> ();\n-    return DW_UNSND (attr);\n+    for (unsigned i = 0; i < num_attrs; ++i)\n+      if (attrs[i].name == DW_AT_addr_base\n+\t  || attrs[i].name == DW_AT_GNU_addr_base)\n+\t{\n+\t  /* If both exist, just use the first one.  */\n+\t  return DW_UNSND (&attrs[i]);\n+\t}\n+    return gdb::optional<ULONGEST> ();\n   }\n \n   /* Return range lists base of the compile unit, which, if exists, is\n      stored either at the attribute DW_AT_rnglists_base or\n      DW_AT_GNU_ranges_base.  */\n   ULONGEST ranges_base ()\n   {\n-    struct attribute *attr = this->attr (DW_AT_rnglists_base);\n-    if (attr == nullptr)\n-      attr = this->attr (DW_AT_GNU_ranges_base);\n-    if (attr == nullptr)\n-      return 0;\n-    return DW_UNSND (attr);\n+    for (unsigned i = 0; i < num_attrs; ++i)\n+      if (attrs[i].name == DW_AT_rnglists_base\n+\t  || attrs[i].name == DW_AT_GNU_ranges_base)\n+\t{\n+\t  /* If both exist, just use the first one.  */\n+\t  return DW_UNSND (&attrs[i]);\n+\t}\n+    return 0;\n   }\n \n "
    }
  ]
}