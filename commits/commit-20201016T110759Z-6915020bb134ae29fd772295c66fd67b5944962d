{
  "sha": "6915020bb134ae29fd772295c66fd67b5944962d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjkxNTAyMGJiMTM0YWUyOWZkNzcyMjk1YzY2ZmQ2N2I1OTQ0OTYyZA==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-10-16T11:03:20Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-10-16T11:07:59Z"
    },
    "message": "gas: Reuse the input file entry in the file table\n\nSome instructions can be emitted (dwarf2_emit_insn is called) before the\nfirst .file <NUMBER> directive has been seen, which allocates the input\nfile as the first file entry.  Reuse the input file entry in the file\ntable.\n\n\tPR gas/25878\n\tPR gas/26740\n\t* dwarf2dbg.c (file_entry): Remove auto_assigned.\n\t(assign_file_to_slot): Remove the auto_assign argument.\n\t(allocate_filenum): Updated.\n\t(allocate_filename_to_slot): Reuse the input file entry in the\n\tfile table.\n\t(dwarf2_where): Replace as_where with as_where_physical.\n\t* testsuite/gas/i386/dwarf5-line-1.d: New file.\n\t* testsuite/gas/i386/dwarf5-line-1.s: Likewise.\n\t* testsuite/gas/i386/i386.exp: Run dwarf5-line-1.",
    "tree": {
      "sha": "8876a55aaee7877e764b0b1a576c36483d457ac3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8876a55aaee7877e764b0b1a576c36483d457ac3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6915020bb134ae29fd772295c66fd67b5944962d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6915020bb134ae29fd772295c66fd67b5944962d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6915020bb134ae29fd772295c66fd67b5944962d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6915020bb134ae29fd772295c66fd67b5944962d/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/23ae20f5e3afeeab9aa616c63ab3b357668476d5"
    }
  ],
  "stats": {
    "total": 103,
    "additions": 84,
    "deletions": 19
  },
  "files": [
    {
      "sha": "a74362be587c95e8c2ffced1e1709184430a329c",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 1,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6915020bb134ae29fd772295c66fd67b5944962d/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6915020bb134ae29fd772295c66fd67b5944962d/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=6915020bb134ae29fd772295c66fd67b5944962d",
      "patch": "@@ -1,6 +1,22 @@\n+2020-10-16  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/25878\n+\tPR gas/26740\n+\t* dwarf2dbg.c (file_entry): Remove auto_assigned.\n+\t(assign_file_to_slot): Remove the auto_assign argument.\n+\t(allocate_filenum): Updated.\n+\t(allocate_filename_to_slot): Reuse the input file entry in the\n+\tfile table.\n+\t(dwarf2_where): Replace as_where with as_where_physical.\n+\t* testsuite/gas/i386/dwarf5-line-1.d: New file.\n+\t* testsuite/gas/i386/dwarf5-line-1.s: Likewise.\n+\t* testsuite/gas/i386/i386.exp: Run dwarf5-line-1.\n+\n 2020-10-16  Lili Cui  <lili.cui@intel.com>\n \n-\t* config/tc-i386.c: Move Pseudo Prefix check to match_template.\n+\t* config/tc-i386.c (cpu_flags_match): Move Pseudo Prefix check\n+\tto ...\n+\t(match_template): Here.\n \t* testsuite/gas/i386/avx-vnni-inval.l: New file.\n \t* testsuite/gas/i386/avx-vnni-inval.s: Likewise.\n \t* testsuite/gas/i386/avx-vnni.d: Delete invalid {vex2} test."
    },
    {
      "sha": "6943dbf9ca4246d739e90d42244abc35fafced8c",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 10,
      "deletions": 18,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6915020bb134ae29fd772295c66fd67b5944962d/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6915020bb134ae29fd772295c66fd67b5944962d/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=6915020bb134ae29fd772295c66fd67b5944962d",
      "patch": "@@ -211,7 +211,6 @@ struct file_entry\n {\n   const char *   filename;\n   unsigned int   dir;\n-  bfd_boolean    auto_assigned;\n   unsigned char  md5[NUM_MD5_BYTES];\n };\n \n@@ -633,7 +632,7 @@ get_directory_table_entry (const char *  dirname,\n }\n \n static bfd_boolean\n-assign_file_to_slot (unsigned long i, const char *file, unsigned int dir, bfd_boolean auto_assign)\n+assign_file_to_slot (unsigned long i, const char *file, unsigned int dir)\n {\n   if (i >= files_allocated)\n     {\n@@ -653,7 +652,6 @@ assign_file_to_slot (unsigned long i, const char *file, unsigned int dir, bfd_bo\n \n   files[i].filename = file;\n   files[i].dir = dir;\n-  files[i].auto_assigned = auto_assign;\n   memset (files[i].md5, 0, NUM_MD5_BYTES);\n \n   if (files_in_use < i + 1)\n@@ -717,7 +715,7 @@ allocate_filenum (const char * pathname)\n \treturn i;\n       }\n \n-  if (!assign_file_to_slot (i, file, dir, TRUE))\n+  if (!assign_file_to_slot (i, file, dir))\n     return -1;\n \n   last_used = i;\n@@ -792,18 +790,12 @@ allocate_filename_to_slot (const char *  dirname,\n \t}\n \n     fail:\n-      /* If NUM was previously allocated automatically then\n-\t choose another slot for it, so that we can reuse NUM.  */\n-      if (files[num].auto_assigned)\n-\t{\n-\t  /* Find an unused slot.  */\n-\t  for (i = 1; i < files_in_use; ++i)\n-\t    if (files[i].filename == NULL)\n-\t      break;\n-\t  if (! assign_file_to_slot (i, files[num].filename, files[num].dir, TRUE))\n-\t    return FALSE;\n-\t  files[num].filename = NULL;\n-\t}\n+      /* Reuse NUM if it is 1 and was assigned to the input file before\n+\t the first .file <NUMBER> directive was seen.  */\n+      file = as_where_physical (&i);\n+      file = get_basename (file);\n+      if (num == 1 && filename_cmp (file, files[num].filename) == 0)\n+\tfiles[num].filename = NULL;\n       else\n \t{\n \t  as_bad (_(\"file table slot %u is already occupied by a different file (%s%s%s vs %s%s%s)\"),\n@@ -833,7 +825,7 @@ allocate_filename_to_slot (const char *  dirname,\n   d = get_directory_table_entry (dirname, dirlen, num == 0);\n   i = num;\n \n-  if (! assign_file_to_slot (i, file, d, FALSE))\n+  if (! assign_file_to_slot (i, file, d))\n     return FALSE;\n \n   if (with_md5)\n@@ -902,7 +894,7 @@ dwarf2_where (struct dwarf2_line_info *line)\n       const char *filename;\n \n       memset (line, 0, sizeof (*line));\n-      filename = as_where (&line->line);\n+      filename = as_where_physical (&line->line);\n       line->filenum = allocate_filenum (filename);\n       /* FIXME: We should check the return value from allocate_filenum.  */\n       line->column = 0;"
    },
    {
      "sha": "7d602d0594f122f2793906e7aa62409dcb7a222f",
      "filename": "gas/testsuite/gas/i386/dwarf5-line-1.d",
      "status": "added",
      "additions": 50,
      "deletions": 0,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6915020bb134ae29fd772295c66fd67b5944962d/gas/testsuite/gas/i386/dwarf5-line-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6915020bb134ae29fd772295c66fd67b5944962d/gas/testsuite/gas/i386/dwarf5-line-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/dwarf5-line-1.d?ref=6915020bb134ae29fd772295c66fd67b5944962d",
      "patch": "@@ -0,0 +1,50 @@\n+#as: -gdwarf-5\n+#readelf: -wl\n+#name: DWARF5 .debug_line 1\n+\n+Raw dump of debug contents of section \\.z?debug_line:\n+\n+  Offset:                      0x0\n+  Length:                      .*\n+  DWARF Version:               5\n+  Address size \\(bytes\\):        .*\n+  Segment selector \\(bytes\\):    0\n+  Prologue Length:             .*\n+  Minimum Instruction Length:  1\n+  Maximum Ops per Instruction: 1\n+  Initial value of 'is_stmt':  1\n+  Line Base:                   -5\n+  Line Range:                  14\n+  Opcode Base:                 13\n+\n+ Opcodes:\n+  Opcode 1 has 0 args\n+  Opcode 2 has 1 arg\n+  Opcode 3 has 1 arg\n+  Opcode 4 has 1 arg\n+  Opcode 5 has 1 arg\n+  Opcode 6 has 0 args\n+  Opcode 7 has 0 args\n+  Opcode 8 has 0 args\n+  Opcode 9 has 1 arg\n+  Opcode 10 has 0 args\n+  Opcode 11 has 0 args\n+  Opcode 12 has 1 arg\n+\n+ The Directory Table \\(offset 0x.*, lines 2, columns 1\\):\n+  Entry\tName\n+  0\t\\(indirect line string, offset: 0x.*\\): .*/gas/testsuite/gas/i386\n+  1\t\\(indirect line string, offset: 0x.*\\): .*/gas/testsuite/gas/i386\n+\n+ The File Name Table \\(offset 0x.*, lines 2, columns 3\\):\n+  Entry\tDir\tMD5\t\t\t\tName\n+  0\t0 0xbbd69fc03ce253b2dbaab2522dd519ae\t\\(indirect line string, offset: 0x.*\\): core.c\n+  1\t0 0x00000000000000000000000000000000\t\\(indirect line string, offset: 0x.*\\): types.h\n+\n+ Line Number Statements:\n+  \\[0x.*\\]  Extended opcode 2: set Address to 0x0\n+  \\[0x.*\\]  Special opcode 8: advance Address by 0 to 0x0 and Line by 3 to 4\n+  \\[0x.*\\]  Advance PC by 1 to 0x1\n+  \\[0x.*\\]  Extended opcode 1: End of Sequence\n+\n+"
    },
    {
      "sha": "6e343ad0d362bda726a023ef362f6af7770664e4",
      "filename": "gas/testsuite/gas/i386/dwarf5-line-1.s",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6915020bb134ae29fd772295c66fd67b5944962d/gas/testsuite/gas/i386/dwarf5-line-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6915020bb134ae29fd772295c66fd67b5944962d/gas/testsuite/gas/i386/dwarf5-line-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/dwarf5-line-1.s?ref=6915020bb134ae29fd772295c66fd67b5944962d",
      "patch": "@@ -0,0 +1,6 @@\n+\t.text\n+\t.global kretprobe_trampoline\n+kretprobe_trampoline:\n+\tret\n+\t.file\t0 \"core.c\" md5 0xbbd69fc03ce253b2dbaab2522dd519ae\n+\t.file\t1 \"types.h\""
    },
    {
      "sha": "683474969d35428f5fb6e726e93d8fe31d057c54",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6915020bb134ae29fd772295c66fd67b5944962d/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6915020bb134ae29fd772295c66fd67b5944962d/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=6915020bb134ae29fd772295c66fd67b5944962d",
      "patch": "@@ -614,6 +614,7 @@ if [gas_32_check] then {\n \trun_dump_test \"dwarf2-line-2\"\n \trun_dump_test \"dwarf2-line-3\"\n \trun_dump_test \"dwarf2-line-4\"\n+\trun_dump_test \"dwarf5-line-1\"\n \n \trun_dump_test \"dw2-compress-2\"\n \trun_dump_test \"dw2-compressed-2\""
    }
  ]
}