{
  "sha": "82fc57fd6b0aff85d86c47b5892f91c04fd58f0f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODJmYzU3ZmQ2YjBhZmY4NWQ4NmM0N2I1ODkyZjkxYzA0ZmQ1OGYwZg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-10-20T13:03:42Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-12-23T20:53:14Z"
    },
    "message": "gdb: move go_language class declaration into header file\n\nMove the go_language class into go-lang.h, this allows us to have\nmember functions implemented directly in the different go-*.c files\ninstead of having to trampoline out to global functions.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* go-exp.y (go_parse): Rename to...\n\t(go_language::parser): ...this.\n\t* go-lang.c (go_demangle): Rename to...\n\t(go_language::demangle_symbol): ...this.\n\t(go_language::expression_ops): Implementation moved here out of\n\tclass declaration.\n\t(go_op_print_tab): Rename to...\n\t(go_language::op_print_tab): ...this, update comment.\n\t(class go_language): Declaration moved to go-lang.h.\n\t(go_language::language_arch_info): Implementation moved here out\n\tof class declaration.\n\t* go-lang.h (go_parse): Delete declaration.\n\t(go_demangle): Delete declaration.\n\t(go_print_type): Delete declaration.\n\t(go_value_print_inner): Delete declaration.\n\t(class go_language): Declaration moved here from go-lang.c.\n\t* go-typeprint.c (go_print_type): Rename to...\n\t(go_language::print_type): ...this.\n\t* go-valprint.c (go_value_print_inner): Rename to...\n\t(go_language::value_print_inner): ...this.\n\t* symtab.c (demangle_for_lookup): Call demangle_symbol method on\n\tthe go_language object.",
    "tree": {
      "sha": "cf157d5c0160f8f7e5f27342f537574861d46b53",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cf157d5c0160f8f7e5f27342f537574861d46b53"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "76ca72bc5b72ac0bbab239bda41cd61f6cb7d051",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/76ca72bc5b72ac0bbab239bda41cd61f6cb7d051",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/76ca72bc5b72ac0bbab239bda41cd61f6cb7d051"
    }
  ],
  "stats": {
    "total": 301,
    "additions": 161,
    "deletions": 140
  },
  "files": [
    {
      "sha": "a0f46226211467053ef289e6fd79fb249bdf1089",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=82fc57fd6b0aff85d86c47b5892f91c04fd58f0f",
      "patch": "@@ -1,3 +1,28 @@\n+2020-12-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* go-exp.y (go_parse): Rename to...\n+\t(go_language::parser): ...this.\n+\t* go-lang.c (go_demangle): Rename to...\n+\t(go_language::demangle_symbol): ...this.\n+\t(go_language::expression_ops): Implementation moved here out of\n+\tclass declaration.\n+\t(go_op_print_tab): Rename to...\n+\t(go_language::op_print_tab): ...this, update comment.\n+\t(class go_language): Declaration moved to go-lang.h.\n+\t(go_language::language_arch_info): Implementation moved here out\n+\tof class declaration.\n+\t* go-lang.h (go_parse): Delete declaration.\n+\t(go_demangle): Delete declaration.\n+\t(go_print_type): Delete declaration.\n+\t(go_value_print_inner): Delete declaration.\n+\t(class go_language): Declaration moved here from go-lang.c.\n+\t* go-typeprint.c (go_print_type): Rename to...\n+\t(go_language::print_type): ...this.\n+\t* go-valprint.c (go_value_print_inner): Rename to...\n+\t(go_language::value_print_inner): ...this.\n+\t* symtab.c (demangle_for_lookup): Call demangle_symbol method on\n+\tthe go_language object.\n+\n 2020-12-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* c-lang.c (language_defn::printchar): Call emitchar, not"
    },
    {
      "sha": "078bdca732c3aa2b7aed8163390a733cbbba42c7",
      "filename": "gdb/go-exp.y",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/go-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/go-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-exp.y?ref=82fc57fd6b0aff85d86c47b5892f91c04fd58f0f",
      "patch": "@@ -1550,8 +1550,10 @@ yylex (void)\n   return classify_name (pstate, pstate->expression_context_block);\n }\n \n+/* See language.h.  */\n+\n int\n-go_parse (struct parser_state *par_state)\n+go_language::parser (struct parser_state *par_state) const\n {\n   /* Setting up the parser state.  */\n   scoped_restore pstate_restore = make_scoped_restore (&pstate);"
    },
    {
      "sha": "eafcfb4676a1c8aa5306cc7b23114ee85ed90219",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 45,
      "deletions": 119,
      "changes": 164,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=82fc57fd6b0aff85d86c47b5892f91c04fd58f0f",
      "patch": "@@ -334,7 +334,7 @@ unpack_mangled_go_symbol (const char *mangled_name,\n    thus not too much effort is currently put into it.  */\n \n char *\n-go_demangle (const char *mangled_name, int options)\n+go_language::demangle_symbol (const char *mangled_name, int options) const\n {\n   struct obstack tempbuf;\n   char *result;\n@@ -386,6 +386,14 @@ go_demangle (const char *mangled_name, int options)\n   return result;\n }\n \n+/* See language.h.  */\n+\n+const struct exp_descriptor *\n+go_language::expression_ops () const\n+{\n+  return &exp_descriptor_c;\n+}\n+\n /* Given a Go symbol, return its package or NULL if unknown.\n    Space for the result is malloc'd, caller must free.  */\n \n@@ -444,11 +452,11 @@ go_block_package_name (const struct block *block)\n   return NULL;\n }\n \n-/* Table mapping opcodes into strings for printing operators\n-   and precedences of the operators.\n+/* See go-lang.h.\n+\n    TODO(dje): &^ ?  */\n \n-static const struct op_print go_op_print_tab[] =\n+const struct op_print go_language::op_print_tab[] =\n {\n   {\",\", BINOP_COMMA, PREC_COMMA, 0},\n   {\"=\", BINOP_ASSIGN, PREC_ASSIGN, 1},\n@@ -482,125 +490,43 @@ static const struct op_print go_op_print_tab[] =\n   {NULL, OP_NULL, PREC_SUFFIX, 0}\n };\n \n-/* Class representing the Go language.  */\n+/* See language.h.  */\n \n-class go_language : public language_defn\n+void\n+go_language::language_arch_info (struct gdbarch *gdbarch,\n+\t\t\t\t struct language_arch_info *lai) const\n {\n-public:\n-  go_language ()\n-    : language_defn (language_go)\n-  { /* Nothing.  */ }\n-\n-  /* See language.h.  */\n-\n-  const char *name () const override\n-  { return \"go\"; }\n-\n-  /* See language.h.  */\n-\n-  const char *natural_name () const override\n-  { return \"Go\"; }\n-\n-  /* See language.h.  */\n-  void language_arch_info (struct gdbarch *gdbarch,\n-\t\t\t   struct language_arch_info *lai) const override\n-  {\n-    const struct builtin_go_type *builtin = builtin_go_type (gdbarch);\n-\n-    /* Helper function to allow shorter lines below.  */\n-    auto add  = [&] (struct type * t) -> struct type *\n-    {\n-      lai->add_primitive_type (t);\n-      return t;\n-    };\n-\n-    add (builtin->builtin_void);\n-    add (builtin->builtin_char);\n-    add (builtin->builtin_bool);\n-    add (builtin->builtin_int);\n-    add (builtin->builtin_uint);\n-    add (builtin->builtin_uintptr);\n-    add (builtin->builtin_int8);\n-    add (builtin->builtin_int16);\n-    add (builtin->builtin_int32);\n-    add (builtin->builtin_int64);\n-    add (builtin->builtin_uint8);\n-    add (builtin->builtin_uint16);\n-    add (builtin->builtin_uint32);\n-    add (builtin->builtin_uint64);\n-    add (builtin->builtin_float32);\n-    add (builtin->builtin_float64);\n-    add (builtin->builtin_complex64);\n-    add (builtin->builtin_complex128);\n-\n-    lai->set_string_char_type (builtin->builtin_char);\n-    lai->set_bool_type (builtin->builtin_bool, \"bool\");\n-  }\n-\n-  /* See language.h.  */\n-  bool sniff_from_mangled_name (const char *mangled,\n-\t\t\t\tchar **demangled) const override\n-  {\n-    *demangled = go_demangle (mangled, 0);\n-    return *demangled != NULL;\n-  }\n-\n-  /* See language.h.  */\n-\n-  char *demangle_symbol (const char *mangled, int options) const override\n-  {\n-    return go_demangle (mangled, options);\n-  }\n+  const struct builtin_go_type *builtin = builtin_go_type (gdbarch);\n \n-  /* See language.h.  */\n-\n-  void print_type (struct type *type, const char *varstring,\n-\t\t   struct ui_file *stream, int show, int level,\n-\t\t   const struct type_print_options *flags) const override\n-  {\n-    go_print_type (type, varstring, stream, show, level, flags);\n-  }\n-\n-  /* See language.h.  */\n-\n-  void value_print_inner\n-\t(struct value *val, struct ui_file *stream, int recurse,\n-\t const struct value_print_options *options) const override\n-  {\n-    return go_value_print_inner (val, stream, recurse, options);\n-  }\n-\n-  /* See language.h.  */\n-\n-  int parser (struct parser_state *ps) const override\n-  {\n-    return go_parse (ps);\n-  }\n-\n-  /* See language.h.  */\n-\n-  bool is_string_type_p (struct type *type) const override\n+  /* Helper function to allow shorter lines below.  */\n+  auto add  = [&] (struct type * t) -> struct type *\n   {\n-    type = check_typedef (type);\n-    return (type->code () == TYPE_CODE_STRUCT\n-\t    && go_classify_struct_type (type) == GO_TYPE_STRING);\n-  }\n-\n-  /* See language.h.  */\n-\n-  bool store_sym_names_in_linkage_form_p () const override\n-  { return true; }\n-\n-  /* See language.h.  */\n-\n-  const struct exp_descriptor *expression_ops () const override\n-  { return &exp_descriptor_c; }\n-\n-  /* See language.h.  */\n-\n-  const struct op_print *opcode_print_table () const override\n-  { return go_op_print_tab; }\n-};\n+    lai->add_primitive_type (t);\n+    return t;\n+  };\n+\n+  add (builtin->builtin_void);\n+  add (builtin->builtin_char);\n+  add (builtin->builtin_bool);\n+  add (builtin->builtin_int);\n+  add (builtin->builtin_uint);\n+  add (builtin->builtin_uintptr);\n+  add (builtin->builtin_int8);\n+  add (builtin->builtin_int16);\n+  add (builtin->builtin_int32);\n+  add (builtin->builtin_int64);\n+  add (builtin->builtin_uint8);\n+  add (builtin->builtin_uint16);\n+  add (builtin->builtin_uint32);\n+  add (builtin->builtin_uint64);\n+  add (builtin->builtin_float32);\n+  add (builtin->builtin_float64);\n+  add (builtin->builtin_complex64);\n+  add (builtin->builtin_complex128);\n+\n+  lai->set_string_char_type (builtin->builtin_char);\n+  lai->set_bool_type (builtin->builtin_bool, \"bool\");\n+}\n \n /* Single instance of the Go language class.  */\n "
    },
    {
      "sha": "532b4eb088709fddd2a8f0ec8732e37b5923cb36",
      "filename": "gdb/go-lang.h",
      "status": "modified",
      "additions": 80,
      "deletions": 14,
      "changes": 94,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/go-lang.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/go-lang.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.h?ref=82fc57fd6b0aff85d86c47b5892f91c04fd58f0f",
      "patch": "@@ -56,34 +56,100 @@ enum go_type\n   GO_TYPE_STRING\n };\n \n-/* Defined in go-exp.y.  */\n-\n-extern int go_parse (struct parser_state *);\n-\n /* Defined in go-lang.c.  */\n \n extern const char *go_main_name (void);\n \n extern enum go_type go_classify_struct_type (struct type *type);\n \n-extern char *go_demangle (const char *mangled, int options);\n-\n extern char *go_symbol_package_name (const struct symbol *sym);\n \n extern char *go_block_package_name (const struct block *block);\n \n extern const struct builtin_go_type *builtin_go_type (struct gdbarch *);\n \n-/* Defined in go-typeprint.c.  */\n+/* Class representing the Go language.  */\n+\n+class go_language : public language_defn\n+{\n+public:\n+  go_language ()\n+    : language_defn (language_go)\n+  { /* Nothing.  */ }\n+\n+  /* See language.h.  */\n+\n+  const char *name () const override\n+  { return \"go\"; }\n+\n+  /* See language.h.  */\n+\n+  const char *natural_name () const override\n+  { return \"Go\"; }\n+\n+  /* See language.h.  */\n+\n+  void language_arch_info (struct gdbarch *gdbarch,\n+\t\t\t   struct language_arch_info *lai) const override;\n+\n+  /* See language.h.  */\n+\n+  bool sniff_from_mangled_name (const char *mangled,\n+\t\t\t\tchar **demangled) const override\n+  {\n+    *demangled = demangle_symbol (mangled, 0);\n+    return *demangled != NULL;\n+  }\n+\n+  /* See language.h.  */\n+\n+  char *demangle_symbol (const char *mangled, int options) const override;\n+\n+  /* See language.h.  */\n \n-extern void go_print_type (struct type *type, const char *varstring,\n-\t\t\t   struct ui_file *stream, int show, int level,\n-\t\t\t   const struct type_print_options *flags);\n+  void print_type (struct type *type, const char *varstring,\n+\t\t   struct ui_file *stream, int show, int level,\n+\t\t   const struct type_print_options *flags) const override;\n \n-/* Implement la_value_print_inner for Go.  */\n+  /* See language.h.  */\n \n-extern void go_value_print_inner (struct value *value,\n-\t\t\t\t  struct ui_file *stream, int recurse,\n-\t\t\t\t  const struct value_print_options *options);\n+  void value_print_inner\n+\t(struct value *val, struct ui_file *stream, int recurse,\n+\t const struct value_print_options *options) const override;\n+\n+  /* See language.h.  */\n+\n+  int parser (struct parser_state *ps) const override;\n+\n+  /* See language.h.  */\n+\n+  bool is_string_type_p (struct type *type) const override\n+  {\n+    type = check_typedef (type);\n+    return (type->code () == TYPE_CODE_STRUCT\n+\t    && go_classify_struct_type (type) == GO_TYPE_STRING);\n+  }\n+\n+  /* See language.h.  */\n+\n+  bool store_sym_names_in_linkage_form_p () const override\n+  { return true; }\n+\n+  /* See language.h.  */\n+\n+  const struct exp_descriptor *expression_ops () const override;\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return op_print_tab; }\n+\n+private:\n+\n+  /* Table of opcode data for use by OPCODE_PRINT_TABLE member function.  */\n+\n+  static const struct op_print op_print_tab[];\n+\n+};\n \n #endif /* !defined (GO_LANG_H) */"
    },
    {
      "sha": "d768498e639efff15e42385ff2ddfc74ebd62665",
      "filename": "gdb/go-typeprint.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/go-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/go-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-typeprint.c?ref=82fc57fd6b0aff85d86c47b5892f91c04fd58f0f",
      "patch": "@@ -42,9 +42,9 @@\n    LEVEL indicates level of recursion (for nested definitions).  */\n \n void\n-go_print_type (struct type *type, const char *varstring,\n-\t       struct ui_file *stream, int show, int level,\n-\t       const struct type_print_options *flags)\n+go_language::print_type (struct type *type, const char *varstring,\n+\t\t\t struct ui_file *stream, int show, int level,\n+\t\t\t const struct type_print_options *flags) const\n {\n   /* Borrowed from c-typeprint.c.  */\n   if (show > 0)"
    },
    {
      "sha": "fdbc5c4e95a84303c536503518956323a797c2be",
      "filename": "gdb/go-valprint.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/go-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/go-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-valprint.c?ref=82fc57fd6b0aff85d86c47b5892f91c04fd58f0f",
      "patch": "@@ -87,8 +87,9 @@ print_go_string (struct type *type,\n /* See go-lang.h.  */\n \n void\n-go_value_print_inner (struct value *val, struct ui_file *stream,\n-\t\t      int recurse, const struct value_print_options *options)\n+go_language::value_print_inner (struct value *val, struct ui_file *stream,\n+\t\t\t\tint recurse,\n+\t\t\t\tconst struct value_print_options *options) const\n {\n   struct type *type = check_typedef (value_type (val));\n "
    },
    {
      "sha": "0d3fa9b61bd3e4b9e9487916494e795fec99904c",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82fc57fd6b0aff85d86c47b5892f91c04fd58f0f/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=82fc57fd6b0aff85d86c47b5892f91c04fd58f0f",
      "patch": "@@ -1843,7 +1843,8 @@ demangle_for_lookup (const char *name, enum language lang,\n     }\n   else if (lang == language_go)\n     {\n-      char *demangled_name = go_demangle (name, 0);\n+      char *demangled_name\n+\t= language_def (language_go)->demangle_symbol (name, 0);\n       if (demangled_name != NULL)\n \treturn storage.set_malloc_ptr (demangled_name);\n     }"
    }
  ]
}