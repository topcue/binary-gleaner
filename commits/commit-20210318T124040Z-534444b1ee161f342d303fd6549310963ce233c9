{
  "sha": "534444b1ee161f342d303fd6549310963ce233c9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTM0NDQ0YjFlZTE2MWYzNDJkMzAzZmQ2NTQ5MzEwOTYzY2UyMzNjOQ==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-18T12:37:52Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-18T12:40:40Z"
    },
    "message": "libctf: eliminate dtd_u, part 2: arrays\n\nThis is even simpler than ints, floats and slices, with the only extra\ncomplication being the need to manually transfer the array parameter in\nthe rarely-used function ctf_set_array.  (Arrays are unique in libctf in\nthat they can be modified post facto, not just created and appended to.\nI'm not sure why they got this exemption, but it's easy to maintain.)\n\nlibctf/ChangeLog\n2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-impl.h (ctf_dtdef_t) <dtd_u.dtu_arr>: Remove.\n\t* ctf-create.c (ctf_add_array): Use the dtd_vlen, not dtu_arr.\n\t(ctf_set_array): Likewise.\n\t* ctf-serialize.c (ctf_emit_type_sect): Just copy the dtd_vlen.\n\t* ctf-types.c (ctf_array_info): Just use the vlen.",
    "tree": {
      "sha": "40baedec204fb6417e0e412f8de81a0f4f406117",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/40baedec204fb6417e0e412f8de81a0f4f406117"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/534444b1ee161f342d303fd6549310963ce233c9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/534444b1ee161f342d303fd6549310963ce233c9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/534444b1ee161f342d303fd6549310963ce233c9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/534444b1ee161f342d303fd6549310963ce233c9/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7879dd88efdabc5a2e93b71f488f09303117a0a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7879dd88efdabc5a2e93b71f488f09303117a0a9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7879dd88efdabc5a2e93b71f488f09303117a0a9"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 27,
    "deletions": 16
  },
  "files": [
    {
      "sha": "25a32d2a658f00d6afcff912b702c88df5146672",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/534444b1ee161f342d303fd6549310963ce233c9/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/534444b1ee161f342d303fd6549310963ce233c9/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=534444b1ee161f342d303fd6549310963ce233c9",
      "patch": "@@ -1,3 +1,11 @@\n+2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_dtdef_t) <dtd_u.dtu_arr>: Remove.\n+\t* ctf-create.c (ctf_add_array): Use the dtd_vlen, not dtu_arr.\n+\t(ctf_set_array): Likewise.\n+\t* ctf-serialize.c (ctf_emit_type_sect): Just copy the dtd_vlen.\n+\t* ctf-types.c (ctf_array_info): Just use the vlen.\n+\n 2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-impl.h (ctf_dtdef_t) <dtd_u.dtu_enc>: Remove."
    },
    {
      "sha": "bc46cfa6ca80ea4ec2b62b79b190e6965c417563",
      "filename": "libctf/ctf-create.c",
      "status": "modified",
      "additions": 13,
      "deletions": 3,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/534444b1ee161f342d303fd6549310963ce233c9/libctf/ctf-create.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/534444b1ee161f342d303fd6549310963ce233c9/libctf/ctf-create.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-create.c?ref=534444b1ee161f342d303fd6549310963ce233c9",
      "patch": "@@ -635,6 +635,7 @@ ctf_id_t\n ctf_add_array (ctf_dict_t *fp, uint32_t flag, const ctf_arinfo_t *arp)\n {\n   ctf_dtdef_t *dtd;\n+  ctf_array_t cta;\n   ctf_id_t type;\n   ctf_dict_t *tmp = fp;\n \n@@ -658,12 +659,17 @@ ctf_add_array (ctf_dict_t *fp, uint32_t flag, const ctf_arinfo_t *arp)\n     }\n \n   if ((type = ctf_add_generic (fp, flag, NULL, CTF_K_ARRAY,\n-\t\t\t       0, &dtd)) == CTF_ERR)\n+\t\t\t       sizeof (ctf_array_t), &dtd)) == CTF_ERR)\n     return CTF_ERR;\t\t/* errno is set for us.  */\n \n+  memset (&cta, 0, sizeof (ctf_array_t));\n+\n   dtd->dtd_data.ctt_info = CTF_TYPE_INFO (CTF_K_ARRAY, flag, 0);\n   dtd->dtd_data.ctt_size = 0;\n-  dtd->dtd_u.dtu_arr = *arp;\n+  cta.cta_contents = (uint32_t) arp->ctr_contents;\n+  cta.cta_index = (uint32_t) arp->ctr_index;\n+  cta.cta_nelems = arp->ctr_nelems;\n+  memcpy (dtd->dtd_vlen, &cta, sizeof (ctf_array_t));\n \n   return type;\n }\n@@ -672,6 +678,7 @@ int\n ctf_set_array (ctf_dict_t *fp, ctf_id_t type, const ctf_arinfo_t *arp)\n {\n   ctf_dtdef_t *dtd = ctf_dtd_lookup (fp, type);\n+  ctf_array_t *vlen;\n \n   if (!(fp->ctf_flags & LCTF_RDWR))\n     return (ctf_set_errno (fp, ECTF_RDONLY));\n@@ -680,8 +687,11 @@ ctf_set_array (ctf_dict_t *fp, ctf_id_t type, const ctf_arinfo_t *arp)\n       || LCTF_INFO_KIND (fp, dtd->dtd_data.ctt_info) != CTF_K_ARRAY)\n     return (ctf_set_errno (fp, ECTF_BADID));\n \n+  vlen = (ctf_array_t *) dtd->dtd_vlen;\n   fp->ctf_flags |= LCTF_DIRTY;\n-  dtd->dtd_u.dtu_arr = *arp;\n+  vlen->cta_contents = (uint32_t) arp->ctr_contents;\n+  vlen->cta_index = (uint32_t) arp->ctr_index;\n+  vlen->cta_nelems = arp->ctr_nelems;\n \n   return 0;\n }"
    },
    {
      "sha": "c1ce50bc3b95e6df1f10c7d47638284e05dd9c83",
      "filename": "libctf/ctf-impl.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/534444b1ee161f342d303fd6549310963ce233c9/libctf/ctf-impl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/534444b1ee161f342d303fd6549310963ce233c9/libctf/ctf-impl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-impl.h?ref=534444b1ee161f342d303fd6549310963ce233c9",
      "patch": "@@ -196,7 +196,6 @@ typedef struct ctf_dtdef\n   union\n   {\n     ctf_list_t dtu_members;\t/* struct, union, or enum */\n-    ctf_arinfo_t dtu_arr;\t/* array */\n     uint32_t *dtu_argv;\t\t/* function */\n   } dtd_u;\n } ctf_dtdef_t;"
    },
    {
      "sha": "d8e78f361f40f536de64c0e45b27d07a093f4bbd",
      "filename": "libctf/ctf-serialize.c",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/534444b1ee161f342d303fd6549310963ce233c9/libctf/ctf-serialize.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/534444b1ee161f342d303fd6549310963ce233c9/libctf/ctf-serialize.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-serialize.c?ref=534444b1ee161f342d303fd6549310963ce233c9",
      "patch": "@@ -857,7 +857,6 @@ ctf_emit_type_sect (ctf_dict_t *fp, unsigned char **tptr)\n       uint32_t kind = LCTF_INFO_KIND (fp, dtd->dtd_data.ctt_info);\n       uint32_t vlen = LCTF_INFO_VLEN (fp, dtd->dtd_data.ctt_info);\n \n-      ctf_array_t cta;\n       size_t len;\n       ctf_stype_t *copied;\n       const char *name;\n@@ -888,11 +887,8 @@ ctf_emit_type_sect (ctf_dict_t *fp, unsigned char **tptr)\n \t  break;\n \n \tcase CTF_K_ARRAY:\n-\t  cta.cta_contents = (uint32_t) dtd->dtd_u.dtu_arr.ctr_contents;\n-\t  cta.cta_index = (uint32_t) dtd->dtd_u.dtu_arr.ctr_index;\n-\t  cta.cta_nelems = dtd->dtd_u.dtu_arr.ctr_nelems;\n-\t  memcpy (t, &cta, sizeof (cta));\n-\t  t += sizeof (cta);\n+\t  memcpy (t, dtd->dtd_vlen, sizeof (struct ctf_array));\n+\t  t += sizeof (struct ctf_array);\n \t  break;\n \n \tcase CTF_K_FUNCTION:"
    },
    {
      "sha": "8c983d5542fb4d2a489bdbb2795abac69eb89b83",
      "filename": "libctf/ctf-types.c",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/534444b1ee161f342d303fd6549310963ce233c9/libctf/ctf-types.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/534444b1ee161f342d303fd6549310963ce233c9/libctf/ctf-types.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-types.c?ref=534444b1ee161f342d303fd6549310963ce233c9",
      "patch": "@@ -1520,14 +1520,12 @@ ctf_array_info (ctf_dict_t *fp, ctf_id_t type, ctf_arinfo_t *arp)\n     return (ctf_set_errno (ofp, ECTF_NOTARRAY));\n \n   if ((dtd = ctf_dynamic_type (ofp, type)) != NULL)\n+    ap = (const ctf_array_t *) dtd->dtd_vlen;\n+  else\n     {\n-      *arp = dtd->dtd_u.dtu_arr;\n-      return 0;\n+      ctf_get_ctt_size (fp, tp, NULL, &increment);\n+      ap = (const ctf_array_t *) ((uintptr_t) tp + increment);\n     }\n-\n-  (void) ctf_get_ctt_size (fp, tp, NULL, &increment);\n-\n-  ap = (const ctf_array_t *) ((uintptr_t) tp + increment);\n   arp->ctr_contents = ap->cta_contents;\n   arp->ctr_index = ap->cta_index;\n   arp->ctr_nelems = ap->cta_nelems;"
    }
  ]
}