{
  "sha": "2786ef85faf16c13029548832c4e4b025bf2624c",
  "node_id": "C_kwDOANOeidoAKDI3ODZlZjg1ZmFmMTZjMTMwMjk1NDg4MzJjNGU0YjAyNWJmMjYyNGM",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-10-13T09:06:36Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-10-13T09:06:36Z"
    },
    "message": "[gdb/testsuite] Require use_gdb_stub == 0 where appropriate\n\nWhen running with target board native-gdbserver, we run into a number of FAILs\ndue to use of the start command (and similar), which is not supported when\nuse_gdb_stub == 1.\n\nFix this by:\n- requiring use_gdb_stub == 0 for the entire test-case, or\n- guarding some tests in the test-case with use_gdb_stub == 0.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "c766139ff53864e476a7d65b537e1339ee3cec63",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c766139ff53864e476a7d65b537e1339ee3cec63"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2786ef85faf16c13029548832c4e4b025bf2624c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2786ef85faf16c13029548832c4e4b025bf2624c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2786ef85faf16c13029548832c4e4b025bf2624c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2786ef85faf16c13029548832c4e4b025bf2624c/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "36170420e329a8d6229eb89b38d8680cf39f1d53",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/36170420e329a8d6229eb89b38d8680cf39f1d53",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/36170420e329a8d6229eb89b38d8680cf39f1d53"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 35,
    "deletions": 17
  },
  "files": [
    {
      "sha": "e19c474bb603b5e6b90327ec043322025fadde9e",
      "filename": "gdb/testsuite/gdb.dwarf2/frame-inlined-in-outer-frame.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2786ef85faf16c13029548832c4e4b025bf2624c/gdb/testsuite/gdb.dwarf2/frame-inlined-in-outer-frame.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2786ef85faf16c13029548832c4e4b025bf2624c/gdb/testsuite/gdb.dwarf2/frame-inlined-in-outer-frame.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/frame-inlined-in-outer-frame.exp?ref=2786ef85faf16c13029548832c4e4b025bf2624c",
      "patch": "@@ -25,6 +25,9 @@\n # Because of (1), the test has to be written in assembly with explicit CFI\n # directives.\n \n+# Check if starti command is supported.\n+require use_gdb_stub 0\n+\n load_lib dwarf.exp\n \n if {![dwarf2_support]} {"
    },
    {
      "sha": "1272c68922e73ec75d3c99dd2a3f35f9b74ea790",
      "filename": "gdb/testsuite/gdb.mi/mi-async.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2786ef85faf16c13029548832c4e4b025bf2624c/gdb/testsuite/gdb.mi/mi-async.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2786ef85faf16c13029548832c4e4b025bf2624c/gdb/testsuite/gdb.mi/mi-async.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-async.exp?ref=2786ef85faf16c13029548832c4e4b025bf2624c",
      "patch": "@@ -25,6 +25,9 @@ if { !([isnative] && [istarget *-linux*]) } then {\n   return\n }\n \n+# Check if start command is supported.\n+require use_gdb_stub 0\n+\n # The plan is for async mode to become the default but toggle for now.\n set saved_gdbflags $GDBFLAGS\n set GDBFLAGS [concat $GDBFLAGS \" -ex \\\"set mi-async on\\\"\"]"
    },
    {
      "sha": "c36699de71d183ea3b4e652d8e564e7f639d4ab7",
      "filename": "gdb/testsuite/gdb.python/python.exp",
      "status": "modified",
      "additions": 20,
      "deletions": 17,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2786ef85faf16c13029548832c4e4b025bf2624c/gdb/testsuite/gdb.python/python.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2786ef85faf16c13029548832c4e4b025bf2624c/gdb/testsuite/gdb.python/python.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/python.exp?ref=2786ef85faf16c13029548832c4e4b025bf2624c",
      "patch": "@@ -539,22 +539,25 @@ gdb_test \"print \\$cvar3\" \"= void\" \\\n # \"show commands\".\n gdb_test \"python gdb.execute(\\\"show commands\\\")\" \"$decimal  print \\\\\\$cvar3.*\"\n \n-# Test that the from_tty argument to gdb.execute is effective. If\n-# False, the user is not prompted for decisions such as restarting the\n-# program, and \"yes\" is assumed. If True, the user is prompted.\n-# Case 1, from_tty=False.\n-gdb_test \"python gdb.execute('starti', from_tty=False)\" \\\n-    \"Program stopped.*\" \\\n-    \"starti via gdb.execute, not from tty\"\n-\n-# Case 2, from_tty=True.\n-set test \"starti via gdb.execute, from tty\"\n-set question \\\n-    [multi_line \\\n-\t {The program being debugged has been started already\\.} \\\n-\t {Start it from the beginning\\? \\(y or n\\) $}]\n-gdb_test_multiple \"python gdb.execute('starti', from_tty=True)\" $test {\n-    -re $question {\n-\tgdb_test \"y\" \"Starting program:.*\" $gdb_test_name\n+# Check if starti command is supported.\n+if { [use_gdb_stub] == 0 } {\n+    # Test that the from_tty argument to gdb.execute is effective. If\n+    # False, the user is not prompted for decisions such as restarting the\n+    # program, and \"yes\" is assumed. If True, the user is prompted.\n+    # Case 1, from_tty=False.\n+    gdb_test \"python gdb.execute('starti', from_tty=False)\" \\\n+\t\"Program stopped.*\" \\\n+\t\"starti via gdb.execute, not from tty\"\n+\n+    # Case 2, from_tty=True.\n+    set test \"starti via gdb.execute, from tty\"\n+    set question \\\n+\t[multi_line \\\n+\t     {The program being debugged has been started already\\.} \\\n+\t     {Start it from the beginning\\? \\(y or n\\) $}]\n+    gdb_test_multiple \"python gdb.execute('starti', from_tty=True)\" $test {\n+\t-re $question {\n+\t    gdb_test \"y\" \"Starting program:.*\" $gdb_test_name\n+\t}\n     }\n }"
    },
    {
      "sha": "50b8e9c34255ae73c7c64751b3866db1aa420725",
      "filename": "gdb/testsuite/gdb.reverse/insn-reverse.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2786ef85faf16c13029548832c4e4b025bf2624c/gdb/testsuite/gdb.reverse/insn-reverse.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2786ef85faf16c13029548832c4e4b025bf2624c/gdb/testsuite/gdb.reverse/insn-reverse.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.reverse/insn-reverse.exp?ref=2786ef85faf16c13029548832c4e4b025bf2624c",
      "patch": "@@ -17,6 +17,9 @@ if ![supports_reverse] {\n     return\n }\n \n+# Check if start command is supported.\n+require use_gdb_stub 0\n+\n standard_testfile\n \n if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile \\"
    },
    {
      "sha": "c108cceaa9a491bb7e52547a2f664dcc822c52ff",
      "filename": "gdb/testsuite/gdb.tui/tui-missing-src.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2786ef85faf16c13029548832c4e4b025bf2624c/gdb/testsuite/gdb.tui/tui-missing-src.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2786ef85faf16c13029548832c4e4b025bf2624c/gdb/testsuite/gdb.tui/tui-missing-src.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/tui-missing-src.exp?ref=2786ef85faf16c13029548832c4e4b025bf2624c",
      "patch": "@@ -25,6 +25,9 @@\n #    layout must show the contents of f2.c.\n # 7. Going back to main() shall result in no contents again.\n \n+# Check if start command is supported.\n+require use_gdb_stub 0\n+\n tuiterm_env\n \n standard_testfile"
    },
    {
      "sha": "7f02504262d43d587be11e0f7d3d133f4b8668ee",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2786ef85faf16c13029548832c4e4b025bf2624c/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2786ef85faf16c13029548832c4e4b025bf2624c/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=2786ef85faf16c13029548832c4e4b025bf2624c",
      "patch": "@@ -8251,6 +8251,9 @@ proc require { fn arg1 {arg2 \"\"} } {\n \t\"ensure_gdb_index $binfile -dwarf-5 != -1\" {\n \t    set msg \"Couldn't ensure index in binfile\"\n \t}\n+\t\"use_gdb_stub == 0\" {\n+\t    set msg \"Remote stub used\"\n+\t}\n \tdefault { set msg \"$fn != $val\" }\n     }\n "
    }
  ]
}