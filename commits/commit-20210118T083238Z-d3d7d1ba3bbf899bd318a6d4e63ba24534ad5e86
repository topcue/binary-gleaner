{
  "sha": "d3d7d1ba3bbf899bd318a6d4e63ba24534ad5e86",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDNkN2QxYmEzYmJmODk5YmQzMThhNmQ0ZTYzYmEyNDUzNGFkNWU4Ng==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-01-18T08:32:38Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-01-18T08:32:38Z"
    },
    "message": "[gdb/tdep] Handle si_addr_bnd in compat_siginfo_from_siginfo\n\nWhen running test-case gdb.arch/i386-mpx-sigsegv.exp with target board\nunix/-m32, we run into:\n...\n(gdb) continue^M\nContinuing.^M\nSaw a #BR! status 1 at 0x8048c2d^M\n^M\nProgram received signal SIGSEGV, Segmentation fault^M\nUpper bound violation while accessing address 0x0804c15c^M\nBounds: [lower = 0x00000000, upper = 0x00000000].^M\n0x08048a4f in lower (p=0x804c160, a=0x804c180, b=0x804c1a0, c=0x804c1c0, \\\n  d=0x804c1e0, len=1) at i386-mpx-sigsegv.c:79^M\n79        value = *(p - len);^M\n(gdb) FAIL: gdb.arch/i386-mpx-sigsegv.exp: MPX signal segv Lower: 0\n...\n\nThe problem is that lower and upper in the Bounds message are 0x0, which is\ncaused by $_siginfo._sifields._sigfault._addr_bnd.{_lower,_upper} evaluating\nto 0x0.\n\nFix this by copying the si_lower/si_upper fields in\ncompat_siginfo_from_siginfo.\n\nTested on x86_64-linux, with target board unix/-m32.\n\ngdb/ChangeLog:\n\n2021-01-18  Tom de Vries  <tdevries@suse.de>\n\n\tPR tdep/27172\n\t* nat/amd64-linux-siginfo.c (cpt_si_lower, cpt_si_upper, SEGV_BNDERR):\n\tNew macro.\n\t(compat_siginfo_from_siginfo): Copy cpt_si_lower and cpt_si_upper\n\tfor SEGV_BNDERR.",
    "tree": {
      "sha": "a1f349a94db6556ce2b7f2441538f106f9d9c0cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a1f349a94db6556ce2b7f2441538f106f9d9c0cb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d3d7d1ba3bbf899bd318a6d4e63ba24534ad5e86",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3d7d1ba3bbf899bd318a6d4e63ba24534ad5e86",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d3d7d1ba3bbf899bd318a6d4e63ba24534ad5e86",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3d7d1ba3bbf899bd318a6d4e63ba24534ad5e86/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "aa2838ccc592ea63f2b1d378bccd9388c18a8b96",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa2838ccc592ea63f2b1d378bccd9388c18a8b96",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/aa2838ccc592ea63f2b1d378bccd9388c18a8b96"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 21,
    "deletions": 0
  },
  "files": [
    {
      "sha": "1054ad6ad819e73ee60b7489b3ff408b4ab3f8cf",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3d7d1ba3bbf899bd318a6d4e63ba24534ad5e86/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3d7d1ba3bbf899bd318a6d4e63ba24534ad5e86/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d3d7d1ba3bbf899bd318a6d4e63ba24534ad5e86",
      "patch": "@@ -1,3 +1,11 @@\n+2021-01-18  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR tdep/27172\n+\t* nat/amd64-linux-siginfo.c (cpt_si_lower, cpt_si_upper, SEGV_BNDERR):\n+\tNew macro.\n+\t(compat_siginfo_from_siginfo): Copy cpt_si_lower and cpt_si_upper\n+\tfor SEGV_BNDERR.\n+\n 2021-01-18  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* remote.c (class remote_target) <remote_hostio_send_command,"
    },
    {
      "sha": "0c932814ec83dd6323f6ce7a1c195ecfea8a7219",
      "filename": "gdb/nat/amd64-linux-siginfo.c",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3d7d1ba3bbf899bd318a6d4e63ba24534ad5e86/gdb/nat/amd64-linux-siginfo.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3d7d1ba3bbf899bd318a6d4e63ba24534ad5e86/gdb/nat/amd64-linux-siginfo.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/amd64-linux-siginfo.c?ref=d3d7d1ba3bbf899bd318a6d4e63ba24534ad5e86",
      "patch": "@@ -277,6 +277,8 @@ typedef struct compat_x32_siginfo\n #define cpt_si_ptr _sifields._rt._sigval.sival_ptr\n #define cpt_si_addr _sifields._sigfault._addr\n #define cpt_si_addr_lsb _sifields._sigfault._addr_lsb\n+#define cpt_si_lower _sifields._sigfault.si_addr_bnd._lower\n+#define cpt_si_upper _sifields._sigfault.si_addr_bnd._upper\n #define cpt_si_band _sifields._sigpoll._band\n #define cpt_si_fd _sifields._sigpoll._fd\n \n@@ -290,6 +292,10 @@ typedef struct compat_x32_siginfo\n #define si_overrun si_timer2\n #endif\n \n+#ifndef SEGV_BNDERR\n+#define SEGV_BNDERR\t3\n+#endif\n+\n /* The type of the siginfo object the kernel returns in\n    PTRACE_GETSIGINFO.  If gdb is built as a x32 program, we get a x32\n    siginfo.  */\n@@ -324,6 +330,13 @@ compat_siginfo_from_siginfo (compat_siginfo_t *to, const siginfo_t *from)\n       to->cpt_si_pid = from_ptrace.cpt_si_pid;\n       to->cpt_si_uid = from_ptrace.cpt_si_uid;\n     }\n+  else if (to->si_code == SEGV_BNDERR\n+\t   && to->si_signo == SIGSEGV)\n+    {\n+      to->cpt_si_addr = from_ptrace.cpt_si_addr;\n+      to->cpt_si_lower = from_ptrace.cpt_si_lower;\n+      to->cpt_si_upper = from_ptrace.cpt_si_upper;\n+    }\n   else if (to->si_code < 0)\n     {\n       to->cpt_si_pid = from_ptrace.cpt_si_pid;"
    }
  ]
}