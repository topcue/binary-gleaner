{
  "sha": "6a7f57668afcd841e8fc6b507a27bb20e9209fa9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmE3ZjU3NjY4YWZjZDg0MWU4ZmM2YjUwN2EyN2JiMjBlOTIwOWZhOQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-09-18T09:42:41Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-09-20T08:45:34Z"
    },
    "message": "riscv: print .2byte or .4byte before an unknown instruction encoding\n\nWhen the RISC-V disassembler encounters an unknown instruction, it\ncurrently just prints the value of the bytes, like this:\n\n  Dump of assembler code for function custom_insn:\n     0x00010132 <+0>:\taddi\tsp,sp,-16\n     0x00010134 <+2>:\tsw\ts0,12(sp)\n     0x00010136 <+4>:\taddi\ts0,sp,16\n     0x00010138 <+6>:\t0x52018b\n     0x0001013c <+10>:\t0x9c45\n\nMy proposal, in this patch, is to change the behaviour to this:\n\n  Dump of assembler code for function custom_insn:\n     0x00010132 <+0>:\taddi\tsp,sp,-16\n     0x00010134 <+2>:\tsw\ts0,12(sp)\n     0x00010136 <+4>:\taddi\ts0,sp,16\n     0x00010138 <+6>:\t.4byte\t0x52018b\n     0x0001013c <+10>:\t.2byte\t0x9c45\n\nAdding the .4byte and .2byte opcodes.  The benefit that I see here is\nthat in the patched version of the tools, the disassembler output can\nbe fed back into the assembler and it should assemble to the same\nbinary format.  Before the patch, the disassembler output is invalid\nassembly.\n\nI've started a RISC-V specific test file under binutils so that I can\nadd a test for this change.\n\nbinutils/ChangeLog:\n\n\t* testsuite/binutils-all/riscv/riscv.exp: New file.\n\t* testsuite/binutils-all/riscv/unknown.d: New file.\n\t* testsuite/binutils-all/riscv/unknown.s: New file.\n\nopcodes/ChangeLog:\n\n\t* riscv-dis.c (riscv_disassemble_insn): Print a .%dbyte opcode\n\tbefore an unknown instruction, '%d' is replaced with the\n\tinstruction length.",
    "tree": {
      "sha": "dcf2fb8b5648e7ee4b608dd7be16cf37e4b4eb71",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dcf2fb8b5648e7ee4b608dd7be16cf37e4b4eb71"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6a7f57668afcd841e8fc6b507a27bb20e9209fa9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6a7f57668afcd841e8fc6b507a27bb20e9209fa9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6a7f57668afcd841e8fc6b507a27bb20e9209fa9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d467335403fda3c4774e27d9725b3528e1799398",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d467335403fda3c4774e27d9725b3528e1799398",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d467335403fda3c4774e27d9725b3528e1799398"
    }
  ],
  "stats": {
    "total": 103,
    "additions": 102,
    "deletions": 1
  },
  "files": [
    {
      "sha": "b9ac30976e4a71eb2b83c7808883119f27d34c2b",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=6a7f57668afcd841e8fc6b507a27bb20e9209fa9",
      "patch": "@@ -1,3 +1,9 @@\n+2021-09-20  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* testsuite/binutils-all/riscv/riscv.exp: New file.\n+\t* testsuite/binutils-all/riscv/unknown.d: New file.\n+\t* testsuite/binutils-all/riscv/unknown.s: New file.\n+\n 2021-09-07  Luis Machado  <luis.machado@linaro.org>\n \n \tRevert: [AArch64] MTE corefile support"
    },
    {
      "sha": "8f0b7dc9766a448878625dd8e9cd9ce82b60f7a1",
      "filename": "binutils/testsuite/binutils-all/riscv/riscv.exp",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/binutils/testsuite/binutils-all/riscv/riscv.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/binutils/testsuite/binutils-all/riscv/riscv.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/riscv/riscv.exp?ref=6a7f57668afcd841e8fc6b507a27bb20e9209fa9",
      "patch": "@@ -0,0 +1,29 @@\n+# Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.\n+\n+if ![istarget \"riscv*-*-*\"] then {\n+    return\n+}\n+\n+set tempfile tmpdir/riscvtemp.o\n+set copyfile tmpdir/riscvcopy\n+\n+set test_list [lsort [glob -nocomplain $srcdir/$subdir/*.d]]\n+foreach t $test_list {\n+    # We need to strip the \".d\", but can leave the dirname.\n+    verbose [file rootname $t]\n+    run_dump_test [file rootname $t]\n+}"
    },
    {
      "sha": "64791169b2a0bdf7e9b5739b26c238484bd3b507",
      "filename": "binutils/testsuite/binutils-all/riscv/unknown.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/binutils/testsuite/binutils-all/riscv/unknown.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/binutils/testsuite/binutils-all/riscv/unknown.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/riscv/unknown.d?ref=6a7f57668afcd841e8fc6b507a27bb20e9209fa9",
      "patch": "@@ -0,0 +1,11 @@\n+#as: -march=rv32ic\n+#objdump: -d\n+# Test the disassembly of unknown instruction encodings, specifically,\n+# ensure that we generate a .?byte opcode.\n+\n+#...\n+Disassembly of section \\.text:\n+\n+[0-9a-f]+ <\\.text>:\n+   [0-9a-f]+:\t0052018b          \t\\.4byte\t0x52018b\n+   [0-9a-f]+:\t9c45                \t\\.2byte\t0x9c45"
    },
    {
      "sha": "df929047fefe370e65d5733d75f13d9c027d5c7f",
      "filename": "binutils/testsuite/binutils-all/riscv/unknown.s",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/binutils/testsuite/binutils-all/riscv/unknown.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/binutils/testsuite/binutils-all/riscv/unknown.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/riscv/unknown.s?ref=6a7f57668afcd841e8fc6b507a27bb20e9209fa9",
      "patch": "@@ -0,0 +1,27 @@\n+/* Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+        .text\n+\t/* The following instruction is in the area set aside for\n+\t   custom instruction extensions.  As such it is unlikely that\n+           an upstream extension should ever clash with this.  */\n+\t.insn r 0x0b, 0x0, 0x0, x3, x4, x5\n+        /* Unlike the above, the following is just a reserved\n+\t   instruction encoding.  This means that in the future an\n+\t   extension to the compressed instruction set might use this\n+\t   encoding.  If/when that happens we'll need to find a\n+\t   different unused encoding within the compressed instruction\n+\t   space.  */\n+\t.insn ca 0x1, 0x27, 0x2, x8, x9"
    },
    {
      "sha": "a32af60864ddbeb060789c27ad65c523cfef8f19",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=6a7f57668afcd841e8fc6b507a27bb20e9209fa9",
      "patch": "@@ -1,3 +1,9 @@\n+2021-09-20  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* riscv-dis.c (riscv_disassemble_insn): Print a .%dbyte opcode\n+\tbefore an unknown instruction, '%d' is replaced with the\n+\tinstruction length.\n+\n 2021-09-02  Nick Clifton  <nickc@redhat.com>\n \n \tPR 28292"
    },
    {
      "sha": "2e28ba77e601c62b4a1bfb16d596321b236b45f2",
      "filename": "opcodes/riscv-dis.c",
      "status": "modified",
      "additions": 23,
      "deletions": 1,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/opcodes/riscv-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6a7f57668afcd841e8fc6b507a27bb20e9209fa9/opcodes/riscv-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-dis.c?ref=6a7f57668afcd841e8fc6b507a27bb20e9209fa9",
      "patch": "@@ -570,7 +570,29 @@ riscv_disassemble_insn (bfd_vma memaddr, insn_t word, disassemble_info *info)\n \n   /* We did not find a match, so just print the instruction bits.  */\n   info->insn_type = dis_noninsn;\n-  (*info->fprintf_func) (info->stream, \"0x%llx\", (unsigned long long)word);\n+  switch (insnlen)\n+    {\n+    case 2:\n+    case 4:\n+    case 8:\n+      (*info->fprintf_func) (info->stream, \".%dbyte\\t0x%llx\",\n+                             insnlen, (unsigned long long) word);\n+      break;\n+    default:\n+      {\n+        int i;\n+        (*info->fprintf_func) (info->stream, \".byte\\t\");\n+        for (i = 0; i < insnlen; ++i)\n+          {\n+            if (i > 0)\n+              (*info->fprintf_func) (info->stream, \", \");\n+            (*info->fprintf_func) (info->stream, \"0x%02x\",\n+                                   (unsigned int) (word & 0xff));\n+            word >>= 8;\n+          }\n+      }\n+      break;\n+    }\n   return insnlen;\n }\n "
    }
  ]
}