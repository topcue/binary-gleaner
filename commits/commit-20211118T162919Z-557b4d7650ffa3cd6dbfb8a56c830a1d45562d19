{
  "sha": "557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
  "node_id": "C_kwDOANOeidoAKDU1N2I0ZDc2NTBmZmEzY2Q2ZGJmYjhhNTZjODMwYTFkNDU1NjJkMTk",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-11-17T18:44:01Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-11-18T16:29:19Z"
    },
    "message": "gdbsupport: make gdb_assert_not_reached accept a format string\n\nChange gdb_assert_not_reached to accept a format string plus\ncorresponding arguments.  This allows giving more precise messages.\n\nBecause the format string passed by the caller is prepended with a \"%s:\"\nto add the function name, the callers can no longer pass a translated\nstring (`_(...)`).  Make the gdb_assert_not_reached include the _(),\njust like the gdb_assert_fail macro just above.\n\nChange-Id: Id0cfda5a57979df6cdaacaba0d55dd91ae9efee7",
    "tree": {
      "sha": "0c08f5fc48886db33c57cb42bfaa1d0fc80640cc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0c08f5fc48886db33c57cb42bfaa1d0fc80640cc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ab198279120fe7937c0970a8bb881922726678f9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab198279120fe7937c0970a8bb881922726678f9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ab198279120fe7937c0970a8bb881922726678f9"
    }
  ],
  "stats": {
    "total": 78,
    "additions": 39,
    "deletions": 39
  },
  "files": [
    {
      "sha": "f5d81b64881be0dee70306b6e5544f9c4af98bf0",
      "filename": "gdb/arch/arc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/arch/arc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/arch/arc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch/arc.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -54,7 +54,7 @@ arc_create_target_description (const struct arc_arch_features &features)\n       std::string msg = string_printf\n \t(\"Cannot determine architecture: ISA=%d; bitness=%d\",\n \t features.isa, 8 * features.reg_size);\n-      gdb_assert_not_reached (msg.c_str ());\n+      gdb_assert_not_reached (\"%s\", msg.c_str ());\n     }\n \n   set_tdesc_architecture (tdesc.get (), arch_name.c_str ());\n@@ -75,7 +75,7 @@ arc_create_target_description (const struct arc_arch_features &features)\n     default:\n       std::string msg = string_printf\n \t(\"Cannot choose target description XML: %d\", features.isa);\n-      gdb_assert_not_reached (msg.c_str ());\n+      gdb_assert_not_reached (\"%s\", msg.c_str ());\n     }\n \n   return tdesc;"
    },
    {
      "sha": "67d4db33c9a4d0eab91d068d96110368b7d264e0",
      "filename": "gdb/ax-gdb.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/ax-gdb.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/ax-gdb.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ax-gdb.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -609,7 +609,7 @@ gen_var_ref (struct agent_expr *ax, struct axs_value *value, struct symbol *var)\n       break;\n \n     case LOC_COMPUTED:\n-      gdb_assert_not_reached (_(\"LOC_COMPUTED variable missing a method\"));\n+      gdb_assert_not_reached (\"LOC_COMPUTED variable missing a method\");\n \n     case LOC_OPTIMIZED_OUT:\n       /* Flag this, but don't say anything; leave it up to callers to"
    },
    {
      "sha": "4f5cb03683058805b58eff37f191e297a3679fc0",
      "filename": "gdb/cli/cli-option.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/cli/cli-option.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/cli/cli-option.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-option.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -445,7 +445,7 @@ parse_option (gdb::array_view<const option_def_group> options_group,\n \n     default:\n       /* Not yet.  */\n-      gdb_assert_not_reached (_(\"option type not supported\"));\n+      gdb_assert_not_reached (\"option type not supported\");\n     }\n \n   return {};\n@@ -824,7 +824,7 @@ add_setshow_cmds_for_options (command_class cmd_class,\n \t\t\t\t  set_list, show_list);\n \t}\n       else\n-\tgdb_assert_not_reached (_(\"option type not handled\"));\n+\tgdb_assert_not_reached (\"option type not handled\");\n     }\n }\n "
    },
    {
      "sha": "e365cefe0cc85ed136c65df5f83afeff5d3b23bd",
      "filename": "gdb/compile/compile-c-support.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/compile/compile-c-support.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/compile/compile-c-support.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-c-support.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -352,7 +352,7 @@ struct c_add_code_header\n \tbreak;\n \n       default:\n-\tgdb_assert_not_reached (_(\"Unknown compiler scope reached.\"));\n+\tgdb_assert_not_reached (\"Unknown compiler scope reached.\");\n       }\n   }\n };\n@@ -376,7 +376,7 @@ struct c_add_code_footer\n \tbreak;\n \n       default:\n-\tgdb_assert_not_reached (_(\"Unknown compiler scope reached.\"));\n+\tgdb_assert_not_reached (\"Unknown compiler scope reached.\");\n       }\n   }\n };\n@@ -477,7 +477,7 @@ struct cplus_add_code_header\n       break;\n \n     default:\n-      gdb_assert_not_reached (_(\"Unknown compiler scope reached.\"));\n+      gdb_assert_not_reached (\"Unknown compiler scope reached.\");\n     }\n   }\n };"
    },
    {
      "sha": "fa1cb7a70bab7142d6b0ee127a84904e68296c04",
      "filename": "gdb/compile/compile-c-symbols.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/compile/compile-c-symbols.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/compile/compile-c-symbols.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-c-symbols.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -587,8 +587,8 @@ generate_c_for_for_one_variable (compile_instance *compiler,\n \t      error (_(\"Local symbol unhandled when generating C code.\"));\n \n \t    case LOC_COMPUTED:\n-\t      gdb_assert_not_reached (_(\"LOC_COMPUTED variable \"\n-\t\t\t\t\t\"missing a method.\"));\n+\t      gdb_assert_not_reached (\"LOC_COMPUTED variable \"\n+\t\t\t\t      \"missing a method.\");\n \n \t    default:\n \t      /* Nothing to do for all other cases, as they don't represent"
    },
    {
      "sha": "4a963e4a236bae75a95883da1e72612c8894f4f1",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -19979,7 +19979,7 @@ read_attribute_reprocess (const struct die_reader_specs *reader,\n \t  break;\n \t}\n       default:\n-\tgdb_assert_not_reached (_(\"Unexpected DWARF form.\"));\n+\tgdb_assert_not_reached (\"Unexpected DWARF form.\");\n     }\n }\n "
    },
    {
      "sha": "f7e632809d07d881ed145c94d3ce732039fd18da",
      "filename": "gdb/findvar.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/findvar.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/findvar.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/findvar.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -364,7 +364,7 @@ symbol_read_needs (struct symbol *sym)\n       /* All cases listed explicitly so that gcc -Wall will detect it if\n \t we failed to consider one.  */\n     case LOC_COMPUTED:\n-      gdb_assert_not_reached (_(\"LOC_COMPUTED variable missing a method\"));\n+      gdb_assert_not_reached (\"LOC_COMPUTED variable missing a method\");\n \n     case LOC_REGISTER:\n     case LOC_ARG:\n@@ -744,7 +744,7 @@ language_defn::read_var_value (struct symbol *var,\n       break;\n \n     case LOC_COMPUTED:\n-      gdb_assert_not_reached (_(\"LOC_COMPUTED variable missing a method\"));\n+      gdb_assert_not_reached (\"LOC_COMPUTED variable missing a method\");\n \n     case LOC_UNRESOLVED:\n       {"
    },
    {
      "sha": "89a98c20df435afd63b52fbbbb0578c55cc6c083",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -2401,8 +2401,8 @@ resume_1 (enum gdb_signal sig)\n \t  step = gdbarch_displaced_step_hw_singlestep (gdbarch);\n \t}\n       else\n-\tgdb_assert_not_reached (_(\"Invalid displaced_step_prepare_status \"\n-\t\t\t\t  \"value.\"));\n+\tgdb_assert_not_reached (\"Invalid displaced_step_prepare_status \"\n+\t\t\t\t\"value.\");\n     }\n \n   /* Do we need to do it the hard way, w/temp breakpoints?  */"
    },
    {
      "sha": "e408b19db63c08aa50aa7e864b0f4adece716d24",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -1724,7 +1724,7 @@ info_address_command (const char *exp, int from_tty)\n       break;\n \n     case LOC_COMPUTED:\n-      gdb_assert_not_reached (_(\"LOC_COMPUTED variable missing a method\"));\n+      gdb_assert_not_reached (\"LOC_COMPUTED variable missing a method\");\n \n     case LOC_REGISTER:\n       /* GDBARCH is the architecture associated with the objfile the symbol"
    },
    {
      "sha": "61bde5aaa94312c77140dae5d2bd91d99f2be541",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -2217,7 +2217,7 @@ packet_config_support (struct packet_config *config)\n     case AUTO_BOOLEAN_AUTO:\n       return config->support;\n     default:\n-      gdb_assert_not_reached (_(\"bad switch\"));\n+      gdb_assert_not_reached (\"bad switch\");\n     }\n }\n \n@@ -10316,7 +10316,7 @@ remote_target::extended_remote_run (const std::string &args)\n \terror (_(\"Running \\\"%s\\\" on the remote target failed\"),\n \t       remote_exec_file);\n     default:\n-      gdb_assert_not_reached (_(\"bad switch\"));\n+      gdb_assert_not_reached (\"bad switch\");\n     }\n }\n "
    },
    {
      "sha": "94dad41a9fdc222b9b11081802fca451b14a9886",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -864,7 +864,7 @@ riscv_sw_breakpoint_from_kind (struct gdbarch *gdbarch, int kind, int *size)\n     case 4:\n       return ebreak;\n     default:\n-      gdb_assert_not_reached (_(\"unhandled breakpoint kind\"));\n+      gdb_assert_not_reached (\"unhandled breakpoint kind\");\n     }\n }\n \n@@ -2877,7 +2877,7 @@ riscv_print_arg_location (ui_file *stream, struct gdbarch *gdbarch,\n       break;\n \n     default:\n-      gdb_assert_not_reached (_(\"unknown argument location type\"));\n+      gdb_assert_not_reached (\"unknown argument location type\");\n     }\n }\n \n@@ -3039,7 +3039,7 @@ riscv_push_dummy_call (struct gdbarch *gdbarch,\n \t  break;\n \n \tdefault:\n-\t  gdb_assert_not_reached (_(\"unknown argument location type\"));\n+\t  gdb_assert_not_reached (\"unknown argument location type\");\n \t}\n \n       if (second_arg_length > 0)"
    },
    {
      "sha": "98710abd36152d7a7498921b38acf5dfffba11ee",
      "filename": "gdb/thread-fsm.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/thread-fsm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/thread-fsm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread-fsm.h?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -106,7 +106,7 @@ struct thread_fsm\n      FSM finishes successfully.  */\n   virtual enum async_reply_reason do_async_reply_reason ()\n   {\n-    gdb_assert_not_reached (_(\"should not call async_reply_reason here\"));\n+    gdb_assert_not_reached (\"should not call async_reply_reason here\");\n   }\n };\n "
    },
    {
      "sha": "6f902dc863732a91919d57e0cd3078ac524203f4",
      "filename": "gdb/tid-parse.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/tid-parse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/tid-parse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tid-parse.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -151,7 +151,7 @@ tid_range_parser::finished () const\n       return m_range_parser.finished ();\n     }\n \n-  gdb_assert_not_reached (_(\"unhandled state\"));\n+  gdb_assert_not_reached (\"unhandled state\");\n }\n \n /* See tid-parse.h.  */\n@@ -168,7 +168,7 @@ tid_range_parser::cur_tok () const\n       return m_range_parser.cur_tok ();\n     }\n \n-  gdb_assert_not_reached (_(\"unhandled state\"));\n+  gdb_assert_not_reached (\"unhandled state\");\n }\n \n void"
    },
    {
      "sha": "15506fdbf4e88162effce92bdc00a8fa63c0ab62",
      "filename": "gdb/tracepoint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/tracepoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/tracepoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracepoint.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -2641,7 +2641,7 @@ info_scope_command (const char *args_in, int from_tty)\n \t\t  printf_filtered (\"optimized out.\\n\");\n \t\t  continue;\n \t\tcase LOC_COMPUTED:\n-\t\t  gdb_assert_not_reached (_(\"LOC_COMPUTED variable missing a method\"));\n+\t\t  gdb_assert_not_reached (\"LOC_COMPUTED variable missing a method\");\n \t\t}\n \t    }\n \t  if (SYMBOL_TYPE (sym))"
    },
    {
      "sha": "b06576936be009221c96dc1f8f56a85bd895c2f1",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -163,7 +163,7 @@ find_layout (tui_layout_split *layout)\n       if (layout == layouts[i].get ())\n \treturn i;\n     }\n-  gdb_assert_not_reached (_(\"layout not found!?\"));\n+  gdb_assert_not_reached (\"layout not found!?\");\n }\n \n /* Function to set the layout. */"
    },
    {
      "sha": "fe0e18ba0c66c53e51afaa358feded51dff52bf4",
      "filename": "gdb/ui-out.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/ui-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/ui-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -638,10 +638,10 @@ ui_out::vmessage (const ui_file_style &in_style, const char *format,\n \t  }\n \t  break;\n \tcase wide_string_arg:\n-\t  gdb_assert_not_reached (_(\"wide_string_arg not supported in vmessage\"));\n+\t  gdb_assert_not_reached (\"wide_string_arg not supported in vmessage\");\n \t  break;\n \tcase wide_char_arg:\n-\t  gdb_assert_not_reached (_(\"wide_char_arg not supported in vmessage\"));\n+\t  gdb_assert_not_reached (\"wide_char_arg not supported in vmessage\");\n \t  break;\n \tcase long_long_arg:\n \t  call_do_message (style, current_substring, va_arg (args, long long));\n@@ -704,16 +704,16 @@ ui_out::vmessage (const ui_file_style &in_style, const char *format,\n \t  call_do_message (style, current_substring, va_arg (args, double));\n \t  break;\n \tcase long_double_arg:\n-\t  gdb_assert_not_reached (_(\"long_double_arg not supported in vmessage\"));\n+\t  gdb_assert_not_reached (\"long_double_arg not supported in vmessage\");\n \t  break;\n \tcase dec32float_arg:\n-\t  gdb_assert_not_reached (_(\"dec32float_arg not supported in vmessage\"));\n+\t  gdb_assert_not_reached (\"dec32float_arg not supported in vmessage\");\n \t  break;\n \tcase dec64float_arg:\n-\t  gdb_assert_not_reached (_(\"dec64float_arg not supported in vmessage\"));\n+\t  gdb_assert_not_reached (\"dec64float_arg not supported in vmessage\");\n \t  break;\n \tcase dec128float_arg:\n-\t  gdb_assert_not_reached (_(\"dec128float_arg not supported in vmessage\"));\n+\t  gdb_assert_not_reached (\"dec128float_arg not supported in vmessage\");\n \t  break;\n \tcase ptr_arg:\n \t  switch (current_substring[2])"
    },
    {
      "sha": "c448fc82d75b04a144c3757a63415b596cdb0370",
      "filename": "gdb/varobj.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/varobj.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdb/varobj.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/varobj.c?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -661,8 +661,7 @@ varobj_get_iterator (struct varobj *var)\n     return py_varobj_get_iterator (var, var->dynamic->pretty_printer);\n #endif\n \n-  gdb_assert_not_reached (_(\"\\\n-requested an iterator from a non-dynamic varobj\"));\n+  gdb_assert_not_reached (\"requested an iterator from a non-dynamic varobj\");\n }\n \n static bool"
    },
    {
      "sha": "7063dd6ed8cb55f2869ac062a630d0d51f09f087",
      "filename": "gdbsupport/filestuff.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdbsupport/filestuff.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdbsupport/filestuff.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/filestuff.cc?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -215,7 +215,7 @@ unmark_fd_no_cloexec (int fd)\n   if (it != open_fds.end ())\n     open_fds.erase (it);\n   else\n-    gdb_assert_not_reached (_(\"fd not found in open_fds\"));\n+    gdb_assert_not_reached (\"fd not found in open_fds\");\n }\n \n /* Helper function for close_most_fds that closes the file descriptor\n@@ -378,7 +378,7 @@ gdb_socketpair_cloexec (int domain, int style, int protocol,\n \n   return result;\n #else\n-  gdb_assert_not_reached (_(\"socketpair not available on this host\"));\n+  gdb_assert_not_reached (\"socketpair not available on this host\");\n #endif\n }\n \n@@ -419,7 +419,7 @@ gdb_pipe_cloexec (int filedes[2])\n       mark_cloexec (filedes[1]);\n     }\n #else /* HAVE_PIPE */\n-  gdb_assert_not_reached (_(\"pipe not available on this host\"));\n+  gdb_assert_not_reached (\"pipe not available on this host\");\n #endif /* HAVE_PIPE */\n #endif /* HAVE_PIPE2 */\n "
    },
    {
      "sha": "6628c1d90d53bdd4a50a046194965edfb899105f",
      "filename": "gdbsupport/gdb_assert.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdbsupport/gdb_assert.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/557b4d7650ffa3cd6dbfb8a56c830a1d45562d19/gdbsupport/gdb_assert.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/gdb_assert.h?ref=557b4d7650ffa3cd6dbfb8a56c830a1d45562d19",
      "patch": "@@ -44,7 +44,8 @@\n /* The canonical form of gdb_assert (0).\n    MESSAGE is a string to include in the error message.  */\n \n-#define gdb_assert_not_reached(message) \\\n-  internal_error (__FILE__, __LINE__, \"%s: %s\", __func__, _(message))\n+#define gdb_assert_not_reached(message, ...) \\\n+  internal_error (__FILE__, __LINE__, _(\"%s: \" message), __func__, \\\n+\t\t  ##__VA_ARGS__)\n \n #endif /* COMMON_GDB_ASSERT_H */"
    }
  ]
}