{
  "sha": "4b5aaf5f6992319c2c72e080a1a55842640b8732",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGI1YWFmNWY2OTkyMzE5YzJjNzJlMDgwYTFhNTU4NDI2NDBiODczMg==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-02-10T16:37:22Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-02-10T16:37:36Z"
    },
    "message": "x86: Accept Intel64 only instruction by default\n\nCommit d835a58baae720 disabled sysenter/sysenter in 64-bit mode by\ndefault.  By default, assembler should accept common, Intel64 only\nand AMD64 ISAs since there are no conflicts.\n\ngas/\n\n\tPR gas/25516\n\t* config/tc-i386.c (intel64): Renamed to ...\n\t(isa64): This.\n\t(match_template): Accept Intel64 only instruction by default.\n\t(i386_displacement): Updated.\n\t(md_parse_option): Updated.\n\t* c-i386.texi: Update -mamd64/-mintel64 documentation.\n\t* testsuite/gas/i386/i386.exp: Run x86-64-sysenter.  Pass\n\t-mamd64 to x86-64-sysenter-amd.\n\t* testsuite/gas/i386/x86-64-sysenter.d: New file.\n\nopcodes/\n\n\tPR gas/25516\n\t* i386-gen.c (opcode_modifiers): Replace AMD64 and Intel64\n\twith ISA64.\n\t* i386-opc.h (AMD64): Removed.\n\t(Intel64): Likewose.\n\t(AMD64): New.\n\t(INTEL64): Likewise.\n\t(INTEL64ONLY): Likewise.\n\t(i386_opcode_modifier): Replace amd64 and intel64 with isa64.\n\t* i386-opc.tbl (Amd64): New.\n\t(Intel64): Likewise.\n\t(Intel64Only): Likewise.\n\tReplace AMD64 with Amd64.  Update sysenter/sysenter with\n\tCpu64 and Intel64Only.  Remove AMD64 from sysenter/sysenter.\n\t* i386-tbl.h: Regenerated.",
    "tree": {
      "sha": "b75a8c08300589ff7d3f6fb820be4d56fe8a1f54",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b75a8c08300589ff7d3f6fb820be4d56fe8a1f54"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4b5aaf5f6992319c2c72e080a1a55842640b8732",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4b5aaf5f6992319c2c72e080a1a55842640b8732",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4b5aaf5f6992319c2c72e080a1a55842640b8732",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4b5aaf5f6992319c2c72e080a1a55842640b8732/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3a5d12fbb4f7888525978f9fba46b977afabe391",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3a5d12fbb4f7888525978f9fba46b977afabe391",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3a5d12fbb4f7888525978f9fba46b977afabe391"
    }
  ],
  "stats": {
    "total": 7986,
    "additions": 4026,
    "deletions": 3960
  },
  "files": [
    {
      "sha": "d7d91a424576650a3f7503b18e20480f850e88a6",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b5aaf5f6992319c2c72e080a1a55842640b8732/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b5aaf5f6992319c2c72e080a1a55842640b8732/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=4b5aaf5f6992319c2c72e080a1a55842640b8732",
      "patch": "@@ -1,3 +1,16 @@\n+2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/25516\n+\t* config/tc-i386.c (intel64): Renamed to ...\n+\t(isa64): This.\n+\t(match_template): Accept Intel64 only instruction by default.\n+\t(i386_displacement): Updated.\n+\t(md_parse_option): Updated.\n+\t* c-i386.texi: Update -mamd64/-mintel64 documentation.\n+\t* testsuite/gas/i386/i386.exp: Run x86-64-sysenter.  Pass\n+\t-mamd64 to x86-64-sysenter-amd.\n+\t* testsuite/gas/i386/x86-64-sysenter.d: New file.\n+\n 2020-02-10  Alan Modra  <amodra@gmail.com>\n \n \t* config/obj-elf.c (obj_elf_change_section): Error for section"
    },
    {
      "sha": "543fe25b4d4939d78028da7041361d0e7c453657",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 30,
      "deletions": 10,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b5aaf5f6992319c2c72e080a1a55842640b8732/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b5aaf5f6992319c2c72e080a1a55842640b8732/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=4b5aaf5f6992319c2c72e080a1a55842640b8732",
      "patch": "@@ -598,9 +598,11 @@ static int shared = 0;\n    0 if att syntax.  */\n static int intel_syntax = 0;\n \n-/* 1 for Intel64 ISA,\n-   0 if AMD64 ISA.  */\n-static int intel64;\n+static enum x86_64_isa\n+{\n+  amd64 = 1,\t/* AMD64 ISA.  */\n+  intel64\t/* Intel64 ISA.  */\n+} isa64;\n \n /* 1 for intel mnemonic,\n    0 if att mnemonic.  */\n@@ -5805,14 +5807,32 @@ match_template (char mnem_suffix)\n       if (intel_mnemonic && t->opcode_modifier.attmnemonic)\n \tcontinue;\n \n-      /* Check AT&T/Intel syntax and Intel64/AMD64 ISA.   */\n+      /* Check AT&T/Intel syntax.  */\n       i.error = unsupported_syntax;\n       if ((intel_syntax && t->opcode_modifier.attsyntax)\n-\t  || (!intel_syntax && t->opcode_modifier.intelsyntax)\n-\t  || (intel64 && t->opcode_modifier.amd64)\n-\t  || (!intel64 && t->opcode_modifier.intel64))\n+\t  || (!intel_syntax && t->opcode_modifier.intelsyntax))\n \tcontinue;\n \n+      /* Check Intel64/AMD64 ISA.   */\n+      switch (isa64)\n+\t{\n+\tdefault:\n+\t  /* Default: Don't accept Intel64.  */\n+\t  if (t->opcode_modifier.isa64 == INTEL64)\n+\t    continue;\n+\t  break;\n+\tcase amd64:\n+\t  /* -mamd64: Don't accept Intel64 and Intel64 only.  */\n+\t  if (t->opcode_modifier.isa64 >= INTEL64)\n+\t    continue;\n+\t  break;\n+\tcase intel64:\n+\t  /* -mintel64: Don't accept AMD64.  */\n+\t  if (t->opcode_modifier.isa64 == AMD64)\n+\t    continue;\n+\t  break;\n+\t}\n+\n       /* Check the suffix.  */\n       i.error = invalid_instruction_suffix;\n       if ((t->opcode_modifier.no_bsuf && suffix_check.no_bsuf)\n@@ -9963,7 +9983,7 @@ i386_displacement (char *disp_start, char *disp_end)\n \t  if (t->opcode_modifier.jump\n \t      != current_templates->start->opcode_modifier.jump)\n \t    break;\n-\t  if (t->opcode_modifier.intel64)\n+\t  if ((t->opcode_modifier.isa64 >= INTEL64))\n \t    has_intel64 = TRUE;\n \t}\n       if (t < current_templates->end)\n@@ -12525,11 +12545,11 @@ md_parse_option (int c, const char *arg)\n       break;\n \n     case OPTION_MAMD64:\n-      intel64 = 0;\n+      isa64 = amd64;\n       break;\n \n     case OPTION_MINTEL64:\n-      intel64 = 1;\n+      isa64 = intel64;\n       break;\n \n     case 'O':"
    },
    {
      "sha": "f0189ccb443f8f36543fb8ad859bfbe3f4986891",
      "filename": "gas/doc/c-i386.texi",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b5aaf5f6992319c2c72e080a1a55842640b8732/gas/doc/c-i386.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b5aaf5f6992319c2c72e080a1a55842640b8732/gas/doc/c-i386.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-i386.texi?ref=4b5aaf5f6992319c2c72e080a1a55842640b8732",
      "patch": "@@ -488,7 +488,8 @@ with 01, 10 and 11 RC bits, respectively.\n @item -mamd64\n @itemx -mintel64\n This option specifies that the assembler should accept only AMD64 or\n-Intel64 ISA in 64-bit mode.  The default is to accept both.\n+Intel64 ISA in 64-bit mode.  The default is to accept common, Intel64\n+only and AMD64 ISAs.\n \n @cindex @samp{-O0} option, i386\n @cindex @samp{-O0} option, x86-64"
    },
    {
      "sha": "c4280417c58a9f1335377b4859bb468d9be1c3a5",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b5aaf5f6992319c2c72e080a1a55842640b8732/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b5aaf5f6992319c2c72e080a1a55842640b8732/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=4b5aaf5f6992319c2c72e080a1a55842640b8732",
      "patch": "@@ -728,10 +728,11 @@ if [expr ([istarget \"i*86-*-*\"] || [istarget \"x86_64-*-*\"]) && [gas_64_check]] t\n     run_dump_test \"x86-64-nops-5\"\n     run_dump_test \"x86-64-nops-5-k8\"\n     run_dump_test \"x86-64-nops-7\"\n+    run_dump_test \"x86-64-sysenter\"\n     run_dump_test \"x86-64-sysenter-intel\"\n     run_dump_test \"x86-64-sysenter-mixed\"\n     run_dump_test \"x86-64-sysenter-amd\"\n-    run_list_test \"x86-64-sysenter-amd\"\n+    run_list_test \"x86-64-sysenter-amd\" \"-mamd64\"\n     run_dump_test \"noreg64\"\n     run_list_test \"noreg64\"\n     run_list_test \"cvtsi2sX\""
    },
    {
      "sha": "65d21a0eb4bf89df5cf7fed9c786a88f2447d81a",
      "filename": "gas/testsuite/gas/i386/x86-64-sysenter.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b5aaf5f6992319c2c72e080a1a55842640b8732/gas/testsuite/gas/i386/x86-64-sysenter.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b5aaf5f6992319c2c72e080a1a55842640b8732/gas/testsuite/gas/i386/x86-64-sysenter.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-sysenter.d?ref=4b5aaf5f6992319c2c72e080a1a55842640b8732",
      "patch": "@@ -0,0 +1,5 @@\n+#as:\n+#objdump: -dw\n+#name: x86-64 sysenter (Default)\n+#source: x86-64-sysenter-amd.s\n+#dump: x86-64-sysenter-intel.d"
    },
    {
      "sha": "d8f84c840fc94a810c029936c76cda6c06814a16",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b5aaf5f6992319c2c72e080a1a55842640b8732/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b5aaf5f6992319c2c72e080a1a55842640b8732/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=4b5aaf5f6992319c2c72e080a1a55842640b8732",
      "patch": "@@ -1,3 +1,21 @@\n+2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/25516\n+\t* i386-gen.c (opcode_modifiers): Replace AMD64 and Intel64\n+\twith ISA64.\n+\t* i386-opc.h (AMD64): Removed.\n+\t(Intel64): Likewose.\n+\t(AMD64): New.\n+\t(INTEL64): Likewise.\n+\t(INTEL64ONLY): Likewise.\n+\t(i386_opcode_modifier): Replace amd64 and intel64 with isa64.\n+\t* i386-opc.tbl (Amd64): New.\n+\t(Intel64): Likewise.\n+\t(Intel64Only): Likewise.\n+\tReplace AMD64 with Amd64.  Update sysenter/sysenter with\n+\tCpu64 and Intel64Only.  Remove AMD64 from sysenter/sysenter.\n+\t* i386-tbl.h: Regenerated.\n+\n 2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>\n \n \tPR 25469"
    },
    {
      "sha": "d7e29aabbe969a80a6886b29048417291f8cf535",
      "filename": "opcodes/i386-gen.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b5aaf5f6992319c2c72e080a1a55842640b8732/opcodes/i386-gen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b5aaf5f6992319c2c72e080a1a55842640b8732/opcodes/i386-gen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-gen.c?ref=4b5aaf5f6992319c2c72e080a1a55842640b8732",
      "patch": "@@ -666,8 +666,7 @@ static bitfield opcode_modifiers[] =\n   BITFIELD (ATTMnemonic),\n   BITFIELD (ATTSyntax),\n   BITFIELD (IntelSyntax),\n-  BITFIELD (AMD64),\n-  BITFIELD (Intel64),\n+  BITFIELD (ISA64),\n };\n \n #define CLASS(n) #n, n"
    },
    {
      "sha": "ecd441e99cb31adc15f00649666f0ac17e066f63",
      "filename": "opcodes/i386-opc.h",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b5aaf5f6992319c2c72e080a1a55842640b8732/opcodes/i386-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b5aaf5f6992319c2c72e080a1a55842640b8732/opcodes/i386-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.h?ref=4b5aaf5f6992319c2c72e080a1a55842640b8732",
      "patch": "@@ -638,10 +638,16 @@ enum\n   ATTSyntax,\n   /* Intel syntax.  */\n   IntelSyntax,\n-  /* AMD64.  */\n-  AMD64,\n-  /* Intel64.  */\n-  Intel64,\n+  /* ISA64: Don't change the order without other code adjustments.\n+\t0: Common to AMD64 and Intel64.\n+\t1: AMD64.\n+\t2: Intel64.\n+\t3: Only in Intel64.\n+   */\n+#define AMD64\t\t1\n+#define INTEL64\t\t2\n+#define INTEL64ONLY\t3\n+  ISA64,\n   /* The last bitfield in i386_opcode_modifier.  */\n   Opcode_Modifier_Num\n };\n@@ -705,8 +711,7 @@ typedef struct i386_opcode_modifier\n   unsigned int attmnemonic:1;\n   unsigned int attsyntax:1;\n   unsigned int intelsyntax:1;\n-  unsigned int amd64:1;\n-  unsigned int intel64:1;\n+  unsigned int isa64:2;\n } i386_opcode_modifier;\n \n /* Operand classes.  */"
    },
    {
      "sha": "6531ef262c2999f61e820ff56d068ae90eada8ee",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 15,
      "deletions": 11,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b5aaf5f6992319c2c72e080a1a55842640b8732/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b5aaf5f6992319c2c72e080a1a55842640b8732/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=4b5aaf5f6992319c2c72e080a1a55842640b8732",
      "patch": "@@ -22,6 +22,10 @@\n #include \"i386-opc.h\"\n #undef None\n \n+#define Amd64\t\tISA64=AMD64\n+#define Intel64\t\tISA64=INTEL64\n+#define Intel64Only\tISA64=INTEL64ONLY\n+\n #define Reg8  Class=Reg|Byte\n #define Reg16 Class=Reg|Word\n #define Reg32 Class=Reg|Dword\n@@ -136,7 +140,7 @@ movsx, 2, 0xfbe, None, 2, Cpu386, Modrm|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf\n movsx, 2, 0xfbf, None, 2, Cpu386, Modrm|No_bSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IntelSyntax, { Reg16|Word|BaseIndex, Reg32|Reg64 }\n movsx, 2, 0x63, None, 1, Cpu64, Modrm|No_bSuf|No_wSuf|No_sSuf|No_qSuf|No_ldSuf|Rex64|IntelSyntax, { Reg32|Dword|BaseIndex, Reg64 }\n movsxd, 2, 0x63, None, 1, Cpu64, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg32|Unspecified|BaseIndex, Reg32|Reg64 }\n-movsxd, 2, 0x63, None, 1, Cpu64, AMD64|Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg32|Unspecified|BaseIndex, Reg16 }\n+movsxd, 2, 0x63, None, 1, Cpu64, Amd64|Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg32|Unspecified|BaseIndex, Reg16 }\n movsxd, 2, 0x63, None, 1, Cpu64, Intel64|Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg16|Unspecified|BaseIndex, Reg16 }\n \n // Move with zero extend.\n@@ -373,10 +377,10 @@ shrd, 2, 0xfad, None, 2, Cpu386, Modrm|CheckRegSize|No_bSuf|No_sSuf|No_ldSuf, {\n \n // Control transfer instructions.\n call, 1, 0xe8, None, 1, CpuNo64, JumpDword|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf|BNDPrefixOk, { Disp16|Disp32 }\n-call, 1, 0xe8, None, 1, Cpu64, AMD64|JumpDword|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk, { Disp16|Disp32S }\n+call, 1, 0xe8, None, 1, Cpu64, Amd64|JumpDword|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk, { Disp16|Disp32S }\n call, 1, 0xe8, None, 1, Cpu64, Intel64|JumpDword|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk, { Disp32S }\n call, 1, 0xff, 0x2, 1, CpuNo64, Modrm|JumpAbsolute|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf|BNDPrefixOk|NoTrackPrefixOk, { Reg16|Reg32|Unspecified|BaseIndex }\n-call, 1, 0xff, 0x2, 1, Cpu64, AMD64|Modrm|JumpAbsolute|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk|NoTrackPrefixOk, { Reg16|Reg64|Unspecified|BaseIndex }\n+call, 1, 0xff, 0x2, 1, Cpu64, Amd64|Modrm|JumpAbsolute|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk|NoTrackPrefixOk, { Reg16|Reg64|Unspecified|BaseIndex }\n call, 1, 0xff, 0x2, 1, Cpu64, Intel64|Modrm|JumpAbsolute|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk|NoTrackPrefixOk, { Reg64|Unspecified|BaseIndex }\n // Intel Syntax\n call, 2, 0x9a, None, 1, CpuNo64, JumpInterSegment|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm16, Imm16|Imm32 }\n@@ -386,10 +390,10 @@ lcall, 2, 0x9a, None, 1, CpuNo64, JumpInterSegment|DefaultSize|No_bSuf|No_sSuf|N\n lcall, 1, 0xff, 0x3, 1, 0, Modrm|JumpAbsolute|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex }\n \n jmp, 1, 0xeb, None, 1, CpuNo64, Jump|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|BNDPrefixOk, { Disp8|Disp16|Disp32 }\n-jmp, 1, 0xeb, None, 1, Cpu64, AMD64|Jump|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|BNDPrefixOk, { Disp8|Disp16|Disp32S }\n+jmp, 1, 0xeb, None, 1, Cpu64, Amd64|Jump|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|BNDPrefixOk, { Disp8|Disp16|Disp32S }\n jmp, 1, 0xeb, None, 1, Cpu64, Intel64|Jump|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|BNDPrefixOk, { Disp8|Disp32S }\n jmp, 1, 0xff, 0x4, 1, CpuNo64, Modrm|JumpAbsolute|No_bSuf|No_sSuf|No_qSuf|No_ldSuf|BNDPrefixOk|NoTrackPrefixOk, { Reg16|Reg32|Unspecified|BaseIndex }\n-jmp, 1, 0xff, 0x4, 1, Cpu64, AMD64|Modrm|JumpAbsolute|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk|NoTrackPrefixOk, { Reg16|Reg64|Unspecified|BaseIndex }\n+jmp, 1, 0xff, 0x4, 1, Cpu64, Amd64|Modrm|JumpAbsolute|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk|NoTrackPrefixOk, { Reg16|Reg64|Unspecified|BaseIndex }\n jmp, 1, 0xff, 0x4, 1, Cpu64, Intel64|Modrm|JumpAbsolute|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk|NoTrackPrefixOk, { Reg64|Unspecified|BaseIndex }\n // Intel Syntax.\n jmp, 2, 0xea, None, 1, CpuNo64, JumpInterSegment|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm16, Imm16|Imm32 }\n@@ -400,8 +404,8 @@ ljmp, 1, 0xff, 0x5, 1, 0, Modrm|JumpAbsolute|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, {\n \n ret, 0, 0xc3, None, 1, CpuNo64, DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf|RepPrefixOk|BNDPrefixOk, { 0 }\n ret, 1, 0xc2, None, 1, CpuNo64, DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf|RepPrefixOk|BNDPrefixOk, { Imm16 }\n-ret, 0, 0xc3, None, 1, Cpu64, AMD64|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|RepPrefixOk|BNDPrefixOk, { 0 }\n-ret, 1, 0xc2, None, 1, Cpu64, AMD64|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|RepPrefixOk|BNDPrefixOk, { Imm16 }\n+ret, 0, 0xc3, None, 1, Cpu64, Amd64|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|RepPrefixOk|BNDPrefixOk, { 0 }\n+ret, 1, 0xc2, None, 1, Cpu64, Amd64|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|RepPrefixOk|BNDPrefixOk, { Imm16 }\n ret, 0, 0xc3, None, 1, Cpu64, Intel64|Size64|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|RepPrefixOk|BNDPrefixOk, { 0 }\n ret, 1, 0xc2, None, 1, Cpu64, Intel64|Size64|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|RepPrefixOk|BNDPrefixOk, { Imm16 }\n lret, 0, 0xcb, None, 1, 0, DefaultSize|No_bSuf|No_sSuf|No_ldSuf, { 0 }\n@@ -909,10 +913,10 @@ rdmsr, 0, 0xf32, None, 2, Cpu586, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldS\n cmpxchg8b, 1, 0xfc7, 0x1, 2, Cpu586, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_ldSuf|IsLockable|NoRex64|HLEPrefixOk, { Qword|Unspecified|BaseIndex }\n \n // Pentium II/Pentium Pro extensions.\n-sysenter, 0, 0xf34, None, 2, Cpu686, Intel64|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n-sysenter, 0, 0xf34, None, 2, Cpu686|CpuNo64, AMD64|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n-sysexit, 0, 0xf35, None, 2, Cpu686, Intel64|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n-sysexit, 0, 0xf35, None, 2, Cpu686|CpuNo64, AMD64|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n+sysenter, 0, 0xf34, None, 2, Cpu64, Intel64Only|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n+sysenter, 0, 0xf34, None, 2, Cpu686|CpuNo64, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n+sysexit, 0, 0xf35, None, 2, Cpu64, Intel64Only|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n+sysexit, 0, 0xf35, None, 2, Cpu686|CpuNo64, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n fxsave, 1, 0xfae, 0x0, 2, CpuFXSR, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_ldSuf, { Unspecified|BaseIndex }\n fxsave64, 1, 0xfae, 0x0, 2, CpuFXSR|Cpu64, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|Rex64, { Unspecified|BaseIndex }\n fxrstor, 1, 0xfae, 0x1, 2, CpuFXSR, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_ldSuf, { Unspecified|BaseIndex }"
    },
    {
      "sha": "8dacb1b14a767a33472647c8517930062f3bb7f5",
      "filename": "opcodes/i386-tbl.h",
      "status": "modified",
      "additions": 3929,
      "deletions": 3929,
      "changes": 7858,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b5aaf5f6992319c2c72e080a1a55842640b8732/opcodes/i386-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b5aaf5f6992319c2c72e080a1a55842640b8732/opcodes/i386-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-tbl.h?ref=4b5aaf5f6992319c2c72e080a1a55842640b8732"
    }
  ]
}