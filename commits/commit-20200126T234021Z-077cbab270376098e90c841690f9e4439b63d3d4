{
  "sha": "077cbab270376098e90c841690f9e4439b63d3d4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDc3Y2JhYjI3MDM3NjA5OGU5MGM4NDE2OTBmOWU0NDM5YjYzZDNkNA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-23T03:13:10Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-01-26T23:40:21Z"
    },
    "message": "Consolidate psymtab \"Reading\" messages\n\nEach symbol reader implemented its own \"Reading...\" messages, and most\nof them double-checked that a previously-expanded psymtab could not be\nre-read.\n\nThis patch consolidates the message-printing, and changes these checks\ninto asserts.\n\ngdb/ChangeLog\n2020-01-26  Tom Tromey  <tom@tromey.com>\n\n\t* xcoffread.c (xcoff_read_symtab): Remove prints.  Add assert.\n\t* psymtab.c (psymtab_to_symtab): Print verbose \"Reading\"\n\tmessages.\n\t* mdebugread.c (mdebug_read_symtab): Remove prints.\n\t* dwarf2read.c (dwarf2_psymtab::read_symtab): Remove prints.  Add\n\tassert.\n\t* dbxread.c (dbx_read_symtab): Remove prints.  Add assert.\n\nChange-Id: I795be9710d42708299bb7b44972cffd27aec9413",
    "tree": {
      "sha": "0cd6ed8c27c8a723472193a87aee65fd136cb049",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0cd6ed8c27c8a723472193a87aee65fd136cb049"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/077cbab270376098e90c841690f9e4439b63d3d4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/077cbab270376098e90c841690f9e4439b63d3d4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/077cbab270376098e90c841690f9e4439b63d3d4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/077cbab270376098e90c841690f9e4439b63d3d4/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "891813beaab0029c88c9eeec9c1847d68a4d6050",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/891813beaab0029c88c9eeec9c1847d68a4d6050",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/891813beaab0029c88c9eeec9c1847d68a4d6050"
    }
  ],
  "stats": {
    "total": 114,
    "additions": 36,
    "deletions": 78
  },
  "files": [
    {
      "sha": "ed3b97bfa104e0de004e60d7cc6ffd24abcbcf3e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/077cbab270376098e90c841690f9e4439b63d3d4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/077cbab270376098e90c841690f9e4439b63d3d4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=077cbab270376098e90c841690f9e4439b63d3d4",
      "patch": "@@ -1,3 +1,13 @@\n+2020-01-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* xcoffread.c (xcoff_read_symtab): Remove prints.  Add assert.\n+\t* psymtab.c (psymtab_to_symtab): Print verbose \"Reading\"\n+\tmessages.\n+\t* mdebugread.c (mdebug_read_symtab): Remove prints.\n+\t* dwarf2read.c (dwarf2_psymtab::read_symtab): Remove prints.  Add\n+\tassert.\n+\t* dbxread.c (dbx_read_symtab): Remove prints.  Add assert.\n+\n 2020-01-26  Tom Tromey  <tom@tromey.com>\n \n \t* xcoffread.c (this_symtab_psymtab, read_xcoff_symtab)"
    },
    {
      "sha": "9d8d938ba533e6b519258c7e0daf100a64f5da75",
      "filename": "gdb/dbxread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 19,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/077cbab270376098e90c841690f9e4439b63d3d4/gdb/dbxread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/077cbab270376098e90c841690f9e4439b63d3d4/gdb/dbxread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dbxread.c?ref=077cbab270376098e90c841690f9e4439b63d3d4",
      "patch": "@@ -2117,24 +2117,10 @@ dbx_psymtab_to_symtab_1 (struct objfile *objfile, legacy_psymtab *pst)\n static void\n dbx_read_symtab (legacy_psymtab *self, struct objfile *objfile)\n {\n-  if (self->readin)\n-    {\n-      fprintf_unfiltered (gdb_stderr, \"Psymtab for %s already read in.  \"\n-\t\t\t  \"Shouldn't happen.\\n\",\n-\t\t\t  self->filename);\n-      return;\n-    }\n+  gdb_assert (!self->readin);\n \n   if (LDSYMLEN (self) || self->number_of_dependencies)\n     {\n-      /* Print the message now, before reading the string table,\n-         to avoid disconcerting pauses.  */\n-      if (info_verbose)\n-\t{\n-\t  printf_filtered (\"Reading in symbols for %s...\", self->filename);\n-\t  gdb_flush (gdb_stdout);\n-\t}\n-\n       next_symbol_text_func = dbx_next_symbol_text;\n \n       {\n@@ -2155,10 +2141,6 @@ dbx_read_symtab (legacy_psymtab *self, struct objfile *objfile)\n       /* Match with global symbols.  This only needs to be done once,\n          after all of the symtabs and dependencies have been read in.   */\n       scan_file_globals (objfile);\n-\n-      /* Finish up the debug error message.  */\n-      if (info_verbose)\n-\tprintf_filtered (\"done.\\n\");\n     }\n }\n "
    },
    {
      "sha": "9942270622de1d641fe8daa322210ea4d9b7166a",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 13,
      "deletions": 31,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/077cbab270376098e90c841690f9e4439b63d3d4/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/077cbab270376098e90c841690f9e4439b63d3d4/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=077cbab270376098e90c841690f9e4439b63d3d4",
      "patch": "@@ -9494,41 +9494,23 @@ dwarf2_psymtab::read_symtab (struct objfile *objfile)\n   struct dwarf2_per_objfile *dwarf2_per_objfile\n     = get_dwarf2_per_objfile (objfile);\n \n-  if (readin)\n-    {\n-      warning (_(\"bug: psymtab for %s is already read in.\"),\n-\t       filename);\n-    }\n-  else\n+  gdb_assert (!readin);\n+  /* If this psymtab is constructed from a debug-only objfile, the\n+     has_section_at_zero flag will not necessarily be correct.  We\n+     can get the correct value for this flag by looking at the data\n+     associated with the (presumably stripped) associated objfile.  */\n+  if (objfile->separate_debug_objfile_backlink)\n     {\n-      if (info_verbose)\n-\t{\n-\t  printf_filtered (_(\"Reading in symbols for %s...\"),\n-\t\t\t   filename);\n-\t  gdb_flush (gdb_stdout);\n-\t}\n+      struct dwarf2_per_objfile *dpo_backlink\n+\t= get_dwarf2_per_objfile (objfile->separate_debug_objfile_backlink);\n \n-      /* If this psymtab is constructed from a debug-only objfile, the\n-\t has_section_at_zero flag will not necessarily be correct.  We\n-\t can get the correct value for this flag by looking at the data\n-\t associated with the (presumably stripped) associated objfile.  */\n-      if (objfile->separate_debug_objfile_backlink)\n-\t{\n-\t  struct dwarf2_per_objfile *dpo_backlink\n-\t    = get_dwarf2_per_objfile (objfile->separate_debug_objfile_backlink);\n-\n-\t  dwarf2_per_objfile->has_section_at_zero\n-\t    = dpo_backlink->has_section_at_zero;\n-\t}\n-\n-      dwarf2_per_objfile->reading_partial_symbols = 0;\n+      dwarf2_per_objfile->has_section_at_zero\n+\t= dpo_backlink->has_section_at_zero;\n+    }\n \n-      psymtab_to_symtab_1 (this);\n+  dwarf2_per_objfile->reading_partial_symbols = 0;\n \n-      /* Finish up the debug error message.  */\n-      if (info_verbose)\n-\tprintf_filtered (_(\"done.\\n\"));\n-    }\n+  psymtab_to_symtab_1 (this);\n \n   process_cu_includes (dwarf2_per_objfile);\n }"
    },
    {
      "sha": "4b32a5a8b081cde3079ac4efad3d87e901133c38",
      "filename": "gdb/mdebugread.c",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/077cbab270376098e90c841690f9e4439b63d3d4/gdb/mdebugread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/077cbab270376098e90c841690f9e4439b63d3d4/gdb/mdebugread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mdebugread.c?ref=077cbab270376098e90c841690f9e4439b63d3d4",
      "patch": "@@ -277,22 +277,13 @@ static const char *mdebug_next_symbol_text (struct objfile *);\n static void\n mdebug_read_symtab (legacy_psymtab *self, struct objfile *objfile)\n {\n-  if (info_verbose)\n-    {\n-      printf_filtered (_(\"Reading in symbols for %s...\"), self->filename);\n-      gdb_flush (gdb_stdout);\n-    }\n-\n   next_symbol_text_func = mdebug_next_symbol_text;\n \n   psymtab_to_symtab_1 (objfile, self, self->filename);\n \n   /* Match with global symbols.  This only needs to be done once,\n      after all of the symtabs and dependencies have been read in.  */\n   scan_file_globals (objfile);\n-\n-  if (info_verbose)\n-    printf_filtered (_(\"done.\\n\"));\n }\n \f\n /* File-level interface functions.  */"
    },
    {
      "sha": "6abc829e2ee0a41067efebc98306a24c7fdcfbc6",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/077cbab270376098e90c841690f9e4439b63d3d4/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/077cbab270376098e90c841690f9e4439b63d3d4/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=077cbab270376098e90c841690f9e4439b63d3d4",
      "patch": "@@ -758,7 +758,18 @@ psymtab_to_symtab (struct objfile *objfile, struct partial_symtab *pst)\n     {\n       scoped_restore decrementer = increment_reading_symtab ();\n \n+      if (info_verbose)\n+\t{\n+\t  printf_filtered (_(\"Reading in symbols for %s...\"),\n+\t\t\t   pst->filename);\n+\t  gdb_flush (gdb_stdout);\n+\t}\n+\n       pst->read_symtab (objfile);\n+\n+      /* Finish up the debug error message.  */\n+      if (info_verbose)\n+\tprintf_filtered (_(\"done.\\n\"));\n     }\n \n   return pst->compunit_symtab;"
    },
    {
      "sha": "66d6b9adf9d8dff2952851525b7aa645b9c7c40f",
      "filename": "gdb/xcoffread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 19,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/077cbab270376098e90c841690f9e4439b63d3d4/gdb/xcoffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/077cbab270376098e90c841690f9e4439b63d3d4/gdb/xcoffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/xcoffread.c?ref=077cbab270376098e90c841690f9e4439b63d3d4",
      "patch": "@@ -1869,36 +1869,18 @@ xcoff_psymtab_to_symtab_1 (struct objfile *objfile, legacy_psymtab *pst)\n static void\n xcoff_read_symtab (legacy_psymtab *self, struct objfile *objfile)\n {\n-  if (self->readin)\n-    {\n-      fprintf_unfiltered\n-\t(gdb_stderr, \"Psymtab for %s already read in.  Shouldn't happen.\\n\",\n-\t self->filename);\n-      return;\n-    }\n+  gdb_assert (!self->readin);\n \n   if (((struct symloc *) self->read_symtab_private)->numsyms != 0\n       || self->number_of_dependencies)\n     {\n-      /* Print the message now, before reading the string table,\n-         to avoid disconcerting pauses.  */\n-      if (info_verbose)\n-\t{\n-\t  printf_filtered (\"Reading in symbols for %s...\", self->filename);\n-\t  gdb_flush (gdb_stdout);\n-\t}\n-\n       next_symbol_text_func = xcoff_next_symbol_text;\n \n       xcoff_psymtab_to_symtab_1 (objfile, self);\n \n       /* Match with global symbols.  This only needs to be done once,\n          after all of the symtabs and dependencies have been read in.   */\n       scan_file_globals (objfile);\n-\n-      /* Finish up the debug error message.  */\n-      if (info_verbose)\n-\tprintf_filtered (\"done.\\n\");\n     }\n }\n \f"
    }
  ]
}