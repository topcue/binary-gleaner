{
  "sha": "b13057d9ceaa4944dc2d0ebf5df750d9350d0727",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjEzMDU3ZDljZWFhNDk0NGRjMmQwZWJmNWRmNzUwZDkzNTBkMDcyNw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-07-30T07:42:07Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-07-30T07:42:07Z"
    },
    "message": "[gdb/testsuite] Fail in gdb_compile if nopie results in PIE executable\n\nWhen running gdb.base/dump.exp with --target_board=unix/-fPIE/-pie, we get:\n...\nRunning gdb/testsuite/gdb.base/dump.exp ...\nFAIL: gdb.base/dump.exp: dump array as value, intel hex\n...\n\nThe FAIL happens because although the test specifies nopie, the exec is\nin fact compiled as PIE.  The \"-fPIE -pie\" options specified using the\ntarget_board are interpreted by dejagnu as multilib_flags, and end up\noverriding the nopie flags.\n\nFix this by checking in gdb_compile if the resulting exec is PIE despite of\na nopie setting, and if so return an error:\n...\nRunning gdb/testsuite/gdb.base/dump.exp ...\ngdb compile failed, nopie failed to prevent PIE executable\n\n                === gdb Summary ===\n\nnr of untested testcases         1\n...\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2019-07-30  Tom de Vries  <tdevries@suse.de>\n\n\tPR testsuite/24834\n\t* lib/gdb.exp (gdb_compile): Fail if nopie results in PIE executable.\n\t(exec_is_pie): New proc.",
    "tree": {
      "sha": "afd4cd01773acf58b8ef22f02e97ca0cf2413507",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/afd4cd01773acf58b8ef22f02e97ca0cf2413507"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b13057d9ceaa4944dc2d0ebf5df750d9350d0727",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b13057d9ceaa4944dc2d0ebf5df750d9350d0727",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b13057d9ceaa4944dc2d0ebf5df750d9350d0727",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b13057d9ceaa4944dc2d0ebf5df750d9350d0727/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "34d5c40a07be4bc195d5ed9aecf4eb2faa1482bc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/34d5c40a07be4bc195d5ed9aecf4eb2faa1482bc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/34d5c40a07be4bc195d5ed9aecf4eb2faa1482bc"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 24,
    "deletions": 0
  },
  "files": [
    {
      "sha": "3476d7f46f27d3bd73e10e03e86ce481f15127be",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b13057d9ceaa4944dc2d0ebf5df750d9350d0727/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b13057d9ceaa4944dc2d0ebf5df750d9350d0727/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b13057d9ceaa4944dc2d0ebf5df750d9350d0727",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-30  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR testsuite/24834\n+\t* lib/gdb.exp (gdb_compile): Fail if nopie results in PIE executable.\n+\t(exec_is_pie): New proc.\n+\n 2019-07-29  Christian Biesinger  <cbiesinger@google.com>\n \n \t* gdb.python/py-objfile.c: Add global and static vars."
    },
    {
      "sha": "68e94346dee8f50b862756fabcd26feb3fed6c07",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b13057d9ceaa4944dc2d0ebf5df750d9350d0727/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b13057d9ceaa4944dc2d0ebf5df750d9350d0727/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=b13057d9ceaa4944dc2d0ebf5df750d9350d0727",
      "patch": "@@ -3771,6 +3771,12 @@ proc gdb_compile {source dest type options} {\n     regsub \"\\[\\r\\n\\]*$\" \"$result\" \"\" result\n     regsub \"^\\[\\r\\n\\]*\" \"$result\" \"\" result\n     \n+    if { $type == \"executable\" && $result == \"\" && $nopie != -1 } {\n+\tif { [exec_is_pie \"$dest\"] } {\n+\t    set result \"nopie failed to prevent PIE executable\"\n+\t}\n+    }\n+\n     if {[lsearch $options quiet] < 0} {\n \t# We shall update this on a per language basis, to avoid\n \t# changing the entire testsuite in one go.\n@@ -5171,6 +5177,18 @@ proc exec_has_index_section { executable } {\n     return 0\n }\n \n+# Return true if EXECUTABLE is a Position Independent Executable.\n+\n+proc exec_is_pie { executable } {\n+    set readelf_program [gdb_find_readelf]\n+    set res [catch {exec $readelf_program -d $executable \\\n+\t\t\t| grep -E \"(FLAGS_1).*Flags:.* PIE($| )\" }]\n+    if { $res == 0 } {\n+\treturn 1\n+    }\n+    return 0\n+}\n+\n # Return true if a test should be skipped due to lack of floating\n # point support or GDB can't fetch the contents from floating point\n # registers."
    }
  ]
}