{
  "sha": "0e28ade476e20bd8af917e01a3f1429a34cc1d83",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGUyOGFkZTQ3NmUyMGJkOGFmOTE3ZTAxYTNmMTQyOWEzNGNjMWQ4Mw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-11-20T13:34:04Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-11-20T13:34:10Z"
    },
    "message": "libctf, ld: properly deduplicate function types\n\nSome type kinds in CTF (functions, arrays, pointers, slices, and\ncvr-quals) are intrinsically nameless: the ctt_name field in the CTF\nis always zero, and the libctf API provides no way to set a name.\nBut the compiler can and does sometimes set names for some of these\nkinds: in particular, the name it sets on CTF_K_FUNCTION types is the\nmeans it uses to force the name of the function into the string table\nso that it can point at it from the function info section.\n\nSo null out the name at hashing time so that the deduplicator can\ncorrectly detect that e.g. function types identical but for name should\nbe considered truly identical, since they will not have a name when the\ndeduplicator re-emits them into the output.\n\nld/ChangeLog\n2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* testsuite/ld-ctf/data-func-conflicted.d: Shrink the expected\n\tsize of the type section now that function types are being\n\tdeduplicated properly.\n\nlibctf/ChangeLog\n2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-dedup.c (ctf_dedup_rhash_type): Null out the names of nameless\n\ttype kinds, just in case the input has named them.",
    "tree": {
      "sha": "e71bd47c4efb2f5847743e155c07f42e6efed78e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e71bd47c4efb2f5847743e155c07f42e6efed78e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0e28ade476e20bd8af917e01a3f1429a34cc1d83",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e28ade476e20bd8af917e01a3f1429a34cc1d83",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0e28ade476e20bd8af917e01a3f1429a34cc1d83",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e28ade476e20bd8af917e01a3f1429a34cc1d83/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0ad70c536abd64b1b913ce89e385faef34c373c0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ad70c536abd64b1b913ce89e385faef34c373c0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0ad70c536abd64b1b913ce89e385faef34c373c0"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 33,
    "deletions": 6
  },
  "files": [
    {
      "sha": "5e81fa267eac7f1a4e22215f03ea169ae58d0bfb",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e28ade476e20bd8af917e01a3f1429a34cc1d83/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e28ade476e20bd8af917e01a3f1429a34cc1d83/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=0e28ade476e20bd8af917e01a3f1429a34cc1d83",
      "patch": "@@ -1,3 +1,9 @@\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* testsuite/ld-ctf/data-func-conflicted.d: Shrink the expected\n+\tsize of the type section now that function types are being\n+\tdeduplicated properly.\n+\n 2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* testsuite/ld-ctf/array.d: Adjust for nonzero flags word and"
    },
    {
      "sha": "1fa8bb2fe5f4d5da2ea2cb1c6655c84ccef0524f",
      "filename": "ld/testsuite/ld-ctf/data-func-conflicted.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e28ade476e20bd8af917e01a3f1429a34cc1d83/ld/testsuite/ld-ctf/data-func-conflicted.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e28ade476e20bd8af917e01a3f1429a34cc1d83/ld/testsuite/ld-ctf/data-func-conflicted.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/data-func-conflicted.d?ref=0e28ade476e20bd8af917e01a3f1429a34cc1d83",
      "patch": "@@ -16,7 +16,7 @@ Contents of CTF section \\.ctf:\n     Data object section:\t.* \\(0xc bytes\\)\n     Function info section:\t.* \\(0x40 bytes\\)\n     Object index section:\t.* \\(0xc bytes\\)\n-    Type section:\t.* \\(0x228 bytes\\)\n+    Type section:\t.* \\(0xe8 bytes\\)\n     String section:\t.*\n #...\n   Data objects:"
    },
    {
      "sha": "e571404e1c385ac025623963b6044e80605b0b57",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e28ade476e20bd8af917e01a3f1429a34cc1d83/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e28ade476e20bd8af917e01a3f1429a34cc1d83/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=0e28ade476e20bd8af917e01a3f1429a34cc1d83",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dedup.c (ctf_dedup_rhash_type): Null out the names of nameless\n+\ttype kinds, just in case the input has named them.\n+\n 2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-dump.c (ctf_dump_header): Dump the new flags bits and the index"
    },
    {
      "sha": "b0be5a7044f83ba79464d0ee2a744ba3ed1732cf",
      "filename": "libctf/ctf-dedup.c",
      "status": "modified",
      "additions": 21,
      "deletions": 5,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e28ade476e20bd8af917e01a3f1429a34cc1d83/libctf/ctf-dedup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e28ade476e20bd8af917e01a3f1429a34cc1d83/libctf/ctf-dedup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-dedup.c?ref=0e28ade476e20bd8af917e01a3f1429a34cc1d83",
      "patch": "@@ -638,6 +638,27 @@ ctf_dedup_rhash_type (ctf_dict_t *fp, ctf_dict_t *input, ctf_dict_t **inputs,\n \t&& ctf_dedup_record_origin (fp, input_num, decorated, type_id) < 0)\n       return NULL;\t\t\t\t/* errno is set for us.  */\n \n+#ifdef ENABLE_LIBCTF_HASH_DEBUGGING\n+  ctf_dprintf (\"%lu: hashing thing with ID %i/%lx (kind %i): %s.\\n\",\n+\t       depth, input_num, type, kind, name ? name : \"\");\n+#endif\n+\n+  /* Some type kinds don't have names: the API provides no way to set the name,\n+     so the type the deduplicator outputs will be nameless even if the input\n+     somehow has a name, and the name should not be mixed into the hash.  */\n+\n+  switch (kind)\n+    {\n+    case CTF_K_POINTER:\n+    case CTF_K_ARRAY:\n+    case CTF_K_FUNCTION:\n+    case CTF_K_VOLATILE:\n+    case CTF_K_CONST:\n+    case CTF_K_RESTRICT:\n+    case CTF_K_SLICE:\n+      name = NULL;\n+    }\n+\n   /* Mix in invariant stuff, transforming the type kind if needed.  Note that\n      the vlen is *not* hashed in: the actual variable-length info is hashed in\n      instead, piecewise.  The vlen is not part of the type, only the\n@@ -647,11 +668,6 @@ ctf_dedup_rhash_type (ctf_dict_t *fp, ctf_dict_t *input, ctf_dict_t **inputs,\n      *other types in the same TU* with the same name: so two types can easily\n      have distinct nonroot flags, yet be exactly the same type.*/\n \n-#ifdef ENABLE_LIBCTF_HASH_DEBUGGING\n-  ctf_dprintf (\"%lu: hashing thing with ID %i/%lx (kind %i): %s.\\n\",\n-\t       depth, input_num, type, kind, name ? name : \"\");\n-#endif\n-\n   ctf_sha1_init (&hash);\n   if (name)\n     ctf_dedup_sha1_add (&hash, name, strlen (name) + 1, \"name\", depth);"
    }
  ]
}