{
  "sha": "7582c77c1d2cab3f53b70697529c1644ceeb94a2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzU4MmM3N2MxZDJjYWIzZjUzYjcwNjk3NTI5YzE2NDRjZWViOTRhMg==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:26Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:26Z"
    },
    "message": "gdbserver/linux-low: turn 'supports_software_single_step' and 'get_next_pcs' into methods\n\ngdbserver/ChangeLog:\n2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tRemove the 'supports_software_single_step' linux target op and let\n\tthe concrete linux target define it by overriding the op in\n\tprocess_stratum_target.\n\tTurn the 'get_next_pcs' linux target op into a method of\n\tlinux_process_target.\n\n\t* linux-low.h (struct linux_target_ops): Remove the ops.\n\t(class linux_process_target) <supports_software_single_step>:\n\tRemove.\n\t<low_get_next_pcs>: Declare.\n\t* linux-low.cc (can_software_single_step): Remove.\n\t(linux_process_target::low_get_next_pcs): Define.\n\t(linux_process_target::supports_software_single_step): Remove.\n\n\tUpdate the callers below.\n\n\t(linux_process_target::handle_extended_wait)\n\t(linux_process_target::wait_1)\n\t(linux_process_target::install_software_single_step_breakpoints)\n\t(linux_process_target::single_step)\n\t(linux_process_target::thread_needs_step_over)\n\t(linux_process_target::proceed_one_lwp)\n\t(linux_process_target::supports_range_stepping)\n\n\t* linux-x86-low.cc (the_low_target): Remove the op field.\n\t* linux-aarch64-low.cc (the_low_target): Ditto.\n\t* linux-bfin-low.cc (the_low_target): Ditto.\n\t* linux-cris-low.cc (the_low_target): Ditto.\n\t* linux-crisv32-low.cc (the_low_target): Ditto.\n\t* linux-m32r-low.cc (the_low_target): Ditto.\n\t* linux-m68k-low.cc (the_low_target): Ditto.\n\t* linux-mips-low.cc (the_low_target): Ditto.\n\t* linux-nios2-low.cc (the_low_target): Ditto.\n\t* linux-ppc-low.cc (the_low_target): Ditto.\n\t* linux-riscv-low.cc (the_low_target): Ditto.\n\t* linux-s390-low.cc (the_low_target): Ditto.\n\t* linux-sh-low.cc (the_low_target): Ditto.\n\t* linux-sparc-low.cc (the_low_target): Ditto.\n\t* linux-tic6x-low.cc (the_low_target): Ditto.\n\t* linux-tile-low.cc (the_low_target): Ditto.\n\t* linux-xtensa-low.cc (the_low_target): Ditto.\n\t* linux-arm-low.cc (class arm_target) <low_get_next_pcs>\n\t<supports_software_single_step>: Declare.\n\t(arm_target::supports_software_single_step): Define.\n\t(arm_gdbserver_get_next_pcs): Turn into...\n\t(arm_target::low_get_next_pcs): ...this.\n\t(the_low_target): Remove the op field.",
    "tree": {
      "sha": "12a99919ee6846daf70b83723c9b416d19a9f73b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/12a99919ee6846daf70b83723c9b416d19a9f73b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7582c77c1d2cab3f53b70697529c1644ceeb94a2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7582c77c1d2cab3f53b70697529c1644ceeb94a2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7582c77c1d2cab3f53b70697529c1644ceeb94a2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7582c77c1d2cab3f53b70697529c1644ceeb94a2/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3ca4edb6617353defacd3bf3a4ee3d458238419e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ca4edb6617353defacd3bf3a4ee3d458238419e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3ca4edb6617353defacd3bf3a4ee3d458238419e"
    }
  ],
  "stats": {
    "total": 134,
    "additions": 84,
    "deletions": 50
  },
  "files": [
    {
      "sha": "f9a3df22d0256eb4e948e7b19f2cfecc31214185",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 50,
      "deletions": 0,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -1,3 +1,53 @@\n+2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tRemove the 'supports_software_single_step' linux target op and let\n+\tthe concrete linux target define it by overriding the op in\n+\tprocess_stratum_target.\n+\tTurn the 'get_next_pcs' linux target op into a method of\n+\tlinux_process_target.\n+\n+\t* linux-low.h (struct linux_target_ops): Remove the ops.\n+\t(class linux_process_target) <supports_software_single_step>:\n+\tRemove.\n+\t<low_get_next_pcs>: Declare.\n+\t* linux-low.cc (can_software_single_step): Remove.\n+\t(linux_process_target::low_get_next_pcs): Define.\n+\t(linux_process_target::supports_software_single_step): Remove.\n+\n+\tUpdate the callers below.\n+\n+\t(linux_process_target::handle_extended_wait)\n+\t(linux_process_target::wait_1)\n+\t(linux_process_target::install_software_single_step_breakpoints)\n+\t(linux_process_target::single_step)\n+\t(linux_process_target::thread_needs_step_over)\n+\t(linux_process_target::proceed_one_lwp)\n+\t(linux_process_target::supports_range_stepping)\n+\n+\t* linux-x86-low.cc (the_low_target): Remove the op field.\n+\t* linux-aarch64-low.cc (the_low_target): Ditto.\n+\t* linux-bfin-low.cc (the_low_target): Ditto.\n+\t* linux-cris-low.cc (the_low_target): Ditto.\n+\t* linux-crisv32-low.cc (the_low_target): Ditto.\n+\t* linux-m32r-low.cc (the_low_target): Ditto.\n+\t* linux-m68k-low.cc (the_low_target): Ditto.\n+\t* linux-mips-low.cc (the_low_target): Ditto.\n+\t* linux-nios2-low.cc (the_low_target): Ditto.\n+\t* linux-ppc-low.cc (the_low_target): Ditto.\n+\t* linux-riscv-low.cc (the_low_target): Ditto.\n+\t* linux-s390-low.cc (the_low_target): Ditto.\n+\t* linux-sh-low.cc (the_low_target): Ditto.\n+\t* linux-sparc-low.cc (the_low_target): Ditto.\n+\t* linux-tic6x-low.cc (the_low_target): Ditto.\n+\t* linux-tile-low.cc (the_low_target): Ditto.\n+\t* linux-xtensa-low.cc (the_low_target): Ditto.\n+\t* linux-arm-low.cc (class arm_target) <low_get_next_pcs>\n+\t<supports_software_single_step>: Declare.\n+\t(arm_target::supports_software_single_step): Define.\n+\t(arm_gdbserver_get_next_pcs): Turn into...\n+\t(arm_target::low_get_next_pcs): ...this.\n+\t(the_low_target): Remove the op field.\n+\n 2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tRemove the 'sw_breakpoint_from_kind' linux target op, and let"
    },
    {
      "sha": "11c3296eb6b90fe7306fc16a14ab0a223b910b1a",
      "filename": "gdbserver/linux-aarch64-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-aarch64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-aarch64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -3103,7 +3103,6 @@ aarch64_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* get_next_pcs */\n   0,    /* decr_pc_after_break */\n   aarch64_breakpoint_at,\n   aarch64_supports_z_point_type,"
    },
    {
      "sha": "bd42feba1c4724bc20a421f2b52e840a66342bc5",
      "filename": "gdbserver/linux-arm-low.cc",
      "status": "modified",
      "additions": 12,
      "deletions": 3,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-arm-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-arm-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-arm-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -68,6 +68,8 @@ class arm_target : public linux_process_target\n \n   const gdb_byte *sw_breakpoint_from_kind (int kind, int *size) override;\n \n+  bool supports_software_single_step () override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -81,6 +83,8 @@ class arm_target : public linux_process_target\n   CORE_ADDR low_get_pc (regcache *regcache) override;\n \n   void low_set_pc (regcache *regcache, CORE_ADDR newpc) override;\n+\n+  std::vector<CORE_ADDR> low_get_next_pcs (regcache *regcache) override;\n };\n \n /* The singleton target ops object.  */\n@@ -968,10 +972,16 @@ arm_target::low_arch_setup ()\n     have_ptrace_getregset = 0;\n }\n \n+bool\n+arm_target::supports_software_single_step ()\n+{\n+  return true;\n+}\n+\n /* Fetch the next possible PCs after the current instruction executes.  */\n \n-static std::vector<CORE_ADDR>\n-arm_gdbserver_get_next_pcs (struct regcache *regcache)\n+std::vector<CORE_ADDR>\n+arm_target::low_get_next_pcs (regcache *regcache)\n {\n   struct arm_get_next_pcs next_pcs_ctx;\n \n@@ -1075,7 +1085,6 @@ arm_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  arm_gdbserver_get_next_pcs,\n   0,\n   arm_breakpoint_at,\n   arm_supports_z_point_type,"
    },
    {
      "sha": "17948ed16f009c504836ba88cd7e05013b3f999a",
      "filename": "gdbserver/linux-bfin-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-bfin-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-bfin-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-bfin-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -161,7 +161,6 @@ bfin_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* get_next_pcs */\n   2,\n   bfin_breakpoint_at,\n   NULL, /* supports_z_point_type */"
    },
    {
      "sha": "99060de1765212f75a63a338b3073584e0c47d85",
      "filename": "gdbserver/linux-cris-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-cris-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-cris-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-cris-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -158,7 +158,6 @@ cris_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* get_next_pcs */\n   0,\n   cris_breakpoint_at,\n };"
    },
    {
      "sha": "c75e428885e4722cf1e6751d6f5ea10b7a2a59e0",
      "filename": "gdbserver/linux-crisv32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-crisv32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-crisv32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-crisv32-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -455,7 +455,6 @@ crisv32_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* get_next_pcs */\n   0,\n   cris_breakpoint_at,\n   cris_supports_z_point_type,"
    },
    {
      "sha": "8eca077180e34dec12c1ec5bc13f3df7b3ecbaf2",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 17,
      "deletions": 25,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -292,15 +292,6 @@ can_hardware_single_step (void)\n     return 0;\n }\n \n-/* True if the low target can software single-step.  Such targets\n-   implement the GET_NEXT_PCS callback.  */\n-\n-static int\n-can_software_single_step (void)\n-{\n-  return (the_low_target.get_next_pcs != NULL);\n-}\n-\n bool\n linux_process_target::low_supports_breakpoints ()\n {\n@@ -319,6 +310,13 @@ linux_process_target::low_set_pc (regcache *regcache, CORE_ADDR newpc)\n   gdb_assert_not_reached (\"linux target op low_set_pc is not implemented\");\n }\n \n+std::vector<CORE_ADDR>\n+linux_process_target::low_get_next_pcs (regcache *regcache)\n+{\n+  gdb_assert_not_reached (\"linux target op low_get_next_pcs is not \"\n+\t\t\t  \"implemented\");\n+}\n+\n /* Returns true if this target can support fast tracepoints.  This\n    does not mean that the in-process agent has been loaded in the\n    inferior.  */\n@@ -551,7 +549,7 @@ linux_process_target::handle_extended_wait (lwp_info **orig_event_lwp,\n \t  child_proc->attached = parent_proc->attached;\n \n \t  if (event_lwp->bp_reinsert != 0\n-\t      && can_software_single_step ()\n+\t      && supports_software_single_step ()\n \t      && event == PTRACE_EVENT_VFORK)\n \t    {\n \t      /* If we leave single-step breakpoints there, child will\n@@ -596,7 +594,7 @@ linux_process_target::handle_extended_wait (lwp_info **orig_event_lwp,\n \t     In case of vfork, we'll reinsert them back once vforked\n \t     child is done.  */\n \t  if (event_lwp->bp_reinsert != 0\n-\t      && can_software_single_step ())\n+\t      && supports_software_single_step ())\n \t    {\n \t      /* The child process is forked and stopped, so it is safe\n \t\t to access its memory without stopping all other threads\n@@ -660,7 +658,7 @@ linux_process_target::handle_extended_wait (lwp_info **orig_event_lwp,\n     {\n       event_lwp->waitstatus.kind = TARGET_WAITKIND_VFORK_DONE;\n \n-      if (event_lwp->bp_reinsert != 0 && can_software_single_step ())\n+      if (event_lwp->bp_reinsert != 0 && supports_software_single_step ())\n \t{\n \t  reinsert_single_step_breakpoints (event_thr);\n \n@@ -3508,7 +3506,7 @@ linux_process_target::wait_1 (ptid_t ptid, target_waitstatus *ourstatus,\n \t  /* Remove the single-step breakpoints if any.  Note that\n \t     there isn't single-step breakpoint if we finished stepping\n \t     over.  */\n-\t  if (can_software_single_step ()\n+\t  if (supports_software_single_step ()\n \t      && has_single_step_breakpoints (current_thread))\n \t    {\n \t      stop_all_lwps (0, event_child);\n@@ -3555,7 +3553,7 @@ linux_process_target::wait_1 (ptid_t ptid, target_waitstatus *ourstatus,\n   /* Alright, we're going to report a stop.  */\n \n   /* Remove single-step breakpoints.  */\n-  if (can_software_single_step ())\n+  if (supports_software_single_step ())\n     {\n       /* Remove single-step breakpoints or not.  It it is true, stop all\n \t lwps, so that other threads won't hit the breakpoint in the\n@@ -4116,7 +4114,7 @@ linux_process_target::install_software_single_step_breakpoints (lwp_info *lwp)\n   scoped_restore save_current_thread = make_scoped_restore (&current_thread);\n \n   current_thread = thread;\n-  std::vector<CORE_ADDR> next_pcs = the_low_target.get_next_pcs (regcache);\n+  std::vector<CORE_ADDR> next_pcs = low_get_next_pcs (regcache);\n \n   for (CORE_ADDR pc : next_pcs)\n     set_single_step_breakpoint (pc, current_ptid);\n@@ -4131,7 +4129,7 @@ linux_process_target::single_step (lwp_info* lwp)\n     {\n       step = 1;\n     }\n-  else if (can_software_single_step ())\n+  else if (supports_software_single_step ())\n     {\n       install_software_single_step_breakpoints (lwp);\n       step = 0;\n@@ -4610,7 +4608,7 @@ linux_process_target::thread_needs_step_over (thread_info *thread)\n \n   /* On software single step target, resume the inferior with signal\n      rather than stepping over.  */\n-  if (can_software_single_step ()\n+  if (supports_software_single_step ()\n       && lwp->pending_signals != NULL\n       && lwp_signal_can_be_delivered (lwp))\n     {\n@@ -5042,7 +5040,7 @@ linux_process_target::proceed_one_lwp (thread_info *thread, lwp_info *except)\n       /* If resume_step is requested by GDB, install single-step\n \t breakpoints when the thread is about to be actually resumed if\n \t the single-step breakpoints weren't removed.  */\n-      if (can_software_single_step ()\n+      if (supports_software_single_step ()\n \t  && !has_single_step_breakpoints (thread))\n \tinstall_software_single_step_breakpoints (lwp);\n \n@@ -5910,12 +5908,6 @@ linux_process_target::supports_hardware_single_step ()\n   return can_hardware_single_step ();\n }\n \n-bool\n-linux_process_target::supports_software_single_step ()\n-{\n-  return can_software_single_step ();\n-}\n-\n bool\n linux_process_target::stopped_by_watchpoint ()\n {\n@@ -6299,7 +6291,7 @@ linux_process_target::supports_agent ()\n bool\n linux_process_target::supports_range_stepping ()\n {\n-  if (can_software_single_step ())\n+  if (supports_software_single_step ())\n     return true;\n   if (*the_low_target.supports_range_stepping == NULL)\n     return false;"
    },
    {
      "sha": "2202a6582254ec281fa23f835898765706483d0e",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -131,9 +131,6 @@ struct lwp_info;\n \n struct linux_target_ops\n {\n-  /* Find the next possible PCs after the current instruction executes.  */\n-  std::vector<CORE_ADDR> (*get_next_pcs) (struct regcache *regcache);\n-\n   int decr_pc_after_break;\n   int (*breakpoint_at) (CORE_ADDR pc);\n \n@@ -440,8 +437,6 @@ class linux_process_target : public process_stratum_target\n \t\t      int *handle_len) override;\n #endif\n \n-  bool supports_software_single_step () override;\n-\n   bool supports_catch_syscall () override;\n \n   int get_ipa_tdesc_idx () override;\n@@ -666,6 +661,11 @@ class linux_process_target : public process_stratum_target\n   virtual CORE_ADDR low_get_pc (regcache *regcache);\n \n   virtual void low_set_pc (regcache *regcache, CORE_ADDR newpc);\n+\n+  /* Find the next possible PCs after the current instruction executes.\n+     Targets that override this method should also override\n+     'supports_software_single_step' to return true.  */\n+  virtual std::vector<CORE_ADDR> low_get_next_pcs (regcache *regcache);\n };\n \n extern linux_process_target *the_linux_target;"
    },
    {
      "sha": "78e002dfb242808ef57eec61158f40c22abcfab8",
      "filename": "gdbserver/linux-m32r-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-m32r-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-m32r-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m32r-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -160,7 +160,6 @@ m32r_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL,\n   0,\n   m32r_breakpoint_at,\n   NULL, /* supports_z_point_type */"
    },
    {
      "sha": "00851af5f0247e5a409bc578f199ecaaa45dc6db",
      "filename": "gdbserver/linux-m68k-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-m68k-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-m68k-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m68k-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -255,7 +255,6 @@ m68k_supports_hardware_single_step (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL,\n   2,\n   m68k_breakpoint_at,\n   NULL, /* supports_z_point_type */"
    },
    {
      "sha": "710245c1610dda9d3ce729d1b90df1a822b30933",
      "filename": "gdbserver/linux-mips-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-mips-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-mips-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-mips-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -966,7 +966,6 @@ mips_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* get_next_pcs */\n   0,\n   mips_breakpoint_at,\n   mips_supports_z_point_type,"
    },
    {
      "sha": "3cae8dac2859fb21a5ac11bc1ef33c47a04d50bf",
      "filename": "gdbserver/linux-nios2-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-nios2-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-nios2-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-nios2-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -277,7 +277,6 @@ nios2_target::get_regs_info ()\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* get_next_pcs */\n   0,\n   nios2_breakpoint_at,\n };"
    },
    {
      "sha": "af9dc0b2adfbb19730650657f4b7f6321d50a7bf",
      "filename": "gdbserver/linux-ppc-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-ppc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-ppc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ppc-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -3406,7 +3406,6 @@ ppc_get_ipa_tdesc_idx (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL,\n   0,\n   ppc_breakpoint_at,\n   ppc_supports_z_point_type,"
    },
    {
      "sha": "9e96504687e08795436760b813892ca4df7d5810",
      "filename": "gdbserver/linux-riscv-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-riscv-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-riscv-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-riscv-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -309,7 +309,6 @@ riscv_breakpoint_at (CORE_ADDR pc)\n /* RISC-V/Linux target operations.  */\n struct linux_target_ops the_low_target =\n {\n-  NULL, /* get_next_pcs */\n   0,    /* decr_pc_after_break */\n   riscv_breakpoint_at,\n };"
    },
    {
      "sha": "4c4b877bb751116c2594cfc3f670807d3bdd1bce",
      "filename": "gdbserver/linux-s390-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-s390-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-s390-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-s390-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -2826,7 +2826,6 @@ s390_emit_ops (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL,\n   s390_breakpoint_len,\n   s390_breakpoint_at,\n   s390_supports_z_point_type,"
    },
    {
      "sha": "47242dafe946290eeb27c907a5650963fda1e1e9",
      "filename": "gdbserver/linux-sh-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-sh-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-sh-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sh-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -190,7 +190,6 @@ sh_target::low_arch_setup ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL,\n   0,\n   sh_breakpoint_at,\n   NULL, /* supports_z_point_type */"
    },
    {
      "sha": "f724cb88b717e0dcbe0f61df4082bef8988deb67",
      "filename": "gdbserver/linux-sparc-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-sparc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-sparc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sparc-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -339,7 +339,6 @@ sparc_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* get_next_pcs */\n   0,\n   sparc_breakpoint_at,\n   NULL,  /* supports_z_point_type */"
    },
    {
      "sha": "347b79e6519c554a92a868030da635a815facd56",
      "filename": "gdbserver/linux-tic6x-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-tic6x-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-tic6x-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tic6x-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -421,7 +421,6 @@ tic6x_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL,\n   0,\n   tic6x_breakpoint_at,\n   NULL, /* supports_z_point_type */"
    },
    {
      "sha": "86191b9bb1ced59a0600b3ce7c996eb755391654",
      "filename": "gdbserver/linux-tile-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-tile-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-tile-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tile-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -222,7 +222,6 @@ tile_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL,\n   0,\n   tile_breakpoint_at,\n   NULL, /* supports_z_point_type */"
    },
    {
      "sha": "59c6b386d11ff4bfca30b58cecb5443d1b05a22d",
      "filename": "gdbserver/linux-x86-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-x86-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-x86-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-x86-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -2899,7 +2899,6 @@ x86_get_ipa_tdesc_idx (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL,\n   1,\n   x86_breakpoint_at,\n   x86_supports_z_point_type,"
    },
    {
      "sha": "320ac92968d3d969632ac903ffe62c194cb6c288",
      "filename": "gdbserver/linux-xtensa-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-xtensa-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7582c77c1d2cab3f53b70697529c1644ceeb94a2/gdbserver/linux-xtensa-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-xtensa-low.cc?ref=7582c77c1d2cab3f53b70697529c1644ceeb94a2",
      "patch": "@@ -328,7 +328,6 @@ xtensa_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL,\n   0,\n   xtensa_breakpoint_at,\n   NULL, /* supports_z_point_type */"
    }
  ]
}