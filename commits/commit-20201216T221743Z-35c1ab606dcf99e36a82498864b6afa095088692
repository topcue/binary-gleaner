{
  "sha": "35c1ab606dcf99e36a82498864b6afa095088692",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzVjMWFiNjA2ZGNmOTllMzZhODI0OTg4NjRiNmFmYTA5NTA4ODY5Mg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-16T22:12:55Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-16T22:17:43Z"
    },
    "message": "Change void_context_p to bool\n\nThis patch changes void_context_p to bool, as a prerequisite to the\nchange to post_parser that I submitted here:\n\nhttps://sourceware.org/pipermail/gdb-patches/2020-December/174080.html\n\nTested by rebuilding.\n\nNote that nothing in-tree passes true here.  I don't know why this is,\nbut there is a use of this internally in AdaCore's tree.  I will try\nto submit that patch, if it is needed.  (And if not, I will come back\naround and remove this.)\n\ngdb/ChangeLog\n2020-12-16  Tom Tromey  <tom@tromey.com>\n\n\t* parse.c (parse_exp_1, parse_expression_for_completion): Update.\n\t(parse_exp_in_context): Change void_context_p to bool.\n\t* language.h (struct language_defn) <post_parser>: Change\n\tvoid_context_p to bool.\n\t* ada-lang.c (class ada_language) <post_parser>: Update.",
    "tree": {
      "sha": "2b6a3ff8e85304811f7434c0605c908fc1bddf62",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2b6a3ff8e85304811f7434c0605c908fc1bddf62"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/35c1ab606dcf99e36a82498864b6afa095088692",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/35c1ab606dcf99e36a82498864b6afa095088692",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/35c1ab606dcf99e36a82498864b6afa095088692",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/35c1ab606dcf99e36a82498864b6afa095088692/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/93df4a1d079ba804fa66b67d2b2acf1fd62c2cd9"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 14,
    "deletions": 6
  },
  "files": [
    {
      "sha": "7b8e727b58cdcbd6c6d42b4011f6e1cb59a18aff",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/35c1ab606dcf99e36a82498864b6afa095088692/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/35c1ab606dcf99e36a82498864b6afa095088692/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=35c1ab606dcf99e36a82498864b6afa095088692",
      "patch": "@@ -1,3 +1,11 @@\n+2020-12-16  Tom Tromey  <tom@tromey.com>\n+\n+\t* parse.c (parse_exp_1, parse_expression_for_completion): Update.\n+\t(parse_exp_in_context): Change void_context_p to bool.\n+\t* language.h (struct language_defn) <post_parser>: Change\n+\tvoid_context_p to bool.\n+\t* ada-lang.c (class ada_language) <post_parser>: Update.\n+\n 2020-12-16  Tom Tromey  <tom@tromey.com>\n \t    Tom Tromey  <tromey@redhat.com>\n \t    Tom de Vries  <tdevries@suse.de>"
    },
    {
      "sha": "23d7a164609025ae4f3205bddda18c7f2b7b6e93",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/35c1ab606dcf99e36a82498864b6afa095088692/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/35c1ab606dcf99e36a82498864b6afa095088692/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=35c1ab606dcf99e36a82498864b6afa095088692",
      "patch": "@@ -14124,7 +14124,7 @@ class ada_language : public language_defn\n      A null CONTEXT_TYPE indicates that a non-void return type is\n      preferred.  May change (expand) *EXP.  */\n \n-  void post_parser (expression_up *expp, int void_context_p, int completing,\n+  void post_parser (expression_up *expp, bool void_context_p, int completing,\n \t\t    innermost_block_tracker *tracker) const override\n   {\n     struct type *context_type = NULL;"
    },
    {
      "sha": "5bc99d5f241a111effbf822c8437101ff773f455",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/35c1ab606dcf99e36a82498864b6afa095088692/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/35c1ab606dcf99e36a82498864b6afa095088692/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=35c1ab606dcf99e36a82498864b6afa095088692",
      "patch": "@@ -527,7 +527,7 @@ struct language_defn\n      non-zero, then the expression has been parsed for completion, not\n      evaluation.  */\n \n-  virtual void post_parser (expression_up *expp, int void_context_p,\n+  virtual void post_parser (expression_up *expp, bool void_context_p,\n \t\t\t    int completing,\n \t\t\t    innermost_block_tracker *tracker) const\n   {"
    },
    {
      "sha": "a27ae86c0010f6724b842fd609e1db36de792da4",
      "filename": "gdb/parse.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/35c1ab606dcf99e36a82498864b6afa095088692/gdb/parse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/35c1ab606dcf99e36a82498864b6afa095088692/gdb/parse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/parse.c?ref=35c1ab606dcf99e36a82498864b6afa095088692",
      "patch": "@@ -88,7 +88,7 @@ static int prefixify_subexp (struct expression *, struct expression *, int,\n \n static expression_up parse_exp_in_context (const char **, CORE_ADDR,\n \t\t\t\t\t   const struct block *, int,\n-\t\t\t\t\t   int, int *,\n+\t\t\t\t\t   bool, int *,\n \t\t\t\t\t   innermost_block_tracker *,\n \t\t\t\t\t   expr_completion_state *);\n \n@@ -1028,7 +1028,7 @@ expression_up\n parse_exp_1 (const char **stringptr, CORE_ADDR pc, const struct block *block,\n \t     int comma, innermost_block_tracker *tracker)\n {\n-  return parse_exp_in_context (stringptr, pc, block, comma, 0, NULL,\n+  return parse_exp_in_context (stringptr, pc, block, comma, false, NULL,\n \t\t\t       tracker, nullptr);\n }\n \n@@ -1042,7 +1042,7 @@ parse_exp_1 (const char **stringptr, CORE_ADDR pc, const struct block *block,\n static expression_up\n parse_exp_in_context (const char **stringptr, CORE_ADDR pc,\n \t\t      const struct block *block,\n-\t\t      int comma, int void_context_p, int *out_subexp,\n+\t\t      int comma, bool void_context_p, int *out_subexp,\n \t\t      innermost_block_tracker *tracker,\n \t\t      expr_completion_state *cstate)\n {\n@@ -1205,7 +1205,7 @@ parse_expression_for_completion (const char *string,\n \n   try\n     {\n-      exp = parse_exp_in_context (&string, 0, 0, 0, 0, &subexp,\n+      exp = parse_exp_in_context (&string, 0, 0, 0, false, &subexp,\n \t\t\t\t  nullptr, &cstate);\n     }\n   catch (const gdb_exception_error &except)"
    }
  ]
}