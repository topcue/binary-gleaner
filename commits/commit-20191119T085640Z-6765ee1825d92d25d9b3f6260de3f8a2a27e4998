{
  "sha": "6765ee1825d92d25d9b3f6260de3f8a2a27e4998",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njc2NWVlMTgyNWQ5MmQyNWQ5YjNmNjI2MGRlM2Y4YTJhMjdlNDk5OA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-11-19T08:45:20Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-11-19T08:56:40Z"
    },
    "message": "PR24968, make objcopy use output ELF arch if -B not given\n\nThis should make objcopy -B redundant for the common case of producing\nELF output where the -O target defaults to the desired arch:mach.\n\n\tPR 24968\n\t* objcopy.c (copy_object): For ELF output and non-ELF input without\n\tarch, take arch from output file if not given by -B.  Don't\n\tbfd_get_arch_info when we already have iarch.",
    "tree": {
      "sha": "65c95e752439552d1b55a35312eb1724148ae505",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/65c95e752439552d1b55a35312eb1724148ae505"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6765ee1825d92d25d9b3f6260de3f8a2a27e4998",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6765ee1825d92d25d9b3f6260de3f8a2a27e4998",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6765ee1825d92d25d9b3f6260de3f8a2a27e4998",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6765ee1825d92d25d9b3f6260de3f8a2a27e4998/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dd68a12bc4b19c50c31fe357335bb8ee9a3322fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd68a12bc4b19c50c31fe357335bb8ee9a3322fc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dd68a12bc4b19c50c31fe357335bb8ee9a3322fc"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 16,
    "deletions": 2
  },
  "files": [
    {
      "sha": "19f1c4051a0e8812d3e81a78bd3c2a569f173e2b",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6765ee1825d92d25d9b3f6260de3f8a2a27e4998/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6765ee1825d92d25d9b3f6260de3f8a2a27e4998/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=6765ee1825d92d25d9b3f6260de3f8a2a27e4998",
      "patch": "@@ -1,3 +1,10 @@\n+2019-11-19  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24968\n+\t* objcopy.c (copy_object): For ELF output and non-ELF input without\n+\tarch, take arch from output file if not given by -B.  Don't\n+\tbfd_get_arch_info when we already have iarch.\n+\n 2019-11-19  Alan Modra  <amodra@gmail.com>\n \n \tPR 25191"
    },
    {
      "sha": "99cc7beca8f7241bddee8c0242670b4b895b0461",
      "filename": "binutils/objcopy.c",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6765ee1825d92d25d9b3f6260de3f8a2a27e4998/binutils/objcopy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6765ee1825d92d25d9b3f6260de3f8a2a27e4998/binutils/objcopy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objcopy.c?ref=6765ee1825d92d25d9b3f6260de3f8a2a27e4998",
      "patch": "@@ -2646,8 +2646,7 @@ copy_object (bfd *ibfd, bfd *obfd, const bfd_arch_info_type *input_arch)\n   imach = bfd_get_mach (ibfd);\n   if (input_arch)\n     {\n-      if (bfd_get_arch_info (ibfd) == NULL\n-\t  || bfd_get_arch_info (ibfd)->arch == bfd_arch_unknown)\n+      if (iarch == bfd_arch_unknown)\n \t{\n \t  iarch = input_arch->arch;\n \t  imach = input_arch->mach;\n@@ -2656,6 +2655,14 @@ copy_object (bfd *ibfd, bfd *obfd, const bfd_arch_info_type *input_arch)\n \tnon_fatal (_(\"Input file `%s' ignores binary architecture parameter.\"),\n \t\t   bfd_get_archive_filename (ibfd));\n     }\n+  if (iarch == bfd_arch_unknown\n+      && bfd_get_flavour (ibfd) != bfd_target_elf_flavour\n+      && bfd_get_flavour (obfd) == bfd_target_elf_flavour)\n+    {\n+      const struct elf_backend_data *bed = get_elf_backend_data (obfd);\n+      iarch = bed->arch;\n+      imach = 0;\n+    }\n   if (!bfd_set_arch_mach (obfd, iarch, imach)\n       && (ibfd->target_defaulted\n \t  || bfd_get_arch (ibfd) != bfd_get_arch (obfd)))"
    }
  ]
}