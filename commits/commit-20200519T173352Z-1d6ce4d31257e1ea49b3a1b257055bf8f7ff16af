{
  "sha": "1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWQ2Y2U0ZDMxMjU3ZTFlYTQ5YjNhMWIyNTcwNTViZjhmN2ZmMTZhZg==",
  "commit": {
    "author": {
      "name": "Yoshinori Sato",
      "email": "ysato@users.sourceforge.jp",
      "date": "2020-05-19T17:33:08Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-19T17:33:52Z"
    },
    "message": "gdb: fix -Wtautological-overlap-compare error in h8300-tdep.c\n\nCompiling with clang 11 gives us:\n\n      CXX    h8300-tdep.o\n    /home/smarchi/src/binutils-gdb/gdb/h8300-tdep.c:225:21: error: overlapping comparisons always evaluate to false [-Werror,-Wtautological-overlap-compare]\n                  if (disp < 0 && disp > 0xffffff)\n                      ~~~~~~~~~^~~~~~~~~~~~~~~~~~\n    /home/smarchi/src/binutils-gdb/gdb/h8300-tdep.c:203:17: error: overlapping comparisons always evaluate to false [-Werror,-Wtautological-overlap-compare]\n              if (disp < 0 && disp > 0xffffff)\n                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~\n    /home/smarchi/src/binutils-gdb/gdb/h8300-tdep.c:184:17: error: overlapping comparisons always evaluate to false [-Werror,-Wtautological-overlap-compare]\n              if (disp < 0 && disp > 0xffffff)\n                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~\n\nIndeed, disp (of type LONGEST) can't be less than 0 and greater than\n0xffffff.\n\nFix it by changing the way we check if disp is negative.  Check the sign\nbit of disp, which is a 24-bit number.\n\ngdb/ChangeLog:\n\n\t* h8300-tdep.c (h8300_is_argument_spill): Change how we check\n\twhether disp is negative.",
    "tree": {
      "sha": "b77c3f961e5f47b75e21337f9ccd0d05973912e0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b77c3f961e5f47b75e21337f9ccd0d05973912e0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af/comments",
  "author": {
    "login": "ysat0",
    "id": 390647,
    "node_id": "MDQ6VXNlcjM5MDY0Nw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/390647?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ysat0",
    "html_url": "https://github.com/ysat0",
    "followers_url": "https://api.github.com/users/ysat0/followers",
    "following_url": "https://api.github.com/users/ysat0/following{/other_user}",
    "gists_url": "https://api.github.com/users/ysat0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ysat0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ysat0/subscriptions",
    "organizations_url": "https://api.github.com/users/ysat0/orgs",
    "repos_url": "https://api.github.com/users/ysat0/repos",
    "events_url": "https://api.github.com/users/ysat0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ysat0/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6fd1d259e98354236fafd14ec05f3d6a377ede9f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fd1d259e98354236fafd14ec05f3d6a377ede9f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6fd1d259e98354236fafd14ec05f3d6a377ede9f"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 12,
    "deletions": 6
  },
  "files": [
    {
      "sha": "c4393182dd95bb4f085b6c4430793938ab4c8c40",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-19  Yoshinori Sato  <ysato@users.sourceforge.jp>\n+\n+\t* h8300-tdep.c (h8300_is_argument_spill): Change how we check\n+\twhether disp is negative.\n+\n 2020-05-19  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* symfile.h (struct symfile_segment_data)"
    },
    {
      "sha": "b569a23f2631cfb1f69d16e639734070b2b24cca",
      "filename": "gdb/h8300-tdep.c",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af/gdb/h8300-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af/gdb/h8300-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/h8300-tdep.c?ref=1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af",
      "patch": "@@ -178,10 +178,10 @@ h8300_is_argument_spill (struct gdbarch *gdbarch, CORE_ADDR pc)\n       if (IS_MOVB_Rn24_SP (read_memory_unsigned_integer (pc + 2,\n \t\t\t\t\t\t\t 2, byte_order)))\n \t{\n-\t  LONGEST disp = read_memory_integer (pc + 4, 4, byte_order);\n+\t  ULONGEST disp = read_memory_unsigned_integer (pc + 4, 4, byte_order);\n \n \t  /* ... and d:24 is negative.  */\n-\t  if (disp < 0 && disp > 0xffffff)\n+\t  if ((disp & 0x00800000) != 0)\n \t    return 8;\n \t}\n     }\n@@ -197,10 +197,10 @@ h8300_is_argument_spill (struct gdbarch *gdbarch, CORE_ADDR pc)\n       if (IS_MOVW_Rn24_SP (read_memory_unsigned_integer (pc + 2,\n \t\t\t\t\t\t\t 2, byte_order)))\n \t{\n-\t  LONGEST disp = read_memory_integer (pc + 4, 4, byte_order);\n+\t  ULONGEST disp = read_memory_unsigned_integer (pc + 4, 4, byte_order);\n \n \t  /* ... and d:24 is negative.  */\n-\t  if (disp < 0 && disp > 0xffffff)\n+\t  if ((disp & 0x00800000) != 0)\n \t    return 8;\n \t}\n     }\n@@ -219,10 +219,11 @@ h8300_is_argument_spill (struct gdbarch *gdbarch, CORE_ADDR pc)\n \t{\n \t  if (IS_MOVL_Rn24_SP (read_memory_integer (pc + 4, 2, byte_order)))\n \t    {\n-\t      LONGEST disp = read_memory_integer (pc + 6, 4, byte_order);\n+\t      ULONGEST disp = read_memory_unsigned_integer (pc + 6, 4,\n+\t\t\t\t\t\t\t    byte_order);\n \n \t      /* ... and d:24 is negative.  */\n-\t      if (disp < 0 && disp > 0xffffff)\n+\t      if ((disp & 0x00800000) != 0)\n \t\treturn 10;\n \t    }\n \t}"
    }
  ]
}