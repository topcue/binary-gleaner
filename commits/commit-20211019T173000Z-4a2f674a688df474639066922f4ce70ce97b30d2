{
  "sha": "4a2f674a688df474639066922f4ce70ce97b30d2",
  "node_id": "C_kwDOANOeidoAKDRhMmY2NzRhNjg4ZGY0NzQ2MzkwNjY5MjJmNGNlNzBjZTk3YjMwZDI",
  "commit": {
    "author": {
      "name": "Daniel Black",
      "email": "daniel@mariadb.org",
      "date": "2021-10-18T06:06:47Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-10-19T17:30:00Z"
    },
    "message": "Fix PR gdb/17917 Lookup build-id in remote binaries\n\nGDB doesn't support loading debug files using build-id from remote\ntarget filesystems.\n\nThis is the case when gdbserver attached to a process and a gdb target\nremote occurs over tcp.\n\nWith this change we make build-id lookups possible:\n\n    (gdb) show debug-file-directory\n    The directory where separate debug symbols are searched for is \"/usr/local/lib/debug\".\n    (gdb) set debug-file-directory /usr/lib/debug\n    (gdb) show sysroot\n    The current system root is \"target:\".\n    (gdb) target extended-remote :46615\n    Remote debugging using :46615\n    warning: Can not parse XML target description; XML support was disabled at compile time\n    Reading /usr/sbin/mariadbd from remote target...\n    warning: File transfers from remote targets can be slow. Use \"set sysroot\" to access files locally instead.\n    Reading /usr/sbin/mariadbd from remote target...\n    Reading symbols from target:/usr/sbin/mariadbd...\n    Reading /usr/lib/debug/.build-id/6e/0a874dca5a7ff831396ddc0785d939a192efe3.debug from remote target...\n    Reading /usr/lib/debug/.build-id/6e/0a874dca5a7ff831396ddc0785d939a192efe3.debug from remote target...\n    Reading symbols from target:/usr/lib/debug/.build-id/6e/0a874dca5a7ff831396ddc0785d939a192efe3.debug...\n    Reading /lib/x86_64-linux-gnu/libpcre2-8.so.0 from remote target...\n    ...\n\nBefore this change, the lookups would have been (GNU gdb (GDB) Fedora 10.2-3.fc34):\n\n    (gdb) target extended-remote :46615\n    Remote debugging using :46615\n    Reading /usr/sbin/mariadbd from remote target...\n    warning: File transfers from remote targets can be slow. Use \"set sysroot\" to access files locally instead.\n    Reading /usr/sbin/mariadbd from remote target...\n    Reading symbols from target:/usr/sbin/mariadbd...\n    Reading /usr/sbin/0a874dca5a7ff831396ddc0785d939a192efe3.debug from remote target...\n    Reading /usr/sbin/.debug/0a874dca5a7ff831396ddc0785d939a192efe3.debug from remote target...\n    Reading /usr/lib/debug//usr/sbin/0a874dca5a7ff831396ddc0785d939a192efe3.debug from remote target...\n    Reading /usr/lib/debug/usr/sbin//0a874dca5a7ff831396ddc0785d939a192efe3.debug from remote target...\n    Reading target:/usr/lib/debug/usr/sbin//0a874dca5a7ff831396ddc0785d939a192efe3.debug from remote target...\n    Missing separate debuginfo for target:/usr/sbin/mariadbd\n    Try: dnf --enablerepo='*debug*' install /usr/lib/debug/.build-id/6e/0a874dca5a7ff831396ddc0785d939a192efe3.debug\n    (No debugging symbols found in target:/usr/sbin/mariadbd)\n\nObserve it didn't look for\n/usr/lib/debug/.build-id/6e/0a874dca5a7ff831396ddc0785d939a192efe3.debug\non the remote target (where it is) and expected them to be installed\nlocally.\n\nAs a minor optimization, this also changes the build-id lookup such that\nif sysroot is empty, no second lookup of the same location is performed.\n\nChange-Id: I5181696d271c325a25a0805a8defb8ab7f9b3f55\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=17917",
    "tree": {
      "sha": "c540bbb00b0f938700daa9e4672c80ab48335a11",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c540bbb00b0f938700daa9e4672c80ab48335a11"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4a2f674a688df474639066922f4ce70ce97b30d2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a2f674a688df474639066922f4ce70ce97b30d2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4a2f674a688df474639066922f4ce70ce97b30d2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a2f674a688df474639066922f4ce70ce97b30d2/comments",
  "author": {
    "login": "grooverdan",
    "id": 462287,
    "node_id": "MDQ6VXNlcjQ2MjI4Nw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/462287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/grooverdan",
    "html_url": "https://github.com/grooverdan",
    "followers_url": "https://api.github.com/users/grooverdan/followers",
    "following_url": "https://api.github.com/users/grooverdan/following{/other_user}",
    "gists_url": "https://api.github.com/users/grooverdan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/grooverdan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/grooverdan/subscriptions",
    "organizations_url": "https://api.github.com/users/grooverdan/orgs",
    "repos_url": "https://api.github.com/users/grooverdan/repos",
    "events_url": "https://api.github.com/users/grooverdan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/grooverdan/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cf487499e0d7ef64ab63d6c76bf298bfaf64b980",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf487499e0d7ef64ab63d6c76bf298bfaf64b980",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cf487499e0d7ef64ab63d6c76bf298bfaf64b980"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 12,
    "deletions": 9
  },
  "files": [
    {
      "sha": "d68b7a7af5777147d9a56e48498441173cba4101",
      "filename": "gdb/build-id.c",
      "status": "modified",
      "additions": 12,
      "deletions": 9,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a2f674a688df474639066922f4ce70ce97b30d2/gdb/build-id.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a2f674a688df474639066922f4ce70ce97b30d2/gdb/build-id.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/build-id.c?ref=4a2f674a688df474639066922f4ce70ce97b30d2",
      "patch": "@@ -81,9 +81,15 @@ build_id_to_debug_bfd_1 (const std::string &link, size_t build_id_len,\n     }\n \n   /* lrealpath() is expensive even for the usually non-existent files.  */\n-  gdb::unique_xmalloc_ptr<char> filename;\n-  if (access (link.c_str (), F_OK) == 0)\n-    filename.reset (lrealpath (link.c_str ()));\n+  gdb::unique_xmalloc_ptr<char> filename_holder;\n+  const char *filename = nullptr;\n+  if (startswith (link, TARGET_SYSROOT_PREFIX))\n+    filename = link.c_str ();\n+  else if (access (link.c_str (), F_OK) == 0)\n+    {\n+      filename_holder.reset (lrealpath (link.c_str ()));\n+      filename = filename_holder.get ();\n+    }\n \n   if (filename == NULL)\n     {\n@@ -94,7 +100,7 @@ build_id_to_debug_bfd_1 (const std::string &link, size_t build_id_len,\n     }\n \n   /* We expect to be silent on the non-existing files.  */\n-  gdb_bfd_ref_ptr debug_bfd = gdb_bfd_open (filename.get (), gnutarget);\n+  gdb_bfd_ref_ptr debug_bfd = gdb_bfd_open (filename, gnutarget);\n \n   if (debug_bfd == NULL)\n     {\n@@ -162,12 +168,9 @@ build_id_to_bfd_suffix (size_t build_id_len, const bfd_byte *build_id,\n \n       /* Try to look under the sysroot as well.  If the sysroot is\n \t \"/the/sysroot\", it will give\n-\t \"/the/sysroot/usr/lib/debug/.build-id/ab/cdef.debug\".\n+\t \"/the/sysroot/usr/lib/debug/.build-id/ab/cdef.debug\".  */\n \n-\t Don't do it if the sysroot is the target system (\"target:\").  It\n-\t could work in theory, but the lrealpath in build_id_to_debug_bfd_1\n-\t only works with local paths.  */\n-      if (gdb_sysroot != TARGET_SYSROOT_PREFIX)\n+      if (!gdb_sysroot.empty ())\n \t{\n \t  link = gdb_sysroot + link;\n \t  debug_bfd = build_id_to_debug_bfd_1 (link, build_id_len, build_id);"
    }
  ]
}