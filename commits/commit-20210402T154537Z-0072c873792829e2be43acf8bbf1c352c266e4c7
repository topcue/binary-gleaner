{
  "sha": "0072c873792829e2be43acf8bbf1c352c266e4c7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDA3MmM4NzM3OTI4MjllMmJlNDNhY2Y4YmJmMWMzNTJjMjY2ZTRjNw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-02T15:45:25Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-02T15:45:37Z"
    },
    "message": "gdb: pass objfile_per_bfd_storage instead of objfile to partial_symtab\n\nSince partial_symtab is supposed to be objfile-independent (since series\n[1]), I think it would make sense for partial_symtab to not take an\nobjfile as a parameter in its constructor.\n\nThis patch replaces that parameter with an objfile_per_bfd_storage\nparameter.\n\nThe objfile is used for two things:\n\n - to get the objfile_name, for debug messages.  We can get that name\n   from the bfd instead.\n - to intern the partial symtab filename.  Even though it goes through\n   an objfile method, the request is actually forwarded to the\n   underlying objfile_per_bfd_storage.  So we can ask the new\n   objfile_per_bfd_storage instead.\n\nIn order to get a reference to the BFD from the objfile_per_bfd_storage,\nthe BFD is saved in the objfile_per_bfd_storage object.\n\n[1] https://sourceware.org/pipermail/gdb-patches/2021-February/176625.html\n\ngdb/ChangeLog:\n\n\t* psympriv.h (struct partial_symtab) <partial_symtab>: Change\n\tobjfile parameter for objfile_per_bfd_storage, adjust callers.\n\t(struct standard_psymtab) <standard_psymtab>: Likewise.\n\t(struct legacy_psymtab) <legacy_psymtab>: Likewise.\n\t* psymtab.c (partial_symtab::partial_symtab): Likewise.\n\t* ctfread.c (struct ctf_psymtab): Likewise.\n\t* dwarf2/read.h (struct dwarf2_psymtab): Likewise.\n\t* dwarf2/read.c (struct dwarf2_include_psymtab): Likewise.\n\t(dwarf2_create_include_psymtab): Likewise.\n\t* objfiles.h (struct objfile_per_bfd_storage)\n\t<objfile_per_bfd_storage>: Add bfd parameter, adjust callers.\n\t<get_bfd>: New method.\n\t<m_bfd>: New field.\n\t* objfiles.c (get_objfile_bfd_data): Adjust.\n\nChange-Id: I2ed3ab5d2e6f27d034bd4dc26ae2fae7b0b8a2b9",
    "tree": {
      "sha": "50a2ade2ef271eede88340679e65e81e0c009a0a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/50a2ade2ef271eede88340679e65e81e0c009a0a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0072c873792829e2be43acf8bbf1c352c266e4c7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0072c873792829e2be43acf8bbf1c352c266e4c7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0072c873792829e2be43acf8bbf1c352c266e4c7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0072c873792829e2be43acf8bbf1c352c266e4c7/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9984dd9994c3d71fd28f41c50cdece48d6be13a6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9984dd9994c3d71fd28f41c50cdece48d6be13a6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9984dd9994c3d71fd28f41c50cdece48d6be13a6"
    }
  ],
  "stats": {
    "total": 121,
    "additions": 75,
    "deletions": 46
  },
  "files": [
    {
      "sha": "3530819cf95d972b3471b46f4ecf23461ec2715e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0072c873792829e2be43acf8bbf1c352c266e4c7",
      "patch": "@@ -1,3 +1,20 @@\n+2021-04-02  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* psympriv.h (struct partial_symtab) <partial_symtab>: Change\n+\tobjfile parameter for objfile_per_bfd_storage, adjust callers.\n+\t(struct standard_psymtab) <standard_psymtab>: Likewise.\n+\t(struct legacy_psymtab) <legacy_psymtab>: Likewise.\n+\t* psymtab.c (partial_symtab::partial_symtab): Likewise.\n+\t* ctfread.c (struct ctf_psymtab): Likewise.\n+\t* dwarf2/read.h (struct dwarf2_psymtab): Likewise.\n+\t* dwarf2/read.c (struct dwarf2_include_psymtab): Likewise.\n+\t(dwarf2_create_include_psymtab): Likewise.\n+\t* objfiles.h (struct objfile_per_bfd_storage)\n+\t<objfile_per_bfd_storage>: Add bfd parameter, adjust callers.\n+\t<get_bfd>: New method.\n+\t<m_bfd>: New field.\n+\t* objfiles.c (get_objfile_bfd_data): Adjust.\n+\n 2021-04-02  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* psymtab.c (partial_symtab::partial_symtab): Change"
    },
    {
      "sha": "fae244d448187158c2674fb241fb1c3ce5b03537",
      "filename": "gdb/ctfread.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/ctfread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/ctfread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ctfread.c?ref=0072c873792829e2be43acf8bbf1c352c266e4c7",
      "patch": "@@ -125,9 +125,9 @@ struct ctf_psymtab : public standard_psymtab\n {\n   ctf_psymtab (const char *filename,\n \t       psymtab_storage *partial_symtabs,\n-\t       struct objfile *objfile,\n+\t       objfile_per_bfd_storage *objfile_per_bfd,\n \t       CORE_ADDR addr)\n-    : standard_psymtab (filename, partial_symtabs, objfile, addr)\n+    : standard_psymtab (filename, partial_symtabs, objfile_per_bfd, addr)\n   {\n   }\n \n@@ -1369,7 +1369,7 @@ create_partial_symtab (const char *name,\n   ctf_psymtab *pst;\n   struct ctf_context *ccx;\n \n-  pst = new ctf_psymtab (name, partial_symtabs, objfile, 0);\n+  pst = new ctf_psymtab (name, partial_symtabs, objfile->per_bfd, 0);\n \n   ccx = XOBNEW (&objfile->objfile_obstack, struct ctf_context);\n   ccx->fp = cfp;"
    },
    {
      "sha": "5cf77e9c08a10aeecbe5a9ea84ac761dc55b661c",
      "filename": "gdb/dbxread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/dbxread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/dbxread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dbxread.c?ref=0072c873792829e2be43acf8bbf1c352c266e4c7",
      "patch": "@@ -1917,7 +1917,7 @@ start_psymtab (psymtab_storage *partial_symtabs, struct objfile *objfile,\n \t       const char *filename, CORE_ADDR textlow, int ldsymoff)\n {\n   legacy_psymtab *result = new legacy_psymtab (filename, partial_symtabs,\n-\t\t\t\t\t       objfile, textlow);\n+\t\t\t\t\t       objfile->per_bfd, textlow);\n \n   result->read_symtab_private =\n     XOBNEW (&objfile->objfile_obstack, struct symloc);\n@@ -2040,7 +2040,7 @@ dbx_end_psymtab (struct objfile *objfile, psymtab_storage *partial_symtabs,\n   for (i = 0; i < num_includes; i++)\n     {\n       legacy_psymtab *subpst =\n-\tnew legacy_psymtab (include_list[i], partial_symtabs, objfile);\n+\tnew legacy_psymtab (include_list[i], partial_symtabs, objfile->per_bfd);\n \n       subpst->read_symtab_private =\n \tXOBNEW (&objfile->objfile_obstack, struct symloc);"
    },
    {
      "sha": "43433f50d26bdae255a622f768c67b4a8e90f14b",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 8,
      "deletions": 10,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=0072c873792829e2be43acf8bbf1c352c266e4c7",
      "patch": "@@ -6248,8 +6248,8 @@ struct dwarf2_include_psymtab : public partial_symtab\n {\n   dwarf2_include_psymtab (const char *filename,\n \t\t\t  psymtab_storage *partial_symtabs,\n-\t\t\t  struct objfile *objfile)\n-    : partial_symtab (filename, partial_symtabs, objfile)\n+\t\t\t  objfile_per_bfd_storage *objfile_per_bfd)\n+    : partial_symtab (filename, partial_symtabs, objfile_per_bfd)\n   {\n   }\n \n@@ -6305,10 +6305,10 @@ dwarf2_create_include_psymtab (dwarf2_per_bfd *per_bfd,\n \t\t\t       const char *name,\n \t\t\t       dwarf2_psymtab *pst,\n \t\t\t       psymtab_storage *partial_symtabs,\n-\t\t\t       struct objfile *objfile)\n+\t\t\t       objfile_per_bfd_storage *objfile_per_bfd)\n {\n   dwarf2_include_psymtab *subpst\n-    = new dwarf2_include_psymtab (name, partial_symtabs, objfile);\n+    = new dwarf2_include_psymtab (name, partial_symtabs, objfile_per_bfd);\n \n   if (!IS_ABSOLUTE_PATH (subpst->filename))\n     subpst->dirname = pst->dirname;\n@@ -7560,11 +7560,9 @@ create_partial_symtab (dwarf2_per_cu_data *per_cu,\n \t\t       dwarf2_per_objfile *per_objfile,\n \t\t       const char *name)\n {\n-  struct objfile *objfile = per_objfile->objfile;\n-  dwarf2_psymtab *pst;\n-\n-  pst = new dwarf2_psymtab (name, per_objfile->per_bfd->partial_symtabs.get (),\n-\t\t\t    objfile, per_cu);\n+  dwarf2_psymtab *pst\n+    = new dwarf2_psymtab (name, per_objfile->per_bfd->partial_symtabs.get (),\n+\t\t\t  per_objfile->objfile->per_bfd, per_cu);\n \n   pst->psymtabs_addrmap_supported = true;\n \n@@ -22010,7 +22008,7 @@ dwarf_decode_lines (struct line_header *lh, const char *comp_dir,\n \t      dwarf2_create_include_psymtab\n \t\t(cu->per_objfile->per_bfd, include_name, pst,\n \t\t cu->per_objfile->per_bfd->partial_symtabs.get (),\n-\t\t objfile);\n+\t\t objfile->per_bfd);\n \t  }\n     }\n   else"
    },
    {
      "sha": "416d8eae959b8408224cdf653bd1f9677fed0de5",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=0072c873792829e2be43acf8bbf1c352c266e4c7",
      "patch": "@@ -408,9 +408,9 @@ struct dwarf2_psymtab : public partial_symtab\n {\n   dwarf2_psymtab (const char *filename,\n \t\t  psymtab_storage *partial_symtabs,\n-\t\t  struct objfile *objfile,\n+\t\t  objfile_per_bfd_storage *objfile_per_bfd,\n \t\t  dwarf2_per_cu_data *per_cu)\n-    : partial_symtab (filename, partial_symtabs, objfile, 0),\n+    : partial_symtab (filename, partial_symtabs, objfile_per_bfd, 0),\n       per_cu_data (per_cu)\n   {\n   }"
    },
    {
      "sha": "026f2ff20da4ef7c370867aaf154fbe161b0f363",
      "filename": "gdb/mdebugread.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/mdebugread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/mdebugread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mdebugread.c?ref=0072c873792829e2be43acf8bbf1c352c266e4c7",
      "patch": "@@ -2605,8 +2605,8 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \ttextlow = fh->adr;\n       else\n \ttextlow = 0;\n-      pst = new legacy_psymtab (fdr_name (fh), partial_symtabs, objfile,\n-\t\t\t\ttextlow);\n+      pst = new legacy_psymtab (fdr_name (fh), partial_symtabs,\n+\t\t\t\tobjfile->per_bfd, textlow);\n       pst->read_symtab_private = XOBNEW (&objfile->objfile_obstack, symloc);\n       memset (pst->read_symtab_private, 0, sizeof (struct symloc));\n \n@@ -4646,7 +4646,7 @@ new_psymtab (const char *name, psymtab_storage *partial_symtabs,\n {\n   legacy_psymtab *psymtab;\n \n-  psymtab = new legacy_psymtab (name, partial_symtabs, objfile);\n+  psymtab = new legacy_psymtab (name, partial_symtabs, objfile->per_bfd);\n \n   /* Keep a backpointer to the file's symbols.  */\n "
    },
    {
      "sha": "702900761f38ace98d46efedae28f08c3105cfea",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=0072c873792829e2be43acf8bbf1c352c266e4c7",
      "patch": "@@ -134,7 +134,7 @@ get_objfile_bfd_data (struct objfile *objfile, struct bfd *abfd)\n \n   if (storage == NULL)\n     {\n-      storage = new objfile_per_bfd_storage;\n+      storage = new objfile_per_bfd_storage (abfd);\n       /* If the object requires gdb to do relocations, we simply fall\n \t back to not sharing data across users.  These cases are rare\n \t enough that this seems reasonable.  */"
    },
    {
      "sha": "bf6e6a1d01a9cfa0b6a34757bf657cf715277917",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 14,
      "deletions": 2,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=0072c873792829e2be43acf8bbf1c352c266e4c7",
      "patch": "@@ -264,8 +264,8 @@ struct minimal_symbol_iterator\n \n struct objfile_per_bfd_storage\n {\n-  objfile_per_bfd_storage ()\n-    : minsyms_read (false)\n+  objfile_per_bfd_storage (bfd *bfd)\n+    : minsyms_read (false), m_bfd (bfd)\n   {}\n \n   ~objfile_per_bfd_storage ();\n@@ -287,6 +287,13 @@ struct objfile_per_bfd_storage\n     return (const char *) string_cache.insert (str.c_str (), str.size () + 1);\n   }\n \n+  /* Get the BFD this object is associated to.  */\n+\n+  bfd *get_bfd () const\n+  {\n+    return m_bfd;\n+  }\n+\n   /* The storage has an obstack of its own.  */\n \n   auto_obstack storage_obstack;\n@@ -364,6 +371,11 @@ struct objfile_per_bfd_storage\n   /* All the different languages of symbols found in the demangled\n      hash table.  */\n   std::bitset<nr_languages> demangled_hash_languages;\n+\n+private:\n+  /* The BFD this object is associated to.  */\n+\n+  bfd *m_bfd;\n };\n \n /* An iterator that first returns a parent objfile, and then each"
    },
    {
      "sha": "e4bf038108fca2b8e4b95e4eebfa2623ea7aed16",
      "filename": "gdb/psympriv.h",
      "status": "modified",
      "additions": 12,
      "deletions": 11,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/psympriv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/psympriv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psympriv.h?ref=0072c873792829e2be43acf8bbf1c352c266e4c7",
      "patch": "@@ -111,15 +111,16 @@ enum class psymbol_placement\n \n struct partial_symtab\n {\n-  /* Allocate a new partial symbol table associated with OBJFILE.\n+  /* Allocate a new partial symbol table.\n+\n      FILENAME (which must be non-NULL) is the filename of this partial\n      symbol table; it is copied into the appropriate storage.  The\n      partial symtab will also be installed using\n      psymtab_storage::install.  */\n \n   partial_symtab (const char *filename,\n \t\t  psymtab_storage *partial_symtabs,\n-\t\t  struct objfile *objfile)\n+\t\t  objfile_per_bfd_storage *objfile_per_bfd)\n     ATTRIBUTE_NONNULL (2) ATTRIBUTE_NONNULL (3);\n \n   /* Like the above, but also sets the initial text low and text high\n@@ -128,7 +129,7 @@ struct partial_symtab\n \n   partial_symtab (const char *filename,\n \t\t  psymtab_storage *partial_symtabs,\n-\t\t  struct objfile *objfile,\n+\t\t  objfile_per_bfd_storage *objfile_per_bfd,\n \t\t  CORE_ADDR addr)\n     ATTRIBUTE_NONNULL (2) ATTRIBUTE_NONNULL (3);\n \n@@ -369,16 +370,16 @@ struct standard_psymtab : public partial_symtab\n {\n   standard_psymtab (const char *filename,\n \t\t    psymtab_storage *partial_symtabs,\n-\t\t    struct objfile *objfile)\n-    : partial_symtab (filename, partial_symtabs, objfile)\n+\t\t    objfile_per_bfd_storage *objfile_per_bfd)\n+    : partial_symtab (filename, partial_symtabs, objfile_per_bfd)\n   {\n   }\n \n   standard_psymtab (const char *filename,\n \t\t    psymtab_storage *partial_symtabs,\n-\t\t    struct objfile *objfile,\n+\t\t    objfile_per_bfd_storage *objfile_per_bfd,\n \t\t    CORE_ADDR addr)\n-    : partial_symtab (filename, partial_symtabs, objfile, addr)\n+    : partial_symtab (filename, partial_symtabs, objfile_per_bfd, addr)\n   {\n   }\n \n@@ -411,16 +412,16 @@ struct legacy_psymtab : public standard_psymtab\n {\n   legacy_psymtab (const char *filename,\n \t\t  psymtab_storage *partial_symtabs,\n-\t\t  struct objfile *objfile)\n-    : standard_psymtab (filename, partial_symtabs, objfile)\n+\t\t  objfile_per_bfd_storage *objfile_per_bfd)\n+    : standard_psymtab (filename, partial_symtabs, objfile_per_bfd)\n   {\n   }\n \n   legacy_psymtab (const char *filename,\n \t\t  psymtab_storage *partial_symtabs,\n-\t\t  struct objfile *objfile,\n+\t\t  objfile_per_bfd_storage *objfile_per_bfd,\n \t\t  CORE_ADDR addr)\n-    : standard_psymtab (filename, partial_symtabs, objfile, addr)\n+    : standard_psymtab (filename, partial_symtabs, objfile_per_bfd, addr)\n   {\n   }\n "
    },
    {
      "sha": "6f3d856215158d2e00bd4497d5db4347570f943b",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 11,
      "deletions": 10,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=0072c873792829e2be43acf8bbf1c352c266e4c7",
      "patch": "@@ -1436,9 +1436,9 @@ psymbol_functions::find_compunit_symtab_by_address (struct objfile *objfile,\n \n partial_symtab::partial_symtab (const char *filename,\n \t\t\t\tpsymtab_storage *partial_symtabs,\n-\t\t\t\tstruct objfile *objfile,\n+\t\t\t\tobjfile_per_bfd_storage *objfile_per_bfd,\n \t\t\t\tCORE_ADDR textlow)\n-  : partial_symtab (filename, partial_symtabs, objfile)\n+  : partial_symtab (filename, partial_symtabs, objfile_per_bfd)\n {\n   set_text_low (textlow);\n   set_text_high (raw_text_low ()); /* default */\n@@ -1561,28 +1561,29 @@ partial_symtab::add_psymbol (gdb::string_view name, bool copy_name,\n \n partial_symtab::partial_symtab (const char *filename_,\n \t\t\t\tpsymtab_storage *partial_symtabs,\n-\t\t\t\tstruct objfile *objfile)\n+\t\t\t\tobjfile_per_bfd_storage *objfile_per_bfd)\n   : searched_flag (PST_NOT_SEARCHED),\n     text_low_valid (0),\n     text_high_valid (0)\n {\n   partial_symtabs->install_psymtab (this);\n \n-  filename = objfile->intern (filename_);\n+  filename = objfile_per_bfd->intern (filename_);\n \n   if (symtab_create_debug)\n     {\n       /* Be a bit clever with debugging messages, and don't print objfile\n \t every time, only when it changes.  */\n-      static std::string last_objfile_name;\n-      const char *this_objfile_name = objfile_name (objfile);\n+      static std::string last_bfd_name;\n+      const char *this_bfd_name\n+\t= bfd_get_filename (objfile_per_bfd->get_bfd ());\n \n-      if (last_objfile_name.empty () || last_objfile_name != this_objfile_name)\n+      if (last_bfd_name.empty () || last_bfd_name != this_bfd_name)\n \t{\n-\t  last_objfile_name = this_objfile_name;\n+\t  last_bfd_name = this_bfd_name;\n \t  fprintf_filtered (gdb_stdlog,\n-\t\t\t    \"Creating one or more psymtabs for objfile %s ...\\n\",\n-\t\t\t    this_objfile_name);\n+\t\t\t    \"Creating one or more psymtabs for %s ...\\n\",\n+\t\t\t    this_bfd_name);\n \t}\n       fprintf_filtered (gdb_stdlog,\n \t\t\t\"Created psymtab %s for module %s.\\n\","
    },
    {
      "sha": "368572797f6415b615864737a5cd911fc54c990e",
      "filename": "gdb/xcoffread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/xcoffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0072c873792829e2be43acf8bbf1c352c266e4c7/gdb/xcoffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/xcoffread.c?ref=0072c873792829e2be43acf8bbf1c352c266e4c7",
      "patch": "@@ -1966,7 +1966,7 @@ xcoff_start_psymtab (psymtab_storage *partial_symtabs,\n {\n   /* We fill in textlow later.  */\n   legacy_psymtab *result = new legacy_psymtab (filename, partial_symtabs,\n-\t\t\t\t\t       objfile, 0);\n+\t\t\t\t\t       objfile->per_bfd, 0);\n \n   result->read_symtab_private =\n     XOBNEW (&objfile->objfile_obstack, struct symloc);\n@@ -2022,7 +2022,7 @@ xcoff_end_psymtab (struct objfile *objfile, psymtab_storage *partial_symtabs,\n   for (i = 0; i < num_includes; i++)\n     {\n       legacy_psymtab *subpst =\n-\tnew legacy_psymtab (include_list[i], partial_symtabs, objfile);\n+\tnew legacy_psymtab (include_list[i], partial_symtabs, objfile->per_bfd);\n \n       subpst->read_symtab_private = XOBNEW (&objfile->objfile_obstack, symloc);\n       ((struct symloc *) subpst->read_symtab_private)->first_symnum = 0;"
    }
  ]
}