{
  "sha": "3d4470e5d482ba5908651feb246d110453c8f31b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2Q0NDcwZTVkNDgyYmE1OTA4NjUxZmViMjQ2ZDExMDQ1M2M4ZjMxYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-08-07T16:26:45Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-08-07T16:26:45Z"
    },
    "message": "Call add_active_thread after pushing the ravenscar target\n\nCurrently ravenscar-thread.c calls add_active_thread before pushing\nthe ravenscar target.  This yields an initial thread announcement of\n\"[Thread 0]\".  Calling add_active_thread after pushing the target\nfixes this.\n\ngdb/ChangeLog\n2020-08-07  Tom Tromey  <tromey@adacore.com>\n\n\t* ravenscar-thread.c (ravenscar_thread_target): Don't call\n\tadd_active_thread.\n\t(ravenscar_thread_target::add_active_thread): Now public.\n\t(ravenscar_inferior_created): Call add_active_thread after pushing\n\tthe target.",
    "tree": {
      "sha": "029fe0b23f107d72a819c4c6d91f92191b3eae7a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/029fe0b23f107d72a819c4c6d91f92191b3eae7a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3d4470e5d482ba5908651feb246d110453c8f31b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d4470e5d482ba5908651feb246d110453c8f31b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3d4470e5d482ba5908651feb246d110453c8f31b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d4470e5d482ba5908651feb246d110453c8f31b/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "888bdb2b744515d111953a0a3aa674ea822416f9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/888bdb2b744515d111953a0a3aa674ea822416f9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/888bdb2b744515d111953a0a3aa674ea822416f9"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 15,
    "deletions": 6
  },
  "files": [
    {
      "sha": "81d0527c59c0ace30d148dd9126bdd7b8d1a1ae9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d4470e5d482ba5908651feb246d110453c8f31b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d4470e5d482ba5908651feb246d110453c8f31b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3d4470e5d482ba5908651feb246d110453c8f31b",
      "patch": "@@ -1,3 +1,11 @@\n+2020-08-07  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ravenscar-thread.c (ravenscar_thread_target): Don't call\n+\tadd_active_thread.\n+\t(ravenscar_thread_target::add_active_thread): Now public.\n+\t(ravenscar_inferior_created): Call add_active_thread after pushing\n+\tthe target.\n+\n 2020-08-07  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* regcache.c (ptid_regcache_map): New type."
    },
    {
      "sha": "7fca51da2a79f9271449d5462af6279351871717",
      "filename": "gdb/ravenscar-thread.c",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d4470e5d482ba5908651feb246d110453c8f31b/gdb/ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d4470e5d482ba5908651feb246d110453c8f31b/gdb/ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ravenscar-thread.c?ref=3d4470e5d482ba5908651feb246d110453c8f31b",
      "patch": "@@ -79,9 +79,6 @@ struct ravenscar_thread_target final : public target_ops\n   ravenscar_thread_target ()\n     : m_base_ptid (inferior_ptid)\n   {\n-    thread_info *thr = add_active_thread ();\n-    if (thr != nullptr)\n-      switch_to_thread (thr);\n   }\n \n   const target_info &info () const override\n@@ -124,14 +121,15 @@ struct ravenscar_thread_target final : public target_ops\n     delete this;\n   }\n \n+  thread_info *add_active_thread ();\n+\n private:\n \n   /* PTID of the last thread that received an event.\n      This can be useful to determine the associated task that received\n      the event, to make it the current task.  */\n   ptid_t m_base_ptid;\n \n-  thread_info *add_active_thread ();\n   ptid_t active_task (int cpu);\n   bool task_is_currently_active (ptid_t ptid);\n   bool runtime_initialized ();\n@@ -548,8 +546,11 @@ ravenscar_inferior_created (struct target_ops *target, int from_tty)\n       return;\n     }\n \n-  target_ops_up target_holder (new ravenscar_thread_target ());\n-  push_target (std::move (target_holder));\n+  ravenscar_thread_target *rtarget = new ravenscar_thread_target ();\n+  push_target (target_ops_up (rtarget));\n+  thread_info *thr = rtarget->add_active_thread ();\n+  if (thr != nullptr)\n+    switch_to_thread (thr);\n }\n \n ptid_t"
    }
  ]
}