{
  "sha": "5bd1d4c158953c17ad33fdb34c0919f2b32ddc45",
  "node_id": "C_kwDOANOeidoAKDViZDFkNGMxNTg5NTNjMTdhZDMzZmRiMzRjMDkxOWYyYjMyZGRjNDU",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-26T20:49:22Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-06T15:37:19Z"
    },
    "message": "Clean up some dead code in windows-tdep.c\n\nwindows-tdep.c checks the result of xmalloc, which isn't necessary.  I\ninitially removed this dead check, but then went a bit further and\nmodified the code so that some \"goto\"s and explicit memory management\ncould be removed.  Then, I added a couple of missing bounds checks.\n\nI believe this also fixes a possible bug with a missing 0-termination\nof a string.  I am not certain, but that is why I think the existing\ncode allocates a buffer that is 1 byte too long -- but then it fails\nto set this byte to 0.",
    "tree": {
      "sha": "d35e4f9c4e03f6b90e15ec182c2c2883b3f84971",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d35e4f9c4e03f6b90e15ec182c2c2883b3f84971"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5bd1d4c158953c17ad33fdb34c0919f2b32ddc45",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5bd1d4c158953c17ad33fdb34c0919f2b32ddc45",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5bd1d4c158953c17ad33fdb34c0919f2b32ddc45",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5bd1d4c158953c17ad33fdb34c0919f2b32ddc45/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5220f61a22a0c1a84403725532d6359aaeb3d2fa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5220f61a22a0c1a84403725532d6359aaeb3d2fa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5220f61a22a0c1a84403725532d6359aaeb3d2fa"
    }
  ],
  "stats": {
    "total": 44,
    "additions": 20,
    "deletions": 24
  },
  "files": [
    {
      "sha": "78984d65fd62f202600425407b257a14344aa75f",
      "filename": "gdb/windows-tdep.c",
      "status": "modified",
      "additions": 20,
      "deletions": 24,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5bd1d4c158953c17ad33fdb34c0919f2b32ddc45/gdb/windows-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5bd1d4c158953c17ad33fdb34c0919f2b32ddc45/gdb/windows-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-tdep.c?ref=5bd1d4c158953c17ad33fdb34c0919f2b32ddc45",
      "patch": "@@ -1112,54 +1112,50 @@ core_process_module_section (bfd *abfd, asection *sect, void *obj)\n   size_t module_name_offset;\n   CORE_ADDR base_addr;\n \n-  gdb_byte *buf = NULL;\n-\n   if (!startswith (sect->name, \".module\"))\n     return;\n \n-  buf = (gdb_byte *) xmalloc (bfd_section_size (sect) + 1);\n-  if (!buf)\n-    {\n-      printf_unfiltered (\"memory allocation failed for %s\\n\", sect->name);\n-      goto out;\n-    }\n+  gdb::byte_vector buf (bfd_section_size (sect) + 1);\n   if (!bfd_get_section_contents (abfd, sect,\n-\t\t\t\t buf, 0, bfd_section_size (sect)))\n-    goto out;\n-\n-\n+\t\t\t\t buf.data (), 0, bfd_section_size (sect)))\n+    return;\n+  /* We're going to treat part of the buffer as a string, so make sure\n+     it is NUL-terminated.  */\n+  buf.back () = 0;\n \n   /* A DWORD (data_type) followed by struct windows_core_module_info.  */\n-  data_type = extract_unsigned_integer (buf, 4, byte_order);\n+  if (bfd_section_size (sect) < 4)\n+    return;\n+  data_type = extract_unsigned_integer (buf.data (), 4, byte_order);\n \n   if (data_type == NOTE_INFO_MODULE)\n     {\n-      base_addr = extract_unsigned_integer (buf + 4, 4, byte_order);\n-      module_name_size = extract_unsigned_integer (buf + 8, 4, byte_order);\n       module_name_offset = 12;\n+      if (bfd_section_size (sect) < module_name_offset)\n+\treturn;\n+      base_addr = extract_unsigned_integer (&buf[4], 4, byte_order);\n+      module_name_size = extract_unsigned_integer (&buf[8], 4, byte_order);\n     }\n   else if (data_type == NOTE_INFO_MODULE64)\n     {\n-      base_addr = extract_unsigned_integer (buf + 4, 8, byte_order);\n-      module_name_size = extract_unsigned_integer (buf + 12, 4, byte_order);\n       module_name_offset = 16;\n+      if (bfd_section_size (sect) < module_name_offset)\n+\treturn;\n+      base_addr = extract_unsigned_integer (&buf[4], 8, byte_order);\n+      module_name_size = extract_unsigned_integer (&buf[12], 4, byte_order);\n     }\n   else\n-    goto out;\n+    return;\n \n   if (module_name_offset + module_name_size > bfd_section_size (sect))\n-    goto out;\n-  module_name = (char *) buf + module_name_offset;\n+    return;\n+  module_name = (char *) buf.data () + module_name_offset;\n \n   /* The first module is the .exe itself.  */\n   if (data->module_count != 0)\n     windows_xfer_shared_library (module_name, base_addr,\n \t\t\t\t NULL, data->gdbarch, data->obstack);\n   data->module_count++;\n-\n-out:\n-  xfree (buf);\n-  return;\n }\n \n ULONGEST"
    }
  ]
}