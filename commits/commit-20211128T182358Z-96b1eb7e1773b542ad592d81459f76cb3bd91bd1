{
  "sha": "96b1eb7e1773b542ad592d81459f76cb3bd91bd1",
  "node_id": "C_kwDOANOeidoAKDk2YjFlYjdlMTc3M2I1NDJhZDU5MmQ4MTQ1OWY3NmNiM2JkOTFiZDE",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-28T05:13:59Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-28T18:23:58Z"
    },
    "message": "sim: v850: switch to new target-newlib-syscall\n\nUse the new target-newlib-syscall module.  This is needed to merge all\nthe architectures into a single build, and v850 has a custom syscall\ntable for its newlib/libgloss port.\n\nThis allows cleaning up the syscall ifdef logic.  We know these will\nalways exist now.",
    "tree": {
      "sha": "096438a2dc61fdd937b950200c76cf1cc35ede22",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/096438a2dc61fdd937b950200c76cf1cc35ede22"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/96b1eb7e1773b542ad592d81459f76cb3bd91bd1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96b1eb7e1773b542ad592d81459f76cb3bd91bd1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/96b1eb7e1773b542ad592d81459f76cb3bd91bd1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96b1eb7e1773b542ad592d81459f76cb3bd91bd1/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e38330f8b00e641e397260e9cecb2070ac2d1477",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e38330f8b00e641e397260e9cecb2070ac2d1477",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e38330f8b00e641e397260e9cecb2070ac2d1477"
    }
  ],
  "stats": {
    "total": 93,
    "additions": 26,
    "deletions": 67
  },
  "files": [
    {
      "sha": "92b583678d73bf87ada9b75ebbaba512a68851b4",
      "filename": "sim/v850/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96b1eb7e1773b542ad592d81459f76cb3bd91bd1/sim/v850/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96b1eb7e1773b542ad592d81459f76cb3bd91bd1/sim/v850/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/Makefile.in?ref=96b1eb7e1773b542ad592d81459f76cb3bd91bd1",
      "patch": "@@ -31,6 +31,4 @@ SIM_EXTRA_DEPS = v850_sim.h sim-main.h\n SIM_EXTRA_CFLAGS = \\\n \t-DDEBUG\n \n-NL_TARGET = -DNL_TARGET_v850\n-\n ## COMMON_POST_CONFIG_FRAG"
    },
    {
      "sha": "f450679aaf22dfdb2da7df9af5f27ec47e0154d8",
      "filename": "sim/v850/interp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96b1eb7e1773b542ad592d81459f76cb3bd91bd1/sim/v850/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96b1eb7e1773b542ad592d81459f76cb3bd91bd1/sim/v850/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/interp.c?ref=96b1eb7e1773b542ad592d81459f76cb3bd91bd1",
      "patch": "@@ -12,6 +12,8 @@\n \n #include \"bfd.h\"\n \n+#include \"target-newlib-syscall.h\"\n+\n static const char * get_insn_name (sim_cpu *, int);\n \n /* For compatibility.  */\n@@ -199,6 +201,7 @@ sim_open (SIM_OPEN_KIND    kind,\n \n   /* Set default options before parsing user options.  */\n   current_target_byte_order = BFD_ENDIAN_LITTLE;\n+  cb->syscall_map = cb_v850_syscall_map;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)"
    },
    {
      "sha": "1178721a975901e8d0e2d901b3b278636f0bc8de",
      "filename": "sim/v850/simops.c",
      "status": "modified",
      "additions": 23,
      "deletions": 65,
      "changes": 88,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96b1eb7e1773b542ad592d81459f76cb3bd91bd1/sim/v850/simops.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96b1eb7e1773b542ad592d81459f76cb3bd91bd1/sim/v850/simops.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/simops.c?ref=96b1eb7e1773b542ad592d81459f76cb3bd91bd1",
      "patch": "@@ -18,8 +18,6 @@\n #include <stdlib.h>\n #include <string.h>\n \n-#include \"targ-vals.h\"\n-\n #include \"libiberty.h\"\n \n #include <errno.h>\n@@ -29,6 +27,8 @@\n #include <sys/time.h>\n #endif\n \n+#include \"target-newlib-syscall.h\"\n+\n /* This is an array of the bit positions of registers r20 .. r31 in\n    that order in a prepare/dispose instruction.  */\n int type1_regs[12] = { 27, 26, 25, 24, 31, 30, 29, 28, 23, 22, 0, 21 };\n@@ -1626,17 +1626,14 @@ OP_10007E0 (void)\n \t{\n \n #ifdef HAVE_FORK\n-#ifdef TARGET_SYS_fork\n-\tcase TARGET_SYS_fork:\n+\tcase TARGET_NEWLIB_V850_SYS_fork:\n \t  RETVAL = fork ();\n \t  RETERR = errno;\n \t  break;\n #endif\n-#endif\n \n #ifdef HAVE_EXECVE\n-#ifdef TARGET_SYS_execv\n-\tcase TARGET_SYS_execve:\n+\tcase TARGET_NEWLIB_V850_SYS_execve:\n \t  {\n \t    char *path = fetch_str (simulator, PARM1);\n \t    char **argv = fetch_argv (simulator, PARM2);\n@@ -1649,11 +1646,9 @@ OP_10007E0 (void)\n \t    break;\n \t  }\n #endif\n-#endif\n \n #if HAVE_EXECV\n-#ifdef TARGET_SYS_execv\n-\tcase TARGET_SYS_execv:\n+\tcase TARGET_NEWLIB_V850_SYS_execv:\n \t  {\n \t    char *path = fetch_str (simulator, PARM1);\n \t    char **argv = fetch_argv (simulator, PARM2);\n@@ -1664,11 +1659,9 @@ OP_10007E0 (void)\n \t    break;\n \t  }\n #endif\n-#endif\n \n #if 0\n-#ifdef TARGET_SYS_pipe\n-\tcase TARGET_SYS_pipe:\n+\tcase TARGET_NEWLIB_V850_SYS_pipe:\n \t  {\n \t    reg_t buf;\n \t    int host_fd[2];\n@@ -1682,11 +1675,9 @@ OP_10007E0 (void)\n \t  }\n \t  break;\n #endif\n-#endif\n \n #if 0\n-#ifdef TARGET_SYS_wait\n-\tcase TARGET_SYS_wait:\n+\tcase TARGET_NEWLIB_V850_SYS_wait:\n \t  {\n \t    int status;\n \n@@ -1696,10 +1687,8 @@ OP_10007E0 (void)\n \t  }\n \t  break;\n #endif\n-#endif\n \n-#ifdef TARGET_SYS_read\n-\tcase TARGET_SYS_read:\n+\tcase TARGET_NEWLIB_V850_SYS_read:\n \t  {\n \t    char *buf = zalloc (PARM3);\n \t    RETVAL = sim_io_read (simulator, PARM1, buf, PARM3);\n@@ -1709,10 +1698,8 @@ OP_10007E0 (void)\n \t      RETERR = sim_io_get_errno (simulator);\n \t    break;\n \t  }\n-#endif\n \n-#ifdef TARGET_SYS_write\n-\tcase TARGET_SYS_write:\n+\tcase TARGET_NEWLIB_V850_SYS_write:\n \t  {\n \t    char *buf = zalloc (PARM3);\n \t    sim_read (simulator, PARM2, (unsigned char *) buf, PARM3);\n@@ -1725,26 +1712,20 @@ OP_10007E0 (void)\n \t      RETERR = sim_io_get_errno (simulator);\n \t    break;\n \t  }\n-#endif\n \n-#ifdef TARGET_SYS_lseek\n-\tcase TARGET_SYS_lseek:\n+\tcase TARGET_NEWLIB_V850_SYS_lseek:\n \t  RETVAL = sim_io_lseek (simulator, PARM1, PARM2, PARM3);\n \t  if ((int) RETVAL < 0)\n \t    RETERR = sim_io_get_errno (simulator);\n \t  break;\n-#endif\n \n-#ifdef TARGET_SYS_close\n-\tcase TARGET_SYS_close:\n+\tcase TARGET_NEWLIB_V850_SYS_close:\n \t  RETVAL = sim_io_close (simulator, PARM1);\n \t  if ((int) RETVAL < 0)\n \t    RETERR = sim_io_get_errno (simulator);\n \t  break;\n-#endif\n \n-#ifdef TARGET_SYS_open\n-\tcase TARGET_SYS_open:\n+\tcase TARGET_NEWLIB_V850_SYS_open:\n \t  {\n \t    char *buf = fetch_str (simulator, PARM1);\n \t    RETVAL = sim_io_open (simulator, buf, PARM2);\n@@ -1753,10 +1734,8 @@ OP_10007E0 (void)\n \t      RETERR = sim_io_get_errno (simulator);\n \t    break;\n \t  }\n-#endif\n \n-#ifdef TARGET_SYS_exit\n-\tcase TARGET_SYS_exit:\n+\tcase TARGET_NEWLIB_V850_SYS_exit:\n \t  if ((PARM1 & 0xffff0000) == 0xdead0000 && (PARM1 & 0xffff) != 0)\n \t    /* get signal encoded by kill */\n \t    sim_engine_halt (simulator, STATE_CPU (simulator, 0), NULL, PC,\n@@ -1770,10 +1749,8 @@ OP_10007E0 (void)\n \t    sim_engine_halt (simulator, STATE_CPU (simulator, 0), NULL, PC,\n \t\t\t     sim_exited, PARM1);\n \t  break;\n-#endif\n \n-#ifdef TARGET_SYS_stat\n-\tcase TARGET_SYS_stat:\t/* added at hmsi */\n+\tcase TARGET_NEWLIB_V850_SYS_stat:\t/* added at hmsi */\n \t  /* stat system call */\n \t  {\n \t    struct stat host_stat;\n@@ -1802,10 +1779,8 @@ OP_10007E0 (void)\n \t      RETERR = sim_io_get_errno (simulator);\n \t  }\n \t  break;\n-#endif\n \n-#ifdef TARGET_SYS_fstat\n-\tcase TARGET_SYS_fstat:\n+\tcase TARGET_NEWLIB_V850_SYS_fstat:\n \t  /* fstat system call */\n \t  {\n \t    struct stat host_stat;\n@@ -1832,10 +1807,8 @@ OP_10007E0 (void)\n \t      RETERR = sim_io_get_errno (simulator);\n \t  }\n \t  break;\n-#endif\n \n-#ifdef TARGET_SYS_rename\n-\tcase TARGET_SYS_rename:\n+\tcase TARGET_NEWLIB_V850_SYS_rename:\n \t  {\n \t    char *oldpath = fetch_str (simulator, PARM1);\n \t    char *newpath = fetch_str (simulator, PARM2);\n@@ -1846,10 +1819,8 @@ OP_10007E0 (void)\n \t      RETERR = sim_io_get_errno (simulator);\n \t  }\n \t  break;\n-#endif\n \n-#ifdef TARGET_SYS_unlink\n-\tcase TARGET_SYS_unlink:\n+\tcase TARGET_NEWLIB_V850_SYS_unlink:\n \t  {\n \t    char *path = fetch_str (simulator, PARM1);\n \t    RETVAL = sim_io_unlink (simulator, path);\n@@ -1858,22 +1829,18 @@ OP_10007E0 (void)\n \t      RETERR = sim_io_get_errno (simulator);\n \t  }\n \t  break;\n-#endif\n \n-#ifdef TARGET_SYS_chown\n-\tcase TARGET_SYS_chown:\n+\tcase TARGET_NEWLIB_V850_SYS_chown:\n \t  {\n \t    char *path = fetch_str (simulator, PARM1);\n \t    RETVAL = chown (path, PARM2, PARM3);\n \t    free (path);\n \t    RETERR = errno;\n \t  }\n \t  break;\n-#endif\n \n #if HAVE_CHMOD\n-#ifdef TARGET_SYS_chmod\n-\tcase TARGET_SYS_chmod:\n+\tcase TARGET_NEWLIB_V850_SYS_chmod:\n \t  {\n \t    char *path = fetch_str (simulator, PARM1);\n \t    RETVAL = chmod (path, PARM2);\n@@ -1882,11 +1849,9 @@ OP_10007E0 (void)\n \t  }\n \t  break;\n #endif\n-#endif\n \n-#ifdef TARGET_SYS_time\n #if HAVE_TIME\n-\tcase TARGET_SYS_time:\n+\tcase TARGET_NEWLIB_V850_SYS_time:\n \t  {\n \t    time_t now;\n \t    RETVAL = time (&now);\n@@ -1895,11 +1860,9 @@ OP_10007E0 (void)\n \t  }\n \t  break;\n #endif\n-#endif\n \n #if !defined(__GO32__) && !defined(_WIN32)\n-#ifdef TARGET_SYS_times\n-\tcase TARGET_SYS_times:\n+\tcase TARGET_NEWLIB_V850_SYS_times:\n \t  {\n \t    struct tms tms;\n \t    RETVAL = times (&tms);\n@@ -1911,11 +1874,9 @@ OP_10007E0 (void)\n \t    break;\n \t  }\n #endif\n-#endif\n \n-#ifdef TARGET_SYS_gettimeofday\n #if !defined(__GO32__) && !defined(_WIN32)\n-\tcase TARGET_SYS_gettimeofday:\n+\tcase TARGET_NEWLIB_V850_SYS_gettimeofday:\n \t  {\n \t    struct timeval t;\n \t    struct timezone tz;\n@@ -1928,19 +1889,16 @@ OP_10007E0 (void)\n \t    break;\n \t  }\n #endif\n-#endif\n \n-#ifdef TARGET_SYS_utime\n #if HAVE_UTIME\n-\tcase TARGET_SYS_utime:\n+\tcase TARGET_NEWLIB_V850_SYS_utime:\n \t  {\n \t    /* Cast the second argument to void *, to avoid type mismatch\n \t       if a prototype is present.  */\n \t    sim_io_error (simulator, \"Utime not supported\");\n \t    /* RETVAL = utime (path, (void *) MEMPTR (PARM2)); */\n \t  }\n \t  break;\n-#endif\n #endif\n \n \tdefault:"
    }
  ]
}