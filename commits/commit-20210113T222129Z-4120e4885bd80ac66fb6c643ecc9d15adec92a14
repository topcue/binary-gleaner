{
  "sha": "4120e4885bd80ac66fb6c643ecc9d15adec92a14",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDEyMGU0ODg1YmQ4MGFjNjZmYjZjNjQzZWNjOWQxNWFkZWM5MmExNA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-01-13T22:18:49Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-01-13T22:21:29Z"
    },
    "message": "Re: SHF_LINK_ORDER fixup_link_order in ld\n\n\tPR 27160\n\t* ldelfgen.c (compare_link_order): Protect access of ELF section\n\tdata.\n\t(add_link_order_input_section): Remove redundant NULL check.\n\tUse bfd_get_flavour.\n\t(ldelf_map_segments): Use bfd_get_flavour.",
    "tree": {
      "sha": "dc4273cfbfc63dd775faf89fb68bf0ae47208e80",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dc4273cfbfc63dd775faf89fb68bf0ae47208e80"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4120e4885bd80ac66fb6c643ecc9d15adec92a14",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4120e4885bd80ac66fb6c643ecc9d15adec92a14",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4120e4885bd80ac66fb6c643ecc9d15adec92a14",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4120e4885bd80ac66fb6c643ecc9d15adec92a14/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d8d1feb424fe57e54485212698f53fb90edbdf35",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d8d1feb424fe57e54485212698f53fb90edbdf35",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d8d1feb424fe57e54485212698f53fb90edbdf35"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 20,
    "deletions": 7
  },
  "files": [
    {
      "sha": "60a31032b77b3e2724558cd3178983b861df1e1c",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4120e4885bd80ac66fb6c643ecc9d15adec92a14/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4120e4885bd80ac66fb6c643ecc9d15adec92a14/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=4120e4885bd80ac66fb6c643ecc9d15adec92a14",
      "patch": "@@ -1,3 +1,12 @@\n+2021-01-14  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 27160\n+\t* ldelfgen.c (compare_link_order): Protect access of ELF section\n+\tdata.\n+\t(add_link_order_input_section): Remove redundant NULL check.\n+\tUse bfd_get_flavour.\n+\t(ldelf_map_segments): Use bfd_get_flavour.\n+\n 2021-01-13  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* ldelfgen.c (add_link_order_input_section): Check for ELF input"
    },
    {
      "sha": "df3dae0abe8c45b08086257531a48f582df8705a",
      "filename": "ld/ldelfgen.c",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4120e4885bd80ac66fb6c643ecc9d15adec92a14/ld/ldelfgen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4120e4885bd80ac66fb6c643ecc9d15adec92a14/ld/ldelfgen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldelfgen.c?ref=4120e4885bd80ac66fb6c643ecc9d15adec92a14",
      "patch": "@@ -79,9 +79,8 @@ add_link_order_input_section (lang_input_section_type *is,\n   os_info->isec[os_info->count].idx = os_info->count;\n   os_info->count++;\n   s = is->section;\n-  if (s->owner->xvec->flavour == bfd_target_elf_flavour\n+  if (bfd_get_flavour (s->owner) == bfd_target_elf_flavour\n       && (s->flags & SEC_LINKER_CREATED) == 0\n-      && elf_section_data (s) != NULL\n       && elf_linked_to_section (s) != NULL)\n     os_info->ordered++;\n   return FALSE;\n@@ -145,10 +144,15 @@ compare_link_order (const void *a, const void *b)\n {\n   const struct os_sections_input *ai = a;\n   const struct os_sections_input *bi = b;\n-  asection *asec = elf_linked_to_section (ai->is->section);\n-  asection *bsec = elf_linked_to_section (bi->is->section);\n+  asection *asec = NULL;\n+  asection *bsec = NULL;\n   bfd_vma apos, bpos;\n \n+  if (bfd_get_flavour (ai->is->section->owner) == bfd_target_elf_flavour)\n+    asec = elf_linked_to_section (ai->is->section);\n+  if (bfd_get_flavour (bi->is->section->owner) == bfd_target_elf_flavour)\n+    bsec = elf_linked_to_section (bi->is->section);\n+\n   /* Place unordered sections before ordered sections.  */\n   if (asec == NULL || bsec == NULL)\n     {\n@@ -257,7 +261,7 @@ ldelf_map_segments (bfd_boolean need_layout)\n       lang_relax_sections (need_layout);\n       need_layout = FALSE;\n \n-      if (link_info.output_bfd->xvec->flavour == bfd_target_elf_flavour)\n+      if (bfd_get_flavour (link_info.output_bfd) == bfd_target_elf_flavour)\n \t{\n \t  lang_output_section_statement_type *os;\n \t  if (!done_link_order_scan)\n@@ -285,7 +289,7 @@ ldelf_map_segments (bfd_boolean need_layout)\n \t    }\n \t}\n \n-      if (link_info.output_bfd->xvec->flavour == bfd_target_elf_flavour\n+      if (bfd_get_flavour (link_info.output_bfd) == bfd_target_elf_flavour\n \t  && !bfd_link_relocatable (&link_info))\n \t{\n \t  bfd_size_type phdr_size;\n@@ -319,7 +323,7 @@ ldelf_map_segments (bfd_boolean need_layout)\n   if (tries == 0)\n     einfo (_(\"%F%P: looping in map_segments\"));\n \n-  if (link_info.output_bfd->xvec->flavour == bfd_target_elf_flavour\n+  if (bfd_get_flavour (link_info.output_bfd) == bfd_target_elf_flavour\n       && lang_phdr_list == NULL)\n     {\n       /* If we don't have user supplied phdrs, strip zero-sized dynamic"
    }
  ]
}