{
  "sha": "4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGMwZDc2YjljNDIwYmIyOWNiMzM2NWM1ZWRjOWM3OGM1MGQyYjIzMQ==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2015-03-23T04:44:54Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-02-06T17:12:51Z"
    },
    "message": "sim: watchpoints: use common sim_pc_get\n\nFew arches implement STATE_WATCHPOINTS()->pc while all of them implement\nsim_pc_get.  Lets switch the sim-watch core for monitoring pc events to\nthe sim_pc_get API so this module works for all ports, and then we can\ndelete this old back channel of snooping in the port's cpu state -- the\ncode needs the pointer to the pc storage so that it can read out bytes\nand compare them to the watchrange.\n\nThis also fixes the logic on multi-cpu sims by removing the limitation\nof only being able to watch CPU0's state.",
    "tree": {
      "sha": "1cbf362654cf185294337a5f27e6d3c94fdb9d65",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1cbf362654cf185294337a5f27e6d3c94fdb9d65"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cd89c53f6d475cd05a1858b9195770e347fb2e9e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd89c53f6d475cd05a1858b9195770e347fb2e9e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cd89c53f6d475cd05a1858b9195770e347fb2e9e"
    }
  ],
  "stats": {
    "total": 183,
    "additions": 129,
    "deletions": 54
  },
  "files": [
    {
      "sha": "0c53c9646610d01566b87779cbe38803c74924df",
      "filename": "sim/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ChangeLog?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* README-HACKING: Replace STATE_WATCHPOINTS with CPU_PC_FETCH.\n+\n 2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (HDEFINES): Delete AC_SUBST call."
    },
    {
      "sha": "2f985bd2e7f9a3297dddcb03d7663c5f7c0fe28c",
      "filename": "sim/README-HACKING",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/README-HACKING",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/README-HACKING",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/README-HACKING?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -267,8 +267,8 @@ And in your insn fetcher:\n   PROFILE_COUNT_CORE (cpu, target_addr, size_in_bytes, map_exec);\n \n To use the PC profiling code, you simply have to tell the system where to find\n-your simulator's PC.  So in your sim_open() function:\n-  STATE_WATCHPOINTS (sd)->pc = address_of_cpu0_pc;\n+your simulator's PC.  So in your model initialization function:\n+  CPU_PC_FETCH (cpu) = function_that_fetches_the_pc;\n \n To profile branches, in every location where a branch insn is executed, call\n one of the related helpers:"
    },
    {
      "sha": "b67888b9ec559f90d79d2a21459f61b6a590dba6",
      "filename": "sim/avr/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/avr/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/avr/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/ChangeLog?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_open): Delete call to STATE_WATCHPOINTS.\n+\n 2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "cce84a97f220fb23cd5bc86cef64b39ba7f34623",
      "filename": "sim/avr/interp.c",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/avr/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/avr/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/interp.c?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1690,12 +1690,6 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n       return 0;\n     }\n \n-  {\n-    /* XXX: Only first core gets profiled ?  */\n-    SIM_CPU *cpu = STATE_CPU (sd, 0);\n-    STATE_WATCHPOINTS (sd)->pc = &cpu->pc;\n-  }\n-\n   if (sim_pre_argv_init (sd, argv[0]) != SIM_RC_OK)\n     {\n       free_state (sd);"
    },
    {
      "sha": "7643141ab2872cb77ce3357464170b057aadb28b",
      "filename": "sim/bfin/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/bfin/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/bfin/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/ChangeLog?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_open): Delete call to STATE_WATCHPOINTS.\n+\n 2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "ceb5939f4e6b10281a6c426d8020d1ad294f3545",
      "filename": "sim/bfin/interp.c",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/bfin/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/bfin/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/interp.c?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -729,12 +729,6 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n       return 0;\n     }\n \n-  {\n-    /* XXX: Only first core gets profiled ?  */\n-    SIM_CPU *cpu = STATE_CPU (sd, 0);\n-    STATE_WATCHPOINTS (sd)->pc = &PCREG;\n-  }\n-\n   if (sim_pre_argv_init (sd, argv[0]) != SIM_RC_OK)\n     {\n       free_state (sd);"
    },
    {
      "sha": "ba0febf73ac01e7c1f3944e0eac2e0bd613b2f02",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1,3 +1,14 @@\n+2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* sim-events.c: Include sim-cpu.h.\n+\t(sim_event_watchpoints): Define watch_pc.\n+\t(sim_events_watch_pc): New function.\n+\t(WATCH_SIM): Handle watch_pc.\n+\t* sim-events.h (sim_events_watch_pc): New prototype.\n+\t* sim-watch.c (schedule_watchpoint): Replace sim_events_watch_sim with\n+\tsim_events_watch_pc.\n+\t* sim-watch.h (sim_watchpoints): Delete pc.\n+\n 2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n \n \t* acinclude.m4 (SIM_AC_COMMON): Replace AC_CONFIG_HEADER with"
    },
    {
      "sha": "207c8674d168ce94ccefa0175d68fd9682282f1a",
      "filename": "sim/common/sim-events.c",
      "status": "modified",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/common/sim-events.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/common/sim-events.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-events.c?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -25,6 +25,7 @@\n \n #include \"sim-main.h\"\n #include \"sim-assert.h\"\n+#include \"sim-cpu.h\"\n #include \"libiberty.h\"\n \n #include <string.h>\n@@ -66,6 +67,9 @@ typedef enum {\n   watch_sim_le_4,\n   watch_sim_le_8,\n \n+  /* pc */\n+  watch_pc,\n+\n   /* wallclock */\n   watch_clock,\n \n@@ -608,6 +612,45 @@ sim_events_watch_clock (SIM_DESC sd,\n #endif\n \n \n+#if EXTERN_SIM_EVENTS_P\n+sim_event *\n+sim_events_watch_pc (SIM_DESC sd,\n+                      int is_within,\n+                      unsigned64 lb,\n+                      unsigned64 ub,\n+                      sim_event_handler *handler,\n+                      void *data)\n+{\n+  sim_events *events = STATE_EVENTS (sd);\n+  sim_event *new_event = sim_events_zalloc (sd);\n+  /* type */\n+  new_event->watching = watch_pc;\n+  /* handler */\n+  new_event->data = data;\n+  new_event->handler = handler;\n+  /* data */\n+  new_event->lb = lb;\n+  new_event->lb64 = lb;\n+  new_event->ub = ub;\n+  new_event->ub64 = ub;\n+  new_event->is_within = (is_within != 0);\n+  /* insert */\n+  new_event->next = events->watchpoints;\n+  events->watchpoints = new_event;\n+  events->work_pending = 1;\n+  ETRACE ((_ETRACE,\n+\t   \"event watching pc at %ld - tag 0x%lx - pc 0x%lx..0x%lx, handler 0x%lx, data 0x%lx\\n\",\n+\t   (long)sim_events_time (sd),\n+\t   (long)new_event,\n+\t   (long)new_event->lb,\n+\t   (long)new_event->ub,\n+\t   (long)new_event->handler,\n+\t   (long)new_event->data));\n+  return new_event;\n+}\n+#endif\n+\n+\n #if EXTERN_SIM_EVENTS_P\n sim_event *\n sim_events_watch_sim (SIM_DESC sd,\n@@ -965,6 +1008,21 @@ sim_watch_valid (SIM_DESC sd,\n       }\n #undef WATCH_SIM\n \n+    case watch_pc:\n+      {\n+\tint c;\n+\n+\tfor (c = 0; c < MAX_NR_PROCESSORS; ++c)\n+\t  {\n+\t    sim_cpu *cpu = STATE_CPU (sd, c);\n+\t    sim_cia cia = sim_pc_get (cpu);\n+\n+\t    if (to_do->is_within == (cia >= to_do->lb64 && cia <= to_do->ub64))\n+\t      return 1;\n+\t  }\n+\treturn 0;\n+      }\n+\n     case watch_clock: /* wallclock */\n       {\n \tunsigned long elapsed_time = sim_events_elapsed_time (sd);"
    },
    {
      "sha": "7a5fc9665d2118799ee290a811df7bb4f19dd73a",
      "filename": "sim/common/sim-events.h",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/common/sim-events.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/common/sim-events.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-events.h?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -149,6 +149,17 @@ extern sim_event *sim_events_watch_clock\n  void *data);\n \n \n+/* Schedule an event when a PC matches a range.  */\n+\n+extern sim_event *sim_events_watch_pc\n+(SIM_DESC sd,\n+ int is_within,\n+ unsigned64 lb,\n+ unsigned64 ub,\n+ sim_event_handler *handler,\n+ void *data);\n+\n+\n /* Schedule an event when the test (IS_WITHIN == (VAL >= LB && VAL <=\n    UB)) of the NR_BYTES value at HOST_ADDR with BYTE_ORDER endian is\n    true."
    },
    {
      "sha": "8630b063bb65967144d600fe81c36b293d273f80",
      "filename": "sim/common/sim-watch.c",
      "status": "modified",
      "additions": 7,
      "deletions": 9,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/common/sim-watch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/common/sim-watch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-watch.c?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -167,18 +167,16 @@ schedule_watchpoint (SIM_DESC sd,\n \t\t     sim_watch_point *point)\n {\n   sim_watchpoints *watch = STATE_WATCHPOINTS (sd);\n+\n   switch (point->type)\n     {\n     case pc_watchpoint:\n-      point->event = sim_events_watch_sim (sd,\n-\t\t\t\t\t   watch->pc,\n-\t\t\t\t\t   sizeof (sim_cia),\n-\t\t\t\t\t   HOST_BYTE_ORDER,\n-\t\t\t\t\t   point->is_within,\n-\t\t\t\t\t   point->arg0, point->arg1,\n-\t\t\t\t\t   /* PC in arg0..arg1 */\n-\t\t\t\t\t   handle_watchpoint,\n-\t\t\t\t\t   point);\n+      point->event = sim_events_watch_pc (sd,\n+\t\t\t\t\t  point->is_within,\n+\t\t\t\t\t  point->arg0, point->arg1,\n+\t\t\t\t\t  /* PC in arg0..arg1 */\n+\t\t\t\t\t  handle_watchpoint,\n+\t\t\t\t\t  point);\n       return SIM_RC_OK;\n     case clock_watchpoint:\n       point->event = sim_events_watch_clock (sd,"
    },
    {
      "sha": "bbe2029c08f23d8b8d715707b6c607d07e4f794f",
      "filename": "sim/common/sim-watch.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/common/sim-watch.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/common/sim-watch.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-watch.h?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -49,7 +49,6 @@ typedef struct _sim_watchpoints {\n      address/size of the program-counter */\n   /* FIXME: In the future this shall be generalized so that any of the\n      N processors M registers can be watched */\n-  void *pc;\n \n   /* Pointer to the handler for interrupt watchpoints */\n   /* FIXME: can this be done better? */"
    },
    {
      "sha": "1223fe17176b5379d3d9f5f7efc959c299a1142d",
      "filename": "sim/frv/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/frv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/frv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/ChangeLog?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* sim-if.c (sim_open): Delete call to STATE_WATCHPOINTS.\n+\n 2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "45cbd1618a4126d7062b5a6da375bef7de2c7562",
      "filename": "sim/frv/sim-if.c",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/frv/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/frv/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/sim-if.c?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -61,14 +61,6 @@ sim_open (kind, callback, abfd, argv)\n       return 0;\n     }\n \n-#if 0 /* FIXME: pc is in mach-specific struct */\n-  /* FIXME: watchpoints code shouldn't need this */\n-  {\n-    SIM_CPU *current_cpu = STATE_CPU (sd, 0);\n-    STATE_WATCHPOINTS (sd)->pc = &(PC);\n-  }\n-#endif\n-\n   if (sim_pre_argv_init (sd, argv[0]) != SIM_RC_OK)\n     {\n       free_state (sd);"
    },
    {
      "sha": "7ab017fd46bb91e971f33a4163ad0bb769e86dd0",
      "filename": "sim/iq2000/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/iq2000/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/iq2000/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/ChangeLog?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* sim-if.c (sim_open): Delete call to STATE_WATCHPOINTS.\n+\n 2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "496b10659ea9394d01b26cb50a1f54115f3fc4a2",
      "filename": "sim/iq2000/sim-if.c",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/iq2000/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/iq2000/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/sim-if.c?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -67,14 +67,6 @@ sim_open (kind, callback, abfd, argv)\n       return 0;\n     }\n \n-#if 0 /* FIXME: pc is in mach-specific struct */\n-  /* FIXME: watchpoints code shouldn't need this */\n-  {\n-    SIM_CPU *current_cpu = STATE_CPU (sd, 0);\n-    STATE_WATCHPOINTS (sd)->pc = &(PC);\n-  }\n-#endif\n-\n   if (sim_pre_argv_init (sd, argv[0]) != SIM_RC_OK)\n     {\n       free_state (sd);"
    },
    {
      "sha": "42c35060a09008ae7f609149a496e5ba5cd813d8",
      "filename": "sim/m32r/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/m32r/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/m32r/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/ChangeLog?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* sim-if.c (sim_open): Delete call to STATE_WATCHPOINTS.\n+\n 2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "58d46946eb72e3609bfa46963856c4cc6ba50015",
      "filename": "sim/m32r/sim-if.c",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/m32r/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/m32r/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/sim-if.c?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -61,14 +61,6 @@ sim_open (kind, callback, abfd, argv)\n       return 0;\n     }\n \n-#if 0 /* FIXME: pc is in mach-specific struct */\n-  /* FIXME: watchpoints code shouldn't need this */\n-  {\n-    SIM_CPU *current_cpu = STATE_CPU (sd, 0);\n-    STATE_WATCHPOINTS (sd)->pc = &(PC);\n-  }\n-#endif\n-\n   if (sim_pre_argv_init (sd, argv[0]) != SIM_RC_OK)\n     {\n       free_state (sd);"
    },
    {
      "sha": "b3da89b070f277d60430bbb06ac9ae3c27781d13",
      "filename": "sim/mips/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/mips/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/mips/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/ChangeLog?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_open): Delete call to STATE_WATCHPOINTS.\n+\n 2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "fd93a12f69a08975133a8d2a83f65d2ffc21cd98",
      "filename": "sim/mips/interp.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/mips/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/mips/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/interp.c?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -355,7 +355,6 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n   cpu = STATE_CPU (sd, 0); /* FIXME */\n \n   /* FIXME: watchpoints code shouldn't need this */\n-  STATE_WATCHPOINTS (sd)->pc = &(PC);\n   STATE_WATCHPOINTS (sd)->interrupt_handler = interrupt_event;\n \n   /* Initialize the mechanism for doing insn profiling.  */"
    },
    {
      "sha": "7eefac9e78fde612b371cc2005b6b721d60e458d",
      "filename": "sim/mn10300/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/mn10300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/mn10300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/ChangeLog?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_open): Delete call to STATE_WATCHPOINTS.\n+\n 2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate.\n@@ -1573,4 +1577,3 @@ Mon Nov 25 12:46:38 1996  Jeffrey A Law  (law@cygnus.com)\n \n \t* Makefile.in, config.in, configure, configure.in: New files.\n \t* gencode.c, interp.c, mn10300_sim.h, simops.c: New files.\n-"
    },
    {
      "sha": "1c9c6905afcb54ce5aa7bd8cc464f6f708ceec29",
      "filename": "sim/mn10300/interp.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/mn10300/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/mn10300/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/interp.c?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -102,7 +102,6 @@ sim_open (SIM_OPEN_KIND kind,\n   /* FIXME: should be better way of setting up interrupts.  For\n      moment, only support watchpoints causing a breakpoint (gdb\n      halt). */\n-  STATE_WATCHPOINTS (sd)->pc = &(PC);\n   STATE_WATCHPOINTS (sd)->interrupt_handler = NULL;\n   STATE_WATCHPOINTS (sd)->interrupt_names = NULL;\n "
    },
    {
      "sha": "a1206bd319a06b82ddc7d3a131924b7aa0b9967a",
      "filename": "sim/moxie/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/moxie/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/moxie/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/ChangeLog?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_open): Delete call to STATE_WATCHPOINTS.\n+\n 2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "da97397c506020928a78489de88f36cb0bde64c8",
      "filename": "sim/moxie/interp.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/moxie/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/moxie/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/interp.c?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1203,8 +1203,6 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n       return 0;\n     }\n \n-  STATE_WATCHPOINTS (sd)->pc = &cpu.asregs.regs[PC_REGNO];\n-\n   if (sim_pre_argv_init (sd, argv[0]) != SIM_RC_OK)\n     {\n       free_state (sd);"
    },
    {
      "sha": "d981a027b58747b5b2759a3a2918ec5ad71ed5cc",
      "filename": "sim/v850/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/v850/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/v850/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/ChangeLog?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_open): Delete call to STATE_WATCHPOINTS.\n+\n 2021-02-06  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "76ecab7f7bfddfe91d4c46676f535d60216ef00c",
      "filename": "sim/v850/interp.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/v850/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c0d76b9c420bb29cb3365c5edc9c78c50d2b231/sim/v850/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/interp.c?ref=4c0d76b9c420bb29cb3365c5edc9c78c50d2b231",
      "patch": "@@ -202,7 +202,6 @@ sim_open (SIM_OPEN_KIND    kind,\n   simulator = sd;\n \n   /* FIXME: should be better way of setting up interrupts */\n-  STATE_WATCHPOINTS (sd)->pc = &(PC);\n   STATE_WATCHPOINTS (sd)->interrupt_handler = do_interrupt;\n   STATE_WATCHPOINTS (sd)->interrupt_names = interrupt_names;\n "
    }
  ]
}