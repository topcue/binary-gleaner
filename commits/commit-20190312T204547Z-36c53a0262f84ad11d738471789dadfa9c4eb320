{
  "sha": "36c53a0262f84ad11d738471789dadfa9c4eb320",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzZjNTNhMDI2MmY4NGFkMTFkNzM4NDcxNzg5ZGFkZmE5YzRlYjMyMA==",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2019-03-12T20:39:02Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2019-03-12T20:45:47Z"
    },
    "message": "Remove code disabled since at least 1999 from lookup_struct_elt_type.\n\nUpdate the comment above the function to reflect the code removal and\ndocument the existing behavior.\n\ngdb/ChangeLog:\n\n\t* gdbtypes.c (lookup_struct_elt_type): Update comment and\n\tremove disabled code block.",
    "tree": {
      "sha": "97a5e597277b23eee55217cec3f2c840898615f7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/97a5e597277b23eee55217cec3f2c840898615f7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/36c53a0262f84ad11d738471789dadfa9c4eb320",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/36c53a0262f84ad11d738471789dadfa9c4eb320",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/36c53a0262f84ad11d738471789dadfa9c4eb320",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/36c53a0262f84ad11d738471789dadfa9c4eb320/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6e056c817845f3d736a1be6b68c69b439c6c6d25",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6e056c817845f3d736a1be6b68c69b439c6c6d25",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6e056c817845f3d736a1be6b68c69b439c6c6d25"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 8,
    "deletions": 18
  },
  "files": [
    {
      "sha": "fe2d3e499cbb45b6aa1426066a7e95b407a2f57f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/36c53a0262f84ad11d738471789dadfa9c4eb320/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/36c53a0262f84ad11d738471789dadfa9c4eb320/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=36c53a0262f84ad11d738471789dadfa9c4eb320",
      "patch": "@@ -1,3 +1,8 @@\n+2019-03-12  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* gdbtypes.c (lookup_struct_elt_type): Update comment and\n+\tremove disabled code block.\n+\n 2019-03-12  John Baldwin  <jhb@FreeBSD.org>\n \n \t* gdbarch.sh (get_thread_local_address): New method."
    },
    {
      "sha": "5924b15520ab7e520c5d930eb60bec14ecf95101",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 3,
      "deletions": 18,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/36c53a0262f84ad11d738471789dadfa9c4eb320/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/36c53a0262f84ad11d738471789dadfa9c4eb320/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=36c53a0262f84ad11d738471789dadfa9c4eb320",
      "patch": "@@ -1644,17 +1644,16 @@ lookup_template_type (char *name, struct type *type,\n   return (SYMBOL_TYPE (sym));\n }\n \n-/* Given a type TYPE, lookup the type of the component of type named\n-   NAME.\n+/* Given a type TYPE, lookup the type of the component named NAME.\n \n    TYPE can be either a struct or union, or a pointer or reference to\n    a struct or union.  If it is a pointer or reference, its target\n    type is automatically used.  Thus '.' and '->' are interchangable,\n    as specified for the definitions of the expression element types\n    STRUCTOP_STRUCT and STRUCTOP_PTR.\n \n-   If NOERR is nonzero, return zero if NAME is not suitably defined.\n-   If NAME is the name of a baseclass type, return that type.  */\n+   If NOERR is nonzero, return NULL if there is no component named\n+   NAME.  */\n \n struct type *\n lookup_struct_elt_type (struct type *type, const char *name, int noerr)\n@@ -1678,20 +1677,6 @@ lookup_struct_elt_type (struct type *type, const char *name, int noerr)\n \t     type_name.c_str ());\n     }\n \n-#if 0\n-  /* FIXME: This change put in by Michael seems incorrect for the case\n-     where the structure tag name is the same as the member name.\n-     I.e. when doing \"ptype bell->bar\" for \"struct foo { int bar; int\n-     foo; } bell;\" Disabled by fnf.  */\n-  {\n-    char *type_name;\n-\n-    type_name = TYPE_NAME (type);\n-    if (type_name != NULL && strcmp (type_name, name) == 0)\n-      return type;\n-  }\n-#endif\n-\n   for (i = TYPE_NFIELDS (type) - 1; i >= TYPE_N_BASECLASSES (type); i--)\n     {\n       const char *t_field_name = TYPE_FIELD_NAME (type, i);"
    }
  ]
}