{
  "sha": "736c9875c040e88c5f508338b68f04f7a42c3b9d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzM2Yzk4NzVjMDQwZTg4YzVmNTA4MzM4YjY4ZjA0ZjdhNDJjM2I5ZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-29T01:00:07Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-29T03:46:42Z"
    },
    "message": "PR26459 UBSAN: elfnn-ia64.c:1945 null pointer bsearch\n\n\tPR 26495\n\t* elfnn-ia64.c (get_dyn_sym_info): Don't bsearch or look at last\n\telement when count is zero.  bfd_realloc when shrinking.",
    "tree": {
      "sha": "8beb61566a2ed59abde0b4def662a08e11f0010a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8beb61566a2ed59abde0b4def662a08e11f0010a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/736c9875c040e88c5f508338b68f04f7a42c3b9d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/736c9875c040e88c5f508338b68f04f7a42c3b9d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/736c9875c040e88c5f508338b68f04f7a42c3b9d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/736c9875c040e88c5f508338b68f04f7a42c3b9d/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9b5f4ffe1b8e92dd0d0004ffae4fa04b61220fba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9b5f4ffe1b8e92dd0d0004ffae4fa04b61220fba",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9b5f4ffe1b8e92dd0d0004ffae4fa04b61220fba"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 27,
    "deletions": 19
  },
  "files": [
    {
      "sha": "cc8451ffe68d73b62f65a6a9e346acf31605da0d",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/736c9875c040e88c5f508338b68f04f7a42c3b9d/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/736c9875c040e88c5f508338b68f04f7a42c3b9d/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=736c9875c040e88c5f508338b68f04f7a42c3b9d",
      "patch": "@@ -1,3 +1,9 @@\n+2020-08-29  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26495\n+\t* elfnn-ia64.c (get_dyn_sym_info): Don't bsearch or look at last\n+\telement when count is zero.  bfd_realloc when shrinking.\n+\n 2020-08-28  Alan Modra  <amodra@gmail.com>\n \n \tPR 26418"
    },
    {
      "sha": "292c00b6d0300d693ce66a345dd5d5de56a1e540",
      "filename": "bfd/elfnn-ia64.c",
      "status": "modified",
      "additions": 21,
      "deletions": 19,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/736c9875c040e88c5f508338b68f04f7a42c3b9d/bfd/elfnn-ia64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/736c9875c040e88c5f508338b68f04f7a42c3b9d/bfd/elfnn-ia64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-ia64.c?ref=736c9875c040e88c5f508338b68f04f7a42c3b9d",
      "patch": "@@ -1867,18 +1867,16 @@ get_dyn_sym_info (struct elfNN_ia64_link_hash_table *ia64_info,\n \t      key.addend = addend;\n \t      dyn_i = bsearch (&key, info, sorted_count,\n \t\t\t       sizeof (*info), addend_compare);\n-\n \t      if (dyn_i)\n-\t\t{\n-\t\t  return dyn_i;\n-\t\t}\n+\t\treturn dyn_i;\n \t    }\n \n-\t  /* Do a quick check for the last inserted entry.  */\n-\t  dyn_i = info + count - 1;\n-\t  if (dyn_i->addend == addend)\n+\t  if (count != 0)\n \t    {\n-\t      return dyn_i;\n+\t      /* Do a quick check for the last inserted entry.  */\n+\t      dyn_i = info + count - 1;\n+\t      if (dyn_i->addend == addend)\n+\t\treturn dyn_i;\n \t    }\n \t}\n \n@@ -1932,19 +1930,23 @@ get_dyn_sym_info (struct elfNN_ia64_link_hash_table *ia64_info,\n       if (size != count)\n \t{\n \t  amt = count * sizeof (*info);\n-\t  info = bfd_malloc (amt);\n-\t  if (info != NULL)\n-\t    {\n-\t      memcpy (info, *info_p, amt);\n-\t      free (*info_p);\n-\t      *size_p = count;\n-\t      *info_p = info;\n-\t    }\n+\t  info = bfd_realloc (info, amt);\n+\t  *size_p = count;\n+\t  if (info == NULL && count != 0)\n+\t    /* realloc should never fail since we are reducing size here,\n+\t       but if it does use the old array.  */\n+\t    info = *info_p;\n+\t  else\n+\t    *info_p = info;\n \t}\n \n-      key.addend = addend;\n-      dyn_i = bsearch (&key, info, count,\n-\t\t       sizeof (*info), addend_compare);\n+      if (count == 0)\n+\tdyn_i = NULL;\n+      else\n+\t{\n+\t  key.addend = addend;\n+\t  dyn_i = bsearch (&key, info, count, sizeof (*info), addend_compare);\n+\t}\n     }\n \n   return dyn_i;"
    }
  ]
}