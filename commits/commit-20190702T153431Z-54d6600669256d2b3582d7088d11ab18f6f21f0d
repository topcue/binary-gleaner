{
  "sha": "54d6600669256d2b3582d7088d11ab18f6f21f0d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTRkNjYwMDY2OTI1NmQyYjM1ODJkNzA4OGQxMWFiMThmNmYyMWYwZA==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-07-02T15:34:31Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-07-02T15:34:31Z"
    },
    "message": "Make \"info threads\" use the gdb::option framework\n\nThis makes \"info threads\" use the gdb::option framework to process\noptions.  There's only one option today (-gid), and it isn't used much\nfrequently unless you're looking at matching MI output.  Still, this\nwas in the neighborhood of \"thread apply\" so I had converted it.\n\nThe main advantage is that TAB completion now shows you the available\noptions, and gives you a hint to what the command accepts as operand\nargument, including showing a metasyntactic variable:\n\n  (gdb) info threads [TAB]\n  -gid  ID\n\n  (gdb) help info threads\n  Display currently known threads.\n  Usage: info threads [OPTION]... [ID]...\n\n  Options:\n    -gid\n      Show global thread IDs.\n\n  If ID is given, it is a space-separated list of IDs of threads to display.\n  Otherwise, all threads are displayed.\n  (gdb)\n\ngdb/ChangeLog:\n2019-07-02  Pedro Alves  <palves@redhat.com>\n\n\t* NEWS (Completion improvements): Mention \"info threads\".\n\t* thread.c (struct info_threads_opts, info_threads_option_defs)\n\t(make_info_threads_options_def_group): New.\n\t(info_threads_command): Use gdb::option::process_options.\n\t(info_threads_command_completer): New.\n\t(_initialize_thread): Use gdb::option::build_help to build the\n\thelp text for \"info threads\".\n\ngdb/testsuite/ChangeLog:\n2019-07-02  Pedro Alves  <palves@redhat.com>\n\n\t* gdb.base/options.exp (test-info-threads): New procedure.\n\t(top level): Call it.",
    "tree": {
      "sha": "8a4e7dc737a929bad2d8d15c51c4f06382911537",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8a4e7dc737a929bad2d8d15c51c4f06382911537"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/54d6600669256d2b3582d7088d11ab18f6f21f0d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54d6600669256d2b3582d7088d11ab18f6f21f0d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/54d6600669256d2b3582d7088d11ab18f6f21f0d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54d6600669256d2b3582d7088d11ab18f6f21f0d/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1faa385ff6b11df26efc46152fe15b31adbf8624",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1faa385ff6b11df26efc46152fe15b31adbf8624",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1faa385ff6b11df26efc46152fe15b31adbf8624"
    }
  ],
  "stats": {
    "total": 117,
    "additions": 105,
    "deletions": 12
  },
  "files": [
    {
      "sha": "35f1baefb997ef4c43664ee0fc6c2bf1786d87df",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54d6600669256d2b3582d7088d11ab18f6f21f0d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54d6600669256d2b3582d7088d11ab18f6f21f0d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=54d6600669256d2b3582d7088d11ab18f6f21f0d",
      "patch": "@@ -1,3 +1,13 @@\n+2019-07-02  Pedro Alves  <palves@redhat.com>\n+\n+\t* NEWS (Completion improvements): Mention \"info threads\".\n+\t* thread.c (struct info_threads_opts, info_threads_option_defs)\n+\t(make_info_threads_options_def_group): New.\n+\t(info_threads_command): Use gdb::option::process_options.\n+\t(info_threads_command_completer): New.\n+\t(_initialize_thread): Use gdb::option::build_help to build the\n+\thelp text for \"info threads\".\n+\n 2019-07-02  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* defs.h (generic_load): Move from here..."
    },
    {
      "sha": "62521ed75a13bef85cc9dd948e4e187cb3fc383a",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54d6600669256d2b3582d7088d11ab18f6f21f0d/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54d6600669256d2b3582d7088d11ab18f6f21f0d/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=54d6600669256d2b3582d7088d11ab18f6f21f0d",
      "patch": "@@ -194,6 +194,8 @@ maint show test-options-completion-result\n      \"taas\" commands, and their \"-ascending\" option can now be\n      abbreviated.\n \n+  ** GDB can now complete the options of the \"info threads\" command.\n+\n   ** GDB can now complete the options of the \"compile file\" and\n      \"compile code\" commands.  The \"compile file\" command now\n      completes on filenames."
    },
    {
      "sha": "f38efbe515b0d1e9f969405f2b800f66e0b939a7",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54d6600669256d2b3582d7088d11ab18f6f21f0d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54d6600669256d2b3582d7088d11ab18f6f21f0d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=54d6600669256d2b3582d7088d11ab18f6f21f0d",
      "patch": "@@ -1,3 +1,8 @@\n+2019-07-02  Pedro Alves  <palves@redhat.com>\n+\n+\t* gdb.base/options.exp (test-info-threads): New procedure.\n+\t(top level): Call it.\n+\n 2019-06-28  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.dwarf2/ada-linkage-name.c: New file."
    },
    {
      "sha": "f88e6a87d3e6caa5ac959c953f1c184ac1caf1d1",
      "filename": "gdb/testsuite/gdb.base/options.exp",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54d6600669256d2b3582d7088d11ab18f6f21f0d/gdb/testsuite/gdb.base/options.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54d6600669256d2b3582d7088d11ab18f6f21f0d/gdb/testsuite/gdb.base/options.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/options.exp?ref=54d6600669256d2b3582d7088d11ab18f6f21f0d",
      "patch": "@@ -454,6 +454,21 @@ proc_with_prefix test-thread-apply {} {\n     }\n }\n \n+# Basic option-machinery + \"info threads\" command integration tests.\n+proc_with_prefix test-info-threads {} {\n+    test_gdb_complete_multiple \"info threads \" \"\" \"\" {\n+\t\"-gid\"\n+\t\"ID\"\n+    }\n+\n+    test_gdb_complete_unique \\\n+\t\"info threads -\" \\\n+\t\"info threads -gid\"\n+\n+    # \"ID\" isn't really something the user can type.\n+    test_gdb_complete_none \"info threads I\"\n+}\n+\n # Miscellaneous tests.\n proc_with_prefix test-misc {variant} {\n     global all_options\n@@ -921,3 +936,6 @@ test-frame-apply\n \n # Basic \"thread apply\" integration tests.\n test-thread-apply\n+\n+# Basic \"info threads\" integration tests.\n+test-info-threads"
    },
    {
      "sha": "d13298f5c6f5401478c704ecebe9b197ac118408",
      "filename": "gdb/thread.c",
      "status": "modified",
      "additions": 70,
      "deletions": 12,
      "changes": 82,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54d6600669256d2b3582d7088d11ab18f6f21f0d/gdb/thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54d6600669256d2b3582d7088d11ab18f6f21f0d/gdb/thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread.c?ref=54d6600669256d2b3582d7088d11ab18f6f21f0d",
      "patch": "@@ -1199,6 +1199,33 @@ print_thread_info (struct ui_out *uiout, const char *requested_threads,\n   print_thread_info_1 (uiout, requested_threads, 1, pid, 0);\n }\n \n+/* The options for the \"info threads\" command.  */\n+\n+struct info_threads_opts\n+{\n+  /* For \"-gid\".  */\n+  int show_global_ids = 0;\n+};\n+\n+static const gdb::option::option_def info_threads_option_defs[] = {\n+\n+  gdb::option::flag_option_def<info_threads_opts> {\n+    \"gid\",\n+    [] (info_threads_opts *opts) { return &opts->show_global_ids; },\n+    N_(\"Show global thread IDs.\"),\n+  },\n+\n+};\n+\n+/* Create an option_def_group for the \"info threads\" options, with\n+   IT_OPTS as context.  */\n+\n+static inline gdb::option::option_def_group\n+make_info_threads_options_def_group (info_threads_opts *it_opts)\n+{\n+  return {{info_threads_option_defs}, it_opts};\n+}\n+\n /* Implementation of the \"info threads\" command.\n \n    Note: this has the drawback that it _really_ switches\n@@ -1208,16 +1235,36 @@ print_thread_info (struct ui_out *uiout, const char *requested_threads,\n static void\n info_threads_command (const char *arg, int from_tty)\n {\n-  int show_global_ids = 0;\n+  info_threads_opts it_opts;\n \n-  if (arg != NULL\n-      && check_for_argument (&arg, \"-gid\", sizeof (\"-gid\") - 1))\n+  auto grp = make_info_threads_options_def_group (&it_opts);\n+  gdb::option::process_options\n+    (&arg, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_ERROR, grp);\n+\n+  print_thread_info_1 (current_uiout, arg, 0, -1, it_opts.show_global_ids);\n+}\n+\n+/* Completer for the \"info threads\" command.  */\n+\n+static void\n+info_threads_command_completer (struct cmd_list_element *ignore,\n+\t\t\t\tcompletion_tracker &tracker,\n+\t\t\t\tconst char *text, const char *word_ignored)\n+{\n+  const auto grp = make_info_threads_options_def_group (nullptr);\n+\n+  if (gdb::option::complete_options\n+      (tracker, &text, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_ERROR, grp))\n+    return;\n+\n+  /* Convenience to let the user know what the option can accept.  */\n+  if (*text == '\\0')\n     {\n-      arg = skip_spaces (arg);\n-      show_global_ids = 1;\n+      gdb::option::complete_on_all_options (tracker, grp);\n+      /* Keep this \"ID\" in sync with what \"help info threads\"\n+\t says.  */\n+      tracker.add_completion (make_unique_xstrdup (\"ID\"));\n     }\n-\n-  print_thread_info_1 (current_uiout, arg, 0, -1, show_global_ids);\n }\n \n /* See gdbthread.h.  */\n@@ -2068,12 +2115,23 @@ _initialize_thread (void)\n   static struct cmd_list_element *thread_apply_list = NULL;\n   cmd_list_element *c;\n \n-  add_info (\"threads\", info_threads_command,\n-\t    _(\"Display currently known threads.\\n\\\n-Usage: info threads [-gid] [ID]...\\n\\\n--gid: Show global thread IDs.\\n\\\n+  const auto info_threads_opts = make_info_threads_options_def_group (nullptr);\n+\n+  /* Note: keep this \"ID\" in sync with what \"info threads [TAB]\"\n+     suggests.  */\n+  static std::string info_threads_help\n+    = gdb::option::build_help (_(\"\\\n+Display currently known threads.\\n\\\n+Usage: info threads [OPTION]... [ID]...\\n\\\n+\\n\\\n+Options:\\n\\\n+%OPTIONS%\\\n If ID is given, it is a space-separated list of IDs of threads to display.\\n\\\n-Otherwise, all threads are displayed.\"));\n+Otherwise, all threads are displayed.\"),\n+\t\t\t       info_threads_opts);\n+\n+  c = add_info (\"threads\", info_threads_command, info_threads_help.c_str ());\n+  set_cmd_completer_handle_brkchars (c, info_threads_command_completer);\n \n   add_prefix_cmd (\"thread\", class_run, thread_command, _(\"\\\n Use this command to switch between threads.\\n\\"
    }
  ]
}