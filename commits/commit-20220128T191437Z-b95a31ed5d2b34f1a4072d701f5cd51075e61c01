{
  "sha": "b95a31ed5d2b34f1a4072d701f5cd51075e61c01",
  "node_id": "C_kwDOANOeidoAKGI5NWEzMWVkNWQyYjM0ZjFhNDA3MmQ3MDFmNWNkNTEwNzVlNjFjMDE",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2022-01-28T19:14:37Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2022-01-28T19:14:37Z"
    },
    "message": "fbsd-nat: Return a bool from fetch_register_set and store_register_set.\n\nChange these helper functions to return true if they did any work.",
    "tree": {
      "sha": "fca4d7410b95d442204b8b2858fa4c992ffeaf6f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fca4d7410b95d442204b8b2858fa4c992ffeaf6f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b95a31ed5d2b34f1a4072d701f5cd51075e61c01",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b95a31ed5d2b34f1a4072d701f5cd51075e61c01",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b95a31ed5d2b34f1a4072d701f5cd51075e61c01",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b95a31ed5d2b34f1a4072d701f5cd51075e61c01/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7384826ebff8a91a3f9b632e9e3982760fab966e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7384826ebff8a91a3f9b632e9e3982760fab966e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7384826ebff8a91a3f9b632e9e3982760fab966e"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 18,
    "deletions": 11
  },
  "files": [
    {
      "sha": "bf606ec1f766728108a6811655ec1a13edd9fd62",
      "filename": "gdb/fbsd-nat.c",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b95a31ed5d2b34f1a4072d701f5cd51075e61c01/gdb/fbsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b95a31ed5d2b34f1a4072d701f5cd51075e61c01/gdb/fbsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/fbsd-nat.c?ref=b95a31ed5d2b34f1a4072d701f5cd51075e61c01",
      "patch": "@@ -1611,7 +1611,7 @@ fbsd_nat_target::supports_disable_randomization ()\n \n /* See fbsd-nat.h.  */\n \n-void\n+bool\n fbsd_nat_target::fetch_register_set (struct regcache *regcache, int regnum,\n \t\t\t\t     int fetch_op, const struct regset *regset,\n \t\t\t\t     void *regs, size_t size)\n@@ -1627,12 +1627,14 @@ fbsd_nat_target::fetch_register_set (struct regcache *regcache, int regnum,\n \tperror_with_name (_(\"Couldn't get registers\"));\n \n       regcache->supply_regset (regset, regnum, regs, size);\n+      return true;\n     }\n+  return false;\n }\n \n /* See fbsd-nat.h.  */\n \n-void\n+bool\n fbsd_nat_target::store_register_set (struct regcache *regcache, int regnum,\n \t\t\t\t     int fetch_op, int store_op,\n \t\t\t\t     const struct regset *regset, void *regs,\n@@ -1652,7 +1654,9 @@ fbsd_nat_target::store_register_set (struct regcache *regcache, int regnum,\n \n       if (ptrace (store_op, pid, (PTRACE_TYPE_ARG3) regs, 0) == -1)\n \tperror_with_name (_(\"Couldn't write registers\"));\n+      return true;\n     }\n+  return false;\n }\n \n void _initialize_fbsd_nat ();"
    },
    {
      "sha": "b32cabb21c3e377d57e88704e29a3a5d046a397d",
      "filename": "gdb/fbsd-nat.h",
      "status": "modified",
      "additions": 12,
      "deletions": 9,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b95a31ed5d2b34f1a4072d701f5cd51075e61c01/gdb/fbsd-nat.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b95a31ed5d2b34f1a4072d701f5cd51075e61c01/gdb/fbsd-nat.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/fbsd-nat.h?ref=b95a31ed5d2b34f1a4072d701f5cd51075e61c01",
      "patch": "@@ -120,34 +120,37 @@ class fbsd_nat_target : public inf_ptrace_target\n      of registers to a native thread.\n \n      The caller must provide storage for the set of registers in REGS,\n-     and SIZE is the size of the storage.  */\n+     and SIZE is the size of the storage.\n \n-  void fetch_register_set (struct regcache *regcache, int regnum, int fetch_op,\n+     Returns true if the register set was transferred due to a\n+     matching REGNUM.*/\n+\n+  bool fetch_register_set (struct regcache *regcache, int regnum, int fetch_op,\n \t\t\t   const struct regset *regset, void *regs, size_t size);\n \n-  void store_register_set (struct regcache *regcache, int regnum, int fetch_op,\n+  bool store_register_set (struct regcache *regcache, int regnum, int fetch_op,\n \t\t\t   int store_op, const struct regset *regset,\n \t\t\t   void *regs, size_t size);\n protected:\n   /* Wrapper versions of the above helpers which accept a register set\n      type such as 'struct reg' or 'struct fpreg'.  */\n \n   template <class Regset>\n-  void fetch_register_set (struct regcache *regcache, int regnum, int fetch_op,\n+  bool fetch_register_set (struct regcache *regcache, int regnum, int fetch_op,\n \t\t\t   const struct regset *regset)\n   {\n     Regset regs;\n-    fetch_register_set (regcache, regnum, fetch_op, regset, &regs,\n-\t\t\tsizeof (regs));\n+    return fetch_register_set (regcache, regnum, fetch_op, regset, &regs,\n+\t\t\t       sizeof (regs));\n   }\n \n   template <class Regset>\n-  void store_register_set (struct regcache *regcache, int regnum, int fetch_op,\n+  bool store_register_set (struct regcache *regcache, int regnum, int fetch_op,\n \t\t\t   int store_op, const struct regset *regset)\n   {\n     Regset regs;\n-    store_register_set (regcache, regnum, fetch_op, store_op, regset, &regs,\n-\t\t\tsizeof (regs));\n+    return store_register_set (regcache, regnum, fetch_op, store_op, regset,\n+\t\t\t       &regs, sizeof (regs));\n   }\n };\n "
    }
  ]
}