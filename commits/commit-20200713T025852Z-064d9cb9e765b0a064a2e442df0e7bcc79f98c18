{
  "sha": "064d9cb9e765b0a064a2e442df0e7bcc79f98c18",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDY0ZDljYjllNzY1YjBhMDY0YTJlNDQyZGYwZTdiY2M3OWY5OGMxOA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-07-13T02:58:52Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-07-13T02:58:52Z"
    },
    "message": "gdb: remove TYPE_LOW_BOUND_UNDEFINED and TYPE_HIGH_BOUND_UNDEFINED\n\nRemove the macros, use the getters of `struct dynamic_prop` instead.\n\ngdb/ChangeLog:\n\n\t* gdbtypes.h (TYPE_LOW_BOUND_UNDEFINED,\n\tTYPE_HIGH_BOUND_UNDEFINED): Remove.  Update all callers\n\tto get the bound property's kind and check against\n\tPROP_UNDEFINED.\n\nChange-Id: I6a7641ac1aa3fa7fca0c21f00556f185f2e2d68c",
    "tree": {
      "sha": "5a7903d08f40b9931b366355181734242656f245",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5a7903d08f40b9931b366355181734242656f245"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/064d9cb9e765b0a064a2e442df0e7bcc79f98c18",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/064d9cb9e765b0a064a2e442df0e7bcc79f98c18",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/064d9cb9e765b0a064a2e442df0e7bcc79f98c18",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/064d9cb9e765b0a064a2e442df0e7bcc79f98c18/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5537ddd024adc7d1af6f9572983f77e9dd047fce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5537ddd024adc7d1af6f9572983f77e9dd047fce",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5537ddd024adc7d1af6f9572983f77e9dd047fce"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 17,
    "deletions": 12
  },
  "files": [
    {
      "sha": "3233cb5fa8fe6b0c96a09905b1f7b16fc92d6164",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/064d9cb9e765b0a064a2e442df0e7bcc79f98c18/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/064d9cb9e765b0a064a2e442df0e7bcc79f98c18/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=064d9cb9e765b0a064a2e442df0e7bcc79f98c18",
      "patch": "@@ -1,3 +1,10 @@\n+2020-07-12  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbtypes.h (TYPE_LOW_BOUND_UNDEFINED,\n+\tTYPE_HIGH_BOUND_UNDEFINED): Remove.  Update all callers\n+\tto get the bound property's kind and check against\n+\tPROP_UNDEFINED.\n+\n 2020-07-12  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbtypes.h (TYPE_LOW_BOUND, TYPE_HIGH_BOUND): Remove.  Update"
    },
    {
      "sha": "27b458767a79c3731a2156f04bc4364056fb0816",
      "filename": "gdb/ada-tasks.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/064d9cb9e765b0a064a2e442df0e7bcc79f98c18/gdb/ada-tasks.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/064d9cb9e765b0a064a2e442df0e7bcc79f98c18/gdb/ada-tasks.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-tasks.c?ref=064d9cb9e765b0a064a2e442df0e7bcc79f98c18",
      "patch": "@@ -896,8 +896,8 @@ ada_tasks_inferior_data_sniffer (struct ada_tasks_inferior_data *data)\n \t      && eltype->code () == TYPE_CODE_PTR)\n \t    idxtype = check_typedef (type->index_type ());\n \t  if (idxtype != NULL\n-\t      && !TYPE_LOW_BOUND_UNDEFINED (idxtype)\n-\t      && !TYPE_HIGH_BOUND_UNDEFINED (idxtype))\n+\t      && idxtype->bounds ()->low.kind () != PROP_UNDEFINED\n+\t      && idxtype->bounds ()->high.kind () != PROP_UNDEFINED)\n \t    {\n \t      data->known_tasks_element = eltype;\n \t      data->known_tasks_length ="
    },
    {
      "sha": "dacd46da44fa303a32b830a901c0b6611788d441",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/064d9cb9e765b0a064a2e442df0e7bcc79f98c18/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/064d9cb9e765b0a064a2e442df0e7bcc79f98c18/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=064d9cb9e765b0a064a2e442df0e7bcc79f98c18",
      "patch": "@@ -3212,7 +3212,8 @@ evaluate_subexp_for_sizeof (struct expression *exp, int *pos,\n \t  type = value_type (val);\n \t  if (type->code () == TYPE_CODE_ARRAY\n               && is_dynamic_type (type->index_type ())\n-              && TYPE_HIGH_BOUND_UNDEFINED (type->index_type ()))\n+              && (type->index_type ()->bounds ()->high.kind ()\n+\t\t  == PROP_UNDEFINED))\n \t    return allocate_optimized_out_value (size_type);\n \t}\n       else"
    },
    {
      "sha": "227f696b73636827a4d4037cd4fd232f7e84860e",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/064d9cb9e765b0a064a2e442df0e7bcc79f98c18/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/064d9cb9e765b0a064a2e442df0e7bcc79f98c18/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=064d9cb9e765b0a064a2e442df0e7bcc79f98c18",
      "patch": "@@ -5117,10 +5117,11 @@ recursive_dump_type (struct type *type, int spaces)\n     {\n       printfi_filtered (spaces, \"low %s%s  high %s%s\\n\",\n \t\t\tplongest (type->bounds ()->low.const_val ()),\n-\t\t\tTYPE_LOW_BOUND_UNDEFINED (type) ? \" (undefined)\" : \"\",\n+\t\t\t(type->bounds ()->low.kind () == PROP_UNDEFINED\n+\t\t\t ? \" (undefined)\" : \"\"),\n \t\t\tplongest (type->bounds ()->high.const_val ()),\n-\t\t\tTYPE_HIGH_BOUND_UNDEFINED (type) \n-\t\t\t? \" (undefined)\" : \"\");\n+\t\t\t(type->bounds ()->high.kind () == PROP_UNDEFINED\n+\t\t\t ? \" (undefined)\" : \"\"));\n     }\n \n   switch (TYPE_SPECIFIC_FIELD (type))"
    },
    {
      "sha": "2d277ac688d0db136e82f445a02161e09fc27d39",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/064d9cb9e765b0a064a2e442df0e7bcc79f98c18/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/064d9cb9e765b0a064a2e442df0e7bcc79f98c18/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=064d9cb9e765b0a064a2e442df0e7bcc79f98c18",
      "patch": "@@ -1594,10 +1594,6 @@ extern unsigned type_align (struct type *);\n    space in struct type.  */\n extern bool set_type_align (struct type *, ULONGEST);\n \n-#define TYPE_LOW_BOUND_UNDEFINED(range_type) \\\n-  (TYPE_LOW_BOUND_KIND(range_type) == PROP_UNDEFINED)\n-#define TYPE_HIGH_BOUND_UNDEFINED(range_type) \\\n-  (TYPE_HIGH_BOUND_KIND(range_type) == PROP_UNDEFINED)\n #define TYPE_HIGH_BOUND_KIND(range_type) \\\n   ((range_type)->bounds ()->high.kind ())\n #define TYPE_LOW_BOUND_KIND(range_type) \\\n@@ -1637,9 +1633,9 @@ extern bool set_type_align (struct type *, ULONGEST);\n    index type.  */\n \n #define TYPE_ARRAY_UPPER_BOUND_IS_UNDEFINED(arraytype) \\\n-   TYPE_HIGH_BOUND_UNDEFINED((arraytype)->index_type ())\n+   ((arraytype)->index_type ()->bounds ()->high.kind () == PROP_UNDEFINED)\n #define TYPE_ARRAY_LOWER_BOUND_IS_UNDEFINED(arraytype) \\\n-   TYPE_LOW_BOUND_UNDEFINED((arraytype)->index_type ())\n+   ((arraytype)->index_type ()->bounds ()->low.kind () == PROP_UNDEFINED)\n \n #define TYPE_ARRAY_UPPER_BOUND_VALUE(arraytype) \\\n    ((arraytype)->index_type ()->bounds ()->high.const_val ())"
    }
  ]
}