{
  "sha": "3a657c600bde2d3bd84870f75968622bbdb69ce8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2E2NTdjNjAwYmRlMmQzYmQ4NDg3MGY3NTk2ODYyMmJiZGI2OWNlOA==",
  "commit": {
    "author": {
      "name": "Eli Zaretskii",
      "email": "eliz@gnu.org",
      "date": "2020-01-05T05:50:27Z"
    },
    "committer": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-01-05T05:50:27Z"
    },
    "message": "libctf: Add configure check for asprintf (for MinGW)\n\nThis commit fixes a compilation warning when compiling libctf\non MinGW:\n\n    libctf/ctf-dump.c:118:8: warning: implicit declaration of function\n    'asprintf'; did you mean 'vasprintf'? [-Wimplicit-function-declaration]\n\n\t if (asprintf (&bit, \" %lx: [slice 0x%x:0x%x]\",\n\t     ^~~~~~~~\n\t     vasprintf\n\nMinGW doesn't provide that function, so we depend on the one provided\nby libiberty. However, the declaration is guarded by HAVE_DECL_ASPRINTF,\nwhich we do not have in libctf's config.h.\n\nlibctf/ChangeLog:\n\n\tPR binutils/25155:\n\t* configure.ac: Add AC_CHECK_DECLS([asprintf]).\n\t* configure, config.h.in: Regenerate.",
    "tree": {
      "sha": "d1ecb4e2a6921df85de3f4521a93ecd7701424d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d1ecb4e2a6921df85de3f4521a93ecd7701424d1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3a657c600bde2d3bd84870f75968622bbdb69ce8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3a657c600bde2d3bd84870f75968622bbdb69ce8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3a657c600bde2d3bd84870f75968622bbdb69ce8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3a657c600bde2d3bd84870f75968622bbdb69ce8/comments",
  "author": {
    "login": "Eli-Zaretskii",
    "id": 20908835,
    "node_id": "MDQ6VXNlcjIwOTA4ODM1",
    "avatar_url": "https://avatars.githubusercontent.com/u/20908835?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Eli-Zaretskii",
    "html_url": "https://github.com/Eli-Zaretskii",
    "followers_url": "https://api.github.com/users/Eli-Zaretskii/followers",
    "following_url": "https://api.github.com/users/Eli-Zaretskii/following{/other_user}",
    "gists_url": "https://api.github.com/users/Eli-Zaretskii/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Eli-Zaretskii/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Eli-Zaretskii/subscriptions",
    "organizations_url": "https://api.github.com/users/Eli-Zaretskii/orgs",
    "repos_url": "https://api.github.com/users/Eli-Zaretskii/repos",
    "events_url": "https://api.github.com/users/Eli-Zaretskii/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Eli-Zaretskii/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7fddfece829ebeb4f8496667260e3f421189b621",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7fddfece829ebeb4f8496667260e3f421189b621",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7fddfece829ebeb4f8496667260e3f421189b621"
    }
  ],
  "stats": {
    "total": 74,
    "additions": 72,
    "deletions": 2
  },
  "files": [
    {
      "sha": "f737fda4593c29d8d96f65142a572191749c7a76",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a657c600bde2d3bd84870f75968622bbdb69ce8/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a657c600bde2d3bd84870f75968622bbdb69ce8/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=3a657c600bde2d3bd84870f75968622bbdb69ce8",
      "patch": "@@ -1,3 +1,9 @@\n+2020-02-05  Joel Brobecker  <brobecker@adacore.com>\n+\n+\tPR binutils/25155:\n+\t* configure.ac: Add AC_CHECK_DECLS([asprintf]).\n+\t* configure, config.h.in: Regenerate.\n+\n 2020-01-01  Alan Modra  <amodra@gmail.com>\n \n \tUpdate year range in copyright notice of all files."
    },
    {
      "sha": "264cbc3e49dc88d3d1990ba24add7b81b59a60fb",
      "filename": "libctf/config.h.in",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a657c600bde2d3bd84870f75968622bbdb69ce8/libctf/config.h.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a657c600bde2d3bd84870f75968622bbdb69ce8/libctf/config.h.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/config.h.in?ref=3a657c600bde2d3bd84870f75968622bbdb69ce8",
      "patch": "@@ -9,6 +9,10 @@\n /* Define to 1 if you have the <byteswap.h> header file. */\n #undef HAVE_BYTESWAP_H\n \n+/* Define to 1 if you have the declaration of `asprintf', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_ASPRINTF\n+\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n "
    },
    {
      "sha": "e5493b316912cc49972ea8f9d8b266d2d0f3e15d",
      "filename": "libctf/configure",
      "status": "modified",
      "additions": 60,
      "deletions": 2,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a657c600bde2d3bd84870f75968622bbdb69ce8/libctf/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a657c600bde2d3bd84870f75968622bbdb69ce8/libctf/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/configure?ref=3a657c600bde2d3bd84870f75968622bbdb69ce8",
      "patch": "@@ -1875,6 +1875,52 @@ $as_echo \"$ac_res\" >&6; }\n   eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n \n } # ac_fn_c_check_func\n+\n+# ac_fn_c_check_decl LINENO SYMBOL VAR INCLUDES\n+# ---------------------------------------------\n+# Tests whether SYMBOL is declared in INCLUDES, setting cache variable VAR\n+# accordingly.\n+ac_fn_c_check_decl ()\n+{\n+  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+  as_decl_name=`echo $2|sed 's/ *(.*//'`\n+  as_decl_use=`echo $2|sed -e 's/(/((/' -e 's/)/) 0&/' -e 's/,/) 0& (/g'`\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $as_decl_name is declared\" >&5\n+$as_echo_n \"checking whether $as_decl_name is declared... \" >&6; }\n+if eval \\${$3+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+#ifndef $as_decl_name\n+#ifdef __cplusplus\n+  (void) $as_decl_use;\n+#else\n+  (void) $as_decl_name;\n+#endif\n+#endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  eval \"$3=yes\"\n+else\n+  eval \"$3=no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+eval ac_res=\\$$3\n+\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n+$as_echo \"$ac_res\" >&6; }\n+  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n+\n+} # ac_fn_c_check_decl\n cat >config.log <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n@@ -11385,7 +11431,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11388 \"configure\"\n+#line 11434 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11491,7 +11537,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11494 \"configure\"\n+#line 11540 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12971,6 +13017,18 @@ fi\n done\n \n \n+ac_fn_c_check_decl \"$LINENO\" \"asprintf\" \"ac_cv_have_decl_asprintf\" \"$ac_includes_default\"\n+if test \"x$ac_cv_have_decl_asprintf\" = xyes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_ASPRINTF $ac_have_decl\n+_ACEOF\n+\n+\n \n \n "
    },
    {
      "sha": "7f2a713b93d17c0192056ec84175df6feda4ae71",
      "filename": "libctf/configure.ac",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a657c600bde2d3bd84870f75968622bbdb69ce8/libctf/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a657c600bde2d3bd84870f75968622bbdb69ce8/libctf/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/configure.ac?ref=3a657c600bde2d3bd84870f75968622bbdb69ce8",
      "patch": "@@ -99,6 +99,8 @@ AC_C_BIGENDIAN\n AC_CHECK_HEADERS(byteswap.h endian.h)\n AC_CHECK_FUNCS(pread)\n \n+AC_CHECK_DECLS([asprintf])\n+\n dnl Check for qsort_r.  (Taken from gnulib.)\n AC_CHECK_FUNCS_ONCE([qsort_r])\n if test $ac_cv_func_qsort_r = yes; then"
    }
  ]
}