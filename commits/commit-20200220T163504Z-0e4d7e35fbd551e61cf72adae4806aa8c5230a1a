{
  "sha": "0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGU0ZDdlMzVmYmQ1NTFlNjFjZjcyYWRhZTQ4MDZhYThjNTIzMGExYQ==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:11:52Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:04Z"
    },
    "message": "gdbserver: turn target op 'resume' into a method\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's resume op into a method of\n\tprocess_target.\n\n\t* target.h (struct process_stratum_target): Remove the target op.\n\t(class process_target): Add the target op.\n\n\tUpdate the derived classes and callers below.\n\n\t* server.cc (resume): Update.\n\t* target.cc (target_stop_and_wait): Update.\n\t(target_continue_no_signal): Update.\n\t(target_continue): Update.\n\t* linux-low.cc (linux_target_ops): Update.\n\t(linux_resume): Turn into ...\n\t(linux_process_target::resume): ... this.\n\t* linux-low.h (class linux_process_target): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t(lynx_resume): Turn into ...\n\t(lynx_process_target::resume): ... this.\n\t* lynx-low.h (class lynx_process_target): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t(nto_resume): Turn into ...\n\t(nto_process_target::resume): ... this.\n\t* nto-low.h (class nto_process_target): Update.\n\t* win32-low.cc (win32_target_ops): Update.\n\t(win32_resume): Turn into ...\n\t(win32_process_target::resume): ... this.\n\t(win32_process_target::detach): Update.\n\t(do_initial_child_stuff): Update.\n\t* win32-low.h (class win32_process_target): Update.",
    "tree": {
      "sha": "1e60a1ddc64a709f939d87064dccadb934215fad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1e60a1ddc64a709f939d87064dccadb934215fad"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "13d3d99b27ab7f792f3bdf729def9bd8f2151952",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13d3d99b27ab7f792f3bdf729def9bd8f2151952",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/13d3d99b27ab7f792f3bdf729def9bd8f2151952"
    }
  ],
  "stats": {
    "total": 82,
    "additions": 58,
    "deletions": 24
  },
  "files": [
    {
      "sha": "584443ef419e3d3a8d7a6e50b57251e2b041f3e7",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "patch": "@@ -1,3 +1,36 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's resume op into a method of\n+\tprocess_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target op.\n+\t(class process_target): Add the target op.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* server.cc (resume): Update.\n+\t* target.cc (target_stop_and_wait): Update.\n+\t(target_continue_no_signal): Update.\n+\t(target_continue): Update.\n+\t* linux-low.cc (linux_target_ops): Update.\n+\t(linux_resume): Turn into ...\n+\t(linux_process_target::resume): ... this.\n+\t* linux-low.h (class linux_process_target): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t(lynx_resume): Turn into ...\n+\t(lynx_process_target::resume): ... this.\n+\t* lynx-low.h (class lynx_process_target): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t(nto_resume): Turn into ...\n+\t(nto_process_target::resume): ... this.\n+\t* nto-low.h (class nto_process_target): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\t(win32_resume): Turn into ...\n+\t(win32_process_target::resume): ... this.\n+\t(win32_process_target::detach): Update.\n+\t(do_initial_child_stuff): Update.\n+\t* win32-low.h (class win32_process_target): Update.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's thread_alive op into a method of"
    },
    {
      "sha": "b2e06262464a8eea031fb0fc16a3873500716f78",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "patch": "@@ -262,7 +262,6 @@ static int stabilizing_threads;\n \n static void linux_resume_one_lwp (struct lwp_info *lwp,\n \t\t\t\t  int step, int signal, siginfo_t *info);\n-static void linux_resume (struct thread_resume *resume_info, size_t n);\n static void stop_all_lwps (int suspend, struct lwp_info *except);\n static void unstop_all_lwps (int unsuspend, struct lwp_info *except);\n static void unsuspend_all_lwps (struct lwp_info *except);\n@@ -5002,8 +5001,8 @@ linux_resume_one_thread (thread_info *thread, bool leave_all_stopped)\n   lwp->resume = NULL;\n }\n \n-static void\n-linux_resume (struct thread_resume *resume_info, size_t n)\n+void\n+linux_process_target::resume (thread_resume *resume_info, size_t n)\n {\n   struct thread_info *need_step_over = NULL;\n \n@@ -7359,7 +7358,6 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-  linux_resume,\n   linux_wait,\n   linux_fetch_registers,\n   linux_store_registers,"
    },
    {
      "sha": "a750f7cca8300768aa2160bef40e04a22498f3f6",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "patch": "@@ -286,6 +286,8 @@ class linux_process_target : public process_target\n   void join (int pid) override;\n \n   bool thread_alive (ptid_t pid) override;\n+\n+  void resume (thread_resume *resume_info, size_t n) override;\n };\n \n #define get_thread_lwp(thr) ((struct lwp_info *) (thread_target_data (thr)))"
    },
    {
      "sha": "9fc41e4ce99a67013766719095604430890dd316",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "patch": "@@ -326,8 +326,8 @@ lynx_process_target::attach (unsigned long pid)\n \n /* Implement the resume target_ops method.  */\n \n-static void\n-lynx_resume (struct thread_resume *resume_info, size_t n)\n+void\n+lynx_process_target::resume (thread_resume *resume_info, size_t n)\n {\n   ptid_t ptid = resume_info[0].thread;\n   const int request\n@@ -726,7 +726,6 @@ static lynx_process_target the_lynx_target;\n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  lynx_resume,\n   lynx_wait,\n   lynx_fetch_registers,\n   lynx_store_registers,"
    },
    {
      "sha": "4a5e4ba6f8d88fbbecd6104329f89e9e22f77d48",
      "filename": "gdbserver/lynx-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/lynx-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/lynx-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.h?ref=0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "patch": "@@ -72,6 +72,8 @@ class lynx_process_target : public process_target\n   void join (int pid) override;\n \n   bool thread_alive (ptid_t pid) override;\n+\n+  void resume (thread_resume *resume_info, size_t n) override;\n };\n \n /* The inferior's target description.  This is a global because the"
    },
    {
      "sha": "d9981540308e82e8c0adf0e87e869dd980e17ea3",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "patch": "@@ -451,8 +451,8 @@ nto_process_target::thread_alive (ptid_t ptid)\n \n /* Resume inferior's execution.  */\n \n-static void\n-nto_resume (struct thread_resume *resume_info, size_t n)\n+void\n+nto_process_target::resume (thread_resume *resume_info, size_t n)\n {\n   /* We can only work in all-stop mode.  */\n   procfs_status status;\n@@ -941,7 +941,6 @@ nto_sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  nto_resume,\n   nto_wait,\n   nto_fetch_registers,\n   nto_store_registers,"
    },
    {
      "sha": "5b32ae7c514a550fcc7f7d05428c498d70a0bc76",
      "filename": "gdbserver/nto-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/nto-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/nto-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.h?ref=0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "patch": "@@ -62,6 +62,8 @@ class nto_process_target : public process_target\n   void join (int pid) override;\n \n   bool thread_alive (ptid_t pid) override;\n+\n+  void resume (thread_resume *resume_info, size_t n) override;\n };\n \n /* The inferior's target description.  This is a global because the"
    },
    {
      "sha": "92feff36516f6e8bfbcdd67e23245b2502aa3d19",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "patch": "@@ -2847,7 +2847,7 @@ resume (struct thread_resume *actions, size_t num_actions)\n       enable_async_io ();\n     }\n \n-  (*the_target->resume) (actions, num_actions);\n+  the_target->pt->resume (actions, num_actions);\n \n   if (non_stop)\n     write_ok (cs.own_buf);"
    },
    {
      "sha": "eca53de982e3eaa915c7d43a2d1869ab217e8f81",
      "filename": "gdbserver/target.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/target.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/target.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.cc?ref=0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "patch": "@@ -211,7 +211,7 @@ target_stop_and_wait (ptid_t ptid)\n   resume_info.thread = ptid;\n   resume_info.kind = resume_stop;\n   resume_info.sig = GDB_SIGNAL_0;\n-  (*the_target->resume) (&resume_info, 1);\n+  the_target->pt->resume (&resume_info, 1);\n \n   non_stop = true;\n   mywait (ptid, &status, 0, 0);\n@@ -244,7 +244,7 @@ target_continue_no_signal (ptid_t ptid)\n   resume_info.thread = ptid;\n   resume_info.kind = resume_continue;\n   resume_info.sig = GDB_SIGNAL_0;\n-  (*the_target->resume) (&resume_info, 1);\n+  the_target->pt->resume (&resume_info, 1);\n }\n \n /* See target/target.h.  */\n@@ -257,7 +257,7 @@ target_continue (ptid_t ptid, enum gdb_signal signal)\n   resume_info.thread = ptid;\n   resume_info.kind = resume_continue;\n   resume_info.sig = gdb_signal_to_host (signal);\n-  (*the_target->resume) (&resume_info, 1);\n+  the_target->pt->resume (&resume_info, 1);\n }\n \n /* See target/target.h.  */"
    },
    {
      "sha": "f64009f7521fea929295d58a4887c6c1957d49ca",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "patch": "@@ -70,10 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Resume the inferior process.  */\n-\n-  void (*resume) (struct thread_resume *resume_info, size_t n);\n-\n   /* Wait for the inferior process or thread to change state.  Store\n      status through argument pointer STATUS.\n \n@@ -483,6 +479,9 @@ class process_target\n \n   /* Return true iff the thread with process ID PID is alive.  */\n   virtual bool thread_alive (ptid_t pid) = 0;\n+\n+  /* Resume the inferior process.  */\n+  virtual void resume (thread_resume *resume_info, size_t n) = 0;\n };\n \n extern process_stratum_target *the_target;"
    },
    {
      "sha": "1f4af2c66c8323ad03179769865825b155b48411",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "patch": "@@ -105,7 +105,6 @@ typedef BOOL (WINAPI *winapi_GenerateConsoleCtrlEvent) (DWORD, DWORD);\n \n static ptid_t win32_wait (ptid_t ptid, struct target_waitstatus *ourstatus,\n \t\t\t  int options);\n-static void win32_resume (struct thread_resume *resume_info, size_t n);\n #ifndef _WIN32_WCE\n static void win32_add_all_dlls (void);\n #endif\n@@ -396,7 +395,7 @@ do_initial_child_stuff (HANDLE proch, DWORD pid, int attached)\n \tresume.kind = resume_continue;\n \tresume.sig = 0;\n \n-\twin32_resume (&resume, 1);\n+\tthe_target->pt->resume (&resume, 1);\n       }\n     }\n \n@@ -865,7 +864,7 @@ win32_process_target::detach (process_info *process)\n     resume.thread = minus_one_ptid;\n     resume.kind = resume_continue;\n     resume.sig = 0;\n-    win32_resume (&resume, 1);\n+    this->resume (&resume, 1);\n   }\n \n   if (!DebugActiveProcessStop (current_process_id))\n@@ -908,8 +907,8 @@ win32_process_target::thread_alive (ptid_t ptid)\n \n /* Resume the inferior process.  RESUME_INFO describes how we want\n    to resume.  */\n-static void\n-win32_resume (struct thread_resume *resume_info, size_t n)\n+void\n+win32_process_target::resume (thread_resume *resume_info, size_t n)\n {\n   DWORD tid;\n   enum gdb_signal sig;\n@@ -1839,7 +1838,6 @@ win32_sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  win32_resume,\n   win32_wait,\n   win32_fetch_inferior_registers,\n   win32_store_inferior_registers,"
    },
    {
      "sha": "fbdf3c7395a6b449576f4e7331f8aad1c8a03a24",
      "filename": "gdbserver/win32-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/win32-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a/gdbserver/win32-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.h?ref=0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "patch": "@@ -121,6 +121,8 @@ class win32_process_target : public process_target\n   void join (int pid) override;\n \n   bool thread_alive (ptid_t pid) override;\n+\n+  void resume (thread_resume *resume_info, size_t n) override;\n };\n \n /* Retrieve the context for this thread, if not already retrieved.  */"
    }
  ]
}