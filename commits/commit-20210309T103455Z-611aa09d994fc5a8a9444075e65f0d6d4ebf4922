{
  "sha": "611aa09d994fc5a8a9444075e65f0d6d4ebf4922",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjExYWEwOWQ5OTRmYzVhOGE5NDQ0MDc1ZTY1ZjBkNmQ0ZWJmNDkyMg==",
  "commit": {
    "author": {
      "name": "Felix Willgerodt",
      "email": "felix.willgerodt@intel.com",
      "date": "2021-03-09T10:34:55Z"
    },
    "committer": {
      "name": "Felix Willgerodt",
      "email": "felix.willgerodt@intel.com",
      "date": "2021-03-09T10:34:55Z"
    },
    "message": "gdb/fortran: Add 'LOC' intrinsic support.\n\nLOC(X) returns the address of X as an integer:\nhttps://gcc.gnu.org/onlinedocs/gfortran/LOC.html\n\nBefore:\n(gdb) p LOC(r)\nNo symbol \"LOC\" in current context.\n\nAfter:\n(gdb) p LOC(r)\n$1 = 0xffffdf48\n\ngdb/ChangeLog:\n2021-03-09  Felix Willgerodt  <felix.willgerodt@intel.com>\n\n        * f-exp.h (eval_op_f_loc): Declare.\n        (expr::fortran_loc_operation): New typedef.\n        * f-exp.y (exp): Handle UNOP_FORTRAN_LOC after parsing an\n        UNOP_INTRINSIC.\n        (f77_keywords): Add LOC keyword.\n        * f-lang.c (eval_op_f_loc): New function.\n        * std-operator.def (UNOP_FORTRAN_LOC): New operator.\n\ngdb/testsuite/ChangeLog:\n2020-03-09  Felix Willgerodt  <felix.willgerodt@intel.com>\n\n        * gdb.fortran/intrinsics.exp: Add LOC tests.",
    "tree": {
      "sha": "effc6393a6e4c210d02a40ce547454402215ed99",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/effc6393a6e4c210d02a40ce547454402215ed99"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/611aa09d994fc5a8a9444075e65f0d6d4ebf4922",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/611aa09d994fc5a8a9444075e65f0d6d4ebf4922",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/611aa09d994fc5a8a9444075e65f0d6d4ebf4922",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/comments",
  "author": {
    "login": "felix-willgerodt",
    "id": 68062808,
    "node_id": "MDQ6VXNlcjY4MDYyODA4",
    "avatar_url": "https://avatars.githubusercontent.com/u/68062808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/felix-willgerodt",
    "html_url": "https://github.com/felix-willgerodt",
    "followers_url": "https://api.github.com/users/felix-willgerodt/followers",
    "following_url": "https://api.github.com/users/felix-willgerodt/following{/other_user}",
    "gists_url": "https://api.github.com/users/felix-willgerodt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/felix-willgerodt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/felix-willgerodt/subscriptions",
    "organizations_url": "https://api.github.com/users/felix-willgerodt/orgs",
    "repos_url": "https://api.github.com/users/felix-willgerodt/repos",
    "events_url": "https://api.github.com/users/felix-willgerodt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/felix-willgerodt/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "felix-willgerodt",
    "id": 68062808,
    "node_id": "MDQ6VXNlcjY4MDYyODA4",
    "avatar_url": "https://avatars.githubusercontent.com/u/68062808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/felix-willgerodt",
    "html_url": "https://github.com/felix-willgerodt",
    "followers_url": "https://api.github.com/users/felix-willgerodt/followers",
    "following_url": "https://api.github.com/users/felix-willgerodt/following{/other_user}",
    "gists_url": "https://api.github.com/users/felix-willgerodt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/felix-willgerodt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/felix-willgerodt/subscriptions",
    "organizations_url": "https://api.github.com/users/felix-willgerodt/orgs",
    "repos_url": "https://api.github.com/users/felix-willgerodt/repos",
    "events_url": "https://api.github.com/users/felix-willgerodt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/felix-willgerodt/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "eef32f59988bb0e4514d5395093c9e6d8d073ebb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eef32f59988bb0e4514d5395093c9e6d8d073ebb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/eef32f59988bb0e4514d5395093c9e6d8d073ebb"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 51,
    "deletions": 1
  },
  "files": [
    {
      "sha": "048b40919299c1b600d643c1674291563701f2b5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=611aa09d994fc5a8a9444075e65f0d6d4ebf4922",
      "patch": "@@ -1,3 +1,13 @@\n+2021-03-09  Felix Willgerodt  <felix.willgerodt@intel.com>\n+\n+        * f-exp.h (eval_op_f_loc): Declare.\n+        (expr::fortran_loc_operation): New typedef.\n+        * f-exp.y (exp): Handle UNOP_FORTRAN_LOC after parsing an\n+        UNOP_INTRINSIC.\n+        (f77_keywords): Add LOC keyword.\n+        * f-lang.c (eval_op_f_loc): New function.\n+        * std-operator.def (UNOP_FORTRAN_LOC): New operator.\n+\n 2021-03-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* f-exp.h (eval_op_f_array_shape): Declare."
    },
    {
      "sha": "b3d0e0e9d54f635590ae641ac29b7637e79e32b1",
      "filename": "gdb/f-exp.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/f-exp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/f-exp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-exp.h?ref=611aa09d994fc5a8a9444075e65f0d6d4ebf4922",
      "patch": "@@ -73,6 +73,11 @@ extern struct value * eval_op_f_allocated (struct type *expect_type,\n \t\t\t\t\t   enum noside noside,\n \t\t\t\t\t   enum exp_opcode op,\n \t\t\t\t\t   struct value *arg1);\n+extern struct value * eval_op_f_loc (struct type *expect_type,\n+\t\t\t\t     struct expression *exp,\n+\t\t\t\t     enum noside noside,\n+\t\t\t\t     enum exp_opcode op,\n+\t\t\t\t     struct value *arg1);\n \n /* Implement the evaluation of UNOP_FORTRAN_RANK.  EXPECTED_TYPE, EXP, and\n    NOSIDE are as for expression::evaluate (see expression.h).  OP will\n@@ -131,6 +136,8 @@ using fortran_kind_operation = unop_operation<UNOP_FORTRAN_KIND,\n \t\t\t\t\t      eval_op_f_kind>;\n using fortran_allocated_operation = unop_operation<UNOP_FORTRAN_ALLOCATED,\n \t\t\t\t\t\t   eval_op_f_allocated>;\n+using fortran_loc_operation = unop_operation<UNOP_FORTRAN_LOC,\n+\t\t\t\t\t\t   eval_op_f_loc>;\n \n using fortran_mod_operation = binop_operation<BINOP_MOD, eval_op_f_mod>;\n using fortran_modulo_operation = binop_operation<BINOP_FORTRAN_MODULO,"
    },
    {
      "sha": "ce11b09b18e7ba92212a22ce28b0b76ac720efaf",
      "filename": "gdb/f-exp.y",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/f-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/f-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-exp.y?ref=611aa09d994fc5a8a9444075e65f0d6d4ebf4922",
      "patch": "@@ -333,6 +333,9 @@ exp\t:\tUNOP_INTRINSIC '(' exp ')'\n \t\t\t    case UNOP_FORTRAN_SHAPE:\n \t\t\t      pstate->wrap<fortran_array_shape_operation> ();\n \t\t\t      break;\n+\t\t\t    case UNOP_FORTRAN_LOC:\n+\t\t\t      pstate->wrap<fortran_loc_operation> ();\n+\t\t\t      break;\n \t\t\t    default:\n \t\t\t      gdb_assert_not_reached (\"unhandled intrinsic\");\n \t\t\t    }\n@@ -1155,6 +1158,7 @@ static const struct token f77_keywords[] =\n   { \"rank\", UNOP_INTRINSIC, UNOP_FORTRAN_RANK, false },\n   { \"size\", UNOP_OR_BINOP_INTRINSIC, FORTRAN_ARRAY_SIZE, false },\n   { \"shape\", UNOP_INTRINSIC, UNOP_FORTRAN_SHAPE, false },\n+  { \"loc\", UNOP_INTRINSIC, UNOP_FORTRAN_LOC, false },\n };\n \n /* Implementation of a dynamically expandable buffer for processing input"
    },
    {
      "sha": "0c49420e1f1fe82a7abb562b4f22992437aef600",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=611aa09d994fc5a8a9444075e65f0d6d4ebf4922",
      "patch": "@@ -971,6 +971,25 @@ eval_op_f_rank (struct type *expect_type,\n   return value_from_longest (result_type, ndim);\n }\n \n+/* A helper function for UNOP_FORTRAN_LOC.  */\n+\n+struct value *\n+eval_op_f_loc (struct type *expect_type, struct expression *exp,\n+\t\t     enum noside noside, enum exp_opcode op,\n+\t\t     struct value *arg1)\n+{\n+  struct type *result_type;\n+  if (gdbarch_ptr_bit (exp->gdbarch) == 16)\n+    result_type = builtin_f_type (exp->gdbarch)->builtin_integer_s2;\n+  else if (gdbarch_ptr_bit (exp->gdbarch) == 32)\n+    result_type = builtin_f_type (exp->gdbarch)->builtin_integer;\n+  else\n+    result_type = builtin_f_type (exp->gdbarch)->builtin_integer_s8;\n+\n+  LONGEST result_value = value_address (arg1);\n+  return value_from_longest (result_type, result_value);\n+}\n+\n namespace expr\n {\n "
    },
    {
      "sha": "9dde7bab2c9255f4c9bdc5e83f43d95ff4afb52d",
      "filename": "gdb/std-operator.def",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/std-operator.def",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/std-operator.def",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/std-operator.def?ref=611aa09d994fc5a8a9444075e65f0d6d4ebf4922",
      "patch": "@@ -380,6 +380,7 @@ OP (UNOP_FORTRAN_CEILING)\n OP (UNOP_FORTRAN_ALLOCATED)\n OP (UNOP_FORTRAN_RANK)\n OP (UNOP_FORTRAN_SHAPE)\n+OP (UNOP_FORTRAN_LOC)\n \n /* Two operand builtins.  */\n OP (BINOP_FORTRAN_CMPLX)\n@@ -389,4 +390,4 @@ OP (BINOP_FORTRAN_MODULO)\n OP (FORTRAN_LBOUND)\n OP (FORTRAN_UBOUND)\n OP (FORTRAN_ASSOCIATED)\n-OP (FORTRAN_ARRAY_SIZE)\n\\ No newline at end of file\n+OP (FORTRAN_ARRAY_SIZE)"
    },
    {
      "sha": "9da8a9b64684dbfcf3f461012da3263fad3e03c9",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=611aa09d994fc5a8a9444075e65f0d6d4ebf4922",
      "patch": "@@ -1,3 +1,7 @@\n+2020-03-04  Felix Willgerodt  <felix.willgerodt@intel.com>\n+\n+        * gdb.fortran/intrinsics.exp: Add LOC tests.\n+\n 2021-03-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.fortran/shape.exp: New file."
    },
    {
      "sha": "84f486f4d7b1f82fc61c3713568c625d5e4fff1e",
      "filename": "gdb/testsuite/gdb.fortran/intrinsics.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/testsuite/gdb.fortran/intrinsics.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/611aa09d994fc5a8a9444075e65f0d6d4ebf4922/gdb/testsuite/gdb.fortran/intrinsics.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/intrinsics.exp?ref=611aa09d994fc5a8a9444075e65f0d6d4ebf4922",
      "patch": "@@ -84,3 +84,8 @@ gdb_test \"ptype MODULO (3.0,2.0)\" \"type = real\\\\*8\"\n # Test CMPLX\n \n gdb_test \"p CMPLX (4.1, 2.0)\" \" = \\\\(4.$decimal,2\\\\)\"\n+\n+# Test LOC\n+\n+gdb_test \"p/x LOC(l)\" \"= $hex\"\n+gdb_test \"ptype loc(l)\" \"type = integer(\\\\*$decimal)?\""
    }
  ]
}