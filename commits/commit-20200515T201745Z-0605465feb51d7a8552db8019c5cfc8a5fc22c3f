{
  "sha": "0605465feb51d7a8552db8019c5cfc8a5fc22c3f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDYwNTQ2NWZlYjUxZDdhODU1MmRiODAxOWM1Y2ZjOGE1ZmMyMmMzZg==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-05-05T19:38:38Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-05-15T20:17:45Z"
    },
    "message": "Fix problem that alias can be defined or not depending on the order.\n\nWhen an alias name starts with the name of another alias,\nGDB was accepting to define the aliases in one order (short first, long after),\nbut refused it the other way around.\n\nSo, fix the logic to recognise an already existing alias by using\nlookup_cmd_composition.\n\nAlso, this revealed a bug in lookup_cmd_composition:\nwhen the searched command is a prefix command, lookup_cmd_composition\nwas not returning the fact that a command was found even if the\nTEXT to parse was fully consumed.\n\ngdb/ChangeLog\nYYYY-MM-DD  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* cli/cli-cmds.c (alias_command): Check for an existing alias\n\tusing lookup_cmd_composition, as valid_command_p is too strict\n\tand forbids aliases that are the prefix of an existing alias\n\tor command.\n\t* cli/cli-decode.c (lookup_cmd_composition): Ensure a prefix\n\tcommand is properly recognised as a valid command.\n\ngdb/testsuite/ChangeLog\n2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* gdb.base/alias.exp: Test aliases starting with a prefix of\n\tanother alias.",
    "tree": {
      "sha": "04ab765e122b7c1b032898d9d4ec721069b1cb11",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/04ab765e122b7c1b032898d9d4ec721069b1cb11"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0605465feb51d7a8552db8019c5cfc8a5fc22c3f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0605465feb51d7a8552db8019c5cfc8a5fc22c3f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0605465feb51d7a8552db8019c5cfc8a5fc22c3f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0605465feb51d7a8552db8019c5cfc8a5fc22c3f/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "58e6ac70065131e82e0256f571e5277553096051",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58e6ac70065131e82e0256f571e5277553096051",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/58e6ac70065131e82e0256f571e5277553096051"
    }
  ],
  "stats": {
    "total": 60,
    "additions": 51,
    "deletions": 9
  },
  "files": [
    {
      "sha": "e5708da7d4b8b583f78e148cfb155127e4da7c6f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0605465feb51d7a8552db8019c5cfc8a5fc22c3f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0605465feb51d7a8552db8019c5cfc8a5fc22c3f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0605465feb51d7a8552db8019c5cfc8a5fc22c3f",
      "patch": "@@ -1,3 +1,12 @@\n+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* cli/cli-cmds.c (alias_command): Check for an existing alias\n+\tusing lookup_cmd_composition, as valid_command_p is too strict\n+\tand forbids aliases that are the prefix of an existing alias\n+\tor command.\n+\t* cli/cli-decode.c (lookup_cmd_composition): Ensure a prefix\n+\tcommand is properly recognised as a valid command.\n+\n 2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* unittests/help-doc-selftests.c: Rename to"
    },
    {
      "sha": "8538fadd9c3306778c5b4c2af8b3c543c12276da",
      "filename": "gdb/cli/cli-cmds.c",
      "status": "modified",
      "additions": 23,
      "deletions": 2,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0605465feb51d7a8552db8019c5cfc8a5fc22c3f/gdb/cli/cli-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0605465feb51d7a8552db8019c5cfc8a5fc22c3f/gdb/cli/cli-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-cmds.c?ref=0605465feb51d7a8552db8019c5cfc8a5fc22c3f",
      "patch": "@@ -1694,8 +1694,29 @@ alias_command (const char *args, int from_tty)\n   /* ALIAS must not exist.  */\n   std::string alias_string (argv_to_string (alias_argv, alias_argc));\n   alias = alias_string.c_str ();\n-  if (valid_command_p (alias))\n-    error (_(\"Alias already exists: %s\"), alias);\n+  {\n+    cmd_list_element *alias_cmd, *prefix_cmd, *cmd;\n+\n+    if (lookup_cmd_composition (alias, &alias_cmd, &prefix_cmd, &cmd))\n+      {\n+\tconst char *alias_name = alias_argv[alias_argc-1];\n+\n+\t/* If we found an existing ALIAS_CMD, check that the prefix differ or\n+\t   the name differ.  */\n+\n+\tif (alias_cmd != nullptr\n+\t    && alias_cmd->prefix == prefix_cmd\n+\t    && strcmp (alias_name, alias_cmd->name) == 0)\n+\t  error (_(\"Alias already exists: %s\"), alias);\n+\n+\t/* Check ALIAS differs from the found CMD.  */\n+\n+\tif (cmd->prefix == prefix_cmd\n+\t    && strcmp (alias_name, cmd->name) == 0)\n+\t  error (_(\"Alias %s is the name of an existing command\"), alias);\n+      }\n+  }\n+\n \n   /* If ALIAS is one word, it is an alias for the entire COMMAND.\n      Example: alias spe = set print elements"
    },
    {
      "sha": "78b8901084620c7cf4d0c4e320714b7ef44cc400",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0605465feb51d7a8552db8019c5cfc8a5fc22c3f/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0605465feb51d7a8552db8019c5cfc8a5fc22c3f/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=0605465feb51d7a8552db8019c5cfc8a5fc22c3f",
      "patch": "@@ -1843,16 +1843,15 @@ lookup_cmd_composition (const char *text,\n \n   cur_list = cmdlist;\n \n+  text = skip_spaces (text);\n+\n   while (1)\n     {\n       /* Go through as many command lists as we need to,\n \t to find the command TEXT refers to.  */\n \n       prev_cmd = *cmd;\n \n-      while (*text == ' ' || *text == '\\t')\n-\t(text)++;\n-\n       /* Identify the name of the command.  */\n       len = find_command_name_length (text);\n \n@@ -1861,7 +1860,7 @@ lookup_cmd_composition (const char *text,\n \treturn 0;\n \n       /* TEXT is the start of the first command word to lookup (and\n-\t it's length is len).  We copy this into a local temporary.  */\n+\t it's length is LEN).  We copy this into a local temporary.  */\n \n       command = (char *) alloca (len + 1);\n       memcpy (command, text, len);\n@@ -1890,12 +1889,14 @@ lookup_cmd_composition (const char *text,\n \t    }\n \t  *prefix_cmd = prev_cmd;\n \t}\n-      if ((*cmd)->prefixlist)\n+\n+      text += len;\n+      text = skip_spaces (text);\n+\n+      if ((*cmd)->prefixlist && *text != '\\0')\n \tcur_list = *(*cmd)->prefixlist;\n       else\n \treturn 1;\n-\n-      text += len;\n     }\n }\n "
    },
    {
      "sha": "820af44416cc9eb704763778415c1c91799aa4ea",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0605465feb51d7a8552db8019c5cfc8a5fc22c3f/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0605465feb51d7a8552db8019c5cfc8a5fc22c3f/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=0605465feb51d7a8552db8019c5cfc8a5fc22c3f",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* gdb.base/alias.exp: Test aliases starting with a prefix of\n+\tanother alias.\n+\n 2020-05-15  Gary Benson <gbenson@redhat.com>\n \n \t* gdb.base/info-os.c (main): Add return statement."
    },
    {
      "sha": "9a9557668e57282db4e4f452846f9581e8244004",
      "filename": "gdb/testsuite/gdb.base/alias.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0605465feb51d7a8552db8019c5cfc8a5fc22c3f/gdb/testsuite/gdb.base/alias.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0605465feb51d7a8552db8019c5cfc8a5fc22c3f/gdb/testsuite/gdb.base/alias.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/alias.exp?ref=0605465feb51d7a8552db8019c5cfc8a5fc22c3f",
      "patch": "@@ -116,3 +116,9 @@ gdb_test \"show print elements\" \"Limit .* is 56\\[.\\]\" \"verify 56\"\n \n gdb_test_no_output \"set print max-elements 57\"\n gdb_test \"show print elements\" \"Limit .* is 57\\[.\\]\" \"verify 57\"\n+\n+# Test aliases having a common prefix.\n+gdb_test_no_output \"alias abcd  = backtrace\"\n+gdb_test_no_output \"alias abcde = backtrace\"\n+gdb_test_no_output \"alias fghij = backtrace\"\n+gdb_test_no_output \"alias fghi  = backtrace\""
    }
  ]
}