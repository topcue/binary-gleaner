{
  "sha": "5018ce90c1205d79f29adf954b0fd5e613d08430",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTAxOGNlOTBjMTIwNWQ3OWYyOWFkZjk1NGIwZmQ1ZTYxM2QwODQzMA==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-01-10T20:05:44Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-01-10T20:05:44Z"
    },
    "message": "Make target_ops::has_execution take an 'inferior *' instead of a ptid_t\n\nWith the multi-target work, each inferior will have its own target\nstack, so to call a target method, we'll need to make sure that the\ninferior in question is the current one, otherwise target->beneath()\ncalls will find the target beneath in the wrong inferior.\n\nIn some places, it's much more convenient to be able to check whether\nan inferior has execution without having to switch to it in order to\ncall target_has_execution on the right inferior/target stack, to avoid\nside effects with switching inferior/thread/program space.\n\nThe current target_ops::has_execution method takes a ptid_t as\nparameter, which, in a multi-target world, isn't sufficient to\nidentify the target.  This patch prepares to address that, by changing\nthe parameter to an inferior pointer instead.  From the inferior,\nwe'll be able to query its target stack to tell which target is\nbeneath.\n\nAlso adds a new inferior::has_execution() method to make callers a bit\nmore natural to read.\n\ngdb/ChangeLog:\n2020-01-10  Pedro Alves  <palves@redhat.com>\n\n\t* corelow.c (core_target::has_execution): Change parameter type to\n\tinferior pointer.\n\t* inferior.c (number_of_live_inferiors): Use\n\tinferior::has_execution instead of target_has_execution_1.\n\t* inferior.h (inferior::has_execution): New.\n\t* linux-thread-db.c (thread_db_target::update_thread_list): Use\n\tinferior::has_execution instead of target_has_execution_1.\n\t* process-stratum-target.c\n\t(process_stratum_target::has_execution): Change parameter type to\n\tinferior pointer.  Check the inferior's PID instead of\n\tinferior_ptid.\n\t* process-stratum-target.h\n\t(process_stratum_target::has_execution): Change parameter type to\n\tinferior pointer.\n\t* record-full.c (record_full_core_target::has_execution): Change\n\tparameter type to inferior pointer.\n\t* target.c (target_has_execution_1): Change parameter type to\n\tinferior pointer.\n\t(target_has_execution_current): Adjust.\n\t* target.h (target_ops::has_execution): Change parameter type to\n\tinferior pointer.\n\t(target_has_execution_1): Change parameter type to inferior\n\tpointer.  Change return type to bool.\n\t* tracefile.h (tracefile_target::has_execution): Change parameter\n\ttype to inferior pointer.",
    "tree": {
      "sha": "db2d71399b20052fd76eb3a4ca9bba47485d3eae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/db2d71399b20052fd76eb3a4ca9bba47485d3eae"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5018ce90c1205d79f29adf954b0fd5e613d08430",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5018ce90c1205d79f29adf954b0fd5e613d08430",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5018ce90c1205d79f29adf954b0fd5e613d08430",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5018ce90c1205d79f29adf954b0fd5e613d08430/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "74375d182e992778ef8701278c02a742db6be77e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74375d182e992778ef8701278c02a742db6be77e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/74375d182e992778ef8701278c02a742db6be77e"
    }
  ],
  "stats": {
    "total": 72,
    "additions": 52,
    "deletions": 20
  },
  "files": [
    {
      "sha": "6e97bd46a15877bf8a82796259e5e5cdc5c1e254",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5018ce90c1205d79f29adf954b0fd5e613d08430",
      "patch": "@@ -1,3 +1,31 @@\n+2020-01-10  Pedro Alves  <palves@redhat.com>\n+\n+\t* corelow.c (core_target::has_execution): Change parameter type to\n+\tinferior pointer.\n+\t* inferior.c (number_of_live_inferiors): Use\n+\tinferior::has_execution instead of target_has_execution_1.\n+\t* inferior.h (inferior::has_execution): New.\n+\t* linux-thread-db.c (thread_db_target::update_thread_list): Use\n+\tinferior::has_execution instead of target_has_execution_1.\n+\t* process-stratum-target.c\n+\t(process_stratum_target::has_execution): Change parameter type to\n+\tinferior pointer.  Check the inferior's PID instead of\n+\tinferior_ptid.\n+\t* process-stratum-target.h\n+\t(process_stratum_target::has_execution): Change parameter type to\n+\tinferior pointer.\n+\t* record-full.c (record_full_core_target::has_execution): Change\n+\tparameter type to inferior pointer.\n+\t* target.c (target_has_execution_1): Change parameter type to\n+\tinferior pointer.\n+\t(target_has_execution_current): Adjust.\n+\t* target.h (target_ops::has_execution): Change parameter type to\n+\tinferior pointer.\n+\t(target_has_execution_1): Change parameter type to inferior\n+\tpointer.  Change return type to bool.\n+\t* tracefile.h (tracefile_target::has_execution): Change parameter\n+\ttype to inferior pointer.\n+\n 2020-01-10  Pedro Alves  <palves@redhat.com>\n \n \t* exceptions.c (print_flush): Remove current_top_target() check."
    },
    {
      "sha": "74f660828df2b6b085f5f55b8ea433399303e4ef",
      "filename": "gdb/corelow.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/corelow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/corelow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/corelow.c?ref=5018ce90c1205d79f29adf954b0fd5e613d08430",
      "patch": "@@ -94,7 +94,7 @@ class core_target final : public process_stratum_target\n   bool has_memory () override;\n   bool has_stack () override;\n   bool has_registers () override;\n-  bool has_execution (ptid_t) override { return false; }\n+  bool has_execution (inferior *inf) override { return false; }\n \n   bool info_proc (const char *, enum info_proc_what) override;\n "
    },
    {
      "sha": "3969ace13a848a411b6944ef45cf9cbfe0f7fcf8",
      "filename": "gdb/inferior.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.c?ref=5018ce90c1205d79f29adf954b0fd5e613d08430",
      "patch": "@@ -345,7 +345,7 @@ number_of_live_inferiors (void)\n   int num_inf = 0;\n \n   for (inferior *inf : all_non_exited_inferiors ())\n-    if (target_has_execution_1 (ptid_t (inf->pid)))\n+    if (inf->has_execution ())\n       for (thread_info *tp ATTRIBUTE_UNUSED : inf->non_exited_threads ())\n \t{\n \t  /* Found a live thread in this inferior, go to the next"
    },
    {
      "sha": "fe94a01784df221c5d857ee97f2e2474ce4d2605",
      "filename": "gdb/inferior.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/inferior.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/inferior.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.h?ref=5018ce90c1205d79f29adf954b0fd5e613d08430",
      "patch": "@@ -339,6 +339,9 @@ class inferior : public refcounted_object\n   /* Returns true if we can delete this inferior.  */\n   bool deletable () const { return refcount () == 0; }\n \n+  bool has_execution ()\n+  { return target_has_execution_1 (this); }\n+\n   /* Pointer to next inferior in singly-linked list of inferiors.  */\n   struct inferior *next = NULL;\n "
    },
    {
      "sha": "62908896cc61b10c37ef5ff0cf6f3a73987d63a2",
      "filename": "gdb/linux-thread-db.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/linux-thread-db.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/linux-thread-db.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-thread-db.c?ref=5018ce90c1205d79f29adf954b0fd5e613d08430",
      "patch": "@@ -1622,7 +1622,7 @@ thread_db_target::update_thread_list ()\n \t stop.  That uses thread_db entry points that do not walk\n \t libpthread's thread list, so should be safe, as well as more\n \t efficient.  */\n-      if (target_has_execution_1 (thread->ptid))\n+      if (thread->inf->has_execution ())\n \tcontinue;\n \n       thread_db_find_new_threads_1 (thread);"
    },
    {
      "sha": "658229f0d07ffd36cde9fa7b565108678cdcee0c",
      "filename": "gdb/process-stratum-target.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/process-stratum-target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/process-stratum-target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/process-stratum-target.c?ref=5018ce90c1205d79f29adf954b0fd5e613d08430",
      "patch": "@@ -77,9 +77,9 @@ process_stratum_target::has_registers ()\n }\n \n bool\n-process_stratum_target::has_execution (ptid_t the_ptid)\n+process_stratum_target::has_execution (inferior *inf)\n {\n-  /* If there's no thread selected, then we can't make it run through\n-     hoops.  */\n-  return the_ptid != null_ptid;\n+  /* If there's a process running already, we can't make it run\n+     through hoops.  */\n+  return inf->pid != 0;\n }"
    },
    {
      "sha": "741e67bb6a6bea456ce36cf44093f9a3c99afe6e",
      "filename": "gdb/process-stratum-target.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/process-stratum-target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/process-stratum-target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/process-stratum-target.h?ref=5018ce90c1205d79f29adf954b0fd5e613d08430",
      "patch": "@@ -50,7 +50,7 @@ class process_stratum_target : public target_ops\n   bool has_memory () override;\n   bool has_stack () override;\n   bool has_registers () override;\n-  bool has_execution (ptid_t the_ptid) override;\n+  bool has_execution (inferior *inf) override;\n };\n \n #endif /* !defined (PROCESS_STRATUM_TARGET_H) */"
    },
    {
      "sha": "1fd72d5c7c99cf3f969c8f65171c401c6797021e",
      "filename": "gdb/record-full.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/record-full.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/record-full.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-full.c?ref=5018ce90c1205d79f29adf954b0fd5e613d08430",
      "patch": "@@ -319,7 +319,7 @@ class record_full_core_target final : public record_full_base_target\n \t\t\t struct bp_target_info *,\n \t\t\t enum remove_bp_reason) override;\n \n-  bool has_execution (ptid_t) override;\n+  bool has_execution (inferior *inf) override;\n };\n \n static record_full_target record_full_ops;\n@@ -2244,7 +2244,7 @@ record_full_core_target::remove_breakpoint (struct gdbarch *gdbarch,\n /* \"has_execution\" method for prec over corefile.  */\n \n bool\n-record_full_core_target::has_execution (ptid_t the_ptid)\n+record_full_core_target::has_execution (inferior *inf)\n {\n   return true;\n }"
    },
    {
      "sha": "7e7e875e68c4a357160e687d23a05c7ab06175c0",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=5018ce90c1205d79f29adf954b0fd5e613d08430",
      "patch": "@@ -223,20 +223,20 @@ target_has_registers_1 (void)\n   return 0;\n }\n \n-int\n-target_has_execution_1 (ptid_t the_ptid)\n+bool\n+target_has_execution_1 (inferior *inf)\n {\n   for (target_ops *t = current_top_target (); t != NULL; t = t->beneath ())\n-    if (t->has_execution (the_ptid))\n-      return 1;\n+    if (t->has_execution (inf))\n+      return true;\n \n-  return 0;\n+  return false;\n }\n \n int\n target_has_execution_current (void)\n {\n-  return target_has_execution_1 (inferior_ptid);\n+  return target_has_execution_1 (current_inferior ());\n }\n \n /* This is used to implement the various target commands.  */"
    },
    {
      "sha": "b05a971e60093aa0674c5f66d80d1930958d7f39",
      "filename": "gdb/target.h",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.h?ref=5018ce90c1205d79f29adf954b0fd5e613d08430",
      "patch": "@@ -686,7 +686,7 @@ struct target_ops\n     virtual bool has_memory () { return false; }\n     virtual bool has_stack () { return false; }\n     virtual bool has_registers () { return false; }\n-    virtual bool has_execution (ptid_t) { return false; }\n+    virtual bool has_execution (inferior *inf) { return false; }\n \n     /* Control thread execution.  */\n     virtual thread_control_capabilities get_thread_control_capabilities ()\n@@ -1790,9 +1790,10 @@ extern int target_has_registers_1 (void);\n    case this will become true after to_create_inferior or\n    to_attach.  */\n \n-extern int target_has_execution_1 (ptid_t);\n+extern bool target_has_execution_1 (inferior *inf);\n \n-/* Like target_has_execution_1, but always passes inferior_ptid.  */\n+/* Like target_has_execution_1, but always passes\n+   current_inferior().  */\n \n extern int target_has_execution_current (void);\n "
    },
    {
      "sha": "9c7fdea72970b386bdaaafb387aa411d58bd1c4b",
      "filename": "gdb/tracefile.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/tracefile.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5018ce90c1205d79f29adf954b0fd5e613d08430/gdb/tracefile.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracefile.h?ref=5018ce90c1205d79f29adf954b0fd5e613d08430",
      "patch": "@@ -127,7 +127,7 @@ class tracefile_target : public process_stratum_target\n   bool has_memory () override;\n   bool has_stack () override;\n   bool has_registers () override;\n-  bool has_execution (ptid_t) override { return false; }\n+  bool has_execution (inferior *inf) override { return false; }\n   bool thread_alive (ptid_t ptid) override;\n };\n "
    }
  ]
}