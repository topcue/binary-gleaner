{
  "sha": "5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWFiYTZlYmVmYjk0ODgxNjNjODJlMTk4YjczZWNmMGEwNWE1ZDFmZA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-08-04T15:31:56Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-09-16T10:04:04Z"
    },
    "message": "gdb: Convert language_data::la_exp_desc to a method\n\nConvert language_data::la_exp_desc member variable to a virtual\nmethod language_defn::expression_ops.  The change of names brings this\nmethod more into line with the existing varobj_ops method, that also\nreturns a table of function pointers.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_language_data): Remove la_exp_desc initializer.\n\t(ada_language::expression_ops): New member function.\n\t* c-lang.c (c_language_data): Remove la_exp_desc initializer.\n\t(c_language::expression_ops): New member function.\n\t(cplus_language_data): Remove la_exp_desc initializer.\n\t(cplus_language::expression_ops): New member function.\n\t(asm_language_data): Remove la_exp_desc initializer.\n\t(asm_language::expression_ops): New member function.\n\t(minimal_language_data): Remove la_exp_desc initializer.\n\t(minimal_language::expression_ops): New member function.\n\t* d-lang.c (d_language_data): Remove la_exp_desc initializer.\n\t(d_language::expression_ops): New member function.\n\t* eval.c (evaluate_subexp): Update call to expression_ops.\n\t* expprint.c (print_subexp): Likewise.\n\t(op_name): Likewise.\n\t(dump_subexp_body): Likewise.\n\t* f-lang.c (f_language_data): Remove la_exp_desc initializer.\n\t(f_language::expression_ops): New member function.\n\t* go-lang.c (go_language_data): Remove la_exp_desc initializer.\n\t(go_language::expression_ops): New member function.\n\t* language.c (language_defn::expression_ops): New function.\n\t(unknown_language_data): Remove la_exp_desc initializer.\n\t(auto_language_data): Likewise.\n\t* language.h (language_data): Remove la_exp_desc field.\n\t(language_defn::expression_ops): Declare new member function.\n\t* m2-lang.c (m2_language_data): Remove la_exp_desc initializer.\n\t(m2_language::expression_ops): New member function.\n\t* objc-lang.c (objc_language_data): Remove la_exp_desc\n\tinitializer.\n\t* opencl-lang.c (opencl_language_data): Remove la_exp_desc\n\tinitializer.\n\t(opencl_language::expression_ops): New member function.\n\t* p-lang.c (pascal_language_data): Remove la_exp_desc initializer.\n\t* parse.c (operator_length): Update call to expression_ops.\n\t(exp_iterate): Likewise.\n\t* rust-lang.c (rust_language_data): Remove la_exp_desc\n\tinitializer.\n\t(ruse_language::expression_ops): New member function.",
    "tree": {
      "sha": "06bbdb7350491a54168495262b53e032a12b0691",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/06bbdb7350491a54168495262b53e032a12b0691"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b63a3f3fc4e998b4efd5fd49aa0eb044e9cee261",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b63a3f3fc4e998b4efd5fd49aa0eb044e9cee261",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b63a3f3fc4e998b4efd5fd49aa0eb044e9cee261"
    }
  ],
  "stats": {
    "total": 148,
    "additions": 120,
    "deletions": 28
  },
  "files": [
    {
      "sha": "d646595e731ce812b9de6d619b353383297ce699",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -1,3 +1,44 @@\n+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_language_data): Remove la_exp_desc initializer.\n+\t(ada_language::expression_ops): New member function.\n+\t* c-lang.c (c_language_data): Remove la_exp_desc initializer.\n+\t(c_language::expression_ops): New member function.\n+\t(cplus_language_data): Remove la_exp_desc initializer.\n+\t(cplus_language::expression_ops): New member function.\n+\t(asm_language_data): Remove la_exp_desc initializer.\n+\t(asm_language::expression_ops): New member function.\n+\t(minimal_language_data): Remove la_exp_desc initializer.\n+\t(minimal_language::expression_ops): New member function.\n+\t* d-lang.c (d_language_data): Remove la_exp_desc initializer.\n+\t(d_language::expression_ops): New member function.\n+\t* eval.c (evaluate_subexp): Update call to expression_ops.\n+\t* expprint.c (print_subexp): Likewise.\n+\t(op_name): Likewise.\n+\t(dump_subexp_body): Likewise.\n+\t* f-lang.c (f_language_data): Remove la_exp_desc initializer.\n+\t(f_language::expression_ops): New member function.\n+\t* go-lang.c (go_language_data): Remove la_exp_desc initializer.\n+\t(go_language::expression_ops): New member function.\n+\t* language.c (language_defn::expression_ops): New function.\n+\t(unknown_language_data): Remove la_exp_desc initializer.\n+\t(auto_language_data): Likewise.\n+\t* language.h (language_data): Remove la_exp_desc field.\n+\t(language_defn::expression_ops): Declare new member function.\n+\t* m2-lang.c (m2_language_data): Remove la_exp_desc initializer.\n+\t(m2_language::expression_ops): New member function.\n+\t* objc-lang.c (objc_language_data): Remove la_exp_desc\n+\tinitializer.\n+\t* opencl-lang.c (opencl_language_data): Remove la_exp_desc\n+\tinitializer.\n+\t(opencl_language::expression_ops): New member function.\n+\t* p-lang.c (pascal_language_data): Remove la_exp_desc initializer.\n+\t* parse.c (operator_length): Update call to expression_ops.\n+\t(exp_iterate): Likewise.\n+\t* rust-lang.c (rust_language_data): Remove la_exp_desc\n+\tinitializer.\n+\t(ruse_language::expression_ops): New member function.\n+\n 2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_language_data): Remove la_varobj_ops"
    },
    {
      "sha": "876125c4f188f05ed60f859faa4b6664a48eaf3d",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -13708,7 +13708,6 @@ ada_get_symbol_name_matcher (const lookup_name_info &lookup_name)\n \n extern const struct language_data ada_language_data =\n {\n-  &ada_exp_descriptor,\n   ada_op_print_tab,             /* expression operators for printing */\n };\n \n@@ -14206,6 +14205,11 @@ class ada_language : public language_defn\n   const struct lang_varobj_ops *varobj_ops () const override\n   { return &ada_varobj_ops; }\n \n+  /* See language.h.  */\n+\n+  const struct exp_descriptor *expression_ops () const override\n+  { return &ada_exp_descriptor; }\n+\n protected:\n   /* See language.h.  */\n "
    },
    {
      "sha": "f29f3407e161659ee71036749833b5d903785bac",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 20,
      "deletions": 4,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -875,7 +875,6 @@ const struct exp_descriptor exp_descriptor_c =\n \n extern const struct language_data c_language_data =\n {\n-  &exp_descriptor_c,\n   c_op_print_tab,\t\t/* expression operators for printing */\n };\n \n@@ -947,6 +946,11 @@ class c_language : public language_defn\n \n   enum macro_expansion macro_expansion () const override\n   { return macro_expansion_c; }\n+\n+  /* See language.h.  */\n+\n+  const struct exp_descriptor *expression_ops () const override\n+  { return &exp_descriptor_c; }\n };\n \n /* Single instance of the C language class.  */\n@@ -985,7 +989,6 @@ enum cplus_primitive_types {\n \n extern const struct language_data cplus_language_data =\n {\n-  &exp_descriptor_c,\n   c_op_print_tab,\t\t/* expression operators for printing */\n };\n \n@@ -1179,6 +1182,11 @@ class cplus_language : public language_defn\n   const struct lang_varobj_ops *varobj_ops () const override\n   { return &cplus_varobj_ops; }\n \n+  /* See language.h.  */\n+\n+  const struct exp_descriptor *expression_ops () const override\n+  { return &exp_descriptor_c; }\n+\n protected:\n \n   /* See language.h.  */\n@@ -1198,7 +1206,6 @@ static cplus_language cplus_language_defn;\n \n extern const struct language_data asm_language_data =\n {\n-  &exp_descriptor_c,\n   c_op_print_tab,\t\t/* expression operators for printing */\n };\n \n@@ -1257,6 +1264,11 @@ class asm_language : public language_defn\n \n   enum macro_expansion macro_expansion () const override\n   { return macro_expansion_c; }\n+\n+  /* See language.h.  */\n+\n+  const struct exp_descriptor *expression_ops () const override\n+  { return &exp_descriptor_c; }\n };\n \n /* The single instance of the ASM language class.  */\n@@ -1269,7 +1281,6 @@ static asm_language asm_language_defn;\n \n extern const struct language_data minimal_language_data =\n {\n-  &exp_descriptor_c,\n   c_op_print_tab,\t\t/* expression operators for printing */\n };\n \n@@ -1317,6 +1328,11 @@ class minimal_language : public language_defn\n \n   enum macro_expansion macro_expansion () const override\n   { return macro_expansion_c; }\n+\n+  /* See language.h.  */\n+\n+  const struct exp_descriptor *expression_ops () const override\n+  { return &exp_descriptor_c; }\n };\n \n /* The single instance of the minimal language class.  */"
    },
    {
      "sha": "4b8020e2ec9db4d378ac31d30180d44af7d565f0",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -128,7 +128,6 @@ enum d_primitive_types {\n \n extern const struct language_data d_language_data =\n {\n-  &exp_descriptor_c,\n   d_op_print_tab,\t\t/* Expression operators for printing.  */\n };\n \n@@ -276,6 +275,11 @@ class d_language : public language_defn\n \n   const char *name_of_this () const override\n   { return \"this\"; }\n+\n+  /* See language.h.  */\n+\n+  const struct exp_descriptor *expression_ops () const override\n+  { return &exp_descriptor_c; }\n };\n \n /* Single instance of the D language class.  */"
    },
    {
      "sha": "ead4c5fa546a0849b46a9d329878ff5c7f084a89",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -74,7 +74,7 @@ evaluate_subexp (struct type *expect_type, struct expression *exp,\n       && !thread_stack_temporaries_enabled_p (inferior_thread ()))\n     stack_temporaries.emplace (inferior_thread ());\n \n-  retval = (*exp->language_defn->la_exp_desc->evaluate_exp)\n+  retval = (*exp->language_defn->expression_ops ()->evaluate_exp)\n     (expect_type, exp, pos, noside);\n \n   if (stack_temporaries.has_value ()"
    },
    {
      "sha": "8cca5b4f92cba05a152f3ca0ecf24c924c41fd38",
      "filename": "gdb/expprint.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/expprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/expprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expprint.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -50,7 +50,8 @@ void\n print_subexp (struct expression *exp, int *pos,\n \t      struct ui_file *stream, enum precedence prec)\n {\n-  exp->language_defn->la_exp_desc->print_subexp (exp, pos, stream, prec);\n+  exp->language_defn->expression_ops ()->print_subexp (exp, pos, stream,\n+\t\t\t\t\t\t       prec);\n }\n \n /* Standard implementation of print_subexp for use in language_defn\n@@ -692,7 +693,7 @@ op_name (struct expression *exp, enum exp_opcode opcode)\n \t\t unsigned (opcode));\n       return cell;\n     }\n-  return exp->language_defn->la_exp_desc->op_name (opcode);\n+  return exp->language_defn->expression_ops ()->op_name (opcode);\n }\n \n /* Default name for the standard operator OPCODE (i.e., one defined in\n@@ -793,7 +794,8 @@ dump_subexp (struct expression *exp, struct ui_file *stream, int elt)\n static int\n dump_subexp_body (struct expression *exp, struct ui_file *stream, int elt)\n {\n-  return exp->language_defn->la_exp_desc->dump_subexp_body (exp, stream, elt);\n+  return exp->language_defn->expression_ops ()->dump_subexp_body (exp, stream,\n+\t\t\t\t\t\t\t\t  elt);\n }\n \n /* Default value for subexp_body in exp_descriptor vector.  */"
    },
    {
      "sha": "2bf046d64f9de41ee4654dd1ab149e941ad411cc",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -486,7 +486,6 @@ static const struct exp_descriptor exp_descriptor_f =\n \n extern const struct language_data f_language_data =\n {\n-  &exp_descriptor_f,\n   f_op_print_tab,\t\t/* expression operators for printing */\n };\n \n@@ -732,6 +731,11 @@ class f_language : public language_defn\n   enum array_ordering array_ordering () const override\n   { return array_column_major; }\n \n+  /* See language.h.  */\n+\n+  const struct exp_descriptor *expression_ops () const override\n+  { return &exp_descriptor_f; }\n+\n protected:\n \n   /* See language.h.  */"
    },
    {
      "sha": "eacc4debf42167e0efa52862073f7ccd9b6c7309",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -508,7 +508,6 @@ enum go_primitive_types {\n \n extern const struct language_data go_language_data =\n {\n-  &exp_descriptor_c,\n   go_op_print_tab,\t\t/* Expression operators for printing.  */\n };\n \n@@ -637,6 +636,11 @@ class go_language : public language_defn\n \n   bool store_sym_names_in_linkage_form_p () const override\n   { return true; }\n+\n+  /* See language.h.  */\n+\n+  const struct exp_descriptor *expression_ops () const override\n+  { return &exp_descriptor_c; }\n };\n \n /* Single instance of the Go language class.  */"
    },
    {
      "sha": "b467512e80dba2d5f785343a7daf5b04a11564b2",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -774,6 +774,14 @@ language_defn::varobj_ops () const\n   return &c_varobj_ops;\n }\n \n+/* See language.h.  */\n+\n+const struct exp_descriptor *\n+language_defn::expression_ops () const\n+{\n+  return &exp_descriptor_standard;\n+}\n+\n /* Return true if TYPE is a string type, otherwise return false.  This\n    default implementation only detects TYPE_CODE_STRING.  */\n \n@@ -808,7 +816,6 @@ unknown_language_arch_info (struct gdbarch *gdbarch,\n \n extern const struct language_data unknown_language_data =\n {\n-  &exp_descriptor_standard,\n   unk_op_print_tab,\t\t/* expression operators for printing */\n };\n \n@@ -940,7 +947,6 @@ static unknown_language unknown_language_defn;\n \n extern const struct language_data auto_language_data =\n {\n-  &exp_descriptor_standard,\n   unk_op_print_tab,\t\t/* expression operators for printing */\n };\n "
    },
    {
      "sha": "cfb3461a8cdc8a7db41cb8bf7a991fd11233a879",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -168,11 +168,6 @@ extern const char *default_word_break_characters (void);\n \n struct language_data\n   {\n-    /* Definitions related to expression printing, prefixifying, and\n-       dumping.  */\n-\n-    const struct exp_descriptor *la_exp_desc;\n-\n     /* Table for printing expressions.  */\n \n     const struct op_print *la_op_print_tab;\n@@ -567,6 +562,11 @@ struct language_defn : language_data\n \n   virtual const struct lang_varobj_ops *varobj_ops () const;\n \n+  /* Definitions related to expression printing, prefixifying, and\n+     dumping.  */\n+\n+  virtual const struct exp_descriptor *expression_ops () const;\n+\n protected:\n \n   /* This is the overridable part of the GET_SYMBOL_NAME_MATCHER method."
    },
    {
      "sha": "b41d0b48d6e6045cd2e888a9a04fd2c3a2297a00",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -199,7 +199,6 @@ const struct exp_descriptor exp_descriptor_modula2 =\n \n extern const struct language_data m2_language_data =\n {\n-  &exp_descriptor_modula2,\n   m2_op_print_tab,\t\t/* expression operators for printing */\n };\n \n@@ -444,6 +443,11 @@ class m2_language : public language_defn\n \n   bool range_checking_on_by_default () const override\n   { return true; }\n+\n+  /* See language.h.  */\n+\n+  const struct exp_descriptor *expression_ops () const override\n+  { return &exp_descriptor_modula2; }\n };\n \n /* Single instance of the M2 language.  */"
    },
    {
      "sha": "e78e0871aa9cfba31610819d8f6ae0ddd0e66e63",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -323,7 +323,6 @@ static const struct op_print objc_op_print_tab[] =\n \n extern const struct language_data objc_language_data =\n {\n-  &exp_descriptor_standard,\n   objc_op_print_tab,\t\t/* Expression operators for printing */\n };\n "
    },
    {
      "sha": "e7186ebbf3f31b1b329c79650ee140bce78c3f4c",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -1006,7 +1006,6 @@ const struct exp_descriptor exp_descriptor_opencl =\n /* Constant data representing the OpenCL language.  */\n extern const struct language_data opencl_language_data =\n {\n-  &exp_descriptor_opencl,\n   c_op_print_tab,\t\t/* expression operators for printing */\n };\n \n@@ -1070,6 +1069,11 @@ class opencl_language : public language_defn\n \n   enum macro_expansion macro_expansion () const override\n   { return macro_expansion_c; }\n+\n+  /* See language.h.  */\n+\n+  const struct exp_descriptor *expression_ops () const override\n+  { return &exp_descriptor_opencl; }\n };\n \n /* Single instance of the OpenCL language class.  */"
    },
    {
      "sha": "1acd591d41c92481be36722ac93924ba3517b44c",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -252,7 +252,6 @@ enum pascal_primitive_types {\n \n extern const struct language_data pascal_language_data =\n {\n-  &exp_descriptor_standard,\n   pascal_op_print_tab,\t\t/* expression operators for printing */\n };\n "
    },
    {
      "sha": "37bafe4cf2d3b453d63c53e561093efb074eb6e6",
      "filename": "gdb/parse.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/parse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/parse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/parse.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -762,8 +762,8 @@ void\n operator_length (const struct expression *expr, int endpos, int *oplenp,\n \t\t int *argsp)\n {\n-  expr->language_defn->la_exp_desc->operator_length (expr, endpos,\n-\t\t\t\t\t\t     oplenp, argsp);\n+  expr->language_defn->expression_ops ()->operator_length (expr, endpos,\n+\t\t\t\t\t\t\t   oplenp, argsp);\n }\n \n /* Default value for operator_length in exp_descriptor vectors.  */\n@@ -1374,8 +1374,9 @@ exp_iterate (struct expression *exp,\n       gdb_assert (oplen > 0);\n \n       pos = endpos - oplen;\n-      if (exp->language_defn->la_exp_desc->operator_check (exp, pos,\n-\t\t\t\t\t\t\t   objfile_func, data))\n+      if (exp->language_defn->expression_ops ()->operator_check (exp, pos,\n+\t\t\t\t\t\t\t\t objfile_func,\n+\t\t\t\t\t\t\t\t data))\n \treturn 1;\n \n       endpos = pos;"
    },
    {
      "sha": "8c952e394fbc7b71c6f08e9b8f319664c26f2fcb",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "patch": "@@ -1901,7 +1901,6 @@ static const struct exp_descriptor exp_descriptor_rust =\n \n extern const struct language_data rust_language_data =\n {\n-  &exp_descriptor_rust,\n   c_op_print_tab,\t\t/* expression operators for printing */\n };\n \n@@ -2149,6 +2148,11 @@ class rust_language : public language_defn\n \n   bool range_checking_on_by_default () const override\n   { return true; }\n+\n+  /* See language.h.  */\n+\n+  const struct exp_descriptor *expression_ops () const override\n+  { return &exp_descriptor_rust; }\n };\n \n /* Single instance of the Rust language class.  */"
    }
  ]
}