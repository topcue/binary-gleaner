{
  "sha": "3b336828de914a39741339b5341b88aa003d7225",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2IzMzY4MjhkZTkxNGEzOTc0MTMzOWI1MzQxYjg4YWEwMDNkNzIyNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-03-08T20:59:27Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-03-14T11:47:11Z"
    },
    "message": "Avoid a crash in source_cache::extract_lines\n\nIf the first requested line is larger than the number of lines in the\nsource buffer, source_cache::extract_lines could crash, because it\nwould try to pass string::npos\" to string::substr.\n\nThis patch avoids the crash by checking for this case.\n\nThis version of the patch changes get_source_lines to return\nstd::string.\n\ngdb/ChangeLog\n2019-03-14  Tom Tromey  <tromey@adacore.com>\n\n\t* source-cache.h (class source_cache) <get_source_lines>: Return\n\tstd::string.\n\t* source-cache.c (source_cache::extract_lines): Handle case where\n\tfirst_pos==npos.  Return std::string.\n\t(source_cache::get_source_lines): Update.",
    "tree": {
      "sha": "78239e64e7f5b42b525f31c45c9deeed2a64489a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/78239e64e7f5b42b525f31c45c9deeed2a64489a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3b336828de914a39741339b5341b88aa003d7225",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b336828de914a39741339b5341b88aa003d7225",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3b336828de914a39741339b5341b88aa003d7225",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b336828de914a39741339b5341b88aa003d7225/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d085f98901ccd6c9764b93d3983f3c7797addc4f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d085f98901ccd6c9764b93d3983f3c7797addc4f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d085f98901ccd6c9764b93d3983f3c7797addc4f"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 25,
    "deletions": 11
  },
  "files": [
    {
      "sha": "50cbd2ed70e4080cb38bbc958d81aaa78e4bb3c7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b336828de914a39741339b5341b88aa003d7225/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b336828de914a39741339b5341b88aa003d7225/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3b336828de914a39741339b5341b88aa003d7225",
      "patch": "@@ -1,3 +1,11 @@\n+2019-03-14  Tom Tromey  <tromey@adacore.com>\n+\n+\t* source-cache.h (class source_cache) <get_source_lines>: Return\n+\tstd::string.\n+\t* source-cache.c (source_cache::extract_lines): Handle case where\n+\tfirst_pos==npos.  Return std::string.\n+\t(source_cache::get_source_lines): Update.\n+\n 2019-03-14  Tom Tromey  <tromey@adacore.com>\n \n \t* NEWS: Add item for \"style sources\" commands."
    },
    {
      "sha": "1ed2601c61459a96e1500abf4302bb07437e49a0",
      "filename": "gdb/source-cache.c",
      "status": "modified",
      "additions": 13,
      "deletions": 8,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b336828de914a39741339b5341b88aa003d7225/gdb/source-cache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b336828de914a39741339b5341b88aa003d7225/gdb/source-cache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source-cache.c?ref=3b336828de914a39741339b5341b88aa003d7225",
      "patch": "@@ -84,9 +84,9 @@ source_cache::get_plain_source_lines (struct symtab *s, int first_line,\n \n /* See source-cache.h.  */\n \n-bool\n+std::string\n source_cache::extract_lines (const struct source_text &text, int first_line,\n-\t\t\t     int last_line, std::string *lines)\n+\t\t\t     int last_line)\n {\n   int lineno = 1;\n   std::string::size_type pos = 0;\n@@ -102,16 +102,17 @@ source_cache::extract_lines (const struct source_text &text, int first_line,\n       pos = new_pos;\n       if (lineno == last_line || pos == std::string::npos)\n \t{\n+\t  if (first_pos == std::string::npos)\n+\t    return {};\n \t  if (pos == std::string::npos)\n \t    pos = text.contents.size ();\n-\t  *lines = text.contents.substr (first_pos, pos - first_pos);\n-\t  return true;\n+\t  return text.contents.substr (first_pos, pos - first_pos);\n \t}\n       ++lineno;\n       ++pos;\n     }\n \n-  return false;\n+  return {};\n }\n \n #ifdef HAVE_SOURCE_HIGHLIGHT\n@@ -187,7 +188,10 @@ source_cache::get_source_lines (struct symtab *s, int first_line,\n       for (const auto &item : m_source_map)\n \t{\n \t  if (item.fullname == fullname)\n-\t    return extract_lines (item, first_line, last_line, lines);\n+\t    {\n+\t      *lines = extract_lines (item, first_line, last_line);\n+\t      return true;\n+\t    }\n \t}\n \n       const char *lang_name = get_language_name (SYMTAB_LANGUAGE (s));\n@@ -208,8 +212,9 @@ source_cache::get_source_lines (struct symtab *s, int first_line,\n \t      if (m_source_map.size () > MAX_ENTRIES)\n \t\tm_source_map.erase (m_source_map.begin ());\n \n-\t      return extract_lines (m_source_map.back (), first_line,\n-\t\t\t\t    last_line, lines);\n+\t      *lines = extract_lines (m_source_map.back (), first_line,\n+\t\t\t\t      last_line);\n+\t      return true;\n \t    }\n \t}\n     }"
    },
    {
      "sha": "e2e25a170fd2b30fb9d1b048c3791094de52a1db",
      "filename": "gdb/source-cache.h",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b336828de914a39741339b5341b88aa003d7225/gdb/source-cache.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b336828de914a39741339b5341b88aa003d7225/gdb/source-cache.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source-cache.h?ref=3b336828de914a39741339b5341b88aa003d7225",
      "patch": "@@ -65,9 +65,10 @@ class source_cache\n \t\t\t       int last_line, std::string *lines_out);\n   /* A helper function for get_plain_source_lines that extracts the\n      desired source lines from TEXT, putting them into LINES_OUT.  The\n-     arguments and return value are as for get_source_lines.  */\n-  bool extract_lines (const struct source_text &text, int first_line,\n-\t\t      int last_line, std::string *lines_out);\n+     arguments are as for get_source_lines.  The return value is the\n+     desired lines.  */\n+  std::string extract_lines (const struct source_text &text, int first_line,\n+\t\t\t     int last_line);\n \n   /* The contents of the cache.  */\n   std::vector<source_text> m_source_map;"
    }
  ]
}