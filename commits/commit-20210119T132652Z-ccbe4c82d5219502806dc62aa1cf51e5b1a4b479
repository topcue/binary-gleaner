{
  "sha": "ccbe4c82d5219502806dc62aa1cf51e5b1a4b479",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2NiZTRjODJkNTIxOTUwMjgwNmRjNjJhYTFjZjUxZTViMWE0YjQ3OQ==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2020-12-23T19:06:11Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-01-19T13:26:52Z"
    },
    "message": "Use gdb::array_view for setting value bytes in trad-frame\n\nThis patch updates the functions setting value bytes in trad-frame to use\na gdb::array_view instead of passing a buffer and a size.\n\ngdb/ChangeLog:\n\n2021-01-19  Luis Machado  <luis.machado@linaro.org>\n\n\t* aarch64-linux-tdep.c (aarch64_linux_restore_vreg): Pass in an\n\tarray_view.\n\t* trad-frame.c (trad_frame_set_value_bytes): Use gdb::array_view\n\tinstead of buffer and size.\n\t(trad_frame_set_reg_value_bytes): Likewise.\n\t* trad-frame.h (trad_frame_set_reg_value_bytes): Likewise.\n\t(trad_frame_set_value_bytes): Likewise.",
    "tree": {
      "sha": "5e3b6973a19cee71128da07880c85464b702d5ef",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5e3b6973a19cee71128da07880c85464b702d5ef"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ccbe4c82d5219502806dc62aa1cf51e5b1a4b479",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ccbe4c82d5219502806dc62aa1cf51e5b1a4b479",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ccbe4c82d5219502806dc62aa1cf51e5b1a4b479",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ccbe4c82d5219502806dc62aa1cf51e5b1a4b479/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "26503e2f5eae6019c8649a3dd204a82705efc740",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26503e2f5eae6019c8649a3dd204a82705efc740",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/26503e2f5eae6019c8649a3dd204a82705efc740"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 28,
    "deletions": 19
  },
  "files": [
    {
      "sha": "e31ed4321872bcd2c04256ff2764c786139c53f9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ccbe4c82d5219502806dc62aa1cf51e5b1a4b479/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ccbe4c82d5219502806dc62aa1cf51e5b1a4b479/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ccbe4c82d5219502806dc62aa1cf51e5b1a4b479",
      "patch": "@@ -1,3 +1,13 @@\n+2021-01-19  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* aarch64-linux-tdep.c (aarch64_linux_restore_vreg): Pass in an\n+\tarray_view.\n+\t* trad-frame.c (trad_frame_set_value_bytes): Use gdb::array_view\n+\tinstead of buffer and size.\n+\t(trad_frame_set_reg_value_bytes): Likewise.\n+\t* trad-frame.h (trad_frame_set_reg_value_bytes): Likewise.\n+\t(trad_frame_set_value_bytes): Likewise.\n+\n 2021-01-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* copyright.py (NOT_FSF_LIST): Delete sim/testsuite/sim/bfin/s21.s."
    },
    {
      "sha": "954b05ca74065d07a423516e9fbd6f7e4715d3b8",
      "filename": "gdb/aarch64-linux-tdep.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ccbe4c82d5219502806dc62aa1cf51e5b1a4b479/gdb/aarch64-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ccbe4c82d5219502806dc62aa1cf51e5b1a4b479/gdb/aarch64-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-tdep.c?ref=ccbe4c82d5219502806dc62aa1cf51e5b1a4b479",
      "patch": "@@ -222,27 +222,27 @@ aarch64_linux_restore_vreg (struct trad_frame_cache *cache, int num_regs,\n \n \t  /* Now we can store the correct bytes for the V register.  */\n \t  trad_frame_set_reg_value_bytes (cache, AARCH64_V0_REGNUM + vreg_num,\n-\t\t\t\t\t  buf, V_REGISTER_SIZE);\n+\t\t\t\t\t  {buf, V_REGISTER_SIZE});\n \t  trad_frame_set_reg_value_bytes (cache,\n \t\t\t\t\t  num_regs + AARCH64_Q0_REGNUM\n-\t\t\t\t\t  + vreg_num, buf, Q_REGISTER_SIZE);\n+\t\t\t\t\t  + vreg_num, {buf, Q_REGISTER_SIZE});\n \t  trad_frame_set_reg_value_bytes (cache,\n \t\t\t\t\t  num_regs + AARCH64_D0_REGNUM\n-\t\t\t\t\t  + vreg_num, buf, D_REGISTER_SIZE);\n+\t\t\t\t\t  + vreg_num, {buf, D_REGISTER_SIZE});\n \t  trad_frame_set_reg_value_bytes (cache,\n \t\t\t\t\t  num_regs + AARCH64_S0_REGNUM\n-\t\t\t\t\t  + vreg_num, buf, S_REGISTER_SIZE);\n+\t\t\t\t\t  + vreg_num, {buf, S_REGISTER_SIZE});\n \t  trad_frame_set_reg_value_bytes (cache,\n \t\t\t\t\t  num_regs + AARCH64_H0_REGNUM\n-\t\t\t\t\t  + vreg_num, buf, H_REGISTER_SIZE);\n+\t\t\t\t\t  + vreg_num, {buf, H_REGISTER_SIZE});\n \t  trad_frame_set_reg_value_bytes (cache,\n \t\t\t\t\t  num_regs + AARCH64_B0_REGNUM\n-\t\t\t\t\t  + vreg_num, buf, B_REGISTER_SIZE);\n+\t\t\t\t\t  + vreg_num, {buf, B_REGISTER_SIZE});\n \n \t  if (has_sve)\n \t    trad_frame_set_reg_value_bytes (cache,\n \t\t\t\t\t    num_regs + AARCH64_SVE_V0_REGNUM\n-\t\t\t\t\t    + vreg_num, buf, V_REGISTER_SIZE);\n+\t\t\t\t\t    + vreg_num, {buf, V_REGISTER_SIZE});\n \t}\n       return;\n     }"
    },
    {
      "sha": "53bd097a2b34b2abceec1f972cebf8f3721dceef",
      "filename": "gdb/trad-frame.c",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ccbe4c82d5219502806dc62aa1cf51e5b1a4b479/gdb/trad-frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ccbe4c82d5219502806dc62aa1cf51e5b1a4b479/gdb/trad-frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/trad-frame.c?ref=ccbe4c82d5219502806dc62aa1cf51e5b1a4b479",
      "patch": "@@ -229,26 +229,25 @@ trad_frame_set_unknown (trad_frame_saved_reg this_saved_regs[],\n \n void\n trad_frame_set_value_bytes (trad_frame_saved_reg this_saved_regs[],\n-\t\t\t    int regnum, const gdb_byte *bytes,\n-\t\t\t    size_t size)\n+\t\t\t    int regnum,\n+\t\t\t    gdb::array_view<const gdb_byte> bytes)\n {\n   /* Allocate the space and copy the data bytes.  */\n-  gdb_byte *data = FRAME_OBSTACK_CALLOC (size, gdb_byte);\n-  memcpy (data, bytes, size);\n+  gdb_byte *data = FRAME_OBSTACK_CALLOC (bytes.size (), gdb_byte);\n+  memcpy (data, bytes.data (), bytes.size ());\n   this_saved_regs[regnum].set_value_bytes (data);\n }\n \n /* See trad-frame.h.  */\n \n void\n trad_frame_set_reg_value_bytes (struct trad_frame_cache *this_trad_cache,\n-\t\t\t\tint regnum, const gdb_byte *bytes,\n-\t\t\t\tsize_t size)\n+\t\t\t\tint regnum,\n+\t\t\t\tgdb::array_view<const gdb_byte> bytes)\n {\n   /* External interface for users of trad_frame_cache\n      (who cannot access the prev_regs object directly).  */\n-  trad_frame_set_value_bytes (this_trad_cache->prev_regs, regnum, bytes,\n-\t\t\t      size);\n+  trad_frame_set_value_bytes (this_trad_cache->prev_regs, regnum, bytes);\n }\n \n "
    },
    {
      "sha": "dc29bab979721f3e4a9af22a686c1ab05968c282",
      "filename": "gdb/trad-frame.h",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ccbe4c82d5219502806dc62aa1cf51e5b1a4b479/gdb/trad-frame.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ccbe4c82d5219502806dc62aa1cf51e5b1a4b479/gdb/trad-frame.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/trad-frame.h?ref=ccbe4c82d5219502806dc62aa1cf51e5b1a4b479",
      "patch": "@@ -55,8 +55,8 @@ void trad_frame_set_reg_value (struct trad_frame_cache *this_cache,\n /* Given the cache in THIS_TRAD_CACHE, set the value of REGNUM to the bytes\n    contained in BYTES with size SIZE.  */\n void trad_frame_set_reg_value_bytes (struct trad_frame_cache *this_trad_cache,\n-\t\t\t\t     int regnum, const gdb_byte *bytes,\n-\t\t\t\t     size_t size);\n+\t\t\t\t     int regnum,\n+\t\t\t\t     gdb::array_view<const gdb_byte> bytes);\n \n struct value *trad_frame_get_register (struct trad_frame_cache *this_trad_cache,\n \t\t\t\t       struct frame_info *this_frame,\n@@ -204,8 +204,8 @@ void trad_frame_set_unknown (trad_frame_saved_reg this_saved_regs[],\n /* Encode REGNUM value in the trad-frame as a sequence of bytes.  This is\n    useful when the value is larger than what primitive types can hold.  */\n void trad_frame_set_value_bytes (trad_frame_saved_reg this_saved_regs[],\n-\t\t\t\t int regnum, const gdb_byte *bytes,\n-\t\t\t\t size_t size);\n+\t\t\t\t int regnum,\n+\t\t\t\t gdb::array_view<const gdb_byte> bytes);\n \n /* Convenience functions, return non-zero if the register has been\n    encoded as specified.  */"
    }
  ]
}