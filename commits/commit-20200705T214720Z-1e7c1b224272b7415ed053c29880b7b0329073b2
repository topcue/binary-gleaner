{
  "sha": "1e7c1b224272b7415ed053c29880b7b0329073b2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWU3YzFiMjI0MjcyYjc0MTVlZDA1M2MyOTg4MGI3YjAzMjkwNzNiMg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-07-05T21:47:20Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-07-05T21:47:20Z"
    },
    "message": "[gdb/build,c++17] Fix use of deprecated std::uncaught_exception\n\nWhen compiling gdb with -std=gnu++17, we run into:\n...\n../../gdb/inferior.h: In member function \u2018void \\\n  infcall_suspend_state_deleter::operator()(infcall_suspend_state*) const\u2019:\n../../gdb/inferior.h:83:12: error: \u2018bool std::uncaught_exception()\u2019 is \\\n  deprecated [-Werror=deprecated-declarations]\n   83 |  if (!std::uncaught_exception ())\n...\n\nFix this by rewriting using std::uncaught_exceptions.\n\nTested on x86_64-linux with gcc 9.3.1 and -std=gnu17/gnu++17.\n\nTested with test-case from RFC patch\nhttps://sourceware.org/pipermail/gdb-patches/2020-June/169970.html.\n\ngdb/ChangeLog:\n\n2020-07-05  Tom de Vries  <tdevries@suse.de>\n\n\tPR build/26187\n\t* inferior.h (struct infcall_suspend_state_deleter): If available, use\n\tstd::uncaught_exceptions instead of deprecated\n\tstd::uncaught_exception.",
    "tree": {
      "sha": "667a9ef7cd8ed955b27001e9646e27c3b1d2be7f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/667a9ef7cd8ed955b27001e9646e27c3b1d2be7f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1e7c1b224272b7415ed053c29880b7b0329073b2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e7c1b224272b7415ed053c29880b7b0329073b2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1e7c1b224272b7415ed053c29880b7b0329073b2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e7c1b224272b7415ed053c29880b7b0329073b2/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "983d1fb49c531786021f5c649ac3cbf8e82db632",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/983d1fb49c531786021f5c649ac3cbf8e82db632",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/983d1fb49c531786021f5c649ac3cbf8e82db632"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 16,
    "deletions": 1
  },
  "files": [
    {
      "sha": "21dc3e2b2f9409090f9d9e7be321bd2de3f5d502",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e7c1b224272b7415ed053c29880b7b0329073b2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e7c1b224272b7415ed053c29880b7b0329073b2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1e7c1b224272b7415ed053c29880b7b0329073b2",
      "patch": "@@ -1,3 +1,10 @@\n+2020-07-05  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR build/26187\n+\t* inferior.h (struct infcall_suspend_state_deleter): If available, use\n+\tstd::uncaught_exceptions instead of deprecated\n+\tstd::uncaught_exception.\n+\n 2020-07-02  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* macroexp.h (macro_stringify): Return"
    },
    {
      "sha": "606cece6c0b33a017d9cfb759a88a8cf007309fb",
      "filename": "gdb/inferior.h",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e7c1b224272b7415ed053c29880b7b0329073b2/gdb/inferior.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e7c1b224272b7415ed053c29880b7b0329073b2/gdb/inferior.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.h?ref=1e7c1b224272b7415ed053c29880b7b0329073b2",
      "patch": "@@ -21,6 +21,8 @@\n #if !defined (INFERIOR_H)\n #define INFERIOR_H 1\n \n+#include <exception>\n+\n struct target_waitstatus;\n struct frame_info;\n struct ui_file;\n@@ -80,7 +82,13 @@ struct infcall_suspend_state_deleter\n \t/* If we are restoring the inferior state due to an exception,\n \t   some error message will be printed.  So, only warn the user\n \t   when we cannot restore during normal execution.  */\n-\tif (!std::uncaught_exception ())\n+\tbool unwinding;\n+#if __cpp_lib_uncaught_exceptions\n+\tunwinding = std::uncaught_exceptions () > 0;\n+#else\n+\tunwinding = std::uncaught_exception ();\n+#endif\n+\tif (!unwinding)\n \t  warning (_(\"Failed to restore inferior state: %s\"), e.what ());\n       }\n   }"
    }
  ]
}