{
  "sha": "7d1441178ac6d5b31e3ebf312012c2d5bfaeec91",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2QxNDQxMTc4YWM2ZDViMzFlM2ViZjMxMjAxMmMyZDViZmFlZWM5MQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-05T13:02:42Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-05T13:03:09Z"
    },
    "message": "gdb: avoid unnecessary string copy in auto_load_objfile_script_1\n\nAssigning the result of STRIP_DRIVE_SPEC to an std::string creates an\nunnecessary copy of the string.  STRIP_DRIVE_SPEC is defined as:\n\n  #define STRIP_DRIVE_SPEC(f) ((f) + 2)\n\nSo if it is passed a \"const char *\", it returns a \"const char *\".  We\ncould use a \"const char *\" intermediary variable instead of an\nstd::string, or (as implemented in this patch) just use it directly in\nthe concatenation right after.\n\ngdb/ChangeLog:\n\n\t* auto-load.c (auto_load_objfile_script_1): Don't use\n\tdebugfile_holder as temporary variable when stripping drive\n\tletter.\n\nChange-Id: If2ccc7a156b22100754d9cdf6778ac7eeb93da4c",
    "tree": {
      "sha": "752eb8287e0296cf2f176b3fbf4659a91345b49a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/752eb8287e0296cf2f176b3fbf4659a91345b49a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7d1441178ac6d5b31e3ebf312012c2d5bfaeec91",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7d1441178ac6d5b31e3ebf312012c2d5bfaeec91",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7d1441178ac6d5b31e3ebf312012c2d5bfaeec91",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7d1441178ac6d5b31e3ebf312012c2d5bfaeec91/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6d96a5946d1ec76fea79bc36aa95d7d3dd304200",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d96a5946d1ec76fea79bc36aa95d7d3dd304200",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6d96a5946d1ec76fea79bc36aa95d7d3dd304200"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 8,
    "deletions": 4
  },
  "files": [
    {
      "sha": "39a2cf352297e6b20756eb2fbef9f4fa744151e2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7d1441178ac6d5b31e3ebf312012c2d5bfaeec91/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7d1441178ac6d5b31e3ebf312012c2d5bfaeec91/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7d1441178ac6d5b31e3ebf312012c2d5bfaeec91",
      "patch": "@@ -1,3 +1,9 @@\n+2020-10-05  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* auto-load.c (auto_load_objfile_script_1): Don't use\n+\tdebugfile_holder as temporary variable when stripping drive\n+\tletter.\n+\n 2020-10-05  Hannes Domani  <ssbssa@yahoo.de>\n \n \t* amd64-windows-tdep.c (amd64_windows_passed_by_integer_register):"
    },
    {
      "sha": "43d007ca5b0334dd12aa2f3f3fd7bfc30aba52c7",
      "filename": "gdb/auto-load.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7d1441178ac6d5b31e3ebf312012c2d5bfaeec91/gdb/auto-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7d1441178ac6d5b31e3ebf312012c2d5bfaeec91/gdb/auto-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/auto-load.c?ref=7d1441178ac6d5b31e3ebf312012c2d5bfaeec91",
      "patch": "@@ -777,10 +777,8 @@ auto_load_objfile_script_1 (struct objfile *objfile, const char *realname,\n \n       /* Convert Windows file name from c:/dir/file to /c/dir/file.  */\n       if (HAS_DRIVE_SPEC (debugfile))\n-\t{\n-\t  debugfile_holder = STRIP_DRIVE_SPEC (debugfile);\n-\t  filename = std::string(\"\\\\\") + debugfile[0] + debugfile_holder;\n-\t}\n+\tfilename = (std::string(\"\\\\\") + debugfile[0]\n+\t\t    + STRIP_DRIVE_SPEC (debugfile));\n \n       for (const gdb::unique_xmalloc_ptr<char> &dir : vec)\n \t{"
    }
  ]
}