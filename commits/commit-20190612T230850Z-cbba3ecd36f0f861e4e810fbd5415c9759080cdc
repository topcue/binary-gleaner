{
  "sha": "cbba3ecd36f0f861e4e810fbd5415c9759080cdc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2JiYTNlY2QzNmYwZjg2MWU0ZTgxMGZiZDU0MTVjOTc1OTA4MGNkYw==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-06-12T23:06:52Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-06-12T23:08:50Z"
    },
    "message": "Make check_for_argument skip whitespace after arg itself\n\nBasically every caller of check_for_argument needs to skip space after\nthe argument.  This patch makes check_for_argument do it itself.\n\nSuggested by Philippe Waroquiers.\n\ngdb/ChangeLog:\n2019-06-13  Pedro Alves <palves@redhat.com>\n\n\t* ax-gdb.c (agent_command_1): Remove skip_spaces call.\n\t* breakpoint.c (watch_maybe_just_location): Remove skip_spaces\n\tcall.\n\t* cli/cli-cmds.c (apropos_command): Remove skip_spaces call.\n\t* cli/cli-utils.c (extract_info_print_args): Remove skip_spaces\n\tcalls.\n\t(check_for_argument): Skip spaces after argument.",
    "tree": {
      "sha": "0ff7941e323a33afd43355872000ab351762f195",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0ff7941e323a33afd43355872000ab351762f195"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cbba3ecd36f0f861e4e810fbd5415c9759080cdc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cbba3ecd36f0f861e4e810fbd5415c9759080cdc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cbba3ecd36f0f861e4e810fbd5415c9759080cdc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b9a3f8429b012b753e30a4222bd8e4cbba019fad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b9a3f8429b012b753e30a4222bd8e4cbba019fad",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b9a3f8429b012b753e30a4222bd8e4cbba019fad"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 15,
    "deletions": 12
  },
  "files": [
    {
      "sha": "538db3a06b760746f00401588cc7128659baede3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cbba3ecd36f0f861e4e810fbd5415c9759080cdc",
      "patch": "@@ -1,3 +1,13 @@\n+2019-06-13  Pedro Alves <palves@redhat.com>\n+\n+\t* ax-gdb.c (agent_command_1): Remove skip_spaces call.\n+\t* breakpoint.c (watch_maybe_just_location): Remove skip_spaces\n+\tcall.\n+\t* cli/cli-cmds.c (apropos_command): Remove skip_spaces call.\n+\t* cli/cli-utils.c (extract_info_print_args): Remove skip_spaces\n+\tcalls.\n+\t(check_for_argument): Skip spaces after argument.\n+\n 2019-06-13  Pedro Alves  <palves@redhat.com>\n \n \t* thread.c (thread_apply_command): Adjust TID parsing."
    },
    {
      "sha": "5872bec47777be0556735329104921e9fa4574a7",
      "filename": "gdb/ax-gdb.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/gdb/ax-gdb.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/gdb/ax-gdb.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ax-gdb.c?ref=cbba3ecd36f0f861e4e810fbd5415c9759080cdc",
      "patch": "@@ -2634,8 +2634,6 @@ agent_command_1 (const char *exp, int eval)\n     {\n       struct linespec_result canonical;\n \n-      exp = skip_spaces (exp);\n-\n       event_location_up location\n \t= new_linespec_location (&exp, symbol_name_match_type::WILD);\n       decode_line_full (location.get (), DECODE_LINE_FUNFIRSTLINE, NULL,"
    },
    {
      "sha": "dce8a0f33f2bf6766222e085b9ca69230d6a13f3",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=cbba3ecd36f0f861e4e810fbd5415c9759080cdc",
      "patch": "@@ -10896,10 +10896,7 @@ watch_maybe_just_location (const char *arg, int accessflag, int from_tty)\n   if (arg\n       && (check_for_argument (&arg, \"-location\", sizeof (\"-location\") - 1)\n \t  || check_for_argument (&arg, \"-l\", sizeof (\"-l\") - 1)))\n-    {\n-      arg = skip_spaces (arg);\n-      just_location = 1;\n-    }\n+    just_location = 1;\n \n   watch_command_1 (arg, accessflag, from_tty, just_location, 0);\n }"
    },
    {
      "sha": "62f4d7f0c5ed5f77118f0758c28c332818e929d9",
      "filename": "gdb/cli/cli-cmds.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/gdb/cli/cli-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/gdb/cli/cli-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-cmds.c?ref=cbba3ecd36f0f861e4e810fbd5415c9759080cdc",
      "patch": "@@ -1381,9 +1381,6 @@ apropos_command (const char *arg, int from_tty)\n {\n   bool verbose = arg && check_for_argument (&arg, \"-v\", 2);\n \n-  if (verbose)\n-    arg = skip_spaces (arg);\n-\n   if (arg == NULL || *arg == '\\0')\n     error (_(\"REGEXP string is empty\"));\n "
    },
    {
      "sha": "a24fe9278c745c65024b0c14b06bf1af7e88cb69",
      "filename": "gdb/cli/cli-utils.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/gdb/cli/cli-utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/gdb/cli/cli-utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-utils.c?ref=cbba3ecd36f0f861e4e810fbd5415c9759080cdc",
      "patch": "@@ -139,7 +139,6 @@ extract_info_print_args (const char **args,\n   /* Check for NAMEREGEXP or -- NAMEREGEXP.  */\n   if (**args != '-' || check_for_argument (args, \"--\", 2))\n     {\n-      *args = skip_spaces (*args);\n       *regexp = *args;\n       *args = NULL;\n       return true;\n@@ -155,7 +154,6 @@ extract_info_print_args (const char **args,\n   if (check_for_argument (args, \"-q\", 2))\n     {\n       *quiet = true;\n-      *args = skip_spaces (*args);\n       return true;\n     }\n \n@@ -459,6 +457,7 @@ check_for_argument (const char **str, const char *arg, int arg_len)\n       && ((*str)[arg_len] == '\\0' || isspace ((*str)[arg_len])))\n     {\n       *str += arg_len;\n+      *str = skip_spaces (*str);\n       return 1;\n     }\n   return 0;"
    },
    {
      "sha": "9425fb4c09d459bc6780db51f6c59c91ed9e4c5f",
      "filename": "gdb/cli/cli-utils.h",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/gdb/cli/cli-utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbba3ecd36f0f861e4e810fbd5415c9759080cdc/gdb/cli/cli-utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-utils.h?ref=cbba3ecd36f0f861e4e810fbd5415c9759080cdc",
      "patch": "@@ -188,7 +188,9 @@ extern std::string extract_arg (const char **arg);\n /* A helper function that looks for an argument at the start of a\n    string.  The argument must also either be at the end of the string,\n    or be followed by whitespace.  Returns 1 if it finds the argument,\n-   0 otherwise.  If the argument is found, it updates *STR.  */\n+   0 otherwise.  If the argument is found, it updates *STR to point\n+   past the argument and past any whitespace following the\n+   argument.  */\n extern int check_for_argument (const char **str, const char *arg, int arg_len);\n \n /* Same, for non-const STR.  */"
    }
  ]
}