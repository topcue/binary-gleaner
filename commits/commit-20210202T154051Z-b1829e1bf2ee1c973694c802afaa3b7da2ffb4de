{
  "sha": "b1829e1bf2ee1c973694c802afaa3b7da2ffb4de",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjE4MjllMWJmMmVlMWM5NzM2OTRjODAyYWZhYTNiN2RhMmZmYjRkZQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-02-02T15:40:51Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-02-02T15:40:51Z"
    },
    "message": "gdb/dwarf: few fixes for handling DW_FORM_{rng,loc}listx\n\nWe hit an assertion when loading the binary from PR 26813.  When fixing\nit, execution goes a up bit further but then hits another assert, and\nanother, and another.  With these fours fixes, I am able to load the\nbinary and get to the prompt.  An error is shown (index pointing outside\nof the section), because the DW_FORM_rnglistx attribute is not read\ncorrectly, but that one is taken care of by the next patch.\n\nThe four fixes are:\n\n- attribute::form_requires_reprocessing needs to handle forms\n  DW_FORM_rnglistx and DW_FORM_loclistx, because set_unsigned_reprocess\n  is called for them in read_attribute_value.\n\n- read_attribute_reprocess must call set_unsigned for them, not\n  set_address.  The parameter of set_address is a CORE_ADDR, meaning\n  it's for program addresses.  Post-reprocess, DW_FORM_rnglistx and\n  DW_FORM_loclistx are offsets into their respective sections\n  (.debug_rnglists and .debug_loclists).  set_unsigned is the current\n  attribute value setter that fits the best.  But perhaps we should have\n  a setter that takes a sect_offset?\n\n- read_attribute_process must call as_unsigned_reprocess instead of\n  as_unsigned to get the pre-reprocess value, otherwise we hit the\n  assert inside as_unsigned that makes sure the attribute doesn't need\n  reprocessing.\n\n- attribute::set_unsigned needs to clear the requires_reprocessing flag,\n  otherwise it stays set when reprocessing DW_FORM_rnglistx and\n  DW_FORM_loclistx attributes.\n\nThere's another assert that we hit once the next patch is applied, but\nsince it's in the same vein as the changes in this patch, I included it\nin this patch:\n\n- attribute::form_is_unsigned must handle form DW_FORM_loclistx,\n  otherwise we hit the assert when trying to call set_unsigned for an\n  attribute of this form.  DW_FORM_rnglistx is already handled.\n\ngdb/ChangeLog:\n\n\tPR gdb/26813\n\t* dwarf2/attribute.h (struct attribute) <set_unsigned>: Clear\n\trequires_reprocessing flag.\n\t* dwarf2/attribute.c (attribute::form_is_unsigned): Handle\n\tDW_FORM_loclistx.\n\t(attribute::form_requires_reprocessing): Handle DW_FORM_rnglistx\n\tand DW_FORM_loclistx.\n\t* dwarf2/read.c (read_attribute_reprocess): Use set_unsigned\n\tinstead of set_address for DW_FORM_loclistx and\n\tDW_FORM_rnglistx.\n\nChange-Id: I06c156fa3913ca98e4e39085f4ef171645b4bc1e",
    "tree": {
      "sha": "ebb2966e4197f2b62c172bcf9d8094d58086a2d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ebb2966e4197f2b62c172bcf9d8094d58086a2d1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b1829e1bf2ee1c973694c802afaa3b7da2ffb4de",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1829e1bf2ee1c973694c802afaa3b7da2ffb4de",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b1829e1bf2ee1c973694c802afaa3b7da2ffb4de",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1829e1bf2ee1c973694c802afaa3b7da2ffb4de/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 31,
    "deletions": 4
  },
  "files": [
    {
      "sha": "4f9944aa0b6755a4caa3783074fe0b3e6de6b7a1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1829e1bf2ee1c973694c802afaa3b7da2ffb4de/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1829e1bf2ee1c973694c802afaa3b7da2ffb4de/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b1829e1bf2ee1c973694c802afaa3b7da2ffb4de",
      "patch": "@@ -1,3 +1,16 @@\n+2021-02-02  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\tPR gdb/26813\n+\t* dwarf2/attribute.h (struct attribute) <set_unsigned>: Clear\n+\trequires_reprocessing flag.\n+\t* dwarf2/attribute.c (attribute::form_is_unsigned): Handle\n+\tDW_FORM_loclistx.\n+\t(attribute::form_requires_reprocessing): Handle DW_FORM_rnglistx\n+\tand DW_FORM_loclistx.\n+\t* dwarf2/read.c (read_attribute_reprocess): Use set_unsigned\n+\tinstead of set_address for DW_FORM_loclistx and\n+\tDW_FORM_rnglistx.\n+\n 2021-02-02  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* dwarf2/read.c (read_loclist_index): Remove bound check for"
    },
    {
      "sha": "b4f188a096e1c991e161eeb44e127c7d3ed154e5",
      "filename": "gdb/dwarf2/attribute.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1829e1bf2ee1c973694c802afaa3b7da2ffb4de/gdb/dwarf2/attribute.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1829e1bf2ee1c973694c802afaa3b7da2ffb4de/gdb/dwarf2/attribute.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/attribute.c?ref=b1829e1bf2ee1c973694c802afaa3b7da2ffb4de",
      "patch": "@@ -179,6 +179,7 @@ attribute::form_is_unsigned () const\n \t  || form == DW_FORM_flag_present\n \t  || form == DW_FORM_udata\n \t  || form == DW_FORM_rnglistx\n+\t  || form == DW_FORM_loclistx\n \t  || form == DW_FORM_ref1\n \t  || form == DW_FORM_ref2\n \t  || form == DW_FORM_ref4\n@@ -197,7 +198,9 @@ attribute::form_requires_reprocessing () const\n \t  || form == DW_FORM_strx4\n \t  || form == DW_FORM_GNU_str_index\n \t  || form == DW_FORM_addrx\n-\t  || form == DW_FORM_GNU_addr_index);\n+\t  || form == DW_FORM_GNU_addr_index\n+\t  || form == DW_FORM_rnglistx\n+\t  || form == DW_FORM_loclistx);\n }\n \n /* See attribute.h.  */"
    },
    {
      "sha": "56776d64ed345d2cb2d5aa44071a176a12f6881f",
      "filename": "gdb/dwarf2/attribute.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1829e1bf2ee1c973694c802afaa3b7da2ffb4de/gdb/dwarf2/attribute.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1829e1bf2ee1c973694c802afaa3b7da2ffb4de/gdb/dwarf2/attribute.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/attribute.h?ref=b1829e1bf2ee1c973694c802afaa3b7da2ffb4de",
      "patch": "@@ -223,6 +223,7 @@ struct attribute\n   {\n     gdb_assert (form_is_unsigned ());\n     u.unsnd = unsnd;\n+    requires_reprocessing = 0;\n   }\n \n   /* Temporarily set this attribute to an unsigned integer.  This is"
    },
    {
      "sha": "4fe4f94a6eef46fa0f2587b21d2b08992f953ffd",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 13,
      "deletions": 3,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1829e1bf2ee1c973694c802afaa3b7da2ffb4de/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1829e1bf2ee1c973694c802afaa3b7da2ffb4de/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=b1829e1bf2ee1c973694c802afaa3b7da2ffb4de",
      "patch": "@@ -20315,10 +20315,20 @@ read_attribute_reprocess (const struct die_reader_specs *reader,\n \t\t\t\t\t    attr->as_unsigned_reprocess ()));\n \tbreak;\n       case DW_FORM_loclistx:\n-\tattr->set_address (read_loclist_index (cu, attr->as_unsigned ()));\n-\t break;\n+\t{\n+\t  CORE_ADDR loclists_sect_off\n+\t    = read_loclist_index (cu, attr->as_unsigned_reprocess ());\n+\n+\t  attr->set_unsigned (loclists_sect_off);\n+\t}\n+\tbreak;\n       case DW_FORM_rnglistx:\n-\tattr->set_address (read_rnglist_index (cu, attr->as_unsigned (), tag));\n+\t{\n+\t  CORE_ADDR rnglists_sect_off\n+\t    = read_rnglist_index (cu, attr->as_unsigned_reprocess (), tag);\n+\n+\t  attr->set_unsigned (rnglists_sect_off);\n+\t}\n \tbreak;\n       case DW_FORM_strx:\n       case DW_FORM_strx1:"
    }
  ]
}