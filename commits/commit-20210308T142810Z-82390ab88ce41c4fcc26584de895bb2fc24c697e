{
  "sha": "82390ab88ce41c4fcc26584de895bb2fc24c697e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODIzOTBhYjg4Y2U0MWM0ZmNjMjY1ODRkZTg5NWJiMmZjMjRjNjk3ZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:10Z"
    },
    "message": "Split out ada_unop_neg\n\nThis splits UNOP_NEG into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_unop_neg): New function.\n\t(ada_evaluate_subexp): Use it.",
    "tree": {
      "sha": "64bfee804afd65dade309fe308752671ee7f0316",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/64bfee804afd65dade309fe308752671ee7f0316"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/82390ab88ce41c4fcc26584de895bb2fc24c697e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82390ab88ce41c4fcc26584de895bb2fc24c697e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/82390ab88ce41c4fcc26584de895bb2fc24c697e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82390ab88ce41c4fcc26584de895bb2fc24c697e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "62d4bd947e056a28c2b5086fa82a84b0721b3c97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62d4bd947e056a28c2b5086fa82a84b0721b3c97",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/62d4bd947e056a28c2b5086fa82a84b0721b3c97"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 20,
    "deletions": 7
  },
  "files": [
    {
      "sha": "7d959f2a2897e10c7de5bf1025fbc4e3878d22fe",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82390ab88ce41c4fcc26584de895bb2fc24c697e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82390ab88ce41c4fcc26584de895bb2fc24c697e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=82390ab88ce41c4fcc26584de895bb2fc24c697e",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_unop_neg): New function.\n+\t(ada_evaluate_subexp): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (eval_ternop_in_range): New function."
    },
    {
      "sha": "c171e03b339302aac7d012e2f1fde021e8421d18",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 15,
      "deletions": 7,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82390ab88ce41c4fcc26584de895bb2fc24c697e/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82390ab88ce41c4fcc26584de895bb2fc24c697e/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=82390ab88ce41c4fcc26584de895bb2fc24c697e",
      "patch": "@@ -9960,6 +9960,20 @@ eval_ternop_in_range (struct type *expect_type, struct expression *exp,\n \t\t\t    || value_equal (arg2, arg1)));\n }\n \n+/* A helper function for UNOP_NEG.  */\n+\n+static value *\n+ada_unop_neg (struct type *expect_type,\n+\t      struct expression *exp,\n+\t      enum noside noside, enum exp_opcode op,\n+\t      struct value *arg1)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+  unop_promote (exp->language_defn, exp->gdbarch, &arg1);\n+  return value_neg (arg1);\n+}\n+\n /* Implement the evaluate_exp routine in the exp_descriptor structure\n    for the Ada language.  */\n \n@@ -10150,13 +10164,7 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n \n     case UNOP_NEG:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);\n-      if (noside == EVAL_SKIP)\n-\tgoto nosideret;\n-      else\n-\t{\n-\t  unop_promote (exp->language_defn, exp->gdbarch, &arg1);\n-\t  return value_neg (arg1);\n-\t}\n+      return ada_unop_neg (expect_type, exp, noside, op, arg1);\n \n     case BINOP_LOGICAL_AND:\n     case BINOP_LOGICAL_OR:"
    }
  ]
}