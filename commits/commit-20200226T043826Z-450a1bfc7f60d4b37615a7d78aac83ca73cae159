{
  "sha": "450a1bfc7f60d4b37615a7d78aac83ca73cae159",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDUwYTFiZmM3ZjYwZDRiMzc2MTVhN2Q3OGFhYzgzY2E3M2NhZTE1OQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-02-26T04:38:26Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-02-26T04:38:26Z"
    },
    "message": "Move dwarf2_read_addr_index declaration to dwarf2/read.h\n\nThe implementation is in dwarf2/read.c, so the declaration belongs in\ndwarf2/read.h.  Also, move the documentation there.\n\ngdb/ChangeLog:\n\n\t* dwarf2/loc.h (dwarf2_read_addr_index): Move...\n\t* dwarf2/read.h (dwarf2_read_addr_index): ... here.\n\t* dwarf2/read.c (dwarf2_read_addr_index): Move doc to header.",
    "tree": {
      "sha": "e1ea31082193a1b640e99233974b6ff86742621f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e1ea31082193a1b640e99233974b6ff86742621f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/450a1bfc7f60d4b37615a7d78aac83ca73cae159",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/450a1bfc7f60d4b37615a7d78aac83ca73cae159",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/450a1bfc7f60d4b37615a7d78aac83ca73cae159",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/450a1bfc7f60d4b37615a7d78aac83ca73cae159/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e0b317de31ab0e99ef8d14e9f751ae7e7d16abde",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e0b317de31ab0e99ef8d14e9f751ae7e7d16abde",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e0b317de31ab0e99ef8d14e9f751ae7e7d16abde"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 16,
    "deletions": 9
  },
  "files": [
    {
      "sha": "aa4b01bac3b828d70331f03dc4887e6c2f9ec374",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/450a1bfc7f60d4b37615a7d78aac83ca73cae159/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/450a1bfc7f60d4b37615a7d78aac83ca73cae159/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=450a1bfc7f60d4b37615a7d78aac83ca73cae159",
      "patch": "@@ -1,3 +1,9 @@\n+2020-02-25  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* dwarf2/loc.h (dwarf2_read_addr_index): Move...\n+\t* dwarf2/read.h (dwarf2_read_addr_index): ... here.\n+\t* dwarf2/read.c (dwarf2_read_addr_index): Move doc to header.\n+\n 2020-02-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdbtypes.c (create_array_type_with_stride): Handle negative"
    },
    {
      "sha": "dfb6f05525c6733540c8c6b844145bdc9949a2ec",
      "filename": "gdb/dwarf2/loc.h",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/450a1bfc7f60d4b37615a7d78aac83ca73cae159/gdb/dwarf2/loc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/450a1bfc7f60d4b37615a7d78aac83ca73cae159/gdb/dwarf2/loc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/loc.h?ref=450a1bfc7f60d4b37615a7d78aac83ca73cae159",
      "patch": "@@ -138,9 +138,6 @@ void dwarf2_compile_property_to_c (string_file *stream,\n \t\t\t\t   CORE_ADDR address,\n \t\t\t\t   struct symbol *sym);\n \n-CORE_ADDR dwarf2_read_addr_index (struct dwarf2_per_cu_data *per_cu,\n-\t\t\t\t  unsigned int addr_index);\n-\n /* The symbol location baton types used by the DWARF-2 reader (i.e.\n    SYMBOL_LOCATION_BATON for a LOC_COMPUTED symbol).  \"struct\n    dwarf2_locexpr_baton\" is for a symbol with a single location"
    },
    {
      "sha": "37d4af14ea50f6e189325369a9c7f9f9f1c59f36",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/450a1bfc7f60d4b37615a7d78aac83ca73cae159/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/450a1bfc7f60d4b37615a7d78aac83ca73cae159/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=450a1bfc7f60d4b37615a7d78aac83ca73cae159",
      "patch": "@@ -18867,14 +18867,10 @@ read_addr_index_from_leb128 (struct dwarf2_cu *cu, const gdb_byte *info_ptr,\n   return read_addr_index (cu, addr_index);\n }\n \n-/* Given an index in .debug_addr, fetch the value.\n-   NOTE: This can be called during dwarf expression evaluation,\n-   long after the debug information has been read, and thus per_cu->cu\n-   may no longer exist.  */\n+/* See read.h.  */\n \n CORE_ADDR\n-dwarf2_read_addr_index (struct dwarf2_per_cu_data *per_cu,\n-\t\t\tunsigned int addr_index)\n+dwarf2_read_addr_index (dwarf2_per_cu_data *per_cu, unsigned int addr_index)\n {\n   struct dwarf2_per_objfile *dwarf2_per_objfile = per_cu->dwarf2_per_objfile;\n   struct dwarf2_cu *cu = per_cu->cu;"
    },
    {
      "sha": "a3ae412379ac84acb3a794f06e22d7849d3f6a5c",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/450a1bfc7f60d4b37615a7d78aac83ca73cae159/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/450a1bfc7f60d4b37615a7d78aac83ca73cae159/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=450a1bfc7f60d4b37615a7d78aac83ca73cae159",
      "patch": "@@ -529,6 +529,14 @@ extern struct dwz_file *dwarf2_get_dwz_file\n struct type *dwarf2_get_die_type (cu_offset die_offset,\n \t\t\t\t  struct dwarf2_per_cu_data *per_cu);\n \n+/* Given an index in .debug_addr, fetch the value.\n+   NOTE: This can be called during dwarf expression evaluation,\n+   long after the debug information has been read, and thus per_cu->cu\n+   may no longer exist.  */\n+\n+CORE_ADDR dwarf2_read_addr_index (dwarf2_per_cu_data *per_cu,\n+\t\t\t\t  unsigned int addr_index);\n+\n /* When non-zero, dump line number entries as they are read in.  */\n extern unsigned int dwarf_line_debug;\n "
    }
  ]
}