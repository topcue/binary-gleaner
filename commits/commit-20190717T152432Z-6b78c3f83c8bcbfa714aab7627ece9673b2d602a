{
  "sha": "6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmI3OGMzZjgzYzhiY2JmYTcxNGFhYjc2MjdlY2U5NjczYjJkNjAyYQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-07-02T11:06:06Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-07-17T15:24:32Z"
    },
    "message": "gdb: Remove a non-const reference parameter\n\nNon-const reference parameter should be avoided according to the GDB\ncoding standard:\n\n  https://sourceware.org/gdb/wiki/Internals%20GDB-C-Coding-Standards#Avoid_non-const_reference_parameters.2C_use_pointers_instead\n\nThis commit updates the gdbarch method gdbarch_stap_adjust_register,\nand the one implementation i386_stap_adjust_register to avoid using a\nnon-const reference parameter.\n\nI've also removed the kfail from the testsuite for bug 24541, as this\nissue is now resolved.\n\ngdb/ChangeLog:\n\n\tPR breakpoints/24541\n\t* gdbarch.c: Regenerate.\n\t* gdbarch.h: Regenerate.\n\t* gdbarch.sh: Adjust return type and parameter types for\n\t'stap_adjust_register'.\n\t(i386_stap_adjust_register): Adjust signature and return new\n\tregister name.\n\t* stap-probe.c (stap_parse_register_operand): Adjust use of\n\t'gdbarch_stap_adjust_register'.\n\ngdb/testsuite/ChangeLog:\n\n\tPR breakpoints/24541\n\t* gdb.mi/mi-catch-cpp-exceptions.exp: Remove kfail due to 24541.",
    "tree": {
      "sha": "e8224084dbf069be1e592ea23aeefc509ddf1316",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e8224084dbf069be1e592ea23aeefc509ddf1316"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d72a9b85651c872378f6dd732cb578f6f055a9b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d72a9b85651c872378f6dd732cb578f6f055a9b3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d72a9b85651c872378f6dd732cb578f6f055a9b3"
    }
  ],
  "stats": {
    "total": 91,
    "additions": 43,
    "deletions": 48
  },
  "files": [
    {
      "sha": "16d09dc9d405ef9dc5e20b02f9fd544310b1359c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
      "patch": "@@ -1,3 +1,15 @@\n+2019-07-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\tPR breakpoints/24541\n+\t* gdbarch.c: Regenerate.\n+\t* gdbarch.h: Regenerate.\n+\t* gdbarch.sh: Adjust return type and parameter types for\n+\t'stap_adjust_register'.\n+\t(i386_stap_adjust_register): Adjust signature and return new\n+\tregister name.\n+\t* stap-probe.c (stap_parse_register_operand): Adjust use of\n+\t'gdbarch_stap_adjust_register'.\n+\n 2019-07-17  Tom Tromey  <tromey@adacore.com>\n \n \t* s390-linux-nat.c (s390_watch_area): Remove typedef.  Don't"
    },
    {
      "sha": "725b98fcd9f293afc912dca25c6eb2cb743ad0f7",
      "filename": "gdb/gdbarch.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/gdbarch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/gdbarch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.c?ref=6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
      "patch": "@@ -4530,14 +4530,14 @@ gdbarch_stap_adjust_register_p (struct gdbarch *gdbarch)\n   return gdbarch->stap_adjust_register != NULL;\n }\n \n-void\n-gdbarch_stap_adjust_register (struct gdbarch *gdbarch, struct stap_parse_info *p, std::string &regname, int regnum)\n+std::string\n+gdbarch_stap_adjust_register (struct gdbarch *gdbarch, struct stap_parse_info *p, const std::string &regname, int regnum)\n {\n   gdb_assert (gdbarch != NULL);\n   gdb_assert (gdbarch->stap_adjust_register != NULL);\n   if (gdbarch_debug >= 2)\n     fprintf_unfiltered (gdb_stdlog, \"gdbarch_stap_adjust_register called\\n\");\n-  gdbarch->stap_adjust_register (gdbarch, p, regname, regnum);\n+  return gdbarch->stap_adjust_register (gdbarch, p, regname, regnum);\n }\n \n void"
    },
    {
      "sha": "c3556d3841973fa5b5590375940f346d78ee5442",
      "filename": "gdb/gdbarch.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/gdbarch.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/gdbarch.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.h?ref=6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
      "patch": "@@ -1376,8 +1376,8 @@ extern void set_gdbarch_stap_parse_special_token (struct gdbarch *gdbarch, gdbar\n \n extern int gdbarch_stap_adjust_register_p (struct gdbarch *gdbarch);\n \n-typedef void (gdbarch_stap_adjust_register_ftype) (struct gdbarch *gdbarch, struct stap_parse_info *p, std::string &regname, int regnum);\n-extern void gdbarch_stap_adjust_register (struct gdbarch *gdbarch, struct stap_parse_info *p, std::string &regname, int regnum);\n+typedef std::string (gdbarch_stap_adjust_register_ftype) (struct gdbarch *gdbarch, struct stap_parse_info *p, const std::string &regname, int regnum);\n+extern std::string gdbarch_stap_adjust_register (struct gdbarch *gdbarch, struct stap_parse_info *p, const std::string &regname, int regnum);\n extern void set_gdbarch_stap_adjust_register (struct gdbarch *gdbarch, gdbarch_stap_adjust_register_ftype *stap_adjust_register);\n \n /* DTrace related functions."
    },
    {
      "sha": "2f9fbbc56cd78cbc5600a9a310454646dc08b07a",
      "filename": "gdb/gdbarch.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/gdbarch.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/gdbarch.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.sh?ref=6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
      "patch": "@@ -1053,7 +1053,7 @@ M;int;stap_parse_special_token;struct stap_parse_info *p;p\n # replace the register name from %ax to %eax.\n #\n # The rationale for this can be found at PR breakpoints/24541.\n-M;void;stap_adjust_register;struct stap_parse_info *p, std::string \\&regname, int regnum;p, regname, regnum\n+M;std::string;stap_adjust_register;struct stap_parse_info *p, const std::string \\&regname, int regnum;p, regname, regnum\n \n # DTrace related functions.\n "
    },
    {
      "sha": "ccec6d171b71afef6d4a01674e3e3a4020643a7a",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 11,
      "deletions": 14,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
      "patch": "@@ -4389,27 +4389,24 @@ i386_stap_parse_special_token (struct gdbarch *gdbarch,\n /* Implementation of 'gdbarch_stap_adjust_register', as defined in\n    gdbarch.h.  */\n \n-static void\n+static std::string\n i386_stap_adjust_register (struct gdbarch *gdbarch, struct stap_parse_info *p,\n-\t\t\t   std::string &regname, int regnum)\n+\t\t\t   const std::string &regname, int regnum)\n {\n   static const std::unordered_set<std::string> reg_assoc\n     = { \"ax\", \"bx\", \"cx\", \"dx\",\n \t\"si\", \"di\", \"bp\", \"sp\" };\n \n-  if (register_size (gdbarch, regnum) >= TYPE_LENGTH (p->arg_type))\n-    {\n-      /* If we're dealing with a register whose size is greater or\n-\t equal than the size specified by the \"[-]N@\" prefix, then we\n-\t don't need to do anything.  */\n-      return;\n-    }\n+  /* If we are dealing with a register whose size is less than the size\n+     specified by the \"[-]N@\" prefix, and it is one of the registers that\n+     we know has an extended variant available, then use the extended\n+     version of the register instead.  */\n+  if (register_size (gdbarch, regnum) < TYPE_LENGTH (p->arg_type)\n+      && reg_assoc.find (regname) != reg_assoc.end ())\n+    return \"e\" + regname;\n \n-  if (reg_assoc.find (regname) != reg_assoc.end ())\n-    {\n-      /* Use the extended version of the register.  */\n-      regname = \"e\" + regname;\n-    }\n+  /* Otherwise, just use the requested register.  */\n+  return regname;\n }\n \n \f"
    },
    {
      "sha": "b6de873d2c935a42e21c6b19bcb667a3b5959348",
      "filename": "gdb/stap-probe.c",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/stap-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/stap-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stap-probe.c?ref=6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
      "patch": "@@ -774,23 +774,24 @@ stap_parse_register_operand (struct stap_parse_info *p)\n      code would like to perform on the register name.  */\n   if (gdbarch_stap_adjust_register_p (gdbarch))\n     {\n-      std::string oldregname = regname;\n+      std::string newregname\n+\t= gdbarch_stap_adjust_register (gdbarch, p, regname, regnum);\n \n-      gdbarch_stap_adjust_register (gdbarch, p, regname, regnum);\n-\n-      if (regname != oldregname)\n+      if (regname != newregname)\n \t{\n \t  /* This is just a check we perform to make sure that the\n \t     arch-dependent code has provided us with a valid\n \t     register name.  */\n-\t  regnum = user_reg_map_name_to_regnum (gdbarch, regname.c_str (),\n-\t\t\t\t\t\tregname.size ());\n+\t  regnum = user_reg_map_name_to_regnum (gdbarch, newregname.c_str (),\n+\t\t\t\t\t\tnewregname.size ());\n \n \t  if (regnum == -1)\n \t    internal_error (__FILE__, __LINE__,\n \t\t\t    _(\"Invalid register name '%s' after replacing it\"\n \t\t\t      \" (previous name was '%s')\"),\n-\t\t\t    regname.c_str (), oldregname.c_str ());\n+\t\t\t    newregname.c_str (), regname.c_str ());\n+\n+\t  regname = newregname;\n \t}\n     }\n "
    },
    {
      "sha": "4d7c4a7dffb5a6f777d93f7930aaf95e90afbd3f",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
      "patch": "@@ -1,3 +1,8 @@\n+2019-07-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\tPR breakpoints/24541\n+\t* gdb.mi/mi-catch-cpp-exceptions.exp: Remove kfail due to 24541.\n+\n 2019-07-14  Tom de Vries  <tdevries@suse.de>\n \n \tPR testsuite/24760"
    },
    {
      "sha": "9b64fb14f2aa64513af6dcad44dbc56cf3d9f91d",
      "filename": "gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 21,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b78c3f83c8bcbfa714aab7627ece9673b2d602a/gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp?ref=6b78c3f83c8bcbfa714aab7627ece9673b2d602a",
      "patch": "@@ -130,27 +130,7 @@ with_test_prefix \"all with invalid regexp\" {\n     setup_catchpoint \"throw\" \"-r blahblah\"\n     setup_catchpoint \"rethrow\" \"-r woofwoof\"\n     setup_catchpoint \"catch\" \"-r miowmiow\"\n-\n-    # Would like to use 'continue_to_breakpoint_in_main' here, if\n-    # there wasn't a bug that requires a use of kfail.\n-\n-    mi_send_resuming_command \"exec-continue\" \\\n-\t\"exec-continue\"\n-    set testname \"run until breakpoint in main\"\n-    gdb_expect {\n-\t-re \"could not find minimal symbol for typeinfo address.*$mi_gdb_prompt$\" {\n-\t    kfail \"gdb/24541\" \"${testname}\"\n-\t}\n-\t-re \"\\\\*stopped,bkptno=\\\"$decimal\\\",reason=\\\"breakpoint-hit\\\",disp=\\\"keep\\\".*func=\\\"__cxa_throw\\\".*$mi_gdb_prompt$\" {\n-\t    kfail \"gdb/24541\" \"${testname}\"\n-\t}\n-\t-re \"\\\\*stopped,reason=\\\"breakpoint-hit\\\".*func=\\\"main\\\".*line=\\\"${main_lineno}\\\".*$mi_gdb_prompt$\" {\n-\t    pass \"${testname}\"\n-\t}\n-\ttimeout {\n-\t    fail \"${testname} (timeout)\"\n-\t}\n-    }\n+    continue_to_breakpoint_in_main\n }\n \n # Now check that all of the commands with a regexp that does match,"
    }
  ]
}