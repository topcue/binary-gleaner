{
  "sha": "a8654e7d784980cb4596f685964200fcc1164c78",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTg2NTRlN2Q3ODQ5ODBjYjQ1OTZmNjg1OTY0MjAwZmNjMTE2NGM3OA==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-06-21T19:26:25Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-06-24T20:21:07Z"
    },
    "message": "Fixes PR 25475: ensure exec-file-mismatch \"ask\" always asks in case of mismatch.\n\nAs explained in https://sourceware.org/bugzilla/show_bug.cgi?id=25475,\nwhen the currently loaded file has no debug symbol,\nsymbol_file_add_with_addrs does not ask a confirmation to the user\nbefore loading the new symbol file.  The behaviour is not consistent\nwhen symbol_file_add_with_addrs is called due to exec-file-mismatch \"ask\"\nsetting.\n\nThe PR discusses several solutions/approaches.\nThe preferred approach (suggested by Joel) is to ensure that GDB always asks\na confirmation when it loads a new symbol file due to exec-file-mismatch,\nusing a new SYMFILE add-flag.\n\nI tested this manually.  If OK, we can remove the bypass introduced by Tom\nin 6b9374f1, in order to always answer to the 'load' question.\n\ngdb/ChangeLog\n2020-06-24  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* symfile-add-flags.h: New flag SYMFILE_ALWAYS_CONFIRM.\n\t* exec.c (validate_exec_file): If from_tty, set both\n\tSYMFILE_VERBOSE (== from_tty) and SYMFILE_ALWAYS_CONFIRM.\n\t* symfile.c (symbol_file_add_with_addrs): if always_confirm\n\tand from_tty, unconditionally ask a confirmation.",
    "tree": {
      "sha": "370684971b40dbaf07a82222c41dac37d2be9c6f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/370684971b40dbaf07a82222c41dac37d2be9c6f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a8654e7d784980cb4596f685964200fcc1164c78",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8654e7d784980cb4596f685964200fcc1164c78",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a8654e7d784980cb4596f685964200fcc1164c78",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8654e7d784980cb4596f685964200fcc1164c78/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "069057bf0f8f776f7981c94b4e3cbc821342e593",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/069057bf0f8f776f7981c94b4e3cbc821342e593",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/069057bf0f8f776f7981c94b4e3cbc821342e593"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 24,
    "deletions": 5
  },
  "files": [
    {
      "sha": "12ef02bc997d4e7810f5829dac17a597b521d37d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8654e7d784980cb4596f685964200fcc1164c78/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8654e7d784980cb4596f685964200fcc1164c78/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a8654e7d784980cb4596f685964200fcc1164c78",
      "patch": "@@ -1,3 +1,11 @@\n+2020-06-24  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* symfile-add-flags.h: New flag SYMFILE_ALWAYS_CONFIRM.\n+\t* exec.c (validate_exec_file): If from_tty, set both\n+\tSYMFILE_VERBOSE (== from_tty) and SYMFILE_ALWAYS_CONFIRM.\n+\t* symfile.c (symbol_file_add_with_addrs): if always_confirm\n+\tand from_tty, unconditionally ask a confirmation.\n+\n 2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* target-descriptions.c (tdesc_architecture_name): Protect against"
    },
    {
      "sha": "de473fbcb2974d95fec69fccfedbede42e2bbcaa",
      "filename": "gdb/exec.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8654e7d784980cb4596f685964200fcc1164c78/gdb/exec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8654e7d784980cb4596f685964200fcc1164c78/gdb/exec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/exec.c?ref=a8654e7d784980cb4596f685964200fcc1164c78",
      "patch": "@@ -315,7 +315,10 @@ validate_exec_file (int from_tty)\n \t{\n \t  symfile_add_flags add_flags = SYMFILE_MAINLINE;\n \t  if (from_tty)\n-\t    add_flags |= SYMFILE_VERBOSE;\n+\t    {\n+\t      add_flags |= SYMFILE_VERBOSE;\n+\t      add_flags |= SYMFILE_ALWAYS_CONFIRM;\n+\t    }\n \t  try\n \t    {\n \t      symbol_file_add_main (exec_file_target.c_str (), add_flags);"
    },
    {
      "sha": "2b2c2e68f270ab71008908e9090cf09463cd932c",
      "filename": "gdb/symfile-add-flags.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8654e7d784980cb4596f685964200fcc1164c78/gdb/symfile-add-flags.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8654e7d784980cb4596f685964200fcc1164c78/gdb/symfile-add-flags.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-add-flags.h?ref=a8654e7d784980cb4596f685964200fcc1164c78",
      "patch": "@@ -44,6 +44,12 @@ enum symfile_add_flag : unsigned\n \n     /* The new objfile should be marked OBJF_NOT_FILENAME.  */\n     SYMFILE_NOT_FILENAME = 1 << 5,\n+\n+    /* If SYMFILE_VERBOSE (interpreted as from_tty) and SYMFILE_ALWAYS_CONFIRM,\n+       always ask user to confirm loading the symbol file.\n+       Without this flag, symbol_file_add_with_addrs asks a confirmation only\n+       for a main symbol file replacing a file having symbols.  */\n+    SYMFILE_ALWAYS_CONFIRM = 1 << 6,\n  };\n \n DEF_ENUM_FLAGS_TYPE (enum symfile_add_flag, symfile_add_flags);"
    },
    {
      "sha": "2c38ce4431a6218c0f98c04e057ce0f890140183",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8654e7d784980cb4596f685964200fcc1164c78/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8654e7d784980cb4596f685964200fcc1164c78/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=a8654e7d784980cb4596f685964200fcc1164c78",
      "patch": "@@ -1051,6 +1051,7 @@ symbol_file_add_with_addrs (bfd *abfd, const char *name,\n   struct objfile *objfile;\n   const int from_tty = add_flags & SYMFILE_VERBOSE;\n   const int mainline = add_flags & SYMFILE_MAINLINE;\n+  const int always_confirm = add_flags & SYMFILE_ALWAYS_CONFIRM;\n   const int should_print = (print_symbol_loading_p (from_tty, mainline, 1)\n \t\t\t    && (readnow_symbol_files\n \t\t\t\t|| (add_flags & SYMFILE_NO_READ) == 0));\n@@ -1069,12 +1070,13 @@ symbol_file_add_with_addrs (bfd *abfd, const char *name,\n   if ((add_flags & SYMFILE_NOT_FILENAME) != 0)\n     flags |= OBJF_NOT_FILENAME;\n \n-  /* Give user a chance to burp if we'd be\n+  /* Give user a chance to burp if ALWAYS_CONFIRM or we'd be\n      interactively wiping out any existing symbols.  */\n \n-  if ((have_full_symbols () || have_partial_symbols ())\n-      && mainline\n-      && from_tty\n+  if (from_tty\n+      && (always_confirm\n+\t  || ((have_full_symbols () || have_partial_symbols ())\n+\t      && mainline))\n       && !query (_(\"Load new symbol table from \\\"%s\\\"? \"), name))\n     error (_(\"Not confirmed.\"));\n "
    }
  ]
}