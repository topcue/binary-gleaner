{
  "sha": "182ec6707c9fcca84d488413d4ddbbd9d12639fe",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTgyZWM2NzA3YzlmY2NhODRkNDg4NDEzZDRkZGJiZDlkMTI2MzlmZQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-02-28T02:32:42Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-02-28T02:57:42Z"
    },
    "message": "alpha-vms: memory leak\n\n\t* vms-lib.c (_bfd_vms_lib_archive_p): Free memory on error paths.",
    "tree": {
      "sha": "4d578febe41fc26faeff21ce597c5ecc3431101a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4d578febe41fc26faeff21ce597c5ecc3431101a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/182ec6707c9fcca84d488413d4ddbbd9d12639fe",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/182ec6707c9fcca84d488413d4ddbbd9d12639fe",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/182ec6707c9fcca84d488413d4ddbbd9d12639fe",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/182ec6707c9fcca84d488413d4ddbbd9d12639fe/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1b088c829ee812003d7601c7cf458dd394598719",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1b088c829ee812003d7601c7cf458dd394598719",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1b088c829ee812003d7601c7cf458dd394598719"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 14,
    "deletions": 6
  },
  "files": [
    {
      "sha": "157bff688f0dd059879968183cba1fd456fe5135",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/182ec6707c9fcca84d488413d4ddbbd9d12639fe/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/182ec6707c9fcca84d488413d4ddbbd9d12639fe/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=182ec6707c9fcca84d488413d4ddbbd9d12639fe",
      "patch": "@@ -1,3 +1,7 @@\n+2020-02-28  Alan Modra  <amodra@gmail.com>\n+\n+\t* vms-lib.c (_bfd_vms_lib_archive_p): Free memory on error paths.\n+\n 2020-02-28  Alan Modra  <amodra@gmail.com>\n \n \t* vms-alpha.c (alpha_vms_object_p): Use _bfd_malloc_and_read."
    },
    {
      "sha": "65fd70a720e51c27217b9dbe5186ea78c141e033",
      "filename": "bfd/vms-lib.c",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/182ec6707c9fcca84d488413d4ddbbd9d12639fe/bfd/vms-lib.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/182ec6707c9fcca84d488413d4ddbbd9d12639fe/bfd/vms-lib.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/vms-lib.c?ref=182ec6707c9fcca84d488413d4ddbbd9d12639fe",
      "patch": "@@ -623,12 +623,16 @@ _bfd_vms_lib_archive_p (bfd *abfd, enum vms_lib_kind kind)\n \n \t  if (sbm_off > reclen\n \t      || reclen - sbm_off < sizeof (struct vms_dcxsbm))\n-\t    goto err;\n+\t    {\n+\t    err_free_buf:\n+\t      free (buf);\n+\t      goto err;\n+\t    }\n \t  sbm = (struct vms_dcxsbm *) (buf + sbm_off);\n \t  sbm_sz = bfd_getl16 (sbm->size);\n \t  sbm_off += sbm_sz;\n \t  if (sbm_off > reclen)\n-\t    goto err;\n+\t    goto err_free_buf;\n \n \t  sbmdesc->min_char = sbm->min_char;\n \t  BFD_ASSERT (sbmdesc->min_char == 0);\n@@ -638,25 +642,25 @@ _bfd_vms_lib_archive_p (bfd *abfd, enum vms_lib_kind kind)\n \t  if (sbm_sz < sizeof (struct vms_dcxsbm) + l + sbm_len\n \t      || (tdata->nbr_dcxsbm > 1\n \t\t  && sbm_sz < sizeof (struct vms_dcxsbm) + l + 3 * sbm_len))\n-\t    goto err;\n+\t    goto err_free_buf;\n \t  sbmdesc->flags = (unsigned char *)bfd_alloc (abfd, l);\n \t  off = bfd_getl16 (sbm->flags);\n \t  if (off > sbm_sz\n \t      || sbm_sz - off < l)\n-\t    goto err;\n+\t    goto err_free_buf;\n \t  memcpy (sbmdesc->flags, (bfd_byte *) sbm + off, l);\n \t  sbmdesc->nodes = (unsigned char *)bfd_alloc (abfd, 2 * sbm_len);\n \t  off = bfd_getl16 (sbm->nodes);\n \t  if (off > sbm_sz\n \t      || sbm_sz - off < 2 * sbm_len)\n-\t    goto err;\n+\t    goto err_free_buf;\n \t  memcpy (sbmdesc->nodes, (bfd_byte *) sbm + off, 2 * sbm_len);\n \t  off = bfd_getl16 (sbm->next);\n \t  if (off != 0)\n \t    {\n \t      if (off > sbm_sz\n \t\t  || sbm_sz - off < 2 * sbm_len)\n-\t\tgoto err;\n+\t\tgoto err_free_buf;\n \t      /* Read the 'next' array.  */\n \t      sbmdesc->next = (unsigned short *) bfd_alloc (abfd, 2 * sbm_len);\n \t      buf1 = (bfd_byte *) sbm + off;"
    }
  ]
}