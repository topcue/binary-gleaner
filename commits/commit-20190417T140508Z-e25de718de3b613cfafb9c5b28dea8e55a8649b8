{
  "sha": "e25de718de3b613cfafb9c5b28dea8e55a8649b8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTI1ZGU3MThkZTNiNjEzY2ZhZmI5YzViMjhkZWE4ZTU1YTg2NDliOA==",
  "commit": {
    "author": {
      "name": "Jozef Lawrynowicz",
      "email": "jozef.l@mittosystems.com",
      "date": "2019-04-17T14:05:08Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-04-17T14:05:08Z"
    },
    "message": "MSP430 Linker: Define __crt0_init_bss/__crt0_movedata symbols when .lower or .either prefixed sections are present.\n\nld\t* config/tc-msp430.c (msp430_make_init_symbols): Define __crt0_init_bss\n\tsymbol when .lower.bss or .either.bss sections exist.\n\tDefine __crt0_movedata when .lower.data or .either.data sections exist.\n\t* testsuite/gas/msp430/either-data-bss-sym.d: New test.\n\t* testsuite/gas/msp430/low-data-bss-sym.d: New test.\n\t* testsuite/gas/msp430/either-data-bss-sym.s: New test source.\n\t* testsuite/gas/msp430/low-data-bss-sym.s: New test source.\n\t* testsuite/gas/msp430/msp430.exp: Run new tests.\n\tEnable large code model when running -mdata-region={upper,either}\n\ttests.",
    "tree": {
      "sha": "91742b2c280836b8223b3e509ac7c642d9b81251",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/91742b2c280836b8223b3e509ac7c642d9b81251"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e25de718de3b613cfafb9c5b28dea8e55a8649b8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e25de718de3b613cfafb9c5b28dea8e55a8649b8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e25de718de3b613cfafb9c5b28dea8e55a8649b8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e25de718de3b613cfafb9c5b28dea8e55a8649b8/comments",
  "author": {
    "login": "jozefl-mitto",
    "id": 36524004,
    "node_id": "MDQ6VXNlcjM2NTI0MDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jozefl-mitto",
    "html_url": "https://github.com/jozefl-mitto",
    "followers_url": "https://api.github.com/users/jozefl-mitto/followers",
    "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}",
    "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions",
    "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs",
    "repos_url": "https://api.github.com/users/jozefl-mitto/repos",
    "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "afff667ae800adee5934020c92012e3ecbf4dabd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/afff667ae800adee5934020c92012e3ecbf4dabd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/afff667ae800adee5934020c92012e3ecbf4dabd"
    }
  ],
  "stats": {
    "total": 325,
    "additions": 253,
    "deletions": 72
  },
  "files": [
    {
      "sha": "32abe86a73b5f7ee1a89c59dfd0573e5b83961ac",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=e25de718de3b613cfafb9c5b28dea8e55a8649b8",
      "patch": "@@ -1,3 +1,16 @@\n+2019-04-17  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/tc-msp430.c (msp430_make_init_symbols): Define __crt0_init_bss\n+\tsymbol when .lower.bss or .either.bss sections exist.\n+\tDefine __crt0_movedata when .lower.data or .either.data sections exist.\n+\t* testsuite/gas/msp430/either-data-bss-sym.d: New test.\n+\t* testsuite/gas/msp430/low-data-bss-sym.d: New test.\n+\t* testsuite/gas/msp430/either-data-bss-sym.s: New test source.\n+\t* testsuite/gas/msp430/low-data-bss-sym.s: New test source.\n+\t* testsuite/gas/msp430/msp430.exp: Run new tests.\n+\tEnable large code model when running -mdata-region={upper,either}\n+\ttests.\n+\n 2019-04-16  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-scripts/pr20302.d: Don't run for ns32k-*-*."
    },
    {
      "sha": "765a9ea288a3b6847cb2625d62f22589e54f7442",
      "filename": "ld/emultempl/msp430.em",
      "status": "modified",
      "additions": 47,
      "deletions": 63,
      "changes": 110,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/emultempl/msp430.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/emultempl/msp430.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/msp430.em?ref=e25de718de3b613cfafb9c5b28dea8e55a8649b8",
      "patch": "@@ -215,6 +215,40 @@ scan_children (lang_statement_union_type * l)\n   return amount;\n }\n \n+#define WARN_UPPER 0\n+#define WARN_LOWER 1\n+#define WARN_TEXT 0\n+#define WARN_DATA 1\n+#define WARN_BSS 2\n+#define WARN_RODATA 3\n+\n+/* Warn only once per output section.\n+ * NAME starts with \".upper.\" or \".lower.\".  */\n+static void\n+warn_no_output_section (const char *name)\n+{\n+  static bfd_boolean warned[2][4] = {{FALSE, FALSE, FALSE, FALSE},\n+\t\t\t\t     {FALSE, FALSE, FALSE, FALSE}};\n+  int i = WARN_LOWER;\n+\n+  if (strncmp (name, \".upper.\", 7) == 0)\n+    i = WARN_UPPER;\n+\n+  if (!warned[i][WARN_TEXT] && strcmp (name + 6, \".text\") == 0)\n+    warned[i][WARN_TEXT] = TRUE;\n+  else if (!warned[i][WARN_DATA] && strcmp (name + 6, \".data\") == 0)\n+    warned[i][WARN_DATA] = TRUE;\n+  else if (!warned[i][WARN_BSS] && strcmp (name + 6, \".bss\") == 0)\n+    warned[i][WARN_BSS] = TRUE;\n+  else if (!warned[i][WARN_RODATA] && strcmp (name + 6, \".rodata\") == 0)\n+    warned[i][WARN_RODATA] = TRUE;\n+  else\n+    return;\n+  einfo (\"%P: warning: no input section rule matches %s in linker script\\n\",\n+\t name);\n+}\n+\n+\n /* Place an orphan section.  We use this to put .either sections\n    into either their lower or their upper equivalents.  */\n \n@@ -240,6 +274,13 @@ gld${EMULATION_NAME}_place_orphan (asection * s,\n   if (constraint != 0)\n     return NULL;\n \n+  if (strncmp (secname, \".upper.\", 7) == 0\n+      || strncmp (secname, \".lower.\", 7) == 0)\n+    {\n+      warn_no_output_section (secname);\n+      return NULL;\n+    }\n+\n   /* We only need special handling for .either sections.  */\n   if (strncmp (secname, \".either.\", 8) != 0)\n     return NULL;\n@@ -340,52 +381,21 @@ change_output_section (lang_statement_union_type ** head,\n   return FALSE;\n }\n \n-static void\n-move_prefixed_section (asection *s, char *new_name,\n-\t\t       lang_output_section_statement_type * new_output_sec)\n-{\n-  s->name = new_name;\n-  if (s->output_section == NULL)\n-    lang_add_section (& (new_output_sec->children), s, NULL, new_output_sec);\n-  else\n-    {\n-      lang_output_section_statement_type * curr_output_sec\n-\t= lang_output_section_find (s->output_section->name);\n-      change_output_section (&(curr_output_sec->children.head), s,\n-\t\t\t     new_output_sec);\n-    }\n-}\n-\n static void\n add_region_prefix (bfd *abfd, asection *s,\n \t\t   ATTRIBUTE_UNUSED void *unused)\n {\n   const char *curr_name = bfd_get_section_name (abfd, s);\n-  char * base_name;\n-  char * new_input_sec_name = NULL;\n-  char * new_output_sec_name = NULL;\n   int region = REGION_NONE;\n \n   if (strncmp (curr_name, \".text\", 5) == 0)\n-    {\n-      region = code_region;\n-      base_name = concat (\".text\", NULL);\n-    }\n+    region = code_region;\n   else if (strncmp (curr_name, \".data\", 5) == 0)\n-    {\n-      region = data_region;\n-      base_name = concat (\".data\", NULL);\n-    }\n+    region = data_region;\n   else if (strncmp (curr_name, \".bss\", 4) == 0)\n-    {\n-      region = data_region;\n-      base_name = concat (\".bss\", NULL);\n-    }\n+    region = data_region;\n   else if (strncmp (curr_name, \".rodata\", 7) == 0)\n-    {\n-      region = data_region;\n-      base_name = concat (\".rodata\", NULL);\n-    }\n+    region = data_region;\n   else\n     return;\n \n@@ -394,30 +404,10 @@ add_region_prefix (bfd *abfd, asection *s,\n     case REGION_NONE:\n       break;\n     case REGION_UPPER:\n-      new_input_sec_name = concat (\".upper\", curr_name, NULL);\n-      new_output_sec_name = concat (\".upper\", base_name, NULL);\n-      lang_output_section_statement_type * upper\n-\t= lang_output_section_find (new_output_sec_name);\n-      if (upper != NULL)\n-\t{\n-\t  move_prefixed_section (s, new_input_sec_name, upper);\n-\t}\n-      else\n-\teinfo (_(\"%P: error: no section named %s in linker script\\n\"),\n-\t       new_output_sec_name);\n+      bfd_rename_section (abfd, s, concat (\".upper\", curr_name, NULL));\n       break;\n     case REGION_LOWER:\n-      new_input_sec_name = concat (\".lower\", curr_name, NULL);\n-      new_output_sec_name = concat (\".lower\", base_name, NULL);\n-      lang_output_section_statement_type * lower\n-\t= lang_output_section_find (new_output_sec_name);\n-      if (lower != NULL)\n-\t{\n-\t  move_prefixed_section (s, new_input_sec_name, lower);\n-\t}\n-      else\n-\teinfo (_(\"%P: error: no section named %s in linker script\\n\"),\n-\t       new_output_sec_name);\n+      bfd_rename_section (abfd, s, concat (\".lower\", curr_name, NULL));\n       break;\n     case REGION_EITHER:\n       s->name = concat (\".either\", curr_name, NULL);\n@@ -427,12 +417,6 @@ add_region_prefix (bfd *abfd, asection *s,\n       FAIL ();\n       break;\n     }\n-  free (base_name);\n-  if (new_input_sec_name)\n-    {\n-      free (new_input_sec_name);\n-      free (new_output_sec_name);\n-    }\n }\n \n static void"
    },
    {
      "sha": "b6f3151c80dd4907b166249f11a3f9d7cf2c5fa3",
      "filename": "ld/testsuite/ld-msp430-elf/msp430-elf.exp",
      "status": "modified",
      "additions": 43,
      "deletions": 9,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/msp430-elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/msp430-elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/msp430-elf.exp?ref=e25de718de3b613cfafb9c5b28dea8e55a8649b8",
      "patch": "@@ -23,15 +23,29 @@ if { ![istarget \"msp430*elf*\"] } {\n     return\n }\n \n-# List contains test-items with 3 items followed by 2 lists and one more item:\n-# 0:name 1:ld early options 2:ld late options 3:assembler options\n-# 4:filenames of assembler files 5: action and options. 6: name of output file\n-\n-# Actions:\n-# objdump: Apply objdump options on result.  Compare with regex (last arg).\n-# nm: Apply nm options on result.  Compare with regex (last arg).\n-# readelf: Apply readelf options on result.  Compare with regex (last arg).\n-\n+# List contains test-items with 3 items followed by 2 lists, one item and\n+# one optional item:\n+#  0:name\n+#  1:ld/ar leading options, placed before object files\n+#  2:ld/ar trailing options, placed after object files\n+#  3:assembler options\n+#  4:filenames of assembler files\n+#  5:list of actions, options and expected outputs.\n+#  6:name of output file\n+#  7:compiler flags (optional)\n+#\n+# Actions: { command command-line-options file-containg-expected-output-regexps }\n+# Commands:\n+#   objdump: Apply objdump options on result.\n+#   nm: Apply nm options on result.\n+#   readelf: Apply readelf options on result.\n+#   ld: Don't apply anything on result.  Compare output during linking with\n+#     the file containing regexps (which is the second arg, not the third).\n+#     Note that this *must* be the first action if it is to be used at all;\n+#     in all other cases, any output from the linker during linking is\n+#     treated as a sign of an error and FAILs the test.\n+#\n+#\n set msp430regionprefixtests {\n   {\"Move main() to .upper.text\" \"-T msp430.ld --code-region=upper\"\n     \"\" \"\" {main-with-text-rodata.s} {{objdump -d main-text-upper.d}} \"main-upper\"}\n@@ -136,6 +150,26 @@ set msp430eithershuffletests {\n     {{objdump -D main-const-upper.d}} \"either-to-upper-const-unique-sec\"}\n }\n \n+set msp430warntests {\n+    {\"Warn when section cannot be transformed because output section does not exist in linker script (text,data,bss,rodata)\"\n+        \"-T msp430-no-lower.ld --code-region=lower --data-region=lower\" \"\" \"\" {warn-no-lower.s}\n+        {{ld warn-no-lower.r}} \"warn-no-lower\"}\n+    {\"Warn when section cannot be transformed because output section does not exist in linker script (text only)\"\n+        \"-T msp430-no-lower.ld --code-region=lower\" \"\" \"\" {warn-no-lower.s}\n+        {{ld warn-no-lower-code.r}} \"warn-no-lower-code\"}\n+    {\"Warn when section cannot be transformed because output section does not exist in linker script (data,bss,rodata)\"\n+        \"-T msp430-no-lower.ld --data-region=lower\" \"\" \"\" {warn-no-lower.s}\n+        {{ld warn-no-lower-data.r}} \"warn-no-lower-data\"}\n+}\n+\n+# Don't run section shuffle tests when msp430 ISA is selected\n+if {[string match \"*-mcpu=msp430 *\" [board_info [target_info name] multilib_flags]]\n+  || [string match \"*-mcpu=msp430\" [board_info [target_info name] multilib_flags]]} {\n+    return\n+}\n run_ld_link_tests $msp430regionprefixtests\n run_ld_link_tests $msp430regionprefixuniquesectiontests\n run_ld_link_tests $msp430eithershuffletests\n+run_ld_link_tests $msp430warntests\n+\n+run_dump_test valid-map"
    },
    {
      "sha": "329613965cef899170bcb21b22d7ba98bbf8424e",
      "filename": "ld/testsuite/ld-msp430-elf/valid-map-foo.s",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/valid-map-foo.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/valid-map-foo.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/valid-map-foo.s?ref=e25de718de3b613cfafb9c5b28dea8e55a8649b8",
      "patch": "@@ -0,0 +1,26 @@\n+\t.file\t\"foo.c\"\n+.text\n+\t.section\t.text.foo1,\"ax\",@progbits\n+\t.balign 2\n+\t.global\tfoo1\n+\t.type\tfoo1, @function\n+foo1:\n+; start of function\n+; framesize_regs:     0\n+; framesize_locals:   0\n+; framesize_outgoing: 0\n+; framesize:          0\n+; elim ap -> fp       2\n+; elim fp -> sp       0\n+; saved regs:(none)\n+\t; start of prologue\n+\t; end of prologue\n+\tNOP\n+.L2:\n+\tMOV.W\t&a, R12\n+\tCMP.W\t#0, R12 { JNE\t.L2\n+\tMOV.B\t#0, R12\n+\t; start of epilogue\n+\tRET\n+\t.size\tfoo1, .-foo1\n+\t.ident\t\"GCC: (jozef) 7.3.2\""
    },
    {
      "sha": "cb82406a88ee08b6e187aa5009669e6e074c5ad1",
      "filename": "ld/testsuite/ld-msp430-elf/valid-map.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/valid-map.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/valid-map.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/valid-map.d?ref=e25de718de3b613cfafb9c5b28dea8e55a8649b8",
      "patch": "@@ -0,0 +1,6 @@\n+# source: valid-map-foo.s\n+# source: valid-map.s\n+# ld: -Map=valid-map.map --code-region=lower --script=msp430.ld\n+# map: valid-map.map\n+\n+#pass"
    },
    {
      "sha": "39e39798ef9af57e6c0c2b59ce6e4d51cde5d24c",
      "filename": "ld/testsuite/ld-msp430-elf/valid-map.map",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/valid-map.map",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/valid-map.map",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/valid-map.map?ref=e25de718de3b613cfafb9c5b28dea8e55a8649b8",
      "patch": "@@ -0,0 +1,6 @@\n+# Test that the transformed section name foo1 from foo.s appears correctly\n+# in the map file\n+\n+#...\n+ .lower.text.foo1\n+#pass"
    },
    {
      "sha": "feeb50362fb854cb31dc0d83a0c028dc92e21c95",
      "filename": "ld/testsuite/ld-msp430-elf/valid-map.s",
      "status": "added",
      "additions": 60,
      "deletions": 0,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/valid-map.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/valid-map.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/valid-map.s?ref=e25de718de3b613cfafb9c5b28dea8e55a8649b8",
      "patch": "@@ -0,0 +1,60 @@\n+\t.file\t\"tester.c\"\n+.text\n+\t.global\ta\n+.data\n+\t.balign 2\n+\t.type\ta, @object\n+\t.size\ta, 2\n+a:\n+\t.short\t5\n+.text\n+\t.balign 2\n+\t.global\tfoo\n+\t.type\tfoo, @function\n+foo:\n+; start of function\n+; framesize_regs:     0\n+; framesize_locals:   2\n+; framesize_outgoing: 0\n+; framesize:          2\n+; elim ap -> fp       2\n+; elim fp -> sp       2\n+; saved regs:(none)\n+\t; start of prologue\n+\tSUB.W\t#2, R1\n+\t; end of prologue\n+\tMOV.W\tR12, @R1\n+\tMOV.W\t@R1, R12\n+\tADD.W\t#-2, R12\n+\tMOV.W\t@R12, R12\n+\tCMP.W\t#0, R12 { JEQ\t.L2\n+\tMOV.B\t#0, R12\n+\tBR\t#.L3\n+.L2:\n+\tMOV.B\t#1, R12\n+.L3:\n+\t; start of epilogue\n+\tADD.W\t#2, R1\n+\tRET\n+\t.size\tfoo, .-foo\n+\t.balign 2\n+\t.global\tmain\n+\t.type\tmain, @function\n+main:\n+; start of function\n+; framesize_regs:     0\n+; framesize_locals:   0\n+; framesize_outgoing: 0\n+; framesize:          0\n+; elim ap -> fp       2\n+; elim fp -> sp       0\n+; saved regs:(none)\n+\t; start of prologue\n+\t; end of prologue\n+\tMOV.W\t#a, R12\n+\tCALL\t#foo\n+\t; start of epilogue\n+\t.refsym\t__crt0_call_exit\n+\tRET\n+\t.size\tmain, .-main\n+\t.ident\t\"GCC: (jozef) 7.3.2\""
    },
    {
      "sha": "de05e77691ebec789982d99cce3feb1d4923d0f8",
      "filename": "ld/testsuite/ld-msp430-elf/warn-no-lower-code.r",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/warn-no-lower-code.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/warn-no-lower-code.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/warn-no-lower-code.r?ref=e25de718de3b613cfafb9c5b28dea8e55a8649b8",
      "patch": "@@ -0,0 +1 @@\n+.*warning: no input section rule matches .lower.text in linker script"
    },
    {
      "sha": "1c816121f02020b504563b23de8d38f83c4dfdc4",
      "filename": "ld/testsuite/ld-msp430-elf/warn-no-lower-data.r",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/warn-no-lower-data.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/warn-no-lower-data.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/warn-no-lower-data.r?ref=e25de718de3b613cfafb9c5b28dea8e55a8649b8",
      "patch": "@@ -0,0 +1,3 @@\n+.*warning: no input section rule matches .lower.data in linker script\n+.*warning: no input section rule matches .lower.bss in linker script\n+.*warning: no input section rule matches .lower.rodata in linker script"
    },
    {
      "sha": "53c82db9b6a4088661cdee0980a4adcd359f083f",
      "filename": "ld/testsuite/ld-msp430-elf/warn-no-lower.r",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/warn-no-lower.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/warn-no-lower.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/warn-no-lower.r?ref=e25de718de3b613cfafb9c5b28dea8e55a8649b8",
      "patch": "@@ -0,0 +1,4 @@\n+.*warning: no input section rule matches .lower.text in linker script\n+.*warning: no input section rule matches .lower.data in linker script\n+.*warning: no input section rule matches .lower.bss in linker script\n+.*warning: no input section rule matches .lower.rodata in linker script"
    },
    {
      "sha": "4c8e20d79bd914b7cc8f06ed91d2f00bde392af9",
      "filename": "ld/testsuite/ld-msp430-elf/warn-no-lower.s",
      "status": "added",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/warn-no-lower.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e25de718de3b613cfafb9c5b28dea8e55a8649b8/ld/testsuite/ld-msp430-elf/warn-no-lower.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/warn-no-lower.s?ref=e25de718de3b613cfafb9c5b28dea8e55a8649b8",
      "patch": "@@ -0,0 +1,44 @@\n+\t.file\t\"tester.c\"\n+.text\n+\t.global\tfoo\n+\t.section\t.rodata\n+.LC0:\n+\t.string\t\"bar\"\n+\t.section\t.data,\"aw\",@progbits\n+\t.balign 2\n+\t.type\tfoo, @object\n+\t.size\tfoo, 2\n+foo:\n+\t.short\t.LC0\n+\t.section\t.text,\"ax\",@progbits\n+\t.balign 2\n+\t.global\tmain\n+\t.type\tmain, @function\n+main:\n+; start of function\n+; framesize_regs:     0\n+; framesize_locals:   2\n+; framesize_outgoing: 0\n+; framesize:          2\n+; elim ap -> fp       2\n+; elim fp -> sp       2\n+; saved regs:(none)\n+\t; start of prologue\n+\tSUB.W\t#2, R1\n+\t; end of prologue\n+\tMOV.W\t#1, @R1\n+\tBR\t#.L2\n+.L3:\n+\tMOV.W\t&foo, R12\n+\tADD.W\t#-1, R12\n+\tMOV.W\tR12, &foo\n+.L2:\n+\tMOV.W\t@R1, R12\n+\tCMP.W\t#0, R12 { JNE\t.L3\n+\tMOV.B\t#0, R12\n+\t; start of epilogue\n+\t.refsym\t__crt0_call_exit\n+\tADD.W\t#2, R1\n+\tRET\n+\t.size\tmain, .-main\n+\t.ident\t\"GCC: (jozef) 7.3.2\""
    }
  ]
}