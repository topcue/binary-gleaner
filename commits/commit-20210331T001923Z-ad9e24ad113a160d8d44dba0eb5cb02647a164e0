{
  "sha": "ad9e24ad113a160d8d44dba0eb5cb02647a164e0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWQ5ZTI0YWQxMTNhMTYwZDhkNDRkYmEwZWI1Y2IwMjY0N2ExNjRlMA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-30T23:49:10Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-31T00:19:23Z"
    },
    "message": "Use stdbool.h\n\nWith this in place we can retire bfd_boolean one project at a time.\n\nbfd/\n\t* bfd-in.h: Include stdbool.h.\n\t(bfd_boolean): Define as bool\n\t* bfd-in2.h: Regenerate.",
    "tree": {
      "sha": "3faaa1c83038a5d93208ed914fec2ef2ce933557",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3faaa1c83038a5d93208ed914fec2ef2ce933557"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ad9e24ad113a160d8d44dba0eb5cb02647a164e0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad9e24ad113a160d8d44dba0eb5cb02647a164e0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ad9e24ad113a160d8d44dba0eb5cb02647a164e0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad9e24ad113a160d8d44dba0eb5cb02647a164e0/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3dfb1b6d34ec74160735230f606b1df55c917f9d"
    }
  ],
  "stats": {
    "total": 50,
    "additions": 28,
    "deletions": 22
  },
  "files": [
    {
      "sha": "8b7e53e1ad3d89a775430edc16721adb3757189a",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad9e24ad113a160d8d44dba0eb5cb02647a164e0/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad9e24ad113a160d8d44dba0eb5cb02647a164e0/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=ad9e24ad113a160d8d44dba0eb5cb02647a164e0",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-31  Alan Modra  <amodra@gmail.com>\n+\n+\t* bfd-in.h: Include stdbool.h.\n+\t(bfd_boolean): Define as bool\n+\t* bfd-in2.h: Regenerate.\n+\n 2021-03-31  Alan Modra  <amodra@gmail.com>\n \n \t* .gitignore: Delete bfd_stdint.h entry."
    },
    {
      "sha": "88f1e867a64dda7aa684ea9d1378f9c855d30c50",
      "filename": "bfd/bfd-in.h",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad9e24ad113a160d8d44dba0eb5cb02647a164e0/bfd/bfd-in.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad9e24ad113a160d8d44dba0eb5cb02647a164e0/bfd/bfd-in.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in.h?ref=ad9e24ad113a160d8d44dba0eb5cb02647a164e0",
      "patch": "@@ -35,6 +35,7 @@ extern \"C\" {\n #include \"ansidecl.h\"\n #include \"symcat.h\"\n #include <stdint.h>\n+#include <stdbool.h>\n #include \"diagnostics.h\"\n #include <stdarg.h>\n #include <string.h>\n@@ -114,20 +115,19 @@ typedef BFD_HOSTPTR_T bfd_hostptr_t;\n /* Forward declaration.  */\n typedef struct bfd bfd;\n \n-/* Boolean type used in bfd.  Too many systems define their own\n-   versions of \"boolean\" for us to safely typedef a \"boolean\" of\n-   our own.  Using an enum for \"bfd_boolean\" has its own set of\n-   problems, with strange looking casts required to avoid warnings\n-   on some older compilers.  Thus we just use an int.\n-\n+/* Boolean type used in bfd.\n    General rule: Functions which are bfd_boolean return TRUE on\n    success and FALSE on failure (unless they're a predicate).  */\n \n-typedef int bfd_boolean;\n-#undef FALSE\n-#undef TRUE\n-#define FALSE 0\n-#define TRUE 1\n+#ifdef POISON_BFD_BOOLEAN\n+# pragma GCC poison bfd_boolean FALSE TRUE\n+#else\n+# define bfd_boolean bool\n+# undef FALSE\n+# undef TRUE\n+# define FALSE 0\n+# define TRUE 1\n+#endif\n \n #ifdef BFD64\n "
    },
    {
      "sha": "9fbde9d95c5beaa81fd4b99218ffdb6dc3228e9e",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad9e24ad113a160d8d44dba0eb5cb02647a164e0/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad9e24ad113a160d8d44dba0eb5cb02647a164e0/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=ad9e24ad113a160d8d44dba0eb5cb02647a164e0",
      "patch": "@@ -42,6 +42,7 @@ extern \"C\" {\n #include \"ansidecl.h\"\n #include \"symcat.h\"\n #include <stdint.h>\n+#include <stdbool.h>\n #include \"diagnostics.h\"\n #include <stdarg.h>\n #include <string.h>\n@@ -121,20 +122,19 @@ typedef BFD_HOSTPTR_T bfd_hostptr_t;\n /* Forward declaration.  */\n typedef struct bfd bfd;\n \n-/* Boolean type used in bfd.  Too many systems define their own\n-   versions of \"boolean\" for us to safely typedef a \"boolean\" of\n-   our own.  Using an enum for \"bfd_boolean\" has its own set of\n-   problems, with strange looking casts required to avoid warnings\n-   on some older compilers.  Thus we just use an int.\n-\n+/* Boolean type used in bfd.\n    General rule: Functions which are bfd_boolean return TRUE on\n    success and FALSE on failure (unless they're a predicate).  */\n \n-typedef int bfd_boolean;\n-#undef FALSE\n-#undef TRUE\n-#define FALSE 0\n-#define TRUE 1\n+#ifdef POISON_BFD_BOOLEAN\n+# pragma GCC poison bfd_boolean FALSE TRUE\n+#else\n+# define bfd_boolean bool\n+# undef FALSE\n+# undef TRUE\n+# define FALSE 0\n+# define TRUE 1\n+#endif\n \n #ifdef BFD64\n "
    }
  ]
}