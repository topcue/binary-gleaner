{
  "sha": "7824c1d22fcab8a68162634d4293f4a6666ca43e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzgyNGMxZDIyZmNhYjhhNjgxNjI2MzRkNDI5M2Y0YTY2NjZjYTQzZQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-01T01:10:51Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-01T03:56:39Z"
    },
    "message": "Weak references to __start_/__stop_ symbols\n\nIf a weak reference to a __start_foo or __stop_foo symbol ends up\nhaving no definition due to all the foo sections being removed for\nsome reason, undef_start_stop currently makes the symbol strong\nundefined.  That risks a linker undefined symbol error.  Fix that by\nmaking the symbol undefweak and also undo some dynamic symbol state.\n\nNote that saving the state of the symbol type at the time\nlang_init_start_stop runs is not sufficient.  The linker may have\nmerged in a shared library reference by that point and made what was\nan undefweak in regular objects, a strong undefined.  So it is\nnecessary to look at the ELF symbol flags to decide whether an\nundefweak is the proper resolution.\n\nSomething probably should be done for COFF/PE too, but I'm unsure how\nto do go about that.\n\n\t* ldlang.c (undef_start_stop): For ELF make undefined start/stop\n\tsymbols undefweak if that was how they were referenced.  Undo\n\tdynamic state too.",
    "tree": {
      "sha": "ba713f8ed77d32992d3588a8cf837ec8f229482e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ba713f8ed77d32992d3588a8cf837ec8f229482e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7824c1d22fcab8a68162634d4293f4a6666ca43e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7824c1d22fcab8a68162634d4293f4a6666ca43e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7824c1d22fcab8a68162634d4293f4a6666ca43e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7824c1d22fcab8a68162634d4293f4a6666ca43e/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6a1224ec762f7dd59d7abd2e5dc3be26bb157cd1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6a1224ec762f7dd59d7abd2e5dc3be26bb157cd1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6a1224ec762f7dd59d7abd2e5dc3be26bb157cd1"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 19,
    "deletions": 0
  },
  "files": [
    {
      "sha": "2347f9ae19c2bbf089b036603ee5bae8933ad3fc",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7824c1d22fcab8a68162634d4293f4a6666ca43e/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7824c1d22fcab8a68162634d4293f4a6666ca43e/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=7824c1d22fcab8a68162634d4293f4a6666ca43e",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-01  Alan Modra  <amodra@gmail.com>\n+\n+\t* ldlang.c (undef_start_stop): For ELF make undefined start/stop\n+\tsymbols undefweak if that was how they were referenced.  Undo\n+\tdynamic state too.\n+\n 2021-03-01  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-elf/pr25708.d: Add --with-symbol-versions to nm."
    },
    {
      "sha": "a77e8fabeff8fa691c16ed943a371b8b7d31bb7c",
      "filename": "ld/ldlang.c",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7824c1d22fcab8a68162634d4293f4a6666ca43e/ld/ldlang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7824c1d22fcab8a68162634d4293f4a6666ca43e/ld/ldlang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.c?ref=7824c1d22fcab8a68162634d4293f4a6666ca43e",
      "patch": "@@ -6808,6 +6808,19 @@ undef_start_stop (struct bfd_link_hash_entry *h)\n \t}\n       h->type = bfd_link_hash_undefined;\n       h->u.undef.abfd = NULL;\n+      if (bfd_get_flavour (link_info.output_bfd) == bfd_target_elf_flavour)\n+\t{\n+\t  const struct elf_backend_data *bed;\n+\t  struct elf_link_hash_entry *eh = (struct elf_link_hash_entry *) h;\n+\t  unsigned int was_forced = eh->forced_local;\n+\n+\t  bed = get_elf_backend_data (link_info.output_bfd);\n+\t  (*bed->elf_backend_hide_symbol) (&link_info, eh, TRUE);\n+\t  if (!eh->ref_regular_nonweak)\n+\t    h->type = bfd_link_hash_undefweak;\n+\t  eh->def_regular = 0;\n+\t  eh->forced_local = was_forced;\n+\t}\n     }\n }\n "
    }
  ]
}