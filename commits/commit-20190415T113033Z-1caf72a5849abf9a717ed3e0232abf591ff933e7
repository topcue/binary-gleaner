{
  "sha": "1caf72a5849abf9a717ed3e0232abf591ff933e7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWNhZjcyYTU4NDlhYmY5YTcxN2VkM2UwMjMyYWJmNTkxZmY5MzNlNw==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-04-15T10:37:51Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-04-15T11:30:33Z"
    },
    "message": "[binutils, ARM, 8/16] BFL infrastructure with new global reloc R_ARM_THM_BF18\n\nThis patch is part of a series of patches to add support for Armv8.1-M Mainline instructions to binutils.\nThis adds infrastructure for the BFL instructions which is one of the first instructions in Arm that have more than one relocations in them.\n\nThis adds a new relocation R_ARM_THM_BF18.\n\nThe inconsistency between external R_ARM_THM_BF18 and internal\nBFD_RELOC_ARM_THUMB_BF19 is because internally we count the static bit-0 of the immediate and we don't externally.\n\nChangeLog entries are as follows :\n\n*** bfd/ChangeLog ***\n\n2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n\n\t* reloc.c (BFD_RELOC_ARM_THUMB_BF19): New\n\t* libbfd.h: Regenerated.\n\t* bfd-in2.h: Regenerated.\n\t* bfd-elf32-arm.c (elf32_arm_howto_table_1): New entry for R_ARM_THM_BF18.\n\t(elf32_arm_reloc_map elf32_arm_reloc_map): Map BFD_RELOC_ARM_THUMB_BF19\n\tand R_ARM_THM_BF18 together.\n\t(elf32_arm_final_link_relocate): New switch case for R_ARM_THM_BF19.\n\n*** elfcpp/ChangeLog ***\n\n2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n\n\t* arm.h (R_ARM_THM_BF18): New relocation code.\n\n*** gas/ChangeLog ***\n\n2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n\n\t* config/tc-arm.c (md_pcrel_from_section): New switch case for\n\tBFD_RELOC_ARM_THUMB_BF19.\n\t(md_appdy_fix): Likewise.\n\t(tc_gen_reloc): Likewise.\n\n*** include/ChangeLog ***\n\n2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n\n\t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF18.\n\n*** opcodes/ChangeLog ***\n\n2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n\n\t* arm-dis.c (print_insn_thumb32): Updated to accept new %Y pattern.",
    "tree": {
      "sha": "195d651a5012a54933d6cb2d1793ebc659db4fc8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/195d651a5012a54933d6cb2d1793ebc659db4fc8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1caf72a5849abf9a717ed3e0232abf591ff933e7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1caf72a5849abf9a717ed3e0232abf591ff933e7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1caf72a5849abf9a717ed3e0232abf591ff933e7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1caf72a5849abf9a717ed3e0232abf591ff933e7/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f1c7f42126274d48f6b0a929e4e15a32193997c6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f1c7f42126274d48f6b0a929e4e15a32193997c6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f1c7f42126274d48f6b0a929e4e15a32193997c6"
    }
  ],
  "stats": {
    "total": 155,
    "additions": 154,
    "deletions": 1
  },
  "files": [
    {
      "sha": "59bb64d5d0f431da22386eeda38f3d652e93db35",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -1,3 +1,13 @@\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* reloc.c (BFD_RELOC_ARM_THUMB_BF19): New\n+\t* libbfd.h: Regenerated.\n+\t* bfd-in2.h: Regenerated.\n+\t* bfd-elf32-arm.c (elf32_arm_howto_table_1): New entry for R_ARM_THM_BF18.\n+\t(elf32_arm_reloc_map elf32_arm_reloc_map): Map BFD_RELOC_ARM_THUMB_BF19\n+\tand R_ARM_THM_BF18 together.\n+\t(elf32_arm_final_link_relocate): New switch case for R_ARM_THM_BF19.\n+\n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n \n \t* reloc.c (BFD_RELOC_ARM_THUMB_BF17): New enum."
    },
    {
      "sha": "99b0db4ec6d6ddfde74f47215510e0905b910e95",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -3570,6 +3570,9 @@ field in the instruction.  */\n /* ARM 17-bit pc-relative branch for Branch Future instructions.  */\n   BFD_RELOC_ARM_THUMB_BF17,\n \n+/* ARM 19-bit pc-relative branch for Branch Future Link instruction.  */\n+  BFD_RELOC_ARM_THUMB_BF19,\n+\n /* Thumb 7-, 9-, 12-, 20-, 23-, and 25-bit pc-relative branches.\n The lowest bit must be zero and is not stored in the instruction.\n Note that the corresponding ELF R_ARM_THM_JUMPnn constant has an"
    },
    {
      "sha": "456dc9de13229dc659140707750e98a8eb15adae",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 61,
      "deletions": 1,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -1756,6 +1756,20 @@ static reloc_howto_type elf32_arm_howto_table_1[] =\n \t 0x001f0ffe,\t\t/* src_mask.  */\n \t 0x001f0ffe,\t\t/* dst_mask.  */\n \t TRUE),\t\t\t/* pcrel_offset.  */\n+  EMPTY_HOWTO (137),\n+  HOWTO (R_ARM_THM_BF18,\t/* type.  */\n+\t 0,\t\t\t/* rightshift.  */\n+\t 1,\t\t\t/* size (0 = byte, 1 = short, 2 = long).  */\n+\t 18,\t\t\t/* bitsize.  */\n+\t TRUE,\t\t\t/* pc_relative.  */\n+\t 0,\t\t\t/* bitpos.  */\n+\t complain_overflow_dont,/* do not complain_on_overflow.  */\n+\t bfd_elf_generic_reloc,\t/* special_function.  */\n+\t \"R_ARM_THM_BF18\",\t/* name.  */\n+\t FALSE,\t\t\t/* partial_inplace.  */\n+\t 0x007f0ffe,\t\t/* src_mask.  */\n+\t 0x007f0ffe,\t\t/* dst_mask.  */\n+\t TRUE),\t\t\t/* pcrel_offset.  */\n };\n \n /* 160 onwards: */\n@@ -2068,7 +2082,8 @@ static const struct elf32_arm_reloc_map elf32_arm_reloc_map[] =\n     {BFD_RELOC_ARM_THUMB_ALU_ABS_G2_NC, R_ARM_THM_ALU_ABS_G2_NC},\n     {BFD_RELOC_ARM_THUMB_ALU_ABS_G1_NC, R_ARM_THM_ALU_ABS_G1_NC},\n     {BFD_RELOC_ARM_THUMB_ALU_ABS_G0_NC, R_ARM_THM_ALU_ABS_G0_NC},\n-    {BFD_RELOC_ARM_THUMB_BF17, R_ARM_THM_BF16}\n+    {BFD_RELOC_ARM_THUMB_BF17, R_ARM_THM_BF16},\n+    {BFD_RELOC_ARM_THUMB_BF19, R_ARM_THM_BF18}\n   };\n \n static reloc_howto_type *\n@@ -12969,6 +12984,51 @@ elf32_arm_final_link_relocate (reloc_howto_type *\t    howto,\n \treturn bfd_reloc_ok;\n       }\n \n+    case R_ARM_THM_BF18:\n+      {\n+\tbfd_vma relocation;\n+\tbfd_vma upper_insn = bfd_get_16 (input_bfd, hit_data);\n+\tbfd_vma lower_insn = bfd_get_16 (input_bfd, hit_data + 2);\n+\n+\tif (globals->use_rel)\n+\t  {\n+\t    bfd_vma immA  = (upper_insn & 0x007f);\n+\t    bfd_vma immB  = (lower_insn & 0x07fe) >> 1;\n+\t    bfd_vma immC  = (lower_insn & 0x0800) >> 11;\n+\t    addend  = (immA << 12);\n+\t    addend |= (immB << 2);\n+\t    addend |= (immC << 1);\n+\t    addend |= 1;\n+\t    /* Sign extend.  */\n+\t    addend = (addend & 0x40000) ? addend - (1 << 19) : addend;\n+\t  }\n+\n+\tvalue = get_value_helper (plt_offset, splt, input_section, sym_sec, h,\n+\t\t\t\t  info, input_bfd, rel, sym_name, st_type,\n+\t\t\t\t  globals, unresolved_reloc_p);\n+\n+\trelocation  = value + addend;\n+\trelocation -= (input_section->output_section->vma\n+\t\t       + input_section->output_offset\n+\t\t       + rel->r_offset);\n+\n+\t/* Put RELOCATION back into the insn.  */\n+\t{\n+\t  bfd_vma immA = (relocation & 0x0007f000) >> 12;\n+\t  bfd_vma immB = (relocation & 0x00000ffc) >> 2;\n+\t  bfd_vma immC = (relocation & 0x00000002) >> 1;\n+\n+\t  upper_insn = (upper_insn & 0xff80) | immA;\n+\t  lower_insn = (lower_insn & 0xf001) | (immC << 11) | (immB << 1);\n+\t}\n+\n+\t/* Put the relocated value back in the object file:  */\n+\tbfd_put_16 (input_bfd, upper_insn, hit_data);\n+\tbfd_put_16 (input_bfd, lower_insn, hit_data + 2);\n+\n+\treturn bfd_reloc_ok;\n+      }\n+\n     default:\n       return bfd_reloc_notsupported;\n     }"
    },
    {
      "sha": "7f775acf9178d70ad8351064f2e2291dd79c73a0",
      "filename": "bfd/libbfd.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/bfd/libbfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/bfd/libbfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd.h?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -1531,6 +1531,7 @@ static const char *const bfd_reloc_code_real_names[] = { \"@@uninitialized@@\",\n   \"BFD_RELOC_ARM_PCREL_JUMP\",\n   \"BFD_RELOC_THUMB_PCREL_BRANCH5\",\n   \"BFD_RELOC_ARM_THUMB_BF17\",\n+  \"BFD_RELOC_ARM_THUMB_BF19\",\n   \"BFD_RELOC_THUMB_PCREL_BRANCH7\",\n   \"BFD_RELOC_THUMB_PCREL_BRANCH9\",\n   \"BFD_RELOC_THUMB_PCREL_BRANCH12\","
    },
    {
      "sha": "9e3899ab4e7f3485cc2bd0f0953f652e0b28f48a",
      "filename": "bfd/reloc.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/bfd/reloc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/bfd/reloc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/reloc.c?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -3024,6 +3024,11 @@ ENUM\n ENUMDOC\n   ARM 17-bit pc-relative branch for Branch Future instructions.\n \n+ENUM\n+  BFD_RELOC_ARM_THUMB_BF19\n+ENUMDOC\n+  ARM 19-bit pc-relative branch for Branch Future Link instruction.\n+\n ENUM\n   BFD_RELOC_THUMB_PCREL_BRANCH7\n ENUMX"
    },
    {
      "sha": "fab2744d9ea2142503ee26273dbcfde93e7d8dbd",
      "filename": "elfcpp/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/elfcpp/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/elfcpp/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/ChangeLog?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -1,3 +1,7 @@\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm.h (R_ARM_THM_BF18): New relocation code.\n+\n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n \n \t* arm.h (R_ARM_THM_BF16): New relocation code."
    },
    {
      "sha": "bc5e0cce1753bf6b98d59df186586d6455abdabc",
      "filename": "elfcpp/arm.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/elfcpp/arm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/elfcpp/arm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/arm.h?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -197,6 +197,7 @@ enum\n   // 131 - 135\t\t\tUnallocated\n   // Relocations for Armv8.1-M Mainline (BF/BFL)\n   R_ARM_THM_BF16 = 136,\t\t// Static       Thumb32 ((S + A) | T) \u2013 P\n+  R_ARM_THM_BF18 = 138,\t\t// Static       Thumb32 ((S + A) | T) \u2013 P\n   // 139\t\t\tUnallocated\n   // 140 - 159\t\t\tDynamic\t\tReserved for future allocation\n   R_ARM_IRELATIVE = 160,\t// Dynamic"
    },
    {
      "sha": "2602aa37212917560653848391880e05bd2509d6",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -1,3 +1,10 @@\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* config/tc-arm.c (md_pcrel_from_section): New switch case for\n+\tBFD_RELOC_ARM_THUMB_BF19.\n+\t(md_appdy_fix): Likewise.\n+\t(tc_gen_reloc): Likewise.\n+\n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n \n \t* config/tc-arm.c (T16_32_TAB): New entries for bfx and bflx."
    },
    {
      "sha": "177d90f1c6fdc9ad99a395b479b16e5b9f8ae0b6",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -22924,6 +22924,7 @@ md_pcrel_from_section (fixS * fixP, segT seg)\n     case BFD_RELOC_THUMB_PCREL_BRANCH20:\n     case BFD_RELOC_THUMB_PCREL_BRANCH25:\n     case BFD_RELOC_ARM_THUMB_BF17:\n+    case BFD_RELOC_ARM_THUMB_BF19:\n       return base + 4;\n \n     case BFD_RELOC_THUMB_PCREL_BRANCH23:\n@@ -24854,6 +24855,39 @@ md_apply_fix (fixS *\tfixP,\n \t}\n       break;\n \n+    case BFD_RELOC_ARM_THUMB_BF19:\n+      if (fixP->fx_addsy\n+\t  && (S_GET_SEGMENT (fixP->fx_addsy) == seg)\n+\t  && !S_FORCE_RELOC (fixP->fx_addsy, TRUE)\n+\t  && ARM_IS_FUNC (fixP->fx_addsy)\n+\t  && ARM_CPU_HAS_FEATURE (selected_cpu, arm_ext_v8_1m_main))\n+\t{\n+\t  /* Force a relocation for a branch 19 bits wide.  */\n+\t  fixP->fx_done = 0;\n+\t}\n+\n+      if (v8_1_branch_value_check (value, 19, TRUE) == FAIL)\n+\tas_bad_where (fixP->fx_file, fixP->fx_line,\n+\t\t      BAD_BRANCH_OFF);\n+\n+      if (fixP->fx_done || !seg->use_rela_p)\n+\t{\n+\t  offsetT newval2;\n+\t  addressT immA, immB, immC;\n+\n+\t  immA = (value & 0x0007f000) >> 12;\n+\t  immB = (value & 0x00000ffc) >> 2;\n+\t  immC = (value & 0x00000002) >> 1;\n+\n+\t  newval   = md_chars_to_number (buf, THUMB_SIZE);\n+\t  newval2  = md_chars_to_number (buf + THUMB_SIZE, THUMB_SIZE);\n+\t  newval  |= immA;\n+\t  newval2 |= (immC << 11) | (immB << 1);\n+\t  md_number_to_chars (buf, newval, THUMB_SIZE);\n+\t  md_number_to_chars (buf + THUMB_SIZE, newval2, THUMB_SIZE);\n+\t}\n+      break;\n+\n     case BFD_RELOC_ARM_V4BX:\n       /* This will need to go in the object file.  */\n       fixP->fx_done = 0;\n@@ -25037,6 +25071,7 @@ tc_gen_reloc (asection *section, fixS *fixp)\n     case BFD_RELOC_ARM_GOTOFFFUNCDESC:\n     case BFD_RELOC_ARM_FUNCDESC:\n     case BFD_RELOC_ARM_THUMB_BF17:\n+    case BFD_RELOC_ARM_THUMB_BF19:\n       code = fixp->fx_r_type;\n       break;\n "
    },
    {
      "sha": "65bbac71f3522f6a5a621505178462ea3436c70e",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -1,3 +1,7 @@\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF18.\n+\n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n \n \t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF16."
    },
    {
      "sha": "b8f2d2fa416e4516860ec049b642d331e0a3600e",
      "filename": "include/elf/arm.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/include/elf/arm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/include/elf/arm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/arm.h?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -242,6 +242,7 @@ START_RELOC_NUMBERS (elf_arm_reloc_type)\n   RELOC_NUMBER (R_ARM_THM_ALU_ABS_G2_NC,134)\n   RELOC_NUMBER (R_ARM_THM_ALU_ABS_G3_NC,135)\n   RELOC_NUMBER (R_ARM_THM_BF16,\t\t136)\n+  RELOC_NUMBER (R_ARM_THM_BF18,\t\t138)\n \n   RELOC_NUMBER (R_ARM_IRELATIVE,      \t160)\n   RELOC_NUMBER (R_ARM_GOTFUNCDESC,    \t161)"
    },
    {
      "sha": "edd03f837e3e638da1b7ab00844d730c8241f2c6",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -1,3 +1,7 @@\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (print_insn_thumb32): Updated to accept new %Y pattern.\n+\n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n \n \t* arm-dis.c (print_insn_thumb32): Add '%<bitfield>S' to print an"
    },
    {
      "sha": "b32ff323f89711150c453e59759b7b2b63a91598",
      "filename": "opcodes/arm-dis.c",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1caf72a5849abf9a717ed3e0232abf591ff933e7/opcodes/arm-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1caf72a5849abf9a717ed3e0232abf591ff933e7/opcodes/arm-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arm-dis.c?ref=1caf72a5849abf9a717ed3e0232abf591ff933e7",
      "patch": "@@ -2715,6 +2715,7 @@ static const struct opcode16 thumb_opcodes[] =\n        %F\t\tprint the lsb and width fields of a sbfx/ubfx instruction\n        %G\t\tprint a fallback offset for Branch Future instructions\n        %W\t\tprint an offset for BF instruction\n+       %Y\t\tprint an offset for BFL instruction\n        %b\t\tprint a conditional branch offset\n        %B\t\tprint an unconditional branch offset\n        %s\t\tprint the shift field of an SSAT instruction\n@@ -5898,6 +5899,23 @@ print_insn_thumb32 (bfd_vma pc, struct disassemble_info *info, long given)\n \t\t}\n \t\tbreak;\n \n+\t      case 'Y':\n+\t\t{\n+\t\t  unsigned int immA = (given & 0x007f0000u) >> 16;\n+\t\t  unsigned int immB = (given & 0x000007feu) >> 1;\n+\t\t  unsigned int immC = (given & 0x00000800u) >> 11;\n+\t\t  bfd_vma offset = 0;\n+\n+\t\t  offset |= immA << 12;\n+\t\t  offset |= immB << 2;\n+\t\t  offset |= immC << 1;\n+\t\t  /* Sign extend.  */\n+\t\t  offset = (offset & 0x40000) ? offset - (1 << 19) : offset;\n+\n+\t\t  info->print_address_func (pc + 4 + offset, info);\n+\t\t}\n+\t\tbreak;\n+\n \t      case 'b':\n \t\t{\n \t\t  unsigned int S = (given & 0x04000000u) >> 26;"
    }
  ]
}