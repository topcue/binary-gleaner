{
  "sha": "95cc7c169c4bbb6f10e630184f527b20b83fc5c3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTVjYzdjMTY5YzRiYmI2ZjEwZTYzMDE4NGY1MjdiMjBiODNmYzVjMw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-10-21T02:24:06Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-10-21T05:43:39Z"
    },
    "message": "ar P support\n\nThis patch extends \"ar P\" to allow creation of normal (as distinct\nfrom thin) archives with full path names.\n\n\tPR 452\n\tPR 25104\nbfd/\n\t* archive.c (normalize): Return file unchanged when\n\tBFD_ARCHIVE_FULL_PATH.\n\t(_bfd_construct_extended_name_table): Pass abfd, the output\n\tbfd, to normalize.\n\t(_bfd_archive_bsd44_construct_extended_name_table): Likewise.\n\t* bfd.c (struct bfd): Make flags a full flagword.\n\t(BFD_ARCHIVE_FULL_PATH): Define.\n\t* bfd-in2.h: Regenerate.\nbinutils/\n\t* ar.c (write_archive): Set BFD_ARCHIVE_FULL_PATH.\n\t* doc/binutils.texi (extract from archive): Mention\n\trestrictions when extracting from archives with full paths.\n\t(ar P): Update to current P support.\n\t(ar -X32_64): Fix spelling.",
    "tree": {
      "sha": "926d50d0829027a0804a62450fcbf6396c85da72",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/926d50d0829027a0804a62450fcbf6396c85da72"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/95cc7c169c4bbb6f10e630184f527b20b83fc5c3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95cc7c169c4bbb6f10e630184f527b20b83fc5c3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/95cc7c169c4bbb6f10e630184f527b20b83fc5c3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "54d83b8d3920eea4a0d545f1ff7ac2923d938e6c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54d83b8d3920eea4a0d545f1ff7ac2923d938e6c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/54d83b8d3920eea4a0d545f1ff7ac2923d938e6c"
    }
  ],
  "stats": {
    "total": 75,
    "additions": 61,
    "deletions": 14
  },
  "files": [
    {
      "sha": "f71c9aa846d887ddc66ac87a712a9838804a4136",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=95cc7c169c4bbb6f10e630184f527b20b83fc5c3",
      "patch": "@@ -1,3 +1,15 @@\n+2019-10-21  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 452\n+\t* archive.c (normalize): Return file unchanged when\n+\tBFD_ARCHIVE_FULL_PATH.\n+\t(_bfd_construct_extended_name_table): Pass abfd, the output\n+\tbfd, to normalize.\n+\t(_bfd_archive_bsd44_construct_extended_name_table): Likewise.\n+\t* bfd.c (struct bfd): Make flags a full flagword.\n+\t(BFD_ARCHIVE_FULL_PATH): Define.\n+\t* bfd-in2.h: Regenerate.\n+\n 2019-10-20  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* elf32-hppa.c (elf32_hppa_size_dynamic_sections): Provide 8-byte"
    },
    {
      "sha": "6b7a78ccd97de9a89f29a37f279fcd8f868e0c5c",
      "filename": "bfd/archive.c",
      "status": "modified",
      "additions": 9,
      "deletions": 4,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/bfd/archive.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/bfd/archive.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/archive.c?ref=95cc7c169c4bbb6f10e630184f527b20b83fc5c3",
      "patch": "@@ -1299,6 +1299,9 @@ normalize (bfd *abfd, const char *file)\n   const char *last;\n   char *copy;\n \n+  if (abfd->flags & BFD_ARCHIVE_FULL_PATH)\n+    return file;\n+\n   first = file + strlen (file) - 1;\n   last = first + 1;\n \n@@ -1326,8 +1329,10 @@ normalize (bfd *abfd, const char *file)\n \n #else\n static const char *\n-normalize (bfd *abfd ATTRIBUTE_UNUSED, const char *file)\n+normalize (bfd *abfd, const char *file)\n {\n+  if (abfd->flags & BFD_ARCHIVE_FULL_PATH)\n+    return file;\n   return lbasename (file);\n }\n #endif\n@@ -1562,7 +1567,7 @@ _bfd_construct_extended_name_table (bfd *abfd,\n \t  continue;\n \t}\n \n-      normal = normalize (current, current->filename);\n+      normal = normalize (abfd, current->filename);\n       if (normal == NULL)\n \treturn FALSE;\n \n@@ -1643,7 +1648,7 @@ _bfd_construct_extended_name_table (bfd *abfd,\n \t}\n       else\n \t{\n-\t  normal = normalize (current, filename);\n+\t  normal = normalize (abfd, filename);\n \t  if (normal == NULL)\n \t    return FALSE;\n \t}\n@@ -1714,7 +1719,7 @@ _bfd_archive_bsd44_construct_extended_name_table (bfd *abfd,\n        current != NULL;\n        current = current->archive_next)\n     {\n-      const char *normal = normalize (current, current->filename);\n+      const char *normal = normalize (abfd, current->filename);\n       int has_space = 0;\n       unsigned int len;\n "
    },
    {
      "sha": "30b195a6cf9253bc73d36f32319aa252a972ba63",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=95cc7c169c4bbb6f10e630184f527b20b83fc5c3",
      "patch": "@@ -6498,7 +6498,7 @@ struct bfd\n   ENUM_BITFIELD (bfd_direction) direction : 2;\n \n   /* Format_specific flags.  */\n-  flagword flags : 20;\n+  flagword flags;\n \n   /* Values that may appear in the flags field of a BFD.  These also\n      appear in the object_flags field of the bfd_target structure, where\n@@ -6585,6 +6585,9 @@ struct bfd\n   /* Use the ELF STT_COMMON type in this BFD.  */\n #define BFD_USE_ELF_STT_COMMON  0x80000\n \n+  /* Put pathnames into archives (non-POSIX).  */\n+#define BFD_ARCHIVE_FULL_PATH  0x100000\n+\n   /* Flags bits to be saved in bfd_preserve_save.  */\n #define BFD_FLAGS_SAVED \\\n   (BFD_IN_MEMORY | BFD_COMPRESS | BFD_DECOMPRESS | BFD_LINKER_CREATED \\"
    },
    {
      "sha": "94e9f27e9d0b5cf85c51b187303c2584ab82ede8",
      "filename": "bfd/bfd.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/bfd/bfd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/bfd/bfd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd.c?ref=95cc7c169c4bbb6f10e630184f527b20b83fc5c3",
      "patch": "@@ -92,7 +92,7 @@ CODE_FRAGMENT\n .  ENUM_BITFIELD (bfd_direction) direction : 2;\n .\n .  {* Format_specific flags.  *}\n-.  flagword flags : 20;\n+.  flagword flags;\n .\n .  {* Values that may appear in the flags field of a BFD.  These also\n .     appear in the object_flags field of the bfd_target structure, where\n@@ -179,6 +179,9 @@ CODE_FRAGMENT\n .  {* Use the ELF STT_COMMON type in this BFD.  *}\n .#define BFD_USE_ELF_STT_COMMON  0x80000\n .\n+.  {* Put pathnames into archives (non-POSIX).  *}\n+.#define BFD_ARCHIVE_FULL_PATH  0x100000\n+.\n .  {* Flags bits to be saved in bfd_preserve_save.  *}\n .#define BFD_FLAGS_SAVED \\\n .  (BFD_IN_MEMORY | BFD_COMPRESS | BFD_DECOMPRESS | BFD_LINKER_CREATED \\"
    },
    {
      "sha": "74a223bfc845499bd13cd799523094cf93078287",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=95cc7c169c4bbb6f10e630184f527b20b83fc5c3",
      "patch": "@@ -1,3 +1,13 @@\n+2019-10-21  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 452\n+\tPR 25104\n+\t* ar.c (write_archive): Set BFD_ARCHIVE_FULL_PATH.\n+\t* doc/binutils.texi (extract from archive): Mention\n+\trestrictions when extracting from archives with full paths.\n+\t(ar P): Update to current P support.\n+\t(ar -X32_64): Fix spelling.\n+\n 2019-10-14  Alan Modra  <amodra@gmail.com>\n \n \t* objcopy.c (compare_section_lma): Correct comment.  Dereference"
    },
    {
      "sha": "38c54c9fa8ea7eeadc76da1af35261d101e6c1a3",
      "filename": "binutils/ar.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/binutils/ar.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/binutils/ar.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ar.c?ref=95cc7c169c4bbb6f10e630184f527b20b83fc5c3",
      "patch": "@@ -1200,6 +1200,9 @@ write_archive (bfd *iarch)\n   if (deterministic)\n     obfd->flags |= BFD_DETERMINISTIC_OUTPUT;\n \n+  if (full_pathname)\n+    obfd->flags |= BFD_ARCHIVE_FULL_PATH;\n+\n   if (make_thin_archive || bfd_is_thin_archive (iarch))\n     bfd_set_thin_archive (obfd, TRUE);\n "
    },
    {
      "sha": "2edd7e1aa10993fedab6b6ed5e2aad524fe5e668",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 19,
      "deletions": 8,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95cc7c169c4bbb6f10e630184f527b20b83fc5c3/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=95cc7c169c4bbb6f10e630184f527b20b83fc5c3",
      "patch": "@@ -387,7 +387,10 @@ use the @samp{v} modifier with this operation, to request that\n If you do not specify a @var{member}, all files in the archive\n are extracted.\n \n-Files cannot be extracted from a thin archive.\n+Files cannot be extracted from a thin archive, and there are\n+restrictions on extracting from archives created with @option{P}: The\n+paths must not be absolute, may not contain @code{..}, and any\n+subdirectories in the paths must exist.\n @end table\n \n A number of modifiers (@var{mod}) may immediately follow the @var{p}\n@@ -463,12 +466,20 @@ Display member offsets inside the archive. Use together with the @samp{t}\n option.\n \n @item P\n-Use the full path name when matching names in the archive.  @sc{gnu}\n-@command{ar} can not create an archive with a full path name (such archives\n-are not POSIX compliant), but other archive creators can.  This option\n-will cause @sc{gnu} @command{ar} to match file names using a complete path\n-name, which can be convenient when extracting a single file from an\n-archive created by another tool.\n+Use the full path name when matching or storing names in the archive.\n+Archives created with full path names are not POSIX compliant, and\n+thus may not work with tools other than up to date @sc{gnu} tools.\n+Modifying such archives with @sc{gnu} @command{ar} without using\n+@option{P} will remove the full path names unless the archive is a\n+thin archive.  Note that @option{P} may be useful when adding files to\n+a thin archive since @option{r} without @option{P} ignores the path\n+when choosing which element to replace.  Thus\n+@smallexample\n+ar rcST archive.a subdir/file1 subdir/file2 file1\n+@end smallexample\n+will result in the first @code{subdir/file1} being replaced with\n+@code{file1} from the current directory.  Adding @option{P} will\n+prevent this replacement.\n \n @item s\n @cindex writing archive index\n@@ -533,7 +544,7 @@ and then exits.\n Displays the version information of @command{ar} and then exits.\n \n @item -X32_64\n-@command{ar} ignores an initial option spelt @samp{-X32_64}, for\n+@command{ar} ignores an initial option spelled @samp{-X32_64}, for\n compatibility with AIX.  The behaviour produced by this option is the\n default for @sc{gnu} @command{ar}.  @command{ar} does not support any\n of the other @samp{-X} options; in particular, it does not support"
    }
  ]
}