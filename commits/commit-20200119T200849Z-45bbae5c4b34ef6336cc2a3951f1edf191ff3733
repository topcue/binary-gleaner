{
  "sha": "45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDViYmFlNWM0YjM0ZWY2MzM2Y2MyYTM5NTFmMWVkZjE5MWZmMzczMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-27T15:47:41Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-01-19T20:08:49Z"
    },
    "message": "Remove flickering from the TUI\n\nIn some cases, the TUI flickers when redrawing.  This can be seen\nmostly easily when switching layouts.\n\nThis patch fixes the problem by exploiting the double buffering that\ncurses already does.  In some spots, the TUI will now disable flushing\nthe curses buffers to the screen; and then flush them all at once when\nthe rendering is complete.\n\ngdb/ChangeLog\n2020-01-19  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui.c (tui_show_assembly): Use tui_suppress_output.\n\t* tui/tui-wingeneral.h (class tui_suppress_output): New.\n\t(tui_wrefresh): Declare.\n\t* tui/tui-wingeneral.c (suppress_output): New global.\n\t(tui_suppress_output, ~tui_suppress_output): New constructor and\n\tdestructor.\n\t(tui_wrefresh): New function.\n\t(tui_gen_win_info::refresh_window): Use tui_wrefresh.\n\t(tui_gen_win_info::make_window): Call wnoutrefresh when needed.\n\t* tui/tui-regs.h (struct tui_data_window) <no_refresh>: Declare\n\tmethod.\n\t* tui/tui-regs.c (tui_data_window::erase_data_content): Call\n\ttui_wrefresh.\n\t(tui_data_window::no_refresh): New method.\n\t(tui_data_item_window::refresh_window): Call tui_wrefresh.\n\t(tui_reg_command): Use tui_suppress_output\n\t* tui/tui-layout.c (tui_set_layout): Use tui_suppress_output.\n\t* tui/tui-data.h (struct tui_gen_win_info) <no_refresh>: New\n\tmethod.\n\t* tui/tui-command.c (tui_refresh_cmd_win): Call tui_wrefresh.\n\nChange-Id: Icb832ae100b861de3af3307488e636fa928d5c9f",
    "tree": {
      "sha": "7daa2af44651c0455b9101c8a265ce89037a0dc5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7daa2af44651c0455b9101c8a265ce89037a0dc5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4f13c1c00be32131845ae50aef788d4f2c652dff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f13c1c00be32131845ae50aef788d4f2c652dff",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4f13c1c00be32131845ae50aef788d4f2c652dff"
    }
  ],
  "stats": {
    "total": 121,
    "additions": 116,
    "deletions": 5
  },
  "files": [
    {
      "sha": "a25f7216721ac4c7a9e30900f113894e15d39c28",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
      "patch": "@@ -1,3 +1,26 @@\n+2020-01-19  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui.c (tui_show_assembly): Use tui_suppress_output.\n+\t* tui/tui-wingeneral.h (class tui_suppress_output): New.\n+\t(tui_wrefresh): Declare.\n+\t* tui/tui-wingeneral.c (suppress_output): New global.\n+\t(tui_suppress_output, ~tui_suppress_output): New constructor and\n+\tdestructor.\n+\t(tui_wrefresh): New function.\n+\t(tui_gen_win_info::refresh_window): Use tui_wrefresh.\n+\t(tui_gen_win_info::make_window): Call wnoutrefresh when needed.\n+\t* tui/tui-regs.h (struct tui_data_window) <no_refresh>: Declare\n+\tmethod.\n+\t* tui/tui-regs.c (tui_data_window::erase_data_content): Call\n+\ttui_wrefresh.\n+\t(tui_data_window::no_refresh): New method.\n+\t(tui_data_item_window::refresh_window): Call tui_wrefresh.\n+\t(tui_reg_command): Use tui_suppress_output\n+\t* tui/tui-layout.c (tui_set_layout): Use tui_suppress_output.\n+\t* tui/tui-data.h (struct tui_gen_win_info) <no_refresh>: New\n+\tmethod.\n+\t* tui/tui-command.c (tui_refresh_cmd_win): Call tui_wrefresh.\n+\n 2020-01-19  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.c (tui_update_source_windows_with_line):"
    },
    {
      "sha": "42fc59aac6b5bdf1a0b8bf70a7e63126cc9108e4",
      "filename": "gdb/tui/tui-command.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-command.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-command.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-command.c?ref=45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
      "patch": "@@ -70,7 +70,7 @@ tui_refresh_cmd_win (void)\n {\n   WINDOW *w = TUI_CMD_WIN->handle.get ();\n \n-  wrefresh (w);\n+  tui_wrefresh (w);\n \n   /* FIXME: It's not clear why this is here.\n      It was present in the original tui_puts code and is kept in order to"
    },
    {
      "sha": "6f86122f58f1a467270c2c363da0c9912503e6ff",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
      "patch": "@@ -99,6 +99,13 @@ struct tui_gen_win_info\n     return handle != nullptr;\n   }\n \n+  /* Disable output until the next call to doupdate.  */\n+  virtual void no_refresh ()\n+  {\n+    if (handle != nullptr)\n+      wnoutrefresh (handle.get ());\n+  }\n+\n   /* Window handle.  */\n   std::unique_ptr<WINDOW, curses_deleter> handle;\n   /* Type of window.  */"
    },
    {
      "sha": "3d1e349196acea9639d9edd492b490aab71d9e52",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
      "patch": "@@ -113,6 +113,8 @@ tui_set_layout (enum tui_layout_type layout_type)\n \n   if (new_layout != cur_layout)\n     {\n+      tui_suppress_output suppress;\n+\n       show_layout (new_layout);\n \n       /* Now determine where focus should be.  */"
    },
    {
      "sha": "bedf55cab8b12810f011230f0cc19712f7010e4e",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 12,
      "deletions": 2,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
      "patch": "@@ -381,7 +381,7 @@ tui_data_window::erase_data_content (const char *prompt)\n \tx_pos = half_width - strlen (prompt);\n       mvwaddstr (handle.get (), (height / 2), x_pos, (char *) prompt);\n     }\n-  wrefresh (handle.get ());\n+  tui_wrefresh (handle.get ());\n }\n \n /* See tui-regs.h.  */\n@@ -434,6 +434,14 @@ tui_data_window::refresh_window ()\n     win.refresh_window ();\n }\n \n+void\n+tui_data_window::no_refresh ()\n+{\n+  tui_gen_win_info::no_refresh ();\n+  for (auto &&win : m_regs_content)\n+    win.no_refresh ();\n+}\n+\n /* This function check all displayed registers for changes in values,\n    given a particular frame.  If the values have changed, they are\n    updated with the new value and highlighted.  */\n@@ -502,7 +510,7 @@ tui_data_item_window::refresh_window ()\n \t windows, which according to the ncurses man pages aren't well\n \t supported.  */\n       touchwin (handle.get ());\n-      wrefresh (handle.get ());\n+      tui_wrefresh (handle.get ());\n     }\n }\n \n@@ -574,6 +582,8 @@ tui_reg_command (const char *args, int from_tty)\n       /* Make sure the curses mode is enabled.  */\n       tui_enable ();\n \n+      tui_suppress_output suppress;\n+\n       /* Make sure the register window is visible.  If not, select an\n \t appropriate layout.  We need to do this before trying to run the\n \t 'next' or 'prev' commands.  */"
    },
    {
      "sha": "eee3689aeacafbe42d997be0707c85cc1636356e",
      "filename": "gdb/tui/tui-regs.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-regs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-regs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.h?ref=45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
      "patch": "@@ -70,6 +70,8 @@ struct tui_data_window : public tui_win_info\n \n   void refresh_window () override;\n \n+  void no_refresh () override;\n+\n   const char *name () const override\n   {\n     return DATA_NAME;"
    },
    {
      "sha": "e001a4cd97234d8aaf92f00520029027dc61f5c8",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 44,
      "deletions": 2,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
      "patch": "@@ -30,13 +30,51 @@\n \n #include \"gdb_curses.h\"\n \n+/* This is true if we're currently suppressing output, via\n+   wnoutrefresh.  This is needed in case we create a new window while\n+   in this mode.  */\n+\n+static bool suppress_output;\n+\n+/* See tui-data.h.  */\n+\n+tui_suppress_output::tui_suppress_output ()\n+  : m_saved_suppress (suppress_output)\n+{\n+  suppress_output = true;\n+\n+  for (const auto &win : all_tui_windows ())\n+    win->no_refresh ();\n+}\n+\n+/* See tui-data.h.  */\n+\n+tui_suppress_output::~tui_suppress_output ()\n+{\n+  suppress_output = m_saved_suppress;\n+  if (!suppress_output)\n+    doupdate ();\n+\n+  for (const auto &win : all_tui_windows ())\n+    win->refresh_window ();\n+}\n+\n+/* See tui-data.h.  */\n+\n+void\n+tui_wrefresh (WINDOW *win)\n+{\n+  if (!suppress_output)\n+    wrefresh (win);\n+}\n+\n /* See tui-data.h.  */\n \n void\n tui_gen_win_info::refresh_window ()\n {\n   if (handle != NULL)\n-    wrefresh (handle.get ());\n+    tui_wrefresh (handle.get ());\n }\n \n /* Draw a border arround the window.  */\n@@ -134,7 +172,11 @@ tui_gen_win_info::make_window ()\n {\n   handle.reset (newwin (height, width, y, x));\n   if (handle != NULL)\n-    scrollok (handle.get (), TRUE);\n+    {\n+      if (suppress_output)\n+\twnoutrefresh (handle.get ());\n+      scrollok (handle.get (), TRUE);\n+    }\n }\n \n void"
    },
    {
      "sha": "a28f27c55144cb8842c4af61751149cddc737ccc",
      "filename": "gdb/tui/tui-wingeneral.h",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-wingeneral.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui-wingeneral.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.h?ref=45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
      "patch": "@@ -33,4 +33,27 @@ extern void tui_unhighlight_win (struct tui_win_info *);\n extern void tui_highlight_win (struct tui_win_info *);\n extern void tui_refresh_all ();\n \n+/* An RAII class that suppresses output on construction (calling\n+   wnoutrefresh on the existing windows), and then flushes the output\n+   (via doupdate) when destroyed.  */\n+\n+class tui_suppress_output\n+{\n+public:\n+\n+  tui_suppress_output ();\n+  ~tui_suppress_output ();\n+\n+  DISABLE_COPY_AND_ASSIGN (tui_suppress_output);\n+\n+private:\n+\n+  /* Save the state of the suppression global.  */\n+  bool m_saved_suppress;\n+};\n+\n+/* Call wrefresh on the given window.  However, if output is being\n+   suppressed via tui_suppress_output, do not call wrefresh.  */\n+extern void tui_wrefresh (WINDOW *win);\n+\n #endif /* TUI_TUI_WINGENERAL_H */"
    },
    {
      "sha": "ae3b9f6072de14950daf7110abe46c929e23621a",
      "filename": "gdb/tui/tui.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/45bbae5c4b34ef6336cc2a3951f1edf191ff3733/gdb/tui/tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.c?ref=45bbae5c4b34ef6336cc2a3951f1edf191ff3733",
      "patch": "@@ -30,6 +30,7 @@\n #include \"tui/tui-regs.h\"\n #include \"tui/tui-stack.h\"\n #include \"tui/tui-win.h\"\n+#include \"tui/tui-wingeneral.h\"\n #include \"tui/tui-winsource.h\"\n #include \"tui/tui-source.h\"\n #include \"target.h\"\n@@ -577,6 +578,7 @@ tui_disable_command (const char *args, int from_tty)\n void\n tui_show_assembly (struct gdbarch *gdbarch, CORE_ADDR addr)\n {\n+  tui_suppress_output suppress;\n   tui_add_win_to_layout (DISASSEM_WIN);\n   tui_update_source_windows_with_addr (gdbarch, addr);\n }"
    }
  ]
}