{
  "sha": "442131c1bec1a2ff0b3a5e5d1d91a116ce869dee",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDQyMTMxYzFiZWMxYTJmZjBiM2E1ZTVkMWQ5MWExMTZjZTg2OWRlZQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-02-28T21:33:26Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-03-02T15:06:35Z"
    },
    "message": "gdbserver: Add mechanism to prevent sending T stop packets\n\nThere is a developer only feature in gdbserver that provides a\ncommand line option --disable-packet that prevents some packets from\nbeing sent, which is used to increase test coverage within GDB.\n\nThis commit extends this mechanism to prevent GDBserver from sending\nthe T stop reply packets, instead limiting GDBserver to only send the\nS stop reply packets.\n\nThe S stop reply packet is part of the older target control mechanism,\nwhich has design flaws that were worked around with the introduction\nof the newer target control mechanism, which uses the T stop reply\npacket.\n\nLimiting GDBserver to use S stop packets instead of T stop packets\nwill, inevitably, mean that GDBserver doesn't function correctly in\nmany cases involving multiple threads, however, I don't think this is\ntoo important, this is a developer only feature, intended to allow us\nto test GDB.\n\nA new test that makes use of this feature will be added in the next\ncommit.\n\ngdbserver/ChangeLog:\n\n\t* remote-utils.cc (prepare_resume_reply): Add ability to convert T\n\treply into an S reply.\n\t* server.cc (disable_packet_T): New global.\n\t(captured_main): Set new global when appropriate.\n\t* server.h (disable_packet_T): Declare.",
    "tree": {
      "sha": "c3d01004ab2a2a458b61a1c7e0b8379a741ce9c4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c3d01004ab2a2a458b61a1c7e0b8379a741ce9c4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/442131c1bec1a2ff0b3a5e5d1d91a116ce869dee",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/442131c1bec1a2ff0b3a5e5d1d91a116ce869dee",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/442131c1bec1a2ff0b3a5e5d1d91a116ce869dee",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/442131c1bec1a2ff0b3a5e5d1d91a116ce869dee/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "590003dc0ea7653ead62899d850fba0a5c4a595e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/590003dc0ea7653ead62899d850fba0a5c4a595e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/590003dc0ea7653ead62899d850fba0a5c4a595e"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 32,
    "deletions": 0
  },
  "files": [
    {
      "sha": "7a5a3b7a0371937a4ba84c04b02f4b28aba97740",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/442131c1bec1a2ff0b3a5e5d1d91a116ce869dee/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/442131c1bec1a2ff0b3a5e5d1d91a116ce869dee/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=442131c1bec1a2ff0b3a5e5d1d91a116ce869dee",
      "patch": "@@ -1,3 +1,11 @@\n+2020-03-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* remote-utils.cc (prepare_resume_reply): Add ability to convert T\n+\treply into an S reply.\n+\t* server.cc (disable_packet_T): New global.\n+\t(captured_main): Set new global when appropriate.\n+\t* server.h (disable_packet_T): Declare.\n+\n 2020-02-21  Tom Tromey  <tom@tromey.com>\n \n \t* Makefile.in (mostlyclean): New target."
    },
    {
      "sha": "1c211e2572096eae4df94a37e22f54672f87f981",
      "filename": "gdbserver/remote-utils.cc",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/442131c1bec1a2ff0b3a5e5d1d91a116ce869dee/gdbserver/remote-utils.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/442131c1bec1a2ff0b3a5e5d1d91a116ce869dee/gdbserver/remote-utils.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/remote-utils.cc?ref=442131c1bec1a2ff0b3a5e5d1d91a116ce869dee",
      "patch": "@@ -1204,6 +1204,26 @@ prepare_resume_reply (char *buf, ptid_t ptid,\n \telse\n \t  sprintf (buf, \"T%02x\", status->value.sig);\n \n+\tif (disable_packet_T)\n+\t  {\n+\t    /* This is a bit (OK, a lot) of a kludge, however, this isn't\n+\t       really a user feature, but exists only so GDB can use the\n+\t       gdbserver to test handling of the 'S' stop reply packet, so\n+\t       we would rather this code be as simple as possible.\n+\n+\t       By this point we've started to build the 'T' stop packet,\n+\t       and it should look like 'Txx....' where 'x' is a hex digit.\n+\t       An 'S' stop packet always looks like 'Sxx', so all we do\n+\t       here is convert the buffer from a T packet to an S packet\n+\t       and the avoid adding any extra content by breaking out.  */\n+\t    gdb_assert (*buf == 'T');\n+\t    gdb_assert (isxdigit (*(buf + 1)));\n+\t    gdb_assert (isxdigit (*(buf + 2)));\n+\t    *buf = 'S';\n+\t    *(buf + 3) = '\\0';\n+\t    break;\n+\t  }\n+\n \tbuf += strlen (buf);\n \n \tsaved_thread = current_thread;"
    },
    {
      "sha": "43962adc86c456c72a7a57aa8afe68cb8e5ff4ce",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/442131c1bec1a2ff0b3a5e5d1d91a116ce869dee/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/442131c1bec1a2ff0b3a5e5d1d91a116ce869dee/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=442131c1bec1a2ff0b3a5e5d1d91a116ce869dee",
      "patch": "@@ -130,6 +130,7 @@ bool disable_packet_vCont;\n bool disable_packet_Tthread;\n bool disable_packet_qC;\n bool disable_packet_qfThreadInfo;\n+bool disable_packet_T;\n \n static unsigned char *mem_buf;\n \n@@ -3649,6 +3650,8 @@ captured_main (int argc, char *argv[])\n \t\tdisable_packet_qC = true;\n \t      else if (strcmp (\"qfThreadInfo\", tok) == 0)\n \t\tdisable_packet_qfThreadInfo = true;\n+\t      else if (strcmp (\"T\", tok) == 0)\n+\t\tdisable_packet_T = true;\n \t      else if (strcmp (\"threads\", tok) == 0)\n \t\t{\n \t\t  disable_packet_vCont = true;"
    },
    {
      "sha": "5ef48b62c623c0f81350cf3cf1fac34889d4216e",
      "filename": "gdbserver/server.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/442131c1bec1a2ff0b3a5e5d1d91a116ce869dee/gdbserver/server.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/442131c1bec1a2ff0b3a5e5d1d91a116ce869dee/gdbserver/server.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.h?ref=442131c1bec1a2ff0b3a5e5d1d91a116ce869dee",
      "patch": "@@ -76,6 +76,7 @@ extern bool disable_packet_vCont;\n extern bool disable_packet_Tthread;\n extern bool disable_packet_qC;\n extern bool disable_packet_qfThreadInfo;\n+extern bool disable_packet_T;\n \n extern bool run_once;\n extern bool non_stop;"
    }
  ]
}