{
  "sha": "84b334970bb5892a1f50a3d8e9a569263a502224",
  "node_id": "C_kwDOANOeidoAKDg0YjMzNDk3MGJiNTg5MmExZjUwYTNkOGU5YTU2OTI2M2E1MDIyMjQ",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-27T17:53:16Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-29T17:30:24Z"
    },
    "message": "Fix logging redirection bug with pager\n\nI noticed yesterday that if gdb output is redirected to a file, the\npager will still be active.  This is irritating, because the output\nisn't actually visible -- just the pager prompt.  Looking in bugzilla,\nI found that this had been filed 17 years ago, as PR cli/8798.\n\nThis patch fixes the bug.  It changes the pagination code to query the\nparticular ui-file to see if paging is allowable.  The ui-file\nimplementations are changed so that only the stdout implementation and\na tee (where one sub-file is stdout) can page.\n\nRegression tested on x86-64 Fedora 34.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=8798",
    "tree": {
      "sha": "7ac825ff44093c645540268fa098b8bfb128ba30",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7ac825ff44093c645540268fa098b8bfb128ba30"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/84b334970bb5892a1f50a3d8e9a569263a502224",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/84b334970bb5892a1f50a3d8e9a569263a502224",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/84b334970bb5892a1f50a3d8e9a569263a502224",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/84b334970bb5892a1f50a3d8e9a569263a502224/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ba0084966cfee307631aba6d0f052a39ad773909",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba0084966cfee307631aba6d0f052a39ad773909",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ba0084966cfee307631aba6d0f052a39ad773909"
    }
  ],
  "stats": {
    "total": 73,
    "additions": 72,
    "deletions": 1
  },
  "files": [
    {
      "sha": "8071687b3a1f13e24f2d3424aba06e47facbce85",
      "filename": "gdb/testsuite/gdb.base/page-logging.exp",
      "status": "added",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/84b334970bb5892a1f50a3d8e9a569263a502224/gdb/testsuite/gdb.base/page-logging.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/84b334970bb5892a1f50a3d8e9a569263a502224/gdb/testsuite/gdb.base/page-logging.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/page-logging.exp?ref=84b334970bb5892a1f50a3d8e9a569263a502224",
      "patch": "@@ -0,0 +1,51 @@\n+# Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Do not run if gdb debug is enabled as it will interfere with log redirect.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n+gdb_start\n+\n+gdb_test_no_output \"set width 100\"\n+gdb_test_no_output \"set height 5\"\n+gdb_test_no_output \"set pagination on\"\n+\n+# Test that logging redirect disables the pager.\n+set log_name [standard_output_file log.txt]\n+gdb_test_no_output \"set logging file $log_name\" \\\n+    \"set logging filename\"\n+gdb_test_no_output \"set logging redirect on\"\n+gdb_test \"set logging enabled on\" \"Copying debug output to .*\"\n+set ok 1\n+set str \"1\\\\n2\\\\n3\\\\n4\\\\n5\\\\n\"\n+gdb_test_multiple \"printf \\\"$str\\\"\" \"printf without paging\" {\n+    -re \"$pagination_prompt\" {\n+\tset ok 0\n+\tsend_gdb \"c\\n\"\n+\texp_continue\n+    }\n+    -re \"\\r\\n$gdb_prompt $\" {\n+\t# Ok.\n+    }\n+}\n+if {$ok} {\n+    pass \"printf without paging\"\n+} else {\n+    fail \"printf without paging\"\n+}\n+gdb_test \"set logging enabled off\" \"Done logging to .*\""
    },
    {
      "sha": "0faf84996aa886bba7432450bb94f7dbbf226f01",
      "filename": "gdb/ui-file.h",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/84b334970bb5892a1f50a3d8e9a569263a502224/gdb/ui-file.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/84b334970bb5892a1f50a3d8e9a569263a502224/gdb/ui-file.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-file.h?ref=84b334970bb5892a1f50a3d8e9a569263a502224",
      "patch": "@@ -88,6 +88,14 @@ class ui_file\n      Otherwise, return -1.  */\n   virtual int fd () const\n   { return -1; }\n+\n+  /* Return true if this object supports paging, false otherwise.  */\n+  virtual bool can_page () const\n+  {\n+    /* Almost no file supports paging, which is why this is the\n+       default.  */\n+    return false;\n+  }\n };\n \n typedef std::unique_ptr<ui_file> ui_file_up;\n@@ -204,6 +212,11 @@ class stdio_file : public ui_file\n   int fd () const override\n   { return m_fd; }\n \n+  virtual bool can_page () const override\n+  {\n+    return m_file == stdout;\n+  }\n+\n private:\n   /* Sets the internal stream to FILE, and saves the FILE's file\n      descriptor in M_FD.  */\n@@ -278,6 +291,13 @@ class tee_file : public ui_file\n   bool can_emit_style_escape () override;\n   void flush () override;\n \n+  virtual bool can_page () const override\n+  {\n+    /* If one of the underlying files can page, then we allow it\n+       here.  */\n+    return m_one->can_page () || m_two->can_page ();\n+  }\n+\n private:\n   /* The two underlying ui_files.  */\n   ui_file *m_one;"
    },
    {
      "sha": "f8c898dd502297b1160f86c131d1de4fcba4b635",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/84b334970bb5892a1f50a3d8e9a569263a502224/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/84b334970bb5892a1f50a3d8e9a569263a502224/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=84b334970bb5892a1f50a3d8e9a569263a502224",
      "patch": "@@ -1749,7 +1749,7 @@ fputs_maybe_filtered (const char *linebuffer, struct ui_file *stream,\n     return;\n \n   /* Don't do any filtering if it is disabled.  */\n-  if (stream != gdb_stdout\n+  if (!stream->can_page ()\n       || !pagination_enabled\n       || pagination_disabled_for_command\n       || batch_flag"
    }
  ]
}