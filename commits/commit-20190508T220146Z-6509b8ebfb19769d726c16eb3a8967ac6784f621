{
  "sha": "6509b8ebfb19769d726c16eb3a8967ac6784f621",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjUwOWI4ZWJmYjE5NzY5ZDcyNmMxNmViM2E4OTY3YWM2Nzg0ZjYyMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-04-21T15:20:20Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-08T22:01:46Z"
    },
    "message": "Convert inflow to type-safe registry API\n\nThis changes inflow.c to use the type-safe registry API.  This fixes a\nlatent bug in swap_terminal_info, which previously said:\n\n  terminal_info *info_a\n    = (terminal_info *) inferior_data (a, inflow_inferior_data);\n  terminal_info *info_b\n    = (terminal_info *) inferior_data (a, inflow_inferior_data);\n\n... both of which examine 'a'.\n\ngdb/ChangeLog\n2019-05-08  Tom Tromey  <tom@tromey.com>\n\n\t* inflow.c (struct terminal_info): Add destructor and\n\tinitializers.\n\t(inflow_inferior_data): Change type.\n\t(~terminal_info): Rename from inflow_inferior_data_cleanup.\n\t(get_inflow_inferior_data, inflow_inferior_exit)\n\t(swap_terminal_info, _initialize_inflow): Update.",
    "tree": {
      "sha": "6cd0e48fcc4e659250289cb2cb5d71ac8879d3f6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6cd0e48fcc4e659250289cb2cb5d71ac8879d3f6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6509b8ebfb19769d726c16eb3a8967ac6784f621",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6509b8ebfb19769d726c16eb3a8967ac6784f621",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6509b8ebfb19769d726c16eb3a8967ac6784f621",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6509b8ebfb19769d726c16eb3a8967ac6784f621/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "35632941c90f406f69512c9559ae7ba561f7eee8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/35632941c90f406f69512c9559ae7ba561f7eee8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/35632941c90f406f69512c9559ae7ba561f7eee8"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 27,
    "deletions": 37
  },
  "files": [
    {
      "sha": "e461a063837c2ecf2580640c97554c274db2c1cc",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6509b8ebfb19769d726c16eb3a8967ac6784f621/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6509b8ebfb19769d726c16eb3a8967ac6784f621/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6509b8ebfb19769d726c16eb3a8967ac6784f621",
      "patch": "@@ -1,3 +1,12 @@\n+2019-05-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* inflow.c (struct terminal_info): Add destructor and\n+\tinitializers.\n+\t(inflow_inferior_data): Change type.\n+\t(~terminal_info): Rename from inflow_inferior_data_cleanup.\n+\t(get_inflow_inferior_data, inflow_inferior_exit)\n+\t(swap_terminal_info, _initialize_inflow): Update.\n+\n 2019-05-08  Tom Tromey  <tom@tromey.com>\n \n \t* target-dcache.c (target_dcache_cleanup): Remove."
    },
    {
      "sha": "339b55c0bc69e3ef52cd96636c5b5ea63b84847f",
      "filename": "gdb/inflow.c",
      "status": "modified",
      "additions": 18,
      "deletions": 37,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6509b8ebfb19769d726c16eb3a8967ac6784f621/gdb/inflow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6509b8ebfb19769d726c16eb3a8967ac6784f621/gdb/inflow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inflow.c?ref=6509b8ebfb19769d726c16eb3a8967ac6784f621",
      "patch": "@@ -58,13 +58,16 @@ static struct serial *stdin_serial;\n    the inferior is resumed in the foreground.  */\n struct terminal_info\n {\n+  terminal_info () = default;\n+  ~terminal_info ();\n+\n   /* The name of the tty (from the `tty' command) that we gave to the\n      inferior when it was started.  */\n-  char *run_terminal;\n+  char *run_terminal = nullptr;\n \n   /* TTY state.  We save it whenever the inferior stops, and restore\n      it when it resumes in the foreground.  */\n-  serial_ttystate ttystate;\n+  serial_ttystate ttystate {};\n \n #ifdef HAVE_TERMIOS_H\n   /* The terminal's foreground process group.  Saved whenever the\n@@ -80,11 +83,11 @@ struct terminal_info\n      inf2's pgrp in the foreground instead of inf1's (which would be\n      problematic since it would be left stopped: Ctrl-C wouldn't work,\n      for example).  */\n-  pid_t process_group;\n+  pid_t process_group = 0;\n #endif\n \n   /* fcntl flags.  Saved and restored just like ttystate.  */\n-  int tflags;\n+  int tflags = 0;\n };\n \n /* Our own tty state, which we restore every time we need to deal with\n@@ -623,16 +626,12 @@ child_pass_ctrlc (struct target_ops *self)\n }\n \n /* Per-inferior data key.  */\n-static const struct inferior_data *inflow_inferior_data;\n+static const struct inferior_key<terminal_info> inflow_inferior_data;\n \n-static void\n-inflow_inferior_data_cleanup (struct inferior *inf, void *arg)\n+terminal_info::~terminal_info ()\n {\n-  struct terminal_info *info = (struct terminal_info *) arg;\n-\n-  xfree (info->run_terminal);\n-  xfree (info->ttystate);\n-  xfree (info);\n+  xfree (run_terminal);\n+  xfree (ttystate);\n }\n \n /* Get the current svr4 data.  If none is found yet, add it now.  This\n@@ -643,12 +642,9 @@ get_inflow_inferior_data (struct inferior *inf)\n {\n   struct terminal_info *info;\n \n-  info = (struct terminal_info *) inferior_data (inf, inflow_inferior_data);\n+  info = inflow_inferior_data.get (inf);\n   if (info == NULL)\n-    {\n-      info = XCNEW (struct terminal_info);\n-      set_inferior_data (inf, inflow_inferior_data, info);\n-    }\n+    info = inflow_inferior_data.emplace (inf);\n \n   return info;\n }\n@@ -662,18 +658,8 @@ get_inflow_inferior_data (struct inferior *inf)\n static void\n inflow_inferior_exit (struct inferior *inf)\n {\n-  struct terminal_info *info;\n-\n   inf->terminal_state = target_terminal_state::is_ours;\n-\n-  info = (struct terminal_info *) inferior_data (inf, inflow_inferior_data);\n-  if (info != NULL)\n-    {\n-      xfree (info->run_terminal);\n-      xfree (info->ttystate);\n-      xfree (info);\n-      set_inferior_data (inf, inflow_inferior_data, NULL);\n-    }\n+  inflow_inferior_data.clear (inf);\n }\n \n void\n@@ -705,13 +691,11 @@ copy_terminal_info (struct inferior *to, struct inferior *from)\n void\n swap_terminal_info (inferior *a, inferior *b)\n {\n-  terminal_info *info_a\n-    = (terminal_info *) inferior_data (a, inflow_inferior_data);\n-  terminal_info *info_b\n-    = (terminal_info *) inferior_data (a, inflow_inferior_data);\n+  terminal_info *info_a = inflow_inferior_data.get (a);\n+  terminal_info *info_b = inflow_inferior_data.get (b);\n \n-  set_inferior_data (a, inflow_inferior_data, info_b);\n-  set_inferior_data (b, inflow_inferior_data, info_a);\n+  inflow_inferior_data.set (a, info_b);\n+  inflow_inferior_data.set (b, info_a);\n \n   std::swap (a->terminal_state, b->terminal_state);\n }\n@@ -1006,7 +990,4 @@ _initialize_inflow (void)\n   have_job_control ();\n \n   gdb::observers::inferior_exit.attach (inflow_inferior_exit);\n-\n-  inflow_inferior_data\n-    = register_inferior_data_with_cleanup (NULL, inflow_inferior_data_cleanup);\n }"
    }
  ]
}