{
  "sha": "7697afb662b2ffd67d044209d6d807a8e21dfed9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzY5N2FmYjY2MmIyZmZkNjdkMDQ0MjA5ZDZkODA3YThlMjFkZmVkOQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-01-09T10:38:59Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-01-09T10:38:59Z"
    },
    "message": "x86: consistently convert to byte registers for TEST w/ imm optimization\n\nCommit ac0ab1842d (\"i386: Also check R12-R15 registers when optimizing\ntestq to testb\") didn't go quite far enough: In order to avoid confusing\nother code registers would better be converted to byte ones uniformly.",
    "tree": {
      "sha": "eaeaab01a9809997f43d6edca9dd7e4c3fc3cc21",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eaeaab01a9809997f43d6edca9dd7e4c3fc3cc21"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7697afb662b2ffd67d044209d6d807a8e21dfed9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7697afb662b2ffd67d044209d6d807a8e21dfed9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7697afb662b2ffd67d044209d6d807a8e21dfed9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7697afb662b2ffd67d044209d6d807a8e21dfed9/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d835a58baae720abe909795cb68763040d1750a8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d835a58baae720abe909795cb68763040d1750a8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d835a58baae720abe909795cb68763040d1750a8"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 15,
    "deletions": 11
  },
  "files": [
    {
      "sha": "c3045c13ef4dd3daeb7149335617f126b089dafc",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7697afb662b2ffd67d044209d6d807a8e21dfed9/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7697afb662b2ffd67d044209d6d807a8e21dfed9/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=7697afb662b2ffd67d044209d6d807a8e21dfed9",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-09  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (optimize_encoding): Generalize register\n+\ttransformation for TEST optimization.\n+\n 2020-01-09  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/gas/i386/x86-64-sysenter-amd.s,"
    },
    {
      "sha": "efa43650928ab70f5fd8c6f02fee8a1031277478",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 10,
      "deletions": 11,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7697afb662b2ffd67d044209d6d807a8e21dfed9/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7697afb662b2ffd67d044209d6d807a8e21dfed9/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=7697afb662b2ffd67d044209d6d807a8e21dfed9",
      "patch": "@@ -4009,17 +4009,16 @@ optimize_encoding (void)\n \t  i.types[1].bitfield.byte = 1;\n \t  /* Ignore the suffix.  */\n \t  i.suffix = 0;\n-\t  if (base_regnum >= 4)\n-\t    {\n-\t      /* Handle SP, BP, SI, DI and R12-R15 registers.  */\n-\t      if (i.types[1].bitfield.word)\n-\t\tj = 16;\n-\t      else if (i.types[1].bitfield.dword)\n-\t\tj = 32;\n-\t      else\n-\t\tj = 48;\n-\t      i.op[1].regs -= j;\n-\t    }\n+\t  /* Convert to byte registers.  */\n+\t  if (i.types[1].bitfield.word)\n+\t    j = 16;\n+\t  else if (i.types[1].bitfield.dword)\n+\t    j = 32;\n+\t  else\n+\t    j = 48;\n+\t  if (!(i.op[1].regs->reg_flags & RegRex) && base_regnum < 4)\n+\t    j += 8;\n+\t  i.op[1].regs -= j;\n \t}\n     }\n   else if (flag_code == CODE_64BIT"
    }
  ]
}