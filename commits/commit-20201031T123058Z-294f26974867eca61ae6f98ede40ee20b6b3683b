{
  "sha": "294f26974867eca61ae6f98ede40ee20b6b3683b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Mjk0ZjI2OTc0ODY3ZWNhNjFhZTZmOThlZGU0MGVlMjBiNmIzNjgzYg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-31T12:30:58Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-31T12:30:58Z"
    },
    "message": "gdb: modernize acinclude.m4\n\nRun autoupdate, fix indentation for readability.\n\ngdb/ChangeLog:\n\n\t* acinclude.m4: Modernize.\n\t* configure: Re-generate.\n\nChange-Id: I8949f885326a3206f414776b63a1fdba197bb19a",
    "tree": {
      "sha": "869579d8c58d734f18fa1d80a31cebb4c4660343",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/869579d8c58d734f18fa1d80a31cebb4c4660343"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/294f26974867eca61ae6f98ede40ee20b6b3683b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/294f26974867eca61ae6f98ede40ee20b6b3683b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/294f26974867eca61ae6f98ede40ee20b6b3683b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/294f26974867eca61ae6f98ede40ee20b6b3683b/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0e5b0dd0249bf568f748f207272583bd660e9c79",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e5b0dd0249bf568f748f207272583bd660e9c79",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0e5b0dd0249bf568f748f207272583bd660e9c79"
    }
  ],
  "stats": {
    "total": 69,
    "additions": 47,
    "deletions": 22
  },
  "files": [
    {
      "sha": "b6071bf8cac819b10f213ba9466348f2dc819647",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/294f26974867eca61ae6f98ede40ee20b6b3683b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/294f26974867eca61ae6f98ede40ee20b6b3683b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=294f26974867eca61ae6f98ede40ee20b6b3683b",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* acinclude.m4: Modernize.\n+\t* configure: Re-generate.\n+\n 2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* configure.ac: Modernize."
    },
    {
      "sha": "64574e2631428b088beb0ec8f9805f6c9db58abd",
      "filename": "gdb/acinclude.m4",
      "status": "modified",
      "additions": 32,
      "deletions": 16,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/294f26974867eca61ae6f98ede40ee20b6b3683b/gdb/acinclude.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/294f26974867eca61ae6f98ede40ee20b6b3683b/gdb/acinclude.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/acinclude.m4?ref=294f26974867eca61ae6f98ede40ee20b6b3683b",
      "patch": "@@ -98,13 +98,22 @@ dnl to use a different cache variable name in this macro if it is invoked\n dnl in a different context somewhere else.\n dnl gcc_AC_CHECK_DECL(SYMBOL,\n dnl \t[ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, INCLUDES]]])\n-AC_DEFUN([gcc_AC_CHECK_DECL],\n-[AC_MSG_CHECKING([whether $1 is declared])\n-AC_CACHE_VAL(gcc_cv_have_decl_$1,\n-[AC_TRY_COMPILE([$4],\n-[#ifndef $1\n-char *(*pfn) = (char *(*)) $1 ;\n-#endif], eval \"gcc_cv_have_decl_$1=yes\", eval \"gcc_cv_have_decl_$1=no\")])\n+AC_DEFUN(\n+  [gcc_AC_CHECK_DECL],\n+  [AC_MSG_CHECKING([whether $1 is declared])\n+   AC_CACHE_VAL(\n+     [gcc_cv_have_decl_$1],\n+     [AC_COMPILE_IFELSE(\n+\t[AC_LANG_PROGRAM(\n+\t   [$4],\n+\t   [#ifndef $1\n+\t    char *(*pfn) = (char *(*)) $1 ;\n+\t    #endif]\n+\t )],\n+\t[eval \"gcc_cv_have_decl_$1=yes\"],\n+\t[eval \"gcc_cv_have_decl_$1=no\"]\n+      )]\n+   )\n if eval \"test \\\"`echo '$gcc_cv_have_decl_'$1`\\\" = yes\"; then\n   AC_MSG_RESULT(yes) ; ifelse([$2], , :, [$2])\n else\n@@ -159,7 +168,7 @@ AC_DEFUN([CY_AC_TCL_PRIVATE_HEADERS], [\n   fi\n \n   if test x\"${private_dir}\" = x; then\n-    AC_ERROR(could not find private Tcl headers)\n+    AC_MSG_ERROR(could not find private Tcl headers)\n   else\n     TCL_PRIVATE_INCLUDE=\"-I${private_dir}\"\n     AC_MSG_RESULT(${private_dir})\n@@ -180,7 +189,7 @@ AC_DEFUN([CY_AC_TK_PRIVATE_HEADERS], [\n   fi\n \n   if test x\"${private_dir}\" = x; then\n-    AC_ERROR(could not find Tk private headers)\n+    AC_MSG_ERROR(could not find Tk private headers)\n   else\n     TK_PRIVATE_INCLUDE=\"-I${private_dir}\"\n     AC_MSG_RESULT(${private_dir})\n@@ -251,13 +260,20 @@ AC_DEFUN([GDB_AC_CHECK_BFD], [\n   LDFLAGS=\"-L../bfd -L../libiberty $ZLIBDIR $LDFLAGS\"\n   intl=`echo $LIBINTL | sed 's,${top_builddir}/,,g'`\n   LIBS=\"-lbfd -liberty -lz $intl $LIBS\"\n-  AC_CACHE_CHECK([$1], [$2],\n-  [AC_TRY_LINK(\n-  [#include <stdlib.h>\n-  #include \"bfd.h\"\n-  #include \"$4\"\n-  ],\n-  [return $3;], [[$2]=yes], [[$2]=no])])\n+  AC_CACHE_CHECK(\n+    [$1],\n+    [$2],\n+    [AC_LINK_IFELSE(\n+       [AC_LANG_PROGRAM(\n+\t  [#include <stdlib.h>\n+\t   #include \"bfd.h\"\n+\t   #include \"$4\"],\n+\t  [return $3;]\n+\t)],\n+       [[$2]=yes],\n+       [[$2]=no]\n+     )]\n+  )\n   CFLAGS=$OLD_CFLAGS\n   LDFLAGS=$OLD_LDFLAGS\n   LIBS=$OLD_LIBS])"
    },
    {
      "sha": "ec36cc1909385b829c91223e1b11d92c6bdfb261",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/294f26974867eca61ae6f98ede40ee20b6b3683b/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/294f26974867eca61ae6f98ede40ee20b6b3683b/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=294f26974867eca61ae6f98ede40ee20b6b3683b",
      "patch": "@@ -16734,13 +16734,13 @@ else\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n #include <stdlib.h>\n-  #include \"bfd.h\"\n-  #include \"elf-bfd.h\"\n-\n+\t   #include \"bfd.h\"\n+\t   #include \"elf-bfd.h\"\n int\n main ()\n {\n return bfd_get_elf_phdr_upper_bound (NULL);\n+\n   ;\n   return 0;\n }\n@@ -16749,9 +16749,11 @@ if ac_fn_c_try_link \"$LINENO\"; then :\n   gdb_cv_var_elf=yes\n else\n   gdb_cv_var_elf=no\n+\n fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n+\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_var_elf\" >&5\n $as_echo \"$gdb_cv_var_elf\" >&6; }\n@@ -16845,13 +16847,13 @@ else\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n #include <stdlib.h>\n-  #include \"bfd.h\"\n-  #include \"mach-o.h\"\n-\n+\t   #include \"bfd.h\"\n+\t   #include \"mach-o.h\"\n int\n main ()\n {\n return bfd_mach_o_lookup_command (NULL, 0, NULL);\n+\n   ;\n   return 0;\n }\n@@ -16860,9 +16862,11 @@ if ac_fn_c_try_link \"$LINENO\"; then :\n   gdb_cv_var_macho=yes\n else\n   gdb_cv_var_macho=no\n+\n fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n+\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_var_macho\" >&5\n $as_echo \"$gdb_cv_var_macho\" >&6; }"
    }
  ]
}