{
  "sha": "cc12f4a8f97791cf9729ff9341f7c0fbd9d6a79e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2MxMmY0YThmOTc3OTFjZjk3MjlmZjkzNDFmN2MwZmJkOWQ2YTc5ZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-02-13T12:42:18Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-02-15T20:21:39Z"
    },
    "message": "Fix memory leak in create_ada_exception_catchpoint\n\nPhillipe noticed that create_ada_exception_catchpoint was not freeing\nthe \"addr_string\" memory:\n\n==14141== 114 bytes in 4 blocks are definitely lost in loss record 1,054 of 3,424\n==14141==    at 0x4C2BE6D: malloc (vg_replace_malloc.c:309)\n==14141==    by 0x405107: xmalloc (common-utils.c:44)\n==14141==    by 0x7563F9: xstrdup (xstrdup.c:34)\n==14141==    by 0x381B21: ada_exception_sal (ada-lang.c:13217)\n==14141==    by 0x381B21: create_ada_exception_catchpoint(gdbarch*, ada_exception_catchpoint_kind, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int, int) (ada-lang.c:13251)\n==14141==    by 0x3820A8: catch_ada_exception_command(char const*, int, cmd_list_element*) (ada-lang.c:13285)\n==14141==    by 0x3F4828: cmd_func(cmd_list_element*, char const*, int) (cli-decode.c:1892)\n\nThis patch fixes the problem by changing ada_exception_sal to return a\nstd::string via its out parameter.\n\ngdb/ChangeLog\n2019-02-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\t    Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (ada_exception_sal): Change addr_string to a\n\tstd::string.\n\t(create_ada_exception_catchpoint): Update.",
    "tree": {
      "sha": "bd571207b968a3430d9a4e4f0911c51b35dbb29d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bd571207b968a3430d9a4e4f0911c51b35dbb29d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cc12f4a8f97791cf9729ff9341f7c0fbd9d6a79e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc12f4a8f97791cf9729ff9341f7c0fbd9d6a79e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cc12f4a8f97791cf9729ff9341f7c0fbd9d6a79e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc12f4a8f97791cf9729ff9341f7c0fbd9d6a79e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5f486660101ab09d50fa3bb9a10555f12722f39f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f486660101ab09d50fa3bb9a10555f12722f39f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5f486660101ab09d50fa3bb9a10555f12722f39f"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 11,
    "deletions": 4
  },
  "files": [
    {
      "sha": "37f505d00b26b23e89089efa73cf321abdc21b70",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc12f4a8f97791cf9729ff9341f7c0fbd9d6a79e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc12f4a8f97791cf9729ff9341f7c0fbd9d6a79e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cc12f4a8f97791cf9729ff9341f7c0fbd9d6a79e",
      "patch": "@@ -1,3 +1,10 @@\n+2019-02-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\t    Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (ada_exception_sal): Change addr_string to a\n+\tstd::string.\n+\t(create_ada_exception_catchpoint): Update.\n+\n 2019-02-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \t    Tom Tromey  <tromey@adacore.com>\n "
    },
    {
      "sha": "c775b09b89eca5d58b592dfc9f3e6fd1c1a25a4f",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc12f4a8f97791cf9729ff9341f7c0fbd9d6a79e/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc12f4a8f97791cf9729ff9341f7c0fbd9d6a79e/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=cc12f4a8f97791cf9729ff9341f7c0fbd9d6a79e",
      "patch": "@@ -13176,7 +13176,7 @@ ada_exception_catchpoint_cond_string (const char *excep_string,\n \n static struct symtab_and_line\n ada_exception_sal (enum ada_exception_catchpoint_kind ex,\n-\t\t   const char **addr_string, const struct breakpoint_ops **ops)\n+\t\t   std::string *addr_string, const struct breakpoint_ops **ops)\n {\n   const char *sym_name;\n   struct symbol *sym;\n@@ -13196,7 +13196,7 @@ ada_exception_sal (enum ada_exception_catchpoint_kind ex,\n     error (_(\"Unable to insert catchpoint. %s is not a function.\"), sym_name);\n \n   /* Set ADDR_STRING.  */\n-  *addr_string = xstrdup (sym_name);\n+  *addr_string = sym_name;\n \n   /* Set OPS.  */\n   *ops = ada_exception_breakpoint_ops (ex);\n@@ -13228,12 +13228,12 @@ create_ada_exception_catchpoint (struct gdbarch *gdbarch,\n \t\t\t\t int disabled,\n \t\t\t\t int from_tty)\n {\n-  const char *addr_string = NULL;\n+  std::string addr_string;\n   const struct breakpoint_ops *ops = NULL;\n   struct symtab_and_line sal = ada_exception_sal (ex_kind, &addr_string, &ops);\n \n   std::unique_ptr<ada_catchpoint> c (new ada_catchpoint ());\n-  init_ada_exception_breakpoint (c.get (), gdbarch, sal, addr_string,\n+  init_ada_exception_breakpoint (c.get (), gdbarch, sal, addr_string.c_str (),\n \t\t\t\t ops, tempflag, disabled, from_tty);\n   c->excep_string = excep_string;\n   create_excep_cond_exprs (c.get (), ex_kind);"
    }
  ]
}