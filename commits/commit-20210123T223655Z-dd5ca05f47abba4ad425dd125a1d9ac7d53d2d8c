{
  "sha": "dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGQ1Y2EwNWY0N2FiYmE0YWQ0MjVkZDEyNWExZDlhYzdkNTNkMmQ4Yw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-23T22:36:55Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-23T22:36:55Z"
    },
    "message": "gdb: fix regression in copy_type_recursive\n\nCommit 5b7d941b90d1 (\"gdb: add owner-related methods to struct type\")\nintroduced a regression when running gdb.base/jit-reader-simple.exp and\nothers.  A NULL pointer dereference happens here:\n\n    #3  0x0000557b7e9e8650 in gdbarch_obstack (arch=0x0) at /home/simark/src/binutils-gdb/gdb/gdbarch.c:484\n    #4  0x0000557b7ea5b138 in copy_type_recursive (objfile=0x614000006640, type=0x62100018da80, copied_types=0x62100018e280) at /home/simark/src/binutils-gdb/gdb/gdbtypes.c:5537\n    #5  0x0000557b7ea5dcbb in copy_type_recursive (objfile=0x614000006640, type=0x62100018e200, copied_types=0x62100018e280) at /home/simark/src/binutils-gdb/gdb/gdbtypes.c:5598\n    #6  0x0000557b802cef51 in preserve_one_value (value=0x6110000b3640, objfile=0x614000006640, copied_types=0x62100018e280) at /home/simark/src/binutils-gdb/gdb/value.c:2518\n    #7  0x0000557b802cf787 in preserve_values (objfile=0x614000006640) at /home/simark/src/binutils-gdb/gdb/value.c:2562\n    #8  0x0000557b7fbaf19b in reread_symbols () at /home/simark/src/binutils-gdb/gdb/symfile.c:2489\n    #9  0x0000557b7ec65d1d in run_command_1 (args=0x0, from_tty=1, run_how=RUN_NORMAL) at /home/simark/src/binutils-gdb/gdb/infcmd.c:439\n    #10 0x0000557b7ec67a97 in run_command (args=0x0, from_tty=1) at /home/simark/src/binutils-gdb/gdb/infcmd.c:546\n\nThis is inside a TYPE_ALLOC macro.  The fact that gdbarch_obstack is\ncalled means that the type is flagged as being arch-owned, but arch=0x0\nmeans that type::arch returned NULL, probably meaning that the m_owner\nfield contains NULL.\n\nIf we look at the code before the problematic patch, in the\ncopy_type_recursive function, we see:\n\n    if (! TYPE_OBJFILE_OWNED (type))\n      return type;\n\n    ...\n\n    TYPE_OBJFILE_OWNED (new_type) = 0;\n    TYPE_OWNER (new_type).gdbarch = get_type_arch (type);\n\nThe last two lines were replaced with:\n\n    new_type->set_owner (type->arch ());\n\nget_type_arch and type->arch isn't the same thing: get_type_arch gets\nthe type's arch owner if it is arch-owned, and gets the objfile's arch\nif the type is objfile owned.  So it always returns non-NULL.\ntype->arch returns the type's arch if the type is arch-owned, else NULL.\nSo since the original type is objfile owned, it effectively made the new\ntype arch-owned (that is good) but set the owner to NULL (that is bad).\n\nFix this by using get_type_arch again there.\n\nI spotted one other similar change in lookup_array_range_type, in the\noriginal patch.  But that one appears to be correct, as it is executed\nonly if the type is arch-owned.\n\nAdd some asserts in type::set_owner to ensure we never set a NULL owner.\nThat would have helped catch the issue a little bit earlier, so it could\nhelp in the future.\n\ngdb/ChangeLog:\n\n\t* gdbtypes.c (copy_type_recursive): Use get_type_arch.\n\t* gdbtypes.h (struct type) <set_owner>: Add asserts.\n\nChange-Id: I5d8bc7bfc83b3abc579be0b5aadeae4241179a00",
    "tree": {
      "sha": "31c9bd331ce45b02cf97d7f336ecd8dabfdec22d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/31c9bd331ce45b02cf97d7f336ecd8dabfdec22d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d3ee35dbf754b72461f67a29892fff0d10961065",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3ee35dbf754b72461f67a29892fff0d10961065",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d3ee35dbf754b72461f67a29892fff0d10961065"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 10,
    "deletions": 1
  },
  "files": [
    {
      "sha": "c1eedea35d79aa5686f91e28d8df3c87cd9b1717",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-23  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* gdbtypes.c (copy_type_recursive): Use get_type_arch.\n+\t* gdbtypes.h (struct type) <set_owner>: Add asserts.\n+\n 2021-01-23  Lancelot SIX  <lsix@lancelotsix.com>\n \n \t* Makefile.in (SELFTESTS_SRCS): Add"
    },
    {
      "sha": "b66b89c7e5641602a2d0fda1c64245403e0ac208",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c",
      "patch": "@@ -5518,7 +5518,7 @@ copy_type_recursive (struct objfile *objfile,\n      copy the entire thing and then update specific fields as needed.  */\n   *TYPE_MAIN_TYPE (new_type) = *TYPE_MAIN_TYPE (type);\n \n-  new_type->set_owner (type->arch ());\n+  new_type->set_owner (get_type_arch (type));\n \n   if (type->name ())\n     new_type->set_name (xstrdup (type->name ()));"
    },
    {
      "sha": "2e0b01a37dfb37ba31393fd31741553188beca32",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=dd5ca05f47abba4ad425dd125a1d9ac7d53d2d8c",
      "patch": "@@ -1245,13 +1245,17 @@ struct type\n   /* Set the owner of the type to be OBJFILE.  */\n   void set_owner (objfile *objfile)\n   {\n+    gdb_assert (objfile != nullptr);\n+\n     this->main_type->m_owner.objfile = objfile;\n     this->main_type->m_flag_objfile_owned = true;\n   }\n \n   /* Set the owner of the type to be ARCH.  */\n   void set_owner (gdbarch *arch)\n   {\n+    gdb_assert (arch != nullptr);\n+\n     this->main_type->m_owner.gdbarch = arch;\n     this->main_type->m_flag_objfile_owned = false;\n   }"
    }
  ]
}