{
  "sha": "2608aff5526471705d6e24340301f3753fc43e35",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjYwOGFmZjU1MjY0NzE3MDVkNmUyNDM0MDMwMWYzNzUzZmM0M2UzNQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-06-28T19:28:49Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-06-28T19:28:49Z"
    },
    "message": "gdb: use gdb_bfd_count_sections in macho_symfile_offsets\n\nWhen loading a mach-o (macOS) executable and trying to set a breakpoint,\na GDB built with ASan or -D_GLIBCXX_DEBUG will crash with an\nout-of-bound vector access.  This can be reproduced on Linux using the\nrepro files in bug 28017 [1]:\n\n    $ ./gdb -nx --data-directory=data-directory -q repro/test -ex \"b main\" -batch\n    /usr/include/c++/11.1.0/debug/vector:445:\n    In function:\n        std::__debug::vector<_Tp, _Allocator>::const_reference\n        std::__debug::vector<_Tp,\n        _Allocator>::operator[](std::__debug::vector<_Tp,\n        _Allocator>::size_type) const [with _Tp = long unsigned int; _Allocator\n        = std::allocator<long unsigned int>; std::__debug::vector<_Tp,\n        _Allocator>::const_reference = const long unsigned int&;\n        std::__debug::vector<_Tp, _Allocator>::size_type = long unsigned int]\n\n    Error: attempt to subscript container with out-of-bounds index 13, but\n    container only holds 13 elements.\n\n    Objects involved in the operation:\n        sequence \"this\" @ 0x0x61300000a590 {\n          type = std::__debug::vector<unsigned long, std::allocator<unsigned long> >;\n        }\n\nThe out-of-bound access happens here:\n\n    #0  0x00007ffff6405d22 in raise () from /usr/lib/libc.so.6\n    #1  0x00007ffff63ef862 in abort () from /usr/lib/libc.so.6\n    #2  0x00007ffff664e21e in __gnu_debug::_Error_formatter::_M_error() const [clone .cold] from /usr/lib/libstdc++.so.6\n    #3  0x000055555699e5ff in std::__debug::vector<unsigned long, std::allocator<unsigned long> >::operator[] (this=0x61300000a590, __n=13) at /usr/include/c++/11.1.0/debug/vector:445\n    #4  0x0000555556a58c17 in objfile::section_offset (this=0x61300000a4c0, section=0x55555bbe4ac0 <_bfd_std_section>) at /home/simark/src/binutils-gdb/gdb/objfiles.h:644\n    #5  0x0000555556a58cac in obj_section::offset (this=0x62100016d2a8) at /home/simark/src/binutils-gdb/gdb/objfiles.h:838\n    #6  0x0000555556a58cfa in obj_section::addr (this=0x62100016d2a8) at /home/simark/src/binutils-gdb/gdb/objfiles.h:850\n    #7  0x000055555779f5f7 in sort_cmp (sect1=0x62100016d2a8, sect2=0x62100016d170) at /home/simark/src/binutils-gdb/gdb/objfiles.c:902\n    #8  0x00005555577aae35 in __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(obj_section const*, obj_section const*)>::operator()<obj_section**, obj_section**> (this=0x7fffffffa9e0, __it1=0x60c000015970, __it2=0x60c000015940) at /usr/include/c++/11.1.0/bits/predefined_ops.h:158\n    #9  0x00005555577aa2b8 in std::__insertion_sort<obj_section**, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(obj_section const*, obj_section const*)> > (__first=0x60c000015940, __last=0x60c0000159c0, __comp=...) at /usr/include/c++/11.1.0/bits/stl_algo.h:1826\n    #10 0x00005555577a8e26 in std::__final_insertion_sort<obj_section**, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(obj_section const*, obj_section const*)> > (__first=0x60c000015940, __last=0x60c0000159c0, __comp=...) at /usr/include/c++/11.1.0/bits/stl_algo.h:1871\n    #11 0x00005555577a723c in std::__sort<obj_section**, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(obj_section const*, obj_section const*)> > (__first=0x60c000015940, __last=0x60c0000159c0, __comp=...) at /usr/include/c++/11.1.0/bits/stl_algo.h:1957\n    #12 0x00005555577a50f4 in std::sort<obj_section**, bool (*)(obj_section const*, obj_section const*)> (__first=0x60c000015940, __last=0x60c0000159c0, __comp=0x55555779f4e7 <sort_cmp(obj_section const*, obj_section const*)>) at /usr/include/c++/11.1.0/bits/stl_algo.h:4875\n    #13 0x00005555577a147e in update_section_map (pspace=0x61200001d2c0, pmap=0x6030000d40b0, pmap_size=0x6030000d40b8) at /home/simark/src/binutils-gdb/gdb/objfiles.c:1165\n    #14 0x00005555577a19a0 in find_pc_section (pc=0x100003fa0) at /home/simark/src/binutils-gdb/gdb/objfiles.c:1212\n    #15 0x00005555576dd39e in lookup_minimal_symbol_by_pc_section (pc_in=0x100003fa0, section=0x0, prefer=lookup_msym_prefer::TEXT, previous=0x0) at /home/simark/src/binutils-gdb/gdb/minsyms.c:750\n    #16 0x00005555576de552 in lookup_minimal_symbol_by_pc (pc=0x100003fa0) at /home/simark/src/binutils-gdb/gdb/minsyms.c:986\n    #17 0x0000555557d44b54 in find_pc_sect_line (pc=0x100003fa0, section=0x62100016d170, notcurrent=0) at /home/simark/src/binutils-gdb/gdb/symtab.c:3163\n    #18 0x0000555557d489fa in find_function_start_sal_1 (func_addr=0x100003fa0, section=0x62100016d170, funfirstline=true) at /home/simark/src/binutils-gdb/gdb/symtab.c:3650\n    #19 0x0000555557d49015 in find_function_start_sal (sym=0x621000191670, funfirstline=true) at /home/simark/src/binutils-gdb/gdb/symtab.c:3706\n    #20 0x0000555557485283 in symbol_to_sal (result=0x7fffffffbb30, funfirstline=1, sym=0x621000191670) at /home/simark/src/binutils-gdb/gdb/linespec.c:4460\n    #21 0x00005555574728c2 in convert_linespec_to_sals (state=0x7fffffffc390, ls=0x7fffffffc3e0) at /home/simark/src/binutils-gdb/gdb/linespec.c:2335\n    #22 0x0000555557475a8e in parse_linespec (parser=0x7fffffffc360, arg=0x60200007a550 \"main\", match_type=symbol_name_match_type::WILD) at /home/simark/src/binutils-gdb/gdb/linespec.c:2716\n    #23 0x0000555557479027 in event_location_to_sals (parser=0x7fffffffc360, location=0x606000097be0) at /home/simark/src/binutils-gdb/gdb/linespec.c:3173\n    #24 0x00005555574798f7 in decode_line_full (location=0x606000097be0, flags=1, search_pspace=0x0, default_symtab=0x0, default_line=0, canonical=0x7fffffffcca0, select_mode=0x0, filter=0x0) at /home/simark/src/binutils-gdb/gdb/linespec.c:3253\n    #25 0x0000555556b4949f in parse_breakpoint_sals (location=0x606000097be0, canonical=0x7fffffffcca0) at /home/simark/src/binutils-gdb/gdb/breakpoint.c:9134\n    #26 0x0000555556b6ce95 in create_sals_from_location_default (location=0x606000097be0, canonical=0x7fffffffcca0, type_wanted=bp_breakpoint) at /home/simark/src/binutils-gdb/gdb/breakpoint.c:13819\n    #27 0x0000555556b645a6 in bkpt_create_sals_from_location (location=0x606000097be0, canonical=0x7fffffffcca0, type_wanted=bp_breakpoint) at /home/simark/src/binutils-gdb/gdb/breakpoint.c:12631\n    #28 0x0000555556b4badf in create_breakpoint (gdbarch=0x621000152d10, location=0x606000097be0, cond_string=0x0, thread=0, extra_string=0x0, force_condition=false, parse_extra=1, tempflag=0, type_wanted=bp_breakpoint, ignore_count=0, pending_break_support=AUTO_BOOLEAN_AUTO, ops=0x55555bd728a0 <bkpt_breakpoint_ops>, from_tty=0, enabled=1, internal=0, flags=0) at /home/simark/src/binutils-gdb/gdb/breakpoint.c:9410\n    #29 0x0000555556b4d3b1 in break_command_1 (arg=0x7fffffffe291 \"\", flag=0, from_tty=0) at /home/simark/src/binutils-gdb/gdb/breakpoint.c:9590\n    #30 0x0000555556b4dc1b in break_command (arg=0x7fffffffe28d \"main\", from_tty=0) at /home/simark/src/binutils-gdb/gdb/breakpoint.c:9660\n    #31 0x0000555556d24ca9 in do_const_cfunc (c=0x61100003a240, args=0x7fffffffe28d \"main\", from_tty=0) at /home/simark/src/binutils-gdb/gdb/cli/cli-decode.c:102\n    #32 0x0000555556d2fcd3 in cmd_func (cmd=0x61100003a240, args=0x7fffffffe28d \"main\", from_tty=0) at /home/simark/src/binutils-gdb/gdb/cli/cli-decode.c:2160\n    #33 0x0000555557e84e93 in execute_command (p=0x7fffffffe290 \"n\", from_tty=0) at /home/simark/src/binutils-gdb/gdb/top.c:674\n    #34 0x00005555575a9933 in catch_command_errors (command=0x555557e84043 <execute_command(char const*, int)>, arg=0x7fffffffe28b \"b main\", from_tty=0, do_bp_actions=true) at /home/simark/src/binutils-gdb/gdb/main.c:523\n    #35 0x00005555575a9fdb in execute_cmdargs (cmdarg_vec=0x7fffffffd910, file_type=CMDARG_FILE, cmd_type=CMDARG_COMMAND, ret=0x7fffffffd5b0) at /home/simark/src/binutils-gdb/gdb/main.c:618\n    #36 0x00005555575ad48a in captured_main_1 (context=0x7fffffffdd00) at /home/simark/src/binutils-gdb/gdb/main.c:1322\n    #37 0x00005555575ada9c in captured_main (data=0x7fffffffdd00) at /home/simark/src/binutils-gdb/gdb/main.c:1343\n    #38 0x00005555575adb31 in gdb_main (args=0x7fffffffdd00) at /home/simark/src/binutils-gdb/gdb/main.c:1368\n    #39 0x000055555681e179 in main (argc=8, argv=0x7fffffffde78) at /home/simark/src/binutils-gdb/gdb/gdb.c:32\n\nThe section being dealt with at that moment is the special *COM*\nsection:\n\n    (top-gdb) p section.name\n    $1 = 0x55555a1bbe60 \"*COM*\"\n    (top-gdb) p section\n    $2 = (bfd_section *) 0x55555bbe4ac0 <_bfd_std_section>\n\nI'm not too sure what this section is for, but this is one of four\nspecial BFD sections that GDB puts after the regular sections in the\nobjfile::sections and objfile::section_offsets lists.  You can check\ngdb_bfd_section_index to see how they are handled.\ngdb_bfd_count_sections returns \"+ 4\" to account for those sections.\n\nThe problem is that macho_symfile_offsets uses bfd_count_sections\ninstead of gdb_bfd_count_sections when allocating the\nobjfile::section_offsets vector.  The vector will therefore contain,\nsay, 13 elements instead of 17.  When trying to access the section\noffset of the *COM* section, the first after the regular sections, we\naccess section_offsets[13], which is out of bounds.\n\nFix that by using gdb_bfd_count_sections instead of bfd_count_sections.\nI'm fairly confident that this is correct, as this is what\ndefault_symfile_offsets does.\n\nWith this patch, the command shown above terminates normally:\n\n    $ ./gdb -nx --data-directory=data-directory -q repro/test -ex \"b main\" -batch\n    Breakpoint 1 at 0x100003fad: file test.c, line 2.\n\n[1] https://sourceware.org/bugzilla/show_bug.cgi?id=28017\n\ngdb/ChangeLog:\n\n\tPR gdb/28017\n\t* machoread.c (macho_symfile_offsets): Use\n\tgdb_bfd_count_sections to allocate objfile::section_offsets.\n\nChange-Id: Ic3a56f46f7232e9f24581f8255fc1ab981935450",
    "tree": {
      "sha": "97b6bb5d849ccb397198e22e57ff0515b06254fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/97b6bb5d849ccb397198e22e57ff0515b06254fc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2608aff5526471705d6e24340301f3753fc43e35",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2608aff5526471705d6e24340301f3753fc43e35",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2608aff5526471705d6e24340301f3753fc43e35",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2608aff5526471705d6e24340301f3753fc43e35/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0c1bcd23274e9f465dc43eda4fc467150631f824",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0c1bcd23274e9f465dc43eda4fc467150631f824",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0c1bcd23274e9f465dc43eda4fc467150631f824"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 7,
    "deletions": 1
  },
  "files": [
    {
      "sha": "022d25cf0cf47672a047c7220785164a3cef2d68",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2608aff5526471705d6e24340301f3753fc43e35/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2608aff5526471705d6e24340301f3753fc43e35/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2608aff5526471705d6e24340301f3753fc43e35",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-28  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\tPR gdb/28017\n+\t* machoread.c (macho_symfile_offsets): Use\n+\tgdb_bfd_count_sections to allocate objfile::section_offsets.\n+\n 2021-06-28  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* objfiles.h (struct obj_section): Move down."
    },
    {
      "sha": "b3bd54940b40c97b5a6050a90bb62bd8288a65f0",
      "filename": "gdb/machoread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2608aff5526471705d6e24340301f3753fc43e35/gdb/machoread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2608aff5526471705d6e24340301f3753fc43e35/gdb/machoread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/machoread.c?ref=2608aff5526471705d6e24340301f3753fc43e35",
      "patch": "@@ -907,7 +907,7 @@ macho_symfile_offsets (struct objfile *objfile,\n   struct obj_section *osect;\n \n   /* Allocate section_offsets.  */\n-  objfile->section_offsets.assign (bfd_count_sections (objfile->obfd), 0);\n+  objfile->section_offsets.assign (gdb_bfd_count_sections (objfile->obfd), 0);\n \n   /* This code is run when we first add the objfile with\n      symfile_add_with_addrs_or_offsets, when \"addrs\" not \"offsets\" are"
    }
  ]
}