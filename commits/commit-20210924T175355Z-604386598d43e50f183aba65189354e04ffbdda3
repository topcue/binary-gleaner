{
  "sha": "604386598d43e50f183aba65189354e04ffbdda3",
  "node_id": "C_kwDOANOeidoAKDYwNDM4NjU5OGQ0M2U1MGYxODNhYmE2NTE4OTM1NGUwNGZmYmRkYTM",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-09-24T14:38:20Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-09-24T17:53:55Z"
    },
    "message": "Make dcache multi-target-safe\n\nBy inspection, I noticed that this code in dcache.c is not\nmulti-target-aware:\n\n  /* If this is a different inferior from what we've recorded,\n     flush the cache.  */\n\n  if (inferior_ptid != dcache->ptid)\n\nThis doesn't take into account that threads of different targets may\nhave the same ptid.\n\nFixed by also storing/comparing the process_stratum_target.\n\nTested on x86-64-linux-gnu, native and gdbserver.\n\nChange-Id: I4d9d74052c696b72d28cb1c77b697b911725c8d3",
    "tree": {
      "sha": "19f499f47dcfd9d326d925973aabc793b681a0ac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/19f499f47dcfd9d326d925973aabc793b681a0ac"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/604386598d43e50f183aba65189354e04ffbdda3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/604386598d43e50f183aba65189354e04ffbdda3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/604386598d43e50f183aba65189354e04ffbdda3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/604386598d43e50f183aba65189354e04ffbdda3/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a13af434cfadb743e16b72ffaf716508b51f9d4a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a13af434cfadb743e16b72ffaf716508b51f9d4a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a13af434cfadb743e16b72ffaf716508b51f9d4a"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 11,
    "deletions": 3
  },
  "files": [
    {
      "sha": "98365fee3b1cabb8cbed8651f2015238809eadca",
      "filename": "gdb/dcache.c",
      "status": "modified",
      "additions": 11,
      "deletions": 3,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/604386598d43e50f183aba65189354e04ffbdda3/gdb/dcache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/604386598d43e50f183aba65189354e04ffbdda3/gdb/dcache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dcache.c?ref=604386598d43e50f183aba65189354e04ffbdda3",
      "patch": "@@ -116,6 +116,10 @@ struct dcache_struct\n \n   /* The ptid of last inferior to use cache or null_ptid.  */\n   ptid_t ptid;\n+\n+  /* The process target of last inferior to use the cache or\n+     nullptr.  */\n+  process_stratum_target *proc_target;\n };\n \n typedef void (block_func) (struct dcache_block *block, void *param);\n@@ -249,6 +253,7 @@ dcache_invalidate (DCACHE *dcache)\n   dcache->oldest = NULL;\n   dcache->size = 0;\n   dcache->ptid = null_ptid;\n+  dcache->proc_target = nullptr;\n \n   if (dcache->line_size != dcache_line_size)\n     {\n@@ -453,6 +458,7 @@ dcache_init (void)\n   dcache->size = 0;\n   dcache->line_size = dcache_line_size;\n   dcache->ptid = null_ptid;\n+  dcache->proc_target = nullptr;\n \n   return dcache;\n }\n@@ -470,13 +476,15 @@ dcache_read_memory_partial (struct target_ops *ops, DCACHE *dcache,\n {\n   ULONGEST i;\n \n-  /* If this is a different inferior from what we've recorded,\n-     flush the cache.  */\n+  /* If this is a different thread from what we've recorded, flush the\n+     cache.  */\n \n-  if (inferior_ptid != dcache->ptid)\n+  process_stratum_target *proc_target = current_inferior ()->process_target ();\n+  if (proc_target != dcache->proc_target || inferior_ptid != dcache->ptid)\n     {\n       dcache_invalidate (dcache);\n       dcache->ptid = inferior_ptid;\n+      dcache->proc_target = proc_target;\n     }\n \n   for (i = 0; i < len; i++)"
    }
  ]
}