{
  "sha": "80d49d6a1b865c84a8596da465db285cbbdfd1bb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODBkNDlkNmExYjg2NWM4NGE4NTk2ZGE0NjVkYjI4NWNiYmRmZDFiYg==",
  "commit": {
    "author": {
      "name": "Kuan-Lin Chen",
      "email": "kuanlinchentw@gmail.com",
      "date": "2021-02-24T05:26:29Z"
    },
    "committer": {
      "name": "Kuan-Lin Chen",
      "email": "kuanlinchentw@gmail.com",
      "date": "2021-03-16T06:38:19Z"
    },
    "message": "RISC-V : Support bitmanip-0.93 ZBA/ZBB/ZBC instructions\n\nbfd/\n\t* elfxx-riscv.c (riscv_std_z_ext_strtab): Add zba, zbb and zbc.\n\ngas/\n\t* config/tc-riscv.c (ext_version_table): Add b, zba, zbb and zbc.\n\t(riscv_multi_subset_supports): Add INSN_CLASS_ZB*.\n\t* testsuite/gas/riscv/b-ext-64.s: Bitmanip test case.\n\t* testsuite/gas/riscv/b-ext-64.d: Likewise.\n\t* testsuite/gas/riscv/b-ext.s: Likewise.\n\t* testsuite/gas/riscv/b-ext.d: Likewise.\n\ninclude/\n\t* opcode/riscv-opc.h: Support zba, zbb and zbc extensions.\n\t* opcode/riscv.h (riscv_insn_class): Add INSN_CLASS_ZB*.\n\nopcodes/\n\t* riscv-opc.c (riscv_opcodes): Add zba, zbb and zbc instructions.",
    "tree": {
      "sha": "faeb0b0ec9e25aa82aa833e359b9af812f9aac50",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/faeb0b0ec9e25aa82aa833e359b9af812f9aac50"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/80d49d6a1b865c84a8596da465db285cbbdfd1bb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/80d49d6a1b865c84a8596da465db285cbbdfd1bb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/80d49d6a1b865c84a8596da465db285cbbdfd1bb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/80d49d6a1b865c84a8596da465db285cbbdfd1bb/comments",
  "author": {
    "login": "kuanlinchentw",
    "id": 24240991,
    "node_id": "MDQ6VXNlcjI0MjQwOTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/24240991?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kuanlinchentw",
    "html_url": "https://github.com/kuanlinchentw",
    "followers_url": "https://api.github.com/users/kuanlinchentw/followers",
    "following_url": "https://api.github.com/users/kuanlinchentw/following{/other_user}",
    "gists_url": "https://api.github.com/users/kuanlinchentw/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kuanlinchentw/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kuanlinchentw/subscriptions",
    "organizations_url": "https://api.github.com/users/kuanlinchentw/orgs",
    "repos_url": "https://api.github.com/users/kuanlinchentw/repos",
    "events_url": "https://api.github.com/users/kuanlinchentw/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kuanlinchentw/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kuanlinchentw",
    "id": 24240991,
    "node_id": "MDQ6VXNlcjI0MjQwOTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/24240991?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kuanlinchentw",
    "html_url": "https://github.com/kuanlinchentw",
    "followers_url": "https://api.github.com/users/kuanlinchentw/followers",
    "following_url": "https://api.github.com/users/kuanlinchentw/following{/other_user}",
    "gists_url": "https://api.github.com/users/kuanlinchentw/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kuanlinchentw/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kuanlinchentw/subscriptions",
    "organizations_url": "https://api.github.com/users/kuanlinchentw/orgs",
    "repos_url": "https://api.github.com/users/kuanlinchentw/repos",
    "events_url": "https://api.github.com/users/kuanlinchentw/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kuanlinchentw/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4ef6d2f424e07d3d4e15330c017d0adbefe59bda",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ef6d2f424e07d3d4e15330c017d0adbefe59bda",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4ef6d2f424e07d3d4e15330c017d0adbefe59bda"
    }
  ],
  "stats": {
    "total": 345,
    "additions": 340,
    "deletions": 5
  },
  "files": [
    {
      "sha": "70203b1254fbc6a192047775f3f239144d4d4200",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-16  Kuan-Lin Chen  <kuanlinchentw@gmail.com>\n+\n+\t* elfxx-riscv.c (riscv_std_z_ext_strtab): Add zba, zbb and zbc.\n+\n 2021-03-12  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n \n \t* reloc.c (BFD_RELOC_PPC_TLS_LE, BFD_RELOC_PPC_TLS_IE,"
    },
    {
      "sha": "966e142be4c5a5d0a0c51836f2a11a0b34fc5515",
      "filename": "bfd/elfxx-riscv.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/bfd/elfxx-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/bfd/elfxx-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-riscv.c?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -1598,7 +1598,7 @@ riscv_parse_prefixed_ext (riscv_parse_subset_t *rps,\n \n static const char * const riscv_std_z_ext_strtab[] =\n {\n-  \"zicsr\", \"zifencei\", \"zihintpause\", NULL\n+  \"zba\", \"zbb\", \"zbc\", \"zicsr\", \"zifencei\", \"zihintpause\", NULL\n };\n \n static const char * const riscv_std_s_ext_strtab[] ="
    },
    {
      "sha": "f759c934966bc6d91c7906c723a334fac91a6cb8",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -1,3 +1,12 @@\n+2021-03-16  Kuan-Lin Chen  <kuanlinchentw@gmail.com>\n+\n+\t* config/tc-riscv.c (ext_version_table): Add b, zba, zbb and zbc.\n+\t(riscv_multi_subset_supports): Add INSN_CLASS_ZB*.\n+\t* testsuite/gas/riscv/b-ext-64.s: Bitmanip test case.\n+\t* testsuite/gas/riscv/b-ext-64.d: Likewise.\n+\t* testsuite/gas/riscv/b-ext.s: Likewise.\n+\t* testsuite/gas/riscv/b-ext.d: Likewise.\n+\n 2021-03-12  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n \n \t* testsuite/gas/aarch64/illegal-sysreg-7.d: New test."
    },
    {
      "sha": "429732f5f1aed9664e7f8d7468813a1955115284",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -139,6 +139,10 @@ static const struct riscv_ext_version ext_version_table[] =\n \n   {\"zihintpause\", ISA_SPEC_CLASS_DRAFT, 1, 0},\n \n+  {\"zbb\",   ISA_SPEC_CLASS_DRAFT, 0, 93},\n+  {\"zba\",   ISA_SPEC_CLASS_DRAFT, 0, 93},\n+  {\"zbc\",   ISA_SPEC_CLASS_DRAFT, 0, 93},\n+\n   /* Terminate the list.  */\n   {NULL, 0, 0, 0}\n };\n@@ -330,6 +334,15 @@ riscv_multi_subset_supports (enum riscv_insn_class insn_class)\n     case INSN_CLASS_ZIHINTPAUSE:\n       return riscv_subset_supports (\"zihintpause\");\n \n+    case INSN_CLASS_ZBB:\n+      return riscv_subset_supports (\"zbb\");\n+\n+    case INSN_CLASS_ZBA:\n+      return riscv_subset_supports (\"zba\");\n+\n+    case INSN_CLASS_ZBC:\n+      return riscv_subset_supports (\"zbc\");\n+\n     default:\n       as_fatal (\"internal: unreachable\");\n       return FALSE;"
    },
    {
      "sha": "f4a7abf02d79544a0f48234a37c9c003a7248c41",
      "filename": "gas/testsuite/gas/riscv/b-ext-64.d",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/gas/testsuite/gas/riscv/b-ext-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/gas/testsuite/gas/riscv/b-ext-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/b-ext-64.d?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -0,0 +1,48 @@\n+#as: -march=rv64i_zba_zbb_zbc\n+#source: b-ext-64.s\n+#objdump: -d\n+\n+.*:[ \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <target>:\n+[ \t]+0:[ \t]+60051513[ \t]+clz[ \t]+a0,a0\n+[ \t]+4:[ \t]+60151513[ \t]+ctz[ \t]+a0,a0\n+[ \t]+8:[ \t]+60251513[ \t]+cpop[ \t]+a0,a0\n+[ \t]+c:[ \t]+0ac5c533[ \t]+min[ \t]+a0,a1,a2\n+[ \t]+10:[ \t]+0ac5d533[ \t]+minu[ \t]+a0,a1,a2\n+[ \t]+14:[ \t]+0ac5e533[ \t]+max[ \t]+a0,a1,a2\n+[ \t]+18:[ \t]+0ac5f533[ \t]+maxu[ \t]+a0,a1,a2\n+[ \t]+1c:[ \t]+60451513[ \t]+sext.b[ \t]+a0,a0\n+[ \t]+20:[ \t]+60551513[ \t]+sext.h[ \t]+a0,a0\n+[ \t]+24:[ \t]+0805453b[ \t]+zext.h[ \t]+a0,a0\n+[ \t]+28:[ \t]+40c5f533[ \t]+andn[ \t]+a0,a1,a2\n+[ \t]+2c:[ \t]+40c5e533[ \t]+orn[ \t]+a0,a1,a2\n+[ \t]+30:[ \t]+40c5c533[ \t]+xnor[ \t]+a0,a1,a2\n+[ \t]+34:[ \t]+60c59533[ \t]+rol[ \t]+a0,a1,a2\n+[ \t]+38:[ \t]+60c5d533[ \t]+ror[ \t]+a0,a1,a2\n+[ \t]+3c:[ \t]+6025d513[ \t]+rori[ \t]+a0,a1,0x2\n+[ \t]+40:[ \t]+6025d513[ \t]+rori[ \t]+a0,a1,0x2\n+[ \t]+44:[ \t]+6b855513[ \t]+rev8[ \t]+a0,a0\n+[ \t]+48:[ \t]+28755513[ \t]+orc.b[ \t]+a0,a0\n+[ \t]+4c:[ \t]+20c5a533[ \t]+sh1add[ \t]+a0,a1,a2\n+[ \t]+50:[ \t]+20c5c533[ \t]+sh2add[ \t]+a0,a1,a2\n+[ \t]+54:[ \t]+20c5e533[ \t]+sh3add[ \t]+a0,a1,a2\n+[ \t]+58:[ \t]+0ac59533[ \t]+clmul[ \t]+a0,a1,a2\n+[ \t]+5c:[ \t]+0ac5b533[ \t]+clmulh[ \t]+a0,a1,a2\n+[ \t]+60:[ \t]+0ac5a533[ \t]+clmulr[ \t]+a0,a1,a2\n+[ \t]+64:[ \t]+6005151b[ \t]+clzw[ \t]+a0,a0\n+[ \t]+68:[ \t]+6015151b[ \t]+ctzw[ \t]+a0,a0\n+[ \t]+6c:[ \t]+6025151b[ \t]+cpopw[ \t]+a0,a0\n+[ \t]+70:[ \t]+60c5953b[ \t]+rolw[ \t]+a0,a1,a2\n+[ \t]+74:[ \t]+60c5d53b[ \t]+rorw[ \t]+a0,a1,a2\n+[ \t]+78:[ \t]+6025d51b[ \t]+roriw[ \t]+a0,a1,0x2\n+[ \t]+7c:[ \t]+6025d51b[ \t]+roriw[ \t]+a0,a1,0x2\n+[ \t]+80:[ \t]+20c5a53b[ \t]+sh1add.uw[ \t]+a0,a1,a2\n+[ \t]+84:[ \t]+20c5c53b[ \t]+sh2add.uw[ \t]+a0,a1,a2\n+[ \t]+88:[ \t]+20c5e53b[ \t]+sh3add.uw[ \t]+a0,a1,a2\n+[ \t]+8c:[ \t]+08c5853b[ \t]+add.uw[ \t]+a0,a1,a2\n+[ \t]+90:[ \t]+0805853b[ \t]+zext.w[ \t]+a0,a1\n+[ \t]+94:[ \t]+0825951b[ \t]+slli.uw[ \t]+a0,a1,0x2"
    },
    {
      "sha": "c3ac377f4bd05b469705df9ffeadf65b28d72373",
      "filename": "gas/testsuite/gas/riscv/b-ext-64.s",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/gas/testsuite/gas/riscv/b-ext-64.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/gas/testsuite/gas/riscv/b-ext-64.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/b-ext-64.s?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -0,0 +1,39 @@\n+target:\n+\tclz\ta0, a0\n+\tctz\ta0, a0\n+\tcpop\ta0, a0\n+\tmin\ta0, a1, a2\n+\tminu\ta0, a1, a2\n+\tmax\ta0, a1, a2\n+\tmaxu\ta0, a1, a2\n+\tsext.b\ta0, a0\n+\tsext.h\ta0, a0\n+\tzext.h\ta0, a0\n+\tandn\ta0, a1, a2\n+\torn\ta0, a1, a2\n+\txnor\ta0, a1, a2\n+\trol\ta0, a1, a2\n+\tror\ta0, a1, a2\n+\tror\ta0, a1, 2\n+\trori\ta0, a1, 2\n+\trev8\ta0, a0\n+\torc.b\ta0, a0\n+\tsh1add\ta0, a1, a2\n+\tsh2add\ta0, a1, a2\n+\tsh3add\ta0, a1, a2\n+\tclmul\ta0, a1, a2\n+\tclmulh\ta0, a1, a2\n+\tclmulr\ta0, a1, a2\n+\tclzw\ta0, a0\n+\tctzw\ta0, a0\n+\tcpopw\ta0, a0\n+\trolw\ta0, a1, a2\n+\trorw\ta0, a1, a2\n+\trorw\ta0, a1, 2\n+\troriw\ta0, a1, 2\n+\tsh1add.uw\ta0, a1, a2\n+\tsh2add.uw\ta0, a1, a2\n+\tsh3add.uw\ta0, a1, a2\n+\tadd.uw\ta0, a1, a2\n+\tzext.w\ta0, a1\n+\tslli.uw\ta0, a1, 2"
    },
    {
      "sha": "7410796a3b761369c7c2c716d342d0d0fe1bfe67",
      "filename": "gas/testsuite/gas/riscv/b-ext.d",
      "status": "added",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/gas/testsuite/gas/riscv/b-ext.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/gas/testsuite/gas/riscv/b-ext.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/b-ext.d?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -0,0 +1,35 @@\n+#as: -march=rv32i_zba_zbb_zbc\n+#source: b-ext.s\n+#objdump: -d\n+\n+.*:[ \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <target>:\n+[ \t]+0:[ \t]+60051513[ \t]+clz[ \t]+a0,a0\n+[ \t]+4:[ \t]+60151513[ \t]+ctz[ \t]+a0,a0\n+[ \t]+8:[ \t]+60251513[ \t]+cpop[ \t]+a0,a0\n+[ \t]+c:[ \t]+0ac5c533[ \t]+min[ \t]+a0,a1,a2\n+[ \t]+10:[ \t]+0ac5d533[ \t]+minu[ \t]+a0,a1,a2\n+[ \t]+14:[ \t]+0ac5e533[ \t]+max[ \t]+a0,a1,a2\n+[ \t]+18:[ \t]+0ac5f533[ \t]+maxu[ \t]+a0,a1,a2\n+[ \t]+1c:[ \t]+60451513[ \t]+sext.b[ \t]+a0,a0\n+[ \t]+20:[ \t]+60551513[ \t]+sext.h[ \t]+a0,a0\n+[ \t]+24:[ \t]+08054533[ \t]+zext.h[ \t]+a0,a0\n+[ \t]+28:[ \t]+40c5f533[ \t]+andn[ \t]+a0,a1,a2\n+[ \t]+2c:[ \t]+40c5e533[ \t]+orn[ \t]+a0,a1,a2\n+[ \t]+30:[ \t]+40c5c533[ \t]+xnor[ \t]+a0,a1,a2\n+[ \t]+34:[ \t]+60c59533[ \t]+rol[ \t]+a0,a1,a2\n+[ \t]+38:[ \t]+60c5d533[ \t]+ror[ \t]+a0,a1,a2\n+[ \t]+3c:[ \t]+6025d513[ \t]+rori[ \t]+a0,a1,0x2\n+[ \t]+40:[ \t]+6025d513[ \t]+rori[ \t]+a0,a1,0x2\n+[ \t]+44:[ \t]+69855513[ \t]+rev8[ \t]+a0,a0\n+[ \t]+48:[ \t]+28755513[ \t]+orc.b[ \t]+a0,a0\n+[ \t]+4c:[ \t]+20c5a533[ \t]+sh1add[ \t]+a0,a1,a2\n+[ \t]+50:[ \t]+20c5c533[ \t]+sh2add[ \t]+a0,a1,a2\n+[ \t]+54:[ \t]+20c5e533[ \t]+sh3add[ \t]+a0,a1,a2\n+[ \t]+58:[ \t]+0ac59533[ \t]+clmul[ \t]+a0,a1,a2\n+[ \t]+5c:[ \t]+0ac5b533[ \t]+clmulh[ \t]+a0,a1,a2\n+[ \t]+60:[ \t]+0ac5a533[ \t]+clmulr[ \t]+a0,a1,a2"
    },
    {
      "sha": "051dafd1719ee5a33725954789969af28ab1636c",
      "filename": "gas/testsuite/gas/riscv/b-ext.s",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/gas/testsuite/gas/riscv/b-ext.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/gas/testsuite/gas/riscv/b-ext.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/b-ext.s?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -0,0 +1,26 @@\n+target:\n+\tclz\ta0, a0\n+\tctz\ta0, a0\n+\tcpop\ta0, a0\n+\tmin\ta0, a1, a2\n+\tminu\ta0, a1, a2\n+\tmax\ta0, a1, a2\n+\tmaxu\ta0, a1, a2\n+\tsext.b\ta0, a0\n+\tsext.h\ta0, a0\n+\tzext.h\ta0, a0\n+\tandn\ta0, a1, a2\n+\torn\ta0, a1, a2\n+\txnor\ta0, a1, a2\n+\trol\ta0, a1, a2\n+\tror\ta0, a1, a2\n+\tror\ta0, a1, 2\n+\trori\ta0, a1, 2\n+\trev8\ta0, a0\n+\torc.b\ta0, a0\n+\tsh1add\ta0, a1, a2\n+\tsh2add\ta0, a1, a2\n+\tsh3add\ta0, a1, a2\n+\tclmul\ta0, a1, a2\n+\tclmulh\ta0, a1, a2\n+\tclmulr\ta0, a1, a2"
    },
    {
      "sha": "9712268bae4320095436c60bcf14e82a522ab751",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-16  Kuan-Lin Chen  <kuanlinchentw@gmail.com>\n+\n+\t* opcode/riscv-opc.h: Support zba, zbb and zbc extensions.\n+\t* opcode/riscv.h (riscv_insn_class): Add INSN_CLASS_ZB*.\n+\n 2021-03-12  Frederic Cambus  <fred@statdns.com>\n \n \t* elf/common.h (NT_NETBSD_PAX, NT_NETBSD_PAX_MPROTECT)"
    },
    {
      "sha": "9999da6241a4b83c9fc7825b96ad8ea4ceef3ba1",
      "filename": "include/opcode/riscv-opc.h",
      "status": "modified",
      "additions": 104,
      "deletions": 0,
      "changes": 104,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/include/opcode/riscv-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/include/opcode/riscv-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv-opc.h?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -423,6 +423,78 @@\n #define MASK_FCVT_Q_LU  0xfff0007f\n #define MATCH_FMV_Q_X 0xf6000053\n #define MASK_FMV_Q_X  0xfff0707f\n+#define MATCH_CLZ 0x60001013\n+#define MASK_CLZ  0xfff0707f\n+#define MATCH_CTZ 0x60101013\n+#define MASK_CTZ  0xfff0707f\n+#define MATCH_CPOP 0x60201013\n+#define MASK_CPOP  0xfff0707f\n+#define MATCH_MIN 0xa004033\n+#define MASK_MIN  0xfe00707f\n+#define MATCH_MINU 0xa005033\n+#define MASK_MINU  0xfe00707f\n+#define MATCH_MAX 0xa006033\n+#define MASK_MAX  0xfe00707f\n+#define MATCH_MAXU 0xa007033\n+#define MASK_MAXU  0xfe00707f\n+#define MATCH_SEXT_B 0x60401013\n+#define MASK_SEXT_B  0xfff0707f\n+#define MATCH_SEXT_H 0x60501013\n+#define MASK_SEXT_H  0xfff0707f\n+#define MATCH_PACK 0x8004033\n+#define MASK_PACK  0xfe00707f\n+#define MATCH_PACKW 0x800403b\n+#define MASK_PACKW  0xfe00707f\n+#define MATCH_ANDN 0x40007033\n+#define MASK_ANDN  0xfe00707f\n+#define MATCH_ORN 0x40006033\n+#define MASK_ORN  0xfe00707f\n+#define MATCH_XNOR 0x40004033\n+#define MASK_XNOR  0xfe00707f\n+#define MATCH_ROL 0x60001033\n+#define MASK_ROL  0xfe00707f\n+#define MATCH_ROR 0x60005033\n+#define MASK_ROR  0xfe00707f\n+#define MATCH_RORI 0x60005013\n+#define MASK_RORI  0xfc00707f\n+#define MATCH_GREVI 0x68005013\n+#define MASK_GREVI  0xfc00707f\n+#define MATCH_GORCI 0x28005013\n+#define MASK_GORCI  0xfc00707f\n+#define MATCH_CLZW 0x6000101b\n+#define MASK_CLZW  0xfff0707f\n+#define MATCH_CTZW 0x6010101b\n+#define MASK_CTZW  0xfff0707f\n+#define MATCH_CPOPW 0x6020101b\n+#define MASK_CPOPW  0xfff0707f\n+#define MATCH_ROLW 0x6000103b\n+#define MASK_ROLW  0xfe00707f\n+#define MATCH_RORW 0x6000503b\n+#define MASK_RORW  0xfe00707f\n+#define MATCH_RORIW 0x6000501b\n+#define MASK_RORIW  0xfe00707f\n+#define MATCH_SH1ADD 0x20002033\n+#define MASK_SH1ADD  0xfe00707f\n+#define MATCH_SH2ADD 0x20004033\n+#define MASK_SH2ADD  0xfe00707f\n+#define MATCH_SH3ADD 0x20006033\n+#define MASK_SH3ADD  0xfe00707f\n+#define MATCH_SH1ADD_UW 0x2000203b\n+#define MASK_SH1ADD_UW  0xfe00707f\n+#define MATCH_SH2ADD_UW 0x2000403b\n+#define MASK_SH2ADD_UW  0xfe00707f\n+#define MATCH_SH3ADD_UW 0x2000603b\n+#define MASK_SH3ADD_UW  0xfe00707f\n+#define MATCH_ADD_UW 0x800003b\n+#define MASK_ADD_UW  0xfe00707f\n+#define MATCH_SLLI_UW 0x800101b\n+#define MASK_SLLI_UW  0xfc00707f\n+#define MATCH_CLMUL 0xa001033\n+#define MASK_CLMUL  0xfe00707f\n+#define MATCH_CLMULH 0xa003033\n+#define MASK_CLMULH  0xfe00707f\n+#define MATCH_CLMULR 0xa002033\n+#define MASK_CLMULR  0xfe00707f\n #define MATCH_FLW 0x2007\n #define MASK_FLW  0x707f\n #define MATCH_FLD 0x3007\n@@ -998,6 +1070,38 @@ DECLARE_INSN(fcvt_q_wu, MATCH_FCVT_Q_WU, MASK_FCVT_Q_WU)\n DECLARE_INSN(fcvt_q_l, MATCH_FCVT_Q_L, MASK_FCVT_Q_L)\n DECLARE_INSN(fcvt_q_lu, MATCH_FCVT_Q_LU, MASK_FCVT_Q_LU)\n DECLARE_INSN(fmv_q_x, MATCH_FMV_Q_X, MASK_FMV_Q_X)\n+DECLARE_INSN(clz, MATCH_CLZ, MASK_CLZ)\n+DECLARE_INSN(ctz, MATCH_CTZ, MASK_CTZ)\n+DECLARE_INSN(cpop, MATCH_CPOP, MASK_CPOP)\n+DECLARE_INSN(min, MATCH_MIN, MASK_MIN)\n+DECLARE_INSN(minu, MATCH_MINU, MASK_MINU)\n+DECLARE_INSN(max, MATCH_MAX, MASK_MAX)\n+DECLARE_INSN(maxu, MATCH_MAXU, MASK_MAXU)\n+DECLARE_INSN(sext_b, MATCH_SEXT_B, MASK_SEXT_B)\n+DECLARE_INSN(sext_h, MATCH_SEXT_H, MASK_SEXT_H)\n+DECLARE_INSN(andn, MATCH_ANDN, MASK_ANDN)\n+DECLARE_INSN(orn, MATCH_ORN, MASK_ORN)\n+DECLARE_INSN(xnor, MATCH_XNOR, MASK_XNOR)\n+DECLARE_INSN(rol, MATCH_ROL, MASK_ROL)\n+DECLARE_INSN(ror, MATCH_ROR, MASK_ROR)\n+DECLARE_INSN(rori, MATCH_RORI, MASK_RORI)\n+DECLARE_INSN(clzw, MATCH_CLZW, MASK_CLZW)\n+DECLARE_INSN(ctzw, MATCH_CTZW, MASK_CTZW)\n+DECLARE_INSN(cpopw, MATCH_CPOPW, MASK_CPOPW)\n+DECLARE_INSN(rolw, MATCH_ROLW, MASK_ROLW)\n+DECLARE_INSN(rorw, MATCH_RORW, MASK_RORW)\n+DECLARE_INSN(roriw, MATCH_RORIW, MASK_RORIW)\n+DECLARE_INSN(sh1add, MATCH_SH1ADD, MASK_SH1ADD)\n+DECLARE_INSN(sh2add, MATCH_SH2ADD, MASK_SH2ADD)\n+DECLARE_INSN(sh3add, MATCH_SH3ADD, MASK_SH3ADD)\n+DECLARE_INSN(sh1add_uw, MATCH_SH1ADD_UW, MASK_SH1ADD_UW)\n+DECLARE_INSN(sh2add_uw, MATCH_SH2ADD_UW, MASK_SH2ADD_UW)\n+DECLARE_INSN(sh3add_uw, MATCH_SH3ADD_UW, MASK_SH3ADD_UW)\n+DECLARE_INSN(add_uw, MATCH_ADD_UW, MASK_ADD_UW)\n+DECLARE_INSN(slli_uw, MATCH_SLLI_UW, MASK_SLLI_UW)\n+DECLARE_INSN(clmul, MATCH_CLMUL, MASK_CLMUL)\n+DECLARE_INSN(clmulh, MATCH_CLMULH, MASK_CLMULH)\n+DECLARE_INSN(clmulr, MATCH_CLMULR, MASK_CLMULR)\n DECLARE_INSN(flw, MATCH_FLW, MASK_FLW)\n DECLARE_INSN(fld, MATCH_FLD, MASK_FLD)\n DECLARE_INSN(flq, MATCH_FLQ, MASK_FLQ)"
    },
    {
      "sha": "fdf3df4f5c1f5e41e992e83360af19276962e23a",
      "filename": "include/opcode/riscv.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/include/opcode/riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/include/opcode/riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv.h?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -316,6 +316,9 @@ enum riscv_insn_class\n   INSN_CLASS_ZICSR,\n   INSN_CLASS_ZIFENCEI,\n   INSN_CLASS_ZIHINTPAUSE,\n+  INSN_CLASS_ZBA,\n+  INSN_CLASS_ZBB,\n+  INSN_CLASS_ZBC,\n };\n \n /* This structure holds information for a particular instruction.  */"
    },
    {
      "sha": "ee67cb57de35046cf8adf5998be68c71a2b3d83b",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-16  Kuan-Lin Chen  <kuanlinchentw@gmail.com>\n+\n+\t* riscv-opc.c (riscv_opcodes): Add zba, zbb and zbc instructions.\n+\n 2021-03-12  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n \n \t* aarch64-opc.c: Add lorc_el1, lorea_el1, lorn_el1, lorsa_el1,"
    },
    {
      "sha": "1348ec78c76d05ea0e3678e639ddb852f87ba8c8",
      "filename": "opcodes/riscv-opc.c",
      "status": "modified",
      "additions": 49,
      "deletions": 4,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80d49d6a1b865c84a8596da465db285cbbdfd1bb/opcodes/riscv-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80d49d6a1b865c84a8596da465db285cbbdfd1bb/opcodes/riscv-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-opc.c?ref=80d49d6a1b865c84a8596da465db285cbbdfd1bb",
      "patch": "@@ -81,6 +81,10 @@ const char * const riscv_fpr_names_abi[NFPR] =\n #define MASK_AQ (OP_MASK_AQ << OP_SH_AQ)\n #define MASK_RL (OP_MASK_RL << OP_SH_RL)\n #define MASK_AQRL (MASK_AQ | MASK_RL)\n+#define MASK_SHAMT (OP_MASK_SHAMT << OP_SH_SHAMT)\n+#define MATCH_SHAMT_REV8_32 (0b11000 << OP_SH_SHAMT)\n+#define MATCH_SHAMT_REV8_64 (0b111000 << OP_SH_SHAMT)\n+#define MATCH_SHAMT_ORC_B (0b00111 << OP_SH_SHAMT)\n \n static int\n match_opcode (const struct riscv_opcode *op, insn_t insn)\n@@ -239,10 +243,7 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"mv\",          0, INSN_CLASS_I, \"d,s\",       MATCH_ADDI, MASK_ADDI|MASK_IMM, match_opcode, INSN_ALIAS },\n {\"move\",        0, INSN_CLASS_C, \"d,CV\",      MATCH_C_MV, MASK_C_MV, match_c_add, INSN_ALIAS },\n {\"move\",        0, INSN_CLASS_I, \"d,s\",       MATCH_ADDI, MASK_ADDI|MASK_IMM, match_opcode, INSN_ALIAS },\n-{\"sext.b\",      0, INSN_CLASS_I, \"d,s\",       0, (int) M_SEXTB, match_never, INSN_MACRO },\n-{\"sext.h\",      0, INSN_CLASS_I, \"d,s\",       0, (int) M_SEXTH, match_never, INSN_MACRO },\n {\"zext.b\",      0, INSN_CLASS_I, \"d,s\",       MATCH_ANDI|ENCODE_ITYPE_IMM (255), MASK_ANDI | MASK_IMM, match_opcode, INSN_ALIAS },\n-{\"zext.h\",      0, INSN_CLASS_I, \"d,s\",       0, (int) M_ZEXTH, match_never, INSN_MACRO },\n {\"andi\",        0, INSN_CLASS_C, \"Cs,Cw,Co\",  MATCH_C_ANDI, MASK_C_ANDI, match_opcode, INSN_ALIAS },\n {\"andi\",        0, INSN_CLASS_I, \"d,s,j\",     MATCH_ANDI, MASK_ANDI, match_opcode, 0 },\n {\"and\",         0, INSN_CLASS_C, \"Cs,Cw,Ct\",  MATCH_C_AND, MASK_C_AND, match_opcode, INSN_ALIAS },\n@@ -374,7 +375,6 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"sd\",         64, INSN_CLASS_C, \"Ct,Cl(Cs)\", MATCH_C_SD, MASK_C_SD, match_opcode, INSN_ALIAS|INSN_DREF|INSN_8_BYTE },\n {\"sd\",         64, INSN_CLASS_I, \"t,q(s)\",    MATCH_SD, MASK_SD, match_opcode, INSN_DREF|INSN_8_BYTE },\n {\"sd\",         64, INSN_CLASS_I, \"t,A,s\",     0, (int) M_SD, match_never, INSN_MACRO },\n-{\"zext.w\",     64, INSN_CLASS_I, \"d,s\",       0, (int) M_ZEXTW, match_never, INSN_MACRO },\n {\"sext.w\",     64, INSN_CLASS_C, \"d,CU\",      MATCH_C_ADDIW, MASK_C_ADDIW|MASK_RVC_IMM, match_rd_nonzero, INSN_ALIAS },\n {\"sext.w\",     64, INSN_CLASS_I, \"d,s\",       MATCH_ADDIW, MASK_ADDIW|MASK_IMM, match_opcode, INSN_ALIAS },\n {\"addiw\",      64, INSN_CLASS_C, \"d,CU,Co\",   MATCH_C_ADDIW, MASK_C_ADDIW, match_rd_nonzero, INSN_ALIAS },\n@@ -781,6 +781,51 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"sfence.vma\", 0, INSN_CLASS_I,    \"s\",        MATCH_SFENCE_VMA, MASK_SFENCE_VMA|MASK_RS2, match_opcode, INSN_ALIAS },\n {\"sfence.vma\", 0, INSN_CLASS_I,    \"s,t\",      MATCH_SFENCE_VMA, MASK_SFENCE_VMA, match_opcode, 0 },\n {\"wfi\",        0, INSN_CLASS_I,    \"\",         MATCH_WFI, MASK_WFI, match_opcode, 0 },\n+{\"clz\",        0, INSN_CLASS_ZBB,  \"d,s\",   MATCH_CLZ, MASK_CLZ, match_opcode, 0 },\n+{\"ctz\",        0, INSN_CLASS_ZBB,  \"d,s\",   MATCH_CTZ, MASK_CTZ, match_opcode, 0 },\n+{\"cpop\",       0, INSN_CLASS_ZBB,  \"d,s\",   MATCH_CPOP, MASK_CPOP, match_opcode, 0 },\n+{\"min\",        0, INSN_CLASS_ZBB,  \"d,s,t\", MATCH_MIN, MASK_MIN, match_opcode, 0 },\n+{\"max\",        0, INSN_CLASS_ZBB,  \"d,s,t\", MATCH_MAX, MASK_MAX, match_opcode, 0 },\n+{\"minu\",       0, INSN_CLASS_ZBB,  \"d,s,t\", MATCH_MINU, MASK_MINU, match_opcode, 0 },\n+{\"maxu\",       0, INSN_CLASS_ZBB,  \"d,s,t\", MATCH_MAXU, MASK_MAXU, match_opcode, 0 },\n+{\"sext.b\",     0, INSN_CLASS_ZBB,  \"d,s\",   MATCH_SEXT_B, MASK_SEXT_B, match_opcode, 0 },\n+{\"sext.b\",     0, INSN_CLASS_I,         \"d,s\",   0, (int) M_SEXTB, match_never, INSN_MACRO },\n+{\"sext.h\",     0, INSN_CLASS_ZBB,  \"d,s\",   MATCH_SEXT_H, MASK_SEXT_H, match_opcode, 0 },\n+{\"sext.h\",     0, INSN_CLASS_I,         \"d,s\",   0, (int) M_SEXTH, match_never, INSN_MACRO },\n+{\"zext.h\",    32, INSN_CLASS_ZBB,  \"d,s\",   MATCH_PACK, MASK_PACK | MASK_RS2, match_opcode, 0 },\n+{\"zext.h\",    64, INSN_CLASS_ZBB,  \"d,s\",   MATCH_PACKW, MASK_PACKW | MASK_RS2, match_opcode, 0 },\n+{\"zext.h\",     0, INSN_CLASS_I,         \"d,s\",   0, (int) M_ZEXTH, match_never, INSN_MACRO },\n+{\"andn\",       0, INSN_CLASS_ZBB,  \"d,s,t\", MATCH_ANDN, MASK_ANDN, match_opcode, 0 },\n+{\"orn\",        0, INSN_CLASS_ZBB,  \"d,s,t\", MATCH_ORN, MASK_ORN, match_opcode, 0 },\n+{\"xnor\",       0, INSN_CLASS_ZBB,  \"d,s,t\", MATCH_XNOR, MASK_XNOR, match_opcode, 0 },\n+{\"rol\",        0, INSN_CLASS_ZBB,  \"d,s,t\", MATCH_ROL, MASK_ROL, match_opcode, 0 },\n+{\"rori\",       0, INSN_CLASS_ZBB,  \"d,s,>\", MATCH_RORI, MASK_RORI, match_opcode, 0 },\n+{\"ror\",        0, INSN_CLASS_ZBB,  \"d,s,t\", MATCH_ROR, MASK_ROR, match_opcode, 0 },\n+{\"ror\",        0, INSN_CLASS_ZBB,  \"d,s,>\", MATCH_RORI, MASK_RORI, match_opcode, INSN_ALIAS },\n+{\"rev8\",      32, INSN_CLASS_ZBB,  \"d,s\",   MATCH_GREVI | MATCH_SHAMT_REV8_32 , MASK_GREVI | MASK_SHAMT, match_opcode, 0 },\n+{\"rev8\",      64, INSN_CLASS_ZBB,  \"d,s\",   MATCH_GREVI | MATCH_SHAMT_REV8_64 , MASK_GREVI | MASK_SHAMT, match_opcode, 0 },\n+{\"orc.b\",      0, INSN_CLASS_ZBB,  \"d,s\",   MATCH_GORCI | MATCH_SHAMT_ORC_B, MASK_GORCI | MASK_SHAMT, match_opcode, 0 },\n+{\"clzw\",      64, INSN_CLASS_ZBB,  \"d,s\",   MATCH_CLZW, MASK_CLZW, match_opcode, 0 },\n+{\"ctzw\",      64, INSN_CLASS_ZBB,  \"d,s\",   MATCH_CTZW, MASK_CTZW, match_opcode, 0 },\n+{\"cpopw\",     64, INSN_CLASS_ZBB,  \"d,s\",   MATCH_CPOPW, MASK_CPOPW, match_opcode, 0 },\n+{\"rolw\",      64, INSN_CLASS_ZBB,  \"d,s,t\", MATCH_ROLW, MASK_ROLW, match_opcode, 0 },\n+{\"roriw\",     64, INSN_CLASS_ZBB,  \"d,s,<\", MATCH_RORIW, MASK_RORIW, match_opcode, 0 },\n+{\"rorw\",      64, INSN_CLASS_ZBB,  \"d,s,t\", MATCH_RORW, MASK_RORW, match_opcode, 0 },\n+{\"rorw\",      64, INSN_CLASS_ZBB,  \"d,s,<\", MATCH_RORIW, MASK_RORIW, match_opcode, 0 },\n+{\"sh1add\",     0, INSN_CLASS_ZBA,  \"d,s,t\", MATCH_SH1ADD, MASK_SH1ADD, match_opcode, 0 },\n+{\"sh2add\",     0, INSN_CLASS_ZBA,  \"d,s,t\", MATCH_SH2ADD, MASK_SH2ADD, match_opcode, 0 },\n+{\"sh3add\",     0, INSN_CLASS_ZBA,  \"d,s,t\", MATCH_SH3ADD, MASK_SH3ADD, match_opcode, 0 },\n+{\"sh1add.uw\", 64, INSN_CLASS_ZBA,  \"d,s,t\", MATCH_SH1ADD_UW, MASK_SH1ADD_UW, match_opcode, 0 },\n+{\"sh2add.uw\", 64, INSN_CLASS_ZBA,  \"d,s,t\", MATCH_SH2ADD_UW, MASK_SH2ADD_UW, match_opcode, 0 },\n+{\"sh3add.uw\", 64, INSN_CLASS_ZBA,  \"d,s,t\", MATCH_SH3ADD_UW, MASK_SH3ADD_UW, match_opcode, 0 },\n+{\"zext.w\",    64, INSN_CLASS_ZBA,  \"d,s\",   MATCH_ADD_UW, MASK_ADD_UW | MASK_RS2, match_opcode, INSN_ALIAS },\n+{\"zext.w\",    64, INSN_CLASS_I, \"d,s\",       0, (int) M_ZEXTW, match_never, INSN_MACRO },\n+{\"add.uw\",    64, INSN_CLASS_ZBA,  \"d,s,t\", MATCH_ADD_UW, MASK_ADD_UW, match_opcode, 0 },\n+{\"slli.uw\",   64, INSN_CLASS_ZBA,  \"d,s,>\", MATCH_SLLI_UW, MASK_SLLI_UW, match_opcode, 0 },\n+{\"clmul\",      0, INSN_CLASS_ZBC,  \"d,s,t\", MATCH_CLMUL, MASK_CLMUL, match_opcode, 0 },\n+{\"clmulh\",     0, INSN_CLASS_ZBC,  \"d,s,t\", MATCH_CLMULH, MASK_CLMULH, match_opcode, 0 },\n+{\"clmulr\",     0, INSN_CLASS_ZBC,  \"d,s,t\", MATCH_CLMULR, MASK_CLMULR, match_opcode, 0 },\n+\n \n /* Terminate the list.  */\n {0, 0, INSN_CLASS_NONE, 0, 0, 0, 0, 0}"
    }
  ]
}