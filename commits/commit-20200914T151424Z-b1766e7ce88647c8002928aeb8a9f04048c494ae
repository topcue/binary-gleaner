{
  "sha": "b1766e7ce88647c8002928aeb8a9f04048c494ae",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjE3NjZlN2NlODg2NDdjODAwMjkyOGFlYjhhOWYwNDA0OGM0OTRhZQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-09-14T15:14:24Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-09-14T15:14:24Z"
    },
    "message": "Add a new \".nop\" directive to the assembler to allow the creation of no-op instructions in an architeture neutral manner.\n\n\t* read.c (s_nop): New function.  Handles the .nop directive.\n\t(potable): Add entry for \"nop\".\n\t(s_nops): Code tidy.\n\t* read.h (s_nop): Add prototype.\n\t* config/tc-bpf.h (md_single_noop_insn): Define.\n\t* config/tc-mmix.h (md_single_noop_insn): Define.\n\t* config/tc-or1k.h (md_single_noop_insn): Define.\n\t* config/tc-s12z.c (md_assemble): Preserve the input line pointer,\n\trather than corrupting it.\n\t* write.c (relax_segment): Update error message regarding\n\tnon-absolute values passed to .fill and .nops.\n\t* NEWS: Mention the new directive.\n\t* doc/as.texi: Document the new directive.\n\t* doc/internals.texi: Document the new internal macros used to\n\timplement the new directive.\n\t* testsuite/gas/all/nop.s: New test.\n\t* testsuite/gas/all/nop.d: New test control file.\n\t* testsuite/gas/all/gas.exp: Run the new test.\n\t* testsuite/gas/elf/dwarf-5-nop-for-line-table.s: New test.\n\t* testsuite/gas/elf/dwarf-5-nop-for-line-table.d: New test\n\tcontrol file.\n\t* testsuite/gas/elf/elf.exp: Run the new test.\n\t* testsuite/gas/i386/space1.l: Adjust expected output.",
    "tree": {
      "sha": "33c8ecdce1a894dfba913c58e0b484991383be8c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/33c8ecdce1a894dfba913c58e0b484991383be8c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b1766e7ce88647c8002928aeb8a9f04048c494ae",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1766e7ce88647c8002928aeb8a9f04048c494ae",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b1766e7ce88647c8002928aeb8a9f04048c494ae",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1766e7ce88647c8002928aeb8a9f04048c494ae/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "04f5bab24ba93562d5d14b6f26efbd407dbccaaf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/04f5bab24ba93562d5d14b6f26efbd407dbccaaf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/04f5bab24ba93562d5d14b6f26efbd407dbccaaf"
    }
  ],
  "stats": {
    "total": 204,
    "additions": 165,
    "deletions": 39
  },
  "files": [
    {
      "sha": "a80cef2482d1f94f559f5ac6104e70daaf67b435",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -1,3 +1,29 @@\n+2020-09-14  Nick Clifton  <nickc@redhat.com>\n+\n+\t* read.c (s_nop): New function.  Handles the .nop directive.\n+\t(potable): Add entry for \"nop\".\n+\t(s_nops): Code tidy.\n+\t* read.h (s_nop): Add prototype.\n+\t* config/tc-bpf.h (md_single_noop_insn): Define.\n+\t* config/tc-mmix.h (md_single_noop_insn): Define.\n+\t* config/tc-or1k.h (md_single_noop_insn): Define.\n+\t* config/tc-s12z.c (md_assemble): Preserve the input line pointer,\n+\trather than corrupting it.\n+\t* write.c (relax_segment): Update error message regarding\n+\tnon-absolute values passed to .fill and .nops.\n+\t* NEWS: Mention the new directive.\n+\t* doc/as.texi: Document the new directive.\n+\t* doc/internals.texi: Document the new internal macros used to\n+\timplement the new directive.\n+\t* testsuite/gas/all/nop.s: New test.\n+\t* testsuite/gas/all/nop.d: New test control file.\n+\t* testsuite/gas/all/gas.exp: Run the new test.\n+\t* testsuite/gas/elf/dwarf-5-nop-for-line-table.s: New test.\n+\t* testsuite/gas/elf/dwarf-5-nop-for-line-table.d: New test\n+\tcontrol file.\n+\t* testsuite/gas/elf/elf.exp: Run the new test.\n+\t* testsuite/gas/i386/space1.l: Adjust expected output.\n+\n 2020-09-07  Mark Wielaard  <mark@klomp.org>\n \n \t* as.texi (-g): Explicitly mention when .debug_info and .debug_line"
    },
    {
      "sha": "d709edf9b52b9e922516439104143fd2805b0947",
      "filename": "gas/NEWS",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/NEWS?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -1,5 +1,9 @@\n -*- text -*-\n \n+* Added a .nop directive to generate a single no-op instruction in a target\n+  neutral manner.  This instruction does have an effect on DWARF line number\n+  generation, if that is active.\n+\n * Removed --reduce-memory-overheads and --hash-size as gas now\n   uses hash tables that can be expand and shrink automatically.\n "
    },
    {
      "sha": "cb02d6c13383250d6fcd50ab6239608a4665ef4a",
      "filename": "gas/config/tc-bpf.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/config/tc-bpf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/config/tc-bpf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-bpf.h?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -48,3 +48,4 @@\n /* Values passed to md_apply_fix don't include the symbol value.  */\n #define MD_APPLY_SYM_VALUE(FIX) 0\n \n+#define md_single_noop_insn \"mov %r1,%r1\""
    },
    {
      "sha": "2d8e226dc8029a0f4c2fdb769e8b183c66f874d3",
      "filename": "gas/config/tc-mmix.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/config/tc-mmix.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/config/tc-mmix.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mmix.h?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -228,3 +228,5 @@ extern void mmix_md_do_align (int, char *, int, int);\n \n /* MMIX has global register symbols.  */\n #define TC_GLOBAL_REGISTER_SYMBOL_OK\n+\n+#define md_single_noop_insn \"set $0, $0\""
    },
    {
      "sha": "b9aa00cb9abf01b39c09128f73075f838c19859c",
      "filename": "gas/config/tc-or1k.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/config/tc-or1k.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/config/tc-or1k.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-or1k.h?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -74,3 +74,5 @@ void or1k_elf_final_processing (void);\n #define tc_cfi_frame_initial_instructions \\\n     or1k_cfi_frame_initial_instructions\n extern void or1k_cfi_frame_initial_instructions (void);\n+\n+#define md_single_noop_insn \"l.nop\""
    },
    {
      "sha": "c79d2f43f16478fd78c412af418d004463668e48",
      "filename": "gas/config/tc-s12z.c",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/config/tc-s12z.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/config/tc-s12z.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-s12z.c?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -3807,6 +3807,7 @@ md_assemble (char *str)\n       return;\n     }\n \n+  char * saved_ilp = input_line_pointer;\n   input_line_pointer = skip_whites (op_end);\n \n   size_t i;\n@@ -3816,15 +3817,17 @@ md_assemble (char *str)\n       if (0 == strcmp (name, opc->name))\n \t{\n \t  if (opc->parse_operands (opc))\n-\t    return;\n+\t    {\n+\t      input_line_pointer = saved_ilp;\n+\t      return;\n+\t    }\n \t  continue;\n \t}\n     }\n \n   as_bad (_(\"Invalid instruction: \\\"%s\\\"\"), str);\n   as_bad (_(\"First invalid token: \\\"%s\\\"\"), fail_line_pointer);\n-  while (*input_line_pointer++)\n-    ;\n+  input_line_pointer = saved_ilp;\n }\n \n \f"
    },
    {
      "sha": "b88c1f999797c491de28131ac497bea1ca26a0f8",
      "filename": "gas/doc/as.texi",
      "status": "modified",
      "additions": 21,
      "deletions": 11,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/doc/as.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/doc/as.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/as.texi?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -4446,6 +4446,7 @@ Some machine configurations provide additional directives.\n * MRI::\t\t\t\t@code{.mri @var{val}}\n * Noaltmacro::                  @code{.noaltmacro}\n * Nolist::                      @code{.nolist}\n+* Nop::                         @code{.nop}\n * Nops::                        @code{.nops @var{size}[, @var{control}]}\n * Octa::                        @code{.octa @var{bignums}}\n * Offset::\t\t\t@code{.offset @var{loc}}\n@@ -6157,22 +6158,31 @@ internal counter (which is zero initially).   @code{.list} increments the\n counter, and @code{.nolist} decrements it.  Assembly listings are\n generated whenever the counter is greater than zero.\n \n+@node Nop\n+@section @code{.nop}\n+\n+@cindex @code{nop} directive\n+@cindex filling memory with no-op instructions\n+This directive emits a single no-op instruction.  It is provided on all\n+architectures, allowing the creation of architecture neutral tests involving\n+actual code.  The size of the generated instruction is target specific.  The\n+instruction does affect the generation of DWARF debug line information.\n+\n @node Nops\n @section @code{.nops @var{size}[, @var{control}]}\n \n @cindex @code{nops} directive\n @cindex filling memory with no-op instructions\n-This directive emits @var{size} bytes filled with no-op instructions.\n-@var{size} is absolute expression, which must be a positve value.\n-@var{control} controls how no-op instructions should be generated.  If\n-the comma and @var{control} are omitted, @var{control} is assumed to be\n-zero.\n-\n-Note: For Intel 80386 and AMD x86-64 targets, @var{control} specifies\n-the size limit of a no-op instruction.  The valid values of @var{control}\n-are between 0 and 4 in 16-bit mode, between 0 and 7 when tuning for\n-older processors in 32-bit mode, between 0 and 11 in 64-bit mode or when\n-tuning for newer processors in 32-bit mode.  When 0 is used, the no-op\n+This directive emits no-op instructions.  It is specific to the Intel 80386 and\n+AMD x86-64 targets.  It takes a @var{size} argument and generates @var{size}\n+bytes of no-op instructions.  @var{size} must be absolute and positive.  These\n+bytes do not affect the generation of DWARF debug line information.\n+\n+The optional @var{control} argument specifies a size limit for a single no-op\n+instruction.  If not provided then a value of 0 is assumed.  The valid values\n+of @var{control} are between 0 and 4 in 16-bit mode, between 0 and 7 when\n+tuning for older processors in 32-bit mode, between 0 and 11 in 64-bit mode or\n+when tuning for newer processors in 32-bit mode.  When 0 is used, the no-op\n instruction size limit is set to the maximum supported size.\n \n @node Octa"
    },
    {
      "sha": "8afa283dbd05767b69d1bf4991ffe8df8761592b",
      "filename": "gas/doc/internals.texi",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/doc/internals.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/doc/internals.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/internals.texi?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -1547,6 +1547,16 @@ The function should return the debug format that is preferred by the CPU\n backend.  This format will be used when generating assembler specific debug\n information.\n \n+@item md_emit_single_noop_insn\n+@itemx md_single_noop_insn\n+These macro facilitate the @var{.nop} directive.  If defined the\n+@var{md_emit_single_noop_insn) macro provides code to insert a single no-op\n+instruction into the output stream.  If this involves calling @var{md_assemble}\n+with a fixed string then the alternative macro @var{md_single_noop_insn} can be\n+defined, specifying the string to pass.  If neither of these macros are defined\n+then the @var{.nop} directive will call @var{md_assemble} with the string\n+@option{nop}.\n+\n @item md_allow_local_subtract (@var{left}, @var{right}, @var{section})\n If defined, GAS will call this macro when evaluating an expression which is the\n difference of two symbols defined in the same section.  It takes three"
    },
    {
      "sha": "97a9e66e6f45b82c68a44cd6176d8db3f5f91503",
      "filename": "gas/read.c",
      "status": "modified",
      "additions": 57,
      "deletions": 19,
      "changes": 76,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/read.c?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -465,6 +465,7 @@ static const pseudo_typeS potable[] = {\n   {\"noformat\", s_ignore, 0},\n   {\"nolist\", listing_list, 0},\t/* Turn listing off.  */\n   {\"nopage\", listing_nopage, 0},\n+  {\"nop\", s_nop, 0},\n   {\"nops\", s_nops, 0},\n   {\"octa\", cons, 16},\n   {\"offset\", s_struct, 0},\n@@ -3502,6 +3503,38 @@ s_space (int mult)\n     mri_comment_end (stop, stopc);\n }\n \n+void\n+s_nop (int ignore ATTRIBUTE_UNUSED)\n+{\n+#ifdef md_flush_pending_output\n+  md_flush_pending_output ();\n+#endif\n+\n+#ifdef md_cons_align\n+  md_cons_align (1);\n+#endif\n+\n+  SKIP_WHITESPACE ();\n+  demand_empty_rest_of_line ();\n+\n+#ifdef md_emit_single_noop\n+  md_emit_single_noop;\n+#else\n+  char * nop;\n+\n+#ifndef md_single_noop_insn\n+#define md_single_noop_insn \"nop\"\n+#endif\n+  /* md_assemble might modify its argument, so\n+     we must pass it a string that is writeable.  */\n+  if (asprintf (&nop, \"%s\", md_single_noop_insn) < 0)\n+    as_fatal (\"%s\", xstrerror (errno));\n+\n+  md_assemble (nop);\n+  free (nop);\n+#endif\n+}\n+\n void\n s_nops (int ignore ATTRIBUTE_UNUSED)\n {\n@@ -3516,8 +3549,12 @@ s_nops (int ignore ATTRIBUTE_UNUSED)\n   md_cons_align (1);\n #endif\n \n+  SKIP_WHITESPACE ();\n   expression (&exp);\n+  /* Note - this expression is tested for an absolute value in\n+     write.c:relax_segment().  */\n \n+  SKIP_WHITESPACE ();\n   if (*input_line_pointer == ',')\n     {\n       ++input_line_pointer;\n@@ -3529,29 +3566,30 @@ s_nops (int ignore ATTRIBUTE_UNUSED)\n       val.X_add_number = 0;\n     }\n \n-  if (val.X_op == O_constant)\n+  if (val.X_op != O_constant)\n     {\n-      if (val.X_add_number < 0)\n-\t{\n-\t  as_warn (_(\"negative nop control byte, ignored\"));\n-\t  val.X_add_number = 0;\n-\t}\n-\n-      if (!need_pass_2)\n-\t{\n-\t  /* Store the no-op instruction control byte in the first byte\n-\t     of frag.  */\n-\t  char *p;\n-\t  symbolS *sym = make_expr_symbol (&exp);\n-\t  p = frag_var (rs_space_nop, 1, 1, (relax_substateT) 0,\n-\t\t\tsym, (offsetT) 0, (char *) 0);\n-\t  *p = val.X_add_number;\n-\t}\n+      as_bad (_(\"unsupported variable nop control in .nops directive\"));\n+      val.X_op = O_constant;\n+      val.X_add_number = 0;\n+    }\n+  else if (val.X_add_number < 0)\n+    {\n+      as_warn (_(\"negative nop control byte, ignored\"));\n+      val.X_add_number = 0;\n     }\n-  else\n-    as_bad (_(\"unsupported variable nop control in .nops directive\"));\n \n   demand_empty_rest_of_line ();\n+\n+  if (need_pass_2)\n+    /* Ignore this directive if we are going to perform a second pass.  */\n+    return;\n+\n+  /* Store the no-op instruction control byte in the first byte of frag.  */\n+  char *p;\n+  symbolS *sym = make_expr_symbol (&exp);\n+  p = frag_var (rs_space_nop, 1, 1, (relax_substateT) 0,\n+\t\tsym, (offsetT) 0, (char *) 0);\n+  *p = val.X_add_number;\n }\n \n /* This is like s_space, but the value is a floating point number with"
    },
    {
      "sha": "b2f0d363b138c7bf745f9dd7908ab7aa92633eba",
      "filename": "gas/read.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/read.h?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -207,6 +207,7 @@ extern void s_purgem (int);\n extern void s_rept (int);\n extern void s_set (int);\n extern void s_space (int mult);\n+extern void s_nop (int);\n extern void s_nops (int);\n extern void s_stab (int what);\n extern void s_struct (int);"
    },
    {
      "sha": "af9cb61e3f8d2f9368f2b393618675868d1dca42",
      "filename": "gas/testsuite/gas/all/gas.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/all/gas.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/all/gas.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/gas.exp?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -443,6 +443,7 @@ dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/err-*.s $srcdir/$subdir/warn\n dg-finish\n \n # Set $nop_type appropriately to indicate the NOP instruction mnemonic.\n+# Note - this code is made obsolete by the new .nops pseudo-op.\n switch -glob $target_triplet {\n     bpf-*-* {\n         set nop_type 6\n@@ -470,3 +471,5 @@ run_dump_test \"org-6\"\n run_dump_test \"fill-1\"\n \n gas_test \"pr23938.s\" \"\" \"\" \".xstabs\"\n+\n+run_dump_test \"nop\""
    },
    {
      "sha": "81ac08d9d434771d03fade5369d4bc862143c80a",
      "filename": "gas/testsuite/gas/all/nop.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/all/nop.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/all/nop.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/nop.d?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -0,0 +1,8 @@\n+#objdump: -s -j .text -j \"\\$TEXT\\$\"\n+#name: Generate NOPs in an architecture neutral manner\n+\n+.*: +file format .*\n+\n+Contents of section (\\.text|\\$TEXT\\$):\n+ [^ ]* .*\n+#pass"
    },
    {
      "sha": "bca3805ca370382f81f7f41ea8f708a7c949ed41",
      "filename": "gas/testsuite/gas/all/nop.s",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/all/nop.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/all/nop.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/nop.s?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -0,0 +1,2 @@\n+\t.text\n+\t.nop"
    },
    {
      "sha": "651a1a20707d392caeb8ef7850795c5e3e5b94a6",
      "filename": "gas/testsuite/gas/elf/dwarf-5-nop-for-line-table.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/elf/dwarf-5-nop-for-line-table.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/elf/dwarf-5-nop-for-line-table.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/dwarf-5-nop-for-line-table.d?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -0,0 +1,12 @@\n+#as: --gdwarf-5\n+#name: Check line table is produced with .nops\n+#readelf: -wL\n+\n+#...\n+Contents of the .debug_line section:\n+\n+CU: .*\n+File name.*\n+#...\n+.*[ \t]+[1-8][ \t]+0.*\n+#pass"
    },
    {
      "sha": "e3712ffa9dcf7022bfb12532349a8ad203ce82cb",
      "filename": "gas/testsuite/gas/elf/dwarf-5-nop-for-line-table.s",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/elf/dwarf-5-nop-for-line-table.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/elf/dwarf-5-nop-for-line-table.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/dwarf-5-nop-for-line-table.s?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -0,0 +1,3 @@\n+\t.text\n+\t.nop\n+\t.nop"
    },
    {
      "sha": "135ade24ec9f4d2802824c42dabaa6d48c8a34e8",
      "filename": "gas/testsuite/gas/elf/elf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/elf/elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/elf/elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/elf.exp?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -279,6 +279,7 @@ if { [is_elf_format] } then {\n     run_dump_test \"dwarf-5-file0\" $dump_opts\n     run_dump_test \"dwarf-4-cu\" $dump_opts\n     run_dump_test \"dwarf-5-cu\" $dump_opts\n+    run_dump_test \"dwarf-5-nop-for-line-table\" $dump_opts\n     run_dump_test \"pr25917\"\n     run_dump_test \"bss\"\n     run_dump_test \"bad-bss\""
    },
    {
      "sha": "bf446fa9b12f5a91368fa10b2718b052c58361a0",
      "filename": "gas/testsuite/gas/i386/space1.l",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/i386/space1.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/testsuite/gas/i386/space1.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/space1.l?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -1,9 +1,9 @@\n .*: Assembler messages:\n-.*:2: Error: .space specifies non-absolute value\n-.*:3: Error: .space specifies non-absolute value\n-.*:4: Error: .space specifies non-absolute value\n-.*:5: Error: .space specifies non-absolute value\n-.*:6: Error: .space specifies non-absolute value\n+.*:2: Error: .space, .nops or .fill specifies non-absolute value\n+.*:3: Error: .space, .nops or .fill specifies non-absolute value\n+.*:4: Error: .space, .nops or .fill specifies non-absolute value\n+.*:5: Error: .space, .nops or .fill specifies non-absolute value\n+.*:6: Error: .space, .nops or .fill specifies non-absolute value\n GAS LISTING .*\n \n "
    },
    {
      "sha": "054f27987d51f1732afdc81bbc9e19a95160c53f",
      "filename": "gas/write.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/write.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1766e7ce88647c8002928aeb8a9f04048c494ae/gas/write.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/write.c?ref=b1766e7ce88647c8002928aeb8a9f04048c494ae",
      "patch": "@@ -3017,7 +3017,7 @@ relax_segment (struct frag *segment_frag_root, segT segment, int pass)\n \t\t\t|| ! S_IS_DEFINED (symbolP))\n \t\t      {\n \t\t\tas_bad_where (fragP->fr_file, fragP->fr_line,\n-\t\t\t\t      _(\".space specifies non-absolute value\"));\n+\t\t\t\t      _(\".space, .nops or .fill specifies non-absolute value\"));\n \t\t\t/* Prevent repeat of this error message.  */\n \t\t\tfragP->fr_symbol = 0;\n \t\t      }"
    }
  ]
}