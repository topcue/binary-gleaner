{
  "sha": "21e051b3d666bcd614391142a936a8a8cccfa3cb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjFlMDUxYjNkNjY2YmNkNjE0MzkxMTQyYTkzNmE4YThjY2NmYTNjYg==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-12-07T08:03:24Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-12-07T08:10:51Z"
    },
    "message": "gdb/main: execute breakpoint commands for '-iex' and '-ex' commands\n\nSuppose we have the script file below:\n\n  break main\n  commands\n    print 123\n  end\n  run\n\nIf started with this script file, GDB executes the breakpoint command:\n\n  $ gdb -q -x myscript --args ./test\n  Reading symbols from ./test...\n  Breakpoint 1 at 0x114e: file test.c, line 2.\n\n  Breakpoint 1, main () at test.c:2\n  2         return 0;\n  $1 = 123\n  (gdb)\n\nHowever, if we remove the \"run\" line from the script and pass it with\nthe '-ex' option instead, the command is not executed:\n\n  $ gdb -q -x myscript_no_run --args ./test\n  Reading symbols from ./test...\n  Breakpoint 1 at 0x114e: file test.c, line 2.\n  Starting program: /path/to/test\n\n  Breakpoint 1, main () at test.c:2\n  2         return 0;\n  (gdb)\n\nIf the user enters a command at this point, the breakpoint command\nis executed, yielding weird output:\n\n  $ gdb -q -x myscript_no_run --args ./test\n  Reading symbols from ./test...\n  Breakpoint 1 at 0x114e: file test.c, line 2.\n  Starting program: /path/to/test\n\n  Breakpoint 1, main () at test.c:2\n  2         return 0;\n  (gdb) print \"a\"\n  $1 = \"a\"\n  $2 = 123\n\nWhen consuming script files, GDB runs bp actions after executing a\ncommand.  See `command_handler` in event-top.c:\n\n  if (c[0] != '#')\n    {\n      execute_command (command, ui->instream == ui->stdin_stream);\n\n      /* Do any commands attached to breakpoint we stopped at.  */\n      bpstat_do_actions ();\n    }\n\nHowever, for '-ex' commands, `bpstat_do_actions` is not invoked.\nHence, the misaligned output explained above occurs.  To fix the\nproblem, add a call to `bpstat_do_actions` after executing a command.\n\ngdb/ChangeLog:\n2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* main.c (catch_command_errors): Add a flag parameter; invoke\n\t`bpstat_do_actions` if the flag is set.\n\t(execute_cmdargs): Update a call to `catch_command_errors`.\n\ngdb/testsuite/ChangeLog:\n2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* gdb.base/bp-cmds-run-with-ex.c: New file.\n\t* gdb.base/bp-cmds-run-with-ex.exp: New file.\n\t* gdb.base/bp-cmds-run-with-ex.gdb: New file.\n\t* gdb.gdb/python-interrupts.exp: Update the call to\n\t'catch_command_errors' with the new argument.\n\t* gdb.gdb/python-selftest.exp: Ditto.",
    "tree": {
      "sha": "c22b5f525e6b89afe9a57755f966fd1a29cedcb7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c22b5f525e6b89afe9a57755f966fd1a29cedcb7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/21e051b3d666bcd614391142a936a8a8cccfa3cb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/21e051b3d666bcd614391142a936a8a8cccfa3cb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/21e051b3d666bcd614391142a936a8a8cccfa3cb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/21e051b3d666bcd614391142a936a8a8cccfa3cb/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f51f9f1d0300029d33ecb73976f5d2be9b63553e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f51f9f1d0300029d33ecb73976f5d2be9b63553e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f51f9f1d0300029d33ecb73976f5d2be9b63553e"
    }
  ],
  "stats": {
    "total": 118,
    "additions": 114,
    "deletions": 4
  },
  "files": [
    {
      "sha": "64e38aebd91dcbfba3a37e77adab942741a76d30",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=21e051b3d666bcd614391142a936a8a8cccfa3cb",
      "patch": "@@ -1,3 +1,9 @@\n+2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* main.c (catch_command_errors): Add a flag parameter; invoke\n+\t`bpstat_do_actions` if the flag is set.\n+\t(execute_cmdargs): Update a call to `catch_command_errors`.\n+\n 2020-12-07  Tom de Vries  <tdevries@suse.de>\n \n \t* ada-lang.c (replace_operator_with_call): Handle shrink resize."
    },
    {
      "sha": "9d0fad458c64dc49b88ee97f56a1386959b03ac7",
      "filename": "gdb/main.c",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/main.c?ref=21e051b3d666bcd614391142a936a8a8cccfa3cb",
      "patch": "@@ -439,7 +439,8 @@ typedef void (catch_command_errors_const_ftype) (const char *, int);\n \n static int\n catch_command_errors (catch_command_errors_const_ftype command,\n-\t\t      const char *arg, int from_tty)\n+\t\t      const char *arg, int from_tty,\n+\t\t      bool do_bp_actions = false)\n {\n   try\n     {\n@@ -448,6 +449,10 @@ catch_command_errors (catch_command_errors_const_ftype command,\n       command (arg, from_tty);\n \n       maybe_wait_sync_command_done (was_sync);\n+\n+      /* Do any commands attached to breakpoint we stopped at.  */\n+      if (do_bp_actions)\n+\tbpstat_do_actions ();\n     }\n   catch (const gdb_exception &e)\n     {\n@@ -531,7 +536,7 @@ execute_cmdargs (const std::vector<struct cmdarg> *cmdarg_vec,\n \t\t\t\t     !batch_flag);\n       else if (cmdarg_p.type == cmd_type)\n \t*ret = catch_command_errors (execute_command, cmdarg_p.string,\n-\t\t\t\t     !batch_flag);\n+\t\t\t\t     !batch_flag, true);\n     }\n }\n "
    },
    {
      "sha": "62228d44293764d49dca9bea7a1b7da336d779a5",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=21e051b3d666bcd614391142a936a8a8cccfa3cb",
      "patch": "@@ -1,3 +1,12 @@\n+2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* gdb.base/bp-cmds-run-with-ex.c: New file.\n+\t* gdb.base/bp-cmds-run-with-ex.exp: New file.\n+\t* gdb.base/bp-cmds-run-with-ex.gdb: New file.\n+\t* gdb.gdb/python-interrupts.exp: Update the call to\n+\t'catch_command_errors' with the new argument.\n+\t* gdb.gdb/python-selftest.exp: Ditto.\n+\n 2020-12-04  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdb.arch/amd64-disp-step-avx.exp: Adjust pattern."
    },
    {
      "sha": "f4825c8a7c1186e3fc77e381a89369df031109f1",
      "filename": "gdb/testsuite/gdb.base/bp-cmds-run-with-ex.c",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/testsuite/gdb.base/bp-cmds-run-with-ex.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/testsuite/gdb.base/bp-cmds-run-with-ex.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/bp-cmds-run-with-ex.c?ref=21e051b3d666bcd614391142a936a8a8cccfa3cb",
      "patch": "@@ -0,0 +1,22 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int\n+main ()\n+{\n+  return 0;\n+}"
    },
    {
      "sha": "447a3875f63e724b4b867625200b86f2fe37b482",
      "filename": "gdb/testsuite/gdb.base/bp-cmds-run-with-ex.exp",
      "status": "added",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/testsuite/gdb.base/bp-cmds-run-with-ex.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/testsuite/gdb.base/bp-cmds-run-with-ex.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/bp-cmds-run-with-ex.exp?ref=21e051b3d666bcd614391142a936a8a8cccfa3cb",
      "patch": "@@ -0,0 +1,49 @@\n+# This testcase is part of GDB, the GNU debugger.\n+\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test that breakpoint commands are taken into account when the\n+# debuggee program is executed with a \"run\" command given through the\n+# '-ex' option.\n+\n+standard_testfile\n+\n+if {[build_executable \"failed to prepare\" $testfile $srcfile]} {\n+    return -1\n+}\n+\n+set script_file $srcdir/$subdir/$testfile.gdb\n+\n+save_vars { GDBFLAGS } {\n+    append GDBFLAGS \" -x ${script_file}\"\n+    append GDBFLAGS \" -ex run\"\n+    append GDBFLAGS \" --args ${binfile}\"\n+\n+    gdb_exit\n+    if {[gdb_spawn] != 0} {\n+\tfail \"spawn gdb\"\n+\treturn -1\n+    }\n+}\n+\n+gdb_test_multiple \"\" \"execute bp commands\" {\n+    -re \" = 123\\r\\n$gdb_prompt $\" {\n+\tpass $gdb_test_name\n+    }\n+    -re \"Don't know how to run.*$gdb_prompt $\" {\n+\tunsupported $gdb_test_name\n+    }\n+}"
    },
    {
      "sha": "c8da9d70251a42191403ac9001e48510b8b4d47f",
      "filename": "gdb/testsuite/gdb.base/bp-cmds-run-with-ex.gdb",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/testsuite/gdb.base/bp-cmds-run-with-ex.gdb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/testsuite/gdb.base/bp-cmds-run-with-ex.gdb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/bp-cmds-run-with-ex.gdb?ref=21e051b3d666bcd614391142a936a8a8cccfa3cb",
      "patch": "@@ -0,0 +1,19 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+break main\n+commands\n+  print 123\n+end"
    },
    {
      "sha": "b99b23e481f3054611a23201ea2a57f0e463701f",
      "filename": "gdb/testsuite/gdb.gdb/python-interrupts.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/testsuite/gdb.gdb/python-interrupts.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/testsuite/gdb.gdb/python-interrupts.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.gdb/python-interrupts.exp?ref=21e051b3d666bcd614391142a936a8a8cccfa3cb",
      "patch": "@@ -25,7 +25,7 @@ proc test_python_interrupts {} {\n     }\n \n     gdb_breakpoint set_active_ext_lang temporary\n-    gdb_test \"call catch_command_errors(execute_command, \\\"python print(5)\\\", 0)\" \\\n+    gdb_test \"call catch_command_errors(execute_command, \\\"python print(5)\\\", 0, true)\" \\\n \t\"Temporary breakpoint.*silently stop.\"\n     gdb_test \"signal SIGINT\" \\\n \t\"KeyboardInterrupt.*Error while executing Python code.\""
    },
    {
      "sha": "0c769f23483d72c2594107f44595763d91deba2f",
      "filename": "gdb/testsuite/gdb.gdb/python-selftest.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/testsuite/gdb.gdb/python-selftest.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21e051b3d666bcd614391142a936a8a8cccfa3cb/gdb/testsuite/gdb.gdb/python-selftest.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.gdb/python-selftest.exp?ref=21e051b3d666bcd614391142a936a8a8cccfa3cb",
      "patch": "@@ -22,7 +22,7 @@ proc selftest_python {} {\n     }\n \n     gdb_test_no_output \"set variable gdb_python_initialized = 0\"\n-    gdb_test \"call catch_command_errors(execute_command, \\\"python print(5)\\\", 0)\" \\\n+    gdb_test \"call catch_command_errors(execute_command, \\\"python print(5)\\\", 0, true)\" \\\n \t\"Python not initialized.* = 0\"\n     return 0\n }"
    }
  ]
}