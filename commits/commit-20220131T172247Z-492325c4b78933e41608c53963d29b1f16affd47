{
  "sha": "492325c4b78933e41608c53963d29b1f16affd47",
  "node_id": "C_kwDOANOeidoAKDQ5MjMyNWM0Yjc4OTMzZTQxNjA4YzUzOTYzZDI5YjFmMTZhZmZkNDc",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2022-01-31T14:44:46Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2022-01-31T17:22:47Z"
    },
    "message": "gdb: fix some clang-tidy readability-misleading-indentation warnings\n\nI have warnings like these showing in my editor all the time, so I\nthought I'd run clang-tidy with this diagnostic on all the files (that I\ncan compile) and fix them.\n\nThere is still one warning, in utils.c, but that's because some code\nis mixed up with preprocessor macros (#ifdef TUI), so I think there no\ngood solution there.\n\nChange-Id: I345175fc7dd865318f0fbe61ac026c88c3b6a96b",
    "tree": {
      "sha": "cba5e4a602ae6416e907ba2bfef440fed1d64f1c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cba5e4a602ae6416e907ba2bfef440fed1d64f1c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/492325c4b78933e41608c53963d29b1f16affd47",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/492325c4b78933e41608c53963d29b1f16affd47",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/492325c4b78933e41608c53963d29b1f16affd47",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/492325c4b78933e41608c53963d29b1f16affd47/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8d2ef06e1c220bcfb133a47b98b6287ccabdb587",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d2ef06e1c220bcfb133a47b98b6287ccabdb587",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8d2ef06e1c220bcfb133a47b98b6287ccabdb587"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 15,
    "deletions": 15
  },
  "files": [
    {
      "sha": "5cd1f5adbd226dd349f278323e1ca5174673fa31",
      "filename": "gdb/disasm.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/492325c4b78933e41608c53963d29b1f16affd47/gdb/disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/492325c4b78933e41608c53963d29b1f16affd47/gdb/disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/disasm.c?ref=492325c4b78933e41608c53963d29b1f16affd47",
      "patch": "@@ -189,7 +189,7 @@ line_is_less_than (const deprecated_dis_line_entry &mle1,\n     {\n       if (mle1.start_pc != mle2.start_pc)\n \tval = mle1.start_pc < mle2.start_pc;\n-    else\n+      else\n \tval = mle1.line < mle2.line;\n     }\n   else"
    },
    {
      "sha": "6f01edf3924c987d9f6eb17ea875605492f59598",
      "filename": "gdb/dtrace-probe.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/492325c4b78933e41608c53963d29b1f16affd47/gdb/dtrace-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/492325c4b78933e41608c53963d29b1f16affd47/gdb/dtrace-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dtrace-probe.c?ref=492325c4b78933e41608c53963d29b1f16affd47",
      "patch": "@@ -851,7 +851,7 @@ dtrace_static_probe_ops::get_probes\n \t  if (bfd_malloc_and_get_section (abfd, sect, &dof) && dof != NULL)\n \t    dtrace_process_dof (sect, objfile, probesp,\n \t\t\t\t(struct dtrace_dof_hdr *) dof);\n-\t else\n+\t  else\n \t    complaint (_(\"could not obtain the contents of\"\n \t\t\t \"section '%s' in objfile `%s'.\"),\n \t\t       bfd_section_name (sect), bfd_get_filename (abfd));"
    },
    {
      "sha": "7734115b744c16284c52d88c75484653d6988b8e",
      "filename": "gdb/hppa-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/492325c4b78933e41608c53963d29b1f16affd47/gdb/hppa-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/492325c4b78933e41608c53963d29b1f16affd47/gdb/hppa-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/hppa-tdep.c?ref=492325c4b78933e41608c53963d29b1f16affd47",
      "patch": "@@ -2171,7 +2171,7 @@ hppa_frame_cache (struct frame_info *this_frame, void **this_cache)\n \t      fprintf_unfiltered (gdb_stdlog, \" (base=%s) [saved]\",\n \t\t\t\t  paddress (gdbarch, cache->base));\n       }\n-    else\n+     else\n       {\n \t/* The prologue has been slowly allocating stack space.  Adjust\n \t   the SP back.  */"
    },
    {
      "sha": "1c080bbe50fe208831fb48694ccae05c79cdd742",
      "filename": "gdb/mips-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/492325c4b78933e41608c53963d29b1f16affd47/gdb/mips-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/492325c4b78933e41608c53963d29b1f16affd47/gdb/mips-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mips-tdep.c?ref=492325c4b78933e41608c53963d29b1f16affd47",
      "patch": "@@ -2063,7 +2063,7 @@ micromips_next_pc (struct regcache *regcache, CORE_ADDR pc)\n \t  if (regcache_raw_get_signed (regcache, b0s5_reg (insn >> 16))\n \t\t!= regcache_raw_get_signed (regcache, b5s5_reg (insn >> 16)))\n \t      pc += micromips_relative_offset16 (insn);\n-\t    else\n+\t  else\n \t      pc += micromips_pc_insn_size (gdbarch, pc);\n \t  break;\n "
    },
    {
      "sha": "a88d6b9a82cd496d60ebee62a4fd9ab5c1d01d32",
      "filename": "gdb/p-valprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/492325c4b78933e41608c53963d29b1f16affd47/gdb/p-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/492325c4b78933e41608c53963d29b1f16affd47/gdb/p-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-valprint.c?ref=492325c4b78933e41608c53963d29b1f16affd47",
      "patch": "@@ -313,7 +313,7 @@ pascal_language::value_print_inner (struct value *val,\n \t}\n       else\n \t{\n-          if (pascal_is_string_type (type, &length_pos, &length_size,\n+\t  if (pascal_is_string_type (type, &length_pos, &length_size,\n \t\t\t\t     &string_pos, &char_type, NULL) > 0)\n \t    {\n \t      len = extract_unsigned_integer (valaddr + length_pos,"
    },
    {
      "sha": "7d9b313783a4d66eb8e329e09eb143c8380eb619",
      "filename": "gdb/sparc64-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/492325c4b78933e41608c53963d29b1f16affd47/gdb/sparc64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/492325c4b78933e41608c53963d29b1f16affd47/gdb/sparc64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sparc64-tdep.c?ref=492325c4b78933e41608c53963d29b1f16affd47",
      "patch": "@@ -327,8 +327,8 @@ adi_is_addr_mapped (CORE_ADDR vaddr, size_t cnt)\n \t    }\n \t}\n       }\n-    else\n-      warning (_(\"unable to open /proc file '%s'\"), filename);\n+  else\n+    warning (_(\"unable to open /proc file '%s'\"), filename);\n \n   return false;\n }"
    },
    {
      "sha": "506af3c527ece6d3cc2722f0033416cc56a2d106",
      "filename": "gdb/tracepoint.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/492325c4b78933e41608c53963d29b1f16affd47/gdb/tracepoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/492325c4b78933e41608c53963d29b1f16affd47/gdb/tracepoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracepoint.c?ref=492325c4b78933e41608c53963d29b1f16affd47",
      "patch": "@@ -2410,14 +2410,14 @@ tfind_line_command (const char *args, int from_tty)\n \t    error (_(\"Cannot find a good line.\"));\n \t}\n       }\n-    else\n-      {\n-\t/* Is there any case in which we get here, and have an address\n-\t   which the user would want to see?  If we have debugging\n-\t   symbols and no line numbers?  */\n-\terror (_(\"Line number %d is out of range for \\\"%s\\\".\"),\n-\t       sal.line, symtab_to_filename_for_display (sal.symtab));\n-      }\n+  else\n+    {\n+      /* Is there any case in which we get here, and have an address\n+\t which the user would want to see?  If we have debugging\n+\t symbols and no line numbers?  */\n+      error (_(\"Line number %d is out of range for \\\"%s\\\".\"),\n+\t     sal.line, symtab_to_filename_for_display (sal.symtab));\n+    }\n \n   /* Find within range of stated line.  */\n   if (args && *args)"
    }
  ]
}