{
  "sha": "9cb09e33e04feb12df2aaa6e81d61b82ad609ce5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWNiMDllMzNlMDRmZWIxMmRmMmFhYTZlODFkNjFiODJhZDYwOWNlNQ==",
  "commit": {
    "author": {
      "name": "Szabolcs Nagy",
      "email": "szabolcs.nagy@arm.com",
      "date": "2019-10-02T18:46:46Z"
    },
    "committer": {
      "name": "Szabolcs Nagy",
      "email": "szabolcs.nagy@arm.com",
      "date": "2019-10-04T09:57:00Z"
    },
    "message": "[PR ld/22263][PR ld/25056] arm: Avoid dynamic TLS relocs in PIE\n\nDynamic relocs are only needed in an executable for TLS symbols if\nthose are defined in an external module and even then TLS access\ncan be relaxed to use IE model instead of GD.\n\nSeveral bfd_link_pic checks are turned into bfd_link_dll checks\nto fix TLS handling in PIE, for the same fix some other targets\nused !bfd_link_executable checks, but that includes relocatable\nobjects so dll seems safer (in most cases either should work, since\ndynamic relocations are not applied in relocatable objects).\n\nOn arm* fixes\nFAIL: Build pr22263-1\n\nbfd/\n\n\tPR ld/22263\n\tPR ld/25056\n\t* elf32-arm.c (elf32_arm_tls_transition): Use bfd_link_dll instead of\n\tbfd_link_pic for TLS checks.\n\t(elf32_arm_final_link_relocate): Likewise.\n\t(allocate_dynrelocs_for_symbol): Likewise.",
    "tree": {
      "sha": "7e3b5182c409d7ad3bfc79c2f87397e70affee98",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7e3b5182c409d7ad3bfc79c2f87397e70affee98"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9cb09e33e04feb12df2aaa6e81d61b82ad609ce5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9cb09e33e04feb12df2aaa6e81d61b82ad609ce5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9cb09e33e04feb12df2aaa6e81d61b82ad609ce5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9cb09e33e04feb12df2aaa6e81d61b82ad609ce5/comments",
  "author": {
    "login": "nsz-arm",
    "id": 30925343,
    "node_id": "MDQ6VXNlcjMwOTI1MzQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nsz-arm",
    "html_url": "https://github.com/nsz-arm",
    "followers_url": "https://api.github.com/users/nsz-arm/followers",
    "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/nsz-arm/orgs",
    "repos_url": "https://api.github.com/users/nsz-arm/repos",
    "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nsz-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nsz-arm",
    "id": 30925343,
    "node_id": "MDQ6VXNlcjMwOTI1MzQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nsz-arm",
    "html_url": "https://github.com/nsz-arm",
    "followers_url": "https://api.github.com/users/nsz-arm/followers",
    "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/nsz-arm/orgs",
    "repos_url": "https://api.github.com/users/nsz-arm/repos",
    "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nsz-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b627f56244cb2930c5891cfde03586987d46b5d2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b627f56244cb2930c5891cfde03586987d46b5d2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b627f56244cb2930c5891cfde03586987d46b5d2"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 14,
    "deletions": 5
  },
  "files": [
    {
      "sha": "a2e3bb090fd2f47f5f4f8a7cca0db752b8e4e932",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9cb09e33e04feb12df2aaa6e81d61b82ad609ce5/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9cb09e33e04feb12df2aaa6e81d61b82ad609ce5/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=9cb09e33e04feb12df2aaa6e81d61b82ad609ce5",
      "patch": "@@ -1,3 +1,12 @@\n+2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\tPR ld/22263\n+\tPR ld/25056\n+\t* elf32-arm.c (elf32_arm_tls_transition): Use bfd_link_dll instead of\n+\tbfd_link_pic for TLS checks.\n+\t(elf32_arm_final_link_relocate): Likewise.\n+\t(allocate_dynrelocs_for_symbol): Likewise.\n+\n 2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \tPR ld/25062"
    },
    {
      "sha": "9837350d0662073c24ca26141794fa4fd7692ce0",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9cb09e33e04feb12df2aaa6e81d61b82ad609ce5/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9cb09e33e04feb12df2aaa6e81d61b82ad609ce5/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=9cb09e33e04feb12df2aaa6e81d61b82ad609ce5",
      "patch": "@@ -4914,7 +4914,7 @@ elf32_arm_tls_transition (struct bfd_link_info *info, int r_type,\n {\n   int is_local = (h == NULL);\n \n-  if (bfd_link_pic (info)\n+  if (bfd_link_dll (info)\n       || (h && h->root.type == bfd_link_hash_undefweak))\n     return r_type;\n \n@@ -11700,7 +11700,7 @@ elf32_arm_final_link_relocate (reloc_howto_type *\t    howto,\n \t  {\n \t    /* If we don't know the module number, create a relocation\n \t       for it.  */\n-\t    if (bfd_link_pic (info))\n+\t    if (bfd_link_dll (info))\n \t      {\n \t\tElf_Internal_Rela outrel;\n \n@@ -11804,7 +11804,7 @@ elf32_arm_final_link_relocate (reloc_howto_type *\t    howto,\n \t       now, and emit any relocations.  If both an IE GOT and a\n \t       GD GOT are necessary, we emit the GD first.  */\n \n-\t    if ((bfd_link_pic (info) || indx != 0)\n+\t    if ((bfd_link_dll (info) || indx != 0)\n \t\t&& (h == NULL\n \t\t    || (ELF_ST_VISIBILITY (h->other) == STV_DEFAULT\n \t\t\t&& !resolved_to_zero)\n@@ -11821,7 +11821,7 @@ elf32_arm_final_link_relocate (reloc_howto_type *\t    howto,\n \t\t/* We should have relaxed, unless this is an undefined\n \t\t   weak symbol.  */\n \t\tBFD_ASSERT ((h && (h->root.type == bfd_link_hash_undefweak))\n-\t\t\t    || bfd_link_pic (info));\n+\t\t\t    || bfd_link_dll (info));\n \t\tBFD_ASSERT (globals->sgotplt_jump_table_size + offplt + 8\n \t\t\t    <= globals->root.sgotplt->size);\n \n@@ -16494,7 +16494,7 @@ allocate_dynrelocs_for_symbol (struct elf_link_hash_entry *h, void * inf)\n \t    indx = h->dynindx;\n \n \t  if (tls_type != GOT_NORMAL\n-\t      && (bfd_link_pic (info) || indx != 0)\n+\t      && (bfd_link_dll (info) || indx != 0)\n \t      && (ELF_ST_VISIBILITY (h->other) == STV_DEFAULT\n \t\t  || h->root.type != bfd_link_hash_undefweak))\n \t    {"
    }
  ]
}