{
  "sha": "4f9ae810130bc4202ec1c5eae934900c542a9016",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGY5YWU4MTAxMzBiYzQyMDJlYzFjNWVhZTkzNDkwMGM1NDJhOTAxNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-13T23:39:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-14T00:03:40Z"
    },
    "message": "Introduce value_print_scalar_formatted\n\nThis introduces a value_print_scalar_formatted, which is an analogue\nof val_print_scalar_formatted that uses the value API.\n\ngdb/ChangeLog\n2020-03-13  Tom Tromey  <tom@tromey.com>\n\n\t* valprint.h (value_print_scalar_formatted): Declare.\n\t* valprint.c (value_print_scalar_formatted): New function.",
    "tree": {
      "sha": "902dd418b78f104a7bcdc7b4357b4a443bd522f9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/902dd418b78f104a7bcdc7b4357b4a443bd522f9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4f9ae810130bc4202ec1c5eae934900c542a9016",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f9ae810130bc4202ec1c5eae934900c542a9016",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4f9ae810130bc4202ec1c5eae934900c542a9016",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f9ae810130bc4202ec1c5eae934900c542a9016/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "156bfec999186e3eccaf51fa3b81280bf51dbaa4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/156bfec999186e3eccaf51fa3b81280bf51dbaa4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/156bfec999186e3eccaf51fa3b81280bf51dbaa4"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 55,
    "deletions": 0
  },
  "files": [
    {
      "sha": "264565edf19c73e407dae33cbe94465b228242da",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f9ae810130bc4202ec1c5eae934900c542a9016/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f9ae810130bc4202ec1c5eae934900c542a9016/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4f9ae810130bc4202ec1c5eae934900c542a9016",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* valprint.h (value_print_scalar_formatted): Declare.\n+\t* valprint.c (value_print_scalar_formatted): New function.\n+\n 2020-03-13  Tom Tromey  <tom@tromey.com>\n \n \t* valprint.h (generic_value_print): Declare."
    },
    {
      "sha": "9cdf18ee864dc212c2c66a817a9dffb2037100c9",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f9ae810130bc4202ec1c5eae934900c542a9016/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f9ae810130bc4202ec1c5eae934900c542a9016/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=4f9ae810130bc4202ec1c5eae934900c542a9016",
      "patch": "@@ -1394,6 +1394,46 @@ val_print_scalar_formatted (struct type *type,\n \t\t\t    options, size, stream);\n }\n \n+/* See valprint.h.  */\n+\n+void\n+value_print_scalar_formatted (struct value *val,\n+\t\t\t      const struct value_print_options *options,\n+\t\t\t      int size,\n+\t\t\t      struct ui_file *stream)\n+{\n+  struct type *type = check_typedef (value_type (val));\n+\n+  gdb_assert (val != NULL);\n+\n+  /* If we get here with a string format, try again without it.  Go\n+     all the way back to the language printers, which may call us\n+     again.  */\n+  if (options->format == 's')\n+    {\n+      struct value_print_options opts = *options;\n+      opts.format = 0;\n+      opts.deref_ref = 0;\n+      common_val_print (val, stream, 0, &opts, current_language);\n+      return;\n+    }\n+\n+  /* value_contents_for_printing fetches all VAL's contents.  They are\n+     needed to check whether VAL is optimized-out or unavailable\n+     below.  */\n+  const gdb_byte *valaddr = value_contents_for_printing (val);\n+\n+  /* A scalar object that does not have all bits available can't be\n+     printed, because all bits contribute to its representation.  */\n+  if (value_bits_any_optimized_out (val, 0,\n+\t\t\t\t    TARGET_CHAR_BIT * TYPE_LENGTH (type)))\n+    val_print_optimized_out (val, stream);\n+  else if (!value_bytes_available (val, 0, TYPE_LENGTH (type)))\n+    val_print_unavailable (stream);\n+  else\n+    print_scalar_formatted (valaddr, type, options, size, stream);\n+}\n+\n /* Print a number according to FORMAT which is one of d,u,x,o,b,h,w,g.\n    The raison d'etre of this function is to consolidate printing of \n    LONG_LONG's into this one function.  The format chars b,h,w,g are "
    },
    {
      "sha": "90df12dbd7e2719d265795a91db8b9acebfe425a",
      "filename": "gdb/valprint.h",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f9ae810130bc4202ec1c5eae934900c542a9016/gdb/valprint.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f9ae810130bc4202ec1c5eae934900c542a9016/gdb/valprint.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.h?ref=4f9ae810130bc4202ec1c5eae934900c542a9016",
      "patch": "@@ -141,6 +141,16 @@ extern void val_print_scalar_formatted (struct type *,\n \t\t\t\t\tint,\n \t\t\t\t\tstruct ui_file *);\n \n+/* Print a scalar according to OPTIONS and SIZE on STREAM.  Format 'i'\n+   is not supported at this level.\n+\n+   This is how the elements of an array or structure are printed\n+   with a format.  */\n+\n+extern void value_print_scalar_formatted\n+  (struct value *val, const struct value_print_options *options,\n+   int size, struct ui_file *stream);\n+\n extern void print_binary_chars (struct ui_file *, const gdb_byte *,\n \t\t\t\tunsigned int, enum bfd_endian, bool);\n "
    }
  ]
}