{
  "sha": "b671c7fb21306ce125717a44c30a71686bd24db1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjY3MWM3ZmIyMTMwNmNlMTI1NzE3YTQ0YzMwYTcxNjg2YmQyNGRiMQ==",
  "commit": {
    "author": {
      "name": "Thomas Schwinge",
      "email": "thomas@codesourcery.com",
      "date": "2017-02-17T16:45:01Z"
    },
    "committer": {
      "name": "Thomas Schwinge",
      "email": "thomas@codesourcery.com",
      "date": "2019-02-14T16:40:19Z"
    },
    "message": "[gdb, hurd] Avoid using 'PATH_MAX' in 'gdb/remote.c'\n\n..., which is not defined in GNU/Hurd systems, and so commit\n94585166dfea8232c248044f9f4b1c217dc4ac2e \"Extended-remote follow-exec\" caused:\n\n    [...]/gdb/remote.c: In member function 'void remote_target::remote_parse_stop_reply(const char*, stop_reply*)':\n    [...]/gdb/remote.c:7343:22: error: 'PATH_MAX' was not declared in this scope\n            char pathname[PATH_MAX];\n                          ^~~~~~~~\n\n\tgdb/\n\t* remote.c (remote_target::remote_parse_stop_reply): Avoid using\n\t'PATH_MAX'.",
    "tree": {
      "sha": "82be0213d6a8af860e98512111b7b0b06190d078",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/82be0213d6a8af860e98512111b7b0b06190d078"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b671c7fb21306ce125717a44c30a71686bd24db1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b671c7fb21306ce125717a44c30a71686bd24db1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b671c7fb21306ce125717a44c30a71686bd24db1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b671c7fb21306ce125717a44c30a71686bd24db1/comments",
  "author": {
    "login": "tschwinge",
    "id": 21753,
    "node_id": "MDQ6VXNlcjIxNzUz",
    "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tschwinge",
    "html_url": "https://github.com/tschwinge",
    "followers_url": "https://api.github.com/users/tschwinge/followers",
    "following_url": "https://api.github.com/users/tschwinge/following{/other_user}",
    "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions",
    "organizations_url": "https://api.github.com/users/tschwinge/orgs",
    "repos_url": "https://api.github.com/users/tschwinge/repos",
    "events_url": "https://api.github.com/users/tschwinge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tschwinge/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tschwinge",
    "id": 21753,
    "node_id": "MDQ6VXNlcjIxNzUz",
    "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tschwinge",
    "html_url": "https://github.com/tschwinge",
    "followers_url": "https://api.github.com/users/tschwinge/followers",
    "following_url": "https://api.github.com/users/tschwinge/following{/other_user}",
    "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions",
    "organizations_url": "https://api.github.com/users/tschwinge/orgs",
    "repos_url": "https://api.github.com/users/tschwinge/repos",
    "events_url": "https://api.github.com/users/tschwinge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tschwinge/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8071c5ce78245eff43f9977a7c3ff8328f7486da",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8071c5ce78245eff43f9977a7c3ff8328f7486da",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8071c5ce78245eff43f9977a7c3ff8328f7486da"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 10,
    "deletions": 2
  },
  "files": [
    {
      "sha": "bb27f74de147764304112536c1524706762709fb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b671c7fb21306ce125717a44c30a71686bd24db1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b671c7fb21306ce125717a44c30a71686bd24db1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b671c7fb21306ce125717a44c30a71686bd24db1",
      "patch": "@@ -1,3 +1,9 @@\n+2019-02-14  Thomas Schwinge  <thomas@codesourcery.com>\n+\t    Pedro Alves  <palves@redhat.com>\n+\n+\t* remote.c (remote_target::remote_parse_stop_reply): Avoid using\n+\t'PATH_MAX'.\n+\n 2019-02-14  David Michael  <fedora.dm0@gmail.com>\n \t    Samuel Thibault  <samuel.thibault@gnu.org>\n \t    Thomas Schwinge  <thomas@codesourcery.com>"
    },
    {
      "sha": "85af01e4b7321de679db6ca63a8fb7e308bdd87c",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b671c7fb21306ce125717a44c30a71686bd24db1/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b671c7fb21306ce125717a44c30a71686bd24db1/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=b671c7fb21306ce125717a44c30a71686bd24db1",
      "patch": "@@ -7340,7 +7340,6 @@ Packet: '%s'\\n\"),\n \t  else if (strprefix (p, p1, \"exec\"))\n \t    {\n \t      ULONGEST ignored;\n-\t      char pathname[PATH_MAX];\n \t      int pathlen;\n \n \t      /* Determine the length of the execd pathname.  */\n@@ -7349,11 +7348,14 @@ Packet: '%s'\\n\"),\n \n \t      /* Save the pathname for event reporting and for\n \t\t the next run command.  */\n+\t      char *pathname = (char *) xmalloc (pathlen + 1);\n+\t      struct cleanup *old_chain = make_cleanup (xfree, pathname);\n \t      hex2bin (p1, (gdb_byte *) pathname, pathlen);\n \t      pathname[pathlen] = '\\0';\n+\t      discard_cleanups (old_chain);\n \n \t      /* This is freed during event handling.  */\n-\t      event->ws.value.execd_pathname = xstrdup (pathname);\n+\t      event->ws.value.execd_pathname = pathname;\n \t      event->ws.kind = TARGET_WAITKIND_EXECD;\n \n \t      /* Skip the registers included in this packet, since"
    }
  ]
}