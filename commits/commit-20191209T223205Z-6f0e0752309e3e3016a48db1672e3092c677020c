{
  "sha": "6f0e0752309e3e3016a48db1672e3092c677020c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmYwZTA3NTIzMDllM2UzMDE2YTQ4ZGIxNjcyZTMwOTJjNjc3MDIwYw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-09T12:27:15Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-09T22:32:05Z"
    },
    "message": "Remove backup ppc struct dis_private.\n\nppc-dis.c used a global struct whenever malloc failed to provide the\neight bytes of memory necessary for struct dis_private.  Which is\nquite ridiculous.  If that malloc failed there is zero chance some\nother malloc won't fail too.\n\n\t* ppc-dis.c (private): Delete variable.\n\t(get_powerpc_dialect): Don't segfault on NULL info->private_data.\n\t(powerpc_init_dialect): Don't use global private.",
    "tree": {
      "sha": "2bbb804e67b89f91c238fde3983558ecf466e096",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2bbb804e67b89f91c238fde3983558ecf466e096"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6f0e0752309e3e3016a48db1672e3092c677020c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f0e0752309e3e3016a48db1672e3092c677020c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6f0e0752309e3e3016a48db1672e3092c677020c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f0e0752309e3e3016a48db1672e3092c677020c/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f59f89789fc17166ee05491e5c430706c9b7c18e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f59f89789fc17166ee05491e5c430706c9b7c18e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f59f89789fc17166ee05491e5c430706c9b7c18e"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 10,
    "deletions": 3
  },
  "files": [
    {
      "sha": "4d8dfe1bf5da7bdd40e720a355fb72e2c06a0c5e",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f0e0752309e3e3016a48db1672e3092c677020c/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f0e0752309e3e3016a48db1672e3092c677020c/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=6f0e0752309e3e3016a48db1672e3092c677020c",
      "patch": "@@ -1,3 +1,9 @@\n+2019-12-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-dis.c (private): Delete variable.\n+\t(get_powerpc_dialect): Don't segfault on NULL info->private_data.\n+\t(powerpc_init_dialect): Don't use global private.\n+\n 2019-12-10  Alan Modra  <amodra@gmail.com>\n \n \t* s12z-opc.c: Formatting."
    },
    {
      "sha": "9add60272a5172fad9f44c28451bce6aa3d349da",
      "filename": "opcodes/ppc-dis.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f0e0752309e3e3016a48db1672e3092c677020c/opcodes/ppc-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f0e0752309e3e3016a48db1672e3092c677020c/opcodes/ppc-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-dis.c?ref=6f0e0752309e3e3016a48db1672e3092c677020c",
      "patch": "@@ -40,7 +40,7 @@ struct dis_private\n {\n   /* Stash the result of parsing disassembler_options here.  */\n   ppc_cpu_t dialect;\n-} private;\n+};\n \n #define POWERPC_DIALECT(INFO) \\\n   (((struct dis_private *) ((INFO)->private_data))->dialect)\n@@ -259,7 +259,8 @@ get_powerpc_dialect (struct disassemble_info *info)\n {\n   ppc_cpu_t dialect = 0;\n \n-  dialect = POWERPC_DIALECT (info);\n+  if (info->private_data)\n+    dialect = POWERPC_DIALECT (info);\n \n   /* Disassemble according to the section headers flags for VLE-mode.  */\n   if (dialect & PPC_OPCODE_VLE\n@@ -308,7 +309,7 @@ powerpc_init_dialect (struct disassemble_info *info)\n   struct dis_private *priv = calloc (sizeof (*priv), 1);\n \n   if (priv == NULL)\n-    priv = &private;\n+    return;\n \n   switch (info->mach)\n     {"
    }
  ]
}