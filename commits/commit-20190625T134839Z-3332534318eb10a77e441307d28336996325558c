{
  "sha": "3332534318eb10a77e441307d28336996325558c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzMzMjUzNDMxOGViMTBhNzdlNDQxMzA3ZDI4MzM2OTk2MzI1NTU4Yw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T23:51:01Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:39Z"
    },
    "message": "Remove NULL check from tui_set_exec_info_content\n\ntui_set_exec_info_content ensures that the window's \"execution_info\"\nis allocated, so the NULL check here is redundant and can be removed.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-winsource.c (tui_set_exec_info_content): Remove NULL\n\tcheck.",
    "tree": {
      "sha": "214299cc413b0ea9ba2f86386351092c26b182a2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/214299cc413b0ea9ba2f86386351092c26b182a2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3332534318eb10a77e441307d28336996325558c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3332534318eb10a77e441307d28336996325558c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3332534318eb10a77e441307d28336996325558c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3332534318eb10a77e441307d28336996325558c/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "29d2c474f5a397017455da82e6dbc72629186359",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/29d2c474f5a397017455da82e6dbc72629186359",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/29d2c474f5a397017455da82e6dbc72629186359"
    }
  ],
  "stats": {
    "total": 75,
    "additions": 37,
    "deletions": 38
  },
  "files": [
    {
      "sha": "feec185ffb2f602484548f874ddd4ed2b0107567",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3332534318eb10a77e441307d28336996325558c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3332534318eb10a77e441307d28336996325558c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3332534318eb10a77e441307d28336996325558c",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-winsource.c (tui_set_exec_info_content): Remove NULL\n+\tcheck.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.h (tui_alloc_source_buffer): Change return"
    },
    {
      "sha": "5e60e9e37266340af30d4c0f6ac39cf15e4cd4f0",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 32,
      "deletions": 38,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3332534318eb10a77e441307d28336996325558c/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3332534318eb10a77e441307d28336996325558c/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=3332534318eb10a77e441307d28336996325558c",
      "patch": "@@ -495,46 +495,40 @@ tui_set_exec_info_content (struct tui_win_info *win_info)\n       if (exec_info_ptr->content == NULL)\n \texec_info_ptr->content =\n \t  tui_alloc_content (win_info->height, exec_info_ptr->type);\n-      if (exec_info_ptr->content != NULL)\n-\t{\n-\t  int i;\n \n-          tui_update_breakpoint_info (win_info, 1);\n-\t  for (i = 0; i < win_info->content_size; i++)\n-\t    {\n-\t      struct tui_win_element *element;\n-\t      struct tui_win_element *src_element;\n-              int mode;\n-\n-\t      element = exec_info_ptr->content[i];\n-\t      src_element = win_info->content[i];\n-\n-              memset(element->which_element.simple_string, ' ',\n-                     sizeof(element->which_element.simple_string));\n-              element->which_element.simple_string[TUI_EXECINFO_SIZE - 1] = 0;\n-\n-\t      /* Now update the exec info content based upon the state\n-                 of each line as indicated by the source content.  */\n-              mode = src_element->which_element.source.has_break;\n-              if (mode & TUI_BP_HIT)\n-                element->which_element.simple_string[TUI_BP_HIT_POS] =\n-                  (mode & TUI_BP_HARDWARE) ? 'H' : 'B';\n-              else if (mode & (TUI_BP_ENABLED | TUI_BP_DISABLED))\n-                element->which_element.simple_string[TUI_BP_HIT_POS] =\n-                  (mode & TUI_BP_HARDWARE) ? 'h' : 'b';\n-\n-              if (mode & TUI_BP_ENABLED)\n-                element->which_element.simple_string[TUI_BP_BREAK_POS] = '+';\n-              else if (mode & TUI_BP_DISABLED)\n-                element->which_element.simple_string[TUI_BP_BREAK_POS] = '-';\n-\n-              if (src_element->which_element.source.is_exec_point)\n-                element->which_element.simple_string[TUI_EXEC_POS] = '>';\n-\t    }\n-\t  exec_info_ptr->content_size = win_info->content_size;\n+      tui_update_breakpoint_info (win_info, 1);\n+      for (int i = 0; i < win_info->content_size; i++)\n+\t{\n+\t  struct tui_win_element *element;\n+\t  struct tui_win_element *src_element;\n+\t  int mode;\n+\n+\t  element = exec_info_ptr->content[i];\n+\t  src_element = win_info->content[i];\n+\n+\t  memset(element->which_element.simple_string, ' ',\n+\t\t sizeof(element->which_element.simple_string));\n+\t  element->which_element.simple_string[TUI_EXECINFO_SIZE - 1] = 0;\n+\n+\t  /* Now update the exec info content based upon the state\n+\t     of each line as indicated by the source content.  */\n+\t  mode = src_element->which_element.source.has_break;\n+\t  if (mode & TUI_BP_HIT)\n+\t    element->which_element.simple_string[TUI_BP_HIT_POS] =\n+\t      (mode & TUI_BP_HARDWARE) ? 'H' : 'B';\n+\t  else if (mode & (TUI_BP_ENABLED | TUI_BP_DISABLED))\n+\t    element->which_element.simple_string[TUI_BP_HIT_POS] =\n+\t      (mode & TUI_BP_HARDWARE) ? 'h' : 'b';\n+\n+\t  if (mode & TUI_BP_ENABLED)\n+\t    element->which_element.simple_string[TUI_BP_BREAK_POS] = '+';\n+\t  else if (mode & TUI_BP_DISABLED)\n+\t    element->which_element.simple_string[TUI_BP_BREAK_POS] = '-';\n+\n+\t  if (src_element->which_element.source.is_exec_point)\n+\t    element->which_element.simple_string[TUI_EXEC_POS] = '>';\n \t}\n-      else\n-\tret = TUI_FAILURE;\n+      exec_info_ptr->content_size = win_info->content_size;\n     }\n \n   return ret;"
    }
  ]
}