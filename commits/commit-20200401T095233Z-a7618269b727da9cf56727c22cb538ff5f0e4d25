{
  "sha": "a7618269b727da9cf56727c22cb538ff5f0e4d25",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTc2MTgyNjliNzI3ZGE5Y2Y1NjcyN2MyMmNiNTM4ZmY1ZjBlNGQyNQ==",
  "commit": {
    "author": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2020-04-01T09:47:18Z"
    },
    "committer": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2020-04-01T09:52:33Z"
    },
    "message": "Arm: Fix LSB of GOT for Thumb2 only PLT.\n\nWhen you have a Thumb only PLT then the address in the GOT for PLT0 needs to\nhave the Thumb bit set since the instruction used in PLTn to get there is\n`ldr.w\tpc` which is an inter-working instruction:\n\nthe PLT sequence in question is\n\n00000120 <foo@plt>:\n 120:\tf240 0c98 \tmovw\tip, #152\t; 0x98\n 124:\tf2c0 0c01 \tmovt\tip, #1\n 128:\t44fc      \tadd\tip, pc\n 12a:\tf8dc f000 \tldr.w\tpc, [ip]\n 12e:\te7fc      \tb.n\t12a <foo@plt+0xa>\n\nDisassembly of section .text:\n\n00000130 <bar>:\n 130:\tb580      \tpush\t{r7, lr}\n 132:\taf00      \tadd\tr7, sp, #0\n 134:\tf7ff fff4 \tbl\t120 <foo@plt>\n\nand previously the linker would generate\n\nHex dump of section '.got':\n ...\n  0x000101b8 40010100 00000000 00000000 10010000 @...............\n\nWhich would make it jump and transition out of thumb mode and crash since you\nonly have thumb mode on such cores.\n\nNow it correctly generates\n\nHex dump of section '.got':\n ...\n  0x000101b8 40010100 00000000 00000000 11010000 @...............\n\nThanks to Amol for testing patch and to rgujju for reporting it.\n\nbfd/ChangeLog:\n\n\tPR ld/16017\n\t* elf32-arm.c (elf32_arm_populate_plt_entry): Set LSB of the PLT0\n\taddress in the GOT if in thumb only mode.\n\nld/ChangeLog:\n\n\tPR ld/16017\n\t* testsuite/ld-arm/arm-elf.exp (thumb-plt-got): New.\n\t* testsuite/ld-arm/thumb-plt-got.d: New test.",
    "tree": {
      "sha": "87615d7d18619600f5bfc60c2b3c924ac0ccdb76",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/87615d7d18619600f5bfc60c2b3c924ac0ccdb76"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a7618269b727da9cf56727c22cb538ff5f0e4d25",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7618269b727da9cf56727c22cb538ff5f0e4d25",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a7618269b727da9cf56727c22cb538ff5f0e4d25",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7618269b727da9cf56727c22cb538ff5f0e4d25/comments",
  "author": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "15ccbdd717530f81f545a716f0df1de62aee1157",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/15ccbdd717530f81f545a716f0df1de62aee1157",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/15ccbdd717530f81f545a716f0df1de62aee1157"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 33,
    "deletions": 0
  },
  "files": [
    {
      "sha": "bea9526d2a1201db1977cfeaa9a7640d6b214637",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7618269b727da9cf56727c22cb538ff5f0e4d25/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7618269b727da9cf56727c22cb538ff5f0e4d25/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=a7618269b727da9cf56727c22cb538ff5f0e4d25",
      "patch": "@@ -1,3 +1,9 @@\n+2020-04-01  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR ld/16017\n+\t* elf32-arm.c (elf32_arm_populate_plt_entry): Set LSB of the PLT0\n+\taddress in the GOT if in thumb only mode.\n+\n 2020-04-01  Tamar Christina  <tamar.christina@arm.com>\n \n \t* elf32-arm.c (elf32_thumb2_plt_entry): Fix PC-rel offset."
    },
    {
      "sha": "02d43a86195bd527fec24c845c2e925bc5a45346",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7618269b727da9cf56727c22cb538ff5f0e4d25/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7618269b727da9cf56727c22cb538ff5f0e4d25/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=a7618269b727da9cf56727c22cb538ff5f0e4d25",
      "patch": "@@ -10001,6 +10001,12 @@ elf32_arm_populate_plt_entry (bfd *output_bfd, struct bfd_link_info *info,\n \t      rel.r_info = ELF32_R_INFO (dynindx, R_ARM_JUMP_SLOT);\n \t      initial_got_entry = (splt->output_section->vma\n \t\t\t\t   + splt->output_offset);\n+\n+\t      /* PR ld/16017\n+\t\t When thumb only we need to set the LSB for any address that\n+\t\t will be used with an interworking branch instruction.  */\n+\t      if (using_thumb_only (htab))\n+\t\tinitial_got_entry |= 1;\n \t    }\n \t}\n "
    },
    {
      "sha": "16ffc3034885e6313e2594e29a1af1bc1ff8f4b0",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7618269b727da9cf56727c22cb538ff5f0e4d25/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7618269b727da9cf56727c22cb538ff5f0e4d25/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=a7618269b727da9cf56727c22cb538ff5f0e4d25",
      "patch": "@@ -1,3 +1,9 @@\n+2020-04-01  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR ld/16017\n+\t* testsuite/ld-arm/arm-elf.exp (thumb-plt-got): New.\n+\t* testsuite/ld-arm/thumb-plt-got.d: New test.\n+\n 2020-04-01  Tamar Christina  <tamar.christina@arm.com>\n \n \t* testsuite/ld-arm/arm-elf.exp (thumb-plt): New."
    },
    {
      "sha": "59e68de800bdcd53b51fd44b28972e53f7f141c8",
      "filename": "ld/testsuite/ld-arm/arm-elf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7618269b727da9cf56727c22cb538ff5f0e4d25/ld/testsuite/ld-arm/arm-elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7618269b727da9cf56727c22cb538ff5f0e4d25/ld/testsuite/ld-arm/arm-elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-arm/arm-elf.exp?ref=a7618269b727da9cf56727c22cb538ff5f0e4d25",
      "patch": "@@ -1270,3 +1270,4 @@ run_dump_test \"non-contiguous-arm5\"\n run_dump_test \"non-contiguous-arm6\"\n \n run_dump_test \"thumb-plt\"\n+run_dump_test \"thumb-plt-got\""
    },
    {
      "sha": "e65aba9e2f8a3129990166c458d7c82306e1af7b",
      "filename": "ld/testsuite/ld-arm/thumb-plt-got.d",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7618269b727da9cf56727c22cb538ff5f0e4d25/ld/testsuite/ld-arm/thumb-plt-got.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7618269b727da9cf56727c22cb538ff5f0e4d25/ld/testsuite/ld-arm/thumb-plt-got.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-arm/thumb-plt-got.d?ref=a7618269b727da9cf56727c22cb538ff5f0e4d25",
      "patch": "@@ -0,0 +1,14 @@\n+#source: thumb-plt.s\n+#name: Thumb only PLT and GOT LSB Symbol\n+#ld: -shared -e0\n+#readelf: -rx .got\n+#skip: *-*-pe *-*-wince *-*-vxworks armeb-*-* *-*-gnueabihf\n+\n+Relocation section '.rel.plt' at offset 0x108 contains 1 entry:\n+ Offset     Info    Type            Sym.Value  Sym. Name\n+000101c4  00000116 R_ARM_JUMP_SLOT   00000000   foo\n+\n+Hex dump of section '.got':\n+ NOTE: This section has relocations against it, but these have NOT been applied to this dump.\n+  0x000101b8 40010100 00000000 00000000 11010000 @...............\n+"
    }
  ]
}