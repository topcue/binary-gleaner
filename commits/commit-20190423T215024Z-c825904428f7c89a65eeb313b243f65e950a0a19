{
  "sha": "c825904428f7c89a65eeb313b243f65e950a0a19",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzgyNTkwNDQyOGY3Yzg5YTY1ZWViMzEzYjI0M2Y2NWU5NTBhMGExOQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-10T18:51:11Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-23T21:50:24Z"
    },
    "message": "gdb/msp430: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc, and gdbarch_unwind_sp where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* msp430-tdep.c (msp430_unwind_pc): Delete.\n\t(msp430_unwind_sp): Delete.\n\t(msp430_dummy_id): Delete.\n\t(msp430_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "a03c2b27d7c6f44c0921cbee9a7d05600ac669c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a03c2b27d7c6f44c0921cbee9a7d05600ac669c2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c825904428f7c89a65eeb313b243f65e950a0a19",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c825904428f7c89a65eeb313b243f65e950a0a19",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c825904428f7c89a65eeb313b243f65e950a0a19",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c825904428f7c89a65eeb313b243f65e950a0a19/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "27f113c8e9b2361caf3dfcf15437020306bf93b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/27f113c8e9b2361caf3dfcf15437020306bf93b9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/27f113c8e9b2361caf3dfcf15437020306bf93b9"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 8,
    "deletions": 32
  },
  "files": [
    {
      "sha": "c4ffa87f40fce1dbd8a059e87477c33874e0fef1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c825904428f7c89a65eeb313b243f65e950a0a19/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c825904428f7c89a65eeb313b243f65e950a0a19/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c825904428f7c89a65eeb313b243f65e950a0a19",
      "patch": "@@ -1,3 +1,11 @@\n+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* msp430-tdep.c (msp430_unwind_pc): Delete.\n+\t(msp430_unwind_sp): Delete.\n+\t(msp430_dummy_id): Delete.\n+\t(msp430_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* moxie-tdep.c (moxie_unwind_sp): Delete."
    },
    {
      "sha": "0e55eab22fe01a230acddbd2d525eb2c6e1d5ee8",
      "filename": "gdb/msp430-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c825904428f7c89a65eeb313b243f65e950a0a19/gdb/msp430-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c825904428f7c89a65eeb313b243f65e950a0a19/gdb/msp430-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/msp430-tdep.c?ref=c825904428f7c89a65eeb313b243f65e950a0a19",
      "patch": "@@ -447,22 +447,6 @@ msp430_skip_prologue (struct gdbarch *gdbarch, CORE_ADDR pc)\n   return p.prologue_end;\n }\n \n-/* Implement the \"unwind_pc\" gdbarch method.  */\n-\n-static CORE_ADDR\n-msp430_unwind_pc (struct gdbarch *arch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, MSP430_PC_REGNUM);\n-}\n-\n-/* Implement the \"unwind_sp\" gdbarch method.  */\n-\n-static CORE_ADDR\n-msp430_unwind_sp (struct gdbarch *arch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, MSP430_SP_REGNUM);\n-}\n-\n /* Given a frame described by THIS_FRAME, decode the prologue of its\n    associated function if there is not cache entry as specified by\n    THIS_PROLOGUE_CACHE.  Save the decoded prologue in the cache and\n@@ -650,19 +634,6 @@ msp430_frame_align (struct gdbarch *gdbarch, CORE_ADDR sp)\n   return align_down (sp, 2);\n }\n \n-\n-/* Implement the \"dummy_id\" gdbarch method.  */\n-\n-static struct frame_id\n-msp430_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  return\n-    frame_id_build (get_frame_register_unsigned\n-\t\t    (this_frame, MSP430_SP_REGNUM),\n-\t\t    get_frame_pc (this_frame));\n-}\n-\n-\n /* Implement the \"push_dummy_call\" gdbarch method.  */\n \n static CORE_ADDR\n@@ -995,14 +966,11 @@ msp430_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   /* Frames, prologues, etc.  */\n   set_gdbarch_inner_than (gdbarch, core_addr_lessthan);\n   set_gdbarch_skip_prologue (gdbarch, msp430_skip_prologue);\n-  set_gdbarch_unwind_pc (gdbarch, msp430_unwind_pc);\n-  set_gdbarch_unwind_sp (gdbarch, msp430_unwind_sp);\n   set_gdbarch_frame_align (gdbarch, msp430_frame_align);\n   dwarf2_append_unwinders (gdbarch);\n   frame_unwind_append_unwinder (gdbarch, &msp430_unwind);\n \n   /* Dummy frames, return values.  */\n-  set_gdbarch_dummy_id (gdbarch, msp430_dummy_id);\n   set_gdbarch_push_dummy_call (gdbarch, msp430_push_dummy_call);\n   set_gdbarch_return_value (gdbarch, msp430_return_value);\n "
    }
  ]
}