{
  "sha": "1a6ff1a96b302283d517b3cdeae7310adecbe859",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWE2ZmYxYTk2YjMwMjI4M2Q1MTdiM2NkZWFlNzMxMGFkZWNiZTg1OQ==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-09-27T18:08:25Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-22T16:26:17Z"
    },
    "message": "Add a fast_hash function in common-utils\n\nAlso updates a caller in symtab.c. For now this just calls htab_hash_string\nbut the next patch will change it to xxhash, if available.\n\ngdb/ChangeLog:\n\n2019-10-22  Christian Biesinger  <cbiesinger@google.com>\n\n\t* utils.h (fast_hash): New function.\n\t* symtab.c (hash_demangled_name_entry): Call new function\n\tfast_hash.\n\nChange-Id: I77cac0d9aa78fc65316a2af449f52edcae72dc9b",
    "tree": {
      "sha": "0865c6916b3f41de3c77f11505cef808501150cd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0865c6916b3f41de3c77f11505cef808501150cd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1a6ff1a96b302283d517b3cdeae7310adecbe859",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a6ff1a96b302283d517b3cdeae7310adecbe859",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1a6ff1a96b302283d517b3cdeae7310adecbe859",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a6ff1a96b302283d517b3cdeae7310adecbe859/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7bb43059820c5febb4509b15202a93efde442bc6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7bb43059820c5febb4509b15202a93efde442bc6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7bb43059820c5febb4509b15202a93efde442bc6"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 18,
    "deletions": 1
  },
  "files": [
    {
      "sha": "bbf5d0897dc0e8e68f71493d7c6cfb2032007d06",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a6ff1a96b302283d517b3cdeae7310adecbe859/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a6ff1a96b302283d517b3cdeae7310adecbe859/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1a6ff1a96b302283d517b3cdeae7310adecbe859",
      "patch": "@@ -1,3 +1,9 @@\n+2019-10-22  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* utils.h (fast_hash): New function.\n+\t* symtab.c (hash_demangled_name_entry): Call new function\n+\tfast_hash.\n+\n 2019-10-22  Christian Biesinger  <cbiesinger@google.com>\n \n \t* symtab.c (struct demangled_name_entry): Change type of mangled"
    },
    {
      "sha": "dff92ca203c06f21c7e7d720d0dc212c01865218",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a6ff1a96b302283d517b3cdeae7310adecbe859/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a6ff1a96b302283d517b3cdeae7310adecbe859/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=1a6ff1a96b302283d517b3cdeae7310adecbe859",
      "patch": "@@ -70,6 +70,7 @@\n #include <algorithm>\n #include \"gdbsupport/gdb_string_view.h\"\n #include \"gdbsupport/pathstuff.h\"\n+#include \"gdbsupport/common-utils.h\"\n \n /* Forward declarations for local functions.  */\n \n@@ -727,7 +728,7 @@ hash_demangled_name_entry (const void *data)\n   const struct demangled_name_entry *e\n     = (const struct demangled_name_entry *) data;\n \n-  return iterative_hash (e->mangled.data (), e->mangled.length (), 0);\n+  return fast_hash (e->mangled.data (), e->mangled.length ());\n }\n \n /* Equality function for the demangled name hash.  */"
    },
    {
      "sha": "478c485e664810ad817491165b57d27b6347e566",
      "filename": "gdb/utils.h",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a6ff1a96b302283d517b3cdeae7310adecbe859/gdb/utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a6ff1a96b302283d517b3cdeae7310adecbe859/gdb/utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.h?ref=1a6ff1a96b302283d517b3cdeae7310adecbe859",
      "patch": "@@ -567,4 +567,14 @@ extern void copy_bitwise (gdb_byte *dest, ULONGEST dest_offset,\n \t\t\t  const gdb_byte *source, ULONGEST source_offset,\n \t\t\t  ULONGEST nbits, int bits_big_endian);\n \n+/* A fast hashing function.  This can be used to hash strings in a fast way\n+   when the length is known.  If no fast hashing library is available, falls\n+   back to iterative_hash from libiberty.  */\n+\n+static inline unsigned int\n+fast_hash (const char* str, size_t len)\n+{\n+  return iterative_hash (str, len, 0);\n+}\n+\n #endif /* UTILS_H */"
    }
  ]
}