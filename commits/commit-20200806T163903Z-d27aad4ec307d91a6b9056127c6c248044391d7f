{
  "sha": "d27aad4ec307d91a6b9056127c6c248044391d7f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDI3YWFkNGVjMzA3ZDkxYTZiOTA1NjEyN2M2YzI0ODA0NDM5MWQ3Zg==",
  "commit": {
    "author": {
      "name": "Alex Coplan",
      "email": "alex.coplan@arm.com",
      "date": "2020-08-06T16:39:03Z"
    },
    "committer": {
      "name": "Alex Coplan",
      "email": "alex.coplan@arm.com",
      "date": "2020-08-06T16:39:03Z"
    },
    "message": "gas: Fix internal error on long local labels\n\nPrior to this commit, on an input such as \"88888888888:\", GAS hits a\nsigned integer overflow and likely an assertion failure. I see:\n\n$ echo \"88888888888:\" | bin/aarch64-none-elf-as\n{standard input}: Assembler messages:\n{standard input}:1: Internal error in fb_label_name at ../gas/symbols.c:2049.\nPlease report this bug.\n\nTo fix this issue, I've taken two steps:\n\n1. Change the type used for processing local labels in\n   read_a_source_file() from int to long, to allow representing more\n   local labels, and also since all uses of this variable (temp) are\n   actually of type long.\n\n2. Detect if we would overflow and bail out with an error message\n   instead of actually overflowing and hitting the assertion in\n   fb_label_name().\n\ngas/ChangeLog:\n\n2020-08-06  Alex Coplan  <alex.coplan@arm.com>\n\n\t* read.c (read_a_source_file): Use long for local labels, detect\n\toverflow and raise an error for overly-long labels.\n\t* testsuite/gas/all/gas.exp: Add local-label-overflow test.\n\t* testsuite/gas/all/local-label-overflow.d: New test.\n\t* testsuite/gas/all/local-label-overflow.l: Error output.\n\t* testsuite/gas/all/local-label-overflow.s: Input.",
    "tree": {
      "sha": "24940c28bd633fa92d1d8e9602fb958b4ee70b94",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/24940c28bd633fa92d1d8e9602fb958b4ee70b94"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d27aad4ec307d91a6b9056127c6c248044391d7f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d27aad4ec307d91a6b9056127c6c248044391d7f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d27aad4ec307d91a6b9056127c6c248044391d7f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d27aad4ec307d91a6b9056127c6c248044391d7f/comments",
  "author": {
    "login": "acoplan-arm",
    "id": 86676934,
    "node_id": "MDQ6VXNlcjg2Njc2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acoplan-arm",
    "html_url": "https://github.com/acoplan-arm",
    "followers_url": "https://api.github.com/users/acoplan-arm/followers",
    "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/acoplan-arm/orgs",
    "repos_url": "https://api.github.com/users/acoplan-arm/repos",
    "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acoplan-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "acoplan-arm",
    "id": 86676934,
    "node_id": "MDQ6VXNlcjg2Njc2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acoplan-arm",
    "html_url": "https://github.com/acoplan-arm",
    "followers_url": "https://api.github.com/users/acoplan-arm/followers",
    "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/acoplan-arm/orgs",
    "repos_url": "https://api.github.com/users/acoplan-arm/repos",
    "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acoplan-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ed908db649cd48452fa4c1476a6be437ce9a0126",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ed908db649cd48452fa4c1476a6be437ce9a0126",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ed908db649cd48452fa4c1476a6be437ce9a0126"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 32,
    "deletions": 3
  },
  "files": [
    {
      "sha": "eac8ec4f9be1a7efd8f9bb5a1f52606938200362",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d27aad4ec307d91a6b9056127c6c248044391d7f/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d27aad4ec307d91a6b9056127c6c248044391d7f/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=d27aad4ec307d91a6b9056127c6c248044391d7f",
      "patch": "@@ -1,3 +1,12 @@\n+2020-08-06  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* read.c (read_a_source_file): Use long for local labels, detect\n+\toverflow and raise an error for overly-long labels.\n+\t* testsuite/gas/all/gas.exp: Add local-label-overflow test.\n+\t* testsuite/gas/all/local-label-overflow.d: New test.\n+\t* testsuite/gas/all/local-label-overflow.l: Error output.\n+\t* testsuite/gas/all/local-label-overflow.s: Input.\n+\n 2020-08-04  Christian Groessler  <chris@groessler.org>\n \n \t* gas/testsuite/gas/z8k/inout.d: Adapt to correct encoding of"
    },
    {
      "sha": "bd896580e5db04c7b4099c3a972f75de31a5cdab",
      "filename": "gas/read.c",
      "status": "modified",
      "additions": 16,
      "deletions": 3,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d27aad4ec307d91a6b9056127c6c248044391d7f/gas/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d27aad4ec307d91a6b9056127c6c248044391d7f/gas/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/read.c?ref=d27aad4ec307d91a6b9056127c6c248044391d7f",
      "patch": "@@ -40,6 +40,8 @@\n #include \"dw2gencfi.h\"\n #include \"wchar.h\"\n \n+#include <limits.h>\n+\n #ifndef TC_START_LABEL\n #define TC_START_LABEL(STR, NUL_CHAR, NEXT_CHAR) (NEXT_CHAR == ':')\n #endif\n@@ -816,7 +818,7 @@ read_a_source_file (const char *name)\n   char nul_char;\n   char next_char;\n   char *s;\t\t/* String of symbol, '\\0' appended.  */\n-  int temp;\n+  long temp;\n   pseudo_typeS *pop;\n \n #ifdef WARN_COMMENTS\n@@ -1212,10 +1214,21 @@ read_a_source_file (const char *name)\n \t      /* Read the whole number.  */\n \t      while (ISDIGIT (*input_line_pointer))\n \t\t{\n-\t\t  temp = (temp * 10) + *input_line_pointer - '0';\n+\t\t  const long digit = *input_line_pointer - '0';\n+\t\t  if (temp > (LONG_MAX - digit) / 10)\n+\t\t    {\n+\t\t      as_bad (_(\"local label too large near %s\"), backup);\n+\t\t      temp = -1;\n+\t\t      break;\n+\t\t    }\n+\t\t  temp = temp * 10 + digit;\n \t\t  ++input_line_pointer;\n \t\t}\n \n+\t      /* Overflow: stop processing the label.  */\n+\t      if (temp == -1)\n+\t\tcontinue;\n+\n \t      if (LOCAL_LABELS_DOLLAR\n \t\t  && *input_line_pointer == '$'\n \t\t  && *(input_line_pointer + 1) == ':')\n@@ -1224,7 +1237,7 @@ read_a_source_file (const char *name)\n \n \t\t  if (dollar_label_defined (temp))\n \t\t    {\n-\t\t      as_fatal (_(\"label \\\"%d$\\\" redefined\"), temp);\n+\t\t      as_fatal (_(\"label \\\"%ld$\\\" redefined\"), temp);\n \t\t    }\n \n \t\t  define_dollar_label (temp);"
    },
    {
      "sha": "a0158f38dde220d863ed942bb9f0df41e1fa0517",
      "filename": "gas/testsuite/gas/all/gas.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d27aad4ec307d91a6b9056127c6c248044391d7f/gas/testsuite/gas/all/gas.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d27aad4ec307d91a6b9056127c6c248044391d7f/gas/testsuite/gas/all/gas.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/gas.exp?ref=d27aad4ec307d91a6b9056127c6c248044391d7f",
      "patch": "@@ -102,6 +102,7 @@ if { ![istarget \"bfin-*-*\"] } then {\n }\n gas_test_error \"assign-bad.s\" \"\" \"== assignment for symbol already set\"\n run_dump_test assign-bad-recursive\n+run_dump_test local-label-overflow\n \n run_dump_test simple-forward\n run_dump_test forward"
    },
    {
      "sha": "956025c57679f0b281d296db47e8870ffb7a770d",
      "filename": "gas/testsuite/gas/all/local-label-overflow.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d27aad4ec307d91a6b9056127c6c248044391d7f/gas/testsuite/gas/all/local-label-overflow.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d27aad4ec307d91a6b9056127c6c248044391d7f/gas/testsuite/gas/all/local-label-overflow.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/local-label-overflow.d?ref=d27aad4ec307d91a6b9056127c6c248044391d7f",
      "patch": "@@ -0,0 +1,3 @@\n+#source: local-label-overflow.s\n+#error_output: local-label-overflow.l\n+#notarget: hppa*-*-* ia64-*-vms mmix-*-* sh-*-pe"
    },
    {
      "sha": "be24355bbd40f1622378f2db5251a338f74bc9f7",
      "filename": "gas/testsuite/gas/all/local-label-overflow.l",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d27aad4ec307d91a6b9056127c6c248044391d7f/gas/testsuite/gas/all/local-label-overflow.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d27aad4ec307d91a6b9056127c6c248044391d7f/gas/testsuite/gas/all/local-label-overflow.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/local-label-overflow.l?ref=d27aad4ec307d91a6b9056127c6c248044391d7f",
      "patch": "@@ -0,0 +1,2 @@\n+[^:]*: Assembler messages:\n+.*: Error: local label too large near 888888888888888888888888888:"
    },
    {
      "sha": "e5569217f443c23ba6effc75595756e21de19b00",
      "filename": "gas/testsuite/gas/all/local-label-overflow.s",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d27aad4ec307d91a6b9056127c6c248044391d7f/gas/testsuite/gas/all/local-label-overflow.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d27aad4ec307d91a6b9056127c6c248044391d7f/gas/testsuite/gas/all/local-label-overflow.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/local-label-overflow.s?ref=d27aad4ec307d91a6b9056127c6c248044391d7f",
      "patch": "@@ -0,0 +1 @@\n+8888888888888888888888888888:"
    }
  ]
}