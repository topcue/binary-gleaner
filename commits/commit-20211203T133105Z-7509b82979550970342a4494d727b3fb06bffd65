{
  "sha": "7509b82979550970342a4494d727b3fb06bffd65",
  "node_id": "C_kwDOANOeidoAKDc1MDliODI5Nzk1NTA5NzAzNDJhNDQ5NGQ3MjdiM2ZiMDZiZmZkNjU",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-12-01T18:09:56Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-12-03T13:31:05Z"
    },
    "message": "gdb: change store_waitstatus to return a target_waitstatus by value\n\nstore_waitstatus is basically a translation function between a status\ninteger and an equivalent target_waitstatus object.  It would make sense\nfor it to take the integer as a parameter and return the\ntarget_waitstatus by value.  Do that, and rename to\nhost_status_to_waitstatus.  Users can then do:\n\n  ws = host_status_to_waitstatus (status)\n\nwhich does the right thing, given the move constructor of\ntarget_waitstatus.\n\nChange-Id: I7a07d59d3dc19d3ed66929642f82f44f3e85d61b",
    "tree": {
      "sha": "dcb494b490c750bc3ea370ed875b1b59ddbcd28d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dcb494b490c750bc3ea370ed875b1b59ddbcd28d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7509b82979550970342a4494d727b3fb06bffd65",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7509b82979550970342a4494d727b3fb06bffd65",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7509b82979550970342a4494d727b3fb06bffd65",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7509b82979550970342a4494d727b3fb06bffd65/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "857dfb92de66c1ce66e78ae40a4b7d0e8fdbf2f0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/857dfb92de66c1ce66e78ae40a4b7d0e8fdbf2f0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/857dfb92de66c1ce66e78ae40a4b7d0e8fdbf2f0"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 20,
    "deletions": 19
  },
  "files": [
    {
      "sha": "6ea836a1a4987630126c49f4ddf3c5bdea4d40b1",
      "filename": "gdb/gnu-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7509b82979550970342a4494d727b3fb06bffd65/gdb/gnu-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7509b82979550970342a4494d727b3fb06bffd65/gdb/gnu-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gnu-nat.c?ref=7509b82979550970342a4494d727b3fb06bffd65",
      "patch": "@@ -1821,7 +1821,7 @@ S_proc_wait_reply (mach_port_t reply, kern_return_t err,\n     }\n   else if (pid == inf->pid)\n     {\n-      store_waitstatus (&inf->wait.status, status);\n+      inf->wait.status = host_status_to_waitstatus (status);\n       if (inf->wait.status.kind () == TARGET_WAITKIND_STOPPED)\n \t/* The process has sent us a signal, and stopped itself in a sane\n \t   state pending our actions.  */"
    },
    {
      "sha": "b65bbf30074762565348cc2ad196dc33cfe609b8",
      "filename": "gdb/inf-child.c",
      "status": "modified",
      "additions": 9,
      "deletions": 8,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7509b82979550970342a4494d727b3fb06bffd65/gdb/inf-child.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7509b82979550970342a4494d727b3fb06bffd65/gdb/inf-child.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-child.c?ref=7509b82979550970342a4494d727b3fb06bffd65",
      "patch": "@@ -51,18 +51,19 @@ inf_child_target::info () const\n   return inf_child_target_info;\n }\n \n-/* Helper function for child_wait and the derivatives of child_wait.\n-   HOSTSTATUS is the waitstatus from wait() or the equivalent; store our\n-   translation of that in OURSTATUS.  */\n-void\n-store_waitstatus (struct target_waitstatus *ourstatus, int hoststatus)\n+/* See inf-child.h.  */\n+\n+target_waitstatus\n+host_status_to_waitstatus (int hoststatus)\n {\n   if (WIFEXITED (hoststatus))\n-    ourstatus->set_exited (WEXITSTATUS (hoststatus));\n+    return target_waitstatus ().set_exited (WEXITSTATUS (hoststatus));\n   else if (!WIFSTOPPED (hoststatus))\n-    ourstatus->set_signalled (gdb_signal_from_host (WTERMSIG (hoststatus)));\n+    return target_waitstatus ().set_signalled\n+      (gdb_signal_from_host (WTERMSIG (hoststatus)));\n   else\n-    ourstatus->set_stopped (gdb_signal_from_host (WSTOPSIG (hoststatus)));\n+    return target_waitstatus ().set_stopped\n+      (gdb_signal_from_host (WSTOPSIG (hoststatus)));\n }\n \n inf_child_target::~inf_child_target ()"
    },
    {
      "sha": "1e009b6b74ae98f32b55f812ac64dfc0b0f9fe8d",
      "filename": "gdb/inf-child.h",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7509b82979550970342a4494d727b3fb06bffd65/gdb/inf-child.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7509b82979550970342a4494d727b3fb06bffd65/gdb/inf-child.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-child.h?ref=7509b82979550970342a4494d727b3fb06bffd65",
      "patch": "@@ -104,10 +104,9 @@ class inf_child_target\n   void maybe_unpush_target ();\n };\n \n-/* Functions for helping to write a native target.  */\n+/* Convert the host wait(2) status to a target_waitstatus.  */\n \n-/* This is for native targets which use a unix/POSIX-style waitstatus.  */\n-extern void store_waitstatus (struct target_waitstatus *, int);\n+extern target_waitstatus host_status_to_waitstatus (int hoststatus);\n \n /* Register TARGET as native target and set it up to respond to the\n    \"target native\" command.  */"
    },
    {
      "sha": "2e7a03c63f5e460828cdc61cf73cdb313e8b9360",
      "filename": "gdb/inf-ptrace.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7509b82979550970342a4494d727b3fb06bffd65/gdb/inf-ptrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7509b82979550970342a4494d727b3fb06bffd65/gdb/inf-ptrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-ptrace.c?ref=7509b82979550970342a4494d727b3fb06bffd65",
      "patch": "@@ -334,7 +334,8 @@ inf_ptrace_target::wait (ptid_t ptid, struct target_waitstatus *ourstatus,\n     }\n   while (pid == -1);\n \n-  store_waitstatus (ourstatus, status);\n+  *ourstatus = host_status_to_waitstatus (status);\n+\n   return ptid_t (pid);\n }\n "
    },
    {
      "sha": "656a0975dddfc6fd5f9c4156990338db6b77a8f1",
      "filename": "gdb/linux-nat.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7509b82979550970342a4494d727b3fb06bffd65/gdb/linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7509b82979550970342a4494d727b3fb06bffd65/gdb/linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-nat.c?ref=7509b82979550970342a4494d727b3fb06bffd65",
      "patch": "@@ -2159,7 +2159,7 @@ wait_lwp (struct lwp_info *lp)\n \t\t process is gone.  Store the status to report to the\n \t\t core.  Store it in lp->waitstatus, because lp->status\n \t\t would be ambiguous (W_EXITCODE(0,0) == 0).  */\n-\t      store_waitstatus (&lp->waitstatus, status);\n+\t      lp->waitstatus = host_status_to_waitstatus (status);\n \t      return 0;\n \t    }\n \n@@ -2932,7 +2932,7 @@ linux_nat_filter_event (int lwpid, int status)\n \n       /* Store the pending event in the waitstatus, because\n \t W_EXITCODE(0,0) == 0.  */\n-      store_waitstatus (&lp->waitstatus, status);\n+      lp->waitstatus = host_status_to_waitstatus (status);\n       return;\n     }\n \n@@ -3306,7 +3306,7 @@ linux_nat_wait_1 (ptid_t ptid, struct target_waitstatus *ourstatus,\n       lp->waitstatus.set_ignore ();\n     }\n   else\n-    store_waitstatus (ourstatus, status);\n+    *ourstatus = host_status_to_waitstatus (status);\n \n   linux_nat_debug_printf (\"exit\");\n "
    },
    {
      "sha": "7dfc586fc7b18acb1655d865a10fd81fd0f4e88a",
      "filename": "gdb/netbsd-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7509b82979550970342a4494d727b3fb06bffd65/gdb/netbsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7509b82979550970342a4494d727b3fb06bffd65/gdb/netbsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/netbsd-nat.c?ref=7509b82979550970342a4494d727b3fb06bffd65",
      "patch": "@@ -560,7 +560,7 @@ nbsd_wait (ptid_t ptid, struct target_waitstatus *ourstatus,\n   if (pid == -1)\n     perror_with_name (_(\"Child process unexpectedly missing\"));\n \n-  store_waitstatus (ourstatus, status);\n+  *ourstatus = host_status_to_waitstatus (status);\n   return pid;\n }\n "
    },
    {
      "sha": "d77458b6c6ab29bd4e57778e3b5da7cc183ec0b7",
      "filename": "gdb/procfs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7509b82979550970342a4494d727b3fb06bffd65/gdb/procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7509b82979550970342a4494d727b3fb06bffd65/gdb/procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/procfs.c?ref=7509b82979550970342a4494d727b3fb06bffd65",
      "patch": "@@ -2353,7 +2353,7 @@ procfs_target::wait (ptid_t ptid, struct target_waitstatus *status,\n \t}\n \n       if (status)\n-\tstore_waitstatus (status, wstat);\n+\t*status = host_status_to_waitstatus (wstat);\n     }\n \n   return retval;"
    },
    {
      "sha": "d74211f048e6e77763fb92439e7dced8e175f47c",
      "filename": "gdb/rs6000-aix-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7509b82979550970342a4494d727b3fb06bffd65/gdb/rs6000-aix-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7509b82979550970342a4494d727b3fb06bffd65/gdb/rs6000-aix-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rs6000-aix-nat.c?ref=7509b82979550970342a4494d727b3fb06bffd65",
      "patch": "@@ -539,7 +539,7 @@ rs6000_nat_target::wait (ptid_t ptid, struct target_waitstatus *ourstatus,\n     ourstatus->set_spurious ();\n   /* A normal waitstatus.  Let the usual macros deal with it.  */\n   else\n-    store_waitstatus (ourstatus, status);\n+    *ourstatus = host_status_to_waitstatus (status);\n \n   return ptid_t (pid);\n }"
    }
  ]
}