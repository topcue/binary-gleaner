{
  "sha": "085734dd954dd2b3da9445dc517bfdb10f9ca117",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDg1NzM0ZGQ5NTRkZDJiM2RhOTQ0NWRjNTE3YmZkYjEwZjljYTExNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:25Z"
    },
    "message": "Introduce objc_msgcall_operation\n\nThis adds class objc_msgcall_operation, which implements\nOP_OBJC_MSGCALL.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (objc_msgcall_operation::evaluate): New method.\n\t* c-exp.h (class objc_msgcall_operation): New.",
    "tree": {
      "sha": "398e7c71d53b1ee5000c6f20a59ee16442d15c8d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/398e7c71d53b1ee5000c6f20a59ee16442d15c8d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/085734dd954dd2b3da9445dc517bfdb10f9ca117",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/085734dd954dd2b3da9445dc517bfdb10f9ca117",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/085734dd954dd2b3da9445dc517bfdb10f9ca117",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/085734dd954dd2b3da9445dc517bfdb10f9ca117/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e82a5afcedd98a2ca9c1915bef2938c77e967959",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e82a5afcedd98a2ca9c1915bef2938c77e967959",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e82a5afcedd98a2ca9c1915bef2938c77e967959"
    }
  ],
  "stats": {
    "total": 61,
    "additions": 61,
    "deletions": 0
  },
  "files": [
    {
      "sha": "37fe24a89cae303f81166f19cb412439efa6765c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/085734dd954dd2b3da9445dc517bfdb10f9ca117/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/085734dd954dd2b3da9445dc517bfdb10f9ca117/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=085734dd954dd2b3da9445dc517bfdb10f9ca117",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (objc_msgcall_operation::evaluate): New method.\n+\t* c-exp.h (class objc_msgcall_operation): New.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* expop.h (class var_value_operation): New."
    },
    {
      "sha": "2d224c8c633dfbb51e2e7871a21db840bcc70bf3",
      "filename": "gdb/c-exp.h",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/085734dd954dd2b3da9445dc517bfdb10f9ca117/gdb/c-exp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/085734dd954dd2b3da9445dc517bfdb10f9ca117/gdb/c-exp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-exp.h?ref=085734dd954dd2b3da9445dc517bfdb10f9ca117",
      "patch": "@@ -88,6 +88,23 @@ class objc_selector_operation\n   { return OP_OBJC_SELECTOR; }\n };\n \n+/* An Objective C message call.  */\n+class objc_msgcall_operation\n+  : public tuple_holding_operation<CORE_ADDR, operation_up,\n+\t\t\t\t   std::vector<operation_up>>\n+{\n+public:\n+\n+  using tuple_holding_operation::tuple_holding_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override;\n+\n+  enum exp_opcode opcode () const override\n+  { return OP_OBJC_MSGCALL; }\n+};\n+\n }/* namespace expr */\n \n #endif /* C_EXP_H */"
    },
    {
      "sha": "91965179a144f0e31495c0154cafa6373a0249f5",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/085734dd954dd2b3da9445dc517bfdb10f9ca117/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/085734dd954dd2b3da9445dc517bfdb10f9ca117/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=085734dd954dd2b3da9445dc517bfdb10f9ca117",
      "patch": "@@ -2436,6 +2436,45 @@ eval_multi_subscript (struct type *expect_type, struct expression *exp,\n   return (arg1);\n }\n \n+namespace expr\n+{\n+\n+value *\n+objc_msgcall_operation::evaluate (struct type *expect_type,\n+\t\t\t\t  struct expression *exp,\n+\t\t\t\t  enum noside noside)\n+{\n+  enum noside sub_no_side = EVAL_NORMAL;\n+  struct type *selector_type = builtin_type (exp->gdbarch)->builtin_data_ptr;\n+\n+  if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+    sub_no_side = EVAL_NORMAL;\n+  else\n+    sub_no_side = noside;\n+  value *target\n+    = std::get<1> (m_storage)->evaluate (selector_type, exp, sub_no_side);\n+\n+  if (value_as_long (target) == 0)\n+    sub_no_side = EVAL_AVOID_SIDE_EFFECTS;\n+  else\n+    sub_no_side = noside;\n+  std::vector<operation_up> &args = std::get<2> (m_storage);\n+  value **argvec = XALLOCAVEC (struct value *, args.size () + 3);\n+  argvec[0] = nullptr;\n+  argvec[1] = nullptr;\n+  for (int i = 0; i < args.size (); ++i)\n+    argvec[i + 2] = args[i]->evaluate_with_coercion (exp, sub_no_side);\n+  argvec[args.size () + 2] = nullptr;\n+\n+  return eval_op_objc_msgcall (expect_type, exp, noside, std::\n+\t\t\t       get<0> (m_storage), target,\n+\t\t\t       gdb::make_array_view (argvec,\n+\t\t\t\t\t\t     args.size () + 3));\n+}\n+\n+}\n+\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,"
    }
  ]
}