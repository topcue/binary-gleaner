{
  "sha": "102cc23543fc37b42c4814f594f130f862397178",
  "node_id": "C_kwDOANOeidoAKDEwMmNjMjM1NDNmYzM3YjQyYzQ4MTRmNTk0ZjEzMGY4NjIzOTcxNzg",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-11-20T02:18:05Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2022-02-06T20:48:18Z"
    },
    "message": "gdb: move compunit_filetabs to compunit_symtab::filetabs\n\nMake compunit_filetabs, used to iterate a compunit_symtab's filetabs, a\nmethod of compunit_symtab.  The name filetabs conflicts with the current\nname of the field.  Rename the field to m_filetabs, since at this point\nnothing outside of compunit_symtab uses it, so we should treat it as\nprivate (even though it's not actually private).  Rename the\nlast_filetab field to m_last_filetab as well (it's only used on\ncompunit_symtab::add_filetab).\n\nAdjust the COMPUNIT_FILETABS macro to keep its current behavior of\nreturning the first filetab.\n\nChange-Id: I537b553a44451c52d24b18ee1bfa47e23747cfc3",
    "tree": {
      "sha": "641e7dce863b6e1aa80b58aafeb5bc2ae862fa49",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/641e7dce863b6e1aa80b58aafeb5bc2ae862fa49"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/102cc23543fc37b42c4814f594f130f862397178",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/102cc23543fc37b42c4814f594f130f862397178",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/102cc23543fc37b42c4814f594f130f862397178",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/102cc23543fc37b42c4814f594f130f862397178/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "36664835fa3f81503633024e0e834be4d84276e1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/36664835fa3f81503633024e0e834be4d84276e1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/36664835fa3f81503633024e0e834be4d84276e1"
    }
  ],
  "stats": {
    "total": 80,
    "additions": 39,
    "deletions": 41
  },
  "files": [
    {
      "sha": "f6bf973e9f75381a2dc0910a751bb5d560d25524",
      "filename": "gdb/coffread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/102cc23543fc37b42c4814f594f130f862397178/gdb/coffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/102cc23543fc37b42c4814f594f130f862397178/gdb/coffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/coffread.c?ref=102cc23543fc37b42c4814f594f130f862397178",
      "patch": "@@ -1177,7 +1177,7 @@ coff_symtab_read (minimal_symbol_reader &reader,\n   {\n     for (compunit_symtab *cu : objfile->compunits ())\n       {\n-\tfor (symtab *s : compunit_filetabs (cu))\n+\tfor (symtab *s : cu->filetabs ())\n \t  patch_opaque_types (s);\n       }\n   }"
    },
    {
      "sha": "f7e1828e2810fc0192d210550a0ab9d59ad57180",
      "filename": "gdb/maint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/102cc23543fc37b42c4814f594f130f862397178/gdb/maint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/102cc23543fc37b42c4814f594f130f862397178/gdb/maint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.c?ref=102cc23543fc37b42c4814f594f130f862397178",
      "patch": "@@ -947,8 +947,8 @@ count_symtabs_and_blocks (int *nr_symtabs_ptr, int *nr_compunit_symtabs_ptr,\n \t    {\n \t      ++nr_compunit_symtabs;\n \t      nr_blocks += BLOCKVECTOR_NBLOCKS (COMPUNIT_BLOCKVECTOR (cu));\n-\t      nr_symtabs += std::distance (compunit_filetabs (cu).begin (),\n-\t\t\t\t\t   compunit_filetabs (cu).end ());\n+\t      nr_symtabs += std::distance (cu->filetabs ().begin (),\n+\t\t\t\t\t   cu->filetabs ().end ());\n \t    }\n \t}\n     }"
    },
    {
      "sha": "d0c7ac83d379a5fdded22bd9cd6390fe8a79356b",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/102cc23543fc37b42c4814f594f130f862397178/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/102cc23543fc37b42c4814f594f130f862397178/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=102cc23543fc37b42c4814f594f130f862397178",
      "patch": "@@ -651,7 +651,7 @@ objfile_relocate1 (struct objfile *objfile,\n   {\n     for (compunit_symtab *cust : objfile->compunits ())\n       {\n-\tfor (symtab *s : compunit_filetabs (cust))\n+\tfor (symtab *s : cust->filetabs ())\n \t  {\n \t    struct linetable *l;\n "
    },
    {
      "sha": "2160619b34ffbecde9cb8190aa7fc34b19328855",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/102cc23543fc37b42c4814f594f130f862397178/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/102cc23543fc37b42c4814f594f130f862397178/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=102cc23543fc37b42c4814f594f130f862397178",
      "patch": "@@ -344,7 +344,7 @@ select_source_symtab (struct symtab *s)\n     {\n       for (compunit_symtab *cu : ofp->compunits ())\n \t{\n-\t  for (symtab *symtab : compunit_filetabs (cu))\n+\t  for (symtab *symtab : cu->filetabs ())\n \t    {\n \t      const char *name = symtab->filename;\n \t      int len = strlen (name);\n@@ -424,7 +424,7 @@ forget_cached_source_info_for_objfile (struct objfile *objfile)\n {\n   for (compunit_symtab *cu : objfile->compunits ())\n     {\n-      for (symtab *s : compunit_filetabs (cu))\n+      for (symtab *s : cu->filetabs ())\n \t{\n \t  if (s->fullname != NULL)\n \t    {"
    },
    {
      "sha": "b4b58f6e0f51081acadfa799700276e51ab6169d",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/102cc23543fc37b42c4814f594f130f862397178/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/102cc23543fc37b42c4814f594f130f862397178/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=102cc23543fc37b42c4814f594f130f862397178",
      "patch": "@@ -74,7 +74,7 @@ print_objfile_statistics (void)\n \ti = linetables = 0;\n \tfor (compunit_symtab *cu : objfile->compunits ())\n \t  {\n-\t    for (symtab *s : compunit_filetabs (cu))\n+\t    for (symtab *s : cu->filetabs ())\n \t      {\n \t\ti++;\n \t\tif (SYMTAB_LINETABLE (s) != NULL)\n@@ -126,7 +126,7 @@ dump_objfile (struct objfile *objfile)\n       printf_filtered (\"Symtabs:\\n\");\n       for (compunit_symtab *cu : objfile->compunits ())\n \t{\n-\t  for (symtab *symtab : compunit_filetabs (cu))\n+\t  for (symtab *symtab : cu->filetabs ())\n \t    {\n \t      printf_filtered (\"%s at %s\",\n \t\t\t       symtab_to_filename_for_display (symtab),\n@@ -469,7 +469,7 @@ maintenance_print_symbols (const char *args, int from_tty)\n \n \t  for (compunit_symtab *cu : objfile->compunits ())\n \t    {\n-\t      for (symtab *s : compunit_filetabs (cu))\n+\t      for (symtab *s : cu->filetabs ())\n \t\t{\n \t\t  int print_for_source = 0;\n \n@@ -756,7 +756,7 @@ maintenance_info_symtabs (const char *regexp, int from_tty)\n \t  {\n \t    int printed_compunit_symtab_start = 0;\n \n-\t    for (symtab *symtab : compunit_filetabs (cust))\n+\t    for (symtab *symtab : cust->filetabs ())\n \t      {\n \t\tQUIT;\n \n@@ -1025,7 +1025,7 @@ maintenance_info_line_tables (const char *regexp, int from_tty)\n       {\n \tfor (compunit_symtab *cust : objfile->compunits ())\n \t  {\n-\t    for (symtab *symtab : compunit_filetabs (cust))\n+\t    for (symtab *symtab : cust->filetabs ())\n \t      {\n \t\tQUIT;\n "
    },
    {
      "sha": "6626ee8d36cabb6d044e0f19baf1981cda7e7865",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/102cc23543fc37b42c4814f594f130f862397178/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/102cc23543fc37b42c4814f594f130f862397178/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=102cc23543fc37b42c4814f594f130f862397178",
      "patch": "@@ -367,15 +367,15 @@ compunit_symtab::set_primary_filetab (symtab *primary_filetab)\n   symtab *prev_filetab = nullptr;\n \n   /* Move PRIMARY_FILETAB to the head of the filetab list.  */\n-  for (symtab *filetab : compunit_filetabs (this))\n+  for (symtab *filetab : this->filetabs ())\n     {\n       if (filetab == primary_filetab)\n \t{\n \t  if (prev_filetab != nullptr)\n \t    {\n \t      prev_filetab->next = primary_filetab->next;\n-\t      primary_filetab->next = this->filetabs;\n-\t      this->filetabs = primary_filetab;\n+\t      primary_filetab->next = m_filetabs;\n+\t      m_filetabs = primary_filetab;\n \t    }\n \n \t  break;\n@@ -384,18 +384,18 @@ compunit_symtab::set_primary_filetab (symtab *primary_filetab)\n       prev_filetab = filetab;\n     }\n \n-  gdb_assert (primary_filetab == this->filetabs);\n+  gdb_assert (primary_filetab == m_filetabs);\n }\n \n /* See symtab.h.  */\n \n struct symtab *\n compunit_symtab::primary_filetab () const\n {\n-  gdb_assert (this->filetabs != nullptr);\n+  gdb_assert (m_filetabs != nullptr);\n \n   /* The primary file symtab is the first one in the list.  */\n-  return this->filetabs;\n+  return m_filetabs;\n }\n \n /* See symtab.h.  */\n@@ -533,7 +533,7 @@ iterate_over_some_symtabs (const char *name,\n \n   for (cust = first; cust != NULL && cust != after_last; cust = cust->next)\n     {\n-      for (symtab *s : compunit_filetabs (cust))\n+      for (symtab *s : cust->filetabs ())\n \t{\n \t  if (compare_filenames_for_search (s->filename, name))\n \t    {\n@@ -3282,7 +3282,7 @@ find_pc_sect_line (CORE_ADDR pc, struct obj_section *section, int notcurrent)\n      They all have the same apriori range, that we found was right;\n      but they have different line tables.  */\n \n-  for (symtab *iter_s : compunit_filetabs (cust))\n+  for (symtab *iter_s : cust->filetabs ())\n     {\n       /* Find the best line in this symtab.  */\n       l = SYMTAB_LINETABLE (iter_s);\n@@ -3483,7 +3483,7 @@ find_line_symtab (struct symtab *sym_tab, int line,\n \t{\n \t  for (compunit_symtab *cu : objfile->compunits ())\n \t    {\n-\t      for (symtab *s : compunit_filetabs (cu))\n+\t      for (symtab *s : cu->filetabs ())\n \t\t{\n \t\t  struct linetable *l;\n \t\t  int ind;\n@@ -4531,7 +4531,7 @@ info_sources_worker (struct ui_out *uiout,\n \n       for (compunit_symtab *cu : objfile->compunits ())\n \t{\n-\t  for (symtab *s : compunit_filetabs (cu))\n+\t  for (symtab *s : cu->filetabs ())\n \t    {\n \t      const char *file = symtab_to_filename_for_display (s);\n \t      const char *fullname = symtab_to_fullname (s);\n@@ -6190,7 +6190,7 @@ make_source_files_completion_list (const char *text, const char *word)\n     {\n       for (compunit_symtab *cu : objfile->compunits ())\n \t{\n-\t  for (symtab *s : compunit_filetabs (cu))\n+\t  for (symtab *s : cu->filetabs ())\n \t    {\n \t      if (not_interesting_fname (s->filename))\n \t\tcontinue;"
    },
    {
      "sha": "670826dd183256dcf9f123528eb9641b14d780a6",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 17,
      "deletions": 19,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/102cc23543fc37b42c4814f594f130f862397178/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/102cc23543fc37b42c4814f594f130f862397178/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=102cc23543fc37b42c4814f594f130f862397178",
      "patch": "@@ -1401,6 +1401,10 @@ struct symtab\n   char *fullname;\n };\n \n+/* A range adapter to allowing iterating over all the file tables in a list.  */\n+\n+using symtab_range = next_range<symtab>;\n+\n #define SYMTAB_COMPUNIT(symtab) ((symtab)->compunit_symtab)\n #define SYMTAB_LINETABLE(symtab) ((symtab)->linetable)\n #define SYMTAB_LANGUAGE(symtab) ((symtab)->language)\n@@ -1459,17 +1463,22 @@ struct compunit_symtab\n     m_objfile = objfile;\n   }\n \n+  symtab_range filetabs () const\n+  {\n+    return symtab_range (m_filetabs);\n+  }\n+\n   void add_filetab (symtab *filetab)\n   {\n-    if (this->filetabs == nullptr)\n+    if (m_filetabs == nullptr)\n       {\n-\tthis->filetabs = filetab;\n-\tthis->last_filetab = filetab;\n+\tm_filetabs = filetab;\n+\tm_last_filetab = filetab;\n       }\n     else\n       {\n-\tthis->last_filetab->next = filetab;\n-\tthis->last_filetab = filetab;\n+\tm_last_filetab->next = filetab;\n+\tm_last_filetab = filetab;\n       }\n   }\n \n@@ -1503,14 +1512,14 @@ struct compunit_symtab\n      source file (e.g., .c, .cc) is guaranteed to be first.\n      Each symtab is a file, either the \"main\" source file (e.g., .c, .cc)\n      or header (e.g., .h).  */\n-  struct symtab *filetabs;\n+  symtab *m_filetabs;\n \n   /* Last entry in FILETABS list.\n      Subfiles are added to the end of the list so they accumulate in order,\n      with the main source subfile living at the front.\n      The main reason is so that the main source file symtab is at the head\n      of the list, and the rest appear in order for debugging convenience.  */\n-  struct symtab *last_filetab;\n+  symtab *m_last_filetab;\n \n   /* Non-NULL string that identifies the format of the debugging information,\n      such as \"stabs\", \"dwarf 1\", \"dwarf 2\", \"coff\", etc.  This is mostly useful\n@@ -1568,7 +1577,7 @@ struct compunit_symtab\n \n using compunit_symtab_range = next_range<compunit_symtab>;\n \n-#define COMPUNIT_FILETABS(cust) ((cust)->filetabs)\n+#define COMPUNIT_FILETABS(cust) (*(cust)->filetabs ().begin ())\n #define COMPUNIT_DEBUGFORMAT(cust) ((cust)->debugformat)\n #define COMPUNIT_PRODUCER(cust) ((cust)->producer)\n #define COMPUNIT_DIRNAME(cust) ((cust)->dirname)\n@@ -1578,17 +1587,6 @@ using compunit_symtab_range = next_range<compunit_symtab>;\n #define COMPUNIT_EPILOGUE_UNWIND_VALID(cust) ((cust)->epilogue_unwind_valid)\n #define COMPUNIT_MACRO_TABLE(cust) ((cust)->macro_table)\n \n-/* A range adapter to allowing iterating over all the file tables\n-   within a compunit.  */\n-\n-using symtab_range = next_range<symtab>;\n-\n-static inline symtab_range\n-compunit_filetabs (compunit_symtab *cu)\n-{\n-  return symtab_range (cu->filetabs);\n-}\n-\n /* Return the language of CUST.  */\n \n extern enum language compunit_language (const struct compunit_symtab *cust);"
    }
  ]
}