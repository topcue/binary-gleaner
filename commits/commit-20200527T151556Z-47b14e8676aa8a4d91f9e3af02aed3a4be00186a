{
  "sha": "47b14e8676aa8a4d91f9e3af02aed3a4be00186a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDdiMTRlODY3NmFhOGE0ZDkxZjllM2FmMDJhZWQzYTRiZTAwMTg2YQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:13:58Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:15:56Z"
    },
    "message": "Add dwarf2_per_objfile parameter to process_full_{comp,type}_unit\n\nThis allows removing the dwarf2_per_cu_data::dwarf2_per_objfile\nreferences in them.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (process_full_comp_unit): Add dwarf2_per_objfile\n\tparameter.\n\t(process_full_type_unit): Likewise.\n\t(process_queue): Update.\n\nChange-Id: Ie68baa8cc4bf1f81cc67d4ad13a59881b4c3feb6",
    "tree": {
      "sha": "cd7c036018b870c050a26bd7e0206e0a4973b44b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cd7c036018b870c050a26bd7e0206e0a4973b44b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/47b14e8676aa8a4d91f9e3af02aed3a4be00186a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/47b14e8676aa8a4d91f9e3af02aed3a4be00186a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/47b14e8676aa8a4d91f9e3af02aed3a4be00186a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/47b14e8676aa8a4d91f9e3af02aed3a4be00186a/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "43182c09c6f90ebd46c3980e788c751efda8b1a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/43182c09c6f90ebd46c3980e788c751efda8b1a9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/43182c09c6f90ebd46c3980e788c751efda8b1a9"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 21,
    "deletions": 10
  },
  "files": [
    {
      "sha": "5136a2b73d0983dd9d6cd5ad8904b74f919d452d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47b14e8676aa8a4d91f9e3af02aed3a4be00186a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47b14e8676aa8a4d91f9e3af02aed3a4be00186a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=47b14e8676aa8a4d91f9e3af02aed3a4be00186a",
      "patch": "@@ -1,3 +1,10 @@\n+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2/read.c (process_full_comp_unit): Add dwarf2_per_objfile\n+\tparameter.\n+\t(process_full_type_unit): Likewise.\n+\t(process_queue): Update.\n+\n 2020-05-27  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* dwarf2/read.c (recursively_compute_inclusions): Add"
    },
    {
      "sha": "7b4cfb329e64533a1dc78a70708678b58715e007",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 14,
      "deletions": 10,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47b14e8676aa8a4d91f9e3af02aed3a4be00186a/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47b14e8676aa8a4d91f9e3af02aed3a4be00186a/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=47b14e8676aa8a4d91f9e3af02aed3a4be00186a",
      "patch": "@@ -1572,11 +1572,13 @@ static void load_full_comp_unit (dwarf2_per_cu_data *per_cu,\n \t\t\t\t bool skip_partial,\n \t\t\t\t enum language pretend_language);\n \n-static void process_full_comp_unit (struct dwarf2_per_cu_data *,\n-\t\t\t\t    enum language);\n+static void process_full_comp_unit (dwarf2_per_cu_data *per_cu,\n+\t\t\t\t    dwarf2_per_objfile *per_objfile,\n+\t\t\t\t    enum language pretend_language);\n \n-static void process_full_type_unit (struct dwarf2_per_cu_data *,\n-\t\t\t\t    enum language);\n+static void process_full_type_unit (dwarf2_per_cu_data *per_cu,\n+\t\t\t\t    dwarf2_per_objfile *per_objfile,\n+\t\t\t\t    enum language pretend_language);\n \n static void dwarf2_add_dependence (struct dwarf2_cu *,\n \t\t\t\t   struct dwarf2_per_cu_data *);\n@@ -9035,9 +9037,11 @@ process_queue (struct dwarf2_per_objfile *dwarf2_per_objfile)\n \t    fprintf_unfiltered (gdb_stdlog, \"Expanding symtab of %s\\n\", buf);\n \n \t  if (per_cu->is_debug_types)\n-\t    process_full_type_unit (per_cu, item.pretend_language);\n+\t    process_full_type_unit (per_cu, dwarf2_per_objfile,\n+\t\t\t\t    item.pretend_language);\n \t  else\n-\t    process_full_comp_unit (per_cu, item.pretend_language);\n+\t    process_full_comp_unit (per_cu, dwarf2_per_objfile,\n+\t\t\t\t    item.pretend_language);\n \n \t  if (dwarf_read_debug >= debug_print_threshold)\n \t    fprintf_unfiltered (gdb_stdlog, \"Done expanding %s\\n\", buf);\n@@ -9741,11 +9745,11 @@ process_cu_includes (struct dwarf2_per_objfile *dwarf2_per_objfile)\n    already been loaded into memory.  */\n \n static void\n-process_full_comp_unit (struct dwarf2_per_cu_data *per_cu,\n+process_full_comp_unit (dwarf2_per_cu_data *per_cu,\n+\t\t\tdwarf2_per_objfile *dwarf2_per_objfile,\n \t\t\tenum language pretend_language)\n {\n   struct dwarf2_cu *cu = per_cu->cu;\n-  struct dwarf2_per_objfile *dwarf2_per_objfile = per_cu->dwarf2_per_objfile;\n   struct objfile *objfile = dwarf2_per_objfile->objfile;\n   struct gdbarch *gdbarch = objfile->arch ();\n   CORE_ADDR lowpc, highpc;\n@@ -9841,11 +9845,11 @@ process_full_comp_unit (struct dwarf2_per_cu_data *per_cu,\n    already been loaded into memory.  */\n \n static void\n-process_full_type_unit (struct dwarf2_per_cu_data *per_cu,\n+process_full_type_unit (dwarf2_per_cu_data *per_cu,\n+\t\t\tdwarf2_per_objfile *dwarf2_per_objfile,\n \t\t\tenum language pretend_language)\n {\n   struct dwarf2_cu *cu = per_cu->cu;\n-  struct dwarf2_per_objfile *dwarf2_per_objfile = per_cu->dwarf2_per_objfile;\n   struct objfile *objfile = dwarf2_per_objfile->objfile;\n   struct compunit_symtab *cust;\n   struct signatured_type *sig_type;"
    }
  ]
}