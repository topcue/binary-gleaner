{
  "sha": "b1f3973b9c55a1406c13ade5cb14239d5b17a465",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjFmMzk3M2I5YzU1YTE0MDZjMTNhZGU1Y2IxNDIzOWQ1YjE3YTQ2NQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-02T14:19:56Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-26T17:43:14Z"
    },
    "message": "gdb/testsuite: more testing of pretty printer 'array' display_hint\n\nThis commit adds a couple of tests to the python pretty printer\ntesting.\n\nI've added a test for the 'array' display hint.  This display hint is\ntested by gdb.python/py-mi.exp, however, the MI testing is done via\nthe varobj interface, and this code makes its own direct calls to the\nPython pretty printers from gdb/varobj.c.  What this means is that the\ninterface to the pretty printers in gdb/python/py-prettyprint.c is not\ntested for the 'array' display hint path.\n\nI also added a test for what happens when the display_hint method\nraises an exception.  There wasn't a bug that inspired this test, just\nwhile adding the previous test I thought, I wonder what happens if...\n\nThe current behaviour of GDB seems reasonable, GDB displays the Python\nexception, and then continues printing the value as if display_hint\nhad returned None.  I added a test to lock in this behaviour.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.python/py-prettyprint.c (struct container): Add 'is_array_p'\n\tmember.\n\t(make_container): Initialise is_array_p.\n\t* gdb.python/py-prettyprint.exp: Add new tests.\n\t* gdb.python/py-prettyprint.py (ContainerPrinter.display_hint):\n\tCheck is_array_p and possibly return 'array'.",
    "tree": {
      "sha": "39fbe51feb95f05ae16b74796e617163d8616200",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/39fbe51feb95f05ae16b74796e617163d8616200"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b1f3973b9c55a1406c13ade5cb14239d5b17a465",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1f3973b9c55a1406c13ade5cb14239d5b17a465",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b1f3973b9c55a1406c13ade5cb14239d5b17a465",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1f3973b9c55a1406c13ade5cb14239d5b17a465/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b4b1a226df8d51da9594200ad803ad303c15cd36",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b4b1a226df8d51da9594200ad803ad303c15cd36",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b4b1a226df8d51da9594200ad803ad303c15cd36"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 45,
    "deletions": 0
  },
  "files": [
    {
      "sha": "3484004c129b0b9b747dc65ec8f658c20e8b3e23",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1f3973b9c55a1406c13ade5cb14239d5b17a465/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1f3973b9c55a1406c13ade5cb14239d5b17a465/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b1f3973b9c55a1406c13ade5cb14239d5b17a465",
      "patch": "@@ -1,3 +1,12 @@\n+2021-03-26  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.python/py-prettyprint.c (struct container): Add 'is_array_p'\n+\tmember.\n+\t(make_container): Initialise is_array_p.\n+\t* gdb.python/py-prettyprint.exp: Add new tests.\n+\t* gdb.python/py-prettyprint.py (ContainerPrinter.display_hint):\n+\tCheck is_array_p and possibly return 'array'.\n+\n 2021-03-26  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.cp/breakpoint.exp: Extend test names to make them unique."
    },
    {
      "sha": "126537ff529eff7d802e9825d428a56c41c2b283",
      "filename": "gdb/testsuite/gdb.python/py-prettyprint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1f3973b9c55a1406c13ade5cb14239d5b17a465/gdb/testsuite/gdb.python/py-prettyprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1f3973b9c55a1406c13ade5cb14239d5b17a465/gdb/testsuite/gdb.python/py-prettyprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-prettyprint.c?ref=b1f3973b9c55a1406c13ade5cb14239d5b17a465",
      "patch": "@@ -176,6 +176,7 @@ struct container\n   int len;\n   int *elements;\n   int is_map_p;\n+  int is_array_p;\n };\n \n typedef struct container zzz_type;\n@@ -197,6 +198,7 @@ make_container (const char *s)\n   result.len = 0;\n   result.elements = 0;\n   result.is_map_p = 0;\n+  result.is_array_p = 0;\n \n   return result;\n }"
    },
    {
      "sha": "6a3968fe0547d25c9671e5da6ce580a2e25af915",
      "filename": "gdb/testsuite/gdb.python/py-prettyprint.exp",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1f3973b9c55a1406c13ade5cb14239d5b17a465/gdb/testsuite/gdb.python/py-prettyprint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1f3973b9c55a1406c13ade5cb14239d5b17a465/gdb/testsuite/gdb.python/py-prettyprint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-prettyprint.exp?ref=b1f3973b9c55a1406c13ade5cb14239d5b17a465",
      "patch": "@@ -112,7 +112,36 @@ proc run_lang_tests {exefile lang} {\n     gdb_test \"print c\" \" = container \\\"container\\\" with 2 elements = {$nl *.0. = 23,$nl *.1. = 72$nl}\" \\\n \t\"print c, pretty printing on, default display hint\"\n \n+    gdb_test_no_output \"set variable c.is_array_p=1\"\n+    gdb_test \"print c\" \" = container \\\"container\\\" with 2 elements = \\\\{23, 72\\\\}\" \\\n+\t\"print c, pretty printing on, display hint is now array\"\n+\n+    # Setting is_map_p while _is_array_p is also set will cause the\n+    # display_hint method to raise an exception (see py-prettyprint.py).\n     gdb_test_no_output \"set variable c.is_map_p=1\"\n+\n+    # This test checks what happens when the display hint throws an\n+    # error.  GDB just treats this as though the display hint was\n+    # None.\n+    set py_exception \\\n+\t[multi_line \\\n+\t     \"Traceback\\[^\\r\\n\\]+\" \\\n+\t     \"\\\\s+File \\\"\\[^\\r\\n\\]+/py-prettyprint.py\\\", line \\[0-9\\]+, in display_hint\" \\\n+\t     \"\\\\s+raise Exception \\[^\\r\\n\\]+\" \\\n+\t     \"Exception: invalid object state found in display_hint\"]\n+    gdb_test \"print c\" \\\n+\t[multi_line \\\n+\t     \" = ${py_exception}\" \\\n+\t     \"container \\\"container\\\" with 2 elements = {\" \\\n+\t     \"\\\\s+\\\\\\[0\\\\\\] = 23,\" \\\n+\t     \"\\\\s+\\\\\\[1\\\\\\] = 72\" \\\n+\t     \"}\"] \\\n+\t\"print c, pretty printing on, exception raised from display_hint\"\n+\n+    # Unset is_array_p so that display_hint no longer raises an\n+    # exception.\n+    gdb_test_no_output \"set variable c.is_array_p=0\"\n+\n     gdb_test \"print c\" \" = container \\\"container\\\" with 2 elements = \\{$nl  \\\\\\[23\\\\\\] = 72$nl\\}\" \\\n \t\"print c, pretty printing on, display hint is now map\"\n "
    },
    {
      "sha": "fab03a653b7a3fe0a37e26a18657041e3473e2de",
      "filename": "gdb/testsuite/gdb.python/py-prettyprint.py",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1f3973b9c55a1406c13ade5cb14239d5b17a465/gdb/testsuite/gdb.python/py-prettyprint.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1f3973b9c55a1406c13ade5cb14239d5b17a465/gdb/testsuite/gdb.python/py-prettyprint.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-prettyprint.py?ref=b1f3973b9c55a1406c13ade5cb14239d5b17a465",
      "patch": "@@ -57,8 +57,13 @@ def children(self):\n         return _iterator(self.val['elements'], self.val['len'])\n \n     def display_hint (self):\n+        if (self.val['is_map_p'] and self.val['is_array_p']):\n+            raise Exception (\"invalid object state found in display_hint\")\n+\n         if (self.val['is_map_p']):\n             return 'map'\n+        elif (self.val['is_array_p']):\n+            return 'array'\n         else:\n             return None\n "
    }
  ]
}