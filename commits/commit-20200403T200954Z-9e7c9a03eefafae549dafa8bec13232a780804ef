{
  "sha": "9e7c9a03eefafae549dafa8bec13232a780804ef",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWU3YzlhMDNlZWZhZmFlNTQ5ZGFmYThiZWMxMzIzMmE3ODA4MDRlZg==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-04-03T19:38:31Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-04-03T20:09:54Z"
    },
    "message": "Fix attributes of typed enums of typedefs\n\nFor this enum:\ntypedef unsigned char byte;\nenum byte_enum : byte\n{\n  byte_val = 128\n};\n\nThe unsigned attribute is not set:\n(gdb) p byte_val\n$1 = -128\n\nThat's because it uses the attributes of the 'byte' typedef for the enum.\nSo this changes it to use the attributes of the underlying 'unsigned char'\ninstead.\n\ngdb/ChangeLog:\n\n2020-04-03  Hannes Domani  <ssbssa@yahoo.de>\n\n\tPR gdb/25325\n\t* dwarf2/read.c (read_enumeration_type): Fix typed enum attributes.\n\ngdb/testsuite/ChangeLog:\n\n2020-04-03  Hannes Domani  <ssbssa@yahoo.de>\n\n\tPR gdb/25325\n\t* gdb.cp/typed-enum.cc: New test.\n\t* gdb.cp/typed-enum.exp: New file.",
    "tree": {
      "sha": "4e199f3c1b8691c463c67b509e2a492dc3b59894",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4e199f3c1b8691c463c67b509e2a492dc3b59894"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9e7c9a03eefafae549dafa8bec13232a780804ef",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e7c9a03eefafae549dafa8bec13232a780804ef",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9e7c9a03eefafae549dafa8bec13232a780804ef",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e7c9a03eefafae549dafa8bec13232a780804ef/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d9e49b61691f384447242f54c996fe80ef9bf184",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9e49b61691f384447242f54c996fe80ef9bf184",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d9e49b61691f384447242f54c996fe80ef9bf184"
    }
  ],
  "stats": {
    "total": 87,
    "additions": 83,
    "deletions": 4
  },
  "files": [
    {
      "sha": "014752e4ddc279cadf8671d49445ab5ccf692339",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7c9a03eefafae549dafa8bec13232a780804ef/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7c9a03eefafae549dafa8bec13232a780804ef/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9e7c9a03eefafae549dafa8bec13232a780804ef",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-03  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\tPR gdb/25325\n+\t* dwarf2/read.c (read_enumeration_type): Fix typed enum attributes.\n+\n 2020-04-03  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2/loc.c (disassemble_dwarf_expression) <DW_OP_const_type>:"
    },
    {
      "sha": "bcc3116071eed24e46c93e29de6083efbfafd028",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7c9a03eefafae549dafa8bec13232a780804ef/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7c9a03eefafae549dafa8bec13232a780804ef/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=9e7c9a03eefafae549dafa8bec13232a780804ef",
      "patch": "@@ -15553,12 +15553,14 @@ read_enumeration_type (struct die_info *die, struct dwarf2_cu *cu)\n      the underlying type if needed.  */\n   if (TYPE_TARGET_TYPE (type) != NULL && !TYPE_STUB (TYPE_TARGET_TYPE (type)))\n     {\n-      TYPE_UNSIGNED (type) = TYPE_UNSIGNED (TYPE_TARGET_TYPE (type));\n+      struct type *underlying_type = TYPE_TARGET_TYPE (type);\n+      underlying_type = check_typedef (underlying_type);\n+      TYPE_UNSIGNED (type) = TYPE_UNSIGNED (underlying_type);\n       if (TYPE_LENGTH (type) == 0)\n-\tTYPE_LENGTH (type) = TYPE_LENGTH (TYPE_TARGET_TYPE (type));\n+\tTYPE_LENGTH (type) = TYPE_LENGTH (underlying_type);\n       if (TYPE_RAW_ALIGN (type) == 0\n-\t  && TYPE_RAW_ALIGN (TYPE_TARGET_TYPE (type)) != 0)\n-\tset_type_align (type, TYPE_RAW_ALIGN (TYPE_TARGET_TYPE (type)));\n+\t  && TYPE_RAW_ALIGN (underlying_type) != 0)\n+\tset_type_align (type, TYPE_RAW_ALIGN (underlying_type));\n     }\n \n   TYPE_DECLARED_CLASS (type) = dwarf2_flag_true_p (die, DW_AT_enum_class, cu);"
    },
    {
      "sha": "226a0702fe3cdf3736dabc4aaf6a27e37c42ad7f",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7c9a03eefafae549dafa8bec13232a780804ef/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7c9a03eefafae549dafa8bec13232a780804ef/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=9e7c9a03eefafae549dafa8bec13232a780804ef",
      "patch": "@@ -1,3 +1,9 @@\n+2020-04-03  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\tPR gdb/25325\n+\t* gdb.cp/typed-enum.cc: New test.\n+\t* gdb.cp/typed-enum.exp: New file.\n+\n 2020-04-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.dwarf2/dw2-inline-small-func-lbls.c: New file."
    },
    {
      "sha": "caf4288fff799731906db3c3d89258f12d77771e",
      "filename": "gdb/testsuite/gdb.cp/typed-enum.cc",
      "status": "added",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7c9a03eefafae549dafa8bec13232a780804ef/gdb/testsuite/gdb.cp/typed-enum.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7c9a03eefafae549dafa8bec13232a780804ef/gdb/testsuite/gdb.cp/typed-enum.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/typed-enum.cc?ref=9e7c9a03eefafae549dafa8bec13232a780804ef",
      "patch": "@@ -0,0 +1,35 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+typedef unsigned char byte;\n+\n+enum byte_enum : byte\n+{\n+  byte_val = 128\n+};\n+\n+enum uchar_enum : unsigned char\n+{\n+  uchar_val = 128\n+};\n+\n+int main()\n+{\n+  int v1 = byte_val;\n+  int v2 = uchar_val;\n+  return v1 == v2;\n+}"
    },
    {
      "sha": "0427b792790a9c053f9e8facbad7f47da376d9f4",
      "filename": "gdb/testsuite/gdb.cp/typed-enum.exp",
      "status": "added",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7c9a03eefafae549dafa8bec13232a780804ef/gdb/testsuite/gdb.cp/typed-enum.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7c9a03eefafae549dafa8bec13232a780804ef/gdb/testsuite/gdb.cp/typed-enum.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/typed-enum.exp?ref=9e7c9a03eefafae549dafa8bec13232a780804ef",
      "patch": "@@ -0,0 +1,31 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+#\n+# Check if unsigned typedef are handled correctly with typed enums.\n+\n+if { [skip_cplus_tests] } { continue }\n+\n+standard_testfile .cc\n+\n+if [get_compiler_info \"c++\"] {\n+    return -1\n+}\n+\n+if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile {debug c++}]} {\n+    return -1\n+}\n+\n+gdb_test \"print (int)byte_val\" \"= 128\"\n+gdb_test \"print (int)uchar_val\" \"= 128\""
    }
  ]
}