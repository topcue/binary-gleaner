{
  "sha": "b4b393495f506632a9be966277c6d6e668ba9778",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjRiMzkzNDk1ZjUwNjYzMmE5YmU5NjYyNzdjNmQ2ZTY2OGJhOTc3OA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-02T01:17:33Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-02T07:00:44Z"
    },
    "message": "ubsan: i386-dis.c\n\ni386-dis.c:12207 left shift of 128 by 24 places cannot be represented in type 'long int'\ni386-dis.c:12220 left shift of 128 by 24 places cannot be represented in type 'long int'\ni386-dis.c:12222 left shift of 1 by 31 places cannot be represented in type 'long int'\ni386-dis.c:12222 signed integer overflow: 162254319 - -2147483648 cannot be represented in type 'long int'\n\n\t* i386-dis.c (OP_E_memory): Don't cast to signed type when\n\tnegating.\n\t(get32, get32s): Use unsigned types in shift expressions.",
    "tree": {
      "sha": "c121efc078122fb23e0934a5215b76b6453ca92b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c121efc078122fb23e0934a5215b76b6453ca92b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b4b393495f506632a9be966277c6d6e668ba9778",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b4b393495f506632a9be966277c6d6e668ba9778",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b4b393495f506632a9be966277c6d6e668ba9778",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b4b393495f506632a9be966277c6d6e668ba9778/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "caf4537af57320ce15c66d61e4db91073b715236",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/caf4537af57320ce15c66d61e4db91073b715236",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/caf4537af57320ce15c66d61e4db91073b715236"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 19,
    "deletions": 13
  },
  "files": [
    {
      "sha": "7c7d9f4c1b67ad47e0e4afd398bfd93b250ba49c",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b4b393495f506632a9be966277c6d6e668ba9778/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b4b393495f506632a9be966277c6d6e668ba9778/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=b4b393495f506632a9be966277c6d6e668ba9778",
      "patch": "@@ -1,3 +1,9 @@\n+2020-09-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* i386-dis.c (OP_E_memory): Don't cast to signed type when\n+\tnegating.\n+\t(get32, get32s): Use unsigned types in shift expressions.\n+\n 2020-09-02  Alan Modra  <amodra@gmail.com>\n \n \t* csky-dis.c (print_insn_csky): Use unsigned type for \"given\"."
    },
    {
      "sha": "6d803258ef2a61590c3f6c88b7aa3583c944cbec",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b4b393495f506632a9be966277c6d6e668ba9778/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b4b393495f506632a9be966277c6d6e668ba9778/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=b4b393495f506632a9be966277c6d6e668ba9778",
      "patch": "@@ -11908,7 +11908,7 @@ OP_E_memory (int bytemode, int sizeflag)\n \t\t{\n \t\t  *obufp++ = '-';\n \t\t  *obufp = '\\0';\n-\t\t  disp = - (bfd_signed_vma) disp;\n+\t\t  disp = -disp;\n \t\t}\n \n \t      if (havedisp)\n@@ -11996,7 +11996,7 @@ OP_E_memory (int bytemode, int sizeflag)\n \t\t{\n \t\t  *obufp++ = '-';\n \t\t  *obufp = '\\0';\n-\t\t  disp = - (bfd_signed_vma) disp;\n+\t\t  disp = -disp;\n \t\t}\n \n \t      print_displacement (scratchbuf, disp);\n@@ -12198,28 +12198,28 @@ get64 (void)\n static bfd_signed_vma\n get32 (void)\n {\n-  bfd_signed_vma x = 0;\n+  bfd_vma x = 0;\n \n   FETCH_DATA (the_info, codep + 4);\n-  x = *codep++ & (bfd_signed_vma) 0xff;\n-  x |= (*codep++ & (bfd_signed_vma) 0xff) << 8;\n-  x |= (*codep++ & (bfd_signed_vma) 0xff) << 16;\n-  x |= (*codep++ & (bfd_signed_vma) 0xff) << 24;\n+  x = *codep++ & (bfd_vma) 0xff;\n+  x |= (*codep++ & (bfd_vma) 0xff) << 8;\n+  x |= (*codep++ & (bfd_vma) 0xff) << 16;\n+  x |= (*codep++ & (bfd_vma) 0xff) << 24;\n   return x;\n }\n \n static bfd_signed_vma\n get32s (void)\n {\n-  bfd_signed_vma x = 0;\n+  bfd_vma x = 0;\n \n   FETCH_DATA (the_info, codep + 4);\n-  x = *codep++ & (bfd_signed_vma) 0xff;\n-  x |= (*codep++ & (bfd_signed_vma) 0xff) << 8;\n-  x |= (*codep++ & (bfd_signed_vma) 0xff) << 16;\n-  x |= (*codep++ & (bfd_signed_vma) 0xff) << 24;\n+  x = *codep++ & (bfd_vma) 0xff;\n+  x |= (*codep++ & (bfd_vma) 0xff) << 8;\n+  x |= (*codep++ & (bfd_vma) 0xff) << 16;\n+  x |= (*codep++ & (bfd_vma) 0xff) << 24;\n \n-  x = (x ^ ((bfd_signed_vma) 1 << 31)) - ((bfd_signed_vma) 1 << 31);\n+  x = (x ^ ((bfd_vma) 1 << 31)) - ((bfd_vma) 1 << 31);\n \n   return x;\n }"
    }
  ]
}