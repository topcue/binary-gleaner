{
  "sha": "edc77c591add0a9c7740a9ed9f7e40358bf65dbf",
  "node_id": "C_kwDOANOeidoAKGVkYzc3YzU5MWFkZDBhOWM3NzQwYTllZDlmN2U0MDM1OGJmNjVkYmY",
  "commit": {
    "author": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2021-11-04T06:31:48Z"
    },
    "committer": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2021-11-04T09:46:09Z"
    },
    "message": "RISC-V: Clarify the behavior of .option rvc or norvc.\n\nAdd/Remove the rvc extension to/from the riscv_subsets once the\n.option rvc/norvc is set.  So that we don't need to always check\nthe riscv_opts.rvc in the riscv_subset_supports, just call the\nriscv_lookup_subset to search the subset list is enough.\n\nBesides, we will need to dump the instructions according to the\nelf architecture attributes.  That means the dis-assembler needs\nto parse the architecture string from the elf attribute before\ndumping any instructions, and also needs to recognized the\nINSN_CLASS* classes from riscv_opcodes.  Therefore, I suppose\nsome functions will need to be moved from gas/config/tc-riscv.c\nto bfd/elfxx-riscv.c, including riscv_multi_subset_supports and\nriscv_subset_supports.  This is one of the reasons why we need\nthis patch.\n\nThis patch passes the gcc/binutils regressions of rv32emc-elf,\nrv32i-elf, rv64gc-elf and rv64gc-linux toolchains.\n\nbfd/\n\t* elfxx-riscv.c (riscv_remove_subset): Remove the extension\n\tfrom the subset list.\n\t(riscv_update_subset): Add/Remove an extension to/from the\n\tsubset list.  This is used for the .option rvc or norvc.\n\t* elfxx-riscv.h: Added the extern bool riscv_update_subset.\ngas/\n\t* config/tc-riscv.c (riscv_set_options): Removed the unused\n\trve flag.\n\t(riscv_opts): Likewise.\n\t(riscv_set_rve): Removed.\n\t(riscv_subset_supports): Removed the riscv_opts.rvc check.\n\t(riscv_set_arch): Don't need to call riscv_set_rve.\n\t(reg_lookup_internal): Call riscv_subset_supports to check\n\twhether the rve is supported.\n\t(s_riscv_option): Add/Remove the rvc extension to/from the\n\tsubset list once the .option rvc/norvc is set.",
    "tree": {
      "sha": "c2775cd5aa98985296420ce901ffc6df91f2e7e1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c2775cd5aa98985296420ce901ffc6df91f2e7e1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/edc77c591add0a9c7740a9ed9f7e40358bf65dbf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/edc77c591add0a9c7740a9ed9f7e40358bf65dbf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/edc77c591add0a9c7740a9ed9f7e40358bf65dbf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/edc77c591add0a9c7740a9ed9f7e40358bf65dbf/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "e5c9e53c9b8d5c8519b251f91de7bc453d1086be",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e5c9e53c9b8d5c8519b251f91de7bc453d1086be",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e5c9e53c9b8d5c8519b251f91de7bc453d1086be"
    }
  ],
  "stats": {
    "total": 107,
    "additions": 86,
    "deletions": 21
  },
  "files": [
    {
      "sha": "65bb1cab756daaa81b0cbac9f8bba70a039a0555",
      "filename": "bfd/elfxx-riscv.c",
      "status": "modified",
      "additions": 65,
      "deletions": 0,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc77c591add0a9c7740a9ed9f7e40358bf65dbf/bfd/elfxx-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc77c591add0a9c7740a9ed9f7e40358bf65dbf/bfd/elfxx-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-riscv.c?ref=edc77c591add0a9c7740a9ed9f7e40358bf65dbf",
      "patch": "@@ -2030,3 +2030,68 @@ riscv_arch_str (unsigned xlen, const riscv_subset_list_t *subset)\n \n   return attr_str;\n }\n+\n+/* Remove the SUBSET from the subset list.  */\n+\n+static void\n+riscv_remove_subset (riscv_subset_list_t *subset_list,\n+\t\t     const char *subset)\n+{\n+  riscv_subset_t *current = subset_list->head;\n+  riscv_subset_t *pre = NULL;\n+  for (; current != NULL; pre = current, current = current->next)\n+    {\n+      if (strcmp (current->name, subset) == 0)\n+\t{\n+\t  if (pre == NULL)\n+\t    subset_list->head = current->next;\n+\t  else\n+\t    pre->next = current->next;\n+\t  if (current->next == NULL)\n+\t    subset_list->tail = pre;\n+\t  free ((void *) current->name);\n+\t  free (current);\n+\t  break;\n+\t}\n+    }\n+}\n+\n+/* Add/Remove an extension to/from the subset list.  This is used for\n+   the .option rvc or norvc.  */\n+\n+bool\n+riscv_update_subset (riscv_parse_subset_t *rps,\n+\t\t     const char *subset,\n+\t\t     bool removed)\n+{\n+  if (strlen (subset) == 0\n+      || (strlen (subset) == 1\n+\t  && riscv_ext_order[(*subset - 'a')] == 0)\n+      || (strlen (subset) > 1\n+\t  && rps->check_unknown_prefixed_ext\n+\t  && !riscv_recognized_prefixed_ext (subset)))\n+    {\n+      rps->error_handler\n+\t(_(\"riscv_update_subset: unknown ISA extension `%s'\"), subset);\n+      return false;\n+    }\n+\n+  if (removed)\n+    {\n+      if (strcmp (subset, \"i\") == 0)\n+\t{\n+\t  rps->error_handler\n+\t    (_(\"riscv_update_subset: cannot remove extension i from \"\n+\t       \"the subset list\"));\n+\t  return false;\n+\t}\n+      riscv_remove_subset (rps->subset_list, subset);\n+    }\n+  else\n+    riscv_parse_add_subset (rps, subset,\n+\t\t\t    RISCV_UNKNOWN_VERSION,\n+\t\t\t    RISCV_UNKNOWN_VERSION, true);\n+\n+  riscv_parse_add_implicit_subsets (rps);\n+  return riscv_parse_check_conflicts (rps);\n+}"
    },
    {
      "sha": "17620fd2c95d75573ca42c48f10f1215aedaf4c6",
      "filename": "bfd/elfxx-riscv.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc77c591add0a9c7740a9ed9f7e40358bf65dbf/bfd/elfxx-riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc77c591add0a9c7740a9ed9f7e40358bf65dbf/bfd/elfxx-riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-riscv.h?ref=edc77c591add0a9c7740a9ed9f7e40358bf65dbf",
      "patch": "@@ -92,6 +92,9 @@ riscv_estimate_digit (unsigned);\n extern int\n riscv_compare_subsets (const char *, const char *);\n \n+extern bool\n+riscv_update_subset (riscv_parse_subset_t *, const char *, bool);\n+\n extern void\n bfd_elf32_riscv_set_data_segment_info (struct bfd_link_info *, int *);\n extern void"
    },
    {
      "sha": "90d960a5031a4f4bec82cfea37c7f1d7d9d4dc14",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 18,
      "deletions": 21,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc77c591add0a9c7740a9ed9f7e40358bf65dbf/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc77c591add0a9c7740a9ed9f7e40358bf65dbf/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=edc77c591add0a9c7740a9ed9f7e40358bf65dbf",
      "patch": "@@ -203,7 +203,6 @@ struct riscv_set_options\n {\n   int pic; /* Generate position-independent code.  */\n   int rvc; /* Generate RVC code.  */\n-  int rve; /* Generate RVE code.  */\n   int relax; /* Emit relocs the linker is allowed to relax.  */\n   int arch_attr; /* Emit architecture and privileged elf attributes.  */\n   int csr_check; /* Enable the CSR checking.  */\n@@ -213,7 +212,6 @@ static struct riscv_set_options riscv_opts =\n {\n   0, /* pic */\n   0, /* rvc */\n-  0, /* rve */\n   1, /* relax */\n   DEFAULT_RISCV_ATTR, /* arch_attr */\n   0, /* csr_check */\n@@ -231,14 +229,6 @@ riscv_set_rvc (bool rvc_value)\n   riscv_opts.rvc = rvc_value;\n }\n \n-/* Enable or disable the rve flags for riscv_opts.  */\n-\n-static void\n-riscv_set_rve (bool rve_value)\n-{\n-  riscv_opts.rve = rve_value;\n-}\n-\n /* This linked list records all enabled extensions, which are parsed from\n    the architecture string.  The architecture string can be set by the\n    -march option, the elf architecture attributes, and the --with-arch\n@@ -252,10 +242,6 @@ static bool\n riscv_subset_supports (const char *feature)\n {\n   struct riscv_subset_t *subset;\n-\n-  if (riscv_opts.rvc && (strcasecmp (feature, \"c\") == 0))\n-    return true;\n-\n   return riscv_lookup_subset (&riscv_subsets, feature, &subset);\n }\n \n@@ -329,13 +315,9 @@ riscv_set_arch (const char *s)\n   riscv_release_subset_list (&riscv_subsets);\n   riscv_parse_subset (&rps, s);\n \n-  /* To support .option rvc and rve.  */\n   riscv_set_rvc (false);\n   if (riscv_subset_supports (\"c\"))\n     riscv_set_rvc (true);\n-  riscv_set_rve (false);\n-  if (riscv_subset_supports (\"e\"))\n-    riscv_set_rve (true);\n }\n \n /* Indicate -mabi option is explictly set.  */\n@@ -1013,7 +995,9 @@ reg_lookup_internal (const char *s, enum reg_class class)\n   if (r == NULL || DECODE_REG_CLASS (r) != class)\n     return -1;\n \n-  if (riscv_opts.rve && class == RCLASS_GPR && DECODE_REG_NUM (r) > 15)\n+  if (riscv_subset_supports (\"e\")\n+      && class == RCLASS_GPR\n+      && DECODE_REG_NUM (r) > 15)\n     return -1;\n \n   return DECODE_REG_NUM (r);\n@@ -3380,10 +3364,23 @@ s_riscv_option (int x ATTRIBUTE_UNUSED)\n   ch = *input_line_pointer;\n   *input_line_pointer = '\\0';\n \n+  riscv_parse_subset_t rps;\n+  rps.subset_list = &riscv_subsets;\n+  rps.error_handler = as_bad;\n+  rps.xlen = &xlen;\n+  rps.isa_spec = default_isa_spec;\n+  rps.check_unknown_prefixed_ext = true;\n+\n   if (strcmp (name, \"rvc\") == 0)\n-    riscv_set_rvc (true);\n+    {\n+      riscv_update_subset (&rps, \"c\", false);\n+      riscv_set_rvc (true);\n+    }\n   else if (strcmp (name, \"norvc\") == 0)\n-    riscv_set_rvc (false);\n+    {\n+      riscv_update_subset (&rps, \"c\", true);\n+      riscv_set_rvc (false);\n+    }\n   else if (strcmp (name, \"pic\") == 0)\n     riscv_opts.pic = true;\n   else if (strcmp (name, \"nopic\") == 0)"
    }
  ]
}