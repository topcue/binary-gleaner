{
  "sha": "9cd7a95a2bb9ba9d5a6af022e5454c8ce78aee56",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWNkN2E5NWEyYmI5YmE5ZDVhNmFmMDIyZTU0NTRjOGNlNzhhZWU1Ng==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-12-11T12:55:04Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-12-11T12:55:04Z"
    },
    "message": "[gdb/testsuite] Fix gdb.base/float128.exp with --with-mpfr=no\n\nWhen configuring gdb using --with-mpfr=no and running test-case\ngdb.base/float128.exp, we run into:\n...\nFAIL: gdb.base/float128.exp: print large128 (GDB may be missing MPFR support!)\n...\n\nFix this by detecting that gdb was build without mpfr using the show\nconfiguration command, and changing the FAIL into UNSUPPORTED.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-12-11  Tom de Vries  <tdevries@suse.de>\n\n\tPR testsuite/26954\n\t* gdb.base/float128.exp: Detect and handle no mpfr support.",
    "tree": {
      "sha": "577d2cd95c8df7dd64f11140a98a104cc4ac0233",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/577d2cd95c8df7dd64f11140a98a104cc4ac0233"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9cd7a95a2bb9ba9d5a6af022e5454c8ce78aee56",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9cd7a95a2bb9ba9d5a6af022e5454c8ce78aee56",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9cd7a95a2bb9ba9d5a6af022e5454c8ce78aee56",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9cd7a95a2bb9ba9d5a6af022e5454c8ce78aee56/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4483a8e72ad265b5d428899d384bf190db071759",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4483a8e72ad265b5d428899d384bf190db071759",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4483a8e72ad265b5d428899d384bf190db071759"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 26,
    "deletions": 1
  },
  "files": [
    {
      "sha": "5b89bcd5d85b4829291fe4ba251c8b65c0e27374",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9cd7a95a2bb9ba9d5a6af022e5454c8ce78aee56/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9cd7a95a2bb9ba9d5a6af022e5454c8ce78aee56/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=9cd7a95a2bb9ba9d5a6af022e5454c8ce78aee56",
      "patch": "@@ -1,3 +1,8 @@\n+2020-12-11  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR testsuite/26954\n+\t* gdb.base/float128.exp: Detect and handle no mpfr support.\n+\n 2020-12-10  Simon Marchi  <simon.marchi@efficios.com>\n \n \tPR gdb/24694"
    },
    {
      "sha": "6fe479bb94a8ff019640147199a2cec1b0a4959f",
      "filename": "gdb/testsuite/gdb.base/float128.exp",
      "status": "modified",
      "additions": 21,
      "deletions": 1,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9cd7a95a2bb9ba9d5a6af022e5454c8ce78aee56/gdb/testsuite/gdb.base/float128.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9cd7a95a2bb9ba9d5a6af022e5454c8ce78aee56/gdb/testsuite/gdb.base/float128.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/float128.exp?ref=9cd7a95a2bb9ba9d5a6af022e5454c8ce78aee56",
      "patch": "@@ -74,6 +74,16 @@ gdb_test_multiple \"set var f128=20.375l\" \"$test\" {\n gdb_test \"print ld\" \".* = 10\\\\.375.*\" \"the value of ld is changed to 10.375\"\n gdb_test \"print f128\" \".* = 20\\\\.375.*\" \"the value of f128 is changed to 20.375\"\n \n+set mpfr_supported -1\n+gdb_test_multiple \"show configuration\" \"\" {\n+    -wrap -re \"--with-mpfr\\r\\n.*\" {\n+       set mpfr_supported 1\n+    }\n+    -wrap -re \"--without-mpfr\\r\\n.*\" {\n+       set mpfr_supported 0\n+    }\n+}\n+\n # Test that we can correctly handle the largest IEEE-128 value\n # Note: If we get \"inf\" instead of the correct result, we may have run into\n # an internal overflow.  This typically happens on host platforms without\n@@ -84,7 +94,17 @@ gdb_test_multiple \"print large128\" \"$test\" {\n \tpass \"$test\"\n     }\n     -re \".* = inf.*$gdb_prompt $\" {\n-\tfail \"$test (GDB may be missing MPFR support!)\"\n+       if { $mpfr_supported == 0 } {\n+\t   # If the host platform has native 128-bit float support (as is\n+\t   # the case for some versions of s390 and powerpc), the\n+\t   # \"print large128\" test should be passing, even without MPFR\n+\t   # support.  So, in those cases we should have fail here rather than\n+\t   # unsupported.  However, given that we don't have a way to readily\n+\t   # test for this, we fall back to unsupported.\n+\t   unsupported \"$test (Missing MPFR support)\"\n+       } else {\n+           fail $test\n+       }\n     }\n     -re \".*$gdb_prompt $\" {\n \tfail \"$test\""
    }
  ]
}