{
  "sha": "0494dbecdfa0b0b9065393755a1ac64431997da1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDQ5NGRiZWNkZmEwYjBiOTA2NTM5Mzc1NWExYWM2NDQzMTk5N2RhMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-23T15:46:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-01-26T23:40:21Z"
    },
    "message": "Consolidate partial symtab dependency reading\n\nMost of the symbol readers have code to iterate over a partial symtabs\ndependencies, expanding each one and optionally printing a message.\nNow that the \"second-stage\" psymtab expansion is available as a\nmethod, these implementations can all be merged.\n\nThis patch also changes a couple more warnings into assertions.\n\ngdb/ChangeLog\n2020-01-26  Tom Tromey  <tom@tromey.com>\n\n\t* xcoffread.c (xcoff_psymtab_to_symtab_1): Call\n\tread_dependencies.  Add assert.\n\t* psymtab.c (partial_symtab::read_dependencies): New method.\n\t* psympriv.h (struct partial_symtab) <read_dependencies>: New\n\tmethod.\n\t* mdebugread.c (psymtab_to_symtab_1): Call read_dependencies.\n\t* dwarf2read.c (dwarf2_psymtab::expand_psymtab): Call\n\tread_dependencies.\n\t* dbxread.c (dbx_psymtab_to_symtab_1): Call read_dependencies.\n\tAdd assert.\n\nChange-Id: I8151e05677794e90223edc1a4cb70f7f69137d46",
    "tree": {
      "sha": "62a9775a68571e89257e1ac2b0d1a88ac55526c0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/62a9775a68571e89257e1ac2b0d1a88ac55526c0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0494dbecdfa0b0b9065393755a1ac64431997da1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0494dbecdfa0b0b9065393755a1ac64431997da1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0494dbecdfa0b0b9065393755a1ac64431997da1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0494dbecdfa0b0b9065393755a1ac64431997da1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8566b89b737eef50f67bf23329b4606cf7973de1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8566b89b737eef50f67bf23329b4606cf7973de1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8566b89b737eef50f67bf23329b4606cf7973de1"
    }
  ],
  "stats": {
    "total": 138,
    "additions": 48,
    "deletions": 90
  },
  "files": [
    {
      "sha": "69f26892bcf3c3f0846d0364b20eaa879cdf7b0e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0494dbecdfa0b0b9065393755a1ac64431997da1",
      "patch": "@@ -1,3 +1,16 @@\n+2020-01-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* xcoffread.c (xcoff_psymtab_to_symtab_1): Call\n+\tread_dependencies.  Add assert.\n+\t* psymtab.c (partial_symtab::read_dependencies): New method.\n+\t* psympriv.h (struct partial_symtab) <read_dependencies>: New\n+\tmethod.\n+\t* mdebugread.c (psymtab_to_symtab_1): Call read_dependencies.\n+\t* dwarf2read.c (dwarf2_psymtab::expand_psymtab): Call\n+\tread_dependencies.\n+\t* dbxread.c (dbx_psymtab_to_symtab_1): Call read_dependencies.\n+\tAdd assert.\n+\n 2020-01-26  Tom Tromey  <tom@tromey.com>\n \n \t* xcoffread.c (xcoff_psymtab_to_symtab_1): Change argument order."
    },
    {
      "sha": "99f47c0c9177caa728b4280faa429fe0a3189470",
      "filename": "gdb/dbxread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 25,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/dbxread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/dbxread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dbxread.c?ref=0494dbecdfa0b0b9065393755a1ac64431997da1",
      "patch": "@@ -2068,33 +2068,10 @@ dbx_end_psymtab (struct objfile *objfile, legacy_psymtab *pst,\n static void\n dbx_psymtab_to_symtab_1 (legacy_psymtab *pst, struct objfile *objfile)\n {\n-  int i;\n-\n-  if (pst->readin)\n-    {\n-      fprintf_unfiltered (gdb_stderr, \"Psymtab for %s already read in.  \"\n-\t\t\t  \"Shouldn't happen.\\n\",\n-\t\t\t  pst->filename);\n-      return;\n-    }\n+  gdb_assert (!pst->readin);\n \n   /* Read in all partial symtabs on which this one is dependent.  */\n-  for (i = 0; i < pst->number_of_dependencies; i++)\n-    if (!pst->dependencies[i]->readin)\n-      {\n-\t/* Inform about additional files that need to be read in.  */\n-\tif (info_verbose)\n-\t  {\n-\t    fputs_filtered (\" \", gdb_stdout);\n-\t    wrap_here (\"\");\n-\t    fputs_filtered (\"and \", gdb_stdout);\n-\t    wrap_here (\"\");\n-\t    printf_filtered (\"%s...\", pst->dependencies[i]->filename);\n-\t    wrap_here (\"\");\t/* Flush output.  */\n-\t    gdb_flush (gdb_stdout);\n-\t  }\n-\tpst->dependencies[i]->expand_psymtab (objfile);\n-      }\n+  pst->read_dependencies (objfile);\n \n   if (LDSYMLEN (pst))\t\t/* Otherwise it's a dummy.  */\n     {"
    },
    {
      "sha": "dafe01d94a08240e146d12b4b4a3055730024dcb",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 19,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=0494dbecdfa0b0b9065393755a1ac64431997da1",
      "patch": "@@ -9663,29 +9663,11 @@ void\n dwarf2_psymtab::expand_psymtab (struct objfile *objfile)\n {\n   struct dwarf2_per_cu_data *per_cu;\n-  int i;\n \n   if (readin)\n     return;\n \n-  for (i = 0; i < number_of_dependencies; i++)\n-    if (!dependencies[i]->readin\n-\t&& dependencies[i]->user == NULL)\n-      {\n-        /* Inform about additional files that need to be read in.  */\n-        if (info_verbose)\n-          {\n-\t    /* FIXME: i18n: Need to make this a single string.  */\n-            fputs_filtered (\" \", gdb_stdout);\n-            wrap_here (\"\");\n-            fputs_filtered (\"and \", gdb_stdout);\n-            wrap_here (\"\");\n-            printf_filtered (\"%s...\", dependencies[i]->filename);\n-            wrap_here (\"\");     /* Flush output.  */\n-            gdb_flush (gdb_stdout);\n-          }\n-\tdependencies[i]->expand_psymtab (objfile);\n-      }\n+  read_dependencies (objfile);\n \n   per_cu = per_cu_data;\n "
    },
    {
      "sha": "5d2fbcd27490c52369c740c04b08011a71fd61b2",
      "filename": "gdb/mdebugread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 18,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/mdebugread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/mdebugread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mdebugread.c?ref=0494dbecdfa0b0b9065393755a1ac64431997da1",
      "patch": "@@ -3856,24 +3856,7 @@ psymtab_to_symtab_1 (legacy_psymtab *pst, struct objfile *objfile)\n   /* Read in all partial symtabs on which this one is dependent.\n      NOTE that we do have circular dependencies, sigh.  We solved\n      that by setting pst->readin before this point.  */\n-\n-  for (i = 0; i < pst->number_of_dependencies; i++)\n-    if (!pst->dependencies[i]->readin)\n-      {\n-\t/* Inform about additional files to be read in.  */\n-\tif (info_verbose)\n-\t  {\n-\t    fputs_filtered (\" \", gdb_stdout);\n-\t    wrap_here (\"\");\n-\t    fputs_filtered (\"and \", gdb_stdout);\n-\t    wrap_here (\"\");\n-\t    printf_filtered (\"%s...\",\n-\t\t\t     pst->dependencies[i]->filename);\n-\t    wrap_here (\"\");\t/* Flush output */\n-\t    gdb_flush (gdb_stdout);\n-\t  }\n-\tpst->dependencies[i]->expand_psymtab (objfile);\n-      }\n+  pst->read_dependencies (objfile);\n \n   /* Do nothing if this is a dummy psymtab.  */\n "
    },
    {
      "sha": "e4b23301e9c53f0d1696e440c250e6960d75ea87",
      "filename": "gdb/psympriv.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/psympriv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/psympriv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psympriv.h?ref=0494dbecdfa0b0b9065393755a1ac64431997da1",
      "patch": "@@ -134,6 +134,9 @@ struct partial_symtab\n      expand_psymtab can be made.  */\n   virtual void expand_psymtab (struct objfile *) = 0;\n \n+  /* Ensure that all the dependencies are read in.  */\n+  void read_dependencies (struct objfile *);\n+\n   /* Return the raw low text address of this partial_symtab.  */\n   CORE_ADDR raw_text_low () const\n   {"
    },
    {
      "sha": "c020d15721c90bea04829715e45ce93a89bd370c",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=0494dbecdfa0b0b9065393755a1ac64431997da1",
      "patch": "@@ -1682,6 +1682,32 @@ partial_symtab::partial_symtab (const char *filename_, struct objfile *objfile)\n     }\n }\n \n+/* See psympriv.h.  */\n+\n+void\n+partial_symtab::read_dependencies (struct objfile *objfile)\n+{\n+  for (int i = 0; i < number_of_dependencies; ++i)\n+    {\n+      if (!dependencies[i]->readin)\n+\t{\n+\t  /* Inform about additional files to be read in.  */\n+\t  if (info_verbose)\n+\t    {\n+\t      fputs_filtered (\" \", gdb_stdout);\n+\t      wrap_here (\"\");\n+\t      fputs_filtered (\"and \", gdb_stdout);\n+\t      wrap_here (\"\");\n+\t      printf_filtered (\"%s...\", dependencies[i]->filename);\n+\t      wrap_here (\"\");\t/* Flush output */\n+\t      gdb_flush (gdb_stdout);\n+\t    }\n+\t  dependencies[i]->expand_psymtab (objfile);\n+\t}\n+    }\n+}\n+\n+\n void\n psymtab_storage::discard_psymtab (struct partial_symtab *pst)\n {"
    },
    {
      "sha": "b7da3f944c788a51585c3b3abab09e8b03a7040f",
      "filename": "gdb/xcoffread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 28,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/xcoffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0494dbecdfa0b0b9065393755a1ac64431997da1/gdb/xcoffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/xcoffread.c?ref=0494dbecdfa0b0b9065393755a1ac64431997da1",
      "patch": "@@ -1819,36 +1819,10 @@ find_linenos (struct bfd *abfd, struct bfd_section *asect, void *vpinfo)\n static void\n xcoff_psymtab_to_symtab_1 (legacy_psymtab *pst, struct objfile *objfile)\n {\n-  int i;\n-\n-  if (!pst)\n-    return;\n-\n-  if (pst->readin)\n-    {\n-      fprintf_unfiltered\n-\t(gdb_stderr, \"Psymtab for %s already read in.  Shouldn't happen.\\n\",\n-\t pst->filename);\n-      return;\n-    }\n+  gdb_assert (!pst->readin);\n \n   /* Read in all partial symtabs on which this one is dependent.  */\n-  for (i = 0; i < pst->number_of_dependencies; i++)\n-    if (!pst->dependencies[i]->readin)\n-      {\n-\t/* Inform about additional files that need to be read in.  */\n-\tif (info_verbose)\n-\t  {\n-\t    fputs_filtered (\" \", gdb_stdout);\n-\t    wrap_here (\"\");\n-\t    fputs_filtered (\"and \", gdb_stdout);\n-\t    wrap_here (\"\");\n-\t    printf_filtered (\"%s...\", pst->dependencies[i]->filename);\n-\t    wrap_here (\"\");\t/* Flush output */\n-\t    gdb_flush (gdb_stdout);\n-\t  }\n-\tpst->dependencies[i]->expand_psymtab (objfile);\n-      }\n+  pst->read_dependencies (objfile);\n \n   if (((struct symloc *) pst->read_symtab_private)->numsyms != 0)\n     {"
    }
  ]
}