{
  "sha": "08235187bcdd66599884f33b046cf8abcf949727",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDgyMzUxODdiY2RkNjY1OTk4ODRmMzNiMDQ2Y2Y4YWJjZjk0OTcyNw==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-08-15T16:29:04Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-08-15T19:21:57Z"
    },
    "message": "Rename internal Python functions to start with an underscore\n\nI could not tell if GdbSetPythonDirectory is internal or not because\nI could not find any references to it, so I left it as-is.\n\nTested by running the testsuite on gdb.python/*.exp; everything still\npasses.\n\n2019-08-15  Christian Biesinger  <cbiesinger@google.com>\n\n\t* python/lib/gdb/__init__.py (GdbOutputFile): Rename to have a\n\tleading underscore.\n\t(GdbOutputErrorFile): Likewise.\n\t(global scope): Adjust constructor calls to GdbOutput{,Error}File\n\taccordingly.\n\t(execute_unwinders): Rename to have a leading underscore.\n\t(auto_load_packages): Likewise.\n\t(global scope): Adjust call to auto_load_packages accordingly.\n\t(GdbSetPythonDirectory): Likewise.\n\t* python/py-unwind.c (pyuw_sniffer): Call _execute_unwinders\n\tinstead of execute_unwinders.\n\ngdb/testsuite/ChangeLog:\n\n2019-08-15  Christian Biesinger  <cbiesinger@google.com>\n\n\t* gdb.python/python.exp: Expect a leading underscore on\n\tGdbOutput{,Error}File.",
    "tree": {
      "sha": "25b24ee7c7e7f2faafd82583addf7b4dac38cc57",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/25b24ee7c7e7f2faafd82583addf7b4dac38cc57"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/08235187bcdd66599884f33b046cf8abcf949727",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/08235187bcdd66599884f33b046cf8abcf949727",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/08235187bcdd66599884f33b046cf8abcf949727",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/08235187bcdd66599884f33b046cf8abcf949727/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "080a488354d63fec9791a26fadd15e0c5246983d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/080a488354d63fec9791a26fadd15e0c5246983d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/080a488354d63fec9791a26fadd15e0c5246983d"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 32,
    "deletions": 13
  },
  "files": [
    {
      "sha": "517972aba99a9d044741524376d7581c44c342d9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/08235187bcdd66599884f33b046cf8abcf949727/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/08235187bcdd66599884f33b046cf8abcf949727/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=08235187bcdd66599884f33b046cf8abcf949727",
      "patch": "@@ -1,3 +1,17 @@\n+2019-08-15  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* python/lib/gdb/__init__.py (GdbOutputFile): Rename to have a\n+\tleading underscore.\n+\t(GdbOutputErrorFile): Likewise.\n+\t(global scope): Adjust constructor calls to GdbOutput{,Error}File\n+\taccordingly.\n+\t(execute_unwinders): Rename to have a leading underscore.\n+\t(auto_load_packages): Likewise.\n+\t(global scope): Adjust call to auto_load_packages accordingly.\n+\t(GdbSetPythonDirectory): Likewise.\n+\t* python/py-unwind.c (pyuw_sniffer): Call _execute_unwinders\n+\tinstead of execute_unwinders.\n+\n 2019-08-15  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-layout.c (show_layout, show_source_disasm_command)"
    },
    {
      "sha": "8af9e47117e3c8c5c31e042ec5b11759700da2af",
      "filename": "gdb/python/lib/gdb/__init__.py",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/08235187bcdd66599884f33b046cf8abcf949727/gdb/python/lib/gdb/__init__.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/08235187bcdd66599884f33b046cf8abcf949727/gdb/python/lib/gdb/__init__.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/lib/gdb/__init__.py?ref=08235187bcdd66599884f33b046cf8abcf949727",
      "patch": "@@ -43,17 +43,17 @@ def writelines(self, iterable):\n     def flush(self):\n         flush()\n \n-class GdbOutputFile (_GdbFile):\n+class _GdbOutputFile (_GdbFile):\n     def write(self, s):\n         write(s, stream=STDOUT)\n \n-sys.stdout = GdbOutputFile()\n+sys.stdout = _GdbOutputFile()\n \n-class GdbOutputErrorFile (_GdbFile):\n+class _GdbOutputErrorFile (_GdbFile):\n     def write(self, s):\n         write(s, stream=STDERR)\n \n-sys.stderr = GdbOutputErrorFile()\n+sys.stderr = _GdbOutputErrorFile()\n \n # Default prompt hook does nothing.\n prompt_hook = None\n@@ -74,7 +74,7 @@ def write(self, s):\n # Initial frame unwinders.\n frame_unwinders = []\n \n-def execute_unwinders(pending_frame):\n+def _execute_unwinders(pending_frame):\n     \"\"\"Internal function called from GDB to execute all unwinders.\n \n     Runs each currently enabled unwinder until it finds the one that\n@@ -124,7 +124,7 @@ def execute_unwinders(pending_frame):\n # manually iterate the list, collating the Python files in each module\n # path.  Construct the module name, and import.\n \n-def auto_load_packages():\n+def _auto_load_packages():\n     for package in packages:\n         location = os.path.join(os.path.dirname(__file__), package)\n         if os.path.exists(location):\n@@ -144,7 +144,7 @@ def auto_load_packages():\n                 except:\n                     sys.stderr.write (traceback.format_exc() + \"\\n\")\n \n-auto_load_packages()\n+_auto_load_packages()\n \n def GdbSetPythonDirectory(dir):\n     \"\"\"Update sys.path, reload gdb and auto-load packages.\"\"\"\n@@ -161,7 +161,7 @@ def GdbSetPythonDirectory(dir):\n     # note that reload overwrites the gdb module without deleting existing\n     # attributes\n     reload(__import__(__name__))\n-    auto_load_packages()\n+    _auto_load_packages()\n \n def current_progspace():\n     \"Return the current Progspace.\""
    },
    {
      "sha": "7cb9fa16a7216fd281e3e229bb96f92f6512afc2",
      "filename": "gdb/python/py-unwind.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/08235187bcdd66599884f33b046cf8abcf949727/gdb/python/py-unwind.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/08235187bcdd66599884f33b046cf8abcf949727/gdb/python/py-unwind.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-unwind.c?ref=08235187bcdd66599884f33b046cf8abcf949727",
      "patch": "@@ -507,16 +507,16 @@ pyuw_sniffer (const struct frame_unwind *self, struct frame_info *this_frame,\n \n   /* Run unwinders.  */\n   if (gdb_python_module == NULL\n-      || ! PyObject_HasAttrString (gdb_python_module, \"execute_unwinders\"))\n+      || ! PyObject_HasAttrString (gdb_python_module, \"_execute_unwinders\"))\n     {\n       PyErr_SetString (PyExc_NameError,\n-                       \"Installation error: gdb.execute_unwinders function \"\n+                       \"Installation error: gdb._execute_unwinders function \"\n                        \"is missing\");\n       gdbpy_print_stack ();\n       return 0;\n     }\n   gdbpy_ref<> pyo_execute (PyObject_GetAttrString (gdb_python_module,\n-\t\t\t\t\t\t   \"execute_unwinders\"));\n+\t\t\t\t\t\t   \"_execute_unwinders\"));\n   if (pyo_execute == NULL)\n     {\n       gdbpy_print_stack ();"
    },
    {
      "sha": "640d392692ba2f366efcc7cf0ef904391dfd4ee8",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/08235187bcdd66599884f33b046cf8abcf949727/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/08235187bcdd66599884f33b046cf8abcf949727/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=08235187bcdd66599884f33b046cf8abcf949727",
      "patch": "@@ -1,3 +1,8 @@\n+2019-08-15  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* gdb.python/python.exp: Expect a leading underscore on\n+\tGdbOutput{,Error}File.\n+\n 2019-08-15  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gdb.dwarf2/dw2-dir-file-name.exp: Skip on remote or"
    },
    {
      "sha": "c795814a658edd4ee65e2dc53cae689937968ea0",
      "filename": "gdb/testsuite/gdb.python/python.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/08235187bcdd66599884f33b046cf8abcf949727/gdb/testsuite/gdb.python/python.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/08235187bcdd66599884f33b046cf8abcf949727/gdb/testsuite/gdb.python/python.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/python.exp?ref=08235187bcdd66599884f33b046cf8abcf949727",
      "patch": "@@ -288,8 +288,8 @@ gdb_test \"python print (symtab\\[1\\]\\[0\\].symtab)\" \"None\" \"test decode_line *0 fi\n gdb_test \"python print (symtab\\[1\\]\\[0\\].pc)\" \"0\" \"test decode_line *0 pc\"\n \n # gdb.write\n-gdb_test \"python print (sys.stderr)\" \".*gdb.GdbOutputErrorFile (instance|object) at.*\" \"test stderr location\"\n-gdb_test \"python print (sys.stdout)\" \".*gdb.GdbOutputFile (instance|object) at.*\" \"test stdout location\"\n+gdb_test \"python print (sys.stderr)\" \".*gdb._GdbOutputErrorFile (instance|object) at.*\" \"test stderr location\"\n+gdb_test \"python print (sys.stdout)\" \".*gdb._GdbOutputFile (instance|object) at.*\" \"test stdout location\"\n gdb_test \"python gdb.write(\\\"Foo\\\\n\\\")\" \"Foo\" \"test default write\"\n gdb_test \"python gdb.write(\\\"Error stream\\\\n\\\", stream=gdb.STDERR)\" \"Error stream\" \"test stderr write\"\n gdb_test \"python gdb.write(\\\"Normal stream\\\\n\\\", stream=gdb.STDOUT)\" \"Normal stream\" \"test stdout write\""
    }
  ]
}