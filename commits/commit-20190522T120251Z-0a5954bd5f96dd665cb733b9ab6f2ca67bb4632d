{
  "sha": "0a5954bd5f96dd665cb733b9ab6f2ca67bb4632d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGE1OTU0YmQ1Zjk2ZGQ2NjVjYjczM2I5YWI2ZjJjYTY3YmI0NjMyZA==",
  "commit": {
    "author": {
      "name": "Simon Cook",
      "email": "simon.cook@embecosm.com",
      "date": "2019-05-22T11:59:58Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-05-22T12:02:51Z"
    },
    "message": "gdb/riscv: Improve flen length determination\n\nThis solves an assertion failure when a remote provides a target\ndescription which only refers to floating point registers by their\nhardware name (e.g. f0), rather than their ABI name (e.g. ft0). GDB\nassumed that should the floating point register feature be presented,\nit would contain a register called ft0.\n\nThe floating point length is now instead determined by searching for\nthe same register, but looking for any of its aliases.\n\ngdb/ChangeLog:\n\n\t* riscv-tdep.c (riscv_gdbarch_init): Support determining flen from\n\ttarget descriptions using exclusively floating point register name\n\taliases.",
    "tree": {
      "sha": "33727c7376c4132e4a2623c8fd58f53102d85b96",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/33727c7376c4132e4a2623c8fd58f53102d85b96"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0a5954bd5f96dd665cb733b9ab6f2ca67bb4632d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0a5954bd5f96dd665cb733b9ab6f2ca67bb4632d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0a5954bd5f96dd665cb733b9ab6f2ca67bb4632d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0a5954bd5f96dd665cb733b9ab6f2ca67bb4632d/comments",
  "author": {
    "login": "simonpcook",
    "id": 90491,
    "node_id": "MDQ6VXNlcjkwNDkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/90491?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simonpcook",
    "html_url": "https://github.com/simonpcook",
    "followers_url": "https://api.github.com/users/simonpcook/followers",
    "following_url": "https://api.github.com/users/simonpcook/following{/other_user}",
    "gists_url": "https://api.github.com/users/simonpcook/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simonpcook/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simonpcook/subscriptions",
    "organizations_url": "https://api.github.com/users/simonpcook/orgs",
    "repos_url": "https://api.github.com/users/simonpcook/repos",
    "events_url": "https://api.github.com/users/simonpcook/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simonpcook/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7166f90a7756a3b68cfb93b5ea4a026e9b5f2459",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7166f90a7756a3b68cfb93b5ea4a026e9b5f2459",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7166f90a7756a3b68cfb93b5ea4a026e9b5f2459"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 21,
    "deletions": 1
  },
  "files": [
    {
      "sha": "a998c5c60dc70862b882ab33af2c1c826d751ad4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a5954bd5f96dd665cb733b9ab6f2ca67bb4632d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a5954bd5f96dd665cb733b9ab6f2ca67bb4632d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0a5954bd5f96dd665cb733b9ab6f2ca67bb4632d",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-22  Simon Cook  <simon.cook@embecosm.com>\n+\n+\t* riscv-tdep.c (riscv_gdbarch_init): Support determining flen from\n+\ttarget descriptions using exclusively floating point register name\n+\taliases.\n+\n 2019-05-21  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \tPR gdb/18644:"
    },
    {
      "sha": "3fc86ab8253d1bbfd014186c06595e68430518f6",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 15,
      "deletions": 1,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a5954bd5f96dd665cb733b9ab6f2ca67bb4632d/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a5954bd5f96dd665cb733b9ab6f2ca67bb4632d/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=0a5954bd5f96dd665cb733b9ab6f2ca67bb4632d",
      "patch": "@@ -3094,7 +3094,21 @@ riscv_gdbarch_init (struct gdbarch_info info,\n       valid_p &= riscv_check_tdesc_feature (tdesc_data, feature_fpu,\n                                             &riscv_freg_feature);\n \n-      int bitsize = tdesc_register_bitsize (feature_fpu, \"ft0\");\n+      /* Search for the first floating point register (by any alias), to\n+         determine the bitsize.  */\n+      int bitsize = -1;\n+      const auto &fp0 = riscv_freg_feature.registers[0];\n+\n+      for (const char *name : fp0.names)\n+\t{\n+\t  if (tdesc_unnumbered_register (feature_fpu, name))\n+\t    {\n+\t      bitsize = tdesc_register_bitsize (feature_fpu, name);\n+\t      break;\n+\t    }\n+\t}\n+\n+      gdb_assert (bitsize != -1);\n       features.flen = (bitsize / 8);\n \n       if (riscv_debug_gdbarch)"
    }
  ]
}