{
  "sha": "fc9d2d724fcc30b66308ae31d3de98e977d27a76",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmM5ZDJkNzI0ZmNjMzBiNjYzMDhhZTMxZDNkZTk4ZTk3N2QyN2E3Ng==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-13T23:30:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-20T16:15:58Z"
    },
    "message": "Fix \"list\" command in the TUI\n\nPR tui/18932 notes that \"list\" no longer works in the TUI.  At some\npoint in the past, it switched the TUI source window to show the\nspecified source; but now this source briefly flashes before the TUI\nreverts to showing the current stack frame's source.\n\nThis patch fixes this bug by introducing a new observer that notices\nwhen the user selected context has changed.  Then, the existing\nbefore-prompt observer is updated to request the correct update:\neither one based on the current stack frame, or one based on the\nuser's source symtab_and_line.\n\ngdb/ChangeLog\n2019-12-20  Tom Tromey  <tom@tromey.com>\n\n\tPR tui/18932:\n\t* tui/tui-hooks.c (tui_refresh_frame_and_register_information):\n\tRename parameters.  Handle the not-from-stack-frame case.\n\t(from_stack, from_source_symtab): New globals.\n\t(tui_before_prompt, tui_normal_stop): Update.\n\t(tui_context_changed, tui_symtab_changed): New functions.\n\t(tui_attach_detach_observers): Attach new observers.\n\ngdb/testsuite/ChangeLog\n2019-12-20  Tom Tromey  <tom@tromey.com>\n\n\t* gdb.tui/list-before.exp: New file.\n\nChange-Id: I62013825f6c1afdd568a1c7a8c019b0c881131af",
    "tree": {
      "sha": "dcad8d1e7eb22ad6ebc7995268c3b8027deeda1a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dcad8d1e7eb22ad6ebc7995268c3b8027deeda1a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fc9d2d724fcc30b66308ae31d3de98e977d27a76",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc9d2d724fcc30b66308ae31d3de98e977d27a76",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fc9d2d724fcc30b66308ae31d3de98e977d27a76",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc9d2d724fcc30b66308ae31d3de98e977d27a76/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a75cd9a2c129dfc086cbe570ef9cff9b84570bbd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd"
    }
  ],
  "stats": {
    "total": 150,
    "additions": 106,
    "deletions": 44
  },
  "files": [
    {
      "sha": "c34d1126ecead54126cce123cf3111091780dbde",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc9d2d724fcc30b66308ae31d3de98e977d27a76/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc9d2d724fcc30b66308ae31d3de98e977d27a76/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fc9d2d724fcc30b66308ae31d3de98e977d27a76",
      "patch": "@@ -1,3 +1,13 @@\n+2019-12-20  Tom Tromey  <tom@tromey.com>\n+\n+\tPR tui/18932:\n+\t* tui/tui-hooks.c (tui_refresh_frame_and_register_information):\n+\tRename parameters.  Handle the not-from-stack-frame case.\n+\t(from_stack, from_source_symtab): New globals.\n+\t(tui_before_prompt, tui_normal_stop): Update.\n+\t(tui_context_changed, tui_symtab_changed): New functions.\n+\t(tui_attach_detach_observers): Attach new observers.\n+\n 2019-12-20  Tom Tromey  <tom@tromey.com>\n \n \t* source.c (struct current_source_location) <set, symtab, line>:"
    },
    {
      "sha": "4476549be6bc1b42bcc5124a9284fbe17557271e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc9d2d724fcc30b66308ae31d3de98e977d27a76/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc9d2d724fcc30b66308ae31d3de98e977d27a76/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=fc9d2d724fcc30b66308ae31d3de98e977d27a76",
      "patch": "@@ -1,3 +1,7 @@\n+2019-12-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* gdb.tui/list-before.exp: New file.\n+\n 2019-12-20  Tom Tromey  <tom@tromey.com>\n \n \t* gdb.tui/list.exp: Check for source on initial listing."
    },
    {
      "sha": "a8c931b4ee9802017a7500382086f378c165b666",
      "filename": "gdb/testsuite/gdb.tui/list-before.exp",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc9d2d724fcc30b66308ae31d3de98e977d27a76/gdb/testsuite/gdb.tui/list-before.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc9d2d724fcc30b66308ae31d3de98e977d27a76/gdb/testsuite/gdb.tui/list-before.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/list-before.exp?ref=fc9d2d724fcc30b66308ae31d3de98e977d27a76",
      "patch": "@@ -0,0 +1,34 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Ensure that \"list\" before starting the TUI will affect the view.\n+\n+load_lib \"tuiterm.exp\"\n+\n+standard_testfile tui-layout.c\n+\n+if {[build_executable \"failed to prepare\" ${testfile} ${srcfile}] == -1} {\n+    return -1\n+}\n+\n+Term::clean_restart 24 80 $testfile\n+\n+gdb_test \"list main\"\n+\n+if {![Term::enter_tui]} {\n+    unsupported \"TUI not supported\"\n+}\n+\n+Term::check_contents \"initial source listing\" \"21 *return 0\""
    },
    {
      "sha": "deb10b0d37b4aea943b90d818a0364bcc299d64e",
      "filename": "gdb/tui/tui-hooks.c",
      "status": "modified",
      "additions": 58,
      "deletions": 44,
      "changes": 102,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc9d2d724fcc30b66308ae31d3de98e977d27a76/gdb/tui/tui-hooks.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc9d2d724fcc30b66308ae31d3de98e977d27a76/gdb/tui/tui-hooks.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-hooks.c?ref=fc9d2d724fcc30b66308ae31d3de98e977d27a76",
      "patch": "@@ -105,53 +105,52 @@ tui_event_modify_breakpoint (struct breakpoint *b)\n   tui_update_all_breakpoint_info (nullptr);\n }\n \n-/* Refresh TUI's frame and register information.  This is a hook intended to be\n-   used to update the screen after potential frame and register changes.\n+/* This is set to true if the next window refresh should come from the\n+   current stack frame.  */\n+\n+static bool from_stack;\n+\n+/* This is set to true if the next window refresh should come from the\n+   current source symtab.  */\n \n-   REGISTERS_TOO_P controls whether to refresh our register information even\n-   if frame information hasn't changed.  */\n+static bool from_source_symtab;\n+\n+/* Refresh TUI's frame and register information.  This is a hook intended to be\n+   used to update the screen after potential frame and register changes.  */\n \n static void\n-tui_refresh_frame_and_register_information (bool registers_too_p)\n+tui_refresh_frame_and_register_information ()\n {\n-  struct frame_info *fi;\n-  CORE_ADDR pc;\n-  int frame_info_changed_p;\n-\n-  if (!has_stack_frames ())\n+  if (!from_stack && !from_source_symtab)\n     return;\n \n   target_terminal::scoped_restore_terminal_state term_state;\n   target_terminal::ours_for_output ();\n \n-  fi = get_selected_frame (NULL);\n-  /* Ensure that symbols for this frame are read in.  Also, determine\n-     the source language of this frame, and switch to it if\n-     desired.  */\n-  if (get_frame_pc_if_available (fi, &pc))\n+  if (from_stack && has_stack_frames ())\n     {\n-      struct symtab *s;\n-\n-      s = find_pc_line_symtab (pc);\n-      /* elz: This if here fixes the problem with the pc not being\n-\t displayed in the tui asm layout, with no debug symbols.  The\n-\t value of s would be 0 here, and select_source_symtab would\n-\t abort the command by calling the 'error' function.  */\n-      if (s)\n-\tselect_source_symtab (s);\n+      struct frame_info *fi = get_selected_frame (NULL);\n+\n+      /* Display the frame position (even if there is no symbols or\n+\t the PC is not known).  */\n+      int frame_info_changed_p = tui_show_frame_info (fi);\n+\n+      /* Refresh the register window if it's visible.  */\n+      if (tui_is_window_visible (DATA_WIN)\n+\t  && (frame_info_changed_p || from_stack))\n+\t{\n+\t  tui_refreshing_registers = 1;\n+\t  TUI_DATA_WIN->check_register_values (fi);\n+\t  tui_refreshing_registers = 0;\n+\t}\n     }\n-\n-  /* Display the frame position (even if there is no symbols or the PC\n-     is not known).  */\n-  frame_info_changed_p = tui_show_frame_info (fi);\n-\n-  /* Refresh the register window if it's visible.  */\n-  if (tui_is_window_visible (DATA_WIN)\n-      && (frame_info_changed_p || registers_too_p))\n+  else if (!from_stack)\n     {\n-      tui_refreshing_registers = 1;\n-      TUI_DATA_WIN->check_register_values (fi);\n-      tui_refreshing_registers = 0;\n+      /* Make sure that the source window is displayed.  */\n+      tui_add_win_to_layout (SRC_WIN);\n+\n+      struct symtab_and_line sal = get_current_source_symtab_and_line ();\n+      tui_update_source_windows_with_line (sal);\n     }\n }\n \n@@ -183,22 +182,33 @@ tui_inferior_exit (struct inferior *inf)\n static void\n tui_before_prompt (const char *current_gdb_prompt)\n {\n-  /* This refresh is intended to catch changes to the selected frame following\n-     a call to \"up\", \"down\" or \"frame\".  As such we don't necessarily want to\n-     refresh registers here unless the frame actually changed by one of these\n-     commands.  Registers will otherwise be refreshed after a normal stop or by\n-     our tui_register_changed_hook.  */\n-  tui_refresh_frame_and_register_information (/*registers_too_p=*/false);\n+  tui_refresh_frame_and_register_information ();\n+  from_stack = false;\n+  from_source_symtab = false;\n }\n \n /* Observer for the normal_stop notification.  */\n \n static void\n tui_normal_stop (struct bpstats *bs, int print_frame)\n {\n-  /* This refresh is intended to catch changes to the selected frame and to\n-     registers following a normal stop.  */\n-  tui_refresh_frame_and_register_information (/*registers_too_p=*/true);\n+  from_stack = true;\n+}\n+\n+/* Observer for user_selected_context_changed.  */\n+\n+static void\n+tui_context_changed (user_selected_what ignore)\n+{\n+  from_stack = true;\n+}\n+\n+/* Observer for current_source_symtab_and_line_changed.  */\n+\n+static void\n+tui_symtab_changed ()\n+{\n+  from_source_symtab = true;\n }\n \n /* Token associated with observers registered while TUI hooks are\n@@ -236,6 +246,10 @@ tui_attach_detach_observers (bool attach)\n \t\t    tui_normal_stop, attach);\n   attach_or_detach (gdb::observers::register_changed,\n \t\t    tui_register_changed, attach);\n+  attach_or_detach (gdb::observers::user_selected_context_changed,\n+\t\t    tui_context_changed, attach);\n+  attach_or_detach (gdb::observers::current_source_symtab_and_line_changed,\n+\t\t    tui_symtab_changed, attach);\n }\n \n /* Install the TUI specific hooks.  */"
    }
  ]
}