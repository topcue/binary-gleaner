{
  "sha": "cbd7581f343d85b4216db2eefdf601f6d988062d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2JkNzU4MWYzNDNkODViNDIxNmRiMmVlZmRmNjAxZjZkOTg4MDYyZA==",
  "commit": {
    "author": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2020-06-09T07:33:08Z"
    },
    "committer": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2020-06-22T01:54:02Z"
    },
    "message": "RISC-V: Don't assume the priv attributes are in order when handling them.\n\nThere is no guarantee that the priv attributes should be defined in order.\nTherefore, we shouldn't have the order assumption when handling them in the\nriscv_merge_attributes.  Set priv_attrs_merged to TRUE if we have handled\nall of the priv attributes.\n\n\tbfd/\n\t* elfnn-riscv.c (riscv_merge_attributes): Once we meet one of the\n\tpriv attributes, we will check the conflicts for all of them (major,\n\tminor and revision), and then set the priv_attrs_merged to TRUE to\n\tindicate that we have handled all of the priv attributes.  Remove\n\tthe unused boolean priv_may_conflict, in_priv_zero and out_priv_zero.",
    "tree": {
      "sha": "b80542287da289dd0a23f2aa23b7343f91cc0c20",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b80542287da289dd0a23f2aa23b7343f91cc0c20"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cbd7581f343d85b4216db2eefdf601f6d988062d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cbd7581f343d85b4216db2eefdf601f6d988062d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cbd7581f343d85b4216db2eefdf601f6d988062d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cbd7581f343d85b4216db2eefdf601f6d988062d/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "41ab2f9b7b6173bf8ae2dc4d78c07ac17012c4c6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41ab2f9b7b6173bf8ae2dc4d78c07ac17012c4c6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/41ab2f9b7b6173bf8ae2dc4d78c07ac17012c4c6"
    }
  ],
  "stats": {
    "total": 81,
    "additions": 44,
    "deletions": 37
  },
  "files": [
    {
      "sha": "d9b66b55d347e37b940c5b869e77cec1f4a73dc8",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbd7581f343d85b4216db2eefdf601f6d988062d/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbd7581f343d85b4216db2eefdf601f6d988062d/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=cbd7581f343d85b4216db2eefdf601f6d988062d",
      "patch": "@@ -1,3 +1,11 @@\n+2020-06-22  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* elfnn-riscv.c (riscv_merge_attributes): Once we meet one of the\n+\tpriv attributes, we will check the conflicts for all of them (major,\n+\tminor and revision), and then set the priv_attrs_merged to TRUE to\n+\tindicate that we have handled all of the priv attributes.  Remove\n+\tthe unused boolean priv_may_conflict, in_priv_zero and out_priv_zero.\n+\n 2020-06-21  Alan Modra  <amodra@gmail.com>\n \n \tPR 26132"
    },
    {
      "sha": "280445945dd21bf7821766c33659fd01c803188a",
      "filename": "bfd/elfnn-riscv.c",
      "status": "modified",
      "additions": 36,
      "deletions": 37,
      "changes": 73,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbd7581f343d85b4216db2eefdf601f6d988062d/bfd/elfnn-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbd7581f343d85b4216db2eefdf601f6d988062d/bfd/elfnn-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-riscv.c?ref=cbd7581f343d85b4216db2eefdf601f6d988062d",
      "patch": "@@ -2987,9 +2987,7 @@ riscv_merge_attributes (bfd *ibfd, struct bfd_link_info *info)\n   obj_attribute *in_attr;\n   obj_attribute *out_attr;\n   bfd_boolean result = TRUE;\n-  bfd_boolean priv_may_conflict = FALSE;\n-  bfd_boolean in_priv_zero = TRUE;\n-  bfd_boolean out_priv_zero = TRUE;\n+  bfd_boolean priv_attrs_merged = FALSE;\n   const char *sec_name = get_elf_backend_data (ibfd)->obj_attrs_section;\n   unsigned int i;\n \n@@ -3048,41 +3046,42 @@ riscv_merge_attributes (bfd *ibfd, struct bfd_link_info *info)\n       case Tag_RISCV_priv_spec:\n       case Tag_RISCV_priv_spec_minor:\n       case Tag_RISCV_priv_spec_revision:\n-\tif (in_attr[i].i != 0)\n-\t  in_priv_zero = FALSE;\n-\tif (out_attr[i].i != 0)\n-\t  out_priv_zero = FALSE;\n-\tif (out_attr[i].i != in_attr[i].i)\n-\t  priv_may_conflict = TRUE;\n-\n-\t/* We check the priv version conflict when parsing the\n-\t   revision version.  */\n-\tif (i != Tag_RISCV_priv_spec_revision)\n-\t  break;\n-\n-\t/* Allow to link the object without the priv setting.  */\n-\tif (out_priv_zero)\n-\t  {\n-\t    out_attr[i].i = in_attr[i].i;\n-\t    out_attr[Tag_RISCV_priv_spec].i =\n-\t\tin_attr[Tag_RISCV_priv_spec].i;\n-\t    out_attr[Tag_RISCV_priv_spec_minor].i =\n-\t\tin_attr[Tag_RISCV_priv_spec_minor].i;\n-\t  }\n-\telse if (!in_priv_zero\n-\t\t && priv_may_conflict)\n+\t/* If we have handled the priv attributes, then skip it.  */\n+\tif (!priv_attrs_merged)\n \t  {\n-\t    _bfd_error_handler\n-\t      (_(\"error: %pB use privilege spec version %u.%u.%u but \"\n-\t\t \"the output use version %u.%u.%u.\"),\n-\t       ibfd,\n-\t       in_attr[Tag_RISCV_priv_spec].i,\n-\t       in_attr[Tag_RISCV_priv_spec_minor].i,\n-\t       in_attr[i].i,\n-\t       out_attr[Tag_RISCV_priv_spec].i,\n-\t       out_attr[Tag_RISCV_priv_spec_minor].i,\n-\t       out_attr[i].i);\n-\t    result = FALSE;\n+\t    unsigned int Tag_a = Tag_RISCV_priv_spec;\n+\t    unsigned int Tag_b = Tag_RISCV_priv_spec_minor;\n+\t    unsigned int Tag_c = Tag_RISCV_priv_spec_revision;\n+\n+\t    /* Allow to link the object without the priv specs.  */\n+\t    if (out_attr[Tag_a].i == 0\n+\t\t&& out_attr[Tag_b].i == 0\n+\t\t&& out_attr[Tag_c].i == 0)\n+\t      {\n+\t\tout_attr[Tag_a].i = in_attr[Tag_a].i;\n+\t\tout_attr[Tag_b].i = in_attr[Tag_b].i;\n+\t\tout_attr[Tag_c].i = in_attr[Tag_c].i;\n+\t      }\n+\t    else if ((in_attr[Tag_a].i != 0\n+\t\t      || in_attr[Tag_b].i != 0\n+\t\t      || in_attr[Tag_c].i != 0)\n+\t\t     && (out_attr[Tag_a].i != in_attr[Tag_a].i\n+\t\t\t || out_attr[Tag_b].i != in_attr[Tag_b].i\n+\t\t\t || out_attr[Tag_c].i != in_attr[Tag_c].i))\n+\t      {\n+\t\t_bfd_error_handler\n+\t\t  (_(\"error: %pB use privilege spec version %u.%u.%u but \"\n+\t\t     \"the output use version %u.%u.%u.\"),\n+\t\t   ibfd,\n+\t\t   in_attr[Tag_a].i,\n+\t\t   in_attr[Tag_b].i,\n+\t\t   in_attr[Tag_c].i,\n+\t\t   out_attr[Tag_a].i,\n+\t\t   out_attr[Tag_b].i,\n+\t\t   out_attr[Tag_c].i);\n+\t\tresult = FALSE;\n+\t      }\n+\t    priv_attrs_merged = TRUE;\n \t  }\n \tbreak;\n "
    }
  ]
}