{
  "sha": "408e9b8b9ebeb854baea9aac52fa8df4d41eb53d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDA4ZTliOGI5ZWJlYjg1NGJhZWE5YWFjNTJmYThkZjRkNDFlYjUzZA==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-05-17T15:38:02Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-05-17T15:38:02Z"
    },
    "message": "testsuite: Create .cmd files for gdb and gdbserver\n\nWhen spawning gdb or gdbserver create a .cmd file in the test output\ndirectory containing the full command line, ensuring the current gdb\ninstance is appended to the files so that they can be quickly matched\nto the corresponding gdb.in file.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/gdb.exp (default_gdb_spawn): Call gdb_write_cmd_file.\n\t(gdb_write_cmd_file): New procedure.\n\t* lib/gdbserver-support.exp (gdbserver_start): Call\n\tgdbserver_write_cmd_file.\n\t(gdbserver_write_cmd_file): New proedure.",
    "tree": {
      "sha": "e36e2bb0fd1758359e041ffb1ca5f34dfa64c348",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e36e2bb0fd1758359e041ffb1ca5f34dfa64c348"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/408e9b8b9ebeb854baea9aac52fa8df4d41eb53d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/408e9b8b9ebeb854baea9aac52fa8df4d41eb53d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/408e9b8b9ebeb854baea9aac52fa8df4d41eb53d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/408e9b8b9ebeb854baea9aac52fa8df4d41eb53d/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f9e2e39d23495844d998f54a0fccb9d6be7edb0e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f9e2e39d23495844d998f54a0fccb9d6be7edb0e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f9e2e39d23495844d998f54a0fccb9d6be7edb0e"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 29,
    "deletions": 0
  },
  "files": [
    {
      "sha": "057c71b8c6495feddd4cf4207b5a64ddfd4b1540",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/408e9b8b9ebeb854baea9aac52fa8df4d41eb53d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/408e9b8b9ebeb854baea9aac52fa8df4d41eb53d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=408e9b8b9ebeb854baea9aac52fa8df4d41eb53d",
      "patch": "@@ -1,3 +1,11 @@\n+2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* lib/gdb.exp (default_gdb_spawn): Call gdb_write_cmd_file.\n+\t(gdb_write_cmd_file): New procedure.\n+\t* lib/gdbserver-support.exp (gdbserver_start): Call\n+\tgdbserver_write_cmd_file.\n+\t(gdbserver_write_cmd_file): New procedure.\n+\n 2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n \n \t* lib/gdb.exp (gdb_unload): Mark Y as an answer."
    },
    {
      "sha": "be90ba972f1be011cf5a433c4aa5576b730fcac0",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/408e9b8b9ebeb854baea9aac52fa8df4d41eb53d/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/408e9b8b9ebeb854baea9aac52fa8df4d41eb53d/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=408e9b8b9ebeb854baea9aac52fa8df4d41eb53d",
      "patch": "@@ -1664,6 +1664,7 @@ proc default_gdb_spawn { } {\n     set use_gdb_stub [target_info exists use_gdb_stub]\n \n     verbose \"Spawning $GDB $INTERNAL_GDBFLAGS $GDBFLAGS\"\n+    gdb_write_cmd_file \"$GDB $INTERNAL_GDBFLAGS $GDBFLAGS\"\n \n     if [info exists gdb_spawn_id] {\n \treturn 0\n@@ -6540,5 +6541,14 @@ proc gdb_stdin_log_write { message {type standard} } {\n     puts -nonewline $in_file \"$message\"\n }\n \n+# Write the command line used to invocate gdb to the cmd file.\n+\n+proc gdb_write_cmd_file { cmdline } {\n+    set logfile [standard_output_file_with_gdb_instance gdb.cmd]\n+    set cmd_file [open $logfile w]\n+    puts $cmd_file $cmdline\n+    catch \"close $cmd_file\"\n+}\n+\n # Always load compatibility stuff.\n load_lib future.exp"
    },
    {
      "sha": "54aa55771c1028b885e9afbb7478e87cda58f8f7",
      "filename": "gdb/testsuite/lib/gdbserver-support.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/408e9b8b9ebeb854baea9aac52fa8df4d41eb53d/gdb/testsuite/lib/gdbserver-support.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/408e9b8b9ebeb854baea9aac52fa8df4d41eb53d/gdb/testsuite/lib/gdbserver-support.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdbserver-support.exp?ref=408e9b8b9ebeb854baea9aac52fa8df4d41eb53d",
      "patch": "@@ -319,6 +319,8 @@ proc gdbserver_start { options arguments } {\n \t    append gdbserver_command \" $arguments\"\n \t}\n \n+\tgdbserver_write_cmd_file $gdbserver_command\n+\n \tglobal server_spawn_id\n \tset server_spawn_id [remote_spawn target $gdbserver_command]\n \n@@ -597,3 +599,12 @@ proc gdbserver_debug_enabled { } {\n     return [expr { $gdbserverdebug == \"debug\" || $gdbserverdebug == \"remote\"\n \t\t   || $gdbserverdebug == \"all\" }]\n }\n+\n+# Write the command line used to invocate gdbserver to the cmd file.\n+\n+proc gdbserver_write_cmd_file { cmdline } {\n+    set logfile [standard_output_file_with_gdb_instance gdbserver.cmd]\n+    set cmd_file [open $logfile w]\n+    puts $cmd_file $cmdline\n+    catch \"close $cmd_file\"\n+}"
    }
  ]
}