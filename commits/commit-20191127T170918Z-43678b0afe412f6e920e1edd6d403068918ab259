{
  "sha": "43678b0afe412f6e920e1edd6d403068918ab259",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDM2NzhiMGFmZTQxMmY2ZTkyMGUxZWRkNmQ0MDMwNjg5MThhYjI1OQ==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-11-26T20:41:30Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-11-27T17:09:18Z"
    },
    "message": "Replace SYMBOL_SET_LINKAGE_NAME with a member function\n\nEasier to read, shorter, and will later make it possible to make the\nname field private.\n\ngdb/ChangeLog:\n\n2019-11-27  Christian Biesinger  <cbiesinger@google.com>\n\n\t* ada-exp.y (write_ambiguous_var): Replace SYMBOL_SET_LINKAGE_NAME\n\twith sym->set_linkage_name.\n\t* coffread.c (coff_read_enum_type): Likewise.\n\t* mdebugread.c (parse_symbol): Likewise.\n\t* stabsread.c (patch_block_stabs): Likewise.\n\t(define_symbol): Likewise.\n\t(read_enum_type): Likewise.\n\t(common_block_end): Likewise.\n\t* symtab.h (struct general_symbol_info) <set_linkage_name>: New\n\tfunction.\n\t(SYMBOL_SET_LINKAGE_NAME): Remove.\n\t* xcoffread.c (process_xcoff_symbol): Replace SYMBOL_SET_LINKAGE_NAME\n\twith sym->set_linkage_name.\n\nChange-Id: I174a0542c014f1b035070068076308bb8ae79abb",
    "tree": {
      "sha": "a7306431f0369659eb437b9d0ea258e4f1c7bc79",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a7306431f0369659eb437b9d0ea258e4f1c7bc79"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/43678b0afe412f6e920e1edd6d403068918ab259",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/43678b0afe412f6e920e1edd6d403068918ab259",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/43678b0afe412f6e920e1edd6d403068918ab259",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/43678b0afe412f6e920e1edd6d403068918ab259/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "db5960b4d22761507097f816b1dac3bb56a22bb5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db5960b4d22761507097f816b1dac3bb56a22bb5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/db5960b4d22761507097f816b1dac3bb56a22bb5"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 37,
    "deletions": 25
  },
  "files": [
    {
      "sha": "028a58cd34e34e252c94ede879bc90bcf0d16ccc",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43678b0afe412f6e920e1edd6d403068918ab259/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43678b0afe412f6e920e1edd6d403068918ab259/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=43678b0afe412f6e920e1edd6d403068918ab259",
      "patch": "@@ -1,3 +1,19 @@\n+2019-11-27  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* ada-exp.y (write_ambiguous_var): Replace SYMBOL_SET_LINKAGE_NAME\n+\twith sym->set_linkage_name.\n+\t* coffread.c (coff_read_enum_type): Likewise.\n+\t* mdebugread.c (parse_symbol): Likewise.\n+\t* stabsread.c (patch_block_stabs): Likewise.\n+\t(define_symbol): Likewise.\n+\t(read_enum_type): Likewise.\n+\t(common_block_end): Likewise.\n+\t* symtab.h (struct general_symbol_info) <set_linkage_name>: New\n+\tfunction.\n+\t(SYMBOL_SET_LINKAGE_NAME): Remove.\n+\t* xcoffread.c (process_xcoff_symbol): Replace SYMBOL_SET_LINKAGE_NAME\n+\twith sym->set_linkage_name.\n+\n 2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* mi/mi-cmds.c (mi_cmds): Add 'symbol-info-modules' entry."
    },
    {
      "sha": "00020cd0677b1aa241b9dd2feb474508cb1f8ad1",
      "filename": "gdb/ada-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43678b0afe412f6e920e1edd6d403068918ab259/gdb/ada-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43678b0afe412f6e920e1edd6d403068918ab259/gdb/ada-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-exp.y?ref=43678b0afe412f6e920e1edd6d403068918ab259",
      "patch": "@@ -1105,8 +1105,7 @@ write_ambiguous_var (struct parser_state *par_state,\n   struct symbol *sym = new (&temp_parse_space) symbol ();\n \n   SYMBOL_DOMAIN (sym) = UNDEF_DOMAIN;\n-  SYMBOL_SET_LINKAGE_NAME (sym,\n-\t\t\t   obstack_strndup (&temp_parse_space, name, len));\n+  sym->set_linkage_name (obstack_strndup (&temp_parse_space, name, len));\n   SYMBOL_LANGUAGE (sym) = language_ada;\n \n   write_exp_elt_opcode (par_state, OP_VAR_VALUE);"
    },
    {
      "sha": "d0a9233de731682d61ebe40542ccc09ad9fc771b",
      "filename": "gdb/coffread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43678b0afe412f6e920e1edd6d403068918ab259/gdb/coffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43678b0afe412f6e920e1edd6d403068918ab259/gdb/coffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/coffread.c?ref=43678b0afe412f6e920e1edd6d403068918ab259",
      "patch": "@@ -2106,7 +2106,7 @@ coff_read_enum_type (int index, int length, int lastsym,\n \t  sym = allocate_symbol (objfile);\n \n \t  name = obstack_strdup (&objfile->objfile_obstack, name);\n-\t  SYMBOL_SET_LINKAGE_NAME (sym, name);\n+\t  sym->set_linkage_name (name);\n \t  SYMBOL_ACLASS_INDEX (sym) = LOC_CONST;\n \t  SYMBOL_DOMAIN (sym) = VAR_DOMAIN;\n \t  SYMBOL_VALUE (sym) = ms->c_value;"
    },
    {
      "sha": "f279f131711bd3a7e9f26c5da7e3f82012a064ff",
      "filename": "gdb/mdebugread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43678b0afe412f6e920e1edd6d403068918ab259/gdb/mdebugread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43678b0afe412f6e920e1edd6d403068918ab259/gdb/mdebugread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mdebugread.c?ref=43678b0afe412f6e920e1edd6d403068918ab259",
      "patch": "@@ -1066,9 +1066,8 @@ parse_symbol (SYMR *sh, union aux_ext *ax, char *ext_sh, int bigend,\n \t\tFIELD_BITSIZE (*f) = 0;\n \n \t\tenum_sym = allocate_symbol (mdebugread_objfile);\n-\t\tSYMBOL_SET_LINKAGE_NAME\n-\t\t  (enum_sym,\n-\t\t   obstack_strdup (&mdebugread_objfile->objfile_obstack,\n+\t\tenum_sym->set_linkage_name\n+\t\t  (obstack_strdup (&mdebugread_objfile->objfile_obstack,\n \t\t\t\t   f->name));\n \t\tSYMBOL_ACLASS_INDEX (enum_sym) = LOC_CONST;\n \t\tSYMBOL_TYPE (enum_sym) = t;"
    },
    {
      "sha": "979df0266cf08c61bd1a2984707562dcfc331667",
      "filename": "gdb/stabsread.c",
      "status": "modified",
      "additions": 8,
      "deletions": 9,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43678b0afe412f6e920e1edd6d403068918ab259/gdb/stabsread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43678b0afe412f6e920e1edd6d403068918ab259/gdb/stabsread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stabsread.c?ref=43678b0afe412f6e920e1edd6d403068918ab259",
      "patch": "@@ -426,9 +426,8 @@ patch_block_stabs (struct pending *symbols, struct pending_stabs *stabs,\n \t      sym = allocate_symbol (objfile);\n \t      SYMBOL_DOMAIN (sym) = VAR_DOMAIN;\n \t      SYMBOL_ACLASS_INDEX (sym) = LOC_OPTIMIZED_OUT;\n-\t      SYMBOL_SET_LINKAGE_NAME\n-\t\t(sym, obstack_strndup (&objfile->objfile_obstack,\n-\t\t\t\t       name, pp - name));\n+\t      sym->set_linkage_name\n+\t\t(obstack_strndup (&objfile->objfile_obstack, name, pp - name));\n \t      pp += 2;\n \t      if (*(pp - 1) == 'F' || *(pp - 1) == 'f')\n \t\t{\n@@ -710,14 +709,14 @@ define_symbol (CORE_ADDR valu, const char *string, int desc, int type,\n       switch (string[1])\n \t{\n \tcase 't':\n-\t  SYMBOL_SET_LINKAGE_NAME (sym, \"this\");\n+\t  sym->set_linkage_name (\"this\");\n \t  break;\n \n \tcase 'v':\t\t/* $vtbl_ptr_type */\n \t  goto normal;\n \n \tcase 'e':\n-\t  SYMBOL_SET_LINKAGE_NAME (sym, \"eh_throw\");\n+\t  sym->set_linkage_name (\"eh_throw\");\n \t  break;\n \n \tcase '_':\n@@ -1202,7 +1201,7 @@ define_symbol (CORE_ADDR valu, const char *string, int desc, int type,\n \t      const char *new_name = gdbarch_static_transform_name\n \t\t(gdbarch, sym->linkage_name ());\n \n-\t      SYMBOL_SET_LINKAGE_NAME (sym, new_name);\n+\t      sym->set_linkage_name (new_name);\n \t      SET_SYMBOL_VALUE_ADDRESS (sym,\n \t\t\t\t\tBMSYMBOL_VALUE_ADDRESS (msym));\n \t    }\n@@ -1385,7 +1384,7 @@ define_symbol (CORE_ADDR valu, const char *string, int desc, int type,\n \t      const char *new_name = gdbarch_static_transform_name\n \t\t(gdbarch, sym->linkage_name ());\n \n-\t      SYMBOL_SET_LINKAGE_NAME (sym, new_name);\n+\t      sym->set_linkage_name (new_name);\n \t      SET_SYMBOL_VALUE_ADDRESS (sym, BMSYMBOL_VALUE_ADDRESS (msym));\n \t    }\n \t}\n@@ -3638,7 +3637,7 @@ read_enum_type (const char **pp, struct type *type,\n \treturn error_type (pp, objfile);\n \n       sym = allocate_symbol (objfile);\n-      SYMBOL_SET_LINKAGE_NAME (sym, name);\n+      sym->set_linkage_name (name);\n       SYMBOL_SET_LANGUAGE (sym, get_current_subfile ()->language,\n \t\t\t   &objfile->objfile_obstack);\n       SYMBOL_ACLASS_INDEX (sym) = LOC_CONST;\n@@ -4306,7 +4305,7 @@ common_block_end (struct objfile *objfile)\n \n   sym = allocate_symbol (objfile);\n   /* Note: common_block_name already saved on objfile_obstack.  */\n-  SYMBOL_SET_LINKAGE_NAME (sym, common_block_name);\n+  sym->set_linkage_name (common_block_name);\n   SYMBOL_ACLASS_INDEX (sym) = LOC_BLOCK;\n \n   /* Now we copy all the symbols which have been defined since the BCOMM.  */"
    },
    {
      "sha": "7a5145663a17d1df38f95faa52a10e6bc3f0aa7b",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 8,
      "deletions": 9,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43678b0afe412f6e920e1edd6d403068918ab259/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43678b0afe412f6e920e1edd6d403068918ab259/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=43678b0afe412f6e920e1edd6d403068918ab259",
      "patch": "@@ -416,6 +416,14 @@ struct general_symbol_info\n      returns the same value (same pointer) as linkage_name ().  */\n   const char *search_name () const;\n \n+  /* Set just the linkage name of a symbol; do not try to demangle\n+     it.  Used for constructs which do not have a mangled name,\n+     e.g. struct tags.  Unlike SYMBOL_SET_NAMES, linkage_name must\n+     be terminated and either already on the objfile's obstack or\n+     permanently allocated.  */\n+  void set_linkage_name (const char *linkage_name)\n+  { name = linkage_name; }\n+\n   /* Name of the symbol.  This is a required field.  Storage for the\n      name is allocated on the objfile_obstack for the associated\n      objfile.  For languages like C++ that make a distinction between\n@@ -528,7 +536,6 @@ extern void symbol_set_language (struct general_symbol_info *symbol,\n                                  enum language language,\n \t\t\t\t struct obstack *obstack);\n \n-\n /* Try to determine the demangled name for a symbol, based on the\n    language of that symbol.  If the language is set to language_auto,\n    it will attempt to find any demangling algorithm that works and\n@@ -538,14 +545,6 @@ extern void symbol_set_language (struct general_symbol_info *symbol,\n extern char *symbol_find_demangled_name (struct general_symbol_info *gsymbol,\n \t\t\t\t\t const char *mangled);\n \n-/* Set just the linkage name of a symbol; do not try to demangle\n-   it.  Used for constructs which do not have a mangled name,\n-   e.g. struct tags.  Unlike SYMBOL_SET_NAMES, linkage_name must\n-   be terminated and either already on the objfile's obstack or\n-   permanently allocated.  */\n-#define SYMBOL_SET_LINKAGE_NAME(symbol,linkage_name) \\\n-  (symbol)->name = (linkage_name)\n-\n /* Set the linkage and natural names of a symbol, by demangling\n    the linkage name.  If linkage_name may not be nullterminated,\n    copy_name must be set to true.  */"
    },
    {
      "sha": "eaa77fd4915482d4766e8d167f90ef42ba7ef374",
      "filename": "gdb/xcoffread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43678b0afe412f6e920e1edd6d403068918ab259/gdb/xcoffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43678b0afe412f6e920e1edd6d403068918ab259/gdb/xcoffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/xcoffread.c?ref=43678b0afe412f6e920e1edd6d403068918ab259",
      "patch": "@@ -1574,7 +1574,7 @@ process_xcoff_symbol (struct coff_symbol *cs, struct objfile *objfile)\n          will be patched with the type from its stab entry later on in\n          patch_block_stabs (), unless the file was compiled without -g.  */\n \n-      SYMBOL_SET_LINKAGE_NAME (sym, SYMNAME_ALLOC (name, symname_alloced));\n+      sym->set_linkage_name (SYMNAME_ALLOC (name, symname_alloced));\n       SYMBOL_TYPE (sym) = objfile_type (objfile)->nodebug_text_symbol;\n \n       SYMBOL_ACLASS_INDEX (sym) = LOC_BLOCK;"
    }
  ]
}