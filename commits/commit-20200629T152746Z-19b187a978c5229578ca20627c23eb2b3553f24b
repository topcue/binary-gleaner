{
  "sha": "19b187a978c5229578ca20627c23eb2b3553f24b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTliMTg3YTk3OGM1MjI5NTc4Y2EyMDYyN2MyM2ViMmIzNTUzZjI0Yg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-06-29T15:27:40Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-06-29T15:27:46Z"
    },
    "message": "gdb: fix documentation of gdbarch_displaced_step_copy_insn\n\nI spotted something that looks wrong in the doc of\ngdbarch_displaced_step_copy_insn.\n\nIt says that if the function returns NULL, it means that it has emulated\nthe behavior of the instruction and written the result to REGS.\nHowever, it says below that the function may return NULL to indicate\nthat the instruction can't be single-stepped out-of-line, in which case\nthe core steps the instruction in-line.  The two are contradictory.\n\nThe right one is the latter, if the function returns NULL, the core\nfalls back to in-line stepping. I checked all the implementations of\nthis function and they all agree with this.\n\ngdb/ChangeLog:\n\n\t* gdbarch.sh (displaced_step_copy_insn): Update doc.\n\t* gdbarch.h: Re-generate.\n\nChange-Id: I98163cdd38970cde4c77680e249b10f5d2d5bf9b",
    "tree": {
      "sha": "6cedff92eafa97785f8ca9b14f37c51d6b09e9bf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6cedff92eafa97785f8ca9b14f37c51d6b09e9bf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/19b187a978c5229578ca20627c23eb2b3553f24b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/19b187a978c5229578ca20627c23eb2b3553f24b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/19b187a978c5229578ca20627c23eb2b3553f24b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/19b187a978c5229578ca20627c23eb2b3553f24b/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "df5b8876083ec8c7bfb44ecb91b516c864edebfd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/df5b8876083ec8c7bfb44ecb91b516c864edebfd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/df5b8876083ec8c7bfb44ecb91b516c864edebfd"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 7,
    "deletions": 6
  },
  "files": [
    {
      "sha": "fb1912c2d91973a6fa7567951daffe7452815a5d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/19b187a978c5229578ca20627c23eb2b3553f24b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/19b187a978c5229578ca20627c23eb2b3553f24b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=19b187a978c5229578ca20627c23eb2b3553f24b",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-29  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbarch.sh (displaced_step_copy_insn): Update doc.\n+\t* gdbarch.h: Re-generate.\n+\n 2020-06-28  Tom Tromey  <tom@tromey.com>\n \n \t* command.h (cmd_types): Remove."
    },
    {
      "sha": "4e51c295b36df745c9a853cb4a44c614732895cd",
      "filename": "gdb/gdbarch.h",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/19b187a978c5229578ca20627c23eb2b3553f24b/gdb/gdbarch.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/19b187a978c5229578ca20627c23eb2b3553f24b/gdb/gdbarch.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.h?ref=19b187a978c5229578ca20627c23eb2b3553f24b",
      "patch": "@@ -1007,9 +1007,7 @@ extern void set_gdbarch_max_insn_length (struct gdbarch *gdbarch, ULONGEST max_i\n    not the copy at TO.  The caller should update it to point at TO later.\n   \n    Return a pointer to data of the architecture's choice to be passed\n-   to gdbarch_displaced_step_fixup.  Or, return NULL to indicate that\n-   the instruction's effects have been completely simulated, with the\n-   resulting state written back to REGS.\n+   to gdbarch_displaced_step_fixup.\n   \n    For a general explanation of displaced stepping and how GDB uses it,\n    see the comments in infrun.c."
    },
    {
      "sha": "ad27a4eca05e9a7fee5479e14537c5b0191ce0cd",
      "filename": "gdb/gdbarch.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/19b187a978c5229578ca20627c23eb2b3553f24b/gdb/gdbarch.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/19b187a978c5229578ca20627c23eb2b3553f24b/gdb/gdbarch.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.sh?ref=19b187a978c5229578ca20627c23eb2b3553f24b",
      "patch": "@@ -767,9 +767,7 @@ V;ULONGEST;max_insn_length;;;0;0\n # not the copy at TO.  The caller should update it to point at TO later.\n #\n # Return a pointer to data of the architecture's choice to be passed\n-# to gdbarch_displaced_step_fixup.  Or, return NULL to indicate that\n-# the instruction's effects have been completely simulated, with the\n-# resulting state written back to REGS.\n+# to gdbarch_displaced_step_fixup.\n #\n # For a general explanation of displaced stepping and how GDB uses it,\n # see the comments in infrun.c."
    }
  ]
}