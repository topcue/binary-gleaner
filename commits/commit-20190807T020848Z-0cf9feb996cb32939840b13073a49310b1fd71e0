{
  "sha": "0cf9feb996cb32939840b13073a49310b1fd71e0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGNmOWZlYjk5NmNiMzI5Mzk4NDBiMTMwNzNhNDkzMTBiMWZkNzFlMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-13T18:13:15Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-07T02:08:48Z"
    },
    "message": "Introduce obstack_strndup\n\nThis introduces obstack_strndup and changes gdb to use it.\n\nNote that obstack_strndup works like savestring, and not exactly like\nxstrndup.  The difference is that obstack_strndup uses the passed-in\nlength, while xstrndup uses strnlen to choose the length.\n\ngdb/ChangeLog\n2019-08-06  Tom Tromey  <tom@tromey.com>\n\n\t* stabsread.c (patch_block_stabs, read_one_struct_field)\n\t(read_enum_type): Use obstack_strndup.\n\t* rust-exp.y (rust_parser::copy_name): Use obstack_strndup.\n\t* gdb_obstack.h (obstack_strndup): Use obstack_strndup.\n\t* dwarf2read.c (guess_full_die_structure_name)\n\t(anonymous_struct_prefix): Use obstack_strndup.\n\t* dbxread.c (cp_set_block_scope): Use obstack_strndup.\n\t* c-exp.y (yylex): Use obstack_strndup.\n\t* ada-exp.y (write_object_renaming, write_ambiguous_var)\n\t(write_var_or_type): Use obstack_strndup.",
    "tree": {
      "sha": "4587051d5f873efbc2eacf85e23f2987f24d7571",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4587051d5f873efbc2eacf85e23f2987f24d7571"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0cf9feb996cb32939840b13073a49310b1fd71e0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0cf9feb996cb32939840b13073a49310b1fd71e0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0cf9feb996cb32939840b13073a49310b1fd71e0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0cf9feb996cb32939840b13073a49310b1fd71e0/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "efba19b06a6f2baacb3920599f970d1333ffc358",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/efba19b06a6f2baacb3920599f970d1333ffc358",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/efba19b06a6f2baacb3920599f970d1333ffc358"
    }
  ],
  "stats": {
    "total": 66,
    "additions": 43,
    "deletions": 23
  },
  "files": [
    {
      "sha": "82e0819c136dc42702e74c0714b399b5ab437436",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0cf9feb996cb32939840b13073a49310b1fd71e0",
      "patch": "@@ -1,3 +1,16 @@\n+2019-08-06  Tom Tromey  <tom@tromey.com>\n+\n+\t* stabsread.c (patch_block_stabs, read_one_struct_field)\n+\t(read_enum_type): Use obstack_strndup.\n+\t* rust-exp.y (rust_parser::copy_name): Use obstack_strndup.\n+\t* gdb_obstack.h (obstack_strndup): Use obstack_strndup.\n+\t* dwarf2read.c (guess_full_die_structure_name)\n+\t(anonymous_struct_prefix): Use obstack_strndup.\n+\t* dbxread.c (cp_set_block_scope): Use obstack_strndup.\n+\t* c-exp.y (yylex): Use obstack_strndup.\n+\t* ada-exp.y (write_object_renaming, write_ambiguous_var)\n+\t(write_var_or_type): Use obstack_strndup.\n+\n 2019-08-06  Tom Tromey  <tom@tromey.com>\n \n \t* symfile.c (reread_symbols): Use obstack_strdup."
    },
    {
      "sha": "f36aabaf15001a3dcc796f8521bcf14bb98d5807",
      "filename": "gdb/ada-exp.y",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/ada-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/ada-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-exp.y?ref=0cf9feb996cb32939840b13073a49310b1fd71e0",
      "patch": "@@ -812,8 +812,8 @@ write_object_renaming (struct parser_state *par_state,\n   if (orig_left_context == NULL)\n     orig_left_context = get_selected_block (NULL);\n \n-  name = (char *) obstack_copy0 (&temp_parse_space, renamed_entity,\n-\t\t\t\t renamed_entity_len);\n+  name = obstack_strndup (&temp_parse_space, renamed_entity,\n+\t\t\t  renamed_entity_len);\n   ada_lookup_encoded_symbol (name, orig_left_context, VAR_DOMAIN, &sym_info);\n   if (sym_info.symbol == NULL)\n     error (_(\"Could not find renamed variable: %s\"), ada_decode (name));\n@@ -881,9 +881,8 @@ write_object_renaming (struct parser_state *par_state,\n \t    if (end == NULL)\n \t      end = renaming_expr + strlen (renaming_expr);\n \n-\t    index_name\n-\t      = (char *) obstack_copy0 (&temp_parse_space, renaming_expr,\n-\t\t\t\t\tend - renaming_expr);\n+\t    index_name = obstack_strndup (&temp_parse_space, renaming_expr,\n+\t\t\t\t\t  end - renaming_expr);\n \t    renaming_expr = end;\n \n \t    ada_lookup_encoded_symbol (index_name, orig_left_context,\n@@ -1107,8 +1106,7 @@ write_ambiguous_var (struct parser_state *par_state,\n \n   memset (sym, 0, sizeof (struct symbol));\n   SYMBOL_DOMAIN (sym) = UNDEF_DOMAIN;\n-  SYMBOL_LINKAGE_NAME (sym)\n-    = (const char *) obstack_copy0 (&temp_parse_space, name, len);\n+  SYMBOL_LINKAGE_NAME (sym) = obstack_strndup (&temp_parse_space, name, len);\n   SYMBOL_LANGUAGE (sym) = language_ada;\n \n   write_exp_elt_opcode (par_state, OP_VAR_VALUE);\n@@ -1206,8 +1204,7 @@ write_var_or_type (struct parser_state *par_state,\n \n   encoded_name = ada_encode (name0.ptr);\n   name_len = strlen (encoded_name);\n-  encoded_name\n-    = (char *) obstack_copy0 (&temp_parse_space, encoded_name, name_len);\n+  encoded_name = obstack_strndup (&temp_parse_space, encoded_name, name_len);\n   for (depth = 0; depth < MAX_RENAMING_CHAIN_LENGTH; depth += 1)\n     {\n       int tail_index;"
    },
    {
      "sha": "e0abbd83ddb0ef32c4e99a2ea812313cf8ef721f",
      "filename": "gdb/c-exp.y",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/c-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/c-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-exp.y?ref=0cf9feb996cb32939840b13073a49310b1fd71e0",
      "patch": "@@ -3291,9 +3291,9 @@ yylex (void)\n   if (checkpoint > 0)\n     {\n       current.value.sval.ptr\n-\t= (const char *) obstack_copy0 (&cpstate->expansion_obstack,\n-\t\t\t\t\tcurrent.value.sval.ptr,\n-\t\t\t\t\tcurrent.value.sval.length);\n+\t= obstack_strndup (&cpstate->expansion_obstack,\n+\t\t\t   current.value.sval.ptr,\n+\t\t\t   current.value.sval.length);\n \n       token_fifo[0] = current;\n       if (checkpoint > 1)"
    },
    {
      "sha": "e339d1f7ecfaff594b0393080e38b7b7e8a77b61",
      "filename": "gdb/dbxread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/dbxread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/dbxread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dbxread.c?ref=0cf9feb996cb32939840b13073a49310b1fd71e0",
      "patch": "@@ -2354,8 +2354,7 @@ cp_set_block_scope (const struct symbol *symbol,\n       const char *name = SYMBOL_DEMANGLED_NAME (symbol);\n       unsigned int prefix_len = cp_entire_prefix_len (name);\n \n-      block_set_scope (block,\n-\t\t       (const char *) obstack_copy0 (obstack, name, prefix_len),\n+      block_set_scope (block, obstack_strndup (obstack, name, prefix_len),\n \t\t       obstack);\n     }\n }"
    },
    {
      "sha": "1c26f8355f53e218a7a1fc2a10c944e0c5320ebe",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=0cf9feb996cb32939840b13073a49310b1fd71e0",
      "patch": "@@ -22334,7 +22334,7 @@ guess_full_die_structure_name (struct die_info *die, struct dwarf2_cu *cu)\n \t\t      if (actual_name_len > die_name_len + 2\n \t\t\t  && actual_name[actual_name_len\n \t\t\t\t\t - die_name_len - 1] == ':')\n-\t\t\tname = (char *) obstack_copy0 (\n+\t\t\tname = obstack_strndup (\n \t\t\t  &objfile->per_bfd->storage_obstack,\n \t\t\t  actual_name, actual_name_len - die_name_len - 2);\n \t\t    }\n@@ -22378,9 +22378,9 @@ anonymous_struct_prefix (struct die_info *die, struct dwarf2_cu *cu)\n     return \"\";\n \n   struct objfile *objfile = cu->per_cu->dwarf2_per_objfile->objfile;\n-  return (char *) obstack_copy0 (&objfile->per_bfd->storage_obstack,\n-\t\t\t\t DW_STRING (attr),\n-\t\t\t\t &base[-1] - DW_STRING (attr));\n+  return obstack_strndup (&objfile->per_bfd->storage_obstack,\n+\t\t\t  DW_STRING (attr),\n+\t\t\t  &base[-1] - DW_STRING (attr));\n }\n \n /* Return the name of the namespace/class that DIE is defined within,"
    },
    {
      "sha": "3d6a01099fe6599412968c909428776d4bf2f293",
      "filename": "gdb/gdb_obstack.h",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/gdb_obstack.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/gdb_obstack.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdb_obstack.h?ref=0cf9feb996cb32939840b13073a49310b1fd71e0",
      "patch": "@@ -105,6 +105,17 @@ obstack_strdup (struct obstack *obstackp, const std::string &string)\n \t\t\t\t string.size ());\n }\n \n+/* Duplicate the first N characters of STRING, returning a\n+   \\0-terminated string that's allocated on the obstack OBSTACKP.\n+   Note that exactly N characters are copied, even if STRING is\n+   shorter.  */\n+\n+static inline char *\n+obstack_strndup (struct obstack *obstackp, const char *string, size_t n)\n+{\n+  return (char *) obstack_copy0 (obstackp, string, n);\n+}\n+\n /* An obstack that frees itself on scope exit.  */\n struct auto_obstack : obstack\n {"
    },
    {
      "sha": "60ce2cde057f21e64d6c357e1f4c981bdc964814",
      "filename": "gdb/rust-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/rust-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/rust-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-exp.y?ref=0cf9feb996cb32939840b13073a49310b1fd71e0",
      "patch": "@@ -1011,7 +1011,7 @@ static const struct token_info operator_tokens[] =\n const char *\n rust_parser::copy_name (const char *name, int len)\n {\n-  return (const char *) obstack_copy0 (&obstack, name, len);\n+  return obstack_strndup (&obstack, name, len);\n }\n \n /* Helper function to make an stoken from a C string.  */"
    },
    {
      "sha": "48c88ded55374298b96da0543fd71198a24285fc",
      "filename": "gdb/stabsread.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/stabsread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cf9feb996cb32939840b13073a49310b1fd71e0/gdb/stabsread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stabsread.c?ref=0cf9feb996cb32939840b13073a49310b1fd71e0",
      "patch": "@@ -426,8 +426,8 @@ patch_block_stabs (struct pending *symbols, struct pending_stabs *stabs,\n \t      SYMBOL_DOMAIN (sym) = VAR_DOMAIN;\n \t      SYMBOL_ACLASS_INDEX (sym) = LOC_OPTIMIZED_OUT;\n \t      SYMBOL_SET_LINKAGE_NAME\n-\t\t(sym, (char *) obstack_copy0 (&objfile->objfile_obstack,\n-\t\t\t\t\t      name, pp - name));\n+\t\t(sym, obstack_strndup (&objfile->objfile_obstack,\n+\t\t\t\t       name, pp - name));\n \t      pp += 2;\n \t      if (*(pp - 1) == 'F' || *(pp - 1) == 'f')\n \t\t{\n@@ -2841,7 +2841,7 @@ read_one_struct_field (struct stab_field_info *fip, const char **pp,\n   struct gdbarch *gdbarch = get_objfile_arch (objfile);\n \n   fip->list->field.name\n-    = (const char *) obstack_copy0 (&objfile->objfile_obstack, *pp, p - *pp);\n+    = obstack_strndup (&objfile->objfile_obstack, *pp, p - *pp);\n   *pp = p + 1;\n \n   /* This means we have a visibility for a field coming.  */\n@@ -3641,7 +3641,7 @@ read_enum_type (const char **pp, struct type *type,\n       p = *pp;\n       while (*p != ':')\n \tp++;\n-      name = (char *) obstack_copy0 (&objfile->objfile_obstack, *pp, p - *pp);\n+      name = obstack_strndup (&objfile->objfile_obstack, *pp, p - *pp);\n       *pp = p + 1;\n       n = read_huge_number (pp, ',', &nbits, 0);\n       if (nbits != 0)"
    }
  ]
}