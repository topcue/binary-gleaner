{
  "sha": "70125a45e426167957fc5c5255e7a1e381d688f9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzAxMjVhNDVlNDI2MTY3OTU3ZmM1YzUyNTVlN2ExZTM4MWQ2ODhmOQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-11-19T15:34:57Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-11-19T15:34:57Z"
    },
    "message": "gdb: remove `other` parameter in read_core_file_mappings parameter\n\nThe `void *other` parameter in read_core_file_mappings' loop_cb\nparameter is never used, remove it.\n\ngdb/ChangeLog:\n\n\t* gdbarch.sh (read_core_file_mappings): Remove `other` parameter\n\tin `loop_cb` parameter.\n\t* gdbarch.c: Re-generate.\n\t* gdbarch.h: Re-generate.\n\t* arch-utils.c (default_read_core_file_mappings): Remove `other`\n\tparameter.\n\t* arch-utils.h (default_read_core_file_mappings): Likewise.\n\t* corelow.c (core_target::build_file_mappings): Likewise.\n\t* linux-tdep.c (linux_read_core_file_mappings): Likewise.\n\t(linux_core_info_proc_mappings): Likewise.\n\nChange-Id: I6f408b4962b61b8a603642a844772b3026625523",
    "tree": {
      "sha": "5f978969b391b3f45a31577e71c71caf7fd5248e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5f978969b391b3f45a31577e71c71caf7fd5248e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/70125a45e426167957fc5c5255e7a1e381d688f9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/70125a45e426167957fc5c5255e7a1e381d688f9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/70125a45e426167957fc5c5255e7a1e381d688f9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/70125a45e426167957fc5c5255e7a1e381d688f9/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a5c641b57b0b5e245b8a011cccc93a4120c8bd63",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a5c641b57b0b5e245b8a011cccc93a4120c8bd63",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a5c641b57b0b5e245b8a011cccc93a4120c8bd63"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 23,
    "deletions": 13
  },
  "files": [
    {
      "sha": "d0a0031a538d35aff46f6aaf6ef64763ed0d801b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=70125a45e426167957fc5c5255e7a1e381d688f9",
      "patch": "@@ -1,3 +1,16 @@\n+2020-11-19  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* gdbarch.sh (read_core_file_mappings): Remove `other` parameter\n+\tin `loop_cb` parameter.\n+\t* gdbarch.c: Re-generate.\n+\t* gdbarch.h: Re-generate.\n+\t* arch-utils.c (default_read_core_file_mappings): Remove `other`\n+\tparameter.\n+\t* arch-utils.h (default_read_core_file_mappings): Likewise.\n+\t* corelow.c (core_target::build_file_mappings): Likewise.\n+\t* linux-tdep.c (linux_read_core_file_mappings): Likewise.\n+\t(linux_core_info_proc_mappings): Likewise.\n+\n 2020-11-19  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* Makefile.in (HFILES_NO_SRCDIR): Add f-array-walker.h."
    },
    {
      "sha": "2786544d22d973a5c73d82ec39e6509d40b5c764",
      "filename": "gdb/arch-utils.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/arch-utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/arch-utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch-utils.c?ref=70125a45e426167957fc5c5255e7a1e381d688f9",
      "patch": "@@ -1045,8 +1045,7 @@ default_read_core_file_mappings (struct gdbarch *gdbarch,\n \t\t\t\t\t\t\t  ULONGEST start,\n \t\t\t\t\t\t\t  ULONGEST end,\n \t\t\t\t\t\t\t  ULONGEST file_ofs,\n-\t\t\t\t\t\t\t  const char *filename,\n-\t\t\t\t\t\t\t  const void *other)>\n+\t\t\t\t\t\t\t  const char *filename)>\n \t\t\t\t   loop_cb)\n {\n }"
    },
    {
      "sha": "c9589e1f3adab681982f30f273d2a3ba90bd9487",
      "filename": "gdb/arch-utils.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/arch-utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/arch-utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch-utils.h?ref=70125a45e426167957fc5c5255e7a1e381d688f9",
      "patch": "@@ -287,7 +287,6 @@ extern void default_read_core_file_mappings (struct gdbarch *gdbarch,\n \t\t\t\t\t\t\t\t      ULONGEST start,\n \t\t\t\t\t\t\t\t      ULONGEST end,\n \t\t\t\t\t\t\t\t      ULONGEST file_ofs,\n-\t\t\t\t\t\t\t\t      const char *filename,\n-\t\t\t\t\t\t\t\t      const void *other)>\n+\t\t\t\t\t\t\t\t      const char *filename)>\n \t\t\t\t\t       loop_cb);\n #endif /* ARCH_UTILS_H */"
    },
    {
      "sha": "4c1f068053d85611fd2891030268f92d61b79dc6",
      "filename": "gdb/corelow.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/corelow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/corelow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/corelow.c?ref=70125a45e426167957fc5c5255e7a1e381d688f9",
      "patch": "@@ -199,7 +199,7 @@ core_target::build_file_mappings ()\n     /* read_core_file_mappings will invoke this lambda for each mapping\n        that it finds.  */\n     [&] (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs,\n-\t const char *filename, const void *other)\n+\t const char *filename)\n       {\n \t/* Architecture-specific read_core_mapping methods are expected to\n \t   weed out non-file-backed mappings.  */"
    },
    {
      "sha": "cd9341132ef1a883dcb4d7d117d7bfb4331cf9b3",
      "filename": "gdb/gdbarch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/gdbarch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/gdbarch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.c?ref=70125a45e426167957fc5c5255e7a1e381d688f9",
      "patch": "@@ -5189,7 +5189,7 @@ set_gdbarch_get_pc_address_flags (struct gdbarch *gdbarch,\n }\n \n void\n-gdbarch_read_core_file_mappings (struct gdbarch *gdbarch, struct bfd *cbfd,gdb::function_view<void (ULONGEST count)> pre_loop_cb,gdb::function_view<void (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs, const char *filename, const void *other)> loop_cb)\n+gdbarch_read_core_file_mappings (struct gdbarch *gdbarch, struct bfd *cbfd, gdb::function_view<void (ULONGEST count)> pre_loop_cb, gdb::function_view<void (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs, const char *filename)> loop_cb)\n {\n   gdb_assert (gdbarch != NULL);\n   gdb_assert (gdbarch->read_core_file_mappings != NULL);"
    },
    {
      "sha": "70bd8a6b442834d80c0b38bd33f926137d6b8277",
      "filename": "gdb/gdbarch.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/gdbarch.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/gdbarch.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.h?ref=70125a45e426167957fc5c5255e7a1e381d688f9",
      "patch": "@@ -1634,8 +1634,8 @@ extern void set_gdbarch_get_pc_address_flags (struct gdbarch *gdbarch, gdbarch_g\n \n /* Read core file mappings */\n \n-typedef void (gdbarch_read_core_file_mappings_ftype) (struct gdbarch *gdbarch, struct bfd *cbfd,gdb::function_view<void (ULONGEST count)> pre_loop_cb,gdb::function_view<void (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs, const char *filename, const void *other)> loop_cb);\n-extern void gdbarch_read_core_file_mappings (struct gdbarch *gdbarch, struct bfd *cbfd,gdb::function_view<void (ULONGEST count)> pre_loop_cb,gdb::function_view<void (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs, const char *filename, const void *other)> loop_cb);\n+typedef void (gdbarch_read_core_file_mappings_ftype) (struct gdbarch *gdbarch, struct bfd *cbfd, gdb::function_view<void (ULONGEST count)> pre_loop_cb, gdb::function_view<void (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs, const char *filename)> loop_cb);\n+extern void gdbarch_read_core_file_mappings (struct gdbarch *gdbarch, struct bfd *cbfd, gdb::function_view<void (ULONGEST count)> pre_loop_cb, gdb::function_view<void (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs, const char *filename)> loop_cb);\n extern void set_gdbarch_read_core_file_mappings (struct gdbarch *gdbarch, gdbarch_read_core_file_mappings_ftype *read_core_file_mappings);\n \n extern struct gdbarch_tdep *gdbarch_tdep (struct gdbarch *gdbarch);"
    },
    {
      "sha": "86f2c798e32b97b320489ff8d4f15ffe04cb4e53",
      "filename": "gdb/gdbarch.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/gdbarch.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/gdbarch.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.sh?ref=70125a45e426167957fc5c5255e7a1e381d688f9",
      "patch": "@@ -1178,7 +1178,7 @@ m;ULONGEST;type_align;struct type *type;type;;default_type_align;;0\n f;std::string;get_pc_address_flags;frame_info *frame, CORE_ADDR pc;frame, pc;;default_get_pc_address_flags;;0\n \n # Read core file mappings\n-m;void;read_core_file_mappings;struct bfd *cbfd,gdb::function_view<void (ULONGEST count)> pre_loop_cb,gdb::function_view<void (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs, const char *filename, const void *other)> loop_cb;cbfd, pre_loop_cb, loop_cb;;default_read_core_file_mappings;;0\n+m;void;read_core_file_mappings;struct bfd *cbfd, gdb::function_view<void (ULONGEST count)> pre_loop_cb, gdb::function_view<void (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs, const char *filename)> loop_cb;cbfd, pre_loop_cb, loop_cb;;default_read_core_file_mappings;;0\n \n EOF\n }"
    },
    {
      "sha": "a651d1b26517cd65fa15390e25d80f4c1630d2a9",
      "filename": "gdb/linux-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70125a45e426167957fc5c5255e7a1e381d688f9/gdb/linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-tdep.c?ref=70125a45e426167957fc5c5255e7a1e381d688f9",
      "patch": "@@ -1072,8 +1072,7 @@ linux_read_core_file_mappings (struct gdbarch *gdbarch,\n \t\t\t\t\t\t\tULONGEST start,\n \t\t\t\t\t\t\tULONGEST end,\n \t\t\t\t\t\t\tULONGEST file_ofs,\n-\t\t\t\t\t\t\tconst char *filename,\n-\t\t\t\t\t\t\tconst void *other)>\n+\t\t\t\t\t\t\tconst char *filename)>\n \t\t\t\t loop_cb)\n {\n   /* Ensure that ULONGEST is big enough for reading 64-bit core files.  */\n@@ -1157,7 +1156,7 @@ linux_read_core_file_mappings (struct gdbarch *gdbarch,\n       char * filename = filenames;\n       filenames += strlen ((char *) filenames) + 1;\n \n-      loop_cb (i, start, end, file_ofs, filename, nullptr);\n+      loop_cb (i, start, end, file_ofs, filename);\n     }\n }\n \n@@ -1186,7 +1185,7 @@ linux_core_info_proc_mappings (struct gdbarch *gdbarch, const char *args)\n \t  }\n       },\n     [=] (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs,\n-\t const char *filename, const void *other)\n+\t const char *filename)\n       {\n \tif (gdbarch_addr_bit (gdbarch) == 32)\n \t  printf_filtered (\"\\t%10s %10s %10s %10s %s\\n\","
    }
  ]
}