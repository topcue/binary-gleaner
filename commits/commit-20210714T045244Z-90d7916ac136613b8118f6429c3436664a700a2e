{
  "sha": "90d7916ac136613b8118f6429c3436664a700a2e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTBkNzkxNmFjMTM2NjEzYjgxMThmNjQyOWMzNDM2NjY0YTcwMGEyZQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-07-14T04:52:44Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-07-14T04:52:44Z"
    },
    "message": "[gdb/testsuite] Add missing skip_tui_tests\n\nWhen building gdb with --disable-tui, we run into:\n...\n(gdb) frame apply all -- -^M\nUndefined command: \"-\".  Try \"help\".^M\n(gdb) ERROR: Undefined command \"frame apply all -- -\".\nUNRESOLVED: gdb.base/options.exp: test-frame-apply: frame apply all -- -\n...\n\nFix this by detecting whether tui is supported, and skipping the tui-related\ntests otherwise.  Same in some gdb.tui test-cases.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2021-07-13  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/options.exp: Skip tui-related tests when tui is not\n\tsupported.\n\t* gdb.python/tui-window-disabled.exp: Same.\n\t* gdb.python/tui-window.exp: Same.",
    "tree": {
      "sha": "411efcd0b35c82d5ce9d32357005468ca5cecd25",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/411efcd0b35c82d5ce9d32357005468ca5cecd25"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/90d7916ac136613b8118f6429c3436664a700a2e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90d7916ac136613b8118f6429c3436664a700a2e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/90d7916ac136613b8118f6429c3436664a700a2e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90d7916ac136613b8118f6429c3436664a700a2e/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fac3b6a2e04f7feeefbf425c3798c34d134752d6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fac3b6a2e04f7feeefbf425c3798c34d134752d6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fac3b6a2e04f7feeefbf425c3798c34d134752d6"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 31,
    "deletions": 12
  },
  "files": [
    {
      "sha": "6b48a0f4a4b700678791decdee94fc9f53d6da9c",
      "filename": "gdb/testsuite/gdb.base/options.exp",
      "status": "modified",
      "additions": 21,
      "deletions": 12,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90d7916ac136613b8118f6429c3436664a700a2e/gdb/testsuite/gdb.base/options.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90d7916ac136613b8118f6429c3436664a700a2e/gdb/testsuite/gdb.base/options.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/options.exp?ref=90d7916ac136613b8118f6429c3436664a700a2e",
      "patch": "@@ -46,6 +46,8 @@ if { ![readline_is_used] } {\n     return -1\n }\n \n+set tui_supported_p [expr ![skip_tui_tests]]\n+\n # Check the completion result, as returned by the \"maintenance show\n # test-options-completion-result\" command.  TEST is used as test name.\n proc check_completion_result {expected test} {\n@@ -320,6 +322,8 @@ proc_with_prefix test-backtrace {} {\n \n # Basic option-machinery + \"frame apply\" command integration tests.\n proc_with_prefix test-frame-apply {} {\n+    global tui_supported_p\n+\n     test_gdb_complete_unique \"frame apply all\" \"frame apply all\"\n \n     gdb_test \"frame apply level 0-\" \\\n@@ -376,12 +380,14 @@ proc_with_prefix test-frame-apply {} {\n \t    test_gdb_completion_offers_commands \"$cmd -- \"\n \t}\n \n-\t# '-' is a valid TUI command.\n-\ttest_error_cmd2 $cmd \" -- -\" \\\n-\t    \"Cannot enable the TUI when output is not a terminal\"\n-\ttest_gdb_complete_unique \\\n-\t    \"$cmd -- -\" \\\n-\t    \"$cmd -- -\"\n+\tif { $tui_supported_p } {\n+\t    # '-' is a valid TUI command.\n+\t    test_error_cmd2 $cmd \" -- -\" \\\n+\t\t\"Cannot enable the TUI when output is not a terminal\"\n+\t    test_gdb_complete_unique \\\n+\t\t\"$cmd -- -\" \\\n+\t\t\"$cmd -- -\"\n+\t}\n \n \ttest_error_cmd2 $cmd \" -foo\" \\\n \t    \"Undefined command: \\\"-foo\\\".  Try \\\"help\\\"\\\\.\"\n@@ -393,6 +399,7 @@ proc_with_prefix test-frame-apply {} {\n \n # Basic option-machinery + \"thread apply\" command integration tests.\n proc_with_prefix test-thread-apply {} {\n+    global tui_supported_p\n \n     test_gdb_complete_unique \"thread apply all\" \"thread apply all\"\n     test_gdb_complete_unique \"taas\" \"taas\"\n@@ -457,12 +464,14 @@ proc_with_prefix test-thread-apply {} {\n \t    test_gdb_completion_offers_commands \"$cmd -- \"\n \t}\n \n-\t# '-' is a valid TUI command.\n-\ttest_invalid_cmd \"$cmd\" \" -- -\" \\\n-\t    \"Cannot enable the TUI when output is not a terminal\"\n-\ttest_gdb_complete_unique \\\n-\t    \"$cmd -- -\" \\\n-\t    \"$cmd -- -\"\n+\tif { $tui_supported_p } {\n+\t    # '-' is a valid TUI command.\n+\t    test_invalid_cmd \"$cmd\" \" -- -\" \\\n+\t\t\"Cannot enable the TUI when output is not a terminal\"\n+\t    test_gdb_complete_unique \\\n+\t\t\"$cmd -- -\" \\\n+\t\t\"$cmd -- -\"\n+\t}\n \n \ttest_invalid_cmd $cmd \" -foo\" \\\n \t    \"Undefined command: \\\"-foo\\\".  Try \\\"help\\\"\\\\.\""
    },
    {
      "sha": "f43530bb64aab4ceea6205d0d1a96b14b463570f",
      "filename": "gdb/testsuite/gdb.python/tui-window-disabled.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90d7916ac136613b8118f6429c3436664a700a2e/gdb/testsuite/gdb.python/tui-window-disabled.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90d7916ac136613b8118f6429c3436664a700a2e/gdb/testsuite/gdb.python/tui-window-disabled.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/tui-window-disabled.exp?ref=90d7916ac136613b8118f6429c3436664a700a2e",
      "patch": "@@ -30,6 +30,11 @@ if {[build_executable \"failed to prepare\" ${testfile} ${srcfile}] == -1} {\n     return -1\n }\n \n+clean_restart\n+if {[skip_tui_tests]} {\n+    return\n+}\n+\n # Copy the Python script to where the tests are being run.\n set remote_python_file [gdb_remote_download host \\\n \t\t\t    ${srcdir}/${subdir}/${testfile}.py]"
    },
    {
      "sha": "4710dd67f43c20d01b53cd40bc83da82b7cf3356",
      "filename": "gdb/testsuite/gdb.python/tui-window.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90d7916ac136613b8118f6429c3436664a700a2e/gdb/testsuite/gdb.python/tui-window.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90d7916ac136613b8118f6429c3436664a700a2e/gdb/testsuite/gdb.python/tui-window.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/tui-window.exp?ref=90d7916ac136613b8118f6429c3436664a700a2e",
      "patch": "@@ -25,6 +25,11 @@ if {[build_executable \"failed to prepare\" ${testfile} ${srcfile}] == -1} {\n     return -1\n }\n \n+clean_restart\n+if {[skip_tui_tests]} {\n+    return\n+}\n+\n Term::clean_restart 24 80 $testfile\n \n # Skip all tests if Python scripting is not enabled."
    }
  ]
}