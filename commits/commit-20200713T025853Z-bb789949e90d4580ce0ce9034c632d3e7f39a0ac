{
  "sha": "bb789949e90d4580ce0ce9034c632d3e7f39a0ac",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmI3ODk5NDllOTBkNDU4MGNlMGNlOTAzNGM2MzJkM2U3ZjM5YTBhYw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-07-13T02:58:53Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-07-13T02:58:53Z"
    },
    "message": "gdb: remove TYPE_ARRAY_{LOWER,UPPER}_BOUND_VALUE\n\nRemove the macros, use the various equivalent getters instead.\n\ngdb/ChangeLog:\n\n\t* gdbtypes.h (TYPE_ARRAY_LOWER_BOUND_VALUE,\n\tTYPE_ARRAY_UPPER_BOUND_VALUE): Remove.  Update all\n\tcallers to use the equivalent accessor methods instead.\n\nChange-Id: I7f96d988f872170e7a2f58095832710e62b85cfd",
    "tree": {
      "sha": "42a4e88c0c35addf4a1aa86c2a0fa54a716548bd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/42a4e88c0c35addf4a1aa86c2a0fa54a716548bd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bb789949e90d4580ce0ce9034c632d3e7f39a0ac",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb789949e90d4580ce0ce9034c632d3e7f39a0ac",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bb789949e90d4580ce0ce9034c632d3e7f39a0ac",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb789949e90d4580ce0ce9034c632d3e7f39a0ac/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "39498edbc850409c332dd5be60a82d1bf704bc8f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/39498edbc850409c332dd5be60a82d1bf704bc8f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/39498edbc850409c332dd5be60a82d1bf704bc8f"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 12,
    "deletions": 12
  },
  "files": [
    {
      "sha": "ab2b777807520ad1be3fab81483830362bfbedb3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb789949e90d4580ce0ce9034c632d3e7f39a0ac/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb789949e90d4580ce0ce9034c632d3e7f39a0ac/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bb789949e90d4580ce0ce9034c632d3e7f39a0ac",
      "patch": "@@ -1,3 +1,9 @@\n+2020-07-12  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbtypes.h (TYPE_ARRAY_LOWER_BOUND_VALUE,\n+\tTYPE_ARRAY_UPPER_BOUND_VALUE): Remove.  Update all\n+\tcallers to use the equivalent accessor methods instead.\n+\n 2020-07-12  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbtypes.h (TYPE_ARRAY_UPPER_BOUND_IS_UNDEFINED,"
    },
    {
      "sha": "3d85a5a014d4692973b0f7b09d8d10651109e0c8",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb789949e90d4580ce0ce9034c632d3e7f39a0ac/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb789949e90d4580ce0ce9034c632d3e7f39a0ac/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=bb789949e90d4580ce0ce9034c632d3e7f39a0ac",
      "patch": "@@ -9492,8 +9492,8 @@ assign_aggregate (struct value *container,\n     {\n       lhs = ada_coerce_to_simple_array (lhs);\n       lhs_type = check_typedef (value_type (lhs));\n-      low_index = TYPE_ARRAY_LOWER_BOUND_VALUE (lhs_type);\n-      high_index = TYPE_ARRAY_UPPER_BOUND_VALUE (lhs_type);\n+      low_index = lhs_type->index_type ()->bounds ()->low.const_val ();\n+      high_index = lhs_type->index_type ()->bounds ()->high.const_val ();\n     }\n   else if (lhs_type->code () == TYPE_CODE_STRUCT)\n     {"
    },
    {
      "sha": "bda48037651025cd66bae8e1616e78c55c1a912b",
      "filename": "gdb/f-valprint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb789949e90d4580ce0ce9034c632d3e7f39a0ac/gdb/f-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb789949e90d4580ce0ce9034c632d3e7f39a0ac/gdb/f-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-valprint.c?ref=bb789949e90d4580ce0ce9034c632d3e7f39a0ac",
      "patch": "@@ -49,7 +49,7 @@ f77_get_lowerbound (struct type *type)\n   if (type->index_type ()->bounds ()->low.kind () == PROP_UNDEFINED)\n     error (_(\"Lower bound may not be '*' in F77\"));\n \n-  return TYPE_ARRAY_LOWER_BOUND_VALUE (type);\n+  return type->index_type ()->bounds ()->low.const_val ();\n }\n \n LONGEST\n@@ -65,7 +65,7 @@ f77_get_upperbound (struct type *type)\n       return f77_get_lowerbound (type);\n     }\n \n-  return TYPE_ARRAY_UPPER_BOUND_VALUE (type);\n+  return type->index_type ()->bounds ()->high.const_val ();\n }\n \n /* Obtain F77 adjustable array dimensions.  */"
    },
    {
      "sha": "26db7935f2651d89d016dc79039a07adb9c3ec1f",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb789949e90d4580ce0ce9034c632d3e7f39a0ac/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb789949e90d4580ce0ce9034c632d3e7f39a0ac/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=bb789949e90d4580ce0ce9034c632d3e7f39a0ac",
      "patch": "@@ -1628,12 +1628,6 @@ extern bool set_type_align (struct type *, ULONGEST);\n /* Accessors for struct range_bounds data attached to an array type's\n    index type.  */\n \n-#define TYPE_ARRAY_UPPER_BOUND_VALUE(arraytype) \\\n-   ((arraytype)->index_type ()->bounds ()->high.const_val ())\n-\n-#define TYPE_ARRAY_LOWER_BOUND_VALUE(arraytype) \\\n-   ((arraytype)->index_type ()->bounds ()->low.const_val ())\n-\n #define TYPE_ARRAY_BIT_STRIDE(arraytype) \\\n   (TYPE_BIT_STRIDE(((arraytype)->index_type ())))\n "
    },
    {
      "sha": "d52358aa4bb4526c18135eca1cceeea92ddd2dc5",
      "filename": "gdb/p-typeprint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb789949e90d4580ce0ce9034c632d3e7f39a0ac/gdb/p-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb789949e90d4580ce0ce9034c632d3e7f39a0ac/gdb/p-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-typeprint.c?ref=bb789949e90d4580ce0ce9034c632d3e7f39a0ac",
      "patch": "@@ -276,8 +276,8 @@ pascal_type_print_varspec_prefix (struct type *type, struct ui_file *stream,\n       if (TYPE_LENGTH (TYPE_TARGET_TYPE (type)) > 0\n \t  && type->index_type ()->bounds ()->high.kind () != PROP_UNDEFINED)\n \tfprintf_filtered (stream, \"[%s..%s] \",\n-\t\t\t  plongest (TYPE_ARRAY_LOWER_BOUND_VALUE (type)),\n-\t\t\t  plongest (TYPE_ARRAY_UPPER_BOUND_VALUE (type)));\n+\t\t\t  plongest (type->index_type ()->bounds ()->low.const_val ()),\n+\t\t\t  plongest (type->index_type ()->bounds ()->high.const_val ()));\n       fprintf_filtered (stream, \"of \");\n       break;\n "
    }
  ]
}