{
  "sha": "b634d11d61e3236f4602e9461dba67d1320f65e3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjYzNGQxMWQ2MWUzMjM2ZjQ2MDJlOTQ2MWRiYTY3ZDEzMjBmNjVlMw==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-01-13T14:48:07Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-01-13T14:48:20Z"
    },
    "message": "ld: Check for ELF input before accessing ELF section data\n\ncommit b209b5a6b8a accesses ELF section data without checking if input is\nELF.  It caused:\n\nsh: line 1: 1355479 Segmentation fault      (core dumped) /export/build/gnu/tools-build/binutils-gitlab-x32/build-x86_64-linux-gnux32/ld/ld-new -o tmpdir/pe-x86-64-1 -z norelro -L/export/gnu/import/git/gitlab/x86-binutils/ld/testsuite/ld-x86-64 -m elf_x86_64 --entry=begin tmpdir/pe-x86-64-1a.obj tmpdir/pe-x86-64-1b.obj tmpdir/pe-x86-64-1c.obj 2>&1\nFAIL: Build pe-x86-64-1\n\non Linux/x86-64 with PE/x86-64 inputs.  Add check for ELF input before\naccessing ELF section data.\n\n\t* ldelfgen.c (add_link_order_input_section): Check for ELF input\n\tbefore accessing ELF section data.",
    "tree": {
      "sha": "37f33ef6d13473a3bbe4604419104398138fe0de",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/37f33ef6d13473a3bbe4604419104398138fe0de"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b634d11d61e3236f4602e9461dba67d1320f65e3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b634d11d61e3236f4602e9461dba67d1320f65e3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b634d11d61e3236f4602e9461dba67d1320f65e3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b634d11d61e3236f4602e9461dba67d1320f65e3/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "844bf810cf9feebe50772c29d72256ec3c872270",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/844bf810cf9feebe50772c29d72256ec3c872270",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/844bf810cf9feebe50772c29d72256ec3c872270"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 7,
    "deletions": 1
  },
  "files": [
    {
      "sha": "2dad0b9878df46a730d810e8c52a062640135251",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b634d11d61e3236f4602e9461dba67d1320f65e3/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b634d11d61e3236f4602e9461dba67d1320f65e3/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=b634d11d61e3236f4602e9461dba67d1320f65e3",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* ldelfgen.c (add_link_order_input_section): Check for ELF input\n+\tbefore accessing ELF section data.\n+\n 2021-01-13  Alan Modra  <amodra@gmail.com>\n \n \t* Makefile.in: Regenerate."
    },
    {
      "sha": "47e7a2a68edae4eb05866a36a9204e9f8ed3de08",
      "filename": "ld/ldelfgen.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b634d11d61e3236f4602e9461dba67d1320f65e3/ld/ldelfgen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b634d11d61e3236f4602e9461dba67d1320f65e3/ld/ldelfgen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldelfgen.c?ref=b634d11d61e3236f4602e9461dba67d1320f65e3",
      "patch": "@@ -79,7 +79,8 @@ add_link_order_input_section (lang_input_section_type *is,\n   os_info->isec[os_info->count].idx = os_info->count;\n   os_info->count++;\n   s = is->section;\n-  if ((s->flags & SEC_LINKER_CREATED) == 0\n+  if (s->owner->xvec->flavour == bfd_target_elf_flavour\n+      && (s->flags & SEC_LINKER_CREATED) == 0\n       && elf_section_data (s) != NULL\n       && elf_linked_to_section (s) != NULL)\n     os_info->ordered++;"
    }
  ]
}