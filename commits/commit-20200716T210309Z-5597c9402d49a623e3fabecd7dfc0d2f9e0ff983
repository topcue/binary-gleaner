{
  "sha": "5597c9402d49a623e3fabecd7dfc0d2f9e0ff983",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTU5N2M5NDAyZDQ5YTYyM2UzZmFiZWNkN2RmYzBkMmY5ZTBmZjk4Mw==",
  "commit": {
    "author": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2020-07-16T21:03:09Z"
    },
    "committer": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2020-07-16T21:03:09Z"
    },
    "message": "Fix POSIX-isms in gdb.base/shell.exp\n\nSome recent tests added to gdb.base/shell.exp have been failing on\nWindows host due to assumptions that the shell is a POSIX variant.  On\nWindows, GDB uses CMD.EXE via the system() call to run shell commands\ninstead.\n\nThere seems to be no obvious CMD.EXE equivalent for \"kill -2 $$\" to\nsignal the shell process, so this patch skips those tests on Windows\nhost.  The second problem addressed here is that CMD.EXE only\nrecognizes double quotes, not single quotes; that change can be made\nunconditionally since POSIX shells recognize double quotes as well.\n\n2020-07-16  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgdb/testsuite/\n\t* gdb.base/shell.exp: Skip pipe tests dependent on sh on Windows host.\n\tUse double quotes instead of single quotes.",
    "tree": {
      "sha": "7fc3cee457f75ebe3716552189144928c3de85bc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7fc3cee457f75ebe3716552189144928c3de85bc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5597c9402d49a623e3fabecd7dfc0d2f9e0ff983",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5597c9402d49a623e3fabecd7dfc0d2f9e0ff983",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5597c9402d49a623e3fabecd7dfc0d2f9e0ff983",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5597c9402d49a623e3fabecd7dfc0d2f9e0ff983/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "d0ce17d8537fb51583891073abe18d5bb60c0c24",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d0ce17d8537fb51583891073abe18d5bb60c0c24",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d0ce17d8537fb51583891073abe18d5bb60c0c24"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 21,
    "deletions": 10
  },
  "files": [
    {
      "sha": "e20e0266970cdcd7cc298b512f09bd86d73369e5",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5597c9402d49a623e3fabecd7dfc0d2f9e0ff983/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5597c9402d49a623e3fabecd7dfc0d2f9e0ff983/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=5597c9402d49a623e3fabecd7dfc0d2f9e0ff983",
      "patch": "@@ -1,3 +1,8 @@\n+2020-07-16  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* gdb.base/shell.exp: Skip pipe tests dependent on sh on Windows host.\n+\tUse double quotes instead of single quotes.\n+\n 2020-07-16  Caroline Tice  <cmtice@google.com>\n \n \t* gdb.dwarf2/dw5-rnglist-test.cc: New file."
    },
    {
      "sha": "ad36f6b29df727fe91e42bfa3a7232b7c0a02c3c",
      "filename": "gdb/testsuite/gdb.base/shell.exp",
      "status": "modified",
      "additions": 16,
      "deletions": 10,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5597c9402d49a623e3fabecd7dfc0d2f9e0ff983/gdb/testsuite/gdb.base/shell.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5597c9402d49a623e3fabecd7dfc0d2f9e0ff983/gdb/testsuite/gdb.base/shell.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/shell.exp?ref=5597c9402d49a623e3fabecd7dfc0d2f9e0ff983",
      "patch": "@@ -34,9 +34,12 @@ gdb_test_no_output \"! exit 1\"\n gdb_test \"p \\$_shell_exitcode\" \" = 1\" \"shell fail exitcode\"\n gdb_test \"p \\$_shell_exitsignal\" \" = void\" \"shell fail exitsignal\"\n \n-gdb_test_no_output \"! kill -2 $$\"\n-gdb_test \"p \\$_shell_exitcode\" \" = void\" \"shell interrupt exitcode\"\n-gdb_test \"p \\$_shell_exitsignal\" \" = 2\" \"shell interrupt exitsignal\"\n+# This test will not work when the shell is CMD.EXE.\n+if { ! [ishost *-*-mingw*] } {\n+    gdb_test_no_output \"! kill -2 $$\"\n+    gdb_test \"p \\$_shell_exitcode\" \" = void\" \"shell interrupt exitcode\"\n+    gdb_test \"p \\$_shell_exitsignal\" \" = 2\" \"shell interrupt exitsignal\"\n+}\n \n # Define the user command \"foo\", used to test \"pipe\" command.\n gdb_test_multiple \"define foo\" \"define foo\" {\n@@ -67,16 +70,16 @@ gdb_test \"|foo|grep truc|wc -l\" \"1\" \"no space around pipe char\"\n gdb_test \"echo coucou\\\\n\" \"coucou\" \"echo coucou\"\n gdb_test \"||wc -l\" \"1\" \"repeat previous command\"\n \n-gdb_test \"| -d ! echo this contains a | character\\\\n ! sed -e 's/|/PIPE/'\" \\\n+gdb_test \"| -d ! echo this contains a | character\\\\n ! sed -e \\\"s/|/PIPE/\\\"\" \\\n     \"this contains a PIPE character\" \"alternate 1char delim\"\n \n-gdb_test \"|-d ! echo this contains a | character\\\\n!sed -e 's/|/PIPE/'\" \\\n+gdb_test \"|-d ! echo this contains a | character\\\\n!sed -e \\\"s/|/PIPE/\\\"\" \\\n     \"this contains a PIPE character\" \"alternate 1char delim, no space\"\n \n-gdb_test \"| -d !!! echo this contains a | character\\\\n !!! sed -e 's/|/PIPE/'\" \\\n+gdb_test \"| -d !!! echo this contains a | character\\\\n !!! sed -e \\\"s/|/PIPE/\\\"\" \\\n     \"this contains a PIPE character\" \"alternate 3char delim\"\n \n-gdb_test \"|-d !!! echo this contains a | character\\\\n!!!sed -e 's/|/PIPE/'\" \\\n+gdb_test \"|-d !!! echo this contains a | character\\\\n!!!sed -e \\\"s/|/PIPE/\\\"\" \\\n     \"this contains a PIPE character\" \"alternate 3char delim, no space\"\n \n # Convenience variables with pipe command.\n@@ -88,9 +91,12 @@ gdb_test \"|p 123| exit 1\" \"\"\n gdb_test \"p \\$_shell_exitcode\" \" = 1\" \"pipe fail exitcode\"\n gdb_test \"p \\$_shell_exitsignal\" \" = void\" \"pipe fail exitsignal\"\n \n-gdb_test \"|p 123| kill -2 $$\" \"\"\n-gdb_test \"p \\$_shell_exitcode\" \" = void\" \"pipe interrupt exitcode\"\n-gdb_test \"p \\$_shell_exitsignal\" \" = 2\" \"pipe interrupt exitsignal\"\n+# This test will not work when the shell is CMD.EXE.\n+if { ! [ishost *-*-mingw*] } {\n+    gdb_test \"|p 123| kill -2 $$\" \"\"\n+    gdb_test \"p \\$_shell_exitcode\" \" = void\" \"pipe interrupt exitcode\"\n+    gdb_test \"p \\$_shell_exitsignal\" \" = 2\" \"pipe interrupt exitsignal\"\n+}\n \n # Error handling verifications.\n gdb_test \"|\" \"Missing COMMAND\" \"all missing\""
    }
  ]
}