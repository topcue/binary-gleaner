{
  "sha": "dd9f2c763b325227a3721eaf4006db67b37f3b13",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGQ5ZjJjNzYzYjMyNTIyN2EzNzIxZWFmNDAwNmRiNjdiMzdmM2IxMw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-16T13:36:46Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-03-06T18:11:30Z"
    },
    "message": "gdb/fortran: Cleanup code for parsing logical constants\n\nThis patch cleans up the code used for parsing the Fortran logical\nconstants '.TRUE.' and '.FALSE.'.  Instead of listing both upper and\nlowercase versions of these strings we now use strncasecmp.\n\nI've also switched to use ARRAY_SIZE for the array iteration, and I've\ncleaned up whitespace in the vicinity of the code I've changed.\n\nFinally, I've added a test to ensure that both the upper and lower\ncase versions of the logical constants are understood by GDB,\nsomething that was missing previously.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* f-exp.y (struct f77_boolean_val): Add comments.\n\t(boolean_values): Remove uppercase versions, and end marker.\n\t(yylex): Use ARRAY_SIZE for iterating over boolean_values array,\n\tand use strncasecmp to achieve case insensitivity.  Additionally,\n\tperform whitespace cleanup around this code.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.fortran/types.exp (test_logical_literal_types_accepted):\n\tCheck upper and lower case logical literals.",
    "tree": {
      "sha": "f758a098af7793cdcb7be768e8148e94474fbe00",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f758a098af7793cdcb7be768e8148e94474fbe00"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dd9f2c763b325227a3721eaf4006db67b37f3b13",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd9f2c763b325227a3721eaf4006db67b37f3b13",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dd9f2c763b325227a3721eaf4006db67b37f3b13",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd9f2c763b325227a3721eaf4006db67b37f3b13/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "84ec972406ec519b509f986780481899115847c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/84ec972406ec519b509f986780481899115847c2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/84ec972406ec519b509f986780481899115847c2"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 36,
    "deletions": 17
  },
  "files": [
    {
      "sha": "25a22802c4818ca83848dec8c5445f3dc2eb4445",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9f2c763b325227a3721eaf4006db67b37f3b13/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9f2c763b325227a3721eaf4006db67b37f3b13/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=dd9f2c763b325227a3721eaf4006db67b37f3b13",
      "patch": "@@ -1,3 +1,11 @@\n+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* f-exp.y (struct f77_boolean_val): Add comments.\n+\t(boolean_values): Remove uppercase versions, and end marker.\n+\t(yylex): Use ARRAY_SIZE for iterating over boolean_values array,\n+\tand use strncasecmp to achieve case insensitivity.  Additionally,\n+\tperform whitespace cleanup around this code.\n+\n 2019-03-06  Tom Tromey  <tromey@adacore.com>\n \n \t* remote-sim.c (gdbsim_target_open): Use result of"
    },
    {
      "sha": "704585e63ae3bd38fffe46860608d0a8e47d9bbd",
      "filename": "gdb/f-exp.y",
      "status": "modified",
      "additions": 19,
      "deletions": 16,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9f2c763b325227a3721eaf4006db67b37f3b13/gdb/f-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9f2c763b325227a3721eaf4006db67b37f3b13/gdb/f-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-exp.y?ref=dd9f2c763b325227a3721eaf4006db67b37f3b13",
      "patch": "@@ -807,19 +807,22 @@ static const struct token dot_ops[] =\n   { NULL, 0, BINOP_END }\n };\n \n-struct f77_boolean_val \n+/* Holds the Fortran representation of a boolean, and the integer value we\n+   substitute in when one of the matching strings is parsed.  */\n+struct f77_boolean_val\n {\n+  /* The string representing a Fortran boolean.  */\n   const char *name;\n+\n+  /* The integer value to replace it with.  */\n   int value;\n-}; \n+};\n \n-static const struct f77_boolean_val boolean_values[]  = \n+/* The set of Fortran booleans.  These are matched case insensitively.  */\n+static const struct f77_boolean_val boolean_values[]  =\n {\n   { \".true.\", 1 },\n-  { \".TRUE.\", 1 },\n-  { \".false.\", 0 },\n-  { \".FALSE.\", 0 },\n-  { NULL, 0 }\n+  { \".false.\", 0 }\n };\n \n static const struct token f77_keywords[] = \n@@ -931,19 +934,19 @@ yylex (void)\n   prev_lexptr = lexptr;\n  \n   tokstart = lexptr;\n-  \n-  /* First of all, let us make sure we are not dealing with the \n+\n+  /* First of all, let us make sure we are not dealing with the\n      special tokens .true. and .false. which evaluate to 1 and 0.  */\n-  \n+\n   if (*lexptr == '.')\n-    { \n-      for (int i = 0; boolean_values[i].name != NULL; i++)\n+    {\n+      for (int i = 0; i < ARRAY_SIZE (boolean_values); i++)\n \t{\n-\t  if (strncmp (tokstart, boolean_values[i].name,\n-\t\t       strlen (boolean_values[i].name)) == 0)\n+\t  if (strncasecmp (tokstart, boolean_values[i].name,\n+\t\t\t   strlen (boolean_values[i].name)) == 0)\n \t    {\n-\t      lexptr += strlen (boolean_values[i].name); \n-\t      yylval.lval = boolean_values[i].value; \n+\t      lexptr += strlen (boolean_values[i].name);\n+\t      yylval.lval = boolean_values[i].value;\n \t      return BOOLEAN_LITERAL;\n \t    }\n \t}"
    },
    {
      "sha": "e2e74a8bffd79da5c3995763f9817cf1a55ed709",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9f2c763b325227a3721eaf4006db67b37f3b13/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9f2c763b325227a3721eaf4006db67b37f3b13/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=dd9f2c763b325227a3721eaf4006db67b37f3b13",
      "patch": "@@ -1,3 +1,8 @@\n+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.fortran/types.exp (test_logical_literal_types_accepted):\n+\tCheck upper and lower case logical literals.\n+\n 2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.fortran/types.exp (test_float_literal_types_accepted):"
    },
    {
      "sha": "0e28691d90ead554a76bbdab72f5c30844c4cc10",
      "filename": "gdb/testsuite/gdb.fortran/types.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9f2c763b325227a3721eaf4006db67b37f3b13/gdb/testsuite/gdb.fortran/types.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9f2c763b325227a3721eaf4006db67b37f3b13/gdb/testsuite/gdb.fortran/types.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/types.exp?ref=dd9f2c763b325227a3721eaf4006db67b37f3b13",
      "patch": "@@ -45,10 +45,13 @@ proc test_integer_literal_types_rejected {} {\n proc test_logical_literal_types_accepted {} {\n     global gdb_prompt\n \n-    # Test the only possible values for a logical, TRUE and FALSE.\n+    # Test the only possible values for a logical, TRUE and FALSE (and\n+    # also true and false).\n \n     gdb_test \"pt .TRUE.\" \"type = logical\\\\*2\"\n     gdb_test \"pt .FALSE.\" \"type = logical\\\\*2\"\n+    gdb_test \"pt .true.\" \"type = logical\\\\*2\"\n+    gdb_test \"pt .false.\" \"type = logical\\\\*2\"\n }\n \n proc test_float_literal_types_accepted {} {"
    }
  ]
}