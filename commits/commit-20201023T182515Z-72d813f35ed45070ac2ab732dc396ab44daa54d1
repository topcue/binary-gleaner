{
  "sha": "72d813f35ed45070ac2ab732dc396ab44daa54d1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzJkODEzZjM1ZWQ0NTA3MGFjMmFiNzMyZGMzOTZhYjQ0ZGFhNTRkMQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-10-23T18:24:58Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-10-23T18:25:15Z"
    },
    "message": "ld: Set plug_opt only if compiler is available\n\n\t* testsuite/config/default.exp (plug_opt): Set only if compiler\n\tis available.",
    "tree": {
      "sha": "5658a2c27235b7beb72e0440c78437069bad7f7d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5658a2c27235b7beb72e0440c78437069bad7f7d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/72d813f35ed45070ac2ab732dc396ab44daa54d1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/72d813f35ed45070ac2ab732dc396ab44daa54d1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/72d813f35ed45070ac2ab732dc396ab44daa54d1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/72d813f35ed45070ac2ab732dc396ab44daa54d1/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7d72802bfc3fc52fe0f35854694941c9534e0bcb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7d72802bfc3fc52fe0f35854694941c9534e0bcb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7d72802bfc3fc52fe0f35854694941c9534e0bcb"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 19,
    "deletions": 12
  },
  "files": [
    {
      "sha": "2392dc8eaabe5314cf1242e670f076df9d57bc52",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72d813f35ed45070ac2ab732dc396ab44daa54d1/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72d813f35ed45070ac2ab732dc396ab44daa54d1/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=72d813f35ed45070ac2ab732dc396ab44daa54d1",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/config/default.exp (plug_opt): Set only if compiler\n+\tis available.\n+\n 2020-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* testsuite/ld-plugin/lto.exp (plug_opt): Moved to ..."
    },
    {
      "sha": "f711fb792e3c848e2b7152968913381c56a3e9a6",
      "filename": "ld/testsuite/config/default.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 12,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72d813f35ed45070ac2ab732dc396ab44daa54d1/ld/testsuite/config/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72d813f35ed45070ac2ab732dc396ab44daa54d1/ld/testsuite/config/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/config/default.exp?ref=72d813f35ed45070ac2ab732dc396ab44daa54d1",
      "patch": "@@ -425,19 +425,21 @@ if { [istarget alpha*-*-*vms*] } {\n     unset f src\n }\n \n-set plugin_names {\n-    liblto_plugin.so\n-    liblto_plugin-0.dll\n-    cyglto_plugin-0.dll\n-}\n set plug_opt \"\"\n-foreach plug $plugin_names {\n-    set plug_so [run_host_cmd $CC \"--print-prog-name $plug\"]\n-    if { $plug_so eq $plug } then {\n-\tset plug_so [run_host_cmd $CC \"--print-file-name $plug\"]\n+if { [check_compiler_available] } {\n+    set plugin_names {\n+\tliblto_plugin.so\n+\tliblto_plugin-0.dll\n+\tcyglto_plugin-0.dll\n     }\n-    if { $plug_so ne $plug } then {\n-\tset plug_opt \"--plugin $plug_so\"\n-\tbreak\n+    foreach plug $plugin_names {\n+\tset plug_so [run_host_cmd $CC \"--print-prog-name $plug\"]\n+\tif { $plug_so eq $plug } then {\n+\t    set plug_so [run_host_cmd $CC \"--print-file-name $plug\"]\n+\t}\n+\tif { $plug_so ne $plug } then {\n+\t    set plug_opt \"--plugin $plug_so\"\n+\t    break\n+\t}\n     }\n }"
    }
  ]
}