{
  "sha": "775d36a916c1be042ceb67fc6ea22f53a9f5e331",
  "node_id": "C_kwDOANOeidoAKDc3NWQzNmE5MTZjMWJlMDQyY2ViNjdmYzZlYTIyZjUzYTlmNWUzMzE",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-09-30T18:53:55Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-10-19T19:22:31Z"
    },
    "message": "Fix Rust lex selftest when using libiconv\n\nThe Rust lex selftest fails on our Windows build.  I tracked this down\nto a use of UTF-32 as a parameter to convert_between_encodings.  Here,\niconv_open succeeds, but the actual conversion of a tab character\nfails with EILSEQ.  I suspect that \"UTF-32\" is being interpreted as\nbig-endian, as changing the call to use \"UTF-32LE\" makes it work.\nThis patch implements this fix.",
    "tree": {
      "sha": "37dca5468d9c3a3333bf068da8bf7eb232407a5a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/37dca5468d9c3a3333bf068da8bf7eb232407a5a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/775d36a916c1be042ceb67fc6ea22f53a9f5e331",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/775d36a916c1be042ceb67fc6ea22f53a9f5e331",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/775d36a916c1be042ceb67fc6ea22f53a9f5e331",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/775d36a916c1be042ceb67fc6ea22f53a9f5e331/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5dfe4bfcb96945dc5cc1f8717be454f1f7f6bbec"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 10,
    "deletions": 3
  },
  "files": [
    {
      "sha": "e12bf29a71d9762ceb7badb5148018973353fb87",
      "filename": "gdb/rust-parse.c",
      "status": "modified",
      "additions": 10,
      "deletions": 3,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/775d36a916c1be042ceb67fc6ea22f53a9f5e331/gdb/rust-parse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/775d36a916c1be042ceb67fc6ea22f53a9f5e331/gdb/rust-parse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-parse.c?ref=775d36a916c1be042ceb67fc6ea22f53a9f5e331",
      "patch": "@@ -695,9 +695,16 @@ rust_parser::lex_string ()\n \t  if (is_byte)\n \t    obstack_1grow (&obstack, value);\n \t  else\n-\t    convert_between_encodings (\"UTF-32\", \"UTF-8\", (gdb_byte *) &value,\n-\t\t\t\t       sizeof (value), sizeof (value),\n-\t\t\t\t       &obstack, translit_none);\n+\t    {\n+#if WORDS_BIGENDIAN\n+#define UTF32 \"UTF-32BE\"\n+#else\n+#define UTF32 \"UTF-32LE\"\n+#endif\n+\t      convert_between_encodings (UTF32, \"UTF-8\", (gdb_byte *) &value,\n+\t\t\t\t\t sizeof (value), sizeof (value),\n+\t\t\t\t\t &obstack, translit_none);\n+\t    }\n \t}\n       else if (pstate->lexptr[0] == '\\0')\n \terror (_(\"Unexpected EOF in string\"));"
    }
  ]
}