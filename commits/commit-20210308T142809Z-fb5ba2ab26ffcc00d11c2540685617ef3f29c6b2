{
  "sha": "fb5ba2ab26ffcc00d11c2540685617ef3f29c6b2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmI1YmEyYWIyNmZmY2MwMGQxMWMyNTQwNjg1NjE3ZWYzZjI5YzZiMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:09Z"
    },
    "message": "Split out eval_binop_assign_modify\n\nThis splits BINOP_ASSIGN_MODIFY into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (eval_binop_assign_modify): New function.\n\t(evaluate_subexp_standard): Use it.",
    "tree": {
      "sha": "9b62307517fff44462d9dd9dcc27c11390aad47d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9b62307517fff44462d9dd9dcc27c11390aad47d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fb5ba2ab26ffcc00d11c2540685617ef3f29c6b2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fb5ba2ab26ffcc00d11c2540685617ef3f29c6b2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fb5ba2ab26ffcc00d11c2540685617ef3f29c6b2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fb5ba2ab26ffcc00d11c2540685617ef3f29c6b2/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a49881f73ef1bb670b74e99bfa76cd68ee1487c1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a49881f73ef1bb670b74e99bfa76cd68ee1487c1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a49881f73ef1bb670b74e99bfa76cd68ee1487c1"
    }
  ],
  "stats": {
    "total": 70,
    "additions": 43,
    "deletions": 27
  },
  "files": [
    {
      "sha": "9b4c9c80b6b701a6777ecdd9214bbc3c6705be2b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb5ba2ab26ffcc00d11c2540685617ef3f29c6b2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb5ba2ab26ffcc00d11c2540685617ef3f29c6b2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fb5ba2ab26ffcc00d11c2540685617ef3f29c6b2",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (eval_binop_assign_modify): New function.\n+\t(evaluate_subexp_standard): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* m2-lang.c (eval_op_m2_subscript): New function."
    },
    {
      "sha": "78a10f741f03a0076109d98e6428e159c5aaa6e6",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 38,
      "deletions": 27,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb5ba2ab26ffcc00d11c2540685617ef3f29c6b2/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb5ba2ab26ffcc00d11c2540685617ef3f29c6b2/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=fb5ba2ab26ffcc00d11c2540685617ef3f29c6b2",
      "patch": "@@ -2053,6 +2053,42 @@ eval_op_type (struct type *expect_type, struct expression *exp,\n     error (_(\"Attempt to use a type name as an expression\"));\n }\n \n+/* A helper function for BINOP_ASSIGN_MODIFY.  */\n+\n+static struct value *\n+eval_binop_assign_modify (struct type *expect_type, struct expression *exp,\n+\t\t\t  enum noside noside, enum exp_opcode op,\n+\t\t\t  struct value *arg1, struct value *arg2)\n+{\n+  if (noside == EVAL_SKIP || noside == EVAL_AVOID_SIDE_EFFECTS)\n+    return arg1;\n+  if (binop_user_defined_p (op, arg1, arg2))\n+    return value_x_binop (arg1, arg2, BINOP_ASSIGN_MODIFY, op, noside);\n+  else if (op == BINOP_ADD && ptrmath_type_p (exp->language_defn,\n+\t\t\t\t\t      value_type (arg1))\n+\t   && is_integral_type (value_type (arg2)))\n+    arg2 = value_ptradd (arg1, value_as_long (arg2));\n+  else if (op == BINOP_SUB && ptrmath_type_p (exp->language_defn,\n+\t\t\t\t\t      value_type (arg1))\n+\t   && is_integral_type (value_type (arg2)))\n+    arg2 = value_ptradd (arg1, - value_as_long (arg2));\n+  else\n+    {\n+      struct value *tmp = arg1;\n+\n+      /* For shift and integer exponentiation operations,\n+\t only promote the first argument.  */\n+      if ((op == BINOP_LSH || op == BINOP_RSH || op == BINOP_EXP)\n+\t  && is_integral_type (value_type (arg2)))\n+\tunop_promote (exp->language_defn, exp->gdbarch, &tmp);\n+      else\n+\tbinop_promote (exp->language_defn, exp->gdbarch, &tmp, &arg2);\n+\n+      arg2 = value_binop (tmp, arg2, op);\n+    }\n+  return value_assign (arg1, arg2);\n+}\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,\n@@ -2706,34 +2742,9 @@ evaluate_subexp_standard (struct type *expect_type,\n       (*pos) += 2;\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);\n       arg2 = evaluate_subexp (value_type (arg1), exp, pos, noside);\n-      if (noside == EVAL_SKIP || noside == EVAL_AVOID_SIDE_EFFECTS)\n-\treturn arg1;\n       op = exp->elts[pc + 1].opcode;\n-      if (binop_user_defined_p (op, arg1, arg2))\n-\treturn value_x_binop (arg1, arg2, BINOP_ASSIGN_MODIFY, op, noside);\n-      else if (op == BINOP_ADD && ptrmath_type_p (exp->language_defn,\n-\t\t\t\t\t\t  value_type (arg1))\n-\t       && is_integral_type (value_type (arg2)))\n-\targ2 = value_ptradd (arg1, value_as_long (arg2));\n-      else if (op == BINOP_SUB && ptrmath_type_p (exp->language_defn,\n-\t\t\t\t\t\t  value_type (arg1))\n-\t       && is_integral_type (value_type (arg2)))\n-\targ2 = value_ptradd (arg1, - value_as_long (arg2));\n-      else\n-\t{\n-\t  struct value *tmp = arg1;\n-\n-\t  /* For shift and integer exponentiation operations,\n-\t     only promote the first argument.  */\n-\t  if ((op == BINOP_LSH || op == BINOP_RSH || op == BINOP_EXP)\n-\t      && is_integral_type (value_type (arg2)))\n-\t    unop_promote (exp->language_defn, exp->gdbarch, &tmp);\n-\t  else\n-\t    binop_promote (exp->language_defn, exp->gdbarch, &tmp, &arg2);\n-\n-\t  arg2 = value_binop (tmp, arg2, op);\n-\t}\n-      return value_assign (arg1, arg2);\n+      return eval_binop_assign_modify (expect_type, exp, noside, op,\n+\t\t\t\t       arg1, arg2);\n \n     case BINOP_ADD:\n       arg1 = evaluate_subexp_with_coercion (exp, pos, noside);"
    }
  ]
}