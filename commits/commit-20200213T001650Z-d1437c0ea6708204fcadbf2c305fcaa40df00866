{
  "sha": "d1437c0ea6708204fcadbf2c305fcaa40df00866",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDE0MzdjMGVhNjcwODIwNGZjYWRiZjJjMzA1ZmNhYTQwZGYwMDg2Ng==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-13T00:05:42Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-13T00:16:50Z"
    },
    "message": "Remove some dead code from event-loop.c\n\nThis removes some dead code from event-loop.c.\n\nThis patch is from my old series to merge the gdb and gdbserver event\nloops; but since it is just removing dead code, it seemed simple to\ncommit it separately.\n\ngdb/ChangeLog\n2020-02-12  Tom Tromey  <tom@tromey.com>\n\n\t* event-loop.c (event_data, gdb_event, event_handler_func):\n\tRemove.",
    "tree": {
      "sha": "90aca3477c339e0a0cc5f0ea7671a19892000002",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/90aca3477c339e0a0cc5f0ea7671a19892000002"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d1437c0ea6708204fcadbf2c305fcaa40df00866",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1437c0ea6708204fcadbf2c305fcaa40df00866",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d1437c0ea6708204fcadbf2c305fcaa40df00866",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1437c0ea6708204fcadbf2c305fcaa40df00866/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c273235f6c7784780b80388d8f3c3f5765417fb6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c273235f6c7784780b80388d8f3c3f5765417fb6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c273235f6c7784780b80388d8f3c3f5765417fb6"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 5,
    "deletions": 33
  },
  "files": [
    {
      "sha": "62f786f10728e1f6094f08903bb470b9f28c22c3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1437c0ea6708204fcadbf2c305fcaa40df00866/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1437c0ea6708204fcadbf2c305fcaa40df00866/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d1437c0ea6708204fcadbf2c305fcaa40df00866",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-12  Tom Tromey  <tom@tromey.com>\n+\n+\t* event-loop.c (event_data, gdb_event, event_handler_func):\n+\tRemove.\n+\n 2020-02-12  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/frame.c (dwarf2_frame_bfd_data): New global."
    },
    {
      "sha": "af8f80b6a2cdf76ae4ed525f778794943d0c00a8",
      "filename": "gdb/event-loop.c",
      "status": "modified",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1437c0ea6708204fcadbf2c305fcaa40df00866/gdb/event-loop.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1437c0ea6708204fcadbf2c305fcaa40df00866/gdb/event-loop.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/event-loop.c?ref=d1437c0ea6708204fcadbf2c305fcaa40df00866",
      "patch": "@@ -43,39 +43,6 @@\n #define GDB_WRITABLE\t(1<<2)\n #define GDB_EXCEPTION\t(1<<3)\n \n-/* Data point to pass to the event handler.  */\n-typedef union event_data\n-{\n-  void *ptr;\n-  int integer;\n-} event_data;\n-\n-typedef struct gdb_event gdb_event;\n-typedef void (event_handler_func) (event_data);\n-\n-/* Event for the GDB event system.  Events are queued by calling\n-   async_queue_event and serviced later on by gdb_do_one_event.  An\n-   event can be, for instance, a file descriptor becoming ready to be\n-   read.  Servicing an event simply means that the procedure PROC will\n-   be called.  We have 2 queues, one for file handlers that we listen\n-   to in the event loop, and one for the file handlers+events that are\n-   ready.  The procedure PROC associated with each event is dependant\n-   of the event source.  In the case of monitored file descriptors, it\n-   is always the same (handle_file_event).  Its duty is to invoke the\n-   handler associated with the file descriptor whose state change\n-   generated the event, plus doing other cleanups and such.  In the\n-   case of async signal handlers, it is\n-   invoke_async_signal_handler.  */\n-\n-typedef struct gdb_event\n-  {\n-    /* Procedure to call to service this event.  */\n-    event_handler_func *proc;\n-\n-    /* Data to pass to the event handler.  */\n-    event_data data;\n-  } *gdb_event_p;\n-\n /* Information about each file descriptor we register with the event\n    loop.  */\n "
    }
  ]
}