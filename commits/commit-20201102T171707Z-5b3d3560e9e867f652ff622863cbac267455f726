{
  "sha": "5b3d3560e9e867f652ff622863cbac267455f726",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWIzZDM1NjBlOWU4NjdmNjUyZmY2MjI4NjNjYmFjMjY3NDU1ZjcyNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-02T17:17:07Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-02T17:17:07Z"
    },
    "message": "Minor Python simplifications\n\nI noticed that a few \"#if\"s could be removed from the Python code.\nThis patch is the result.\n\ngdb/ChangeLog\n2020-11-02  Tom Tromey  <tromey@adacore.com>\n\n\t* python/python.c: Consolidate two HAVE_PYTHON blocks.\n\t(python_GdbModuleDef): Move earlier.  Now static.\n\t(do_start_initialization): Consolidate some IS_PY3K blocks.",
    "tree": {
      "sha": "f43c211abd48c163511bc5457d6d729c6bca2a9b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f43c211abd48c163511bc5457d6d729c6bca2a9b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5b3d3560e9e867f652ff622863cbac267455f726",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b3d3560e9e867f652ff622863cbac267455f726",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5b3d3560e9e867f652ff622863cbac267455f726",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b3d3560e9e867f652ff622863cbac267455f726/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dda83cd783075941aabe9b0292b004b11f00c831",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dda83cd783075941aabe9b0292b004b11f00c831",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dda83cd783075941aabe9b0292b004b11f00c831"
    }
  ],
  "stats": {
    "total": 69,
    "additions": 30,
    "deletions": 39
  },
  "files": [
    {
      "sha": "4528b853ecda1a06eb4611f8329754394fa93814",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b3d3560e9e867f652ff622863cbac267455f726/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b3d3560e9e867f652ff622863cbac267455f726/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5b3d3560e9e867f652ff622863cbac267455f726",
      "patch": "@@ -1,3 +1,9 @@\n+2020-11-02  Tom Tromey  <tromey@adacore.com>\n+\n+\t* python/python.c: Consolidate two HAVE_PYTHON blocks.\n+\t(python_GdbModuleDef): Move earlier.  Now static.\n+\t(do_start_initialization): Consolidate some IS_PY3K blocks.\n+\n 2020-11-02  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* aarch64-linux-tdep.c: Fix indentation."
    },
    {
      "sha": "bf3abdbbbe51693b25fc45d1aaadd78284a08fab",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 24,
      "deletions": 39,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b3d3560e9e867f652ff622863cbac267455f726/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b3d3560e9e867f652ff622863cbac267455f726/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=5b3d3560e9e867f652ff622863cbac267455f726",
      "patch": "@@ -106,10 +106,6 @@ int gdb_python_initialized;\n \n extern PyMethodDef python_GdbMethods[];\n \n-#ifdef IS_PY3K\n-extern struct PyModuleDef python_GdbModuleDef;\n-#endif\n-\n PyObject *gdb_module;\n PyObject *gdb_python_module;\n \n@@ -1625,6 +1621,19 @@ finalize_python (void *ignore)\n }\n \n #ifdef IS_PY3K\n+static struct PyModuleDef python_GdbModuleDef =\n+{\n+  PyModuleDef_HEAD_INIT,\n+  \"_gdb\",\n+  NULL,\n+  -1,\n+  python_GdbMethods,\n+  NULL,\n+  NULL,\n+  NULL,\n+  NULL\n+};\n+\n /* This is called via the PyImport_AppendInittab mechanism called\n    during initialization, to make the built-in _gdb module known to\n    Python.  */\n@@ -1639,18 +1648,6 @@ init__gdb_module (void)\n static bool\n do_start_initialization ()\n {\n-#ifdef IS_PY3K\n-  size_t progsize, count;\n-  /* Python documentation indicates that the memory given\n-     to Py_SetProgramName cannot be freed.  However, it seems that\n-     at least Python 3.7.4 Py_SetProgramName takes a copy of the\n-     given program_name.  Making progname_copy static and not release\n-     the memory avoids a leak report for Python versions that duplicate\n-     program_name, and respect the requirement of Py_SetProgramName\n-     for Python versions that do not duplicate program_name.  */\n-  static wchar_t *progname_copy;\n-#endif\n-\n #ifdef WITH_PYTHON_PATH\n   /* Work around problem where python gets confused about where it is,\n      and then can't find its libraries, etc.\n@@ -1662,11 +1659,20 @@ do_start_initialization ()\n     (concat (ldirname (python_libdir.c_str ()).c_str (), SLASH_STRING, \"bin\",\n \t      SLASH_STRING, \"python\", (char *) NULL));\n #ifdef IS_PY3K\n+  /* Python documentation indicates that the memory given\n+     to Py_SetProgramName cannot be freed.  However, it seems that\n+     at least Python 3.7.4 Py_SetProgramName takes a copy of the\n+     given program_name.  Making progname_copy static and not release\n+     the memory avoids a leak report for Python versions that duplicate\n+     program_name, and respect the requirement of Py_SetProgramName\n+     for Python versions that do not duplicate program_name.  */\n+  static wchar_t *progname_copy;\n+\n   std::string oldloc = setlocale (LC_ALL, NULL);\n   setlocale (LC_ALL, \"\");\n-  progsize = strlen (progname.get ());\n+  size_t progsize = strlen (progname.get ());\n   progname_copy = XNEWVEC (wchar_t, progsize + 1);\n-  count = mbstowcs (progname_copy, progname.get (), progsize + 1);\n+  size_t count = mbstowcs (progname_copy, progname.get (), progsize + 1);\n   if (count == (size_t) -1)\n     {\n       fprintf (stderr, \"Could not convert python path to string\\n\");\n@@ -1976,12 +1982,6 @@ gdbpy_initialized (const struct extension_language_defn *extlang)\n   return gdb_python_initialized;\n }\n \n-#endif /* HAVE_PYTHON */\n-\n-\f\n-\n-#ifdef HAVE_PYTHON\n-\n PyMethodDef python_GdbMethods[] =\n {\n   { \"history\", gdbpy_history, METH_VARARGS,\n@@ -2124,21 +2124,6 @@ Register a TUI window constructor.\" },\n   {NULL, NULL, 0, NULL}\n };\n \n-#ifdef IS_PY3K\n-struct PyModuleDef python_GdbModuleDef =\n-{\n-  PyModuleDef_HEAD_INIT,\n-  \"_gdb\",\n-  NULL,\n-  -1,\n-  python_GdbMethods,\n-  NULL,\n-  NULL,\n-  NULL,\n-  NULL\n-};\n-#endif\n-\n /* Define all the event objects.  */\n #define GDB_PY_DEFINE_EVENT_TYPE(name, py_name, doc, base) \\\n   PyTypeObject name##_event_object_type\t\t    \\"
    }
  ]
}