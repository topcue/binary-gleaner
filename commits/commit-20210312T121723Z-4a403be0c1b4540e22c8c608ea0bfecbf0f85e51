{
  "sha": "4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGE0MDNiZTBjMWI0NTQwZTIyYzhjNjA4ZWEwYmZlY2JmMGY4NWU1MQ==",
  "commit": {
    "author": {
      "name": "Cl\u00e9ment Chigot",
      "email": "clement.chigot@atos.net",
      "date": "2021-03-11T10:08:19Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-12T12:17:23Z"
    },
    "message": "aix: implement R_TOCU and R_TOCL relocations\n\nImplement support for largetoc on XCOFF.\nR_TOCU and R_TOCL are referenced by the new BFD defines:\nBFD_RELOC_PPC_TOC16_HI and BFD_RELOC_PPC_TOC16_LO.\nA new toc storage class is added XMC_TE.\n\nIn order to correctly handle R_TOCU, the logic behind\nxcoff_reloc_type_toc is changed to compute the whole TOC offset\ninstead of just the difference between the \"link\" offset and the\n\"assembly\" offset.\n\nIn gas, add a function to transform addis format used by AIX\n\"addis RT, D(RA)\" into the ELF format \"addis RT, RA, SI\".\n\nbfd/\n\t* reloc.c (BFD_RELOC_PPC_TOC16_HI, BFD_RELOC_PPC_TOC16_LO):\n\tNew relocations.\n\t* bfd-in2.h: Regenerate.\n\t* libbfd.h: Regenerate.\n\t* coff-rs6000.c (xcoff_calculate_relocation): Call\n\txcoff_reloc_type_toc for R_TOCU and R_TOCL.\n\t(xcoff_howto_table): Remove src_mask for TOC relocations.\n\tAdd R_TOCU and R_TOCL howtos.\n\t(_bfd_xcoff_reloc_type_lookup): Add cases for\n\tBFD_RELOC_PPC_TOC16_HI and BFD_RELOC_PPC_TOC16_LO.\n\t(xcoff_reloc_type_toc): Compute the whole offset.\n\tImplement R_TOCU and R_TOCL.\n\t* coff64-rs6000.c (xcoff64_calculate_relocation):\n\tLikewise.\n\t(xcoff64_howto_table): Likewise.\n\t(xcoff64_reloc_type_lookup): Likewise.\ngas/\n\t* config/tc-ppc.c (ppc_xcoff_suffix): New function.\n\t(MAP, MAP32, MAP64): New macros for XCOFF.\n\t(ppc_xcoff_fixup_addis): New function.\n\t(ppc_is_toc_sym): Handle XMC_TE.\n\t(fixup_size): Add cases for BFD_RELOC_PPC_TOC16_HI and\n\tBFD_RELOC_PPC_TOC16_LO.\n\t(md_assemble): Call ppc_xcoff_fixup_addis for XCOFF.\n\t(ppc_change_csect): Handle XMC_TE.\n\t(ppc_tc): Enable .tc symbols to have only a XMC_TC or XMC_TE\n\tstorage class.\n\t(ppc_symbol_new_hook): Handle XMC_TE.\n\t(ppc_frob_symbol): Likewise.\n\t(ppc_fix_adjustable): Likewise.\n\t(md_apply_fix): Handle BFD_RELOC_PPC_TOC16_HI and\n\tBFD_RELOC_PPC_TOC16_LO.\nld/\n\t* scripttempl/aix.sc: Add .te to .data section.\n\t* testsuite/ld-powerpc/aix52.exp: Add test structure for AIX7+.\n\tAdd aix-largetoc-1 test.\n\t* testsuite/ld-powerpc/aix-largetoc-1-32.d: New test.\n\t* testsuite/ld-powerpc/aix-largetoc-1-64.d: New test.\n\t* testsuite/ld-powerpc/aix-largetoc-1.ex: New test.\n\t* testsuite/ld-powerpc/aix-largetoc-1.s: New test.",
    "tree": {
      "sha": "3908b8d38af9e56e3fd960da596c4d600f5915c5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3908b8d38af9e56e3fd960da596c4d600f5915c5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/comments",
  "author": {
    "login": "Helflym",
    "id": 23002587,
    "node_id": "MDQ6VXNlcjIzMDAyNTg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/23002587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Helflym",
    "html_url": "https://github.com/Helflym",
    "followers_url": "https://api.github.com/users/Helflym/followers",
    "following_url": "https://api.github.com/users/Helflym/following{/other_user}",
    "gists_url": "https://api.github.com/users/Helflym/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Helflym/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Helflym/subscriptions",
    "organizations_url": "https://api.github.com/users/Helflym/orgs",
    "repos_url": "https://api.github.com/users/Helflym/repos",
    "events_url": "https://api.github.com/users/Helflym/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Helflym/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2c1bef53dee85aede31e6de6fa8276d6869f6512",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2c1bef53dee85aede31e6de6fa8276d6869f6512",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2c1bef53dee85aede31e6de6fa8276d6869f6512"
    }
  ],
  "stats": {
    "total": 407,
    "additions": 376,
    "deletions": 31
  },
  "files": [
    {
      "sha": "d955f78a980e0fea3f85816f83b87ce4d35623b7",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -1,3 +1,22 @@\n+2021-03-12  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\t* reloc.c (BFD_RELOC_PPC_TOC16_HI, BFD_RELOC_PPC_TOC16_LO):\n+\tNew relocations.\n+\t* bfd-in2.h: Regenerate.\n+\t* libbfd.h: Regenerate.\n+\t* coff-rs6000.c (xcoff_calculate_relocation): Call\n+\txcoff_reloc_type_toc for R_TOCU and R_TOCL.\n+\t(xcoff_howto_table): Remove src_mask for TOC relocations.\n+\tAdd R_TOCU and R_TOCL howtos.\n+\t(_bfd_xcoff_reloc_type_lookup): Add cases for\n+\tBFD_RELOC_PPC_TOC16_HI and BFD_RELOC_PPC_TOC16_LO.\n+\t(xcoff_reloc_type_toc): Compute the whole offset.\n+\tImplement R_TOCU and R_TOCL.\n+\t* coff64-rs6000.c (xcoff64_calculate_relocation):\n+\tLikewise.\n+\t(xcoff64_howto_table): Likewise.\n+\t(xcoff64_reloc_type_lookup): Likewise.\n+\n 2021-03-12  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n \n \t* coff-rs6000.c (xcoff_calculate_relocation): Correct and"
    },
    {
      "sha": "9bd61b10e7080abca82dbc2b3970eb97cd200070",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -2899,6 +2899,8 @@ instruction.  */\n   BFD_RELOC_PPC_B26,\n   BFD_RELOC_PPC_BA26,\n   BFD_RELOC_PPC_TOC16,\n+  BFD_RELOC_PPC_TOC16_LO,\n+  BFD_RELOC_PPC_TOC16_HI,\n   BFD_RELOC_PPC_B16,\n   BFD_RELOC_PPC_B16_BRTAKEN,\n   BFD_RELOC_PPC_B16_BRNTAKEN,"
    },
    {
      "sha": "b77ff0c234a1396538a38fad5fcb927ad3e0dcc7",
      "filename": "bfd/coff-rs6000.c",
      "status": "modified",
      "additions": 56,
      "deletions": 14,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/bfd/coff-rs6000.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/bfd/coff-rs6000.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-rs6000.c?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -206,8 +206,8 @@ xcoff_calculate_relocation[XCOFF_MAX_CALCULATE_RELOCATION] =\n   xcoff_reloc_type_fail, /*           (0x2d) */\n   xcoff_reloc_type_fail, /*           (0x2e) */\n   xcoff_reloc_type_fail, /*           (0x2f) */\n-  xcoff_reloc_type_fail, /* R_TOCU    (0x30) */\n-  xcoff_reloc_type_fail, /* R_TOCL    (0x31) */\n+  xcoff_reloc_type_toc,  /* R_TOCU    (0x30) */\n+  xcoff_reloc_type_toc,  /* R_TOCL    (0x31) */\n };\n \n xcoff_complain_function *const\n@@ -745,7 +745,7 @@ reloc_howto_type xcoff_howto_table[] =\n \t 0,\t\t\t/* special_function */\n \t \"R_TOC\",\t\t/* name */\n \t TRUE,\t\t\t/* partial_inplace */\n-\t 0xffff,\t\t/* src_mask */\n+\t 0,\t\t\t/* src_mask */\n \t 0xffff,\t\t/* dst_mask */\n \t FALSE),\t\t/* pcrel_offset */\n \n@@ -760,7 +760,7 @@ reloc_howto_type xcoff_howto_table[] =\n \t 0,\t\t\t/* special_function */\n \t \"R_TRL\",\t\t/* name */\n \t TRUE,\t\t\t/* partial_inplace */\n-\t 0xffff,\t\t/* src_mask */\n+\t 0,\t\t\t/* src_mask */\n \t 0xffff,\t\t/* dst_mask */\n \t FALSE),\t\t/* pcrel_offset */\n \n@@ -775,7 +775,7 @@ reloc_howto_type xcoff_howto_table[] =\n \t 0,\t\t\t/* special_function */\n \t \"R_GL\",\t\t/* name */\n \t TRUE,\t\t\t/* partial_inplace */\n-\t 0xffff,\t\t/* src_mask */\n+\t 0,\t\t\t/* src_mask */\n \t 0xffff,\t\t/* dst_mask */\n \t FALSE),\t\t/* pcrel_offset */\n \n@@ -790,7 +790,7 @@ reloc_howto_type xcoff_howto_table[] =\n \t 0,\t\t\t/* special_function */\n \t \"R_TCL\",\t\t/* name */\n \t TRUE,\t\t\t/* partial_inplace */\n-\t 0xffff,\t\t/* src_mask */\n+\t 0,\t\t\t/* src_mask */\n \t 0xffff,\t\t/* dst_mask */\n \t FALSE),\t\t/* pcrel_offset */\n \n@@ -892,7 +892,7 @@ reloc_howto_type xcoff_howto_table[] =\n \t 0,\t\t\t/* special_function */\n \t \"R_TRLA\",\t\t/* name */\n \t TRUE,\t\t\t/* partial_inplace */\n-\t 0xffff,\t\t/* src_mask */\n+\t 0,\t\t\t/* src_mask */\n \t 0xffff,\t\t/* dst_mask */\n \t FALSE),\t\t/* pcrel_offset */\n \n@@ -1093,10 +1093,34 @@ reloc_howto_type xcoff_howto_table[] =\n   EMPTY_HOWTO(0x2f),\n \n   /* 0x30: High-order 16 bit TOC relative relocation.  */\n-  EMPTY_HOWTO (R_TOCU),\n+  HOWTO (R_TOCU,\t\t/* type */\n+\t 16,\t\t\t/* rightshift */\n+\t 1,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 16,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_bitfield, /* complain_on_overflow */\n+\t 0,\t\t\t/* special_function */\n+\t \"R_TOCU\",\t\t/* name */\n+\t TRUE,\t\t\t/* partial_inplace */\n+\t 0,\t\t\t/* src_mask */\n+\t 0xffff,\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n \n   /* 0x31: Low-order 16 bit TOC relative relocation.  */\n-  EMPTY_HOWTO (R_TOCL),\n+  HOWTO (R_TOCL,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 1,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 16,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_dont, /* complain_on_overflow */\n+\t 0,\t\t\t/* special_function */\n+\t \"R_TOCL\",\t\t/* name */\n+\t TRUE,\t\t\t/* partial_inplace */\n+\t 0,\t\t\t/* src_mask */\n+\t 0xffff,\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n \n };\n \n@@ -1145,6 +1169,10 @@ _bfd_xcoff_reloc_type_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n       return &xcoff_howto_table[8];\n     case BFD_RELOC_PPC_TOC16:\n       return &xcoff_howto_table[3];\n+    case BFD_RELOC_PPC_TOC16_HI:\n+      return &xcoff_howto_table[0x30];\n+    case BFD_RELOC_PPC_TOC16_LO:\n+      return &xcoff_howto_table[0x31];\n     case BFD_RELOC_PPC_B16:\n       return &xcoff_howto_table[0x1d];\n     case BFD_RELOC_32:\n@@ -2904,7 +2932,7 @@ xcoff_reloc_type_toc (bfd *input_bfd,\n \t\t      asection *input_section ATTRIBUTE_UNUSED,\n \t\t      bfd *output_bfd,\n \t\t      struct internal_reloc *rel,\n-\t\t      struct internal_syment *sym,\n+\t\t      struct internal_syment *sym ATTRIBUTE_UNUSED,\n \t\t      struct reloc_howto_struct *howto ATTRIBUTE_UNUSED,\n \t\t      bfd_vma val,\n \t\t      bfd_vma addend ATTRIBUTE_UNUSED,\n@@ -2935,8 +2963,16 @@ xcoff_reloc_type_toc (bfd *input_bfd,\n \t      + h->toc_section->output_offset);\n     }\n \n-  *relocation = ((val - xcoff_data (output_bfd)->toc)\n-\t\t - (sym->n_value - xcoff_data (input_bfd)->toc));\n+  /* We can't use the preexisting value written down by the\n+     assembly, as R_TOCU needs to be adjusted when the final\n+     R_TOCL value is signed.  */\n+  *relocation = val - xcoff_data (output_bfd)->toc;\n+\n+  if (rel->r_type == R_TOCU)\n+    *relocation = ((*relocation + 0x8000) >> 16) & 0xffff;\n+  if (rel->r_type == R_TOCL)\n+    *relocation = *relocation & 0x0000ffff;\n+\n   return TRUE;\n }\n \n@@ -3299,8 +3335,6 @@ xcoff_complain_overflow_unsigned_func (bfd *input_bfd,\n    quite figure out when this is useful.  These relocs are\n    not defined by the PowerOpen ABI.\n \n-   R_TOCU\n-   R_TOCL\n    R_TLS\n    R_TLS_IE\n    R_TLS_LD\n@@ -3402,6 +3436,14 @@ xcoff_complain_overflow_unsigned_func (bfd *input_bfd,\n    The PowerPC ABI defines this as an absolute branch to a\n    fixed address which may be modified to a relative branch.\n    The PowerOpen ABI does not define this relocation type.\n+\n+   R_TOCU:\n+   Upper TOC relative relocation. The value is the\n+   high-order 16 bit of a TOC relative relocation.\n+\n+   R_TOCL:\n+   Lower TOC relative relocation. The value is the\n+   low-order 16 bit of a TOC relative relocation.\n */\n \n bfd_boolean"
    },
    {
      "sha": "55a68218652ee54b44f1737d2e370338a4ff3fe6",
      "filename": "bfd/coff64-rs6000.c",
      "status": "modified",
      "additions": 36,
      "deletions": 9,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/bfd/coff64-rs6000.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/bfd/coff64-rs6000.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff64-rs6000.c?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -228,8 +228,8 @@ xcoff64_calculate_relocation[XCOFF_MAX_CALCULATE_RELOCATION] =\n   xcoff_reloc_type_fail, /*           (0x2d) */\n   xcoff_reloc_type_fail, /*           (0x2e) */\n   xcoff_reloc_type_fail, /*           (0x2f) */\n-  xcoff_reloc_type_fail, /* R_TOCU    (0x30) */\n-  xcoff_reloc_type_fail, /* R_TOCL    (0x31) */\n+  xcoff_reloc_type_toc, /* R_TOCU    (0x30) */\n+  xcoff_reloc_type_toc, /* R_TOCL    (0x31) */\n };\n \n /* coffcode.h needs these to be defined.  */\n@@ -899,7 +899,7 @@ reloc_howto_type xcoff64_howto_table[] =\n \t 0,\t\t\t/* special_function */\n \t \"R_TOC\",\t\t/* name */\n \t TRUE,\t\t\t/* partial_inplace */\n-\t 0xffff,\t\t/* src_mask */\n+\t 0,\t\t\t/* src_mask */\n \t 0xffff,\t\t/* dst_mask */\n \t FALSE),\t\t/* pcrel_offset */\n \n@@ -914,7 +914,7 @@ reloc_howto_type xcoff64_howto_table[] =\n \t 0,\t\t\t/* special_function */\n \t \"R_TRL\",\t\t/* name */\n \t TRUE,\t\t\t/* partial_inplace */\n-\t 0xffff,\t\t/* src_mask */\n+\t 0,\t\t\t/* src_mask */\n \t 0xffff,\t\t/* dst_mask */\n \t FALSE),\t\t/* pcrel_offset */\n \n@@ -929,7 +929,7 @@ reloc_howto_type xcoff64_howto_table[] =\n \t 0,\t\t\t/* special_function */\n \t \"R_GL\",\t\t/* name */\n \t TRUE,\t\t\t/* partial_inplace */\n-\t 0xffff,\t\t/* src_mask */\n+\t 0,\t\t\t/* src_mask */\n \t 0xffff,\t\t/* dst_mask */\n \t FALSE),\t\t/* pcrel_offset */\n \n@@ -944,7 +944,7 @@ reloc_howto_type xcoff64_howto_table[] =\n \t 0,\t\t\t/* special_function */\n \t \"R_TCL\",\t\t/* name */\n \t TRUE,\t\t\t/* partial_inplace */\n-\t 0xffff,\t\t/* src_mask */\n+\t 0,\t\t\t/* src_mask */\n \t 0xffff,\t\t/* dst_mask */\n \t FALSE),\t\t/* pcrel_offset */\n \n@@ -1260,11 +1260,34 @@ reloc_howto_type xcoff64_howto_table[] =\n   EMPTY_HOWTO(0x2e),\n   EMPTY_HOWTO(0x2f),\n \n-  /* 0x30: High-order 16 bit TOC relative relocation.  */\n-  EMPTY_HOWTO (R_TOCU),\n+  HOWTO (R_TOCU,\t\t/* type */\n+\t 16,\t\t\t/* rightshift */\n+\t 1,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 16,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_bitfield, /* complain_on_overflow */\n+\t 0,\t\t\t/* special_function */\n+\t \"R_TOCU\",\t\t/* name */\n+\t TRUE,\t\t\t/* partial_inplace */\n+\t 0,\t\t\t/* src_mask */\n+\t 0xffff,\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n \n   /* 0x31: Low-order 16 bit TOC relative relocation.  */\n-  EMPTY_HOWTO (R_TOCL),\n+  HOWTO (R_TOCL,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 1,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 16,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_dont, /* complain_on_overflow */\n+\t 0,\t\t\t/* special_function */\n+\t \"R_TOCL\",\t\t/* name */\n+\t TRUE,\t\t\t/* partial_inplace */\n+\t 0,\t\t\t/* src_mask */\n+\t 0xffff,\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n \n };\n \n@@ -1319,6 +1342,10 @@ xcoff64_reloc_type_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n       return &xcoff64_howto_table[8];\n     case BFD_RELOC_PPC_TOC16:\n       return &xcoff64_howto_table[3];\n+    case BFD_RELOC_PPC_TOC16_HI:\n+      return &xcoff64_howto_table[0x30];\n+    case BFD_RELOC_PPC_TOC16_LO:\n+      return &xcoff64_howto_table[0x31];\n     case BFD_RELOC_PPC_B16:\n       return &xcoff64_howto_table[0x1e];\n     case BFD_RELOC_32:"
    },
    {
      "sha": "62b6bf82c509c89f1732cc1a94fd2619eeebf24e",
      "filename": "bfd/libbfd.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/bfd/libbfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/bfd/libbfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd.h?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -1462,6 +1462,8 @@ static const char *const bfd_reloc_code_real_names[] = { \"@@uninitialized@@\",\n   \"BFD_RELOC_PPC_B26\",\n   \"BFD_RELOC_PPC_BA26\",\n   \"BFD_RELOC_PPC_TOC16\",\n+  \"BFD_RELOC_PPC_TOC16_LO\",\n+  \"BFD_RELOC_PPC_TOC16_HI\",\n   \"BFD_RELOC_PPC_B16\",\n   \"BFD_RELOC_PPC_B16_BRTAKEN\",\n   \"BFD_RELOC_PPC_B16_BRNTAKEN\","
    },
    {
      "sha": "68645216c9d48cc456a829346a173de8e2fb2719",
      "filename": "bfd/reloc.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/bfd/reloc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/bfd/reloc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/reloc.c?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -2736,6 +2736,10 @@ ENUMX\n   BFD_RELOC_PPC_BA26\n ENUMX\n   BFD_RELOC_PPC_TOC16\n+ENUMX\n+  BFD_RELOC_PPC_TOC16_LO\n+ENUMX\n+  BFD_RELOC_PPC_TOC16_HI\n ENUMX\n   BFD_RELOC_PPC_B16\n ENUMX"
    },
    {
      "sha": "3713209f6d2ebb3f8b1a93e846f76ca048307329",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -1,3 +1,21 @@\n+2021-03-12  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\t* config/tc-ppc.c (ppc_xcoff_suffix): New function.\n+\t(MAP, MAP32, MAP64): New macros for XCOFF.\n+\t(ppc_xcoff_fixup_addis): New function.\n+\t(ppc_is_toc_sym): Handle XMC_TE.\n+\t(fixup_size): Add cases for BFD_RELOC_PPC_TOC16_HI and\n+\tBFD_RELOC_PPC_TOC16_LO.\n+\t(md_assemble): Call ppc_xcoff_fixup_addis for XCOFF.\n+\t(ppc_change_csect): Handle XMC_TE.\n+\t(ppc_tc): Enable .tc symbols to have only a XMC_TC or XMC_TE\n+\tstorage class.\n+\t(ppc_symbol_new_hook): Handle XMC_TE.\n+\t(ppc_frob_symbol): Likewise.\n+\t(ppc_fix_adjustable): Likewise.\n+\t(md_apply_fix): Handle BFD_RELOC_PPC_TOC16_HI and\n+\tBFD_RELOC_PPC_TOC16_LO.\n+\n 2021-03-10  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/gas/i386/avx512f-intel.d,"
    },
    {
      "sha": "5ae90201e599522c9eafd2d874aeec922c9444e3",
      "filename": "gas/config/tc-ppc.c",
      "status": "modified",
      "additions": 145,
      "deletions": 8,
      "changes": 153,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/gas/config/tc-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/gas/config/tc-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ppc.c?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -2646,6 +2646,87 @@ ppc_elf_adjust_symtab (void)\n     }\n }\n #endif /* OBJ_ELF */\n+\n+#ifdef OBJ_XCOFF\n+/* Parse XCOFF relocations.  */\n+static bfd_reloc_code_real_type\n+ppc_xcoff_suffix (char **str_p)\n+{\n+  struct map_bfd {\n+    const char *string;\n+    unsigned int length : 8;\n+    unsigned int valid32 : 1;\n+    unsigned int valid64 : 1;\n+    unsigned int reloc;\n+  };\n+\n+  char ident[20];\n+  char *str = *str_p;\n+  char *str2;\n+  int ch;\n+  int len;\n+  const struct map_bfd *ptr;\n+\n+#define MAP(str, reloc)   { str, sizeof (str) - 1, 1, 1, reloc }\n+#define MAP32(str, reloc) { str, sizeof (str) - 1, 1, 0, reloc }\n+#define MAP64(str, reloc) { str, sizeof (str) - 1, 0, 1, reloc }\n+\n+  static const struct map_bfd mapping[] = {\n+    MAP (\"l\",\t\t\tBFD_RELOC_PPC_TOC16_LO),\n+    MAP (\"u\",\t\t\tBFD_RELOC_PPC_TOC16_HI),\n+  };\n+\n+  if (*str++ != '@')\n+    return BFD_RELOC_NONE;\n+\n+  for (ch = *str, str2 = ident;\n+       (str2 < ident + sizeof (ident) - 1\n+\t&& (ISALNUM (ch) || ch == '@'));\n+       ch = *++str)\n+    {\n+      *str2++ = TOLOWER (ch);\n+    }\n+\n+  *str2 = '\\0';\n+  len = str2 - ident;\n+\n+  ch = ident[0];\n+  for (ptr = &mapping[0]; ptr->length > 0; ptr++)\n+    if (ch == ptr->string[0]\n+\t&& len == ptr->length\n+\t&& memcmp (ident, ptr->string, ptr->length) == 0\n+\t&& (ppc_obj64 ? ptr->valid64 : ptr->valid32))\n+      {\n+\t*str_p = str;\n+\treturn (bfd_reloc_code_real_type) ptr->reloc;\n+      }\n+\n+  return BFD_RELOC_NONE;\n+}\n+\n+/* Restore XCOFF addis instruction to ELF format.\n+   AIX often generates addis instructions using \"addis RT,D(RA)\"\n+   format instead of the ELF \"addis RT,RA,SI\" one.\n+   On entry RT_E is at the comma after RT, D_E is at the open\n+   parenthesis after D, and RA_E is at the close parenthesis after RA.  */\n+static void\n+ppc_xcoff_fixup_addis (char *rt_e, char *d_e, char *ra_e)\n+{\n+  size_t ra_size = ra_e - d_e - 1;\n+  char *save_ra = xmalloc (ra_size);\n+\n+  /* Copy RA.  */\n+  memcpy (save_ra, d_e + 1, ra_size);\n+  /* Shuffle D to make room for RA, copying the comma too.  */\n+  memmove (rt_e + ra_size + 1, rt_e, d_e - rt_e);\n+  /* Erase the trailing ')', keeping any rubbish for potential errors.  */\n+  memmove (ra_e, ra_e + 1, strlen (ra_e));\n+  /* Write RA back.  */\n+  memcpy (rt_e + 1, save_ra, ra_size);\n+  free (save_ra);\n+}\n+\n+#endif /* OBJ_XCOFF */\n \f\n #if defined (OBJ_XCOFF) || defined (OBJ_ELF)\n /* See whether a symbol is in the TOC section.  */\n@@ -2655,6 +2736,7 @@ ppc_is_toc_sym (symbolS *sym)\n {\n #ifdef OBJ_XCOFF\n   return (symbol_get_tc (sym)->symbol_class == XMC_TC\n+\t  || symbol_get_tc (sym)->symbol_class == XMC_TE\n \t  || symbol_get_tc (sym)->symbol_class == XMC_TC0);\n #endif\n #ifdef OBJ_ELF\n@@ -2920,6 +3002,8 @@ fixup_size (bfd_reloc_code_real_type reloc, bfd_boolean *pc_relative)\n     case BFD_RELOC_PPC_GOT_TPREL16_HI:\n     case BFD_RELOC_PPC_GOT_TPREL16_LO:\n     case BFD_RELOC_PPC_TOC16:\n+    case BFD_RELOC_PPC_TOC16_HI:\n+    case BFD_RELOC_PPC_TOC16_LO:\n     case BFD_RELOC_PPC_TPREL16:\n     case BFD_RELOC_PPC_TPREL16_HA:\n     case BFD_RELOC_PPC_TPREL16_HI:\n@@ -3162,6 +3246,28 @@ md_assemble (char *str)\n   while (ISSPACE (*str))\n     ++str;\n \n+#ifdef OBJ_XCOFF\n+  /* AIX often generates addis instructions using \"addis RT, D(RA)\"\n+     format instead of the classic \"addis RT, RA, SI\" one.\n+     Restore it to the default format as it's the one encoded\n+     in ppc opcodes.  */\n+    if (!strcmp (opcode->name, \"addis\"))\n+      {\n+\tchar *rt_e = strchr (str, ',');\n+\tif (rt_e != NULL\n+\t    && strchr (rt_e + 1, ',') == NULL)\n+\t  {\n+\t    char *d_e = strchr (rt_e + 1, '(');\n+\t    if (d_e != NULL && d_e != rt_e + 1)\n+\t      {\n+\t\tchar *ra_e = strrchr (d_e + 1, ')');\n+\t\tif (ra_e != NULL && ra_e != d_e + 1)\n+\t\t  ppc_xcoff_fixup_addis (rt_e, d_e, ra_e);\n+\t      }\n+\t  }\n+      }\n+#endif\n+\n   /* PowerPC operands are just expressions.  The only real issue is\n      that a few operand types are optional.  If an instruction has\n      multiple optional operands and one is omitted, then all optional\n@@ -3558,6 +3664,9 @@ md_assemble (char *str)\n \t\t}\n \t    }\n #endif /* OBJ_ELF */\n+#ifdef OBJ_XCOFF\n+\t  reloc = ppc_xcoff_suffix (&str);\n+#endif /* OBJ_XCOFF */\n \n \t  if (reloc != BFD_RELOC_NONE)\n \t    ;\n@@ -4336,6 +4445,7 @@ ppc_change_csect (symbolS *sym, offsetT align)\n \tcase XMC_RW:\n \tcase XMC_TC0:\n \tcase XMC_TC:\n+\tcase XMC_TE:\n \tcase XMC_DS:\n \tcase XMC_UA:\n \tcase XMC_BS:\n@@ -5383,7 +5493,21 @@ ppc_tc (int ignore ATTRIBUTE_UNUSED)\n     S_SET_SEGMENT (sym, now_seg);\n     symbol_set_frag (sym, frag_now);\n     S_SET_VALUE (sym, (valueT) frag_now_fix ());\n-    symbol_get_tc (sym)->symbol_class = XMC_TC;\n+\n+    /* AIX assembler seems to allow any storage class to be set in .tc.\n+       But for now, only XMC_TC and XMC_TE are supported by us.  */\n+    switch (symbol_get_tc (sym)->symbol_class)\n+      {\n+      case XMC_TC:\n+      case XMC_TE:\n+\tbreak;\n+\n+      default:\n+\tas_bad (_(\".tc with storage class %d not yet supported\"),\n+\t\tsymbol_get_tc (sym)->symbol_class);\n+\tignore_rest_of_line ();\n+\treturn;\n+      }\n     symbol_get_tc (sym)->output = 1;\n \n     ppc_frob_label (sym);\n@@ -5585,6 +5709,8 @@ ppc_symbol_new_hook (symbolS *sym)\n \ttc->symbol_class = XMC_TB;\n       else if (strcmp (s, \"TC0]\") == 0 || strcmp (s, \"T0]\") == 0)\n \ttc->symbol_class = XMC_TC0;\n+      else if (strcmp (s, \"TE]\") == 0)\n+\ttc->symbol_class = XMC_TE;\n       break;\n     case 'U':\n       if (strcmp (s, \"UA]\") == 0)\n@@ -5757,7 +5883,7 @@ ppc_frob_symbol (symbolS *sym)\n \t  a->x_csect.x_scnlen.l = 0;\n \t  a->x_csect.x_smtyp = XTY_ER;\n \t}\n-      else if (symbol_get_tc (sym)->symbol_class == XMC_TC)\n+      else if (ppc_is_toc_sym (sym))\n \t{\n \t  symbolS *next;\n \n@@ -5767,7 +5893,7 @@ ppc_frob_symbol (symbolS *sym)\n \t  while (symbol_get_tc (next)->symbol_class == XMC_TC0)\n \t    next = symbol_next (next);\n \t  if (next == (symbolS *) NULL\n-\t      || symbol_get_tc (next)->symbol_class != XMC_TC)\n+\t      || (!ppc_is_toc_sym (next)))\n \t    {\n \t      if (ppc_after_toc_frag == (fragS *) NULL)\n \t\ta->x_csect.x_scnlen.l = (bfd_section_size (data_section)\n@@ -6053,7 +6179,8 @@ ppc_fix_adjustable (fixS *fix)\n \n \t  if (sy_tc->symbol_class == XMC_TC0)\n \t    continue;\n-\t  if (sy_tc->symbol_class != XMC_TC)\n+\t  if (sy_tc->symbol_class != XMC_TC\n+\t      && sy_tc->symbol_class != XMC_TE)\n \t    break;\n \t  if (val == resolve_symbol_value (sy))\n \t    {\n@@ -6072,6 +6199,7 @@ ppc_fix_adjustable (fixS *fix)\n   if (tc->subseg == 0\n       && tc->symbol_class != XMC_TC0\n       && tc->symbol_class != XMC_TC\n+      && tc->symbol_class != XMC_TE\n       && symseg != bss_section\n       /* Don't adjust if this is a reloc in the toc section.  */\n       && (symseg != data_section\n@@ -6516,8 +6644,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg)\n \t  && (operand->insert == NULL || ppc_obj64)\n \t  && fixP->fx_addsy != NULL\n \t  && symbol_get_tc (fixP->fx_addsy)->subseg != 0\n-\t  && symbol_get_tc (fixP->fx_addsy)->symbol_class != XMC_TC\n-\t  && symbol_get_tc (fixP->fx_addsy)->symbol_class != XMC_TC0\n+\t  && !ppc_is_toc_sym (fixP->fx_addsy)\n \t  && S_GET_SEGMENT (fixP->fx_addsy) != bss_section)\n \t{\n \t  value = fixP->fx_offset;\n@@ -6531,7 +6658,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg)\n        if (fixP->fx_r_type == BFD_RELOC_16\n            && fixP->fx_addsy != NULL\n            && ppc_is_toc_sym (fixP->fx_addsy))\n-         fixP->fx_r_type = BFD_RELOC_PPC_TOC16;\n+\t fixP->fx_r_type = BFD_RELOC_PPC_TOC16;\n #endif\n     }\n \n@@ -6984,6 +7111,8 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg)\n \tcase BFD_RELOC_PPC_EMB_RELSDA:\n \tcase BFD_RELOC_PPC64_TOC:\n \tcase BFD_RELOC_PPC_TOC16:\n+\tcase BFD_RELOC_PPC_TOC16_LO:\n+\tcase BFD_RELOC_PPC_TOC16_HI:\n \tcase BFD_RELOC_PPC64_TOC16_LO:\n \tcase BFD_RELOC_PPC64_TOC16_HI:\n \tcase BFD_RELOC_PPC64_TOC16_HA:\n@@ -7061,14 +7190,22 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg)\n \tsymbol_get_bfdsym (fixP->fx_addsy)->flags |= BSF_KEEP;\n     }\n #else\n-  if (fixP->fx_r_type != BFD_RELOC_PPC_TOC16)\n+  if (fixP->fx_r_type != BFD_RELOC_PPC_TOC16\n+      && fixP->fx_r_type != BFD_RELOC_PPC_TOC16_HI\n+      && fixP->fx_r_type != BFD_RELOC_PPC_TOC16_LO)\n     fixP->fx_addnumber = 0;\n   else\n     {\n       /* We want to use the offset within the toc, not the actual VMA\n \t of the symbol.  */\n       fixP->fx_addnumber = (- bfd_section_vma (S_GET_SEGMENT (fixP->fx_addsy))\n \t\t\t    - S_GET_VALUE (ppc_toc_csect));\n+\n+      /* The high bits must be adjusted for the low bits being signed.  */\n+      if (fixP->fx_r_type == BFD_RELOC_PPC_TOC16_HI) {\n+\tfixP->fx_addnumber += 0x8000;\n+      }\n+\n       /* Set *valP to avoid errors.  */\n       *valP = value;\n     }"
    },
    {
      "sha": "024ea0df49323c63f14b59a9a728dc8ac88b7ee0",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -1,3 +1,13 @@\n+2021-03-12  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\t* scripttempl/aix.sc: Add .te to .data section.\n+\t* testsuite/ld-powerpc/aix52.exp: Add test structure for AIX7+.\n+\tAdd aix-largetoc-1 test.\n+\t* testsuite/ld-powerpc/aix-largetoc-1-32.d: New test.\n+\t* testsuite/ld-powerpc/aix-largetoc-1-64.d: New test.\n+\t* testsuite/ld-powerpc/aix-largetoc-1.ex: New test.\n+\t* testsuite/ld-powerpc/aix-largetoc-1.s: New test.\n+\n 2021-03-12  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-gc/gc.exp: Pass \"-image-base 0\" to ld for PE, and"
    },
    {
      "sha": "aa129d98fb515949e35484dfcc07661003192710",
      "filename": "ld/scripttempl/aix.sc",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/scripttempl/aix.sc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/scripttempl/aix.sc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/scripttempl/aix.sc?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -52,6 +52,7 @@ SECTIONS\n     *(.tc0)\n     *(.tc)\n     *(.td)\n+    *(.te)\n     ${RELOCATING+PROVIDE (_edata = .);}\n   }\n   .bss : {"
    },
    {
      "sha": "d39bc696eaec921c30c466b47c604f2c1389c991",
      "filename": "ld/testsuite/ld-powerpc/aix-largetoc-1-32.d",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/testsuite/ld-powerpc/aix-largetoc-1-32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/testsuite/ld-powerpc/aix-largetoc-1-32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/aix-largetoc-1-32.d?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -0,0 +1,20 @@\n+#source: aix-largetoc-1.s\n+#as: -a32\n+#ld: -b32 -shared -bE:aix-largetoc-1.ex\n+#objdump: -dr\n+#target: [is_xcoff_format]\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+.* <\\.foo>:\n+.*:\t3d 22 00 00 \tcau     r9,r2,0\n+.*: R_TOCU\ta-.*\n+.*:\t39 29 00 00 \tcal     r9,0\\(r9\\)\n+.*: R_TOCL\ta-.*\n+.*:\t3d 22 00 00 \tcau     r9,r2,0\n+.*: R_TOCU\tb-.*\n+.*:\t39 29 00 04 \tcal     r9,4\\(r9\\)\n+.*: R_TOCL\tb-.*\n+#..."
    },
    {
      "sha": "daf6e0feb009a136fa1ff2231bcc3fb38b485ab2",
      "filename": "ld/testsuite/ld-powerpc/aix-largetoc-1-64.d",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/testsuite/ld-powerpc/aix-largetoc-1-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/testsuite/ld-powerpc/aix-largetoc-1-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/aix-largetoc-1-64.d?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -0,0 +1,20 @@\n+#source: aix-largetoc-1.s\n+#as: -a64\n+#ld: -b64 -shared -bE:aix-largetoc-1.ex\n+#objdump: -dr\n+#target: [is_xcoff_format]\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+.* <\\.foo>:\n+.*:\t3d 22 00 00 \taddis   r9,r2,0\n+.*: R_TOCU\ta-.*\n+.*:\t39 29 00 00 \taddi    r9,r9,0\n+.*: R_TOCL\ta-.*\n+.*:\t3d 22 00 00 \taddis   r9,r2,0\n+.*: R_TOCU\tb-.*\n+.*:\t39 29 00 08 \taddi    r9,r9,8\n+.*: R_TOCL\tb-.*\n+#..."
    },
    {
      "sha": "257cc5642cb1a054f08cc83f2d943e56fd3ebe99",
      "filename": "ld/testsuite/ld-powerpc/aix-largetoc-1.ex",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/testsuite/ld-powerpc/aix-largetoc-1.ex",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/testsuite/ld-powerpc/aix-largetoc-1.ex",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/aix-largetoc-1.ex?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -0,0 +1 @@\n+foo"
    },
    {
      "sha": "278390300c2db53b330a7539ee4516b8f060381b",
      "filename": "ld/testsuite/ld-powerpc/aix-largetoc-1.s",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/testsuite/ld-powerpc/aix-largetoc-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/testsuite/ld-powerpc/aix-largetoc-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/aix-largetoc-1.s?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -0,0 +1,25 @@\n+\t.globl a\n+\t.csect .data[RW]\n+a:\n+\t.long\t1\n+\t.toc\n+\t.tc a[TE],a\n+\t.tc b[TE],a\n+\n+\t.globl foo\n+\t.globl .foo\n+\t.csect foo[DS],3\n+foo:\n+\t.if size == 32\n+\t.long .foo, TOC[tc0], 0\n+\t.else\n+\t.llong .foo, TOC[tc0], 0\n+\t.endif\n+\n+\t.csect .text[PR]\n+.foo:\n+\taddis 9,a[TE]@u(2)\n+\tla 9,a[TE]@l(9)\n+\n+\taddis 9,b[TE]@u(2)\n+\tla 9,b[TE]@l(9)"
    },
    {
      "sha": "3dfbae006251218922e8460ad0ed7f88806712d5",
      "filename": "ld/testsuite/ld-powerpc/aix52.exp",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/testsuite/ld-powerpc/aix52.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a403be0c1b4540e22c8c608ea0bfecbf0f85e51/ld/testsuite/ld-powerpc/aix52.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/aix52.exp?ref=4a403be0c1b4540e22c8c608ea0bfecbf0f85e51",
      "patch": "@@ -266,3 +266,20 @@ run_dump_test \"aix-glink-3-32\"\n run_dump_test \"aix-glink-3-64\"\n run_dump_test \"aix-weak-3-32\"\n run_dump_test \"aix-weak-3-64\"\n+\n+\n+# Tests added for features in AIX 7+.\n+\n+set aix7tests {\n+    {\"Large TOC test 1\" \"-shared -bE:aix-largetoc-1.ex\"\n+\t\"\" {aix-largetoc-1.s}\n+\t{{objdump -dr aix-largetoc-1-SIZE.d}}\n+\t\"aix-largetoc-1.so\"}\n+}\n+\n+foreach test $aix7tests {\n+    foreach { name ldopts asopts sources tools output } $test {\n+\trun_aix_test 32 $name $ldopts $asopts $sources $tools $output\n+\trun_aix_test 64 $name $ldopts $asopts $sources $tools $output\n+    }\n+}"
    }
  ]
}