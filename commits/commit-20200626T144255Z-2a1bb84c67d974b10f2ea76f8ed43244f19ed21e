{
  "sha": "2a1bb84c67d974b10f2ea76f8ed43244f19ed21e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmExYmI4NGM2N2Q5NzRiMTBmMmVhNzZmOGVkNDMyNDRmMTllZDIxZQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-06-26T14:42:55Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-06-26T14:42:55Z"
    },
    "message": "x86: fix processing of -M disassembler option\n\nMultiple -M options can be specified in any order. Therefore stright\nassignment to fields affected needs to be avoided, such that earlier\noptions' effects won't be discarded. This was in particular a problem\nfor -Msuffix followed by certain of the other sub-options.\n\nWhile updating documentation, take the liberty and also drop the\nredundant mentioning of being able to comma-separate multiple options.",
    "tree": {
      "sha": "2325a9a4109ea5199526833165a56fb365ad81dc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2325a9a4109ea5199526833165a56fb365ad81dc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f53b3eeb677aace413d45b4b3c9d23d57d7167fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f53b3eeb677aace413d45b4b3c9d23d57d7167fc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f53b3eeb677aace413d45b4b3c9d23d57d7167fc"
    }
  ],
  "stats": {
    "total": 91,
    "additions": 84,
    "deletions": 7
  },
  "files": [
    {
      "sha": "6db2be3262c3cee85c3817fb48255dc6cf5d899d",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=2a1bb84c67d974b10f2ea76f8ed43244f19ed21e",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-26  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* doc/binutils.texi: Adjust description of x86's -Msuffix. Drop\n+\tredundant text from x86 specific part of -M section.\n+\n 2020-06-26  Pat Bernardi  <bernardi@adacore.com>\n \n \t* readelf.c (display_m68k_gnu_attribute): New function."
    },
    {
      "sha": "b93cde05b4e835967c058b2991e0f03bccb80d1c",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=2a1bb84c67d974b10f2ea76f8ed43244f19ed21e",
      "patch": "@@ -2471,8 +2471,7 @@ option or whether instruction notes should be generated as comments in the\n disasssembly using @option{-M notes}.\n \n For the x86, some of the options duplicate functions of the @option{-m}\n-switch, but allow finer grained control.  Multiple selections from the\n-following may be specified as a comma separated string.\n+switch, but allow finer grained control.\n @table @code\n @item x86-64\n @itemx i386\n@@ -2503,8 +2502,10 @@ will be overridden if @code{x86-64}, @code{i386} or @code{i8086}\n appear later in the option string.\n \n @item suffix\n-When in AT&T mode, instructs the disassembler to print a mnemonic\n-suffix even when the suffix could be inferred by the operands.\n+When in AT&T mode and also for a limited set of instructions when in Intel\n+mode, instructs the disassembler to print a mnemonic suffix even when the\n+suffix could be inferred by the operands or, for certain instructions, the\n+execution mode's defaults.\n @end table\n \n For PowerPC, the @option{-M} argument @option{raw} selects"
    },
    {
      "sha": "3ad1394ddd4a127b39fe3421a6d5028ee8c91bc5",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=2a1bb84c67d974b10f2ea76f8ed43244f19ed21e",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-26  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* testsuite/gas/i386/nop-1-suffix.d: New.\n+\t* testsuite/gas/i386/i386.exp: Run new test.\n+\n 2020-06-26  Pat Bernardi  <bernardi@adacore.com>\n \n \t* config/tc-m68k.c (m68k_elf_gnu_attribute): New function."
    },
    {
      "sha": "6bee5fc9d8e36f5d7bf2ef30b9ea174611fc231d",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=2a1bb84c67d974b10f2ea76f8ed43244f19ed21e",
      "patch": "@@ -502,6 +502,7 @@ if [expr ([istarget \"i*86-*-*\"] ||  [istarget \"x86_64-*-*\"]) && [gas_32_check]]\n     run_dump_test \"align-1b\"\n     run_list_test \"inval-pseudo\" \"-al\"\n     run_dump_test \"nop-1\"\n+    run_dump_test \"nop-1-suffix\"\n     run_dump_test \"nop-2\"\n     run_dump_test \"optimize-1\"\n     run_dump_test \"optimize-1a\""
    },
    {
      "sha": "f9f09feb112b82fc982c747c0ef68908632f0323",
      "filename": "gas/testsuite/gas/i386/nop-1-suffix.d",
      "status": "added",
      "additions": 60,
      "deletions": 0,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/gas/testsuite/gas/i386/nop-1-suffix.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/gas/testsuite/gas/i386/nop-1-suffix.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/nop-1-suffix.d?ref=2a1bb84c67d974b10f2ea76f8ed43244f19ed21e",
      "patch": "@@ -0,0 +1,60 @@\n+#objdump: -dwMsuffix,i386\n+#name: i386 .nops 1 w/ suffix and forced arch\n+#source: nop-1.s\n+\n+.*: +file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+ <single>:\n+ +[a-f0-9]+:\t90                   \tnop\n+\n+0+1 <pseudo_1>:\n+ +[a-f0-9]+:\t90                   \tnop\n+\n+0+2 <pseudo_8>:\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t90                   \tnop\n+\n+0+a <pseudo_8_4>:\n+ +[a-f0-9]+:\t8d 74 26 00          \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d 74 26 00          \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+\n+0+12 <pseudo_20>:\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b6 00 00 00 00    \tleal   0x0\\(%esi\\),%esi\n+\n+0+26 <pseudo_30>:\n+ +[a-f0-9]+:\teb 1c                \tjmp    44 <pseudo_129>\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+\n+0+44 <pseudo_129>:\n+ +[a-f0-9]+:\teb 7f                \tjmp    c5 <end>\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t8d b4 26 00 00 00 00 \tleal   0x0\\(%esi,%eiz,1\\),%esi\n+ +[a-f0-9]+:\t90                   \tnop\n+\n+0+c5 <end>:\n+ +[a-f0-9]+:\t31 c0                \txorl   %eax,%eax\n+#pass"
    },
    {
      "sha": "dfc94fbfbbeeaa012704ddd55947428964416479",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=2a1bb84c67d974b10f2ea76f8ed43244f19ed21e",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-26  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c: (print_insn): Avoid straight assignment to\n+\tpriv.orig_sizeflag when processing -M sub-options.\n+\n 2020-06-25  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-dis.c: Adjust description of J macro."
    },
    {
      "sha": "f57409dd17a89a2326f3a1689763dfec47682641",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a1bb84c67d974b10f2ea76f8ed43244f19ed21e/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=2a1bb84c67d974b10f2ea76f8ed43244f19ed21e",
      "patch": "@@ -11851,17 +11851,17 @@ print_insn (bfd_vma pc, disassemble_info *info)\n       else if (CONST_STRNEQ (p, \"x86-64\"))\n \t{\n \t  address_mode = mode_64bit;\n-\t  priv.orig_sizeflag = AFLAG | DFLAG;\n+\t  priv.orig_sizeflag |= AFLAG | DFLAG;\n \t}\n       else if (CONST_STRNEQ (p, \"i386\"))\n \t{\n \t  address_mode = mode_32bit;\n-\t  priv.orig_sizeflag = AFLAG | DFLAG;\n+\t  priv.orig_sizeflag |= AFLAG | DFLAG;\n \t}\n       else if (CONST_STRNEQ (p, \"i8086\"))\n \t{\n \t  address_mode = mode_16bit;\n-\t  priv.orig_sizeflag = 0;\n+\t  priv.orig_sizeflag &= ~(AFLAG | DFLAG);\n \t}\n       else if (CONST_STRNEQ (p, \"intel\"))\n \t{"
    }
  ]
}