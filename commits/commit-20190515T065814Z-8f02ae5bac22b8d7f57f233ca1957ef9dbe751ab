{
  "sha": "8f02ae5bac22b8d7f57f233ca1957ef9dbe751ab",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGYwMmFlNWJhYzIyYjhkN2Y1N2YyMzNjYTE5NTdlZjlkYmU3NTFhYg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-05-15T01:54:09Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-05-15T06:58:14Z"
    },
    "message": ".file file number checking\n\nThis adds another test for file numbers given in .file directives,\nchecking that the value can be represented as an unsigned int and that\na memory allocation expression doesn't overflow.  I removed a test\nadded recently since an earlier test (num < 1) already covers the\n(num < 0) case.\n\n\t* dwarf2dbg.c: Whitespace fixes.\n\t(get_filenum): Don't strdup \"file\".  Adjust error message.\n\t(dwarf2_directive_filename): Use an unsigned type for \"num\".\n\tCatch truncation of file number and overflow of get_filenum\n\tXRESIZEVEC multiplication.  Delete dead code.",
    "tree": {
      "sha": "2a985230a419770d3d7c958e58798c60af85a120",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2a985230a419770d3d7c958e58798c60af85a120"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8f02ae5bac22b8d7f57f233ca1957ef9dbe751ab",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8f02ae5bac22b8d7f57f233ca1957ef9dbe751ab",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8f02ae5bac22b8d7f57f233ca1957ef9dbe751ab",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8f02ae5bac22b8d7f57f233ca1957ef9dbe751ab/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ded12894f5a2836b06c997b899d04c9f692004c1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ded12894f5a2836b06c997b899d04c9f692004c1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ded12894f5a2836b06c997b899d04c9f692004c1"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 31,
    "deletions": 22
  },
  "files": [
    {
      "sha": "be6938429e5cbf51316f555e6280cac5cd9da7ca",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 9,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f02ae5bac22b8d7f57f233ca1957ef9dbe751ab/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f02ae5bac22b8d7f57f233ca1957ef9dbe751ab/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=8f02ae5bac22b8d7f57f233ca1957ef9dbe751ab",
      "patch": "@@ -1,3 +1,11 @@\n+2019-05-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf2dbg.c: Whitespace fixes.\n+\t(get_filenum): Don't strdup \"file\".  Adjust error message.\n+\t(dwarf2_directive_filename): Use an unsigned type for \"num\".\n+\tCatch truncation of file number and overflow of get_filenum\n+\tXRESIZEVEC multiplication.  Delete dead code.\n+\n 2019-05-15  Alan Modra  <amodra@gmail.com>\n \n \tPR 24538\n@@ -256,7 +264,7 @@\n \n 2019-04-29  John Darrington <john@darrington.wattle.id.au>\n \n-        * testsuite/gas/s12z/truncated.d: New file.\n+\t* testsuite/gas/s12z/truncated.d: New file.\n \t* testsuite/gas/s12z/truncated.s: New file.\n \t* testsuite/gas/s12z/s12z.exp: Add new test.\n \n@@ -509,7 +517,7 @@\n \t* testsuite/gas/arm/archv8m_1m-cmse-main.s: Likewise.\n \n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-            Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (operand_parse_code): Add OP_LR and OP_oLR\n \tfor the LR operand and optional LR operand.\n@@ -531,7 +539,7 @@\n \t* testsuite/gas/arm/armv8_1-m-tloop-bad.l: New.\n \n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-            Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (T16_32_TAB): New entriy for bfcsel.\n \t(do_t_v8_1_branch): New switch case for bfcsel.\n@@ -552,7 +560,7 @@\n \t(tc_gen_reloc): Likewise.\n \n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-            Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (T16_32_TAB): New entrie for bfl.\n \t(do_t_v8_1_branch): New switch case for bfl.\n@@ -584,7 +592,7 @@\n \t* testsuite/gas/arm/armv8_1-m-bf-exchange-bad.d: New\n \n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n-            Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (T16_32_TAB): New entries for bf.\n \t(do_t_branch_future): New.\n@@ -660,11 +668,11 @@\n \t* testsuite/gas/mips/mips.exp: Run the new test.\n \n 2019-04-12  John Darrington <john@darrington.wattle.id.au>\n-\t\n+\n \tconfig/tc-s12z.h: Remove definition of macro TC_M68K\n \n 2019-04-01  John Darrington <john@darrington.wattle.id.au>\n-\t\n+\n \tconfig/tc-s12z.c: Use bfd_boolean where appropriate.\n \n 2019-04-11  Max Filippov  <jcmvbkbc@gmail.com>\n@@ -1292,7 +1300,7 @@\n \n 2019-01-31  John Darrington <john@darrington.wattle.id.au>\n \n-        * config/tc-s12z.c (lex_imm): Add new argument exp_o.\n+\t* config/tc-s12z.c (lex_imm): Add new argument exp_o.\n \t(emit_reloc): New function.\n \t(md_apply_fix): [BFD_RELOC_S12Z_OPR] Recognise that it\n \tcan be either 2 bytes or 3 bytes long.\n@@ -1545,7 +1553,7 @@\n \n 2019-01-09  John Darrington <john@darrington.wattle.id.au>\n \n-        * testsuite/gas/s12z/jsr.s: New case.\n+\t* testsuite/gas/s12z/jsr.s: New case.\n \t* testsuite/gas/s12z/jsr.d: New case.\n \n 2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>"
    },
    {
      "sha": "5f804f15413283bc7877b35198adf0b7aeed2e66",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 14,
      "deletions": 13,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f02ae5bac22b8d7f57f233ca1957ef9dbe751ab/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f02ae5bac22b8d7f57f233ca1957ef9dbe751ab/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=8f02ae5bac22b8d7f57f233ca1957ef9dbe751ab",
      "patch": "@@ -754,15 +754,15 @@ get_filenum (const char *filename, unsigned int num)\n       /* Catch wraparound.  */\n       if (files_allocated <= old)\n \t{\n-\t  as_bad (_(\"file number %u is too big\"), i);\n+\t  as_bad (_(\"file number %lu is too big\"), (unsigned long) i);\n \t  return 0;\n \t}\n \n       files = XRESIZEVEC (struct file_entry, files, files_allocated);\n       memset (files + old, 0, (i + 32 - old) * sizeof (struct file_entry));\n     }\n \n-  files[i].filename = num ? file : xstrdup (file);\n+  files[i].filename = file;\n   files[i].dir = dir;\n   if (files_in_use < i + 1)\n     files_in_use = i + 1;\n@@ -781,7 +781,7 @@ get_filenum (const char *filename, unsigned int num)\n char *\n dwarf2_directive_filename (void)\n {\n-  offsetT num;\n+  valueT num;\n   char *filename;\n   int filename_len;\n \n@@ -799,7 +799,7 @@ dwarf2_directive_filename (void)\n     return NULL;\n   demand_empty_rest_of_line ();\n \n-  if (num < 1)\n+  if ((offsetT) num < 1)\n     {\n       as_bad (_(\"file number less than one\"));\n       return NULL;\n@@ -809,14 +809,15 @@ dwarf2_directive_filename (void)\n      being supplied.  Turn off gas generated debug info.  */\n   debug_type = DEBUG_NONE;\n \n-  if (num < (offsetT) files_in_use && files[num].filename != 0)\n+  if (num != (unsigned int) num\n+      || num >= (size_t) -1 / sizeof (struct file_entry) - 32)\n     {\n-      as_bad (_(\"file number %ld already allocated\"), (long) num);\n+      as_bad (_(\"file number %lu is too big\"), (unsigned long) num);\n       return NULL;\n     }\n-  else if (num < 0)\n+  if (num < files_in_use && files[num].filename != 0)\n     {\n-      as_bad (_(\"file number %ld is too small!\"), (long) num);\n+      as_bad (_(\"file number %u already allocated\"), (unsigned int) num);\n       return NULL;\n     }\n \n@@ -1172,10 +1173,10 @@ scale_addr_delta (addressT *addr_delta)\n   if (DWARF2_LINE_MIN_INSN_LENGTH > 1)\n     {\n       if (*addr_delta % DWARF2_LINE_MIN_INSN_LENGTH != 0  && !printed_this)\n-        {\n+\t{\n \t  as_bad(\"unaligned opcodes detected in executable segment\");\n-          printed_this = 1;\n-        }\n+\t  printed_this = 1;\n+\t}\n       *addr_delta /= DWARF2_LINE_MIN_INSN_LENGTH;\n     }\n }\n@@ -1750,10 +1751,10 @@ out_file_list (void)\n       out_uleb128 (files[i].dir);\t/* directory number */\n       /* Output the last modification timestamp.  */\n       out_uleb128 (DWARF2_FILE_TIME_NAME (files[i].filename,\n-\t\t\t\t          files[i].dir ? dirs [files [i].dir] : \"\"));\n+\t\t\t\t\t  files[i].dir ? dirs [files [i].dir] : \"\"));\n       /* Output the filesize.  */\n       out_uleb128 (DWARF2_FILE_SIZE_NAME (files[i].filename,\n-\t\t\t\t          files[i].dir ? dirs [files [i].dir] : \"\"));\n+\t\t\t\t\t  files[i].dir ? dirs [files [i].dir] : \"\"));\n     }\n \n   /* Terminate filename list.  */"
    }
  ]
}