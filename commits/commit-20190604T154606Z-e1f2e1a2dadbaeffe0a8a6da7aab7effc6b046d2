{
  "sha": "e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTFmMmUxYTJkYWRiYWVmZmUwYThhNmRhN2FhYjdlZmZjNmIwNDZkMg==",
  "commit": {
    "author": {
      "name": "Christian Biesinger via gdb-patches",
      "email": "gdb-patches@sourceware.org",
      "date": "2019-05-23T21:37:29Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-06-04T15:46:06Z"
    },
    "message": "Add an objfile getter to gdb.Type\n\nThis allows users of the Python API to find the objfile where a type\nwas defined.\n\ngdb/ChangeLog:\n\ngdb/ChangeLog\n2019-06-04  Christian Biesinger  <cbiesinger@google.com>\n\n\tAdd objfile property to gdb.Type.\n\t* gdb/NEWS: Mention Python API addition.\n\t* gdb/python/py-type.c (typy_get_objfile): New method.\n\ngdb/doc/ChangeLog\n2019-06-04  Christian Biesinger  <cbiesinger@google.com>\n\n\t* gdb/doc/python.texi: Document new gdb.Type.objfile property.\n\ngdb/testsuite/ChangeLog\n2019-06-04  Christian Biesinger  <cbiesinger@google.com>\n\n\t* gdb/testsuite/gdb.python/py-type.exp: Test for new\n\t  gdb.Type.objfile property.",
    "tree": {
      "sha": "c9b8498d0f320163e8edef62c5e2c5619028b27d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c9b8498d0f320163e8edef62c5e2c5619028b27d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/comments",
  "author": null,
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a9d96ab97edabea31bed089bfd4caca80838e31c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9d96ab97edabea31bed089bfd4caca80838e31c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a9d96ab97edabea31bed089bfd4caca80838e31c"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 41,
    "deletions": 0
  },
  "files": [
    {
      "sha": "933f23249ffc738bb130ca1f772e9522cf1eca58",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2",
      "patch": "@@ -1,3 +1,9 @@\n+2019-06-04  Christian Biesinger  <cbiesinger@google.com>\n+\n+\tAdd objfile property to gdb.Type.\n+\t* gdb/NEWS: Mention Python API addition.\n+\t* gdb/python/py-type.c (typy_get_objfile): New method.\n+\n 2019-06-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* NEWS: Mention the new set|show style [title|highlight]."
    },
    {
      "sha": "ded1fce406c3acbbd09fad0ff7315d4965878d84",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2",
      "patch": "@@ -27,6 +27,9 @@\n      'array_indexes', 'symbols', 'unions', 'deref_refs', 'actual_objects',\n      'static_members', 'max_elements', 'repeat_threshold', and 'format'.\n \n+  ** gdb.Type has a new property 'objfile' which returns the objfile the\n+     type was defined in.\n+\n * New built-in convenience variables $_shell_exitcode and $_shell_exitsignal\n   provide the exitcode or exit status of the shell commands launched by\n   GDB commands such as \"shell\", \"pipe\" and \"make\"."
    },
    {
      "sha": "ea98096845a5487a71f033bab9911eb05666a139",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2",
      "patch": "@@ -1,3 +1,7 @@\n+2019-06-04  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* gdb/doc/python.texi: Document new gdb.Type.objfile property.\n+\n 2019-06-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* gdb.texinfo (Help): Document the new -v apropos flag."
    },
    {
      "sha": "f769ad03a2b3b4455f457eae21977a8d1479c7c7",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2",
      "patch": "@@ -1087,6 +1087,11 @@ languages have this concept.  If this type has no tag name, then\n @code{None} is returned.\n @end defvar\n \n+@defvar Type.objfile\n+The @code{gdb.Objfile} that this type was defined in, or @code{None} if\n+there is no associated objfile.\n+@end defvar\n+\n The following methods are provided:\n \n @defun Type.fields ()"
    },
    {
      "sha": "7b99beacae02ad3b1e535aaf0fcb87c434dd4de4",
      "filename": "gdb/python/py-type.c",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/python/py-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/python/py-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-type.c?ref=e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2",
      "patch": "@@ -413,6 +413,18 @@ typy_get_tag (PyObject *self, void *closure)\n   return PyString_FromString (tagname);\n }\n \n+/* Return the type's objfile, or None.  */\n+static PyObject *\n+typy_get_objfile (PyObject *self, void *closure)\n+{\n+  struct type *type = ((type_object *) self)->type;\n+  struct objfile *objfile = TYPE_OBJFILE (type);\n+\n+  if (objfile == nullptr)\n+    Py_RETURN_NONE;\n+  return objfile_to_objfile_object (objfile).release ();\n+}\n+\n /* Return the type, stripped of typedefs. */\n static PyObject *\n typy_strip_typedefs (PyObject *self, PyObject *args)\n@@ -1419,6 +1431,8 @@ static gdb_PyGetSetDef type_object_getset[] =\n     \"The size of this type, in bytes.\", NULL },\n   { \"tag\", typy_get_tag, NULL,\n     \"The tag name for this type, or None.\", NULL },\n+  { \"objfile\", typy_get_objfile, NULL,\n+    \"The objfile this type was defined in, or None.\", NULL },\n   { NULL }\n };\n "
    },
    {
      "sha": "af451fa4e12b8f7090eac86e2b1236b93e7ea330",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-04  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* gdb/testsuite/gdb.python/py-type.exp: Test for new\n+\t  gdb.Type.objfile property.\n+\n 2019-06-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* lib/gdb.exp (help_list_trailer): New regexp variable"
    },
    {
      "sha": "da4d4a7228348526a1e2c0d52d68735516e510a9",
      "filename": "gdb/testsuite/gdb.python/py-type.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/testsuite/gdb.python/py-type.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2/gdb/testsuite/gdb.python/py-type.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-type.exp?ref=e1f2e1a2dadbaeffe0a8a6da7aab7effc6b046d2",
      "patch": "@@ -98,6 +98,8 @@ proc test_fields {lang} {\n     gdb_py_test_silent_cmd \"print (st)\" \"print value (st)\" 1\n     gdb_py_test_silent_cmd \"python st = gdb.history (0)\" \"get value (st) from history\" 1\n     gdb_py_test_silent_cmd \"python fields = st.type.fields()\" \"get fields from st.type\" 1\n+    gdb_test \"python print (st.type.objfile.filename == gdb.current_progspace ().filename)\" \"True\" \\\n+      \"check type.objfile\"\n     gdb_test \"python print (len(fields))\" \"2\" \"check number of fields (st)\"\n     gdb_test \"python print (fields\\[0\\].name)\" \"a\" \"check structure field a name\"\n     gdb_test \"python print (fields\\[1\\].name)\" \"b\" \"check structure field b name\"\n@@ -269,6 +271,8 @@ if { [build_inferior \"${binfile}\" \"c\"] == 0 } {\n   # Skip all tests if Python scripting is not enabled.\n   if { [skip_python_tests] } { continue }\n \n+  gdb_test \"python print (gdb.lookup_type ('char').objfile)\" \"None\"\n+\n   gdb_test \"python print(gdb.lookup_type('char').array(1, 0))\" \\\n       \"char \\\\\\[0\\\\\\]\"\n "
    }
  ]
}