{
  "sha": "5fb97639911a4ab55f0287b5deea2f06d83a5f8c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWZiOTc2Mzk5MTFhNGFiNTVmMDI4N2I1ZGVlYTJmMDZkODNhNWY4Yw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-01-22T16:25:15Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-02-08T09:51:45Z"
    },
    "message": "gdb/testsuite: fix implementation of delete line in tuiterm.exp\n\nThe implementation of the delete line escape sequence in tuiterm.exp\nwas wrong.  Delete should take a count and then delete COUNT lines at\nthe current cursor location, all remaining lines in the scroll region\nare moved up to replace the deleted lines, with blank lines being\nadded at the end of the scroll region.\n\nIt's not clear to me what \"scroll region\" means here (or at least how\nthat is defined), but for now I'm just treating the whole screen as\nthe scroll region, which seems to work fine.\n\nIn contrast the current broken implementation deletes COUNT lines at\nthe cursor location moving the next COUNT lines up to fill the gap.\nThe rest of the screen is then cleared.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.tui/scroll.exp: New file.\n\t* gdb.tui/tui-layout-asm-short-prog.exp: Update expected results.\n\t* lib/tuiterm.exp (Term::_csi_M): Delete count lines, scroll\n\tremaining lines up.\n\t(Term::check_region_contents): New proc.\n\t(Term::check_box_contents): Use check_region_contents.",
    "tree": {
      "sha": "c983cfd40d8351f71a2b0cbb00fd2d05b81c5377",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c983cfd40d8351f71a2b0cbb00fd2d05b81c5377"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5fb97639911a4ab55f0287b5deea2f06d83a5f8c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5fb97639911a4ab55f0287b5deea2f06d83a5f8c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5fb97639911a4ab55f0287b5deea2f06d83a5f8c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5fb97639911a4ab55f0287b5deea2f06d83a5f8c/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d6f2700b4863f24d8fdab2f549a39a9453b86e93",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d6f2700b4863f24d8fdab2f549a39a9453b86e93",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d6f2700b4863f24d8fdab2f549a39a9453b86e93"
    }
  ],
  "stats": {
    "total": 124,
    "additions": 106,
    "deletions": 18
  },
  "files": [
    {
      "sha": "5082f1d96dbaf0660557cf707d775fea7e20fca2",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fb97639911a4ab55f0287b5deea2f06d83a5f8c/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fb97639911a4ab55f0287b5deea2f06d83a5f8c/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=5fb97639911a4ab55f0287b5deea2f06d83a5f8c",
      "patch": "@@ -1,3 +1,12 @@\n+2021-02-08  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.tui/scroll.exp: New file.\n+\t* gdb.tui/tui-layout-asm-short-prog.exp: Update expected results.\n+\t* lib/tuiterm.exp (Term::_csi_M): Delete count lines, scroll\n+\tremaining lines up.\n+\t(Term::check_region_contents): New proc.\n+\t(Term::check_box_contents): Use check_region_contents.\n+\n 2021-02-06  Tom de Vries  <tdevries@suse.de>\n \n \tPR testsuite/26922"
    },
    {
      "sha": "4566bd8f5c7b68cb520d9bda9c52022cf8a1dc8b",
      "filename": "gdb/testsuite/gdb.tui/scroll.exp",
      "status": "added",
      "additions": 62,
      "deletions": 0,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fb97639911a4ab55f0287b5deea2f06d83a5f8c/gdb/testsuite/gdb.tui/scroll.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fb97639911a4ab55f0287b5deea2f06d83a5f8c/gdb/testsuite/gdb.tui/scroll.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/scroll.exp?ref=5fb97639911a4ab55f0287b5deea2f06d83a5f8c",
      "patch": "@@ -0,0 +1,62 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Check scrolling in the command window.  This test only covers the\n+# case where scrolling in the command window is caused by issuing many\n+# non-inferior related commands, as once the inferior is given control\n+# the terminal settings are modified and our tuiterm library really\n+# gets confused.\n+\n+tuiterm_env\n+\n+standard_testfile tui-layout.c\n+\n+if {[build_executable \"failed to prepare\" ${testfile} ${srcfile}] == -1} {\n+    return -1\n+}\n+\n+Term::clean_restart 24 80 $testfile\n+if {![Term::enter_tui]} {\n+    unsupported \"TUI not supported\"\n+    return\n+}\n+\n+for {set i 0} {$i < 10} {incr i 1} {\n+    Term::command \"p $i\"\n+}\n+\n+# Now check that the contents of the command window are as expected.\n+#\n+# Well, we would if there wasn't a massive bug in GDB!!  The command\n+# window contents will not be exactly what you'd expect after this\n+# test has run.\n+#\n+# The expected output pattern given here is crafted so that it matches\n+# those bits of the GDB output that will be correct, and ignores those\n+# parts of the output that are known to be incorrect.\n+#\n+# If/when GDB is fixed it is expected that this test will continue to\n+# pass, though it is possible that at that point the pattern here\n+# could be improved.\n+Term::check_region_contents \"check cmd window\" 0 16 80 8 \\\n+    [multi_line \\\n+\t \"\\[^\\r\\n\\]*\\\\\\$7 = 6\\[^\\r\\n\\]+\" \\\n+\t \"\\\\(gdb\\\\)\\[^\\r\\n\\]+\" \\\n+\t \"\\[^\\r\\n\\]*\\\\\\$8 = 7\\[^\\r\\n\\]+\" \\\n+\t \"\\\\(gdb\\\\)\\[^\\r\\n\\]+\" \\\n+\t \"\\[^\\r\\n\\]*\\\\\\$9 = 8\\[^\\r\\n\\]+\" \\\n+\t \"\\\\(gdb\\\\)\\[^\\r\\n\\]+\" \\\n+\t \"\\[^\\r\\n\\]*\\\\\\$10 = 9\\[^\\r\\n\\]+\" \\\n+\t \"\\\\(gdb\\\\)\"]"
    },
    {
      "sha": "a7d4d91d5ca348b07250b42484159c764d8df6a3",
      "filename": "gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fb97639911a4ab55f0287b5deea2f06d83a5f8c/gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fb97639911a4ab55f0287b5deea2f06d83a5f8c/gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.exp?ref=5fb97639911a4ab55f0287b5deea2f06d83a5f8c",
      "patch": "@@ -43,7 +43,9 @@ set first_line [Term::get_line 1]\n # instruction in the program.\n Term::command \"+ 13\"\n Term::check_box_contents \"check asm box contents again\" 0 0 80 15 \\\n-    \"^ *$hex\\[^\\n\\]+\\n +\\n\"\n+    [multi_line \\\n+\t \"^ *$hex\\[^\\r\\n\\]+\" \\\n+\t \"\\\\s+\"]\n \n # Now scroll backward again, we should return to the start of the\n # program."
    },
    {
      "sha": "3f6271ef0ea0b50a5e9dde6da712d6f177d462f0",
      "filename": "gdb/testsuite/lib/tuiterm.exp",
      "status": "modified",
      "additions": 32,
      "deletions": 17,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fb97639911a4ab55f0287b5deea2f06d83a5f8c/gdb/testsuite/lib/tuiterm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fb97639911a4ab55f0287b5deea2f06d83a5f8c/gdb/testsuite/lib/tuiterm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/tuiterm.exp?ref=5fb97639911a4ab55f0287b5deea2f06d83a5f8c",
      "patch": "@@ -367,16 +367,15 @@ namespace eval Term {\n \t    variable _chars\n \n \t    set y $_cur_row\n-\t    set next_y [expr {$y + 1}]\n-\t    while {$count > 0 && $next_y < $_rows} {\n+\t    set next_y [expr {$y + $count}]\n+\t    while {$next_y < $_rows} {\n \t\tfor {set x 0} {$x < $_cols} {incr x} {\n \t\t    set _chars($x,$y) $_chars($x,$next_y)\n \t\t}\n \t\tincr y\n \t\tincr next_y\n-\t\tincr count -1\n \t    }\n-\t    _clear_lines $next_y $_rows\n+\t    _clear_lines $y $_rows\n \t}\n     }\n \n@@ -789,6 +788,33 @@ namespace eval Term {\n \t}\n     }\n \n+    # Check that the region of the screen described by X, Y, WIDTH,\n+    # and HEIGHT match REGEXP.  This is like check_contents except\n+    # only part of the screen is checked.  This can be used to check\n+    # the contents within a box (though check_box_contents is a better\n+    # choice for boxes with a border).\n+    proc check_region_contents { test_name x y width height regexp } {\n+\tvariable _chars\n+\n+\t# Now grab the contents of the box, join each line together\n+\t# with a '\\r\\n' sequence and match against REGEXP.\n+\tset result \"\"\n+\tfor {set yy $y} {$yy < [expr {$y + $height}]} {incr yy} {\n+\t    if {$yy > $y} {\n+\t\t# Add the end of line sequence only if this isn't the\n+\t\t# first line.\n+\t\tappend result \"\\r\\n\"\n+\t    }\n+\t    for {set xx $x} {$xx < [expr {$x + $width}]} {incr xx} {\n+\t\tappend result [lindex $_chars($xx,$yy) 0]\n+\t    }\n+\t}\n+\n+\tif {![gdb_assert {[regexp -- $regexp $result]} $test_name]} {\n+\t    dump_screen\n+\t}\n+    }\n+\n     # Check the contents of a box on the screen.  This is a little\n     # like check_contents, but doens't check the whole screen\n     # contents, only the contents of a single box.  This procedure\n@@ -805,19 +831,8 @@ namespace eval Term {\n \t    return\n \t}\n \n-\t# Now grab the contents of the box, join each line together\n-\t# with a newline character and match against REGEXP.\n-\tset result \"\"\n-\tfor {set yy [expr {$y + 1}]} {$yy < [expr {$y + $height - 1}]} {incr yy} {\n-\t    for {set xx [expr {$x + 1}]} {$xx < [expr {$x + $width - 1}]} {incr xx} {\n-\t\tappend result [lindex $_chars($xx,$yy) 0]\n-\t    }\n-\t    append result \"\\n\"\n-\t}\n-\n-\tif {![gdb_assert {[regexp -- $regexp $result]} $test_name]} {\n-\t    dump_screen\n-\t}\n+\tcheck_region_contents $test_name [expr {$x + 1}] [expr {$y + 1}] \\\n+\t    [expr {$width - 2}] [expr {$height - 2}] $regexp\n     }\n \n     # A debugging function to dump the current screen, with line"
    }
  ]
}