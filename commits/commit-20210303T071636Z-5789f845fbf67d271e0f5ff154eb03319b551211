{
  "sha": "5789f845fbf67d271e0f5ff154eb03319b551211",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTc4OWY4NDVmYmY2N2QyNzFlMGY1ZmYxNTRlYjAzMzE5YjU1MTIxMQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-03T01:44:55Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-03T07:16:36Z"
    },
    "message": "--gc-sections with groups and start/stop syms\n\nThe testcases added here show situations where synthesized start/stop\nsymbols don't cause their associated input sections to be marked.\nFixed with the elflink.c and ldlang.c changes.\n\nbfd/\n\tPR 27500\n\t* elflink.c (_bfd_elf_gc_mark_rsec): Do special start/stop\n\tprocessing not when start/stop symbol section is unmarked but\n\ton first time a start/stop symbol is processed.\nld/\n\t* ldlang.c (insert_undefined): Don't mark symbols here.\n\t(lang_mark_undefineds): Do so here instead, new function.\n\t(lang_process): Call lang_mark_undefineds.\n\t* testsuite/ld-gc/start3.d,\n\t* testsuite/ld-gc/start3.s: New test.\n\t* testsuite/ld-gc/start4.d,\n\t* testsuite/ld-gc/start4.s: New test.\n\t* testsuite/ld-gc/gc.exp: Run them.",
    "tree": {
      "sha": "d1cf1f67c603d4d4eb3ef237d7054fb351eeedbe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d1cf1f67c603d4d4eb3ef237d7054fb351eeedbe"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5789f845fbf67d271e0f5ff154eb03319b551211",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5789f845fbf67d271e0f5ff154eb03319b551211",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5789f845fbf67d271e0f5ff154eb03319b551211",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5789f845fbf67d271e0f5ff154eb03319b551211/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "270f32fc50b465e84c214a17d4ad3aebc3161bae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/270f32fc50b465e84c214a17d4ad3aebc3161bae",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/270f32fc50b465e84c214a17d4ad3aebc3161bae"
    }
  ],
  "stats": {
    "total": 116,
    "additions": 112,
    "deletions": 4
  },
  "files": [
    {
      "sha": "5e2571bf347a9e3eb56d428e570733e4225e939f",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5789f845fbf67d271e0f5ff154eb03319b551211/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5789f845fbf67d271e0f5ff154eb03319b551211/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=5789f845fbf67d271e0f5ff154eb03319b551211",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-03  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 27500\n+\t* elflink.c (_bfd_elf_gc_mark_rsec): Do special start/stop\n+\tprocessing not when start/stop symbol section is unmarked but\n+\ton first time a start/stop symbol is processed.\n+\n 2021-03-03  Alan Modra  <amodra@gmail.com>\n \n \t* reloc.c: Include x86_64.h rather than internal.h."
    },
    {
      "sha": "e1278a5d95e797543cbeb208ce0312eb27a96a00",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5789f845fbf67d271e0f5ff154eb03319b551211/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5789f845fbf67d271e0f5ff154eb03319b551211/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=5789f845fbf67d271e0f5ff154eb03319b551211",
      "patch": "@@ -13422,6 +13422,8 @@ _bfd_elf_gc_mark_rsec (struct bfd_link_info *info, asection *sec,\n   if (r_symndx >= cookie->locsymcount\n       || ELF_ST_BIND (cookie->locsyms[r_symndx].st_info) != STB_LOCAL)\n     {\n+      bfd_boolean was_marked;\n+\n       h = cookie->sym_hashes[r_symndx - cookie->extsymoff];\n       if (h == NULL)\n \t{\n@@ -13432,6 +13434,8 @@ _bfd_elf_gc_mark_rsec (struct bfd_link_info *info, asection *sec,\n       while (h->root.type == bfd_link_hash_indirect\n \t     || h->root.type == bfd_link_hash_warning)\n \th = (struct elf_link_hash_entry *) h->root.u.i.link;\n+\n+      was_marked = h->mark;\n       h->mark = 1;\n       /* Keep all aliases of the symbol too.  If an object symbol\n \t needs to be copied into .dynbss then all of its aliases\n@@ -13444,7 +13448,7 @@ _bfd_elf_gc_mark_rsec (struct bfd_link_info *info, asection *sec,\n \t  hw->mark = 1;\n \t}\n \n-      if (h->start_stop && !h->root.ldscript_def)\n+      if (!was_marked && h->start_stop && !h->root.ldscript_def)\n \t{\n \t  if (info->start_stop_gc)\n \t    return NULL;\n@@ -13455,7 +13459,7 @@ _bfd_elf_gc_mark_rsec (struct bfd_link_info *info, asection *sec,\n \t  else if (start_stop != NULL)\n \t    {\n \t      asection *s = h->u2.start_stop_section;\n-\t      *start_stop = !s->gc_mark;\n+\t      *start_stop = TRUE;\n \t      return s;\n \t    }\n \t}"
    },
    {
      "sha": "0f1da7fafabaaa509bb942fd93c1016d6776c445",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5789f845fbf67d271e0f5ff154eb03319b551211/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5789f845fbf67d271e0f5ff154eb03319b551211/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=5789f845fbf67d271e0f5ff154eb03319b551211",
      "patch": "@@ -1,3 +1,15 @@\n+2021-03-03  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 27500\n+\t* ldlang.c (insert_undefined): Don't mark symbols here.\n+\t(lang_mark_undefineds): Do so here instead, new function.\n+\t(lang_process): Call lang_mark_undefineds.\n+\t* testsuite/ld-gc/start3.d,\n+\t* testsuite/ld-gc/start3.s: New test.\n+\t* testsuite/ld-gc/start4.d,\n+\t* testsuite/ld-gc/start4.s: New test.\n+\t* testsuite/ld-gc/gc.exp: Run them.\n+\n 2021-03-03  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-gc/gc.exp: Define UNDERSCORE in ASFLAGS."
    },
    {
      "sha": "684e1d23a214cfcbfb85588b81baf0b7660b3d6c",
      "filename": "ld/ldlang.c",
      "status": "modified",
      "additions": 19,
      "deletions": 2,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5789f845fbf67d271e0f5ff154eb03319b551211/ld/ldlang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5789f845fbf67d271e0f5ff154eb03319b551211/ld/ldlang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.c?ref=5789f845fbf67d271e0f5ff154eb03319b551211",
      "patch": "@@ -3986,8 +3986,6 @@ insert_undefined (const char *name)\n       h->type = bfd_link_hash_undefined;\n       h->u.undef.abfd = NULL;\n       h->non_ir_ref_regular = TRUE;\n-      if (is_elf_hash_table (link_info.hash))\n-\t((struct elf_link_hash_entry *) h)->mark = 1;\n       bfd_link_add_undef (link_info.hash, h);\n     }\n }\n@@ -4005,6 +4003,23 @@ lang_place_undefineds (void)\n     insert_undefined (ptr->name);\n }\n \n+/* Mark -u symbols against garbage collection.  */\n+\n+static void\n+lang_mark_undefineds (void)\n+{\n+  ldlang_undef_chain_list_type *ptr;\n+\n+  if (bfd_get_flavour (link_info.output_bfd) == bfd_target_elf_flavour)\n+    for (ptr = ldlang_undef_chain_list_head; ptr != NULL; ptr = ptr->next)\n+      {\n+\tstruct elf_link_hash_entry *h = (struct elf_link_hash_entry *)\n+\t  bfd_link_hash_lookup (link_info.hash, ptr->name, FALSE, FALSE, TRUE);\n+\tif (h != NULL)\n+\t  h->mark = 1;\n+      }\n+}\n+\n /* Structure used to build the list of symbols that the user has required\n    be defined.  */\n \n@@ -8116,6 +8131,8 @@ lang_process (void)\n   /* Remove unreferenced sections if asked to.  */\n   lang_gc_sections ();\n \n+  lang_mark_undefineds ();\n+\n   /* Check relocations.  */\n   lang_check_relocs ();\n "
    },
    {
      "sha": "cd5c6f7c4ea76a014eb6616f6f275bddef0ee875",
      "filename": "ld/testsuite/ld-gc/gc.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5789f845fbf67d271e0f5ff154eb03319b551211/ld/testsuite/ld-gc/gc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5789f845fbf67d271e0f5ff154eb03319b551211/ld/testsuite/ld-gc/gc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/gc.exp?ref=5789f845fbf67d271e0f5ff154eb03319b551211",
      "patch": "@@ -101,6 +101,8 @@ if { [is_elf_format] } then {\n     run_dump_test \"stop\"\n     run_dump_test \"start\"\n     run_dump_test \"start2\"\n+    run_dump_test \"start3\"\n+    run_dump_test \"start4\"\n }\n \n if { [is_elf_format] && [check_shared_lib_support] } then {"
    },
    {
      "sha": "a57dab187eae564aee0aad68ec230d796c07df34",
      "filename": "ld/testsuite/ld-gc/start3.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5789f845fbf67d271e0f5ff154eb03319b551211/ld/testsuite/ld-gc/start3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5789f845fbf67d271e0f5ff154eb03319b551211/ld/testsuite/ld-gc/start3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/start3.d?ref=5789f845fbf67d271e0f5ff154eb03319b551211",
      "patch": "@@ -0,0 +1,9 @@\n+#name: --gc-sections with groups and start/stop syms\n+#ld: --gc-sections -e _start\n+#nm: -n\n+#notarget: [is_generic]\n+#xfail: bfin-*-*linux* frv-*-*linux* lm32-*-*linux*\n+\n+#...\n+[0-9a-f]+ T +bar\n+#..."
    },
    {
      "sha": "0e720ba3fb04e3cba7044059a26d46a2580ac01e",
      "filename": "ld/testsuite/ld-gc/start3.s",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5789f845fbf67d271e0f5ff154eb03319b551211/ld/testsuite/ld-gc/start3.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5789f845fbf67d271e0f5ff154eb03319b551211/ld/testsuite/ld-gc/start3.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/start3.s?ref=5789f845fbf67d271e0f5ff154eb03319b551211",
      "patch": "@@ -0,0 +1,29 @@\n+\t.text\n+\t.global _start\n+_start:\n+\t.dc.a foo\n+ .ifdef UNDERSCORE\n+\t.dc.a ___start_xx, ___stop_xx\n+ .else\n+\t.dc.a __start_xx, __stop_xx\n+ .endif\n+\n+\t.section .text,\"axG\",%progbits,foo_group\n+\t.global foo\n+foo:\n+\t.dc.a 0\n+\n+\t.section xx,\"aG\",%progbits,foo_group\n+\t.global foo_xx\n+foo_xx:\n+\t.dc.a 1\n+\n+\t.section .text,\"axG\",%progbits,bar_group\n+\t.global bar\n+bar:\n+\t.dc.a 2\n+\n+\t.section xx,\"aG\",%progbits,bar_group\n+\t.global bar_xx\n+bar_xx:\n+\t.dc.a 3"
    },
    {
      "sha": "ae77aa9bf733babb6148f2bba9ffc9e763bd7578",
      "filename": "ld/testsuite/ld-gc/start4.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5789f845fbf67d271e0f5ff154eb03319b551211/ld/testsuite/ld-gc/start4.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5789f845fbf67d271e0f5ff154eb03319b551211/ld/testsuite/ld-gc/start4.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/start4.d?ref=5789f845fbf67d271e0f5ff154eb03319b551211",
      "patch": "@@ -0,0 +1,9 @@\n+#name: --gc-sections with other syms and start/stop syms\n+#ld: --gc-sections -e _start\n+#nm: -n\n+#target: [supports_gnu_unique]\n+#xfail: bfin-*-*linux* frv-*-*linux* lm32-*-*linux*\n+\n+#...\n+[0-9a-f]+ R +bar_xx\n+#..."
    },
    {
      "sha": "1aa94454e05cd1459aeade8aedb55749516193b0",
      "filename": "ld/testsuite/ld-gc/start4.s",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5789f845fbf67d271e0f5ff154eb03319b551211/ld/testsuite/ld-gc/start4.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5789f845fbf67d271e0f5ff154eb03319b551211/ld/testsuite/ld-gc/start4.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/start4.s?ref=5789f845fbf67d271e0f5ff154eb03319b551211",
      "patch": "@@ -0,0 +1,19 @@\n+\t.text\n+\t.global _start\n+_start:\n+\t.dc.a foo_xx\n+ .ifdef UNDERSCORE\n+\t.dc.a ___start_xx, ___stop_xx\n+ .else\n+\t.dc.a __start_xx, __stop_xx\n+ .endif\n+\n+\t.section xx,\"a\",%progbits,unique,0\n+\t.global foo_xx\n+foo_xx:\n+\t.dc.a 1\n+\n+\t.section xx,\"a\",%progbits,unique,1\n+\t.global bar_xx\n+bar_xx:\n+\t.dc.a 3"
    }
  ]
}