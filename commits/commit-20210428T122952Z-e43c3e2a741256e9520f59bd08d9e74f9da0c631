{
  "sha": "e43c3e2a741256e9520f59bd08d9e74f9da0c631",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTQzYzNlMmE3NDEyNTZlOTUyMGY1OWJkMDhkOWU3NGY5ZGEwYzYzMQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-04-28T09:16:48Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-04-28T12:29:52Z"
    },
    "message": "gdb/doc: use @env to reference environment variables\n\nClean up a few places where we are not using @env{...} to reference\nenvironment variables.\n\ngdb/doc/ChangeLog:\n\n\t* gdb.texinfo (Initialization Files): Use @env when referencing\n\tenvironment variables.\n\t(Shell Commands): Likewise.\n\t(Starting): Likewise.\n\t(Arguments): Likewise.\n\t(Environment): Likewise.\n\t(Edit): Likewise.\n\t(Compiling and Injecting Code): Likewise.\n\t(Files): Likewise.\n\t(Command History): Likewise.\n\t(Screen Size): Likewise.\n\t(Emacs): Likewise.",
    "tree": {
      "sha": "9885b4e56bf350ee4c28dfeaf68199fb25ae6f90",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9885b4e56bf350ee4c28dfeaf68199fb25ae6f90"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e43c3e2a741256e9520f59bd08d9e74f9da0c631",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e43c3e2a741256e9520f59bd08d9e74f9da0c631",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e43c3e2a741256e9520f59bd08d9e74f9da0c631",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e43c3e2a741256e9520f59bd08d9e74f9da0c631/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "24aebc79b16a82faef4736f4abdc7e4d95d4cc67",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24aebc79b16a82faef4736f4abdc7e4d95d4cc67",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/24aebc79b16a82faef4736f4abdc7e4d95d4cc67"
    }
  ],
  "stats": {
    "total": 69,
    "additions": 42,
    "deletions": 27
  },
  "files": [
    {
      "sha": "d801d76dcebbb9ca35521a985f756266b5226b8d",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43c3e2a741256e9520f59bd08d9e74f9da0c631/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43c3e2a741256e9520f59bd08d9e74f9da0c631/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=e43c3e2a741256e9520f59bd08d9e74f9da0c631",
      "patch": "@@ -1,3 +1,18 @@\n+2021-04-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.texinfo (Initialization Files): Use @env when referencing\n+\tenvironment variables.\n+\t(Shell Commands): Likewise.\n+\t(Starting): Likewise.\n+\t(Arguments): Likewise.\n+\t(Environment): Likewise.\n+\t(Edit): Likewise.\n+\t(Compiling and Injecting Code): Likewise.\n+\t(Files): Likewise.\n+\t(Command History): Likewise.\n+\t(Screen Size): Likewise.\n+\t(Emacs): Likewise.\n+\n 2021-04-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* python.texinfo (Python Commands): Mention new commands."
    },
    {
      "sha": "802d0f9cfb6401f80175ffac3d440a18fb254fba",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 27,
      "deletions": 27,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43c3e2a741256e9520f59bd08d9e74f9da0c631/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43c3e2a741256e9520f59bd08d9e74f9da0c631/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=e43c3e2a741256e9520f59bd08d9e74f9da0c631",
      "patch": "@@ -1449,7 +1449,7 @@ are searched for.\n \n @value{GDBN} initially looks for an early initialization file in the\n users home directory@footnote{On DOS/Windows systems, the home\n-directory is the one pointed to by the @code{HOME} environment\n+directory is the one pointed to by the @env{HOME} environment\n variable.}.  There are a number of locations that @value{GDBN} will\n search in the home directory, these locations are searched in order\n and @value{GDBN} will load the first file that it finds, and\n@@ -1524,7 +1524,7 @@ Options,,Choosing Modes}.\n After loading the system wide initialization files @value{GDBN} will\n look for an initialization file in the users home\n directory@footnote{On DOS/Windows systems, the home directory is the\n-one pointed to by the @code{HOME} environment variable.}.  There are a\n+one pointed to by the @env{HOME} environment variable.}.  There are a\n number of locations that @value{GDBN} will search in the home\n directory, these locations are searched in order and @value{GDBN} will\n load the first file that it finds, and subsequent locations will not\n@@ -1615,7 +1615,7 @@ just use the @code{shell} command.\n @itemx !@var{command-string}\n Invoke a standard shell to execute @var{command-string}.\n Note that no space is needed between @code{!} and @var{command-string}.\n-On GNU and Unix systems, the environment variable @code{SHELL}, if it\n+On GNU and Unix systems, the environment variable @env{SHELL}, if it\n exists, determines which shell to run.  Otherwise @value{GDBN} uses\n the default shell (@file{/bin/sh} on GNU and Unix systems,\n @file{cmd.exe} on MS-Windows, @file{COMMAND.COM} on MS-DOS, etc.).\n@@ -2525,7 +2525,7 @@ is used to pass the arguments, so that you may use normal conventions\n (such as wildcard expansion or variable substitution) in describing\n the arguments.\n In Unix systems, you can control which shell is used with the\n-@code{SHELL} environment variable.  If you do not define @code{SHELL},\n+@env{SHELL} environment variable.  If you do not define @env{SHELL},\n @value{GDBN} uses the default shell (@file{/bin/sh}).  You can disable\n use of any shell with the @code{set startup-with-shell} command (see\n below for details).\n@@ -2671,7 +2671,7 @@ which indicates the shell or the wrapper specified with\n caused by something odd in your shell's non-interactive mode\n initialization file---such as @file{.cshrc} for C-shell,\n $@file{.zshenv} for the Z shell, or the file specified in the\n-@samp{BASH_ENV} environment variable for BASH.\n+@env{BASH_ENV} environment variable for BASH.\n \n @anchor{set auto-connect-native-target}\n @kindex set auto-connect-native-target\n@@ -2786,8 +2786,8 @@ The arguments to your program can be specified by the arguments of the\n @code{run} command.\n They are passed to a shell, which expands wildcard characters and\n performs redirection of I/O, and thence to your program.  Your\n-@code{SHELL} environment variable (if it exists) specifies what shell\n-@value{GDBN} uses.  If you do not define @code{SHELL}, @value{GDBN} uses\n+@env{SHELL} environment variable (if it exists) specifies what shell\n+@value{GDBN} uses.  If you do not define @env{SHELL}, @value{GDBN} uses\n the default shell (@file{/bin/sh} on Unix).\n \n On non-Unix systems, the program is usually invoked directly by\n@@ -2827,9 +2827,9 @@ environment without having to start @value{GDBN} over again.\n @table @code\n @kindex path\n @item path @var{directory}\n-Add @var{directory} to the front of the @code{PATH} environment variable\n+Add @var{directory} to the front of the @env{PATH} environment variable\n (the search path for executables) that will be passed to your program.\n-The value of @code{PATH} used by @value{GDBN} does not change.\n+The value of @env{PATH} used by @value{GDBN} does not change.\n You may specify several directory names, separated by whitespace or by a\n system-dependent separator character (@samp{:} on Unix, @samp{;} on\n MS-DOS and MS-Windows).  If @var{directory} is already in the path, it\n@@ -2846,7 +2846,7 @@ use @samp{.} instead, it refers to the directory where you executed the\n \n @kindex show paths\n @item show paths\n-Display the list of search paths for executables (the @code{PATH}\n+Display the list of search paths for executables (the @env{PATH}\n environment variable).\n \n @kindex show environment\n@@ -2904,11 +2904,11 @@ Environment variables that are unset by the user are also unset on\n @end table\n \n @emph{Warning:} On Unix systems, @value{GDBN} runs your program using\n-the shell indicated by your @code{SHELL} environment variable if it\n-exists (or @code{/bin/sh} if not).  If your @code{SHELL} variable\n+the shell indicated by your @env{SHELL} environment variable if it\n+exists (or @code{/bin/sh} if not).  If your @env{SHELL} variable\n names a shell that runs an initialization file when started\n non-interactively---such as @file{.cshrc} for C-shell, $@file{.zshenv}\n-for the Z shell, or the file specified in the @samp{BASH_ENV}\n+for the Z shell, or the file specified in the @env{BASH_ENV}\n environment variable for BASH---any variables you set in that file\n affect your program.  You may wish to move setting of environment\n variables to files that are only run when you sign on, such as\n@@ -9267,7 +9267,7 @@ ex +@var{number} file\n The optional numeric value +@var{number} specifies the number of the line in\n the file where to start editing.}.\n By default, it is @file{@value{EDITOR}}, but you can change this\n-by setting the environment variable @code{EDITOR} before using\n+by setting the environment variable @env{EDITOR} before using\n @value{GDBN}.  For example, to configure @value{GDBN} to use the\n @code{vi} editor, you could use these commands with the @code{sh} shell:\n @smallexample\n@@ -20527,15 +20527,15 @@ will print to the console.\n \n @value{GDBN} needs to find @value{NGCC} for the inferior being debugged\n which may not be obvious for remote targets of different architecture\n-than where @value{GDBN} is running.  Environment variable @code{PATH} on\n+than where @value{GDBN} is running.  Environment variable @env{PATH} on\n @value{GDBN} host is searched for @value{NGCC} binary matching the\n target architecture and operating system.  This search can be overriden\n-by @code{set compile-gcc} @value{GDBN} command below.  @code{PATH} is\n+by @code{set compile-gcc} @value{GDBN} command below.  @env{PATH} is\n taken from shell that executed @value{GDBN}, it is not the value set by\n @value{GDBN} command @code{set environment}).  @xref{Environment}.\n \n \n-Specifically @code{PATH} is searched for binaries matching regular expression\n+Specifically @env{PATH} is searched for binaries matching regular expression\n @code{@var{arch}(-[^-]*)?-@var{os}-gcc} according to the inferior target being\n debugged.  @var{arch} is processor name --- multiarch is supported, so for\n example both @code{i386} and @code{x86_64} targets look for pattern\n@@ -20546,7 +20546,7 @@ pattern @code{linux(-gnu)?}.\n On Posix hosts the compiler driver @value{GDBN} needs to find also\n shared library @file{libcc1.so} from the compiler.  It is searched in\n default shared library search path (overridable with usual environment\n-variable @code{LD_LIBRARY_PATH}), unrelated to @code{PATH} or @code{set\n+variable @env{LD_LIBRARY_PATH}), unrelated to @env{PATH} or @code{set\n compile-gcc} settings.  Contrary to it @file{libcc1plugin.so} is found\n according to the installation of the found compiler --- as possibly\n specified by the @code{set compile-gcc} command.\n@@ -20609,7 +20609,7 @@ Use @var{filename} as the program to be debugged.  It is read for its\n symbols and for the contents of pure memory.  It is also the program\n executed when you use the @code{run} command.  If you do not specify a\n directory and the file is not found in the @value{GDBN} working directory,\n-@value{GDBN} uses the environment variable @code{PATH} as a list of\n+@value{GDBN} uses the environment variable @env{PATH} as a list of\n directories to search, just as the shell does when looking for a program\n to run.  You can change the value of this variable, for both @value{GDBN}\n and your program, using the @code{path} command.\n@@ -20632,13 +20632,13 @@ has on both executable file and the symbol table.\n @kindex exec-file\n @item exec-file @r{[} @var{filename} @r{]}\n Specify that the program to be run (but not the symbol table) is found\n-in @var{filename}.  @value{GDBN} searches the environment variable @code{PATH}\n+in @var{filename}.  @value{GDBN} searches the environment variable @env{PATH}\n if necessary to locate your program.  Omitting @var{filename} means to\n discard information on the executable file.\n \n @kindex symbol-file\n @item symbol-file @r{[} @var{filename} @r{[} -o @var{offset} @r{]]}\n-Read symbol table information from file @var{filename}.  @code{PATH} is\n+Read symbol table information from file @var{filename}.  @env{PATH} is\n searched when necessary.  Use the @code{file} command to get both symbol\n table and program to run from the same file.\n \n@@ -25818,16 +25818,16 @@ This is the file where @value{GDBN} reads an initial command history\n list, and where it writes the command history from this session when it\n exits.  You can access this list through history expansion or through\n the history command editing characters listed below.  This file defaults\n-to the value of the environment variable @code{GDBHISTFILE}, or to\n+to the value of the environment variable @env{GDBHISTFILE}, or to\n @file{./.gdb_history} (@file{./_gdb_history} on MS-DOS) if this variable\n is not set.\n \n-The @code{GDBHISTFILE} environment variable is read after processing\n+The @env{GDBHISTFILE} environment variable is read after processing\n any @value{GDBN} initialization files (@pxref{Startup}) and after\n processing any commands passed using command line options (for\n example, @code{-ex}).\n \n-If the @var{fname} argument is not given, or if the @code{GDBHISTFILE}\n+If the @var{fname} argument is not given, or if the @env{GDBHISTFILE}\n is the empty string then @value{GDBN} will neither try to load an\n existing history file, nor will it try to save the history on exit.\n \n@@ -25858,7 +25858,7 @@ are ignored.  If @var{size} is @code{unlimited} or if @env{GDBHISTSIZE} is\n either a negative number or the empty string, then the number of commands\n @value{GDBN} keeps in the history list is unlimited.\n \n-The @code{GDBHISTSIZE} environment variable is read after processing\n+The @env{GDBHISTSIZE} environment variable is read after processing\n any @value{GDBN} initialization files (@pxref{Startup}) and after\n processing any commands passed using command line options (for\n example, @code{-ex}).\n@@ -25955,7 +25955,7 @@ following line.\n \n Normally @value{GDBN} knows the size of the screen from the terminal\n driver software.  For example, on Unix @value{GDBN} uses the termcap data base\n-together with the value of the @code{TERM} environment variable and the\n+together with the value of the @env{TERM} environment variable and the\n @code{stty rows} and @code{stty cols} settings.  If this is not correct,\n you can override it with the @code{set height} and @code{set\n width} commands:\n@@ -28972,7 +28972,7 @@ gdb} argument, then Emacs sets your current working directory to where\n your program resides.  If you only specify the file name, then Emacs\n sets your current working directory to the directory associated\n with the previous buffer.  In this case, @value{GDBN} may find your\n-program by searching your environment's @code{PATH} variable, but on\n+program by searching your environment's @env{PATH} variable, but on\n some operating systems it might not find the source.  So, although the\n @value{GDBN} input and output session proceeds normally, the auxiliary\n buffer does not display the current source and line of execution."
    }
  ]
}