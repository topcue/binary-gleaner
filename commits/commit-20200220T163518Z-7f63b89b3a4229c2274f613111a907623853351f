{
  "sha": "7f63b89b3a4229c2274f613111a907623853351f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2Y2M2I4OWIzYTQyMjljMjI3NGY2MTMxMTFhOTA3NjIzODUzMzUxZg==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:12:02Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:18Z"
    },
    "message": "gdbserver: turn target ops 'thread_name' and 'thread_handle' into methods\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's thread_name and thread_handle ops\n\tinto methods of process_target.\n\n\t* target.h (struct process_stratum_target): Remove the target ops.\n\t(class process_target): Add the target ops.\n\t(target_thread_name): Update the macro.\n\t(target_thread_handle): Update the macro.\n\t* target.cc (process_target::thread_name): Define.\n\t(process_target::thread_handle): Define.\n\n\tUpdate the derived classes and callers below.\n\n\t* linux-low.cc (linux_target_ops): Update.\n\t(linux_process_target::thread_name): Define.\n\t(linux_process_target::thread_handle): Define.\n\t* linux-low.h (class linux_process_target): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t* win32-low.cc (win32_target_ops): Update.",
    "tree": {
      "sha": "cd1dd7247880d77de2ed4618451b4fc3bb095a96",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cd1dd7247880d77de2ed4618451b4fc3bb095a96"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7f63b89b3a4229c2274f613111a907623853351f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f63b89b3a4229c2274f613111a907623853351f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7f63b89b3a4229c2274f613111a907623853351f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f63b89b3a4229c2274f613111a907623853351f/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d367006fb7cf837210e2aa1944a11169a60039b4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d367006fb7cf837210e2aa1944a11169a60039b4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d367006fb7cf837210e2aa1944a11169a60039b4"
    }
  ],
  "stats": {
    "total": 96,
    "additions": 70,
    "deletions": 26
  },
  "files": [
    {
      "sha": "592697aaa48eb57e7d9edc8502f13c81bcef5e4a",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=7f63b89b3a4229c2274f613111a907623853351f",
      "patch": "@@ -1,3 +1,25 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's thread_name and thread_handle ops\n+\tinto methods of process_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target ops.\n+\t(class process_target): Add the target ops.\n+\t(target_thread_name): Update the macro.\n+\t(target_thread_handle): Update the macro.\n+\t* target.cc (process_target::thread_name): Define.\n+\t(process_target::thread_handle): Define.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* linux-low.cc (linux_target_ops): Update.\n+\t(linux_process_target::thread_name): Define.\n+\t(linux_process_target::thread_handle): Define.\n+\t* linux-low.h (class linux_process_target): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's breakpoint_kind_from_pc,"
    },
    {
      "sha": "f9108664f4636cfeaf9acc668f629e77acbea118",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 15,
      "deletions": 6,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=7f63b89b3a4229c2274f613111a907623853351f",
      "patch": "@@ -7397,6 +7397,21 @@ linux_process_target::breakpoint_kind_from_current_state (CORE_ADDR *pcptr)\n     return breakpoint_kind_from_pc (pcptr);\n }\n \n+const char *\n+linux_process_target::thread_name (ptid_t thread)\n+{\n+  return linux_proc_tid_get_name (thread);\n+}\n+\n+#if USE_THREAD_DB\n+bool\n+linux_process_target::thread_handle (ptid_t ptid, gdb_byte **handle,\n+\t\t\t\t     int *handle_len)\n+{\n+  return thread_db_thread_handle (ptid, handle, handle_len);\n+}\n+#endif\n+\n /* Default implementation of linux_target_ops method \"set_pc\" for\n    32-bit pc register which is literally named \"pc\".  */\n \n@@ -7509,15 +7524,9 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-  linux_proc_tid_get_name,\n   linux_supports_software_single_step,\n   linux_supports_catch_syscall,\n   linux_get_ipa_tdesc_idx,\n-#if USE_THREAD_DB\n-  thread_db_thread_handle,\n-#else\n-  NULL,\n-#endif\n   &the_linux_target,\n };\n "
    },
    {
      "sha": "2acd65f28286d93fbc906d86d72883d834414fc4",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=7f63b89b3a4229c2274f613111a907623853351f",
      "patch": "@@ -468,6 +468,13 @@ class linux_process_target : public process_target\n   const gdb_byte *sw_breakpoint_from_kind (int kind, int *size) override;\n \n   int breakpoint_kind_from_current_state (CORE_ADDR *pcptr) override;\n+\n+  const char *thread_name (ptid_t thread) override;\n+\n+#if USE_THREAD_DB\n+  bool thread_handle (ptid_t ptid, gdb_byte **handle,\n+\t\t      int *handle_len) override;\n+#endif\n };\n \n #define get_thread_lwp(thr) ((struct lwp_info *) (thread_target_data (thr)))"
    },
    {
      "sha": "0c460be5f3186c35f3c65c13a1fddb43cfb9be10",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=7f63b89b3a4229c2274f613111a907623853351f",
      "patch": "@@ -741,11 +741,9 @@ static lynx_process_target the_lynx_target;\n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  NULL,  /* thread_name */\n   NULL,  /* supports_software_single_step */\n   NULL,  /* supports_catch_syscall */\n   NULL,  /* get_ipa_tdesc_idx */\n-  NULL,  /* thread_handle */\n   &the_lynx_target,\n };\n "
    },
    {
      "sha": "4c3c5a3a42d9aaa3953df885f9ddc77b32976625",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=7f63b89b3a4229c2274f613111a907623853351f",
      "patch": "@@ -947,11 +947,9 @@ nto_process_target::sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  NULL, /* thread_name */\n   NULL, /* supports_software_single_step */\n   NULL, /* supports_catch_syscall */\n   NULL, /* get_ipa_tdesc_idx */\n-  NULL, /* thread_handle */\n   &the_nto_target,\n };\n "
    },
    {
      "sha": "b7ed26b22f449fbd15862169baa4ea3918988d78",
      "filename": "gdbserver/target.cc",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/target.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/target.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.cc?ref=7f63b89b3a4229c2274f613111a907623853351f",
      "patch": "@@ -801,3 +801,16 @@ process_target::breakpoint_kind_from_current_state (CORE_ADDR *pcptr)\n {\n   return breakpoint_kind_from_pc (pcptr);\n }\n+\n+const char *\n+process_target::thread_name (ptid_t thread)\n+{\n+  return nullptr;\n+}\n+\n+bool\n+process_target::thread_handle (ptid_t ptid, gdb_byte **handle,\n+\t\t\t       int *handle_len)\n+{\n+  return false;\n+}"
    },
    {
      "sha": "4d9de5513aa50d74b4b07ffa28cc9a1813b5bf1d",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 13,
      "deletions": 14,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=7f63b89b3a4229c2274f613111a907623853351f",
      "patch": "@@ -70,10 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Return the thread's name, or NULL if the target is unable to determine it.\n-     The returned value must not be freed by the caller.  */\n-  const char *(*thread_name) (ptid_t thread);\n-\n   /* Returns true if the target can software single step.  */\n   int (*supports_software_single_step) (void);\n \n@@ -84,11 +80,6 @@ struct process_stratum_target\n   /* Return tdesc index for IPA.  */\n   int (*get_ipa_tdesc_idx) (void);\n \n-  /* Thread ID to (numeric) thread handle: Return true on success and\n-     false for failure.  Return pointer to thread handle via HANDLE\n-     and the handle's length via HANDLE_LEN.  */\n-  bool (*thread_handle) (ptid_t ptid, gdb_byte **handle, int *handle_len);\n-\n   /* The object that will gradually replace this struct.  */\n   process_target *pt;\n };\n@@ -503,6 +494,17 @@ class process_target\n      PC.  The PCPTR is adjusted to the real memory location in case a\n      flag (e.g., the Thumb bit on ARM) is present in the  PC.  */\n   virtual int breakpoint_kind_from_current_state (CORE_ADDR *pcptr);\n+\n+  /* Return the thread's name, or NULL if the target is unable to\n+     determine it.  The returned value must not be freed by the\n+     caller.  */\n+  virtual const char *thread_name (ptid_t thread);\n+\n+  /* Thread ID to (numeric) thread handle: Return true on success and\n+     false for failure.  Return pointer to thread handle via HANDLE\n+     and the handle's length via HANDLE_LEN.  */\n+  virtual bool thread_handle (ptid_t ptid, gdb_byte **handle,\n+\t\t\t      int *handle_len);\n };\n \n extern process_stratum_target *the_target;\n@@ -683,13 +685,10 @@ void done_accessing_memory (void);\n   the_target->pt->core_of_thread (ptid)\n \n #define target_thread_name(ptid)                                \\\n-  (the_target->thread_name ? (*the_target->thread_name) (ptid)  \\\n-   : NULL)\n+  the_target->pt->thread_name (ptid)\n \n #define target_thread_handle(ptid, handle, handle_len) \\\n-   (the_target->thread_handle ? (*the_target->thread_handle) \\\n-                                  (ptid, handle, handle_len) \\\n-   : false)\n+  the_target->pt->thread_handle (ptid, handle, handle_len)\n \n int read_inferior_memory (CORE_ADDR memaddr, unsigned char *myaddr, int len);\n "
    },
    {
      "sha": "218f007bdec0a4da7df61270115b6876d500a20c",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f63b89b3a4229c2274f613111a907623853351f/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=7f63b89b3a4229c2274f613111a907623853351f",
      "patch": "@@ -1858,11 +1858,9 @@ win32_process_target::sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  NULL, /* thread_name */\n   NULL, /* supports_software_single_step */\n   NULL, /* supports_catch_syscall */\n   NULL, /* get_ipa_tdesc_idx */\n-  NULL, /* thread_handle */\n   &the_win32_target,\n };\n "
    }
  ]
}