{
  "sha": "f31ec9af48578adb0baf8db3e10da871d6ee3eca",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjMxZWM5YWY0ODU3OGFkYjBiYWY4ZGIzZTEwZGE4NzFkNmVlM2VjYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-29T04:55:45Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-17T18:19:09Z"
    },
    "message": "Simplify source window clearing\n\nWhen a TUI source window is empty, it displays a \"No Source Available\"\nmessage.  The function tui_set_source_content_nil also made sure to\nput this message into the window's \"content\" field.\n\nHowever, I believe this isn't really necessary.  Instead, it's simpler\nto just empty the contents and let curses handle the refreshing.\n\ngdb/ChangeLog\n2019-07-17  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-winsource.c (tui_erase_source_content): Clear the\n\twindow's contents.\n\t* tui/tui-source.h (tui_set_source_content_nil): Don't declare.\n\t* tui/tui-source.c (tui_set_source_content_nil): Remove.",
    "tree": {
      "sha": "2dcb164e0f0bfa99dbaff8c1ba1744e946ae7004",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2dcb164e0f0bfa99dbaff8c1ba1744e946ae7004"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f31ec9af48578adb0baf8db3e10da871d6ee3eca",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f31ec9af48578adb0baf8db3e10da871d6ee3eca",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f31ec9af48578adb0baf8db3e10da871d6ee3eca",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f31ec9af48578adb0baf8db3e10da871d6ee3eca/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d1b6f1e5ebdd755274a77a31c4afa48969b73bee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1b6f1e5ebdd755274a77a31c4afa48969b73bee",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d1b6f1e5ebdd755274a77a31c4afa48969b73bee"
    }
  ],
  "stats": {
    "total": 81,
    "additions": 8,
    "deletions": 73
  },
  "files": [
    {
      "sha": "4b5a8760da9416ad0999f57b13d708c4b5016ff5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f31ec9af48578adb0baf8db3e10da871d6ee3eca/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f31ec9af48578adb0baf8db3e10da871d6ee3eca/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f31ec9af48578adb0baf8db3e10da871d6ee3eca",
      "patch": "@@ -1,3 +1,10 @@\n+2019-07-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-winsource.c (tui_erase_source_content): Clear the\n+\twindow's contents.\n+\t* tui/tui-source.h (tui_set_source_content_nil): Don't declare.\n+\t* tui/tui-source.c (tui_set_source_content_nil): Remove.\n+\n 2019-07-17  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-data.h (UNDEFINED_ITEM): Remove define."
    },
    {
      "sha": "d3cce1c30033678971e588b1d5cc37aebed2a9c4",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 0,
      "deletions": 63,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f31ec9af48578adb0baf8db3e10da871d6ee3eca/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f31ec9af48578adb0baf8db3e10da871d6ee3eca/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=f31ec9af48578adb0baf8db3e10da871d6ee3eca",
      "patch": "@@ -209,69 +209,6 @@ tui_set_source_content (tui_source_window_base *win_info,\n }\n \n \n-/* elz: This function sets the contents of the source window to empty\n-   except for a line in the middle with a warning message about the\n-   source not being available.  This function is called by\n-   tui_erase_source_contents(), which in turn is invoked when the\n-   source files cannot be accessed.  */\n-\n-void\n-tui_set_source_content_nil (struct tui_source_window_base *win_info,\n-\t\t\t    const char *warning_string)\n-{\n-  int line_width;\n-  int n_lines;\n-  int curr_line = 0;\n-\n-  line_width = win_info->width - 1;\n-  n_lines = win_info->height - 2;\n-\n-  /* Set to empty each line in the window, except for the one which\n-     contains the message.  */\n-  while (curr_line < win_info->content.size ())\n-    {\n-      /* Set the information related to each displayed line to null:\n-         i.e. the line number is 0, there is no bp, it is not where\n-         the program is stopped.  */\n-\n-      struct tui_source_element *element = &win_info->content[curr_line];\n-\n-      element->line_or_addr.loa = LOA_LINE;\n-      element->line_or_addr.u.line_no = 0;\n-      element->is_exec_point = false;\n-      element->break_mode = 0;\n-\n-      /* Set the contents of the line to blank.  */\n-      element->line[0] = (char) 0;\n-\n-      /* If the current line is in the middle of the screen, then we\n-         want to display the 'no source available' message in it.\n-         Note: the 'weird' arithmetic with the line width and height\n-         comes from the function tui_erase_source_content().  We need\n-         to keep the screen and the window's actual contents in\n-         synch.  */\n-\n-      if (curr_line == (n_lines / 2 + 1))\n-\t{\n-\t  int xpos;\n-\t  int warning_length = strlen (warning_string);\n-\t  char *src_line;\n-\n-\t  if (warning_length >= ((line_width - 1) / 2))\n-\t    xpos = 1;\n-\t  else\n-\t    xpos = (line_width - 1) / 2 - warning_length;\n-\n-\t  src_line = xstrprintf (\"%s%s\", n_spaces (xpos), warning_string);\n-\t  xfree (element->line);\n-\t  element->line = src_line;\n-\t}\n-\n-      curr_line++;\n-    }\n-}\n-\n-\n /* Function to display source in the source window.  This function\n    initializes the horizontal scroll to 0.  */\n void"
    },
    {
      "sha": "fc129ab8f264475d8c5f768f889f84b57d7c9f1c",
      "filename": "gdb/tui/tui-source.h",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f31ec9af48578adb0baf8db3e10da871d6ee3eca/gdb/tui/tui-source.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f31ec9af48578adb0baf8db3e10da871d6ee3eca/gdb/tui/tui-source.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.h?ref=f31ec9af48578adb0baf8db3e10da871d6ee3eca",
      "patch": "@@ -27,9 +27,6 @@\n struct symtab;\n struct tui_win_info;\n \n-extern void tui_set_source_content_nil (struct tui_source_window_base *,\n-\t\t\t\t\tconst char *);\n-\n extern enum tui_status tui_set_source_content (tui_source_window_base *,\n \t\t\t\t\t       struct symtab *, \n \t\t\t\t\t       int, int);"
    },
    {
      "sha": "2be20492f477f81f0efb277abb212d185f8d177e",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 1,
      "deletions": 7,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f31ec9af48578adb0baf8db3e10da871d6ee3eca/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f31ec9af48578adb0baf8db3e10da871d6ee3eca/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=f31ec9af48578adb0baf8db3e10da871d6ee3eca",
      "patch": "@@ -250,13 +250,7 @@ tui_erase_source_content (struct tui_source_window_base *win_info)\n \t\t x_pos,\n \t\t (char *) no_src_str);\n \n-      /* elz: Added this function call to set the real contents of\n-\t the window to what is on the screen, so that later calls\n-\t to refresh, do display the correct stuff, and not the old\n-\t image.  */\n-\n-      tui_set_source_content_nil (win_info, no_src_str);\n-\n+      win_info->content.clear ();\n       win_info->refresh_window ();\n     }\n }"
    }
  ]
}