{
  "sha": "262abc0d67af006a709d0935940f9c9f5f7c5ee5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjYyYWJjMGQ2N2FmMDA2YTcwOWQwOTM1OTQwZjljOWY1ZjdjNWVlNQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-06-08T19:25:50Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-06-08T19:25:50Z"
    },
    "message": "gdb: add type::index_type / type::set_index_type\n\nAdd the `index_type` and `set_index_type` methods on `struct type`, in\norder to remove the `TYPE_INDEX_TYPE` macro.  In this patch, the\n`TYPE_INDEX_TYPE` macro is changed to use `type::index_type`, so all the\ncall sites that are used to set the type's index type are changed to use\n`type::set_index_type`.  The next patch will remove `TYPE_INDEX_TYPE`\ncompletely.\n\ngdb/ChangeLog:\n\n\t* gdbtypes.h (struct type) <index_type, set_index_type>: New\n\tmethods.\n\t(TYPE_INDEX_TYPE): Use type::index_type.\n\t* gdbtypes.c (create_array_type_with_stride): Likewise.\n\nChange-Id: I93bdca9de9f3e143d2ccea59310c63745315e18d",
    "tree": {
      "sha": "d2d824c6a17fcba7f819d61c4b5c4f9e1f4d930b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d2d824c6a17fcba7f819d61c4b5c4f9e1f4d930b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/262abc0d67af006a709d0935940f9c9f5f7c5ee5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/262abc0d67af006a709d0935940f9c9f5f7c5ee5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/262abc0d67af006a709d0935940f9c9f5f7c5ee5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/262abc0d67af006a709d0935940f9c9f5f7c5ee5/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "26417f19193444a1516c945492c5eb47dc38abe9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26417f19193444a1516c945492c5eb47dc38abe9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/26417f19193444a1516c945492c5eb47dc38abe9"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 19,
    "deletions": 2
  },
  "files": [
    {
      "sha": "6870b2ca5bf6d18ff615021caf61d15a99649d45",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/262abc0d67af006a709d0935940f9c9f5f7c5ee5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/262abc0d67af006a709d0935940f9c9f5f7c5ee5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=262abc0d67af006a709d0935940f9c9f5f7c5ee5",
      "patch": "@@ -1,3 +1,10 @@\n+2020-06-08  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbtypes.h (struct type) <index_type, set_index_type>: New\n+\tmethods.\n+\t(TYPE_INDEX_TYPE): Use type::index_type.\n+\t* gdbtypes.c (create_array_type_with_stride): Likewise.\n+\n 2020-06-07  Tom Tromey  <tom@tromey.com>\n \n \t* valprint.c (generic_val_print_float): Remove \"embedded_offset\""
    },
    {
      "sha": "67fd3d20a8f02ae0baf554d54ff4828eeb31e804",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/262abc0d67af006a709d0935940f9c9f5f7c5ee5/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/262abc0d67af006a709d0935940f9c9f5f7c5ee5/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=262abc0d67af006a709d0935940f9c9f5f7c5ee5",
      "patch": "@@ -1293,7 +1293,7 @@ create_array_type_with_stride (struct type *result_type,\n   result_type->set_num_fields (1);\n   result_type->set_fields\n     ((struct field *) TYPE_ZALLOC (result_type, sizeof (struct field)));\n-  TYPE_INDEX_TYPE (result_type) = range_type;\n+  result_type->set_index_type (range_type);\n   if (byte_stride_prop != NULL)\n     result_type->add_dyn_prop (DYN_PROP_BYTE_STRIDE, *byte_stride_prop);\n   else if (bit_stride > 0)"
    },
    {
      "sha": "0cca0fdbd1d095eb404ba906f14073a12709f029",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/262abc0d67af006a709d0935940f9c9f5f7c5ee5/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/262abc0d67af006a709d0935940f9c9f5f7c5ee5/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=262abc0d67af006a709d0935940f9c9f5f7c5ee5",
      "patch": "@@ -933,6 +933,16 @@ struct type\n     this->main_type->flds_bnds.fields = fields;\n   }\n \n+  type *index_type () const\n+  {\n+    return this->field (0).type;\n+  }\n+\n+  void set_index_type (type *index_type)\n+  {\n+    this->field (0).type = index_type;\n+  }\n+\n   /* * Return the dynamic property of the requested KIND from this type's\n      list of dynamic properties.  */\n   dynamic_prop *dyn_prop (dynamic_prop_node_kind kind) const;\n@@ -1482,7 +1492,7 @@ extern unsigned type_align (struct type *);\n    space in struct type.  */\n extern bool set_type_align (struct type *, ULONGEST);\n \n-#define TYPE_INDEX_TYPE(type) TYPE_FIELD_TYPE (type, 0)\n+#define TYPE_INDEX_TYPE(type) ((type)->index_type ())\n #define TYPE_RANGE_DATA(thistype) TYPE_MAIN_TYPE(thistype)->flds_bnds.bounds\n #define TYPE_LOW_BOUND(range_type) \\\n   TYPE_RANGE_DATA(range_type)->low.data.const_val"
    }
  ]
}