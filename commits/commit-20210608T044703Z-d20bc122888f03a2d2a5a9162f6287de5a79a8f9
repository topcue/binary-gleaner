{
  "sha": "d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDIwYmMxMjI4ODhmMDNhMmQyYTVhOTE2MmY2Mjg3ZGU1YTc5YThmOQ==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-29T16:55:39Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-08T04:47:03Z"
    },
    "message": "gnulib: import select\n\nA few sims use this to emulate the syscall & provide network\nfunctionality.",
    "tree": {
      "sha": "74f06af30ead1d46d0c749d1be85b439ce70b698",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/74f06af30ead1d46d0c749d1be85b439ce70b698"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "172a7ff54b235e3e30e52976c953f6da8134625d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/172a7ff54b235e3e30e52976c953f6da8134625d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/172a7ff54b235e3e30e52976c953f6da8134625d"
    }
  ],
  "stats": {
    "total": 2428,
    "additions": 2402,
    "deletions": 26
  },
  "files": [
    {
      "sha": "223b66324ee8eb931a670db63d97ef9a38362280",
      "filename": "gnulib/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/ChangeLog?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -1,3 +1,13 @@\n+2021-06-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* update-gnulib.sh (IMPORTED_GNULIB_MODULES): Add netdb.\n+\t* aclocal.m4, config.in, configure, Makefile.gnulib.inc.in,\n+\tMakefile.in, import/Makefile.am, import/Makefile.in,\n+\timport/m4/gnulib-cache.m4, import/m4/gnulib-comp.m4: Regenerate.\n+\t* import/m4/select.m4, import/m4/socketlib.m4, import/m4/sockets.m4,\n+\timport/m4/sys_select_h.m4, import/select.c, import/sockets.c,\n+\timport/sockets.h, import/sys_select.in.h, import/w32sock.h: New files.\n+\n 2021-06-08  Mike Frysinger  <vapier@gentoo.org>\n \n \t* update-gnulib.sh (IMPORTED_GNULIB_MODULES): Add netdb."
    },
    {
      "sha": "822f892a189a1154d0168ce46cdda48a81d15e62",
      "filename": "gnulib/Makefile.gnulib.inc.in",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/Makefile.gnulib.inc.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/Makefile.gnulib.inc.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/Makefile.gnulib.inc.in?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -40,5 +40,5 @@ LIBGNU = $(GNULIB_BUILDDIR)/import/libgnu.a\n LIBGNU_EXTRA_LIBS = @FREXPL_LIBM@ @FREXP_LIBM@ @INET_NTOP_LIB@ \\\n                     @LIBTHREAD@ @LIB_GETLOGIN@ @LIB_GETRANDOM@ \\\n                     @LIB_HARD_LOCALE@ @LIB_MBRTOWC@ \\\n-                    @LIB_SETLOCALE_NULL@ @LIBINTL@\n+                    @LIB_SETLOCALE_NULL@ @LIBINTL@ @LIB_SELECT@ @LIBSOCKET@\n INCGNU = -I$(srcdir)/../gnulib/import -I$(GNULIB_BUILDDIR)/import"
    },
    {
      "sha": "e1b9b34a794e0a5c2daf60d472cd8acf63cab954",
      "filename": "gnulib/Makefile.in",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/Makefile.in?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -231,9 +231,12 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/import/m4/rewinddir.m4 \\\n \t$(top_srcdir)/import/m4/rmdir.m4 \\\n \t$(top_srcdir)/import/m4/save-cwd.m4 \\\n+\t$(top_srcdir)/import/m4/select.m4 \\\n \t$(top_srcdir)/import/m4/setenv.m4 \\\n \t$(top_srcdir)/import/m4/setlocale_null.m4 \\\n \t$(top_srcdir)/import/m4/signal_h.m4 \\\n+\t$(top_srcdir)/import/m4/socketlib.m4 \\\n+\t$(top_srcdir)/import/m4/sockets.m4 \\\n \t$(top_srcdir)/import/m4/socklen.m4 \\\n \t$(top_srcdir)/import/m4/sockpfaf.m4 \\\n \t$(top_srcdir)/import/m4/ssize_t.m4 \\\n@@ -256,6 +259,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/import/m4/strstr.m4 \\\n \t$(top_srcdir)/import/m4/strtok_r.m4 \\\n \t$(top_srcdir)/import/m4/sys_random_h.m4 \\\n+\t$(top_srcdir)/import/m4/sys_select_h.m4 \\\n \t$(top_srcdir)/import/m4/sys_socket_h.m4 \\\n \t$(top_srcdir)/import/m4/sys_stat_h.m4 \\\n \t$(top_srcdir)/import/m4/sys_time_h.m4 \\\n@@ -680,6 +684,7 @@ GNULIB_POWF = @GNULIB_POWF@\n GNULIB_PREAD = @GNULIB_PREAD@\n GNULIB_PRINTF = @GNULIB_PRINTF@\n GNULIB_PRINTF_POSIX = @GNULIB_PRINTF_POSIX@\n+GNULIB_PSELECT = @GNULIB_PSELECT@\n GNULIB_PTHREAD_SIGMASK = @GNULIB_PTHREAD_SIGMASK@\n GNULIB_PTSNAME = @GNULIB_PTSNAME@\n GNULIB_PTSNAME_R = @GNULIB_PTSNAME_R@\n@@ -720,6 +725,7 @@ GNULIB_RPMATCH = @GNULIB_RPMATCH@\n GNULIB_SCANDIR = @GNULIB_SCANDIR@\n GNULIB_SCANF = @GNULIB_SCANF@\n GNULIB_SECURE_GETENV = @GNULIB_SECURE_GETENV@\n+GNULIB_SELECT = @GNULIB_SELECT@\n GNULIB_SEND = @GNULIB_SEND@\n GNULIB_SENDTO = @GNULIB_SENDTO@\n GNULIB_SETENV = @GNULIB_SETENV@\n@@ -1088,6 +1094,7 @@ HAVE_POSIX_OPENPT = @HAVE_POSIX_OPENPT@\n HAVE_POSIX_SIGNALBLOCKING = @HAVE_POSIX_SIGNALBLOCKING@\n HAVE_POWF = @HAVE_POWF@\n HAVE_PREAD = @HAVE_PREAD@\n+HAVE_PSELECT = @HAVE_PSELECT@\n HAVE_PTHREAD_SIGMASK = @HAVE_PTHREAD_SIGMASK@\n HAVE_PTSNAME = @HAVE_PTSNAME@\n HAVE_PTSNAME_R = @HAVE_PTSNAME_R@\n@@ -1161,6 +1168,7 @@ HAVE_SYS_INTTYPES_H = @HAVE_SYS_INTTYPES_H@\n HAVE_SYS_LOADAVG_H = @HAVE_SYS_LOADAVG_H@\n HAVE_SYS_PARAM_H = @HAVE_SYS_PARAM_H@\n HAVE_SYS_RANDOM_H = @HAVE_SYS_RANDOM_H@\n+HAVE_SYS_SELECT_H = @HAVE_SYS_SELECT_H@\n HAVE_SYS_SOCKET_H = @HAVE_SYS_SOCKET_H@\n HAVE_SYS_TIME_H = @HAVE_SYS_TIME_H@\n HAVE_SYS_TYPES_H = @HAVE_SYS_TYPES_H@\n@@ -1244,6 +1252,7 @@ LIBOBJS = @LIBOBJS@\n LIBPMULTITHREAD = @LIBPMULTITHREAD@\n LIBPTHREAD = @LIBPTHREAD@\n LIBS = @LIBS@\n+LIBSOCKET = @LIBSOCKET@\n LIBSTDTHREAD = @LIBSTDTHREAD@\n LIBTHREAD = @LIBTHREAD@\n LIB_CLOCK_GETTIME = @LIB_CLOCK_GETTIME@\n@@ -1252,6 +1261,7 @@ LIB_GETRANDOM = @LIB_GETRANDOM@\n LIB_HARD_LOCALE = @LIB_HARD_LOCALE@\n LIB_MBRTOWC = @LIB_MBRTOWC@\n LIB_SCHED_YIELD = @LIB_SCHED_YIELD@\n+LIB_SELECT = @LIB_SELECT@\n LIB_SETLOCALE_NULL = @LIB_SETLOCALE_NULL@\n LIMITS_H = @LIMITS_H@\n LN_S = @LN_S@\n@@ -1291,6 +1301,7 @@ NEXT_AS_FIRST_DIRECTIVE_STDLIB_H = @NEXT_AS_FIRST_DIRECTIVE_STDLIB_H@\n NEXT_AS_FIRST_DIRECTIVE_STRINGS_H = @NEXT_AS_FIRST_DIRECTIVE_STRINGS_H@\n NEXT_AS_FIRST_DIRECTIVE_STRING_H = @NEXT_AS_FIRST_DIRECTIVE_STRING_H@\n NEXT_AS_FIRST_DIRECTIVE_SYS_RANDOM_H = @NEXT_AS_FIRST_DIRECTIVE_SYS_RANDOM_H@\n+NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H = @NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H@\n NEXT_AS_FIRST_DIRECTIVE_SYS_SOCKET_H = @NEXT_AS_FIRST_DIRECTIVE_SYS_SOCKET_H@\n NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H = @NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H@\n NEXT_AS_FIRST_DIRECTIVE_SYS_TIME_H = @NEXT_AS_FIRST_DIRECTIVE_SYS_TIME_H@\n@@ -1321,6 +1332,7 @@ NEXT_STDLIB_H = @NEXT_STDLIB_H@\n NEXT_STRINGS_H = @NEXT_STRINGS_H@\n NEXT_STRING_H = @NEXT_STRING_H@\n NEXT_SYS_RANDOM_H = @NEXT_SYS_RANDOM_H@\n+NEXT_SYS_SELECT_H = @NEXT_SYS_SELECT_H@\n NEXT_SYS_SOCKET_H = @NEXT_SYS_SOCKET_H@\n NEXT_SYS_STAT_H = @NEXT_SYS_STAT_H@\n NEXT_SYS_TIME_H = @NEXT_SYS_TIME_H@\n@@ -1514,6 +1526,7 @@ REPLACE_POPEN = @REPLACE_POPEN@\n REPLACE_POSIX_MEMALIGN = @REPLACE_POSIX_MEMALIGN@\n REPLACE_PREAD = @REPLACE_PREAD@\n REPLACE_PRINTF = @REPLACE_PRINTF@\n+REPLACE_PSELECT = @REPLACE_PSELECT@\n REPLACE_PTHREAD_SIGMASK = @REPLACE_PTHREAD_SIGMASK@\n REPLACE_PTSNAME = @REPLACE_PTSNAME@\n REPLACE_PTSNAME_R = @REPLACE_PTSNAME_R@\n@@ -1539,6 +1552,7 @@ REPLACE_RMDIR = @REPLACE_RMDIR@\n REPLACE_ROUND = @REPLACE_ROUND@\n REPLACE_ROUNDF = @REPLACE_ROUNDF@\n REPLACE_ROUNDL = @REPLACE_ROUNDL@\n+REPLACE_SELECT = @REPLACE_SELECT@\n REPLACE_SETENV = @REPLACE_SETENV@\n REPLACE_SETLOCALE = @REPLACE_SETLOCALE@\n REPLACE_SETSTATE = @REPLACE_SETSTATE@"
    },
    {
      "sha": "83780b641ac411dea6617d5a5f601383d51465a4",
      "filename": "gnulib/aclocal.m4",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/aclocal.m4?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -1304,9 +1304,12 @@ m4_include([import/m4/rename.m4])\n m4_include([import/m4/rewinddir.m4])\n m4_include([import/m4/rmdir.m4])\n m4_include([import/m4/save-cwd.m4])\n+m4_include([import/m4/select.m4])\n m4_include([import/m4/setenv.m4])\n m4_include([import/m4/setlocale_null.m4])\n m4_include([import/m4/signal_h.m4])\n+m4_include([import/m4/socketlib.m4])\n+m4_include([import/m4/sockets.m4])\n m4_include([import/m4/socklen.m4])\n m4_include([import/m4/sockpfaf.m4])\n m4_include([import/m4/ssize_t.m4])\n@@ -1329,6 +1332,7 @@ m4_include([import/m4/strnlen.m4])\n m4_include([import/m4/strstr.m4])\n m4_include([import/m4/strtok_r.m4])\n m4_include([import/m4/sys_random_h.m4])\n+m4_include([import/m4/sys_select_h.m4])\n m4_include([import/m4/sys_socket_h.m4])\n m4_include([import/m4/sys_stat_h.m4])\n m4_include([import/m4/sys_time_h.m4])"
    },
    {
      "sha": "a90ddd611823425798029ea095869f55b3f1951f",
      "filename": "gnulib/config.in",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/config.in?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -303,6 +303,9 @@\n /* Define to 1 when the gnulib module rmdir should be tested. */\n #undef GNULIB_TEST_RMDIR\n \n+/* Define to 1 when the gnulib module select should be tested. */\n+#undef GNULIB_TEST_SELECT\n+\n /* Define to 1 when the gnulib module setenv should be tested. */\n #undef GNULIB_TEST_SETENV\n \n@@ -880,6 +883,9 @@\n /* Define to 1 if you have the <sys/random.h> header file. */\n #undef HAVE_SYS_RANDOM_H\n \n+/* Define to 1 if you have the <sys/select.h> header file. */\n+#undef HAVE_SYS_SELECT_H\n+\n /* Define to 1 if you have the <sys/socket.h> header file. */\n #undef HAVE_SYS_SOCKET_H\n \n@@ -1252,6 +1258,9 @@\n    'wchar_t'. */\n #undef WCHAR_T_SUFFIX\n \n+/* Define if WSAStartup is needed. */\n+#undef WINDOWS_SOCKETS\n+\n /* Define to l, ll, u, ul, ull, etc., as suitable for constants of type\n    'wint_t'. */\n #undef WINT_T_SUFFIX"
    },
    {
      "sha": "73a38082960a379db55ffb24fb612b9fbffa1ecc",
      "filename": "gnulib/configure",
      "status": "modified",
      "additions": 604,
      "deletions": 0,
      "changes": 604,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/configure?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -776,6 +776,16 @@ GNULIB_SIGPROCMASK\n GNULIB_SIGNAL_H_SIGPIPE\n GNULIB_RAISE\n GNULIB_PTHREAD_SIGMASK\n+LIB_SELECT\n+LIBSOCKET\n+HAVE_SYS_SELECT_H\n+NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H\n+NEXT_SYS_SELECT_H\n+REPLACE_SELECT\n+REPLACE_PSELECT\n+HAVE_PSELECT\n+GNULIB_SELECT\n+GNULIB_PSELECT\n GL_GENERATE_NETINET_IN_H_FALSE\n GL_GENERATE_NETINET_IN_H_TRUE\n NETINET_IN_H\n@@ -3783,6 +3793,7 @@ as_fn_append ac_func_list \" openat\"\n as_fn_append ac_func_list \" pipe\"\n as_fn_append ac_func_list \" readlink\"\n as_fn_append ac_func_list \" link\"\n+as_fn_append ac_header_list \" sys/select.h\"\n as_fn_append ac_func_list \" setenv\"\n as_fn_append ac_func_list \" strerror_r\"\n as_fn_append ac_func_list \" __xpg_strerror_r\"\n@@ -6813,13 +6824,16 @@ fi\n   # Code from module same-inode:\n   # Code from module save-cwd:\n   # Code from module scratch_buffer:\n+  # Code from module select:\n   # Code from module setenv:\n   # Code from module setlocale-null:\n   # Code from module signal-h:\n   # Code from module snippet/_Noreturn:\n   # Code from module snippet/arg-nonnull:\n   # Code from module snippet/c++defs:\n   # Code from module snippet/warn-on-use:\n+  # Code from module socketlib:\n+  # Code from module sockets:\n   # Code from module socklen:\n   # Code from module ssize_t:\n   # Code from module stat:\n@@ -6845,6 +6859,7 @@ fi\n   # Code from module strstr-simple:\n   # Code from module strtok_r:\n   # Code from module sys_random:\n+  # Code from module sys_select:\n   # Code from module sys_socket:\n   # Code from module sys_stat:\n   # Code from module sys_time:\n@@ -16475,6 +16490,409 @@ _ACEOF\n \n \n \n+\n+  GNULIB_PSELECT=0;\n+  GNULIB_SELECT=0;\n+    HAVE_PSELECT=1;\n+  REPLACE_PSELECT=0;\n+  REPLACE_SELECT=0;\n+\n+\n+\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether <sys/select.h> is self-contained\" >&5\n+$as_echo_n \"checking whether <sys/select.h> is self-contained... \" >&6; }\n+if ${gl_cv_header_sys_select_h_selfcontained+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+                                    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/select.h>\n+int\n+main ()\n+{\n+struct timeval b;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  gl_cv_header_sys_select_h_selfcontained=yes\n+else\n+  gl_cv_header_sys_select_h_selfcontained=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+                        if test $gl_cv_header_sys_select_h_selfcontained = yes; then\n+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/select.h>\n+int\n+main ()\n+{\n+int memset; int bzero;\n+  ;\n+  return 0;\n+}\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/select.h>\n+int\n+main ()\n+{\n+\n+                  #undef memset\n+                  #define memset nonexistent_memset\n+                  extern\n+                  #ifdef __cplusplus\n+                  \"C\"\n+                  #endif\n+                  void *memset (void *, int, unsigned long);\n+                  #undef bzero\n+                  #define bzero nonexistent_bzero\n+                  extern\n+                  #ifdef __cplusplus\n+                  \"C\"\n+                  #endif\n+                  void bzero (void *, unsigned long);\n+                  fd_set fds;\n+                  FD_ZERO (&fds);\n+\n+  ;\n+  return 0;\n+}\n+\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+\n+else\n+  gl_cv_header_sys_select_h_selfcontained=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+      fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gl_cv_header_sys_select_h_selfcontained\" >&5\n+$as_echo \"$gl_cv_header_sys_select_h_selfcontained\" >&6; }\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+     if test $gl_cv_have_include_next = yes; then\n+       gl_cv_next_sys_select_h='<'sys/select.h'>'\n+     else\n+       { $as_echo \"$as_me:${as_lineno-$LINENO}: checking absolute name of <sys/select.h>\" >&5\n+$as_echo_n \"checking absolute name of <sys/select.h>... \" >&6; }\n+if ${gl_cv_next_sys_select_h+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+             if test $ac_cv_header_sys_select_h = yes; then\n+\n+\n+\n+\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/select.h>\n+_ACEOF\n+                case \"$host_os\" in\n+    aix*) gl_absname_cpp=\"$ac_cpp -C\" ;;\n+    *)    gl_absname_cpp=\"$ac_cpp\" ;;\n+  esac\n+\n+  case \"$host_os\" in\n+    mingw*)\n+                                          gl_dirsep_regex='[/\\\\]'\n+      ;;\n+    *)\n+      gl_dirsep_regex='\\/'\n+      ;;\n+  esac\n+      gl_make_literal_regex_sed='s,[]$^\\\\.*/[],\\\\&,g'\n+  gl_header_literal_regex=`echo 'sys/select.h' \\\n+                           | sed -e \"$gl_make_literal_regex_sed\"`\n+  gl_absolute_header_sed=\"/${gl_dirsep_regex}${gl_header_literal_regex}/\"'{\n+      s/.*\"\\(.*'\"${gl_dirsep_regex}${gl_header_literal_regex}\"'\\)\".*/\\1/\n+      s|^/[^/]|//&|\n+      p\n+      q\n+    }'\n+\n+        gl_cv_absolute_sys_select_h=`(eval \"$gl_absname_cpp conftest.$ac_ext\") 2>&5 |\n+  sed -n \"$gl_absolute_header_sed\"`\n+\n+           gl_header=$gl_cv_absolute_sys_select_h\n+           gl_cv_next_sys_select_h='\"'$gl_header'\"'\n+          else\n+               gl_cv_next_sys_select_h='<'sys/select.h'>'\n+             fi\n+\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gl_cv_next_sys_select_h\" >&5\n+$as_echo \"$gl_cv_next_sys_select_h\" >&6; }\n+     fi\n+     NEXT_SYS_SELECT_H=$gl_cv_next_sys_select_h\n+\n+     if test $gl_cv_have_include_next = yes || test $gl_cv_have_include_next = buggy; then\n+       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include_next'\n+       gl_next_as_first_directive='<'sys/select.h'>'\n+     else\n+       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include'\n+       gl_next_as_first_directive=$gl_cv_next_sys_select_h\n+     fi\n+     NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H=$gl_next_as_first_directive\n+\n+\n+\n+\n+  if test $ac_cv_header_sys_select_h = yes; then\n+    HAVE_SYS_SELECT_H=1\n+  else\n+    HAVE_SYS_SELECT_H=0\n+  fi\n+\n+\n+\n+\n+\n+  if test $ac_cv_header_sys_socket_h != yes; then\n+                    for ac_header in winsock2.h\n+do :\n+  ac_fn_c_check_header_mongrel \"$LINENO\" \"winsock2.h\" \"ac_cv_header_winsock2_h\" \"$ac_includes_default\"\n+if test \"x$ac_cv_header_winsock2_h\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_WINSOCK2_H 1\n+_ACEOF\n+\n+fi\n+\n+done\n+\n+  fi\n+  if test \"$ac_cv_header_winsock2_h\" = yes; then\n+    HAVE_WINSOCK2_H=1\n+    UNISTD_H_HAVE_WINSOCK2_H=1\n+    SYS_IOCTL_H_HAVE_WINSOCK2_H=1\n+  else\n+    HAVE_WINSOCK2_H=0\n+  fi\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+  if test $ac_cv_header_sys_socket_h != yes; then\n+                    for ac_header in winsock2.h\n+do :\n+  ac_fn_c_check_header_mongrel \"$LINENO\" \"winsock2.h\" \"ac_cv_header_winsock2_h\" \"$ac_includes_default\"\n+if test \"x$ac_cv_header_winsock2_h\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_WINSOCK2_H 1\n+_ACEOF\n+\n+fi\n+\n+done\n+\n+  fi\n+  if test \"$ac_cv_header_winsock2_h\" = yes; then\n+    HAVE_WINSOCK2_H=1\n+    UNISTD_H_HAVE_WINSOCK2_H=1\n+    SYS_IOCTL_H_HAVE_WINSOCK2_H=1\n+  else\n+    HAVE_WINSOCK2_H=0\n+  fi\n+\n+   LIBSOCKET=\n+  if test $HAVE_WINSOCK2_H = 1; then\n+                { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for WSAStartup\" >&5\n+$as_echo_n \"checking for WSAStartup... \" >&6; }\n+if ${gl_cv_func_wsastartup+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+       gl_save_LIBS=\"$LIBS\"\n+       LIBS=\"$LIBS -lws2_32\"\n+       cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#ifdef HAVE_WINSOCK2_H\n+# include <winsock2.h>\n+#endif\n+int\n+main ()\n+{\n+\n+            WORD wVersionRequested = MAKEWORD(1, 1);\n+            WSADATA wsaData;\n+            int err = WSAStartup(wVersionRequested, &wsaData);\n+            WSACleanup ();\n+\n+  ;\n+  return 0;\n+}\n+\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  gl_cv_func_wsastartup=yes\n+else\n+  gl_cv_func_wsastartup=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+       LIBS=\"$gl_save_LIBS\"\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gl_cv_func_wsastartup\" >&5\n+$as_echo \"$gl_cv_func_wsastartup\" >&6; }\n+    if test \"$gl_cv_func_wsastartup\" = \"yes\"; then\n+\n+$as_echo \"#define WINDOWS_SOCKETS 1\" >>confdefs.h\n+\n+      LIBSOCKET='-lws2_32'\n+    fi\n+  else\n+                                    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing setsockopt\" >&5\n+$as_echo_n \"checking for library containing setsockopt... \" >&6; }\n+if ${gl_cv_lib_socket+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+      gl_cv_lib_socket=\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+char setsockopt();\n+int\n+main ()\n+{\n+setsockopt();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+\n+else\n+  gl_save_LIBS=\"$LIBS\"\n+         LIBS=\"$gl_save_LIBS -lsocket\"\n+         cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+char setsockopt();\n+int\n+main ()\n+{\n+setsockopt();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  gl_cv_lib_socket=\"-lsocket\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+         if test -z \"$gl_cv_lib_socket\"; then\n+           LIBS=\"$gl_save_LIBS -lnetwork\"\n+           cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+char setsockopt();\n+int\n+main ()\n+{\n+setsockopt();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  gl_cv_lib_socket=\"-lnetwork\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+           if test -z \"$gl_cv_lib_socket\"; then\n+             LIBS=\"$gl_save_LIBS -lnet\"\n+             cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+char setsockopt();\n+int\n+main ()\n+{\n+setsockopt();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  gl_cv_lib_socket=\"-lnet\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+           fi\n+         fi\n+         LIBS=\"$gl_save_LIBS\"\n+\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+      if test -z \"$gl_cv_lib_socket\"; then\n+        gl_cv_lib_socket=\"none needed\"\n+      fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gl_cv_lib_socket\" >&5\n+$as_echo \"$gl_cv_lib_socket\" >&6; }\n+    if test \"$gl_cv_lib_socket\" != \"none needed\"; then\n+      LIBSOCKET=\"$gl_cv_lib_socket\"\n+    fi\n+  fi\n+\n+\n+\n+\n+\n+\n+  :\n+\n+\n ac_fn_c_check_decl \"$LINENO\" \"setenv\" \"ac_cv_have_decl_setenv\" \"$ac_includes_default\"\n if test \"x$ac_cv_have_decl_setenv\" = xyes; then :\n   ac_have_decl=1\n@@ -27598,6 +28016,188 @@ $as_echo \"#define GNULIB_TEST_RMDIR 1\" >>confdefs.h\n \n \n \n+\n+\n+  if test \"$ac_cv_header_winsock2_h\" = yes; then\n+    REPLACE_SELECT=1\n+  else\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether select supports a 0 argument\" >&5\n+$as_echo_n \"checking whether select supports a 0 argument... \" >&6; }\n+if ${gl_cv_func_select_supports0+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+        if test \"$cross_compiling\" = yes; then :\n+\n+           case \"$host_os\" in\n+                       # Guess no on Interix.\n+             interix*) gl_cv_func_select_supports0=\"guessing no\";;\n+                       # Guess yes otherwise.\n+             *)        gl_cv_func_select_supports0=\"guessing yes\";;\n+           esac\n+\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <sys/types.h>\n+#include <sys/time.h>\n+#if HAVE_SYS_SELECT_H\n+#include <sys/select.h>\n+#endif\n+int main ()\n+{\n+  struct timeval timeout;\n+  timeout.tv_sec = 0;\n+  timeout.tv_usec = 5;\n+  return select (0, (fd_set *)0, (fd_set *)0, (fd_set *)0, &timeout) < 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  gl_cv_func_select_supports0=yes\n+else\n+  gl_cv_func_select_supports0=no\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+fi\n+\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gl_cv_func_select_supports0\" >&5\n+$as_echo \"$gl_cv_func_select_supports0\" >&6; }\n+    case \"$gl_cv_func_select_supports0\" in\n+      *yes) ;;\n+      *) REPLACE_SELECT=1 ;;\n+    esac\n+\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether select detects invalid fds\" >&5\n+$as_echo_n \"checking whether select detects invalid fds... \" >&6; }\n+if ${gl_cv_func_select_detects_ebadf+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+        if test \"$cross_compiling\" = yes; then :\n+\n+           case \"$host_os\" in\n+                             # Guess yes on Linux systems.\n+            linux-* | linux) gl_cv_func_select_detects_ebadf=\"guessing yes\" ;;\n+                             # Guess yes on glibc systems.\n+            *-gnu* | gnu*)   gl_cv_func_select_detects_ebadf=\"guessing yes\" ;;\n+                             # If we don't know, obey --enable-cross-guesses.\n+            *)               gl_cv_func_select_detects_ebadf=\"$gl_cross_guess_normal\" ;;\n+           esac\n+\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <sys/types.h>\n+#include <sys/time.h>\n+#if HAVE_SYS_SELECT_H\n+# include <sys/select.h>\n+#endif\n+#include <unistd.h>\n+#include <errno.h>\n+\n+\n+$gl_mda_defines\n+\n+int\n+main ()\n+{\n+\n+  fd_set set;\n+  dup2(0, 16);\n+  FD_ZERO(&set);\n+  FD_SET(16, &set);\n+  close(16);\n+  struct timeval timeout;\n+  timeout.tv_sec = 0;\n+  timeout.tv_usec = 5;\n+  return select (17, &set, NULL, NULL, &timeout) != -1 || errno != EBADF;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  gl_cv_func_select_detects_ebadf=yes\n+else\n+  gl_cv_func_select_detects_ebadf=no\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+fi\n+\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gl_cv_func_select_detects_ebadf\" >&5\n+$as_echo \"$gl_cv_func_select_detects_ebadf\" >&6; }\n+    case $gl_cv_func_select_detects_ebadf in\n+      *yes) ;;\n+      *) REPLACE_SELECT=1 ;;\n+    esac\n+  fi\n+\n+    LIB_SELECT=\"$LIBSOCKET\"\n+  if test $REPLACE_SELECT = 1; then\n+    case \"$host_os\" in\n+      mingw*)\n+                                cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#define WIN32_LEAN_AND_MEAN\n+#include <windows.h>\n+int\n+main ()\n+{\n+  MsgWaitForMultipleObjects (0, NULL, 0, 0, 0);\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+\n+else\n+  LIB_SELECT=\"$LIB_SELECT -luser32\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+        ;;\n+    esac\n+  fi\n+\n+\n+  if test $REPLACE_SELECT = 1; then\n+\n+\n+\n+\n+\n+\n+\n+\n+  gl_LIBOBJS=\"$gl_LIBOBJS select.$ac_objext\"\n+\n+  fi\n+\n+\n+\n+\n+\n+          GNULIB_SELECT=1\n+\n+\n+\n+\n+\n+$as_echo \"#define GNULIB_TEST_SELECT 1\" >>confdefs.h\n+\n+\n+\n+\n+\n      if test $ac_cv_func_setenv = no; then\n     HAVE_SETENV=0\n   else\n@@ -28113,6 +28713,8 @@ fi\n \n \n \n+\n+\n      ac_fn_c_check_type \"$LINENO\" \"socklen_t\" \"ac_cv_type_socklen_t\" \"\n /* <sys/types.h> is not needed according to POSIX, but the\n    <sys/socket.h> in i386-unknown-freebsd4.10 and\n@@ -29918,6 +30520,8 @@ $as_echo \"$gl_cv_next_sys_random_h\" >&6; }\n \n \n \n+\n+\n \n \n "
    },
    {
      "sha": "1ae25ac280507f6fefb99165f7391a6af78c3eba",
      "filename": "gnulib/import/Makefile.am",
      "status": "modified",
      "additions": 52,
      "deletions": 0,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/Makefile.am?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -63,6 +63,7 @@\n #  rawmemchr \\\n #  readlink \\\n #  rename \\\n+#  select \\\n #  setenv \\\n #  signal-h \\\n #  strchrnul \\\n@@ -1701,6 +1702,15 @@ EXTRA_DIST += malloc/scratch_buffer.h scratch_buffer.h\n \n ## end   gnulib module scratch_buffer\n \n+## begin gnulib module select\n+\n+\n+EXTRA_DIST += select.c\n+\n+EXTRA_libgnu_a_SOURCES += select.c\n+\n+## end   gnulib module select\n+\n ## begin gnulib module setenv\n \n \n@@ -1810,6 +1820,14 @@ EXTRA_DIST += warn-on-use.h\n \n ## end   gnulib module snippet/warn-on-use\n \n+## begin gnulib module sockets\n+\n+libgnu_a_SOURCES += sockets.h sockets.c\n+\n+EXTRA_DIST += w32sock.h\n+\n+## end   gnulib module sockets\n+\n ## begin gnulib module stat\n \n \n@@ -2492,6 +2510,40 @@ EXTRA_DIST += sys_random.in.h\n \n ## end   gnulib module sys_random\n \n+## begin gnulib module sys_select\n+\n+BUILT_SOURCES += sys/select.h\n+\n+# We need the following in order to create <sys/select.h> when the system\n+# doesn't have one that works with the given compiler.\n+sys/select.h: sys_select.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H)\n+\t$(AM_V_at)$(MKDIR_P) sys\n+\t$(AM_V_GEN)rm -f $@-t $@ && \\\n+\t{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \\\n+\t  sed -e 's|@''GUARD_PREFIX''@|GL|g' \\\n+\t      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \\\n+\t      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \\\n+\t      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \\\n+\t      -e 's|@''NEXT_SYS_SELECT_H''@|$(NEXT_SYS_SELECT_H)|g' \\\n+\t      -e 's|@''HAVE_SYS_SELECT_H''@|$(HAVE_SYS_SELECT_H)|g' \\\n+\t      -e 's/@''GNULIB_PSELECT''@/$(GNULIB_PSELECT)/g' \\\n+\t      -e 's/@''GNULIB_SELECT''@/$(GNULIB_SELECT)/g' \\\n+\t      -e 's|@''HAVE_WINSOCK2_H''@|$(HAVE_WINSOCK2_H)|g' \\\n+\t      -e 's|@''HAVE_PSELECT''@|$(HAVE_PSELECT)|g' \\\n+\t      -e 's|@''REPLACE_PSELECT''@|$(REPLACE_PSELECT)|g' \\\n+\t      -e 's|@''REPLACE_SELECT''@|$(REPLACE_SELECT)|g' \\\n+\t      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \\\n+\t      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \\\n+\t      < $(srcdir)/sys_select.in.h; \\\n+\t} > $@-t && \\\n+\tmv $@-t $@\n+MOSTLYCLEANFILES += sys/select.h sys/select.h-t\n+MOSTLYCLEANDIRS += sys\n+\n+EXTRA_DIST += sys_select.in.h\n+\n+## end   gnulib module sys_select\n+\n ## begin gnulib module sys_socket\n \n BUILT_SOURCES += sys/socket.h"
    },
    {
      "sha": "e9b52a7d4fc34474de2c2ee1803610f53706fa1b",
      "filename": "gnulib/import/Makefile.in",
      "status": "modified",
      "additions": 68,
      "deletions": 25,
      "changes": 93,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/Makefile.in?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -77,6 +77,7 @@\n #  rawmemchr \\\n #  readlink \\\n #  rename \\\n+#  select \\\n #  setenv \\\n #  signal-h \\\n #  strchrnul \\\n@@ -294,9 +295,12 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/import/m4/rewinddir.m4 \\\n \t$(top_srcdir)/import/m4/rmdir.m4 \\\n \t$(top_srcdir)/import/m4/save-cwd.m4 \\\n+\t$(top_srcdir)/import/m4/select.m4 \\\n \t$(top_srcdir)/import/m4/setenv.m4 \\\n \t$(top_srcdir)/import/m4/setlocale_null.m4 \\\n \t$(top_srcdir)/import/m4/signal_h.m4 \\\n+\t$(top_srcdir)/import/m4/socketlib.m4 \\\n+\t$(top_srcdir)/import/m4/sockets.m4 \\\n \t$(top_srcdir)/import/m4/socklen.m4 \\\n \t$(top_srcdir)/import/m4/sockpfaf.m4 \\\n \t$(top_srcdir)/import/m4/ssize_t.m4 \\\n@@ -319,6 +323,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/import/m4/strstr.m4 \\\n \t$(top_srcdir)/import/m4/strtok_r.m4 \\\n \t$(top_srcdir)/import/m4/sys_random_h.m4 \\\n+\t$(top_srcdir)/import/m4/sys_select_h.m4 \\\n \t$(top_srcdir)/import/m4/sys_socket_h.m4 \\\n \t$(top_srcdir)/import/m4/sys_stat_h.m4 \\\n \t$(top_srcdir)/import/m4/sys_time_h.m4 \\\n@@ -366,7 +371,7 @@ am_libgnu_a_OBJECTS = openat-proc.$(OBJEXT) basename-lgpl.$(OBJEXT) \\\n \tmalloc/scratch_buffer_grow.$(OBJEXT) \\\n \tmalloc/scratch_buffer_grow_preserve.$(OBJEXT) \\\n \tmalloc/scratch_buffer_set_array_size.$(OBJEXT) \\\n-\tsetlocale_null.$(OBJEXT) stat-time.$(OBJEXT) \\\n+\tsetlocale_null.$(OBJEXT) sockets.$(OBJEXT) stat-time.$(OBJEXT) \\\n \tstrnlen1.$(OBJEXT) sys_socket.$(OBJEXT) tempname.$(OBJEXT) \\\n \tglthread/threadlib.$(OBJEXT) unistd.$(OBJEXT) \\\n \tdup-safer.$(OBJEXT) fd-safer.$(OBJEXT) pipe-safer.$(OBJEXT) \\\n@@ -781,6 +786,7 @@ GNULIB_POWF = @GNULIB_POWF@\n GNULIB_PREAD = @GNULIB_PREAD@\n GNULIB_PRINTF = @GNULIB_PRINTF@\n GNULIB_PRINTF_POSIX = @GNULIB_PRINTF_POSIX@\n+GNULIB_PSELECT = @GNULIB_PSELECT@\n GNULIB_PTHREAD_SIGMASK = @GNULIB_PTHREAD_SIGMASK@\n GNULIB_PTSNAME = @GNULIB_PTSNAME@\n GNULIB_PTSNAME_R = @GNULIB_PTSNAME_R@\n@@ -821,6 +827,7 @@ GNULIB_RPMATCH = @GNULIB_RPMATCH@\n GNULIB_SCANDIR = @GNULIB_SCANDIR@\n GNULIB_SCANF = @GNULIB_SCANF@\n GNULIB_SECURE_GETENV = @GNULIB_SECURE_GETENV@\n+GNULIB_SELECT = @GNULIB_SELECT@\n GNULIB_SEND = @GNULIB_SEND@\n GNULIB_SENDTO = @GNULIB_SENDTO@\n GNULIB_SETENV = @GNULIB_SETENV@\n@@ -1189,6 +1196,7 @@ HAVE_POSIX_OPENPT = @HAVE_POSIX_OPENPT@\n HAVE_POSIX_SIGNALBLOCKING = @HAVE_POSIX_SIGNALBLOCKING@\n HAVE_POWF = @HAVE_POWF@\n HAVE_PREAD = @HAVE_PREAD@\n+HAVE_PSELECT = @HAVE_PSELECT@\n HAVE_PTHREAD_SIGMASK = @HAVE_PTHREAD_SIGMASK@\n HAVE_PTSNAME = @HAVE_PTSNAME@\n HAVE_PTSNAME_R = @HAVE_PTSNAME_R@\n@@ -1262,6 +1270,7 @@ HAVE_SYS_INTTYPES_H = @HAVE_SYS_INTTYPES_H@\n HAVE_SYS_LOADAVG_H = @HAVE_SYS_LOADAVG_H@\n HAVE_SYS_PARAM_H = @HAVE_SYS_PARAM_H@\n HAVE_SYS_RANDOM_H = @HAVE_SYS_RANDOM_H@\n+HAVE_SYS_SELECT_H = @HAVE_SYS_SELECT_H@\n HAVE_SYS_SOCKET_H = @HAVE_SYS_SOCKET_H@\n HAVE_SYS_TIME_H = @HAVE_SYS_TIME_H@\n HAVE_SYS_TYPES_H = @HAVE_SYS_TYPES_H@\n@@ -1345,6 +1354,7 @@ LIBOBJS = @LIBOBJS@\n LIBPMULTITHREAD = @LIBPMULTITHREAD@\n LIBPTHREAD = @LIBPTHREAD@\n LIBS = @LIBS@\n+LIBSOCKET = @LIBSOCKET@\n LIBSTDTHREAD = @LIBSTDTHREAD@\n LIBTHREAD = @LIBTHREAD@\n LIB_CLOCK_GETTIME = @LIB_CLOCK_GETTIME@\n@@ -1353,6 +1363,7 @@ LIB_GETRANDOM = @LIB_GETRANDOM@\n LIB_HARD_LOCALE = @LIB_HARD_LOCALE@\n LIB_MBRTOWC = @LIB_MBRTOWC@\n LIB_SCHED_YIELD = @LIB_SCHED_YIELD@\n+LIB_SELECT = @LIB_SELECT@\n LIB_SETLOCALE_NULL = @LIB_SETLOCALE_NULL@\n LIMITS_H = @LIMITS_H@\n LN_S = @LN_S@\n@@ -1392,6 +1403,7 @@ NEXT_AS_FIRST_DIRECTIVE_STDLIB_H = @NEXT_AS_FIRST_DIRECTIVE_STDLIB_H@\n NEXT_AS_FIRST_DIRECTIVE_STRINGS_H = @NEXT_AS_FIRST_DIRECTIVE_STRINGS_H@\n NEXT_AS_FIRST_DIRECTIVE_STRING_H = @NEXT_AS_FIRST_DIRECTIVE_STRING_H@\n NEXT_AS_FIRST_DIRECTIVE_SYS_RANDOM_H = @NEXT_AS_FIRST_DIRECTIVE_SYS_RANDOM_H@\n+NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H = @NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H@\n NEXT_AS_FIRST_DIRECTIVE_SYS_SOCKET_H = @NEXT_AS_FIRST_DIRECTIVE_SYS_SOCKET_H@\n NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H = @NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H@\n NEXT_AS_FIRST_DIRECTIVE_SYS_TIME_H = @NEXT_AS_FIRST_DIRECTIVE_SYS_TIME_H@\n@@ -1422,6 +1434,7 @@ NEXT_STDLIB_H = @NEXT_STDLIB_H@\n NEXT_STRINGS_H = @NEXT_STRINGS_H@\n NEXT_STRING_H = @NEXT_STRING_H@\n NEXT_SYS_RANDOM_H = @NEXT_SYS_RANDOM_H@\n+NEXT_SYS_SELECT_H = @NEXT_SYS_SELECT_H@\n NEXT_SYS_SOCKET_H = @NEXT_SYS_SOCKET_H@\n NEXT_SYS_STAT_H = @NEXT_SYS_STAT_H@\n NEXT_SYS_TIME_H = @NEXT_SYS_TIME_H@\n@@ -1615,6 +1628,7 @@ REPLACE_POPEN = @REPLACE_POPEN@\n REPLACE_POSIX_MEMALIGN = @REPLACE_POSIX_MEMALIGN@\n REPLACE_PREAD = @REPLACE_PREAD@\n REPLACE_PRINTF = @REPLACE_PRINTF@\n+REPLACE_PSELECT = @REPLACE_PSELECT@\n REPLACE_PTHREAD_SIGMASK = @REPLACE_PTHREAD_SIGMASK@\n REPLACE_PTSNAME = @REPLACE_PTSNAME@\n REPLACE_PTSNAME_R = @REPLACE_PTSNAME_R@\n@@ -1640,6 +1654,7 @@ REPLACE_RMDIR = @REPLACE_RMDIR@\n REPLACE_ROUND = @REPLACE_ROUND@\n REPLACE_ROUNDF = @REPLACE_ROUNDF@\n REPLACE_ROUNDL = @REPLACE_ROUNDL@\n+REPLACE_SELECT = @REPLACE_SELECT@\n REPLACE_SETENV = @REPLACE_SETENV@\n REPLACE_SETLOCALE = @REPLACE_SETLOCALE@\n REPLACE_SETSTATE = @REPLACE_SETSTATE@\n@@ -1831,14 +1846,15 @@ EXTRA_DIST = m4/gnulib-cache.m4 alloca.c alloca.in.h arpa_inet.in.h \\\n \trawmemchr.c rawmemchr.valgrind dirent-private.h readdir.c \\\n \treadlink.c realloc.c rename.c dirent-private.h rewinddir.c \\\n \trmdir.c same-inode.h save-cwd.h malloc/scratch_buffer.h \\\n-\tscratch_buffer.h setenv.c setlocale-lock.c setlocale_null.h \\\n-\twindows-initguard.h signal.in.h _Noreturn.h arg-nonnull.h \\\n-\tc++defs.h warn-on-use.h stat-w32.c stat-w32.h stat.c \\\n-\tstat-time.h stdalign.in.h stdbool.in.h stddef.in.h stdint.in.h \\\n-\tstdio.in.h stdlib.in.h strchrnul.c strchrnul.valgrind strdup.c \\\n-\tstreq.h strerror.c strerror-override.c strerror-override.h \\\n-\tstrerror_r.c string.in.h strings.in.h strnlen.c strstr.c \\\n-\tstr-two-way.h strstr.c strtok_r.c sys_random.in.h \\\n+\tscratch_buffer.h select.c setenv.c setlocale-lock.c \\\n+\tsetlocale_null.h windows-initguard.h signal.in.h _Noreturn.h \\\n+\targ-nonnull.h c++defs.h warn-on-use.h w32sock.h stat-w32.c \\\n+\tstat-w32.h stat.c stat-time.h stdalign.in.h stdbool.in.h \\\n+\tstddef.in.h stdint.in.h stdio.in.h stdlib.in.h strchrnul.c \\\n+\tstrchrnul.valgrind strdup.c streq.h strerror.c \\\n+\tstrerror-override.c strerror-override.h strerror_r.c \\\n+\tstring.in.h strings.in.h strnlen.c strstr.c str-two-way.h \\\n+\tstrstr.c strtok_r.c sys_random.in.h sys_select.in.h \\\n \tsys_socket.in.h sys_stat.in.h sys_time.in.h sys_types.in.h \\\n \tsys_uio.in.h tempname.h time.in.h time_r.c unistd.in.h \\\n \tunistd--.h unistd-safer.h unsetenv.c \\\n@@ -1852,9 +1868,9 @@ BUILT_SOURCES = $(ALLOCA_H) arpa/inet.h ctype.h dirent.h $(ERRNO_H) \\\n \tfcntl.h $(FLOAT_H) $(FNMATCH_H) $(GLOB_H) inttypes.h \\\n \t$(LIMITS_H) locale.h math.h netdb.h $(NETINET_IN_H) signal.h \\\n \t$(STDALIGN_H) $(STDBOOL_H) $(STDDEF_H) $(STDINT_H) stdio.h \\\n-\tstdlib.h string.h strings.h sys/random.h sys/socket.h \\\n-\tsys/stat.h sys/time.h sys/types.h sys/uio.h time.h unistd.h \\\n-\twchar.h wctype.h\n+\tstdlib.h string.h strings.h sys/random.h sys/select.h \\\n+\tsys/socket.h sys/stat.h sys/time.h sys/types.h sys/uio.h \\\n+\ttime.h unistd.h wchar.h wctype.h\n SUFFIXES = \n MOSTLYCLEANFILES = core *.stackdump alloca.h alloca.h-t arpa/inet.h \\\n \tarpa/inet.h-t ctype.h ctype.h-t dirent.h dirent.h-t errno.h \\\n@@ -1865,11 +1881,12 @@ MOSTLYCLEANFILES = core *.stackdump alloca.h alloca.h-t arpa/inet.h \\\n \tstdalign.h stdalign.h-t stdbool.h stdbool.h-t stddef.h \\\n \tstddef.h-t stdint.h stdint.h-t stdio.h stdio.h-t stdlib.h \\\n \tstdlib.h-t string.h string.h-t strings.h strings.h-t \\\n-\tsys/random.h sys/random.h-t sys/socket.h sys/socket.h-t \\\n-\tsys/stat.h sys/stat.h-t sys/time.h sys/time.h-t sys/types.h \\\n-\tsys/types.h-t sys/uio.h sys/uio.h-t time.h time.h-t unistd.h \\\n-\tunistd.h-t wchar.h wchar.h-t wctype.h wctype.h-t\n-MOSTLYCLEANDIRS = arpa netinet sys sys sys sys\n+\tsys/random.h sys/random.h-t sys/select.h sys/select.h-t \\\n+\tsys/socket.h sys/socket.h-t sys/stat.h sys/stat.h-t sys/time.h \\\n+\tsys/time.h-t sys/types.h sys/types.h-t sys/uio.h sys/uio.h-t \\\n+\ttime.h time.h-t unistd.h unistd.h-t wchar.h wchar.h-t wctype.h \\\n+\twctype.h-t\n+MOSTLYCLEANDIRS = arpa netinet sys sys sys sys sys\n CLEANFILES = \n DISTCLEANFILES = \n MAINTAINERCLEANFILES = \n@@ -1885,9 +1902,9 @@ libgnu_a_SOURCES = openat-priv.h openat-proc.c basename-lgpl.c \\\n \tmalloc/scratch_buffer_grow.c \\\n \tmalloc/scratch_buffer_grow_preserve.c \\\n \tmalloc/scratch_buffer_set_array_size.c setlocale_null.c \\\n-\tstat-time.c strnlen1.h strnlen1.c sys_socket.c tempname.c \\\n-\tglthread/threadlib.c unistd.c dup-safer.c fd-safer.c \\\n-\tpipe-safer.c wctype-h.c\n+\tsockets.h sockets.c stat-time.c strnlen1.h strnlen1.c \\\n+\tsys_socket.c tempname.c glthread/threadlib.c unistd.c \\\n+\tdup-safer.c fd-safer.c pipe-safer.c wctype-h.c\n libgnu_a_LIBADD = $(gl_LIBOBJS) @ALLOCA@\n libgnu_a_DEPENDENCIES = $(gl_LIBOBJS) @ALLOCA@\n EXTRA_libgnu_a_SOURCES = alloca.c btowc.c canonicalize-lgpl.c \\\n@@ -1904,11 +1921,11 @@ EXTRA_libgnu_a_SOURCES = alloca.c btowc.c canonicalize-lgpl.c \\\n \tmemmem.c mempcpy.c memrchr.c mkdir.c mkdtemp.c mkostemp.c \\\n \tmsvc-inval.c msvc-nothrow.c open.c openat.c opendir.c pipe.c \\\n \trawmemchr.c readdir.c readlink.c realloc.c rename.c \\\n-\trewinddir.c rmdir.c setenv.c setlocale-lock.c stat-w32.c \\\n-\tstat.c strchrnul.c strdup.c strerror.c strerror-override.c \\\n-\tstrerror_r.c strnlen.c strstr.c strstr.c strtok_r.c time_r.c \\\n-\tunsetenv.c windows-mutex.c windows-once.c windows-recmutex.c \\\n-\twindows-rwlock.c wmemchr.c wmempcpy.c\n+\trewinddir.c rmdir.c select.c setenv.c setlocale-lock.c \\\n+\tstat-w32.c stat.c strchrnul.c strdup.c strerror.c \\\n+\tstrerror-override.c strerror_r.c strnlen.c strstr.c strstr.c \\\n+\tstrtok_r.c time_r.c unsetenv.c windows-mutex.c windows-once.c \\\n+\twindows-recmutex.c windows-rwlock.c wmemchr.c wmempcpy.c\n \n # Use this preprocessor expression to decide whether #include_next works.\n # Do not rely on a 'configure'-time test for this, since the expression\n@@ -2111,9 +2128,11 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rewinddir.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rmdir.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/save-cwd.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/select.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setenv.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setlocale-lock.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setlocale_null.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sockets.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stat-time.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stat-w32.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stat.Po@am__quote@\n@@ -3539,6 +3558,30 @@ sys/random.h: sys_random.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(ARG_N\n \t} > $@-t && \\\n \tmv -f $@-t $@\n \n+# We need the following in order to create <sys/select.h> when the system\n+# doesn't have one that works with the given compiler.\n+sys/select.h: sys_select.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H)\n+\t$(AM_V_at)$(MKDIR_P) sys\n+\t$(AM_V_GEN)rm -f $@-t $@ && \\\n+\t{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \\\n+\t  sed -e 's|@''GUARD_PREFIX''@|GL|g' \\\n+\t      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \\\n+\t      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \\\n+\t      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \\\n+\t      -e 's|@''NEXT_SYS_SELECT_H''@|$(NEXT_SYS_SELECT_H)|g' \\\n+\t      -e 's|@''HAVE_SYS_SELECT_H''@|$(HAVE_SYS_SELECT_H)|g' \\\n+\t      -e 's/@''GNULIB_PSELECT''@/$(GNULIB_PSELECT)/g' \\\n+\t      -e 's/@''GNULIB_SELECT''@/$(GNULIB_SELECT)/g' \\\n+\t      -e 's|@''HAVE_WINSOCK2_H''@|$(HAVE_WINSOCK2_H)|g' \\\n+\t      -e 's|@''HAVE_PSELECT''@|$(HAVE_PSELECT)|g' \\\n+\t      -e 's|@''REPLACE_PSELECT''@|$(REPLACE_PSELECT)|g' \\\n+\t      -e 's|@''REPLACE_SELECT''@|$(REPLACE_SELECT)|g' \\\n+\t      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \\\n+\t      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \\\n+\t      < $(srcdir)/sys_select.in.h; \\\n+\t} > $@-t && \\\n+\tmv $@-t $@\n+\n # We need the following in order to create <sys/socket.h> when the system\n # doesn't have one that works with the given compiler.\n sys/socket.h: sys_socket.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H) $(ARG_NONNULL_H)"
    },
    {
      "sha": "689ebd3e5ba959476c658d79c7a0c07fdf0942ee",
      "filename": "gnulib/import/m4/gnulib-cache.m4",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/m4/gnulib-cache.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/m4/gnulib-cache.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/m4/gnulib-cache.m4?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -68,6 +68,7 @@\n #  rawmemchr \\\n #  readlink \\\n #  rename \\\n+#  select \\\n #  setenv \\\n #  signal-h \\\n #  strchrnul \\\n@@ -115,6 +116,7 @@ gl_MODULES([\n   rawmemchr\n   readlink\n   rename\n+  select\n   setenv\n   signal-h\n   strchrnul"
    },
    {
      "sha": "03eff90b6b2dbe1bb27c812cb68f3ad0ed12b55c",
      "filename": "gnulib/import/m4/gnulib-comp.m4",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/m4/gnulib-comp.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/m4/gnulib-comp.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/m4/gnulib-comp.m4?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -172,13 +172,16 @@ AC_DEFUN([gl_EARLY],\n   # Code from module same-inode:\n   # Code from module save-cwd:\n   # Code from module scratch_buffer:\n+  # Code from module select:\n   # Code from module setenv:\n   # Code from module setlocale-null:\n   # Code from module signal-h:\n   # Code from module snippet/_Noreturn:\n   # Code from module snippet/arg-nonnull:\n   # Code from module snippet/c++defs:\n   # Code from module snippet/warn-on-use:\n+  # Code from module socketlib:\n+  # Code from module sockets:\n   # Code from module socklen:\n   # Code from module ssize_t:\n   # Code from module stat:\n@@ -204,6 +207,7 @@ AC_DEFUN([gl_EARLY],\n   # Code from module strstr-simple:\n   # Code from module strtok_r:\n   # Code from module sys_random:\n+  # Code from module sys_select:\n   # Code from module sys_socket:\n   # Code from module sys_stat:\n   # Code from module sys_time:\n@@ -664,6 +668,11 @@ AC_DEFUN([gl_INIT],\n   fi\n   gl_UNISTD_MODULE_INDICATOR([rmdir])\n   gl_SAVE_CWD\n+  gl_FUNC_SELECT\n+  if test $REPLACE_SELECT = 1; then\n+    AC_LIBOBJ([select])\n+  fi\n+  gl_SYS_SELECT_MODULE_INDICATOR([select])\n   gl_FUNC_SETENV\n   if test $HAVE_SETENV = 0 || test $REPLACE_SETENV = 1; then\n     AC_LIBOBJ([setenv])\n@@ -676,6 +685,8 @@ AC_DEFUN([gl_INIT],\n   fi\n   gl_LOCALE_MODULE_INDICATOR([setlocale_null])\n   gl_SIGNAL_H\n+  AC_REQUIRE([gl_SOCKETLIB])\n+  AC_REQUIRE([gl_SOCKETS])\n   gl_TYPE_SOCKLEN_T\n   gt_TYPE_SSIZE_T\n   gl_FUNC_STAT\n@@ -754,6 +765,8 @@ AC_DEFUN([gl_INIT],\n   gl_STRING_MODULE_INDICATOR([strtok_r])\n   gl_HEADER_SYS_RANDOM\n   AC_PROG_MKDIR_P\n+  AC_REQUIRE([gl_HEADER_SYS_SELECT])\n+  AC_PROG_MKDIR_P\n   AC_REQUIRE([gl_HEADER_SYS_SOCKET])\n   AC_PROG_MKDIR_P\n   gl_HEADER_SYS_STAT_H\n@@ -1127,11 +1140,14 @@ AC_DEFUN([gl_FILE_LIST], [\n   lib/save-cwd.c\n   lib/save-cwd.h\n   lib/scratch_buffer.h\n+  lib/select.c\n   lib/setenv.c\n   lib/setlocale-lock.c\n   lib/setlocale_null.c\n   lib/setlocale_null.h\n   lib/signal.in.h\n+  lib/sockets.c\n+  lib/sockets.h\n   lib/stat-time.c\n   lib/stat-time.h\n   lib/stat-w32.c\n@@ -1161,6 +1177,7 @@ AC_DEFUN([gl_FILE_LIST], [\n   lib/strstr.c\n   lib/strtok_r.c\n   lib/sys_random.in.h\n+  lib/sys_select.in.h\n   lib/sys_socket.c\n   lib/sys_socket.in.h\n   lib/sys_stat.in.h\n@@ -1177,6 +1194,7 @@ AC_DEFUN([gl_FILE_LIST], [\n   lib/unistd.in.h\n   lib/unsetenv.c\n   lib/verify.h\n+  lib/w32sock.h\n   lib/warn-on-use.h\n   lib/wchar.in.h\n   lib/wctype-h.c\n@@ -1313,9 +1331,12 @@ AC_DEFUN([gl_FILE_LIST], [\n   m4/rewinddir.m4\n   m4/rmdir.m4\n   m4/save-cwd.m4\n+  m4/select.m4\n   m4/setenv.m4\n   m4/setlocale_null.m4\n   m4/signal_h.m4\n+  m4/socketlib.m4\n+  m4/sockets.m4\n   m4/socklen.m4\n   m4/sockpfaf.m4\n   m4/ssize_t.m4\n@@ -1338,6 +1359,7 @@ AC_DEFUN([gl_FILE_LIST], [\n   m4/strstr.m4\n   m4/strtok_r.m4\n   m4/sys_random_h.m4\n+  m4/sys_select_h.m4\n   m4/sys_socket_h.m4\n   m4/sys_stat_h.m4\n   m4/sys_time_h.m4"
    },
    {
      "sha": "c7409d2041d1e4d3cd876432091fbdfa913a19c3",
      "filename": "gnulib/import/m4/select.m4",
      "status": "added",
      "additions": 117,
      "deletions": 0,
      "changes": 117,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/m4/select.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/m4/select.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/m4/select.m4?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -0,0 +1,117 @@\n+# select.m4 serial 12\n+dnl Copyright (C) 2009-2021 Free Software Foundation, Inc.\n+dnl This file is free software; the Free Software Foundation\n+dnl gives unlimited permission to copy and/or distribute it,\n+dnl with or without modifications, as long as this notice is preserved.\n+\n+AC_DEFUN([gl_FUNC_SELECT],\n+[\n+  AC_REQUIRE([gl_HEADER_SYS_SELECT])\n+  AC_REQUIRE([AC_C_RESTRICT])\n+  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles\n+  AC_REQUIRE([gl_SOCKETS])\n+  if test \"$ac_cv_header_winsock2_h\" = yes; then\n+    REPLACE_SELECT=1\n+  else\n+    dnl On Interix 3.5, select(0, NULL, NULL, NULL, timeout) fails with error\n+    dnl EFAULT.\n+    AC_CHECK_HEADERS_ONCE([sys/select.h])\n+    AC_CACHE_CHECK([whether select supports a 0 argument],\n+      [gl_cv_func_select_supports0],\n+      [\n+        AC_RUN_IFELSE([AC_LANG_SOURCE([[\n+#include <sys/types.h>\n+#include <sys/time.h>\n+#if HAVE_SYS_SELECT_H\n+#include <sys/select.h>\n+#endif\n+int main ()\n+{\n+  struct timeval timeout;\n+  timeout.tv_sec = 0;\n+  timeout.tv_usec = 5;\n+  return select (0, (fd_set *)0, (fd_set *)0, (fd_set *)0, &timeout) < 0;\n+}]])], [gl_cv_func_select_supports0=yes], [gl_cv_func_select_supports0=no],\n+          [\n+changequote(,)dnl\n+           case \"$host_os\" in\n+                       # Guess no on Interix.\n+             interix*) gl_cv_func_select_supports0=\"guessing no\";;\n+                       # Guess yes otherwise.\n+             *)        gl_cv_func_select_supports0=\"guessing yes\";;\n+           esac\n+changequote([,])dnl\n+          ])\n+      ])\n+    case \"$gl_cv_func_select_supports0\" in\n+      *yes) ;;\n+      *) REPLACE_SELECT=1 ;;\n+    esac\n+\n+    dnl On FreeBSD 8.2, select() doesn't always reject bad fds.\n+    AC_CACHE_CHECK([whether select detects invalid fds],\n+      [gl_cv_func_select_detects_ebadf],\n+      [\n+        AC_RUN_IFELSE([AC_LANG_PROGRAM([[\n+#include <sys/types.h>\n+#include <sys/time.h>\n+#if HAVE_SYS_SELECT_H\n+# include <sys/select.h>\n+#endif\n+#include <unistd.h>\n+#include <errno.h>\n+]GL_MDA_DEFINES],\n+[[\n+  fd_set set;\n+  dup2(0, 16);\n+  FD_ZERO(&set);\n+  FD_SET(16, &set);\n+  close(16);\n+  struct timeval timeout;\n+  timeout.tv_sec = 0;\n+  timeout.tv_usec = 5;\n+  return select (17, &set, NULL, NULL, &timeout) != -1 || errno != EBADF;\n+]])], [gl_cv_func_select_detects_ebadf=yes],\n+      [gl_cv_func_select_detects_ebadf=no],\n+          [\n+           case \"$host_os\" in\n+                             # Guess yes on Linux systems.\n+            linux-* | linux) gl_cv_func_select_detects_ebadf=\"guessing yes\" ;;\n+                             # Guess yes on glibc systems.\n+            *-gnu* | gnu*)   gl_cv_func_select_detects_ebadf=\"guessing yes\" ;;\n+                             # If we don't know, obey --enable-cross-guesses.\n+            *)               gl_cv_func_select_detects_ebadf=\"$gl_cross_guess_normal\" ;;\n+           esac\n+          ])\n+      ])\n+    case $gl_cv_func_select_detects_ebadf in\n+      *yes) ;;\n+      *) REPLACE_SELECT=1 ;;\n+    esac\n+  fi\n+\n+  dnl Determine the needed libraries.\n+  LIB_SELECT=\"$LIBSOCKET\"\n+  if test $REPLACE_SELECT = 1; then\n+    case \"$host_os\" in\n+      mingw*)\n+        dnl On the MSVC platform, the function MsgWaitForMultipleObjects\n+        dnl (used in lib/select.c) requires linking with -luser32. On mingw,\n+        dnl it is implicit.\n+        AC_LINK_IFELSE(\n+          [AC_LANG_SOURCE([[\n+#define WIN32_LEAN_AND_MEAN\n+#include <windows.h>\n+int\n+main ()\n+{\n+  MsgWaitForMultipleObjects (0, NULL, 0, 0, 0);\n+  return 0;\n+}]])],\n+          [],\n+          [LIB_SELECT=\"$LIB_SELECT -luser32\"])\n+        ;;\n+    esac\n+  fi\n+  AC_SUBST([LIB_SELECT])\n+])"
    },
    {
      "sha": "0f8a0829c7ba58b89b6f8a41ae92303164e54e23",
      "filename": "gnulib/import/m4/socketlib.m4",
      "status": "added",
      "additions": 96,
      "deletions": 0,
      "changes": 96,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/m4/socketlib.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/m4/socketlib.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/m4/socketlib.m4?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -0,0 +1,96 @@\n+# socketlib.m4 serial 3\n+dnl Copyright (C) 2008-2021 Free Software Foundation, Inc.\n+dnl This file is free software; the Free Software Foundation\n+dnl gives unlimited permission to copy and/or distribute it,\n+dnl with or without modifications, as long as this notice is preserved.\n+\n+dnl gl_SOCKETLIB\n+dnl Determines the library to use for socket functions.\n+dnl Sets and AC_SUBSTs LIBSOCKET.\n+\n+AC_DEFUN([gl_SOCKETLIB],\n+[\n+  gl_PREREQ_SYS_H_WINSOCK2 dnl for HAVE_WINSOCK2_H\n+  LIBSOCKET=\n+  if test $HAVE_WINSOCK2_H = 1; then\n+    dnl Native Windows API (not Cygwin).\n+    dnl If the function WSAStartup exists (declared in <winsock2.h> and\n+    dnl defined through -lws2_32), we need to call it.\n+    AC_CACHE_CHECK([for WSAStartup],\n+      [gl_cv_func_wsastartup], [\n+       gl_save_LIBS=\"$LIBS\"\n+       LIBS=\"$LIBS -lws2_32\"\n+       AC_LINK_IFELSE(\n+         [AC_LANG_PROGRAM([[\n+#ifdef HAVE_WINSOCK2_H\n+# include <winsock2.h>\n+#endif]], [[\n+            WORD wVersionRequested = MAKEWORD(1, 1);\n+            WSADATA wsaData;\n+            int err = WSAStartup(wVersionRequested, &wsaData);\n+            WSACleanup ();\n+            ]])\n+         ],\n+         [gl_cv_func_wsastartup=yes],\n+         [gl_cv_func_wsastartup=no])\n+       LIBS=\"$gl_save_LIBS\"\n+      ])\n+    if test \"$gl_cv_func_wsastartup\" = \"yes\"; then\n+      AC_DEFINE([WINDOWS_SOCKETS], [1], [Define if WSAStartup is needed.])\n+      LIBSOCKET='-lws2_32'\n+    fi\n+  else\n+    dnl Unix API.\n+    dnl Solaris has most socket functions in libsocket.\n+    dnl Haiku has most socket functions in libnetwork.\n+    dnl BeOS has most socket functions in libnet.\n+    dnl On HP-UX, do NOT link with libxnet, because in 64-bit mode this would\n+    dnl break code (e.g. in libraries) that invokes accept(), getpeername(),\n+    dnl getsockname(), getsockopt(), or recvfrom() with a 32-bit addrlen. See\n+    dnl \"man xopen_networking\" for details.\n+    AC_CACHE_CHECK([for library containing setsockopt], [gl_cv_lib_socket], [\n+      gl_cv_lib_socket=\n+      AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+char setsockopt();]], [[setsockopt();]])],\n+        [],\n+        [gl_save_LIBS=\"$LIBS\"\n+         LIBS=\"$gl_save_LIBS -lsocket\"\n+         AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+char setsockopt();]], [[setsockopt();]])],\n+           [gl_cv_lib_socket=\"-lsocket\"])\n+         if test -z \"$gl_cv_lib_socket\"; then\n+           LIBS=\"$gl_save_LIBS -lnetwork\"\n+           AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+char setsockopt();]], [[setsockopt();]])],\n+             [gl_cv_lib_socket=\"-lnetwork\"])\n+           if test -z \"$gl_cv_lib_socket\"; then\n+             LIBS=\"$gl_save_LIBS -lnet\"\n+             AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+char setsockopt();]], [[setsockopt();]])],\n+               [gl_cv_lib_socket=\"-lnet\"])\n+           fi\n+         fi\n+         LIBS=\"$gl_save_LIBS\"\n+        ])\n+      if test -z \"$gl_cv_lib_socket\"; then\n+        gl_cv_lib_socket=\"none needed\"\n+      fi\n+    ])\n+    if test \"$gl_cv_lib_socket\" != \"none needed\"; then\n+      LIBSOCKET=\"$gl_cv_lib_socket\"\n+    fi\n+  fi\n+  AC_SUBST([LIBSOCKET])\n+])"
    },
    {
      "sha": "02b43b6e7fe5729af287c918882a85160660d813",
      "filename": "gnulib/import/m4/sockets.m4",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/m4/sockets.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/m4/sockets.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/m4/sockets.m4?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -0,0 +1,17 @@\n+# sockets.m4 serial 7\n+dnl Copyright (C) 2008-2021 Free Software Foundation, Inc.\n+dnl This file is free software; the Free Software Foundation\n+dnl gives unlimited permission to copy and/or distribute it,\n+dnl with or without modifications, as long as this notice is preserved.\n+\n+AC_DEFUN([gl_SOCKETS],\n+[\n+  AC_REQUIRE([AC_C_INLINE])\n+  AC_REQUIRE([gl_SOCKETLIB])\n+  gl_PREREQ_SOCKETS\n+])\n+\n+# Prerequisites of lib/sockets.c.\n+AC_DEFUN([gl_PREREQ_SOCKETS], [\n+  :\n+])"
    },
    {
      "sha": "4b33d312e55da4c7a4c6e9367388da9a91d4ac6a",
      "filename": "gnulib/import/m4/sys_select_h.m4",
      "status": "added",
      "additions": 95,
      "deletions": 0,
      "changes": 95,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/m4/sys_select_h.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/m4/sys_select_h.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/m4/sys_select_h.m4?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -0,0 +1,95 @@\n+# sys_select_h.m4 serial 20\n+dnl Copyright (C) 2006-2021 Free Software Foundation, Inc.\n+dnl This file is free software; the Free Software Foundation\n+dnl gives unlimited permission to copy and/or distribute it,\n+dnl with or without modifications, as long as this notice is preserved.\n+\n+AC_DEFUN([gl_HEADER_SYS_SELECT],\n+[\n+  AC_REQUIRE([AC_C_RESTRICT])\n+  AC_REQUIRE([gl_SYS_SELECT_H_DEFAULTS])\n+  AC_CACHE_CHECK([whether <sys/select.h> is self-contained],\n+    [gl_cv_header_sys_select_h_selfcontained],\n+    [\n+      dnl Test against two bugs:\n+      dnl 1. On many platforms, <sys/select.h> assumes prior inclusion of\n+      dnl    <sys/types.h>.\n+      dnl 2. On OSF/1 4.0, <sys/select.h> provides only a forward declaration\n+      dnl    of 'struct timeval', and no definition of this type.\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/select.h>]],\n+                                         [[struct timeval b;]])],\n+        [gl_cv_header_sys_select_h_selfcontained=yes],\n+        [gl_cv_header_sys_select_h_selfcontained=no])\n+      dnl Test against another bug:\n+      dnl 3. On Solaris 10, <sys/select.h> provides an FD_ZERO implementation\n+      dnl    that relies on memset(), but without including <string.h>.\n+      if test $gl_cv_header_sys_select_h_selfcontained = yes; then\n+        AC_COMPILE_IFELSE(\n+          [AC_LANG_PROGRAM([[#include <sys/select.h>]],\n+                           [[int memset; int bzero;]])\n+          ],\n+          [AC_LINK_IFELSE(\n+             [AC_LANG_PROGRAM([[#include <sys/select.h>]], [[\n+                  #undef memset\n+                  #define memset nonexistent_memset\n+                  extern\n+                  #ifdef __cplusplus\n+                  \"C\"\n+                  #endif\n+                  void *memset (void *, int, unsigned long);\n+                  #undef bzero\n+                  #define bzero nonexistent_bzero\n+                  extern\n+                  #ifdef __cplusplus\n+                  \"C\"\n+                  #endif\n+                  void bzero (void *, unsigned long);\n+                  fd_set fds;\n+                  FD_ZERO (&fds);\n+                ]])\n+             ],\n+             [],\n+             [gl_cv_header_sys_select_h_selfcontained=no])\n+          ])\n+      fi\n+    ])\n+  dnl <sys/select.h> is always overridden, because of GNULIB_POSIXCHECK.\n+  gl_CHECK_NEXT_HEADERS([sys/select.h])\n+  if test $ac_cv_header_sys_select_h = yes; then\n+    HAVE_SYS_SELECT_H=1\n+  else\n+    HAVE_SYS_SELECT_H=0\n+  fi\n+  AC_SUBST([HAVE_SYS_SELECT_H])\n+  gl_PREREQ_SYS_H_WINSOCK2\n+\n+  dnl Check for declarations of anything we want to poison if the\n+  dnl corresponding gnulib module is not in use.\n+  gl_WARN_ON_USE_PREPARE([[\n+/* Some systems require prerequisite headers.  */\n+#include <sys/types.h>\n+#if !(defined __GLIBC__ && !defined __UCLIBC__) && HAVE_SYS_TIME_H\n+# include <sys/time.h>\n+#endif\n+#include <sys/select.h>\n+    ]], [pselect select])\n+])\n+\n+AC_DEFUN([gl_SYS_SELECT_MODULE_INDICATOR],\n+[\n+  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.\n+  AC_REQUIRE([gl_SYS_SELECT_H_DEFAULTS])\n+  gl_MODULE_INDICATOR_SET_VARIABLE([$1])\n+  dnl Define it also as a C macro, for the benefit of the unit tests.\n+  gl_MODULE_INDICATOR_FOR_TESTS([$1])\n+])\n+\n+AC_DEFUN([gl_SYS_SELECT_H_DEFAULTS],\n+[\n+  GNULIB_PSELECT=0; AC_SUBST([GNULIB_PSELECT])\n+  GNULIB_SELECT=0; AC_SUBST([GNULIB_SELECT])\n+  dnl Assume proper GNU behavior unless another module says otherwise.\n+  HAVE_PSELECT=1; AC_SUBST([HAVE_PSELECT])\n+  REPLACE_PSELECT=0; AC_SUBST([REPLACE_PSELECT])\n+  REPLACE_SELECT=0; AC_SUBST([REPLACE_SELECT])\n+])"
    },
    {
      "sha": "56ac8bb7b586c5d935a5770caaf4e9ef0f24499f",
      "filename": "gnulib/import/select.c",
      "status": "added",
      "additions": 597,
      "deletions": 0,
      "changes": 597,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/select.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/select.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/select.c?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -0,0 +1,597 @@\n+/* Emulation for select(2)\n+   Contributed by Paolo Bonzini.\n+\n+   Copyright 2008-2021 Free Software Foundation, Inc.\n+\n+   This file is part of gnulib.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License along\n+   with this program; if not, see <https://www.gnu.org/licenses/>.  */\n+\n+#include <config.h>\n+\n+/* Specification.  */\n+#include <sys/select.h>\n+\n+#if defined _WIN32 && ! defined __CYGWIN__\n+/* Native Windows.  */\n+\n+#include <alloca.h>\n+#include <assert.h>\n+#include <sys/types.h>\n+#include <errno.h>\n+#include <limits.h>\n+\n+#include <winsock2.h>\n+#include <windows.h>\n+#include <io.h>\n+#include <stdio.h>\n+#include <conio.h>\n+#include <time.h>\n+\n+/* Get the overridden 'struct timeval'.  */\n+#include <sys/time.h>\n+\n+#if GNULIB_MSVC_NOTHROW\n+# include \"msvc-nothrow.h\"\n+#else\n+# include <io.h>\n+#endif\n+\n+#undef select\n+\n+/* Don't assume that UNICODE is not defined.  */\n+#undef GetModuleHandle\n+#define GetModuleHandle GetModuleHandleA\n+#undef PeekConsoleInput\n+#define PeekConsoleInput PeekConsoleInputA\n+#undef CreateEvent\n+#define CreateEvent CreateEventA\n+#undef PeekMessage\n+#define PeekMessage PeekMessageA\n+#undef DispatchMessage\n+#define DispatchMessage DispatchMessageA\n+\n+/* Avoid warnings from gcc -Wcast-function-type.  */\n+#define GetProcAddress \\\n+  (void *) GetProcAddress\n+\n+struct bitset {\n+  unsigned char in[FD_SETSIZE / CHAR_BIT];\n+  unsigned char out[FD_SETSIZE / CHAR_BIT];\n+};\n+\n+/* Declare data structures for ntdll functions.  */\n+typedef struct _FILE_PIPE_LOCAL_INFORMATION {\n+  ULONG NamedPipeType;\n+  ULONG NamedPipeConfiguration;\n+  ULONG MaximumInstances;\n+  ULONG CurrentInstances;\n+  ULONG InboundQuota;\n+  ULONG ReadDataAvailable;\n+  ULONG OutboundQuota;\n+  ULONG WriteQuotaAvailable;\n+  ULONG NamedPipeState;\n+  ULONG NamedPipeEnd;\n+} FILE_PIPE_LOCAL_INFORMATION, *PFILE_PIPE_LOCAL_INFORMATION;\n+\n+typedef struct _IO_STATUS_BLOCK\n+{\n+  union {\n+    DWORD Status;\n+    PVOID Pointer;\n+  } u;\n+  ULONG_PTR Information;\n+} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK;\n+\n+typedef enum _FILE_INFORMATION_CLASS {\n+  FilePipeLocalInformation = 24\n+} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;\n+\n+typedef DWORD (WINAPI *PNtQueryInformationFile)\n+         (HANDLE, IO_STATUS_BLOCK *, VOID *, ULONG, FILE_INFORMATION_CLASS);\n+\n+#ifndef PIPE_BUF\n+#define PIPE_BUF        512\n+#endif\n+\n+static BOOL IsConsoleHandle (HANDLE h)\n+{\n+  DWORD mode;\n+  return GetConsoleMode (h, &mode) != 0;\n+}\n+\n+static BOOL\n+IsSocketHandle (HANDLE h)\n+{\n+  WSANETWORKEVENTS ev;\n+\n+  if (IsConsoleHandle (h))\n+    return FALSE;\n+\n+  /* Under Wine, it seems that getsockopt returns 0 for pipes too.\n+     WSAEnumNetworkEvents instead distinguishes the two correctly.  */\n+  ev.lNetworkEvents = 0xDEADBEEF;\n+  WSAEnumNetworkEvents ((SOCKET) h, NULL, &ev);\n+  return ev.lNetworkEvents != 0xDEADBEEF;\n+}\n+\n+/* Compute output fd_sets for libc descriptor FD (whose Windows handle is\n+   H).  */\n+\n+static int\n+windows_poll_handle (HANDLE h, int fd,\n+                     struct bitset *rbits,\n+                     struct bitset *wbits,\n+                     struct bitset *xbits)\n+{\n+  BOOL read, write, except;\n+  int i, ret;\n+  INPUT_RECORD *irbuffer;\n+  DWORD avail, nbuffer;\n+  BOOL bRet;\n+  IO_STATUS_BLOCK iosb;\n+  FILE_PIPE_LOCAL_INFORMATION fpli;\n+  static PNtQueryInformationFile NtQueryInformationFile;\n+  static BOOL once_only;\n+\n+  read = write = except = FALSE;\n+  switch (GetFileType (h))\n+    {\n+    case FILE_TYPE_DISK:\n+      read = TRUE;\n+      write = TRUE;\n+      break;\n+\n+    case FILE_TYPE_PIPE:\n+      if (!once_only)\n+        {\n+          NtQueryInformationFile = (PNtQueryInformationFile)\n+            GetProcAddress (GetModuleHandle (\"ntdll.dll\"),\n+                            \"NtQueryInformationFile\");\n+          once_only = TRUE;\n+        }\n+\n+      if (PeekNamedPipe (h, NULL, 0, NULL, &avail, NULL) != 0)\n+        {\n+          if (avail)\n+            read = TRUE;\n+        }\n+      else if (GetLastError () == ERROR_BROKEN_PIPE)\n+        ;\n+\n+      else\n+        {\n+          /* It was the write-end of the pipe.  Check if it is writable.\n+             If NtQueryInformationFile fails, optimistically assume the pipe is\n+             writable.  This could happen on Windows 9x, where\n+             NtQueryInformationFile is not available, or if we inherit a pipe\n+             that doesn't permit FILE_READ_ATTRIBUTES access on the write end\n+             (I think this should not happen since Windows XP SP2; WINE seems\n+             fine too).  Otherwise, ensure that enough space is available for\n+             atomic writes.  */\n+          memset (&iosb, 0, sizeof (iosb));\n+          memset (&fpli, 0, sizeof (fpli));\n+\n+          if (!NtQueryInformationFile\n+              || NtQueryInformationFile (h, &iosb, &fpli, sizeof (fpli),\n+                                         FilePipeLocalInformation)\n+              || fpli.WriteQuotaAvailable >= PIPE_BUF\n+              || (fpli.OutboundQuota < PIPE_BUF &&\n+                  fpli.WriteQuotaAvailable == fpli.OutboundQuota))\n+            write = TRUE;\n+        }\n+      break;\n+\n+    case FILE_TYPE_CHAR:\n+      write = TRUE;\n+      if (!(rbits->in[fd / CHAR_BIT] & (1 << (fd & (CHAR_BIT - 1)))))\n+        break;\n+\n+      ret = WaitForSingleObject (h, 0);\n+      if (ret == WAIT_OBJECT_0)\n+        {\n+          if (!IsConsoleHandle (h))\n+            {\n+              read = TRUE;\n+              break;\n+            }\n+\n+          nbuffer = avail = 0;\n+          bRet = GetNumberOfConsoleInputEvents (h, &nbuffer);\n+\n+          /* Screen buffers handles are filtered earlier.  */\n+          assert (bRet);\n+          if (nbuffer == 0)\n+            {\n+              except = TRUE;\n+              break;\n+            }\n+\n+          irbuffer = (INPUT_RECORD *) alloca (nbuffer * sizeof (INPUT_RECORD));\n+          bRet = PeekConsoleInput (h, irbuffer, nbuffer, &avail);\n+          if (!bRet || avail == 0)\n+            {\n+              except = TRUE;\n+              break;\n+            }\n+\n+          for (i = 0; i < avail; i++)\n+            if (irbuffer[i].EventType == KEY_EVENT)\n+              read = TRUE;\n+        }\n+      break;\n+\n+    default:\n+      ret = WaitForSingleObject (h, 0);\n+      write = TRUE;\n+      if (ret == WAIT_OBJECT_0)\n+        read = TRUE;\n+\n+      break;\n+    }\n+\n+  ret = 0;\n+  if (read && (rbits->in[fd / CHAR_BIT] & (1 << (fd & (CHAR_BIT - 1)))))\n+    {\n+      rbits->out[fd / CHAR_BIT] |= (1 << (fd & (CHAR_BIT - 1)));\n+      ret++;\n+    }\n+\n+  if (write && (wbits->in[fd / CHAR_BIT] & (1 << (fd & (CHAR_BIT - 1)))))\n+    {\n+      wbits->out[fd / CHAR_BIT] |= (1 << (fd & (CHAR_BIT - 1)));\n+      ret++;\n+    }\n+\n+  if (except && (xbits->in[fd / CHAR_BIT] & (1 << (fd & (CHAR_BIT - 1)))))\n+    {\n+      xbits->out[fd / CHAR_BIT] |= (1 << (fd & (CHAR_BIT - 1)));\n+      ret++;\n+    }\n+\n+  return ret;\n+}\n+\n+int\n+rpl_select (int nfds, fd_set *rfds, fd_set *wfds, fd_set *xfds,\n+            struct timeval *timeout)\n+#undef timeval\n+{\n+  static struct timeval tv0;\n+  static HANDLE hEvent;\n+  HANDLE h, handle_array[FD_SETSIZE + 2];\n+  fd_set handle_rfds, handle_wfds, handle_xfds;\n+  struct bitset rbits, wbits, xbits;\n+  unsigned char anyfds_in[FD_SETSIZE / CHAR_BIT];\n+  DWORD ret, wait_timeout, nhandles, nsock, nbuffer;\n+  MSG msg;\n+  int i, fd, rc;\n+  clock_t tend;\n+\n+  if (nfds > FD_SETSIZE)\n+    nfds = FD_SETSIZE;\n+\n+  if (!timeout)\n+    wait_timeout = INFINITE;\n+  else\n+    {\n+      wait_timeout = timeout->tv_sec * 1000 + timeout->tv_usec / 1000;\n+\n+      /* select is also used as a portable usleep.  */\n+      if (!rfds && !wfds && !xfds)\n+        {\n+          Sleep (wait_timeout);\n+          return 0;\n+        }\n+    }\n+\n+  if (!hEvent)\n+    hEvent = CreateEvent (NULL, FALSE, FALSE, NULL);\n+\n+  handle_array[0] = hEvent;\n+  nhandles = 1;\n+  nsock = 0;\n+\n+  /* Copy descriptors to bitsets.  At the same time, eliminate\n+     bits in the \"wrong\" direction for console input buffers\n+     and screen buffers, because screen buffers are waitable\n+     and they will block until a character is available.  */\n+  memset (&rbits, 0, sizeof (rbits));\n+  memset (&wbits, 0, sizeof (wbits));\n+  memset (&xbits, 0, sizeof (xbits));\n+  memset (anyfds_in, 0, sizeof (anyfds_in));\n+  if (rfds)\n+    for (i = 0; i < rfds->fd_count; i++)\n+      {\n+        fd = rfds->fd_array[i];\n+        h = (HANDLE) _get_osfhandle (fd);\n+        if (IsConsoleHandle (h)\n+            && !GetNumberOfConsoleInputEvents (h, &nbuffer))\n+          continue;\n+\n+        rbits.in[fd / CHAR_BIT] |= 1 << (fd & (CHAR_BIT - 1));\n+        anyfds_in[fd / CHAR_BIT] |= 1 << (fd & (CHAR_BIT - 1));\n+      }\n+  else\n+    rfds = (fd_set *) alloca (sizeof (fd_set));\n+\n+  if (wfds)\n+    for (i = 0; i < wfds->fd_count; i++)\n+      {\n+        fd = wfds->fd_array[i];\n+        h = (HANDLE) _get_osfhandle (fd);\n+        if (IsConsoleHandle (h)\n+            && GetNumberOfConsoleInputEvents (h, &nbuffer))\n+          continue;\n+\n+        wbits.in[fd / CHAR_BIT] |= 1 << (fd & (CHAR_BIT - 1));\n+        anyfds_in[fd / CHAR_BIT] |= 1 << (fd & (CHAR_BIT - 1));\n+      }\n+  else\n+    wfds = (fd_set *) alloca (sizeof (fd_set));\n+\n+  if (xfds)\n+    for (i = 0; i < xfds->fd_count; i++)\n+      {\n+        fd = xfds->fd_array[i];\n+        xbits.in[fd / CHAR_BIT] |= 1 << (fd & (CHAR_BIT - 1));\n+        anyfds_in[fd / CHAR_BIT] |= 1 << (fd & (CHAR_BIT - 1));\n+      }\n+  else\n+    xfds = (fd_set *) alloca (sizeof (fd_set));\n+\n+  /* Zero all the fd_sets, including the application's.  */\n+  FD_ZERO (rfds);\n+  FD_ZERO (wfds);\n+  FD_ZERO (xfds);\n+  FD_ZERO (&handle_rfds);\n+  FD_ZERO (&handle_wfds);\n+  FD_ZERO (&handle_xfds);\n+\n+  /* Classify handles.  Create fd sets for sockets, poll the others. */\n+  for (i = 0; i < nfds; i++)\n+    {\n+      if ((anyfds_in[i / CHAR_BIT] & (1 << (i & (CHAR_BIT - 1)))) == 0)\n+        continue;\n+\n+      h = (HANDLE) _get_osfhandle (i);\n+      if (!h)\n+        {\n+          errno = EBADF;\n+          return -1;\n+        }\n+\n+      if (IsSocketHandle (h))\n+        {\n+          int requested = FD_CLOSE;\n+\n+          /* See above; socket handles are mapped onto select, but we\n+             need to map descriptors to handles.  */\n+          if (rbits.in[i / CHAR_BIT] & (1 << (i & (CHAR_BIT - 1))))\n+            {\n+              requested |= FD_READ | FD_ACCEPT;\n+              FD_SET ((SOCKET) h, rfds);\n+              FD_SET ((SOCKET) h, &handle_rfds);\n+            }\n+          if (wbits.in[i / CHAR_BIT] & (1 << (i & (CHAR_BIT - 1))))\n+            {\n+              requested |= FD_WRITE | FD_CONNECT;\n+              FD_SET ((SOCKET) h, wfds);\n+              FD_SET ((SOCKET) h, &handle_wfds);\n+            }\n+          if (xbits.in[i / CHAR_BIT] & (1 << (i & (CHAR_BIT - 1))))\n+            {\n+              requested |= FD_OOB;\n+              FD_SET ((SOCKET) h, xfds);\n+              FD_SET ((SOCKET) h, &handle_xfds);\n+            }\n+\n+          WSAEventSelect ((SOCKET) h, hEvent, requested);\n+          nsock++;\n+        }\n+      else\n+        {\n+          handle_array[nhandles++] = h;\n+\n+          /* Poll now.  If we get an event, do not wait below.  */\n+          if (wait_timeout != 0\n+              && windows_poll_handle (h, i, &rbits, &wbits, &xbits))\n+            wait_timeout = 0;\n+        }\n+    }\n+\n+  /* Place a sentinel at the end of the array.  */\n+  handle_array[nhandles] = NULL;\n+\n+  /* When will the waiting period expire?  */\n+  if (wait_timeout != INFINITE)\n+    tend = clock () + wait_timeout;\n+\n+restart:\n+  if (wait_timeout == 0 || nsock == 0)\n+    rc = 0;\n+  else\n+    {\n+      /* See if we need to wait in the loop below.  If any select is ready,\n+         do MsgWaitForMultipleObjects anyway to dispatch messages, but\n+         no need to call select again.  */\n+      rc = select (0, &handle_rfds, &handle_wfds, &handle_xfds, &tv0);\n+      if (rc == 0)\n+        {\n+          /* Restore the fd_sets for the other select we do below.  */\n+          memcpy (&handle_rfds, rfds, sizeof (fd_set));\n+          memcpy (&handle_wfds, wfds, sizeof (fd_set));\n+          memcpy (&handle_xfds, xfds, sizeof (fd_set));\n+        }\n+      else\n+        wait_timeout = 0;\n+    }\n+\n+  /* How much is left to wait?  */\n+  if (wait_timeout != INFINITE)\n+    {\n+      clock_t tnow = clock ();\n+      if (tend >= tnow)\n+        wait_timeout = tend - tnow;\n+      else\n+        wait_timeout = 0;\n+    }\n+\n+  for (;;)\n+    {\n+      ret = MsgWaitForMultipleObjects (nhandles, handle_array, FALSE,\n+                                       wait_timeout, QS_ALLINPUT);\n+\n+      if (ret == WAIT_OBJECT_0 + nhandles)\n+        {\n+          /* new input of some other kind */\n+          BOOL bRet;\n+          while ((bRet = PeekMessage (&msg, NULL, 0, 0, PM_REMOVE)) != 0)\n+            {\n+              TranslateMessage (&msg);\n+              DispatchMessage (&msg);\n+            }\n+        }\n+      else\n+        break;\n+    }\n+\n+  /* If we haven't done it yet, check the status of the sockets.  */\n+  if (rc == 0 && nsock > 0)\n+    rc = select (0, &handle_rfds, &handle_wfds, &handle_xfds, &tv0);\n+\n+  if (nhandles > 1)\n+    {\n+      /* Count results that are not counted in the return value of select.  */\n+      nhandles = 1;\n+      for (i = 0; i < nfds; i++)\n+        {\n+          if ((anyfds_in[i / CHAR_BIT] & (1 << (i & (CHAR_BIT - 1)))) == 0)\n+            continue;\n+\n+          h = (HANDLE) _get_osfhandle (i);\n+          if (h == handle_array[nhandles])\n+            {\n+              /* Not a socket.  */\n+              nhandles++;\n+              windows_poll_handle (h, i, &rbits, &wbits, &xbits);\n+              if (rbits.out[i / CHAR_BIT] & (1 << (i & (CHAR_BIT - 1)))\n+                  || wbits.out[i / CHAR_BIT] & (1 << (i & (CHAR_BIT - 1)))\n+                  || xbits.out[i / CHAR_BIT] & (1 << (i & (CHAR_BIT - 1))))\n+                rc++;\n+            }\n+        }\n+\n+      if (rc == 0\n+          && (wait_timeout == INFINITE\n+              /* If NHANDLES > 1, but no bits are set, it means we've\n+                 been told incorrectly that some handle was signaled.\n+                 This happens with anonymous pipes, which always cause\n+                 MsgWaitForMultipleObjects to exit immediately, but no\n+                 data is found ready to be read by windows_poll_handle.\n+                 To avoid a total failure (whereby we return zero and\n+                 don't wait at all), let's poll in a more busy loop.  */\n+              || (wait_timeout != 0 && nhandles > 1)))\n+        {\n+          /* Sleep 1 millisecond to avoid busy wait and retry with the\n+             original fd_sets.  */\n+          memcpy (&handle_rfds, rfds, sizeof (fd_set));\n+          memcpy (&handle_wfds, wfds, sizeof (fd_set));\n+          memcpy (&handle_xfds, xfds, sizeof (fd_set));\n+          SleepEx (1, TRUE);\n+          goto restart;\n+        }\n+      if (timeout && wait_timeout == 0 && rc == 0)\n+        timeout->tv_sec = timeout->tv_usec = 0;\n+    }\n+\n+  /* Now fill in the results.  */\n+  FD_ZERO (rfds);\n+  FD_ZERO (wfds);\n+  FD_ZERO (xfds);\n+  nhandles = 1;\n+  for (i = 0; i < nfds; i++)\n+    {\n+      if ((anyfds_in[i / CHAR_BIT] & (1 << (i & (CHAR_BIT - 1)))) == 0)\n+        continue;\n+\n+      h = (HANDLE) _get_osfhandle (i);\n+      if (h != handle_array[nhandles])\n+        {\n+          /* Perform handle->descriptor mapping.  */\n+          WSAEventSelect ((SOCKET) h, NULL, 0);\n+          if (FD_ISSET (h, &handle_rfds))\n+            FD_SET (i, rfds);\n+          if (FD_ISSET (h, &handle_wfds))\n+            FD_SET (i, wfds);\n+          if (FD_ISSET (h, &handle_xfds))\n+            FD_SET (i, xfds);\n+        }\n+      else\n+        {\n+          /* Not a socket.  */\n+          nhandles++;\n+          if (rbits.out[i / CHAR_BIT] & (1 << (i & (CHAR_BIT - 1))))\n+            FD_SET (i, rfds);\n+          if (wbits.out[i / CHAR_BIT] & (1 << (i & (CHAR_BIT - 1))))\n+            FD_SET (i, wfds);\n+          if (xbits.out[i / CHAR_BIT] & (1 << (i & (CHAR_BIT - 1))))\n+            FD_SET (i, xfds);\n+        }\n+    }\n+\n+  return rc;\n+}\n+\n+#else /* ! Native Windows.  */\n+\n+#include <stddef.h> /* NULL */\n+#include <errno.h>\n+#include <unistd.h>\n+\n+#undef select\n+\n+int\n+rpl_select (int nfds, fd_set *rfds, fd_set *wfds, fd_set *xfds,\n+            struct timeval *timeout)\n+{\n+  int i;\n+\n+  /* FreeBSD 8.2 has a bug: it does not always detect invalid fds.  */\n+  if (nfds < 0 || nfds > FD_SETSIZE)\n+    {\n+      errno = EINVAL;\n+      return -1;\n+    }\n+  for (i = 0; i < nfds; i++)\n+    {\n+      if (((rfds && FD_ISSET (i, rfds))\n+           || (wfds && FD_ISSET (i, wfds))\n+           || (xfds && FD_ISSET (i, xfds)))\n+          && dup2 (i, i) != i)\n+        return -1;\n+    }\n+\n+  /* Interix 3.5 has a bug: it does not support nfds == 0.  */\n+  if (nfds == 0)\n+    {\n+      nfds = 1;\n+      rfds = NULL;\n+      wfds = NULL;\n+      xfds = NULL;\n+    }\n+  return select (nfds, rfds, wfds, xfds, timeout);\n+}\n+\n+#endif"
    },
    {
      "sha": "2de48d25b31280eb19d6cd8e2d6a2039d82b8a65",
      "filename": "gnulib/import/sockets.c",
      "status": "added",
      "additions": 161,
      "deletions": 0,
      "changes": 161,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/sockets.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/sockets.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/sockets.c?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -0,0 +1,161 @@\n+/* sockets.c --- wrappers for Windows socket functions\n+\n+   Copyright (C) 2008-2021 Free Software Foundation, Inc.\n+\n+   This program is free software: you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */\n+\n+/* Written by Simon Josefsson */\n+\n+#include <config.h>\n+\n+/* Specification.  */\n+#include \"sockets.h\"\n+\n+#if WINDOWS_SOCKETS\n+\n+/* This includes winsock2.h on MinGW. */\n+# include <sys/socket.h>\n+\n+# include \"fd-hook.h\"\n+# if GNULIB_MSVC_NOTHROW\n+#  include \"msvc-nothrow.h\"\n+# else\n+#  include <io.h>\n+# endif\n+\n+/* Get set_winsock_errno, FD_TO_SOCKET etc. */\n+# include \"w32sock.h\"\n+\n+static int\n+close_fd_maybe_socket (const struct fd_hook *remaining_list,\n+                       gl_close_fn primary,\n+                       int fd)\n+{\n+  /* Note about multithread-safety: There is a race condition where, between\n+     our calls to closesocket() and the primary close(), some other thread\n+     could make system calls that allocate precisely the same HANDLE value\n+     as sock; then the primary close() would call CloseHandle() on it.  */\n+  SOCKET sock;\n+  WSANETWORKEVENTS ev;\n+\n+  /* Test whether fd refers to a socket.  */\n+  sock = FD_TO_SOCKET (fd);\n+  ev.lNetworkEvents = 0xDEADBEEF;\n+  WSAEnumNetworkEvents (sock, NULL, &ev);\n+  if (ev.lNetworkEvents != 0xDEADBEEF)\n+    {\n+      /* fd refers to a socket.  */\n+      /* FIXME: other applications, like squid, use an undocumented\n+         _free_osfhnd free function.  But this is not enough: The 'osfile'\n+         flags for fd also needs to be cleared, but it is hard to access it.\n+         Instead, here we just close twice the file descriptor.  */\n+      if (closesocket (sock))\n+        {\n+          set_winsock_errno ();\n+          return -1;\n+        }\n+      else\n+        {\n+          /* This call frees the file descriptor and does a\n+             CloseHandle ((HANDLE) _get_osfhandle (fd)), which fails.  */\n+          _close (fd);\n+          return 0;\n+        }\n+    }\n+  else\n+    /* Some other type of file descriptor.  */\n+    return execute_close_hooks (remaining_list, primary, fd);\n+}\n+\n+static int\n+ioctl_fd_maybe_socket (const struct fd_hook *remaining_list,\n+                       gl_ioctl_fn primary,\n+                       int fd, int request, void *arg)\n+{\n+  SOCKET sock;\n+  WSANETWORKEVENTS ev;\n+\n+  /* Test whether fd refers to a socket.  */\n+  sock = FD_TO_SOCKET (fd);\n+  ev.lNetworkEvents = 0xDEADBEEF;\n+  WSAEnumNetworkEvents (sock, NULL, &ev);\n+  if (ev.lNetworkEvents != 0xDEADBEEF)\n+    {\n+      /* fd refers to a socket.  */\n+      if (ioctlsocket (sock, request, arg) < 0)\n+        {\n+          set_winsock_errno ();\n+          return -1;\n+        }\n+      else\n+        return 0;\n+    }\n+  else\n+    /* Some other type of file descriptor.  */\n+    return execute_ioctl_hooks (remaining_list, primary, fd, request, arg);\n+}\n+\n+static struct fd_hook fd_sockets_hook;\n+\n+static int initialized_sockets_version /* = 0 */;\n+\n+#endif /* WINDOWS_SOCKETS */\n+\n+int\n+gl_sockets_startup (int version _GL_UNUSED)\n+{\n+#if WINDOWS_SOCKETS\n+  if (version > initialized_sockets_version)\n+    {\n+      WSADATA data;\n+      int err;\n+\n+      err = WSAStartup (version, &data);\n+      if (err != 0)\n+        return 1;\n+\n+      if (data.wVersion != version)\n+        {\n+          WSACleanup ();\n+          return 2;\n+        }\n+\n+      if (initialized_sockets_version == 0)\n+        register_fd_hook (close_fd_maybe_socket, ioctl_fd_maybe_socket,\n+                          &fd_sockets_hook);\n+\n+      initialized_sockets_version = version;\n+    }\n+#endif\n+\n+  return 0;\n+}\n+\n+int\n+gl_sockets_cleanup (void)\n+{\n+#if WINDOWS_SOCKETS\n+  int err;\n+\n+  initialized_sockets_version = 0;\n+\n+  unregister_fd_hook (&fd_sockets_hook);\n+\n+  err = WSACleanup ();\n+  if (err != 0)\n+    return 1;\n+#endif\n+\n+  return 0;\n+}"
    },
    {
      "sha": "e0729c2414672a898951d80bab3b2d52fffb1ddb",
      "filename": "gnulib/import/sockets.h",
      "status": "added",
      "additions": 66,
      "deletions": 0,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/sockets.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/sockets.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/sockets.h?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -0,0 +1,66 @@\n+/* sockets.h - wrappers for Windows socket functions\n+\n+   Copyright (C) 2008-2021 Free Software Foundation, Inc.\n+\n+   This program is free software: you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */\n+\n+/* Written by Simon Josefsson */\n+\n+#ifndef SOCKETS_H\n+#define SOCKETS_H 1\n+\n+#define SOCKETS_1_0 0x0001\n+#define SOCKETS_1_1 0x0101\n+#define SOCKETS_2_0 0x0002\n+#define SOCKETS_2_1 0x0102\n+#define SOCKETS_2_2 0x0202\n+\n+int gl_sockets_startup (int version)\n+#ifndef WINDOWS_SOCKETS\n+  _GL_ATTRIBUTE_CONST\n+#endif\n+  ;\n+\n+int gl_sockets_cleanup (void)\n+#ifndef WINDOWS_SOCKETS\n+  _GL_ATTRIBUTE_CONST\n+#endif\n+  ;\n+\n+/* This function is useful it you create a socket using gnulib's\n+   Winsock wrappers but needs to pass on the socket handle to some\n+   other library that only accepts sockets. */\n+#ifdef WINDOWS_SOCKETS\n+\n+# include <sys/socket.h>\n+\n+# if GNULIB_MSVC_NOTHROW\n+#  include \"msvc-nothrow.h\"\n+# else\n+#  include <io.h>\n+# endif\n+\n+static inline SOCKET\n+gl_fd_to_handle (int fd)\n+{\n+  return _get_osfhandle (fd);\n+}\n+\n+#else\n+\n+# define gl_fd_to_handle(x) (x)\n+\n+#endif /* WINDOWS_SOCKETS */\n+\n+#endif /* SOCKETS_H */"
    },
    {
      "sha": "1dacb21087dbcdc2995c34a497d97955336fc683",
      "filename": "gnulib/import/sys_select.in.h",
      "status": "added",
      "additions": 326,
      "deletions": 0,
      "changes": 326,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/sys_select.in.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/sys_select.in.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/sys_select.in.h?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -0,0 +1,326 @@\n+/* Substitute for <sys/select.h>.\n+   Copyright (C) 2007-2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, see <https://www.gnu.org/licenses/>.  */\n+\n+# if __GNUC__ >= 3\n+@PRAGMA_SYSTEM_HEADER@\n+# endif\n+@PRAGMA_COLUMNS@\n+\n+/* On OSF/1 and Solaris 2.6, <sys/types.h> and <sys/time.h>\n+   both include <sys/select.h>.\n+   On Cygwin, <sys/time.h> includes <sys/select.h>.\n+   Simply delegate to the system's header in this case.  */\n+#if (@HAVE_SYS_SELECT_H@                                                \\\n+     && !defined _GL_SYS_SELECT_H_REDIRECT_FROM_SYS_TYPES_H             \\\n+     && ((defined __osf__ && defined _SYS_TYPES_H_                      \\\n+          && defined _OSF_SOURCE)                                       \\\n+         || (defined __sun && defined _SYS_TYPES_H                      \\\n+             && (! (defined _XOPEN_SOURCE || defined _POSIX_C_SOURCE)   \\\n+                 || defined __EXTENSIONS__))))\n+\n+# define _GL_SYS_SELECT_H_REDIRECT_FROM_SYS_TYPES_H\n+# @INCLUDE_NEXT@ @NEXT_SYS_SELECT_H@\n+\n+#elif (@HAVE_SYS_SELECT_H@                                              \\\n+       && (defined _CYGWIN_SYS_TIME_H                                   \\\n+           || (!defined _GL_SYS_SELECT_H_REDIRECT_FROM_SYS_TIME_H       \\\n+               && ((defined __osf__ && defined _SYS_TIME_H_             \\\n+                    && defined _OSF_SOURCE)                             \\\n+                   || (defined __sun && defined _SYS_TIME_H             \\\n+                       && (! (defined _XOPEN_SOURCE                     \\\n+                              || defined _POSIX_C_SOURCE)               \\\n+                           || defined __EXTENSIONS__))))))\n+\n+# define _GL_SYS_SELECT_H_REDIRECT_FROM_SYS_TIME_H\n+# @INCLUDE_NEXT@ @NEXT_SYS_SELECT_H@\n+\n+/* On IRIX 6.5, <sys/timespec.h> includes <sys/types.h>, which includes\n+   <sys/bsd_types.h>, which includes <sys/select.h>.  At this point we cannot\n+   include <signal.h>, because that includes <internal/signal_core.h>, which\n+   gives a syntax error because <sys/timespec.h> has not been completely\n+   processed.  Simply delegate to the system's header in this case.  */\n+#elif @HAVE_SYS_SELECT_H@ && defined __sgi && (defined _SYS_BSD_TYPES_H && !defined _GL_SYS_SELECT_H_REDIRECT_FROM_SYS_BSD_TYPES_H)\n+\n+# define _GL_SYS_SELECT_H_REDIRECT_FROM_SYS_BSD_TYPES_H\n+# @INCLUDE_NEXT@ @NEXT_SYS_SELECT_H@\n+\n+/* On OpenBSD 5.0, <pthread.h> includes <sys/types.h>, which includes\n+   <sys/select.h>.  At this point we cannot include <signal.h>, because that\n+   includes gnulib's pthread.h override, which gives a syntax error because\n+   /usr/include/pthread.h has not been completely processed.  Simply delegate\n+   to the system's header in this case.  */\n+#elif @HAVE_SYS_SELECT_H@ && defined __OpenBSD__ && (defined _PTHREAD_H_ && !defined PTHREAD_MUTEX_INITIALIZER)\n+\n+# @INCLUDE_NEXT@ @NEXT_SYS_SELECT_H@\n+\n+#else\n+\n+#ifndef _@GUARD_PREFIX@_SYS_SELECT_H\n+\n+/* On many platforms, <sys/select.h> assumes prior inclusion of\n+   <sys/types.h>.  Also, mingw defines sigset_t there, instead of\n+   in <signal.h> where it belongs.  */\n+#include <sys/types.h>\n+\n+#if @HAVE_SYS_SELECT_H@\n+\n+/* On OSF/1 4.0, <sys/select.h> provides only a forward declaration\n+   of 'struct timeval', and no definition of this type.\n+   Also, Mac OS X, AIX, HP-UX, IRIX, Solaris, Interix declare select()\n+   in <sys/time.h>.\n+   But avoid namespace pollution on glibc systems and \"unknown type\n+   name\" problems on Cygwin.  */\n+# if !(defined __GLIBC__ || defined __CYGWIN__)\n+#  include <sys/time.h>\n+# endif\n+\n+/* On AIX 7 and Solaris 10, <sys/select.h> provides an FD_ZERO implementation\n+   that relies on memset(), but without including <string.h>.\n+   But in any case avoid namespace pollution on glibc systems.  */\n+# if (defined __OpenBSD__ || defined _AIX || defined __sun || defined __osf__ || defined __BEOS__) \\\n+     && ! defined __GLIBC__\n+#  include <string.h>\n+# endif\n+\n+/* The include_next requires a split double-inclusion guard.  */\n+# @INCLUDE_NEXT@ @NEXT_SYS_SELECT_H@\n+\n+#endif\n+\n+/* Get definition of 'sigset_t'.\n+   But avoid namespace pollution on glibc systems and \"unknown type\n+   name\" problems on Cygwin.\n+   On OS/2 kLIBC, sigset_t is defined in <sys/select.h>, too. In addition,\n+   if <sys/param.h> is included, <types.h> -> <sys/types.h> -> <sys/select.h>\n+   are included. Then <signal.h> -> <pthread.h> are included by GNULIB. By the\n+   way, <pthread.h> requires PAGE_SIZE defined in <sys/param.h>. However,\n+   <sys/param.h> has not been processed, yet. As a result, 'PAGE_SIZE'\n+   undeclared error occurs in <pthread.h>.\n+   Do this after the include_next (for the sake of OpenBSD 5.0) but before\n+   the split double-inclusion guard (for the sake of Solaris).  */\n+#if !((defined __GLIBC__ || defined __CYGWIN__ || defined __KLIBC__) \\\n+      && !defined __UCLIBC__)\n+# include <signal.h>\n+#endif\n+\n+#ifndef _@GUARD_PREFIX@_SYS_SELECT_H\n+#define _@GUARD_PREFIX@_SYS_SELECT_H\n+\n+#if !@HAVE_SYS_SELECT_H@\n+/* A platform that lacks <sys/select.h>.  */\n+/* Get the 'struct timeval' and 'fd_set' types and the FD_* macros\n+   on most platforms.  */\n+# include <sys/time.h>\n+/* On HP-UX 11, <sys/time.h> provides an FD_ZERO implementation\n+   that relies on memset(), but without including <string.h>.  */\n+# if defined __hpux\n+#  include <string.h>\n+# endif\n+/* On native Windows platforms:\n+   Get the 'fd_set' type.\n+   Get the close() declaration before we override it.  */\n+# if @HAVE_WINSOCK2_H@\n+#  if !defined _GL_INCLUDING_WINSOCK2_H\n+#   define _GL_INCLUDING_WINSOCK2_H\n+#   include <winsock2.h>\n+#   undef _GL_INCLUDING_WINSOCK2_H\n+#  endif\n+#  include <io.h>\n+# endif\n+#endif\n+\n+/* The definitions of _GL_FUNCDECL_RPL etc. are copied here.  */\n+\n+/* The definition of _GL_WARN_ON_USE is copied here.  */\n+\n+\n+/* Fix some definitions from <winsock2.h>.  */\n+\n+#if @HAVE_WINSOCK2_H@\n+\n+# if !GNULIB_defined_rpl_fd_isset\n+\n+/* Re-define FD_ISSET to avoid a WSA call while we are not using\n+   network sockets.  */\n+static int\n+rpl_fd_isset (SOCKET fd, fd_set * set)\n+{\n+  u_int i;\n+  if (set == NULL)\n+    return 0;\n+\n+  for (i = 0; i < set->fd_count; i++)\n+    if (set->fd_array[i] == fd)\n+      return 1;\n+\n+  return 0;\n+}\n+\n+#  define GNULIB_defined_rpl_fd_isset 1\n+# endif\n+\n+# undef FD_ISSET\n+# define FD_ISSET(fd, set) rpl_fd_isset(fd, set)\n+\n+#endif\n+\n+/* Hide some function declarations from <winsock2.h>.  */\n+\n+#if @HAVE_WINSOCK2_H@\n+# if !defined _@GUARD_PREFIX@_UNISTD_H\n+#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n+#   undef close\n+#   define close close_used_without_including_unistd_h\n+#  elif !defined __clang__\n+    _GL_WARN_ON_USE (close,\n+                     \"close() used without including <unistd.h>\");\n+#  endif\n+#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n+#   undef gethostname\n+#   define gethostname gethostname_used_without_including_unistd_h\n+#  elif !defined __clang__\n+    _GL_WARN_ON_USE (gethostname,\n+                     \"gethostname() used without including <unistd.h>\");\n+#  endif\n+# endif\n+# if !defined _@GUARD_PREFIX@_SYS_SOCKET_H\n+#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n+#   undef socket\n+#   define socket              socket_used_without_including_sys_socket_h\n+#   undef connect\n+#   define connect             connect_used_without_including_sys_socket_h\n+#   undef accept\n+#   define accept              accept_used_without_including_sys_socket_h\n+#   undef bind\n+#   define bind                bind_used_without_including_sys_socket_h\n+#   undef getpeername\n+#   define getpeername         getpeername_used_without_including_sys_socket_h\n+#   undef getsockname\n+#   define getsockname         getsockname_used_without_including_sys_socket_h\n+#   undef getsockopt\n+#   define getsockopt          getsockopt_used_without_including_sys_socket_h\n+#   undef listen\n+#   define listen              listen_used_without_including_sys_socket_h\n+#   undef recv\n+#   define recv                recv_used_without_including_sys_socket_h\n+#   undef send\n+#   define send                send_used_without_including_sys_socket_h\n+#   undef recvfrom\n+#   define recvfrom            recvfrom_used_without_including_sys_socket_h\n+#   undef sendto\n+#   define sendto              sendto_used_without_including_sys_socket_h\n+#   undef setsockopt\n+#   define setsockopt          setsockopt_used_without_including_sys_socket_h\n+#   undef shutdown\n+#   define shutdown            shutdown_used_without_including_sys_socket_h\n+#  elif !defined __clang__\n+    _GL_WARN_ON_USE (socket,\n+                     \"socket() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (connect,\n+                     \"connect() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (accept,\n+                     \"accept() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (bind,\n+                     \"bind() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (getpeername,\n+                     \"getpeername() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (getsockname,\n+                     \"getsockname() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (getsockopt,\n+                     \"getsockopt() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (listen,\n+                     \"listen() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (recv,\n+                     \"recv() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (send,\n+                     \"send() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (recvfrom,\n+                     \"recvfrom() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (sendto,\n+                     \"sendto() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (setsockopt,\n+                     \"setsockopt() used without including <sys/socket.h>\");\n+    _GL_WARN_ON_USE (shutdown,\n+                     \"shutdown() used without including <sys/socket.h>\");\n+#  endif\n+# endif\n+#endif\n+\n+\n+#if @GNULIB_PSELECT@\n+# if @REPLACE_PSELECT@\n+#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n+#   undef pselect\n+#   define pselect rpl_pselect\n+#  endif\n+_GL_FUNCDECL_RPL (pselect, int,\n+                  (int, fd_set *restrict, fd_set *restrict, fd_set *restrict,\n+                   struct timespec const *restrict, const sigset_t *restrict));\n+_GL_CXXALIAS_RPL (pselect, int,\n+                  (int, fd_set *restrict, fd_set *restrict, fd_set *restrict,\n+                   struct timespec const *restrict, const sigset_t *restrict));\n+# else\n+#  if !@HAVE_PSELECT@\n+_GL_FUNCDECL_SYS (pselect, int,\n+                  (int, fd_set *restrict, fd_set *restrict, fd_set *restrict,\n+                   struct timespec const *restrict, const sigset_t *restrict));\n+#  endif\n+_GL_CXXALIAS_SYS (pselect, int,\n+                  (int, fd_set *restrict, fd_set *restrict, fd_set *restrict,\n+                   struct timespec const *restrict, const sigset_t *restrict));\n+# endif\n+_GL_CXXALIASWARN (pselect);\n+#elif defined GNULIB_POSIXCHECK\n+# undef pselect\n+# if HAVE_RAW_DECL_PSELECT\n+_GL_WARN_ON_USE (pselect, \"pselect is not portable - \"\n+                 \"use gnulib module pselect for portability\");\n+# endif\n+#endif\n+\n+#if @GNULIB_SELECT@\n+# if @REPLACE_SELECT@\n+#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n+#   undef select\n+#   define select rpl_select\n+#  endif\n+_GL_FUNCDECL_RPL (select, int,\n+                  (int, fd_set *restrict, fd_set *restrict, fd_set *restrict,\n+                   struct timeval *restrict));\n+_GL_CXXALIAS_RPL (select, int,\n+                  (int, fd_set *restrict, fd_set *restrict, fd_set *restrict,\n+                   timeval *restrict));\n+# else\n+_GL_CXXALIAS_SYS (select, int,\n+                  (int, fd_set *restrict, fd_set *restrict, fd_set *restrict,\n+                   timeval *restrict));\n+# endif\n+_GL_CXXALIASWARN (select);\n+#elif @HAVE_WINSOCK2_H@\n+# undef select\n+# define select select_used_without_requesting_gnulib_module_select\n+#elif defined GNULIB_POSIXCHECK\n+# undef select\n+# if HAVE_RAW_DECL_SELECT\n+_GL_WARN_ON_USE (select, \"select is not always POSIX compliant - \"\n+                 \"use gnulib module select for portability\");\n+# endif\n+#endif\n+\n+\n+#endif /* _@GUARD_PREFIX@_SYS_SELECT_H */\n+#endif /* _@GUARD_PREFIX@_SYS_SELECT_H */\n+#endif /* OSF/1 */"
    },
    {
      "sha": "f7311887b2c67e322b27e2d5ee06343402026121",
      "filename": "gnulib/import/w32sock.h",
      "status": "added",
      "additions": 140,
      "deletions": 0,
      "changes": 140,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/w32sock.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/import/w32sock.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/w32sock.h?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -0,0 +1,140 @@\n+/* w32sock.h --- internal auxiliary functions for Windows socket functions\n+\n+   Copyright (C) 2008-2021 Free Software Foundation, Inc.\n+\n+   This program is free software: you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */\n+\n+/* Written by Paolo Bonzini */\n+\n+#include <errno.h>\n+\n+/* Get O_RDWR and O_BINARY.  */\n+#include <fcntl.h>\n+\n+/* Get _open_osfhandle().  */\n+#include <io.h>\n+\n+/* Get _get_osfhandle().  */\n+#if GNULIB_MSVC_NOTHROW\n+# include \"msvc-nothrow.h\"\n+#else\n+# include <io.h>\n+#endif\n+\n+#define FD_TO_SOCKET(fd)   ((SOCKET) _get_osfhandle ((fd)))\n+#define SOCKET_TO_FD(fh)   (_open_osfhandle ((intptr_t) (fh), O_RDWR | O_BINARY))\n+\n+static inline void\n+set_winsock_errno (void)\n+{\n+  int err = WSAGetLastError ();\n+\n+  /* Map some WSAE* errors to the runtime library's error codes.  */\n+  switch (err)\n+    {\n+    case WSA_INVALID_HANDLE:\n+      errno = EBADF;\n+      break;\n+    case WSA_NOT_ENOUGH_MEMORY:\n+      errno = ENOMEM;\n+      break;\n+    case WSA_INVALID_PARAMETER:\n+      errno = EINVAL;\n+      break;\n+    case WSAENAMETOOLONG:\n+      errno = ENAMETOOLONG;\n+      break;\n+    case WSAENOTEMPTY:\n+      errno = ENOTEMPTY;\n+      break;\n+    case WSAEWOULDBLOCK:\n+      errno = EWOULDBLOCK;\n+      break;\n+    case WSAEINPROGRESS:\n+      errno = EINPROGRESS;\n+      break;\n+    case WSAEALREADY:\n+      errno = EALREADY;\n+      break;\n+    case WSAENOTSOCK:\n+      errno = ENOTSOCK;\n+      break;\n+    case WSAEDESTADDRREQ:\n+      errno = EDESTADDRREQ;\n+      break;\n+    case WSAEMSGSIZE:\n+      errno = EMSGSIZE;\n+      break;\n+    case WSAEPROTOTYPE:\n+      errno = EPROTOTYPE;\n+      break;\n+    case WSAENOPROTOOPT:\n+      errno = ENOPROTOOPT;\n+      break;\n+    case WSAEPROTONOSUPPORT:\n+      errno = EPROTONOSUPPORT;\n+      break;\n+    case WSAEOPNOTSUPP:\n+      errno = EOPNOTSUPP;\n+      break;\n+    case WSAEAFNOSUPPORT:\n+      errno = EAFNOSUPPORT;\n+      break;\n+    case WSAEADDRINUSE:\n+      errno = EADDRINUSE;\n+      break;\n+    case WSAEADDRNOTAVAIL:\n+      errno = EADDRNOTAVAIL;\n+      break;\n+    case WSAENETDOWN:\n+      errno = ENETDOWN;\n+      break;\n+    case WSAENETUNREACH:\n+      errno = ENETUNREACH;\n+      break;\n+    case WSAENETRESET:\n+      errno = ENETRESET;\n+      break;\n+    case WSAECONNABORTED:\n+      errno = ECONNABORTED;\n+      break;\n+    case WSAECONNRESET:\n+      errno = ECONNRESET;\n+      break;\n+    case WSAENOBUFS:\n+      errno = ENOBUFS;\n+      break;\n+    case WSAEISCONN:\n+      errno = EISCONN;\n+      break;\n+    case WSAENOTCONN:\n+      errno = ENOTCONN;\n+      break;\n+    case WSAETIMEDOUT:\n+      errno = ETIMEDOUT;\n+      break;\n+    case WSAECONNREFUSED:\n+      errno = ECONNREFUSED;\n+      break;\n+    case WSAELOOP:\n+      errno = ELOOP;\n+      break;\n+    case WSAEHOSTUNREACH:\n+      errno = EHOSTUNREACH;\n+      break;\n+    default:\n+      errno = (err > 10000 && err < 10025) ? err - 10000 : err;\n+      break;\n+    }\n+}"
    },
    {
      "sha": "08c43fcfc143d83d2fdaeb20b28dfaacab9fd6f4",
      "filename": "gnulib/update-gnulib.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/update-gnulib.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d20bc122888f03a2d2a5a9162f6287de5a79a8f9/gnulib/update-gnulib.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/update-gnulib.sh?ref=d20bc122888f03a2d2a5a9162f6287de5a79a8f9",
      "patch": "@@ -60,6 +60,7 @@ IMPORTED_GNULIB_MODULES=\"\\\n     rawmemchr \\\n     readlink \\\n     rename \\\n+    select \\\n     setenv \\\n     signal-h \\\n     strchrnul \\"
    }
  ]
}