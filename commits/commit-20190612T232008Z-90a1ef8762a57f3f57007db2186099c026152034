{
  "sha": "90a1ef8762a57f3f57007db2186099c026152034",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTBhMWVmODc2MmE1N2YzZjU3MDA3ZGIyMTg2MDk5YzAyNjE1MjAzNA==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-06-12T23:06:53Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-06-12T23:20:08Z"
    },
    "message": "\"backtrace full/no-filters/hide\" completer\n\n\"backtrace\"'s completer now completes on command options:\n\n (gdb) bt -[TAB]\n -entry-values         -full                 -no-filters           -past-main\n -frame-arguments      -hide                 -past-entry           -raw-frame-arguments\n\nBut it doesn't know how to complete on qualifiers:\n\n (gdb) bt fu[TAB]\n funlockfile       futimens          futimes.c\n funlockfile.c     futimens.c        futimesat\n futex-internal.h  futimes           futimesat.c\n\nThis commit fixes that:\n\n (gdb) bt fu[TAB]ll\n (gdb) bt n[TAB]o-filters\n (gdb) bt h[TAB]ide\n\nI considered teaching the gdb::option framework to handle non-'-'\noptions, but decided it wasn't worth it for this special case, and I'd\nrather not make it easy to add new qualifier-like options.\n\ngdb/ChangeLog:\n2019-06-13  Pedro Alves  <palves@redhat.com>\n\n\t* stack.c (parse_backtrace_qualifiers): New.\n\t(backtrace_command): Use it.\n\t(backtrace_command_completer): Complete on qualifiers.\n\ngdb/testsuite/ChangeLog:\n2019-06-13  Pedro Alves  <palves@redhat.com>\n\n\t* gdb.base/options.exp (test-backtrace): Test completing qualifiers.",
    "tree": {
      "sha": "1ae652fcbc0961b5e0c0a4ecf561c9360bd2626e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1ae652fcbc0961b5e0c0a4ecf561c9360bd2626e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/90a1ef8762a57f3f57007db2186099c026152034",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90a1ef8762a57f3f57007db2186099c026152034",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/90a1ef8762a57f3f57007db2186099c026152034",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90a1ef8762a57f3f57007db2186099c026152034/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d4c16835cad70bd8c04ff30d5d6f40ac65e7f7e1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4c16835cad70bd8c04ff30d5d6f40ac65e7f7e1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d4c16835cad70bd8c04ff30d5d6f40ac65e7f7e1"
    }
  ],
  "stats": {
    "total": 105,
    "additions": 83,
    "deletions": 22
  },
  "files": [
    {
      "sha": "c21a5eba686c5fef12dd702468a5a82e1302e009",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90a1ef8762a57f3f57007db2186099c026152034/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90a1ef8762a57f3f57007db2186099c026152034/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=90a1ef8762a57f3f57007db2186099c026152034",
      "patch": "@@ -1,3 +1,9 @@\n+2019-06-13  Pedro Alves  <palves@redhat.com>\n+\n+\t* stack.c (parse_backtrace_qualifiers): New.\n+\t(backtrace_command): Use it.\n+\t(backtrace_command_completer): Complete on qualifiers.\n+\n 2019-06-13  Pedro Alves  <palves@redhat.com>\n \n \t* frame.c: Include \"cli/cli-option.h."
    },
    {
      "sha": "1cb1fc9c38cc496454230d837dbf457009552dc0",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 62,
      "deletions": 22,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90a1ef8762a57f3f57007db2186099c026152034/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90a1ef8762a57f3f57007db2186099c026152034/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=90a1ef8762a57f3f57007db2186099c026152034",
      "patch": "@@ -2027,6 +2027,45 @@ make_backtrace_options_def_group (frame_print_options *fp_opts,\n   }};\n }\n \n+/* Parse the backtrace command's qualifiers.  Returns ARG advanced\n+   past the qualifiers, if any.  BT_CMD_OPTS, if not null, is used to\n+   store the parsed qualifiers.  */\n+\n+static const char *\n+parse_backtrace_qualifiers (const char *arg,\n+\t\t\t    backtrace_cmd_options *bt_cmd_opts = nullptr)\n+{\n+  while (true)\n+    {\n+      const char *save_arg = arg;\n+      std::string this_arg = extract_arg (&arg);\n+\n+      if (this_arg.empty ())\n+\treturn arg;\n+\n+      if (subset_compare (this_arg.c_str (), \"no-filters\"))\n+\t{\n+\t  if (bt_cmd_opts != nullptr)\n+\t    bt_cmd_opts->no_filters = true;\n+\t}\n+      else if (subset_compare (this_arg.c_str (), \"full\"))\n+\t{\n+\t  if (bt_cmd_opts != nullptr)\n+\t    bt_cmd_opts->full = true;\n+\t}\n+      else if (subset_compare (this_arg.c_str (), \"hide\"))\n+\t{\n+\t  if (bt_cmd_opts != nullptr)\n+\t    bt_cmd_opts->hide = true;\n+\t}\n+      else\n+\t{\n+\t  /* Not a recognized qualifier, so stop.  */\n+\t  return save_arg;\n+\t}\n+    }\n+}\n+\n static void\n backtrace_command (const char *arg, int from_tty)\n {\n@@ -2043,28 +2082,7 @@ backtrace_command (const char *arg, int from_tty)\n      compatibility.  */\n   if (arg != NULL)\n     {\n-      while (true)\n-\t{\n-\t  const char *save_arg = arg;\n-\t  std::string this_arg = extract_arg (&arg);\n-\n-\t  if (this_arg.empty ())\n-\t    break;\n-\n-\t  if (subset_compare (this_arg.c_str (), \"no-filters\"))\n-\t    bt_cmd_opts.no_filters = true;\n-\t  else if (subset_compare (this_arg.c_str (), \"full\"))\n-\t    bt_cmd_opts.full = true;\n-\t  else if (subset_compare (this_arg.c_str (), \"hide\"))\n-\t    bt_cmd_opts.hide = true;\n-\t  else\n-\t    {\n-\t      /* Not a recognized argument, so stop.  */\n-\t      arg = save_arg;\n-\t      break;\n-\t    }\n-\t}\n-\n+      arg = parse_backtrace_qualifiers (arg, &bt_cmd_opts);\n       if (*arg == '\\0')\n \targ = NULL;\n     }\n@@ -2090,6 +2108,28 @@ backtrace_command_completer (struct cmd_list_element *ignore,\n       (tracker, &text, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, group))\n     return;\n \n+  if (*text != '\\0')\n+    {\n+      const char *p = skip_to_space (text);\n+      if (*p == '\\0')\n+\t{\n+\t  static const char *const backtrace_cmd_qualifier_choices[] = {\n+\t    \"full\", \"no-filters\", \"hide\", nullptr,\n+\t  };\n+\t  complete_on_enum (tracker, backtrace_cmd_qualifier_choices,\n+\t\t\t    text, text);\n+\n+\t  if (tracker.have_completions ())\n+\t    return;\n+\t}\n+      else\n+\t{\n+\t  const char *cmd = parse_backtrace_qualifiers (text);\n+\t  tracker.advance_custom_word_point_by (cmd - text);\n+\t  text = cmd;\n+\t}\n+    }\n+\n   const char *word = advance_to_expression_complete_word_point (tracker, text);\n   expression_completer (ignore, tracker, text, word);\n }"
    },
    {
      "sha": "d2063f2eb803c5b3917c8360347b58cd8cf75771",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90a1ef8762a57f3f57007db2186099c026152034/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90a1ef8762a57f3f57007db2186099c026152034/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=90a1ef8762a57f3f57007db2186099c026152034",
      "patch": "@@ -1,3 +1,7 @@\n+2019-06-13  Pedro Alves  <palves@redhat.com>\n+\n+\t* gdb.base/options.exp (test-backtrace): Test completing qualifiers.\n+\n 2019-06-13  Pedro Alves  <palves@redhat.com>\n \n \t* gdb.base/options.exp (test-backtrace): New."
    },
    {
      "sha": "5a35074054ee0a259c7762a06848e09a10937f81",
      "filename": "gdb/testsuite/gdb.base/options.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90a1ef8762a57f3f57007db2186099c026152034/gdb/testsuite/gdb.base/options.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90a1ef8762a57f3f57007db2186099c026152034/gdb/testsuite/gdb.base/options.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/options.exp?ref=90a1ef8762a57f3f57007db2186099c026152034",
      "patch": "@@ -256,6 +256,17 @@ proc_with_prefix test-backtrace {} {\n \t\"-raw-frame-arguments\"\n     }\n \n+    # Test that we complete the qualifiers, if there's any.\n+    test_gdb_complete_unique \\\n+\t\"backtrace ful\" \\\n+\t\"backtrace full\"\n+    test_gdb_complete_unique \\\n+\t\"backtrace hid\" \\\n+\t\"backtrace hide\"\n+    test_gdb_complete_unique \\\n+\t\"backtrace no-fil\" \\\n+\t\"backtrace no-filters\"\n+\n     global binfile\n     clean_restart $binfile\n "
    }
  ]
}