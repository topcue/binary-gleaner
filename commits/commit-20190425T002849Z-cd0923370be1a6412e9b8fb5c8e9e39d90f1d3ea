{
  "sha": "cd0923370be1a6412e9b8fb5c8e9e39d90f1d3ea",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2QwOTIzMzcwYmUxYTY0MTJlOWI4ZmI1YzhlOWUzOWQ5MGYxZDNlYQ==",
  "commit": {
    "author": {
      "name": "Maciej W. Rozycki",
      "email": "macro@linux-mips.org",
      "date": "2019-04-25T00:28:49Z"
    },
    "committer": {
      "name": "Maciej W. Rozycki",
      "email": "macro@linux-mips.org",
      "date": "2019-04-25T00:28:49Z"
    },
    "message": "MIPS/include: opcode/mips.h: Update stale comment for CODE20 operand\n\nComplement commit 1586d91e32ea (\"/ 0 should send SIGFPE not SIGTRAP...\"),\n<https://sourceware.org/ml/binutils/2004-07/msg00260.html>, and update a\nstale comment referring the 20-bit code field of the BREAK and SDBBP\ninstructions, by making it explicit that where permitted by choosing the\nMIPS32 or a later ISA the whole field can now be set with a single\noperand for the SDBBP instruction only.\n\n\tinclude/\n\t* opcode/mips.h: Update comment for MIPS32 CODE20 operand.",
    "tree": {
      "sha": "428e4b055699675356b4a4db29c453123e15fd97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/428e4b055699675356b4a4db29c453123e15fd97"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cd0923370be1a6412e9b8fb5c8e9e39d90f1d3ea",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd0923370be1a6412e9b8fb5c8e9e39d90f1d3ea",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cd0923370be1a6412e9b8fb5c8e9e39d90f1d3ea",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd0923370be1a6412e9b8fb5c8e9e39d90f1d3ea/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "f88dbe3f8a9cef79a6ff32ba3734a7a308b8ea26",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f88dbe3f8a9cef79a6ff32ba3734a7a308b8ea26",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f88dbe3f8a9cef79a6ff32ba3734a7a308b8ea26"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 6,
    "deletions": 2
  },
  "files": [
    {
      "sha": "01bb9207a875526ec1089a1b7f23f79ebd072791",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd0923370be1a6412e9b8fb5c8e9e39d90f1d3ea/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd0923370be1a6412e9b8fb5c8e9e39d90f1d3ea/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=cd0923370be1a6412e9b8fb5c8e9e39d90f1d3ea",
      "patch": "@@ -1,3 +1,7 @@\n+2019-04-25  Maciej W. Rozycki  <macro@linux-mips.org>\n+\n+\t* opcode/mips.h: Update comment for MIPS32 CODE20 operand.\n+\n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n \n \t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF12."
    },
    {
      "sha": "4309e1a348f040fd997e8e5fc47ccd66b66cd60f",
      "filename": "include/opcode/mips.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd0923370be1a6412e9b8fb5c8e9e39d90f1d3ea/include/opcode/mips.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd0923370be1a6412e9b8fb5c8e9e39d90f1d3ea/include/opcode/mips.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/mips.h?ref=cd0923370be1a6412e9b8fb5c8e9e39d90f1d3ea",
      "patch": "@@ -56,8 +56,8 @@ extern \"C\" {\n    code field in BREAK is 20 bits; yet MIPS assemblers and debuggers\n    only use ten bits).  An optional two-operand form of break/sdbbp\n    allows the lower ten bits to be set too, and MIPS32 and later\n-   architectures allow 20 bits to be set with a signal operand\n-   (using CODE20).\n+   architectures allow 20 bits to be set with a single operand for\n+   the sdbbp instruction (using CODE20).\n \n    The syscall instruction uses CODE20.\n "
    }
  ]
}