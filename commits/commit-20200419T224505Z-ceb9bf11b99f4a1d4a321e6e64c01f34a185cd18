{
  "sha": "ceb9bf11b99f4a1d4a321e6e64c01f34a185cd18",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2ViOWJmMTFiOTlmNGExZDRhMzIxZTZlNjRjMDFmMzRhMTg1Y2QxOA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-04-19T07:35:02Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-04-19T22:45:05Z"
    },
    "message": "readelf memory leaks\n\nThis fixes two leaks found in the new code supporting display of\ndynamic symbols retrieved via dynamic tags.\n\n\t* readelf.c (get_num_dynamic_syms): Formatting.  Don't return\n\ton error without freeing.\n\t(process_dynamic_section): Don't recreate dynamic symbols from\n\tdynamic tag info when the dynamic symbols have already been\n\tread via section headers.",
    "tree": {
      "sha": "a68e8ecc157f39ab442a3c25a968321448783de7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a68e8ecc157f39ab442a3c25a968321448783de7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ceb9bf11b99f4a1d4a321e6e64c01f34a185cd18",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ceb9bf11b99f4a1d4a321e6e64c01f34a185cd18",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ceb9bf11b99f4a1d4a321e6e64c01f34a185cd18",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ceb9bf11b99f4a1d4a321e6e64c01f34a185cd18/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2efec98b28bbc89fc8e062709c7e28cc8a56ee40",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2efec98b28bbc89fc8e062709c7e28cc8a56ee40",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2efec98b28bbc89fc8e062709c7e28cc8a56ee40"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 14,
    "deletions": 5
  },
  "files": [
    {
      "sha": "92d9b298ee76891ecff079712c3d63b3097424a9",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ceb9bf11b99f4a1d4a321e6e64c01f34a185cd18/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ceb9bf11b99f4a1d4a321e6e64c01f34a185cd18/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=ceb9bf11b99f4a1d4a321e6e64c01f34a185cd18",
      "patch": "@@ -1,3 +1,11 @@\n+2020-04-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_num_dynamic_syms): Formatting.  Don't return\n+\ton error without freeing.\n+\t(process_dynamic_section): Don't recreate dynamic symbols from\n+\tdynamic tag info when the dynamic symbols have already been\n+\tread via section headers.\n+\n 2020-04-17  Fredrik Strupe  <fredrik@strupe.net>\n \n \t* testsuite/binutils-all/arm/vdup-cond.d: New test for testing that"
    },
    {
      "sha": "601e329fdcf0a961eb4c73c71dbba55e46d47974",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ceb9bf11b99f4a1d4a321e6e64c01f34a185cd18/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ceb9bf11b99f4a1d4a321e6e64c01f34a185cd18/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=ceb9bf11b99f4a1d4a321e6e64c01f34a185cd18",
      "patch": "@@ -9976,7 +9976,7 @@ get_num_dynamic_syms (Filedata * filedata)\n       if (buckets != NULL && chains != NULL)\n \tnum_of_syms = nchains;\n \n-  no_hash:\n+    no_hash:\n       if (num_of_syms == 0)\n \t{\n \t  if (buckets)\n@@ -10052,7 +10052,7 @@ get_num_dynamic_syms (Filedata * filedata)\n \t    if (gnubuckets[i] < gnusymidx)\n \t      {\n \t\tgnu_hash_error = TRUE;\n-\t\treturn FALSE;\n+\t\tgoto no_gnu_hash;\n \t      }\n \n \t    if (maxchain == 0xffffffff || gnubuckets[i] > maxchain)\n@@ -10083,7 +10083,7 @@ get_num_dynamic_syms (Filedata * filedata)\n \t  if (fread (nb, 4, 1, filedata->handle) != 1)\n \t    {\n \t      error (_(\"Failed to determine last chain length\\n\"));\n-\t  gnu_hash_error = TRUE;\n+\t      gnu_hash_error = TRUE;\n \t      goto no_gnu_hash;\n \t    }\n \n@@ -10156,7 +10156,7 @@ get_num_dynamic_syms (Filedata * filedata)\n \t    while (off < ngnuchains && (gnuchains[off++] & 1) == 0);\n \t  }\n \n-  no_gnu_hash:\n+    no_gnu_hash:\n       if (gnu_hash_error)\n \t{\n \t  if (mipsxlat)\n@@ -10260,7 +10260,8 @@ process_dynamic_section (Filedata * filedata)\n \n \t\tif (vma >= (seg->p_vaddr & -seg->p_align)\n \t\t    && vma <= seg->p_vaddr + seg->p_filesz\n-\t\t    && (num_of_syms = get_num_dynamic_syms (filedata)))\n+\t\t    && (num_of_syms = get_num_dynamic_syms (filedata)) != 0\n+\t\t    && dynamic_symbols == NULL)\n \t\t  {\n \t\t    /* Since we do not know how big the symbol table is,\n \t\t       we default to reading in up to the end of PT_LOAD"
    }
  ]
}