{
  "sha": "d1cbe0076a4b6442793121413a0d3b52ae19727e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDFjYmUwMDc2YTRiNjQ0Mjc5MzEyMTQxM2EwZDNiNTJhZTE5NzI3ZQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-30T02:33:30Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-30T03:17:18Z"
    },
    "message": "asan: linker.c:2294:8: runtime error: load of value 253\n\nSeen after converting bfd_boolean to bool.\nmmix  +FAIL: ld-mmix/zeroehmmo\n\n./ld-new   -L/home/alan/src/binutils-gdb/ld/testsuite/ld-mmix  -m mmo -Ttext 0xa00 -T /home/alan/src/binutils-gdb/ld/testsuite/ld-mmix/zeroeh.ld -o tmpdir/dump tmpdir/x.o tmpdir/y.o\n/home/alan/src/binutils-gdb/bfd/linker.c:2294:8: runtime error: load of value 253, which is not a valid value for type '_Bool'\n\n\t* elflink.c (elf_link_add_object_symbols): Don't set h->indx\n\tunless is_elf_hash_table.",
    "tree": {
      "sha": "0667f272160801b631e8adda6e70729acdc0f164",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0667f272160801b631e8adda6e70729acdc0f164"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d1cbe0076a4b6442793121413a0d3b52ae19727e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1cbe0076a4b6442793121413a0d3b52ae19727e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d1cbe0076a4b6442793121413a0d3b52ae19727e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1cbe0076a4b6442793121413a0d3b52ae19727e/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0af4fcc25dd5e2f98698da03396084258ebfb756",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0af4fcc25dd5e2f98698da03396084258ebfb756",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0af4fcc25dd5e2f98698da03396084258ebfb756"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 8,
    "deletions": 3
  },
  "files": [
    {
      "sha": "a94223d1d99a9b32d2feb02495f9539b17ce47a4",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1cbe0076a4b6442793121413a0d3b52ae19727e/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1cbe0076a4b6442793121413a0d3b52ae19727e/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=d1cbe0076a4b6442793121413a0d3b52ae19727e",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-30  Alan Modra  <amodra@gmail.com>\n+\n+\t* elflink.c (elf_link_add_object_symbols): Don't set h->indx\n+\tunless is_elf_hash_table.\n+\n 2021-03-29  Alan Modra  <amodra@gmail.com>\n \n \t* aoutx.h (aout_link_write_symbols): Don't cast boolean expression"
    },
    {
      "sha": "c7102e691f134e3fc50ee696ef5ff8cef08910b5",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1cbe0076a4b6442793121413a0d3b52ae19727e/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1cbe0076a4b6442793121413a0d3b52ae19727e/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=d1cbe0076a4b6442793121413a0d3b52ae19727e",
      "patch": "@@ -4968,13 +4968,13 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)\n \t     || h->root.type == bfd_link_hash_warning)\n \th = (struct elf_link_hash_entry *) h->root.u.i.link;\n \n+      *sym_hash = h;\n+\n       /* Setting the index to -3 tells elf_link_output_extsym that\n \t this symbol is defined in a discarded section.  */\n-      if (discarded)\n+      if (discarded && is_elf_hash_table (htab))\n \th->indx = -3;\n \n-      *sym_hash = h;\n-\n       new_weak = (flags & BSF_WEAK) != 0;\n       if (dynamic\n \t  && definition"
    }
  ]
}