{
  "sha": "3d1cfd43bec7c22928d12ab235151b8eeeaf4e96",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2QxY2ZkNDNiZWM3YzIyOTI4ZDEyYWIyMzUxNTFiOGVlZWFmNGU5Ng==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-01T20:02:08Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-01T20:08:17Z"
    },
    "message": "Move Rust union tests to new file\n\nI wanted to run the gdb.rust tests against older versions of the Rust\ncompiler, to ensure that changes I am making don't break debugging\nwhen using older compilers.\n\nHowever, this did not work because simple.rs now uses unchecked\nunions, which were only added in Rust 1.19.\n\nThis patch splits the union code into its own file, so that simple.exp\ncan continue to work.  I tested this with selected rust versions back\nto 1.12.\n\ngdb/testsuite/ChangeLog\n2020-04-01  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.rust/union.rs: New file.\n\t* gdb.rust/union.exp: New file.\n\t* gdb.rust/simple.rs (Union, Union2): Move to union.rs.\n\t(main): Update.\n\t* gdb.rust/simple.exp: Move union tests to union.exp.",
    "tree": {
      "sha": "aae801032f76ea5e17654d5c128daceed23bf246",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aae801032f76ea5e17654d5c128daceed23bf246"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e033dfa92f844849cc528649eee24d2b0b3f22e5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e033dfa92f844849cc528649eee24d2b0b3f22e5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e033dfa92f844849cc528649eee24d2b0b3f22e5"
    }
  ],
  "stats": {
    "total": 113,
    "additions": 88,
    "deletions": 25
  },
  "files": [
    {
      "sha": "cc17eba77007f3cb98a243d997e234c280034597",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3d1cfd43bec7c22928d12ab235151b8eeeaf4e96",
      "patch": "@@ -1,3 +1,11 @@\n+2020-04-01  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.rust/union.rs: New file.\n+\t* gdb.rust/union.exp: New file.\n+\t* gdb.rust/simple.rs (Union, Union2): Move to union.rs.\n+\t(main): Update.\n+\t* gdb.rust/simple.exp: Move union tests to union.exp.\n+\n 2020-04-01  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.rust/simple.rs (main): Remove \"y0\"."
    },
    {
      "sha": "92b3666386bfdf5b1576e16ad24ab12cbd91862b",
      "filename": "gdb/testsuite/gdb.rust/simple.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96/gdb/testsuite/gdb.rust/simple.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96/gdb/testsuite/gdb.rust/simple.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/simple.exp?ref=3d1cfd43bec7c22928d12ab235151b8eeeaf4e96",
      "patch": "@@ -335,17 +335,6 @@ gdb_test \"print parametrized.next.val\" \\\n gdb_test \"print parametrized\" \\\n     \" = simple::ParametrizedStruct<i32> \\\\{next: simple::ParametrizedEnum<\\[a-z:\\]*Box<simple::ParametrizedStruct<i32>>>::Val\\\\{val: $hex\\\\}, value: 0\\\\}\"\n \n-gdb_test \"print u\" \" = simple::Union {f1: -1, f2: 255}\"\n-\n-gdb_test_sequence \"ptype/o Union\" \"\" {\n-    \"/\\\\* offset    |  size \\\\*/  type = union simple::Union {\"\n-    \"/\\\\*                 1 \\\\*/    f1: i8,\"\n-    \"/\\\\*                 1 \\\\*/    f2: u8,\"\n-    \"\"\n-    \"                           /\\\\* total size \\\\(bytes\\\\):    1 \\\\*/\"\n-    \"                         }\"\n-}\n-\n gdb_test_sequence \"ptype/o SimpleLayout\" \"\" {\n     \"/\\\\* offset    |  size \\\\*/  type = struct simple::SimpleLayout {\"\n     \"/\\\\*    0      |     2 \\\\*/    f1: u16,\"\n@@ -355,8 +344,6 @@ gdb_test_sequence \"ptype/o SimpleLayout\" \"\" {\n     \"                         }\"\n }\n \n-gdb_test \"print u2\" \" = simple::Union2 {name: \\\\\\[1\\\\\\]}\"\n-\n gdb_test \"print nonzero_offset\" \" = simple::EnumWithNonzeroOffset {a: core::option::Option<u8>::Some\\\\(1\\\\), b: core::option::Option<u8>::None}\"\n \n # PR rust/23626 - this used to crash.  Note that the results are"
    },
    {
      "sha": "78c3b217451502587d960e84f53f64983f01f73f",
      "filename": "gdb/testsuite/gdb.rust/simple.rs",
      "status": "modified",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96/gdb/testsuite/gdb.rust/simple.rs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96/gdb/testsuite/gdb.rust/simple.rs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/simple.rs?ref=3d1cfd43bec7c22928d12ab235151b8eeeaf4e96",
      "patch": "@@ -80,15 +80,6 @@ struct ParametrizedStruct<T> {\n     value: T\n }\n \n-union Union {\n-    f1: i8,\n-    f2: u8,\n-}\n-\n-pub union Union2 {\n-    pub name: [u8; 1],\n-}\n-\n struct StringAtOffset {\n     pub field1: &'static str,\n     pub field2: i32,\n@@ -184,13 +175,10 @@ fn main () {\n         value: 0,\n     };\n \n-    let u = Union { f2: 255 };\n     let simplelayout = SimpleLayout { f1: 8, f2: 9 };\n \n     let empty_enum_value: EmptyEnum;\n \n-    let u2 = Union2 { name: [1] };\n-\n     let nonzero_offset = EnumWithNonzeroOffset { a: Some(1), b: None };\n \n     println!(\"{}, {}\", x.0, x.1);        // set breakpoint here"
    },
    {
      "sha": "c7864a2fc9d2d2345ce7dd153a34896156ccc331",
      "filename": "gdb/testsuite/gdb.rust/union.exp",
      "status": "added",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96/gdb/testsuite/gdb.rust/union.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96/gdb/testsuite/gdb.rust/union.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/union.exp?ref=3d1cfd43bec7c22928d12ab235151b8eeeaf4e96",
      "patch": "@@ -0,0 +1,45 @@\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test of \"union\" for Rust.\n+\n+load_lib rust-support.exp\n+if {[skip_rust_tests]} {\n+    continue\n+}\n+\n+standard_testfile .rs\n+if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile {debug rust}]} {\n+    return -1\n+}\n+\n+set line [gdb_get_line_number \"set breakpoint here\"]\n+if {![runto ${srcfile}:$line]} {\n+    untested \"could not run to breakpoint\"\n+    return -1\n+}\n+\n+gdb_test \"print u\" \" = union::Union {f1: -1, f2: 255}\"\n+\n+gdb_test_sequence \"ptype/o Union\" \"\" {\n+    \"/\\\\* offset    |  size \\\\*/  type = union union::Union {\"\n+    \"/\\\\*                 1 \\\\*/    f1: i8,\"\n+    \"/\\\\*                 1 \\\\*/    f2: u8,\"\n+    \"\"\n+    \"                           /\\\\* total size \\\\(bytes\\\\):    1 \\\\*/\"\n+    \"                         }\"\n+}\n+\n+gdb_test \"print u2\" \" = union::Union2 {name: \\\\\\[1\\\\\\]}\""
    },
    {
      "sha": "ef3069641bc1c3f8f0d4ea4d0e8d60f078789bc3",
      "filename": "gdb/testsuite/gdb.rust/union.rs",
      "status": "added",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96/gdb/testsuite/gdb.rust/union.rs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d1cfd43bec7c22928d12ab235151b8eeeaf4e96/gdb/testsuite/gdb.rust/union.rs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/union.rs?ref=3d1cfd43bec7c22928d12ab235151b8eeeaf4e96",
      "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+// This program is free software; you can redistribute it and/or modify\n+// it under the terms of the GNU General Public License as published by\n+// the Free Software Foundation; either version 3 of the License, or\n+// (at your option) any later version.\n+//\n+// This program is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n+#![allow(unused_assignments)]\n+\n+\n+union Union {\n+    f1: i8,\n+    f2: u8,\n+}\n+\n+pub union Union2 {\n+    pub name: [u8; 1],\n+}\n+\n+fn main() {\n+    let u = Union { f2: 255 };\n+    let u2 = Union2 { name: [1] };\n+\n+    println!(\"Hi\");        // set breakpoint here\n+}"
    }
  ]
}