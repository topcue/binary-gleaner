{
  "sha": "6fe014bcd33686cb75e6355f9c36ce483a64ec62",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmZlMDE0YmNkMzM2ODZjYjc1ZTYzNTVmOWMzNmNlNDgzYTY0ZWM2Mg==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-04-25T14:53:46Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-04-25T14:54:00Z"
    },
    "message": "LTO: Properly handle wrapper symbols in IR\n\nWhen a wrapper symbol, __wrap_FOO, is defined in IR, its resolution\nshould be LDPR_PREVAILING_DEF, not PREVAILING_DEF_IRONLY, since LTO\ndoesn't know that __wrap_FOO provides definition of FOO.  And resolution\nof FOO should be LDPR_RESOLVED_IR since it is resolved by __wrap_FOO in\nIR.\n\n\tPR ld/24406\n\t* ld.texi: Remove LTO warning from --wrap.\n\t* plugin.c (get_symbols): Update resolution for wrapper and\n\twrapped symbols.\n\t* testsuite/ld-plugin/lto.exp: Run ld/24406 tests.\n\t* testsuite/ld-plugin/pr24406-1.c: New file.\n\t* testsuite/ld-plugin/pr24406-2a.c: Likewise.\n\t* testsuite/ld-plugin/pr24406-2b.c: Likewise.",
    "tree": {
      "sha": "d1ff965badb244f102cee2bb1f3f9e6df38c84e5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d1ff965badb244f102cee2bb1f3f9e6df38c84e5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6fe014bcd33686cb75e6355f9c36ce483a64ec62",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fe014bcd33686cb75e6355f9c36ce483a64ec62",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6fe014bcd33686cb75e6355f9c36ce483a64ec62",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fe014bcd33686cb75e6355f9c36ce483a64ec62/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "723adb650a31859d7cc45832cb8adca0206455ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/723adb650a31859d7cc45832cb8adca0206455ed",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/723adb650a31859d7cc45832cb8adca0206455ed"
    }
  ],
  "stats": {
    "total": 99,
    "additions": 89,
    "deletions": 10
  },
  "files": [
    {
      "sha": "7a0086460e77db536c8924158503ba6ffa7d966a",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=6fe014bcd33686cb75e6355f9c36ce483a64ec62",
      "patch": "@@ -1,3 +1,14 @@\n+2019-04-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/24406\n+\t* ld.texi: Remove LTO warning from --wrap.\n+\t* plugin.c (get_symbols): Update resolution for wrapper and\n+\twrapped symbols.\n+\t* testsuite/ld-plugin/lto.exp: Run ld/24406 tests.\n+\t* testsuite/ld-plugin/pr24406-1.c: New file.\n+\t* testsuite/ld-plugin/pr24406-2a.c: Likewise.\n+\t* testsuite/ld-plugin/pr24406-2b.c: Likewise.\n+\n 2019-04-25  Sudakshina Das  <sudi.das@arm.com>\n \n \t* testsuite/ld-aarch64/bti-pac-plt-1.d: Update."
    },
    {
      "sha": "41e95934745e7e6f7afb0d12a441de0a268593fc",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=6fe014bcd33686cb75e6355f9c36ce483a64ec62",
      "patch": "@@ -2438,9 +2438,6 @@ g (void)\n @}\n @end smallexample\n \n-Please keep in mind that with link-time optimization (LTO) enabled, your whole\n-program may be a translation unit.\n-\n @kindex --eh-frame-hdr\n @kindex --no-eh-frame-hdr\n @item --eh-frame-hdr"
    },
    {
      "sha": "e3ca32406930ce52a59556b4a350a08fc8c1acf6",
      "filename": "ld/plugin.c",
      "status": "modified",
      "additions": 28,
      "deletions": 7,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/plugin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/plugin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/plugin.c?ref=6fe014bcd33686cb75e6355f9c36ce483a64ec62",
      "patch": "@@ -741,13 +741,32 @@ get_symbols (const void *handle, int nsyms, struct ld_plugin_symbol *syms,\n       struct bfd_link_hash_entry *blhe;\n       asection *owner_sec;\n       int res;\n+      struct bfd_link_hash_entry *h\n+\t= bfd_link_hash_lookup (link_info.hash, syms[n].name,\n+\t\t\t\tFALSE, FALSE, TRUE);\n+      enum { wrap_none, wrapper, wrapped } wrap_status = wrap_none;\n \n-      if (syms[n].def != LDPK_UNDEF)\n-\tblhe = bfd_link_hash_lookup (link_info.hash, syms[n].name,\n-\t\t\t\t     FALSE, FALSE, TRUE);\n+      if (syms[n].def != LDPK_UNDEF && syms[n].def != LDPK_WEAKUNDEF)\n+\t{\n+\t  blhe = h;\n+\t  if (blhe)\n+\t    {\n+\t      /* Check if a symbol is a wrapper symbol.  */\n+\t      struct bfd_link_hash_entry *unwrap\n+\t\t= unwrap_hash_lookup (&link_info, (bfd *) abfd, blhe);\n+\t      if (unwrap && unwrap != h)\n+\t\twrap_status = wrapper;\n+\t     }\n+\t}\n       else\n-\tblhe = bfd_wrapped_link_hash_lookup (link_info.output_bfd, &link_info,\n-\t\t\t\t\t     syms[n].name, FALSE, FALSE, TRUE);\n+\t{\n+\t  blhe = bfd_wrapped_link_hash_lookup (link_info.output_bfd,\n+\t\t\t\t\t       &link_info, syms[n].name,\n+\t\t\t\t\t       FALSE, FALSE, TRUE);\n+\t  /* Check if a symbol is a wrapped symbol.  */\n+\t  if (blhe && blhe != h)\n+\t    wrap_status = wrapped;\n+\t}\n       if (!blhe)\n \t{\n \t  /* The plugin is called to claim symbols in an archive element\n@@ -833,9 +852,11 @@ get_symbols (const void *handle, int nsyms, struct ld_plugin_symbol *syms,\n \t  /* We need to know if the sym is referenced from non-IR files.  Or\n \t     even potentially-referenced, perhaps in a future final link if\n \t     this is a partial one, perhaps dynamically at load-time if the\n-\t     symbol is externally visible.  */\n-\t  if (blhe->non_ir_ref_regular)\n+\t     symbol is externally visible.  Also check for wrapper symbol.  */\n+\t  if (blhe->non_ir_ref_regular || wrap_status == wrapper)\n \t    res = LDPR_PREVAILING_DEF;\n+\t  else if (wrap_status == wrapped)\n+\t    res = LDPR_RESOLVED_IR;\n \t  else if (is_visible_from_outside (&syms[n], blhe))\n \t    res = def_ironly_exp;\n \t}"
    },
    {
      "sha": "b13a77333ffe6c3a5f247d28218a1c9f786500da",
      "filename": "ld/testsuite/ld-plugin/lto.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/testsuite/ld-plugin/lto.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/testsuite/ld-plugin/lto.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/lto.exp?ref=6fe014bcd33686cb75e6355f9c36ce483a64ec62",
      "patch": "@@ -231,6 +231,9 @@ set lto_link_tests [list \\\n    {pr23958.c} \\\n    \"\" \\\n    \"libpr23958.so\"] \\\n+  [list \"Build pr24406-2b.o\" \\\n+   \"\" \"-O2 -fno-lto\" \\\n+   {pr24406-2b.c}] \\\n ]\n \n if { [at_least_gcc_version 4 7] } {\n@@ -434,6 +437,15 @@ set lto_run_tests [list \\\n    \"-O2 -flto\" \"\" \\\n    {dummy.c} \"pr22751\" \"pass.out\" \"-flto -O2\" \"c\" \"\" \\\n    \"-Wl,--whole-archive tmpdir/pr22751.a -Wl,--no-whole-archive\"] \\\n+  [list \"Run pr24406-1\" \\\n+   \"-O2 -flto\" \"\" \\\n+   {pr24406-1.c} \"pr24406-1\" \"pass.out\" \"-flto -O2\" \"c\" \"\" \\\n+   \"-Wl,--wrap=read\"] \\\n+  [list \"Run pr24406-2\" \\\n+   \"-O2 -flto\" \"\" \\\n+   {pr24406-2a.c} \"pr24406-2\" \"pass.out\" \\\n+   \"-flto -O2\" \"c\" \"\" \\\n+   \"tmpdir/pr24406-2b.o -Wl,--wrap=cook\"] \\\n ]\n \n if { [at_least_gcc_version 4 7] } {"
    },
    {
      "sha": "43995bdb0791e0ab85818eb42a4e45602c666f81",
      "filename": "ld/testsuite/ld-plugin/pr24406-1.c",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/testsuite/ld-plugin/pr24406-1.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/testsuite/ld-plugin/pr24406-1.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/pr24406-1.c?ref=6fe014bcd33686cb75e6355f9c36ce483a64ec62",
      "patch": "@@ -0,0 +1,17 @@\n+#include <stdio.h>\n+#include <unistd.h>\n+\n+ssize_t\n+__wrap_read (int fd, void *buffer, size_t count)\n+{\n+  puts (\"PASS\");\n+  return fd + count + sizeof (buffer);\n+}\n+\n+\n+int\n+main ()\n+{\n+  int i = read (1, \"abc\", 5);\n+  return i == 0;\n+}"
    },
    {
      "sha": "14f54ba0eab2d46c5a9a7f5e3f385ce330580e37",
      "filename": "ld/testsuite/ld-plugin/pr24406-2a.c",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/testsuite/ld-plugin/pr24406-2a.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/testsuite/ld-plugin/pr24406-2a.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/pr24406-2a.c?ref=6fe014bcd33686cb75e6355f9c36ce483a64ec62",
      "patch": "@@ -0,0 +1,17 @@\n+#include <stdio.h>\n+\n+extern int cook(void);\n+\n+int __wrap_cook(void)\n+{\n+  puts (\"PASS\");\n+  return 0;\n+}\n+\n+int main()\n+{\n+  if (cook () == -1)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"
    },
    {
      "sha": "bfb69dfe514c0370a82bd545eb602ac09e390c50",
      "filename": "ld/testsuite/ld-plugin/pr24406-2b.c",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/testsuite/ld-plugin/pr24406-2b.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fe014bcd33686cb75e6355f9c36ce483a64ec62/ld/testsuite/ld-plugin/pr24406-2b.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/pr24406-2b.c?ref=6fe014bcd33686cb75e6355f9c36ce483a64ec62",
      "patch": "@@ -0,0 +1,4 @@\n+int cook(void)\n+{\n+  return -1;\n+}"
    }
  ]
}