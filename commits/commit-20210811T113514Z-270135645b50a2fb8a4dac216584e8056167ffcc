{
  "sha": "270135645b50a2fb8a4dac216584e8056167ffcc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjcwMTM1NjQ1YjUwYTJmYjhhNGRhYzIxNjU4NGU4MDU2MTY3ZmZjYw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-06-18T11:56:03Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-08-11T11:35:14Z"
    },
    "message": "gdb: rename async_init_signals to gdb_init_signals\n\nThe async_init_signals has, for some time, dealt with async and sync\nsignals, so removing the async prefix makes sense I think.\n\nAdditionally, as pointed out by Pedro:\n\n  .....\n\nThe comments relating to SIGTRAP and SIGQUIT within this function are\nout of date.\n\nThe comments for SIGTRAP talk about the signal disposition (SIG_IGN)\nbeing passed to the inferior, meaning the signal disposition being\ninherited by GDB's fork children.  However, we now call\nrestore_original_signals_state prior to forking, so the comment on\nSIGTRAP is redundant.\n\nThe comments for SIGQUIT are similarly out of date, further, the\ncomment on SIGQUIT talks about problems with BSD4.3 and vfork,\nhowever, we have not supported BSD4.3 for several years now.\n\nGiven the above, it seems that changing the disposition of SIGTRAP is\nno longer needed, so I've deleted the signal() call for SIGTRAP.\n\nFinally, the header comment on the function now called\ngdb_init_signals was getting quite out of date, so I've updated it\nto (hopefully) better reflect reality.\n\nThere should be no user visible change after this commit.",
    "tree": {
      "sha": "5204f7678acb55014cc5478e21a8b8e42ccfd0a7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5204f7678acb55014cc5478e21a8b8e42ccfd0a7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/270135645b50a2fb8a4dac216584e8056167ffcc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/270135645b50a2fb8a4dac216584e8056167ffcc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/270135645b50a2fb8a4dac216584e8056167ffcc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/270135645b50a2fb8a4dac216584e8056167ffcc/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bbefac7df96061a56dc4f17ef548382bdf4c3166",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bbefac7df96061a56dc4f17ef548382bdf4c3166",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bbefac7df96061a56dc4f17ef548382bdf4c3166"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 16,
    "deletions": 29
  },
  "files": [
    {
      "sha": "972b540c8b8d6e8c95e4ca587e59c883b703b3d3",
      "filename": "gdb/event-top.c",
      "status": "modified",
      "additions": 14,
      "deletions": 27,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/270135645b50a2fb8a4dac216584e8056167ffcc/gdb/event-top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/270135645b50a2fb8a4dac216584e8056167ffcc/gdb/event-top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/event-top.c?ref=270135645b50a2fb8a4dac216584e8056167ffcc",
      "patch": "@@ -899,20 +899,21 @@ handle_sigsegv (int sig)\n    handler.  */\n static struct serial_event *quit_serial_event;\n \n-/* Initialization of signal handlers and tokens.  There is a function\n-   handle_sig* for each of the signals GDB cares about.  Specifically:\n-   SIGINT, SIGQUIT, SIGTSTP, SIGHUP, SIGWINCH.  These\n-   functions are the actual signal handlers associated to the signals\n-   via calls to signal().  The only job for these functions is to\n-   enqueue the appropriate event/procedure with the event loop.  Such\n-   procedures are the old signal handlers.  The event loop will take\n-   care of invoking the queued procedures to perform the usual tasks\n-   associated with the reception of the signal.  */\n-/* NOTE: 1999-04-30 This is the asynchronous version of init_signals.\n-   init_signals will become obsolete as we move to have to event loop\n-   as the default for gdb.  */\n+/* Initialization of signal handlers and tokens.  There are a number of\n+   different strategies for handling different signals here.\n+\n+   For SIGINT, SIGTERM, SIGQUIT, SIGHUP, SIGTSTP, there is a function\n+   handle_sig* for each of these signals.  These functions are the actual\n+   signal handlers associated to the signals via calls to signal().  The\n+   only job for these functions is to enqueue the appropriate\n+   event/procedure with the event loop.  The event loop will take care of\n+   invoking the queued procedures to perform the usual tasks associated\n+   with the reception of the signal.\n+\n+   For SIGSEGV the handle_sig* function does all the work for handling this\n+   signal.  */\n void\n-async_init_signals (void)\n+gdb_init_signals (void)\n {\n   initialize_async_signal_handlers ();\n \n@@ -926,21 +927,7 @@ async_init_signals (void)\n     = create_async_signal_handler (async_sigterm_handler, NULL, \"sigterm\");\n   signal (SIGTERM, handle_sigterm);\n \n-  /* If SIGTRAP was set to SIG_IGN, then the SIG_IGN will get passed\n-     to the inferior and breakpoints will be ignored.  */\n-#ifdef SIGTRAP\n-  signal (SIGTRAP, SIG_DFL);\n-#endif\n-\n #ifdef SIGQUIT\n-  /* If we initialize SIGQUIT to SIG_IGN, then the SIG_IGN will get\n-     passed to the inferior, which we don't want.  It would be\n-     possible to do a \"signal (SIGQUIT, SIG_DFL)\" after we fork, but\n-     on BSD4.3 systems using vfork, that can affect the\n-     GDB process as well as the inferior (the signal handling tables\n-     might be in memory, shared between the two).  Since we establish\n-     a handler for SIGQUIT, when we call exec it will set the signal\n-     to SIG_DFL for us.  */\n   sigquit_token =\n     create_async_signal_handler (async_do_nothing, NULL, \"sigquit\");\n   signal (SIGQUIT, handle_sigquit);"
    },
    {
      "sha": "4947dd27819f424d9c48c422f5cf79e014666782",
      "filename": "gdb/event-top.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/270135645b50a2fb8a4dac216584e8056167ffcc/gdb/event-top.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/270135645b50a2fb8a4dac216584e8056167ffcc/gdb/event-top.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/event-top.h?ref=270135645b50a2fb8a4dac216584e8056167ffcc",
      "patch": "@@ -32,7 +32,7 @@ struct cmd_list_element;\n extern void display_gdb_prompt (const char *new_prompt);\n extern void gdb_setup_readline (int);\n extern void gdb_disable_readline (void);\n-extern void async_init_signals (void);\n+extern void gdb_init_signals (void);\n extern void change_line_handler (int);\n \n extern void command_line_handler (gdb::unique_xmalloc_ptr<char> &&rl);"
    },
    {
      "sha": "0c49f4f9eb4941884670ffc577ba0fd879bd9dd9",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/270135645b50a2fb8a4dac216584e8056167ffcc/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/270135645b50a2fb8a4dac216584e8056167ffcc/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=270135645b50a2fb8a4dac216584e8056167ffcc",
      "patch": "@@ -2403,7 +2403,7 @@ gdb_init ()\n      to alter it.  */\n   set_initial_gdb_ttystate ();\n \n-  async_init_signals ();\n+  gdb_init_signals ();\n \n   /* We need a default language for parsing expressions, so simple\n      things like \"set width 0\" won't fail if no language is explicitly"
    }
  ]
}