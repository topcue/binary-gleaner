{
  "sha": "c7dee84894df6231bb7fce34cf36242c34d7f891",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzdkZWU4NDg5NGRmNjIzMWJiN2ZjZTM0Y2YzNjI0MmMzNGQ3Zjg5MQ==",
  "commit": {
    "author": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2021-09-09T01:15:39Z"
    },
    "committer": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2021-09-09T01:23:30Z"
    },
    "message": "RISC-V: Pretty print values formed with lui and addiw.\n\nThe disassembler has support to pretty print values created by an lui/addi\npair, but there is no support for addiw.  There is also no support for\nc.addi and c.addiw.  This patch extends the pretty printing support to\nhandle these 3 instructions in addition to addi.  Existing testcases serve\nas tests for the new feature.\n\n\topcodes/\n\t* riscv-dis.c (maybe_print_address): New arg wide.  Sign extend when\n\twide is true.\n\t(print_insn_args): Fix calls to maybe_print_address.  Add checks for\n\tc.addi, c.addiw, and addiw, and call maybe_print_address for them.\n\n\tgas/\n\t* testsuite/gas/riscv/insn.d: Update for disassembler change.\n\t* testsuite/gas/li32.d, testsuite/gas/li64.d: Likwise.\n\t* testsuite/gas/lla64.d: Likewise.",
    "tree": {
      "sha": "a5127cce4214f892f3c152da6c7d53c52ff89b9f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a5127cce4214f892f3c152da6c7d53c52ff89b9f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c7dee84894df6231bb7fce34cf36242c34d7f891",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7dee84894df6231bb7fce34cf36242c34d7f891",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c7dee84894df6231bb7fce34cf36242c34d7f891",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7dee84894df6231bb7fce34cf36242c34d7f891/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "d0d2fb0a25517c39ecdec504c7a9a7943247cd86",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d0d2fb0a25517c39ecdec504c7a9a7943247cd86",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d0d2fb0a25517c39ecdec504c7a9a7943247cd86"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 35,
    "deletions": 22
  },
  "files": [
    {
      "sha": "5b36107df2912f7909188a2ad57e2304a21b7063",
      "filename": "gas/testsuite/gas/riscv/insn.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7dee84894df6231bb7fce34cf36242c34d7f891/gas/testsuite/gas/riscv/insn.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7dee84894df6231bb7fce34cf36242c34d7f891/gas/testsuite/gas/riscv/insn.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/insn.d?ref=c7dee84894df6231bb7fce34cf36242c34d7f891",
      "patch": "@@ -22,7 +22,7 @@ Disassembly of section .text:\n [^:]+:[ \t]+fddff56f[ \t]+jal[ \t]+a0,0 \\<target\\>\n [^:]+: R_RISCV_JAL[\t]+target\n [^:]+:[ \t]+852e[ \t]+mv[ \t]+a0,a1\n-[^:]+:[ \t]+0511[ \t]+addi[ \t]+a0,a0,4\n+[^:]+:[ \t]+0511[ \t]+addi[ \t]+a0,a0,4 # .*\n [^:]+:[ \t]+002c[ \t]+addi[ \t]+a1,sp,8\n [^:]+:[ \t]+c0aa[ \t]+sw[ \t]+a0,64\\(sp\\)\n [^:]+:[ \t]+41a8[ \t]+lw[ \t]+a0,64\\(a1\\)\n@@ -46,7 +46,7 @@ Disassembly of section .text:\n [^:]+:[ \t]+fa5ff56f[ \t]+jal[ \t]+a0,0 \\<target\\>\n [^:]+: R_RISCV_JAL[\t]+target\n [^:]+:[ \t]+852e[ \t]+mv[ \t]+a0,a1\n-[^:]+:[ \t]+0511[ \t]+addi[ \t]+a0,a0,4\n+[^:]+:[ \t]+0511[ \t]+addi[ \t]+a0,a0,4 # .*\n [^:]+:[ \t]+002c[ \t]+addi[ \t]+a1,sp,8\n [^:]+:[ \t]+c0aa[ \t]+sw[ \t]+a0,64\\(sp\\)\n [^:]+:[ \t]+41a8[ \t]+lw[ \t]+a0,64\\(a1\\)"
    },
    {
      "sha": "3496384a68ebef923cedfe43e8f195fd2b5c9189",
      "filename": "gas/testsuite/gas/riscv/li32.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7dee84894df6231bb7fce34cf36242c34d7f891/gas/testsuite/gas/riscv/li32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7dee84894df6231bb7fce34cf36242c34d7f891/gas/testsuite/gas/riscv/li32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/li32.d?ref=c7dee84894df6231bb7fce34cf36242c34d7f891",
      "patch": "@@ -8,10 +8,10 @@ Disassembly of section .text:\n \n 0+000 <target>:\n [^:]+:[ \t]+6521[ \t]+lui[ \t]+a0,0x8\n-[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1\n+[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1 # .*\n [^:]+:[ \t]+6509[ \t]+lui[ \t]+a0,0x2\n [^:]+:[ \t]+f0150513[ \t]+addi[ \t]+a0,a0,-255 # .*\n [^:]+:[ \t]+12345537[ \t]+lui[ \t]+a0,0x12345\n-[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1\n+[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1 # .*\n [^:]+:[ \t]+f2345537[ \t]+lui[ \t]+a0,0xf2345\n-[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1\n+[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1 # .*"
    },
    {
      "sha": "047985708ad533c94c29bdfc6e4d293bc007ead5",
      "filename": "gas/testsuite/gas/riscv/li64.d",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7dee84894df6231bb7fce34cf36242c34d7f891/gas/testsuite/gas/riscv/li64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7dee84894df6231bb7fce34cf36242c34d7f891/gas/testsuite/gas/riscv/li64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/li64.d?ref=c7dee84894df6231bb7fce34cf36242c34d7f891",
      "patch": "@@ -8,23 +8,23 @@ Disassembly of section .text:\n \n 0000000000000000 <target>:\n [^:]+:[ \t]+6521[ \t]+lui[ \t]+a0,0x8\n-[^:]+:[ \t]+2505[ \t]+addiw[ \t]+a0,a0,1\n+[^:]+:[ \t]+2505[ \t]+addiw[ \t]+a0,a0,1 # .*\n [^:]+:[ \t]+6509[ \t]+lui[ \t]+a0,0x2\n-[^:]+:[ \t]+f015051b[ \t]+addiw[ \t]+a0,a0,-255\n+[^:]+:[ \t]+f015051b[ \t]+addiw[ \t]+a0,a0,-255 # .*\n [^:]+:[ \t]+12345537[ \t]+lui[ \t]+a0,0x12345\n-[^:]+:[ \t]+2505[ \t]+addiw[ \t]+a0,a0,1\n+[^:]+:[ \t]+2505[ \t]+addiw[ \t]+a0,a0,1 # .*\n [^:]+:[ \t]+000f2537[ \t]+lui[ \t]+a0,0xf2\n-[^:]+:[ \t]+3455051b[ \t]+addiw[ \t]+a0,a0,837\n+[^:]+:[ \t]+3455051b[ \t]+addiw[ \t]+a0,a0,837 # .*\n [^:]+:[ \t]+0532[ \t]+slli[ \t]+a0,a0,0xc\n [^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1\n [^:]+:[ \t]+00f12537[ \t]+lui[ \t]+a0,0xf12\n-[^:]+:[ \t]+3455051b[ \t]+addiw[ \t]+a0,a0,837\n+[^:]+:[ \t]+3455051b[ \t]+addiw[ \t]+a0,a0,837 # .*\n [^:]+:[ \t]+0532[ \t]+slli[ \t]+a0,a0,0xc\n [^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1\n [^:]+:[ \t]+ff010537[ \t]+lui[ \t]+a0,0xff010\n-[^:]+:[ \t]+f015051b[ \t]+addiw[ \t]+a0,a0,-255\n+[^:]+:[ \t]+f015051b[ \t]+addiw[ \t]+a0,a0,-255 # .*\n [^:]+:[ \t]+054e[ \t]+slli[ \t]+a0,a0,0x13\n-[^:]+:[ \t]+80150513[ \t]+addi[ \t]+a0,a0,-2047 # .*\n+[^:]+:[ \t]+80150513[ \t]+addi[ \t]+a0,a0,-2047\n [^:]+:[ \t]+0536[ \t]+slli[ \t]+a0,a0,0xd\n [^:]+:[ \t]+f0150513[ \t]+addi[ \t]+a0,a0,-255\n [^:]+:[ \t]+0010051b[ \t]+addiw[ \t]+a0,zero,1\n@@ -35,10 +35,10 @@ Disassembly of section .text:\n [^:]+:[ \t]+0532[ \t]+slli[ \t]+a0,a0,0xc\n [^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1\n [^:]+:[ \t]+01fc4537[ \t]+lui[ \t]+a0,0x1fc4\n-[^:]+:[ \t]+c915051b[ \t]+addiw[ \t]+a0,a0,-879\n+[^:]+:[ \t]+c915051b[ \t]+addiw[ \t]+a0,a0,-879 # .*\n [^:]+:[ \t]+0536[ \t]+slli[ \t]+a0,a0,0xd\n [^:]+:[ \t]+1565[ \t]+addi[ \t]+a0,a0,-7\n [^:]+:[ \t]+0536[ \t]+slli[ \t]+a0,a0,0xd\n-[^:]+:[ \t]+34550513[ \t]+addi[ \t]+a0,a0,837 # .*\n+[^:]+:[ \t]+34550513[ \t]+addi[ \t]+a0,a0,837\n [^:]+:[ \t]+0532[ \t]+slli[ \t]+a0,a0,0xc\n [^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1"
    },
    {
      "sha": "b25ef67ad2ce7640b83f5c693770c0e36bac1647",
      "filename": "gas/testsuite/gas/riscv/lla64.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7dee84894df6231bb7fce34cf36242c34d7f891/gas/testsuite/gas/riscv/lla64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7dee84894df6231bb7fce34cf36242c34d7f891/gas/testsuite/gas/riscv/lla64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/lla64.d?ref=c7dee84894df6231bb7fce34cf36242c34d7f891",
      "patch": "@@ -10,11 +10,11 @@ Disassembly of section .text:\n    0:\t0010051b          \taddiw\ta0,zero,1\n    4:\t00001537          \tlui\ta0,0x1\n    8:\t00001537          \tlui\ta0,0x1\n-   c:\t0015051b          \taddiw\ta0,a0,1\n+   c:\t0015051b          \taddiw\ta0,a0,1 # .*\n   10:\t00001537          \tlui\ta0,0x1\n-  14:\tfff5051b          \taddiw\ta0,a0,-1\n+  14:\tfff5051b          \taddiw\ta0,a0,-1 # .*\n   18:\t80000537          \tlui\ta0,0x80000\n-  1c:\tfff5051b          \taddiw\ta0,a0,-1\n+  1c:\tfff5051b          \taddiw\ta0,a0,-1 # .*\n   20:\t0000051b          \tsext.w\ta0,zero\n   24:\tfff0051b          \taddiw\ta0,zero,-1\n   28:\t80000537          \tlui\ta0,0x80000"
    },
    {
      "sha": "57198c7b6b5e1fa6b3e35e48f2359ce63166c4fd",
      "filename": "opcodes/riscv-dis.c",
      "status": "modified",
      "additions": 18,
      "deletions": 5,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7dee84894df6231bb7fce34cf36242c34d7f891/opcodes/riscv-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7dee84894df6231bb7fce34cf36242c34d7f891/opcodes/riscv-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-dis.c?ref=c7dee84894df6231bb7fce34cf36242c34d7f891",
      "patch": "@@ -156,7 +156,8 @@ arg_print (struct disassemble_info *info, unsigned long val,\n }\n \n static void\n-maybe_print_address (struct riscv_private_data *pd, int base_reg, int offset)\n+maybe_print_address (struct riscv_private_data *pd, int base_reg, int offset,\n+\t\t     int wide)\n {\n   if (pd->hi_addr[base_reg] != (bfd_vma)-1)\n     {\n@@ -167,6 +168,10 @@ maybe_print_address (struct riscv_private_data *pd, int base_reg, int offset)\n     pd->print_addr = pd->gp + offset;\n   else if (base_reg == X_TP || base_reg == 0)\n     pd->print_addr = offset;\n+\n+  /* Sign-extend a 32-bit value to a 64-bit value.  */\n+  if (wide)\n+    pd->print_addr = (bfd_vma)(int32_t) pd->print_addr;\n }\n \n /* Print insn arguments for 32/64-bit code.  */\n@@ -211,6 +216,11 @@ print_insn_args (const char *d, insn_t l, bfd_vma pc, disassemble_info *info)\n \t      break;\n \t    case 'o':\n \t    case 'j':\n+\t      if (((l & MASK_C_ADDI) == MATCH_C_ADDI) && rd != 0)\n+\t\tmaybe_print_address (pd, rd, EXTRACT_CITYPE_IMM (l), 0);\n+\t      if (info->mach == bfd_mach_riscv64\n+\t\t  && ((l & MASK_C_ADDIW) == MATCH_C_ADDIW) && rd != 0)\n+\t\tmaybe_print_address (pd, rd, EXTRACT_CITYPE_IMM (l), 1);\n \t      print (info->stream, \"%d\", (int)EXTRACT_CITYPE_IMM (l));\n \t      break;\n \t    case 'k':\n@@ -283,7 +293,7 @@ print_insn_args (const char *d, insn_t l, bfd_vma pc, disassemble_info *info)\n \tcase 'b':\n \tcase 's':\n \t  if ((l & MASK_JALR) == MATCH_JALR)\n-\t    maybe_print_address (pd, rs1, 0);\n+\t    maybe_print_address (pd, rs1, 0, 0);\n \t  print (info->stream, \"%s\", riscv_gpr_names[rs1]);\n \t  break;\n \n@@ -313,17 +323,20 @@ print_insn_args (const char *d, insn_t l, bfd_vma pc, disassemble_info *info)\n \t  break;\n \n \tcase 'o':\n-\t  maybe_print_address (pd, rs1, EXTRACT_ITYPE_IMM (l));\n+\t  maybe_print_address (pd, rs1, EXTRACT_ITYPE_IMM (l), 0);\n \t  /* Fall through.  */\n \tcase 'j':\n \t  if (((l & MASK_ADDI) == MATCH_ADDI && rs1 != 0)\n \t      || (l & MASK_JALR) == MATCH_JALR)\n-\t    maybe_print_address (pd, rs1, EXTRACT_ITYPE_IMM (l));\n+\t    maybe_print_address (pd, rs1, EXTRACT_ITYPE_IMM (l), 0);\n+\t  if (info->mach == bfd_mach_riscv64\n+\t      && ((l & MASK_ADDIW) == MATCH_ADDIW) && rs1 != 0)\n+\t    maybe_print_address (pd, rs1, EXTRACT_ITYPE_IMM (l), 1);\n \t  print (info->stream, \"%d\", (int)EXTRACT_ITYPE_IMM (l));\n \t  break;\n \n \tcase 'q':\n-\t  maybe_print_address (pd, rs1, EXTRACT_STYPE_IMM (l));\n+\t  maybe_print_address (pd, rs1, EXTRACT_STYPE_IMM (l), 0);\n \t  print (info->stream, \"%d\", (int)EXTRACT_STYPE_IMM (l));\n \t  break;\n "
    }
  ]
}