{
  "sha": "ae7754b256f1f230baec364d90561c3ca34f7e64",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWU3NzU0YjI1NmYxZjIzMGJhZWMzNjRkOTA1NjFjM2NhMzRmN2U2NA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-11-01T16:51:13Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-11-01T16:51:15Z"
    },
    "message": "Change end_psymtab_common to a method\n\nThis changes end_psymtab_common to be a method on partial_symtab.\nThis seems a little cleaner to me.\n\ngdb/ChangeLog\n2020-11-01  Tom Tromey  <tom@tromey.com>\n\n\t* dbxread.c (dbx_end_psymtab): Update.\n\t* dwarf2/read.c (process_psymtab_comp_unit_reader)\n\t(build_type_psymtabs_reader): Update.\n\t* xcoffread.c (xcoff_end_psymtab): Update.\n\t* ctfread.c (scan_partial_symbols): Update.\n\t* psymtab.c (sort_pst_symbols): Remove.\n\t(partial_symtab::end): Rename from end_psymtab_common.  Inline\n\tsort_pst_symbols.\n\t* psympriv.h (struct partial_symtab) <end>: New method.\n\t(end_psymtab_common): Don't declare.",
    "tree": {
      "sha": "ce37e71c6106a8e4937f096cd688e1cd48565ab4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ce37e71c6106a8e4937f096cd688e1cd48565ab4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ae7754b256f1f230baec364d90561c3ca34f7e64",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ae7754b256f1f230baec364d90561c3ca34f7e64",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ae7754b256f1f230baec364d90561c3ca34f7e64",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ae7754b256f1f230baec364d90561c3ca34f7e64/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0684bb51b5207aed1d76098ebaca6243f9c168e7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0684bb51b5207aed1d76098ebaca6243f9c168e7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0684bb51b5207aed1d76098ebaca6243f9c168e7"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 33,
    "deletions": 24
  },
  "files": [
    {
      "sha": "8457c754ed0f6d41d0b3249dc659a1e6eb8cb482",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ae7754b256f1f230baec364d90561c3ca34f7e64",
      "patch": "@@ -1,3 +1,16 @@\n+2020-11-01  Tom Tromey  <tom@tromey.com>\n+\n+\t* dbxread.c (dbx_end_psymtab): Update.\n+\t* dwarf2/read.c (process_psymtab_comp_unit_reader)\n+\t(build_type_psymtabs_reader): Update.\n+\t* xcoffread.c (xcoff_end_psymtab): Update.\n+\t* ctfread.c (scan_partial_symbols): Update.\n+\t* psymtab.c (sort_pst_symbols): Remove.\n+\t(partial_symtab::end): Rename from end_psymtab_common.  Inline\n+\tsort_pst_symbols.\n+\t* psympriv.h (struct partial_symtab) <end>: New method.\n+\t(end_psymtab_common): Don't declare.\n+\n 2020-11-01  Tom Tromey  <tom@tromey.com>\n \n \t* symmisc.c (count_psyms): New function."
    },
    {
      "sha": "52eef8013003783fe68bb1b131cf8e4a69f8baf7",
      "filename": "gdb/ctfread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/ctfread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/ctfread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ctfread.c?ref=ae7754b256f1f230baec364d90561c3ca34f7e64",
      "patch": "@@ -1464,7 +1464,7 @@ scan_partial_symbols (ctf_file_t *cfp, struct objfile *of)\n \t\t\t0, language_c, of);\n     }\n \n-  end_psymtab_common (pst);\n+  pst->end ();\n }\n \n /* Read CTF debugging information from a BFD section.  This is"
    },
    {
      "sha": "0d8c59e397ee9e818ff443343604f7515beafd17",
      "filename": "gdb/dbxread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/dbxread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/dbxread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dbxread.c?ref=ae7754b256f1f230baec364d90561c3ca34f7e64",
      "patch": "@@ -2004,7 +2004,7 @@ dbx_end_psymtab (struct objfile *objfile, legacy_psymtab *pst,\n \n   /* End of kludge for patching Solaris textlow and texthigh.  */\n \n-  end_psymtab_common (pst);\n+  pst->end ();\n \n   pst->number_of_dependencies = number_dependencies;\n   if (number_dependencies)"
    },
    {
      "sha": "19131da0b1d33141a025ea45f96dc72cc15b6a09",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=ae7754b256f1f230baec364d90561c3ca34f7e64",
      "patch": "@@ -7634,7 +7634,7 @@ process_psymtab_comp_unit_reader (const struct die_reader_specs *reader,\n \t\t\t\t\t\t  best_highpc + baseaddr)\n \t\t      - baseaddr);\n \n-  end_psymtab_common (pst);\n+  pst->end ();\n \n   if (!cu->per_cu->imported_symtabs_empty ())\n     {\n@@ -7760,7 +7760,7 @@ build_type_psymtabs_reader (const struct die_reader_specs *reader,\n   highpc = (CORE_ADDR) 0;\n   scan_partial_symbols (first_die, &lowpc, &highpc, 0, cu);\n \n-  end_psymtab_common (pst);\n+  pst->end ();\n }\n \n /* Struct used to sort TUs by their abbreviation table offset.  */"
    },
    {
      "sha": "ac2c6117851eb3042acb3747b07b4309ca32abbe",
      "filename": "gdb/psympriv.h",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/psympriv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/psympriv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psympriv.h?ref=ae7754b256f1f230baec364d90561c3ca34f7e64",
      "patch": "@@ -248,6 +248,10 @@ struct partial_symtab\n \t\t    struct objfile *objfile);\n \n \n+  /* Indicate that this partial symtab is complete.  */\n+\n+  void end ();\n+\n   /* Chain of all existing partial symtabs.  */\n \n   struct partial_symtab *next = nullptr;\n@@ -436,8 +440,6 @@ struct legacy_psymtab : public standard_psymtab\n   void *read_symtab_private = nullptr;\n };\n \n-extern void end_psymtab_common (struct partial_symtab *);\n-\n /* Used when recording partial symbol tables.  On destruction,\n    discards any partial symbol tables that have been built.  However,\n    the tables can be kept by calling the \"keep\" method.  */"
    },
    {
      "sha": "ef190d51146ebbfcb958f0e4402dcdb32051841f",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 11,
      "deletions": 17,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=ae7754b256f1f230baec364d90561c3ca34f7e64",
      "patch": "@@ -1430,19 +1430,6 @@ const struct quick_symbol_functions psym_functions =\n \n \f\n \n-static void\n-sort_pst_symbols (struct partial_symtab *pst)\n-{\n-  /* Sort the global list; don't sort the static list.  */\n-  std::sort (pst->global_psymbols.begin (),\n-\t     pst->global_psymbols.end (),\n-\t     [] (partial_symbol *s1, partial_symbol *s2)\n-    {\n-      return strcmp_iw_ordered (s1->ginfo.search_name (),\n-\t\t\t\ts2->ginfo.search_name ()) < 0;\n-    });\n-}\n-\n /* Partially fill a partial symtab.  It will be completely filled at\n    the end of the symbol list.  */\n \n@@ -1458,12 +1445,19 @@ partial_symtab::partial_symtab (const char *filename,\n /* Perform \"finishing up\" operations of a partial symtab.  */\n \n void\n-end_psymtab_common (struct partial_symtab *pst)\n+partial_symtab::end ()\n {\n-  pst->global_psymbols.shrink_to_fit ();\n-  pst->static_psymbols.shrink_to_fit ();\n+  global_psymbols.shrink_to_fit ();\n+  static_psymbols.shrink_to_fit ();\n \n-  sort_pst_symbols (pst);\n+  /* Sort the global list; don't sort the static list.  */\n+  std::sort (global_psymbols.begin (),\n+\t     global_psymbols.end (),\n+\t     [] (partial_symbol *s1, partial_symbol *s2)\n+    {\n+      return strcmp_iw_ordered (s1->ginfo.search_name (),\n+\t\t\t\ts2->ginfo.search_name ()) < 0;\n+    });\n }\n \n /* See psymtab.h.  */"
    },
    {
      "sha": "2c837cfbfa6efaa1428ed8568a19daee11219113",
      "filename": "gdb/xcoffread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/xcoffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7754b256f1f230baec364d90561c3ca34f7e64/gdb/xcoffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/xcoffread.c?ref=ae7754b256f1f230baec364d90561c3ca34f7e64",
      "patch": "@@ -2000,7 +2000,7 @@ xcoff_end_psymtab (struct objfile *objfile, legacy_psymtab *pst,\n     first_fun_line_offset;\n   first_fun_line_offset = 0;\n \n-  end_psymtab_common (pst);\n+  pst->end ();\n \n   pst->number_of_dependencies = number_dependencies;\n   if (number_dependencies)"
    }
  ]
}