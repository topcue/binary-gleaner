{
  "sha": "670817b94710b751f032d5b89a3026428ce9c397",
  "node_id": "C_kwDOANOeidoAKDY3MDgxN2I5NDcxMGI3NTFmMDMyZDViODlhMzAyNjQyOGNlOWMzOTc",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-07-07T03:37:56Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-10-31T08:51:44Z"
    },
    "message": "sim: nltvals: pull target open flags out into a dedicated source file\n\nLike we just did for pulling out the errno & signal maps, pull out the\nopen flag map into a dedicated common file.  All newlib ports are using\nthe same map which makes it easy.",
    "tree": {
      "sha": "e0d82b19bc6895dd09670921fa114febef0dc00a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e0d82b19bc6895dd09670921fa114febef0dc00a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/670817b94710b751f032d5b89a3026428ce9c397",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/670817b94710b751f032d5b89a3026428ce9c397",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/670817b94710b751f032d5b89a3026428ce9c397",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/670817b94710b751f032d5b89a3026428ce9c397/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b868a2393bfd65221fe94e4ef2eebf218dee5a71",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b868a2393bfd65221fe94e4ef2eebf218dee5a71",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b868a2393bfd65221fe94e4ef2eebf218dee5a71"
    }
  ],
  "stats": {
    "total": 151,
    "additions": 106,
    "deletions": 45
  },
  "files": [
    {
      "sha": "f6bf4168ad10a643c6ab05d7e9d59b44531c6f09",
      "filename": "sim/Makefile.in",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/670817b94710b751f032d5b89a3026428ce9c397/sim/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/670817b94710b751f032d5b89a3026428ce9c397/sim/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/Makefile.in?ref=670817b94710b751f032d5b89a3026428ce9c397",
      "patch": "@@ -254,6 +254,7 @@ am_common_libcommon_a_OBJECTS =  \\\n \tcommon/common_libcommon_a-portability.$(OBJEXT) \\\n \tcommon/common_libcommon_a-sim-load.$(OBJEXT) \\\n \tcommon/common_libcommon_a-target-newlib-errno.$(OBJEXT) \\\n+\tcommon/common_libcommon_a-target-newlib-open.$(OBJEXT) \\\n \tcommon/common_libcommon_a-target-newlib-signal.$(OBJEXT) \\\n \tcommon/common_libcommon_a-version.$(OBJEXT)\n common_libcommon_a_OBJECTS = $(am_common_libcommon_a_OBJECTS)\n@@ -846,6 +847,7 @@ common_libcommon_a_SOURCES = \\\n \tcommon/portability.c \\\n \tcommon/sim-load.c \\\n \tcommon/target-newlib-errno.c \\\n+\tcommon/target-newlib-open.c \\\n \tcommon/target-newlib-signal.c \\\n \tcommon/version.c\n \n@@ -1021,6 +1023,8 @@ common/common_libcommon_a-sim-load.$(OBJEXT): common/$(am__dirstamp) \\\n \tcommon/$(DEPDIR)/$(am__dirstamp)\n common/common_libcommon_a-target-newlib-errno.$(OBJEXT):  \\\n \tcommon/$(am__dirstamp) common/$(DEPDIR)/$(am__dirstamp)\n+common/common_libcommon_a-target-newlib-open.$(OBJEXT):  \\\n+\tcommon/$(am__dirstamp) common/$(DEPDIR)/$(am__dirstamp)\n common/common_libcommon_a-target-newlib-signal.$(OBJEXT):  \\\n \tcommon/$(am__dirstamp) common/$(DEPDIR)/$(am__dirstamp)\n common/common_libcommon_a-version.$(OBJEXT): common/$(am__dirstamp) \\\n@@ -1146,6 +1150,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/common_libcommon_a-portability.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/common_libcommon_a-sim-load.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/common_libcommon_a-target-newlib-errno.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/common_libcommon_a-target-newlib-open.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/common_libcommon_a-target-newlib-signal.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/common_libcommon_a-version.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@igen/$(DEPDIR)/filter.Po@am__quote@\n@@ -1239,6 +1244,20 @@ common/common_libcommon_a-target-newlib-errno.obj: common/target-newlib-errno.c\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libcommon_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o common/common_libcommon_a-target-newlib-errno.obj `if test -f 'common/target-newlib-errno.c'; then $(CYGPATH_W) 'common/target-newlib-errno.c'; else $(CYGPATH_W) '$(srcdir)/common/target-newlib-errno.c'; fi`\n \n+common/common_libcommon_a-target-newlib-open.o: common/target-newlib-open.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libcommon_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT common/common_libcommon_a-target-newlib-open.o -MD -MP -MF common/$(DEPDIR)/common_libcommon_a-target-newlib-open.Tpo -c -o common/common_libcommon_a-target-newlib-open.o `test -f 'common/target-newlib-open.c' || echo '$(srcdir)/'`common/target-newlib-open.c\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) common/$(DEPDIR)/common_libcommon_a-target-newlib-open.Tpo common/$(DEPDIR)/common_libcommon_a-target-newlib-open.Po\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='common/target-newlib-open.c' object='common/common_libcommon_a-target-newlib-open.o' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libcommon_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o common/common_libcommon_a-target-newlib-open.o `test -f 'common/target-newlib-open.c' || echo '$(srcdir)/'`common/target-newlib-open.c\n+\n+common/common_libcommon_a-target-newlib-open.obj: common/target-newlib-open.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libcommon_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT common/common_libcommon_a-target-newlib-open.obj -MD -MP -MF common/$(DEPDIR)/common_libcommon_a-target-newlib-open.Tpo -c -o common/common_libcommon_a-target-newlib-open.obj `if test -f 'common/target-newlib-open.c'; then $(CYGPATH_W) 'common/target-newlib-open.c'; else $(CYGPATH_W) '$(srcdir)/common/target-newlib-open.c'; fi`\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) common/$(DEPDIR)/common_libcommon_a-target-newlib-open.Tpo common/$(DEPDIR)/common_libcommon_a-target-newlib-open.Po\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='common/target-newlib-open.c' object='common/common_libcommon_a-target-newlib-open.obj' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libcommon_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o common/common_libcommon_a-target-newlib-open.obj `if test -f 'common/target-newlib-open.c'; then $(CYGPATH_W) 'common/target-newlib-open.c'; else $(CYGPATH_W) '$(srcdir)/common/target-newlib-open.c'; fi`\n+\n common/common_libcommon_a-target-newlib-signal.o: common/target-newlib-signal.c\n @am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libcommon_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT common/common_libcommon_a-target-newlib-signal.o -MD -MP -MF common/$(DEPDIR)/common_libcommon_a-target-newlib-signal.Tpo -c -o common/common_libcommon_a-target-newlib-signal.o `test -f 'common/target-newlib-signal.c' || echo '$(srcdir)/'`common/target-newlib-signal.c\n @am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) common/$(DEPDIR)/common_libcommon_a-target-newlib-signal.Tpo common/$(DEPDIR)/common_libcommon_a-target-newlib-signal.Po"
    },
    {
      "sha": "e5c3484c047e9e2a3d4fc97639b4abee4d76a8c6",
      "filename": "sim/common/Make-common.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/670817b94710b751f032d5b89a3026428ce9c397/sim/common/Make-common.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/670817b94710b751f032d5b89a3026428ce9c397/sim/common/Make-common.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/Make-common.in?ref=670817b94710b751f032d5b89a3026428ce9c397",
      "patch": "@@ -232,6 +232,7 @@ COMMON_OBJS_NAMES = \\\n \tportability.o \\\n \tsim-load.o \\\n \ttarget-newlib-errno.o \\\n+\ttarget-newlib-open.o \\\n \ttarget-newlib-signal.o \\\n \tversion.o\n COMMON_OBJS = $(COMMON_OBJS_NAMES:%=../common/common_libcommon_a-%)"
    },
    {
      "sha": "4a55c296694381caa960ed3e4f58cabe1fac164d",
      "filename": "sim/common/gentmap.c",
      "status": "modified",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/670817b94710b751f032d5b89a3026428ce9c397/sim/common/gentmap.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/670817b94710b751f032d5b89a3026428ce9c397/sim/common/gentmap.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/gentmap.c?ref=670817b94710b751f032d5b89a3026428ce9c397",
      "patch": "@@ -16,13 +16,6 @@ static struct tdefs sys_tdefs[] = {\n   { 0, 0 }\n };\n \n-static struct tdefs open_tdefs[] = {\n-#define open_defs\n-#include \"nltvals.def\"\n-#undef open_defs\n-  { 0, 0 }\n-};\n-\n static void\n gen_targ_vals_h (void)\n {\n@@ -51,7 +44,6 @@ gen_targ_map_c (void)\n   printf (\"/* This file is machine generated by gentmap.c.  */\\n\\n\");\n \n   printf (\"#include \\\"defs.h\\\"\\n\");\n-  printf (\"#include <fcntl.h>\\n\");\n   printf (\"#include \\\"ansidecl.h\\\"\\n\");\n   printf (\"#include \\\"sim/callback.h\\\"\\n\");\n   printf (\"#include \\\"targ-vals.h\\\"\\n\");\n@@ -68,18 +60,6 @@ gen_targ_map_c (void)\n     }\n   printf (\"  { 0, -1, -1 }\\n\");\n   printf (\"};\\n\\n\");\n-\n-  printf (\"/* open flags mapping table */\\n\");\n-  printf (\"CB_TARGET_DEFS_MAP cb_init_open_map[] = {\\n\");\n-  for (t = &open_tdefs[0]; t->symbol; ++t)\n-    {\n-      printf (\"#define TARGET_%s 0x%x\\n\", t->symbol, t->value);\n-      printf (\"#ifdef %s\\n\", t->symbol);\n-      printf (\"  { \\\"%s\\\", %s, TARGET_%s },\\n\", t->symbol, t->symbol, t->symbol);\n-      printf (\"#endif\\n\");\n-    }\n-  printf (\"  { 0, -1, -1 }\\n\");\n-  printf (\"};\\n\\n\");\n }\n \n int"
    },
    {
      "sha": "fdbdca444b3f9ad0b1cbfa3793bc2f1aa7b16f12",
      "filename": "sim/common/local.mk",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/670817b94710b751f032d5b89a3026428ce9c397/sim/common/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/670817b94710b751f032d5b89a3026428ce9c397/sim/common/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/local.mk?ref=670817b94710b751f032d5b89a3026428ce9c397",
      "patch": "@@ -37,6 +37,7 @@ noinst_LIBRARIES += %D%/libcommon.a\n \t%D%/portability.c \\\n \t%D%/sim-load.c \\\n \t%D%/target-newlib-errno.c \\\n+\t%D%/target-newlib-open.c \\\n \t%D%/target-newlib-signal.c \\\n \t%D%/version.c\n "
    },
    {
      "sha": "54035cef698fb987d1a59b034695782961e330b7",
      "filename": "sim/common/nltvals.def",
      "status": "modified",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/670817b94710b751f032d5b89a3026428ce9c397/sim/common/nltvals.def",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/670817b94710b751f032d5b89a3026428ce9c397/sim/common/nltvals.def",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/nltvals.def?ref=670817b94710b751f032d5b89a3026428ce9c397",
      "patch": "@@ -1,30 +1,5 @@\n /* Newlib/libgloss macro values needed by remote target support.  */\n /* This file is machine generated by gennltvals.py.  */\n-#ifdef open_defs\n-/* from fcntl.h */\n-/* from sys/fcntl.h */\n-/* from sys/_default_fcntl.h */\n-/* begin open target macros */\n- { \"O_ACCMODE\", (0|1|2) },\n- { \"O_APPEND\", 0x0008 },\n- { \"O_CLOEXEC\", 0x40000 },\n- { \"O_CREAT\", 0x0200 },\n- { \"O_DIRECT\", 0x80000 },\n- { \"O_DIRECTORY\", 0x200000 },\n- { \"O_EXCL\", 0x0800 },\n- { \"O_EXEC\", 0x400000 },\n- { \"O_NOCTTY\", 0x8000 },\n- { \"O_NOFOLLOW\", 0x100000 },\n- { \"O_NONBLOCK\", 0x4000 },\n- { \"O_RDONLY\", 0 },\n- { \"O_RDWR\", 2 },\n- { \"O_SEARCH\", 0x400000 },\n- { \"O_SYNC\", 0x2000 },\n- { \"O_TRUNC\", 0x0400 },\n- { \"O_WRONLY\", 1 },\n-#undef open_defs\n-/* end open target macros */\n-#endif\n #ifdef NL_TARGET_cr16\n #ifdef sys_defs\n /* from syscall.h */"
    },
    {
      "sha": "8198109f5cdf51146307498985584200ebf71680",
      "filename": "sim/common/target-newlib-open.c",
      "status": "added",
      "additions": 85,
      "deletions": 0,
      "changes": 85,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/670817b94710b751f032d5b89a3026428ce9c397/sim/common/target-newlib-open.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/670817b94710b751f032d5b89a3026428ce9c397/sim/common/target-newlib-open.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/target-newlib-open.c?ref=670817b94710b751f032d5b89a3026428ce9c397",
      "patch": "@@ -0,0 +1,85 @@\n+/* Target errno mappings for newlib/libgloss environment.\n+   Copyright 1995-2021 Free Software Foundation, Inc.\n+   Contributed by Mike Frysinger.\n+\n+   This file is part of simulators.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+/* This must come before any other includes.  */\n+#include \"defs.h\"\n+\n+#include <fcntl.h>\n+\n+#include \"sim/callback.h\"\n+\n+/* This file is kept up-to-date via the gennltvals.py script.  Do not edit\n+   anything between the START & END comment blocks below.  */\n+\n+CB_TARGET_DEFS_MAP cb_init_open_map[] = {\n+  /* gennltvals: START */\n+#ifdef O_ACCMODE\n+  { \"O_ACCMODE\", O_ACCMODE, (0|1|2) },\n+#endif\n+#ifdef O_APPEND\n+  { \"O_APPEND\", O_APPEND, 0x0008 },\n+#endif\n+#ifdef O_CLOEXEC\n+  { \"O_CLOEXEC\", O_CLOEXEC, 0x40000 },\n+#endif\n+#ifdef O_CREAT\n+  { \"O_CREAT\", O_CREAT, 0x0200 },\n+#endif\n+#ifdef O_DIRECT\n+  { \"O_DIRECT\", O_DIRECT, 0x80000 },\n+#endif\n+#ifdef O_DIRECTORY\n+  { \"O_DIRECTORY\", O_DIRECTORY, 0x200000 },\n+#endif\n+#ifdef O_EXCL\n+  { \"O_EXCL\", O_EXCL, 0x0800 },\n+#endif\n+#ifdef O_EXEC\n+  { \"O_EXEC\", O_EXEC, 0x400000 },\n+#endif\n+#ifdef O_NOCTTY\n+  { \"O_NOCTTY\", O_NOCTTY, 0x8000 },\n+#endif\n+#ifdef O_NOFOLLOW\n+  { \"O_NOFOLLOW\", O_NOFOLLOW, 0x100000 },\n+#endif\n+#ifdef O_NONBLOCK\n+  { \"O_NONBLOCK\", O_NONBLOCK, 0x4000 },\n+#endif\n+#ifdef O_RDONLY\n+  { \"O_RDONLY\", O_RDONLY, 0 },\n+#endif\n+#ifdef O_RDWR\n+  { \"O_RDWR\", O_RDWR, 2 },\n+#endif\n+#ifdef O_SEARCH\n+  { \"O_SEARCH\", O_SEARCH, 0x400000 },\n+#endif\n+#ifdef O_SYNC\n+  { \"O_SYNC\", O_SYNC, 0x2000 },\n+#endif\n+#ifdef O_TRUNC\n+  { \"O_TRUNC\", O_TRUNC, 0x0400 },\n+#endif\n+#ifdef O_WRONLY\n+  { \"O_WRONLY\", O_WRONLY, 1 },\n+#endif\n+  /* gennltvals: END */\n+  { NULL, -1, -1 },\n+};"
    }
  ]
}