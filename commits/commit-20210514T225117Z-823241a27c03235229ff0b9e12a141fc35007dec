{
  "sha": "823241a27c03235229ff0b9e12a141fc35007dec",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODIzMjQxYTI3YzAzMjM1MjI5ZmYwYjllMTJhMTQxZmMzNTAwN2RlYw==",
  "commit": {
    "author": {
      "name": "Fangrui Song",
      "email": "maskray@google.com",
      "date": "2021-05-14T22:51:16Z"
    },
    "committer": {
      "name": "Fangrui Song",
      "email": "maskray@google.com",
      "date": "2021-05-14T22:51:17Z"
    },
    "message": "gold: Add -Bno-symbolic\n\ngold/\n    PR 27834\n    * options.h (General_options): Make -Bsymbolic and\n    -Bsymbolic-functions special and adjust the help messages. Add\n    enum Bsymbolic_kind and -Bno-symbolic.\n    * options.cc (General_options): Define parse_Bno_symbolic,\n    parse_Bsymbolic_functions, and parse_Bsymbolic.",
    "tree": {
      "sha": "19fdc0cdb655d63abf1b9d78cff4601f804567ae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/19fdc0cdb655d63abf1b9d78cff4601f804567ae"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/823241a27c03235229ff0b9e12a141fc35007dec",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/823241a27c03235229ff0b9e12a141fc35007dec",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/823241a27c03235229ff0b9e12a141fc35007dec",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/823241a27c03235229ff0b9e12a141fc35007dec/comments",
  "author": {
    "login": "MaskRay",
    "id": 416322,
    "node_id": "MDQ6VXNlcjQxNjMyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/416322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaskRay",
    "html_url": "https://github.com/MaskRay",
    "followers_url": "https://api.github.com/users/MaskRay/followers",
    "following_url": "https://api.github.com/users/MaskRay/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaskRay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaskRay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaskRay/subscriptions",
    "organizations_url": "https://api.github.com/users/MaskRay/orgs",
    "repos_url": "https://api.github.com/users/MaskRay/repos",
    "events_url": "https://api.github.com/users/MaskRay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaskRay/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "MaskRay",
    "id": 416322,
    "node_id": "MDQ6VXNlcjQxNjMyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/416322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaskRay",
    "html_url": "https://github.com/MaskRay",
    "followers_url": "https://api.github.com/users/MaskRay/followers",
    "following_url": "https://api.github.com/users/MaskRay/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaskRay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaskRay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaskRay/subscriptions",
    "organizations_url": "https://api.github.com/users/MaskRay/orgs",
    "repos_url": "https://api.github.com/users/MaskRay/repos",
    "events_url": "https://api.github.com/users/MaskRay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaskRay/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f8eec398fb705d6d6f76451288abd5d38f9d07fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f8eec398fb705d6d6f76451288abd5d38f9d07fc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f8eec398fb705d6d6f76451288abd5d38f9d07fc"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 60,
    "deletions": 4
  },
  "files": [
    {
      "sha": "c68f282e9bc9723371c09aee5a9541b6913c5e14",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/823241a27c03235229ff0b9e12a141fc35007dec/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/823241a27c03235229ff0b9e12a141fc35007dec/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=823241a27c03235229ff0b9e12a141fc35007dec",
      "patch": "@@ -1,3 +1,12 @@\n+2021-05-04  Fangrui Song  <maskray@google.com>\n+\n+\tPR 27834\n+\t* options.h (General_options): Make -Bsymbolic and\n+\t-Bsymbolic-functions special and adjust the help messages. Add\n+\tenum Bsymbolic_kind and -Bno-symbolic.\n+\t* options.cc (General_options): Define parse_Bno_symbolic,\n+\tparse_Bsymbolic_functions, and parse_Bsymbolic.\n+\n 2021-03-30  Alan Modra  <amodra@gmail.com>\n \n \tPR gold/27625"
    },
    {
      "sha": "1818e5dc3456d5aed2d3a243ba37d540934f8e45",
      "filename": "gold/options.cc",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/823241a27c03235229ff0b9e12a141fc35007dec/gold/options.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/823241a27c03235229ff0b9e12a141fc35007dec/gold/options.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/options.cc?ref=823241a27c03235229ff0b9e12a141fc35007dec",
      "patch": "@@ -340,6 +340,27 @@ General_options::parse_V(const char*, const char*, Command_line*)\n     printf(\"   %s\\n\", *p);\n }\n \n+void\n+General_options::parse_Bno_symbolic(const char*, const char*,\n+\t\t\t\t    Command_line*)\n+{\n+  this->bsymbolic_ = BSYMBOLIC_NONE;\n+}\n+\n+void\n+General_options::parse_Bsymbolic_functions(const char*, const char*,\n+\t\t\t\t\t   Command_line*)\n+{\n+  this->bsymbolic_ = BSYMBOLIC_FUNCTIONS;\n+}\n+\n+void\n+General_options::parse_Bsymbolic(const char*, const char*,\n+\t\t\t\t Command_line*)\n+{\n+  this->bsymbolic_ = BSYMBOLIC_ALL;\n+}\n+\n void\n General_options::parse_defsym(const char*, const char* arg,\n \t\t\t      Command_line* cmdline)"
    },
    {
      "sha": "757ebf18fecfa45dd16affc29c816c6975e07b60",
      "filename": "gold/options.h",
      "status": "modified",
      "additions": 30,
      "deletions": 4,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/823241a27c03235229ff0b9e12a141fc35007dec/gold/options.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/823241a27c03235229ff0b9e12a141fc35007dec/gold/options.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/options.h?ref=823241a27c03235229ff0b9e12a141fc35007dec",
      "patch": "@@ -747,11 +747,20 @@ class General_options\n   DEFINE_bool(Bshareable, options::ONE_DASH, '\\0', false,\n \t      N_(\"Generate shared library (alias for -G/-shared)\"), NULL);\n \n-  DEFINE_bool(Bsymbolic, options::ONE_DASH, '\\0', false,\n-\t      N_(\"Bind defined symbols locally\"), NULL);\n+  DEFINE_special (Bno_symbolic, options::ONE_DASH, '\\0',\n+\t\t  N_ (\"Don't bind default visibility defined symbols locally \"\n+\t\t      \"for -shared (default)\"),\n+\t\t  NULL);\n \n-  DEFINE_bool(Bsymbolic_functions, options::ONE_DASH, '\\0', false,\n-\t      N_(\"Bind defined function symbols locally\"), NULL);\n+  DEFINE_special (Bsymbolic_functions, options::ONE_DASH, '\\0',\n+\t\t  N_ (\"Bind default visibility defined function symbols \"\n+\t\t      \"locally for -shared\"),\n+\t\t  NULL);\n+\n+  DEFINE_special (\n+      Bsymbolic, options::ONE_DASH, '\\0',\n+      N_ (\"Bind default visibility defined symbols locally for -shared\"),\n+      NULL);\n \n   // c\n \n@@ -1740,6 +1749,21 @@ class General_options\n   endianness() const\n   { return this->endianness_; }\n \n+  enum Bsymbolic_kind\n+  {\n+    BSYMBOLIC_NONE,\n+    BSYMBOLIC_FUNCTIONS,\n+    BSYMBOLIC_ALL,\n+  };\n+\n+  bool\n+  Bsymbolic() const\n+  { return this->bsymbolic_ == BSYMBOLIC_ALL; }\n+\n+  bool\n+  Bsymbolic_functions() const\n+  { return this->bsymbolic_ == BSYMBOLIC_FUNCTIONS; }\n+\n   bool\n   discard_all() const\n   { return this->discard_locals_ == DISCARD_ALL; }\n@@ -1873,6 +1897,8 @@ class General_options\n   void\n   copy_from_posdep_options(const Position_dependent_options&);\n \n+  // Whether we bind default visibility defined symbols locally for -shared.\n+  Bsymbolic_kind bsymbolic_;\n   // Whether we printed version information.\n   bool printed_version_;\n   // Whether to mark the stack as executable."
    }
  ]
}