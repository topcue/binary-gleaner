{
  "sha": "e96ec2bab75a943e1666497b1389e297775af5a8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTk2ZWMyYmFiNzVhOTQzZTE2NjY0OTdiMTM4OWUyOTc3NzVhZjVhOA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-11-02T05:55:10Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-11-02T05:55:10Z"
    },
    "message": "[gdb/testsuite] Remove superfluous 3rd argument from gdb_test call (3)\n\nThere's a pattern:\n...\ngdb_test <command> <pattern> <command>\n...\nthat can be written shorter as:\n...\ngdb_test <command> <pattern>\n...\n\nDetect this pattern in proc gdb_test:\n...\n     global gdb_prompt\n     upvar timeout timeout\n\n     if [llength $args]>2 then {\n        set message [lindex $args 2]\n+       if { $message == [lindex $args 0] && [llength $args] == 3 } {\n+           error \"HERE\"\n+       }\n     } else {\n         set message [lindex $args 0]\n     }\n...\nand fix all occurrences in the testsuite/gdb.cp subdir.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2019-11-02  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.cp/anon-union.exp: Drop superfluous 3rd argument to gdb_test.\n\t* gdb.cp/cpexprs.exp: Same.\n\t* gdb.cp/except-multi-location.exp: Same.\n\t* gdb.cp/exceptprint.exp: Same.\n\t* gdb.cp/gdb2384.exp: Same.\n\t* gdb.cp/inherit.exp: Same.\n\t* gdb.cp/m-static.exp: Same.\n\t* gdb.cp/meth-typedefs.exp: Same.\n\t* gdb.cp/misc.exp: Same.\n\t* gdb.cp/namespace.exp: Same.\n\t* gdb.cp/non-trivial-retval.exp: Same.\n\t* gdb.cp/overload.exp: Same.\n\t* gdb.cp/pr17132.exp: Same.\n\t* gdb.cp/re-set-overloaded.exp: Same.\n\t* gdb.cp/rvalue-ref-types.exp: Same.\n\t* gdb.cp/templates.exp: Same.\n\nChange-Id: I0254d0cea71e7376aedb078166188a8010eeaebe",
    "tree": {
      "sha": "ecdcae9acb1be8ac126064a7c96673a29db81d37",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ecdcae9acb1be8ac126064a7c96673a29db81d37"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e96ec2bab75a943e1666497b1389e297775af5a8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e96ec2bab75a943e1666497b1389e297775af5a8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e96ec2bab75a943e1666497b1389e297775af5a8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e96ec2bab75a943e1666497b1389e297775af5a8/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a1dc3a23d0507ef32f36844ef771cd9189168be1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1dc3a23d0507ef32f36844ef771cd9189168be1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a1dc3a23d0507ef32f36844ef771cd9189168be1"
    }
  ],
  "stats": {
    "total": 136,
    "additions": 67,
    "deletions": 69
  },
  "files": [
    {
      "sha": "d89df03fc4cf1104a46457eedff585e28ce280d2",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -1,3 +1,22 @@\n+2019-11-02  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.cp/anon-union.exp: Drop superfluous 3rd argument to gdb_test.\n+\t* gdb.cp/cpexprs.exp: Same.\n+\t* gdb.cp/except-multi-location.exp: Same.\n+\t* gdb.cp/exceptprint.exp: Same.\n+\t* gdb.cp/gdb2384.exp: Same.\n+\t* gdb.cp/inherit.exp: Same.\n+\t* gdb.cp/m-static.exp: Same.\n+\t* gdb.cp/meth-typedefs.exp: Same.\n+\t* gdb.cp/misc.exp: Same.\n+\t* gdb.cp/namespace.exp: Same.\n+\t* gdb.cp/non-trivial-retval.exp: Same.\n+\t* gdb.cp/overload.exp: Same.\n+\t* gdb.cp/pr17132.exp: Same.\n+\t* gdb.cp/re-set-overloaded.exp: Same.\n+\t* gdb.cp/rvalue-ref-types.exp: Same.\n+\t* gdb.cp/templates.exp: Same.\n+\n 2019-11-01  Luis Machado  <luis.machado@linaro.org>\n \n \tPR gdb/25124"
    },
    {
      "sha": "4bd7e199156b028ab83ef16ad6bb6709ce41d9c6",
      "filename": "gdb/testsuite/gdb.cp/anon-union.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/anon-union.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/anon-union.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/anon-union.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -134,7 +134,7 @@ gdb_test \"print foo\" \\\n     \"print foo 9\"\n \n # Step over next four assignments\n-gdb_test \"next 4\" \"53\\[ \\t\\]*w = 45;\" \"next 4\"\n+gdb_test \"next 4\" \"53\\[ \\t\\]*w = 45;\"\n \n # Tests for anon unions that are not members of a class or struct\n "
    },
    {
      "sha": "be4a5a1bc934b4210c1710db8c705028e9c797cf",
      "filename": "gdb/testsuite/gdb.cp/cpexprs.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/cpexprs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/cpexprs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/cpexprs.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -705,12 +705,12 @@ gdb_test \"set listsize 1\"\n \n # \"print METHOD\"\n foreach name [get_functions print] {\n-    gdb_test \"print $name\" [get $name print] \"print $name\"\n+    gdb_test \"print $name\" [get $name print]\n }\n \n # \"list METHOD\"\n foreach name [get_functions list] {\n-    gdb_test \"list $name\" [get $name list] \"list $name\"\n+    gdb_test \"list $name\" [get $name list]\n }\n \n # Running to breakpoint -- use any function we can \"list\""
    },
    {
      "sha": "e56928e245f8740bf3f20a2134031bd7e755691b",
      "filename": "gdb/testsuite/gdb.cp/except-multi-location.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/except-multi-location.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/except-multi-location.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/except-multi-location.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -64,12 +64,9 @@ proc test_multi_libstdcpp {static_bin static_lib} {\n \treturn 0\n     }\n \n-    gdb_test \"catch catch\" \"Catchpoint \\[0-9\\]+ \\\\(catch\\\\)\" \\\n-\t\"catch catch\"\n-    gdb_test \"catch throw\" \"Catchpoint \\[0-9\\]+ \\\\(throw\\\\)\" \\\n-\t\"catch throw\"\n-    gdb_test \"catch rethrow\" \"Catchpoint \\[0-9\\]+ \\\\(rethrow\\\\)\" \\\n-\t\"catch rethrow\"\n+    gdb_test \"catch catch\" \"Catchpoint \\[0-9\\]+ \\\\(catch\\\\)\"\n+    gdb_test \"catch throw\" \"Catchpoint \\[0-9\\]+ \\\\(throw\\\\)\"\n+    gdb_test \"catch rethrow\" \"Catchpoint \\[0-9\\]+ \\\\(rethrow\\\\)\"\n \n     set ws \"\\[ \\t\\]*\"\n     gdb_test \"info breakpoints\" \\"
    },
    {
      "sha": "de10454937a573fd06a60491d77c4c2a2819de1c",
      "filename": "gdb/testsuite/gdb.cp/exceptprint.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/exceptprint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/exceptprint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/exceptprint.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -60,12 +60,9 @@ proc do_exceptprint_tests {prefix output} {\n     }\n }\n \n-gdb_test \"catch catch\" \"Catchpoint \\[0-9\\]+ \\\\(catch\\\\)\" \\\n-    \"catch catch\"\n-gdb_test \"catch throw\" \"Catchpoint \\[0-9\\]+ \\\\(throw\\\\)\" \\\n-    \"catch throw\"\n-gdb_test \"catch rethrow\" \"Catchpoint \\[0-9\\]+ \\\\(rethrow\\\\)\" \\\n-    \"catch rethrow\"\n+gdb_test \"catch catch\" \"Catchpoint \\[0-9\\]+ \\\\(catch\\\\)\"\n+gdb_test \"catch throw\" \"Catchpoint \\[0-9\\]+ \\\\(throw\\\\)\"\n+gdb_test \"catch rethrow\" \"Catchpoint \\[0-9\\]+ \\\\(rethrow\\\\)\"\n \n do_exceptprint_tests string \"$hex \\\"hi bob\\\"\"\n do_exceptprint_tests int 23"
    },
    {
      "sha": "03b3ad938dee8b32e77ebfc8741eb2de227e30ca",
      "filename": "gdb/testsuite/gdb.cp/gdb2384.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/gdb2384.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/gdb2384.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/gdb2384.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -53,8 +53,7 @@ gdb_breakpoint [gdb_get_line_number \"set breakpoint here\"]\n gdb_continue_to_breakpoint \"set breakpoint here\"\n \n gdb_test \"print d1.meth ()\" \\\n-    \".*42.*\" \\\n-    \"print d1.meth ()\"\n+    \".*42.*\"\n \n # Now try again.  gdb's without the fix will hopefully segv here\n "
    },
    {
      "sha": "bd89cf989a868ffc6253736ffd6b78034a850307",
      "filename": "gdb/testsuite/gdb.cp/inherit.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/inherit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/inherit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/inherit.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -479,9 +479,9 @@ proc test_print_svi_members { } {\n     gdb_test \"print g_vC.vC::vx\" \"$vhn = 10\"\n \n     # Print members of g_vC using compact form.\n-    gdb_test \"print g_vC.va\" \"$vhn = 7\" \"print g_vC.va\"\n-    gdb_test \"print g_vC.vc\" \"$vhn = 9\" \"print g_vC.vc\"\n-    gdb_test \"print g_vC.vx\" \"$vhn = 10\" \"print g_vC.vx\"\n+    gdb_test \"print g_vC.va\" \"$vhn = 7\"\n+    gdb_test \"print g_vC.vc\" \"$vhn = 9\"\n+    gdb_test \"print g_vC.vx\" \"$vhn = 10\"\n }\n \n # Single virtual inheritance, print complete classes."
    },
    {
      "sha": "19b9182d83e75ba798856eea5c79580b21353d6f",
      "filename": "gdb/testsuite/gdb.cp/m-static.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/m-static.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/m-static.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/m-static.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -179,7 +179,7 @@ gdb_test \"print test4.somewhere\" \"\\\\$\\[0-9\\].* = 3.14\\[0-9\\]*\" \"static const flo\n \n # Also make sure static const members can be found via \"info var\".\n if { $non_dwarf } { setup_xfail *-*-* }\n-gdb_test \"info variable everywhere\" \"File .*/m-static\\[.\\]h.*const int gnu_obj_4::everywhere;\" \"info variable everywhere\"\n+gdb_test \"info variable everywhere\" \"File .*/m-static\\[.\\]h.*const int gnu_obj_4::everywhere;\"\n \n # Perhaps at some point test4 should also include a test for a static\n # const int that was initialized in the header file.  But I'm not sure"
    },
    {
      "sha": "a767f7c92cbd798fda69738fcbe7336e93faa0fa",
      "filename": "gdb/testsuite/gdb.cp/meth-typedefs.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/meth-typedefs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/meth-typedefs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/meth-typedefs.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -181,8 +181,7 @@ foreach f [list \"$func\" \"'$func'\"] {\n \t     \"file: \\\".*$srcfile\\\", line number: $line2, symbol: \\\"B::$func_re\\\"\" \\\n \t     \"$line2${any}B::test${any}\" \\\n \t     \"file: \\\".*$srcfile\\\", line number: $line3, symbol: \\\"$func_re\\\"\" \\\n-\t     \"$line3${any}// test${any}\"] \\\n-\t\"list $f\"\n+\t     \"$line3${any}// test${any}\"]\n \n     delete_breakpoints\n     gdb_test \"break $f\" \"\\\\(3 locations\\\\)\""
    },
    {
      "sha": "b5b01ced92e29469f125397cd0ea283cbf8f6690",
      "filename": "gdb/testsuite/gdb.cp/misc.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/misc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/misc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/misc.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -93,8 +93,8 @@ test_expr \"set variable v_bool_array\\[1\\] = true\" \\\n     \"set a bool array elem\"\n \n # bool constants\n-gdb_test \"print true\" \"\\\\$\\[0-9\\]* = true\" \"print true\"\n-gdb_test \"print false\" \"\\\\$\\[0-9\\]* = false\" \"print false\"\n+gdb_test \"print true\" \"\\\\$\\[0-9\\]* = true\"\n+gdb_test \"print false\" \"\\\\$\\[0-9\\]* = false\"\n \n # arithmetic conversions\n gdb_test \"print 1 + true\" \"\\\\$\\[0-9\\]* = 2\" \"1 + true\""
    },
    {
      "sha": "59842e1fe5683a7e0d3881100a06dbb8e58538bb",
      "filename": "gdb/testsuite/gdb.cp/namespace.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 17,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/namespace.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/namespace.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/namespace.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -71,12 +71,10 @@ gdb_test \"up\" \".*main.*\" \"up from marker1\"\n # shouldn't work with quotes, I'm only including one version.\n \n gdb_test \"print 'AAA::c'\" \\\n-    \"\\\\$\\[0-9\\]* = 0 '\\\\\\\\(0|000)'\" \\\n-    \"print 'AAA::c'\"\n+    \"\\\\$\\[0-9\\]* = 0 '\\\\\\\\(0|000)'\"\n \n gdb_test \"print AAA::c\" \\\n-    \"\\\\$\\[0-9\\]* = 0 '\\\\\\\\(0|000)'\" \\\n-    \"print AAA::c\"\n+    \"\\\\$\\[0-9\\]* = 0 '\\\\\\\\(0|000)'\"\n \n # An object declared using \"using\".\n \n@@ -106,13 +104,11 @@ gdb_test_multiple \"info func xyzq\" \"info func xyzq\" {\n # Call a function in a namespace\n \n gdb_test \"print 'AAA::xyzq'('x')\" \\\n-    \"\\\\$\\[0-9\\]* = 97 'a'\" \\\n-    \"print 'AAA::xyzq'('x')\"\n+    \"\\\\$\\[0-9\\]* = 97 'a'\"\n \n gdb_test \"print AAA::xyzq('x')\" \\\n-    \"\\\\$\\[0-9\\]* = 97 'a'\" \\\n-    \"print AAA::xyzq('x')\"\n-       \n+    \"\\\\$\\[0-9\\]* = 97 'a'\"\n+\n # Break on a function in a namespace\n \n gdb_test \"break AAA::xyzq\" \\\n@@ -126,12 +122,10 @@ gdb_test \"break -qualified ::ensureOtherRefs\" \\\n # Call a function in a nested namespace\n \n gdb_test \"print 'BBB::CCC::xyzq'('x')\" \\\n-    \"\\\\$\\[0-9\\]* = 122 'z'\" \\\n-    \"print 'BBB::CCC::xyzq'('x')\"\n+    \"\\\\$\\[0-9\\]* = 122 'z'\"\n \n gdb_test \"print BBB::CCC::xyzq('x')\" \\\n-    \"\\\\$\\[0-9\\]* = 122 'z'\" \\\n-    \"print BBB::CCC::xyzq('x')\"\n+    \"\\\\$\\[0-9\\]* = 122 'z'\"\n        \n # Break on a function in a nested namespace\n \n@@ -146,12 +140,10 @@ gdb_test \"break ::BBB::CCC::xyzq\" \\\n # Print address of a function in a class in a namespace\n \n gdb_test \"print 'BBB::Class::xyzq'\" \\\n-    \"\\\\$\\[0-9\\]* = \\{char \\\\((BBB::|)Class \\\\*( const|), (char|int)\\\\)\\} $hex <BBB::Class::xyzq\\\\(char\\\\)>\" \\\n-    \"print 'BBB::Class::xyzq'\"\n+    \"\\\\$\\[0-9\\]* = \\{char \\\\((BBB::|)Class \\\\*( const|), (char|int)\\\\)\\} $hex <BBB::Class::xyzq\\\\(char\\\\)>\"\n \n gdb_test \"print BBB::Class::xyzq\" \\\n-    \"\\\\$\\[0-9\\]* = \\{char \\\\((BBB::|)Class \\\\*( const|), (char|int)\\\\)\\} $hex <BBB::Class::xyzq\\\\(char\\\\)>\" \\\n-    \"print BBB::Class::xyzq\"\n+    \"\\\\$\\[0-9\\]* = \\{char \\\\((BBB::|)Class \\\\*( const|), (char|int)\\\\)\\} $hex <BBB::Class::xyzq\\\\(char\\\\)>\"\n \n # Break on a function in a class in a namespace\n "
    },
    {
      "sha": "1109cff8c2fe6195f07dd6e99a45042bfcbafa8e",
      "filename": "gdb/testsuite/gdb.cp/non-trivial-retval.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/non-trivial-retval.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/non-trivial-retval.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/non-trivial-retval.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -30,8 +30,8 @@ if {![runto_main]} {\n gdb_breakpoint [gdb_get_line_number \"Break here\"]\n gdb_continue_to_breakpoint \"Break here\"\n \n-gdb_test \"p f1 (i1, i2)\" \".* = {a = 123}\" \"p f1 (i1, i2)\"\n-gdb_test \"p f2 (i1, i2)\" \".* = {b = 123}\" \"p f2 (i1, i2)\"\n-gdb_test \"p f22 (i1, i2)\" \".* = {b1 = 123}\" \"p f22 (i1, i2)\"\n-gdb_test \"p f3 (i1, i2)\" \".* = {.* c = 123}\" \"p f3 (i1, i2)\"\n-gdb_test \"p f4 (i1, i2)\" \".* = {.* e = 123}\" \"p f4 (i1, i2)\"\n+gdb_test \"p f1 (i1, i2)\" \".* = {a = 123}\"\n+gdb_test \"p f2 (i1, i2)\" \".* = {b = 123}\"\n+gdb_test \"p f22 (i1, i2)\" \".* = {b1 = 123}\"\n+gdb_test \"p f3 (i1, i2)\" \".* = {.* c = 123}\"\n+gdb_test \"p f4 (i1, i2)\" \".* = {.* e = 123}\""
    },
    {
      "sha": "5d7a5c772968c952e690e85e43f4ec46c605f079",
      "filename": "gdb/testsuite/gdb.cp/overload.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/overload.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/overload.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/overload.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -372,21 +372,17 @@ gdb_test \"print intToChar(1)\" \"\\\\$\\[0-9\\]+ = 297\"\n \n # Test expression evaluation with overloaded methods\n gdb_test \"print foo::overload1arg\" \\\n-    \"non-unique member `overload1arg' requires type instantiation\" \\\n-    \"print foo::overload1arg\"\n+    \"non-unique member `overload1arg' requires type instantiation\"\n \n gdb_test \"print foo::overload1arg(char***)\" \\\n-    \"no member function matches that type instantiation\" \\\n-    \"print foo::overload1arg(char***)\"\n+    \"no member function matches that type instantiation\"\n \n gdb_test \"print foo::overload1arg(void)\" \\\n-    \"\\\\$$decimal = {int \\\\(foo \\\\*( const|)\\\\)} $hex <foo::overload1arg\\\\(\\\\)>\" \\\n-    \"print foo::overload1arg(void)\"\n+    \"\\\\$$decimal = {int \\\\(foo \\\\*( const|)\\\\)} $hex <foo::overload1arg\\\\(\\\\)>\"\n \n foreach t [list char \"signed char\" \"unsigned char\" \"short\" \\\n \t       \"unsigned short\" int \"unsigned int\" long \"unsigned long\" \\\n \t       float double] {\n     gdb_test \"print foo::overload1arg($t)\" \\\n-\t\"\\\\$$decimal = {int \\\\(foo \\\\*( const|), $t\\\\)} $hex <foo::overload1arg\\\\($t\\\\)>\" \\\n-\t\"print foo::overload1arg($t)\"\n+\t\"\\\\$$decimal = {int \\\\(foo \\\\*( const|), $t\\\\)} $hex <foo::overload1arg\\\\($t\\\\)>\"\n }"
    },
    {
      "sha": "9a1608e6f2e88c3bf0211d0a76cde19129e7ad64",
      "filename": "gdb/testsuite/gdb.cp/pr17132.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/pr17132.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/pr17132.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/pr17132.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -30,11 +30,11 @@ if {![runto_main]} {\n gdb_breakpoint [gdb_get_line_number \"Break here\"]\n gdb_continue_to_breakpoint \"Break here\"\n \n-gdb_test \"ptype a_ptr->func ()\" \".* = int\" \"ptype a_ptr->func ()\"\n-gdb_test \"ptype a->func ()\" \".* = int\" \"ptype a->func ()\"\n+gdb_test \"ptype a_ptr->func ()\" \".* = int\"\n+gdb_test \"ptype a->func ()\" \".* = int\"\n gdb_test \"p sizeof (a_ptr->func()) == sizeof (int)\" \".* = true\" \\\n   \"p sizeof (a_ptr->func())\"\n gdb_test \"p sizeof (a->func()) == sizeof (int)\" \".* = true\" \\\n   \"p sizeof (a->func())\"\n-gdb_test \"p 1 && a->func()\" \".* = true\" \"p 1 && a->func()\"\n-gdb_test \"p 0 || a->func()\" \".* = true\" \"p 0 || a->func()\"\n+gdb_test \"p 1 && a->func()\" \".* = true\"\n+gdb_test \"p 0 || a->func()\" \".* = true\""
    },
    {
      "sha": "18ff52be670c71121fbc896b91970ae37d777dcc",
      "filename": "gdb/testsuite/gdb.cp/re-set-overloaded.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/re-set-overloaded.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/re-set-overloaded.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/re-set-overloaded.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -36,7 +36,7 @@ clean_restart $testfile\n gdb_load_shlib ${sofile}\n \n gdb_test_no_output \"set breakpoint pending yes\"\n-gdb_test \"break C::C\" {Breakpoint [0-9]+ \\(C::C\\) pending\\.} \"break C::C\"\n+gdb_test \"break C::C\" {Breakpoint [0-9]+ \\(C::C\\) pending\\.}\n gdb_test_no_output {set variable $brk = $bpnum}\n \n # runto or runto_main would call delete_breakpoints."
    },
    {
      "sha": "4db2cc4b1876019d3b14f20af2ed2ccf495b4ba9",
      "filename": "gdb/testsuite/gdb.cp/rvalue-ref-types.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/rvalue-ref-types.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/rvalue-ref-types.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/rvalue-ref-types.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -42,7 +42,7 @@ gdb_test \"up\" \".*main.*\" \"up from marker1 1\"\n \n gdb_test \"print rrt\" \" = \\\\(short( int)? &&\\\\) @$hex: -1\" \"print value of rrt\" \n \n-gdb_test \"ptype rrt\" \"type = short( int)? &&\" \"ptype rrt\"\n+gdb_test \"ptype rrt\" \"type = short( int)? &&\"\n \n gdb_test \"print *rrpt\" \".$decimal = -1\" \"print value of *rrpt\"\n \n@@ -52,11 +52,11 @@ gdb_test \"print *rrpt\" \".$decimal = -1\" \"print value of *rrpt\"\n \n gdb_test \"x /hd rrpt\" \"$hex:\\[ \\t\\]*-1\" \"examine value at rrpt\"\n \n-gdb_test \"ptype rrpt\" \"type = short( int)? \\\\*&&\" \"ptype rrpt\"\n+gdb_test \"ptype rrpt\" \"type = short( int)? \\\\*&&\"\n \n gdb_test \"print rrat\\[0\\]\" \".$decimal = 0\" \"print value of rrat\\[0\\]\"\n \n-gdb_test \"ptype rrat\" \"type = short( int)? \\\\\\(&&\\\\\\)\\\\\\[4\\\\\\]\" \"ptype rrat\"\n+gdb_test \"ptype rrat\" \"type = short( int)? \\\\\\(&&\\\\\\)\\\\\\[4\\\\\\]\"\n \n gdb_test \"print rrat\\[1\\]\" \".$decimal = 1\" \"print value of rrat\\[1\\]\"\n gdb_test \"print rrat\\[2\\]\" \".$decimal = 2\" \"print value of rrat\\[2\\]\"\n@@ -74,17 +74,17 @@ gdb_test \"ptype rrC\" \"type = char &&\"\n \n gdb_test \"ptype rrUC\" \"type = unsigned char &&\"\n \n-gdb_test \"ptype rrS\" \"type = short( int)? &&\" \"ptype rrS\"\n+gdb_test \"ptype rrS\" \"type = short( int)? &&\"\n \n-gdb_test \"ptype rrUS\" \"type = unsigned short( int)? &&\" \"ptype rrUS\"\n+gdb_test \"ptype rrUS\" \"type = unsigned short( int)? &&\"\n \n gdb_test \"ptype rrI\" \"type = int &&\"\n \n gdb_test \"ptype rrUI\" \"type = unsigned int &&\"\n \n-gdb_test \"ptype rrL\" \"type = long( int)? &&\" \"ptype rrL\"\n+gdb_test \"ptype rrL\" \"type = long( int)? &&\"\n \n-gdb_test \"ptype rrUL\" \"type = unsigned long( int)? &&\" \"ptype rrUL\"\n+gdb_test \"ptype rrUL\" \"type = unsigned long( int)? &&\"\n \n gdb_test \"ptype rrF\" \"type = float &&\"\n "
    },
    {
      "sha": "5825d21f2de70f8fffda2ab7cb4e2a8518ad9b03",
      "filename": "gdb/testsuite/gdb.cp/templates.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/templates.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e96ec2bab75a943e1666497b1389e297775af5a8/gdb/testsuite/gdb.cp/templates.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/templates.exp?ref=e96ec2bab75a943e1666497b1389e297775af5a8",
      "patch": "@@ -577,8 +577,7 @@ gdb_test_multiple \"ptype/r Garply<Garply<char> >\" \"ptype Garply<Garply<char> >\"\n # print out a function from a nested template name\n \n gdb_test \"print Garply<Garply<char> >::garply\" \\\n-    \"\\\\$\\[0-9\\]* = \\\\{(class |)Garply<char> \\\\((class |)Garply<Garply<char> > \\\\*(| const), int, (class |)Garply<char>\\\\)\\\\} $hex <Garply<Garply<char>\\[ \\t\\]*>::garply\\\\(int, (class |)Garply<char>\\\\)>\" \\\n-    \"print Garply<Garply<char> >::garply\"\n+    \"\\\\$\\[0-9\\]* = \\\\{(class |)Garply<char> \\\\((class |)Garply<Garply<char> > \\\\*(| const), int, (class |)Garply<char>\\\\)\\\\} $hex <Garply<Garply<char>\\[ \\t\\]*>::garply\\\\(int, (class |)Garply<char>\\\\)>\"\n \n # djb - 06-03-2000\n # Now should work fine"
    }
  ]
}