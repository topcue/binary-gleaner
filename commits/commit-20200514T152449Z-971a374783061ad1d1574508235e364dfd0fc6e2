{
  "sha": "971a374783061ad1d1574508235e364dfd0fc6e2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTcxYTM3NDc4MzA2MWFkMWQxNTc0NTA4MjM1ZTM2NGRmZDBmYzZlMg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-14T15:24:49Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-14T15:24:49Z"
    },
    "message": "[gdb/testsuite] Split up multi-exec test-cases\n\nWith test-case gdb.base/align.exp and target board native-gdbserver, we run\ninto:\n...\n(gdb) file outputs/gdb.base/align/c/align^M\nReading symbols from outputs/gdb.base/align/c/align...^M\n(gdb) delete breakpoints^M\n(gdb) info breakpoints^M\nNo breakpoints or watchpoints.^M\n(gdb) break main^M\nBreakpoint 1 at 0x4004ab: file outputs/gdb.base/align/c/align.c, line 838.^M\n(gdb) kill^M\nThe program is not being run.^M\n(gdb) spawn gdbserver --once localhost:2592 outputs/gdb.base/align/align^M\nProcess outputs/gdb.base/align/align created; pid = 6946^M\nListening on port 2592^M\ntarget remote localhost:2592^M\nRemote debugging using localhost:2592^M\nwarning: Mismatch between current exec-file outputs/gdb.base/align/c/align^M\nand automatically determined exec-file outputs/gdb.base/align/align^M\nexec-file-mismatch handling is currently \"ask\"^M\nLoad new symbol table from \"outputs/gdb.base/align/align\"? (y or n) Quit^M\n(gdb) ERROR: test suppressed\n...\n\nFix this by turning this and similar test-cases into regular, single\nexecutable test-cases.\n\nThis fixes 100+ FAILs with target board native-gdbserver.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-05-14  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/align.exp: Split into ...\n\t* gdb.base/align.exp.in: ...\n\t* gdb.base/align-c++.exp: ...\n\t* gdb.base/align-c.exp: ... these.\n\t* gdb.base/infcall-nested-structs.exp: Split into ...\n\t* gdb.base/infcall-nested-structs.exp.in: ...\n\t* gdb.base/infcall-nested-structs-c++.exp: ...\n\t* gdb.base/infcall-nested-structs-c.exp: ... these.\n\t* gdb.base/info-types.exp: Split into ...\n\t* gdb.base/info-types.exp.in: ...\n\t* gdb.base/info-types-c++.exp: ...\n\t* gdb.base/info-types-c.exp: ... these.\n\t* gdb.base/max-depth.exp: Split into ...\n\t* gdb.base/max-depth.exp.in: ...\n\t* gdb.base/max-depth-c++.exp: ...\n\t* gdb.base/max-depth-c.exp: ... these.\n\t* gdb.cp/infcall-nodebug.exp: Split into ...\n\t* gdb.cp/infcall-nodebug.exp.in: ...\n\t* gdb.cp/infcall-nodebug-c++-d0.exp: ...\n\t* gdb.cp/infcall-nodebug-c++-d1.exp: ...\n\t* gdb.cp/infcall-nodebug-c-d0.exp: ...\n\t* gdb.cp/infcall-nodebug-c-d1.exp: ... these.",
    "tree": {
      "sha": "3504af430b52c2bedde6932eed5bb51f1c742e74",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3504af430b52c2bedde6932eed5bb51f1c742e74"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/971a374783061ad1d1574508235e364dfd0fc6e2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/971a374783061ad1d1574508235e364dfd0fc6e2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/971a374783061ad1d1574508235e364dfd0fc6e2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/971a374783061ad1d1574508235e364dfd0fc6e2/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a05575d39a5348bd9979fc09e658a03ff22722b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a05575d39a5348bd9979fc09e658a03ff22722b9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a05575d39a5348bd9979fc09e658a03ff22722b9"
    }
  ],
  "stats": {
    "total": 412,
    "additions": 307,
    "deletions": 105
  },
  "files": [
    {
      "sha": "5f1b04f6c349846e4e27e8ca21b2618d4911e08a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -1,3 +1,28 @@\n+2020-05-14  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/align.exp: Split into ...\n+\t* gdb.base/align.exp.in: ...\n+\t* gdb.base/align-c++.exp: ...\n+\t* gdb.base/align-c.exp: ... these.\n+\t* gdb.base/infcall-nested-structs.exp: Split into ...\n+\t* gdb.base/infcall-nested-structs.exp.in: ...\n+\t* gdb.base/infcall-nested-structs-c++.exp: ...\n+\t* gdb.base/infcall-nested-structs-c.exp: ... these.\n+\t* gdb.base/info-types.exp: Split into ...\n+\t* gdb.base/info-types.exp.in: ...\n+\t* gdb.base/info-types-c++.exp: ...\n+\t* gdb.base/info-types-c.exp: ... these.\n+\t* gdb.base/max-depth.exp: Split into ...\n+\t* gdb.base/max-depth.exp.in: ...\n+\t* gdb.base/max-depth-c++.exp: ...\n+\t* gdb.base/max-depth-c.exp: ... these.\n+\t* gdb.cp/infcall-nodebug.exp: Split into ...\n+\t* gdb.cp/infcall-nodebug.exp.in: ...\n+\t* gdb.cp/infcall-nodebug-c++-d0.exp: ...\n+\t* gdb.cp/infcall-nodebug-c++-d1.exp: ...\n+\t* gdb.cp/infcall-nodebug-c-d0.exp: ...\n+\t* gdb.cp/infcall-nodebug-c-d1.exp: ... these.\n+\n 2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \t    Pedro Alves  <palves@redhat.com>\n "
    },
    {
      "sha": "09632d8bfaa3528fbecf0a7f4c0e5fbd72479548",
      "filename": "gdb/testsuite/gdb.base/align-c++.exp",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/align-c++.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/align-c++.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/align-c++.exp?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -0,0 +1,27 @@\n+# Copyright 2018-2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# This file is part of the gdb testsuite\n+\n+# This tests that C++11 alignof works in gdb, and that it agrees with the\n+# compiler.\n+\n+# Only test C++ if we are able.\n+if { [skip_cplus_tests] || [get_compiler_info \"c++\"] } {\n+    return -1\n+}\n+set lang c++\n+\n+source $srcdir/$subdir/align.exp.in"
    },
    {
      "sha": "d7852f4ea83381d905d19409fdc88eebadcbbfe3",
      "filename": "gdb/testsuite/gdb.base/align-c.exp",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/align-c.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/align-c.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/align-c.exp?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -0,0 +1,23 @@\n+# Copyright 2018-2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# This file is part of the gdb testsuite\n+\n+# This tests that C11 _Alignof works in gdb, and that it agrees with the\n+# compiler.\n+\n+set lang c\n+\n+source $srcdir/$subdir/align.exp.in"
    },
    {
      "sha": "0653371c04b11e821e2fb2c09ae69a63830d69a9",
      "filename": "gdb/testsuite/gdb.base/align.exp.in",
      "status": "renamed",
      "additions": 3,
      "deletions": 23,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/align.exp.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/align.exp.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/align.exp.in?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -15,16 +15,6 @@\n \n # This file is part of the gdb testsuite\n \n-# This tests that C11 _Alignof and C++11 alignof works in gdb, and\n-# that it agrees with the compiler.\n-\n-# Only test C++ if we are able.  Always use C.\n-if { [skip_cplus_tests] || [get_compiler_info \"c++\"] } {\n-    set lang {c}\n-} else {\n-    set lang {c c++}\n-}\n-\n # The types we're going to test.\n \n set typelist {\n@@ -60,7 +50,7 @@ proc prepare_test_source_file { lang } {\n \tset align_func \"_Alignof\"\n     }\n \n-    set filename [standard_output_file \"$lang/align.$suffix\"]\n+    set filename [standard_output_file \"align.$suffix\"]\n     set outfile [open $filename w]\n \n     # Prologue.\n@@ -140,7 +130,7 @@ proc run_alignment_test { lang } {\n \tlappend flags \"additional_flags=-std=c++11\"\n     }\n     standard_testfile $filename\n-    if {[prepare_for_testing \"failed to prepare\" \"$lang/$testfile\" $srcfile $flags]} {\n+    if {[prepare_for_testing \"failed to prepare\" \"$testfile\" $srcfile $flags]} {\n \treturn -1\n     }\n \n@@ -186,14 +176,4 @@ proc run_alignment_test { lang } {\n     }\n }\n \n-# Create nested 'c' and 'c++' directories within this tests directory.\n-foreach l $lang {\n-    set dir \"$l\"\n-    remote_exec host \"rm -rf [standard_output_file ${dir}]\"\n-    remote_exec host \"mkdir -p [standard_output_file ${dir}]\"\n-}\n-\n-# Now run the test for each language.\n-foreach_with_prefix l $lang {\n-    run_alignment_test $l\n-}\n+run_alignment_test $lang",
      "previous_filename": "gdb/testsuite/gdb.base/align.exp"
    },
    {
      "sha": "9da0621384efdd9c968caa8f70d5db76ceff22f3",
      "filename": "gdb/testsuite/gdb.base/infcall-nested-structs-c++.exp",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/infcall-nested-structs-c++.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/infcall-nested-structs-c++.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/infcall-nested-structs-c++.exp?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -0,0 +1,24 @@\n+# This testcase is part of GDB, the GNU debugger.\n+\n+# Copyright 2018-2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Only test C++ if we are able.\n+if { [skip_cplus_tests] || [get_compiler_info \"c++\"] } {\n+    return -1\n+}\n+set lang c++\n+\n+source $srcdir/$subdir/infcall-nested-structs.exp.in"
    },
    {
      "sha": "a715c5bd0d2880fa196f815210b48a089419d30a",
      "filename": "gdb/testsuite/gdb.base/infcall-nested-structs-c.exp",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/infcall-nested-structs-c.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/infcall-nested-structs-c.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/infcall-nested-structs-c.exp?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -0,0 +1,20 @@\n+# This testcase is part of GDB, the GNU debugger.\n+\n+# Copyright 2018-2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+set lang {c}\n+\n+source $srcdir/$subdir/infcall-nested-structs.exp.in"
    },
    {
      "sha": "f7409612f80ed95d8e53542e800cae90e893f12f",
      "filename": "gdb/testsuite/gdb.base/infcall-nested-structs.exp.in",
      "status": "renamed",
      "additions": 4,
      "deletions": 23,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/infcall-nested-structs.exp.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/infcall-nested-structs.exp.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/infcall-nested-structs.exp.in?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -15,7 +15,6 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-\n # Some targets can't call functions, so don't even bother with this\n # test.\n \n@@ -24,20 +23,6 @@ if [target_info exists gdb,cannot_call_functions] {\n     continue\n }\n \n-# Only test C++ if we are able.  Always use C.\n-if { [skip_cplus_tests] || [get_compiler_info \"c++\"] } {\n-    set lang {c}\n-} else {\n-    set lang {c c++}\n-}\n-\n-foreach l $lang {\n-    set dir \"$l\"\n-    remote_exec host \"rm -rf [standard_output_file ${dir}]\"\n-    remote_exec host \"mkdir -p [standard_output_file ${dir}]\"\n-}\n-\n-\n set int_types { tc ts ti tl tll }\n set float_types { tf td tld }\n set complex_types { tfc tdc tldc }\n@@ -67,8 +52,7 @@ proc start_nested_structs_test { lang types } {\n     global srcdir\n     global compile_flags\n \n-    standard_testfile .c\n-    set dir \"$lang\"\n+    standard_testfile infcall-nested-structs.c\n \n     # Create the additional flags\n     set flags $compile_flags\n@@ -82,7 +66,6 @@ proc start_nested_structs_test { lang types } {\n \tappend testfile \"-\" \"$t\"\n     }\n \n-    set binfile [standard_output_file ${dir}/${testfile}]\n     if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable \"${flags}\"] != \"\" } {\n \tunresolved \"failed to compile\"\n \treturn 0\n@@ -161,11 +144,9 @@ proc start_gdb_and_run_tests { lang types } {\n \tappend prefix \"-\" \"${t}\"\n     }\n \n-    foreach_with_prefix l $lang {\n-\twith_test_prefix $prefix {\n-\t    if { [start_nested_structs_test $l $types] } {\n-\t\trun_tests $l $prefix\n-\t    }\n+    with_test_prefix $prefix {\n+\tif { [start_nested_structs_test $lang $types] } {\n+\t    run_tests $lang $prefix\n \t}\n     }\n }",
      "previous_filename": "gdb/testsuite/gdb.base/infcall-nested-structs.exp"
    },
    {
      "sha": "4f44369fe98cc6b24e05985dcf1f01982943273c",
      "filename": "gdb/testsuite/gdb.base/info-types-c++.exp",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/info-types-c++.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/info-types-c++.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-types-c++.exp?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -0,0 +1,22 @@\n+# Copyright 2019-2020 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Only test C++ if we are able.\n+if { [skip_cplus_tests] || [get_compiler_info \"c++\"] } {\n+    return -1\n+}\n+set lang c++\n+\n+source $srcdir/$subdir/info-types.exp.in"
    },
    {
      "sha": "800d6389a4bdfa6e80c1659e9c6a56788dd7734b",
      "filename": "gdb/testsuite/gdb.base/info-types-c.exp",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/info-types-c.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/info-types-c.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-types-c.exp?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -0,0 +1,18 @@\n+# Copyright 2019-2020 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+set lang {c}\n+\n+source $srcdir/$subdir/info-types.exp.in"
    },
    {
      "sha": "8c065b1c5f4e16d14dd103f72003f4305b89f561",
      "filename": "gdb/testsuite/gdb.base/info-types.exp.in",
      "status": "renamed",
      "additions": 3,
      "deletions": 18,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/info-types.exp.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/info-types.exp.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-types.exp.in?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -16,19 +16,6 @@\n # Check that 'info types' produces the expected output for an inferior\n # containing a number of different types.\n \n-# Only test C++ if we are able.  Always use C.\n-if { [skip_cplus_tests] || [get_compiler_info \"c++\"] } {\n-    set lang {c}\n-} else {\n-    set lang {c c++}\n-}\n-\n-foreach l $lang {\n-    set dir \"$l\"\n-    remote_exec host \"rm -rf [standard_output_file ${dir}]\"\n-    remote_exec host \"mkdir -p [standard_output_file ${dir}]\"\n-}\n-\n # Run 'info types' test, compiling the test file for language LANG,\n # which should be either 'c' or 'c++'.\n proc run_test { lang } {\n@@ -39,10 +26,10 @@ proc run_test { lang } {\n     global srcdir\n     global compile_flags\n \n-    standard_testfile .c\n+    standard_testfile info-types.c\n \n     if {[prepare_for_testing \"failed to prepare\" \\\n-\t     \"${lang}/${testfile}\" $srcfile \"debug $lang\"]} {\n+\t     \"${testfile}\" $srcfile \"debug $lang\"]} {\n \treturn -1\n     }\n \n@@ -140,6 +127,4 @@ proc run_test { lang } {\n     }\n }\n \n-foreach_with_prefix l $lang {\n-    run_test $l\n-}\n+run_test $lang",
      "previous_filename": "gdb/testsuite/gdb.base/info-types.exp"
    },
    {
      "sha": "b88b2c118d8503b919af4c2cdf4a688e56ee0762",
      "filename": "gdb/testsuite/gdb.base/max-depth-c++.exp",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/max-depth-c++.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/max-depth-c++.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/max-depth-c++.exp?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -0,0 +1,22 @@\n+# Copyright 2019-2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Only test C++ if we are able.\n+if { [skip_cplus_tests] || [get_compiler_info \"c++\"] } {\n+    return -1\n+}\n+set lang c++\n+\n+source $srcdir/$subdir/max-depth.exp.in"
    },
    {
      "sha": "3bd93098d2cc6d1c9cb71f64cda5965406736200",
      "filename": "gdb/testsuite/gdb.base/max-depth-c.exp",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/max-depth-c.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/max-depth-c.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/max-depth-c.exp?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -0,0 +1,18 @@\n+# Copyright 2019-2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+set lang {c}\n+\n+source $srcdir/$subdir/max-depth.exp.in"
    },
    {
      "sha": "8c0d7120d171a98c7b2e7437e1e963fe7958ac93",
      "filename": "gdb/testsuite/gdb.base/max-depth.exp.in",
      "status": "renamed",
      "additions": 2,
      "deletions": 19,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/max-depth.exp.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.base/max-depth.exp.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/max-depth.exp.in?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -15,26 +15,13 @@\n \n # Tests GDB's handling of 'set print max-depth'.\n \n-# Only test C++ if we are able.  Always use C.\n-if { [skip_cplus_tests] || [get_compiler_info \"c++\"] } {\n-    set lang {c}\n-} else {\n-    set lang {c c++}\n-}\n-\n-foreach l $lang {\n-    set dir \"$l\"\n-    remote_exec host \"rm -rf [standard_output_file ${dir}]\"\n-    remote_exec host \"mkdir -p [standard_output_file ${dir}]\"\n-}\n-\n proc compile_and_run_tests { lang } {\n     global testfile\n     global srcfile\n     global binfile\n     global hex\n \n-    standard_testfile .c\n+    standard_testfile max-depth.c\n \n     # Create the additional flags.\n     set flags \"debug\"\n@@ -43,8 +30,6 @@ proc compile_and_run_tests { lang } {\n \tlappend flags \"additional_flags=-std=c++11\"\n     }\n \n-    set dir \"$lang\"\n-    set binfile [standard_output_file ${dir}/${testfile}]\n     if { [prepare_for_testing \"failed to prepare\" \"${binfile}\" \"${srcfile}\" \"${flags}\"] } {\n \treturn 0\n     }\n@@ -163,6 +148,4 @@ proc compile_and_run_tests { lang } {\n     }\n }\n \n-foreach_with_prefix l $lang {\n-    compile_and_run_tests $l\n-}\n+compile_and_run_tests $lang",
      "previous_filename": "gdb/testsuite/gdb.base/max-depth.exp"
    },
    {
      "sha": "f06ab0862882ca1d231f807196885b92fab9f16e",
      "filename": "gdb/testsuite/gdb.cp/infcall-nodebug-c++-d0.exp",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.cp/infcall-nodebug-c++-d0.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.cp/infcall-nodebug-c++-d0.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/infcall-nodebug-c++-d0.exp?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -0,0 +1,25 @@\n+# This testcase is part of GDB, the GNU debugger.\n+# Copyright 2018-2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Only test C++ if we are able.  Always use C.\n+if { [skip_cplus_tests] || [get_compiler_info \"c++\"] } {\n+    return -1\n+}\n+set lang {c++}\n+\n+set debug nodebug\n+\n+source $srcdir/$subdir/infcall-nodebug.exp.in"
    },
    {
      "sha": "d9dd14faf96542994e8d240f3bc74fc9cc5dd9b3",
      "filename": "gdb/testsuite/gdb.cp/infcall-nodebug-c++-d1.exp",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.cp/infcall-nodebug-c++-d1.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.cp/infcall-nodebug-c++-d1.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/infcall-nodebug-c++-d1.exp?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -0,0 +1,25 @@\n+# This testcase is part of GDB, the GNU debugger.\n+# Copyright 2018-2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Only test C++ if we are able.  Always use C.\n+if { [skip_cplus_tests] || [get_compiler_info \"c++\"] } {\n+    return -1\n+}\n+set lang {c++}\n+\n+set debug debug\n+\n+source $srcdir/$subdir/infcall-nodebug.exp.in"
    },
    {
      "sha": "cd65dd036a7534c3049f5afd64488ab8dafc793f",
      "filename": "gdb/testsuite/gdb.cp/infcall-nodebug-c-d0.exp",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.cp/infcall-nodebug-c-d0.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.cp/infcall-nodebug-c-d0.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/infcall-nodebug-c-d0.exp?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -0,0 +1,21 @@\n+# This testcase is part of GDB, the GNU debugger.\n+# Copyright 2018-2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+set lang {c}\n+\n+set debug nodebug\n+\n+source $srcdir/$subdir/infcall-nodebug.exp.in"
    },
    {
      "sha": "4cb26ad3fd2a9d23687ed68ff5d52c2c454c7f63",
      "filename": "gdb/testsuite/gdb.cp/infcall-nodebug-c-d1.exp",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.cp/infcall-nodebug-c-d1.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.cp/infcall-nodebug-c-d1.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/infcall-nodebug-c-d1.exp?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -0,0 +1,21 @@\n+# This testcase is part of GDB, the GNU debugger.\n+# Copyright 2018-2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+set lang {c}\n+\n+set debug debug\n+\n+source $srcdir/$subdir/infcall-nodebug.exp.in"
    },
    {
      "sha": "23466196270376691cbb20bd55604e5a95425e8d",
      "filename": "gdb/testsuite/gdb.cp/infcall-nodebug.exp.in",
      "status": "renamed",
      "additions": 4,
      "deletions": 22,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.cp/infcall-nodebug.exp.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/971a374783061ad1d1574508235e364dfd0fc6e2/gdb/testsuite/gdb.cp/infcall-nodebug.exp.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/infcall-nodebug.exp.in?ref=971a374783061ad1d1574508235e364dfd0fc6e2",
      "patch": "@@ -24,13 +24,6 @@ if [target_info exists gdb,cannot_call_functions] {\n     continue\n }\n \n-# Only test C++ if we are able.  Always use C.\n-if { [skip_cplus_tests] || [get_compiler_info \"c++\"] } {\n-    set lang {c}\n-} else {\n-    set lang {c c++}\n-}\n-\n set main_basename infcall-nodebug-main\n set lib_basename infcall-nodebug-lib\n standard_testfile ${main_basename}.c ${lib_basename}.c\n@@ -53,19 +46,13 @@ proc build_and_run_test { lang symbols } {\n \tset debug_flags \"\"\n     }\n \n-    # Setup directory.\n-\n-    set dir \"$lang-$symbols\"\n-    remote_exec build \"rm -rf [standard_output_file ${dir}]\"\n-    remote_exec build \"mkdir -p [standard_output_file ${dir}]\"\n-\n     # Compile both files to objects, then link together.\n \n     set main_flags \"$lang debug\"\n     set lib_flags \"$lang $debug_flags\"\n-    set main_o [standard_output_file ${dir}/${main_basename}.o]\n-    set lib_o [standard_output_file ${dir}/${lib_basename}.o]\n-    set binfile [standard_output_file ${dir}/${testfile}]\n+    set main_o [standard_output_file ${main_basename}.o]\n+    set lib_o [standard_output_file ${lib_basename}.o]\n+    set binfile [standard_output_file ${testfile}]\n \n     if { [gdb_compile $mainsrc $main_o object ${main_flags}] != \"\" } {\n \tuntested \"failed to compile main file to object\"\n@@ -111,9 +98,4 @@ proc build_and_run_test { lang symbols } {\n \n }\n \n-foreach_with_prefix l $lang {\n-    foreach_with_prefix s {debug nodebug} {\n-\tbuild_and_run_test $l $s\n-    }\n-}\n-\n+build_and_run_test $lang $debug",
      "previous_filename": "gdb/testsuite/gdb.cp/infcall-nodebug.exp"
    }
  ]
}