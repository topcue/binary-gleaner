{
  "sha": "f49bb598d96fd66bb6f2e9b14951f094e3d29396",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjQ5YmI1OThkOTZmZDY2YmI2ZjJlOWIxNDk1MWYwOTRlM2QyOTM5Ng==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T13:47:12Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:37:35Z"
    },
    "message": "[PATCH 55/57][Arm][OBJDUMP] Add support for MVE instructions: vmul, vmulh, vrmulh and vneg\n\nopcodes/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\t    Michael Collison <michael.collison@arm.com>\n\n\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n\t(enum mve_instructions): Likewise.\n\t(is_mve_encoding_conflict): Handle new instructions.\n\t(is_mve_undefined): Likewise.\n\t(is_mve_unpredictable): Likewise.\n\t(print_mve_size): Likewise.",
    "tree": {
      "sha": "9fcf0916e75581a2095042c76f4a404f1b0192c3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9fcf0916e75581a2095042c76f4a404f1b0192c3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f49bb598d96fd66bb6f2e9b14951f094e3d29396",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f49bb598d96fd66bb6f2e9b14951f094e3d29396",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f49bb598d96fd66bb6f2e9b14951f094e3d29396",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f49bb598d96fd66bb6f2e9b14951f094e3d29396/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "56858bea624ab405d53379ae25f433880ecafc68",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56858bea624ab405d53379ae25f433880ecafc68",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/56858bea624ab405d53379ae25f433880ecafc68"
    }
  ],
  "stats": {
    "total": 83,
    "additions": 83,
    "deletions": 0
  },
  "files": [
    {
      "sha": "24f951d14e137daa8a8e486b4414fb3c189ecfca",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f49bb598d96fd66bb6f2e9b14951f094e3d29396/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f49bb598d96fd66bb6f2e9b14951f094e3d29396/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=f49bb598d96fd66bb6f2e9b14951f094e3d29396",
      "patch": "@@ -1,3 +1,13 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (thumb32_opcodes): Add new instructions.\n+\t(enum mve_instructions): Likewise.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_undefined): Likewise.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_size): Likewise.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \t    Michael Collison <michael.collison@arm.com>\n "
    },
    {
      "sha": "ff40863d93cdc71c240c1a88e7cc75f13a45607c",
      "filename": "opcodes/arm-dis.c",
      "status": "modified",
      "additions": 73,
      "deletions": 0,
      "changes": 73,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f49bb598d96fd66bb6f2e9b14951f094e3d29396/opcodes/arm-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f49bb598d96fd66bb6f2e9b14951f094e3d29396/opcodes/arm-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arm-dis.c?ref=f49bb598d96fd66bb6f2e9b14951f094e3d29396",
      "patch": "@@ -245,6 +245,14 @@ enum mve_instructions\n   MVE_VMINV,\n   MVE_VMINAV,\n   MVE_VMLA,\n+  MVE_VMUL_FP_T1,\n+  MVE_VMUL_FP_T2,\n+  MVE_VMUL_VEC_T1,\n+  MVE_VMUL_VEC_T2,\n+  MVE_VMULH,\n+  MVE_VRMULH,\n+  MVE_VNEG_FP,\n+  MVE_VNEG_VEC,\n   MVE_NONE\n };\n \n@@ -2795,6 +2803,42 @@ static const struct mopcode32 mve_opcodes[] =\n    0xfeb00a40, 0xffbf0fd0,\n    \"vmovx.f16\\t%22,12-15F, %5,0-3F\"},\n \n+  /* Vector VMUL floating-point T1 variant.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+   MVE_VMUL_FP_T1,\n+   0xff000d50, 0xffa11f51,\n+   \"vmul%v.f%20s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n+\n+  /* Vector VMUL floating-point T2 variant.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+   MVE_VMUL_FP_T2,\n+   0xee310e60, 0xefb11f70,\n+   \"vmul%v.f%28s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n+\n+  /* Vector VMUL T1 variant.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMUL_VEC_T1,\n+   0xef000950, 0xff811f51,\n+   \"vmul%v.i%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n+\n+  /* Vector VMUL T2 variant.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMUL_VEC_T2,\n+   0xee011e60, 0xff811f70,\n+   \"vmul%v.i%20-21s\\t%13-15,22Q, %17-19,7Q, %0-3r\"},\n+\n+  /* Vector VMULH.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMULH,\n+   0xee010e01, 0xef811f51,\n+   \"vmulh%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n+\n+  /* Vector VRMULH.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VRMULH,\n+   0xee011e01, 0xef811f51,\n+   \"vrmulh%v.%u%20-21s\\t%13-15,22Q, %17-19,7Q, %1-3,5Q\"},\n+\n   /* Vector VMULL integer.  */\n   {ARM_FEATURE_COPROC (FPU_MVE),\n    MVE_VMULL_INT,\n@@ -2819,6 +2863,18 @@ static const struct mopcode32 mve_opcodes[] =\n    0xffb005c0, 0xffbf1fd1,\n    \"vmvn%v\\t%13-15,22Q, %1-3,5Q\"},\n \n+  /* Vector VNEG floating point.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE_FP),\n+   MVE_VNEG_FP,\n+   0xffb107c0, 0xffb31fd1,\n+   \"vneg%v.f%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n+\n+  /* Vector VNEG.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VNEG_VEC,\n+   0xffb103c0, 0xffb31fd1,\n+   \"vneg%v.s%18-19s\\t%13-15,22Q, %1-3,5Q\"},\n+\n   /* Vector VORN, vector bitwise or not.  */\n   {ARM_FEATURE_COPROC (FPU_MVE),\n    MVE_VORN,\n@@ -5183,6 +5239,9 @@ is_mve_encoding_conflict (unsigned long given,\n       else\n \treturn FALSE;\n \n+    case MVE_VMUL_VEC_T2:\n+    case MVE_VMULH:\n+    case MVE_VRMULH:\n     case MVE_VMLA:\n     case MVE_VMAX:\n     case MVE_VMIN:\n@@ -5480,6 +5539,7 @@ is_mve_undefined (unsigned long given, enum mve_instructions matched_insn,\n       else\n \treturn FALSE;\n \n+    case MVE_VMUL_VEC_T1:\n     case MVE_VABD_VEC:\n     case MVE_VADD_VEC_T1:\n     case MVE_VSUB_VEC_T1:\n@@ -5658,6 +5718,7 @@ is_mve_undefined (unsigned long given, enum mve_instructions matched_insn,\n \treturn FALSE;\n       }\n \n+    case MVE_VNEG_FP:\n     case MVE_VABS_FP:\n     case MVE_VCVT_BETWEEN_FP_INT:\n     case MVE_VCVT_FROM_FP_TO_INT:\n@@ -5820,6 +5881,7 @@ is_mve_undefined (unsigned long given, enum mve_instructions matched_insn,\n \telse\n \t  return FALSE;\n \n+    case MVE_VNEG_VEC:\n     case MVE_VCLS:\n     case MVE_VCLZ:\n       if (arm_decode_field (given, 18, 19) == 3)\n@@ -5889,6 +5951,8 @@ is_mve_unpredictable (unsigned long given, enum mve_instructions matched_insn,\n \treturn FALSE;\n       }\n \n+    case MVE_VMUL_FP_T2:\n+    case MVE_VMUL_VEC_T2:\n     case MVE_VMLA:\n     case MVE_VBRSR:\n     case MVE_VADD_FP_T2:\n@@ -7017,6 +7081,13 @@ print_mve_size (struct disassemble_info *info,\n     case MVE_VMINAV:\n     case MVE_VMLA:\n     case MVE_VMLAS:\n+    case MVE_VMUL_VEC_T1:\n+    case MVE_VMUL_VEC_T2:\n+    case MVE_VMULH:\n+    case MVE_VRMULH:\n+    case MVE_VMULL_INT:\n+    case MVE_VNEG_FP:\n+    case MVE_VNEG_VEC:\n     case MVE_VPT_VEC_T1:\n     case MVE_VPT_VEC_T2:\n     case MVE_VPT_VEC_T3:\n@@ -7080,6 +7151,8 @@ print_mve_size (struct disassemble_info *info,\n     case MVE_VMINNMA_FP:\n     case MVE_VMINNMV_FP:\n     case MVE_VMINNMAV_FP:\n+    case MVE_VMUL_FP_T1:\n+    case MVE_VMUL_FP_T2:\n     case MVE_VPT_FP_T1:\n     case MVE_VPT_FP_T2:\n       if (size == 0)"
    }
  ]
}