{
  "sha": "21b0982c778bf20de6fc42e7ae7735055cdd35c5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjFiMDk4MmM3NzhiZjIwZGU2ZmM0MmU3YWU3NzM1MDU1Y2RkMzVjNQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-04-03T19:41:00Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-04-14T11:13:06Z"
    },
    "message": "gdb/testsuite: Move helper function into lib/dwarf.exp\n\nEvery time I write a test making use of the DWARF assembler I end up\ncopying in the function get_func_info.  Duplicating code is bad, so\nlets put this function into lib/dwarf.exp and remove all of the\nduplicates.\n\nThere should be no changes in the testsuite behaviour after this\ncommit.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.dwarf2/dw2-inline-many-frames.exp (get_func_info): Delete.\n\t* gdb.dwarf2/dw2-inline-small-func.exp: Pass options to\n\tget_func_info.\n\t(get_func_info): Delete.\n\t* gdb.dwarf2/dw2-is-stmt-2.exp (get_func_info): Delete.\n\t* gdb.dwarf2/dw2-is-stmt.exp (get_func_info): Delete.\n\t* lib/dwarf.exp (get_func_info): New function.",
    "tree": {
      "sha": "134371c1283853cf730baf6a34f347c9f3a4beec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/134371c1283853cf730baf6a34f347c9f3a4beec"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/21b0982c778bf20de6fc42e7ae7735055cdd35c5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/21b0982c778bf20de6fc42e7ae7735055cdd35c5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/21b0982c778bf20de6fc42e7ae7735055cdd35c5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/21b0982c778bf20de6fc42e7ae7735055cdd35c5/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b1f1b4decbb40d441ad7a31f2831aee792767fa6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1f1b4decbb40d441ad7a31f2831aee792767fa6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b1f1b4decbb40d441ad7a31f2831aee792767fa6"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 27,
    "deletions": 57
  },
  "files": [
    {
      "sha": "0afe9d0f875343a9dd1337746d1557ab19b96d2d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21b0982c778bf20de6fc42e7ae7735055cdd35c5/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21b0982c778bf20de6fc42e7ae7735055cdd35c5/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=21b0982c778bf20de6fc42e7ae7735055cdd35c5",
      "patch": "@@ -1,3 +1,13 @@\n+2020-04-14  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.dwarf2/dw2-inline-many-frames.exp (get_func_info): Delete.\n+\t* gdb.dwarf2/dw2-inline-small-func.exp: Pass options to\n+\tget_func_info.\n+\t(get_func_info): Delete.\n+\t* gdb.dwarf2/dw2-is-stmt-2.exp (get_func_info): Delete.\n+\t* gdb.dwarf2/dw2-is-stmt.exp (get_func_info): Delete.\n+\t* lib/dwarf.exp (get_func_info): New function.\n+\n 2020-04-13  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/ada.exp (find_ada_tool): Pass --GCC and -B to gnatlink, similar"
    },
    {
      "sha": "0c2c66122657e771c8e9cd5ec99f2ea6814497f8",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-inline-many-frames.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21b0982c778bf20de6fc42e7ae7735055cdd35c5/gdb/testsuite/gdb.dwarf2/dw2-inline-many-frames.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21b0982c778bf20de6fc42e7ae7735055cdd35c5/gdb/testsuite/gdb.dwarf2/dw2-inline-many-frames.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-inline-many-frames.exp?ref=21b0982c778bf20de6fc42e7ae7735055cdd35c5",
      "patch": "@@ -40,20 +40,6 @@ if !$gcc_compiled {\n \n standard_testfile dw2-inline-many-frames.c dw2-inline-many-frames.S\n \n-# Extract the start, length, and end for function called NAME and\n-# create suitable variables in the callers scope.\n-proc get_func_info { name } {\n-    global srcdir subdir srcfile\n-\n-    upvar 1 \"${name}_start\" func_start\n-    upvar 1 \"${name}_len\" func_len\n-    upvar 1 \"${name}_end\" func_end\n-\n-    lassign [function_range ${name} [list ${srcdir}/${subdir}/$srcfile]] \\\n-\tfunc_start func_len\n-    set func_end \"$func_start + $func_len\"\n-}\n-\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n     global srcdir subdir srcfile srcfile2"
    },
    {
      "sha": "4fcc3cfeac9a3168d328c56abd3df820095e8d4c",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-inline-small-func.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 15,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21b0982c778bf20de6fc42e7ae7735055cdd35c5/gdb/testsuite/gdb.dwarf2/dw2-inline-small-func.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21b0982c778bf20de6fc42e7ae7735055cdd35c5/gdb/testsuite/gdb.dwarf2/dw2-inline-small-func.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-inline-small-func.exp?ref=21b0982c778bf20de6fc42e7ae7735055cdd35c5",
      "patch": "@@ -42,26 +42,12 @@ if !$gcc_compiled {\n standard_testfile dw2-inline-small-func-lbls.c dw2-inline-small-func.S \\\n     dw2-inline-small-func.c dw2-inline-small-func.h\n \n-# Extract the start, length, and end for function called NAME and\n-# create suitable variables in the callers scope.\n-proc get_func_info { name } {\n-    global srcdir subdir srcfile\n-\n-    upvar 1 \"${name}_start\" func_start\n-    upvar 1 \"${name}_len\" func_len\n-    upvar 1 \"${name}_end\" func_end\n-\n-    lassign [function_range ${name} [list ${srcdir}/${subdir}/$srcfile] {debug optimize=-O1}] \\\n-\tfunc_start func_len\n-    set func_end \"$func_start + $func_len\"\n-}\n-\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n     global srcdir subdir srcfile srcfile3 srcfile4\n     declare_labels lines_label callee_subprog_label\n \n-    get_func_info main\n+    get_func_info main {debug optimize=-O1}\n \n     cu {} {\n \t# It is important that the producer here be 'clang' as, at the"
    },
    {
      "sha": "2fcad93e957f6c3e60f2c6569b4ac65122ba51c7",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-is-stmt-2.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21b0982c778bf20de6fc42e7ae7735055cdd35c5/gdb/testsuite/gdb.dwarf2/dw2-is-stmt-2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21b0982c778bf20de6fc42e7ae7735055cdd35c5/gdb/testsuite/gdb.dwarf2/dw2-is-stmt-2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-is-stmt-2.exp?ref=21b0982c778bf20de6fc42e7ae7735055cdd35c5",
      "patch": "@@ -40,20 +40,6 @@ if !$gcc_compiled {\n \n standard_testfile dw2-is-stmt-2.c dw2-is-stmt-2.S\n \n-# Extract the start, length, and end for function called NAME and\n-# create suitable variables in the callers scope.\n-proc get_func_info { name } {\n-    global srcdir subdir srcfile\n-\n-    upvar 1 \"${name}_start\" func_start\n-    upvar 1 \"${name}_len\" func_len\n-    upvar 1 \"${name}_end\" func_end\n-\n-    lassign [function_range ${name} [list ${srcdir}/${subdir}/$srcfile]] \\\n-\tfunc_start func_len\n-    set func_end \"$func_start + $func_len\"\n-}\n-\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n     global srcdir subdir srcfile"
    },
    {
      "sha": "e200e91fd77a6827e25188447551fe439e651e9a",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-is-stmt.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21b0982c778bf20de6fc42e7ae7735055cdd35c5/gdb/testsuite/gdb.dwarf2/dw2-is-stmt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21b0982c778bf20de6fc42e7ae7735055cdd35c5/gdb/testsuite/gdb.dwarf2/dw2-is-stmt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-is-stmt.exp?ref=21b0982c778bf20de6fc42e7ae7735055cdd35c5",
      "patch": "@@ -40,20 +40,6 @@ if !$gcc_compiled {\n \n standard_testfile dw2-is-stmt.c dw2-is-stmt.S\n \n-# Extract the start, length, and end for function called NAME and\n-# create suitable variables in the callers scope.\n-proc get_func_info { name } {\n-    global srcdir subdir srcfile\n-\n-    upvar 1 \"${name}_start\" func_start\n-    upvar 1 \"${name}_len\" func_len\n-    upvar 1 \"${name}_end\" func_end\n-\n-    lassign [function_range ${name} [list ${srcdir}/${subdir}/$srcfile]] \\\n-\tfunc_start func_len\n-    set func_end \"$func_start + $func_len\"\n-}\n-\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n     global srcdir subdir srcfile"
    },
    {
      "sha": "a7dbe25fd458411314e03554a968651d21618dd0",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21b0982c778bf20de6fc42e7ae7735055cdd35c5/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21b0982c778bf20de6fc42e7ae7735055cdd35c5/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=21b0982c778bf20de6fc42e7ae7735055cdd35c5",
      "patch": "@@ -164,6 +164,22 @@ proc function_range { func src {options {debug}} } {\n     return [list \"${func}_label - $func_label_offset\" $func_length]\n }\n \n+# Extract the start, length, and end for function called NAME and\n+# create suitable variables in the callers scope.\n+proc get_func_info { name {options {debug}} } {\n+    global srcdir subdir srcfile\n+\n+    upvar 1 \"${name}_start\" func_start\n+    upvar 1 \"${name}_len\" func_len\n+    upvar 1 \"${name}_end\" func_end\n+\n+    lassign [function_range ${name} \\\n+\t\t [list ${srcdir}/${subdir}/$srcfile] \\\n+\t\t ${options}]  \\\n+\tfunc_start func_len\n+    set func_end \"$func_start + $func_len\"\n+}\n+\n # A DWARF assembler.\n #\n # All the variables in this namespace are private to the"
    }
  ]
}