{
  "sha": "23cc1de50b006fa10e295bdb4455540f001515e9",
  "node_id": "C_kwDOANOeidoAKDIzY2MxZGU1MGIwMDZmYTEwZTI5NWJkYjQ0NTU1NDBmMDAxNTE1ZTk",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2022-01-06T17:24:41Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2022-01-12T14:04:51Z"
    },
    "message": "elf: Add size_relative_relocs and finish_relative_relocs\n\nOn some targets, the DT_RELR section size can be computed only after all\nsymbols addresses can be determined.  Set the preliminary DT_RELR section\nsize before mapping sections to segments and set the final DT_RELR section\nsize after regular symbol processing is done.\n\n\t* elf-bfd.h (elf_backend_data): Add size_relative_relocs and\n\tfinish_relative_relocs.\n\t* elf.c (_bfd_elf_map_sections_to_segments): Call\n\tsize_relative_relocs if DT_RELR is enabled.\n\t* elflink.c (bfd_elf_final_link): Call finish_relative_relocs\n\tafter regular symbol processing is finished if DT_RELR is enabled.\n\t* elfxx-target.h (elf_backend_size_relative_relocs): New.\n\t(elf_backend_finish_relative_relocs): Likewise.\n\t(elfNN_bed): Add elf_backend_size_relative_relocs and\n\telf_backend_finish_relative_relocs.",
    "tree": {
      "sha": "d25d69445f837310c737233f5987861c9ca88a49",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d25d69445f837310c737233f5987861c9ca88a49"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/23cc1de50b006fa10e295bdb4455540f001515e9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23cc1de50b006fa10e295bdb4455540f001515e9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/23cc1de50b006fa10e295bdb4455540f001515e9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23cc1de50b006fa10e295bdb4455540f001515e9/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6a91be866619c592762cd7e9b034a9f7ad27ef37",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6a91be866619c592762cd7e9b034a9f7ad27ef37",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6a91be866619c592762cd7e9b034a9f7ad27ef37"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 38,
    "deletions": 2
  },
  "files": [
    {
      "sha": "4a85255a50088cbc9ee47edd74613ded169c8132",
      "filename": "bfd/elf-bfd.h",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23cc1de50b006fa10e295bdb4455540f001515e9/bfd/elf-bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23cc1de50b006fa10e295bdb4455540f001515e9/bfd/elf-bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-bfd.h?ref=23cc1de50b006fa10e295bdb4455540f001515e9",
      "patch": "@@ -1105,6 +1105,16 @@ struct elf_backend_data\n     (bfd *abfd, struct bfd_link_info *info, asection *o,\n      const Elf_Internal_Rela *relocs);\n \n+  /* The SIZE_RELATIVE_RELOCS function is called to size relative\n+     relocations when mappig sections to segments.  */\n+  bool (*size_relative_relocs)\n+    (struct bfd_link_info *info, bool *need_layout);\n+\n+  /* The FINISH_RELATIVE_RELOCS function is called to finish relative\n+     relocations in bfd_elf_final_link.  */\n+  bool (*finish_relative_relocs)\n+    (struct bfd_link_info *info);\n+\n   /* The CHECK_DIRECTIVES function is called once per input file by\n      the add_symbols phase of the ELF backend linker.  The function\n      must inspect the bfd and create any additional symbols according"
    },
    {
      "sha": "14c2c7ba734d4d0e5ccec7a637597aae08a97777",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 12,
      "deletions": 2,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23cc1de50b006fa10e295bdb4455540f001515e9/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23cc1de50b006fa10e295bdb4455540f001515e9/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=23cc1de50b006fa10e295bdb4455540f001515e9",
      "patch": "@@ -4615,7 +4615,7 @@ elf_modify_segment_map (bfd *abfd,\n bool\n _bfd_elf_map_sections_to_segments (bfd *abfd,\n \t\t\t\t   struct bfd_link_info *info,\n-\t\t\t\t   bool *need_layout ATTRIBUTE_UNUSED)\n+\t\t\t\t   bool *need_layout)\n {\n   unsigned int count;\n   struct elf_segment_map *m;\n@@ -4626,7 +4626,17 @@ _bfd_elf_map_sections_to_segments (bfd *abfd,\n   no_user_phdrs = elf_seg_map (abfd) == NULL;\n \n   if (info != NULL)\n-    info->user_phdrs = !no_user_phdrs;\n+    {\n+      info->user_phdrs = !no_user_phdrs;\n+\n+      /* Size the relative relocations if DT_RELR is enabled.  */\n+      if (info->enable_dt_relr\n+\t  && need_layout != NULL\n+\t  && bed->size_relative_relocs\n+\t  && !bed->size_relative_relocs (info, need_layout))\n+\tinfo->callbacks->einfo\n+\t  (_(\"%F%P: failed to size relative relocations\\n\"));\n+    }\n \n   if (no_user_phdrs && bfd_count_sections (abfd) != 0)\n     {"
    },
    {
      "sha": "1613bc748195cdf188fecd9139c0199fc34e701f",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23cc1de50b006fa10e295bdb4455540f001515e9/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23cc1de50b006fa10e295bdb4455540f001515e9/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=23cc1de50b006fa10e295bdb4455540f001515e9",
      "patch": "@@ -12599,6 +12599,14 @@ bfd_elf_final_link (bfd *abfd, struct bfd_link_info *info)\n   if (!_bfd_elf_fixup_eh_frame_hdr (info))\n     return false;\n \n+  /* Finish relative relocations here after regular symbol processing\n+     is finished if DT_RELR is enabled.  */\n+  if (info->enable_dt_relr\n+      && bed->finish_relative_relocs\n+      && !bed->finish_relative_relocs (info))\n+    info->callbacks->einfo\n+      (_(\"%F%P: %pB: failed to finish relative relocations\\n\"), abfd);\n+\n   /* Since ELF permits relocations to be against local symbols, we\n      must have the local symbols available when we do the relocations.\n      Since we would rather only read the local symbols once, and we"
    },
    {
      "sha": "e31985ef77739aaae6575b83bdc9c60b943bffd1",
      "filename": "bfd/elfxx-target.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23cc1de50b006fa10e295bdb4455540f001515e9/bfd/elfxx-target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23cc1de50b006fa10e295bdb4455540f001515e9/bfd/elfxx-target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-target.h?ref=23cc1de50b006fa10e295bdb4455540f001515e9",
      "patch": "@@ -478,6 +478,12 @@\n #ifndef elf_backend_check_relocs\n #define elf_backend_check_relocs\t0\n #endif\n+#ifndef elf_backend_size_relative_relocs\n+#define elf_backend_size_relative_relocs 0\n+#endif\n+#ifndef elf_backend_finish_relative_relocs\n+#define elf_backend_finish_relative_relocs 0\n+#endif\n #ifndef elf_backend_check_directives\n #define elf_backend_check_directives\t0\n #endif\n@@ -842,6 +848,8 @@ static const struct elf_backend_data elfNN_bed =\n   elf_backend_omit_section_dynsym,\n   elf_backend_relocs_compatible,\n   elf_backend_check_relocs,\n+  elf_backend_size_relative_relocs,\n+  elf_backend_finish_relative_relocs,\n   elf_backend_check_directives,\n   elf_backend_notice_as_needed,\n   elf_backend_adjust_dynamic_symbol,"
    }
  ]
}