{
  "sha": "6dde752183769c712eb22f49a5b74bfadad4a6be",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmRkZTc1MjE4Mzc2OWM3MTJlYjIyZjQ5YTViNzRiZmFkYWQ0YTZiZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-13T23:39:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-14T00:03:41Z"
    },
    "message": "Introduce generic_value_print_bool\n\nThis adds generic_value_print_bool, a value-based analogue of\ngeneric_val_print_bool.\n\ngdb/ChangeLog\n2020-03-13  Tom Tromey  <tom@tromey.com>\n\n\t* valprint.c (generic_value_print_bool): New function.\n\t(generic_value_print): Use it.",
    "tree": {
      "sha": "1ce1dc7e029e3a5fa3bf654ef552686037942084",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1ce1dc7e029e3a5fa3bf654ef552686037942084"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6dde752183769c712eb22f49a5b74bfadad4a6be",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6dde752183769c712eb22f49a5b74bfadad4a6be",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6dde752183769c712eb22f49a5b74bfadad4a6be",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6dde752183769c712eb22f49a5b74bfadad4a6be/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4112d2e602fed7157ce6bb30f46969129633d0f2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4112d2e602fed7157ce6bb30f46969129633d0f2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4112d2e602fed7157ce6bb30f46969129633d0f2"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 35,
    "deletions": 2
  },
  "files": [
    {
      "sha": "1d15ca6c24a4d4895e46ad3241a6c5825664be60",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dde752183769c712eb22f49a5b74bfadad4a6be/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dde752183769c712eb22f49a5b74bfadad4a6be/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6dde752183769c712eb22f49a5b74bfadad4a6be",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* valprint.c (generic_value_print_bool): New function.\n+\t(generic_value_print): Use it.\n+\n 2020-03-13  Tom Tromey  <tom@tromey.com>\n \n \t* valprint.c (generic_val_print_func): Simplify."
    },
    {
      "sha": "56a2e99c860dedb3b85ed1eaf7882bd0b7201b83",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 30,
      "deletions": 2,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dde752183769c712eb22f49a5b74bfadad4a6be/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dde752183769c712eb22f49a5b74bfadad4a6be/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=6dde752183769c712eb22f49a5b74bfadad4a6be",
      "patch": "@@ -789,6 +789,35 @@ generic_val_print_bool (struct type *type,\n     }\n }\n \n+/* generic_value_print helper for TYPE_CODE_BOOL.  */\n+\n+static void\n+generic_value_print_bool\n+  (struct value *value, struct ui_file *stream,\n+   const struct value_print_options *options,\n+   const struct generic_val_print_decorations *decorations)\n+{\n+  if (options->format || options->output_format)\n+    {\n+      struct value_print_options opts = *options;\n+      opts.format = (options->format ? options->format\n+\t\t     : options->output_format);\n+      value_print_scalar_formatted (value, &opts, 0, stream);\n+    }\n+  else\n+    {\n+      const gdb_byte *valaddr = value_contents_for_printing (value);\n+      struct type *type = check_typedef (value_type (value));\n+      LONGEST val = unpack_long (type, valaddr);\n+      if (val == 0)\n+\tfputs_filtered (decorations->false_name, stream);\n+      else if (val == 1)\n+\tfputs_filtered (decorations->true_name, stream);\n+      else\n+\tprint_longest (stream, 'd', 0, val);\n+    }\n+}\n+\n /* generic_val_print helper for TYPE_CODE_INT.  */\n \n static void\n@@ -1090,8 +1119,7 @@ generic_value_print (struct value *val, struct ui_file *stream, int recurse,\n       break;\n \n     case TYPE_CODE_BOOL:\n-      generic_val_print_bool (type, 0, stream,\n-\t\t\t      val, options, decorations);\n+      generic_value_print_bool (val, stream, options, decorations);\n       break;\n \n     case TYPE_CODE_RANGE:"
    }
  ]
}