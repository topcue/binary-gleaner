{
  "sha": "47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDdmNzBhYTc2ODVjMGE3ZmFkNGNhNzY5NjRhNDE5OWE1YjVlZGQxYw==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:29Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:29Z"
    },
    "message": "gdbserver/linux-low: turn 'supports_tracepoints' into a method\n\ngdbserver/ChangeLog:\n2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tRemote the 'supports_tracepoints' linux target op and let the\n\tconcrete linux target define it by overriding the op declared in\n\tprocess_stratum_target.\n\n\t* linux-low.h (struct linux_target_ops): Remove the op.\n\t(class linux_process_target) <supports_tracepoints>: Remove.\n\t* linux-low.cc (linux_process_target::supports_tracepoints): Remove.\n\t* linux-x86-low.cc (class x86_target) <supports_tracepoints>:\n\tDeclare.\n\t(x86_supports_tracepoints): Turn into...\n\t(x86_target::supports_tracepoints): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-aarch64-low.cc (class aarch64_target)\n\t<supports_tracepoints>: Declare.\n\t(aarch64_supports_tracepoints): Turn into...\n\t(aarch64_target::supports_tracepoints): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-ppc-low.cc (class ppc_target) <supports_tracepoints>:\n\tDeclare.\n\t(ppc_supports_tracepoints): Turn into...\n\t(ppc_target::supports_tracepoints): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-s390-low.cc (class s390_target) <supports_tracepoints>:\n\tDeclare.\n\t(s390_supports_tracepoints): Turn into...\n\t(s390_target::supports_tracepoints): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-arm-low.cc (the_low_target): Remove the op field.\n\t* linux-bfin-low.cc (the_low_target): Ditto.\n\t* linux-crisv32-low.cc (the_low_target): Ditto.\n\t* linux-m32r-low.cc (the_low_target): Ditto.\n\t* linux-m68k-low.cc (the_low_target): Ditto.\n\t* linux-sh-low.cc (the_low_target): Ditto.\n\t* linux-tic6x-low.cc (the_low_target): Ditto.\n\t* linux-tile-low.cc (the_low_target): Ditto.\n\t* linux-xtensa-low.cc (the_low_target): Ditto.",
    "tree": {
      "sha": "3f003f9a81410391f5398f1a1e0ea556a928a063",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3f003f9a81410391f5398f1a1e0ea556a928a063"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a5b5da9258db39b9b15ae2796ab637c73ba20422",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a5b5da9258db39b9b15ae2796ab637c73ba20422",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a5b5da9258db39b9b15ae2796ab637c73ba20422"
    }
  ],
  "stats": {
    "total": 105,
    "additions": 63,
    "deletions": 42
  },
  "files": [
    {
      "sha": "a7635e06b1e98a244fd4297df9e520fbcc8eeabf",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -1,3 +1,42 @@\n+2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tRemote the 'supports_tracepoints' linux target op and let the\n+\tconcrete linux target define it by overriding the op declared in\n+\tprocess_stratum_target.\n+\n+\t* linux-low.h (struct linux_target_ops): Remove the op.\n+\t(class linux_process_target) <supports_tracepoints>: Remove.\n+\t* linux-low.cc (linux_process_target::supports_tracepoints): Remove.\n+\t* linux-x86-low.cc (class x86_target) <supports_tracepoints>:\n+\tDeclare.\n+\t(x86_supports_tracepoints): Turn into...\n+\t(x86_target::supports_tracepoints): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-aarch64-low.cc (class aarch64_target)\n+\t<supports_tracepoints>: Declare.\n+\t(aarch64_supports_tracepoints): Turn into...\n+\t(aarch64_target::supports_tracepoints): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-ppc-low.cc (class ppc_target) <supports_tracepoints>:\n+\tDeclare.\n+\t(ppc_supports_tracepoints): Turn into...\n+\t(ppc_target::supports_tracepoints): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-s390-low.cc (class s390_target) <supports_tracepoints>:\n+\tDeclare.\n+\t(s390_supports_tracepoints): Turn into...\n+\t(s390_target::supports_tracepoints): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-arm-low.cc (the_low_target): Remove the op field.\n+\t* linux-bfin-low.cc (the_low_target): Ditto.\n+\t* linux-crisv32-low.cc (the_low_target): Ditto.\n+\t* linux-m32r-low.cc (the_low_target): Ditto.\n+\t* linux-m68k-low.cc (the_low_target): Ditto.\n+\t* linux-sh-low.cc (the_low_target): Ditto.\n+\t* linux-tic6x-low.cc (the_low_target): Ditto.\n+\t* linux-tile-low.cc (the_low_target): Ditto.\n+\t* linux-xtensa-low.cc (the_low_target): Ditto.\n+\n 2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tRemove the 'process_qsupported' linux target op and let a concrete"
    },
    {
      "sha": "cbca3d6a9ad1f7ac3b0be9ce394e6d557b3bf99f",
      "filename": "gdbserver/linux-aarch64-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-aarch64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-aarch64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -65,6 +65,8 @@ class aarch64_target : public linux_process_target\n \n   bool supports_z_point_type (char z_type) override;\n \n+  bool supports_tracepoints () override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -715,13 +717,13 @@ aarch64_target::get_regs_info ()\n   return &regs_info_aarch64;\n }\n \n-/* Implementation of linux_target_ops method \"supports_tracepoints\".  */\n+/* Implementation of target ops method \"supports_tracepoints\".  */\n \n-static int\n-aarch64_supports_tracepoints (void)\n+bool\n+aarch64_target::supports_tracepoints ()\n {\n   if (current_thread == NULL)\n-    return 1;\n+    return true;\n   else\n     {\n       /* We don't support tracepoints on aarch32 now.  */\n@@ -3147,7 +3149,6 @@ aarch64_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  aarch64_supports_tracepoints,\n   aarch64_get_thread_area,\n   aarch64_install_fast_tracepoint_jump_pad,\n   aarch64_emit_ops,"
    },
    {
      "sha": "383f217277add4953ae31e5b28af96ccac6d9c14",
      "filename": "gdbserver/linux-arm-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-arm-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-arm-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-arm-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -1117,7 +1117,6 @@ arm_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */\n   NULL, /* install_fast_tracepoint_jump_pad */\n   NULL, /* emit_ops */"
    },
    {
      "sha": "06fcf76bf50f727e51382827a731b70478f49f88",
      "filename": "gdbserver/linux-bfin-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-bfin-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-bfin-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-bfin-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -171,7 +171,6 @@ bfin_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */\n   NULL, /* install_fast_tracepoint_jump_pad */\n   NULL, /* emit_ops */"
    },
    {
      "sha": "ab711c41690dc9a84d713877f9b6fef64f55cfb1",
      "filename": "gdbserver/linux-crisv32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-crisv32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-crisv32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-crisv32-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -468,7 +468,6 @@ crisv32_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */\n   NULL, /* install_fast_tracepoint_jump_pad */\n   NULL, /* emit_ops */"
    },
    {
      "sha": "2b522348201750a6946f638c92bd3b0ef52b36bf",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -6441,15 +6441,6 @@ linux_process_target::get_ipa_tdesc_idx ()\n   return (*the_low_target.get_ipa_tdesc_idx) ();\n }\n \n-bool\n-linux_process_target::supports_tracepoints ()\n-{\n-  if (*the_low_target.supports_tracepoints == NULL)\n-    return false;\n-\n-  return (*the_low_target.supports_tracepoints) ();\n-}\n-\n CORE_ADDR\n linux_process_target::read_pc (regcache *regcache)\n {"
    },
    {
      "sha": "223b19ddafdf19bde60b4c4cf5e2c4f771a23e6c",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -131,9 +131,6 @@ struct lwp_info;\n \n struct linux_target_ops\n {\n-  /* Returns true if the low target supports tracepoints.  */\n-  int (*supports_tracepoints) (void);\n-\n   /* Fill ADDRP with the thread area address of LWPID.  Returns 0 on\n      success, -1 on failure.  */\n   int (*get_thread_area) (int lwpid, CORE_ADDR *addrp);\n@@ -296,8 +293,6 @@ class linux_process_target : public process_stratum_target\n \t\t    unsigned char *myaddr, unsigned int len) override;\n #endif\n \n-  bool supports_tracepoints () override;\n-\n   CORE_ADDR read_pc (regcache *regcache) override;\n \n   void write_pc (regcache *regcache, CORE_ADDR pc) override;"
    },
    {
      "sha": "601522bc6111e66fdea33d313f9dd447ee4d1060",
      "filename": "gdbserver/linux-m32r-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-m32r-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-m32r-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m32r-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -161,7 +161,6 @@ m32r_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */\n   NULL, /* install_fast_tracepoint_jump_pad */\n   NULL, /* emit_ops */"
    },
    {
      "sha": "6e16764d394b009b57998efcd945cc257c4f454f",
      "filename": "gdbserver/linux-m68k-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-m68k-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-m68k-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m68k-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -265,7 +265,6 @@ m68k_supports_hardware_single_step (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */\n   NULL, /* install_fast_tracepoint_jump_pad */\n   NULL, /* emit_ops */"
    },
    {
      "sha": "063707c5c7c6aa10c81f6dae5a8f0d48f294c7ef",
      "filename": "gdbserver/linux-ppc-low.cc",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-ppc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-ppc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ppc-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -62,6 +62,9 @@ class ppc_target : public linux_process_target\n \n   void low_supply_ptrace_register (regcache *regcache, int regno,\n \t\t\t\t   const char *buf) override;\n+\n+  bool supports_tracepoints () override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -1024,12 +1027,12 @@ ppc_target::low_arch_setup ()\n       }\n }\n \n-/* Implementation of linux_target_ops method \"supports_tracepoints\".  */\n+/* Implementation of target ops method \"supports_tracepoints\".  */\n \n-static int\n-ppc_supports_tracepoints (void)\n+bool\n+ppc_target::supports_tracepoints ()\n {\n-  return 1;\n+  return true;\n }\n \n /* Get the thread area address.  This is used to recognize which\n@@ -3428,7 +3431,6 @@ ppc_get_ipa_tdesc_idx (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  ppc_supports_tracepoints,\n   ppc_get_thread_area,\n   ppc_install_fast_tracepoint_jump_pad,\n   ppc_emit_ops,"
    },
    {
      "sha": "22305fe9ce910f52236c40e18ede04e91a5a88b7",
      "filename": "gdbserver/linux-s390-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-s390-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-s390-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-s390-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -63,6 +63,8 @@ class s390_target : public linux_process_target\n \n   bool supports_z_point_type (char z_type) override;\n \n+  bool supports_tracepoints () override;\n+\n   void low_collect_ptrace_register (regcache *regcache, int regno,\n \t\t\t\t    char *buf) override;\n \n@@ -770,12 +772,12 @@ s390_target::get_regs_info ()\n   return &myregs_info;\n }\n \n-/* The \"supports_tracepoints\" linux_target_ops method.  */\n+/* The \"supports_tracepoints\" target ops method.  */\n \n-static int\n-s390_supports_tracepoints (void)\n+bool\n+s390_target::supports_tracepoints ()\n {\n-  return 1;\n+  return true;\n }\n \n /* Implementation of linux_target_ops method \"get_thread_area\".  */\n@@ -2845,7 +2847,6 @@ s390_emit_ops (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  s390_supports_tracepoints,\n   s390_get_thread_area,\n   s390_install_fast_tracepoint_jump_pad,\n   s390_emit_ops,"
    },
    {
      "sha": "4fead793f9730636100647346a3e16acd56167a5",
      "filename": "gdbserver/linux-sh-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-sh-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-sh-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sh-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -192,7 +192,6 @@ sh_target::low_arch_setup ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */\n   NULL, /* install_fast_tracepoint_jump_pad */\n   NULL, /* emit_ops */"
    },
    {
      "sha": "e385edd4324d873dc21b184070eac391d644f5af",
      "filename": "gdbserver/linux-tic6x-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-tic6x-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-tic6x-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tic6x-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -423,7 +423,6 @@ tic6x_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */\n   NULL, /* install_fast_tracepoint_jump_pad */\n   NULL, /* emit_ops */"
    },
    {
      "sha": "ad2e716e4340488db4b6790f5eda45300ff733d5",
      "filename": "gdbserver/linux-tile-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-tile-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-tile-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tile-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -224,7 +224,6 @@ tile_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */\n   NULL, /* install_fast_tracepoint_jump_pad */\n   NULL, /* emit_ops */"
    },
    {
      "sha": "b7bbc81cbee5b2c61b386cda43041e5e398079a0",
      "filename": "gdbserver/linux-x86-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-x86-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-x86-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-x86-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -108,6 +108,8 @@ class x86_target : public linux_process_target\n \n   void process_qsupported (char **features, int count) override;\n \n+  bool supports_tracepoints () override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -1109,10 +1111,10 @@ x86_get_syscall_trapinfo (struct regcache *regcache, int *sysno)\n     collect_register_by_name (regcache, \"orig_eax\", sysno);\n }\n \n-static int\n-x86_supports_tracepoints (void)\n+bool\n+x86_target::supports_tracepoints ()\n {\n-  return 1;\n+  return true;\n }\n \n static void\n@@ -2967,7 +2969,6 @@ x86_get_ipa_tdesc_idx (void)\n \n struct linux_target_ops the_low_target =\n {\n-  x86_supports_tracepoints,\n   x86_get_thread_area,\n   x86_install_fast_tracepoint_jump_pad,\n   x86_emit_ops,"
    },
    {
      "sha": "5a009df551d8666d14883c2ba79415b959b35757",
      "filename": "gdbserver/linux-xtensa-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-xtensa-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f70aa7685c0a7fad4ca76964a4199a5b5edd1c/gdbserver/linux-xtensa-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-xtensa-low.cc?ref=47f70aa7685c0a7fad4ca76964a4199a5b5edd1c",
      "patch": "@@ -329,7 +329,6 @@ xtensa_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */\n   NULL, /* install_fast_tracepoint_jump_pad */\n   NULL, /* emit_ops */"
    }
  ]
}