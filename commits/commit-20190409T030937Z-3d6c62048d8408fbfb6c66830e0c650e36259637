{
  "sha": "3d6c62048d8408fbfb6c66830e0c650e36259637",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2Q2YzYyMDQ4ZDg0MDhmYmZiNmM2NjgzMGUwYzY1MGUzNjI1OTYzNw==",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-02-08T02:16:04Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-04-09T03:09:37Z"
    },
    "message": "Introduce target_ops method thread_info_to_thread_handle\n\nThis patch adds a thread_info_to_thread_handle method to the target_ops\nstruct.  It also implements this functionality for remote targets and\nlinux native threads.\n\ngdb/ChangeLog:\n\n\t* gdbthread.h (thread_to_thread_handle): Declare.\n\t* thread.c (gdbtypes.h): Include.\n\t(thread_to_thread_handle): New function.\n\n\t* target.h (struct target_ops): Add thread_info_to_thread_handle.\n\t(target_thread_info_to_thread_handle): Declare.\n\t* target.c (target_thread_info_to_thread_handle): New function.\n\t* target-debug.h (target_debug_print_gdb_byte_vector): Define.\n\t* target-delegates.c: Regenerate.\n\n\t* linux-thread-db.c (class thread_db_target): Add method\n\tthread_info_to_thread_handle.\n\t(thread_db_target::thread_info_to_thread_handle): Define.\n\t* remote.c (class remote_target): Add new method\n\tthread_info_to_thread_handle.\n\t(remote_target::thread_info_to_thread_handle): Define.",
    "tree": {
      "sha": "dc8bd93aae61f80fab0ea589241021691a733035",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dc8bd93aae61f80fab0ea589241021691a733035"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3d6c62048d8408fbfb6c66830e0c650e36259637",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d6c62048d8408fbfb6c66830e0c650e36259637",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3d6c62048d8408fbfb6c66830e0c650e36259637",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d6c62048d8408fbfb6c66830e0c650e36259637/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "462cac5884ed4c38e6180b2e2769aaa5225e695b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/462cac5884ed4c38e6180b2e2769aaa5225e695b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/462cac5884ed4c38e6180b2e2769aaa5225e695b"
    }
  ],
  "stats": {
    "total": 95,
    "additions": 95,
    "deletions": 0
  },
  "files": [
    {
      "sha": "ea89249dd1b4bb7e62244492d55e1928dc9f8682",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3d6c62048d8408fbfb6c66830e0c650e36259637",
      "patch": "@@ -1,3 +1,22 @@\n+2019-04-08  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* gdbthread.h (thread_to_thread_handle): Declare.\n+\t* thread.c (gdbtypes.h): Include.\n+\t(thread_to_thread_handle): New function.\n+\n+\t* target.h (struct target_ops): Add thread_info_to_thread_handle.\n+\t(target_thread_info_to_thread_handle): Declare.\n+\t* target.c (target_thread_info_to_thread_handle): New function.\n+\t* target-debug.h (target_debug_print_gdb_byte_vector): Define.\n+\t* target-delegates.c: Regenerate.\n+\n+\t* linux-thread-db.c (class thread_db_target): Add method\n+\tthread_info_to_thread_handle.\n+\t(thread_db_target::thread_info_to_thread_handle): Define.\n+\t* remote.c (class remote_target): Add new method\n+\tthread_info_to_thread_handle.\n+\t(remote_target::thread_info_to_thread_handle): Define.\n+\n 2019-04-08  Pedro Alves  <palves@redhat.com>\n \n \t* common/common-exceptions.c (throw_exception): Don't create"
    },
    {
      "sha": "a67f9b95145a1667cbbda459aa125022bf12a14d",
      "filename": "gdb/linux-thread-db.c",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/linux-thread-db.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/linux-thread-db.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-thread-db.c?ref=3d6c62048d8408fbfb6c66830e0c650e36259637",
      "patch": "@@ -105,6 +105,7 @@ class thread_db_target final : public target_ops\n   thread_info *thread_handle_to_thread_info (const gdb_byte *thread_handle,\n \t\t\t\t\t     int handle_len,\n \t\t\t\t\t     inferior *inf) override;\n+  gdb::byte_vector thread_info_to_thread_handle (struct thread_info *) override;\n };\n \n static char *libthread_db_search_path;\n@@ -1692,6 +1693,24 @@ thread_db_target::thread_handle_to_thread_info (const gdb_byte *thread_handle,\n   return NULL;\n }\n \n+/* Return the thread handle associated the thread_info pointer TP.  */\n+\n+gdb::byte_vector\n+thread_db_target::thread_info_to_thread_handle (struct thread_info *tp)\n+{\n+  thread_db_thread_info *priv = get_thread_db_thread_info (tp);\n+\n+  if (priv == NULL)\n+    return gdb::byte_vector ();\n+\n+  int handle_size = sizeof (priv->tid);\n+  gdb::byte_vector rv (handle_size);\n+\n+  memcpy (rv.data (), &priv->tid, handle_size);\n+\n+  return rv;\n+}\n+\n /* Get the address of the thread local variable in load module LM which\n    is stored at OFFSET within the thread local storage for thread PTID.  */\n "
    },
    {
      "sha": "9bbf458b6374c5653e6657bec4eeaa8dc4288f32",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=3d6c62048d8408fbfb6c66830e0c650e36259637",
      "patch": "@@ -485,6 +485,9 @@ class remote_target : public process_stratum_target\n \t\t\t\t\t     int handle_len,\n \t\t\t\t\t     inferior *inf) override;\n \n+  gdb::byte_vector thread_info_to_thread_handle (struct thread_info *tp)\n+\t\t\t\t\t\t override;\n+\n   void stop (ptid_t) override;\n \n   void interrupt () override;\n@@ -13998,6 +14001,13 @@ remote_target::thread_handle_to_thread_info (const gdb_byte *thread_handle,\n   return NULL;\n }\n \n+gdb::byte_vector\n+remote_target::thread_info_to_thread_handle (struct thread_info *tp)\n+{\n+  remote_thread_info *priv = get_remote_thread_info (tp);\n+  return priv->thread_handle;\n+}\n+\n bool\n remote_target::can_async_p ()\n {"
    },
    {
      "sha": "aa2adcec3d21af3ec79a97a389d16c0832b356bb",
      "filename": "gdb/target-debug.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/target-debug.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/target-debug.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-debug.h?ref=3d6c62048d8408fbfb6c66830e0c650e36259637",
      "patch": "@@ -186,6 +186,8 @@\n   target_debug_do_print (host_address_to_string (X))\n #define target_debug_print_std_string(X) \\\n   target_debug_do_print ((X).c_str ())\n+#define target_debug_print_gdb_byte_vector(X)\t\\\n+  target_debug_do_print (host_address_to_string (X.data ()))\n \n static void\n target_debug_print_struct_target_waitstatus_p (struct target_waitstatus *status)"
    },
    {
      "sha": "cfc0ce06e998a3510bf8d5d4959cc646b542b075",
      "filename": "gdb/target-delegates.c",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/target-delegates.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/target-delegates.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-delegates.c?ref=3d6c62048d8408fbfb6c66830e0c650e36259637",
      "patch": "@@ -70,6 +70,7 @@ struct dummy_target : public target_ops\n   const char *extra_thread_info (thread_info *arg0) override;\n   const char *thread_name (thread_info *arg0) override;\n   thread_info *thread_handle_to_thread_info (const gdb_byte *arg0, int arg1, inferior *arg2) override;\n+  gdb::byte_vector thread_info_to_thread_handle (struct thread_info *arg0) override;\n   void stop (ptid_t arg0) override;\n   void interrupt () override;\n   void pass_ctrlc () override;\n@@ -237,6 +238,7 @@ struct debug_target : public target_ops\n   const char *extra_thread_info (thread_info *arg0) override;\n   const char *thread_name (thread_info *arg0) override;\n   thread_info *thread_handle_to_thread_info (const gdb_byte *arg0, int arg1, inferior *arg2) override;\n+  gdb::byte_vector thread_info_to_thread_handle (struct thread_info *arg0) override;\n   void stop (ptid_t arg0) override;\n   void interrupt () override;\n   void pass_ctrlc () override;\n@@ -1854,6 +1856,32 @@ debug_target::thread_handle_to_thread_info (const gdb_byte *arg0, int arg1, infe\n   return result;\n }\n \n+gdb::byte_vector\n+target_ops::thread_info_to_thread_handle (struct thread_info *arg0)\n+{\n+  return this->beneath ()->thread_info_to_thread_handle (arg0);\n+}\n+\n+gdb::byte_vector\n+dummy_target::thread_info_to_thread_handle (struct thread_info *arg0)\n+{\n+  return gdb::byte_vector ();\n+}\n+\n+gdb::byte_vector\n+debug_target::thread_info_to_thread_handle (struct thread_info *arg0)\n+{\n+  gdb::byte_vector result;\n+  fprintf_unfiltered (gdb_stdlog, \"-> %s->thread_info_to_thread_handle (...)\\n\", this->beneath ()->shortname ());\n+  result = this->beneath ()->thread_info_to_thread_handle (arg0);\n+  fprintf_unfiltered (gdb_stdlog, \"<- %s->thread_info_to_thread_handle (\", this->beneath ()->shortname ());\n+  target_debug_print_struct_thread_info_p (arg0);\n+  fputs_unfiltered (\") = \", gdb_stdlog);\n+  target_debug_print_gdb_byte_vector (result);\n+  fputs_unfiltered (\"\\n\", gdb_stdlog);\n+  return result;\n+}\n+\n void\n target_ops::stop (ptid_t arg0)\n {"
    },
    {
      "sha": "f492102b6d465c512bee6215a0fefb0d7bf7719e",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=3d6c62048d8408fbfb6c66830e0c650e36259637",
      "patch": "@@ -2097,6 +2097,14 @@ target_thread_handle_to_thread_info (const gdb_byte *thread_handle,\n \t\t\t\t\t\t     handle_len, inf);\n }\n \n+/* See target.h.  */\n+\n+gdb::byte_vector\n+target_thread_info_to_thread_handle (struct thread_info *tip)\n+{\n+  return current_top_target ()->thread_info_to_thread_handle (tip);\n+}\n+\n void\n target_resume (ptid_t ptid, int step, enum gdb_signal signal)\n {"
    },
    {
      "sha": "9078a420018e6d72a882fd6c96a95ada3e64571f",
      "filename": "gdb/target.h",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d6c62048d8408fbfb6c66830e0c650e36259637/gdb/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.h?ref=3d6c62048d8408fbfb6c66830e0c650e36259637",
      "patch": "@@ -659,6 +659,9 @@ struct target_ops\n \t\t\t\t\t\t       int,\n \t\t\t\t\t\t       inferior *inf)\n       TARGET_DEFAULT_RETURN (NULL);\n+    /* See target_thread_info_to_thread_handle.  */\n+    virtual gdb::byte_vector thread_info_to_thread_handle (struct thread_info *)\n+      TARGET_DEFAULT_RETURN (gdb::byte_vector ());\n     virtual void stop (ptid_t)\n       TARGET_DEFAULT_IGNORE ();\n     virtual void interrupt ()\n@@ -1851,6 +1854,12 @@ extern const char *target_thread_name (struct thread_info *);\n extern struct thread_info *target_thread_handle_to_thread_info\n   (const gdb_byte *thread_handle, int handle_len, struct inferior *inf);\n \n+/* Given a thread, return the thread handle, a target-specific sequence of\n+   bytes which serves as a thread identifier within the program being\n+   debugged.  */\n+extern gdb::byte_vector target_thread_info_to_thread_handle\n+  (struct thread_info *);\n+\n /* Attempts to find the pathname of the executable file\n    that was run to create a specified process.\n "
    }
  ]
}