{
  "sha": "c61596525811d9b0fe79be8f11e5a142ade96dab",
  "node_id": "C_kwDOANOeidoAKGM2MTU5NjUyNTgxMWQ5YjBmZTc5YmU4ZjExZTVhMTQyYWRlOTZkYWI",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-11-20T03:49:01Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2022-02-06T20:48:19Z"
    },
    "message": "gdb: remove SYMTAB_COMPUNIT macro, add getter/setter\n\nAdd a getter and a setter for a symtab's compunit_symtab.  Remove the\ncorresponding macro and adjust all callers.\n\nFor brevity, I chose the name \"compunit\" instead of \"compunit_symtab\"\nthe the field, getter and setter names.  Since we are already in symtab\ncontext, the _symtab suffix seems redundant.\n\nChange-Id: I4b9b731c96e3594f7733e75af1e3d01bc0e4fe92",
    "tree": {
      "sha": "8bc43629e072791d0790a2264c0b1fcd7998bd3b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8bc43629e072791d0790a2264c0b1fcd7998bd3b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c61596525811d9b0fe79be8f11e5a142ade96dab",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c61596525811d9b0fe79be8f11e5a142ade96dab",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c61596525811d9b0fe79be8f11e5a142ade96dab",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c61596525811d9b0fe79be8f11e5a142ade96dab/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "10cc645b6a09c58cf1a5ce53accbe6cf3178ca12",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10cc645b6a09c58cf1a5ce53accbe6cf3178ca12",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/10cc645b6a09c58cf1a5ce53accbe6cf3178ca12"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 37,
    "deletions": 27
  },
  "files": [
    {
      "sha": "b95ab1e87b81db582768ca5696d588988f6730d1",
      "filename": "gdb/amd64-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/amd64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/amd64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-tdep.c?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -2474,8 +2474,8 @@ amd64_skip_xmm_prologue (CORE_ADDR pc, CORE_ADDR start_pc)\n \n   start_pc_sal = find_pc_sect_line (start_pc, NULL, 0);\n   if (start_pc_sal.symtab == NULL\n-      || producer_is_gcc_ge_4 (SYMTAB_COMPUNIT\n-\t\t\t\t (start_pc_sal.symtab)->producer ()) < 6\n+      || producer_is_gcc_ge_4 (start_pc_sal.symtab->compunit ()\n+\t\t\t       ->producer ()) < 6\n       || start_pc_sal.pc != start_pc || pc >= start_pc_sal.end)\n     return pc;\n "
    },
    {
      "sha": "96a2b46dfc25c04afbc4d60391f4e0edb68e5220",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -9230,7 +9230,7 @@ resolve_sal_pc (struct symtab_and_line *sal)\n       struct symbol *sym;\n \n       bv = blockvector_for_pc_sect (sal->pc, 0, &b,\n-\t\t\t\t    SYMTAB_COMPUNIT (sal->symtab));\n+\t\t\t\t    sal->symtab->compunit ());\n       if (bv != NULL)\n \t{\n \t  sym = block_linkage_function (b);"
    },
    {
      "sha": "93f561acccd8b7a5e97afc3b555b44f93edbb03b",
      "filename": "gdb/macroscope.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/macroscope.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/macroscope.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/macroscope.c?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -43,7 +43,8 @@ sal_macro_scope (struct symtab_and_line sal)\n \n   if (sal.symtab == NULL)\n     return NULL;\n-  cust = SYMTAB_COMPUNIT (sal.symtab);\n+\n+  cust = sal.symtab->compunit ();\n   if (cust->macro_table () == NULL)\n     return NULL;\n "
    },
    {
      "sha": "a6a70ccfea9311113f1f0d812d401a26fc4ace06",
      "filename": "gdb/mdebugread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/mdebugread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/mdebugread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mdebugread.c?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -4502,7 +4502,7 @@ add_block (struct block *b, struct symtab *s)\n \t\t\t\t\t + BLOCKVECTOR_NBLOCKS (bv)\n \t\t\t\t\t * sizeof (bv->block)));\n   if (bv != SYMTAB_BLOCKVECTOR (s))\n-    SYMTAB_COMPUNIT (s)->set_blockvector (bv);\n+    s->compunit ()->set_blockvector (bv);\n \n   BLOCKVECTOR_BLOCK (bv, BLOCKVECTOR_NBLOCKS (bv)++) = b;\n }"
    },
    {
      "sha": "0ed7bed82e23e28e5e2b4596bb41a6bccbbdad3d",
      "filename": "gdb/mi/mi-cmd-file.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/mi/mi-cmd-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/mi/mi-cmd-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmd-file.c?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -59,7 +59,7 @@ mi_cmd_file_list_exec_source_file (const char *command, char **argv, int argc)\n   uiout->field_string (\"fullname\", symtab_to_fullname (st.symtab));\n \n   uiout->field_signed (\"macro-info\",\n-\t\t       SYMTAB_COMPUNIT (st.symtab)->macro_table () != NULL);\n+\t\t       st.symtab->compunit ()->macro_table () != NULL);\n }\n \n /* Implement -file-list-exec-source-files command.  */"
    },
    {
      "sha": "2787609d4f80c25f33fcb52b6f239733d7b9d192",
      "filename": "gdb/or1k-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/or1k-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/or1k-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/or1k-tdep.c?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -471,7 +471,7 @@ or1k_skip_prologue (struct gdbarch *gdbarch, CORE_ADDR pc)\n \t{\n \t  struct symtab_and_line prologue_sal = find_pc_line (start_pc, 0);\n \t  struct compunit_symtab *compunit\n-\t    = SYMTAB_COMPUNIT (prologue_sal.symtab);\n+\t    = prologue_sal.symtab->compunit ();\n \t  const char *debug_format = compunit->debugformat ();\n \n \t  if ((NULL != debug_format)"
    },
    {
      "sha": "b5d102c1b7f1e85e2ced82606ea06a7d8b4f5bcc",
      "filename": "gdb/python/py-symtab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/python/py-symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/python/py-symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-symtab.c?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -131,7 +131,7 @@ stpy_get_producer (PyObject *self, void *closure)\n   struct compunit_symtab *cust;\n \n   STPY_REQUIRE_VALID (self, symtab);\n-  cust = SYMTAB_COMPUNIT (symtab);\n+  cust = symtab->compunit ();\n   if (cust->producer () != nullptr)\n     {\n       const char *producer = cust->producer ();"
    },
    {
      "sha": "ee896264277f2b779d4c2f63a46c7c711ebb16b3",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -711,7 +711,7 @@ info_source_command (const char *ignore, int from_tty)\n       return;\n     }\n \n-  cust = SYMTAB_COMPUNIT (s);\n+  cust = s->compunit ();\n   printf_filtered (_(\"Current source file is %s\\n\"), s->filename);\n   if (SYMTAB_DIRNAME (s) != NULL)\n     printf_filtered (_(\"Compilation directory is %s\\n\"), SYMTAB_DIRNAME (s));\n@@ -1184,9 +1184,9 @@ open_source_file (struct symtab *s)\n \n   if (fd.get () < 0)\n     {\n-      if (SYMTAB_COMPUNIT (s) != nullptr)\n+      if (s->compunit () != nullptr)\n \t{\n-\t  const objfile *ofp = SYMTAB_COMPUNIT (s)->objfile ();\n+\t  const objfile *ofp = s->compunit ()->objfile ();\n \n \t  std::string srcpath;\n \t  if (IS_ABSOLUTE_PATH (s->filename))"
    },
    {
      "sha": "46c42014a9f6b14ab4c019089b4b0ba3f5f5ac72",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -2807,7 +2807,7 @@ allocate_symtab (struct compunit_symtab *cust, const char *filename)\n   cust->add_filetab (symtab);\n \n   /* Backlink to the containing compunit symtab.  */\n-  symtab->compunit_symtab = cust;\n+  symtab->set_compunit (cust);\n \n   return symtab;\n }"
    },
    {
      "sha": "d079ac460ee825de151e58e565d34ce38eef8230",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -329,7 +329,7 @@ dump_symtab_1 (struct symtab *symtab, struct ui_file *outfile)\n     }\n   else\n     {\n-      compunit_symtab *compunit = SYMTAB_COMPUNIT (symtab);\n+      compunit_symtab *compunit = symtab->compunit ();\n       const char *compunit_filename\n \t= symtab_to_filename_for_display (compunit->primary_filetab ());\n \n@@ -342,7 +342,7 @@ dump_symtab_1 (struct symtab *symtab, struct ui_file *outfile)\n      compunit_symtabs included by this one. */\n   if (is_main_symtab_of_compunit_symtab (symtab))\n     {\n-      struct compunit_symtab *cust = SYMTAB_COMPUNIT (symtab);\n+      struct compunit_symtab *cust = symtab->compunit ();\n \n       if (cust->user != nullptr)\n \t{\n@@ -956,14 +956,14 @@ maintenance_print_one_line_table (struct symtab *symtab, void *data)\n   struct linetable *linetable;\n   struct objfile *objfile;\n \n-  objfile = symtab->compunit_symtab->objfile ();\n+  objfile = symtab->compunit ()->objfile ();\n   printf_filtered (_(\"objfile: %ps ((struct objfile *) %s)\\n\"),\n \t\t   styled_string (file_name_style.style (),\n \t\t\t\t  objfile_name (objfile)),\n \t\t   host_address_to_string (objfile));\n   printf_filtered (_(\"compunit_symtab: %s ((struct compunit_symtab *) %s)\\n\"),\n-\t\t   symtab->compunit_symtab->name,\n-\t\t   host_address_to_string (symtab->compunit_symtab));\n+\t\t   symtab->compunit ()->name,\n+\t\t   host_address_to_string (symtab->compunit ()));\n   printf_filtered (_(\"symtab: %ps ((struct symtab *) %s)\\n\"),\n \t\t   styled_string (file_name_style.style (),\n \t\t\t\t  symtab_to_fullname (symtab)),"
    },
    {
      "sha": "459c0c3c748781f2cd4c318683f775d42f78f5fd",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -3709,7 +3709,7 @@ find_function_start_sal_1 (CORE_ADDR func_addr, obj_section *section,\n   symtab_and_line sal = find_pc_sect_line (func_addr, section, 0);\n \n   if (funfirstline && sal.symtab != NULL\n-      && (SYMTAB_COMPUNIT (sal.symtab)->locations_valid ()\n+      && (sal.symtab->compunit ()->locations_valid ()\n \t  || SYMTAB_LANGUAGE (sal.symtab) == language_asm))\n     {\n       struct gdbarch *gdbarch = SYMTAB_OBJFILE (sal.symtab)->arch ();\n@@ -3885,7 +3885,7 @@ skip_prologue_sal (struct symtab_and_line *sal)\n      have proven the CU (Compilation Unit) supports it.  sal->SYMTAB does not\n      have to be set by the caller so we use SYM instead.  */\n   if (sym != NULL\n-      && SYMTAB_COMPUNIT (symbol_symtab (sym))->locations_valid ())\n+      && symbol_symtab (sym)->compunit ()->locations_valid ())\n     force_skip = 0;\n \n   saved_pc = pc;\n@@ -6095,7 +6095,7 @@ collect_file_symbol_completion_matches (completion_tracker &tracker,\n      for symbols which match.  */\n   iterate_over_symtabs (srcfile, [&] (symtab *s)\n     {\n-      add_symtab_completions (SYMTAB_COMPUNIT (s),\n+      add_symtab_completions (s->compunit (),\n \t\t\t      tracker, mode, lookup_name,\n \t\t\t      sym_text, word, TYPE_CODE_UNDEF);\n       return false;"
    },
    {
      "sha": "c313d54de18e40dbfe4c50579d703a8c7db95f97",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 15,
      "deletions": 6,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -1373,14 +1373,24 @@ typedef std::vector<CORE_ADDR> section_offsets;\n \n struct symtab\n {\n+  struct compunit_symtab *compunit () const\n+  {\n+    return m_compunit;\n+  }\n+\n+  void set_compunit (struct compunit_symtab *compunit)\n+  {\n+    m_compunit = compunit;\n+  }\n+\n   /* Unordered chain of all filetabs in the compunit,  with the exception\n      that the \"main\" source file is the first entry in the list.  */\n \n   struct symtab *next;\n \n   /* Backlink to containing compunit symtab.  */\n \n-  struct compunit_symtab *compunit_symtab;\n+  struct compunit_symtab *m_compunit;\n \n   /* Table mapping core addresses to line numbers for this file.\n      Can be NULL if none.  Never shared between different symtabs.  */\n@@ -1405,15 +1415,14 @@ struct symtab\n \n using symtab_range = next_range<symtab>;\n \n-#define SYMTAB_COMPUNIT(symtab) ((symtab)->compunit_symtab)\n #define SYMTAB_LINETABLE(symtab) ((symtab)->linetable)\n #define SYMTAB_LANGUAGE(symtab) ((symtab)->language)\n #define SYMTAB_BLOCKVECTOR(symtab) \\\n-  (SYMTAB_COMPUNIT (symtab)->blockvector ())\n+  (symtab->compunit ()->blockvector ())\n #define SYMTAB_OBJFILE(symtab) \\\n-  (SYMTAB_COMPUNIT (symtab)->objfile ())\n+  (symtab->compunit ()->objfile ())\n #define SYMTAB_PSPACE(symtab) (SYMTAB_OBJFILE (symtab)->pspace)\n-#define SYMTAB_DIRNAME(symtab) (SYMTAB_COMPUNIT (symtab)->dirname ())\n+#define SYMTAB_DIRNAME(symtab) ((symtab)->compunit ()->dirname ())\n \n /* Compunit symtabs contain the actual \"symbol table\", aka blockvector, as well\n    as the list of all source files (what gdb has historically associated with\n@@ -1665,7 +1674,7 @@ extern enum language compunit_language (const struct compunit_symtab *cust);\n static inline bool\n is_main_symtab_of_compunit_symtab (struct symtab *symtab)\n {\n-  return symtab == SYMTAB_COMPUNIT (symtab)->primary_filetab ();\n+  return symtab == symtab->compunit ()->primary_filetab ();\n }\n \f\n "
    },
    {
      "sha": "a252574c94e263bee0af2c3883ffcb3c0466b43d",
      "filename": "gdb/z80-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/z80-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c61596525811d9b0fe79be8f11e5a142ade96dab/gdb/z80-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/z80-tdep.c?ref=c61596525811d9b0fe79be8f11e5a142ade96dab",
      "patch": "@@ -495,7 +495,7 @@ z80_skip_prologue (struct gdbarch *gdbarch, CORE_ADDR pc)\n   if (prologue_end != 0)\n     {\n       struct symtab_and_line prologue_sal = find_pc_line (func_addr, 0);\n-      struct compunit_symtab *compunit = SYMTAB_COMPUNIT (prologue_sal.symtab);\n+      struct compunit_symtab *compunit = prologue_sal.symtab->compunit ();\n       const char *debug_format = compunit->debugformat ();\n \n       if (debug_format != NULL &&"
    }
  ]
}