{
  "sha": "111b33f0b8d4872296bb0173bb82b0c5ddb9785d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTExYjMzZjBiOGQ0ODcyMjk2YmIwMTczYmI4MmIwYzVkZGI5Nzg1ZA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-12T07:47:15Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-12T07:47:15Z"
    },
    "message": "[gdb/testsuite] Fix duplicate test-names in gdb.dwarf2\n\nWe currently have these duplicate test-names in gdb.dwarf2:\n...\n$ grep ^DUPLICATE: gdb.sum\nDUPLICATE: gdb.dwarf2/comp-unit-lang.exp: show language\nDUPLICATE: gdb.dwarf2/data-loc.exp: get integer valueof \"sizeof (int)\"\nDUPLICATE: gdb.dwarf2/data-loc.exp: get integer valueof \"sizeof (void *)\"\nDUPLICATE: gdb.dwarf2/data-loc.exp: get integer valueof \"sizeof (int)\"\nDUPLICATE: gdb.dwarf2/data-loc.exp: get integer valueof \"sizeof (int)\"\nDUPLICATE: gdb.dwarf2/data-loc.exp: ptype foo.array_type\nDUPLICATE: gdb.dwarf2/varval.exp: get integer valueof \"sizeof (int)\"\nDUPLICATE: gdb.dwarf2/varval.exp: get integer valueof \"sizeof (void *)\"\nDUPLICATE: gdb.dwarf2/implref-struct.exp: print-object=off: \\\n  set print object off\nDUPLICATE: gdb.dwarf2/implref-struct.exp: print-object=on: \\\n  set print object on\nDUPLICATE: gdb.dwarf2/dw2-bad-parameter-type.exp: ptype f\n...\n\nFix as appropriate.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-05-12  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.dwarf2/comp-unit-lang.exp: Use with_test_prefix.\n\t* gdb.dwarf2/dw2-bad-parameter-type.exp: Same.\n\t* gdb.dwarf2/implref-struct.exp: Same.\n\t* gdb.dwarf2/varval.exp: Ensure get_sizeof is called once per type.\n\t* gdb.dwarf2/data-loc.exp: Same.  Remove duplicate test.",
    "tree": {
      "sha": "3c0990e16c598f860efdb56bf7d72e63260f63ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3c0990e16c598f860efdb56bf7d72e63260f63ad"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/111b33f0b8d4872296bb0173bb82b0c5ddb9785d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/111b33f0b8d4872296bb0173bb82b0c5ddb9785d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/111b33f0b8d4872296bb0173bb82b0c5ddb9785d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ebf470809eba7c34713a2ea95e73e794582bcbd4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ebf470809eba7c34713a2ea95e73e794582bcbd4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ebf470809eba7c34713a2ea95e73e794582bcbd4"
    }
  ],
  "stats": {
    "total": 60,
    "additions": 38,
    "deletions": 22
  },
  "files": [
    {
      "sha": "53181b685a601c78326a14b4a87ff682905c36cd",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=111b33f0b8d4872296bb0173bb82b0c5ddb9785d",
      "patch": "@@ -1,3 +1,11 @@\n+2020-05-12  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.dwarf2/comp-unit-lang.exp: Use with_test_prefix.\n+\t* gdb.dwarf2/dw2-bad-parameter-type.exp: Same.\n+\t* gdb.dwarf2/implref-struct.exp: Same.\n+\t* gdb.dwarf2/varval.exp: Ensure get_sizeof is called once per type.\n+\t* gdb.dwarf2/data-loc.exp: Same.  Remove duplicate test.\n+\n 2020-05-11  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* gdb.base/jit-so.exp (one_jit_test): Change test name."
    },
    {
      "sha": "8ff6b733cc97e8282e3f27b19785bf1b9082748a",
      "filename": "gdb/testsuite/gdb.dwarf2/comp-unit-lang.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/gdb/testsuite/gdb.dwarf2/comp-unit-lang.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/gdb/testsuite/gdb.dwarf2/comp-unit-lang.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/comp-unit-lang.exp?ref=111b33f0b8d4872296bb0173bb82b0c5ddb9785d",
      "patch": "@@ -73,8 +73,14 @@ proc do_test {cu_lang gdb_lang} {\n     gdb_test \"show language\" \"\\\"auto; currently $gdb_lang\\\".*\"\n }\n \n+proc do_test_with_prefix {cu_lang gdb_lang} {\n+    with_test_prefix $gdb_lang {\n+\tdo_test $cu_lang $gdb_lang\n+    }\n+}\n+\n # Some paths in the debugger fall back to C.  Check C++ as well to\n # make sure the test doesn't happen to work because of such a\n # fallback.\n-do_test DW_LANG_C \"c\"\n-do_test DW_LANG_C_plus_plus \"c\\\\+\\\\+\"\n+do_test_with_prefix DW_LANG_C \"c\"\n+do_test_with_prefix DW_LANG_C_plus_plus \"c\\\\+\\\\+\""
    },
    {
      "sha": "de21dffa1e4ec9222f107cf5adfdfc9708d57f58",
      "filename": "gdb/testsuite/gdb.dwarf2/data-loc.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/gdb/testsuite/gdb.dwarf2/data-loc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/gdb/testsuite/gdb.dwarf2/data-loc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/data-loc.exp?ref=111b33f0b8d4872296bb0173bb82b0c5ddb9785d",
      "patch": "@@ -43,6 +43,7 @@ Dwarf::assemble $asm_file {\n         } {\n             declare_labels integer_label array_label array_ptr_label\n \t    set int_size [get_sizeof \"int\" 4]\n+\t    set voidp_size [get_sizeof \"void *\" 96]\n \n             integer_label: DW_TAG_base_type {\n                 {DW_AT_byte_size $int_size DW_FORM_sdata}\n@@ -63,16 +64,16 @@ Dwarf::assemble $asm_file {\n \t\t    {DW_AT_type        :$integer_label}\n                     {DW_AT_lower_bound {\n                         DW_OP_push_object_address\n-                        DW_OP_plus_uconst [get_sizeof \"void *\" 96]\n+                        DW_OP_plus_uconst $voidp_size\n                         DW_OP_deref\n-                        DW_OP_deref_size [get_sizeof \"int\" 4]\n+                        DW_OP_deref_size $int_size\n                     } SPECIAL_expr}\n                     {DW_AT_upper_bound {\n                         DW_OP_push_object_address\n-                        DW_OP_plus_uconst [get_sizeof \"void *\" 96]\n+                        DW_OP_plus_uconst $voidp_size\n                         DW_OP_deref\n-                        DW_OP_plus_uconst [get_sizeof \"int\" 4]\n-                        DW_OP_deref_size [get_sizeof \"int\" 4]\n+                        DW_OP_plus_uconst $int_size\n+                        DW_OP_deref_size $int_size\n                     } SPECIAL_expr}\n \t\t}\n \t    }\n@@ -226,9 +227,6 @@ gdb_test \"print foo.five_tdef\" \\\n gdb_test \"ptype foo.five_tdef\" \\\n          \"type = array \\\\(2 .. 6\\\\) of integer\"\n \n-gdb_test \"ptype foo.array_type\" \\\n-         \"type = array \\\\(<>\\\\) of integer\"\n-\n gdb_test \"print foo.five_tdef(2)\" \\\n          \" = 5\"\n "
    },
    {
      "sha": "8b51de0d398d7b79273c37272d6ad3716244c84d",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-bad-parameter-type.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/gdb/testsuite/gdb.dwarf2/dw2-bad-parameter-type.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/gdb/testsuite/gdb.dwarf2/dw2-bad-parameter-type.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-bad-parameter-type.exp?ref=111b33f0b8d4872296bb0173bb82b0c5ddb9785d",
      "patch": "@@ -31,7 +31,10 @@ clean_restart $executable\n \n # The first access (as we do not use -readnow) prints some:\n # Dwarf Error: Cannot find DIE at 0x0 referenced from DIE at 0x29 [in module ...]\n-gdb_test \"ptype f\"\n-\n-gdb_test \"ptype f\"\n+with_test_prefix \"first\" {\n+    gdb_test \"ptype f\"\n+}\n+with_test_prefix \"second\" {\n+    gdb_test \"ptype f\"\n+}\n gdb_test \"p 5\" \" = 5\" \"is alive\""
    },
    {
      "sha": "b00408b4089b400c7ffcc8908730dde6bb22b21f",
      "filename": "gdb/testsuite/gdb.dwarf2/implref-struct.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/gdb/testsuite/gdb.dwarf2/implref-struct.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/gdb/testsuite/gdb.dwarf2/implref-struct.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/implref-struct.exp?ref=111b33f0b8d4872296bb0173bb82b0c5ddb9785d",
      "patch": "@@ -177,9 +177,11 @@ foreach_with_prefix print-object {\"off\" \"on\"} {\n # Test assignment through the synthetic reference.\n gdb_test_no_output \"set (ref = s2)\"\n \n-foreach_with_prefix print-object {\"off\" \"on\"} {\n-    gdb_test_no_output \"set print object ${print-object}\"\n+with_test_prefix \"after assignment\" {\n+    foreach_with_prefix print-object {\"off\" \"on\"} {\n+\tgdb_test_no_output \"set print object ${print-object}\"\n \n-    gdb_test \"print ref\" \" = \\\\(S &\\\\) @${address}: \\\\{${s2_members}\\\\}\" \"print ref after assignment\"\n-    gdb_test \"print s1\" \" = \\\\{${s2_members}\\\\}\" \"print s1 after assignment\"\n+\tgdb_test \"print ref\" \" = \\\\(S &\\\\) @${address}: \\\\{${s2_members}\\\\}\" \"print ref\"\n+\tgdb_test \"print s1\" \" = \\\\{${s2_members}\\\\}\" \"print s1\"\n+    }\n }"
    },
    {
      "sha": "876725be62f4d60cc4168c424ee223dab5babb7d",
      "filename": "gdb/testsuite/gdb.dwarf2/varval.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/gdb/testsuite/gdb.dwarf2/varval.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/111b33f0b8d4872296bb0173bb82b0c5ddb9785d/gdb/testsuite/gdb.dwarf2/varval.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/varval.exp?ref=111b33f0b8d4872296bb0173bb82b0c5ddb9785d",
      "patch": "@@ -38,14 +38,17 @@ set asm_file [standard_output_file ${srcfile2}]\n if [prepare_for_testing \"failed to prepare\" ${testfile} ${srcfile}] {\n     return -1\n }\n+set int_size [get_sizeof \"int\" -1]\n+# gdb always assumes references are implemented as pointers.\n+set addr_size [get_sizeof \"void *\" -1]\n \n proc setup_exec { arg_bad } {\n     global asm_file executable srcfile bad\n     set bad ${arg_bad}\n \n     # Create the DWARF.  \n     Dwarf::assemble ${asm_file} {\n-\tglobal srcdir subdir srcfile bad\n+\tglobal srcdir subdir srcfile bad int_size addr_size\n \n \tcu {} {\n \t    DW_TAG_compile_unit {\n@@ -58,10 +61,6 @@ proc setup_exec { arg_bad } {\n \t\t    varval2_label varval3_def_label varval3_decl_label \\\n \t\t    int_array_label int_array_of_1_label\n \n-\t\tset int_size [get_sizeof \"int\" -1]\n-\n-\t\t# gdb always assumes references are implemented as pointers.\n-\t\tset addr_size [get_sizeof \"void *\" -1]\n \n \t\tint_label: DW_TAG_base_type {\n \t\t    {DW_AT_byte_size ${int_size} DW_FORM_udata}"
    }
  ]
}