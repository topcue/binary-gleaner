{
  "sha": "7efc87ffcb6cf97592821741a48c373d7e82eb0b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2VmYzg3ZmZjYjZjZjk3NTkyODIxNzQxYTQ4YzM3M2Q3ZTgyZWIwYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:10Z"
    },
    "message": "Split out ada_unop_in_range\n\nThis splits UNOP_IN_RANGE into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_unop_in_range): New function.\n\t(ada_evaluate_subexp): Use it.",
    "tree": {
      "sha": "1ef7f07c0962295873cbe47eef6ae2b5abeea2f8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1ef7f07c0962295873cbe47eef6ae2b5abeea2f8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7efc87ffcb6cf97592821741a48c373d7e82eb0b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7efc87ffcb6cf97592821741a48c373d7e82eb0b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7efc87ffcb6cf97592821741a48c373d7e82eb0b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7efc87ffcb6cf97592821741a48c373d7e82eb0b/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "82390ab88ce41c4fcc26584de895bb2fc24c697e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82390ab88ce41c4fcc26584de895bb2fc24c697e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/82390ab88ce41c4fcc26584de895bb2fc24c697e"
    }
  ],
  "stats": {
    "total": 70,
    "additions": 43,
    "deletions": 27
  },
  "files": [
    {
      "sha": "d81a8765d3ff3e33e7100f39b297139abaf03de6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7efc87ffcb6cf97592821741a48c373d7e82eb0b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7efc87ffcb6cf97592821741a48c373d7e82eb0b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7efc87ffcb6cf97592821741a48c373d7e82eb0b",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_unop_in_range): New function.\n+\t(ada_evaluate_subexp): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_unop_neg): New function."
    },
    {
      "sha": "ac080fee4340165ef1d45cc7e97b1d3810c2c16b",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 38,
      "deletions": 27,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7efc87ffcb6cf97592821741a48c373d7e82eb0b/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7efc87ffcb6cf97592821741a48c373d7e82eb0b/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=7efc87ffcb6cf97592821741a48c373d7e82eb0b",
      "patch": "@@ -9974,6 +9974,43 @@ ada_unop_neg (struct type *expect_type,\n   return value_neg (arg1);\n }\n \n+/* A helper function for UNOP_IN_RANGE.  */\n+\n+static value *\n+ada_unop_in_range (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside, enum exp_opcode op,\n+\t\t   struct value *arg1, struct type *type)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+\n+  struct value *arg2, *arg3;\n+  switch (type->code ())\n+    {\n+    default:\n+      lim_warning (_(\"Membership test incompletely implemented; \"\n+\t\t     \"always returns true\"));\n+      type = language_bool_type (exp->language_defn, exp->gdbarch);\n+      return value_from_longest (type, (LONGEST) 1);\n+\n+    case TYPE_CODE_RANGE:\n+      arg2 = value_from_longest (type,\n+\t\t\t\t type->bounds ()->low.const_val ());\n+      arg3 = value_from_longest (type,\n+\t\t\t\t type->bounds ()->high.const_val ());\n+      binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n+      binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg3);\n+      type = language_bool_type (exp->language_defn, exp->gdbarch);\n+      return\n+\tvalue_from_longest (type,\n+\t\t\t    (value_less (arg1, arg3)\n+\t\t\t     || value_equal (arg1, arg3))\n+\t\t\t    && (value_less (arg2, arg1)\n+\t\t\t\t|| value_equal (arg2, arg1)));\n+    }\n+}\n+\n /* Implement the evaluate_exp routine in the exp_descriptor structure\n    for the Ada language.  */\n \n@@ -10514,33 +10551,7 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n       (*pos) += 2;\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);\n       type = check_typedef (exp->elts[pc + 1].type);\n-\n-      if (noside == EVAL_SKIP)\n-\tgoto nosideret;\n-\n-      switch (type->code ())\n-\t{\n-\tdefault:\n-\t  lim_warning (_(\"Membership test incompletely implemented; \"\n-\t\t\t \"always returns true\"));\n-\t  type = language_bool_type (exp->language_defn, exp->gdbarch);\n-\t  return value_from_longest (type, (LONGEST) 1);\n-\n-\tcase TYPE_CODE_RANGE:\n-\t  arg2 = value_from_longest (type,\n-\t\t\t\t     type->bounds ()->low.const_val ());\n-\t  arg3 = value_from_longest (type,\n-\t\t\t\t     type->bounds ()->high.const_val ());\n-\t  binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n-\t  binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg3);\n-\t  type = language_bool_type (exp->language_defn, exp->gdbarch);\n-\t  return\n-\t    value_from_longest (type,\n-\t\t\t\t(value_less (arg1, arg3)\n-\t\t\t\t || value_equal (arg1, arg3))\n-\t\t\t\t&& (value_less (arg2, arg1)\n-\t\t\t\t    || value_equal (arg2, arg1)));\n-\t}\n+      return ada_unop_in_range (expect_type, exp, noside, op, arg1, type);\n \n     case BINOP_IN_BOUNDS:\n       (*pos) += 2;"
    }
  ]
}