{
  "sha": "10a85f29c74ab562db622cfc4f58997e859c6ed6",
  "node_id": "C_kwDOANOeidoAKDEwYTg1ZjI5Yzc0YWI1NjJkYjYyMmNmYzRmNTg5OTdlODU5YzZlZDY",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-01-06T12:53:20Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-01-06T15:44:50Z"
    },
    "message": "gdb: make use add_setshow_prefix_cmd in gnu-nat.c\n\nIn gnu-nat.c we currently implement some set/show prefix commands\n\"manually\", that is, we call add_prefix_cmd, and assign a set and show\nfunction to each prefix command.\n\nThese set/show functions print an error indicating that the user\ndidn't type a complete command.\n\nIf we instead switch to using add_setshow_prefix_cmd then we can\ndelete the set/show functions, GDB provides some default functions,\nwhich give a nice help style summary that lists all of the available\nsub-commands, along with a one line summary of what each does.\n\nThough this clearly changes the existing behaviour, I think this\nchange is acceptable as the new behaviour is more inline with other\nset/show prefix commands, and the new behaviour is more informative.\n\nThis change will conflict with Tom's change here:\n\n  https://sourceware.org/pipermail/gdb-patches/2022-January/184724.html\n\nWhere Tom changes the set/show functions that I delete.  My suggestion\nis that the set/show functions still be deleted even after Tom's\npatch (or instead of Tom's patch).\n\nFor testing I've build GDB on GNU/Hurd, and manually tested these\nfunctions.  I did a grep over the testsuite, and don't believe the\nexisting error messages are being checked for in any tests.",
    "tree": {
      "sha": "30d45dd6c8e647f3a92502c34e61081f9d308d84",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/30d45dd6c8e647f3a92502c34e61081f9d308d84"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/10a85f29c74ab562db622cfc4f58997e859c6ed6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10a85f29c74ab562db622cfc4f58997e859c6ed6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/10a85f29c74ab562db622cfc4f58997e859c6ed6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10a85f29c74ab562db622cfc4f58997e859c6ed6/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "390abcd903a470c0d3ede640dcb0b7cb62ee9852",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/390abcd903a470c0d3ede640dcb0b7cb62ee9852",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/390abcd903a470c0d3ede640dcb0b7cb62ee9852"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 13,
    "deletions": 46
  },
  "files": [
    {
      "sha": "b39dfaf009c29ab04bf957e7b496fa0cbfaea934",
      "filename": "gdb/gnu-nat.c",
      "status": "modified",
      "additions": 13,
      "deletions": 46,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10a85f29c74ab562db622cfc4f58997e859c6ed6/gdb/gnu-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10a85f29c74ab562db622cfc4f58997e859c6ed6/gdb/gnu-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gnu-nat.c?ref=10a85f29c74ab562db622cfc4f58997e859c6ed6",
      "patch": "@@ -2701,38 +2701,6 @@ struct cmd_list_element *show_thread_cmd_list = NULL;\n struct cmd_list_element *set_thread_default_cmd_list = NULL;\n struct cmd_list_element *show_thread_default_cmd_list = NULL;\n \n-static void\n-set_thread_cmd (const char *args, int from_tty)\n-{\n-  fprintf_filtered (gdb_stderr,\n-\t\t    \"\\\"set thread\\\" must be followed by the \"\n-\t\t    \"name of a thread property, or \\\"default\\\".\\n\");\n-}\n-\n-static void\n-show_thread_cmd (const char *args, int from_tty)\n-{\n-  fprintf_unfiltered (gdb_stderr,\n-\t\t      \"\\\"show thread\\\" must be followed by the \"\n-\t\t      \"name of a thread property, or \\\"default\\\".\\n\");\n-}\n-\n-static void\n-set_thread_default_cmd (const char *args, int from_tty)\n-{\n-  fprintf_unfiltered (gdb_stderr,\n-\t\t      \"\\\"set thread default\\\" must be followed \"\n-\t\t      \"by the name of a thread property.\\n\");\n-}\n-\n-static void\n-show_thread_default_cmd (const char *args, int from_tty)\n-{\n-  fprintf_unfiltered (gdb_stderr,\n-\t\t      \"\\\"show thread default\\\" must be followed \"\n-\t\t      \"by the name of a thread property.\\n\");\n-}\n-\n static int\n parse_int_arg (const char *args, const char *cmd_prefix)\n {\n@@ -3417,20 +3385,19 @@ thread_takeover_sc_cmd (const char *args, int from_tty)\n static void\n add_thread_commands (void)\n {\n-  add_prefix_cmd (\"thread\", no_class, set_thread_cmd,\n-\t\t  _(\"Command prefix for setting thread properties.\"),\n-\t\t  &set_thread_cmd_list, 0, &setlist);\n-  add_prefix_cmd (\"default\", no_class, show_thread_cmd,\n-\t\t  _(\"Command prefix for setting default thread properties.\"),\n-\t\t  &set_thread_default_cmd_list, 0,\n-\t\t  &set_thread_cmd_list);\n-  add_prefix_cmd (\"thread\", no_class, set_thread_default_cmd,\n-\t\t  _(\"Command prefix for showing thread properties.\"),\n-\t\t  &show_thread_cmd_list, 0, &showlist);\n-  add_prefix_cmd (\"default\", no_class, show_thread_default_cmd,\n-\t\t  _(\"Command prefix for showing default thread properties.\"),\n-\t\t  &show_thread_default_cmd_list, 0,\n-\t\t  &show_thread_cmd_list);\n+  add_setshow_prefix_cmd (\"thread\", no_class,\n+\t\t\t  _(\"Command prefix for setting thread properties.\"),\n+\t\t\t  _(\"Command prefix for showing thread properties.\"),\n+\t\t\t  &set_thread_cmd_list,\n+\t\t\t  &show_thread_cmd_list,\n+\t\t\t  &setlist, &showlist);\n+\n+  add_setshow_prefix_cmd (\"default\", no_class,\n+\t\t\t  _(\"Command prefix for setting default thread properties.\"),\n+\t\t\t  _(\"Command prefix for showing default thread properties.\"),\n+\t\t\t  &set_thread_default_cmd_list,\n+\t\t\t  &show_thread_default_cmd_list,\n+\t\t\t  &set_thread_cmd_list, &show_thread_cmd_list);\n \n   add_cmd (\"pause\", class_run, set_thread_pause_cmd, _(\"\\\n Set whether the current thread is suspended while gdb has control.\\n\\"
    }
  ]
}