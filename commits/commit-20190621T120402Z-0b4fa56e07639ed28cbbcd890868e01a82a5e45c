{
  "sha": "0b4fa56e07639ed28cbbcd890868e01a82a5e45c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGI0ZmE1NmUwNzYzOWVkMjhjYmJjZDg5MDg2OGUwMWE4MmE1ZTQ1Yw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-06-19T11:27:18Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-06-21T12:04:02Z"
    },
    "message": "libctf: unidentified type kinds on open are a sign of file corruption\n\nIf we see a CTF type with a kind we do not recognize in its ctt_info\nduring opening, we cannot skip it and continue opening the file: if the\ntype kind is unknown, we do not know how long its vlen is, and we cannot\nhave skipped past it: so if we continue reading we will almost certainly\nread in part of the vlen as if it were a new ctf_type_t.\n\nAvoid this trouble by considering unknown type kinds to be a reason to\nreturn ECTF_CORRUPT, just like everything else that reads in type kinds\ndoes.\n\nlibctf/\n\t* ctf-open.c (ctf_types): Fail when unidentified type kinds are\n\tseen.",
    "tree": {
      "sha": "4e0436f0ee4b301e7bb7c302708bd3a84196fb91",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4e0436f0ee4b301e7bb7c302708bd3a84196fb91"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0b4fa56e07639ed28cbbcd890868e01a82a5e45c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b4fa56e07639ed28cbbcd890868e01a82a5e45c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0b4fa56e07639ed28cbbcd890868e01a82a5e45c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b4fa56e07639ed28cbbcd890868e01a82a5e45c/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "364620bf636a0a961892c9274616f8d5ad85eecc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/364620bf636a0a961892c9274616f8d5ad85eecc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/364620bf636a0a961892c9274616f8d5ad85eecc"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 9,
    "deletions": 0
  },
  "files": [
    {
      "sha": "ad5685b69147767dac01875e17da755e22effcfc",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b4fa56e07639ed28cbbcd890868e01a82a5e45c/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b4fa56e07639ed28cbbcd890868e01a82a5e45c/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=0b4fa56e07639ed28cbbcd890868e01a82a5e45c",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-19  Nick Alcock <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (ctf_types): Fail when unidentified type kinds are\n+\tseen.\n+\n 2019-06-19  Nick Alcock <nick.alcock@oracle.com>\n \n \t* ctf-open.c (ctf_bufopen): Dump header offsets into the debugging"
    },
    {
      "sha": "14f7062590abe48f02ed7fb2ec831259d8a77e30",
      "filename": "libctf/ctf-open.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b4fa56e07639ed28cbbcd890868e01a82a5e45c/libctf/ctf-open.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b4fa56e07639ed28cbbcd890868e01a82a5e45c/libctf/ctf-open.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-open.c?ref=0b4fa56e07639ed28cbbcd890868e01a82a5e45c",
      "patch": "@@ -856,6 +856,10 @@ init_types (ctf_file_t *fp, ctf_header_t *cth)\n \t  if (err != 0 && err != ECTF_STRTAB)\n \t    return err;\n \t  break;\n+\tdefault:\n+\t  ctf_dprintf (\"unhandled CTF kind in endianness conversion -- %x\\n\",\n+\t\t       kind);\n+\t  return ECTF_CORRUPT;\n \t}\n \n       *xp = (uint32_t) ((uintptr_t) tp - (uintptr_t) fp->ctf_buf);"
    }
  ]
}