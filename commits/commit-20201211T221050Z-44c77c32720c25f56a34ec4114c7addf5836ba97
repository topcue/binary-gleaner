{
  "sha": "44c77c32720c25f56a34ec4114c7addf5836ba97",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDRjNzdjMzI3MjBjMjVmNTZhMzRlYzQxMTRjN2FkZGY1ODM2YmE5Nw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-12-10T14:47:18Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-12-11T22:10:50Z"
    },
    "message": "gdb: make deprecated_cmd_warning i18n friendly\n\nRewrite deprecated_cmd_warning to be i18n friendly.  While I'm going\nthrough the function I also cleaned up some whitespace issues,\nreplaced uses of NULL with nullptr, and moved some comments to avoid\nhaving to add { ... }.\n\nThough the message being printed has a 'Warning: ' prefix I could have\nchanged from using printf_filtered to use warning, however, I haven't\ndone that in this commit as that would change what GDB outputs and I\nwanted this commit NOT to change the output.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* cli/cli-decode.c (deprecated_cmd_warning): Use nullptr instead\n\tof NULL.  Don't print message piece by piece, but sentence at a\n\ttime to allow internationalisation.  Some whitespace cleanup.",
    "tree": {
      "sha": "865794887de9bc0d9f95a885b35527d995ba1203",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/865794887de9bc0d9f95a885b35527d995ba1203"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/44c77c32720c25f56a34ec4114c7addf5836ba97",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44c77c32720c25f56a34ec4114c7addf5836ba97",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/44c77c32720c25f56a34ec4114c7addf5836ba97",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44c77c32720c25f56a34ec4114c7addf5836ba97/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9"
    }
  ],
  "stats": {
    "total": 85,
    "additions": 45,
    "deletions": 40
  },
  "files": [
    {
      "sha": "5a35eb20f45619578941ba08f896c5c30bc4e327",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44c77c32720c25f56a34ec4114c7addf5836ba97/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44c77c32720c25f56a34ec4114c7addf5836ba97/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=44c77c32720c25f56a34ec4114c7addf5836ba97",
      "patch": "@@ -1,3 +1,9 @@\n+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* cli/cli-decode.c (deprecated_cmd_warning): Use nullptr instead\n+\tof NULL.  Don't print message piece by piece, but sentence at a\n+\ttime to allow internationalisation.  Some whitespace cleanup.\n+\n 2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \tPR cli/15104"
    },
    {
      "sha": "2ad7717fbc63664f8ccdac6701a1c2ad521eb282",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 39,
      "deletions": 40,
      "changes": 79,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44c77c32720c25f56a34ec4114c7addf5836ba97/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44c77c32720c25f56a34ec4114c7addf5836ba97/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=44c77c32720c25f56a34ec4114c7addf5836ba97",
      "patch": "@@ -1686,6 +1686,7 @@ lookup_cmd_1 (const char **text, struct cmd_list_element *clist,\n       if (found->deprecated_warn_user && !lookup_for_completion_p)\n \tdeprecated_cmd_warning (line, clist);\n \n+\n       /* Return the default_args of the alias, not the default_args\n \t of the command it is pointing to.  */\n       if (default_args != nullptr)\n@@ -1899,59 +1900,57 @@ lookup_cmd (const char **line, struct cmd_list_element *list,\n void\n deprecated_cmd_warning (const char *text, struct cmd_list_element *list)\n {\n-  struct cmd_list_element *alias = NULL;\n-  struct cmd_list_element *prefix_cmd = NULL;\n-  struct cmd_list_element *cmd = NULL;\n+  struct cmd_list_element *alias = nullptr;\n+  struct cmd_list_element *prefix_cmd = nullptr;\n+  struct cmd_list_element *cmd = nullptr;\n \n+  /* Return if text doesn't evaluate to a command.  */\n   if (!lookup_cmd_composition_1 (text, &alias, &prefix_cmd, &cmd, list))\n-    /* Return if text doesn't evaluate to a command.  */\n     return;\n \n-  if (!((alias ? alias->deprecated_warn_user : 0)\n-      || cmd->deprecated_warn_user) ) \n-    /* Return if nothing is deprecated.  */\n+  /* Return if nothing is deprecated.  */\n+  if (!((alias != nullptr ? alias->deprecated_warn_user : 0)\n+\t|| cmd->deprecated_warn_user))\n     return;\n-  \n-  printf_filtered (\"Warning:\");\n-  \n-  if (alias && !cmd->cmd_deprecated)\n-    printf_filtered (\" '%s', an alias for the\", alias->name);\n-    \n-  printf_filtered (\" command '\");\n-  \n-  if (prefix_cmd)\n-    printf_filtered (\"%s\", prefix_cmd->prefixname);\n-  \n-  printf_filtered (\"%s\", cmd->name);\n-\n-  if (alias && cmd->cmd_deprecated)\n-    printf_filtered (\"' (%s) is deprecated.\\n\", alias->name);\n-  else\n-    printf_filtered (\"' is deprecated.\\n\"); \n-  \n \n-  /* If it is only the alias that is deprecated, we want to indicate\n-     the new alias, otherwise we'll indicate the new command.  */\n+  /* Join command prefix (if any) and the command name.  */\n+  std::string tmp_cmd_str;\n+  if (prefix_cmd != nullptr)\n+    tmp_cmd_str += std::string (prefix_cmd->prefixname);\n+  tmp_cmd_str += std::string (cmd->name);\n \n-  if (alias && !cmd->cmd_deprecated)\n-    {\n-      if (alias->replacement)\n-\tprintf_filtered (\"Use '%s'.\\n\\n\", alias->replacement);\n-      else\n-\tprintf_filtered (\"No alternative known.\\n\\n\");\n-     }  \n-  else\n+  /* Display the appropriate first line, this warns that the thing the user\n+     entered is deprecated.  */\n+  if (alias != nullptr)\n     {\n-      if (cmd->replacement)\n-\tprintf_filtered (\"Use '%s'.\\n\\n\", cmd->replacement);\n+      if (cmd->cmd_deprecated)\n+\tprintf_filtered (_(\"Warning: command '%s' (%s) is deprecated.\\n\"),\n+\t\t\t tmp_cmd_str.c_str (), alias->name);\n       else\n-\tprintf_filtered (\"No alternative known.\\n\\n\");\n+\tprintf_filtered (_(\"Warning: '%s', an alias for the command '%s' \"\n+\t\t\t   \"is deprecated.\\n\"),\n+\t\t\t alias->name, tmp_cmd_str.c_str ());\n     }\n+  else\n+    printf_filtered (_(\"Warning: command '%s' is deprecated.\\n\"),\n+\t\t     tmp_cmd_str.c_str ());\n+\n+  /* Now display a second line indicating what the user should use instead.\n+     If it is only the alias that is deprecated, we want to indicate the\n+     new alias, otherwise we'll indicate the new command.  */\n+  const char *replacement;\n+  if (alias != nullptr && !cmd->cmd_deprecated)\n+    replacement = alias->replacement;\n+  else\n+    replacement = cmd->replacement;\n+  if (replacement != nullptr)\n+    printf_filtered (_(\"Use '%s'.\\n\\n\"), replacement);\n+  else\n+    printf_filtered (_(\"No alternative known.\\n\\n\"));\n \n   /* We've warned you, now we'll keep quiet.  */\n-  if (alias)\n+  if (alias != nullptr)\n     alias->deprecated_warn_user = 0;\n-  \n   cmd->deprecated_warn_user = 0;\n }\n "
    }
  ]
}