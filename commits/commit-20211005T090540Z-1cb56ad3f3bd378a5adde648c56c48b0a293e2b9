{
  "sha": "1cb56ad3f3bd378a5adde648c56c48b0a293e2b9",
  "node_id": "C_kwDOANOeidoAKDFjYjU2YWQzZjNiZDM3OGE1YWRkZTY0OGM1NmM0OGIwYTI5M2UyYjk",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-09-08T12:27:38Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-10-05T09:05:40Z"
    },
    "message": "gdb/python: update events test to handle missing exit_code\n\nThe test gdb.python/py-events.exp sets up a handler for the gdb.exited\nevent.  Unfortunately the handler is slightly broken, it assumes that\nthe exit_code attribute will always be present.  This is not always\nthe case.\n\nIn a later commit I am going to add more tests to py-events.exp test\nscript, and in so doing I expose the bug in our handling of gdb.exited\nevents.\n\nJust to be clear, GDB itself is fine, it is the test that is not\nwritten correctly according to the Python Events API.\n\nSo, in this commit I fix the Python code in the test, and extend the\ntest case to exercise more paths through the Python code.\n\nAdditionally, I noticed that the gdb.exited event is used as an\nexample in the documentation for how to write an event handler.\nUnfortunately the same bug that we had in our test was also present in\nthe example code in the manual.\n\nSo I've fixed that too.\n\nAfter this commit there is no functional change to GDB.",
    "tree": {
      "sha": "fae24a250e632dd0edb4e49c780ccfeab0fa786b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fae24a250e632dd0edb4e49c780ccfeab0fa786b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1cb56ad3f3bd378a5adde648c56c48b0a293e2b9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1cb56ad3f3bd378a5adde648c56c48b0a293e2b9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1cb56ad3f3bd378a5adde648c56c48b0a293e2b9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1cb56ad3f3bd378a5adde648c56c48b0a293e2b9/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "db0768c320ec61f47da74f3c8e18313fac5964dc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db0768c320ec61f47da74f3c8e18313fac5964dc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/db0768c320ec61f47da74f3c8e18313fac5964dc"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 28,
    "deletions": 2
  },
  "files": [
    {
      "sha": "b123b2409804ab5a5502c38679e1a646269e879d",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1cb56ad3f3bd378a5adde648c56c48b0a293e2b9/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1cb56ad3f3bd378a5adde648c56c48b0a293e2b9/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=1cb56ad3f3bd378a5adde648c56c48b0a293e2b9",
      "patch": "@@ -3202,7 +3202,10 @@ Here is an example:\n @smallexample\n def exit_handler (event):\n     print (\"event type: exit\")\n-    print (\"exit code: %d\" % (event.exit_code))\n+    if hasattr (event, 'exit_code'):\n+        print (\"exit code: %d\" % (event.exit_code))\n+    else:\n+        print (\"exit code not available\")\n \n gdb.events.exited.connect (exit_handler)\n @end smallexample"
    },
    {
      "sha": "78915241e0f0a50aa0bac05270103dbf23193d38",
      "filename": "gdb/testsuite/gdb.python/py-events.exp",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1cb56ad3f3bd378a5adde648c56c48b0a293e2b9/gdb/testsuite/gdb.python/py-events.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1cb56ad3f3bd378a5adde648c56c48b0a293e2b9/gdb/testsuite/gdb.python/py-events.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-events.exp?ref=1cb56ad3f3bd378a5adde648c56c48b0a293e2b9",
      "patch": "@@ -280,3 +280,23 @@ with_test_prefix \"inferior continue exit\" {\n     gdb_test \"continue\" \"exited with code.*\" \"continue to exit\"\n     gdb_test \"print \\$_foo\" \"= 2\" \"check foo after start continue\"\n }\n+\n+# Check that when GDB exits, we see gdb.ExitedEvent objects with no\n+# 'exit_code' attribute.\n+with_test_prefix \"gdb exiting\" {\n+    set saw_inferior_exit 0\n+    gdb_test_multiple \"quit\" \"\" {\n+\t-re \"Quit anyway\\\\? \\\\(y or n\\\\) $\" {\n+\t    send_gdb \"y\\n\"\n+\t    exp_continue\n+\t}\n+\t-re \"event type: exit\\r\\nexit code: not-present\\r\\nexit inf: $decimal\\r\\nexit pid: $decimal\\r\\ndir ok: False\\r\\n\" {\n+\t    incr saw_inferior_exit\n+\t    exp_continue\n+\t}\n+\teof {\n+\t    gdb_assert { $saw_inferior_exit == 2 }\n+\t    pass $gdb_test_name\n+\t}\n+    }\n+}"
    },
    {
      "sha": "b21f562bfd3002b39a579a17c7287cae2d2cda88",
      "filename": "gdb/testsuite/gdb.python/py-events.py",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1cb56ad3f3bd378a5adde648c56c48b0a293e2b9/gdb/testsuite/gdb.python/py-events.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1cb56ad3f3bd378a5adde648c56c48b0a293e2b9/gdb/testsuite/gdb.python/py-events.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-events.py?ref=1cb56ad3f3bd378a5adde648c56c48b0a293e2b9",
      "patch": "@@ -45,7 +45,10 @@ def breakpoint_stop_handler(event):\n def exit_handler(event):\n     assert isinstance(event, gdb.ExitedEvent)\n     print(\"event type: exit\")\n-    print(\"exit code: %d\" % (event.exit_code))\n+    if hasattr(event, 'exit_code'):\n+        print(\"exit code: %d\" % (event.exit_code))\n+    else:\n+        print(\"exit code: not-present\")\n     print(\"exit inf: %d\" % (event.inferior.num))\n     print(\"exit pid: %d\" % (event.inferior.pid))\n     print(\"dir ok: %s\" % str(\"exit_code\" in dir(event)))"
    }
  ]
}