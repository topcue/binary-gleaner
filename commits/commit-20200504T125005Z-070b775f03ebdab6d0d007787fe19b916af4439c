{
  "sha": "070b775f03ebdab6d0d007787fe19b916af4439c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDcwYjc3NWYwM2ViZGFiNmQwZDAwNzc4N2ZlMTliOTE2YWY0NDM5Yw==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-04T12:50:05Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-04T12:50:05Z"
    },
    "message": "GAS: Do not create an entry for the default directory if the directory table is empty.  Improve readelf's decoding of empty directory and file name tables.\n\n\tPR 25917\n\t* dwarf.c (display_debug_lines_decoded): Warn if encountering a\n\tsupicious number of entries for DWARF-5 format directory and file\n\tname tables.  Do not display file name table header if the table\n\tis empty.  Do not allocate space for empty tables.",
    "tree": {
      "sha": "92c9989fde303f3bfc75f68cc049f9535a3c2e8f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/92c9989fde303f3bfc75f68cc049f9535a3c2e8f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/070b775f03ebdab6d0d007787fe19b916af4439c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/070b775f03ebdab6d0d007787fe19b916af4439c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/070b775f03ebdab6d0d007787fe19b916af4439c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/070b775f03ebdab6d0d007787fe19b916af4439c/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fe05f369f0df7cad0a6500b79879addaad2e364d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe05f369f0df7cad0a6500b79879addaad2e364d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fe05f369f0df7cad0a6500b79879addaad2e364d"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 35,
    "deletions": 11
  },
  "files": [
    {
      "sha": "7cc692b3e5b9dddc91415f89bf248b24df4124ab",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/070b775f03ebdab6d0d007787fe19b916af4439c/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/070b775f03ebdab6d0d007787fe19b916af4439c/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=070b775f03ebdab6d0d007787fe19b916af4439c",
      "patch": "@@ -1,3 +1,11 @@\n+2020-05-04  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25917\n+\t* dwarf.c (display_debug_lines_decoded): Warn if encountering a\n+\tsupicious number of entries for DWARF-5 format directory and file\n+\tname tables.  Do not display file name table header if the table\n+\tis empty.  Do not allocate space for empty tables.\n+\n 2020-05-04  Alan Modra  <amodra@gmail.com>\n \n \t* readelf.c (process_nds32_specific): Check size of .nds32_e_flags"
    },
    {
      "sha": "61373bf44a2c6411921b64fa6c95917053a0883b",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 21,
      "deletions": 7,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/070b775f03ebdab6d0d007787fe19b916af4439c/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/070b775f03ebdab6d0d007787fe19b916af4439c/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=070b775f03ebdab6d0d007787fe19b916af4439c",
      "patch": "@@ -4343,6 +4343,8 @@ display_debug_lines_decoded (struct dwarf_section *  section,\n \n \t      /* Skip directories format.  */\n \t      SAFE_BYTE_GET_AND_INC (format_count, data, 1, end);\n+\t      if (format_count > 1)\n+\t\twarn (\"Unexpectedly large number of columns in the directory name table (%u)\\n\", format_count);\n \t      format_start = data;\n \t      for (formati = 0; formati < format_count; formati++)\n \t\t{\n@@ -4357,8 +4359,11 @@ display_debug_lines_decoded (struct dwarf_section *  section,\n \t\t  break;\n \t\t}\n \n-\t      directory_table = (unsigned char **)\n-\t\txmalloc (n_directories * sizeof (unsigned char *));\n+\t      if (n_directories == 0)\n+\t\tdirectory_table = NULL;\n+\t      else\n+\t\tdirectory_table = (unsigned char **)\n+\t\t  xmalloc (n_directories * sizeof (unsigned char *));\n \n \t      for (entryi = 0; entryi < n_directories; entryi++)\n \t\t{\n@@ -4411,6 +4416,9 @@ display_debug_lines_decoded (struct dwarf_section *  section,\n \n \t      /* Skip files format.  */\n \t      SAFE_BYTE_GET_AND_INC (format_count, data, 1, end);\n+\t      if (format_count > 5)\n+\t\twarn (\"Unexpectedly large number of columns in the file name table (%u)\\n\", format_count);\n+\t      format_count = 2;\n \t      format_start = data;\n \t      for (formati = 0; formati < format_count; formati++)\n \t\t{\n@@ -4419,14 +4427,17 @@ display_debug_lines_decoded (struct dwarf_section *  section,\n \t\t}\n \n \t      READ_ULEB (n_files, data, end);\n-\t      if (data == end)\n+\t      if (data == end && n_files > 0)\n \t\t{\n \t\t  warn (_(\"Corrupt file name list\\n\"));\n \t\t  break;\n \t\t}\n \n-\t      file_table = (File_Entry *) xcalloc (1, n_files\n-\t\t\t\t\t\t      * sizeof (File_Entry));\n+\t      if (n_files == 0)\n+\t\tfile_table = NULL;\n+\t      else\n+\t\tfile_table = (File_Entry *) xcalloc (1, n_files\n+\t\t\t\t\t\t     * sizeof (File_Entry));\n \n \t      for (entryi = 0; entryi < n_files; entryi++)\n \t\t{\n@@ -4582,7 +4593,7 @@ display_debug_lines_decoded (struct dwarf_section *  section,\n \n \t  /* Print the Compilation Unit's name and a header.  */\n \t  if (file_table == NULL)\n-\t    ;\n+\t    printf (_(\"CU: No directory table\\n\"));\n \t  else if (directory_table == NULL)\n \t    printf (_(\"CU: %s:\\n\"), file_table[0].name);\n \t  else\n@@ -4610,7 +4621,10 @@ display_debug_lines_decoded (struct dwarf_section *  section,\n \t\tprintf (\"%s:\\n\", file_table[0].name);\n \t    }\n \n-\t  printf (_(\"File name                            Line number    Starting address    View    Stmt\\n\"));\n+\t  if (n_files > 0)\n+\t    printf (_(\"File name                            Line number    Starting address    View    Stmt\\n\"));\n+\t  else\n+\t    printf (_(\"CU: Empty file name table\\n\"));\n \t  saved_linfo = linfo;\n \t}\n "
    },
    {
      "sha": "8d664f5aa197a8ef50c70def427b009b05d673fa",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/070b775f03ebdab6d0d007787fe19b916af4439c/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/070b775f03ebdab6d0d007787fe19b916af4439c/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=070b775f03ebdab6d0d007787fe19b916af4439c",
      "patch": "@@ -1,3 +1,5 @@\n+2020-05-04  Nick Clifton  <nickc@redhat.com>\n+\n 2020-05-04  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \tPR gas/25863\n@@ -10,6 +12,9 @@\n \tPR 25917\n \t* dwarf2dbg.c (out_dir_and_file_list): Check for the directory\n \ttable's existence before looking at its entries.\n+\tAlso do not emit a default directory entry if there are no\n+\tdirectories in use.\n+\n \t* testsuite/gas/elf/pr25917.s: New test source file.\n \t* testsuite/gas/elf/pr25917.d: New test driver.\n \t* testsuite/gas/elf/elf.exp (run_elf_list_test): Run the new test."
    },
    {
      "sha": "071450e19a182d69fdf8b8f5434b6df8ce976b3d",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/070b775f03ebdab6d0d007787fe19b916af4439c/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/070b775f03ebdab6d0d007787fe19b916af4439c/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=070b775f03ebdab6d0d007787fe19b916af4439c",
      "patch": "@@ -1981,7 +1981,6 @@ out_dir_and_file_list (void)\n   bfd_boolean emit_filesize = TRUE;\n \n   /* Output the Directory Table.  */\n-\n   if (DWARF2_LINE_VERSION >= 5)\n     {\n       out_byte (1);\n@@ -1993,7 +1992,7 @@ out_dir_and_file_list (void)\n     }\n       \n   /* Emit directory list.  */\n-  if (DWARF2_LINE_VERSION >= 5)\n+  if (DWARF2_LINE_VERSION >= 5 && dirs_in_use > 0)\n     {\n       if (dirs == NULL || dirs[0] == NULL)\n \tdir = remap_debug_filename (\".\");\n@@ -2017,7 +2016,6 @@ out_dir_and_file_list (void)\n     out_byte ('\\0');\n \n   /* Output the File Name Table.  */\n-\n   if (DWARF2_LINE_VERSION >= 5)\n     {\n       unsigned int columns = 4;\n@@ -2045,7 +2043,6 @@ out_dir_and_file_list (void)\n       \n       /* The number of format entries to follow.  */\n       out_byte (columns);\n-\n       /* The format of the file name.  */\n       out_uleb128 (DW_LNCT_path);\n       /* FIXME: it would be better to store these strings in"
    }
  ]
}