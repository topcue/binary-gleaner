{
  "sha": "952170707bb525babcd48f6e907512e36a4982ca",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTUyMTcwNzA3YmI1MjViYWJjZDQ4ZjZlOTA3NTEyZTM2YTQ5ODJjYQ==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-29T21:57:55Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-29T22:05:20Z"
    },
    "message": "sim: ppc: avoid shadowing errno\n\nIf the OS headers define the \"errno\" symbol, it breaks some of these\nfuncs that were using \"int errno\" itself.  Rename local vars to \"err\"\nto avoid that, and delete the old \"extern int errno\".",
    "tree": {
      "sha": "d393a7d0b1994e46d3f229352e2c0c90fb8590ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d393a7d0b1994e46d3f229352e2c0c90fb8590ed"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/952170707bb525babcd48f6e907512e36a4982ca",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/952170707bb525babcd48f6e907512e36a4982ca",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/952170707bb525babcd48f6e907512e36a4982ca",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/952170707bb525babcd48f6e907512e36a4982ca/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1f8ef36f752871485e6e462dc1cfaa8ac5058011",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f8ef36f752871485e6e462dc1cfaa8ac5058011",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1f8ef36f752871485e6e462dc1cfaa8ac5058011"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 16,
    "deletions": 16
  },
  "files": [
    {
      "sha": "501b9f8db9add85fbdb7171bfd797b95f8c7a0ed",
      "filename": "sim/ppc/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/952170707bb525babcd48f6e907512e36a4982ca/sim/ppc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/952170707bb525babcd48f6e907512e36a4982ca/sim/ppc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/ChangeLog?ref=952170707bb525babcd48f6e907512e36a4982ca",
      "patch": "@@ -1,3 +1,11 @@\n+2021-05-29  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* emul_generic.c (emul_write_status): Rename errno to err.\n+\t(emul_write2_status): Likewise.\n+\t* emul_generic.h (emul_write_status, emul_write2_status): Likewise.\n+\t* emul_netbsd.c (errno): Delete.\n+\t* emul_unix.c (errno): Delete.\n+\n 2021-05-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Makefile.in (INCLUDES): Add -I../.."
    },
    {
      "sha": "0018cea324f16a7887871a190999c7324defc804",
      "filename": "sim/ppc/emul_generic.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/952170707bb525babcd48f6e907512e36a4982ca/sim/ppc/emul_generic.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/952170707bb525babcd48f6e907512e36a4982ca/sim/ppc/emul_generic.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/emul_generic.c?ref=952170707bb525babcd48f6e907512e36a4982ca",
      "patch": "@@ -120,10 +120,10 @@ emul_read_string(char *dest,\n INLINE_EMUL_GENERIC void\n emul_write_status(cpu *processor,\n \t\t  int status,\n-\t\t  int errno)\n+\t\t  int err)\n {\n-  if (status == -1 && errno != 0) {\n-    cpu_registers(processor)->gpr[3] = errno;\n+  if (status == -1 && err != 0) {\n+    cpu_registers(processor)->gpr[3] = err;\n     CR_SET(0, cr_i_summary_overflow);\n   }\n   else {\n@@ -137,10 +137,10 @@ INLINE_EMUL_GENERIC void\n emul_write2_status(cpu *processor,\n \t\t   int status1,\n \t\t   int status2,\n-\t\t   int errno)\n+\t\t   int err)\n {\n-  if (status1 == -1 && errno != 0) {\n-    cpu_registers(processor)->gpr[3] = errno;\n+  if (status1 == -1 && err != 0) {\n+    cpu_registers(processor)->gpr[3] = err;\n     CR_SET(0, cr_i_summary_overflow);\n   }\n   else {"
    },
    {
      "sha": "8e0ebcaabd3320c4f15bac6013835bda7f1759f8",
      "filename": "sim/ppc/emul_generic.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/952170707bb525babcd48f6e907512e36a4982ca/sim/ppc/emul_generic.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/952170707bb525babcd48f6e907512e36a4982ca/sim/ppc/emul_generic.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/emul_generic.h?ref=952170707bb525babcd48f6e907512e36a4982ca",
      "patch": "@@ -123,13 +123,13 @@ INLINE_EMUL_GENERIC void emul_write_gpr64\n INLINE_EMUL_GENERIC void emul_write_status\n (cpu *processor,\n  int status,\n- int errno);\n+ int err);\n \n INLINE_EMUL_GENERIC void emul_write2_status\n (cpu *processor,\n  int status1,\n  int status2,\n- int errno);\n+ int err);\n \n INLINE_EMUL_GENERIC char *emul_read_string\n (char *dest,"
    },
    {
      "sha": "a97fc3b64609d0d32ce9191462849363e4b6e57f",
      "filename": "sim/ppc/emul_netbsd.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/952170707bb525babcd48f6e907512e36a4982ca/sim/ppc/emul_netbsd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/952170707bb525babcd48f6e907512e36a4982ca/sim/ppc/emul_netbsd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/emul_netbsd.c?ref=952170707bb525babcd48f6e907512e36a4982ca",
      "patch": "@@ -98,10 +98,6 @@ extern int getdirentries(int fd, char *buf, int nbytes, long *basep);\n #undef HAVE_GETDIRENTRIES\n #endif\n \n-#if (BSD < 199306) /* here BSD as just a bug */\n-extern int errno;\n-#endif\n-\n #ifndef STATIC_INLINE_EMUL_NETBSD\n #define STATIC_INLINE_EMUL_NETBSD STATIC_INLINE\n #endif"
    },
    {
      "sha": "cfcb4691247630bc3c18460872ffc8086df046b0",
      "filename": "sim/ppc/emul_unix.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/952170707bb525babcd48f6e907512e36a4982ca/sim/ppc/emul_unix.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/952170707bb525babcd48f6e907512e36a4982ca/sim/ppc/emul_unix.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/emul_unix.c?ref=952170707bb525babcd48f6e907512e36a4982ca",
      "patch": "@@ -124,10 +124,6 @@ int getrusage();\n #include <stdlib.h>\n #include <time.h>\n \n-#if defined(BSD) && !defined(errno) && (BSD < 199306)\t/* here BSD as just a bug */\n-extern int errno;\n-#endif\n-\n #ifndef STATIC_INLINE_EMUL_UNIX\n #define STATIC_INLINE_EMUL_UNIX STATIC_INLINE\n #endif"
    }
  ]
}