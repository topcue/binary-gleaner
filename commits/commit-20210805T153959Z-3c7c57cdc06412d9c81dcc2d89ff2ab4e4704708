{
  "sha": "3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2M3YzU3Y2RjMDY0MTJkOWM4MWRjYzJkODlmZjJhYjRlNDcwNDcwOA==",
  "commit": {
    "author": {
      "name": "Zoran Zaric",
      "email": "zoran.zaric@amd.com",
      "date": "2020-09-15T10:37:19Z"
    },
    "committer": {
      "name": "Zoran Zaric",
      "email": "zoran.zaric@amd.com",
      "date": "2021-08-05T15:39:59Z"
    },
    "message": "Move read_mem to dwarf_expr_context\n\nFollowing the idea of merging the evaluators, the read_mem method can\nbe moved from dwarf_expr_executor and dwarf_evaluate_loc_desc classes\nto their base class dwarf_expr_context.\n\ngdb/ChangeLog:\n\n\t* dwarf2/expr.c (dwarf_expr_context::read_mem): Move from\n\tdwarf_evaluate_loc_desc.\n\t* dwarf2/frame.c (dwarf_expr_executor::read_mem): Remove\n\tmethod.\n\t* dwarf2/loc.c (dwarf_evaluate_loc_desc::read_mem): Move to\n\tdwarf_expr_context.",
    "tree": {
      "sha": "84e78430ae81223e1b923ed4b7aab54cb0f90b6a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/84e78430ae81223e1b923ed4b7aab54cb0f90b6a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708/comments",
  "author": {
    "login": "ZaricZoran",
    "id": 81635026,
    "node_id": "MDQ6VXNlcjgxNjM1MDI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/81635026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZaricZoran",
    "html_url": "https://github.com/ZaricZoran",
    "followers_url": "https://api.github.com/users/ZaricZoran/followers",
    "following_url": "https://api.github.com/users/ZaricZoran/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZaricZoran/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZaricZoran/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZaricZoran/subscriptions",
    "organizations_url": "https://api.github.com/users/ZaricZoran/orgs",
    "repos_url": "https://api.github.com/users/ZaricZoran/repos",
    "events_url": "https://api.github.com/users/ZaricZoran/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZaricZoran/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ZaricZoran",
    "id": 81635026,
    "node_id": "MDQ6VXNlcjgxNjM1MDI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/81635026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZaricZoran",
    "html_url": "https://github.com/ZaricZoran",
    "followers_url": "https://api.github.com/users/ZaricZoran/followers",
    "following_url": "https://api.github.com/users/ZaricZoran/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZaricZoran/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZaricZoran/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZaricZoran/subscriptions",
    "organizations_url": "https://api.github.com/users/ZaricZoran/orgs",
    "repos_url": "https://api.github.com/users/ZaricZoran/repos",
    "events_url": "https://api.github.com/users/ZaricZoran/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZaricZoran/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "73e6b863308a026a5c87dc73ab2417ee39027d4c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/73e6b863308a026a5c87dc73ab2417ee39027d4c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/73e6b863308a026a5c87dc73ab2417ee39027d4c"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 10,
    "deletions": 13
  },
  "files": [
    {
      "sha": "dac693d2026d4dc816eccf482bef22791eca0537",
      "filename": "gdb/dwarf2/expr.c",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708/gdb/dwarf2/expr.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708/gdb/dwarf2/expr.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/expr.c?ref=3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708",
      "patch": "@@ -249,6 +249,15 @@ dwarf_expr_context::dwarf_call (cu_offset die_cu_off)\n   this->eval (block.data, block.size);\n }\n \n+/* See expr.h.  */\n+\n+void\n+dwarf_expr_context::read_mem (gdb_byte *buf, CORE_ADDR addr,\n+\t\t\t      size_t length)\n+{\n+  read_memory (addr, buf, length);\n+}\n+\n /* Require that TYPE be an integral type; throw an exception if not.  */\n \n static void"
    },
    {
      "sha": "3a085fd286e46bbef964c183bfa80444815689b2",
      "filename": "gdb/dwarf2/expr.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708/gdb/dwarf2/expr.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708/gdb/dwarf2/expr.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/expr.h?ref=3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708",
      "patch": "@@ -192,7 +192,7 @@ struct dwarf_expr_context\n   CORE_ADDR obj_address = 0;\n \n   /* Read LENGTH bytes at ADDR into BUF.  */\n-  virtual void read_mem (gdb_byte *buf, CORE_ADDR addr, size_t length) = 0;\n+  virtual void read_mem (gdb_byte *buf, CORE_ADDR addr, size_t length);\n \n   /* Push on DWARF stack an entry evaluated for DW_TAG_call_site's\n      parameter matching KIND and KIND_U at the caller of specified BATON."
    },
    {
      "sha": "76a546f0f5a0075ee88ed279310140c5b59f1147",
      "filename": "gdb/dwarf2/frame.c",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708/gdb/dwarf2/frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708/gdb/dwarf2/frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/frame.c?ref=3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708",
      "patch": "@@ -232,11 +232,6 @@ class dwarf_expr_executor : public dwarf_expr_context\n     : dwarf_expr_context (per_objfile)\n   {}\n \n-  void read_mem (gdb_byte *buf, CORE_ADDR addr, size_t len) override\n-  {\n-    read_memory (addr, buf, len);\n-  }\n-\n   void push_dwarf_reg_entry_value (enum call_site_parameter_kind kind,\n \t\t\t\t   union call_site_parameter_u kind_u,\n \t\t\t\t   int deref_size) override"
    },
    {
      "sha": "a23c67677289c58e9a72ab52b24976a994c720cc",
      "filename": "gdb/dwarf2/loc.c",
      "status": "modified",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708/gdb/dwarf2/loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708/gdb/dwarf2/loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/loc.c?ref=3c7c57cdc06412d9c81dcc2d89ff2ab4e4704708",
      "patch": "@@ -728,13 +728,6 @@ class dwarf_evaluate_loc_desc : public dwarf_expr_context\n \n     this->eval (data_src, size);\n   }\n-\n-  /* Read memory at ADDR (length LEN) into BUF.  */\n-\n-  void read_mem (gdb_byte *buf, CORE_ADDR addr, size_t len) override\n-  {\n-    read_memory (addr, buf, len);\n-  }\n };\n \n /* See dwarf2loc.h.  */"
    }
  ]
}