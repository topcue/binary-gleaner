{
  "sha": "cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2FmYjM0Mzg3ZDA2M2ZhNDdiYzJjZGIzM2ZjM2ZlMmYxM2U2Y2VjMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T15:56:35Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T15:59:03Z"
    },
    "message": "Remove unnecessary casts of NULL\n\nI noticed some unnecessary casts of NULL.  This removes all the\nunnecessary ones, leaving only ones where we must ensure that NULL has\npointer type for passing through varargs.\n\nI removed a couple of useless casts of 0 that I noticed while writing\nthis.\n\nTested by rebuilding.\n\ngdb/ChangeLog\n2019-06-16  Tom Tromey  <tom@tromey.com>\n\n\t* valops.c (value_cast, value_slice): Remove unnecessary cast.\n\t* breakpoint.c (stopin_command, stopat_command)\n\t(until_break_command, decode_location_default): Remove unnecessary\n\tcast.\n\t* utils.c (subset_compare): Remove unnecessary cast.\n\t* ada-lang.c (ada_update_initial_language): Remove unnecessary\n\tcast.\n\t* linespec.c (decode_line_with_last_displayed): Remove unnecessary\n\tcast.\n\t* infcmd.c (path_command): Remove unnecessary cast.\n\t* coffread.c (decode_type): Remove unnecessary cast.\n\t* xcoffread.c (read_xcoff_symtab): Remove unnecessary cast.\n\t* mipsread.c (mipscoff_symfile_read): Remove unnecessary cast.\n\t* tui/tui-stack.c (tui_show_locator_content)\n\t(tui_show_frame_info): Remove unnecessary cast.\n\t* tui/tui-win.c (tui_scroll_forward_command)\n\t(tui_scroll_backward_command, tui_set_focus, tui_set_win_height)\n\t(parse_scrolling_args): Remove unnecessary cast.\n\t* tui/tui-data.c (init_win_info, tui_del_window)\n\t(tui_free_window, tui_del_data_windows, tui_free_data_content)\n\t(free_content_elements): Remove unnecessary cast.\n\t* tui/tui-windata.c (tui_first_data_item_displayed): Remove\n\tunnecessary cast.\n\t* tui/tui-source.c (tui_set_source_content)\n\t(tui_vertical_source_scroll): Remove unnecessary cast.\n\t* tui/tui-layout.c (tui_default_win_height): Remove unnecessary\n\tcast.\n\t* tui/tui-io.c (tui_initialize_io): Remove unnecessary cast.\n\t* tui/tui-regs.c (tui_display_registers_from)\n\t(tui_display_register): Remove unnecessary cast.\n\t* tui/tui-wingeneral.c (tui_refresh_win, tui_delete_win)\n\t(tui_unhighlight_win, tui_highlight_win, tui_make_window)\n\t(make_visible): Remove unnecessary cast.\n\t* tui/tui-winsource.c (tui_erase_source_content)\n\t(tui_update_breakpoint_info, tui_set_exec_info_content): Remove\n\tunnecessary cast.\n\t* ax-gdb.c (agent_command_1): Remove unnecessary cast.\n\t* cli/cli-setshow.c (cmd_show_list): Remove unnecessary cast.\n\t* stabsread.c (read_type, read_array_type, read_range_type):\n\tRemove unnecessary cast.\n\t* mdebugread.c (mdebug_build_psymtabs): Remove unnecessary cast.\n\t(parse_symbol, parse_type, upgrade_type, parse_external)\n\t(parse_partial_symbols, psymtab_to_symtab_1, cross_ref): Remove\n\tunnecessary cast.\n\t* gdb_bfd.c (gdb_bfd_map_section): Remove unnecessary cast.",
    "tree": {
      "sha": "99c29b479d49a6b930509b712b0d960feef00587",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/99c29b479d49a6b930509b712b0d960feef00587"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "93cb9841d68263174a600dc70af742a8e2eabfc6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93cb9841d68263174a600dc70af742a8e2eabfc6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/93cb9841d68263174a600dc70af742a8e2eabfc6"
    }
  ],
  "stats": {
    "total": 220,
    "additions": 128,
    "deletions": 92
  },
  "files": [
    {
      "sha": "c6d4e32a3ca015f56a88c9d8e43db7911ef13900",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -1,3 +1,51 @@\n+2019-06-16  Tom Tromey  <tom@tromey.com>\n+\n+\t* valops.c (value_cast, value_slice): Remove unnecessary cast.\n+\t* breakpoint.c (stopin_command, stopat_command)\n+\t(until_break_command, decode_location_default): Remove unnecessary\n+\tcast.\n+\t* utils.c (subset_compare): Remove unnecessary cast.\n+\t* ada-lang.c (ada_update_initial_language): Remove unnecessary\n+\tcast.\n+\t* linespec.c (decode_line_with_last_displayed): Remove unnecessary\n+\tcast.\n+\t* infcmd.c (path_command): Remove unnecessary cast.\n+\t* coffread.c (decode_type): Remove unnecessary cast.\n+\t* xcoffread.c (read_xcoff_symtab): Remove unnecessary cast.\n+\t* mipsread.c (mipscoff_symfile_read): Remove unnecessary cast.\n+\t* tui/tui-stack.c (tui_show_locator_content)\n+\t(tui_show_frame_info): Remove unnecessary cast.\n+\t* tui/tui-win.c (tui_scroll_forward_command)\n+\t(tui_scroll_backward_command, tui_set_focus, tui_set_win_height)\n+\t(parse_scrolling_args): Remove unnecessary cast.\n+\t* tui/tui-data.c (init_win_info, tui_del_window)\n+\t(tui_free_window, tui_del_data_windows, tui_free_data_content)\n+\t(free_content_elements): Remove unnecessary cast.\n+\t* tui/tui-windata.c (tui_first_data_item_displayed): Remove\n+\tunnecessary cast.\n+\t* tui/tui-source.c (tui_set_source_content)\n+\t(tui_vertical_source_scroll): Remove unnecessary cast.\n+\t* tui/tui-layout.c (tui_default_win_height): Remove unnecessary\n+\tcast.\n+\t* tui/tui-io.c (tui_initialize_io): Remove unnecessary cast.\n+\t* tui/tui-regs.c (tui_display_registers_from)\n+\t(tui_display_register): Remove unnecessary cast.\n+\t* tui/tui-wingeneral.c (tui_refresh_win, tui_delete_win)\n+\t(tui_unhighlight_win, tui_highlight_win, tui_make_window)\n+\t(make_visible): Remove unnecessary cast.\n+\t* tui/tui-winsource.c (tui_erase_source_content)\n+\t(tui_update_breakpoint_info, tui_set_exec_info_content): Remove\n+\tunnecessary cast.\n+\t* ax-gdb.c (agent_command_1): Remove unnecessary cast.\n+\t* cli/cli-setshow.c (cmd_show_list): Remove unnecessary cast.\n+\t* stabsread.c (read_type, read_array_type, read_range_type):\n+\tRemove unnecessary cast.\n+\t* mdebugread.c (mdebug_build_psymtabs): Remove unnecessary cast.\n+\t(parse_symbol, parse_type, upgrade_type, parse_external)\n+\t(parse_partial_symbols, psymtab_to_symtab_1, cross_ref): Remove\n+\tunnecessary cast.\n+\t* gdb_bfd.c (gdb_bfd_map_section): Remove unnecessary cast.\n+\n 2019-06-16  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-data.c (tui_alloc_generic_win_info)"
    },
    {
      "sha": "bf17c67f4d0f7c6bb155da9ab66f074f27640fbf",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -872,8 +872,7 @@ ada_get_decoded_type (struct type *type)\n enum language\n ada_update_initial_language (enum language lang)\n {\n-  if (lookup_minimal_symbol (\"adainit\", (const char *) NULL,\n-                             (struct objfile *) NULL).minsym != NULL)\n+  if (lookup_minimal_symbol (\"adainit\", NULL, NULL).minsym != NULL)\n     return language_ada;\n \n   return lang;"
    },
    {
      "sha": "d3eb4cb53ae4abc0afa14ff931cbd6bece9ff4ec",
      "filename": "gdb/ax-gdb.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/ax-gdb.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/ax-gdb.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ax-gdb.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -2637,7 +2637,7 @@ agent_command_1 (const char *exp, int eval)\n       event_location_up location\n \t= new_linespec_location (&exp, symbol_name_match_type::WILD);\n       decode_line_full (location.get (), DECODE_LINE_FUNFIRSTLINE, NULL,\n-\t\t\t(struct symtab *) NULL, 0, &canonical,\n+\t\t\tNULL, 0, &canonical,\n \t\t\tNULL, NULL);\n       exp = skip_spaces (exp);\n       if (exp[0] == ',')"
    },
    {
      "sha": "8422db8b571f9b42c5a1d58d3a12c170e71705d3",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -9493,7 +9493,7 @@ stopin_command (const char *arg, int from_tty)\n {\n   int badInput = 0;\n \n-  if (arg == (char *) NULL)\n+  if (arg == NULL)\n     badInput = 1;\n   else if (*arg != '*')\n     {\n@@ -9526,7 +9526,7 @@ stopat_command (const char *arg, int from_tty)\n {\n   int badInput = 0;\n \n-  if (arg == (char *) NULL || *arg == '*')\t/* no line number */\n+  if (arg == NULL || *arg == '*')\t/* no line number */\n     badInput = 1;\n   else\n     {\n@@ -11015,7 +11015,7 @@ until_break_command (const char *arg, int from_tty, int anywhere)\n \t\t\tget_last_displayed_symtab (),\n \t\t\tget_last_displayed_line ())\n        : decode_line_1 (location.get (), DECODE_LINE_FUNFIRSTLINE,\n-\t\t\tNULL, (struct symtab *) NULL, 0));\n+\t\t\tNULL, NULL, 0));\n \n   if (sals.size () != 1)\n     error (_(\"Couldn't get information on specified line.\"));\n@@ -13730,8 +13730,7 @@ decode_location_default (struct breakpoint *b,\n   struct linespec_result canonical;\n \n   decode_line_full (location, DECODE_LINE_FUNFIRSTLINE, search_pspace,\n-\t\t    (struct symtab *) NULL, 0,\n-\t\t    &canonical, multiple_symbols_all,\n+\t\t    NULL, 0, &canonical, multiple_symbols_all,\n \t\t    b->filter);\n \n   /* We should get 0 or 1 resulting SALs.  */"
    },
    {
      "sha": "d588d04ab17c4cada1568b5ca3baae4910feeed3",
      "filename": "gdb/cli/cli-setshow.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/cli/cli-setshow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/cli/cli-setshow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-setshow.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -756,7 +756,7 @@ cmd_show_list (struct cmd_list_element *list, int from_tty, const char *prefix)\n \t      uiout->field_string (\"name\", list->name);\n \t      uiout->text (\":  \");\n \t      if (list->type == show_cmd)\n-\t\tdo_show_command ((char *) NULL, from_tty, list);\n+\t\tdo_show_command (NULL, from_tty, list);\n \t      else\n \t\tcmd_func (list, NULL, from_tty);\n \t    }"
    },
    {
      "sha": "8b31200545dd0b9941fd5c339774b6571d5bf3d6",
      "filename": "gdb/coffread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/coffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/coffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/coffread.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -1784,11 +1784,9 @@ decode_type (struct coff_symbol *cs, unsigned int c_type,\n \t  base_type = decode_type (cs, new_c_type, aux, objfile);\n \t  index_type = objfile_type (objfile)->builtin_int;\n \t  range_type\n-\t    = create_static_range_type ((struct type *) NULL,\n-\t\t\t\t\tindex_type, 0, n - 1);\n+\t    = create_static_range_type (NULL, index_type, 0, n - 1);\n \t  type =\n-\t    create_array_type ((struct type *) NULL, \n-\t\t\t       base_type, range_type);\n+\t    create_array_type (NULL, base_type, range_type);\n \t}\n       return type;\n     }"
    },
    {
      "sha": "29e6a67adcda12b37678de25cb8d6e85657e7b5e",
      "filename": "gdb/gdb_bfd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/gdb_bfd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/gdb_bfd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdb_bfd.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -709,7 +709,7 @@ gdb_bfd_map_section (asection *sectp, bfd_size_type *size)\n       /* Set size to 0 to prevent further attempts to read the invalid\n \t section.  */\n       *size = 0;\n-      return (const gdb_byte *) NULL;\n+      return NULL;\n     }\n   descriptor->data = data;\n "
    },
    {
      "sha": "0f941004384dbc94de61289d7f3c5dd9359cc993",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -2178,7 +2178,7 @@ path_command (const char *dirname, int from_tty)\n   current_inferior ()->environment.set (path_var_name, exec_path);\n   xfree (exec_path);\n   if (from_tty)\n-    path_info ((char *) NULL, from_tty);\n+    path_info (NULL, from_tty);\n }\n \f\n "
    },
    {
      "sha": "8db3924906caaf4dc5b26972496876ded06b3dfb",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -3321,8 +3321,7 @@ decode_line_with_last_displayed (const char *string, int flags)\n        ? decode_line_1 (location.get (), flags, NULL,\n \t\t\tget_last_displayed_symtab (),\n \t\t\tget_last_displayed_line ())\n-       : decode_line_1 (location.get (), flags, NULL,\n-\t\t\t(struct symtab *) NULL, 0));\n+       : decode_line_1 (location.get (), flags, NULL, NULL, 0));\n \n   if (*string)\n     error (_(\"Junk at end of line specification: %s\"), string);"
    },
    {
      "sha": "7d0cbb71a911e52bd70407686e956a83a082582e",
      "filename": "gdb/mdebugread.c",
      "status": "modified",
      "additions": 20,
      "deletions": 21,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/mdebugread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/mdebugread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mdebugread.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -348,7 +348,7 @@ mdebug_build_psymtabs (minimal_symbol_reader &reader,\n   init_header_files ();\n         \n   /* Make sure all the FDR information is swapped in.  */\n-  if (info->fdr == (FDR *) NULL)\n+  if (info->fdr == NULL)\n     {\n       char *fdr_src;\n       char *fdr_end;\n@@ -593,7 +593,7 @@ parse_symbol (SYMR *sh, union aux_ext *ax, char *ext_sh, int bigend,\n   long svalue = sh->value;\n   int bitsize;\n \n-  if (ext_sh == (char *) NULL)\n+  if (ext_sh == NULL)\n     name = debug_info->ssext + sh->iss;\n   else\n     name = debug_info->ss + cur_fdr->issBase + sh->iss;\n@@ -1005,7 +1005,7 @@ parse_symbol (SYMR *sh, union aux_ext *ax, char *ext_sh, int bigend,\n \n \t/* Create a new type or use the pending type.  */\n \tpend = is_pending_symbol (cur_fdr, ext_sh);\n-\tif (pend == (struct mdebug_pending *) NULL)\n+\tif (pend == NULL)\n \t  {\n \t    t = new_type (NULL);\n \t    add_pending (cur_fdr, ext_sh, t);\n@@ -1267,9 +1267,9 @@ parse_symbol (SYMR *sh, union aux_ext *ax, char *ext_sh, int bigend,\n \n       /* Parse the type or use the pending type.  */\n       pend = is_pending_symbol (cur_fdr, ext_sh);\n-      if (pend == (struct mdebug_pending *) NULL)\n+      if (pend == NULL)\n \t{\n-\t  t = parse_type (cur_fd, ax, sh->index, (int *) NULL, bigend, name);\n+\t  t = parse_type (cur_fd, ax, sh->index, NULL, bigend, name);\n \t  add_pending (cur_fdr, ext_sh, t);\n \t}\n       else\n@@ -1579,7 +1579,7 @@ parse_type (int fd, union aux_ext *ax, unsigned int aux_index, int *bs,\n       int width = AUX_GET_WIDTH (bigend, ax);\n \n       /* Inhibit core dumps if TIR is corrupted.  */\n-      if (bs == (int *) NULL)\n+      if (bs == NULL)\n \t{\n \t  /* Alpha cc -migrate encodes char and unsigned char types\n \t     as short and unsigned short types with a field width of 8.\n@@ -1626,7 +1626,7 @@ parse_type (int fd, union aux_ext *ax, unsigned int aux_index, int *bs,\n       xref_fh = get_rfd (fd, rf);\n       xref_fd = xref_fh - debug_info->fdr;\n       tp = parse_type (xref_fd, debug_info->external_aux + xref_fh->iauxBase,\n-\t\t    rn->index, (int *) NULL, xref_fh->fBigendian, sym_name);\n+\t\t    rn->index, NULL, xref_fh->fBigendian, sym_name);\n     }\n \n   /* All these types really point to some (common) MIPS type\n@@ -1644,7 +1644,7 @@ parse_type (int fd, union aux_ext *ax, unsigned int aux_index, int *bs,\n \n       /* Try to cross reference this type, build new type on failure.  */\n       ax += cross_ref (fd, ax, &tp, type_code, &name, bigend, sym_name);\n-      if (tp == (struct type *) NULL)\n+      if (tp == NULL)\n \ttp = init_type (mdebugread_objfile, type_code, 0, NULL);\n \n       /* DEC c89 produces cross references to qualified aggregate types,\n@@ -1704,7 +1704,7 @@ parse_type (int fd, union aux_ext *ax, unsigned int aux_index, int *bs,\n \n       /* Try to cross reference this type, build new type on failure.  */\n       ax += cross_ref (fd, ax, &tp, type_code, &name, bigend, sym_name);\n-      if (tp == (struct type *) NULL)\n+      if (tp == NULL)\n \ttp = init_type (mdebugread_objfile, type_code, 0, NULL);\n \n       /* Make sure that TYPE_CODE(tp) has an expected type code.\n@@ -1737,7 +1737,7 @@ parse_type (int fd, union aux_ext *ax, unsigned int aux_index, int *bs,\n \n       /* Try to cross reference this type, it should succeed.  */\n       ax += cross_ref (fd, ax, &tp, type_code, &name, bigend, sym_name);\n-      if (tp == (struct type *) NULL)\n+      if (tp == NULL)\n \t{\n \t  complaint (_(\"unable to cross ref btTypedef for %s\"), sym_name);\n \t  tp = basic_type (btInt, mdebugread_objfile);\n@@ -1841,7 +1841,7 @@ upgrade_type (int fd, struct type **tpp, int tq, union aux_ext *ax, int bigend,\n \n       indx = parse_type (fh - debug_info->fdr,\n \t\t\t debug_info->external_aux + fh->iauxBase,\n-\t\t\t id, (int *) NULL, bigend, sym_name);\n+\t\t\t id, NULL, bigend, sym_name);\n \n       /* The bounds type should be an integer type, but might be anything\n          else due to corrupt aux entries.  */\n@@ -1860,10 +1860,9 @@ upgrade_type (int fd, struct type **tpp, int tq, union aux_ext *ax, int bigend,\n       ax++;\n       rf = AUX_GET_WIDTH (bigend, ax);\t/* bit size of array element */\n \n-      range = create_static_range_type ((struct type *) NULL, indx,\n-\t\t\t\t\tlower, upper);\n+      range = create_static_range_type (NULL, indx, lower, upper);\n \n-      t = create_array_type ((struct type *) NULL, *tpp, range);\n+      t = create_array_type (NULL, *tpp, range);\n \n       /* We used to fill in the supplied array element bitsize\n          here if the TYPE_LENGTH of the target type was zero.\n@@ -2144,7 +2143,7 @@ parse_external (EXTR *es, int bigend, struct section_offsets *section_offsets,\n \n       /* Note that the case of a symbol with indexNil must be handled\n          anyways by parse_symbol().  */\n-      parse_symbol (&es->asym, ax, (char *) NULL,\n+      parse_symbol (&es->asym, ax, NULL,\n \t\t    bigend, section_offsets, objfile);\n       break;\n     default:\n@@ -3704,7 +3703,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n       fh = f_idx + debug_info->fdr;\n       pst = fdr_to_pst[f_idx].pst;\n \n-      if (pst == (struct partial_symtab *) NULL)\n+      if (pst == NULL)\n \tcontinue;\n \n       /* This should catch stabs-in-ecoff.  */\n@@ -3735,7 +3734,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t    continue;\n \n \t  /* Do not add to dependeny list if psymtab was empty.  */\n-\t  if (fdr_to_pst[rh].pst == (struct partial_symtab *) NULL)\n+\t  if (fdr_to_pst[rh].pst == NULL)\n \t    continue;\n \t  pst->dependencies[pst->number_of_dependencies++]\n \t    = fdr_to_pst[rh].pst;\n@@ -3909,13 +3908,13 @@ psymtab_to_symtab_1 (struct objfile *objfile,\n   mdebugread_objfile = objfile;\n   cur_fd = FDR_IDX (pst);\n   fh = ((cur_fd == -1)\n-\t? (FDR *) NULL\n+\t? NULL\n \t: debug_info->fdr + cur_fd);\n   cur_fdr = fh;\n \n   /* See comment in parse_partial_symbols about the @stabs sentinel.  */\n   processing_gcc_compilation = 0;\n-  if (fh != (FDR *) NULL && fh->csym >= 2)\n+  if (fh != NULL && fh->csym >= 2)\n     {\n       SYMR sh;\n \n@@ -4425,7 +4424,7 @@ cross_ref (int fd, union aux_ext *ax, struct type **tpp,\n \t      *tpp = parse_type (xref_fd,\n \t\t\t\t debug_info->external_aux + fh->iauxBase,\n \t\t\t\t sh.index,\n-\t\t\t\t (int *) NULL,\n+\t\t\t\t NULL,\n \t\t\t\t fh->fBigendian,\n \t\t\t\t debug_info->ss + fh->issBase + sh.iss);\n \t      add_pending (fh, esh, *tpp);\n@@ -4451,7 +4450,7 @@ cross_ref (int fd, union aux_ext *ax, struct type **tpp,\n \t  *tpp = parse_type (xref_fd,\n \t\t\t     debug_info->external_aux + fh->iauxBase,\n \t\t\t     sh.index,\n-\t\t\t     (int *) NULL,\n+\t\t\t     NULL,\n \t\t\t     fh->fBigendian,\n \t\t\t     debug_info->ss + fh->issBase + sh.iss);\n \t}"
    },
    {
      "sha": "b25abe5a481305b43076a6e16cf7c95289f3952b",
      "filename": "gdb/mipsread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/mipsread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/mipsread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mipsread.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -76,7 +76,7 @@ mipscoff_symfile_read (struct objfile *objfile, symfile_add_flags symfile_flags)\n      process it and define symbols accordingly.  */\n \n   if (!((*ecoff_backend (abfd)->debug_swap.read_debug_info)\n-\t(abfd, (asection *) NULL, &ecoff_data (abfd)->debug_info)))\n+\t(abfd, NULL, &ecoff_data (abfd)->debug_info)))\n     error (_(\"Error reading symbol table: %s\"), bfd_errmsg (bfd_get_error ()));\n \n   mdebug_build_psymtabs (reader, objfile, &ecoff_backend (abfd)->debug_swap,"
    },
    {
      "sha": "a3fe6c99ca3529bed7b3fb239b0c4b33c6445f40",
      "filename": "gdb/stabsread.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/stabsread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/stabsread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stabsread.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -2048,7 +2048,7 @@ read_type (const char **pp, struct objfile *objfile)\n \n     case 'S':\t\t\t/* Set type */\n       type1 = read_type (pp, objfile);\n-      type = create_set_type ((struct type *) NULL, type1);\n+      type = create_set_type (NULL, type1);\n       if (typenums[0] != -1)\n \t*dbx_lookup_type (typenums, objfile) = type;\n       break;\n@@ -3585,7 +3585,7 @@ read_array_type (const char **pp, struct type *type,\n     }\n \n   range_type =\n-    create_static_range_type ((struct type *) NULL, index_type, lower, upper);\n+    create_static_range_type (NULL, index_type, lower, upper);\n   type = create_array_type (type, element_type, range_type);\n \n   return type;\n@@ -4212,7 +4212,7 @@ read_range_type (const char **pp, int typenums[2], int type_size,\n     }\n \n   result_type\n-    = create_static_range_type ((struct type *) NULL, index_type, n2, n3);\n+    = create_static_range_type (NULL, index_type, n2, n3);\n   return (result_type);\n }\n "
    },
    {
      "sha": "35eae4f998aa96b6909b2b3071c711f54288d583",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 9,
      "deletions": 10,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -507,8 +507,7 @@ init_win_info (struct tui_win_info *win_info)\n     {\n     case SRC_WIN:\n     case DISASSEM_WIN:\n-      win_info->detail.source_info.execution_info\n-\t= (struct tui_gen_win_info *) NULL;\n+      win_info->detail.source_info.execution_info = NULL;\n       win_info->detail.source_info.has_locator = FALSE;\n       win_info->detail.source_info.horizontal_offset = 0;\n       win_info->detail.source_info.gdbarch = NULL;\n@@ -620,7 +619,7 @@ tui_del_window (struct tui_win_info *win_info)\n     case SRC_WIN:\n     case DISASSEM_WIN:\n       generic_win = tui_locator_win_info_ptr ();\n-      if (generic_win != (struct tui_gen_win_info *) NULL)\n+      if (generic_win != NULL)\n \t{\n \t  tui_delete_win (generic_win->handle);\n \t  generic_win->handle = NULL;\n@@ -632,7 +631,7 @@ tui_del_window (struct tui_win_info *win_info)\n           win_info->detail.source_info.fullname = NULL;\n         }\n       generic_win = win_info->detail.source_info.execution_info;\n-      if (generic_win != (struct tui_gen_win_info *) NULL)\n+      if (generic_win != NULL)\n \t{\n \t  tui_delete_win (generic_win->handle);\n \t  generic_win->handle = NULL;\n@@ -651,7 +650,7 @@ tui_del_window (struct tui_win_info *win_info)\n     default:\n       break;\n     }\n-  if (win_info->generic.handle != (WINDOW *) NULL)\n+  if (win_info->generic.handle != NULL)\n     {\n       tui_delete_win (win_info->generic.handle);\n       win_info->generic.handle = NULL;\n@@ -675,7 +674,7 @@ tui_free_window (struct tui_win_info *win_info)\n           win_info->detail.source_info.fullname = NULL;\n         }\n       generic_win = win_info->detail.source_info.execution_info;\n-      if (generic_win != (struct tui_gen_win_info *) NULL)\n+      if (generic_win != NULL)\n \t{\n \t  tui_delete_win (generic_win->handle);\n \t  generic_win->handle = NULL;\n@@ -704,7 +703,7 @@ tui_free_window (struct tui_win_info *win_info)\n     default:\n       break;\n     }\n-  if (win_info->generic.handle != (WINDOW *) NULL)\n+  if (win_info->generic.handle != NULL)\n     {\n       tui_delete_win (win_info->generic.handle);\n       win_info->generic.handle = NULL;\n@@ -762,7 +761,7 @@ tui_del_data_windows (tui_win_content content,\n       struct tui_gen_win_info *generic_win\n \t= &content[i]->which_element.data_window;\n \n-      if (generic_win != (struct tui_gen_win_info *) NULL)\n+      if (generic_win != NULL)\n \t{\n \t  tui_delete_win (generic_win->handle);\n \t  generic_win->handle = NULL;\n@@ -786,7 +785,7 @@ tui_free_data_content (tui_win_content content,\n       struct tui_gen_win_info *generic_win\n \t= &content[i]->which_element.data_window;\n \n-      if (generic_win != (struct tui_gen_win_info *) NULL)\n+      if (generic_win != NULL)\n \t{\n \t  tui_delete_win (generic_win->handle);\n \t  generic_win->handle = NULL;\n@@ -840,7 +839,7 @@ free_content_elements (tui_win_content content,\n \t      struct tui_win_element *element;\n \n \t      element = content[i];\n-\t      if (element != (struct tui_win_element *) NULL)\n+\t      if (element != NULL)\n \t\t{\n \t\t  switch (type)\n \t\t    {"
    },
    {
      "sha": "31c1c769381fb99cab6d9774f51e802a00d32646",
      "filename": "gdb/tui/tui-io.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-io.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-io.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-io.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -878,7 +878,7 @@ tui_initialize_io (void)\n   if (tui_rl_outstream == 0)\n     error (_(\"Cannot redirect readline output\"));\n \n-  setvbuf (tui_rl_outstream, (char*) NULL, _IOLBF, 0);\n+  setvbuf (tui_rl_outstream, NULL, _IOLBF, 0);\n \n #ifdef O_NONBLOCK\n   (void) fcntl (tui_readline_pipe[0], F_SETFL, O_NONBLOCK);"
    },
    {
      "sha": "bcae819e51825f996cc84bd6a9ffefe79ec861e4",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -300,7 +300,7 @@ tui_default_win_height (enum tui_win_type type,\n {\n   int h;\n \n-  if (tui_win_list[type] != (struct tui_win_info *) NULL)\n+  if (tui_win_list[type] != NULL)\n     h = tui_win_list[type]->generic.height;\n   else\n     {"
    },
    {
      "sha": "dcfc433407cfce32db3d364d060ab48e215b5c39",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -358,7 +358,7 @@ tui_display_registers_from (int start_element_no)\n \t      data_item_win = &display_info->regs_content[i]\n                 ->which_element.data_window;\n \t      data_element_ptr = &data_item_win->content[0]->which_element.data;\n-              if (data_item_win->handle != (WINDOW*) NULL\n+              if (data_item_win->handle != NULL\n                   && (data_item_win->height != 1\n                       || data_item_win->width != item_win_width\n                       || data_item_win->origin.x != (item_win_width * j) + 1\n@@ -368,7 +368,7 @@ tui_display_registers_from (int start_element_no)\n                   data_item_win->handle = 0;\n                 }\n                   \n-\t      if (data_item_win->handle == (WINDOW *) NULL)\n+\t      if (data_item_win->handle == NULL)\n \t\t{\n \t\t  data_item_win->height = 1;\n \t\t  data_item_win->width = item_win_width;\n@@ -520,7 +520,7 @@ static void\n tui_display_register (struct tui_data_element *data,\n                       struct tui_gen_win_info *win_info)\n {\n-  if (win_info->handle != (WINDOW *) NULL)\n+  if (win_info->handle != NULL)\n     {\n       int i;\n "
    },
    {
      "sha": "5066c7d7b4f45d992314b4546e5c3d928e365054",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -129,7 +129,7 @@ tui_set_source_content (struct symtab *s,\n {\n   enum tui_status ret = TUI_FAILURE;\n \n-  if (s != (struct symtab *) NULL)\n+  if (s != NULL)\n     {\n       int line_width, nlines;\n \n@@ -319,7 +319,7 @@ tui_vertical_source_scroll (enum tui_scroll_direction scroll_direction,\n       tui_win_content content = TUI_SRC_WIN->generic.content;\n       struct symtab_and_line cursal = get_current_source_symtab_and_line ();\n \n-      if (cursal.symtab == (struct symtab *) NULL)\n+      if (cursal.symtab == NULL)\n \ts = find_pc_line_symtab (get_frame_pc (get_selected_frame (NULL)));\n       else\n \ts = cursal.symtab;"
    },
    {
      "sha": "b7e7ae81dff2368c8ebce13d140dc995d63c34a2",
      "filename": "gdb/tui/tui-stack.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -250,7 +250,7 @@ tui_show_locator_content (void)\n \n   locator = tui_locator_win_info_ptr ();\n \n-  if (locator != NULL && locator->handle != (WINDOW *) NULL)\n+  if (locator != NULL && locator->handle != NULL)\n     {\n       struct tui_win_element *element;\n \n@@ -414,8 +414,7 @@ tui_show_frame_info (struct frame_info *fi)\n \t  else\n \t    {\n \t      if (find_pc_partial_function (get_frame_pc (fi),\n-\t\t\t\t\t    (const char **) NULL,\n-\t\t\t\t\t    &low, NULL) == 0)\n+\t\t\t\t\t    NULL, &low, NULL) == 0)\n \t\t{\n \t\t  /* There is no symbol available for current PC.  There is no\n \t\t     safe way how to \"disassemble backwards\".  */"
    },
    {
      "sha": "a1329e54a81e9a80592b2f996c09488a61548842",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -877,7 +877,7 @@ tui_scroll_forward_command (const char *arg, int from_tty)\n   /* Make sure the curses mode is enabled.  */\n   tui_enable ();\n   if (arg == NULL)\n-    parse_scrolling_args (arg, &win_to_scroll, (int *) NULL);\n+    parse_scrolling_args (arg, &win_to_scroll, NULL);\n   else\n     parse_scrolling_args (arg, &win_to_scroll, &num_to_scroll);\n   tui_scroll (FORWARD_SCROLL, win_to_scroll, num_to_scroll);\n@@ -893,7 +893,7 @@ tui_scroll_backward_command (const char *arg, int from_tty)\n   /* Make sure the curses mode is enabled.  */\n   tui_enable ();\n   if (arg == NULL)\n-    parse_scrolling_args (arg, &win_to_scroll, (int *) NULL);\n+    parse_scrolling_args (arg, &win_to_scroll, NULL);\n   else\n     parse_scrolling_args (arg, &win_to_scroll, &num_to_scroll);\n   tui_scroll (BACKWARD_SCROLL, win_to_scroll, num_to_scroll);\n@@ -946,8 +946,7 @@ tui_set_focus (const char *arg, int from_tty)\n       else\n \twin_info = tui_partial_win_by_name (buf_ptr);\n \n-      if (win_info == (struct tui_win_info *) NULL\n-\t  || !win_info->generic.is_visible)\n+      if (win_info == NULL || !win_info->generic.is_visible)\n \twarning (_(\"Invalid window specified. \\n\\\n The window name specified must be valid and visible.\\n\"));\n       else\n@@ -1116,8 +1115,7 @@ tui_set_win_height (const char *arg, int from_tty)\n \t    wname[i] = tolower (wname[i]);\n \t  win_info = tui_partial_win_by_name (wname);\n \n-\t  if (win_info == (struct tui_win_info *) NULL\n-\t      || !win_info->generic.is_visible)\n+\t  if (win_info == NULL || !win_info->generic.is_visible)\n \t    warning (_(\"Invalid window specified. \\n\\\n The window name specified must be valid and visible.\\n\"));\n \t  else\n@@ -1634,7 +1632,7 @@ parse_scrolling_args (const char *arg,\n \t  \n \t  *win_to_scroll = tui_partial_win_by_name (wname);\n \n-\t  if (*win_to_scroll == (struct tui_win_info *) NULL\n+\t  if (*win_to_scroll == NULL\n \t      || !(*win_to_scroll)->generic.is_visible)\n \t    error (_(\"Invalid window specified. \\n\\\n The window name specified must be valid and visible.\\n\"));"
    },
    {
      "sha": "6f150c9662064464b19999f271f95caec9f0e756",
      "filename": "gdb/tui/tui-windata.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-windata.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-windata.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-windata.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -55,7 +55,7 @@ tui_first_data_item_displayed (void)\n \n       data_item_win\n \t= &TUI_DATA_WIN->generic.content[i]->which_element.data_window;\n-      if (data_item_win->handle != (WINDOW *) NULL \n+      if (data_item_win->handle != NULL \n \t  && data_item_win->is_visible)\n \telement_no = i;\n     }"
    },
    {
      "sha": "b474aa0f1d9e7a824bb1575be05da2a43fe3886c",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -45,7 +45,7 @@ tui_refresh_win (struct tui_gen_win_info *win_info)\n \n \t  data_item_win_ptr = &win_info->content[i]->which_element.data_window;\n \t  if (data_item_win_ptr != NULL\n-\t      && data_item_win_ptr->handle != (WINDOW *) NULL)\n+\t      && data_item_win_ptr->handle != NULL)\n \t    wrefresh (data_item_win_ptr->handle);\n \t}\n     }\n@@ -55,7 +55,7 @@ tui_refresh_win (struct tui_gen_win_info *win_info)\n     }\n   else\n     {\n-      if (win_info->handle != (WINDOW *) NULL)\n+      if (win_info->handle != NULL)\n \twrefresh (win_info->handle);\n     }\n \n@@ -67,7 +67,7 @@ tui_refresh_win (struct tui_gen_win_info *win_info)\n void\n tui_delete_win (WINDOW *window)\n {\n-  if (window != (WINDOW *) NULL)\n+  if (window != NULL)\n     delwin (window);\n \n   return;\n@@ -110,7 +110,7 @@ void\n tui_unhighlight_win (struct tui_win_info *win_info)\n {\n   if (win_info != NULL \n-      && win_info->generic.handle != (WINDOW *) NULL)\n+      && win_info->generic.handle != NULL)\n     {\n       box_win ((struct tui_gen_win_info *) win_info, NO_HILITE);\n       wrefresh (win_info->generic.handle);\n@@ -124,7 +124,7 @@ tui_highlight_win (struct tui_win_info *win_info)\n {\n   if (win_info != NULL\n       && win_info->can_highlight\n-      && win_info->generic.handle != (WINDOW *) NULL)\n+      && win_info->generic.handle != NULL)\n     {\n       box_win ((struct tui_gen_win_info *) win_info, HILITE);\n       wrefresh (win_info->generic.handle);\n@@ -157,7 +157,7 @@ tui_make_window (struct tui_gen_win_info *win_info, int box_it)\n \t\t   win_info->origin.y,\n \t\t   win_info->origin.x);\n   win_info->handle = handle;\n-  if (handle != (WINDOW *) NULL)\n+  if (handle != NULL)\n     {\n       if (box_it == BOX_WINDOW)\n \tbox_win (win_info, NO_HILITE);\n@@ -189,7 +189,7 @@ make_visible (struct tui_gen_win_info *win_info, int visible)\n     }\n   else if (!visible\n \t   && win_info->is_visible\n-\t   && win_info->handle != (WINDOW *) NULL)\n+\t   && win_info->handle != NULL)\n     {\n       win_info->is_visible = FALSE;\n       tui_delete_win (win_info->handle);"
    },
    {
      "sha": "eab422d6cf102bcc25080348770b608cfc5b53f5",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -235,7 +235,7 @@ tui_erase_source_content (struct tui_win_info *win_info,\n   int x_pos;\n   int half_width = (win_info->generic.width - 2) / 2;\n \n-  if (win_info->generic.handle != (WINDOW *) NULL)\n+  if (win_info->generic.handle != NULL)\n     {\n       werase (win_info->generic.handle);\n       tui_check_and_display_highlight_if_needed (win_info);\n@@ -453,7 +453,7 @@ tui_update_breakpoint_info (struct tui_win_info *win,\n          those that we already hit.  */\n       mode = 0;\n       for (bp = breakpoint_chain;\n-           bp != (struct breakpoint *) NULL;\n+           bp != NULL;\n            bp = bp->next)\n         {\n \t  struct bp_location *loc;\n@@ -504,8 +504,7 @@ tui_set_exec_info_content (struct tui_win_info *win_info)\n {\n   enum tui_status ret = TUI_SUCCESS;\n \n-  if (win_info->detail.source_info.execution_info\n-      != (struct tui_gen_win_info *) NULL)\n+  if (win_info->detail.source_info.execution_info != NULL)\n     {\n       struct tui_gen_win_info *exec_info_ptr\n \t= win_info->detail.source_info.execution_info;"
    },
    {
      "sha": "c7922cf7f56e9a48c71ef8ac4a4b58961dbc37e4",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -2771,7 +2771,7 @@ subset_compare (const char *string_to_compare, const char *template_string)\n {\n   int match;\n \n-  if (template_string != (char *) NULL && string_to_compare != (char *) NULL\n+  if (template_string != NULL && string_to_compare != NULL\n       && strlen (string_to_compare) <= strlen (template_string))\n     match =\n       (startswith (template_string, string_to_compare));"
    },
    {
      "sha": "948ad89fe9270b1e85f8242f7722b27fe946f8a9",
      "filename": "gdb/valops.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/valops.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/valops.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valops.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -402,12 +402,12 @@ value_cast (struct type *type, struct value *arg2)\n \t\t       \"divide object size in cast\"));\n \t  /* FIXME-type-allocation: need a way to free this type when\n \t     we are done with it.  */\n-\t  range_type = create_static_range_type ((struct type *) NULL,\n+\t  range_type = create_static_range_type (NULL,\n \t\t\t\t\t\t TYPE_TARGET_TYPE (range_type),\n \t\t\t\t\t\t low_bound,\n \t\t\t\t\t\t new_length + low_bound - 1);\n \t  deprecated_set_value_type (arg2, \n-\t\t\t\t     create_array_type ((struct type *) NULL,\n+\t\t\t\t     create_array_type (NULL,\n \t\t\t\t\t\t\telement_type, \n \t\t\t\t\t\t\trange_type));\n \t  return arg2;\n@@ -3816,7 +3816,7 @@ value_slice (struct value *array, int lowbound, int length)\n \n   /* FIXME-type-allocation: need a way to free this type when we are\n      done with it.  */\n-  slice_range_type = create_static_range_type ((struct type *) NULL,\n+  slice_range_type = create_static_range_type (NULL,\n \t\t\t\t\t       TYPE_TARGET_TYPE (range_type),\n \t\t\t\t\t       lowbound,\n \t\t\t\t\t       lowbound + length - 1);\n@@ -3826,7 +3826,7 @@ value_slice (struct value *array, int lowbound, int length)\n     LONGEST offset\n       = (lowbound - lowerbound) * TYPE_LENGTH (check_typedef (element_type));\n \n-    slice_type = create_array_type ((struct type *) NULL,\n+    slice_type = create_array_type (NULL,\n \t\t\t\t    element_type,\n \t\t\t\t    slice_range_type);\n     TYPE_CODE (slice_type) = TYPE_CODE (array_type);"
    },
    {
      "sha": "f4892a8054f1e384f0849f2c237f70662ae8b4c7",
      "filename": "gdb/xcoffread.c",
      "status": "modified",
      "additions": 5,
      "deletions": 6,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/xcoffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0/gdb/xcoffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/xcoffread.c?ref=cafb34387d063fa47bc2cdb33fc3fe2f13e6cec0",
      "patch": "@@ -1045,7 +1045,7 @@ read_xcoff_symtab (struct objfile *objfile, struct partial_symtab *pst)\n   pst_symtab_language = deduce_language_from_filename (filestring);\n \n   start_stabs ();\n-  start_symtab (objfile, filestring, (char *) NULL, file_start_addr,\n+  start_symtab (objfile, filestring, NULL, file_start_addr,\n \t\tpst_symtab_language);\n   record_debugformat (debugfmt);\n   symnum = ((struct symloc *) pst->read_symtab_private)->first_symnum;\n@@ -1139,8 +1139,8 @@ read_xcoff_symtab (struct objfile *objfile, struct partial_symtab *pst)\n \t    }\n \n \t  start_stabs ();\n-\t  start_symtab (objfile, \"_globals_\", (char *) NULL,\n-\t\t\t(CORE_ADDR) 0, pst_symtab_language);\n+\t  start_symtab (objfile, \"_globals_\", NULL,\n+\t\t\t0, pst_symtab_language);\n \t  record_debugformat (debugfmt);\n \t  cur_src_end_addr = first_object_file_end;\n \t  /* Done with all files, everything from here on is globals.  */\n@@ -1230,7 +1230,7 @@ read_xcoff_symtab (struct objfile *objfile, struct partial_symtab *pst)\n \t\t\t  /* Give all csects for this source file the same\n \t\t\t     name.  */\n \t\t\t  start_symtab (objfile, filestring, NULL,\n-\t\t\t\t\t(CORE_ADDR) 0, pst_symtab_language);\n+\t\t\t\t\t0, pst_symtab_language);\n \t\t\t  record_debugformat (debugfmt);\n \t\t\t}\n \n@@ -1350,8 +1350,7 @@ read_xcoff_symtab (struct objfile *objfile, struct partial_symtab *pst)\n \t    filestring = cs->c_name;\n \n \t  start_stabs ();\n-\t  start_symtab (objfile, filestring, (char *) NULL, (CORE_ADDR) 0,\n-\t\t\tpst_symtab_language);\n+\t  start_symtab (objfile, filestring, NULL, 0, pst_symtab_language);\n \t  record_debugformat (debugfmt);\n \t  last_csect_name = 0;\n "
    }
  ]
}