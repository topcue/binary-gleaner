{
  "sha": "77c2dba3e843694fae090e237ccdf1b8f65b94e6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzdjMmRiYTNlODQzNjk0ZmFlMDkwZTIzN2NjZGYxYjhmNjViOTRlNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-03T23:21:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-04T02:56:22Z"
    },
    "message": "Avoid crash on single-field union in Rust\n\nPR rust/24976 points out a crash in gdb when a single-field union is\nused in Rust.\n\nThe immediate problem was a NULL pointer dereference in\nquirk_rust_enum.  However, that code is also erroneously treating a\nsingle-field union as if it were a univariant enum.  Looking at the\noutput of an older Rust compiler, it turns out that univariant enums\nare distinguished by having a single *anonymous* field.  This patch\nchanges quirk_rust_enum to limit its fixup to this case.\n\nTested with a new-enough version of the Rust compiler to cause the\ncrash; plus by using an older executable that uses the old univariant\nencoding.\n\ngdb/ChangeLog\n2019-10-03  Tom Tromey  <tom@tromey.com>\n\n\tPR rust/24976:\n\t* dwarf2read.c (quirk_rust_enum): Handle single-element unions.\n\ngdb/testsuite/ChangeLog\n2019-10-03  Tom Tromey  <tom@tromey.com>\n\n\tPR rust/24976:\n\t* gdb.rust/simple.rs (Union2): New type.\n\t(main): Use Union2.\n\t* gdb.rust/simple.exp: Add test.",
    "tree": {
      "sha": "8076f2237aa8155c67f4adbad3c5e40317969d0d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8076f2237aa8155c67f4adbad3c5e40317969d0d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/77c2dba3e843694fae090e237ccdf1b8f65b94e6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77c2dba3e843694fae090e237ccdf1b8f65b94e6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/77c2dba3e843694fae090e237ccdf1b8f65b94e6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77c2dba3e843694fae090e237ccdf1b8f65b94e6/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f0e21cb80940c065dcc373c29dc33388cf948dbc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f0e21cb80940c065dcc373c29dc33388cf948dbc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f0e21cb80940c065dcc373c29dc33388cf948dbc"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 23,
    "deletions": 3
  },
  "files": [
    {
      "sha": "4eeed4931e7ce554ec5f1d0f77337c3ed0e88ddb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77c2dba3e843694fae090e237ccdf1b8f65b94e6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77c2dba3e843694fae090e237ccdf1b8f65b94e6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=77c2dba3e843694fae090e237ccdf1b8f65b94e6",
      "patch": "@@ -1,3 +1,8 @@\n+2019-10-03  Tom Tromey  <tom@tromey.com>\n+\n+\tPR rust/24976:\n+\t* dwarf2read.c (quirk_rust_enum): Handle single-element unions.\n+\n 2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* f-lang.c (f_language_defn): Use cp_get_symbol_name_matcher and"
    },
    {
      "sha": "ee9df34ed27ca30a6354ba7b92754db50ad33fa9",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77c2dba3e843694fae090e237ccdf1b8f65b94e6/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77c2dba3e843694fae090e237ccdf1b8f65b94e6/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=77c2dba3e843694fae090e237ccdf1b8f65b94e6",
      "patch": "@@ -10076,10 +10076,10 @@ quirk_rust_enum (struct type *type, struct objfile *objfile)\n       SET_FIELD_BITPOS (TYPE_FIELD (type, 0), 0);\n       TYPE_FIELD_NAME (type, 0) = \"<<variants>>\";\n     }\n-  else if (TYPE_NFIELDS (type) == 1)\n+  /* A union with a single anonymous field is probably an old-style\n+     univariant enum.  */\n+  else if (TYPE_NFIELDS (type) == 1 && streq (TYPE_FIELD_NAME (type, 0), \"\"))\n     {\n-      /* We assume that a union with a single field is a univariant\n-\t enum.  */\n       /* Smash this type to be a structure type.  We have to do this\n \t because the type has already been recorded.  */\n       TYPE_CODE (type) = TYPE_CODE_STRUCT;"
    },
    {
      "sha": "f42a0a3c83c689c9b0bb3c606cb1158a829bd65c",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77c2dba3e843694fae090e237ccdf1b8f65b94e6/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77c2dba3e843694fae090e237ccdf1b8f65b94e6/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=77c2dba3e843694fae090e237ccdf1b8f65b94e6",
      "patch": "@@ -1,3 +1,10 @@\n+2019-10-03  Tom Tromey  <tom@tromey.com>\n+\n+\tPR rust/24976:\n+\t* gdb.rust/simple.rs (Union2): New type.\n+\t(main): Use Union2.\n+\t* gdb.rust/simple.exp: Add test.\n+\n 2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.fortran/nested-funcs-2.exp: Run tests with and without the"
    },
    {
      "sha": "dcbfb90920fbe898e47243c94f0133dae3144e57",
      "filename": "gdb/testsuite/gdb.rust/simple.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77c2dba3e843694fae090e237ccdf1b8f65b94e6/gdb/testsuite/gdb.rust/simple.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77c2dba3e843694fae090e237ccdf1b8f65b94e6/gdb/testsuite/gdb.rust/simple.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/simple.exp?ref=77c2dba3e843694fae090e237ccdf1b8f65b94e6",
      "patch": "@@ -309,6 +309,8 @@ gdb_test_sequence \"ptype/o SimpleLayout\" \"\" {\n     \"                         }\"\n }\n \n+gdb_test \"print u2\" \" = simple::Union2 {name: \\\\\\[1\\\\\\]}\"\n+\n # PR rust/23626 - this used to crash.  Note that the results are\n # fairly lax because most existing versions of Rust (those before the\n # DW_TAG_variant patches) do not emit what gdb wants here; and there"
    },
    {
      "sha": "65b57f42df6a7cc38c597875b63cd854dd4193a9",
      "filename": "gdb/testsuite/gdb.rust/simple.rs",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77c2dba3e843694fae090e237ccdf1b8f65b94e6/gdb/testsuite/gdb.rust/simple.rs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77c2dba3e843694fae090e237ccdf1b8f65b94e6/gdb/testsuite/gdb.rust/simple.rs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/simple.rs?ref=77c2dba3e843694fae090e237ccdf1b8f65b94e6",
      "patch": "@@ -85,6 +85,10 @@ union Union {\n     f2: u8,\n }\n \n+pub union Union2 {\n+    pub name: [u8; 1],\n+}\n+\n struct StringAtOffset {\n     pub field1: &'static str,\n     pub field2: i32,\n@@ -180,6 +184,8 @@ fn main () {\n \n     let empty_enum_value: EmptyEnum;\n \n+    let u2 = Union2 { name: [1] };\n+\n     println!(\"{}, {}\", x.0, x.1);        // set breakpoint here\n     println!(\"{}\", diff2(92, 45));\n     empty();"
    }
  ]
}