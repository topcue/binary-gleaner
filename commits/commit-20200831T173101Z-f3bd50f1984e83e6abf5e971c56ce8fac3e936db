{
  "sha": "f3bd50f1984e83e6abf5e971c56ce8fac3e936db",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjNiZDUwZjE5ODRlODNlNmFiZjVlOTcxYzU2Y2U4ZmFjM2U5MzZkYg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-08-31T17:31:01Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-08-31T17:31:01Z"
    },
    "message": "gdb: fix nits in previous patches\n\nI forgot to fix some nits pointed out in review before merging the\n\"frame inlined in outer frame series\", this patch fixes them.\n\ngdb/ChangeLog:\n\n\t* frame-unwind.h (frame_prev_register_ftype): Fix adjective\n\tordering in comment.\n\t* frame.c (frame_id_eq): Fix indentation.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.dwarf2/dw2-reg-undefined.exp: Remove spurious #.\n\nChange-Id: Iaddde9677fc3f68382558d1a16f5a0b4beb78bac",
    "tree": {
      "sha": "f0a3fc483a60a52f181a05309f740afba5ed2adf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f0a3fc483a60a52f181a05309f740afba5ed2adf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f3bd50f1984e83e6abf5e971c56ce8fac3e936db",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f3bd50f1984e83e6abf5e971c56ce8fac3e936db",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f3bd50f1984e83e6abf5e971c56ce8fac3e936db",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f3bd50f1984e83e6abf5e971c56ce8fac3e936db/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "22b9b4b05bfad806eb3d16535dcd4dbedb028c40",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22b9b4b05bfad806eb3d16535dcd4dbedb028c40",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/22b9b4b05bfad806eb3d16535dcd4dbedb028c40"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 13,
    "deletions": 3
  },
  "files": [
    {
      "sha": "cc998d5ee585616fdd76f2adc08b90e0cd34d7e3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3bd50f1984e83e6abf5e971c56ce8fac3e936db/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3bd50f1984e83e6abf5e971c56ce8fac3e936db/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f3bd50f1984e83e6abf5e971c56ce8fac3e936db",
      "patch": "@@ -1,3 +1,9 @@\n+2020-08-31  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* frame-unwind.h (frame_prev_register_ftype): Fix adjective\n+\tordering in comment.\n+\t* frame.c (frame_id_eq): Fix indentation.\n+\n 2020-08-31  Scott Linder  <scott@scottlinder.com>\n \t    Simon Marchi  <simon.marchi@efficios.com>\n "
    },
    {
      "sha": "6cc1a888861e38b8226a4ad208b7d7827a490b1a",
      "filename": "gdb/frame-unwind.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3bd50f1984e83e6abf5e971c56ce8fac3e936db/gdb/frame-unwind.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3bd50f1984e83e6abf5e971c56ce8fac3e936db/gdb/frame-unwind.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/frame-unwind.h?ref=f3bd50f1984e83e6abf5e971c56ce8fac3e936db",
      "patch": "@@ -134,7 +134,7 @@ typedef void (frame_this_id_ftype) (struct frame_info *this_frame,\n    a register in THIS frame, or a non-lvalue.\n \n    If the previous frame's register was not saved by THIS_FRAME and is\n-   therefore undefined, return a not_lval wholly optimized-out value.\n+   therefore undefined, return a wholly optimized-out not_lval value.\n \n    THIS_PROLOGUE_CACHE can be used to share any prolog analysis data\n    with the other unwind methods.  Memory for that cache should be"
    },
    {
      "sha": "0b708e66827217dfced98cdb72008674cf8dd870",
      "filename": "gdb/frame.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3bd50f1984e83e6abf5e971c56ce8fac3e936db/gdb/frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3bd50f1984e83e6abf5e971c56ce8fac3e936db/gdb/frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/frame.c?ref=f3bd50f1984e83e6abf5e971c56ce8fac3e936db",
      "patch": "@@ -774,7 +774,7 @@ frame_id_eq (frame_id l, frame_id r)\n   bool eq;\n \n   if (l.stack_status == FID_STACK_INVALID\n-\t   || r.stack_status == FID_STACK_INVALID)\n+      || r.stack_status == FID_STACK_INVALID)\n     /* Like a NaN, if either ID is invalid, the result is false.\n        Note that a frame ID is invalid iff it is the null frame ID.  */\n     eq = false;"
    },
    {
      "sha": "148f31d26dd6558f9f9432107de4be7d8f1be1a7",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3bd50f1984e83e6abf5e971c56ce8fac3e936db/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3bd50f1984e83e6abf5e971c56ce8fac3e936db/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f3bd50f1984e83e6abf5e971c56ce8fac3e936db",
      "patch": "@@ -1,3 +1,7 @@\n+2020-08-31  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdb.dwarf2/dw2-reg-undefined.exp: Remove spurious #.\n+\n 2020-08-31  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdb.dwarf2/frame-inlined-in-outer-frame.exp: New file."
    },
    {
      "sha": "75ea1f7b88acc85e97f5eedf6241a143baffa8eb",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-reg-undefined.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3bd50f1984e83e6abf5e971c56ce8fac3e936db/gdb/testsuite/gdb.dwarf2/dw2-reg-undefined.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3bd50f1984e83e6abf5e971c56ce8fac3e936db/gdb/testsuite/gdb.dwarf2/dw2-reg-undefined.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-reg-undefined.exp?ref=f3bd50f1984e83e6abf5e971c56ce8fac3e936db",
      "patch": "@@ -76,7 +76,7 @@ for {set f 0} {$f < 3} {incr f} {\n }\n \n # Test that the debug log statement in frame_unwind_register_value produces\n-# \"not saved\" and not# \"optimized out\".\n+# \"not saved\" and not \"optimized out\".\n gdb_test \"set debug frame 1\"\n gdb_test {print $rax} {frame_unwind_register_value[^\\r\\n]+rax[^\\r\\n]+not saved.*}\n gdb_test \"set debug frame 0\""
    }
  ]
}