{
  "sha": "c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb",
  "node_id": "C_kwDOANOeidoAKGM5ZGNjMThmOGRlZDk3ZWQ3Y2QxZGQ2NGRhOGM3YjM3Yjg2ZjYxYmI",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-11-16T22:14:56Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-11-17T13:15:48Z"
    },
    "message": "elfedit: Add --output-abiversion option to update ABIVERSION\n\n\t* NEWS: Mention --output-abiversion.\n\t* elfedit.c (input_elf_abiversion): New.\n\t(output_elf_abiversion): Likewise.\n\t(update_elf_header): Update EI_ABIVERSION.\n\t(command_line_switch): Add OPTION_INPUT_ABIVERSION and\n\tOPTION_OUTPUT_ABIVERSION.\n\t(options): Add --input-abiversion and --output-abiversion.\n\t(usage): Likewise.\n\t(main): Handle --input-abiversion and --output-abiversion.\n\t* doc/binutils.texi: Document --input-abiversion and\n\t--output-abiversion.\n\t* testsuite/binutils-all/elfedit.exp: Run elfedit-6.\n\t* testsuite/binutils-all/elfedit-6.d: New file.",
    "tree": {
      "sha": "27dc86ebf37b6e7510cc507a28f0cf28dffbf8f0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/27dc86ebf37b6e7510cc507a28f0cf28dffbf8f0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/65e4a99a26452d99d586f6e5a0c43e24348a5125"
    }
  ],
  "stats": {
    "total": 86,
    "additions": 83,
    "deletions": 3
  },
  "files": [
    {
      "sha": "6a2eba87e2742ad3255926fd8c61e2980bf27f46",
      "filename": "binutils/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb/binutils/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb/binutils/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/NEWS?ref=c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb",
      "patch": "@@ -1,5 +1,7 @@\n -*- text -*-\n \n+* elfedit: Add --output-abiversion option to update ABIVERSION.\n+\n * Add support for the LoongArch instruction set.\n \n * Tools which display symbols or strings (readelf, strings, nm, objdump)"
    },
    {
      "sha": "fb5dc8ed56823c5c5cb68c52b6a711761297dd7c",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb",
      "patch": "@@ -5206,9 +5206,11 @@ objdump(1), and the Info entries for @file{binutils}.\n elfedit [@option{--input-mach=}@var{machine}]\n         [@option{--input-type=}@var{type}]\n         [@option{--input-osabi=}@var{osabi}]\n+        [@option{--input-abiversion=}@var{version}]\n         @option{--output-mach=}@var{machine}\n         @option{--output-type=}@var{type}\n         @option{--output-osabi=}@var{osabi}\n+        @option{--output-abiversion=}@var{version}\n         @option{--enable-x86-feature=}@var{feature}\n         @option{--disable-x86-feature=}@var{feature}\n         [@option{-v}|@option{--version}]\n@@ -5233,6 +5235,7 @@ should be updated.\n The long and short forms of options, shown here as alternatives, are\n equivalent. At least one of the @option{--output-mach},\n @option{--output-type}, @option{--output-osabi},\n+@option{--output-abiversion},\n @option{--enable-x86-feature} and @option{--disable-x86-feature}\n options must be given.\n \n@@ -5274,6 +5277,15 @@ The supported ELF OSABIs are, @var{none}, @var{HPUX}, @var{NetBSD},\n Change the ELF OSABI in the ELF header to @var{osabi}.  The\n supported ELF OSABI are the same as @option{--input-osabi}.\n \n+@item --input-abiversion=@var{version}\n+Set the matching input ELF file ABIVERSION to @var{version}.\n+@var{version} must be between 0 and 255.  If @option{--input-abiversion}\n+isn't specified, it will match any ELF ABIVERSIONs.\n+\n+@item --output-abiversion=@var{version}\n+Change the ELF ABIVERSION in the ELF header to @var{version}.\n+@var{version} must be between 0 and 255.\n+\n @item --enable-x86-feature=@var{feature}\n Set the @var{feature} bit in program property in @var{exec} or @var{dyn}\n ELF files with machine types of @var{i386} or @var{x86-64}.  The"
    },
    {
      "sha": "374a648c2660415f496b3a3d89a7c7447cfc27e2",
      "filename": "binutils/elfedit.c",
      "status": "modified",
      "additions": 53,
      "deletions": 3,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb/binutils/elfedit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb/binutils/elfedit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/elfedit.c?ref=c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb",
      "patch": "@@ -56,6 +56,8 @@ static int input_elf_type = -1;\n static int output_elf_type = -1;\n static int input_elf_osabi = -1;\n static int output_elf_osabi = -1;\n+static int input_elf_abiversion = -1;\n+static int output_elf_abiversion = -1;\n enum elfclass\n   {\n     ELF_CLASS_UNKNOWN = -1,\n@@ -309,7 +311,7 @@ elf_class (int mach)\n static int\n update_elf_header (const char *file_name, FILE *file)\n {\n-  int class, machine, type, status, osabi;\n+  int class, machine, type, status, osabi, abiversion;\n \n   if (elf_header.e_ident[EI_VERSION] != EV_CURRENT)\n     {\n@@ -380,6 +382,18 @@ update_elf_header (const char *file_name, FILE *file)\n       return 0;\n     }\n \n+  abiversion = elf_header.e_ident[EI_ABIVERSION];\n+\n+  /* Skip if ABIVERSION doesn't match. */\n+  if (input_elf_abiversion != -1\n+      && abiversion != input_elf_abiversion)\n+    {\n+      error\n+\t(_(\"%s: Unmatched EI_ABIVERSION: %d is not %d\\n\"),\n+\t file_name, abiversion, input_elf_abiversion);\n+      return 0;\n+    }\n+\n   /* Update e_machine, e_type and EI_OSABI.  */\n   switch (class)\n     {\n@@ -394,6 +408,8 @@ update_elf_header (const char *file_name, FILE *file)\n \tBYTE_PUT (ehdr32.e_type, output_elf_type);\n       if (output_elf_osabi != -1)\n \tehdr32.e_ident[EI_OSABI] = output_elf_osabi;\n+      if (output_elf_abiversion != -1)\n+\tehdr32.e_ident[EI_ABIVERSION] = output_elf_abiversion;\n       status = fwrite (&ehdr32, sizeof (ehdr32), 1, file) == 1;\n       break;\n     case ELFCLASS64:\n@@ -403,6 +419,8 @@ update_elf_header (const char *file_name, FILE *file)\n \tBYTE_PUT (ehdr64.e_type, output_elf_type);\n       if (output_elf_osabi != -1)\n \tehdr64.e_ident[EI_OSABI] = output_elf_osabi;\n+      if (output_elf_abiversion != -1)\n+\tehdr64.e_ident[EI_ABIVERSION] = output_elf_abiversion;\n       status = fwrite (&ehdr64, sizeof (ehdr64), 1, file) == 1;\n       break;\n     }\n@@ -884,6 +902,8 @@ enum command_line_switch\n     OPTION_OUTPUT_TYPE,\n     OPTION_INPUT_OSABI,\n     OPTION_OUTPUT_OSABI,\n+    OPTION_INPUT_ABIVERSION,\n+    OPTION_OUTPUT_ABIVERSION,\n #ifdef HAVE_MMAP\n     OPTION_ENABLE_X86_FEATURE,\n     OPTION_DISABLE_X86_FEATURE,\n@@ -898,6 +918,8 @@ static struct option options[] =\n   {\"output-type\",\trequired_argument, 0, OPTION_OUTPUT_TYPE},\n   {\"input-osabi\",\trequired_argument, 0, OPTION_INPUT_OSABI},\n   {\"output-osabi\",\trequired_argument, 0, OPTION_OUTPUT_OSABI},\n+  {\"input-abiversion\",\trequired_argument, 0, OPTION_INPUT_ABIVERSION},\n+  {\"output-abiversion\",\trequired_argument, 0, OPTION_OUTPUT_ABIVERSION},\n #ifdef HAVE_MMAP\n   {\"enable-x86-feature\",\n \t\t\trequired_argument, 0, OPTION_ENABLE_X86_FEATURE},\n@@ -934,7 +956,11 @@ usage (FILE *stream, int exit_status)\n   --input-osabi [%s]\\n\\\n                               Set input OSABI\\n\\\n   --output-osabi [%s]\\n\\\n-                              Set output OSABI\\n\"),\n+                              Set output OSABI\\n\\\n+  --input-abiversion [0-255]\\n\\\n+                              Set input ABIVERSION\\n\\\n+  --output-abiversion [0-255]\\n\\\n+                              Set output ABIVERSION\\n\"),\n \t   osabi, osabi);\n #ifdef HAVE_MMAP\n   fprintf (stream, _(\"\\\n@@ -958,6 +984,7 @@ int\n main (int argc, char ** argv)\n {\n   int c, status;\n+  char *end;\n \n #ifdef HAVE_LC_MESSAGES\n   setlocale (LC_MESSAGES, \"\");\n@@ -1015,6 +1042,28 @@ main (int argc, char ** argv)\n \t    return 1;\n \t  break;\n \n+\tcase OPTION_INPUT_ABIVERSION:\n+\t  input_elf_abiversion = strtoul (optarg, &end, 0);\n+\t  if (*end != '\\0'\n+\t      || input_elf_abiversion < 0\n+\t      || input_elf_abiversion > 255)\n+\t    {\n+\t      error (_(\"Invalid ABIVERSION: %s\\n\"), optarg);\n+\t      return 1;\n+\t    }\n+\t  break;\n+\n+\tcase OPTION_OUTPUT_ABIVERSION:\n+\t  output_elf_abiversion = strtoul (optarg, &end, 0);\n+\t  if (*end != '\\0'\n+\t      || output_elf_abiversion < 0\n+\t      || output_elf_abiversion > 255)\n+\t    {\n+\t      error (_(\"Invalid ABIVERSION: %s\\n\"), optarg);\n+\t      return 1;\n+\t    }\n+\t  break;\n+\n #ifdef HAVE_MMAP\n \tcase OPTION_ENABLE_X86_FEATURE:\n \t  if (elf_x86_feature (optarg, 1) < 0)\n@@ -1046,7 +1095,8 @@ main (int argc, char ** argv)\n \t && ! disable_x86_features\n #endif\n \t  && output_elf_type == -1\n-\t  && output_elf_osabi == -1))\n+\t  && output_elf_osabi == -1\n+\t  && output_elf_abiversion == -1))\n     usage (stderr, 1);\n \n   status = 0;"
    },
    {
      "sha": "d30c6dc7ab1fe50ab744ac130260f870781dc905",
      "filename": "binutils/testsuite/binutils-all/elfedit-6.d",
      "status": "added",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb/binutils/testsuite/binutils-all/elfedit-6.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb/binutils/testsuite/binutils-all/elfedit-6.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/elfedit-6.d?ref=c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb",
      "patch": "@@ -0,0 +1,15 @@\n+#PROG: elfedit\n+#elfedit: --output-abiversion 20\n+#source: empty.s\n+#readelf: -h\n+#name: Update ELF header 6\n+#target: *-*-linux* *-*-gnu* arm*-*-uclinuxfdpiceabi\n+\n+#...\n+ELF Header:\n+  Magic:   7f 45 4c 46 .*\n+#...\n+  Version:[ \\t]+1 \\(current\\)\n+#...\n+  ABI Version:[ \\t]+20\n+#..."
    },
    {
      "sha": "6531984bc7bf19f80068f48d12f73d46edfe0c42",
      "filename": "binutils/testsuite/binutils-all/elfedit.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb/binutils/testsuite/binutils-all/elfedit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb/binutils/testsuite/binutils-all/elfedit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/elfedit.exp?ref=c9dcc18f8ded97ed7cd1dd64da8c7b37b86f61bb",
      "patch": "@@ -25,3 +25,4 @@ run_dump_test \"elfedit-2\"\n run_dump_test \"elfedit-3\"\n run_dump_test \"elfedit-4\"\n run_dump_test \"elfedit-5\"\n+run_dump_test \"elfedit-6\""
    }
  ]
}