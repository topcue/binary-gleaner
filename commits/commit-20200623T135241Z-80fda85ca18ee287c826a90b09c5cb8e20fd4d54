{
  "sha": "80fda85ca18ee287c826a90b09c5cb8e20fd4d54",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODBmZGE4NWNhMThlZTI4N2M4MjZhOTBiMDljNWNiOGUyMGZkNGQ1NA==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-06-23T13:50:23Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-06-23T13:52:41Z"
    },
    "message": "Add a testcase for PR binutils/26112\n\n\tPR binutils/26112\n\t* testsuite/binutils-all/pr26112.o.bz2: New file.\n\t* testsuite/binutils-all/pr26112.r: Likewise.\n\t* testsuite/binutils-all/readelf.exp: Run PR binutils/26112 test.",
    "tree": {
      "sha": "a4830ca595c2cdd389083920daeb6b650d776cdc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a4830ca595c2cdd389083920daeb6b650d776cdc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/80fda85ca18ee287c826a90b09c5cb8e20fd4d54",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/80fda85ca18ee287c826a90b09c5cb8e20fd4d54",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/80fda85ca18ee287c826a90b09c5cb8e20fd4d54",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/80fda85ca18ee287c826a90b09c5cb8e20fd4d54/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "39e7eccae602562368438c955b31f1d0e37feaa5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/39e7eccae602562368438c955b31f1d0e37feaa5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/39e7eccae602562368438c955b31f1d0e37feaa5"
    }
  ],
  "stats": {
    "total": 370,
    "additions": 370,
    "deletions": 0
  },
  "files": [
    {
      "sha": "74738ac5b2df225b013e5fcea88447f359df6aba",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80fda85ca18ee287c826a90b09c5cb8e20fd4d54/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80fda85ca18ee287c826a90b09c5cb8e20fd4d54/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=80fda85ca18ee287c826a90b09c5cb8e20fd4d54",
      "patch": "@@ -1,3 +1,10 @@\n+2020-06-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/26112\n+\t* testsuite/binutils-all/pr26112.o.bz2: New file.\n+\t* testsuite/binutils-all/pr26112.r: Likewise.\n+\t* testsuite/binutils-all/readelf.exp: Run PR binutils/26112 test.\n+\n 2020-06-23  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/binutils-all/objdump.exp (bintest.a): Correct"
    },
    {
      "sha": "a09c35f8104c5d5b9926c29e1a1e1942188bd932",
      "filename": "binutils/testsuite/binutils-all/pr26112.o.bz2",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80fda85ca18ee287c826a90b09c5cb8e20fd4d54/binutils/testsuite/binutils-all/pr26112.o.bz2",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80fda85ca18ee287c826a90b09c5cb8e20fd4d54/binutils/testsuite/binutils-all/pr26112.o.bz2",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/pr26112.o.bz2?ref=80fda85ca18ee287c826a90b09c5cb8e20fd4d54"
    },
    {
      "sha": "b82b06025b1d2ae44c64e9b19342c0e599dd61ea",
      "filename": "binutils/testsuite/binutils-all/pr26112.r",
      "status": "added",
      "additions": 350,
      "deletions": 0,
      "changes": 350,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80fda85ca18ee287c826a90b09c5cb8e20fd4d54/binutils/testsuite/binutils-all/pr26112.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80fda85ca18ee287c826a90b09c5cb8e20fd4d54/binutils/testsuite/binutils-all/pr26112.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/pr26112.r?ref=80fda85ca18ee287c826a90b09c5cb8e20fd4d54",
      "patch": "@@ -0,0 +1,350 @@\n+Contents of the .debug_macro section:\n+\n+  Offset:                      0x0\n+  Version:                     5\n+  Offset size:                 4\n+  Offset into .debug_line:     0x0\n+\n+ DW_MACRO_start_file - lineno: 0 filenum: 1\n+ DW_MACRO_define_strx lineno : 1 macro : FOO bar\n+ DW_MACRO_end_file\n+ DW_MACRO_define_strx lineno : 0 macro : __llvm__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __clang__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __clang_major__ 11\n+ DW_MACRO_define_strx lineno : 0 macro : __clang_minor__ 0\n+ DW_MACRO_define_strx lineno : 0 macro : __clang_patchlevel__ 0\n+ DW_MACRO_define_strx lineno : 0 macro : __clang_version__ \"11.0.0 \\(https://github.com/llvm/llvm-project 10e30de8822e85839a29799b3e7b89dece3843b3\\)\"\n+ DW_MACRO_define_strx lineno : 0 macro : __GNUC__ 4\n+ DW_MACRO_define_strx lineno : 0 macro : __GNUC_MINOR__ 2\n+ DW_MACRO_define_strx lineno : 0 macro : __GNUC_PATCHLEVEL__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __GXX_ABI_VERSION 1002\n+ DW_MACRO_define_strx lineno : 0 macro : __ATOMIC_RELAXED 0\n+ DW_MACRO_define_strx lineno : 0 macro : __ATOMIC_CONSUME 1\n+ DW_MACRO_define_strx lineno : 0 macro : __ATOMIC_ACQUIRE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __ATOMIC_RELEASE 3\n+ DW_MACRO_define_strx lineno : 0 macro : __ATOMIC_ACQ_REL 4\n+ DW_MACRO_define_strx lineno : 0 macro : __ATOMIC_SEQ_CST 5\n+ DW_MACRO_define_strx lineno : 0 macro : __OPENCL_MEMORY_SCOPE_WORK_ITEM 0\n+ DW_MACRO_define_strx lineno : 0 macro : __OPENCL_MEMORY_SCOPE_WORK_GROUP 1\n+ DW_MACRO_define_strx lineno : 0 macro : __OPENCL_MEMORY_SCOPE_DEVICE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES 3\n+ DW_MACRO_define_strx lineno : 0 macro : __OPENCL_MEMORY_SCOPE_SUB_GROUP 4\n+ DW_MACRO_define_strx lineno : 0 macro : __PRAGMA_REDEFINE_EXTNAME 1\n+ DW_MACRO_define_strx lineno : 0 macro : __VERSION__ \"Clang 11.0.0 \\(https://github.com/llvm/llvm-project 10e30de8822e85839a29799b3e7b89dece3843b3\\)\"\n+ DW_MACRO_define_strx lineno : 0 macro : __OBJC_BOOL_IS_BOOL 0\n+ DW_MACRO_define_strx lineno : 0 macro : __CONSTANT_CFSTRINGS__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __ORDER_LITTLE_ENDIAN__ 1234\n+ DW_MACRO_define_strx lineno : 0 macro : __ORDER_BIG_ENDIAN__ 4321\n+ DW_MACRO_define_strx lineno : 0 macro : __ORDER_PDP_ENDIAN__ 3412\n+ DW_MACRO_define_strx lineno : 0 macro : __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__\n+ DW_MACRO_define_strx lineno : 0 macro : __LITTLE_ENDIAN__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : _LP64 1\n+ DW_MACRO_define_strx lineno : 0 macro : __LP64__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __CHAR_BIT__ 8\n+ DW_MACRO_define_strx lineno : 0 macro : __SCHAR_MAX__ 127\n+ DW_MACRO_define_strx lineno : 0 macro : __SHRT_MAX__ 32767\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_MAX__ 2147483647\n+ DW_MACRO_define_strx lineno : 0 macro : __LONG_MAX__ 9223372036854775807L\n+ DW_MACRO_define_strx lineno : 0 macro : __LONG_LONG_MAX__ 9223372036854775807LL\n+ DW_MACRO_define_strx lineno : 0 macro : __WCHAR_MAX__ 2147483647\n+ DW_MACRO_define_strx lineno : 0 macro : __WINT_MAX__ 4294967295U\n+ DW_MACRO_define_strx lineno : 0 macro : __INTMAX_MAX__ 9223372036854775807L\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZE_MAX__ 18446744073709551615UL\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTMAX_MAX__ 18446744073709551615UL\n+ DW_MACRO_define_strx lineno : 0 macro : __PTRDIFF_MAX__ 9223372036854775807L\n+ DW_MACRO_define_strx lineno : 0 macro : __INTPTR_MAX__ 9223372036854775807L\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTPTR_MAX__ 18446744073709551615UL\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_DOUBLE__ 8\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_FLOAT__ 4\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_INT__ 4\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_LONG__ 8\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_LONG_DOUBLE__ 16\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_LONG_LONG__ 8\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_POINTER__ 8\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_SHORT__ 2\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_PTRDIFF_T__ 8\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_SIZE_T__ 8\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_WCHAR_T__ 4\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_WINT_T__ 4\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_INT128__ 16\n+ DW_MACRO_define_strx lineno : 0 macro : __INTMAX_TYPE__ long int\n+ DW_MACRO_define_strx lineno : 0 macro : __INTMAX_FMTd__ \"ld\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INTMAX_FMTi__ \"li\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INTMAX_C_SUFFIX__ L\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTMAX_TYPE__ long unsigned int\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTMAX_FMTo__ \"lo\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTMAX_FMTu__ \"lu\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTMAX_FMTx__ \"lx\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTMAX_FMTX__ \"lX\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTMAX_C_SUFFIX__ UL\n+ DW_MACRO_define_strx lineno : 0 macro : __INTMAX_WIDTH__ 64\n+ DW_MACRO_define_strx lineno : 0 macro : __PTRDIFF_TYPE__ long int\n+ DW_MACRO_define_strx lineno : 0 macro : __PTRDIFF_FMTd__ \"ld\"\n+ DW_MACRO_define_strx lineno : 0 macro : __PTRDIFF_FMTi__ \"li\"\n+ DW_MACRO_define_strx lineno : 0 macro : __PTRDIFF_WIDTH__ 64\n+ DW_MACRO_define_strx lineno : 0 macro : __INTPTR_TYPE__ long int\n+ DW_MACRO_define_strx lineno : 0 macro : __INTPTR_FMTd__ \"ld\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INTPTR_FMTi__ \"li\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INTPTR_WIDTH__ 64\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZE_TYPE__ long unsigned int\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZE_FMTo__ \"lo\"\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZE_FMTu__ \"lu\"\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZE_FMTx__ \"lx\"\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZE_FMTX__ \"lX\"\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZE_WIDTH__ 64\n+ DW_MACRO_define_strx lineno : 0 macro : __WCHAR_TYPE__ int\n+ DW_MACRO_define_strx lineno : 0 macro : __WCHAR_WIDTH__ 32\n+ DW_MACRO_define_strx lineno : 0 macro : __WINT_TYPE__ unsigned int\n+ DW_MACRO_define_strx lineno : 0 macro : __WINT_WIDTH__ 32\n+ DW_MACRO_define_strx lineno : 0 macro : __SIG_ATOMIC_WIDTH__ 32\n+ DW_MACRO_define_strx lineno : 0 macro : __SIG_ATOMIC_MAX__ 2147483647\n+ DW_MACRO_define_strx lineno : 0 macro : __CHAR16_TYPE__ unsigned short\n+ DW_MACRO_define_strx lineno : 0 macro : __CHAR32_TYPE__ unsigned int\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTMAX_WIDTH__ 64\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTPTR_TYPE__ long unsigned int\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTPTR_FMTo__ \"lo\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTPTR_FMTu__ \"lu\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTPTR_FMTx__ \"lx\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTPTR_FMTX__ \"lX\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINTPTR_WIDTH__ 64\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_DENORM_MIN__ 1.40129846e-45F\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_HAS_DENORM__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_DIG__ 6\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_DECIMAL_DIG__ 9\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_EPSILON__ 1.19209290e-7F\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_HAS_INFINITY__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_HAS_QUIET_NAN__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_MANT_DIG__ 24\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_MAX_10_EXP__ 38\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_MAX_EXP__ 128\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_MAX__ 3.40282347e\\+38F\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_MIN_10_EXP__ \\(-37\\)\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_MIN_EXP__ \\(-125\\)\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_MIN__ 1.17549435e-38F\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_DENORM_MIN__ 4.9406564584124654e-324\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_HAS_DENORM__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_DIG__ 15\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_DECIMAL_DIG__ 17\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_EPSILON__ 2.2204460492503131e-16\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_HAS_INFINITY__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_HAS_QUIET_NAN__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_MANT_DIG__ 53\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_MAX_10_EXP__ 308\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_MAX_EXP__ 1024\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_MAX__ 1.7976931348623157e\\+308\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_MIN_10_EXP__ \\(-307\\)\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_MIN_EXP__ \\(-1021\\)\n+ DW_MACRO_define_strx lineno : 0 macro : __DBL_MIN__ 2.2250738585072014e-308\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_DENORM_MIN__ 3.64519953188247460253e-4951L\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_HAS_DENORM__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_DIG__ 18\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_DECIMAL_DIG__ 21\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_EPSILON__ 1.08420217248550443401e-19L\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_HAS_INFINITY__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_HAS_QUIET_NAN__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_MANT_DIG__ 64\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_MAX_10_EXP__ 4932\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_MAX_EXP__ 16384\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_MAX__ 1.18973149535723176502e\\+4932L\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_MIN_10_EXP__ \\(-4931\\)\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_MIN_EXP__ \\(-16381\\)\n+ DW_MACRO_define_strx lineno : 0 macro : __LDBL_MIN__ 3.36210314311209350626e-4932L\n+ DW_MACRO_define_strx lineno : 0 macro : __POINTER_WIDTH__ 64\n+ DW_MACRO_define_strx lineno : 0 macro : __BIGGEST_ALIGNMENT__ 16\n+ DW_MACRO_define_strx lineno : 0 macro : __WINT_UNSIGNED__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __INT8_TYPE__ signed char\n+ DW_MACRO_define_strx lineno : 0 macro : __INT8_FMTd__ \"hhd\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT8_FMTi__ \"hhi\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT8_C_SUFFIX__\n+ DW_MACRO_define_strx lineno : 0 macro : __INT16_TYPE__ short\n+ DW_MACRO_define_strx lineno : 0 macro : __INT16_FMTd__ \"hd\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT16_FMTi__ \"hi\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT16_C_SUFFIX__\n+ DW_MACRO_define_strx lineno : 0 macro : __INT32_TYPE__ int\n+ DW_MACRO_define_strx lineno : 0 macro : __INT32_FMTd__ \"d\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT32_FMTi__ \"i\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT32_C_SUFFIX__\n+ DW_MACRO_define_strx lineno : 0 macro : __INT64_TYPE__ long int\n+ DW_MACRO_define_strx lineno : 0 macro : __INT64_FMTd__ \"ld\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT64_FMTi__ \"li\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT64_C_SUFFIX__ L\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT8_TYPE__ unsigned char\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT8_FMTo__ \"hho\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT8_FMTu__ \"hhu\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT8_FMTx__ \"hhx\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT8_FMTX__ \"hhX\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT8_C_SUFFIX__\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT8_MAX__ 255\n+ DW_MACRO_define_strx lineno : 0 macro : __INT8_MAX__ 127\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT16_TYPE__ unsigned short\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT16_FMTo__ \"ho\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT16_FMTu__ \"hu\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT16_FMTx__ \"hx\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT16_FMTX__ \"hX\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT16_C_SUFFIX__\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT16_MAX__ 65535\n+ DW_MACRO_define_strx lineno : 0 macro : __INT16_MAX__ 32767\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT32_TYPE__ unsigned int\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT32_FMTo__ \"o\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT32_FMTu__ \"u\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT32_FMTx__ \"x\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT32_FMTX__ \"X\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT32_C_SUFFIX__ U\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT32_MAX__ 4294967295U\n+ DW_MACRO_define_strx lineno : 0 macro : __INT32_MAX__ 2147483647\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT64_TYPE__ long unsigned int\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT64_FMTo__ \"lo\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT64_FMTu__ \"lu\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT64_FMTx__ \"lx\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT64_FMTX__ \"lX\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT64_C_SUFFIX__ UL\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT64_MAX__ 18446744073709551615UL\n+ DW_MACRO_define_strx lineno : 0 macro : __INT64_MAX__ 9223372036854775807L\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST8_TYPE__ signed char\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST8_MAX__ 127\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST8_FMTd__ \"hhd\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST8_FMTi__ \"hhi\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST8_TYPE__ unsigned char\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST8_MAX__ 255\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST8_FMTo__ \"hho\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST8_FMTu__ \"hhu\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST8_FMTx__ \"hhx\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST8_FMTX__ \"hhX\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST16_TYPE__ short\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST16_MAX__ 32767\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST16_FMTd__ \"hd\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST16_FMTi__ \"hi\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST16_TYPE__ unsigned short\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST16_MAX__ 65535\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST16_FMTo__ \"ho\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST16_FMTu__ \"hu\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST16_FMTx__ \"hx\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST16_FMTX__ \"hX\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST32_TYPE__ int\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST32_MAX__ 2147483647\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST32_FMTd__ \"d\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST32_FMTi__ \"i\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST32_TYPE__ unsigned int\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST32_MAX__ 4294967295U\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST32_FMTo__ \"o\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST32_FMTu__ \"u\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST32_FMTx__ \"x\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST32_FMTX__ \"X\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST64_TYPE__ long int\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST64_MAX__ 9223372036854775807L\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST64_FMTd__ \"ld\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_LEAST64_FMTi__ \"li\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST64_TYPE__ long unsigned int\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST64_MAX__ 18446744073709551615UL\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST64_FMTo__ \"lo\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST64_FMTu__ \"lu\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST64_FMTx__ \"lx\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_LEAST64_FMTX__ \"lX\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST8_TYPE__ signed char\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST8_MAX__ 127\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST8_FMTd__ \"hhd\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST8_FMTi__ \"hhi\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST8_TYPE__ unsigned char\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST8_MAX__ 255\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST8_FMTo__ \"hho\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST8_FMTu__ \"hhu\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST8_FMTx__ \"hhx\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST8_FMTX__ \"hhX\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST16_TYPE__ short\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST16_MAX__ 32767\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST16_FMTd__ \"hd\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST16_FMTi__ \"hi\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST16_TYPE__ unsigned short\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST16_MAX__ 65535\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST16_FMTo__ \"ho\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST16_FMTu__ \"hu\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST16_FMTx__ \"hx\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST16_FMTX__ \"hX\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST32_TYPE__ int\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST32_MAX__ 2147483647\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST32_FMTd__ \"d\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST32_FMTi__ \"i\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST32_TYPE__ unsigned int\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST32_MAX__ 4294967295U\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST32_FMTo__ \"o\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST32_FMTu__ \"u\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST32_FMTx__ \"x\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST32_FMTX__ \"X\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST64_TYPE__ long int\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST64_MAX__ 9223372036854775807L\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST64_FMTd__ \"ld\"\n+ DW_MACRO_define_strx lineno : 0 macro : __INT_FAST64_FMTi__ \"li\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST64_TYPE__ long unsigned int\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST64_MAX__ 18446744073709551615UL\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST64_FMTo__ \"lo\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST64_FMTu__ \"lu\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST64_FMTx__ \"lx\"\n+ DW_MACRO_define_strx lineno : 0 macro : __UINT_FAST64_FMTX__ \"lX\"\n+ DW_MACRO_define_strx lineno : 0 macro : __USER_LABEL_PREFIX__\n+ DW_MACRO_define_strx lineno : 0 macro : __FINITE_MATH_ONLY__ 0\n+ DW_MACRO_define_strx lineno : 0 macro : __GNUC_STDC_INLINE__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1\n+ DW_MACRO_define_strx lineno : 0 macro : __CLANG_ATOMIC_BOOL_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __CLANG_ATOMIC_CHAR_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __CLANG_ATOMIC_CHAR16_T_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __CLANG_ATOMIC_CHAR32_T_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __CLANG_ATOMIC_WCHAR_T_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __CLANG_ATOMIC_SHORT_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __CLANG_ATOMIC_INT_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __CLANG_ATOMIC_LONG_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __CLANG_ATOMIC_LLONG_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __CLANG_ATOMIC_POINTER_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_ATOMIC_BOOL_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_ATOMIC_CHAR_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_ATOMIC_SHORT_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_ATOMIC_INT_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_ATOMIC_LONG_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_ATOMIC_LLONG_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_ATOMIC_POINTER_LOCK_FREE 2\n+ DW_MACRO_define_strx lineno : 0 macro : __NO_INLINE__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_EVAL_METHOD__ 0\n+ DW_MACRO_define_strx lineno : 0 macro : __FLT_RADIX__ 2\n+ DW_MACRO_define_strx lineno : 0 macro : __DECIMAL_DIG__ __LDBL_DECIMAL_DIG__\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_ASM_FLAG_OUTPUTS__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __code_model_small__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __amd64__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __amd64 1\n+ DW_MACRO_define_strx lineno : 0 macro : __x86_64 1\n+ DW_MACRO_define_strx lineno : 0 macro : __x86_64__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __SEG_GS 1\n+ DW_MACRO_define_strx lineno : 0 macro : __SEG_FS 1\n+ DW_MACRO_define_strx lineno : 0 macro : __seg_gs __attribute__\\(\\(address_space\\(256\\)\\)\\)\n+ DW_MACRO_define_strx lineno : 0 macro : __seg_fs __attribute__\\(\\(address_space\\(257\\)\\)\\)\n+ DW_MACRO_define_strx lineno : 0 macro : __k8 1\n+ DW_MACRO_define_strx lineno : 0 macro : __k8__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __tune_k8__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __REGISTER_PREFIX__\n+ DW_MACRO_define_strx lineno : 0 macro : __NO_MATH_INLINES 1\n+ DW_MACRO_define_strx lineno : 0 macro : __FXSR__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __SSE2__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __SSE2_MATH__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __SSE__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __SSE_MATH__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __MMX__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1\n+ DW_MACRO_define_strx lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1\n+ DW_MACRO_define_strx lineno : 0 macro : __SIZEOF_FLOAT128__ 16\n+ DW_MACRO_define_strx lineno : 0 macro : unix 1\n+ DW_MACRO_define_strx lineno : 0 macro : __unix 1\n+ DW_MACRO_define_strx lineno : 0 macro : __unix__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : linux 1\n+ DW_MACRO_define_strx lineno : 0 macro : __linux 1\n+ DW_MACRO_define_strx lineno : 0 macro : __linux__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __ELF__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __gnu_linux__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __FLOAT128__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __STDC__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __STDC_HOSTED__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __STDC_VERSION__ 201710L\n+ DW_MACRO_define_strx lineno : 0 macro : __STDC_UTF_16__ 1\n+ DW_MACRO_define_strx lineno : 0 macro : __STDC_UTF_32__ 1"
    },
    {
      "sha": "cb924317bcc8ca4e9d15f7ee9cd7a6ae9c9215c3",
      "filename": "binutils/testsuite/binutils-all/readelf.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80fda85ca18ee287c826a90b09c5cb8e20fd4d54/binutils/testsuite/binutils-all/readelf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80fda85ca18ee287c826a90b09c5cb8e20fd4d54/binutils/testsuite/binutils-all/readelf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/readelf.exp?ref=80fda85ca18ee287c826a90b09c5cb8e20fd4d54",
      "patch": "@@ -518,3 +518,16 @@ if {![binutils_assemble $srcdir/$subdir/zero-sec.s tmpdir/zero-sec.o]} then {\n     readelf_test {--enable-checks --sections --wide} $tempfile zero-sec.r {}\n }\n \n+if ![is_remote host] {\n+    set test $srcdir/$subdir/pr26112.o.bz2\n+    # We need to strip the \".bz2\", but can leave the dirname.\n+    set t $subdir/[file tail $test]\n+    set testname [file rootname $t]\n+    verbose $testname\n+    set tempfile tmpdir/pr26112.o\n+    if {[catch \"system \\\"bzip2 -dc $test > $tempfile\\\"\"] != 0} {\n+\tuntested \"bzip2 -dc ($testname)\"\n+    } else {\n+\treadelf_test {--debug-dump=macro} $tempfile pr26112.r {}\n+    }\n+}"
    }
  ]
}