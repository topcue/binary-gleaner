{
  "sha": "04f5bab24ba93562d5d14b6f26efbd407dbccaaf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDRmNWJhYjI0YmE5MzU2MmQ1ZDE0YjZmMjZlZmJkNDA3ZGJjY2FhZg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-09-14T15:08:08Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-09-14T15:08:08Z"
    },
    "message": "gdb: remove TYPE_ENDIANITY_NOT_DEFAULT\n\ngdb/ChangeLog:\n\n\t* gdbtypes.h (TYPE_ENDIANITY_NOT_DEFAULT): Remove, replace all\n\tuses with type::endianity_is_not_default.\n\nChange-Id: I61956093c8ce6703299e913746ba91313108a0f2",
    "tree": {
      "sha": "74287d416e8e9620361408c3f7e3c7b2bf627b1c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/74287d416e8e9620361408c3f7e3c7b2bf627b1c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/04f5bab24ba93562d5d14b6f26efbd407dbccaaf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/04f5bab24ba93562d5d14b6f26efbd407dbccaaf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/04f5bab24ba93562d5d14b6f26efbd407dbccaaf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/04f5bab24ba93562d5d14b6f26efbd407dbccaaf/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "db558e34b065552e67646879bd70867318a8ff5b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db558e34b065552e67646879bd70867318a8ff5b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/db558e34b065552e67646879bd70867318a8ff5b"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 12,
    "deletions": 9
  },
  "files": [
    {
      "sha": "0ccbb8919242528c00a791254e9f023c17371d5a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04f5bab24ba93562d5d14b6f26efbd407dbccaaf/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04f5bab24ba93562d5d14b6f26efbd407dbccaaf/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=04f5bab24ba93562d5d14b6f26efbd407dbccaaf",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-14  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* gdbtypes.h (TYPE_ENDIANITY_NOT_DEFAULT): Remove, replace all\n+\tuses with type::endianity_is_not_default.\n+\n 2020-09-14  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbtypes.h (struct type) <endianity_is_not_default,"
    },
    {
      "sha": "5a3f18ee3518f75eba1c4f863d80700ba79bb18b",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04f5bab24ba93562d5d14b6f26efbd407dbccaaf/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04f5bab24ba93562d5d14b6f26efbd407dbccaaf/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=04f5bab24ba93562d5d14b6f26efbd407dbccaaf",
      "patch": "@@ -3705,7 +3705,7 @@ enum bfd_endian\n type_byte_order (const struct type *type)\n {\n   bfd_endian byteorder = gdbarch_byte_order (get_type_arch (type));\n-  if (TYPE_ENDIANITY_NOT_DEFAULT (type))\n+  if (type->endianity_is_not_default ())\n     {\n       if (byteorder == BFD_ENDIAN_BIG)\n         return BFD_ENDIAN_LITTLE;\n@@ -3991,7 +3991,7 @@ check_types_equal (struct type *type1, struct type *type2,\n       || TYPE_LENGTH (type1) != TYPE_LENGTH (type2)\n       || type1->is_unsigned () != type2->is_unsigned ()\n       || type1->has_no_signedness () != type2->has_no_signedness ()\n-      || TYPE_ENDIANITY_NOT_DEFAULT (type1) != TYPE_ENDIANITY_NOT_DEFAULT (type2)\n+      || type1->endianity_is_not_default () != type2->endianity_is_not_default ()\n       || type1->has_varargs () != type2->has_varargs ()\n       || type1->is_vector () != type2->is_vector ()\n       || TYPE_NOTTEXT (type1) != TYPE_NOTTEXT (type2)\n@@ -5072,7 +5072,7 @@ recursive_dump_type (struct type *type, int spaces)\n     {\n       puts_filtered (\" TYPE_NOSIGN\");\n     }\n-  if (TYPE_ENDIANITY_NOT_DEFAULT (type))\n+  if (type->endianity_is_not_default ())\n     {\n       puts_filtered (\" TYPE_ENDIANITY_NOT_DEFAULT\");\n     }"
    },
    {
      "sha": "ee9fc79dd64ffc58518d30dbd5e90ec76dbb0fc7",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04f5bab24ba93562d5d14b6f26efbd407dbccaaf/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04f5bab24ba93562d5d14b6f26efbd407dbccaaf/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=04f5bab24ba93562d5d14b6f26efbd407dbccaaf",
      "patch": "@@ -210,12 +210,6 @@ enum type_instance_flag_value : unsigned\n \n DEF_ENUM_FLAGS_TYPE (enum type_instance_flag_value, type_instance_flags);\n \n-/* * A compiler may supply dwarf instrumentation\n-   that indicates the desired endian interpretation of the variable\n-   differs from the native endian representation. */\n-\n-#define TYPE_ENDIANITY_NOT_DEFAULT(t) ((t)->endianity_is_not_default ())\n-\n /* * Not textual.  By default, GDB treats all single byte integers as\n    characters (or elements of strings) unless this flag is set.  */\n \n@@ -1149,6 +1143,10 @@ struct type\n     this->main_type->m_flag_fixed_instance = is_fixed_instance;\n   }\n \n+  /* A compiler may supply dwarf instrumentation that indicates the desired\n+     endian interpretation of the variable differs from the native endian\n+     representation. */\n+\n   bool endianity_is_not_default () const\n   {\n     return this->main_type->m_flag_endianity_not_default;"
    }
  ]
}