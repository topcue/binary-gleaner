{
  "sha": "c0d7ed8ca842c9b199722a878f46adab7b9320ff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzBkN2VkOGNhODQyYzliMTk5NzIyYTg3OGY0NmFkYWI3YjkzMjBmZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:13Z"
    },
    "message": "Split out eval_multi_subscript\n\nThis splits MULTI_SUBSCRIPT into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (eval_multi_subscript): New function.\n\t(evaluate_subexp_standard): Use it.",
    "tree": {
      "sha": "abd13005fa357c9b6fcb497ac4a90e13934e8953",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/abd13005fa357c9b6fcb497ac4a90e13934e8953"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c0d7ed8ca842c9b199722a878f46adab7b9320ff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0d7ed8ca842c9b199722a878f46adab7b9320ff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c0d7ed8ca842c9b199722a878f46adab7b9320ff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0d7ed8ca842c9b199722a878f46adab7b9320ff/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dd5fd28346863006668d3a04957f7b066f3b8b2a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd5fd28346863006668d3a04957f7b066f3b8b2a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dd5fd28346863006668d3a04957f7b066f3b8b2a"
    }
  ],
  "stats": {
    "total": 80,
    "additions": 47,
    "deletions": 33
  },
  "files": [
    {
      "sha": "96a97828f2910cfcc9e2b928ad979eb8aa100af8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0d7ed8ca842c9b199722a878f46adab7b9320ff/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0d7ed8ca842c9b199722a878f46adab7b9320ff/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c0d7ed8ca842c9b199722a878f46adab7b9320ff",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (eval_multi_subscript): New function.\n+\t(evaluate_subexp_standard): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_binop_exp): New function."
    },
    {
      "sha": "8636bcf1fc351d5f1b67bf5b9dbd19358090301e",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 42,
      "deletions": 33,
      "changes": 75,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0d7ed8ca842c9b199722a878f46adab7b9320ff/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0d7ed8ca842c9b199722a878f46adab7b9320ff/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=c0d7ed8ca842c9b199722a878f46adab7b9320ff",
      "patch": "@@ -2360,6 +2360,46 @@ eval_op_objc_msgcall (struct type *expect_type, struct expression *exp,\n   return call_function_by_hand (called_method, NULL, args);\n }\n \n+/* Helper function for MULTI_SUBSCRIPT.  */\n+\n+static struct value *\n+eval_multi_subscript (struct type *expect_type, struct expression *exp,\n+\t\t      enum noside noside, value *arg1,\n+\t\t      gdb::array_view<value *> args)\n+{\n+  if (noside == EVAL_SKIP)\n+    return arg1;\n+  for (value *arg2 : args)\n+    {\n+      if (binop_user_defined_p (MULTI_SUBSCRIPT, arg1, arg2))\n+\t{\n+\t  arg1 = value_x_binop (arg1, arg2, MULTI_SUBSCRIPT, OP_NULL, noside);\n+\t}\n+      else\n+\t{\n+\t  arg1 = coerce_ref (arg1);\n+\t  struct type *type = check_typedef (value_type (arg1));\n+\n+\t  switch (type->code ())\n+\t    {\n+\t    case TYPE_CODE_PTR:\n+\t    case TYPE_CODE_ARRAY:\n+\t    case TYPE_CODE_STRING:\n+\t      arg1 = value_subscript (arg1, value_as_long (arg2));\n+\t      break;\n+\n+\t    default:\n+\t      if (type->name ())\n+\t\terror (_(\"cannot subscript something of type `%s'\"),\n+\t\t       type->name ());\n+\t      else\n+\t\terror (_(\"cannot subscript requested type\"));\n+\t    }\n+\t}\n+    }\n+  return (arg1);\n+}\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,\n@@ -2815,39 +2855,8 @@ evaluate_subexp_standard (struct type *expect_type,\n       argvec = XALLOCAVEC (struct value *, nargs);\n       for (ix = 0; ix < nargs; ++ix)\n \targvec[ix] = evaluate_subexp_with_coercion (exp, pos, noside);\n-      if (noside == EVAL_SKIP)\n-\treturn arg1;\n-      for (ix = 0; ix < nargs; ++ix)\n-\t{\n-\t  arg2 = argvec[ix];\n-\n-\t  if (binop_user_defined_p (op, arg1, arg2))\n-\t    {\n-\t      arg1 = value_x_binop (arg1, arg2, op, OP_NULL, noside);\n-\t    }\n-\t  else\n-\t    {\n-\t      arg1 = coerce_ref (arg1);\n-\t      type = check_typedef (value_type (arg1));\n-\n-\t      switch (type->code ())\n-\t\t{\n-\t\tcase TYPE_CODE_PTR:\n-\t\tcase TYPE_CODE_ARRAY:\n-\t\tcase TYPE_CODE_STRING:\n-\t\t  arg1 = value_subscript (arg1, value_as_long (arg2));\n-\t\t  break;\n-\n-\t\tdefault:\n-\t\t  if (type->name ())\n-\t\t    error (_(\"cannot subscript something of type `%s'\"),\n-\t\t\t   type->name ());\n-\t\t  else\n-\t\t    error (_(\"cannot subscript requested type\"));\n-\t\t}\n-\t    }\n-\t}\n-      return (arg1);\n+      return eval_multi_subscript (expect_type, exp, noside, arg1,\n+\t\t\t\t   gdb::make_array_view (argvec, nargs));\n \n     case BINOP_LOGICAL_AND:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);"
    }
  ]
}