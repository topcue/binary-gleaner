{
  "sha": "f749f26eea052459c27e21d0d15f5fac060961dc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Zjc0OWYyNmVlYTA1MjQ1OWMyN2UyMWQwZDE1ZjVmYWMwNjA5NjFkYw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-10-03T23:18:41Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-10-04T13:23:56Z"
    },
    "message": "PowerPC PIC vs. DLL TLS issues\n\n1) GOT entries generated for any of the GOT TLS relocations don't need\ndynamic relocations for locally defined symbols in PIEs.  In the case\nof a tls_index doubleword, the dtpmod entry is known to be 1, and the\ndtprel entry is also known at link time and relative.  Similarly,\ndtprel and tprel words are known at link time and relative.  (GOT\nentries for other than TLS symbols are not relative and thus need\ndynamic relocations in PIEs.)\n2) Local dynamic TLS code is really only meant for accesses local to\nthe current binary.  There was a cheapskate test for this before using\nthe common tlsld_got slot, but the test wasn't exactly correct and\nmight confuse anyone looking at the code.  The proper test,\nSYMBOL_REFERENCES_LOCAL isn't so expensive that it should be avoided.\n3) The same cheap test for local syms when optimising TLS sequences\nshould be SYMBOL_REFERENCES_LOCAL too.\n\nbfd/\n\t* elf64-ppc.c (ppc64_elf_check_relocs): Move initialisation of vars.\n\t(ppc64_elf_tls_optimize): Correct is_local condition.\n\t(allocate_got): Don't reserve dynamic relocations for any of the\n\ttls got relocs in PIEs when the symbol is local.\n\t(allocate_dynrelocs): Correct validity test for local sym using\n\ttlsld_got slot.\n\t(ppc64_elf_size_dynamic_sections): Don't reserve dynamic relocations\n\tfor any of the tls got relocs in PIEs.\n\t(ppc64_elf_layout_multitoc): Likewise.\n\t(ppc64_elf_relocate_section): Correct validity test for local sym\n\tusing tlsld_got slot.  Don't emit dynamic relocations for any of\n\tthe tls got relocs in PIEs when the symbol is local.\n\t* elf32-ppc.c (ppc_elf_tls_optimize): Correct is_local condition.\n\t(got_relocs_needed): Delete.\n\t(allocate_dynrelocs): Correct validity test for local sym using\n\ttlsld_got slot.  Don't reserve dynamic relocations for any of the\n\ttls got relocs in PIEs when the symbol is local.\n\t(ppc_elf_size_dynamic_sections): Don't reserve dynamic relocations\n\tfor any of the tls got relocs in PIEs.\n\t(ppc_elf_relocate_section): Correct validity test for local sym\n\tusing tlsld_got slot.  Don't emit dynamic relocations for any of\n\tthe tls got relocs in PIEs when the symbol is local.\nld/\n\t* testsuite/ld-powerpc/tlsso.d: Adjust to suit tlsld_got usage change.\n\t* testsuite/ld-powerpc/tlsso.g: Likewise.\n\t* testsuite/ld-powerpc/tlsso.r: Likewise.\n\t* testsuite/ld-powerpc/tlsso32.d: Likewise.\n\t* testsuite/ld-powerpc/tlsso32.g: Likewise.\n\t* testsuite/ld-powerpc/tlsso32.r: Likewise.",
    "tree": {
      "sha": "a3f3e0e4355e7c712c31228440c20948c0e46e1b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a3f3e0e4355e7c712c31228440c20948c0e46e1b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f749f26eea052459c27e21d0d15f5fac060961dc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f749f26eea052459c27e21d0d15f5fac060961dc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f749f26eea052459c27e21d0d15f5fac060961dc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f749f26eea052459c27e21d0d15f5fac060961dc/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9cb09e33e04feb12df2aaa6e81d61b82ad609ce5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9cb09e33e04feb12df2aaa6e81d61b82ad609ce5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9cb09e33e04feb12df2aaa6e81d61b82ad609ce5"
    }
  ],
  "stats": {
    "total": 179,
    "additions": 94,
    "deletions": 85
  },
  "files": [
    {
      "sha": "09f34ed52413d0e974e9224409e26c82c6e7f9c3",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f749f26eea052459c27e21d0d15f5fac060961dc/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f749f26eea052459c27e21d0d15f5fac060961dc/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=f749f26eea052459c27e21d0d15f5fac060961dc",
      "patch": "@@ -1,3 +1,28 @@\n+2019-10-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf64-ppc.c (ppc64_elf_check_relocs): Move initialisation of vars.\n+\t(ppc64_elf_tls_optimize): Correct is_local condition.\n+\t(allocate_got): Don't reserve dynamic relocations for any of the\n+\ttls got relocs in PIEs when the symbol is local.\n+\t(allocate_dynrelocs): Correct validity test for local sym using\n+\ttlsld_got slot.\n+\t(ppc64_elf_size_dynamic_sections): Don't reserve dynamic relocations\n+\tfor any of the tls got relocs in PIEs.\n+\t(ppc64_elf_layout_multitoc): Likewise.\n+\t(ppc64_elf_relocate_section): Correct validity test for local sym\n+\tusing tlsld_got slot.  Don't emit dynamic relocations for any of\n+\tthe tls got relocs in PIEs when the symbol is local.\n+\t* elf32-ppc.c (ppc_elf_tls_optimize): Correct is_local condition.\n+\t(got_relocs_needed): Delete.\n+\t(allocate_dynrelocs): Correct validity test for local sym using\n+\ttlsld_got slot.  Don't reserve dynamic relocations for any of the\n+\ttls got relocs in PIEs when the symbol is local.\n+\t(ppc_elf_size_dynamic_sections): Don't reserve dynamic relocations\n+\tfor any of the tls got relocs in PIEs.\n+\t(ppc_elf_relocate_section): Correct validity test for local sym\n+\tusing tlsld_got slot.  Don't emit dynamic relocations for any of\n+\tthe tls got relocs in PIEs when the symbol is local.\n+\n 2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \tPR ld/22263"
    },
    {
      "sha": "89d1e94378263ee57c7ed8d0cdb1dc731d1447be",
      "filename": "bfd/elf32-ppc.c",
      "status": "modified",
      "additions": 19,
      "deletions": 44,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f749f26eea052459c27e21d0d15f5fac060961dc/bfd/elf32-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f749f26eea052459c27e21d0d15f5fac060961dc/bfd/elf32-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-ppc.c?ref=f749f26eea052459c27e21d0d15f5fac060961dc",
      "patch": "@@ -4455,11 +4455,7 @@ ppc_elf_tls_optimize (bfd *obfd ATTRIBUTE_UNUSED,\n \t\t\th = (struct elf_link_hash_entry *) h->root.u.i.link;\n \t\t    }\n \n-\t\t  is_local = FALSE;\n-\t\t  if (h == NULL\n-\t\t      || !h->def_dynamic)\n-\t\t    is_local = TRUE;\n-\n+\t\t  is_local = SYMBOL_REFERENCES_LOCAL (info, h);\n \t\t  r_type = ELF32_R_TYPE (rel->r_info);\n \t\t  /* If this section has old-style __tls_get_addr calls\n \t\t     without marker relocs, then check that each\n@@ -5049,24 +5045,6 @@ got_entries_needed (int tls_mask)\n   return need;\n }\n \n-/* Calculate size of relocs needed for symbol given its TLS_MASK and\n-   NEEDed GOT entries.  KNOWN says a TPREL offset can be calculated at\n-   link time.  */\n-\n-static inline unsigned int\n-got_relocs_needed (int tls_mask, unsigned int need, bfd_boolean known)\n-{\n-  /* All the entries we allocated need relocs.\n-     Except IE in executable with a local symbol.  We could also omit\n-     the DTPREL reloc on the second word of a GD entry under the same\n-     condition as that for IE, but ld.so needs to differentiate\n-     LD and GD entries.  */\n-  if (known && (tls_mask & TLS_TLS) != 0\n-      && (tls_mask & (TLS_TPREL | TLS_GDIE)) != 0)\n-    need -= 4;\n-  return need * sizeof (Elf32_External_Rela) / 4;\n-}\n-\n /* If H is undefined, make it dynamic if that makes sense.  */\n \n static bfd_boolean\n@@ -5119,7 +5097,7 @@ allocate_dynrelocs (struct elf_link_hash_entry *h, void *inf)\n       need = 0;\n       if ((eh->tls_mask & (TLS_TLS | TLS_LD)) == (TLS_TLS | TLS_LD))\n \t{\n-\t  if (!eh->elf.def_dynamic)\n+\t  if (SYMBOL_REFERENCES_LOCAL (info, &eh->elf))\n \t    /* We'll just use htab->tlsld_got.offset.  This should\n \t       always be the case.  It's a little odd if we have\n \t       a local dynamic reloc against a non-local symbol.  */\n@@ -5133,20 +5111,19 @@ allocate_dynrelocs (struct elf_link_hash_entry *h, void *inf)\n       else\n \t{\n \t  eh->elf.got.offset = allocate_got (htab, need);\n-\t  if ((bfd_link_pic (info)\n+\t  if (((bfd_link_pic (info)\n+\t\t&& !((eh->tls_mask & TLS_TLS) != 0\n+\t\t     && bfd_link_executable (info)\n+\t\t     && SYMBOL_REFERENCES_LOCAL (info, &eh->elf)))\n \t       || (htab->elf.dynamic_sections_created\n \t\t   && eh->elf.dynindx != -1\n \t\t   && !SYMBOL_REFERENCES_LOCAL (info, &eh->elf)))\n \t      && !UNDEFWEAK_NO_DYNAMIC_RELOC (info, &eh->elf))\n \t    {\n \t      asection *rsec;\n-\t      bfd_boolean tprel_known = (bfd_link_executable (info)\n-\t\t\t\t\t && SYMBOL_REFERENCES_LOCAL (info,\n-\t\t\t\t\t\t\t\t     &eh->elf));\n \n-\t      need = got_relocs_needed (eh->tls_mask, need, tprel_known);\n-\t      if ((eh->tls_mask & (TLS_TLS | TLS_LD)) == (TLS_TLS | TLS_LD)\n-\t\t  && eh->elf.def_dynamic)\n+\t      need *= sizeof (Elf32_External_Rela) / 4;\n+\t      if ((eh->tls_mask & (TLS_TLS | TLS_LD)) == (TLS_TLS | TLS_LD))\n \t\tneed -= sizeof (Elf32_External_Rela);\n \t      rsec = htab->elf.srelgot;\n \t      if (eh->elf.type == STT_GNU_IFUNC)\n@@ -5594,12 +5571,13 @@ ppc_elf_size_dynamic_sections (bfd *output_bfd,\n \t    else\n \t      {\n \t\t*local_got = allocate_got (htab, need);\n-\t\tif (bfd_link_pic (info))\n+\t\tif (bfd_link_pic (info)\n+\t\t    && !((*lgot_masks & TLS_TLS) != 0\n+\t\t\t && bfd_link_executable (info)))\n \t\t  {\n \t\t    asection *srel;\n-\t\t    bfd_boolean tprel_known = bfd_link_executable (info);\n \n-\t\t    need = got_relocs_needed (*lgot_masks, need, tprel_known);\n+\t\t    need *= sizeof (Elf32_External_Rela) / 4;\n \t\t    srel = htab->elf.srelgot;\n \t\t    if ((*lgot_masks & (TLS_TLS | PLT_IFUNC)) == PLT_IFUNC)\n \t\t      srel = htab->elf.irelplt;\n@@ -5676,7 +5654,7 @@ ppc_elf_size_dynamic_sections (bfd *output_bfd,\n   if (htab->tlsld_got.refcount > 0)\n     {\n       htab->tlsld_got.offset = allocate_got (htab, 8);\n-      if (bfd_link_pic (info))\n+      if (bfd_link_dll (info))\n \thtab->elf.srelgot->size += sizeof (Elf32_External_Rela);\n     }\n   else\n@@ -7749,8 +7727,7 @@ ppc_elf_relocate_section (bfd *output_bfd,\n \n \t    indx = 0;\n \t    if (tls_type == (TLS_TLS | TLS_LD)\n-\t\t&& (h == NULL\n-\t\t    || !h->def_dynamic))\n+\t\t&& SYMBOL_REFERENCES_LOCAL (info, h))\n \t      offp = &htab->tlsld_got.offset;\n \t    else if (h != NULL)\n \t      {\n@@ -7792,8 +7769,8 @@ ppc_elf_relocate_section (bfd *output_bfd,\n \n \t\tif (offp == &htab->tlsld_got.offset)\n \t\t  tls_m = TLS_LD;\n-\t\telse if (h == NULL\n-\t\t\t || !h->def_dynamic)\n+\t\telse if ((tls_m & TLS_LD) != 0\n+\t\t\t && SYMBOL_REFERENCES_LOCAL (info, h))\n \t\t  tls_m &= ~TLS_LD;\n \n \t\t/* We might have multiple got entries for this sym.\n@@ -7827,9 +7804,8 @@ ppc_elf_relocate_section (bfd *output_bfd,\n \t\t    if (indx != 0\n \t\t\t|| (bfd_link_pic (info)\n \t\t\t    && (h == NULL\n-\t\t\t\t|| !UNDEFWEAK_NO_DYNAMIC_RELOC (info, h)\n-\t\t\t\t|| offp == &htab->tlsld_got.offset)\n-\t\t\t    && !(tls_ty == (TLS_TLS | TLS_TPREL)\n+\t\t\t\t|| !UNDEFWEAK_NO_DYNAMIC_RELOC (info, h))\n+\t\t\t    && !(tls_ty != 0\n \t\t\t\t && bfd_link_executable (info)\n \t\t\t\t && SYMBOL_REFERENCES_LOCAL (info, h))))\n \t\t      {\n@@ -7939,8 +7915,7 @@ ppc_elf_relocate_section (bfd *output_bfd,\n \t\tif (tls_type != (TLS_TLS | TLS_LD))\n \t\t  {\n \t\t    if ((tls_mask & TLS_LD) != 0\n-\t\t\t&& !(h == NULL\n-\t\t\t     || !h->def_dynamic))\n+\t\t\t&& !SYMBOL_REFERENCES_LOCAL (info, h))\n \t\t      off += 8;\n \t\t    if (tls_type != (TLS_TLS | TLS_GD))\n \t\t      {"
    },
    {
      "sha": "30b07428bed565fc300522df4e65b45b83b78fea",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 13,
      "deletions": 20,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f749f26eea052459c27e21d0d15f5fac060961dc/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f749f26eea052459c27e21d0d15f5fac060961dc/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=f749f26eea052459c27e21d0d15f5fac060961dc",
      "patch": "@@ -4543,8 +4543,6 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t    sec->has_toc_reloc = 1;\n \t}\n \n-      tls_type = 0;\n-      ifunc = NULL;\n       r_type = ELF64_R_TYPE (rel->r_info);\n       switch (r_type)\n \t{\n@@ -4597,6 +4595,7 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t  break;\n \t}\n \n+      ifunc = NULL;\n       if (h != NULL)\n \t{\n \t  if (h->type == STT_GNU_IFUNC)\n@@ -4622,6 +4621,7 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t    }\n \t}\n \n+      tls_type = 0;\n       switch (r_type)\n \t{\n \tcase R_PPC64_TLSGD:\n@@ -7803,11 +7803,9 @@ ppc64_elf_tls_optimize (struct bfd_link_info *info)\n \t\t    value = sym->st_value;\n \n \t\t  ok_tprel = FALSE;\n-\t\t  is_local = FALSE;\n-\t\t  if (h == NULL\n-\t\t      || !h->def_dynamic)\n+\t\t  is_local = SYMBOL_REFERENCES_LOCAL (info, h);\n+\t\t  if (is_local)\n \t\t    {\n-\t\t      is_local = TRUE;\n \t\t      if (h != NULL\n \t\t\t  && h->root.type == bfd_link_hash_undefweak)\n \t\t\tok_tprel = TRUE;\n@@ -9278,7 +9276,7 @@ allocate_got (struct elf_link_hash_entry *h,\n       htab->got_reli_size += rentsize;\n     }\n   else if (((bfd_link_pic (info)\n-\t     && !((gent->tls_type & TLS_TPREL) != 0\n+\t     && !(gent->tls_type != 0\n \t\t  && bfd_link_executable (info)\n \t\t  && SYMBOL_REFERENCES_LOCAL (info, h)))\n \t    || (htab->elf.dynamic_sections_created\n@@ -9384,7 +9382,7 @@ allocate_dynrelocs (struct elf_link_hash_entry *h, void *inf)\n     if (gent->got.refcount > 0)\n       {\n \tif ((gent->tls_type & TLS_LD) != 0\n-\t    && !h->def_dynamic)\n+\t    && SYMBOL_REFERENCES_LOCAL (info, h))\n \t  {\n \t    ppc64_tlsld_got (gent->owner)->got.refcount += 1;\n \t    *pgent = gent->next;\n@@ -9812,9 +9810,7 @@ ppc64_elf_size_dynamic_sections (bfd *output_bfd,\n \t\t\thtab->elf.irelplt->size += rel_size;\n \t\t\thtab->got_reli_size += rel_size;\n \t\t      }\n-\t\t    else if (bfd_link_pic (info)\n-\t\t\t     && !((ent->tls_type & TLS_TPREL) != 0\n-\t\t\t\t  && bfd_link_executable (info)))\n+\t\t    else if (bfd_link_dll (info))\n \t\t      {\n \t\t\tasection *srel = ppc64_elf_tdata (ibfd)->relgot;\n \t\t\tsrel->size += rel_size;\n@@ -9890,7 +9886,7 @@ ppc64_elf_size_dynamic_sections (bfd *output_bfd,\n \t      ent->got.offset = s->size;\n \t      ent->owner = ibfd;\n \t      s->size += 16;\n-\t      if (bfd_link_pic (info))\n+\t      if (bfd_link_dll (info))\n \t\t{\n \t\t  asection *srel = ppc64_elf_tdata (ibfd)->relgot;\n \t\t  srel->size += sizeof (Elf64_External_Rela);\n@@ -12185,7 +12181,7 @@ ppc64_elf_layout_multitoc (struct bfd_link_info *info)\n \t\t  htab->got_reli_size += rel_size;\n \t\t}\n \t      else if (bfd_link_pic (info)\n-\t\t       && !((ent->tls_type & TLS_TPREL) != 0\n+\t\t       && !(ent->tls_type != 0\n \t\t\t    && bfd_link_executable (info)))\n \t\t{\n \t\t  asection *srel = ppc64_elf_tdata (ibfd)->relgot;\n@@ -12211,7 +12207,7 @@ ppc64_elf_layout_multitoc (struct bfd_link_info *info)\n \t  asection *s = ppc64_elf_tdata (ibfd)->got;\n \t  ent->got.offset = s->size;\n \t  s->size += 16;\n-\t  if (bfd_link_pic (info))\n+\t  if (bfd_link_dll (info))\n \t    {\n \t      asection *srel = ppc64_elf_tdata (ibfd)->relgot;\n \t      srel->size += sizeof (Elf64_External_Rela);\n@@ -15611,8 +15607,7 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \t    struct got_entry *ent;\n \n \t    if (tls_type == (TLS_TLS | TLS_LD)\n-\t\t&& (h == NULL\n-\t\t    || !h->elf.def_dynamic))\n+\t\t&& SYMBOL_REFERENCES_LOCAL (info, &h->elf))\n \t      ent = ppc64_tlsld_got (input_bfd);\n \t    else\n \t      {\n@@ -15687,10 +15682,8 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \t\telse if (indx != 0\n \t\t\t || (bfd_link_pic (info)\n \t\t\t     && (h == NULL\n-\t\t\t\t || !UNDEFWEAK_NO_DYNAMIC_RELOC (info, &h->elf)\n-\t\t\t\t || (tls_type == (TLS_TLS | TLS_LD)\n-\t\t\t\t     && !h->elf.def_dynamic))\n-\t\t\t     && !(tls_type == (TLS_TLS | TLS_TPREL)\n+\t\t\t\t || !UNDEFWEAK_NO_DYNAMIC_RELOC (info, &h->elf))\n+\t\t\t     && !(tls_type != 0\n \t\t\t\t  && bfd_link_executable (info)\n \t\t\t\t  && SYMBOL_REFERENCES_LOCAL (info, &h->elf))))\n \t\t  relgot = ppc64_elf_tdata (ent->owner)->relgot;"
    },
    {
      "sha": "fd6ea67f23f53466d1d9196b8fc1edb2e9724747",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f749f26eea052459c27e21d0d15f5fac060961dc/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f749f26eea052459c27e21d0d15f5fac060961dc/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=f749f26eea052459c27e21d0d15f5fac060961dc",
      "patch": "@@ -1,3 +1,12 @@\n+2019-10-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/ld-powerpc/tlsso.d: Adjust to suit tlsld_got usage change.\n+\t* testsuite/ld-powerpc/tlsso.g: Likewise.\n+\t* testsuite/ld-powerpc/tlsso.r: Likewise.\n+\t* testsuite/ld-powerpc/tlsso32.d: Likewise.\n+\t* testsuite/ld-powerpc/tlsso32.g: Likewise.\n+\t* testsuite/ld-powerpc/tlsso32.r: Likewise.\n+\n 2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \tPR ld/25062"
    },
    {
      "sha": "4ef1f25a71dd80c7f23f87954d32d66eed56ac69",
      "filename": "ld/testsuite/ld-powerpc/tlsso.d",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f749f26eea052459c27e21d0d15f5fac060961dc/ld/testsuite/ld-powerpc/tlsso.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f749f26eea052459c27e21d0d15f5fac060961dc/ld/testsuite/ld-powerpc/tlsso.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsso.d?ref=f749f26eea052459c27e21d0d15f5fac060961dc",
      "patch": "@@ -10,9 +10,9 @@ Disassembly of section \\.text:\n \n .* <.*plt_call\\.__tls_get_addr(|_opt)>:\n .*\t(f8 41 00 28|28 00 41 f8) \tstd     r2,40\\(r1\\)\n-.*\t(e9 82 80 78|78 80 82 e9) \tld      r12,-32648\\(r2\\)\n+.*\t(e9 82 80 98|98 80 82 e9) \tld      r12,-32616\\(r2\\)\n .*\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n-.*\t(e8 42 80 80|80 80 42 e8) \tld      r2,-32640\\(r2\\)\n+.*\t(e8 42 80 a0|a0 80 42 e8) \tld      r2,-32608\\(r2\\)\n .*\t(28 22 00 00|00 00 22 28) \tcmpldi  r2,0\n .*\t(4c e2 04 20|20 04 e2 4c) \tbnectr\\+ *\n .*\t(48 00 00 ..|.. 00 00 48) \tb       .* <__tls_get_addr@plt>\n@@ -21,37 +21,37 @@ Disassembly of section \\.text:\n .*\t(38 62 80 20|20 80 62 38) \taddi    r3,r2,-32736\n .*\t(4b ff ff ..|.. ff ff 4b) \tbl      .*plt_call.__tls_get_addr.*\n .*\t(e8 41 00 28|28 00 41 e8) \tld      r2,40\\(r1\\)\n-.*\t(38 62 80 50|50 80 62 38) \taddi    r3,r2,-32688\n+.*\t(38 62 80 40|40 80 62 38) \taddi    r3,r2,-32704\n .*\t(4b ff ff ..|.. ff ff 4b) \tbl      .*plt_call.__tls_get_addr.*\n .*\t(e8 41 00 28|28 00 41 e8) \tld      r2,40\\(r1\\)\n-.*\t(38 62 80 38|38 80 62 38) \taddi    r3,r2,-32712\n+.*\t(38 62 80 58|58 80 62 38) \taddi    r3,r2,-32680\n .*\t(4b ff ff ..|.. ff ff 4b) \tbl      .*plt_call.__tls_get_addr.*\n .*\t(e8 41 00 28|28 00 41 e8) \tld      r2,40\\(r1\\)\n-.*\t(38 62 80 50|50 80 62 38) \taddi    r3,r2,-32688\n+.*\t(38 62 80 30|30 80 62 38) \taddi    r3,r2,-32720\n .*\t(4b ff ff ..|.. ff ff 4b) \tbl      .*plt_call.__tls_get_addr.*\n .*\t(e8 41 00 28|28 00 41 e8) \tld      r2,40\\(r1\\)\n .*\t(39 23 80 40|40 80 23 39) \taddi    r9,r3,-32704\n .*\t(3d 23 00 00|00 00 23 3d) \taddis   r9,r3,0\n .*\t(81 49 80 48|48 80 49 81) \tlwz     r10,-32696\\(r9\\)\n-.*\t(e9 22 80 30|30 80 22 e9) \tld      r9,-32720\\(r2\\)\n+.*\t(e9 22 80 50|50 80 22 e9) \tld      r9,-32688\\(r2\\)\n .*\t(7d 49 18 2a|2a 18 49 7d) \tldx     r10,r9,r3\n-.*\t(e9 22 80 48|48 80 22 e9) \tld      r9,-32696\\(r2\\)\n+.*\t(e9 22 80 68|68 80 22 e9) \tld      r9,-32664\\(r2\\)\n .*\t(7d 49 6a 2e|2e 6a 49 7d) \tlhzx    r10,r9,r13\n .*\t(89 4d 00 00|00 00 4d 89) \tlbz     r10,0\\(r13\\)\n .*\t(3d 2d 00 00|00 00 2d 3d) \taddis   r9,r13,0\n .*\t(99 49 00 00|00 00 49 99) \tstb     r10,0\\(r9\\)\n .*\t(38 62 80 08|08 80 62 38) \taddi    r3,r2,-32760\n .*\t(4b ff ff ..|.. ff ff 4b) \tbl      .*plt_call.__tls_get_addr.*\n .*\t(e8 41 00 28|28 00 41 e8) \tld      r2,40\\(r1\\)\n-.*\t(38 62 80 50|50 80 62 38) \taddi    r3,r2,-32688\n+.*\t(38 62 80 70|70 80 62 38) \taddi    r3,r2,-32656\n .*\t(4b ff ff ..|.. ff ff 4b) \tbl      .*plt_call.__tls_get_addr.*\n .*\t(e8 41 00 28|28 00 41 e8) \tld      r2,40\\(r1\\)\n .*\t(f9 43 80 08|08 80 43 f9) \tstd     r10,-32760\\(r3\\)\n .*\t(3d 23 00 00|00 00 23 3d) \taddis   r9,r3,0\n .*\t(91 49 80 10|10 80 49 91) \tstw     r10,-32752\\(r9\\)\n .*\t(e9 22 80 18|18 80 22 e9) \tld      r9,-32744\\(r2\\)\n .*\t(7d 49 19 2a|2a 19 49 7d) \tstdx    r10,r9,r3\n-.*\t(e9 22 80 48|48 80 22 e9) \tld      r9,-32696\\(r2\\)\n+.*\t(e9 22 80 68|68 80 22 e9) \tld      r9,-32664\\(r2\\)\n .*\t(7d 49 6b 2e|2e 6b 49 7d) \tsthx    r10,r9,r13\n .*\t(e9 4d 00 02|02 00 4d e9) \tlwa     r10,0\\(r13\\)\n .*\t(3d 2d 00 00|00 00 2d 3d) \taddis   r9,r13,0"
    },
    {
      "sha": "a263957f63fe48f74b235678443a74d1a802202a",
      "filename": "ld/testsuite/ld-powerpc/tlsso.g",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f749f26eea052459c27e21d0d15f5fac060961dc/ld/testsuite/ld-powerpc/tlsso.g",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f749f26eea052459c27e21d0d15f5fac060961dc/ld/testsuite/ld-powerpc/tlsso.g",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsso.g?ref=f749f26eea052459c27e21d0d15f5fac060961dc",
      "patch": "@@ -13,3 +13,5 @@ Contents of section \\.got:\n .* 00000000 00000000 00000000 00000000  .*\n .* 00000000 00000000 00000000 00000000  .*\n .* 00000000 00000000 00000000 00000000  .*\n+.* 00000000 00000000 00000000 00000000  .*\n+.* 00000000 00000000 00000000 00000000  .*"
    },
    {
      "sha": "94b8c3ccdfa119f66fbe367771a7cf33de1ecaea",
      "filename": "ld/testsuite/ld-powerpc/tlsso.r",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f749f26eea052459c27e21d0d15f5fac060961dc/ld/testsuite/ld-powerpc/tlsso.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f749f26eea052459c27e21d0d15f5fac060961dc/ld/testsuite/ld-powerpc/tlsso.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsso.r?ref=f749f26eea052459c27e21d0d15f5fac060961dc",
      "patch": "@@ -44,9 +44,9 @@ Program Headers:\n  +02 +\\.dynamic *\n  +03 +\\.tdata \\.tbss *\n \n-Relocation section '\\.rela\\.dyn' at offset .* contains 18 entries:\n+Relocation section '\\.rela\\.dyn' at offset .* contains 20 entries:\n  +Offset +Info +Type +Symbol's Value +Symbol's Name \\+ Addend\n-[0-9a-f ]+R_PPC64_RELATIVE +4fc\n+[0-9a-f ]+R_PPC64_RELATIVE +51c\n [0-9a-f ]+R_PPC64_RELATIVE +18800\n [0-9a-f ]+R_PPC64_TPREL16 +0+60 le0 \\+ 0\n [0-9a-f ]+R_PPC64_TPREL16_HA +0+68 le1 \\+ 0\n@@ -60,6 +60,8 @@ Relocation section '\\.rela\\.dyn' at offset .* contains 18 entries:\n [0-9a-f ]+R_PPC64_DTPMOD64 +0\n [0-9a-f ]+R_PPC64_DTPMOD64 +0+ gd \\+ 0\n [0-9a-f ]+R_PPC64_DTPREL64 +0+ gd \\+ 0\n+[0-9a-f ]+R_PPC64_DTPMOD64 +0+40 ld0 \\+ 0\n+[0-9a-f ]+R_PPC64_DTPMOD64 +0+ ld \\+ 0\n [0-9a-f ]+R_PPC64_DTPREL64 +0+50 ld2 \\+ 0\n [0-9a-f ]+R_PPC64_DTPMOD64 +0+38 gd0 \\+ 0\n [0-9a-f ]+R_PPC64_DTPREL64 +0+38 gd0 \\+ 0"
    },
    {
      "sha": "c9a25d34829c0106ca824be9652bb90b27900f02",
      "filename": "ld/testsuite/ld-powerpc/tlsso32.d",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f749f26eea052459c27e21d0d15f5fac060961dc/ld/testsuite/ld-powerpc/tlsso32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f749f26eea052459c27e21d0d15f5fac060961dc/ld/testsuite/ld-powerpc/tlsso32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsso32.d?ref=f749f26eea052459c27e21d0d15f5fac060961dc",
      "patch": "@@ -13,13 +13,13 @@ Disassembly of section \\.text:\n .*:\t(7f c8 02 a6|a6 02 c8 7f) \tmflr    r30\n .*:\t(3f de 00 02|02 00 de 3f) \taddis   r30,r30,2\n .*:\t(3b de 80 e8|e8 80 de 3b) \taddi    r30,r30,-32536\n-.*:\t(38 7f ff e4|e4 ff 7f 38) \taddi    r3,r31,-28\n+.*:\t(38 7f ff d4|d4 ff 7f 38) \taddi    r3,r31,-44\n .*:\t(48 00 00 01|01 00 00 48) \tbl      .*\n-.*:\t(38 7f ff f8|f8 ff 7f 38) \taddi    r3,r31,-8\n+.*:\t(38 7f ff e4|e4 ff 7f 38) \taddi    r3,r31,-28\n .*:\t(48 00 00 01|01 00 00 48) \tbl      .*\n .*:\t(38 7f ff ec|ec ff 7f 38) \taddi    r3,r31,-20\n .*:\t(48 00 00 5d|5d 00 00 48) \tbl      .*<0+8000\\.got2\\.plt_pic32\\.__tls_get_addr>\n-.*:\t(38 7f ff f8|f8 ff 7f 38) \taddi    r3,r31,-8\n+.*:\t(38 7f ff dc|dc ff 7f 38) \taddi    r3,r31,-36\n .*:\t(48 00 00 55|55 00 00 48) \tbl      .*<0+8000\\.got2\\.plt_pic32\\.__tls_get_addr>\n .*:\t(39 23 80 20|20 80 23 39) \taddi    r9,r3,-32736\n .*:\t(3d 23 00 00|00 00 23 3d) \taddis   r9,r3,0\n@@ -29,7 +29,7 @@ Disassembly of section \\.text:\n .*:\t(89 42 00 00|00 00 42 89) \tlbz     r10,0\\(r2\\)\n .*:\t(3d 22 00 00|00 00 22 3d) \taddis   r9,r2,0\n .*:\t(99 49 00 00|00 00 49 99) \tstb     r10,0\\(r9\\)\n-.*:\t(38 7e ff dc|dc ff 7e 38) \taddi    r3,r30,-36\n+.*:\t(38 7e ff cc|cc ff 7e 38) \taddi    r3,r30,-52\n .*:\t(48 00 00 01|01 00 00 48) \tbl      .*\n .*:\t(38 7e ff f8|f8 ff 7e 38) \taddi    r3,r30,-8\n .*:\t(48 00 00 01|01 00 00 48) \tbl      .*\n@@ -43,7 +43,7 @@ Disassembly of section \\.text:\n .*:\t(a9 49 00 00|00 00 49 a9) \tlha     r10,0\\(r9\\)\n \n .* <00008000.got2.plt_pic32.__tls_get_addr>:\n-.*:\t(81 7e 80 d8|d8 80 7e 81) \tlwz     r11,-32552\\(r30\\)\n+.*:\t(81 7e 80 e8|e8 80 7e 81) \tlwz     r11,-32536\\(r30\\)\n .*:\t(7d 69 03 a6|a6 03 69 7d) \tmtctr   r11\n .*:\t(4e 80 04 20|20 04 80 4e) \tbctr\n .*:\t(60 00 00 00|00 00 00 60) \tnop\n@@ -57,8 +57,8 @@ Disassembly of section \\.text:\n .*:\t(7c 08 03 a6|a6 03 08 7c) \tmtlr    r0\n .*:\t(7d 6c 58 50|50 58 6c 7d) \tsubf    r11,r12,r11\n .*:\t(3d 8c 00 01|01 00 8c 3d) \taddis   r12,r12,1\n-.*:\t(80 0c 01 20|20 01 0c 80) \tlwz     r0,288\\(r12\\)\n-.*:\t(81 8c 01 24|24 01 8c 81) \tlwz     r12,292\\(r12\\)\n+.*:\t(80 0c 01 30|30 01 0c 80) \tlwz     r0,304\\(r12\\)\n+.*:\t(81 8c 01 34|34 01 8c 81) \tlwz     r12,308\\(r12\\)\n .*:\t(7c 09 03 a6|a6 03 09 7c) \tmtctr   r0\n .*:\t(7c 0b 5a 14|14 5a 0b 7c) \tadd     r0,r11,r11\n .*:\t(7d 60 5a 14|14 5a 60 7d) \tadd     r11,r0,r11"
    },
    {
      "sha": "bbeff7de8a798147d5748872f1c0097408c58028",
      "filename": "ld/testsuite/ld-powerpc/tlsso32.g",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f749f26eea052459c27e21d0d15f5fac060961dc/ld/testsuite/ld-powerpc/tlsso32.g",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f749f26eea052459c27e21d0d15f5fac060961dc/ld/testsuite/ld-powerpc/tlsso32.g",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsso32.g?ref=f749f26eea052459c27e21d0d15f5fac060961dc",
      "patch": "@@ -9,4 +9,5 @@\n Contents of section \\.got:\n .* 00000000 00000000 00000000 00000000  .*\n .* 00000000 00000000 00000000 00000000  .*\n-.* 00000000 (000103dc|dc030100) 00000000 00000000  .*\n+.* 00000000 00000000 00000000 00000000  .*\n+.* 00000000 (000103fc|fc030100) 00000000 00000000  .*"
    },
    {
      "sha": "08fe4661f32ae5ff66054d8b9248734cc378d0d0",
      "filename": "ld/testsuite/ld-powerpc/tlsso32.r",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f749f26eea052459c27e21d0d15f5fac060961dc/ld/testsuite/ld-powerpc/tlsso32.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f749f26eea052459c27e21d0d15f5fac060961dc/ld/testsuite/ld-powerpc/tlsso32.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsso32.r?ref=f749f26eea052459c27e21d0d15f5fac060961dc",
      "patch": "@@ -18,7 +18,7 @@ Section Headers:\n  +\\[[ 0-9]+\\] \\.tdata +PROGBITS .* 0+1c 0+ WAT +0 +0 +4\n  +\\[[ 0-9]+\\] \\.tbss +NOBITS .* 0+1c 0+ WAT +0 +0 +4\n  +\\[[ 0-9]+\\] \\.dynamic +DYNAMIC .* 08 +WA +3 +0 +4\n- +\\[[ 0-9]+\\] \\.got +PROGBITS .* 0+30 04 +WA +0 +0 +4\n+ +\\[[ 0-9]+\\] \\.got +PROGBITS .* 0+40 04 +WA +0 +0 +4\n  +\\[[ 0-9]+\\] \\.plt +PROGBITS .* 0+4 00 +WA +0 +0 +4\n  +\\[[ 0-9]+\\] \\.symtab +.*\n  +\\[[ 0-9]+\\] \\.strtab +.*\n@@ -43,7 +43,7 @@ Program Headers:\n  +02 +\\.dynamic \n  +03 +\\.tdata \\.tbss \n \n-Relocation section '\\.rela\\.dyn' at offset 0x[0-9a-f]+ contains 18 entries:\n+Relocation section '\\.rela\\.dyn' at offset 0x[0-9a-f]+ contains 20 entries:\n  Offset +Info +Type +Sym\\. Value +Symbol's Name \\+ Addend\n [0-9a-f ]+R_PPC_REL24 +0+ +__tls_get_addr \\+ 0\n [0-9a-f ]+R_PPC_REL24 +0+ +__tls_get_addr \\+ 0\n@@ -60,6 +60,8 @@ Relocation section '\\.rela\\.dyn' at offset 0x[0-9a-f]+ contains 18 entries:\n [0-9a-f ]+R_PPC_DTPMOD32 +0\n [0-9a-f ]+R_PPC_DTPMOD32 +0+ +gd \\+ 0\n [0-9a-f ]+R_PPC_DTPREL32 +0+ +gd \\+ 0\n+[0-9a-f ]+R_PPC_DTPMOD32 +0+20 +ld0 \\+ 0\n+[0-9a-f ]+R_PPC_DTPMOD32 +0+ +ld \\+ 0\n [0-9a-f ]+R_PPC_DTPMOD32 +0+1c +gd0 \\+ 0\n [0-9a-f ]+R_PPC_DTPREL32 +0+1c +gd0 \\+ 0\n [0-9a-f ]+R_PPC_TPREL32 +0+2c +ie0 \\+ 0"
    }
  ]
}