{
  "sha": "456ba0fa36d17648a6cf32d1561c8c5802103153",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDU2YmEwZmEzNmQxNzY0OGE2Y2YzMmQxNTYxYzhjNTgwMjEwMzE1Mw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-05-07T08:38:36Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-05-07T08:38:36Z"
    },
    "message": "[gdb/testsuite] Fix handling of DW_FORM_ref_addr in dwarf assembler\n\nWhen running gdb.dwarf2/multidictionary.exp with target board cc-with-dwz and\ncurrent dwz, we run into a dwz abort:\n...\ngdb compile failed, gdb/contrib/cc-with-tweaks.sh: line 188: 11484 Aborted \\\n  (core dumped) $DWZ \"$output_file\" > /dev/null 2>&1\nUNTESTED: gdb.dwarf2/multidictionary.exp: multidictionary.exp\n...\nThe dwz abort (PR dwz/24169) is caused by an invalid DW_FORM_ref_addr in the\nmultidictionary binary.\n\nThe multidictionary binary is build from multidictionary.S which is generated\nusing the dwarf assembler, and multidictionary.S contains dwarf for 3\ncompilation units.\n\nIn multidictionary0.o (generated from multidictionary.S), we find a concrete\nformal parameter DIE:\n...\n <2><dc>: Abbrev Number: 4 (DW_TAG_formal_parameter)\n    <dd>   DW_AT_abstract_origin: <0xa6>\n...\nreferring to an abstract formal parameter DIE at 0xa6:\n...\n <2><a6>: Abbrev Number: 8 (DW_TAG_formal_parameter)\n    <a7>   DW_AT_name        : msg\n    <ab>   DW_AT_type        : <0x92>\n...\nbut in the multidictionary binary the concrete formal parameter DIE is still\nreferring to 0xa6:\n...\n <2><1a3>: Abbrev Number: 4 (DW_TAG_formal_parameter)\n    <1a4>   DW_AT_abstract_origin: <0xa6>\n...\nwhile the abstract formal parameter DIE has moved to 0x16d:\n...\n <2><16d>: Abbrev Number: 8 (DW_TAG_formal_parameter)\n    <16e>   DW_AT_name        : msg\n    <172>   DW_AT_type        : <0x159>\n...\n\nThe concrete formal parameter DIE is specified in multidictionary.S like this:\n...\n.Llabel21:\n        .uleb128        4\n        .4byte        .Llabel17 - .Lcu1_begin\n...\n\nThe problem is that the .Lcu1_begin label is assumed to mark the start of the\n.debug_info section in the executable, but in fact it marks the start of the\nfirst compilation unit from multidictionary.S in the executable.  Usually\nthese two entities are the same, but they are not when linked in object files\ncontain dwarf info and are placed in the .debug_info section before the\ncompilation units generated from multidictionary.S.\n\nFix this in the dwarf assembler by generating instead the label itself:\n...\n.Llabel21:\n        .uleb128        4\n        .4byte        .Llabel17\n...\nresulting in a relocation in the object file:\n...\n  Offset          Info           Type           Sym. Value    Sym. Name + Addend\n0000000000dd  00040000000a R_X86_64_32       0000000000000000 .debug_info + a6\n...\nand resulting in the correct offset in the executable:\n...\n <2><1a3>: Abbrev Number: 4 (DW_TAG_formal_parameter)\n    <1a4>   DW_AT_abstract_origin: <0x16d>\n...\n\nTested on x86_64-linux with native and cc-with-dwz.\n\ngdb/testsuite/ChangeLog:\n\n2019-05-07  Tom de Vries  <tdevries@suse.de>\n\n\tPR testsuite/24159\n\t* lib/dwarf.exp: Fix handling of DW_FORM_ref_addr.",
    "tree": {
      "sha": "42f045d79658af0a17e85d48bad4b058c1cb13d2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/42f045d79658af0a17e85d48bad4b058c1cb13d2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/456ba0fa36d17648a6cf32d1561c8c5802103153",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/456ba0fa36d17648a6cf32d1561c8c5802103153",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/456ba0fa36d17648a6cf32d1561c8c5802103153",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/456ba0fa36d17648a6cf32d1561c8c5802103153/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0f1309c8f7530b31ecc73c55e86572ff72256947",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f1309c8f7530b31ecc73c55e86572ff72256947",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0f1309c8f7530b31ecc73c55e86572ff72256947"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 7,
    "deletions": 4
  },
  "files": [
    {
      "sha": "e2b507574a5980004af43544ee157bac9ac46e78",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/456ba0fa36d17648a6cf32d1561c8c5802103153/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/456ba0fa36d17648a6cf32d1561c8c5802103153/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=456ba0fa36d17648a6cf32d1561c8c5802103153",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-07  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR testsuite/24159\n+\t* lib/dwarf.exp: Fix handling of DW_FORM_ref_addr.\n+\n 2019-05-06  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/gdb.exp (exec_has_index_section): New proc."
    },
    {
      "sha": "75d19abf8025c3edcbed4c72a0ec1dc2d59e16a3",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/456ba0fa36d17648a6cf32d1561c8c5802103153/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/456ba0fa36d17648a6cf32d1561c8c5802103153/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=456ba0fa36d17648a6cf32d1561c8c5802103153",
      "patch": "@@ -567,10 +567,8 @@ namespace eval Dwarf {\n \t    }\n \n \t    % {\n-\t\t# Label reference, an offset from .debug_info.  Assuming\n-\t\t# .Lcu1_begin is on .debug_info.\n-\t\tset cu1_label [_compute_label \"cu1_begin\"]\n-\t\tset new_value \"[string range $value 1 end] - $cu1_label\"\n+\t\t# Label reference, an offset from .debug_info.\n+\t\tset new_value \"[string range $value 1 end]\"\n \n \t\treturn DW_FORM_ref_addr\n \t    }"
    }
  ]
}