{
  "sha": "d8edc8b768f0f611088161161392e1075134d635",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDhlZGM4Yjc2OGYwZjYxMTA4ODE2MTE2MTM5MmUxMDc1MTM0ZDYzNQ==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-08-07T18:50:54Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-12-11T03:31:05Z"
    },
    "message": "Implement 'print -raw-values' and 'set print raw-values on|off'\n\nThe option framework documentation was speaking about a 'print -raw'\noption, but this option does not exist.\n\nThis patch implements -raw-values option that tells to ignore the\nactive pretty printers when printing a value.\nAs we already have -raw-frame-arguments, I thought -raw-values\nwas more clear, in particular to differentiate\n   set print raw-values and set print raw-frame-arguments.\n\ngdb/doc/ChangeLog\n2019-12-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* gdb.texinfo (Command Options): Use -p and -pretty in the example,\n\tas -r is ambiguous.  Update the print - TAB TAB completion result.\n\t(Data): Document new option -raw-values.  Use -p and -pretty in the\n\t example, as -r is ambiguous.\n\t(Print Settings): Document set print raw values.\n\t(Pretty-Printer Commands): Document interaction between enabled\n\tpretty printers and -raw-values/-raw-frame-arguments.\n\ngdb/ChangeLog\n2019-12-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* NEWS: Document -raw-values option and the related setting commands.\n\t* printcmd.c (print_command_parse_format): Do not set opts->raw off,\n\tonly set it on when /r is given.\n\t* valprint.c (value_print_option_defs): New element raw-values.\n\t* Makefile.in: Add the new file.\n\ngdb/testsuite/ChangeLog\n2019-12-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* gdb.base/options.exp: Add -raw-values in the print completion list.\n\t* gdb.python/py-prettyprint.exp: Add tests for -raw-values.",
    "tree": {
      "sha": "37f073313f2bf23e8dcbddbd19c815e7b3a0fba6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/37f073313f2bf23e8dcbddbd19c815e7b3a0fba6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d8edc8b768f0f611088161161392e1075134d635",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d8edc8b768f0f611088161161392e1075134d635",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d8edc8b768f0f611088161161392e1075134d635",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d8edc8b768f0f611088161161392e1075134d635/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "5afa80e9a8e6585eeaac44ca51be9c6b2471bf80",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5afa80e9a8e6585eeaac44ca51be9c6b2471bf80",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5afa80e9a8e6585eeaac44ca51be9c6b2471bf80"
    }
  ],
  "stats": {
    "total": 124,
    "additions": 110,
    "deletions": 14
  },
  "files": [
    {
      "sha": "d32e7555178edbaf0f85096cb93cc503f8260c01",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8edc8b768f0f611088161161392e1075134d635/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8edc8b768f0f611088161161392e1075134d635/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d8edc8b768f0f611088161161392e1075134d635",
      "patch": "@@ -1,3 +1,11 @@\n+2019-12-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* NEWS: Document -raw-values option and the related setting commands.\n+\t* printcmd.c (print_command_parse_format): Do not set opts->raw off,\n+\tonly set it on when /r is given.\n+\t* valprint.c (value_print_option_defs): New element raw-values.\n+\t* Makefile.in: Add the new file.\n+\n 2019-12-10  Christian Biesinger  <cbiesinger@google.com>\n \n \t* gdbsupport/safe-strerror.c: Supress the unused function warning"
    },
    {
      "sha": "3c378df6e6b6a9e88f6be83699a97fe16349cb29",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8edc8b768f0f611088161161392e1075134d635/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8edc8b768f0f611088161161392e1075134d635/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=d8edc8b768f0f611088161161392e1075134d635",
      "patch": "@@ -148,6 +148,12 @@ show print max-depth\n   The default max-depth is 20, but this can be set to unlimited to get\n   the old behavior back.\n \n+set print raw-values [on|off]\n+show print raw-values\n+  By default, GDB applies the enabled pretty printers when printing a\n+  value.  This allows to ignore the enabled pretty printers for a series\n+  of commands.  The default is 'off'.\n+\n set logging debugredirect [on|off]\n   By default, GDB debug output will go to both the terminal and the logfile.\n   Set if you want debug output to go only to the log file.\n@@ -303,6 +309,7 @@ focus, winheight, +, -, >, <\n       -null-stop [on|off]\n       -object [on|off]\n       -pretty [on|off]\n+      -raw-values [on|off]\n       -repeats NUMBER|unlimited\n       -static-members [on|off]\n       -symbol [on|off]\n@@ -347,11 +354,11 @@ focus, winheight, +, -, >, <\n    \"on\" if omitted.  This allows writing compact command invocations,\n    like for example:\n \n-    (gdb) p -r -p -o 0 -- *myptr\n+    (gdb) p -ra -p -o 0 -- *myptr\n \n    The above is equivalent to:\n \n-    (gdb) print -raw -pretty -object off -- *myptr\n+    (gdb) print -raw-values -pretty -object off -- *myptr\n \n   ** The \"info types\" command now supports the '-q' flag to disable\n      printing of some header information in a similar fashion to \"info"
    },
    {
      "sha": "6db33e1781f7b9f719493824d0d281fb7aa58692",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8edc8b768f0f611088161161392e1075134d635/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8edc8b768f0f611088161161392e1075134d635/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=d8edc8b768f0f611088161161392e1075134d635",
      "patch": "@@ -1,3 +1,13 @@\n+2019-12-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* gdb.texinfo (Command Options): Use -p and -pretty in the example,\n+\tas -r is ambiguous.  Update the print - TAB TAB completion result.\n+\t(Data): Document new option -raw-values.  Use -p and -pretty in the\n+\t example, as -r is ambiguous.\n+\t(Print Settings): Document set print raw values.\n+\t(Pretty-Printer Commands): Document interaction between enabled\n+\tpretty printers and -raw-values/-raw-frame-arguments.\n+\n 2019-12-10  Tom Tromey  <tom@tromey.com>\n \n \t* python.texi (gdb.prompt): Use correct quotes in example."
    },
    {
      "sha": "a4e2c4ff128e6c416488709925b2c93b0a29651e",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 42,
      "deletions": 10,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8edc8b768f0f611088161161392e1075134d635/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8edc8b768f0f611088161161392e1075134d635/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=d8edc8b768f0f611088161161392e1075134d635",
      "patch": "@@ -1949,8 +1949,8 @@ Some commands take raw input as argument.  For example, the print\n command processes arbitrary expressions in any of the languages\n supported by @value{GDBN}.  With such commands, because raw input may\n start with a leading dash that would be confused with an option or any\n-of its abbreviations, e.g.@: @code{print -r} (short for @code{print\n--raw} or printing negative @code{r}?), if you specify any command\n+of its abbreviations, e.g.@: @code{print -p} (short for @code{print\n+-pretty} or printing negative @code{p}?), if you specify any command\n option, then you must use a double-dash (@code{--}) delimiter to\n indicate the end of options.\n \n@@ -1976,10 +1976,10 @@ on @code{-} after the command name.  For example:\n \n @smallexample\n (@value{GDBP}) print -@key{TAB}@key{TAB}\n--address         -max-depth       -repeats         -vtbl\n--array           -null-stop       -static-members\n--array-indexes   -object          -symbol\n--elements        -pretty          -union\n+-address         -max-depth       -raw-values      -union\n+-array           -null-stop       -repeats         -vtbl\n+-array-indexes   -object          -static-members\n+-elements        -pretty          -symbol\n @end smallexample\n \n Completion will in some cases guide you with a suggestion of what kind\n@@ -9646,6 +9646,11 @@ Set printing C@t{++} virtual function tables.  Related setting:\n Set pretty formatting of structures.  Related setting: @ref{set print\n pretty}.\n \n+@item -raw-values [@code{on}|@code{off}]\n+Set whether to print values in raw form, bypassing any\n+pretty-printers for that value.  Related setting: @ref{set print\n+raw-values}.\n+\n @item -repeats @var{number-of-repeats}|@code{unlimited}\n Set threshold for repeated print elements.  @code{unlimited} causes\n all elements to be individually printed.  Related setting: @ref{set\n@@ -9673,17 +9678,17 @@ may look like options (including abbreviations), if you specify any\n command option, then you must use a double dash (@code{--}) to mark\n the end of option processing.\n \n-For example, this prints the value of the @code{-r} expression:\n+For example, this prints the value of the @code{-p} expression:\n \n @smallexample\n-(@value{GDBP}) print -r\n+(@value{GDBP}) print -p\n @end smallexample\n \n While this repeats the last value in the value history (see below)\n-with the @code{-raw} option in effect:\n+with the @code{-pretty} option in effect:\n \n @smallexample\n-(@value{GDBP}) print -r --\n+(@value{GDBP}) print -p --\n @end smallexample\n \n Here is an example including both on option and an expression:\n@@ -11274,6 +11279,21 @@ This is the default format.\n @item show print pretty\n Show which format @value{GDBN} is using to print structures.\n \n+@anchor{set print raw-values}\n+@item set print raw-values on\n+Print values in raw form, without applying the pretty\n+printers for the value.\n+\n+@item set print raw-values off\n+Print values in pretty-printed form, if there is a pretty-printer\n+for the value (@pxref{Pretty Printing}),\n+otherwise print the value in raw form.\n+\n+The default setting is ``off''.\n+\n+@item show print raw-values\n+Show whether to print values in raw form.\n+\n @item set print sevenbit-strings on\n @cindex eight-bit characters in strings\n @cindex octal escapes in strings\n@@ -11613,6 +11633,18 @@ library2.so:\n Note that for @code{bar} the entire printer can be disabled,\n as can each individual subprinter.\n \n+Printing values and frame arguments is done by default using\n+the enabled pretty printers.\n+\n+The print option @code{-raw-values} and @value{GDBN} setting\n+@code{set print raw-values} (@pxref{set print raw-values}) can be\n+used to print values without applying the enabled pretty printers.\n+\n+Similarly, the backtrace option @code{-raw-frame-arguments} and\n+@value{GDBN} setting @code{set print raw-frame-arguments}\n+(@pxref{set print raw-frame-arguments}) can be used to ignore the\n+enabled pretty printers when printing frame argument values.\n+\n @node Value History\n @section Value History\n "
    },
    {
      "sha": "480e7f22390e54c3295442f336297a6f1259b984",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8edc8b768f0f611088161161392e1075134d635/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8edc8b768f0f611088161161392e1075134d635/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=d8edc8b768f0f611088161161392e1075134d635",
      "patch": "@@ -1152,6 +1152,9 @@ print_command_parse_format (const char **expp, const char *cmdname,\n {\n   const char *exp = *expp;\n \n+  /* opts->raw value might already have been set by 'set print raw-values'\n+     or by using 'print -raw-values'.\n+     So, do not set opts->raw to 0, only set it to 1 if /r is given.  */\n   if (exp && *exp == '/')\n     {\n       format_data fmt;\n@@ -1162,12 +1165,11 @@ print_command_parse_format (const char **expp, const char *cmdname,\n       last_format = fmt.format;\n \n       opts->format = fmt.format;\n-      opts->raw = fmt.raw;\n+      opts->raw = opts->raw || fmt.raw;\n     }\n   else\n     {\n       opts->format = 0;\n-      opts->raw = 0;\n     }\n \n   *expp = exp;"
    },
    {
      "sha": "17d499388856424370b3ec7618d122cf027f5b82",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8edc8b768f0f611088161161392e1075134d635/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8edc8b768f0f611088161161392e1075134d635/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=d8edc8b768f0f611088161161392e1075134d635",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* gdb.base/options.exp: Add -raw-values in the print completion list.\n+\t* gdb.python/py-prettyprint.exp: Add tests for -raw-values.\n+\n 2019-12-10  Kevin Buettner  <kevinb@redhat.com>\n \n \t* gdb.threads/omp-par-scope.c: New file."
    },
    {
      "sha": "78ddc26577606cf25a891958b665ad0dd2f2495c",
      "filename": "gdb/testsuite/gdb.base/options.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8edc8b768f0f611088161161392e1075134d635/gdb/testsuite/gdb.base/options.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8edc8b768f0f611088161161392e1075134d635/gdb/testsuite/gdb.base/options.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/options.exp?ref=d8edc8b768f0f611088161161392e1075134d635",
      "patch": "@@ -168,6 +168,7 @@ proc_with_prefix test-print {{prefix \"\"}} {\n \t\"-null-stop\"\n \t\"-object\"\n \t\"-pretty\"\n+\t\"-raw-values\"\n \t\"-repeats\"\n \t\"-static-members\"\n \t\"-symbol\""
    },
    {
      "sha": "e9ad5616ee8cbfe935bebe9e81e268a560ef29b1",
      "filename": "gdb/testsuite/gdb.python/py-prettyprint.exp",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8edc8b768f0f611088161161392e1075134d635/gdb/testsuite/gdb.python/py-prettyprint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8edc8b768f0f611088161161392e1075134d635/gdb/testsuite/gdb.python/py-prettyprint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-prettyprint.exp?ref=d8edc8b768f0f611088161161392e1075134d635",
      "patch": "@@ -199,3 +199,24 @@ gdb_test_no_output \"python enable_lookup_function ()\"\n \n gdb_test \"print ss\" \" = a=< a=<1> b=<$hex>> b=< a=<2> b=<$hex>>\" \\\n     \"print ss enabled #2\"\n+\n+gdb_test \"print -raw-values -- ss\" \" = {a = {a = 1, b = $hex}, b = {a = 2, b = $hex}}\" \\\n+    \"print -raw-values -- ss\"\n+\n+gdb_test \"print -raw-values on -- ss\" \" = {a = {a = 1, b = $hex}, b = {a = 2, b = $hex}}\" \\\n+    \"print -raw-values on -- ss\"\n+\n+gdb_test \"with print raw-values -- print ss\" \" = {a = {a = 1, b = $hex}, b = {a = 2, b = $hex}}\" \\\n+    \"with print raw-values -- print ss\"\n+\n+# Test interaction between /r format and raw-values option:\n+#   When /r is not present, raw-values option tells to bypass (or not) the pretty printers.\n+#     (these cases are tested above).\n+#   When /r is present, it must override the option raw-values off.\n+gdb_test \"print /r ss\" \" = {a = {a = 1, b = $hex}, b = {a = 2, b = $hex}}\"\n+\n+gdb_test \"with print raw-values off -- print /r ss\" \" = {a = {a = 1, b = $hex}, b = {a = 2, b = $hex}}\"\n+\n+gdb_test \"print -raw-values off -- /r ss\" \" = {a = {a = 1, b = $hex}, b = {a = 2, b = $hex}}\"\n+\n+"
    },
    {
      "sha": "4f80ee0dfe3b0e7fbb9ae0042c8bf5b25f3bd5f4",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8edc8b768f0f611088161161392e1075134d635/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8edc8b768f0f611088161161392e1075134d635/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=d8edc8b768f0f611088161161392e1075134d635",
      "patch": "@@ -3198,6 +3198,16 @@ Use \\\"unlimited\\\" to print the complete structure.\")\n     NULL, /* help_doc */\n   },\n \n+  boolean_option_def {\n+    \"raw-values\",\n+    [] (value_print_options *opt) { return &opt->raw; },\n+    NULL, /* show_cmd_cb */\n+    N_(\"Set whether to print values in raw form.\"),\n+    N_(\"Show whether to print values in raw form.\"),\n+    N_(\"If set, values are printed in raw form, bypassing any\\n\\\n+pretty-printers for that value.\")\n+  },\n+\n   uinteger_option_def {\n     \"repeats\",\n     [] (value_print_options *opt) { return &opt->repeat_count_threshold; },"
    }
  ]
}