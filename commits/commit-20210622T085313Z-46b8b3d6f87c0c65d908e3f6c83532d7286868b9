{
  "sha": "46b8b3d6f87c0c65d908e3f6c83532d7286868b9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDZiOGIzZDZmODdjMGM2NWQ5MDhlM2Y2YzgzNTMyZDcyODY4NjhiOQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-06-21T14:10:14Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-06-22T08:53:13Z"
    },
    "message": "opcodes: make use of __builtin_popcount when available\n\nThis commit provides a small performance improvement when starting up\nCGEN based disassemblers by making use of __builtin_popcount.\n\nThe #if check used in this commit was copied from bfd/elf32-arm.c\nwhere __builtin_popcount is also used.\n\nI ran into this code while investigating some GDB tests that would\noccasionally timeout.  One of the reason these tests were having\nproblems is that the m16c and m32c disassemblers take so long to\ninitialise themselves.  Speeding up count_decodable_bits helps, but is\nnot a total solution.  Still, this felt like an easy win which added\nminimal extra complexity, so I figure its worth doing.\n\nopcodes/ChangeLog:\n\n\t* cgen-dis.c (count_decodable_bits): Use __builtin_popcount when\n\tavailable.",
    "tree": {
      "sha": "57add5491a7bfe6be32c0127311fbc4b544e1421",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/57add5491a7bfe6be32c0127311fbc4b544e1421"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/46b8b3d6f87c0c65d908e3f6c83532d7286868b9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46b8b3d6f87c0c65d908e3f6c83532d7286868b9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/46b8b3d6f87c0c65d908e3f6c83532d7286868b9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46b8b3d6f87c0c65d908e3f6c83532d7286868b9/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ded5cb94441b2a47a75a0b1d26218f0d5e3dca28",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ded5cb94441b2a47a75a0b1d26218f0d5e3dca28",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ded5cb94441b2a47a75a0b1d26218f0d5e3dca28"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 9,
    "deletions": 0
  },
  "files": [
    {
      "sha": "20e0524a1bf1d67f15010bd260d389e844646d5e",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46b8b3d6f87c0c65d908e3f6c83532d7286868b9/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46b8b3d6f87c0c65d908e3f6c83532d7286868b9/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=46b8b3d6f87c0c65d908e3f6c83532d7286868b9",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* cgen-dis.c (count_decodable_bits): Use __builtin_popcount when\n+\tavailable.\n+\n 2021-06-22  Alan Modra  <amodra@gmail.com>\n \n \t* pj-dis.c (print_insn_pj): Don't print trailing tab.  Do"
    },
    {
      "sha": "1a5d1ae84591538097907d07b2d21a949cc843bc",
      "filename": "opcodes/cgen-dis.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46b8b3d6f87c0c65d908e3f6c83532d7286868b9/opcodes/cgen-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46b8b3d6f87c0c65d908e3f6c83532d7286868b9/opcodes/cgen-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/cgen-dis.c?ref=46b8b3d6f87c0c65d908e3f6c83532d7286868b9",
      "patch": "@@ -40,6 +40,9 @@ static int\n count_decodable_bits (const CGEN_INSN *insn)\n {\n   unsigned mask = CGEN_INSN_BASE_MASK (insn);\n+#if GCC_VERSION >= 3004\n+  return __builtin_popcount (mask);\n+#else\n   int bits = 0;\n   unsigned m;\n \n@@ -49,6 +52,7 @@ count_decodable_bits (const CGEN_INSN *insn)\n \t++bits;\n     }\n   return bits;\n+#endif\n }\n \n /* Add an instruction to the hash chain.  */"
    }
  ]
}