{
  "sha": "fc141319027485a7cfcbae2451b048ddc6c33b48",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmMxNDEzMTkwMjc0ODVhN2NmY2JhZTI0NTFiMDQ4ZGRjNmMzM2I0OA==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-07-28T17:42:47Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-07-28T17:42:47Z"
    },
    "message": "x86: Simplify check for distinct TMM register operands\n\nIf any pair of operands in AMX instructions with 3 TMM register operands\nare the same, the instruction will UD.  Don't call register_number to\ncheck for distinct TMM register operands since all TMM register operands\nhave the same size.\n\n\t* config/tc-i386.c (check_VecOperands): Remove register_number\n\tcall when checking for distinct TMM register operands.",
    "tree": {
      "sha": "7dc2fd46fdb0412ceeba96151391899c3c08f10e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7dc2fd46fdb0412ceeba96151391899c3c08f10e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fc141319027485a7cfcbae2451b048ddc6c33b48",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc141319027485a7cfcbae2451b048ddc6c33b48",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fc141319027485a7cfcbae2451b048ddc6c33b48",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc141319027485a7cfcbae2451b048ddc6c33b48/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7dc37e1e1209c80e0bab784df6b6bac335e836f2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7dc37e1e1209c80e0bab784df6b6bac335e836f2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7dc37e1e1209c80e0bab784df6b6bac335e836f2"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 10,
    "deletions": 15
  },
  "files": [
    {
      "sha": "1235c3e7733fc50a4428adad4404a18622b20754",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 10,
      "deletions": 15,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc141319027485a7cfcbae2451b048ddc6c33b48/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc141319027485a7cfcbae2451b048ddc6c33b48/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=fc141319027485a7cfcbae2451b048ddc6c33b48",
      "patch": "@@ -6076,21 +6076,16 @@ check_VecOperands (const insn_template *t)\n \t}\n     }\n \n-  /* For AMX instructions with three tmmword operands, all tmmword operand must be\n-     distinct */\n-  if (t->operand_types[0].bitfield.tmmword\n-      && i.reg_operands == 3)\n-    {\n-      if (register_number (i.op[0].regs)\n-          == register_number (i.op[1].regs)\n-          || register_number (i.op[0].regs)\n-             == register_number (i.op[2].regs)\n-          || register_number (i.op[1].regs)\n-             == register_number (i.op[2].regs))\n-\t{\n-\t  i.error = invalid_tmm_register_set;\n-\t  return 1;\n-\t}\n+  /* For AMX instructions with 3 TMM register operands, all operands\n+      must be distinct.  */\n+  if (i.reg_operands == 3\n+      && t->operand_types[0].bitfield.tmmword\n+      && (i.op[0].regs == i.op[1].regs\n+          || i.op[0].regs == i.op[2].regs\n+          || i.op[1].regs == i.op[2].regs))\n+    {\n+      i.error = invalid_tmm_register_set;\n+      return 1;\n     }\n \n   /* Check if broadcast is supported by the instruction and is applied"
    }
  ]
}