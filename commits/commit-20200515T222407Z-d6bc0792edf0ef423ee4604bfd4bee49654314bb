{
  "sha": "d6bc0792edf0ef423ee4604bfd4bee49654314bb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDZiYzA3OTJlZGYwZWY0MjNlZTQ2MDRiZmQ0YmVlNDk2NTQzMTRiYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-05-15T22:24:07Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-05-15T22:24:07Z"
    },
    "message": "Remove lookup_objfile_from_block\n\nlookup_objfile_from_block mostly duplicates the functionality of\nblock_objfile, but in a less efficient way.  This patch removes this\nfunction and changes the callers to use block_objfile instead.\n\nTested by the buildbot.\n\ngdb/ChangeLog\n2020-05-15  Tom Tromey  <tom@tromey.com>\n\n\t* symtab.c (lookup_language_this, lookup_symbol_aux): Use\n\tblock_objfile.\n\t(lookup_objfile_from_block): Remove.\n\t(lookup_symbol_in_block, lookup_symbol_in_static_block)\n\t(lookup_global_symbol): Use block_objfile.\n\t* symtab.h (lookup_objfile_from_block): Don't declare.\n\t* printcmd.c (clear_dangling_display_expressions): Use\n\tblock_objfile.\n\t* parse.c (operator_check_standard): Use block_objfile.",
    "tree": {
      "sha": "0aa725d9640096dbcde26bc0535ff0d15c7595a1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0aa725d9640096dbcde26bc0535ff0d15c7595a1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d6bc0792edf0ef423ee4604bfd4bee49654314bb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d6bc0792edf0ef423ee4604bfd4bee49654314bb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d6bc0792edf0ef423ee4604bfd4bee49654314bb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d6bc0792edf0ef423ee4604bfd4bee49654314bb/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8c14c3a3735d7de43e63710b2cd3a2e89cc4e243",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c14c3a3735d7de43e63710b2cd3a2e89cc4e243",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8c14c3a3735d7de43e63710b2cd3a2e89cc4e243"
    }
  ],
  "stats": {
    "total": 82,
    "additions": 41,
    "deletions": 41
  },
  "files": [
    {
      "sha": "7b19973118a59cdff7f8e5c6a41dba73fb83fc91",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6bc0792edf0ef423ee4604bfd4bee49654314bb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6bc0792edf0ef423ee4604bfd4bee49654314bb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d6bc0792edf0ef423ee4604bfd4bee49654314bb",
      "patch": "@@ -1,3 +1,15 @@\n+2020-05-15  Tom Tromey  <tom@tromey.com>\n+\n+\t* symtab.c (lookup_language_this, lookup_symbol_aux): Use\n+\tblock_objfile.\n+\t(lookup_objfile_from_block): Remove.\n+\t(lookup_symbol_in_block, lookup_symbol_in_static_block)\n+\t(lookup_global_symbol): Use block_objfile.\n+\t* symtab.h (lookup_objfile_from_block): Don't declare.\n+\t* printcmd.c (clear_dangling_display_expressions): Use\n+\tblock_objfile.\n+\t* parse.c (operator_check_standard): Use block_objfile.\n+\n 2020-05-15  Tom Tromey  <tom@tromey.com>\n \n \t* language.c (language_alloc_type_symbol): Set"
    },
    {
      "sha": "d5efe4ab3d8cb4c5107253097e5d75c206442568",
      "filename": "gdb/parse.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6bc0792edf0ef423ee4604bfd4bee49654314bb/gdb/parse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6bc0792edf0ef423ee4604bfd4bee49654314bb/gdb/parse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/parse.c?ref=d6bc0792edf0ef423ee4604bfd4bee49654314bb",
      "patch": "@@ -1340,7 +1340,7 @@ operator_check_standard (struct expression *exp, int pos,\n \t  return 1;\n \n \t/* Check objfile where is placed the code touching the variable.  */\n-\tobjfile = lookup_objfile_from_block (block);\n+\tobjfile = block_objfile (block);\n \n \ttype = SYMBOL_TYPE (symbol);\n       }"
    },
    {
      "sha": "388a0b2c6d414450f6c54c5f463d538167b29a9b",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 13,
      "deletions": 5,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6bc0792edf0ef423ee4604bfd4bee49654314bb/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6bc0792edf0ef423ee4604bfd4bee49654314bb/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=d6bc0792edf0ef423ee4604bfd4bee49654314bb",
      "patch": "@@ -2128,12 +2128,20 @@ clear_dangling_display_expressions (struct objfile *objfile)\n       if (d->pspace != pspace)\n \tcontinue;\n \n-      if (lookup_objfile_from_block (d->block) == objfile\n+      struct objfile *bl_objf = nullptr;\n+      if (d->block != nullptr)\n+\t{\n+\t  bl_objf = block_objfile (d->block);\n+\t  if (bl_objf->separate_debug_objfile_backlink != nullptr)\n+\t    bl_objf = bl_objf->separate_debug_objfile_backlink;\n+\t}\n+\n+      if (bl_objf == objfile\n \t  || (d->exp != NULL && exp_uses_objfile (d->exp.get (), objfile)))\n-      {\n-\td->exp.reset ();\n-\td->block = NULL;\n-      }\n+\t{\n+\t  d->exp.reset ();\n+\t  d->block = NULL;\n+\t}\n     }\n }\n \f"
    },
    {
      "sha": "1a5de4d8aa8862b518b8daec68b92b4fe4646ae9",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 15,
      "deletions": 31,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6bc0792edf0ef423ee4604bfd4bee49654314bb/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6bc0792edf0ef423ee4604bfd4bee49654314bb/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=d6bc0792edf0ef423ee4604bfd4bee49654314bb",
      "patch": "@@ -1917,7 +1917,7 @@ lookup_language_this (const struct language_defn *lang,\n \n   if (symbol_lookup_debug > 1)\n     {\n-      struct objfile *objfile = lookup_objfile_from_block (block);\n+      struct objfile *objfile = block_objfile (block);\n \n       fprintf_unfiltered (gdb_stdlog,\n \t\t\t  \"lookup_language_this (%s, %s (objfile %s))\",\n@@ -2012,7 +2012,8 @@ lookup_symbol_aux (const char *name, symbol_name_match_type match_type,\n \n   if (symbol_lookup_debug)\n     {\n-      struct objfile *objfile = lookup_objfile_from_block (block);\n+      struct objfile *objfile = (block == nullptr\n+\t\t\t\t ? nullptr : block_objfile (block));\n \n       fprintf_unfiltered (gdb_stdlog,\n \t\t\t  \"lookup_symbol_aux (%s, %s (objfile %s), %s, %s)\\n\",\n@@ -2157,32 +2158,6 @@ lookup_local_symbol (const char *name,\n \n /* See symtab.h.  */\n \n-struct objfile *\n-lookup_objfile_from_block (const struct block *block)\n-{\n-  if (block == NULL)\n-    return NULL;\n-\n-  block = block_global_block (block);\n-  /* Look through all blockvectors.  */\n-  for (objfile *obj : current_program_space->objfiles ())\n-    {\n-      for (compunit_symtab *cust : obj->compunits ())\n-\tif (block == BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (cust),\n-\t\t\t\t\tGLOBAL_BLOCK))\n-\t  {\n-\t    if (obj->separate_debug_objfile_backlink)\n-\t      obj = obj->separate_debug_objfile_backlink;\n-\n-\t    return obj;\n-\t  }\n-    }\n-\n-  return NULL;\n-}\n-\n-/* See symtab.h.  */\n-\n struct symbol *\n lookup_symbol_in_block (const char *name, symbol_name_match_type match_type,\n \t\t\tconst struct block *block,\n@@ -2192,7 +2167,8 @@ lookup_symbol_in_block (const char *name, symbol_name_match_type match_type,\n \n   if (symbol_lookup_debug > 1)\n     {\n-      struct objfile *objfile = lookup_objfile_from_block (block);\n+      struct objfile *objfile = (block == nullptr\n+\t\t\t\t ? nullptr : block_objfile (block));\n \n       fprintf_unfiltered (gdb_stdlog,\n \t\t\t  \"lookup_symbol_in_block (%s, %s (objfile %s), %s)\",\n@@ -2482,7 +2458,8 @@ lookup_symbol_in_static_block (const char *name,\n \n   if (symbol_lookup_debug)\n     {\n-      struct objfile *objfile = lookup_objfile_from_block (static_block);\n+      struct objfile *objfile = (block == nullptr\n+\t\t\t\t ? nullptr : block_objfile (block));\n \n       fprintf_unfiltered (gdb_stdlog,\n \t\t\t  \"lookup_symbol_in_static_block (%s, %s (objfile %s),\"\n@@ -2704,7 +2681,14 @@ lookup_global_symbol (const char *name,\n \treturn { sym, global_block };\n     }\n \n-  struct objfile *objfile = lookup_objfile_from_block (block);\n+  struct objfile *objfile = nullptr;\n+  if (block != nullptr)\n+    {\n+      objfile = block_objfile (block);\n+      if (objfile->separate_debug_objfile_backlink != nullptr)\n+\tobjfile = objfile->separate_debug_objfile_backlink;\n+    }\n+\n   block_symbol bs\n     = lookup_global_or_static_symbol (name, GLOBAL_BLOCK, objfile, domain);\n   if (better_symbol (sym, bs.symbol, domain) == sym)"
    },
    {
      "sha": "05e6a311b875b5d1fccb812730cf06b8b89cf80e",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d6bc0792edf0ef423ee4604bfd4bee49654314bb/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d6bc0792edf0ef423ee4604bfd4bee49654314bb/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=d6bc0792edf0ef423ee4604bfd4bee49654314bb",
      "patch": "@@ -2238,10 +2238,6 @@ bool producer_is_realview (const char *producer);\n void fixup_section (struct general_symbol_info *ginfo,\n \t\t    CORE_ADDR addr, struct objfile *objfile);\n \n-/* Look up objfile containing BLOCK.  */\n-\n-struct objfile *lookup_objfile_from_block (const struct block *block);\n-\n extern unsigned int symtab_create_debug;\n \n extern unsigned int symbol_lookup_debug;"
    }
  ]
}