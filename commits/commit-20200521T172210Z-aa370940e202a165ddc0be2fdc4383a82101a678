{
  "sha": "aa370940e202a165ddc0be2fdc4383a82101a678",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWEzNzA5NDBlMjAyYTE2NWRkYzBiZTJmZGM0MzgzYTgyMTAxYTY3OA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-21T17:22:10Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-21T17:22:10Z"
    },
    "message": "gdb: fix -Wtautological-overlap-compare error in lm32-tdep.c\n\nBuilding with clang 11, we get:\n\n    /home/smarchi/src/binutils-gdb/gdb/lm32-tdep.c:84:44: error: overlapping comparisons always evaluate to false [-Werror,-Wtautological-overlap-compare]\n        return ((regnum >= SIM_LM32_EA_REGNUM) && (regnum <= SIM_LM32_BA_REGNUM))\n                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIndeed, this doesn't make sense, as EA_REGNUM is greater than BA_REGNUM.\nI'll assume that it was just a mistake and that these two should be\nswapped.\n\nThe regnums for BA and EA are contiguous, so ultimately this particular\npart of the condition is only true if regnum is == EA or == BA.  These\nregisters are Exception Address and Breakpoint Address, so I guess it\nmakes sense for them to be in the system register group.\n\nThe relevant reference is here:\n\n  https://www.latticesemi.com/-/media/LatticeSemi/Documents/UserManuals/JL/LatticeMico32ProcessorReferenceManual39.ashx?document_id=52077\n\ngdb/ChangeLog:\n\n\t* lm32-tdep.c (lm32_register_reggroup_p): Fix condition.",
    "tree": {
      "sha": "09eb4a59b9058d5b4b9e1a1ae399b16241a145f5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/09eb4a59b9058d5b4b9e1a1ae399b16241a145f5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aa370940e202a165ddc0be2fdc4383a82101a678",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa370940e202a165ddc0be2fdc4383a82101a678",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aa370940e202a165ddc0be2fdc4383a82101a678",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa370940e202a165ddc0be2fdc4383a82101a678/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "84d53fa9d281f057af5916f8663bc9a2872c5f6e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/84d53fa9d281f057af5916f8663bc9a2872c5f6e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/84d53fa9d281f057af5916f8663bc9a2872c5f6e"
    }
  ],
  "stats": {
    "total": 6,
    "additions": 5,
    "deletions": 1
  },
  "files": [
    {
      "sha": "0b38daf3e3d96dfc00fb3c1d2390f0d32ff20578",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa370940e202a165ddc0be2fdc4383a82101a678/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa370940e202a165ddc0be2fdc4383a82101a678/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=aa370940e202a165ddc0be2fdc4383a82101a678",
      "patch": "@@ -1,3 +1,7 @@\n+2020-05-21  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* lm32-tdep.c (lm32_register_reggroup_p): Fix condition.\n+\n 2020-05-21  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* coffread.c (patch_type): Remove NULL check before xfree."
    },
    {
      "sha": "73f8ae746f7861cadd0ffa9989fe2fe1c78ca65e",
      "filename": "gdb/lm32-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa370940e202a165ddc0be2fdc4383a82101a678/gdb/lm32-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa370940e202a165ddc0be2fdc4383a82101a678/gdb/lm32-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/lm32-tdep.c?ref=aa370940e202a165ddc0be2fdc4383a82101a678",
      "patch": "@@ -81,7 +81,7 @@ lm32_register_reggroup_p (struct gdbarch *gdbarch, int regnum,\n     return ((regnum >= SIM_LM32_R0_REGNUM) && (regnum <= SIM_LM32_RA_REGNUM))\n       || (regnum == SIM_LM32_PC_REGNUM);\n   else if (group == system_reggroup)\n-    return ((regnum >= SIM_LM32_EA_REGNUM) && (regnum <= SIM_LM32_BA_REGNUM))\n+    return ((regnum >= SIM_LM32_BA_REGNUM) && (regnum <= SIM_LM32_EA_REGNUM))\n       || ((regnum >= SIM_LM32_EID_REGNUM) && (regnum <= SIM_LM32_IP_REGNUM));\n   return default_register_reggroup_p (gdbarch, regnum, group);\n }"
    }
  ]
}