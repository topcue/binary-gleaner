{
  "sha": "8cd7817067daffd567fbe09a85b215b609c56e1d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGNkNzgxNzA2N2RhZmZkNTY3ZmJlMDlhODViMjE1YjYwOWM1NmUxZA==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T10:42:52Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:36:07Z"
    },
    "message": "[PATCH 20/57][Arm][GAS] Add support for MVE instructions: vmaxnmv, vmaxnmav, vminnmv and vminnmav\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (do_mve_vmaxnmv): New encoding function.\n\t(insns): Add entries for new mnemonics.\n\t* testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.d: New test.\n\t* testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.l: New test.\n\t* testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.s: New test.",
    "tree": {
      "sha": "1f8d0f021d89e0332be3cda99ce4b899183e55e5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1f8d0f021d89e0332be3cda99ce4b899183e55e5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8cd7817067daffd567fbe09a85b215b609c56e1d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8cd7817067daffd567fbe09a85b215b609c56e1d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8cd7817067daffd567fbe09a85b215b609c56e1d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8cd7817067daffd567fbe09a85b215b609c56e1d/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "935295b51d80180ecd8c35d0edbd91283ae135a2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/935295b51d80180ecd8c35d0edbd91283ae135a2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/935295b51d80180ecd8c35d0edbd91283ae135a2"
    }
  ],
  "stats": {
    "total": 151,
    "additions": 151,
    "deletions": 0
  },
  "files": [
    {
      "sha": "5712c4ca3ee259e3a1d46065c61f7bb020312cb6",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8cd7817067daffd567fbe09a85b215b609c56e1d/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8cd7817067daffd567fbe09a85b215b609c56e1d/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=8cd7817067daffd567fbe09a85b215b609c56e1d",
      "patch": "@@ -1,3 +1,11 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (do_mve_vmaxnmv): New encoding function.\n+\t(insns): Add entries for new mnemonics.\n+\t* testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (do_mve_vmaxa_vmina): New encoding function."
    },
    {
      "sha": "82ed9d298cbc855d93973202ba31effc0a917876",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8cd7817067daffd567fbe09a85b215b609c56e1d/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8cd7817067daffd567fbe09a85b215b609c56e1d/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=8cd7817067daffd567fbe09a85b215b609c56e1d",
      "patch": "@@ -17248,6 +17248,26 @@ do_mve_vmladav (void)\n   inst.instruction |= (et.size == 32) << 16;\n }\n \n+static void\n+do_mve_vmaxnmv (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_RQ, NS_NULL);\n+  struct neon_type_el et\n+    = neon_check_type (2, rs, N_EQK, N_F_MVE | N_KEY);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  if (inst.operands[0].reg == REG_SP)\n+    as_tsktsk (MVE_BAD_SP);\n+  else if (inst.operands[0].reg == REG_PC)\n+    as_tsktsk (MVE_BAD_PC);\n+\n+  mve_encode_rq (et.size == 16, 64);\n+}\n+\n static void\n do_neon_qrdmlah (void)\n {\n@@ -24421,6 +24441,10 @@ static const struct asm_opcode insns[] =\n  mToC(\"vfmas\", ee311e40,   3, (RMQ, RMQ, RR),\t\t\t  mve_vfmas),\n  mToC(\"vmaxnma\", ee3f0e81, 2, (RMQ, RMQ),\t\t\t  mve_vmaxnma_vminnma),\n  mToC(\"vminnma\", ee3f1e81, 2, (RMQ, RMQ),\t\t\t  mve_vmaxnma_vminnma),\n+ mToC(\"vmaxnmv\", eeee0f00, 2, (RR, RMQ),\t\t\t  mve_vmaxnmv),\n+ mToC(\"vmaxnmav\",eeec0f00, 2, (RR, RMQ),\t\t\t  mve_vmaxnmv),\n+ mToC(\"vminnmv\", eeee0f80, 2, (RR, RMQ),\t\t\t  mve_vmaxnmv),\n+ mToC(\"vminnmav\",eeec0f80, 2, (RR, RMQ),\t\t\t  mve_vmaxnmv),\n \n #undef  ARM_VARIANT\n #define ARM_VARIANT  & fpu_vfp_ext_v1"
    },
    {
      "sha": "aca103c92aec94fdb3629f2416f1318f6cd5b1e2",
      "filename": "gas/testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8cd7817067daffd567fbe09a85b215b609c56e1d/gas/testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8cd7817067daffd567fbe09a85b215b609c56e1d/gas/testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.d?ref=8cd7817067daffd567fbe09a85b215b609c56e1d",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VMAXNMV, VMAXNMAV, VMINNMV and VMINNMAV instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vmaxnmv-vminnmv-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "5b30434027c203db386f252e99b26851e2dd8fec",
      "filename": "gas/testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.l",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8cd7817067daffd567fbe09a85b215b609c56e1d/gas/testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8cd7817067daffd567fbe09a85b215b609c56e1d/gas/testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.l?ref=8cd7817067daffd567fbe09a85b215b609c56e1d",
      "patch": "@@ -0,0 +1,57 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vmaxnmv.f64 r0,q1'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vmaxnmv.i16 r0,q1'\n+[^:]*:12: Error: bad type in SIMD instruction -- `vminnmv.f64 r0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vminnmv.i16 r0,q1'\n+[^:]*:14: Error: bad type in SIMD instruction -- `vmaxnmav.f64 r0,q1'\n+[^:]*:15: Error: bad type in SIMD instruction -- `vmaxnmav.i16 r0,q1'\n+[^:]*:16: Error: bad type in SIMD instruction -- `vminnmav.f64 r0,q1'\n+[^:]*:17: Error: bad type in SIMD instruction -- `vminnmav.i16 r0,q1'\n+[^:]*:18: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:19: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:20: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:21: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Error: syntax error -- `vmaxnmveq.f32 r0,q1'\n+[^:]*:28: Error: syntax error -- `vmaxnmveq.f32 r0,q1'\n+[^:]*:30: Error: syntax error -- `vmaxnmveq.f32 r0,q1'\n+[^:]*:31: Error: vector predicated instruction should be in VPT/VPST block -- `vmaxnmvt.f32 r0,q1'\n+[^:]*:33: Error: instruction missing MVE vector predication code -- `vmaxnmv.f32 r0,q1'\n+[^:]*:35: Error: syntax error -- `vmaxnmaveq.f32 r0,q1'\n+[^:]*:36: Error: syntax error -- `vmaxnmaveq.f32 r0,q1'\n+[^:]*:38: Error: syntax error -- `vmaxnmaveq.f32 r0,q1'\n+[^:]*:39: Error: vector predicated instruction should be in VPT/VPST block -- `vmaxnmavt.f32 r0,q1'\n+[^:]*:41: Error: instruction missing MVE vector predication code -- `vmaxnmav.f32 r0,q1'\n+[^:]*:43: Error: syntax error -- `vminnmveq.f32 r0,q1'\n+[^:]*:44: Error: syntax error -- `vminnmveq.f32 r0,q1'\n+[^:]*:46: Error: syntax error -- `vminnmveq.f32 r0,q1'\n+[^:]*:47: Error: vector predicated instruction should be in VPT/VPST block -- `vminnmvt.f32 r0,q1'\n+[^:]*:49: Error: instruction missing MVE vector predication code -- `vminnmv.f32 r0,q1'\n+[^:]*:51: Error: syntax error -- `vminnmaveq.f32 r0,q1'\n+[^:]*:52: Error: syntax error -- `vminnmaveq.f32 r0,q1'\n+[^:]*:54: Error: syntax error -- `vminnmaveq.f32 r0,q1'\n+[^:]*:55: Error: vector predicated instruction should be in VPT/VPST block -- `vminnmavt.f32 r0,q1'\n+[^:]*:57: Error: instruction missing MVE vector predication code -- `vminnmav.f32 r0,q1'"
    },
    {
      "sha": "58c4de1e5bcb1e5bf7c525c5ec797056bb2c5bab",
      "filename": "gas/testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.s",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8cd7817067daffd567fbe09a85b215b609c56e1d/gas/testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8cd7817067daffd567fbe09a85b215b609c56e1d/gas/testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.s?ref=8cd7817067daffd567fbe09a85b215b609c56e1d",
      "patch": "@@ -0,0 +1,57 @@\n+.macro cond, op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().f16 r0, q1\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vmaxnmv.f64 r0, q1\n+vmaxnmv.i16 r0, q1\n+vminnmv.f64 r0, q1\n+vminnmv.i16 r0, q1\n+vmaxnmav.f64 r0, q1\n+vmaxnmav.i16 r0, q1\n+vminnmav.f64 r0, q1\n+vminnmav.i16 r0, q1\n+vmaxnmv.f16 sp, q1\n+vmaxnmav.f32 pc, q1\n+vminnmav.f16 sp, q1\n+vminnmv.f32 pc, q1\n+cond vmaxnmv\n+cond vminnmv\n+cond vmaxnmav\n+cond vminnmav\n+it eq\n+vmaxnmveq.f32 r0, q1\n+vmaxnmveq.f32 r0, q1\n+vpst\n+vmaxnmveq.f32 r0, q1\n+vmaxnmvt.f32 r0, q1\n+vpst\n+vmaxnmv.f32 r0, q1\n+it eq\n+vmaxnmaveq.f32 r0, q1\n+vmaxnmaveq.f32 r0, q1\n+vpst\n+vmaxnmaveq.f32 r0, q1\n+vmaxnmavt.f32 r0, q1\n+vpst\n+vmaxnmav.f32 r0, q1\n+it eq\n+vminnmveq.f32 r0, q1\n+vminnmveq.f32 r0, q1\n+vpst\n+vminnmveq.f32 r0, q1\n+vminnmvt.f32 r0, q1\n+vpst\n+vminnmv.f32 r0, q1\n+it eq\n+vminnmaveq.f32 r0, q1\n+vminnmaveq.f32 r0, q1\n+vpst\n+vminnmaveq.f32 r0, q1\n+vminnmavt.f32 r0, q1\n+vpst\n+vminnmav.f32 r0, q1"
    }
  ]
}