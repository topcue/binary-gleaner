{
  "sha": "54f7a83a62c27d6da9ee66da1022572d6ea45d84",
  "node_id": "C_kwDOANOeidoAKDU0ZjdhODNhNjJjMjdkNmRhOWVlNjZkYTEwMjI1NzJkNmVhNDVkODQ",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-16T04:00:04Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-16T05:58:41Z"
    },
    "message": "sim: keep track of program environment strings\n\nWe've been passing the environment strings to sim_create_inferior,\nbut most ports don't do anything with them.  A few will use ad-hoc\nlogic to stuff the stack for user-mode programs, but that's it.\n\nLet's formalize this across the board by storing the strings in the\nnormal sim state.  This will allow (in future commits) supporting\nmore functionality in the run interface, and to unify some of the\nlibgloss syscalls.",
    "tree": {
      "sha": "eb0670d282c37c15e28f3f4b3344285d7581399d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eb0670d282c37c15e28f3f4b3344285d7581399d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/54f7a83a62c27d6da9ee66da1022572d6ea45d84",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54f7a83a62c27d6da9ee66da1022572d6ea45d84",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/54f7a83a62c27d6da9ee66da1022572d6ea45d84",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54f7a83a62c27d6da9ee66da1022572d6ea45d84/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "38f9e52086c8d513bc7ef713043c03752924df89",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/38f9e52086c8d513bc7ef713043c03752924df89",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/38f9e52086c8d513bc7ef713043c03752924df89"
    }
  ],
  "stats": {
    "total": 92,
    "additions": 85,
    "deletions": 7
  },
  "files": [
    {
      "sha": "4d7f4217456023a53a9cd2d6a219c3ddbb18f440",
      "filename": "sim/aarch64/interp.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/aarch64/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/aarch64/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/interp.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -144,6 +144,12 @@ sim_create_inferior (SIM_DESC sd, struct bfd *abfd,\n       STATE_PROG_ARGV (sd) = dupargv (argv);\n     }\n \n+  if (STATE_PROG_ENVP (sd) != env)\n+    {\n+      freeargv (STATE_PROG_ENVP (sd));\n+      STATE_PROG_ENVP (sd) = dupargv (env);\n+    }\n+\n   if (trace_load_symbols (sd))\n     {\n       STATE_PROG_SYMS_COUNT (sd) ="
    },
    {
      "sha": "9d0e737cc33c592d00384925cc3aa9b0ac6c6268",
      "filename": "sim/bfin/interp.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/bfin/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/bfin/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/interp.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -1170,6 +1170,12 @@ sim_create_inferior (SIM_DESC sd, struct bfd *abfd,\n       STATE_PROG_ARGV (sd) = dupargv (argv);\n     }\n \n+  if (STATE_PROG_ENVP (sd) != env)\n+    {\n+      freeargv (STATE_PROG_ENVP (sd));\n+      STATE_PROG_ENVP (sd) = dupargv (env);\n+    }\n+\n   switch (STATE_ENVIRONMENT (sd))\n     {\n     case USER_ENVIRONMENT:"
    },
    {
      "sha": "7503a302ca34e302a287aefe0461cec26cbcf567",
      "filename": "sim/bpf/sim-if.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/bpf/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/bpf/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/sim-if.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -190,7 +190,7 @@ sim_open (SIM_OPEN_KIND kind,\n \n SIM_RC\n sim_create_inferior (SIM_DESC sd, struct bfd *abfd,\n-\t\t     char *const *argv, char *const *envp)\n+\t\t     char *const *argv, char *const *env)\n {\n   SIM_CPU *current_cpu = STATE_CPU (sd, 0);\n   SIM_ADDR addr;\n@@ -213,5 +213,11 @@ sim_create_inferior (SIM_DESC sd, struct bfd *abfd,\n       STATE_PROG_ARGV (sd) = dupargv (argv);\n     }\n \n+  if (STATE_PROG_ENVP (sd) != env)\n+    {\n+      freeargv (STATE_PROG_ENVP (sd));\n+      STATE_PROG_ENVP (sd) = dupargv (env);\n+    }\n+\n   return SIM_RC_OK;\n }"
    },
    {
      "sha": "50def1e02b7d93da1ea3dddc020812bd577ce98a",
      "filename": "sim/common/sim-base.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/common/sim-base.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/common/sim-base.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-base.h?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -165,6 +165,10 @@ struct sim_state {\n   char *prog_argv0;\n #define STATE_PROG_ARGV0(sd) ((sd)->prog_argv0)\n \n+  /* The program's environment.  */\n+  char **prog_envp;\n+#define STATE_PROG_ENVP(sd) ((sd)->prog_envp)\n+\n   /* The program's bfd.  */\n   struct bfd *prog_bfd;\n #define STATE_PROG_BFD(sd) ((sd)->prog_bfd)"
    },
    {
      "sha": "ff6234b1c9848c291c622edadb5d39ec37135918",
      "filename": "sim/common/sim-utils.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/common/sim-utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/common/sim-utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-utils.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -99,6 +99,7 @@ sim_state_free (SIM_DESC sd)\n \n   free (STATE_PROG_FILE (sd));\n   free (STATE_PROG_ARGV0 (sd));\n+  freeargv (STATE_PROG_ENVP (sd));\n   free (sd);\n }\n "
    },
    {
      "sha": "d29ccc59f351f3144d5a93352d03e54d3aa3b416",
      "filename": "sim/cris/sim-if.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/cris/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/cris/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/sim-if.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -951,8 +951,8 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n \f\n SIM_RC\n sim_create_inferior (SIM_DESC sd, struct bfd *abfd,\n-\t\t     char * const *argv ATTRIBUTE_UNUSED,\n-\t\t     char * const *envp ATTRIBUTE_UNUSED)\n+\t\t     char * const *argv,\n+\t\t     char * const *env)\n {\n   SIM_CPU *current_cpu = STATE_CPU (sd, 0);\n   SIM_ADDR addr;\n@@ -977,6 +977,12 @@ sim_create_inferior (SIM_DESC sd, struct bfd *abfd,\n       STATE_PROG_ARGV (sd) = dupargv (argv);\n     }\n \n+  if (STATE_PROG_ENVP (sd) != env)\n+    {\n+      freeargv (STATE_PROG_ENVP (sd));\n+      STATE_PROG_ENVP (sd) = dupargv (env);\n+    }\n+\n   return SIM_RC_OK;\n }\n \f"
    },
    {
      "sha": "93aea7b0a860f1560701a104416d6a16685581a9",
      "filename": "sim/example-synacor/interp.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/example-synacor/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/example-synacor/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/interp.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -174,5 +174,11 @@ sim_create_inferior (SIM_DESC sd, struct bfd *abfd,\n       STATE_PROG_ARGV (sd) = dupargv (argv);\n     }\n \n+  if (STATE_PROG_ENVP (sd) != env)\n+    {\n+      freeargv (STATE_PROG_ENVP (sd));\n+      STATE_PROG_ENVP (sd) = dupargv (env);\n+    }\n+\n   return SIM_RC_OK;\n }"
    },
    {
      "sha": "7b0913dad014389f60450326f2e962a86ed6f97f",
      "filename": "sim/frv/sim-if.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/frv/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/frv/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/sim-if.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -175,7 +175,7 @@ frv_sim_close (SIM_DESC sd, int quitting)\n \f\n SIM_RC\n sim_create_inferior (SIM_DESC sd, bfd *abfd, char * const *argv,\n-\t\t     char * const *envp)\n+\t\t     char * const *env)\n {\n   SIM_CPU *current_cpu = STATE_CPU (sd, 0);\n   SIM_ADDR addr;\n@@ -196,5 +196,11 @@ sim_create_inferior (SIM_DESC sd, bfd *abfd, char * const *argv,\n       STATE_PROG_ARGV (sd) = dupargv (argv);\n     }\n \n+  if (STATE_PROG_ENVP (sd) != env)\n+    {\n+      freeargv (STATE_PROG_ENVP (sd));\n+      STATE_PROG_ENVP (sd) = dupargv (env);\n+    }\n+\n   return SIM_RC_OK;\n }"
    },
    {
      "sha": "2838395dd029b3a80510445df4e8964dea100722",
      "filename": "sim/ft32/interp.c",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/ft32/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/ft32/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/interp.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -900,6 +900,13 @@ sim_create_inferior (SIM_DESC sd,\n       freeargv (STATE_PROG_ARGV (sd));\n       STATE_PROG_ARGV (sd) = dupargv (argv);\n     }\n+\n+  if (STATE_PROG_ENVP (sd) != env)\n+    {\n+      freeargv (STATE_PROG_ENVP (sd));\n+      STATE_PROG_ENVP (sd) = dupargv (env);\n+    }\n+\n   cpu->state.regs[FT32_HARD_SP] = addr;\n   cpu->state.num_i = 0;\n   cpu->state.cycles = 0;"
    },
    {
      "sha": "05b348efe90ef2988609237f3f93ab0e531ab4e6",
      "filename": "sim/iq2000/sim-if.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/iq2000/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/iq2000/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/sim-if.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -131,7 +131,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n \f\n SIM_RC\n sim_create_inferior (SIM_DESC sd, struct bfd *abfd, char * const *argv,\n-\t\t     char * const *envp)\n+\t\t     char * const *env)\n {\n   SIM_CPU *current_cpu = STATE_CPU (sd, 0);\n   SIM_ADDR addr;\n@@ -152,5 +152,11 @@ sim_create_inferior (SIM_DESC sd, struct bfd *abfd, char * const *argv,\n       STATE_PROG_ARGV (sd) = dupargv (argv);\n     }\n \n+  if (STATE_PROG_ENVP (sd) != env)\n+    {\n+      freeargv (STATE_PROG_ENVP (sd));\n+      STATE_PROG_ENVP (sd) = dupargv (env);\n+    }\n+\n   return SIM_RC_OK;\n }"
    },
    {
      "sha": "e7bffbdf3f6ea3ffe6dbbe67ac9fc223a71ffbc7",
      "filename": "sim/lm32/sim-if.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/lm32/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/lm32/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/sim-if.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -192,7 +192,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n \f\n SIM_RC\n sim_create_inferior (SIM_DESC sd, struct bfd *abfd, char * const *argv,\n-\t\t     char * const *envp)\n+\t\t     char * const *env)\n {\n   SIM_CPU *current_cpu = STATE_CPU (sd, 0);\n   SIM_ADDR addr;\n@@ -213,5 +213,11 @@ sim_create_inferior (SIM_DESC sd, struct bfd *abfd, char * const *argv,\n       STATE_PROG_ARGV (sd) = dupargv (argv);\n     }\n \n+  if (STATE_PROG_ENVP (sd) != env)\n+    {\n+      freeargv (STATE_PROG_ENVP (sd));\n+      STATE_PROG_ENVP (sd) = dupargv (env);\n+    }\n+\n   return SIM_RC_OK;\n }"
    },
    {
      "sha": "0cb49a1e4e1987469340ae644aac607f41f68dbb",
      "filename": "sim/m32r/sim-if.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/m32r/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/m32r/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/sim-if.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -145,7 +145,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n \f\n SIM_RC\n sim_create_inferior (SIM_DESC sd, struct bfd *abfd, char * const *argv,\n-\t\t     char * const *envp)\n+\t\t     char * const *env)\n {\n   SIM_CPU *current_cpu = STATE_CPU (sd, 0);\n   SIM_ADDR addr;\n@@ -174,6 +174,12 @@ sim_create_inferior (SIM_DESC sd, struct bfd *abfd, char * const *argv,\n       STATE_PROG_ARGV (sd) = dupargv (argv);\n     }\n \n+  if (STATE_PROG_ENVP (sd) != env)\n+    {\n+      freeargv (STATE_PROG_ENVP (sd));\n+      STATE_PROG_ENVP (sd) = dupargv (env);\n+    }\n+\n   return SIM_RC_OK;\n }\n "
    },
    {
      "sha": "f243df9426d393842abaa0d0ecf41056845f5fa3",
      "filename": "sim/pru/interp.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/pru/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/pru/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/interp.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -848,5 +848,11 @@ sim_create_inferior (SIM_DESC sd, struct bfd *prog_bfd,\n       STATE_PROG_ARGV (sd) = dupargv (argv);\n     }\n \n+  if (STATE_PROG_ENVP (sd) != env)\n+    {\n+      freeargv (STATE_PROG_ENVP (sd));\n+      STATE_PROG_ENVP (sd) = dupargv (env);\n+    }\n+\n   return SIM_RC_OK;\n }"
    },
    {
      "sha": "7ecdd55141c1114b7265379baac2083cca84925c",
      "filename": "sim/riscv/interp.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/riscv/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54f7a83a62c27d6da9ee66da1022572d6ea45d84/sim/riscv/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/interp.c?ref=54f7a83a62c27d6da9ee66da1022572d6ea45d84",
      "patch": "@@ -153,6 +153,12 @@ sim_create_inferior (SIM_DESC sd, struct bfd *abfd,\n       STATE_PROG_ARGV (sd) = dupargv (argv);\n     }\n \n+  if (STATE_PROG_ENVP (sd) != env)\n+    {\n+      freeargv (STATE_PROG_ENVP (sd));\n+      STATE_PROG_ENVP (sd) = dupargv (env);\n+    }\n+\n   initialize_env (sd, (void *)argv, (void *)env);\n \n   return SIM_RC_OK;"
    }
  ]
}