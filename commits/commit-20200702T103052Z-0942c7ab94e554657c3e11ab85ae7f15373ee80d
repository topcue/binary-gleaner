{
  "sha": "0942c7ab94e554657c3e11ab85ae7f15373ee80d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDk0MmM3YWI5NGU1NTQ2NTdjM2UxMWFiODVhZTdmMTUzNzNlZTgwZA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-07-02T10:30:52Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-07-02T10:30:52Z"
    },
    "message": "Change readelf's display of symbol names (when not in --wide mode) so that if they are going to be truncated then \"[...]\" is displayed at the end.  Add a comment line option to disable this enhancement and restore the old behaviour.\n\n\tPR 26028\nbinutils* readelf.c (print_symbol): Handle truncation of symbol names.\n\t(options): Add -T/--silent-truncation option.\n\t(parse_args): Handle the option.\n\t(print_dynamic_symbol): Correct calculation of width available to\n\tdisplay symbol name.\n\t* doc/binutils.texi: Document the -T option to readelf.\n\t* NEWS: Mention the new feature.\n\ngas\t* testsuite/gas/ia64/group-2.d: Add -T option to readelf\n\tcommand line.\n\t* testsuite/gas/ia64/unwind.d: Likewise.\n\t* testsuite/gas/mmix/bspec-1.d: Likewise.\n\t* testsuite/gas/mmix/bspec-2.d: Likewise.\n\t* testsuite/gas/mmix/comment-1.d: Likewise.\n\t* testsuite/gas/tic6x/scomm-directive-4.d: Likewise.\n\nld\t* testsuite/ld-powerpc/powerpc.exp: Add -T option to readelf\n\tcommand line when running some tests.\n\t* testsuite/ld-arm/arm-elf.exp: Likewise.\n\t* testsuite/ld-mips-elf/mips-elf.exp: Likewise.\n\t* testsuite/ld-mmix/local1.d: Likewise.\n\t* testsuite/ld-mmix/local3.d: Likewise.\n\t* testsuite/ld-mmix/local5.d: Likewise.\n\t* testsuite/ld-mmix/local7.d: Likewise.\n\t* testsuite/ld-powerpc/powerpc.exp: Likewise.",
    "tree": {
      "sha": "b9a60c0257ad7aa26fe5985f5ae279db2e4528cd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b9a60c0257ad7aa26fe5985f5ae279db2e4528cd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0942c7ab94e554657c3e11ab85ae7f15373ee80d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0942c7ab94e554657c3e11ab85ae7f15373ee80d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0942c7ab94e554657c3e11ab85ae7f15373ee80d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0942c7ab94e554657c3e11ab85ae7f15373ee80d/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1cdf9e33eadd3bf091fe64ed30daa0263f736ea2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1cdf9e33eadd3bf091fe64ed30daa0263f736ea2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1cdf9e33eadd3bf091fe64ed30daa0263f736ea2"
    }
  ],
  "stats": {
    "total": 141,
    "additions": 116,
    "deletions": 25
  },
  "files": [
    {
      "sha": "fee8c1d5016bedb1e392149e313dba8f15cd5f77",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -1,3 +1,14 @@\n+2020-07-02  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26028\n+\t* readelf.c (print_symbol): Handle truncation of symbol names.\n+\t(options): Add -T/--silent-truncation option.\n+\t(parse_args): Handle the option.\n+\t(print_dynamic_symbol): Correct calculation of width available to\n+\tdisplay symbol name.\n+\t* doc/binutils.texi: Document the -T option to readelf.\n+\t* NEWS: Mention the new feature.\n+\n 2020-06-30  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* NEWS: Mention x86 NaCl target support removal."
    },
    {
      "sha": "1da8a8640332411a4f93733f2e1accadd506da55",
      "filename": "binutils/NEWS",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/binutils/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/binutils/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/NEWS?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -1,5 +1,11 @@\n -*- text -*-\n \n+* Changed readelf's display of symbol names when wide mode is not enabled.\n+  If the name is too long it will be truncated and the last five characters\n+  replaced with \"[...]\".  The old behaviour of displaying 5 more characters but\n+  not indicating that truncation has happened can be restored by the use of the\n+  -T or --silent-truncation options.\n+\n * X86 NaCl target support is removed.\n \n * The readelf tool now has a -L or --lint or --enable-checks option which turns"
    },
    {
      "sha": "f19862655bdfc08565a1d9297525c66966fcff59",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -4726,6 +4726,7 @@ readelf [@option{-a}|@option{--all}]\n         [@option{-I}|@option{--histogram}]\n         [@option{-v}|@option{--version}]\n         [@option{-W}|@option{--wide}]\n+        [@option{-T}|@option{--silent-truncation}]\n         [@option{-H}|@option{--help}]\n         @var{elffile}@dots{}\n @c man end\n@@ -4939,6 +4940,15 @@ Don't break output lines to fit into 80 columns. By default\n @command{readelf} to print each section header resp. each segment one a\n single line, which is far more readable on terminals wider than 80 columns.\n \n+@item -T\n+@itemx --silent-truncation\n+Normally when readelf is displaying a symbol name, and it has to\n+truncate the name to fit into an 80 column display, it will add a\n+suffix of @code{[...]} to the name.  This command line option\n+disables this behaviour, allowing 5 more characters of the name to be\n+displayed and restoring the old behaviour of readelf (prior to release\n+2.35).\n+\n @item -H\n @itemx --help\n Display the command-line options understood by @command{readelf}."
    },
    {
      "sha": "6057515a89bd211de9e06c43a1f1006fc1bf824c",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 47,
      "deletions": 7,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -234,6 +234,7 @@ static bfd_boolean do_archive_index = FALSE;\n static bfd_boolean check_all = FALSE;\n static bfd_boolean is_32bit_elf = FALSE;\n static bfd_boolean decompress_dumps = FALSE;\n+static bfd_boolean do_not_show_symbol_truncation = FALSE;\n \n static char *dump_ctf_parent_name;\n static char *dump_ctf_symtab_name;\n@@ -533,15 +534,19 @@ print_vma (bfd_vma vma, print_mode mode)\n \n    Display at most abs(WIDTH) characters, truncating as necessary, unless do_wide is true.\n \n+   If truncation will happen and do_not_show_symbol_truncation is FALSE then display\n+   abs(WIDTH) - 5 characters followed by \"[...]\".\n+\n    If WIDTH is negative then ensure that the output is at least (- WIDTH) characters,\n    padding as necessary.\n \n    Returns the number of emitted characters.  */\n \n static unsigned int\n-print_symbol (signed int width, const char *symbol)\n+print_symbol (signed int width, const char * symbol)\n {\n   bfd_boolean extra_padding = FALSE;\n+  bfd_boolean do_dots = FALSE;\n   signed int num_printed = 0;\n #ifdef HAVE_MBSTATE_T\n   mbstate_t state;\n@@ -562,7 +567,17 @@ print_symbol (signed int width, const char *symbol)\n        This simplifies the code below.  */\n     width_remaining = INT_MAX;\n   else\n-    width_remaining = width;\n+    {\n+      width_remaining = width;\n+      if (! do_not_show_symbol_truncation\n+\t  && (int) strlen (symbol) > width)\n+\t{\n+\t  width_remaining -= 5;\n+\t  if ((int) width_remaining < 0)\n+\t    width_remaining = 0;\n+\t  do_dots = TRUE;\n+\t}\n+    }\n \n #ifdef HAVE_MBSTATE_T\n   /* Initialise the multibyte conversion state.  */\n@@ -618,6 +633,9 @@ print_symbol (signed int width, const char *symbol)\n \t}\n     }\n \n+  if (do_dots)\n+    num_printed += printf (\"[...]\");\n+\n   if (extra_padding && num_printed < width)\n     {\n       /* Fill in the remaining spaces.  */\n@@ -4512,6 +4530,7 @@ static struct option options[] =\n \n   {\"version\",\t       no_argument, 0, 'v'},\n   {\"wide\",\t       no_argument, 0, 'W'},\n+  {\"silent-truncation\",no_argument, 0, 'T'},\n   {\"help\",\t       no_argument, 0, 'H'},\n   {0,\t\t       no_argument, 0, 0}\n };\n@@ -4579,6 +4598,7 @@ usage (FILE * stream)\n   fprintf (stream, _(\"\\\n   -I --histogram         Display histogram of bucket list lengths\\n\\\n   -W --wide              Allow output width to exceed 80 characters\\n\\\n+  -T --silent-truncation If a symbol name is truncated, do not add a suffix [...]\\n\\\n   @<file>                Read options from <file>\\n\\\n   -H --help              Display this information\\n\\\n   -v --version           Display the version number of readelf\\n\"));\n@@ -4673,7 +4693,7 @@ parse_args (struct dump_data *dumpdata, int argc, char ** argv)\n     usage (stderr);\n \n   while ((c = getopt_long\n-\t  (argc, argv, \"ADHILNR:SVWacdeghi:lnp:rstuvw::x:z\", options, NULL)) != EOF)\n+\t  (argc, argv, \"ADHILNR:STVWacdeghi:lnp:rstuvw::x:z\", options, NULL)) != EOF)\n     {\n       switch (c)\n \t{\n@@ -4832,6 +4852,9 @@ parse_args (struct dump_data *dumpdata, int argc, char ** argv)\n \tcase 'W':\n \t  do_wide = TRUE;\n \t  break;\n+\tcase 'T':\n+\t  do_not_show_symbol_truncation = TRUE;\n+\t  break;\n \tdefault:\n \t  /* xgettext:c-format */\n \t  error (_(\"Invalid option '-%c'\\n\"), c);\n@@ -12032,7 +12055,7 @@ print_dynamic_symbol (Filedata *filedata, unsigned long si,\n   enum versioned_symbol_info sym_info;\n   unsigned short vna_other;\n   Elf_Internal_Sym *psym = symtab + si;\n-\n+  \n   printf (\"%6ld: \", si);\n   print_vma (psym->st_value, LONG_HEX);\n   putchar (' ');\n@@ -12053,16 +12076,33 @@ print_dynamic_symbol (Filedata *filedata, unsigned long si,\n \tprintf (\" [%s] \", get_symbol_other (filedata, psym->st_other ^ vis));\n     }\n   printf (\" %4s \", get_symbol_index_type (filedata, psym->st_shndx));\n-  print_symbol (25, VALID_SYMBOL_NAME (strtab, strtab_size,\n-\t\t\t\t       psym->st_name)\n-\t\t? strtab + psym->st_name : _(\"<corrupt>\"));\n+\n+  bfd_boolean is_valid = VALID_SYMBOL_NAME (strtab, strtab_size,\n+\t\t\t\t\t    psym->st_name);\n+  const char * sstr = is_valid  ? strtab + psym->st_name : _(\"<corrupt>\");\n \n   version_string\n     = get_symbol_version_string (filedata,\n \t\t\t\t (section == NULL\n \t\t\t\t  || section->sh_type == SHT_DYNSYM),\n \t\t\t\t strtab, strtab_size, si,\n \t\t\t\t psym, &sym_info, &vna_other);\n+  \n+  int len_avail = 21;\n+  if (! do_wide && version_string != NULL)\n+    {\n+      char buffer[256];\n+\n+      len_avail -= sprintf (buffer, \"@%s\", version_string);\n+\n+      if (sym_info == symbol_undefined)\n+\tlen_avail -= sprintf (buffer,\" (%d)\", vna_other);\n+      else if (sym_info != symbol_hidden)\n+\tlen_avail -= 1;\n+    }\n+\n+  print_symbol (len_avail, sstr);\n+    \n   if (version_string)\n     {\n       if (sym_info == symbol_undefined)"
    },
    {
      "sha": "864c6cde220f494df659e5a0cdbbaeef0694912a",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -1,3 +1,14 @@\n+2020-07-02  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26028\n+\t* testsuite/gas/ia64/group-2.d: Add -T option to readelf\n+\tcommand line.\n+\t* testsuite/gas/ia64/unwind.d: Likewise.\n+\t* testsuite/gas/mmix/bspec-1.d: Likewise.\n+\t* testsuite/gas/mmix/bspec-2.d: Likewise.\n+\t* testsuite/gas/mmix/comment-1.d: Likewise.\n+\t* testsuite/gas/tic6x/scomm-directive-4.d: Likewise.\n+\n 2020-07-01  Alan Modra  <amodra@gmail.com>\n \n \t* config/tc-xc16x.c (md_apply_fix): Add FIXME."
    },
    {
      "sha": "52a313a7d6fe662e64ad6bd9438cef5e64978177",
      "filename": "gas/testsuite/gas/ia64/group-2.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/testsuite/gas/ia64/group-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/testsuite/gas/ia64/group-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ia64/group-2.d?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -1,4 +1,4 @@\n-#readelf: -Sg\n+#readelf: -Sg -T\n #as: -x\n #name: ia64 unwind group\n "
    },
    {
      "sha": "3f0d2d3f61eff24899efd6c7211c568ca8c7519e",
      "filename": "gas/testsuite/gas/ia64/unwind.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/testsuite/gas/ia64/unwind.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/testsuite/gas/ia64/unwind.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ia64/unwind.d?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -1,4 +1,4 @@\n-#readelf: -S\n+#readelf: -S -T\n #name: ia64 unwind section\n \n There are 9 section headers, starting at offset .*:"
    },
    {
      "sha": "2a9a59bfd8ea78089ca8f5f749e38b180922b8a8",
      "filename": "gas/testsuite/gas/mmix/bspec-1.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/testsuite/gas/mmix/bspec-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/testsuite/gas/mmix/bspec-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/mmix/bspec-1.d?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -1,4 +1,4 @@\n-#readelf: -Ssr -x1 -x4\n+#readelf: -Ssr -T -x1 -x4\n There are 9 section headers, starting at offset .*:\n #...\n  +\\[ 4\\] \\.MMIX\\.spec_data\\.2 +PROGBITS +0+ +0+44"
    },
    {
      "sha": "2ade9b6d17355c13581a896f0c22379d4b04fdba",
      "filename": "gas/testsuite/gas/mmix/bspec-2.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/testsuite/gas/mmix/bspec-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/testsuite/gas/mmix/bspec-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/mmix/bspec-2.d?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -1,4 +1,4 @@\n-#readelf: -Sr -x1 -x4\n+#readelf: -Sr -T -x1 -x4\n There are 11 section headers, starting at offset .*:\n #...\n   \\[ 4\\] \\.MMIX\\.spec_data\\.2 PROGBITS         0+  0+48"
    },
    {
      "sha": "569af6022c8d1f9d39168ca1e486a71bf131f0ca",
      "filename": "gas/testsuite/gas/mmix/comment-1.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/testsuite/gas/mmix/comment-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/testsuite/gas/mmix/comment-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/mmix/comment-1.d?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -1,5 +1,5 @@\n #as: -no-expand\n-#readelf: -Ssrx1 -x6\n+#readelf: -Ssrx1 -T -x6\n There are 10 section headers, starting at offset 0x...:\n #...\n  +\\[ 5\\] \\.MMIX\\.spec_data\\.4 +PROGBITS +0+ +0+c4"
    },
    {
      "sha": "26255ab97a2367dc25dc09419fa1e9ca58b27826",
      "filename": "gas/testsuite/gas/tic6x/scomm-directive-4.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/testsuite/gas/tic6x/scomm-directive-4.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/gas/testsuite/gas/tic6x/scomm-directive-4.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/tic6x/scomm-directive-4.d?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -1,7 +1,7 @@\n #name: C6X .scomm directive 4\n #as:\n #source: scomm-directive-4.s\n-#readelf: -Ss\n+#readelf: -Ss -T\n \n There are 8 section headers, starting at offset .*:\n "
    },
    {
      "sha": "156bcbaab8ae1ab37a7ba8923575482d8a6ed25b",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -1,3 +1,16 @@\n+2020-07-02  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26028\n+\t* testsuite/ld-powerpc/powerpc.exp: Add -T option to readelf\n+\tcommand line when running some tests.\n+\t* testsuite/ld-arm/arm-elf.exp: Likewise.\n+\t* testsuite/ld-mips-elf/mips-elf.exp: Likewise.\n+\t* testsuite/ld-mmix/local1.d: Likewise.\n+\t* testsuite/ld-mmix/local3.d: Likewise.\n+\t* testsuite/ld-mmix/local5.d: Likewise.\n+\t* testsuite/ld-mmix/local7.d: Likewise.\n+\t* testsuite/ld-powerpc/powerpc.exp: Likewise.\n+\n 2020-06-30  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* Makefile.am (ALL_EMULATION_SOURCES): Remove eelf_i386_nacl.c,"
    },
    {
      "sha": "1289317d80d5eb61115073b286d179d31e2b29f9",
      "filename": "ld/testsuite/ld-arm/arm-elf.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-arm/arm-elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-arm/arm-elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-arm/arm-elf.exp?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -794,15 +794,15 @@ set armeabitests_nonacl {\n      \"--section-start .gnu.sgstubs=0x20000 --out-implib=tmpdir/cmse-implib.lib --cmse-implib\" \"\"\n      \"-march=armv8-m.base -mthumb --defsym VER=1\"\n      {cmse-implib.s}\n-     {{readelf {-s tmpdir/cmse-implib.lib} cmse-implib.rd}\n+     {{readelf {-s --wide tmpdir/cmse-implib.lib} cmse-implib.rd}\n       {readelf {-h tmpdir/cmse-implib.lib} cmse-implib.type}}\n      \"cmse-implib\"}\n     {\"Input secure gateway import library\"\n      \"--section-start .gnu.sgstubs=0x20000 --out-implib=tmpdir/cmse-new-implib.lib --in-implib=tmpdir/cmse-implib.lib --cmse-implib\" \"\"\n      \"-march=armv8-m.base -mthumb --defsym VER=2\"\n      {cmse-implib.s}\n      {{ld cmse-new-implib.out}\n-      {readelf {-s tmpdir/cmse-new-implib.lib} cmse-new-implib.rd}}\n+      {readelf {-s --wide tmpdir/cmse-new-implib.lib} cmse-new-implib.rd}}\n      \"cmse-new-implib\"}\n     {\"Input secure gateway import library: no output import library\"\n      \"--section-start .gnu.sgstubs=0x20000 --in-implib=tmpdir/cmse-implib.lib --cmse-implib\" \"\"\n@@ -832,7 +832,7 @@ set armeabitests_nonacl {\n      \"--section-start .gnu.sgstubs=0x20000 --out-implib=tmpdir/cmse-new-comeback-implib.lib --in-implib=tmpdir/cmse-implib.lib --cmse-implib\" \"\"\n      \"-march=armv8-m.base -mthumb --defsym VER=3\"\n      {cmse-implib.s}\n-     {{readelf {-s tmpdir/cmse-new-comeback-implib.lib} cmse-new-comeback-implib.rd}}\n+     {{readelf {-s --wide tmpdir/cmse-new-comeback-implib.lib} cmse-new-comeback-implib.rd}}\n      \"cmse-new-comeback-implib\"}\n     {\"Input secure gateway import library: entry function change\"\n      \"--section-start .gnu.sgstubs=0x20000 --out-implib=tmpdir/cmse-new-wrong-implib.lib --in-implib=tmpdir/cmse-implib.lib --cmse-implib\" \"\""
    },
    {
      "sha": "e98429c80102b10b4f645558328278c31ed3e4ba",
      "filename": "ld/testsuite/ld-mips-elf/mips-elf.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-mips-elf/mips-elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-mips-elf/mips-elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mips-elf/mips-elf.exp?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -29,7 +29,7 @@ if {[istarget \"mips*-*-vxworks\"]} {\n \t{\"VxWorks executable test 1 (dynamic)\" \\\n \t \"tmpdir/libvxworks1.so -Tvxworks1.ld -q --force-dynamic\" \"\"\n \t \"-mips2\" {vxworks1.s}\n-\t {{readelf --relocs vxworks1.rd} {objdump -dr vxworks1.dd}}\n+        {{readelf {--relocs -T} vxworks1.rd} {objdump -dr vxworks1.dd}}\n \t \"vxworks1\"}\n \t{\"VxWorks executable test 2 (dynamic)\" \\\n \t \"-Tvxworks1.ld -q --force-dynamic\" \"\"\n@@ -1575,7 +1575,7 @@ proc run_mips_undefweak_test { name abi args } {\n \t\t[list \\\n \t\t    [list objdump -d pr21375${objsuf}.dd] \\\n \t\t    [list readelf -A pr21375${rdesuf}.gd] \\\n-\t\t    [list readelf --dyn-syms pr21375${rdesuf}${irixsuf}.sd] \\\n+\t\t    [list readelf {--dyn-syms --wide} pr21375${rdesuf}${irixsuf}.sd] \\\n \t\t    [list readelf -h pr21375${abisuf}.hd]] \\\n \t\t\"pr21375${binsuf}${dsosuf}\"]]\n     }"
    },
    {
      "sha": "7519ea1b4190d8148fa834520ab74f7650056623",
      "filename": "ld/testsuite/ld-mmix/local1.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-mmix/local1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-mmix/local1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mmix/local1.d?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -4,7 +4,7 @@\n #source: regext1.s\n #source: start.s\n #ld: -m elf64mmix\n-#readelf: -Ssx1 -x2\n+#readelf: -Ssx1 -T -x2\n \n # We check that the externally visible symbol ext1 is a local register\n # (different meaning of \"local\" than for symbol), which can be seen as"
    },
    {
      "sha": "e5d58938ab3261304384862d57e03788a10a83af",
      "filename": "ld/testsuite/ld-mmix/local3.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-mmix/local3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-mmix/local3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mmix/local3.d?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -4,7 +4,7 @@\n #source: ext1.s\n #source: start.s\n #ld: -m elf64mmix\n-#readelf: -Ssx1 -x2\n+#readelf: -Ssx1 -T -x2\n \n # Like local1, but ext1 is here a constant, not a global register.\n "
    },
    {
      "sha": "2dccb2e1114ada95600ab919eb0a42e9d6439df6",
      "filename": "ld/testsuite/ld-mmix/local5.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-mmix/local5.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-mmix/local5.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mmix/local5.d?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -5,7 +5,7 @@\n #source: regext1.s\n #source: start.s\n #ld: -m elf64mmix\n-#readelf: -Ssx1 -x2\n+#readelf: -Ssx1 -T -x2\n \n # Like local1, but with two checks for a local register.\n "
    },
    {
      "sha": "5754c34637105adbc4612719b45548d146ea6615",
      "filename": "ld/testsuite/ld-mmix/local7.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-mmix/local7.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-mmix/local7.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mmix/local7.d?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -5,7 +5,7 @@\n #source: ext1.s\n #source: start.s\n #ld: -m elf64mmix\n-#readelf: -Ssx1 -x2\n+#readelf: -Ssx1 -T -x2\n \n # Like local1, but ext1 is here a constant, not a global register and two\n # local-register checks."
    },
    {
      "sha": "3e458e47e864f2d6f6b773b0e8eb1b276eb3d26b",
      "filename": "ld/testsuite/ld-powerpc/powerpc.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-powerpc/powerpc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0942c7ab94e554657c3e11ab85ae7f15373ee80d/ld/testsuite/ld-powerpc/powerpc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/powerpc.exp?ref=0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "patch": "@@ -32,13 +32,13 @@ if {[istarget \"*-*-vxworks\"]} {\n \t{\"VxWorks shared library test 1\"\n \t \"-shared --hash-style=sysv -Tvxworks1.ld\" \"\"\n \t \"-mregnames\" {vxworks1-lib.s}\n-\t {{readelf --relocs vxworks1-lib.rd} {objdump -dr vxworks1-lib.dd}\n+         {{readelf {--relocs -T} vxworks1-lib.rd} {objdump -dr vxworks1-lib.dd}\n \t  {readelf --symbols vxworks1-lib.nd} {readelf -d vxworks1-lib.td}}\n \t \"libvxworks1.so\"}\n \t{\"VxWorks executable test 1 (dynamic)\" \\\n \t \"tmpdir/libvxworks1.so -Tvxworks1.ld -q --force-dynamic --hash-style=sysv\" \"\"\n \t \"-mregnames\" {vxworks1.s}\n-\t {{readelf --relocs vxworks1.rd} {objdump -dr vxworks1.dd}}\n+         {{readelf {--relocs -T} vxworks1.rd} {objdump -dr vxworks1.dd}}\n \t \"vxworks1\"}\n \t{\"VxWorks executable test 2 (dynamic)\" \\\n \t \"-Tvxworks1.ld -q --force-dynamic --hash-style=sysv\" \"\"\n@@ -58,7 +58,7 @@ if {[istarget \"*-*-vxworks\"]} {\n \t{\"VxWorks relocatable relax test\"\n \t \"-Tvxworks1.ld -r --relax -q --hash-style=sysv\" \"\"\n \t \"-mregnames\" {vxworks-relax-2.s}\n-\t {{readelf --relocs vxworks-relax-2.rd}}\n+         {{readelf {--relocs -T} vxworks-relax-2.rd}}\n \t \"vxworks-relax-2\"}\n     }\n     run_ld_link_tests $ppcvxtests"
    }
  ]
}