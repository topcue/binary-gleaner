{
  "sha": "0618ecf6eb99dce0278102a88f622f28e3ecd837",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDYxOGVjZjZlYjk5ZGNlMDI3ODEwMmE4OGY2MjJmMjhlM2VjZDgzNw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-05T15:52:29Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-06T09:44:29Z"
    },
    "message": "gdb/guile: don't try to print location for watchpoints\n\nCurrently, using the guile API, if a user tries to print a breakpoint\nobject that represents a watchpoint, then GDB will crash.  For\nexample:\n\n  (gdb) guile (use-modules (gdb))\n  (gdb) guile (define wp1 (make-breakpoint \"some_variable\" #:type BP_WATCHPOINT #:wp-class WP_WRITE))\n  (gdb) guile (register-breakpoint! wp1)\n  (gdb) guile (display wp1) (newline)\n  Aborted (core dumped)\n\nThis turns out to be because GDB calls event_location_to_string on the\nbreakpoints location, and watchpoint breakpoints don't have a\nlocation.\n\nThis commit resolves the crash by just skipping the printing of the\nlocation if the breakpoint doesn't have one.\n\nPotentially, we could improve on this by printing details about what\nthe watchpoint is watching, however, I'm considering this a possible\nfuture enhancement, this commit focuses just on having GDB not crash.\n\ngdb/ChangeLog:\n\n\t* guile/scm-breakpoint.c (bpscm_print_breakpoint_smob): Only print\n\tbreakpoint locations when the breakpoint actually has a location.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.guile/scm-breakpoint.exp (test_watchpoints): Print the\n\twatchpoint object before and after registering it with GDB.",
    "tree": {
      "sha": "50fd21fbd4a963082ad8c833f4fb1978ff37f650",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/50fd21fbd4a963082ad8c833f4fb1978ff37f650"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0618ecf6eb99dce0278102a88f622f28e3ecd837",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0618ecf6eb99dce0278102a88f622f28e3ecd837",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0618ecf6eb99dce0278102a88f622f28e3ecd837",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0618ecf6eb99dce0278102a88f622f28e3ecd837/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a7ed4ea6af8a333fccf1760cf38bf7d3634afd59",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7ed4ea6af8a333fccf1760cf38bf7d3634afd59",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a7ed4ea6af8a333fccf1760cf38bf7d3634afd59"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 21,
    "deletions": 5
  },
  "files": [
    {
      "sha": "187249db47eab7aea643ab5f1df3e8418a883d23",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0618ecf6eb99dce0278102a88f622f28e3ecd837/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0618ecf6eb99dce0278102a88f622f28e3ecd837/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0618ecf6eb99dce0278102a88f622f28e3ecd837",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* guile/scm-breakpoint.c (bpscm_print_breakpoint_smob): Only print\n+\tbreakpoint locations when the breakpoint actually has a location.\n+\n 2021-05-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* mi/mi-cmd-break.c (mi_cmd_break_condition): New function."
    },
    {
      "sha": "826dfa9b0a38fe3024585fb5ced4ed0a26515bd4",
      "filename": "gdb/guile/scm-breakpoint.c",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0618ecf6eb99dce0278102a88f622f28e3ecd837/gdb/guile/scm-breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0618ecf6eb99dce0278102a88f622f28e3ecd837/gdb/guile/scm-breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-breakpoint.c?ref=0618ecf6eb99dce0278102a88f622f28e3ecd837",
      "patch": "@@ -174,8 +174,6 @@ bpscm_print_breakpoint_smob (SCM self, SCM port, scm_print_state *pstate)\n   /* Careful, the breakpoint may be invalid.  */\n   if (b != NULL)\n     {\n-      const char *str;\n-\n       gdbscm_printf (port, \" %s %s %s\",\n \t\t     bpscm_type_to_string (b->type),\n \t\t     bpscm_enable_state_to_string (b->enable_state),\n@@ -184,9 +182,12 @@ bpscm_print_breakpoint_smob (SCM self, SCM port, scm_print_state *pstate)\n       gdbscm_printf (port, \" hit:%d\", b->hit_count);\n       gdbscm_printf (port, \" ignore:%d\", b->ignore_count);\n \n-      str = event_location_to_string (b->location.get ());\n-      if (str != NULL)\n-\tgdbscm_printf (port, \" @%s\", str);\n+      if (b->location != nullptr)\n+\t{\n+\t  const char *str = event_location_to_string (b->location.get ());\n+\t  if (str != nullptr)\n+\t    gdbscm_printf (port, \" @%s\", str);\n+\t}\n     }\n \n   scm_puts (\">\", port);"
    },
    {
      "sha": "a6050d640fedbcbc581d58e4003ed3d9ef4f973d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0618ecf6eb99dce0278102a88f622f28e3ecd837/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0618ecf6eb99dce0278102a88f622f28e3ecd837/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=0618ecf6eb99dce0278102a88f622f28e3ecd837",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.guile/scm-breakpoint.exp (test_watchpoints): Print the\n+\twatchpoint object before and after registering it with GDB.\n+\n 2021-05-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.guile/scm-breakpoint.exp (test_bkpt_basic): Convert to"
    },
    {
      "sha": "56058942e64637f1d2d3aa5690d13ba3a54be2f8",
      "filename": "gdb/testsuite/gdb.guile/scm-breakpoint.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0618ecf6eb99dce0278102a88f622f28e3ecd837/gdb/testsuite/gdb.guile/scm-breakpoint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0618ecf6eb99dce0278102a88f622f28e3ecd837/gdb/testsuite/gdb.guile/scm-breakpoint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.guile/scm-breakpoint.exp?ref=0618ecf6eb99dce0278102a88f622f28e3ecd837",
      "patch": "@@ -248,8 +248,13 @@ proc_with_prefix test_watchpoints { } {\n \n     gdb_scm_test_silent_cmd  \"guile (define wp1 (make-breakpoint \\\"result\\\" #:type BP_WATCHPOINT #:wp-class WP_WRITE))\" \\\n \t\"create watchpoint\"\n+    gdb_test \"guile (display wp1) (newline)\" \"#<gdb:breakpoint #-1>\" \\\n+\t\"print watchpoint before registering\"\n     gdb_scm_test_silent_cmd \"guile (register-breakpoint! wp1)\" \\\n \t\"register wp1\"\n+    gdb_test \"guile (display wp1) (newline)\" \\\n+\t\"#<gdb:breakpoint #${decimal} BP_(?:HARDWARE_)?WATCHPOINT enabled noisy hit:0 ignore:0>\" \\\n+\t\"print watchpoint after registering\"\n     gdb_test \"continue\" \\\n \t\".*\\[Ww\\]atchpoint.*result.*Old value = 0.*New value = 25.*main.*\" \\\n \t\"test watchpoint write\""
    }
  ]
}