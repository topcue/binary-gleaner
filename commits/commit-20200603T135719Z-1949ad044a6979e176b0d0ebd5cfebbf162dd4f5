{
  "sha": "1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTk0OWFkMDQ0YTY5NzllMTc2YjBkMGViZDVjZmViYmYxNjJkZDRmNQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-06-03T13:47:38Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-06-03T13:57:19Z"
    },
    "message": "ld: Pass -fno-sanitize=all to tests with linker\n\nWhen binutils is compiled with -fsanitize=undefined, many tests with\nlinker, instead of $CC, fail with undefined symbol references to sanitize\nlibrary.  Define NOSANTIZE_CFLAGS to -fno-sanitize=all if target compiler\nsupports it and compile such tests with $NOSANTIZE_CFLAGS.\n\n\t* testsuite/config/default.exp (NOSANTIZE_CFLAGS): New.\n\t* testsuite/ld-elf/linux-x86.exp: Add $NOSANTIZE_CFLAGS to\n\ttests with run_ld_link_exec_tests.\n\t* testsuite/ld-elf/shared.exp: Add $NOSANTIZE_CFLAGS to tests\n\twith run_ld_link_tests.\n\t* testsuite/ld-elf/tls.exp: Likewise.\n\t* testsuite/ld-elfweak/elfweak.exp: Add $NOSANTIZE_CFLAGS to\n\ttests with ld_link.\n\t* testsuite/ld-gc/gc.exp: Add $NOSANTIZE_CFLAGS to cflags.\n\t* testsuite/ld-plugin/lto.exp: Add $NOSANTIZE_CFLAGS to tests\n\twith run_ld_link_tests.a\n\t* testsuite/ld-plugin/plugin.exp: Append $NOSANTIZE_CFLAGS to\n\tCFLAGS.\n\t* testsuite/ld-selective/selective.exp: Add $NOSANTIZE_CFLAGS\n\tto cflags and cxxflags.\n\t* testsuite/ld-srec/srec.exp: Append $NOSANTIZE_CFLAGS to CC\n\tand CXX.\n\t* testsuite/ld-x86-64/plt-main-ibt-x32.dd: Updated for\n\t-fsanitize=undefined.\n\t* testsuite/ld-x86-64/plt-main-ibt.dd: Likewise.\n\t* testsuite/ld-x86-64/x86-64.exp: Add $NOSANTIZE_CFLAGS to\n\ttests with run_cc_link_tests and run_ld_link_tests.",
    "tree": {
      "sha": "71903e6c42db856c5fcb343a440e561647d34370",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/71903e6c42db856c5fcb343a440e561647d34370"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7"
    }
  ],
  "stats": {
    "total": 153,
    "additions": 121,
    "deletions": 32
  },
  "files": [
    {
      "sha": "a0d759797c24a74355e70304951d4f854268d5b6",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -1,3 +1,28 @@\n+2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/config/default.exp (NOSANTIZE_CFLAGS): New.\n+\t* testsuite/ld-elf/linux-x86.exp: Add $NOSANTIZE_CFLAGS to\n+\ttests with run_ld_link_exec_tests.\n+\t* testsuite/ld-elf/shared.exp: Add $NOSANTIZE_CFLAGS to tests\n+\twith run_ld_link_tests.\n+\t* testsuite/ld-elf/tls.exp: Likewise.\n+\t* testsuite/ld-elfweak/elfweak.exp: Add $NOSANTIZE_CFLAGS to\n+\ttests with ld_link.\n+\t* testsuite/ld-gc/gc.exp: Add $NOSANTIZE_CFLAGS to cflags.\n+\t* testsuite/ld-plugin/lto.exp: Add $NOSANTIZE_CFLAGS to tests\n+\twith run_ld_link_tests.a\n+\t* testsuite/ld-plugin/plugin.exp: Append $NOSANTIZE_CFLAGS to\n+\tCFLAGS.\n+\t* testsuite/ld-selective/selective.exp: Add $NOSANTIZE_CFLAGS\n+\tto cflags and cxxflags.\n+\t* testsuite/ld-srec/srec.exp: Append $NOSANTIZE_CFLAGS to CC\n+\tand CXX.\n+\t* testsuite/ld-x86-64/plt-main-ibt-x32.dd: Updated for\n+\t-fsanitize=undefined.\n+\t* testsuite/ld-x86-64/plt-main-ibt.dd: Likewise.\n+\t* testsuite/ld-x86-64/x86-64.exp: Add $NOSANTIZE_CFLAGS to\n+\ttests with run_cc_link_tests and run_ld_link_tests.\n+\n 2020-06-03  Fangrui Song  <maskray@google.com>\n \t    H.J. Lu  <hongjiu.lu@intel.com>\n "
    },
    {
      "sha": "4f0b76d8317e875cfd1dcc539ae805c3c809f16f",
      "filename": "ld/testsuite/config/default.exp",
      "status": "modified",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/config/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/config/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/config/default.exp?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -579,3 +579,41 @@ if { ![info exists STATIC_PIE_LDFLAGS] } then {\n \tset STATIC_PIE_LDFLAGS \"\"\n     }\n }\n+\n+# Set NOSANTIZE_CFLAGS to \"-fno-sanitize=all\" if target compiler\n+# supports it.\n+\n+if { ![info exists NOSANTIZE_CFLAGS] } then {\n+    if { [check_compiler_available] } {\n+\t# Check if gcc supports -fno-sanitize=all.\n+\tset flags \"\"\n+\tif [board_info [target_info name] exists cflags] {\n+\t    append flags \" [board_info [target_info name] cflags]\"\n+\t}\n+\tif [board_info [target_info name] exists ldflags] {\n+\t    append flags \" [board_info [target_info name] ldflags]\"\n+\t}\n+\n+\tset basename \"tmpdir/available[pid]\"\n+\tset src ${basename}.c\n+\tset output ${basename}\n+\tset f [open $src \"w\"]\n+\tputs $f \"int main (void) { return 0; }\"\n+\tclose $f\n+\tif [is_remote host] {\n+\t    set src [remote_download host $src]\n+\t}\n+\tset available [run_host_cmd_yesno \"$CC\" \"$flags -fno-sanitize=all $src -o $output\"]\n+\tremote_file host delete $src\n+\tremote_file host delete $output\n+\tfile delete $src\n+\n+\tif { $available == 1 } then {\n+\t    set NOSANTIZE_CFLAGS \"-fno-sanitize=all\"\n+\t} else {\n+\t    set NOSANTIZE_CFLAGS \"\"\n+\t}\n+    } else {\n+\tset NOSANTIZE_CFLAGS \"\"\n+    }\n+}"
    },
    {
      "sha": "39322df2b6c136fa5c557da07349d51f4a8194c5",
      "filename": "ld/testsuite/ld-elf/linux-x86.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-elf/linux-x86.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-elf/linux-x86.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/linux-x86.exp?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -56,6 +56,7 @@ if { ![isnative] || ![check_compiler_available] } {\n global PLT_CFLAGS\n # Add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if non-PIE is required.\n global NOPIE_CFLAGS NOPIE_LDFLAGS\n+global NOSANTIZE_CFLAGS\n \n run_ld_link_exec_tests [list \\\n     [list \\\n@@ -65,7 +66,7 @@ run_ld_link_exec_tests [list \\\n \t{ linux-x86.S pr23428.c dummy.s } \\\n \t\"pr23428\" \\\n \t\"pass.out\" \\\n-\t\"$NOPIE_CFLAGS -fno-asynchronous-unwind-tables\" \\\n+\t\"$NOPIE_CFLAGS $NOSANTIZE_CFLAGS -fno-asynchronous-unwind-tables\" \\\n \t\"asm\" \\\n     ] \\\n ]"
    },
    {
      "sha": "fe7a56de9adcba75261aa259e5f01dfa59b276ec",
      "filename": "ld/testsuite/ld-elf/shared.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-elf/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-elf/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/shared.exp?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -33,6 +33,7 @@ if ![check_shared_lib_support] {\n \n # Add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if non-PIE is required.\n global NOPIE_CFLAGS NOPIE_LDFLAGS\n+global NOSANTIZE_CFLAGS\n \n set old_ASFLAGS $ASFLAGS\n \n@@ -1510,7 +1511,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23161a.c } \\\n \t    {{readelf {--dyn-syms -rW} pr23161a.rd}} \\\n \t    \"libpr23161a.so\" \\\n-\t    \"-fPIC -O2\" \\\n+\t    \"-fPIC -O2 $NOSANTIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build pr23161a\" \\\n@@ -1520,7 +1521,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23161b.c } \\\n \t    {{readelf {--dyn-syms -rW} pr23161b.rd}} \\\n \t    \"pr23161a\" \\\n-\t    \"-fPIC -O0\" \\\n+\t    \"-fPIC -O0 $NOSANTIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build libpr23161b.so\" \\\n@@ -1530,7 +1531,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23161a.c } \\\n \t    {{readelf {--dyn-syms -rW} pr23161a.rd}} \\\n \t    \"libpr23161b.so\" \\\n-\t    \"-fPIC -O2\" \\\n+\t    \"-fPIC -O2 $NOSANTIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build pr23161b\" \\\n@@ -1540,7 +1541,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23161b.c } \\\n \t    {{readelf {--dyn-syms -rW} pr23161b.rd}} \\\n \t    \"pr23161b\" \\\n-\t    \"-fPIC -O0\" \\\n+\t    \"-fPIC -O0 $NOSANTIZE_CFLAGS\" \\\n \t] \\\n     ]\n }\n@@ -1556,7 +1557,7 @@ if { [istarget \"i?86-*-*\"]\n \t    { pr23161c.c } \\\n \t    {{readelf {--dyn-syms -rW} pr23161c.rd}} \\\n \t    \"libpr23161c.so\" \\\n-\t    \"-fPIC -O2\" \\\n+\t    \"-fPIC -O2 $NOSANTIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build pr23161c\" \\\n@@ -1566,7 +1567,7 @@ if { [istarget \"i?86-*-*\"]\n \t    { pr23161b.c } \\\n \t    {{readelf {--dyn-syms -rW} pr23161d.rd}} \\\n \t    \"pr23161c\" \\\n-\t    \"-fPIC -O0\" \\\n+\t    \"-fPIC -O0 $NOSANTIZE_CFLAGS\" \\\n \t] \\\n     ]\n }"
    },
    {
      "sha": "352d7ecca23f0aefe943cbfd306acc4e4a82b774",
      "filename": "ld/testsuite/ld-elf/tls.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-elf/tls.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-elf/tls.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/tls.exp?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -39,6 +39,8 @@ if [istarget \"sparc*-*-*\"] {\n     append AFLAGS_PIC \" -K PIC\"\n }\n \n+global NOSANTIZE_CFLAGS\n+\n run_ld_link_tests [list \\\n     [list \\\n \t\"Build pr22263-1\" \\\n@@ -48,6 +50,6 @@ run_ld_link_tests [list \\\n \t{ pr22263-1a.c pr22263-1b.c } \\\n \t{{readelf -r pr22263-1.rd}} \\\n \t\"pr22263-1\" \\\n-\t\"-fPIE -O2\" \\\n+\t\"-fPIE -O2 $NOSANTIZE_CFLAGS\" \\\n     ] \\\n ]"
    },
    {
      "sha": "f9e2b3ea72ed379dec7484efcb67773731eb063b",
      "filename": "ld/testsuite/ld-elfweak/elfweak.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-elfweak/elfweak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-elfweak/elfweak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfweak/elfweak.exp?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -65,6 +65,7 @@ set DOBJDUMP_FLAGS --dynamic-syms\n set SOBJDUMP_FLAGS --syms\n set shared \"--shared -Wl,--no-as-needed\"\n \n+global NOSANTIZE_CFLAGS\n \n #\n # objdump_symstuff\n@@ -306,13 +307,14 @@ proc build_exec { test execname objs flags dat dynsymexp symexp} {\n     global srcdir\n     global subdir\n     global exec_output\n+    global NOSANTIZE_CFLAGS\n \n     set files \"\"\n     foreach obj $objs {\n       set files \"$files $tmpdir/$obj\"\n     }\n \n-    if {![ld_link $CC $tmpdir/$execname \"$flags $files\"]} {\n+    if {![ld_link $CC $tmpdir/$execname \"$flags $NOSANTIZE_CFLAGS $files\"]} {\n \tfail \"$test\"\n \treturn\n     }\n@@ -439,7 +441,7 @@ run_dump_test $srcdir/$subdir/size2\n \n if {![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/alias.c $tmpdir/alias.o]\n     || ![ld_link $CC $tmpdir/alias.so \"$shared $tmpdir/alias.o\"]\n-    || ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/aliasmain.c $tmpdir/aliasmain.o]\n+    || ![ld_compile \"$CC $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/aliasmain.c $tmpdir/aliasmain.o]\n     || ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/weakref1.c $tmpdir/weakref1.o]\n     || ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/weakref2.c $tmpdir/weakref2.o]} then {\n     unresolved \"ELF weak (alias)\""
    },
    {
      "sha": "16ded5d9ab391c4961685980607db9c5b7ef0c80",
      "filename": "ld/testsuite/ld-gc/gc.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-gc/gc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-gc/gc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/gc.exp?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -23,7 +23,9 @@ if ![check_gc_sections_available] {\n     return\n }\n \n-set cflags \"-ffunction-sections -fdata-sections\"\n+global NOSANTIZE_CFLAGS\n+\n+set cflags \"-ffunction-sections -fdata-sections $NOSANTIZE_CFLAGS\"\n set objfile \"tmpdir/gc.o\"\n \n # Add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if non-PIE is required."
    },
    {
      "sha": "d888854e1f2cef02b8175cd2dba11405ec54b6c4",
      "filename": "ld/testsuite/ld-plugin/lto.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-plugin/lto.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-plugin/lto.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/lto.exp?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -38,6 +38,8 @@ set saved_CXXFLAGS \"$CXXFLAGS\"\n regsub -all \"(\\\\-Wp,)?-D_FORTIFY_SOURCE=\\[0-9\\]+\" $CFLAGS \"\" CFLAGS\n regsub -all \"(\\\\-Wp,)?-D_FORTIFY_SOURCE=\\[0-9\\]+\" $CXXFLAGS \"\" CXXFLAGS\n \n+global NOSANTIZE_CFLAGS\n+\n proc restore_notify { } {\n   global saved_CFLAGS\n   global saved_CXXFLAGS\n@@ -74,10 +76,11 @@ set lto_link_tests [list \\\n    \"-O2 -flto -fuse-linker-plugin\" \"-flto -fuse-linker-plugin\" \\\n    {lto-1a.c lto-1b.c} {} \"lto-1.exe\"] \\\n   [list \"Compile 2\" \\\n-   \"\" \"-O2 -flto -fuse-linker-plugin\" \\\n+   \"\" \"-O2 -flto -fuse-linker-plugin $NOSANTIZE_CFLAGS\" \\\n    {lto-2.c} {} \"\"] \\\n   [list \"LTO 2\" \\\n-   \"-static -O2 -flto -fuse-linker-plugin tmpdir/lto-2.o -lm\" \"\" \\\n+   \"-static -O2 -flto -fuse-linker-plugin tmpdir/lto-2.o -lm\" \\\n+   \"$NOSANTIZE_CFLAGS\" \\\n    {dummy.c} {} \"lto-2.exe\"] \\\n   [list \"Compile 3a\" \\\n    \"\" \"-flto\" \\\n@@ -143,10 +146,11 @@ set lto_link_tests [list \\\n    \"\" \"\" \\\n    {pr12758a.s} {} \"\"] \\\n   [list \"Build libpr12758.a\" \\\n-   \"\" \"-flto -O2 $lto_fat\" \\\n+   \"\" \"-flto -O2 $lto_fat $NOSANTIZE_CFLAGS\" \\\n    {pr12758b.c} {} \"libpr12758.a\"] \\\n   [list \"PR ld/12758\" \\\n-   \"-O2 -Wl,-e,foo -nostdlib -flto -fuse-linker-plugin tmpdir/pr12758a.o -Wl,--start-group tmpdir/libpr12758.a -Wl,--end-group\" \"\" \\\n+   \"-O2 -Wl,-e,foo -nostdlib -flto -fuse-linker-plugin tmpdir/pr12758a.o -Wl,--start-group tmpdir/libpr12758.a -Wl,--end-group\" \\\n+   \"$NOSANTIZE_CFLAGS\" \\\n    {dummy.c} {} \"pr12758.exe\"] \\\n   [list \"Compile PR ld/12760\" \\\n    \"\" \"-g -O0\" \\"
    },
    {
      "sha": "381fc798d45f5795471f64c3fedf43a077c55d41",
      "filename": "ld/testsuite/ld-plugin/plugin.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-plugin/plugin.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-plugin/plugin.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/plugin.exp?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -95,6 +95,9 @@ if { [istarget m681*-*-*] || [istarget m68hc1*-*-*] || [istarget m9s12x*-*-*] }\n set failed_compile 0\n set _ \"\"\n set plugin_nm_output \"\"\n+global NOSANTIZE_CFLAGS\n+set old_CFLAGS \"$CFLAGS\"\n+append CFLAGS \" $NOSANTIZE_CFLAGS\"\n if { $can_compile && \\\n \t(![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/main.c tmpdir/main.o] \\\n \t|| ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/func.c tmpdir/func.o] \\\n@@ -105,6 +108,7 @@ if { $can_compile && \\\n     # Defer fail until we have list of tests set.\n     set failed_compile 1\n }\n+set CFLAGS \"$old_CFLAGS\"\n \n set dotsym 0\n if { $can_compile && !$failed_compile } {"
    },
    {
      "sha": "f25b0e20cf144f5e4bd7de1fcacf4fed287cf337",
      "filename": "ld/testsuite/ld-selective/selective.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-selective/selective.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-selective/selective.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-selective/selective.exp?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -46,8 +46,9 @@ set seltests {\n     {A::foo() B::foo() dropme1() dropme2()} {*-*-*}}\n }\n \n-set cflags \"-w -O -ffunction-sections -fdata-sections\"\n-set cxxflags \"-fno-exceptions -fno-rtti\"\n+global NOSANTIZE_CFLAGS\n+set cflags \"-w -O -ffunction-sections -fdata-sections $NOSANTIZE_CFLAGS\"\n+set cxxflags \"-fno-exceptions -fno-rtti $NOSANTIZE_CFLAGS\"\n set ldflags \"--gc-sections -Bstatic\"\n \n if [istarget mips*-*] {"
    },
    {
      "sha": "0d607f53d0be2e58b65a1ce0638e944517375551",
      "filename": "ld/testsuite/ld-srec/srec.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-srec/srec.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-srec/srec.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-srec/srec.exp?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -351,11 +351,12 @@ if { ![check_compiler_available] } {\n # Pass -fplt to CC and CXX since -fno-plt doesn't work with S-records\n # tests. Also add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if PIE doesn't work\n # with S-records.  Also add $NOCF_PROTECTION_CFLAGS for S-records.\n-global PLT_CFLAGS NOPIE_CFLAGS NOPIE_LDFLAGS NOCF_PROTECTION_CFLAGS\n+# Also add $NOSANTIZE_CFLAGS for S-records.\n+global PLT_CFLAGS NOPIE_CFLAGS NOPIE_LDFLAGS NOCF_PROTECTION_CFLAGS NOSANTIZE_CFLAGS\n set old_CC \"$CC\"\n-set CC \"$CC $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS\"\n+set CC \"$CC $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANTIZE_CFLAGS\"\n set old_CXX \"$CXX\"\n-set CXX \"$CXX $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS\"\n+set CXX \"$CXX $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANTIZE_CFLAGS\"\n \n # S-records can't handle .note.gnu.property sections.\n if { [is_elf_format] \\"
    },
    {
      "sha": "ab5e00d632394eb0fd987a862025a88eb5633859",
      "filename": "ld/testsuite/ld-x86-64/plt-main-ibt-x32.dd",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-x86-64/plt-main-ibt-x32.dd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-x86-64/plt-main-ibt-x32.dd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/plt-main-ibt-x32.dd?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -3,5 +3,5 @@ Disassembly of section .plt.got:\n \n [a-f0-9]+ <[_a-z]+@plt>:\n [ \t]*[a-f0-9]+:\tf3 0f 1e fa          \tendbr64 \n-[ \t]*[a-f0-9]+:\tff 25 .. .. 20 00    \tjmpq +\\*0x20....\\(%rip\\)        # ...... <[_a-z]+>\n+[ \t]*[a-f0-9]+:\tff 25 .. .. 20 00    \tjmpq +\\*0x20....\\(%rip\\)        # ...... <.*>\n #pass"
    },
    {
      "sha": "e2d6750e3ae1db5c3b8dc42f632d4a9cb1a049c6",
      "filename": "ld/testsuite/ld-x86-64/plt-main-ibt.dd",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-x86-64/plt-main-ibt.dd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-x86-64/plt-main-ibt.dd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/plt-main-ibt.dd?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -3,5 +3,5 @@ Disassembly of section .plt.got:\n \n [a-f0-9]+ <[_a-z]+@plt>:\n [ \t]*[a-f0-9]+:\tf3 0f 1e fa          \tendbr64 \n-[ \t]*[a-f0-9]+:\tf2 ff 25 .. .. 20 00 \tbnd jmpq \\*0x20....\\(%rip\\)        # ...... <[_a-z]+>\n+[ \t]*[a-f0-9]+:\tf2 ff 25 .. .. 20 00 \tbnd jmpq \\*0x20....\\(%rip\\)        # ...... <.*>\n #pass"
    },
    {
      "sha": "cc2c6cc30aac2cc1ba67ceccd1f005b768ed23cc",
      "filename": "ld/testsuite/ld-x86-64/x86-64.exp",
      "status": "modified",
      "additions": 18,
      "deletions": 10,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-x86-64/x86-64.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1949ad044a6979e176b0d0ebd5cfebbf162dd4f5/ld/testsuite/ld-x86-64/x86-64.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/x86-64.exp?ref=1949ad044a6979e176b0d0ebd5cfebbf162dd4f5",
      "patch": "@@ -748,13 +748,17 @@ global PLT_CFLAGS\n global NOPIE_CFLAGS NOPIE_LDFLAGS\n # Add $NOCF_PROTECTION_CFLAGS if -fcf-protection=none is required.\n global NOCF_PROTECTION_CFLAGS\n+global NOSANTIZE_CFLAGS\n \n # Must be native with the C compiler\n if { [isnative] && [check_compiler_available] } {\n-    run_cc_link_tests {\n-\t{\"Helper X32 DSO from x86-64 object\" \"\" \"-m64 -fPIC -g\"\n-\t {simple.c} {} \"libsimple.a\"}\n-    }\n+    run_cc_link_tests [list \\\n+\t[list \\\n+\t    \"Helper X32 DSO from x86-64 object\" \"\" \\\n+\t    \"-m64 $NOSANTIZE_CFLAGS -fPIC -g\" \\\n+\t    {simple.c} {} \"libsimple.a\" \\\n+\t] \\\n+    ]\n \n     set convertx32 \"$objcopy -O elf32-x86-64 tmpdir/simple.o tmpdir/simple-x32.o\"\n     send_log \"$convertx32\\n\"\n@@ -765,12 +769,16 @@ if { [isnative] && [check_compiler_available] } {\n \treturn\n     }\n \n-    run_ld_link_tests {\n-\t{\"X32 DSO from x86-64 object\"\n-\t \"-shared -melf32_x86_64 tmpdir/simple-x32.o\" \"\"\n-\t \"--x32 -mx86-used-note=yes\"\n-\t{dummy.s} {{readelf {-s --wide} x86-64-x32.rd}} \"x86-64-x32\"}\n-    }\n+    run_ld_link_tests [list \\\n+\t[list \\\n+\t    \"X32 DSO from x86-64 object\" \\\n+\t    \"-shared -melf32_x86_64 tmpdir/simple-x32.o\" \\\n+\t    \"$NOSANTIZE_CFLAGS\" \\\n+\t    \"--x32 -mx86-used-note=yes\" \\\n+\t    {dummy.s} {{readelf {-s --wide} x86-64-x32.rd}} \\\n+\t    \"x86-64-x32\" \\\n+\t] \\\n+    ]\n \n     run_cc_link_tests [list \\\n \t[list \\"
    }
  ]
}