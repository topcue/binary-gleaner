{
  "sha": "e6e51c9c4b402cd46595790b26087ebf2fead8c1",
  "node_id": "C_kwDOANOeidoAKGU2ZTUxYzljNGI0MDJjZDQ2NTk1NzkwYjI2MDg3ZWJmMmZlYWQ4YzE",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-07-22T15:34:57Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-09-30T19:21:48Z"
    },
    "message": "gdbsupport: move gdb_file_up to its own file\n\nThe following patches wants to change gdb_fopen_cloexec and\ngdb_mkostemp_cloexec to return a scoped_fd.  Doing this causes a cyclic\ninclude between scoped_fd.h and filestuff.h, that both want to include\neach other.  scoped_fd.h includes filestuff.h because of the\nscoped_fd::to_file method's return value.  filestuff.h would then\ninclude scoped_fd.h for gdb_fopen_cloexec's and gdb_mkostemp_cloexec's\nreturn values.\n\nTo fix that, move gdb_file_up to its own file, gdb_file.h.\n\nChange-Id: Ic82a48914b2aacee8f14af535b7469245f88b93d",
    "tree": {
      "sha": "d4785bbbf171620d9dd4b881bec2f19def625263",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d4785bbbf171620d9dd4b881bec2f19def625263"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e6e51c9c4b402cd46595790b26087ebf2fead8c1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6e51c9c4b402cd46595790b26087ebf2fead8c1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e6e51c9c4b402cd46595790b26087ebf2fead8c1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6e51c9c4b402cd46595790b26087ebf2fead8c1/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5109a7bd9b87bdad530f2ebf97036e6087b4504d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5109a7bd9b87bdad530f2ebf97036e6087b4504d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5109a7bd9b87bdad530f2ebf97036e6087b4504d"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 39,
    "deletions": 13
  },
  "files": [
    {
      "sha": "aa15f89aa920ffd4f43d511ad2cba628801cdc82",
      "filename": "gdbsupport/filestuff.h",
      "status": "modified",
      "additions": 1,
      "deletions": 12,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6e51c9c4b402cd46595790b26087ebf2fead8c1/gdbsupport/filestuff.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6e51c9c4b402cd46595790b26087ebf2fead8c1/gdbsupport/filestuff.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/filestuff.h?ref=e6e51c9c4b402cd46595790b26087ebf2fead8c1",
      "patch": "@@ -21,6 +21,7 @@\n \n #include <dirent.h>\n #include <fcntl.h>\n+#include \"gdb_file.h\"\n \n /* Note all the file descriptors which are open when this is called.\n    These file descriptors will not be closed by close_most_fds.  */\n@@ -69,18 +70,6 @@ gdb_open_cloexec (const std::string &filename, int flags,\n   return gdb_open_cloexec (filename.c_str (), flags, mode);\n }\n \n-struct gdb_file_deleter\n-{\n-  void operator() (FILE *file) const\n-  {\n-    fclose (file);\n-  }\n-};\n-\n-/* A unique pointer to a FILE.  */\n-\n-typedef std::unique_ptr<FILE, gdb_file_deleter> gdb_file_up;\n-\n /* Like 'fopen', but ensures that the returned file descriptor has the\n    close-on-exec flag set.  */\n "
    },
    {
      "sha": "2f5b399f6e876e577e170dc11ac2d69786a5cb6c",
      "filename": "gdbsupport/gdb_file.h",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6e51c9c4b402cd46595790b26087ebf2fead8c1/gdbsupport/gdb_file.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6e51c9c4b402cd46595790b26087ebf2fead8c1/gdbsupport/gdb_file.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/gdb_file.h?ref=e6e51c9c4b402cd46595790b26087ebf2fead8c1",
      "patch": "@@ -0,0 +1,37 @@\n+/* gdb_file_up, an RAII wrapper around FILE.\n+   Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GDBSUPPORT_GDB_FILE\n+#define GDBSUPPORT_GDB_FILE\n+\n+#include <memory>\n+#include <stdio.h>\n+\n+struct gdb_file_deleter\n+{\n+  void operator() (FILE *file) const\n+  {\n+    fclose (file);\n+  }\n+};\n+\n+/* A unique pointer to a FILE.  */\n+\n+typedef std::unique_ptr<FILE, gdb_file_deleter> gdb_file_up;\n+\n+#endif"
    },
    {
      "sha": "f16e811a2cefc0c012f20aea742823789817cfc1",
      "filename": "gdbsupport/scoped_fd.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6e51c9c4b402cd46595790b26087ebf2fead8c1/gdbsupport/scoped_fd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6e51c9c4b402cd46595790b26087ebf2fead8c1/gdbsupport/scoped_fd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/scoped_fd.h?ref=e6e51c9c4b402cd46595790b26087ebf2fead8c1",
      "patch": "@@ -21,7 +21,7 @@\n #define COMMON_SCOPED_FD_H\n \n #include <unistd.h>\n-#include \"filestuff.h\"\n+#include \"gdb_file.h\"\n \n /* A smart-pointer-like class to automatically close a file descriptor.  */\n "
    }
  ]
}