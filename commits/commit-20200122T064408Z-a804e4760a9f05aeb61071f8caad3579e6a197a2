{
  "sha": "a804e4760a9f05aeb61071f8caad3579e6a197a2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTgwNGU0NzYwYTlmMDVhZWI2MTA3MWY4Y2FhZDM1NzllNmExOTdhMg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-22T01:54:56Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-22T06:44:08Z"
    },
    "message": "PowerPC64 tls_get_addr_desc static support\n\nThis provides a linker generated __tls_get_addr_desc wrapper function\npreserving registers around a __tls_get_addr call.  The idea being to\nsupport __tls_get_addr_desc without requiring a glibc update.\n\nbfd/\n\t* elf64-ppc.c (struct ppc_link_hash_table): Add tga_group.\n\t(ppc64_elf_archive_symbol_lookup): Extract __tls_get_addr_opt for\n\t__tls_get_addr_desc.\n\t(ppc64_elf_size_stubs): Add section for linker generated\n\t__tls_get_addr_desc wrapper function.  Loop at least once if\n\tgenerating this function.\n\t(emit_tga_desc, emit_tga_desc_eh_frame): New functions.\n\t(ppc64_elf_build_stubs): Generate __tls_get_addr_desc.\nld/\n\t* testsuite/ld-powerpc/tlsdesc3.d,\n\t* testsuite/ld-powerpc/tlsdesc3.wf,\n\t* testsuite/ld-powerpc/tlsdesc4.d,\n\t* testsuite/ld-powerpc/tlsdesc4.s,\n\t* testsuite/ld-powerpc/tlsdesc4.wf: New tests.\n\t* testsuite/ld-powerpc/powerpc.exp: Run them.",
    "tree": {
      "sha": "c25f0e5d42c379e7d388df47f6f0fe698a0bdd3b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c25f0e5d42c379e7d388df47f6f0fe698a0bdd3b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a804e4760a9f05aeb61071f8caad3579e6a197a2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a804e4760a9f05aeb61071f8caad3579e6a197a2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a804e4760a9f05aeb61071f8caad3579e6a197a2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a804e4760a9f05aeb61071f8caad3579e6a197a2/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9e7028aa1e788d666bad91fb20159da6c95bbab1"
    }
  ],
  "stats": {
    "total": 358,
    "additions": 357,
    "deletions": 1
  },
  "files": [
    {
      "sha": "f20b2c0dac8809e53e03cddf061942ff8628fb12",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a804e4760a9f05aeb61071f8caad3579e6a197a2/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a804e4760a9f05aeb61071f8caad3579e6a197a2/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=a804e4760a9f05aeb61071f8caad3579e6a197a2",
      "patch": "@@ -1,3 +1,14 @@\n+2020-01-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf64-ppc.c (struct ppc_link_hash_table): Add tga_group.\n+\t(ppc64_elf_archive_symbol_lookup): Extract __tls_get_addr_opt for\n+\t__tls_get_addr_desc.\n+\t(ppc64_elf_size_stubs): Add section for linker generated\n+\t__tls_get_addr_desc wrapper function.  Loop at least once if\n+\tgenerating this function.\n+\t(emit_tga_desc, emit_tga_desc_eh_frame): New functions.\n+\t(ppc64_elf_build_stubs): Generate __tls_get_addr_desc.\n+\n 2020-01-22  Alan Modra  <amodra@gmail.com>\n \n \t* elf64-ppc.h (struct ppc64_elf_params): Add no_tls_get_addr_regsave."
    },
    {
      "sha": "b3f8f6b359e5781cfdbd5302b46249afefbfae66",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 137,
      "deletions": 1,
      "changes": 138,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a804e4760a9f05aeb61071f8caad3579e6a197a2/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a804e4760a9f05aeb61071f8caad3579e6a197a2/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=a804e4760a9f05aeb61071f8caad3579e6a197a2",
      "patch": "@@ -3182,6 +3182,7 @@ struct ppc_link_hash_table\n   struct ppc_link_hash_entry *tls_get_addr_fd;\n   struct ppc_link_hash_entry *tga_desc;\n   struct ppc_link_hash_entry *tga_desc_fd;\n+  struct map_stub *tga_group;\n \n   /* The size of reliplt used by got entry relocs.  */\n   bfd_size_type got_reli_size;\n@@ -4150,6 +4151,11 @@ ppc64_elf_archive_symbol_lookup (bfd *abfd,\n   memcpy (dot_name + 1, name, len + 1);\n   h = _bfd_elf_archive_symbol_lookup (abfd, info, dot_name);\n   bfd_release (abfd, dot_name);\n+  if (h != NULL)\n+    return h;\n+\n+  if (strcmp (name, \"__tls_get_addr_opt\") == 0)\n+    h = _bfd_elf_archive_symbol_lookup (abfd, info, \"__tls_get_addr_desc\");\n   return h;\n }\n \n@@ -13088,6 +13094,40 @@ ppc64_elf_size_stubs (struct bfd_link_info *info)\n   if (!group_sections (info, stub_group_size, stubs_always_before_branch))\n     return FALSE;\n \n+  htab->tga_group = NULL;\n+  if (!htab->params->no_tls_get_addr_regsave\n+      && htab->tga_desc_fd != NULL\n+      && (htab->tga_desc_fd->elf.root.type == bfd_link_hash_undefined\n+\t  || htab->tga_desc_fd->elf.root.type == bfd_link_hash_undefweak)\n+      && htab->tls_get_addr_fd != NULL\n+      && is_static_defined (&htab->tls_get_addr_fd->elf))\n+    {\n+      asection *sym_sec, *code_sec, *stub_sec;\n+      bfd_vma sym_value;\n+      struct _opd_sec_data *opd;\n+\n+      sym_sec = htab->tls_get_addr_fd->elf.root.u.def.section;\n+      sym_value = defined_sym_val (&htab->tls_get_addr_fd->elf);\n+      code_sec = sym_sec;\n+      opd = get_opd_info (sym_sec);\n+      if (opd != NULL)\n+\topd_entry_value (sym_sec, sym_value, &code_sec, NULL, FALSE);\n+      htab->tga_group = htab->sec_info[code_sec->id].u.group;\n+      stub_sec = (*htab->params->add_stub_section) (\".tga_desc.stub\",\n+\t\t\t\t\t\t    htab->tga_group->link_sec);\n+      if (stub_sec == NULL)\n+\treturn FALSE;\n+      htab->tga_group->stub_sec = stub_sec;\n+\n+      htab->tga_desc_fd->elf.root.type = bfd_link_hash_defined;\n+      htab->tga_desc_fd->elf.root.u.def.section = stub_sec;\n+      htab->tga_desc_fd->elf.root.u.def.value = 0;\n+      htab->tga_desc_fd->elf.type = STT_FUNC;\n+      htab->tga_desc_fd->elf.def_regular = 1;\n+      htab->tga_desc_fd->elf.non_elf = 0;\n+      _bfd_elf_link_hash_hide_symbol (info, &htab->tga_desc_fd->elf, TRUE);\n+    }\n+\n #define STUB_SHRINK_ITER 20\n   /* Loop until no stubs added.  After iteration 20 of this loop we may\n      exit on a stub section shrinking.  This is to break out of a\n@@ -13517,6 +13557,14 @@ ppc64_elf_size_stubs (struct bfd_link_info *info)\n \t      stub_sec->flags &= ~SEC_RELOC;\n \t    }\n \t}\n+      if (htab->tga_group != NULL)\n+\t{\n+\t  /* See emit_tga_desc and emit_tga_desc_eh_frame.  */\n+\t  htab->tga_group->eh_size\n+\t    = 1 + 2 + (htab->opd_abi != 0) + 3 + 8 * 2 + 3 + 8 + 3;\n+\t  htab->tga_group->lr_restore = 23 * 4;\n+\t  htab->tga_group->stub_sec->size = 24 * 4;\n+\t}\n \n       if (htab->stub_iteration <= STUB_SHRINK_ITER\n \t  || htab->brlt->rawsize < htab->brlt->size)\n@@ -13580,7 +13628,9 @@ ppc64_elf_size_stubs (struct bfd_link_info *info)\n \t      || (htab->stub_iteration > STUB_SHRINK_ITER\n \t\t  && htab->brlt->rawsize > htab->brlt->size))\n \t  && (htab->glink_eh_frame == NULL\n-\t      || htab->glink_eh_frame->rawsize == htab->glink_eh_frame->size))\n+\t      || htab->glink_eh_frame->rawsize == htab->glink_eh_frame->size)\n+\t  && (htab->tga_group == NULL\n+\t      || htab->stub_iteration > 1))\n \tbreak;\n \n       /* Ask the linker to do its stuff.  */\n@@ -14086,6 +14136,74 @@ write_plt_relocs_for_local_syms (struct bfd_link_info *info)\n   return TRUE;\n }\n \n+/* Emit the static wrapper function preserving registers around a\n+   __tls_get_addr_opt call.  */\n+\n+static bfd_boolean\n+emit_tga_desc (struct ppc_link_hash_table *htab)\n+{\n+  asection *stub_sec = htab->tga_group->stub_sec;\n+  unsigned int cfa_updt = 11 * 4;\n+  bfd_byte *p;\n+  bfd_vma to, from, delta;\n+\n+  BFD_ASSERT (htab->tga_desc_fd->elf.root.type == bfd_link_hash_defined\n+\t      && htab->tga_desc_fd->elf.root.u.def.section == stub_sec\n+\t      && htab->tga_desc_fd->elf.root.u.def.value == 0);\n+  to = defined_sym_val (&htab->tls_get_addr_fd->elf);\n+  from = defined_sym_val (&htab->tga_desc_fd->elf) + cfa_updt;\n+  delta = to - from;\n+  if (delta + (1 << 25) >= 1 << 26)\n+    {\n+      _bfd_error_handler (_(\"__tls_get_addr call offset overflow\"));\n+      htab->stub_error = TRUE;\n+      return FALSE;\n+    }\n+\n+  p = stub_sec->contents;\n+  p = tls_get_addr_prologue (htab->elf.dynobj, p, htab);\n+  bfd_put_32 (stub_sec->owner, B_DOT | 1 | (delta & 0x3fffffc), p);\n+  p += 4;\n+  p = tls_get_addr_epilogue (htab->elf.dynobj, p, htab);\n+  return stub_sec->size == (bfd_size_type) (p - stub_sec->contents);\n+}\n+\n+/* Emit eh_frame describing the static wrapper function.  */\n+\n+static bfd_byte *\n+emit_tga_desc_eh_frame (struct ppc_link_hash_table *htab, bfd_byte *p)\n+{\n+  unsigned int cfa_updt = 11 * 4;\n+  unsigned int i;\n+\n+  *p++ = DW_CFA_advance_loc + cfa_updt / 4;\n+  *p++ = DW_CFA_def_cfa_offset;\n+  if (htab->opd_abi)\n+    {\n+      *p++ = 128;\n+      *p++ = 1;\n+    }\n+  else\n+    *p++ = 96;\n+  *p++ = DW_CFA_offset_extended_sf;\n+  *p++ = 65;\n+  *p++ = (-16 / 8) & 0x7f;\n+  for (i = 4; i < 12; i++)\n+    {\n+      *p++ = DW_CFA_offset + i;\n+      *p++ = (htab->opd_abi ? 13 : 12) - i;\n+    }\n+  *p++ = DW_CFA_advance_loc + 10;\n+  *p++ = DW_CFA_def_cfa_offset;\n+  *p++ = 0;\n+  for (i = 4; i < 12; i++)\n+    *p++ = DW_CFA_restore + i;\n+  *p++ = DW_CFA_advance_loc + 2;\n+  *p++ = DW_CFA_restore_extended;\n+  *p++ = 65;\n+  return p;\n+}\n+\n /* Build all the stubs associated with the current output file.\n    The stubs are kept in a hash table attached to the main linker\n    hash table.  This function is called via gldelf64ppc_finish.  */\n@@ -14245,6 +14363,24 @@ ppc64_elf_build_stubs (struct bfd_link_info *info,\n \t}\n     }\n \n+  if (htab->tga_group != NULL)\n+    {\n+      htab->tga_group->lr_restore = 23 * 4;\n+      htab->tga_group->stub_sec->size = 24 * 4;\n+      if (!emit_tga_desc (htab))\n+\treturn FALSE;\n+      if (htab->glink_eh_frame != NULL\n+\t  && htab->glink_eh_frame->size != 0)\n+\t{\n+\t  size_t align = 4;\n+\n+\t  p = htab->glink_eh_frame->contents;\n+\t  p += (sizeof (glink_eh_frame_cie) + align - 1) & -align;\n+\t  p += 17;\n+\t  htab->tga_group->eh_size = emit_tga_desc_eh_frame (htab, p) - p;\n+\t}\n+    }\n+\n   /* Build .glink global entry stubs, and PLT relocs for globals.  */\n   elf_link_hash_traverse (&htab->elf, build_global_entry_stubs_and_plt, info);\n "
    },
    {
      "sha": "b196d2167f12311124ab3dab71cd309ae4ca9493",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=a804e4760a9f05aeb61071f8caad3579e6a197a2",
      "patch": "@@ -1,3 +1,12 @@\n+2020-01-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/ld-powerpc/tlsdesc3.d,\n+\t* testsuite/ld-powerpc/tlsdesc3.wf,\n+\t* testsuite/ld-powerpc/tlsdesc4.d,\n+\t* testsuite/ld-powerpc/tlsdesc4.s,\n+\t* testsuite/ld-powerpc/tlsdesc4.wf: New tests.\n+\t* testsuite/ld-powerpc/powerpc.exp: Run them.\n+\n 2020-01-22  Alan Modra  <amodra@gmail.com>\n \n \t* emultempl/ppc64elf.em (ppc64_opt, PARSE_AND_LIST_LONGOPTS),"
    },
    {
      "sha": "94b2fac6fbe12f3eaf81a9dba3f0e78ad8f1b263",
      "filename": "ld/testsuite/ld-powerpc/powerpc.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/testsuite/ld-powerpc/powerpc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/testsuite/ld-powerpc/powerpc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/powerpc.exp?ref=a804e4760a9f05aeb61071f8caad3579e6a197a2",
      "patch": "@@ -280,6 +280,12 @@ set ppc64elftests {\n     {\"TLSdesc2\" \"-melf64ppc -shared --hash-style=both --no-plt-localentry tmpdir/tlsdll.so\" \"\" \"-a64\"  {tlsdesc.s}\n      {{objdump -dr tlsdesc2.d} {readelf -wf tlsdesc2.wf}}\n      \"tlsdesc2\"}\n+    {\"TLSdesc3\" \"-melf64ppc --no-tls-optimize tmpdir/tlsdll.o\" \"\" \"-a64\"  {tlsdesc.s}\n+     {{objdump -dr tlsdesc3.d} {readelf -wf tlsdesc3.wf}}\n+     \"tlsdesc3\"}\n+    {\"TLSdesc4\" \"-melf64ppc --no-tls-optimize tmpdir/tlsdll.o\" \"\" \"-a64\"  {tlsdesc4.s}\n+     {{objdump -dr tlsdesc4.d} {readelf -wf tlsdesc4.wf}}\n+     \"tlsdesc4\"}\n     {\"sym@tocbase\" \"-shared -melf64ppc\" \"\" \"-a64\" {symtocbase-1.s symtocbase-2.s}\n \t{{objdump -dj.data symtocbase.d}} \"symtocbase.so\"}\n     {\"TOC opt\" \"-melf64ppc\" \"\" \"-a64\"  {tocopt.s}"
    },
    {
      "sha": "360dcff37cbd2c0c335d56bd6dbd6503f59b3440",
      "filename": "ld/testsuite/ld-powerpc/tlsdesc3.d",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/testsuite/ld-powerpc/tlsdesc3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/testsuite/ld-powerpc/tlsdesc3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsdesc3.d?ref=a804e4760a9f05aeb61071f8caad3579e6a197a2",
      "patch": "@@ -0,0 +1,38 @@\n+\n+.*:     file format .*\n+\n+Disassembly of section \\.text:\n+\n+0+10000100 <__tls_get_addr_desc>:\n+.*:\t(7c 08 02 a6|a6 02 08 7c) \tmflr    r0\n+.*:\t(f8 01 00 10|10 00 01 f8) \tstd     r0,16\\(r1\\)\n+.*:\t(f8 81 ff c0|c0 ff 81 f8) \tstd     r4,-64\\(r1\\)\n+.*:\t(f8 a1 ff c8|c8 ff a1 f8) \tstd     r5,-56\\(r1\\)\n+.*:\t(f8 c1 ff d0|d0 ff c1 f8) \tstd     r6,-48\\(r1\\)\n+.*:\t(f8 e1 ff d8|d8 ff e1 f8) \tstd     r7,-40\\(r1\\)\n+.*:\t(f9 01 ff e0|e0 ff 01 f9) \tstd     r8,-32\\(r1\\)\n+.*:\t(f9 21 ff e8|e8 ff 21 f9) \tstd     r9,-24\\(r1\\)\n+.*:\t(f9 41 ff f0|f0 ff 41 f9) \tstd     r10,-16\\(r1\\)\n+.*:\t(f9 61 ff f8|f8 ff 61 f9) \tstd     r11,-8\\(r1\\)\n+.*:\t(f8 21 ff a1|a1 ff 21 f8) \tstdu    r1,-96\\(r1\\)\n+.*:\t(48 00 00 35|35 00 00 48) \tbl      .* <__tls_get_addr>\n+.*:\t(e8 81 00 20|20 00 81 e8) \tld      r4,32\\(r1\\)\n+.*:\t(e8 a1 00 28|28 00 a1 e8) \tld      r5,40\\(r1\\)\n+.*:\t(e8 c1 00 30|30 00 c1 e8) \tld      r6,48\\(r1\\)\n+.*:\t(e8 e1 00 38|38 00 e1 e8) \tld      r7,56\\(r1\\)\n+.*:\t(e9 01 00 40|40 00 01 e9) \tld      r8,64\\(r1\\)\n+.*:\t(e9 21 00 48|48 00 21 e9) \tld      r9,72\\(r1\\)\n+.*:\t(e9 41 00 50|50 00 41 e9) \tld      r10,80\\(r1\\)\n+.*:\t(e9 61 00 58|58 00 61 e9) \tld      r11,88\\(r1\\)\n+.*:\t(38 21 00 60|60 00 21 38) \taddi    r1,r1,96\n+.*:\t(e8 01 00 10|10 00 01 e8) \tld      r0,16\\(r1\\)\n+.*:\t(7c 08 03 a6|a6 03 08 7c) \tmtlr    r0\n+.*:\t(4e 80 00 20|20 00 80 4e) \tblr\n+\n+0+10000160 <__tls_get_addr>:\n+.*:\t(4e 80 00 20|20 00 80 4e) \tblr\n+\n+0+10000164 <_start>:\n+.*:\t(38 62 80 08|08 80 62 38) \taddi    r3,r2,-32760\n+.*:\t(4b ff ff 99|99 ff ff 4b) \tbl      .* <__tls_get_addr_desc>\n+.*:\t(60 00 00 00|00 00 00 60) \tnop"
    },
    {
      "sha": "af5a6b494cdb119e460c0d710acb2e7b78d90b4f",
      "filename": "ld/testsuite/ld-powerpc/tlsdesc3.wf",
      "status": "added",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/testsuite/ld-powerpc/tlsdesc3.wf",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/testsuite/ld-powerpc/tlsdesc3.wf",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsdesc3.wf?ref=a804e4760a9f05aeb61071f8caad3579e6a197a2",
      "patch": "@@ -0,0 +1,43 @@\n+Contents of the \\.eh_frame section:\n+\n+0+ 0+10 0+ CIE\n+  Version:               1\n+  Augmentation:          \"zR\"\n+  Code alignment factor: 4\n+  Data alignment factor: -8\n+  Return address column: 65\n+  Augmentation data:     1b\n+  DW_CFA_def_cfa: r1 ofs 0\n+\n+0+14 0+34 0+18 FDE cie=0+ pc=0+10000100\\.\\.0+10000160\n+  DW_CFA_advance_loc: 44 to 0+1000012c\n+  DW_CFA_def_cfa_offset: 96\n+  DW_CFA_offset_extended_sf: r65 at cfa\\+16\n+  DW_CFA_offset: r4 at cfa-64\n+  DW_CFA_offset: r5 at cfa-56\n+  DW_CFA_offset: r6 at cfa-48\n+  DW_CFA_offset: r7 at cfa-40\n+  DW_CFA_offset: r8 at cfa-32\n+  DW_CFA_offset: r9 at cfa-24\n+  DW_CFA_offset: r10 at cfa-16\n+  DW_CFA_offset: r11 at cfa-8\n+  DW_CFA_advance_loc: 40 to 0+10000154\n+  DW_CFA_def_cfa_offset: 0\n+  DW_CFA_restore: r4\n+  DW_CFA_restore: r5\n+  DW_CFA_restore: r6\n+  DW_CFA_restore: r7\n+  DW_CFA_restore: r8\n+  DW_CFA_restore: r9\n+  DW_CFA_restore: r10\n+  DW_CFA_restore: r11\n+  DW_CFA_advance_loc: 8 to 0+1000015c\n+  DW_CFA_restore_extended: r65\n+  DW_CFA_nop\n+  DW_CFA_nop\n+  DW_CFA_nop\n+\n+0+4c 0+10 0+50 FDE cie=0+ pc=0+10000164\\.\\.0+10000170\n+  DW_CFA_nop\n+  DW_CFA_nop\n+  DW_CFA_nop"
    },
    {
      "sha": "eb162bb78489c7df0690e887937141d1f1e5d9a4",
      "filename": "ld/testsuite/ld-powerpc/tlsdesc4.d",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/testsuite/ld-powerpc/tlsdesc4.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/testsuite/ld-powerpc/tlsdesc4.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsdesc4.d?ref=a804e4760a9f05aeb61071f8caad3579e6a197a2",
      "patch": "@@ -0,0 +1,46 @@\n+\n+.*:     file format .*\n+\n+Disassembly of section \\.text:\n+\n+0+10000100 <__tls_get_addr_desc>:\n+.*:\t(7c 08 02 a6|a6 02 08 7c) \tmflr    r0\n+.*:\t(f8 01 00 10|10 00 01 f8) \tstd     r0,16\\(r1\\)\n+.*:\t(f8 81 ff c0|c0 ff 81 f8) \tstd     r4,-64\\(r1\\)\n+.*:\t(f8 a1 ff c8|c8 ff a1 f8) \tstd     r5,-56\\(r1\\)\n+.*:\t(f8 c1 ff d0|d0 ff c1 f8) \tstd     r6,-48\\(r1\\)\n+.*:\t(f8 e1 ff d8|d8 ff e1 f8) \tstd     r7,-40\\(r1\\)\n+.*:\t(f9 01 ff e0|e0 ff 01 f9) \tstd     r8,-32\\(r1\\)\n+.*:\t(f9 21 ff e8|e8 ff 21 f9) \tstd     r9,-24\\(r1\\)\n+.*:\t(f9 41 ff f0|f0 ff 41 f9) \tstd     r10,-16\\(r1\\)\n+.*:\t(f9 61 ff f8|f8 ff 61 f9) \tstd     r11,-8\\(r1\\)\n+.*:\t(f8 21 ff a1|a1 ff 21 f8) \tstdu    r1,-96\\(r1\\)\n+.*:\t(48 00 00 35|35 00 00 48) \tbl      .* <__tls_get_addr>\n+.*:\t(e8 81 00 20|20 00 81 e8) \tld      r4,32\\(r1\\)\n+.*:\t(e8 a1 00 28|28 00 a1 e8) \tld      r5,40\\(r1\\)\n+.*:\t(e8 c1 00 30|30 00 c1 e8) \tld      r6,48\\(r1\\)\n+.*:\t(e8 e1 00 38|38 00 e1 e8) \tld      r7,56\\(r1\\)\n+.*:\t(e9 01 00 40|40 00 01 e9) \tld      r8,64\\(r1\\)\n+.*:\t(e9 21 00 48|48 00 21 e9) \tld      r9,72\\(r1\\)\n+.*:\t(e9 41 00 50|50 00 41 e9) \tld      r10,80\\(r1\\)\n+.*:\t(e9 61 00 58|58 00 61 e9) \tld      r11,88\\(r1\\)\n+.*:\t(38 21 00 60|60 00 21 38) \taddi    r1,r1,96\n+.*:\t(e8 01 00 10|10 00 01 e8) \tld      r0,16\\(r1\\)\n+.*:\t(7c 08 03 a6|a6 03 08 7c) \tmtlr    r0\n+.*:\t(4e 80 00 20|20 00 80 4e) \tblr\n+\n+0+10000160 <__tls_get_addr>:\n+.*:\t(4e 80 00 20|20 00 80 4e) \tblr\n+\n+0+10000164 <_start>:\n+.*:\t(38 62 80 08|08 80 62 38) \taddi    r3,r2,-32760\n+.*:\t(4b ff ff 99|99 ff ff 4b) \tbl      .* <__tls_get_addr_desc>\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+\t\\.\\.\\.\n+\n+0+12000100 <.*\\.long_branch\\.__tls_get_addr_desc>:\n+.*:\t(4a 00 00 00|00 00 00 4a) \tb       .* <__tls_get_addr_desc>\n+\t\\.\\.\\.\n+.*:\t(38 62 80 08|08 80 62 38) \taddi    r3,r2,-32760\n+.*:\t(4b ff ff dd|dd ff ff 4b) \tbl      .* <.*\\.long_branch\\.__tls_get_addr_desc>\n+.*:\t(60 00 00 00|00 00 00 60) \tnop"
    },
    {
      "sha": "6dc3082724d9b604573b0ca7f0bb3e03c2e68697",
      "filename": "ld/testsuite/ld-powerpc/tlsdesc4.s",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/testsuite/ld-powerpc/tlsdesc4.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/testsuite/ld-powerpc/tlsdesc4.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsdesc4.s?ref=a804e4760a9f05aeb61071f8caad3579e6a197a2",
      "patch": "@@ -0,0 +1,18 @@\n+ .text\n+ .globl _start\n+_start:\n+ .cfi_startproc\n+ addi 3,2,gd@got@tlsgd\n+ bl __tls_get_addr_desc(gd@tlsgd)\n+ nop\n+ .cfi_endproc\n+\n+ .section .text.pad1,\"ax\"\n+ .space 0x1ffff90\n+\n+ .section .text.far,\"ax\"\n+ .cfi_startproc\n+ addi 3,2,gd@got@tlsgd\n+ bl __tls_get_addr_desc(gd@tlsgd)\n+ nop\n+ .cfi_endproc"
    },
    {
      "sha": "8d249798103ca6beff7166a8764c8c6f96944f7f",
      "filename": "ld/testsuite/ld-powerpc/tlsdesc4.wf",
      "status": "added",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/testsuite/ld-powerpc/tlsdesc4.wf",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a804e4760a9f05aeb61071f8caad3579e6a197a2/ld/testsuite/ld-powerpc/tlsdesc4.wf",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsdesc4.wf?ref=a804e4760a9f05aeb61071f8caad3579e6a197a2",
      "patch": "@@ -0,0 +1,49 @@\n+Contents of the \\.eh_frame section:\n+\n+0+ 0+10 0+ CIE\n+  Version:               1\n+  Augmentation:          \"zR\"\n+  Code alignment factor: 4\n+  Data alignment factor: -8\n+  Return address column: 65\n+  Augmentation data:     1b\n+  DW_CFA_def_cfa: r1 ofs 0\n+\n+0+14 0+34 0+18 FDE cie=0+ pc=0+10000100..0+10000160\n+  DW_CFA_advance_loc: 44 to 0+1000012c\n+  DW_CFA_def_cfa_offset: 96\n+  DW_CFA_offset_extended_sf: r65 at cfa\\+16\n+  DW_CFA_offset: r4 at cfa-64\n+  DW_CFA_offset: r5 at cfa-56\n+  DW_CFA_offset: r6 at cfa-48\n+  DW_CFA_offset: r7 at cfa-40\n+  DW_CFA_offset: r8 at cfa-32\n+  DW_CFA_offset: r9 at cfa-24\n+  DW_CFA_offset: r10 at cfa-16\n+  DW_CFA_offset: r11 at cfa-8\n+  DW_CFA_advance_loc: 40 to 0+10000154\n+  DW_CFA_def_cfa_offset: 0\n+  DW_CFA_restore: r4\n+  DW_CFA_restore: r5\n+  DW_CFA_restore: r6\n+  DW_CFA_restore: r7\n+  DW_CFA_restore: r8\n+  DW_CFA_restore: r9\n+  DW_CFA_restore: r10\n+  DW_CFA_restore: r11\n+  DW_CFA_advance_loc: 8 to 0+1000015c\n+  DW_CFA_restore_extended: r65\n+  DW_CFA_nop\n+  DW_CFA_nop\n+  DW_CFA_nop\n+\n+0+4c 0+10 0+50 FDE cie=0+ pc=0+10000164..0+10000170\n+  DW_CFA_nop\n+  DW_CFA_nop\n+  DW_CFA_nop\n+\n+0+60 0+10 0+64 FDE cie=0+ pc=0+12000120..0+1200012c\n+  DW_CFA_nop\n+  DW_CFA_nop\n+  DW_CFA_nop\n+"
    }
  ]
}