{
  "sha": "2dc4b12fcd647b883223efeb308c277e629b369c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmRjNGIxMmZjZDY0N2I4ODMyMjNlZmViMzA4YzI3N2U2MjliMzY5Yw==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2019-12-05T07:44:22Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2019-12-05T07:44:22Z"
    },
    "message": "Arm64: simplify Crypto arch extension handling\n\nThis, at the assembler level, is just a \"brace\" feature covering both\nAES and SHA2. Hence there's no need for it to have a separate feature\nflag, freeing up a bit for future re-use. Along these lines there are\nalso a number of dead definitions/variables in the opcode table file.",
    "tree": {
      "sha": "a53555350d80f650adc883e20e423f17208fc3e4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a53555350d80f650adc883e20e423f17208fc3e4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2dc4b12fcd647b883223efeb308c277e629b369c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2dc4b12fcd647b883223efeb308c277e629b369c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2dc4b12fcd647b883223efeb308c277e629b369c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2dc4b12fcd647b883223efeb308c277e629b369c/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d4340f89eccb0b0a0811e142ce365efc48beb064",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4340f89eccb0b0a0811e142ce365efc48beb064",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d4340f89eccb0b0a0811e142ce365efc48beb064"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 20,
    "deletions": 16
  },
  "files": [
    {
      "sha": "e3db70a9ebf5cec9f477496ed25b173dd0c30c70",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc4b12fcd647b883223efeb308c277e629b369c/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc4b12fcd647b883223efeb308c277e629b369c/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=2dc4b12fcd647b883223efeb308c277e629b369c",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-05  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-aarch64.c (aarch64_features): Drop redundant AES and\n+\tSHA2 flags from \"crypto\" entry.\n+\n 2019-12-05  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-aarch64.c (aarch64_features): Make SHA2 a prereq of"
    },
    {
      "sha": "cd4601682beb4e03a943029a50c60fe8546680ba",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc4b12fcd647b883223efeb308c277e629b369c/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc4b12fcd647b883223efeb308c277e629b369c/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=2dc4b12fcd647b883223efeb308c277e629b369c",
      "patch": "@@ -8990,9 +8990,7 @@ struct aarch64_option_cpu_value_table\n static const struct aarch64_option_cpu_value_table aarch64_features[] = {\n   {\"crc\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_CRC, 0),\n \t\t\tAARCH64_ARCH_NONE},\n-  {\"crypto\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_CRYPTO\n-\t\t\t\t\t | AARCH64_FEATURE_AES\n-\t\t\t\t\t | AARCH64_FEATURE_SHA2, 0),\n+  {\"crypto\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_CRYPTO, 0),\n \t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SIMD, 0)},\n   {\"fp\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_FP, 0),\n \t\t\tAARCH64_ARCH_NONE},"
    },
    {
      "sha": "42aa17d1dba58b188b8508eb4e33e545e884f205",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc4b12fcd647b883223efeb308c277e629b369c/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc4b12fcd647b883223efeb308c277e629b369c/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=2dc4b12fcd647b883223efeb308c277e629b369c",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-05  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_CRYPTO): Expand to the\n+\tcombination of AES and SHA2.\n+\n 2019-11-25  Alan Modra  <amodra@gmail.com>\n \n \t* coff/ti.h (GET_SCNHDR_SIZE, PUT_SCNHDR_SIZE, GET_SCN_SCNLEN),"
    },
    {
      "sha": "5d1aabf65435d2287ab904897f73d01e8e0ceb54",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc4b12fcd647b883223efeb308c277e629b369c/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc4b12fcd647b883223efeb308c277e629b369c/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=2dc4b12fcd647b883223efeb308c277e629b369c",
      "patch": "@@ -45,7 +45,6 @@ typedef uint32_t aarch64_insn;\n #define AARCH64_FEATURE_V8\t0x00000001\t/* All processors.  */\n #define AARCH64_FEATURE_V8_2\t0x00000020      /* ARMv8.2 processors.  */\n #define AARCH64_FEATURE_V8_3\t0x00000040      /* ARMv8.3 processors.  */\n-#define AARCH64_FEATURE_CRYPTO\t0x00010000\t/* Crypto instructions.  */\n #define AARCH64_FEATURE_FP\t0x00020000\t/* FP instructions.  */\n #define AARCH64_FEATURE_SIMD\t0x00040000\t/* SIMD instructions.  */\n #define AARCH64_FEATURE_CRC\t0x00080000\t/* CRC instructions.  */\n@@ -103,6 +102,9 @@ typedef uint32_t aarch64_insn;\n #define AARCH64_FEATURE_SVE2_SM4\t\t0x000000200\n #define AARCH64_FEATURE_SVE2_SHA3\t0x000000400\n \n+/* Crypto instructions are the combination of AES and SHA2.  */\n+#define AARCH64_FEATURE_CRYPTO\t(AARCH64_FEATURE_SHA2 | AARCH64_FEATURE_AES)\n+\n /* Architectures are the sum of the base and extensions.  */\n #define AARCH64_ARCH_V8\t\tAARCH64_FEATURE (AARCH64_FEATURE_V8, \\\n \t\t\t\t\t\t AARCH64_FEATURE_FP  \\"
    },
    {
      "sha": "7832435374e1cfc741e87c5b2e089b6fa3e5fbb1",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc4b12fcd647b883223efeb308c277e629b369c/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc4b12fcd647b883223efeb308c277e629b369c/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=2dc4b12fcd647b883223efeb308c277e629b369c",
      "patch": "@@ -1,3 +1,9 @@\n+2019-12-05  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* aarch64-tbl.h (aarch64_feature_crypto,\n+\taarch64_feature_crypto_v8_2, CRYPTO, CRYPTO_V8_2, CRYP_INSN,\n+\tCRYPTO_V8_2_INSN): Delete.\n+\n 2019-12-05  Alan Modra  <amodra@gmail.com>\n \n \tPR 25249"
    },
    {
      "sha": "955e554f06a1e1fb1572864ff45eda8f5902819b",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2dc4b12fcd647b883223efeb308c277e629b369c/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2dc4b12fcd647b883223efeb308c277e629b369c/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=2dc4b12fcd647b883223efeb308c277e629b369c",
      "patch": "@@ -2324,9 +2324,6 @@ static const aarch64_feature_set aarch64_feature_fp =\n   AARCH64_FEATURE (AARCH64_FEATURE_FP, 0);\n static const aarch64_feature_set aarch64_feature_simd =\n   AARCH64_FEATURE (AARCH64_FEATURE_SIMD, 0);\n-static const aarch64_feature_set aarch64_feature_crypto =\n-  AARCH64_FEATURE (AARCH64_FEATURE_CRYPTO | AARCH64_FEATURE_AES\n-\t\t   | AARCH64_FEATURE_SHA2 | AARCH64_FEATURE_SIMD | AARCH64_FEATURE_FP, 0);\n static const aarch64_feature_set aarch64_feature_crc =\n   AARCH64_FEATURE (AARCH64_FEATURE_CRC, 0);\n static const aarch64_feature_set aarch64_feature_lse =\n@@ -2363,9 +2360,6 @@ static const aarch64_feature_set aarch64_feature_aes =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8 | AARCH64_FEATURE_AES, 0);\n static const aarch64_feature_set aarch64_feature_v8_4 =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8_4, 0);\n-static const aarch64_feature_set aarch64_feature_crypto_v8_2 =\n-  AARCH64_FEATURE (AARCH64_FEATURE_V8_2 | AARCH64_FEATURE_CRYPTO\n-\t\t   | AARCH64_FEATURE_SIMD | AARCH64_FEATURE_FP, 0);\n static const aarch64_feature_set aarch64_feature_sm4 =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8_2 | AARCH64_FEATURE_SM4\n \t\t   | AARCH64_FEATURE_SIMD | AARCH64_FEATURE_FP, 0);\n@@ -2423,7 +2417,6 @@ static const aarch64_feature_set aarch64_feature_f64mm_sve =\n #define CORE\t\t&aarch64_feature_v8\n #define FP\t\t&aarch64_feature_fp\n #define SIMD\t\t&aarch64_feature_simd\n-#define CRYPTO\t\t&aarch64_feature_crypto\n #define CRC\t\t&aarch64_feature_crc\n #define LSE\t\t&aarch64_feature_lse\n #define LOR\t\t&aarch64_feature_lor\n@@ -2443,7 +2436,6 @@ static const aarch64_feature_set aarch64_feature_f64mm_sve =\n #define ARMV8_4\t\t&aarch64_feature_v8_4\n #define SHA3\t\t&aarch64_feature_sha3\n #define SM4\t\t&aarch64_feature_sm4\n-#define CRYPTO_V8_2\t&aarch64_feature_crypto_v8_2\n #define FP_F16_V8_2\t&aarch64_feature_fp_16_v8_2\n #define DOTPROD\t\t&aarch64_feature_dotprod\n #define ARMV8_5\t\t&aarch64_feature_v8_5\n@@ -2476,8 +2468,6 @@ static const aarch64_feature_set aarch64_feature_f64mm_sve =\n   { NAME, OPCODE, MASK, CLASS, OP, SIMD, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define _SIMD_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS,VERIFIER) \\\n   { NAME, OPCODE, MASK, CLASS, OP, SIMD, OPS, QUALS, FLAGS, 0, 0, VERIFIER }\n-#define CRYP_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n-  { NAME, OPCODE, MASK, CLASS, 0, CRYPTO, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define _CRC_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, 0, CRC, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define _LSE_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n@@ -2510,8 +2500,6 @@ static const aarch64_feature_set aarch64_feature_f64mm_sve =\n   { NAME, OPCODE, MASK, CLASS, 0, AES, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define V8_4_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, 0, ARMV8_4, OPS, QUALS, FLAGS, 0, 0, NULL }\n-#define CRYPTO_V8_2_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n-  { NAME, OPCODE, MASK, CLASS, 0, CRYPTO_V8_2, OPS, QUALS, FLAGS, 0, NULL }\n #define SHA3_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, 0, SHA3, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define SM4_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\"
    }
  ]
}