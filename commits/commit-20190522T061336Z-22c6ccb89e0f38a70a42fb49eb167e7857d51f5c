{
  "sha": "22c6ccb89e0f38a70a42fb49eb167e7857d51f5c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjJjNmNjYjg5ZTBmMzhhNzBhNDJmYjQ5ZWIxNjdlNzg1N2Q1MWY1Yw==",
  "commit": {
    "author": {
      "name": "John Darrington",
      "email": "john@darrington.wattle.id.au",
      "date": "2019-05-22T05:16:14Z"
    },
    "committer": {
      "name": "John Darrington",
      "email": "john@darrington.wattle.id.au",
      "date": "2019-05-22T06:13:36Z"
    },
    "message": "S12Z: GAS: New option --mdollar-hex.\n\nThis option (also implied by --traditional) causes '$' to introduce\nliteral hexadecimal constants, rather than the modern convention '0x'.\n\ngas/\n\t* config/tc-s12z.c (s12z_strtol): New function. (md_show_usage): Update.\n\t(md_parse_option): new case OPTION_DOLLAR_HEX. (s12z_init_after_args):\n\t(<global>): Use s12z_strtol instead of strtol.\n\t* doc/c-s12z.texi (S12Z Options): Document new option -mdollar-hex.\n\t* testsuite/gas/s12z/dollar-hex.d: New file.\n\t* testsuite/gas/s12z/dollar-hex.s: New file.\n\t* testsuite/gas/s12z/s12z.exp: Add them.",
    "tree": {
      "sha": "53939413dadacc46e7b3c2975212e52e9cf5ad6d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/53939413dadacc46e7b3c2975212e52e9cf5ad6d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "a7df56e5f840e2ce8bb09487ee0b6570cddb1550",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7df56e5f840e2ce8bb09487ee0b6570cddb1550",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a7df56e5f840e2ce8bb09487ee0b6570cddb1550"
    }
  ],
  "stats": {
    "total": 111,
    "additions": 103,
    "deletions": 8
  },
  "files": [
    {
      "sha": "f851663258137dd1a3bb9f370b7bcb6687beaee9",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=22c6ccb89e0f38a70a42fb49eb167e7857d51f5c",
      "patch": "@@ -1,3 +1,13 @@\n+2019-05-22  John Darrington <john@darrington.wattle.id.au>\n+\n+\t* config/tc-s12z.c (s12z_strtol): New function. (md_show_usage): Update.\n+\t(md_parse_option): new case OPTION_DOLLAR_HEX. (s12z_init_after_args):\n+\t(<global>): Use s12z_strtol instead of strtol.\n+\t* doc/c-s12z.texi (S12Z Options): Document new option -mdollar-hex.\n+\t* testsuite/gas/s12z/dollar-hex.d: New file.\n+\t* testsuite/gas/s12z/dollar-hex.s: New file.\n+\t* testsuite/gas/s12z/s12z.exp: Add them.\n+\n 2019-05-21  Sudakshina Das  <sudi.das@arm.com>\n \n \t* config/tc-arm.c (parse_operands): Update case OP_RVC to"
    },
    {
      "sha": "67e88d277a8babc0f0e46262e67ad544db2bd35d",
      "filename": "gas/config/tc-s12z.c",
      "status": "modified",
      "additions": 59,
      "deletions": 8,
      "changes": 67,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/gas/config/tc-s12z.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/gas/config/tc-s12z.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-s12z.c?ref=22c6ccb89e0f38a70a42fb49eb167e7857d51f5c",
      "patch": "@@ -39,14 +39,61 @@ const char FLT_CHARS[] = \"dD\";\n \n static char *fail_line_pointer;\n \n+/* A wrapper around the standard library's strtol.\n+   It converts STR into an integral value.\n+   This wrapper deals with literal_prefix_dollar_hex.  */\n+static long\n+s12z_strtol (const char *str, char ** endptr)\n+{\n+  int base = 0;\n+  bool negative = false;\n+\n+  long result = 0;\n+\n+  char *start = (char *) str;\n+\n+  /* In the case where literal_prefix_dollar_hex is TRUE the sign has\n+  to be handled explicitly.  Otherwise the string will not be\n+  recognised as an integer.  */\n+  if (str[0] == '-')\n+    {\n+      negative = true;\n+      ++str;\n+    }\n+  else if (str[0] == '+')\n+    {\n+      ++str;\n+    }\n+\n+  if (literal_prefix_dollar_hex && (str[0] == '$'))\n+    {\n+      base = 16;\n+      str++;\n+    }\n+\n+  result = strtol (str, endptr, base);\n+  if (*endptr == str)\n+    {\n+      *endptr = start;\n+    }\n+  if (negative)\n+    result = -result;\n+\n+  return result;\n+}\n+\n+\n \f\n /* Options and initialization.  */\n \n const char *md_shortopts = \"\";\n \n struct option md_longopts[] =\n   {\n-   {\"mreg-prefix\", required_argument, NULL, OPTION_MD_BASE},\n+#define OPTION_REG_PREFIX (OPTION_MD_BASE)\n+   {\"mreg-prefix\", required_argument, NULL, OPTION_REG_PREFIX},\n+#define OPTION_DOLLAR_HEX (OPTION_MD_BASE + 1)\n+   {\"mdollar-hex\", no_argument, NULL, OPTION_DOLLAR_HEX},\n    {NULL, no_argument, NULL, 0}\n   };\n \n@@ -98,10 +145,9 @@ s12z_listing_header (void)\n void\n md_show_usage (FILE *stream)\n {\n-  fprintf (stream,\n-      _(\"\\ns12z options:\\n\"\n-\t\"  -mreg-prefix=PREFIX     set a prefix used to indicate register names (default none)\"\n-        \"\\n\"));\n+  fputs (_(\"\\ns12z options:\\n\"), stream);\n+  fputs (_(\"  -mreg-prefix=PREFIX     set a prefix used to indicate register names (default none)\\n\"), stream);\n+  fputs (_(\"  -mdollar-hex            the prefix '$' instead of '0x' is used to indicate literal hexadecimal constants\\n\"), stream);\n }\n \n void\n@@ -114,9 +160,12 @@ md_parse_option (int c, const char *arg)\n {\n   switch (c)\n     {\n-    case OPTION_MD_BASE:\n+    case OPTION_REG_PREFIX:\n       register_prefix = xstrdup (arg);\n       break;\n+    case OPTION_DOLLAR_HEX:\n+      literal_prefix_dollar_hex = TRUE;\n+      break;\n     default:\n       return 0;\n     }\n@@ -150,6 +199,8 @@ md_begin (void)\n void\n s12z_init_after_args (void)\n {\n+  if (flag_traditional_format)\n+    literal_prefix_dollar_hex = TRUE;\n }\n \f\n /* Builtin help.  */\n@@ -198,7 +249,7 @@ lex_constant (long *v)\n     }\n \n   errno = 0;\n-  *v = strtol (p, &end, 0);\n+  *v = s12z_strtol (p, &end);\n   if (errno == 0 && end != p)\n     {\n       input_line_pointer = end;\n@@ -716,7 +767,7 @@ lex_offset (long *val)\n   p++;\n \n   errno = 0;\n-  *val = strtol (p, &end, 0);\n+  *val = s12z_strtol (p, &end);\n   if (errno == 0)\n     {\n       if (negative)"
    },
    {
      "sha": "6cf6f25e7c4622ac607348ff13a3ad15d6cb1735",
      "filename": "gas/doc/c-s12z.texi",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/gas/doc/c-s12z.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/gas/doc/c-s12z.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-s12z.texi?ref=22c6ccb89e0f38a70a42fb49eb167e7857d51f5c",
      "patch": "@@ -38,6 +38,19 @@ string @var{pfx}.\n \n For an explanation of what this means and why it might be needed,\n see @ref{S12Z Register Notation}.\n+\n+\n+@item -mdollar-hex\n+@cindex @samp{-mdollar-hex} option, dollar-hex\n+@cindex hexadecimal prefix, S12Z\n+The @samp{-mdollar-hex} option affects the way that literal hexadecimal constants\n+are represented.  When this option is specified, the assembler will consider\n+the @samp{$} character as the start of a hexadecimal integer constant.  Without\n+this option, the standard value of @samp{0x} is expected.\n+\n+If you use this option, then you cannot have symbol names starting with @samp{$}.\n+@samp{-mdollar-hex} is implied if the @samp{--traditional-format}\n+(@pxref{traditional-format}) is used.\n @end table\n \n @node S12Z Syntax"
    },
    {
      "sha": "dbd42695ee07a617c16be6bd78b600f949c7139b",
      "filename": "gas/testsuite/gas/s12z/dollar-hex.d",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/gas/testsuite/gas/s12z/dollar-hex.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/gas/testsuite/gas/s12z/dollar-hex.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/s12z/dollar-hex.d?ref=22c6ccb89e0f38a70a42fb49eb167e7857d51f5c",
      "patch": "@@ -0,0 +1,16 @@\n+#objdump: -d\n+#name:    Dollar sign as literal hex prefix\n+#source:  dollar-hex.s --mdollar-hex\n+\n+tmpdir/dollar-hex.o:     file format elf32-s12z\n+\n+\n+Disassembly of section .text:\n+\n+00000000 <.text>:\n+   0:\t1c bc e0 18 \tmov.b d0, \\(24,s\\)\n+   4:\tdc fa 12 34 \tneg.b 1193046\n+   8:\t56 \n+   9:\t98 12 34 56 \tld x, #1193046\n+   d:\taa e1 dd    \tjmp \\(-35,s\\)\n+"
    },
    {
      "sha": "57f12a9df4ebcc3ad221bf3d7afa4835eba90d29",
      "filename": "gas/testsuite/gas/s12z/dollar-hex.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/gas/testsuite/gas/s12z/dollar-hex.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/gas/testsuite/gas/s12z/dollar-hex.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/s12z/dollar-hex.s?ref=22c6ccb89e0f38a70a42fb49eb167e7857d51f5c",
      "patch": "@@ -0,0 +1,4 @@\n+\tmov.b d0, ($18,s)\n+\tneg.b $123456\n+\tld x, #$123456\n+\tjmp   (-$23, s)  \t; Make sure this isn't misinterpreted as the start of a predecrement operand"
    },
    {
      "sha": "4e567f912aee192a3fbd48d75fb8a67b43093e95",
      "filename": "gas/testsuite/gas/s12z/s12z.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/gas/testsuite/gas/s12z/s12z.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22c6ccb89e0f38a70a42fb49eb167e7857d51f5c/gas/testsuite/gas/s12z/s12z.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/s12z/s12z.exp?ref=22c6ccb89e0f38a70a42fb49eb167e7857d51f5c",
      "patch": "@@ -142,3 +142,4 @@ run_dump_test imm-dest\n # Miscellaneous\n \n run_dump_test reg-prefix\n+run_dump_test dollar-hex"
    }
  ]
}