{
  "sha": "7c5fa58ea907c46817b915ec8b9b35a180e0e74c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2M1ZmE1OGVhOTA3YzQ2ODE3YjkxNWVjOGI5YjM1YTE4MGUwZTc0Yw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-02-19T02:44:05Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-02-19T02:44:05Z"
    },
    "message": "bfd_get_file_size calls\n\nbfd_get_file_size can return 0, meaning the file size is unknown.\n\n\t* coffgen.c (_bfd_coff_get_external_symbols): Don't call\n\tbfd_get_file_size twice.\n\t(_bfd_coff_read_string_table): Allow for bfd_get_file_size\n\tzero, ie. unknown, return.\n\t* elf-attrs.c (_bfd_elf_parse_attributes): Likewise.\n\t* elfcode.h (elf_swap_shdr_in): Likewise.\n\t(elf_object_p): Don't call bfd_get_file_size twice and correct\n\tfile size check.",
    "tree": {
      "sha": "d5c326c134a432d499251b2e71e0f42b807adc89",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d5c326c134a432d499251b2e71e0f42b807adc89"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7c5fa58ea907c46817b915ec8b9b35a180e0e74c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c5fa58ea907c46817b915ec8b9b35a180e0e74c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7c5fa58ea907c46817b915ec8b9b35a180e0e74c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c5fa58ea907c46817b915ec8b9b35a180e0e74c/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "96d3b80f5498c0aa40099f37f6384f2041df045f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96d3b80f5498c0aa40099f37f6384f2041df045f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/96d3b80f5498c0aa40099f37f6384f2041df045f"
    }
  ],
  "stats": {
    "total": 51,
    "additions": 38,
    "deletions": 13
  },
  "files": [
    {
      "sha": "fe2ffd341a0cb496e90ea84180170265a93ae141",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c5fa58ea907c46817b915ec8b9b35a180e0e74c/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c5fa58ea907c46817b915ec8b9b35a180e0e74c/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=7c5fa58ea907c46817b915ec8b9b35a180e0e74c",
      "patch": "@@ -1,3 +1,14 @@\n+2020-02-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* coffgen.c (_bfd_coff_get_external_symbols): Don't call\n+\tbfd_get_file_size twice.\n+\t(_bfd_coff_read_string_table): Allow for bfd_get_file_size\n+\tzero, ie. unknown, return.\n+\t* elf-attrs.c (_bfd_elf_parse_attributes): Likewise.\n+\t* elfcode.h (elf_swap_shdr_in): Likewise.\n+\t(elf_object_p): Don't call bfd_get_file_size twice and correct\n+\tfile size check.\n+\n 2020-02-19  Alan Modra  <amodra@gmail.com>\n \n \t* mach-o.c (bfd_mach_o_flatten_sections): Return a bfd_boolean,"
    },
    {
      "sha": "5287130490ecd7b869da0c0c47594ddd9d38d0d8",
      "filename": "bfd/coffgen.c",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c5fa58ea907c46817b915ec8b9b35a180e0e74c/bfd/coffgen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c5fa58ea907c46817b915ec8b9b35a180e0e74c/bfd/coffgen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffgen.c?ref=7c5fa58ea907c46817b915ec8b9b35a180e0e74c",
      "patch": "@@ -1642,19 +1642,20 @@ _bfd_coff_get_external_symbols (bfd *abfd)\n   bfd_size_type symesz;\n   bfd_size_type size;\n   void * syms;\n+  ufile_ptr filesize;\n \n   if (obj_coff_external_syms (abfd) != NULL)\n     return TRUE;\n \n   symesz = bfd_coff_symesz (abfd);\n-\n   size = obj_raw_syment_count (abfd) * symesz;\n   if (size == 0)\n     return TRUE;\n+\n   /* Check for integer overflow and for unreasonable symbol counts.  */\n+  filesize = bfd_get_file_size (abfd);\n   if (size < obj_raw_syment_count (abfd)\n-      || (bfd_get_file_size (abfd) > 0\n-\t  && size > bfd_get_file_size (abfd)))\n+      || (filesize != 0 && size > filesize))\n \n     {\n       _bfd_error_handler (_(\"%pB: corrupt symbol count: %#\" PRIx64 \"\"),\n@@ -1698,6 +1699,7 @@ _bfd_coff_read_string_table (bfd *abfd)\n   bfd_size_type strsize;\n   char *strings;\n   file_ptr pos;\n+  ufile_ptr filesize;\n \n   if (obj_coff_strings (abfd) != NULL)\n     return obj_coff_strings (abfd);\n@@ -1731,7 +1733,9 @@ _bfd_coff_read_string_table (bfd *abfd)\n #endif\n     }\n \n-  if (strsize < STRING_SIZE_SIZE || strsize > bfd_get_file_size (abfd))\n+  filesize = bfd_get_file_size (abfd);\n+  if (strsize < STRING_SIZE_SIZE\n+      || (filesize != 0 && strsize > filesize))\n     {\n       _bfd_error_handler\n \t/* xgettext: c-format */"
    },
    {
      "sha": "070104c27344322d286c9b8cf2bd8ab17e4693d9",
      "filename": "bfd/elf-attrs.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c5fa58ea907c46817b915ec8b9b35a180e0e74c/bfd/elf-attrs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c5fa58ea907c46817b915ec8b9b35a180e0e74c/bfd/elf-attrs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-attrs.c?ref=7c5fa58ea907c46817b915ec8b9b35a180e0e74c",
      "patch": "@@ -436,11 +436,14 @@ _bfd_elf_parse_attributes (bfd *abfd, Elf_Internal_Shdr * hdr)\n   bfd_byte *p_end;\n   bfd_vma len;\n   const char *std_sec;\n+  ufile_ptr filesize;\n \n   /* PR 17512: file: 2844a11d.  */\n   if (hdr->sh_size == 0)\n     return;\n-  if (hdr->sh_size > bfd_get_file_size (abfd))\n+\n+  filesize = bfd_get_file_size (abfd);\n+  if (filesize != 0 && hdr->sh_size > filesize)\n     {\n       /* xgettext:c-format */\n       _bfd_error_handler (_(\"%pB: error: attribute section '%pA' too big: %#llx\"),"
    },
    {
      "sha": "a6b0c613ba24df7be8d96f8113861ef1db2598e7",
      "filename": "bfd/elfcode.h",
      "status": "modified",
      "additions": 15,
      "deletions": 8,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c5fa58ea907c46817b915ec8b9b35a180e0e74c/bfd/elfcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c5fa58ea907c46817b915ec8b9b35a180e0e74c/bfd/elfcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfcode.h?ref=7c5fa58ea907c46817b915ec8b9b35a180e0e74c",
      "patch": "@@ -317,11 +317,16 @@ elf_swap_shdr_in (bfd *abfd,\n   /* PR 23657.  Check for invalid section size, in sections with contents.\n      Note - we do not set an error value here because the contents\n      of this particular section might not be needed by the consumer.  */\n-  if (dst->sh_type != SHT_NOBITS\n-      && dst->sh_size > bfd_get_file_size (abfd))\n-    _bfd_error_handler\n-      (_(\"warning: %pB has a corrupt section with a size (%\" BFD_VMA_FMT \"x) larger than the file size\"),\n-       abfd, dst->sh_size);\n+  if (dst->sh_type != SHT_NOBITS)\n+    {\n+      ufile_ptr filesize = bfd_get_file_size (abfd);\n+\n+      if (filesize != 0 && dst->sh_size > filesize)\n+\t_bfd_error_handler\n+\t  (_(\"warning: %pB has a corrupt section with a size (%\"\n+\t     BFD_VMA_FMT \"x) larger than the file size\"),\n+\t   abfd, dst->sh_size);\n+    }\n   dst->sh_link = H_GET_32 (abfd, src->sh_link);\n   dst->sh_info = H_GET_32 (abfd, src->sh_info);\n   dst->sh_addralign = H_GET_WORD (abfd, src->sh_addralign);\n@@ -775,16 +780,18 @@ elf_object_p (bfd *abfd)\n     {\n       Elf_Internal_Phdr *i_phdr;\n       unsigned int i;\n+      ufile_ptr filesize;\n \n #ifndef BFD64\n       if (i_ehdrp->e_phnum > ((bfd_size_type) -1) / sizeof (*i_phdr))\n \tgoto got_wrong_format_error;\n #endif\n       /* Check for a corrupt input file with an impossibly large number\n \t of program headers.  */\n-      if (bfd_get_file_size (abfd) > 0\n-\t  && i_ehdrp->e_phnum > bfd_get_file_size (abfd))\n-\tgoto got_no_match;\n+      filesize = bfd_get_file_size (abfd);\n+      if (filesize != 0\n+\t  && i_ehdrp->e_phnum > filesize / sizeof (Elf_External_Phdr))\n+\tgoto got_wrong_format_error;\n       elf_tdata (abfd)->phdr\n \t= (Elf_Internal_Phdr *) bfd_alloc2 (abfd, i_ehdrp->e_phnum,\n \t\t\t\t\t    sizeof (*i_phdr));"
    }
  ]
}