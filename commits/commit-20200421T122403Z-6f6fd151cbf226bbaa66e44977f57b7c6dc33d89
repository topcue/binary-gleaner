{
  "sha": "6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmY2ZmQxNTFjYmYyMjZiYmFhNjZlNDQ5NzdmNTdiN2M2ZGMzM2Q4OQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-04-21T12:23:51Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-04-21T12:24:03Z"
    },
    "message": "elf: Strip zero-sized dynamic sections\n\nELF size_dynamic_sections is called by the ELF backend linker after all\nthe linker input files have been seen but before the section sizes have\nbeen set.  After the sections sizes have been set, target-specific,\nglobal optimizations may make some dynamic sections zero-sized if they\nare no longer needed.\n\nAdd ELF strip_zero_sized_dynamic_sections so that ELF backend linker can\nstrip zero-sized dynamic sections after the sections sizes have been set.\n\nbfd/\n\n\tPR ld/25849\n\t* elf-bfd.h (elf_backend_data): Add\n\telf_backend_strip_zero_sized_dynamic_sections.\n\t(_bfd_elf_strip_zero_sized_dynamic_sections): New prototype.\n\t* elf64-alpha.c (elf_backend_strip_zero_sized_dynamic_sections):\n\tNew macro.\n\t* elflink.c (_bfd_elf_strip_zero_sized_dynamic_sections): New\n\tfunction.\n\t* elfxx-target.h (elf_backend_strip_zero_sized_dynamic_sections):\n\tNew macro.\n\t(elfNN_bed): Add elf_backend_strip_zero_sized_dynamic_sections.\n\nld/\n\n\tPR ld/25849\n\t* ldelfgen.c (ldelf_map_segments): Call\n\telf_backend_strip_zero_sized_dynamic_sections.\n\t* testsuite/ld-alpha/tlsbinr.rd: Updated.",
    "tree": {
      "sha": "0ef4a78de35fde84a58c5964f7822a19a95c620c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0ef4a78de35fde84a58c5964f7822a19a95c620c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2"
    }
  ],
  "stats": {
    "total": 246,
    "additions": 194,
    "deletions": 52
  },
  "files": [
    {
      "sha": "8bc7ee979d81186d92181e86c4f43ae62f1cb6fe",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
      "patch": "@@ -1,3 +1,17 @@\n+2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/25849\n+\t* elf-bfd.h (elf_backend_data): Add\n+\telf_backend_strip_zero_sized_dynamic_sections.\n+\t(_bfd_elf_strip_zero_sized_dynamic_sections): New prototype.\n+\t* elf64-alpha.c (elf_backend_strip_zero_sized_dynamic_sections):\n+\tNew macro.\n+\t* elflink.c (_bfd_elf_strip_zero_sized_dynamic_sections): New\n+\tfunction.\n+\t* elfxx-target.h (elf_backend_strip_zero_sized_dynamic_sections):\n+\tNew macro.\n+\t(elfNN_bed): Add elf_backend_strip_zero_sized_dynamic_sections.\n+\n 2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* elf64-alpha.c (alpha_elf_reloc_entry): Replace reltext with"
    },
    {
      "sha": "3ae98425e86f4c84823555f7830efd7fc2419bba",
      "filename": "bfd/elf-bfd.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/bfd/elf-bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/bfd/elf-bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-bfd.h?ref=6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
      "patch": "@@ -1083,6 +1083,12 @@ struct elf_backend_data\n   bfd_boolean (*elf_backend_size_dynamic_sections)\n     (bfd *output_bfd, struct bfd_link_info *info);\n \n+  /* The STRIP_ZERO_SIZED_DYNAMIC_SECTIONS function is called by the\n+     ELF backend linker to strip zero-sized dynamic sections after\n+     the section sizes have been set.  */\n+  bfd_boolean (*elf_backend_strip_zero_sized_dynamic_sections)\n+    (struct bfd_link_info *info);\n+\n   /* Set TEXT_INDEX_SECTION and DATA_INDEX_SECTION, the output sections\n      we keep to use as a base for relocs and symbols.  */\n   void (*elf_backend_init_index_section)\n@@ -2520,6 +2526,8 @@ extern bfd_boolean bfd_elf_link_add_symbols\n   (bfd *, struct bfd_link_info *);\n extern bfd_boolean _bfd_elf_add_dynamic_entry\n   (struct bfd_link_info *, bfd_vma, bfd_vma);\n+extern bfd_boolean _bfd_elf_strip_zero_sized_dynamic_sections\n+  (struct bfd_link_info *);\n extern int bfd_elf_add_dt_needed_tag\n   (bfd *, struct bfd_link_info *);\n extern bfd_boolean _bfd_elf_link_check_relocs"
    },
    {
      "sha": "8f73212dae660c599e2293ceb48dfd3cf22beb39",
      "filename": "bfd/elf64-alpha.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/bfd/elf64-alpha.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/bfd/elf64-alpha.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-alpha.c?ref=6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
      "patch": "@@ -5538,6 +5538,9 @@ static const struct elf_size_info alpha_elf_size_info =\n #define elf_backend_special_sections \\\n   elf64_alpha_special_sections\n \n+#define elf_backend_strip_zero_sized_dynamic_sections \\\n+  _bfd_elf_strip_zero_sized_dynamic_sections\n+\n /* A few constants that determine how the .plt section is set up.  */\n #define elf_backend_want_got_plt 0\n #define elf_backend_plt_readonly 0"
    },
    {
      "sha": "6624864bf540bd1bedc2c14b9950d52a33da9a21",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 98,
      "deletions": 0,
      "changes": 98,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
      "patch": "@@ -3501,6 +3501,104 @@ _bfd_elf_add_dynamic_entry (struct bfd_link_info *info,\n   return TRUE;\n }\n \n+/* Strip zero-sized dynamic sections.  */\n+\n+bfd_boolean\n+_bfd_elf_strip_zero_sized_dynamic_sections (struct bfd_link_info *info)\n+{\n+  struct elf_link_hash_table *hash_table;\n+  const struct elf_backend_data *bed;\n+  asection *s, *sdynamic, **pp;\n+  asection *rela_dyn, *rel_dyn;\n+  Elf_Internal_Dyn dyn;\n+  bfd_byte *extdyn, *next;\n+  void (*swap_dyn_in) (bfd *, const void *, Elf_Internal_Dyn *);\n+  bfd_boolean strip_zero_sized;\n+  bfd_boolean strip_zero_sized_plt;\n+\n+  if (bfd_link_relocatable (info))\n+    return TRUE;\n+\n+  hash_table = elf_hash_table (info);\n+  if (!is_elf_hash_table (hash_table))\n+    return FALSE;\n+\n+  if (!hash_table->dynobj)\n+    return TRUE;\n+\n+  sdynamic= bfd_get_linker_section (hash_table->dynobj, \".dynamic\");\n+  if (!sdynamic)\n+    return TRUE;\n+\n+  bed = get_elf_backend_data (hash_table->dynobj);\n+  swap_dyn_in = bed->s->swap_dyn_in;\n+\n+  strip_zero_sized = FALSE;\n+  strip_zero_sized_plt = FALSE;\n+\n+  /* Strip zero-sized dynamic sections.  */\n+  rela_dyn = bfd_get_section_by_name (info->output_bfd, \".rela.dyn\");\n+  rel_dyn = bfd_get_section_by_name (info->output_bfd, \".rel.dyn\");\n+  for (pp = &info->output_bfd->sections; (s = *pp) != NULL;)\n+    if (s->size == 0\n+\t&& (s == rela_dyn\n+\t    || s == rel_dyn\n+\t    || s == hash_table->srelplt->output_section\n+\t    || s == hash_table->splt->output_section))\n+      {\n+\t*pp = s->next;\n+\tinfo->output_bfd->section_count--;\n+\tstrip_zero_sized = TRUE;\n+\tif (s == rela_dyn)\n+\t  s = rela_dyn;\n+\tif (s == rel_dyn)\n+\t  s = rel_dyn;\n+\telse if (s == hash_table->splt->output_section)\n+\t  {\n+\t    s = hash_table->splt;\n+\t    strip_zero_sized_plt = TRUE;\n+\t  }\n+\telse\n+\t  s = hash_table->srelplt;\n+\ts->flags |= SEC_EXCLUDE;\n+\ts->output_section = bfd_abs_section_ptr;\n+      }\n+    else\n+      pp = &s->next;\n+\n+  if (strip_zero_sized_plt)\n+    for (extdyn = sdynamic->contents;\n+\t extdyn < sdynamic->contents + sdynamic->size;\n+\t extdyn = next)\n+      {\n+\tnext = extdyn + bed->s->sizeof_dyn;\n+\tswap_dyn_in (hash_table->dynobj, extdyn, &dyn);\n+\tswitch (dyn.d_tag)\n+\t  {\n+\t  default:\n+\t    break;\n+\t  case DT_JMPREL:\n+\t  case DT_PLTRELSZ:\n+\t  case DT_PLTREL:\n+\t    /* Strip DT_PLTRELSZ, DT_JMPREL and DT_PLTREL entries if\n+\t       the procedure linkage table (the .plt section) has been\n+\t       removed.  */\n+\t    memmove (extdyn, next,\n+\t\t     sdynamic->size - (next - sdynamic->contents));\n+\t    next = extdyn;\n+\t  }\n+      }\n+\n+  if (strip_zero_sized)\n+    {\n+      /* Regenerate program headers.  */\n+      elf_seg_map (info->output_bfd) = NULL;\n+      return _bfd_elf_map_sections_to_segments (info->output_bfd, info);\n+    }\n+\n+  return TRUE;\n+}\n+\n /* Add a DT_NEEDED entry for this dynamic object.  Returns -1 on error,\n    1 if a DT_NEEDED tag already exists, and 0 on success.  */\n "
    },
    {
      "sha": "b41fcde0cafbdce1be6216f332198f48cf133f31",
      "filename": "bfd/elfxx-target.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/bfd/elfxx-target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/bfd/elfxx-target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-target.h?ref=6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
      "patch": "@@ -485,6 +485,9 @@\n #ifndef elf_backend_size_dynamic_sections\n #define elf_backend_size_dynamic_sections 0\n #endif\n+#ifndef elf_backend_strip_zero_sized_dynamic_sections\n+#define elf_backend_strip_zero_sized_dynamic_sections 0\n+#endif\n #ifndef elf_backend_init_index_section\n #define elf_backend_init_index_section _bfd_void_bfd_link\n #endif\n@@ -831,6 +834,7 @@ static struct elf_backend_data elfNN_bed =\n   elf_backend_adjust_dynamic_symbol,\n   elf_backend_always_size_sections,\n   elf_backend_size_dynamic_sections,\n+  elf_backend_strip_zero_sized_dynamic_sections,\n   elf_backend_init_index_section,\n   elf_backend_relocate_section,\n   elf_backend_finish_dynamic_symbol,"
    },
    {
      "sha": "1169f93373ee4bb132fac794b6e53ff1f46a383f",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
      "patch": "@@ -1,3 +1,10 @@\n+2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/25849\n+\t* ldelfgen.c (ldelf_map_segments): Call\n+\telf_backend_strip_zero_sized_dynamic_sections.\n+\t* testsuite/ld-alpha/tlsbinr.rd: Updated.\n+\n 2020-04-20  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-powerpc/tlsopt5.s: Rename foo to aaaaa."
    },
    {
      "sha": "c0568f169ff69e32abf01c4b3c7b4c92e07f7a7a",
      "filename": "ld/ldelfgen.c",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/ld/ldelfgen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/ld/ldelfgen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldelfgen.c?ref=6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
      "patch": "@@ -73,6 +73,19 @@ ldelf_map_segments (bfd_boolean need_layout)\n \n   if (tries == 0)\n     einfo (_(\"%F%P: looping in map_segments\"));\n+\n+  if (link_info.output_bfd->xvec->flavour == bfd_target_elf_flavour\n+      && lang_phdr_list == NULL)\n+    {\n+      /* If we don't have user supplied phdrs, strip zero-sized dynamic\n+\t sections and regenerate program headers.  */\n+      const struct elf_backend_data *bed\n+\t= get_elf_backend_data (link_info.output_bfd);\n+      if (bed->elf_backend_strip_zero_sized_dynamic_sections\n+\t  && !bed->elf_backend_strip_zero_sized_dynamic_sections\n+\t\t(&link_info))\n+\t  einfo (_(\"%F%P: failed to strip zero-sized dynamic sections\"));\n+    }\n }\n \n /* We want to emit CTF early if and only if we are not targetting ELF with this"
    },
    {
      "sha": "ea51686640692f3fb121bf90e892951bbd6dc940",
      "filename": "ld/testsuite/ld-alpha/tlsbinr.rd",
      "status": "modified",
      "additions": 47,
      "deletions": 52,
      "changes": 99,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/ld/testsuite/ld-alpha/tlsbinr.rd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/ld/testsuite/ld-alpha/tlsbinr.rd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-alpha/tlsbinr.rd?ref=6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
      "patch": "@@ -16,8 +16,6 @@ Section Headers:\n  +\\[[ 0-9]+\\] \\.dynsym +.*\n  +\\[[ 0-9]+\\] \\.dynstr +.*\n  +\\[[ 0-9]+\\] \\.rela\\.dyn +.*\n- +\\[[ 0-9]+\\] \\.rela\\.plt +.*\n- +\\[[ 0-9]+\\] \\.plt +PROGBITS +[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 0+ +AX +0 +0 +16\n  +\\[[ 0-9]+\\] \\.text +PROGBITS +[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 0+ +AX +0 +0 4096\n  +\\[[ 0-9]+\\] \\.eh_frame +PROGBITS +[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 00 +A +0 +0 +8\n  +\\[[ 0-9]+\\] \\.tdata +PROGBITS +[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 0+ WAT +0 +0 +4\n@@ -70,59 +68,56 @@ Symbol table '\\.symtab' contains [0-9]+ entries:\n [0-9 ]+: [0-9a-f]+ +0 +SECTION +LOCAL +DEFAULT +9 \n [0-9 ]+: [0-9a-f]+ +0 +SECTION +LOCAL +DEFAULT +10 \n [0-9 ]+: [0-9a-f]+ +0 +SECTION +LOCAL +DEFAULT +11 \n-[0-9 ]+: [0-9a-f]+ +0 +SECTION +LOCAL +DEFAULT +12 \n-[0-9 ]+: [0-9a-f]+ +0 +SECTION +LOCAL +DEFAULT +13 \n .* FILE +LOCAL +DEFAULT +ABS .*\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +10 sl1\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +10 sl2\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +10 sl3\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +10 sl4\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +10 sl5\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +10 sl6\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +10 sl7\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +10 sl8\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +8 sl1\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +8 sl2\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +8 sl3\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +8 sl4\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +8 sl5\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +8 sl6\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +8 sl7\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +8 sl8\n .* FILE +LOCAL +DEFAULT +ABS .*\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +11 bl1\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +11 bl2\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +11 bl3\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +11 bl4\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +11 bl5\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +11 bl6\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +11 bl7\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +11 bl8\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +9 bl1\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +9 bl2\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +9 bl3\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +9 bl4\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +9 bl5\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +9 bl6\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +9 bl7\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +LOCAL +DEFAULT +9 bl8\n .* FILE +LOCAL +DEFAULT +ABS .*\n-[0-9 ]+: [0-9a-f]+ +0 +OBJECT +LOCAL +DEFAULT +12 _DYNAMIC\n-[0-9 ]+: [0-9a-f]+ +0 +OBJECT +LOCAL +DEFAULT +7 _PROCEDURE_LINKAGE_TABLE_\n-[0-9 ]+: [0-9a-f]+ +0 +OBJECT +LOCAL +DEFAULT +13 _GLOBAL_OFFSET_TABLE_\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +10 sg8\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +11 bg8\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +11 bg6\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +11 bg3\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +10 sg3\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +10 sh3\n+[0-9 ]+: [0-9a-f]+ +0 +OBJECT +LOCAL +DEFAULT +10 _DYNAMIC\n+[0-9 ]+: [0-9a-f]+ +0 +OBJECT +LOCAL +DEFAULT +11 _GLOBAL_OFFSET_TABLE_\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +8 sg8\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +9 bg8\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +9 bg6\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +9 bg3\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +8 sg3\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +8 sh3\n [0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +UND sG2\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +10 sg4\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +10 sg5\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +11 bg5\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +8 sg4\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +8 sg5\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +9 bg5\n [0-9 ]+: [0-9a-f]+ +0 +FUNC +GLOBAL +DEFAULT +UND __tls_get_addr\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +10 sh7\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +10 sh8\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +10 sg1\n-[0-9 ]+: [0-9a-f]+ +52 +FUNC +GLOBAL +DEFAULT +8 _start\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +10 sh4\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +11 bg7\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +10 sh5\n-[0-9 ]+: [0-9a-f]+ +0 +NOTYPE +GLOBAL +DEFAULT +13 __bss_start\n-[0-9 ]+: [0-9a-f]+ +136 +FUNC +GLOBAL +DEFAULT +\\[STD GPLOAD\\] +8 fn2\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +10 sg2\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +8 sh7\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +8 sh8\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +8 sg1\n+[0-9 ]+: [0-9a-f]+ +52 +FUNC +GLOBAL +DEFAULT +6 _start\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +8 sh4\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +9 bg7\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +8 sh5\n+[0-9 ]+: [0-9a-f]+ +0 +NOTYPE +GLOBAL +DEFAULT +11 __bss_start\n+[0-9 ]+: [0-9a-f]+ +136 +FUNC +GLOBAL +DEFAULT +\\[STD GPLOAD\\] +6 fn2\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +8 sg2\n [0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +UND sG1\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +10 sh1\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +10 sg6\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +10 sg7\n-[0-9 ]+: [0-9a-f]+ +0 +NOTYPE +GLOBAL +DEFAULT +13 _edata\n-[0-9 ]+: [0-9a-f]+ +0 +NOTYPE +GLOBAL +DEFAULT +13 _end\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +10 sh2\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +10 sh6\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +11 bg2\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +11 bg1\n-[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +11 bg4\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +8 sh1\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +8 sg6\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +8 sg7\n+[0-9 ]+: [0-9a-f]+ +0 +NOTYPE +GLOBAL +DEFAULT +11 _edata\n+[0-9 ]+: [0-9a-f]+ +0 +NOTYPE +GLOBAL +DEFAULT +11 _end\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +8 sh2\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +HIDDEN +8 sh6\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +9 bg2\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +9 bg1\n+[0-9 ]+: [0-9a-f]+ +0 +TLS +GLOBAL +DEFAULT +9 bg4"
    }
  ]
}