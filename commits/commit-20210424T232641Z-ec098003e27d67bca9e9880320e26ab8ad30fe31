{
  "sha": "ec098003e27d67bca9e9880320e26ab8ad30fe31",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWMwOTgwMDNlMjdkNjdiY2E5ZTk4ODAzMjBlMjZhYjhhZDMwZmUzMQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-24T23:26:04Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-24T23:26:41Z"
    },
    "message": "gdbsupport: introduce struct observer\n\nInstead of using a pair.  This allows keeping more data per observer in\na structured way, and using field names is clearer than first/second.\n\ngdbsupport/ChangeLog:\n\n\t* observable.h (class observable) <struct observer>: New.\n\t<detach, notify>: Update.\n\t<m_observers>: Change type to vector of observers.\n\nChange-Id: Iadf7d1fa25049cfb089e6b1b429ddebc548825ab",
    "tree": {
      "sha": "c3e8bb931117daafa5dab0a39f863ae065841f8e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c3e8bb931117daafa5dab0a39f863ae065841f8e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ec098003e27d67bca9e9880320e26ab8ad30fe31",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ec098003e27d67bca9e9880320e26ab8ad30fe31",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ec098003e27d67bca9e9880320e26ab8ad30fe31",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ec098003e27d67bca9e9880320e26ab8ad30fe31/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3886790f133ce1ee2f30ebf37bb7dec1f812f29a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3886790f133ce1ee2f30ebf37bb7dec1f812f29a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3886790f133ce1ee2f30ebf37bb7dec1f812f29a"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 22,
    "deletions": 6
  },
  "files": [
    {
      "sha": "bfbd152ae8c97aefeac62f2d05f9aa1912801584",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec098003e27d67bca9e9880320e26ab8ad30fe31/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec098003e27d67bca9e9880320e26ab8ad30fe31/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=ec098003e27d67bca9e9880320e26ab8ad30fe31",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-24  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* observable.h (class observable) <struct observer>: New.\n+\t<detach, notify>: Update.\n+\t<m_observers>: Change type to vector of observers.\n+\n 2021-04-23  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* observable.h (observer_debug): Change to bool."
    },
    {
      "sha": "1d19429ac4f5a8d89e6021a4a63a56adc4fcc04e",
      "filename": "gdbsupport/observable.h",
      "status": "modified",
      "additions": 16,
      "deletions": 6,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec098003e27d67bca9e9880320e26ab8ad30fe31/gdbsupport/observable.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec098003e27d67bca9e9880320e26ab8ad30fe31/gdbsupport/observable.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/observable.h?ref=ec098003e27d67bca9e9880320e26ab8ad30fe31",
      "patch": "@@ -56,9 +56,20 @@ template<typename... T>\n class observable\n {\n public:\n-\n   typedef std::function<void (T...)> func_type;\n \n+private:\n+  struct observer\n+  {\n+    observer (const struct token *token, func_type func)\n+      : token (token), func (func)\n+    {}\n+\n+    const struct token *token;\n+    func_type func;\n+  };\n+\n+public:\n   explicit observable (const char *name)\n     : m_name (name)\n   {\n@@ -87,10 +98,9 @@ class observable\n   {\n     auto iter = std::remove_if (m_observers.begin (),\n \t\t\t\tm_observers.end (),\n-\t\t\t\t[&] (const std::pair<const token *,\n-\t\t\t\t     func_type> &e)\n+\t\t\t\t[&] (const observer &o)\n \t\t\t\t{\n-\t\t\t\t  return e.first == &t;\n+\t\t\t\t  return o.token == &t;\n \t\t\t\t});\n \n     m_observers.erase (iter, m_observers.end ());\n@@ -103,12 +113,12 @@ class observable\n       fprintf_unfiltered (gdb_stdlog, \"observable %s notify() called\\n\",\n \t\t\t  m_name);\n     for (auto &&e : m_observers)\n-      e.second (args...);\n+      e.func (args...);\n   }\n \n private:\n \n-  std::vector<std::pair<const token *, func_type>> m_observers;\n+  std::vector<observer> m_observers;\n   const char *m_name;\n };\n "
    }
  ]
}