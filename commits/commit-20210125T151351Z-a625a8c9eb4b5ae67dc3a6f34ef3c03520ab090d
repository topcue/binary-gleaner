{
  "sha": "a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTYyNWE4YzllYjRiNWFlNjdkYzNhNmYzNGVmM2MwMzUyMGFiMDkwZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-01-25T15:13:51Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-01-25T15:13:51Z"
    },
    "message": "Fix fixed-point regression with recent GCC\n\nA recent version of GCC changed how fixed-point types are described.\nFor example, a denominator in one test case now looks like:\n\n    GNU_denominator      (exprloc)\n     [ 0] implicit_value: 16 byte block: 00 00 b8 9d 0d 69 55 a0 01 00 00 00 00 00 00 00\n\n... the difference being that this now uses exprloc and emits a\nDW_OP_implicit_value for the 16-byte block.  (DWARF 5 still uses\nDW_FORM_data16.)\n\nThis change was made here:\n\n    https://gcc.gnu.org/pipermail/gcc-patches/2020-December/560897.html\n\nThis patch updates gdb to handle this situation.\n\nNote that, before GCC 11, this test would not give the same answer.\nEarlier versions of GCC fell back to GNAT encodings for this case.\n\ngdb/ChangeLog\n2021-01-25  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2/read.c (get_mpz): New function.\n\t(get_dwarf2_rational_constant): Use it.\n\ngdb/testsuite/ChangeLog\n2021-01-25  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/fixed_points.exp: Add regression test.\n\t* gdb.ada/fixed_points/fixed_points.adb (FP5_Var): New variable.\n\t* gdb.ada/fixed_points/pck.adb (Delta5, FP5_Type): New.",
    "tree": {
      "sha": "adc8a58898928e011b02bdffccf46bbd60a44a10",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/adc8a58898928e011b02bdffccf46bbd60a44a10"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "191849105b95e5ac3a3173547fd77f7b1fc3b283",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/191849105b95e5ac3a3173547fd77f7b1fc3b283",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/191849105b95e5ac3a3173547fd77f7b1fc3b283"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 65,
    "deletions": 19
  },
  "files": [
    {
      "sha": "0c30d7550bd49814b9b069c7b0e9ddec62df25bb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-25  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2/read.c (get_mpz): New function.\n+\t(get_dwarf2_rational_constant): Use it.\n+\n 2021-01-25  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (resolve_subexp): Handle array context."
    },
    {
      "sha": "ae95c650f1ea9c8e1335cda2a7bf71311ea4ed45",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 42,
      "deletions": 19,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d",
      "patch": "@@ -18228,6 +18228,46 @@ read_typedef (struct die_info *die, struct dwarf2_cu *cu)\n   return this_type;\n }\n \n+/* Helper for get_dwarf2_rational_constant that computes the value of\n+   a given gmp_mpz given an attribute.  */\n+\n+static void\n+get_mpz (struct dwarf2_cu *cu, gdb_mpz *value, struct attribute *attr)\n+{\n+  /* GCC will sometimes emit a 16-byte constant value as a DWARF\n+     location expression that pushes an implicit value.  */\n+  if (attr->form == DW_FORM_exprloc)\n+    {\n+      dwarf_block *blk = attr->as_block ();\n+      if (blk->size > 0 && blk->data[0] == DW_OP_implicit_value)\n+\t{\n+\t  uint64_t len;\n+\t  const gdb_byte *ptr = safe_read_uleb128 (blk->data + 1,\n+\t\t\t\t\t\t   blk->data + blk->size,\n+\t\t\t\t\t\t   &len);\n+\t  if (ptr - blk->data + len <= blk->size)\n+\t    {\n+\t      mpz_import (value->val, len,\n+\t\t\t  bfd_big_endian (cu->per_objfile->objfile->obfd) ? 1 : -1,\n+\t\t\t  1, 0, 0, ptr);\n+\t      return;\n+\t    }\n+\t}\n+\n+      /* On failure set it to 1.  */\n+      *value = gdb_mpz (1);\n+    }\n+  else if (attr->form_is_block ())\n+    {\n+      dwarf_block *blk = attr->as_block ();\n+      mpz_import (value->val, blk->size,\n+\t\t  bfd_big_endian (cu->per_objfile->objfile->obfd) ? 1 : -1,\n+\t\t  1, 0, 0, blk->data);\n+    }\n+  else\n+    *value = gdb_mpz (attr->constant_value (1));\n+}\n+\n /* Assuming DIE is a rational DW_TAG_constant, read the DIE's\n    numerator and denominator into NUMERATOR and DENOMINATOR (resp).\n \n@@ -18254,25 +18294,8 @@ get_dwarf2_rational_constant (struct die_info *die, struct dwarf2_cu *cu,\n   if (num_attr == nullptr || denom_attr == nullptr)\n     return;\n \n-  if (num_attr->form_is_block ())\n-    {\n-      dwarf_block *blk = num_attr->as_block ();\n-      mpz_import (numerator->val, blk->size,\n-\t\t  bfd_big_endian (cu->per_objfile->objfile->obfd) ? 1 : -1,\n-\t\t  1, 0, 0, blk->data);\n-    }\n-  else\n-    *numerator = gdb_mpz (num_attr->constant_value (1));\n-\n-  if (denom_attr->form_is_block ())\n-    {\n-      dwarf_block *blk = denom_attr->as_block ();\n-      mpz_import (denominator->val, blk->size,\n-\t\t  bfd_big_endian (cu->per_objfile->objfile->obfd) ? 1 : -1,\n-\t\t  1, 0, 0, blk->data);\n-    }\n-  else\n-    *denominator = gdb_mpz (denom_attr->constant_value (1));\n+  get_mpz (cu, numerator, num_attr);\n+  get_mpz (cu, denominator, denom_attr);\n }\n \n /* Same as get_dwarf2_rational_constant, but extracting an unsigned"
    },
    {
      "sha": "dad00fe5d5278d25cb337e4976e9121a65364df2",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-25  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/fixed_points.exp: Add regression test.\n+\t* gdb.ada/fixed_points/fixed_points.adb (FP5_Var): New variable.\n+\t* gdb.ada/fixed_points/pck.adb (Delta5, FP5_Type): New.\n+\n 2021-01-25  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/local-enum.exp: Add enumerator resolution test."
    },
    {
      "sha": "ac45ef92ce948fd9c8f38914fb7a93526c49a95c",
      "filename": "gdb/testsuite/gdb.ada/fixed_points.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/gdb/testsuite/gdb.ada/fixed_points.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/gdb/testsuite/gdb.ada/fixed_points.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/fixed_points.exp?ref=a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d",
      "patch": "@@ -123,5 +123,10 @@ foreach_with_prefix scenario {all minimal} {\n \tgdb_test \"print fp4_var * 1\" $fp4\n \tgdb_test \"print 1 * fp4_var\" $fp4\n \tgdb_test \"print fp4_var / 1\" $fp4\n+\n+\t# This only started working in GCC 11.\n+\tif {[test_compiler_info {gcc-11-*}]} {\n+\t    gdb_test \"print fp5_var\" \" = 3e-19\"\n+\t}\n     }\n }"
    },
    {
      "sha": "4298cdf899e835d8f46916603ede58be43e9dceb",
      "filename": "gdb/testsuite/gdb.ada/fixed_points/fixed_points.adb",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/gdb/testsuite/gdb.ada/fixed_points/fixed_points.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/gdb/testsuite/gdb.ada/fixed_points/fixed_points.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/fixed_points/fixed_points.adb?ref=a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d",
      "patch": "@@ -55,6 +55,8 @@ procedure Fixed_Points is\n    Overprecise_Object : Overprecise_Fixed_Point :=\n      Overprecise_Fixed_Point'Small;\n \n+   FP5_Var : FP5_Type := 3 * Delta5;\n+\n begin\n    Base_Object := 1.0/16.0;   -- Set breakpoint here\n    Subtype_Object := 1.0/16.0;\n@@ -64,4 +66,5 @@ begin\n    Do_Nothing (FP2_Var'Address);\n    Do_Nothing (FP3_Var'Address);\n    Do_Nothing (FP4_Var'Address);\n+   Do_Nothing (FP5_Var'Address);\n end Fixed_Points;"
    },
    {
      "sha": "3bdf0595076b5ace2163bb6f5555caba65ff1de8",
      "filename": "gdb/testsuite/gdb.ada/fixed_points/pck.ads",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/gdb/testsuite/gdb.ada/fixed_points/pck.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d/gdb/testsuite/gdb.ada/fixed_points/pck.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/fixed_points/pck.ads?ref=a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d",
      "patch": "@@ -30,6 +30,10 @@ package Pck is\n       with Small => Delta4 / 3.0;\n    FP4_Var : FP4_Type := 2 * Delta4;\n \n+   Delta5 : constant := 0.000_000_000_000_000_000_1;\n+   type FP5_Type is delta Delta5 range 0.0 .. Delta5 * 10\n+      with Small => Delta5 / 3.0;\n+\n    procedure Do_Nothing (A : System.Address);\n end pck;\n "
    }
  ]
}