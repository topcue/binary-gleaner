{
  "sha": "7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2JhMTE1NTA4YWEwMmZmYmIwMWEwOTYxM2I1ZGZmZGQwYzY1NjNlMw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-08T03:32:31Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-08T13:00:38Z"
    },
    "message": "PR26580, Size and alignment of commons vs as-needed shared lib\n\nTwo pieces to this puzzle:\n1) Revert HJ's fix for PR13250 so that size and alignment isn't\n   sticky, instead attack the real underlying problem that\n   _bfd_generic_link_add_one_symbol does the wrong thing in making a\n   common section in a shared library bfd.\n2) Save and restore common u.c.p fields, which hold the section and\n   alignment.\n\nA better fix for (2) would be to throw away all of that horrible code\nsaving and restoring the hash table when loading as-needed library\nsymbols, and instead do a scan over as-needed library symbols before\nadding anything.\n\nbfd/\n\tPR 13250\n\tPR 26580\n\t* elflink.c (_bfd_elf_merge_symbol): Make \"override\" a bfd**.\n\tReturn oldbfd in override when old common should override new\n\tcommon.\n\t(_bfd_elf_add_default_symbol): Adjust to suit.\n\t(elf_link_add_object_symbols): Likewise.  Pass \"override\" to\n\t_bfd_generic_link_add_one_symbol.  Save and restore common u.c.p\n\tfield for --as-needed shared libraries.  Revert pr13250 changes.\nld/\n\t* testsuite/ld-elf/pr26580-a.s,\n\t* testsuite/ld-elf/pr26580-b.s,\n\t* testsuite/ld-elf/pr26580-1.sd,\n\t* testsuite/ld-elf/pr26580-2.sd: New tests\n\t* testsuite/ld-elf/comm-data.exp: Run new tests.\n\t* testsuite/ld-elf/pr26580-a.c,\n\t* testsuite/ld-elf/pr26580-b.c,\n\t* testsuite/ld-elf/pr26580-3.out,\n\t* testsuite/ld-elf/pr26580-4.out: New tests.\n\t* testsuite/ld-elf/shared.exp: Run new tests.",
    "tree": {
      "sha": "9a0251fdea1dd80de80d22b01ca2172b8fab0b71",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9a0251fdea1dd80de80d22b01ca2172b8fab0b71"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7ade7fba756326c5f35f53a8e2d46443c6bab73f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ade7fba756326c5f35f53a8e2d46443c6bab73f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7ade7fba756326c5f35f53a8e2d46443c6bab73f"
    }
  ],
  "stats": {
    "total": 209,
    "additions": 159,
    "deletions": 50
  },
  "files": [
    {
      "sha": "4faa8f235112de1c0e624f331c4d7e1fca3b77e4",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -1,3 +1,15 @@\n+2020-09-08  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 13250\n+\tPR 26580\n+\t* elflink.c (_bfd_elf_merge_symbol): Make \"override\" a bfd**.\n+\tReturn oldbfd in override when old common should override new\n+\tcommon.\n+\t(_bfd_elf_add_default_symbol): Adjust to suit.\n+\t(elf_link_add_object_symbols): Likewise.  Pass \"override\" to\n+\t_bfd_generic_link_add_one_symbol.  Save and restore common u.c.p\n+\tfield for --as-needed shared libraries.  Revert pr13250 changes.\n+\n 2020-09-08  Nick Clifton  <nickc@redhat.com>\n \n \t* plugin.c (bfd_plugin_canonicalize_symtab): Handle the case of an"
    },
    {
      "sha": "0e339f3c1ea44f745767115d1373937e5479af29",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 34,
      "deletions": 40,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -1058,7 +1058,7 @@ _bfd_elf_merge_symbol (bfd *abfd,\n \t\t       bfd_boolean *pold_weak,\n \t\t       unsigned int *pold_alignment,\n \t\t       bfd_boolean *skip,\n-\t\t       bfd_boolean *override,\n+\t\t       bfd **override,\n \t\t       bfd_boolean *type_change_ok,\n \t\t       bfd_boolean *size_change_ok,\n \t\t       bfd_boolean *matched)\n@@ -1076,7 +1076,7 @@ _bfd_elf_merge_symbol (bfd *abfd,\n   bfd_boolean default_sym = *matched;\n \n   *skip = FALSE;\n-  *override = FALSE;\n+  *override = NULL;\n \n   sec = *psec;\n   bind = ELF_ST_BIND (sym->st_info);\n@@ -1652,7 +1652,7 @@ _bfd_elf_merge_symbol (bfd *abfd,\n \t  || (h->root.type == bfd_link_hash_common\n \t      && (newweak || newfunc))))\n     {\n-      *override = TRUE;\n+      *override = abfd;\n       newdef = FALSE;\n       newdyncommon = FALSE;\n \n@@ -1678,7 +1678,7 @@ _bfd_elf_merge_symbol (bfd *abfd,\n   if (newdyncommon\n       && h->root.type == bfd_link_hash_common)\n     {\n-      *override = TRUE;\n+      *override = oldbfd;\n       newdef = FALSE;\n       newdyncommon = FALSE;\n       *pvalue = sym->st_size;\n@@ -1854,7 +1854,7 @@ _bfd_elf_add_default_symbol (bfd *abfd,\n   const struct elf_backend_data *bed;\n   bfd_boolean collect;\n   bfd_boolean dynamic;\n-  bfd_boolean override;\n+  bfd *override;\n   char *p;\n   size_t len, shortlen;\n   asection *tmp_sec;\n@@ -4484,7 +4484,12 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)\n \t      h = (struct elf_link_hash_entry *) p;\n \t      entsize += htab->root.table.entsize;\n \t      if (h->root.type == bfd_link_hash_warning)\n-\t\tentsize += htab->root.table.entsize;\n+\t\t{\n+\t\t  entsize += htab->root.table.entsize;\n+\t\t  h = (struct elf_link_hash_entry *) h->root.u.i.link;\n+\t\t}\n+\t      if (h->root.type == bfd_link_hash_common)\n+\t\tentsize += sizeof (*h->root.u.c.p);\n \t    }\n \t}\n \n@@ -4528,14 +4533,20 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)\n \n \t  for (p = htab->root.table.table[i]; p != NULL; p = p->next)\n \t    {\n-\t      memcpy (old_ent, p, htab->root.table.entsize);\n-\t      old_ent = (char *) old_ent + htab->root.table.entsize;\n \t      h = (struct elf_link_hash_entry *) p;\n+\t      memcpy (old_ent, h, htab->root.table.entsize);\n+\t      old_ent = (char *) old_ent + htab->root.table.entsize;\n \t      if (h->root.type == bfd_link_hash_warning)\n \t\t{\n-\t\t  memcpy (old_ent, h->root.u.i.link, htab->root.table.entsize);\n+\t\t  h = (struct elf_link_hash_entry *) h->root.u.i.link;\n+\t\t  memcpy (old_ent, h, htab->root.table.entsize);\n \t\t  old_ent = (char *) old_ent + htab->root.table.entsize;\n \t\t}\n+\t      if (h->root.type == bfd_link_hash_common)\n+\t\t{\n+\t\t  memcpy (old_ent, h->root.u.c.p, sizeof (*h->root.u.c.p));\n+\t\t  old_ent = (char *) old_ent + sizeof (*h->root.u.c.p);\n+\t\t}\n \t    }\n \t}\n     }\n@@ -4578,15 +4589,15 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)\n       bfd_boolean type_change_ok;\n       bfd_boolean new_weak;\n       bfd_boolean old_weak;\n-      bfd_boolean override;\n+      bfd *override;\n       bfd_boolean common;\n       bfd_boolean discarded;\n       unsigned int old_alignment;\n       unsigned int shindex;\n       bfd *old_bfd;\n       bfd_boolean matched;\n \n-      override = FALSE;\n+      override = NULL;\n \n       flags = BSF_NO_FLAGS;\n       sec = NULL;\n@@ -4906,7 +4917,8 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)\n \t}\n \n       if (! (_bfd_generic_link_add_one_symbol\n-\t     (info, abfd, name, flags, sec, value, NULL, FALSE, bed->collect,\n+\t     (info, override ? override : abfd, name, flags, sec, value,\n+\t      NULL, FALSE, bed->collect,\n \t      (struct bfd_link_hash_entry **) sym_hash)))\n \tgoto error_free_vers;\n \n@@ -5337,49 +5349,31 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)\n \t{\n \t  struct bfd_hash_entry *p;\n \t  struct elf_link_hash_entry *h;\n-\t  bfd_size_type size;\n-\t  unsigned int alignment_power;\n \t  unsigned int non_ir_ref_dynamic;\n \n \t  for (p = htab->root.table.table[i]; p != NULL; p = p->next)\n \t    {\n-\t      h = (struct elf_link_hash_entry *) p;\n-\t      if (h->root.type == bfd_link_hash_warning)\n-\t\th = (struct elf_link_hash_entry *) h->root.u.i.link;\n-\n-\t      /* Preserve the maximum alignment and size for common\n-\t\t symbols even if this dynamic lib isn't on DT_NEEDED\n-\t\t since it can still be loaded at run time by another\n-\t\t dynamic lib.  */\n-\t      if (h->root.type == bfd_link_hash_common)\n-\t\t{\n-\t\t  size = h->root.u.c.size;\n-\t\t  alignment_power = h->root.u.c.p->alignment_power;\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  size = 0;\n-\t\t  alignment_power = 0;\n-\t\t}\n \t      /* Preserve non_ir_ref_dynamic so that this symbol\n \t\t will be exported when the dynamic lib becomes needed\n \t\t in the second pass.  */\n+\t      h = (struct elf_link_hash_entry *) p;\n+\t      if (h->root.type == bfd_link_hash_warning)\n+\t\th = (struct elf_link_hash_entry *) h->root.u.i.link;\n \t      non_ir_ref_dynamic = h->root.non_ir_ref_dynamic;\n-\t      memcpy (p, old_ent, htab->root.table.entsize);\n-\t      old_ent = (char *) old_ent + htab->root.table.entsize;\n+\n \t      h = (struct elf_link_hash_entry *) p;\n+\t      memcpy (h, old_ent, htab->root.table.entsize);\n+\t      old_ent = (char *) old_ent + htab->root.table.entsize;\n \t      if (h->root.type == bfd_link_hash_warning)\n \t\t{\n-\t\t  memcpy (h->root.u.i.link, old_ent, htab->root.table.entsize);\n-\t\t  old_ent = (char *) old_ent + htab->root.table.entsize;\n \t\t  h = (struct elf_link_hash_entry *) h->root.u.i.link;\n+\t\t  memcpy (h, old_ent, htab->root.table.entsize);\n+\t\t  old_ent = (char *) old_ent + htab->root.table.entsize;\n \t\t}\n \t      if (h->root.type == bfd_link_hash_common)\n \t\t{\n-\t\t  if (size > h->root.u.c.size)\n-\t\t    h->root.u.c.size = size;\n-\t\t  if (alignment_power > h->root.u.c.p->alignment_power)\n-\t\t    h->root.u.c.p->alignment_power = alignment_power;\n+\t\t  memcpy (h->root.u.c.p, old_ent, sizeof (*h->root.u.c.p));\n+\t\t  old_ent = (char *) old_ent + sizeof (*h->root.u.c.p);\n \t\t}\n \t      h->root.non_ir_ref_dynamic = non_ir_ref_dynamic;\n \t    }"
    },
    {
      "sha": "4b42f05171c2eb892dedf7f972b29248450eed62",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -1,3 +1,16 @@\n+2020-09-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/ld-elf/pr26580-a.s,\n+\t* testsuite/ld-elf/pr26580-b.s,\n+\t* testsuite/ld-elf/pr26580-1.sd,\n+\t* testsuite/ld-elf/pr26580-2.sd: New tests\n+\t* testsuite/ld-elf/comm-data.exp: Run new tests.\n+\t* testsuite/ld-elf/pr26580-a.c,\n+\t* testsuite/ld-elf/pr26580-b.c,\n+\t* testsuite/ld-elf/pr26580-3.out,\n+\t* testsuite/ld-elf/pr26580-4.out: New tests.\n+\t* testsuite/ld-elf/shared.exp: Run new tests.\n+\n 2020-09-04  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-plugin/lto.exp: Don't run pr15146 tests."
    },
    {
      "sha": "16b8e2b8ed2587cf715286b9c6687c9f29eb4cef",
      "filename": "ld/testsuite/ld-elf/comm-data.exp",
      "status": "modified",
      "additions": 34,
      "deletions": 10,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/comm-data.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/comm-data.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/comm-data.exp?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -48,6 +48,16 @@ if { [istarget \"mips*vr4100*-*-elf*\"] \\\n     append LFLAGS \" -call_shared\"\n }\n \n+# Set the pointer size according to the ELF flavor.\n+set AFLAGS \"\"\n+if [is_elf64 \"tmpdir/libcomm-data.so\"] {\n+    append AFLAGS \" --defsym ELF64=1\"\n+}\n+# HPUX targets use a different .comm syntax.\n+if [istarget \"*-*-hpux*\"] {\n+    append AFLAGS \" --defsym HPUX=1\"\n+}\n+\n set testname \"Common symbol override test\"\n \n # Define a global symbol.\n@@ -62,18 +72,16 @@ run_ld_link_tests [list \\\n \t} \\\n \t\"libcomm-data.so\" \\\n     ] \\\n+    [list \\\n+\t\"libpr26580-1.so\" \\\n+\t\"$LFLAGS -shared\" \"\" \\\n+\t\"$AFLAGS_PIC $AFLAGS\" \\\n+\t{ pr26580-b.s } \\\n+\t{ } \\\n+\t\"libpr26580-1.so\" \\\n+    ] \\\n ]\n \n-# Set the pointer size according to the ELF flavor.\n-set AFLAGS \"\"\n-if [is_elf64 \"tmpdir/libcomm-data.so\"] {\n-    append AFLAGS \" --defsym ELF64=1\"\n-}\n-# HPUX targets use a different .comm syntax.\n-if [istarget \"*-*-hpux*\"] {\n-    append AFLAGS \" --defsym HPUX=1\"\n-}\n-\n # bfin-elf does not currently support copy relocs.\n setup_xfail \"bfin-*-*\"\n clear_xfail \"bfin-*-linux-uclibc*\"\n@@ -113,4 +121,20 @@ run_ld_link_tests [list \\\n \t} \\\n \t\"comm-data3b\" \\\n     ] \\\n+    [list \\\n+\t\"pr26580-1\" \\\n+\t\"$LFLAGS --as-needed -Ltmpdir -lpr26580-1\" \"\" \\\n+\t\"$AFLAGS\" \\\n+\t{ pr26580-a.s } \\\n+\t{ {readelf -s pr26580-1.sd} } \\\n+\t\"pr26580-1\" \\\n+    ] \\\n+    [list \\\n+\t\"pr26580-2\" \\\n+\t\"$LFLAGS --no-as-needed -Ltmpdir -lpr26580-1\" \"\" \\\n+\t\"$AFLAGS\" \\\n+\t{ pr26580-a.s } \\\n+\t{ {readelf -s pr26580-2.sd} } \\\n+\t\"pr26580-2\" \\\n+    ] \\\n ]"
    },
    {
      "sha": "b5adab054dae79149896123687b614275c67e630",
      "filename": "ld/testsuite/ld-elf/pr26580-1.sd",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-1.sd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-1.sd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26580-1.sd?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -0,0 +1,4 @@\n+\n+#...\n+.* 1 OBJECT  GLOBAL DEFAULT .* one\n+#pass"
    },
    {
      "sha": "265b880f81ac5dd57b2ca60f9cb8573a1ef7dece",
      "filename": "ld/testsuite/ld-elf/pr26580-2.sd",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-2.sd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-2.sd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26580-2.sd?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -0,0 +1,4 @@\n+\n+#...\n+.* 8 OBJECT  GLOBAL DEFAULT .* one\n+#pass"
    },
    {
      "sha": "566696f8b5db0279e251d6157118381ca68f7d64",
      "filename": "ld/testsuite/ld-elf/pr26580-3.out",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-3.out",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-3.out",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26580-3.out?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -0,0 +1,2 @@\n+library not loaded\n+alignment 1"
    },
    {
      "sha": "d91deeae3c388990fbf0c9f1d64ebb32c345eeac",
      "filename": "ld/testsuite/ld-elf/pr26580-4.out",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-4.out",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-4.out",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26580-4.out?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -0,0 +1,2 @@\n+library loaded\n+alignment 8"
    },
    {
      "sha": "5557997e70632101ad127e6feccced27ed0f4c17",
      "filename": "ld/testsuite/ld-elf/pr26580-a.c",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-a.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-a.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26580-a.c?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -0,0 +1,20 @@\n+#include <stdio.h>\n+\n+extern void __attribute__ ((weak)) foo (void);\n+\n+char x, y, z;\n+\n+long\n+lowest_align (void *a, void *b, void *c)\n+{\n+  unsigned long bits = (long) a | (long) b | (long) c;\n+  return bits & -bits;\n+}\n+\n+int\n+main (void)\n+{\n+  printf (\"library %sloaded\\n\", &foo ? \"\" : \"not \");\n+  printf (\"alignment %ld\\n\", lowest_align (&x, &y, &z));\n+  return 0;\n+}"
    },
    {
      "sha": "3b70ccc2cd720a712a6f469add35078d90aa8539",
      "filename": "ld/testsuite/ld-elf/pr26580-a.s",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-a.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-a.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26580-a.s?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -0,0 +1,10 @@\n+ .text\n+ .globl\t_start\n+ .globl\t__start\n+_start:\n+__start:\n+ .ifdef\tHPUX\n+one\t.comm\t1\n+ .else\n+\t.comm\tone, 1, 1\n+ .endif"
    },
    {
      "sha": "e7e13d663014bc6a02504fb5400db2397bf63bc1",
      "filename": "ld/testsuite/ld-elf/pr26580-b.c",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-b.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-b.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26580-b.c?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -0,0 +1,3 @@\n+long long x, y, z;\n+\n+void foo (void) {}"
    },
    {
      "sha": "cb06378d370ded703e7e6e195267a90ab8b1ae00",
      "filename": "ld/testsuite/ld-elf/pr26580-b.s",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-b.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/pr26580-b.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26580-b.s?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -0,0 +1,10 @@\n+ .text\n+ .globl\t_start\n+ .globl\t__start\n+_start:\n+__start:\n+ .ifdef\tHPUX\n+one\t.comm\t8\n+ .else\n+\t.comm\tone, 8, 8\n+ .endif"
    },
    {
      "sha": "6f53f9c31702223420f48195040787fac32e86a0",
      "filename": "ld/testsuite/ld-elf/shared.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ba115508aa02ffbb01a09613b5dffdd0c6563e3/ld/testsuite/ld-elf/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/shared.exp?ref=7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "patch": "@@ -841,6 +841,9 @@ append build_tests {\n   {\"Dump pr21978.so\"\n    \"-shared\" \"-fPIC -g -O2\"\n    {pr21978a.c pr21978b.c} {{objdump {-Sl} pr21978.od}} \"pr21978.so\"}\n+  {\"libpr26580-2.so\"\n+   \"-shared\" \"-fPIC -fcommon\"\n+   {pr26580-b.c} {} \"libpr26580-2.so\"}\n }\n \n run_cc_link_tests $build_tests\n@@ -1044,6 +1047,14 @@ set run_tests [list \\\n     [list \"Run pr21964-3\" \\\n      \"-Wl,--no-as-needed,-rpath,tmpdir tmpdir/pr21964-1a.so tmpdir/pr21964-1b.so tmpdir/pr21964-3a.so\" \"\" \\\n      {pr21964-3c.c} \"pr21964-3\" \"pass.out\" ] \\\n+    [list \"pr26580-3\" \\\n+     \"\" \"\" \\\n+     {pr26580-a.c} \"pr26580-3\" \"pr26580-3.out\" \"-fcommon\" \"c\" \"\" \\\n+     \"-Wl,--as-needed tmpdir/libpr26580-2.so\" ] \\\n+    [list \"pr26580-4\" \\\n+     \"\" \"\" \\\n+     {pr26580-a.c} \"pr26580-4\" \"pr26580-4.out\" \"-fcommon\" \"c\" \"\" \\\n+     \"-Wl,--no-as-needed tmpdir/libpr26580-2.so\" ] \\\n ]\n \n # NetBSD ELF systems do not currently support the .*_array sections."
    }
  ]
}