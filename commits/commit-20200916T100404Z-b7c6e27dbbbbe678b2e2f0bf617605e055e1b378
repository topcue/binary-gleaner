{
  "sha": "b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjdjNmUyN2RiYmJiZTY3OGIyZTJmMGJmNjE3NjA1ZTA1NWUxYjM3OA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-08-04T16:07:59Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-09-16T10:04:04Z"
    },
    "message": "gdb: Convert language_data::la_op_print_tab to a method\n\nConvert language_data::la_op_print_tab member variable to a virtual\nmethod language_defn::opcode_print_table.  I changed the name in order\nto make it clearer (I hope) what the method does.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_language_data): Remove la_op_print_tab\n\tinitializer.\n\t(ada_language::opcode_print_table): New member function.\n\t* c-lang.c (c_language_data): Remove la_op_print_tab initializer.\n\t(c_language::opcode_print_table): New member function.\n\t(cplus_language_data): Remove la_op_print_tab initializer.\n\t(cplus_language::opcode_print_table): New member function.\n\t(asm_language_data): Remove la_op_print_tab initializer.\n\t(asm_language::opcode_print_table): New member function.\n\t(minimal_language_data): Remove la_op_print_tab initializer.\n\t(minimal_language::opcode_print_table): New member function.\n\t* d-lang.c (d_language_data): Remove la_op_print_tab initializer.\n\t(d_language::opcode_print_table): New member function.\n\t* expprint.c (print_subexp_standard): Update call to\n\topcode_print_table.\n\t(op_string): Likewise.\n\t* f-lang.c (f_language_data): Remove la_op_print_tab initializer.\n\t(f_language::opcode_print_table): New member function.\n\t* go-lang.c (go_language_data): Remove la_op_print_tab\n\tinitializer.\n\t(go_language::opcode_print_table): New member function.\n\t* language.c (unknown_language_data): Remove la_op_print_tab\n\tinitializer.\n\t(unknown_language::opcode_print_table): New member function.\n\t(auto_language_data): Remove la_op_print_tab initializer.\n\t(auto_language::opcode_print_table): New member function.\n\t* language.h (language_data): Remove la_op_print_tab field.\n\t(language_defn::opcode_print_table): Declare new member function.\n\t* m2-lang.c (m2_language_data): Remove la_op_print_tab\n\tinitializer.\n\t(m2_language::opcode_print_table): New member function.\n\t* objc-lang.c (objc_language_data): Remove la_op_print_tab\n\tinitializer.\n\t(objc_language::opcode_print_table): New member function.\n\t* opencl-lang.c (opencl_language_data): Remove la_op_print_tab\n\tinitializer.\n\t(opencl_language::opcode_print_table): New member function.\n\t* p-lang.c (pascal_language_data): Remove la_op_print_tab\n\tinitializer.\n\t(pascal_language::opcode_print_table): New member function.\n\t* rust-lang.c (rust_language_data): Remove la_op_print_tab\n\tinitializer.\n\t(rust_language::opcode_print_table): New member function.",
    "tree": {
      "sha": "2a87e1b858d3b041518218a81cf031ba795e4561",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2a87e1b858d3b041518218a81cf031ba795e4561"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5aba6ebefb9488163c82e198b73ecf0a05a5d1fd"
    }
  ],
  "stats": {
    "total": 147,
    "additions": 127,
    "deletions": 20
  },
  "files": [
    {
      "sha": "f1fcbcfa827031fcfd58612d595995b251efdf9f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -1,3 +1,49 @@\n+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_language_data): Remove la_op_print_tab\n+\tinitializer.\n+\t(ada_language::opcode_print_table): New member function.\n+\t* c-lang.c (c_language_data): Remove la_op_print_tab initializer.\n+\t(c_language::opcode_print_table): New member function.\n+\t(cplus_language_data): Remove la_op_print_tab initializer.\n+\t(cplus_language::opcode_print_table): New member function.\n+\t(asm_language_data): Remove la_op_print_tab initializer.\n+\t(asm_language::opcode_print_table): New member function.\n+\t(minimal_language_data): Remove la_op_print_tab initializer.\n+\t(minimal_language::opcode_print_table): New member function.\n+\t* d-lang.c (d_language_data): Remove la_op_print_tab initializer.\n+\t(d_language::opcode_print_table): New member function.\n+\t* expprint.c (print_subexp_standard): Update call to\n+\topcode_print_table.\n+\t(op_string): Likewise.\n+\t* f-lang.c (f_language_data): Remove la_op_print_tab initializer.\n+\t(f_language::opcode_print_table): New member function.\n+\t* go-lang.c (go_language_data): Remove la_op_print_tab\n+\tinitializer.\n+\t(go_language::opcode_print_table): New member function.\n+\t* language.c (unknown_language_data): Remove la_op_print_tab\n+\tinitializer.\n+\t(unknown_language::opcode_print_table): New member function.\n+\t(auto_language_data): Remove la_op_print_tab initializer.\n+\t(auto_language::opcode_print_table): New member function.\n+\t* language.h (language_data): Remove la_op_print_tab field.\n+\t(language_defn::opcode_print_table): Declare new member function.\n+\t* m2-lang.c (m2_language_data): Remove la_op_print_tab\n+\tinitializer.\n+\t(m2_language::opcode_print_table): New member function.\n+\t* objc-lang.c (objc_language_data): Remove la_op_print_tab\n+\tinitializer.\n+\t(objc_language::opcode_print_table): New member function.\n+\t* opencl-lang.c (opencl_language_data): Remove la_op_print_tab\n+\tinitializer.\n+\t(opencl_language::opcode_print_table): New member function.\n+\t* p-lang.c (pascal_language_data): Remove la_op_print_tab\n+\tinitializer.\n+\t(pascal_language::opcode_print_table): New member function.\n+\t* rust-lang.c (rust_language_data): Remove la_op_print_tab\n+\tinitializer.\n+\t(rust_language::opcode_print_table): New member function.\n+\n 2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_language_data): Remove la_exp_desc initializer."
    },
    {
      "sha": "edf0d6b135f1183263de5cca1abee697fc2069fb",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -13708,7 +13708,6 @@ ada_get_symbol_name_matcher (const lookup_name_info &lookup_name)\n \n extern const struct language_data ada_language_data =\n {\n-  ada_op_print_tab,             /* expression operators for printing */\n };\n \n /* Class representing the Ada language.  */\n@@ -14210,6 +14209,11 @@ class ada_language : public language_defn\n   const struct exp_descriptor *expression_ops () const override\n   { return &ada_exp_descriptor; }\n \n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return ada_op_print_tab; }\n+\n protected:\n   /* See language.h.  */\n "
    },
    {
      "sha": "73968ed20f457eb72f250ff62e98a892ba3db0cf",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 20,
      "deletions": 4,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -875,7 +875,6 @@ const struct exp_descriptor exp_descriptor_c =\n \n extern const struct language_data c_language_data =\n {\n-  c_op_print_tab,\t\t/* expression operators for printing */\n };\n \n /* Class representing the C language.  */\n@@ -951,6 +950,11 @@ class c_language : public language_defn\n \n   const struct exp_descriptor *expression_ops () const override\n   { return &exp_descriptor_c; }\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return c_op_print_tab; }\n };\n \n /* Single instance of the C language class.  */\n@@ -989,7 +993,6 @@ enum cplus_primitive_types {\n \n extern const struct language_data cplus_language_data =\n {\n-  c_op_print_tab,\t\t/* expression operators for printing */\n };\n \n /* A class for the C++ language.  */\n@@ -1187,6 +1190,11 @@ class cplus_language : public language_defn\n   const struct exp_descriptor *expression_ops () const override\n   { return &exp_descriptor_c; }\n \n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return c_op_print_tab; }\n+\n protected:\n \n   /* See language.h.  */\n@@ -1206,7 +1214,6 @@ static cplus_language cplus_language_defn;\n \n extern const struct language_data asm_language_data =\n {\n-  c_op_print_tab,\t\t/* expression operators for printing */\n };\n \n /* A class for the ASM language.  */\n@@ -1269,6 +1276,11 @@ class asm_language : public language_defn\n \n   const struct exp_descriptor *expression_ops () const override\n   { return &exp_descriptor_c; }\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return c_op_print_tab; }\n };\n \n /* The single instance of the ASM language class.  */\n@@ -1281,7 +1293,6 @@ static asm_language asm_language_defn;\n \n extern const struct language_data minimal_language_data =\n {\n-  c_op_print_tab,\t\t/* expression operators for printing */\n };\n \n /* A class for the minimal language.  */\n@@ -1333,6 +1344,11 @@ class minimal_language : public language_defn\n \n   const struct exp_descriptor *expression_ops () const override\n   { return &exp_descriptor_c; }\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return c_op_print_tab; }\n };\n \n /* The single instance of the minimal language class.  */"
    },
    {
      "sha": "f9967868e1e0a80b7b9dd89044ca33a89e183a20",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -128,7 +128,6 @@ enum d_primitive_types {\n \n extern const struct language_data d_language_data =\n {\n-  d_op_print_tab,\t\t/* Expression operators for printing.  */\n };\n \n /* Class representing the D language.  */\n@@ -280,6 +279,11 @@ class d_language : public language_defn\n \n   const struct exp_descriptor *expression_ops () const override\n   { return &exp_descriptor_c; }\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return d_op_print_tab; }\n };\n \n /* Single instance of the D language class.  */"
    },
    {
      "sha": "5bd9553a4112c2fc78dd70c79d25ba746834ddc3",
      "filename": "gdb/expprint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/expprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/expprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expprint.c?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -73,7 +73,7 @@ print_subexp_standard (struct expression *exp, int *pos,\n   struct value *val;\n   char *tempstr = NULL;\n \n-  op_print_tab = exp->language_defn->la_op_print_tab;\n+  op_print_tab = exp->language_defn->opcode_print_table ();\n   pc = (*pos)++;\n   opcode = exp->elts[pc].opcode;\n   switch (opcode)\n@@ -669,7 +669,7 @@ op_string (enum exp_opcode op)\n   int tem;\n   const struct op_print *op_print_tab;\n \n-  op_print_tab = current_language->la_op_print_tab;\n+  op_print_tab = current_language->opcode_print_table ();\n   for (tem = 0; op_print_tab[tem].opcode != OP_NULL; tem++)\n     if (op_print_tab[tem].opcode == op)\n       return op_print_tab[tem].string;"
    },
    {
      "sha": "510d06737ead07b99a0fd76b806d0a94cd2a8573",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -486,7 +486,6 @@ static const struct exp_descriptor exp_descriptor_f =\n \n extern const struct language_data f_language_data =\n {\n-  f_op_print_tab,\t\t/* expression operators for printing */\n };\n \n /* Class representing the Fortran language.  */\n@@ -736,6 +735,11 @@ class f_language : public language_defn\n   const struct exp_descriptor *expression_ops () const override\n   { return &exp_descriptor_f; }\n \n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return f_op_print_tab; }\n+\n protected:\n \n   /* See language.h.  */"
    },
    {
      "sha": "2b9be93b2e5c37cb7bb5d424ab382e90168d3010",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -508,7 +508,6 @@ enum go_primitive_types {\n \n extern const struct language_data go_language_data =\n {\n-  go_op_print_tab,\t\t/* Expression operators for printing.  */\n };\n \n /* Class representing the Go language.  */\n@@ -641,6 +640,11 @@ class go_language : public language_defn\n \n   const struct exp_descriptor *expression_ops () const override\n   { return &exp_descriptor_c; }\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return go_op_print_tab; }\n };\n \n /* Single instance of the Go language class.  */"
    },
    {
      "sha": "37aef2cd73b9938c3e571a50a7c228c5b8ef5fd2",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -816,7 +816,6 @@ unknown_language_arch_info (struct gdbarch *gdbarch,\n \n extern const struct language_data unknown_language_data =\n {\n-  unk_op_print_tab,\t\t/* expression operators for printing */\n };\n \n /* Class representing the unknown language.  */\n@@ -937,6 +936,11 @@ class unknown_language : public language_defn\n \n   bool store_sym_names_in_linkage_form_p () const override\n   { return true; }\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return unk_op_print_tab; }\n };\n \n /* Single instance of the unknown language class.  */\n@@ -947,7 +951,6 @@ static unknown_language unknown_language_defn;\n \n extern const struct language_data auto_language_data =\n {\n-  unk_op_print_tab,\t\t/* expression operators for printing */\n };\n \n /* Class representing the fake \"auto\" language.  */\n@@ -1063,6 +1066,11 @@ class auto_language : public language_defn\n \n   const char *name_of_this () const override\n   { return \"this\"; }\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return unk_op_print_tab; }\n };\n \n /* Single instance of the fake \"auto\" language.  */"
    },
    {
      "sha": "2d13cfa9db9819e51e0307541349c59147c816e7",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -168,9 +168,6 @@ extern const char *default_word_break_characters (void);\n \n struct language_data\n   {\n-    /* Table for printing expressions.  */\n-\n-    const struct op_print *la_op_print_tab;\n   };\n \n /* Base class from which all other language classes derive.  */\n@@ -567,6 +564,10 @@ struct language_defn : language_data\n \n   virtual const struct exp_descriptor *expression_ops () const;\n \n+  /* Table for printing expressions.  */\n+\n+  virtual const struct op_print *opcode_print_table () const = 0;\n+\n protected:\n \n   /* This is the overridable part of the GET_SYMBOL_NAME_MATCHER method."
    },
    {
      "sha": "1f9c8a878e46dd23248ed3bd8daaca33cf2d9ebb",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -199,7 +199,6 @@ const struct exp_descriptor exp_descriptor_modula2 =\n \n extern const struct language_data m2_language_data =\n {\n-  m2_op_print_tab,\t\t/* expression operators for printing */\n };\n \n /* Class representing the M2 language.  */\n@@ -448,6 +447,11 @@ class m2_language : public language_defn\n \n   const struct exp_descriptor *expression_ops () const override\n   { return &exp_descriptor_modula2; }\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return m2_op_print_tab; }\n };\n \n /* Single instance of the M2 language.  */"
    },
    {
      "sha": "b59a45b49beb7f92edf0d2f100d89df1e50d93fe",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -323,7 +323,6 @@ static const struct op_print objc_op_print_tab[] =\n \n extern const struct language_data objc_language_data =\n {\n-  objc_op_print_tab,\t\t/* Expression operators for printing */\n };\n \n /* Class representing the Objective-C language.  */\n@@ -427,6 +426,11 @@ class objc_language : public language_defn\n \n   enum macro_expansion macro_expansion () const override\n   { return macro_expansion_c; }\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return c_op_print_tab; }\n };\n \n /* Single instance of the class representing the Objective-C language.  */"
    },
    {
      "sha": "df99fdc2f4bf8d0e423dfc0fe98486d6f16deb8e",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -1006,7 +1006,6 @@ const struct exp_descriptor exp_descriptor_opencl =\n /* Constant data representing the OpenCL language.  */\n extern const struct language_data opencl_language_data =\n {\n-  c_op_print_tab,\t\t/* expression operators for printing */\n };\n \n /* Class representing the OpenCL language.  */\n@@ -1074,6 +1073,11 @@ class opencl_language : public language_defn\n \n   const struct exp_descriptor *expression_ops () const override\n   { return &exp_descriptor_opencl; }\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return c_op_print_tab; }\n };\n \n /* Single instance of the OpenCL language class.  */"
    },
    {
      "sha": "6a9811d869c9e1363c98f0f566001817bb82de9a",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -252,7 +252,6 @@ enum pascal_primitive_types {\n \n extern const struct language_data pascal_language_data =\n {\n-  pascal_op_print_tab,\t\t/* expression operators for printing */\n };\n \n /* Class representing the Pascal language.  */\n@@ -507,6 +506,11 @@ class pascal_language : public language_defn\n \n   bool range_checking_on_by_default () const override\n   { return true; }\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return pascal_op_print_tab; }\n };\n \n /* Single instance of the Pascal language class.  */"
    },
    {
      "sha": "1971a8d3a38fdc41c26f9f8b45da4e1adbc4f8d8",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c6e27dbbbbe678b2e2f0bf617605e055e1b378/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=b7c6e27dbbbbe678b2e2f0bf617605e055e1b378",
      "patch": "@@ -1901,7 +1901,6 @@ static const struct exp_descriptor exp_descriptor_rust =\n \n extern const struct language_data rust_language_data =\n {\n-  c_op_print_tab,\t\t/* expression operators for printing */\n };\n \n /* Class representing the Rust language.  */\n@@ -2153,6 +2152,11 @@ class rust_language : public language_defn\n \n   const struct exp_descriptor *expression_ops () const override\n   { return &exp_descriptor_rust; }\n+\n+  /* See language.h.  */\n+\n+  const struct op_print *opcode_print_table () const override\n+  { return c_op_print_tab; }\n };\n \n /* Single instance of the Rust language class.  */"
    }
  ]
}