{
  "sha": "4a620b7e30fe58c3f53ad7a2044728e850b921d2",
  "node_id": "C_kwDOANOeidoAKDRhNjIwYjdlMzBmZTU4YzNmNTNhZDdhMjA0NDcyOGU4NTBiOTIxZDI",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2022-02-02T15:54:03Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2022-02-04T16:07:37Z"
    },
    "message": "gdb: include jit_code_entry::symfile_addr value in names of objfiles created by jit reader API\n\nThis commit includes the JIT object's symfile address in the names of\nobjfiles created by JIT reader API (e.g., << JIT compiled code at\n0x7ffd8a0c77a0 >>).  This allows one to at least differentiate one from\nanother.\n\nThe address is the one that the debugged program has put in\njit_code_entry::symfile_addr, and that the JIT reader's read function\nreceives.  As we can see in gdb.base/jit-reader-host.c and\ngdb.base/jit-reader.c, that may not be the actual value of where the\nJIT-ed code is.  But it is a value chosen by the author of the JIT\nengine and the JIT reader, so including this value in the objfile name\nmay help them correlate the JIT objfiles created by with their logs /\ndata structures.\n\nTo access this field, we need to pass down a reference to the\njit_code_entry.  So make jit_dbg_reader_data a structure (instead of an\nalias for a CORE_ADDR) that includes the address of the code entry in\nthe inferior's address space (the previous meaning of\njit_dbg_reader_data) plus a reference to the jit_code_entry as read into\nGDB's address space.  And while at it, pass down the gdbarch, so that we\ndon't have to call target_gdbarch.\n\nCo-Authored-By: Jan Vrany <jan.vrany@labware.com>\nChange-Id: Ib26c4d1bd8de503d651aff89ad2e500cb312afa5",
    "tree": {
      "sha": "307ff7e55a30c639584aa1699d557e433d8b7aa3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/307ff7e55a30c639584aa1699d557e433d8b7aa3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4a620b7e30fe58c3f53ad7a2044728e850b921d2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a620b7e30fe58c3f53ad7a2044728e850b921d2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4a620b7e30fe58c3f53ad7a2044728e850b921d2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a620b7e30fe58c3f53ad7a2044728e850b921d2/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "480157863bac93e56f97f93d5d90818a47debbf6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/480157863bac93e56f97f93d5d90818a47debbf6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/480157863bac93e56f97f93d5d90818a47debbf6"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 29,
    "deletions": 16
  },
  "files": [
    {
      "sha": "356525443cb246f9ca172d00f3fc52389387e60e",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 27,
      "deletions": 14,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a620b7e30fe58c3f53ad7a2044728e850b921d2/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a620b7e30fe58c3f53ad7a2044728e850b921d2/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=4a620b7e30fe58c3f53ad7a2044728e850b921d2",
      "patch": "@@ -380,7 +380,16 @@ struct gdb_object\n /* The type of the `private' data passed around by the callback\n    functions.  */\n \n-typedef CORE_ADDR jit_dbg_reader_data;\n+struct jit_dbg_reader_data\n+{\n+  /* Address of the jit_code_entry in the inferior's address space.  */\n+  CORE_ADDR entry_addr;\n+\n+  /* The code entry, copied in our address space.  */\n+  const jit_code_entry &entry;\n+\n+  struct gdbarch *gdbarch;\n+};\n \n /* The reader calls into this function to read data off the targets\n    address space.  */\n@@ -623,19 +632,20 @@ static void\n jit_object_close_impl (struct gdb_symbol_callbacks *cb,\n \t\t       struct gdb_object *obj)\n {\n-  struct objfile *objfile;\n-  jit_dbg_reader_data *priv_data;\n-\n-  priv_data = (jit_dbg_reader_data *) cb->priv_data;\n+  jit_dbg_reader_data *priv_data = (jit_dbg_reader_data *) cb->priv_data;\n+  std::string objfile_name\n+    = string_printf (\"<< JIT compiled code at %s >>\",\n+\t\t     paddress (priv_data->gdbarch,\n+\t\t\t       priv_data->entry.symfile_addr));\n \n-  objfile = objfile::make (nullptr, \"<< JIT compiled code >>\",\n-\t\t\t   OBJF_NOT_FILENAME);\n-  objfile->per_bfd->gdbarch = target_gdbarch ();\n+  objfile *objfile = objfile::make (nullptr, objfile_name.c_str (),\n+\t\t\t\t    OBJF_NOT_FILENAME);\n+  objfile->per_bfd->gdbarch = priv_data->gdbarch;\n \n   for (gdb_symtab &symtab : obj->symtabs)\n     finalize_symtab (&symtab, objfile);\n \n-  add_objfile_entry (objfile, *priv_data);\n+  add_objfile_entry (objfile, priv_data->entry_addr);\n \n   delete obj;\n }\n@@ -645,11 +655,16 @@ jit_object_close_impl (struct gdb_symbol_callbacks *cb,\n    inferior address space.  */\n \n static int\n-jit_reader_try_read_symtab (struct jit_code_entry *code_entry,\n+jit_reader_try_read_symtab (gdbarch *gdbarch, jit_code_entry *code_entry,\n \t\t\t    CORE_ADDR entry_addr)\n {\n   int status;\n-  jit_dbg_reader_data priv_data;\n+  jit_dbg_reader_data priv_data\n+    {\n+      entry_addr,\n+      *code_entry,\n+      gdbarch\n+    };\n   struct gdb_reader_funcs *funcs;\n   struct gdb_symbol_callbacks callbacks =\n     {\n@@ -665,8 +680,6 @@ jit_reader_try_read_symtab (struct jit_code_entry *code_entry,\n       &priv_data\n     };\n \n-  priv_data = entry_addr;\n-\n   if (!loaded_jit_reader)\n     return 0;\n \n@@ -779,7 +792,7 @@ jit_register_code (struct gdbarch *gdbarch,\n \t\t    paddress (gdbarch, code_entry->symfile_addr),\n \t\t    pulongest (code_entry->symfile_size));\n \n-  success = jit_reader_try_read_symtab (code_entry, entry_addr);\n+  success = jit_reader_try_read_symtab (gdbarch, code_entry, entry_addr);\n \n   if (!success)\n     jit_bfd_try_read_symtab (code_entry, entry_addr, gdbarch);"
    },
    {
      "sha": "d94360cd7d9e193aab8a142d92b46ba91edebbbe",
      "filename": "gdb/testsuite/gdb.base/jit-reader.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a620b7e30fe58c3f53ad7a2044728e850b921d2/gdb/testsuite/gdb.base/jit-reader.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a620b7e30fe58c3f53ad7a2044728e850b921d2/gdb/testsuite/gdb.base/jit-reader.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/jit-reader.exp?ref=4a620b7e30fe58c3f53ad7a2044728e850b921d2",
      "patch": "@@ -230,11 +230,11 @@ proc jit_reader_test {} {\n \n \t    if { ![skip_python_tests] } {\n \t\tgdb_test \"python print(gdb.objfiles())\" \\\n-\t\t    \"$any<gdb.Objfile filename=<< JIT compiled code >>>$any\" \\\n+\t\t    \"$any<gdb.Objfile filename=<< JIT compiled code at $hex >>>$any\" \\\n \t\t    \"python gdb.Objfile.__repr__ ()\"\n \n \t\tgdb_test \"python print(list(map(lambda objf : objf.filename, gdb.objfiles())))\" \\\n-\t\t    \"$any'<< JIT compiled code >>'$any\" \\\n+\t\t    \"$any'<< JIT compiled code at $hex >>'$any\" \\\n \t\t    \"python gdb.Objfile.filename\"\n \t    }\n \t}"
    }
  ]
}