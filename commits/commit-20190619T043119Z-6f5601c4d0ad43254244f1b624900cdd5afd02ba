{
  "sha": "6f5601c4d0ad43254244f1b624900cdd5afd02ba",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmY1NjAxYzRkMGFkNDMyNTQyNDRmMWI2MjQ5MDBjZGQ1YWZkMDJiYQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-06-19T04:25:59Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-06-19T04:31:19Z"
    },
    "message": "PR24697, R_PPC_EMB_SDA21 relocation\n\n\tPR 24697\n\t* elf32-ppc.c (ppc_elf_relocate_section): Don't read insn for\n\tR_PPC_EMB_RELSDA.  Mask low bit of R_PPC_EMB_SDA21 r_offset.",
    "tree": {
      "sha": "fb88d89c8c7a4b83055340e4685f74f475c39bfd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fb88d89c8c7a4b83055340e4685f74f475c39bfd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6f5601c4d0ad43254244f1b624900cdd5afd02ba",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f5601c4d0ad43254244f1b624900cdd5afd02ba",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6f5601c4d0ad43254244f1b624900cdd5afd02ba",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f5601c4d0ad43254244f1b624900cdd5afd02ba/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4a4e7361d67cd9262be1413300795eede564f4cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a4e7361d67cd9262be1413300795eede564f4cb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4a4e7361d67cd9262be1413300795eede564f4cb"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 21,
    "deletions": 7
  },
  "files": [
    {
      "sha": "f40f6ed63dc8fdcaec2d735344c45c194cb41e21",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f5601c4d0ad43254244f1b624900cdd5afd02ba/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f5601c4d0ad43254244f1b624900cdd5afd02ba/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=6f5601c4d0ad43254244f1b624900cdd5afd02ba",
      "patch": "@@ -1,3 +1,9 @@\n+2019-06-19  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24697\n+\t* elf32-ppc.c (ppc_elf_relocate_section): Don't read insn for\n+\tR_PPC_EMB_RELSDA.  Mask low bit of R_PPC_EMB_SDA21 r_offset.\n+\n 2019-06-19  Alan Modra  <amodra@gmail.com>\n \n \t* elf64-ppc.c (ppc64_elf_inline_plt): Correct st_other test for"
    },
    {
      "sha": "df813d36cc5c5870fda44a0839f1e0710d34a7ce",
      "filename": "bfd/elf32-ppc.c",
      "status": "modified",
      "additions": 15,
      "deletions": 7,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f5601c4d0ad43254244f1b624900cdd5afd02ba/bfd/elf32-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f5601c4d0ad43254244f1b624900cdd5afd02ba/bfd/elf32-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-ppc.c?ref=6f5601c4d0ad43254244f1b624900cdd5afd02ba",
      "patch": "@@ -8654,6 +8654,19 @@ ppc_elf_relocate_section (bfd *output_bfd,\n \t\taddend -= SYM_VAL (sda);\n \t      }\n \n+\t    if (r_type == R_PPC_EMB_RELSDA)\n+\t      break;\n+\n+\t    /* The PowerPC Embedded Application Binary Interface\n+\t       version 1.0 insanely chose to specify R_PPC_EMB_SDA21\n+\t       operating on a 24-bit field at r_offset.  GNU as and\n+\t       GNU ld have always assumed R_PPC_EMB_SDA21 operates on\n+\t       a 32-bit bit insn at r_offset.  Cope with object file\n+\t       producers that possibly comply with the EABI in\n+\t       generating an odd r_offset for big-endian objects.  */\n+\t    if (r_type == R_PPC_EMB_SDA21)\n+\t      rel->r_offset &= ~1;\n+\n \t    insn = bfd_get_32 (input_bfd, contents + rel->r_offset);\n \t    if (reg == 0\n \t\t&& (r_type == R_PPC_VLE_SDA21\n@@ -8681,13 +8694,8 @@ ppc_elf_relocate_section (bfd *output_bfd,\n \t\t  goto overflow;\n \t\tgoto copy_reloc;\n \t      }\n-\t    else if (r_type == R_PPC_EMB_SDA21\n-\t\t     || r_type == R_PPC_VLE_SDA21\n-\t\t     || r_type == R_PPC_VLE_SDA21_LO)\n-\t      {\n-\t\t/* Fill in register field.  */\n-\t\tinsn = (insn & ~RA_REGISTER_MASK) | (reg << RA_REGISTER_SHIFT);\n-\t      }\n+\t    /* Fill in register field.  */\n+\t    insn = (insn & ~RA_REGISTER_MASK) | (reg << RA_REGISTER_SHIFT);\n \t    bfd_put_32 (input_bfd, insn, contents + rel->r_offset);\n \t  }\n \t  break;"
    }
  ]
}