{
  "sha": "fede52738f3ed3e375d84197380ae1a6cd35c6fe",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmVkZTUyNzM4ZjNlZDNlMzc1ZDg0MTk3MzgwYWUxYTZjZDM1YzZmZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-05T18:46:23Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-13T20:52:09Z"
    },
    "message": "Delete invisible TUI windows\n\nThis changes the TUI so that when the layout changes, any windows that\nare invisible are now deleted.  This makes it simpler to understand\nwindow lifetimes.\n\ngdb/ChangeLog\n2019-08-13  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-win.c (tui_resize_all): Call\n\ttui_delete_invisible_windows.\n\t* tui/tui-layout.c (show_layout): Call\n\ttui_delete_invisible_windows.\n\t* tui/tui-data.h (tui_delete_invisible_windows): Declare.\n\t* tui/tui-data.c (tui_delete_invisible_windows): New function.",
    "tree": {
      "sha": "c97cb10592760d6e27bee501e02e048f9917d32d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c97cb10592760d6e27bee501e02e048f9917d32d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fede52738f3ed3e375d84197380ae1a6cd35c6fe",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fede52738f3ed3e375d84197380ae1a6cd35c6fe",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fede52738f3ed3e375d84197380ae1a6cd35c6fe",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fede52738f3ed3e375d84197380ae1a6cd35c6fe/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "22c3f4909af125b457564db66e3cb3c56cb9abd3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22c3f4909af125b457564db66e3cb3c56cb9abd3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/22c3f4909af125b457564db66e3cb3c56cb9abd3"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 41,
    "deletions": 13
  },
  "files": [
    {
      "sha": "48d3fc595fb5f4dbcbe8679d2363cf7f9b4c8a3d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fede52738f3ed3e375d84197380ae1a6cd35c6fe/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fede52738f3ed3e375d84197380ae1a6cd35c6fe/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fede52738f3ed3e375d84197380ae1a6cd35c6fe",
      "patch": "@@ -1,3 +1,12 @@\n+2019-08-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-win.c (tui_resize_all): Call\n+\ttui_delete_invisible_windows.\n+\t* tui/tui-layout.c (show_layout): Call\n+\ttui_delete_invisible_windows.\n+\t* tui/tui-data.h (tui_delete_invisible_windows): Declare.\n+\t* tui/tui-data.c (tui_delete_invisible_windows): New function.\n+\n 2019-08-13  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-disasm.c (tui_show_disassem): Add assertion.  Don't call"
    },
    {
      "sha": "bb725c199ccfe79e9ca8388590c514eed76ecbfd",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fede52738f3ed3e375d84197380ae1a6cd35c6fe/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fede52738f3ed3e375d84197380ae1a6cd35c6fe/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=fede52738f3ed3e375d84197380ae1a6cd35c6fe",
      "patch": "@@ -269,6 +269,28 @@ tui_initialize_static_data ()\n   win->title = 0;\n }\n \n+/* See tui-data.h.  */\n+\n+void\n+tui_delete_invisible_windows ()\n+{\n+  for (int win_type = SRC_WIN; (win_type < MAX_MAJOR_WINDOWS); win_type++)\n+    {\n+      if (tui_win_list[win_type] != NULL\n+\t  && !tui_win_list[win_type]->is_visible)\n+\t{\n+\t  /* This should always be made visible before a call to this\n+\t     function.  */\n+\t  gdb_assert (win_type != CMD_WIN);\n+\n+\t  if (win_with_focus == tui_win_list[win_type])\n+\t    win_with_focus = nullptr;\n+\n+\t  delete tui_win_list[win_type];\n+\t  tui_win_list[win_type] = NULL;\n+\t}\n+    }\n+}\n \n tui_win_info::tui_win_info (enum tui_win_type type)\n   : tui_gen_win_info (type)"
    },
    {
      "sha": "d3fa03657c5c54b9156ff290055f524e7187591d",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fede52738f3ed3e375d84197380ae1a6cd35c6fe/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fede52738f3ed3e375d84197380ae1a6cd35c6fe/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=fede52738f3ed3e375d84197380ae1a6cd35c6fe",
      "patch": "@@ -399,6 +399,11 @@ extern void tui_set_win_resized_to (int);\n extern struct tui_win_info *tui_next_win (struct tui_win_info *);\n extern struct tui_win_info *tui_prev_win (struct tui_win_info *);\n \n+/* Delete all the invisible windows.  Note that it is an error to call\n+   this when the command window is invisible -- we don't allow the\n+   command window to be removed from the layout.  */\n+extern void tui_delete_invisible_windows ();\n+\n extern unsigned int tui_tab_width;\n \n #endif /* TUI_TUI_DATA_H */"
    },
    {
      "sha": "2715d322dc7f68320a190329e176734af681ea79",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fede52738f3ed3e375d84197380ae1a6cd35c6fe/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fede52738f3ed3e375d84197380ae1a6cd35c6fe/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=fede52738f3ed3e375d84197380ae1a6cd35c6fe",
      "patch": "@@ -107,6 +107,8 @@ show_layout (enum tui_layout_type layout)\n \tdefault:\n \t  break;\n \t}\n+\n+      tui_delete_invisible_windows ();\n     }\n }\n \n@@ -596,6 +598,7 @@ show_data (enum tui_layout_type new_layout)\n   locator->make_visible (true);\n   tui_show_locator_content ();\n   tui_add_to_source_windows (base);\n+  TUI_CMD_WIN->make_visible (true);\n   current_layout = new_layout;\n }\n "
    },
    {
      "sha": "be01c150973eb4456d16c7bfcecc3c8cd3363ee3",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 2,
      "deletions": 13,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fede52738f3ed3e375d84197380ae1a6cd35c6fe/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fede52738f3ed3e375d84197380ae1a6cd35c6fe/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=fede52738f3ed3e375d84197380ae1a6cd35c6fe",
      "patch": "@@ -537,7 +537,6 @@ tui_resize_all (void)\n       struct tui_win_info *second_win;\n       tui_source_window_base *src_win;\n       struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n-      int win_type;\n       int new_height, split_diff, cmd_split_diff, num_wins_displayed = 2;\n \n #ifdef HAVE_RESIZE_TERM\n@@ -663,18 +662,8 @@ tui_resize_all (void)\n \t    tui_erase_source_content (src_win);\n \t  break;\n \t}\n-      /* Now remove all invisible windows, and their content so that\n-         they get created again when called for with the new size.  */\n-      for (win_type = SRC_WIN; (win_type < MAX_MAJOR_WINDOWS); win_type++)\n-\t{\n-\t  if (win_type != CMD_WIN \n-\t      && (tui_win_list[win_type] != NULL)\n-\t      && !tui_win_list[win_type]->is_visible)\n-\t    {\n-\t      delete tui_win_list[win_type];\n-\t      tui_win_list[win_type] = NULL;\n-\t    }\n-\t}\n+\n+      tui_delete_invisible_windows ();\n       /* Turn keypad back on, unless focus is in the command\n \t window.  */\n       if (win_with_focus != TUI_CMD_WIN)"
    }
  ]
}