{
  "sha": "7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzA1NGUyZmZmNmQ5M2U0YzJiM2I2ZDBkZTBkOGJkYTcyZDNjM2Q1OQ==",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2019-01-28T18:16:58Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2019-01-28T18:17:22Z"
    },
    "message": "Use trad_frame_set_reg_addr for FreeBSD arm signal trampoline unwinders.\n\nReplace individual calls to trad_frame_set_reg_addr for the general\npurpose and floating point registers in signal trampoline frames used\nby FreeBSD/aarch64 and FreeBSD/arm with calls to\ntrad_frame_set_reg_addr using the register maps for the corresponding\nregister sets.\n\ngdb/ChangeLog:\n\n\t* aarch64-fbsd-tdep.c (aarch64_fbsd_gregmap)\n\t(aarch64_fbsd_fpregmap): Move earlier.\n\t(AARCH64_MCONTEXT_REG_SIZE, AARCH64_MCONTEXT_FPREG_SIZE): Delete.\n\t(aarch64_fbsd_sigframe_init): Use trad_frame_set_reg_regmap\n\tinstead of individual calls to trad_frame_set_reg_addr.\n\t* arm-fbsd-tdep.c (arm_fbsd_gregmap, arm_fbsd_vfpregmap): Move\n\tearlier.\n\t(ARM_MCONTEXT_REG_SIZE, ARM_MCONTEXT_VFP_REG_SIZE): Delete.\n\t(arm_fbsd_sigframe_init): Use trad_frame_set_reg_regmap\n\tinstead of individual calls to trad_frame_set_reg_addr.",
    "tree": {
      "sha": "b6b35ae991c2365761789672bc74bb40ad509709",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b6b35ae991c2365761789672bc74bb40ad509709"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9ee194135535acbd7b786d685666badbb59e536a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ee194135535acbd7b786d685666badbb59e536a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9ee194135535acbd7b786d685666badbb59e536a"
    }
  ],
  "stats": {
    "total": 163,
    "additions": 66,
    "deletions": 97
  },
  "files": [
    {
      "sha": "5d5f72b8174c100742137dd4be6777a8c9152851",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59",
      "patch": "@@ -1,3 +1,16 @@\n+2019-01-28  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* aarch64-fbsd-tdep.c (aarch64_fbsd_gregmap)\n+\t(aarch64_fbsd_fpregmap): Move earlier.\n+\t(AARCH64_MCONTEXT_REG_SIZE, AARCH64_MCONTEXT_FPREG_SIZE): Delete.\n+\t(aarch64_fbsd_sigframe_init): Use trad_frame_set_reg_regmap\n+\tinstead of individual calls to trad_frame_set_reg_addr.\n+\t* arm-fbsd-tdep.c (arm_fbsd_gregmap, arm_fbsd_vfpregmap): Move\n+\tearlier.\n+\t(ARM_MCONTEXT_REG_SIZE, ARM_MCONTEXT_VFP_REG_SIZE): Delete.\n+\t(arm_fbsd_sigframe_init): Use trad_frame_set_reg_regmap\n+\tinstead of individual calls to trad_frame_set_reg_addr.\n+\n 2019-01-28  Alan Hayward  <alan.hayward@arm.com>\n \n \t* CONTRIBUTE: Replace contribution list with wiki link."
    },
    {
      "sha": "c611ff350bda8f1420de9e87b95d74fa5e297251",
      "filename": "gdb/aarch64-fbsd-tdep.c",
      "status": "modified",
      "additions": 30,
      "deletions": 57,
      "changes": 87,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59/gdb/aarch64-fbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59/gdb/aarch64-fbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-fbsd-tdep.c?ref=7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59",
      "patch": "@@ -29,6 +29,26 @@\n #include \"tramp-frame.h\"\n #include \"trad-frame.h\"\n \n+/* Register maps.  */\n+\n+static const struct regcache_map_entry aarch64_fbsd_gregmap[] =\n+  {\n+    { 30, AARCH64_X0_REGNUM, 8 }, /* x0 ... x29 */\n+    { 1, AARCH64_LR_REGNUM, 8 },\n+    { 1, AARCH64_SP_REGNUM, 8 },\n+    { 1, AARCH64_PC_REGNUM, 8 },\n+    { 1, AARCH64_CPSR_REGNUM, 4 },\n+    { 0 }\n+  };\n+\n+static const struct regcache_map_entry aarch64_fbsd_fpregmap[] =\n+  {\n+    { 32, AARCH64_V0_REGNUM, 16 }, /* v0 ... v31 */\n+    { 1, AARCH64_FPSR_REGNUM, 4 },\n+    { 1, AARCH64_FPCR_REGNUM, 4 },\n+    { 0 }\n+  };\n+\n /* In a signal frame, sp points to a 'struct sigframe' which is\n    defined as:\n \n@@ -49,8 +69,6 @@\n    by the floating point register set.  The floating point register\n    set is only valid if the _MC_FP_VALID flag is set in mc_flags.  */\n \n-#define AARCH64_MCONTEXT_REG_SIZE               8\n-#define AARCH64_MCONTEXT_FPREG_SIZE             16\n #define AARCH64_SIGFRAME_UCONTEXT_OFFSET\t80\n #define AARCH64_UCONTEXT_MCONTEXT_OFFSET\t16\n #define\tAARCH64_MCONTEXT_FPREGS_OFFSET\t\t272\n@@ -68,47 +86,22 @@ aarch64_fbsd_sigframe_init (const struct tramp_frame *self,\n   struct gdbarch *gdbarch = get_frame_arch (this_frame);\n   enum bfd_endian byte_order = gdbarch_byte_order (gdbarch);\n   CORE_ADDR sp = get_frame_register_unsigned (this_frame, AARCH64_SP_REGNUM);\n-  CORE_ADDR mcontext_addr =\n-    sp\n-    + AARCH64_SIGFRAME_UCONTEXT_OFFSET\n-    + AARCH64_UCONTEXT_MCONTEXT_OFFSET;\n+  CORE_ADDR mcontext_addr\n+    = (sp\n+       + AARCH64_SIGFRAME_UCONTEXT_OFFSET\n+       + AARCH64_UCONTEXT_MCONTEXT_OFFSET);\n   gdb_byte buf[4];\n-  int i;\n-\n-  for (i = 0; i < 30; i++)\n-    {\n-      trad_frame_set_reg_addr (this_cache,\n-\t\t\t       AARCH64_X0_REGNUM + i,\n-\t\t\t       mcontext_addr + i * AARCH64_MCONTEXT_REG_SIZE);\n-    }\n-  trad_frame_set_reg_addr (this_cache, AARCH64_LR_REGNUM,\n-\t\t\t   mcontext_addr + 30 * AARCH64_MCONTEXT_REG_SIZE);\n-  trad_frame_set_reg_addr (this_cache, AARCH64_SP_REGNUM,\n-\t\t\t   mcontext_addr + 31 * AARCH64_MCONTEXT_REG_SIZE);\n-  trad_frame_set_reg_addr (this_cache, AARCH64_PC_REGNUM,\n-\t\t\t   mcontext_addr + 32 * AARCH64_MCONTEXT_REG_SIZE);\n-  trad_frame_set_reg_addr (this_cache, AARCH64_CPSR_REGNUM,\n-\t\t\t   mcontext_addr + 33 * AARCH64_MCONTEXT_REG_SIZE);\n+\n+  trad_frame_set_reg_regmap (this_cache, aarch64_fbsd_gregmap, mcontext_addr,\n+\t\t\t     regcache_map_entry_size (aarch64_fbsd_gregmap));\n \n   if (target_read_memory (mcontext_addr + AARCH64_MCONTEXT_FLAGS_OFFSET, buf,\n \t\t\t  4) == 0\n       && (extract_unsigned_integer (buf, 4, byte_order)\n \t  & AARCH64_MCONTEXT_FLAG_FP_VALID))\n-    {\n-      for (i = 0; i < 32; i++)\n-\t{\n-\t  trad_frame_set_reg_addr (this_cache, AARCH64_V0_REGNUM + i,\n-\t\t\t\t   mcontext_addr\n-\t\t\t\t   + AARCH64_MCONTEXT_FPREGS_OFFSET\n-\t\t\t\t   + i * AARCH64_MCONTEXT_FPREG_SIZE);\n-\t}\n-      trad_frame_set_reg_addr (this_cache, AARCH64_FPSR_REGNUM,\n-\t\t\t       mcontext_addr + AARCH64_MCONTEXT_FPREGS_OFFSET\n-\t\t\t       + 32 * AARCH64_MCONTEXT_FPREG_SIZE);\n-      trad_frame_set_reg_addr (this_cache, AARCH64_FPCR_REGNUM,\n-\t\t\t       mcontext_addr + AARCH64_MCONTEXT_FPREGS_OFFSET\n-\t\t\t       + 32 * AARCH64_MCONTEXT_FPREG_SIZE + 4);\n-    }\n+    trad_frame_set_reg_regmap (this_cache, aarch64_fbsd_fpregmap,\n+\t\t\t       mcontext_addr + AARCH64_MCONTEXT_FPREGS_OFFSET,\n+\t\t\t       regcache_map_entry_size (aarch64_fbsd_fpregmap));\n \n   trad_frame_set_id (this_cache, frame_id_build (sp, func));\n }\n@@ -127,26 +120,6 @@ static const struct tramp_frame aarch64_fbsd_sigframe =\n   aarch64_fbsd_sigframe_init\n };\n \n-/* Register maps.  */\n-\n-static const struct regcache_map_entry aarch64_fbsd_gregmap[] =\n-  {\n-    { 30, AARCH64_X0_REGNUM, 8 }, /* x0 ... x29 */\n-    { 1, AARCH64_LR_REGNUM, 8 },\n-    { 1, AARCH64_SP_REGNUM, 8 },\n-    { 1, AARCH64_PC_REGNUM, 8 },\n-    { 1, AARCH64_CPSR_REGNUM, 4 },\n-    { 0 }\n-  };\n-\n-static const struct regcache_map_entry aarch64_fbsd_fpregmap[] =\n-  {\n-    { 32, AARCH64_V0_REGNUM, 16 }, /* v0 ... v31 */\n-    { 1, AARCH64_FPSR_REGNUM, 4 },\n-    { 1, AARCH64_FPCR_REGNUM, 4 },\n-    { 0 }\n-  };\n-\n /* Register set definitions.  */\n \n const struct regset aarch64_fbsd_gregset ="
    },
    {
      "sha": "dea3abbdd3694b8290c06cf88eceb1d695070392",
      "filename": "gdb/arm-fbsd-tdep.c",
      "status": "modified",
      "additions": 23,
      "deletions": 40,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59/gdb/arm-fbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59/gdb/arm-fbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-fbsd-tdep.c?ref=7054e2fff6d93e4c2b3b6d0de0d8bda72d3c3d59",
      "patch": "@@ -30,6 +30,25 @@\n #include \"trad-frame.h\"\n #include \"tramp-frame.h\"\n \n+/* Register maps.  */\n+\n+static const struct regcache_map_entry arm_fbsd_gregmap[] =\n+  {\n+    { 13, ARM_A1_REGNUM, 4 }, /* r0 ... r12 */\n+    { 1, ARM_SP_REGNUM, 4 },\n+    { 1, ARM_LR_REGNUM, 4 },\n+    { 1, ARM_PC_REGNUM, 4 },\n+    { 1, ARM_PS_REGNUM, 4 },\n+    { 0 }\n+  };\n+\n+static const struct regcache_map_entry arm_fbsd_vfpregmap[] =\n+  {\n+    { 32, ARM_D0_REGNUM, 8 }, /* d0 ... d31 */\n+    { 1, ARM_FPSCR_REGNUM, 4 },\n+    { 0 }\n+  };\n+\n /* In a signal frame, sp points to a 'struct sigframe' which is\n    defined as:\n \n@@ -67,8 +86,6 @@\n    the sigframe, otherwise it is NULL.  There is no non-VFP floating\n    point register state saved in the signal frame.  */\n \n-#define ARM_MCONTEXT_REG_SIZE\t\t4\n-#define ARM_MCONTEXT_VFP_REG_SIZE\t8\n #define ARM_SIGFRAME_UCONTEXT_OFFSET\t64\n #define ARM_UCONTEXT_MCONTEXT_OFFSET\t16\n #define ARM_MCONTEXT_VFP_PTR_OFFSET\t72\n@@ -89,31 +106,16 @@ arm_fbsd_sigframe_init (const struct tramp_frame *self,\n \t\t\t     + ARM_UCONTEXT_MCONTEXT_OFFSET);\n   ULONGEST mcontext_vfp_addr;\n \n-  for (int i = 0; i < 16; i++)\n-    {\n-      trad_frame_set_reg_addr (this_cache,\n-\t\t\t       ARM_A1_REGNUM + i,\n-\t\t\t       mcontext_addr + i * ARM_MCONTEXT_REG_SIZE);\n-    }\n-  trad_frame_set_reg_addr (this_cache, ARM_PS_REGNUM,\n-\t\t\t   mcontext_addr + 16 * ARM_MCONTEXT_REG_SIZE);\n+  trad_frame_set_reg_regmap (this_cache, arm_fbsd_gregmap, mcontext_addr,\n+\t\t\t     regcache_map_entry_size (arm_fbsd_gregmap));\n \n   if (safe_read_memory_unsigned_integer (mcontext_addr\n \t\t\t\t\t + ARM_MCONTEXT_VFP_PTR_OFFSET, 4,\n \t\t\t\t\t byte_order,\n \t\t\t\t\t &mcontext_vfp_addr)\n       && mcontext_vfp_addr != 0)\n-    {\n-      for (int i = 0; i < 32; i++)\n-\t{\n-\t  trad_frame_set_reg_addr (this_cache, ARM_D0_REGNUM + i,\n-\t\t\t\t   mcontext_vfp_addr\n-\t\t\t\t   + i * ARM_MCONTEXT_VFP_REG_SIZE);\n-\t}\n-      trad_frame_set_reg_addr (this_cache, ARM_FPSCR_REGNUM,\n-\t\t\t       mcontext_vfp_addr\n-\t\t\t       + 32 * ARM_MCONTEXT_VFP_REG_SIZE);\n-    }\n+    trad_frame_set_reg_regmap (this_cache, arm_fbsd_vfpregmap, mcontext_vfp_addr,\n+\t\t\t       regcache_map_entry_size (arm_fbsd_vfpregmap));\n \n   trad_frame_set_id (this_cache, frame_id_build (sp, func));\n }\n@@ -132,25 +134,6 @@ static const struct tramp_frame arm_fbsd_sigframe =\n   arm_fbsd_sigframe_init\n };\n \n-/* Register maps.  */\n-\n-static const struct regcache_map_entry arm_fbsd_gregmap[] =\n-  {\n-    { 13, ARM_A1_REGNUM, 4 }, /* r0 ... r12 */\n-    { 1, ARM_SP_REGNUM, 4 },\n-    { 1, ARM_LR_REGNUM, 4 },\n-    { 1, ARM_PC_REGNUM, 4 },\n-    { 1, ARM_PS_REGNUM, 4 },\n-    { 0 }\n-  };\n-\n-static const struct regcache_map_entry arm_fbsd_vfpregmap[] =\n-  {\n-    { 32, ARM_D0_REGNUM, 8 }, /* d0 ... d31 */\n-    { 1, ARM_FPSCR_REGNUM, 4 },\n-    { 0 }\n-  };\n-\n /* Register set definitions.  */\n \n const struct regset arm_fbsd_gregset ="
    }
  ]
}