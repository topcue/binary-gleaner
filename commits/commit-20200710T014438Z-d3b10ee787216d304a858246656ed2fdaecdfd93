{
  "sha": "d3b10ee787216d304a858246656ed2fdaecdfd93",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDNiMTBlZTc4NzIxNmQzMDRhODU4MjQ2NjU2ZWQyZmRhZWNkZmQ5Mw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-07-10T01:18:45Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-07-10T01:44:38Z"
    },
    "message": "PowerPC64 ld --no-power10-stubs\n\nNeeded for libraries that use ifuncs or other means to support\ncpu-optimized versions of functions, some power10, some not, and those\nfunctions make calls using linkage stubs.\n\nbfd/\n\t* elf64-ppc.h (struct ppc64_elf_params): Add power10_stubs.\n\t* elf64-ppc.c (struct ppc_link_hash_table): Delete\n\tpower10_stubs.\n\t(ppc64_elf_check_relocs): Adjust setting of power10_stubs.\n\t(plt_stub_size, ppc_build_one_stub, ppc_size_one_stub): Adjust\n\tuses of power10_stubs.\nld/\n\t* emultempl/ppc64elf.em (params): Init new field.\n\t(enum ppc64_opt): Add OPTION_POWER10_STUBS and OPTION_NO_POWER10_STUBS.\n\t(PARSE_AND_LIST_LONGOPTS): Support --power10-stubs and\n\t--no-power10-stubs.\n\t(PARSE_AND_LIST_OPTIONS, PARSE_AND_LIST_ARGS_CASES): Likewise.\n\t* testsuite/ld-powerpc/callstub-3.d: New test.\n\t* testsuite/ld-powerpc/powerpc.exp: Run it.",
    "tree": {
      "sha": "8a07c8d1aae6020bbf39bbc27fe4f7d309e95433",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8a07c8d1aae6020bbf39bbc27fe4f7d309e95433"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d3b10ee787216d304a858246656ed2fdaecdfd93",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3b10ee787216d304a858246656ed2fdaecdfd93",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d3b10ee787216d304a858246656ed2fdaecdfd93",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3b10ee787216d304a858246656ed2fdaecdfd93/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bf7682fdf7cf8e1efd361063e2a3a01eca953958",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf7682fdf7cf8e1efd361063e2a3a01eca953958",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bf7682fdf7cf8e1efd361063e2a3a01eca953958"
    }
  ],
  "stats": {
    "total": 107,
    "additions": 92,
    "deletions": 15
  },
  "files": [
    {
      "sha": "3cb4881febc9d9b9b072c96143a6d75a5d4a9d6a",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3b10ee787216d304a858246656ed2fdaecdfd93/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3b10ee787216d304a858246656ed2fdaecdfd93/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=d3b10ee787216d304a858246656ed2fdaecdfd93",
      "patch": "@@ -1,3 +1,12 @@\n+2020-07-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf64-ppc.h (struct ppc64_elf_params): Add power10_stubs.\n+\t* elf64-ppc.c (struct ppc_link_hash_table): Delete\n+\tpower10_stubs.\n+\t(ppc64_elf_check_relocs): Adjust setting of power10_stubs.\n+\t(plt_stub_size, ppc_build_one_stub, ppc_size_one_stub): Adjust\n+\tuses of power10_stubs.\n+\n 2020-07-09  Alan Modra  <amodra@gmail.com>\n \n \t* coff-ppc.c: Delete."
    },
    {
      "sha": "e54f561019410a0454a5cd21eb48b107ca92630b",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 12,
      "deletions": 14,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3b10ee787216d304a858246656ed2fdaecdfd93/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3b10ee787216d304a858246656ed2fdaecdfd93/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=d3b10ee787216d304a858246656ed2fdaecdfd93",
      "patch": "@@ -3245,9 +3245,6 @@ struct ppc_link_hash_table\n   /* Whether calls are made via the PLT from NOTOC functions.  */\n   unsigned int notoc_plt:1;\n \n-  /* Whether to use power10 instructions in linkage stubs.  */\n-  unsigned int power10_stubs:1;\n-\n   /* Incremented every time we size stubs.  */\n   unsigned int stub_iteration;\n \n@@ -4602,7 +4599,8 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \tcase R_PPC64_PLT_PCREL34:\n \tcase R_PPC64_PLT_PCREL34_NOTOC:\n \tcase R_PPC64_PCREL28:\n-\t  htab->power10_stubs = 1;\n+\t  if (htab->params->power10_stubs < 0)\n+\t    htab->params->power10_stubs = 1;\n \t  break;\n \tdefault:\n \t  break;\n@@ -10763,7 +10761,7 @@ plt_stub_size (struct ppc_link_hash_table *htab,\n \n   if (stub_entry->stub_type >= ppc_stub_plt_call_notoc)\n     {\n-      if (htab->power10_stubs)\n+      if (htab->params->power10_stubs > 0)\n \t{\n \t  bfd_vma start = (stub_entry->stub_offset\n \t\t\t   + stub_entry->group->stub_sec->output_offset\n@@ -11604,7 +11602,7 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \n       relp = p;\n       num_rel = 0;\n-      if (htab->power10_stubs)\n+      if (htab->params->power10_stubs > 0)\n \t{\n \t  bfd_boolean load = stub_entry->stub_type >= ppc_stub_plt_call_notoc;\n \t  p = build_power10_offset (htab->params->stub_bfd, p, off, odd, load);\n@@ -11643,7 +11641,7 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n       if (info->emitrelocations)\n \t{\n \t  bfd_vma roff = relp - stub_entry->group->stub_sec->contents;\n-\t  if (htab->power10_stubs)\n+\t  if (htab->params->power10_stubs > 0)\n \t    num_rel += num_relocs_for_power10_offset (off, odd);\n \t  else\n \t    {\n@@ -11653,7 +11651,7 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \t  r = get_relocs (stub_entry->group->stub_sec, num_rel);\n \t  if (r == NULL)\n \t    return FALSE;\n-\t  if (htab->power10_stubs)\n+\t  if (htab->params->power10_stubs > 0)\n \t    r = emit_relocs_for_power10_offset (info, r, roff, targ, off, odd);\n \t  else\n \t    r = emit_relocs_for_offset (info, r, roff, targ, off);\n@@ -11671,7 +11669,7 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \t    }\n \t}\n \n-      if (!htab->power10_stubs\n+      if (htab->params->power10_stubs <= 0\n \t  && htab->glink_eh_frame != NULL\n \t  && htab->glink_eh_frame->size != 0)\n \t{\n@@ -12019,15 +12017,15 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n       if (info->emitrelocations)\n \t{\n \t  unsigned int num_rel;\n-\t  if (htab->power10_stubs)\n+\t  if (htab->params->power10_stubs > 0)\n \t    num_rel = num_relocs_for_power10_offset (off, odd);\n \t  else\n \t    num_rel = num_relocs_for_offset (off - 8);\n \t  stub_entry->group->stub_sec->reloc_count += num_rel;\n \t  stub_entry->group->stub_sec->flags |= SEC_RELOC;\n \t}\n \n-      if (htab->power10_stubs)\n+      if (htab->params->power10_stubs > 0)\n \textra = size_power10_offset (off, odd);\n       else\n \textra = size_offset (off - 8);\n@@ -12038,7 +12036,7 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \t calculated.  */\n       off -= extra;\n \n-      if (!htab->power10_stubs)\n+      if (htab->params->power10_stubs <= 0)\n \t{\n \t  /* After the bcl, lr has been modified so we need to emit\n \t     .eh_frame info saying the return address is in r12.  */\n@@ -12101,7 +12099,7 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n       if (info->emitrelocations)\n \t{\n \t  unsigned int num_rel;\n-\t  if (htab->power10_stubs)\n+\t  if (htab->params->power10_stubs > 0)\n \t    num_rel = num_relocs_for_power10_offset (off, odd);\n \t  else\n \t    num_rel = num_relocs_for_offset (off - 8);\n@@ -12111,7 +12109,7 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \n       size = plt_stub_size (htab, stub_entry, off);\n \n-      if (!htab->power10_stubs)\n+      if (htab->params->power10_stubs <= 0)\n \t{\n \t  /* After the bcl, lr has been modified so we need to emit\n \t     .eh_frame info saying the return address is in r12.  */"
    },
    {
      "sha": "547971f8becad2a23c64aeccf12f21dfca8a5fdd",
      "filename": "bfd/elf64-ppc.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3b10ee787216d304a858246656ed2fdaecdfd93/bfd/elf64-ppc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3b10ee787216d304a858246656ed2fdaecdfd93/bfd/elf64-ppc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.h?ref=d3b10ee787216d304a858246656ed2fdaecdfd93",
      "patch": "@@ -54,6 +54,9 @@ struct ppc64_elf_params\n   /* Set if PLT call stubs for localentry:0 functions should omit r2 save.  */\n   int plt_localentry0;\n \n+  /* Whether to use power10 instructions in linkage stubs.  */\n+  int power10_stubs;\n+\n   /* Whether to canonicalize .opd so that there are no overlapping\n      .opd entries.  */\n   int non_overlapping_opd;"
    },
    {
      "sha": "b9c844ced362dbbdacc60701fee39b8abbfc3b41",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3b10ee787216d304a858246656ed2fdaecdfd93/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3b10ee787216d304a858246656ed2fdaecdfd93/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=d3b10ee787216d304a858246656ed2fdaecdfd93",
      "patch": "@@ -1,3 +1,13 @@\n+2020-07-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* emultempl/ppc64elf.em (params): Init new field.\n+\t(enum ppc64_opt): Add OPTION_POWER10_STUBS and OPTION_NO_POWER10_STUBS.\n+\t(PARSE_AND_LIST_LONGOPTS): Support --power10-stubs and\n+\t--no-power10-stubs.\n+\t(PARSE_AND_LIST_OPTIONS, PARSE_AND_LIST_ARGS_CASES): Likewise.\n+\t* testsuite/ld-powerpc/callstub-3.d: New test.\n+\t* testsuite/ld-powerpc/powerpc.exp: Run it.\n+\n 2020-07-09  Alan Modra  <amodra@gmail.com>\n \n \t* emulparams/ppcpe.sh: Delete."
    },
    {
      "sha": "4987243fa1e361a2b50b67f2c68bb60a03cb5b00",
      "filename": "ld/emultempl/ppc64elf.em",
      "status": "modified",
      "additions": 19,
      "deletions": 1,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3b10ee787216d304a858246656ed2fdaecdfd93/ld/emultempl/ppc64elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3b10ee787216d304a858246656ed2fdaecdfd93/ld/emultempl/ppc64elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/ppc64elf.em?ref=d3b10ee787216d304a858246656ed2fdaecdfd93",
      "patch": "@@ -38,7 +38,7 @@ static struct ppc64_elf_params params = { NULL,\n \t\t\t\t\t  &ppc_layout_sections_again,\n \t\t\t\t\t  1, -1, -1, 0,\n \t\t\t\t\t  ${DEFAULT_PLT_STATIC_CHAIN-0}, -1, 5,\n-\t\t\t\t\t  -1, 0, -1, -1, 0};\n+\t\t\t\t\t  -1, -1, 0, -1, -1, 0};\n \n /* Fake input file for stubs.  */\n static lang_input_statement_type *stub_file;\n@@ -684,6 +684,8 @@ enum ppc64_opt\n   OPTION_NO_PLT_ALIGN,\n   OPTION_PLT_LOCALENTRY,\n   OPTION_NO_PLT_LOCALENTRY,\n+  OPTION_POWER10_STUBS,\n+  OPTION_NO_POWER10_STUBS,\n   OPTION_STUBSYMS,\n   OPTION_NO_STUBSYMS,\n   OPTION_SAVRES,\n@@ -714,6 +716,8 @@ PARSE_AND_LIST_LONGOPTS=${PARSE_AND_LIST_LONGOPTS}'\n   { \"no-plt-align\", no_argument, NULL, OPTION_NO_PLT_ALIGN },\n   { \"plt-localentry\", optional_argument, NULL, OPTION_PLT_LOCALENTRY },\n   { \"no-plt-localentry\", no_argument, NULL, OPTION_NO_PLT_LOCALENTRY },\n+  { \"power10-stubs\", no_argument, NULL, OPTION_POWER10_STUBS },\n+  { \"no-power10-stubs\", no_argument, NULL, OPTION_NO_POWER10_STUBS },\n   { \"emit-stub-syms\", no_argument, NULL, OPTION_STUBSYMS },\n   { \"no-emit-stub-syms\", no_argument, NULL, OPTION_NO_STUBSYMS },\n   { \"dotsyms\", no_argument, NULL, OPTION_DOTSYMS },\n@@ -769,6 +773,12 @@ PARSE_AND_LIST_OPTIONS=${PARSE_AND_LIST_OPTIONS}'\n   --no-plt-localentry         Don'\\''t optimize ELFv2 calls\\n\"\n \t\t   ));\n   fprintf (file, _(\"\\\n+  --power10-stubs             Use Power10 PLT call stubs (default auto)\\n\"\n+\t\t   ));\n+  fprintf (file, _(\"\\\n+  --no-power10-stubs          Don'\\''t use Power10 PLT call stubs\\n\"\n+\t\t   ));\n+  fprintf (file, _(\"\\\n   --emit-stub-syms            Label linker stubs with a symbol\\n\"\n \t\t   ));\n   fprintf (file, _(\"\\\n@@ -878,6 +888,14 @@ PARSE_AND_LIST_ARGS_CASES=${PARSE_AND_LIST_ARGS_CASES}'\n       params.plt_localentry0 = 0;\n       break;\n \n+    case OPTION_POWER10_STUBS:\n+      params.power10_stubs = 1;\n+      break;\n+\n+    case OPTION_NO_POWER10_STUBS:\n+      params.power10_stubs = 0;\n+      break;\n+\n     case OPTION_STUBSYMS:\n       params.emit_stub_syms = 1;\n       break;"
    },
    {
      "sha": "06cbfbda4a54d68aeb067dea0eff106322cf3b5a",
      "filename": "ld/testsuite/ld-powerpc/callstub-3.d",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3b10ee787216d304a858246656ed2fdaecdfd93/ld/testsuite/ld-powerpc/callstub-3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3b10ee787216d304a858246656ed2fdaecdfd93/ld/testsuite/ld-powerpc/callstub-3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/callstub-3.d?ref=d3b10ee787216d304a858246656ed2fdaecdfd93",
      "patch": "@@ -0,0 +1,38 @@\n+#source: callstub-1.s\n+#as: -a64 -mpower10\n+#ld: -melf64ppc -shared --plt-align=0 --hash-style=gnu --no-power10-stubs\n+#objdump: -dr -Mpower10\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+.*\\.plt_call\\.f1>:\n+.*:\t(f8 41 00 18|18 00 41 f8) \tstd     r2,24\\(r1\\)\n+.*:\t(7d 88 02 a6|a6 02 88 7d) \tmflr    r12\n+.*:\t(42 9f 00 05|05 00 9f 42) \tbcl     .*\n+.*:\t(7d 68 02 a6|a6 02 68 7d) \tmflr    r11\n+.*:\t(7d 88 03 a6|a6 03 88 7d) \tmtlr    r12\n+.*:\t(3d 8b 00 01|01 00 8b 3d) \taddis   r12,r11,1\n+.*:\t(e9 8c .. ..|.. .. 8c e9) \tld      r12,.*\\(r12\\)\n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(4e 80 04 20|20 04 80 4e) \tbctr\n+\n+.*\\.plt_call\\.f2>:\n+.*:\t(7d 88 02 a6|a6 02 88 7d) \tmflr    r12\n+.*:\t(42 9f 00 05|05 00 9f 42) \tbcl     .*\n+.*:\t(7d 68 02 a6|a6 02 68 7d) \tmflr    r11\n+.*:\t(7d 88 03 a6|a6 03 88 7d) \tmtlr    r12\n+.*:\t(3d 8b 00 01|01 00 8b 3d) \taddis   r12,r11,1\n+.*:\t(e9 8c .. ..|.. .. 8c e9) \tld      r12,.*\\(r12\\)\n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(4e 80 04 20|20 04 80 4e) \tbctr\n+\n+#...\n+.*:\t(4b ff ff 81|81 ff ff 4b) \tbl      .*\\.plt_call\\.f1>\n+.*:\t(e8 41 00 18|18 00 41 e8) \tld      r2,24\\(r1\\)\n+.*:\t(4b ff ff 7d|7d ff ff 4b) \tbl      .*\\.plt_call\\.f1\\+0x4>\n+.*:\t(4b ff ff 99|99 ff ff 4b) \tbl      .*\\.plt_call\\.f2>\n+.*:\t(04 10 00 01|01 00 10 04) \tpld     r3,.*\n+.*:\t(e4 60 .. ..|.. .. 60 e4) \n+#pass"
    },
    {
      "sha": "50553baa90266c3b31875eb6855f979d3d9c6c99",
      "filename": "ld/testsuite/ld-powerpc/powerpc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3b10ee787216d304a858246656ed2fdaecdfd93/ld/testsuite/ld-powerpc/powerpc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3b10ee787216d304a858246656ed2fdaecdfd93/ld/testsuite/ld-powerpc/powerpc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/powerpc.exp?ref=d3b10ee787216d304a858246656ed2fdaecdfd93",
      "patch": "@@ -402,6 +402,7 @@ if [ supports_ppc64 ] then {\n     run_dump_test \"pr23937\"\n     run_dump_test \"callstub-1\"\n     run_dump_test \"callstub-2\"\n+    run_dump_test \"callstub-3\"\n     run_dump_test \"tlsgd\"\n     run_dump_test \"tlsld\"\n     run_dump_test \"tlsie\""
    }
  ]
}