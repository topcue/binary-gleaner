{
  "sha": "edc7a80a9c04667dfa74f90f74bd39827bc372b7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWRjN2E4MGE5YzA0NjY3ZGZhNzRmOTBmNzRiZDM5ODI3YmMzNzJiNw==",
  "commit": {
    "author": {
      "name": "Mark Wielaard",
      "email": "mark@klomp.org",
      "date": "2020-09-07T12:25:25Z"
    },
    "committer": {
      "name": "Mark Wielaard",
      "email": "mark@klomp.org",
      "date": "2020-09-11T17:18:44Z"
    },
    "message": "gas: Don't error when .debug_line already exists, unless .loc was used\n\nWhen -g was used to generate DWARF gas would error out when a .debug_line\nalready exists. But when a .debug_info section already exists it would\nsimply skip generating one without warning or error. Do the same for\n.debug_line. It is only an error when the user explicitly uses .loc\ndirectives and also generates the .debug_line table itself.\n\nThe tests are unfortunately arch specific because the line table is only\ngenerated when actual instructions have been emitted. Use i386 because\nthat is probably the most used architecture. Before this patch the new\ndwarf-line-2 testcase would fail, with this patch it succeeds (and doesn't\ntry to add its own line table).\n\ngas/ChangeLog:\n\n    * as.texi (-g): Explicitly mention when .debug_info and .debug_line\n    are generated for the DWARF format.\n    (Loc): Add that it is an error to both use a .loc directive and\n    generate a .debug_line yourself.\n    * dwarf2dbg.c (dwarf2_any_loc_directive_seen): New static variable.\n    (dwarf2_directive_loc): Set dwarf2_any_loc_directive_seen to TRUE.\n    (dwarf2_finish): Check dwarf2_any_loc_directive_seen before emitting\n    an error. Only create .debug_line if it is empty (or doesn't exist).\n    * testsuite/gas/i386/i386.exp: Add dwarf2-line-{1,2,3,4} when testing\n    an elf target.\n    * testsuite/gas/i386/dwarf2-line-{1,2,3,4}.{s,d,l}: New test files.",
    "tree": {
      "sha": "7b3047fb76bf8068810aaed3ee31e2f30bb5d0a4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7b3047fb76bf8068810aaed3ee31e2f30bb5d0a4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/edc7a80a9c04667dfa74f90f74bd39827bc372b7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/edc7a80a9c04667dfa74f90f74bd39827bc372b7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/edc7a80a9c04667dfa74f90f74bd39827bc372b7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/edc7a80a9c04667dfa74f90f74bd39827bc372b7/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "548f5275787a2328b5c1ea041e13a53e67d4accb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/548f5275787a2328b5c1ea041e13a53e67d4accb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/548f5275787a2328b5c1ea041e13a53e67d4accb"
    }
  ],
  "stats": {
    "total": 379,
    "additions": 369,
    "deletions": 10
  },
  "files": [
    {
      "sha": "1d13940896f6bc247ddf87de39b077d00d8ce003",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -1,3 +1,17 @@\n+2020-09-07  Mark Wielaard  <mark@klomp.org>\n+\n+\t* as.texi (-g): Explicitly mention when .debug_info and .debug_line\n+\tare generated for the DWARF format.\n+\t(Loc): Add that it is an error to both use a .loc directive and\n+\tgenerate a .debug_line yourself.\n+\t* dwarf2dbg.c (dwarf2_any_loc_directive_seen): New static variable.\n+\t(dwarf2_directive_loc): Set dwarf2_any_loc_directive_seen to TRUE.\n+\t(dwarf2_finish): Check dwarf2_any_loc_directive_seen before emitting\n+\tan error. Only create .debug_line if it is empty (or doesn't exist).\n+\t* testsuite/gas/i386/i386.exp: Add dwarf2-line-{1,2,3,4} when testing\n+\tan elf target.\n+\t* testsuite/gas/i386/dwarf2-line-{1,2,3,4}.{s,d,l}: New test files.\n+\n 2020-09-10  Cooper Qu  <cooper.qu@linux.alibaba.com>\n \n \t* config/tc-csky.c (md_begin): Enable extend lrw by default for"
    },
    {
      "sha": "f2a0314310d6608266194ebb3eaccd27282b882c",
      "filename": "gas/doc/as.texi",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/doc/as.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/doc/as.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/as.texi?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -745,7 +745,9 @@ compiler output).\n @itemx --gen-debug\n Generate debugging information for each assembler source line using whichever\n debug format is preferred by the target.  This currently means either STABS,\n-ECOFF or DWARF2.\n+ECOFF or DWARF2.  When the debug format is DWARF then a @code{.debug_info} and\n+@code{.debug_line} section is only emitted when the assembly file doesn't\n+generate one itself.\n \n @item --gstabs\n Generate stabs debugging information for each assembler line.  This\n@@ -5857,7 +5859,8 @@ the @code{.loc} directive will add a row to the @code{.debug_line} line\n number matrix corresponding to the immediately following assembly\n instruction.  The @var{fileno}, @var{lineno}, and optional @var{column}\n arguments will be applied to the @code{.debug_line} state machine before\n-the row is added.\n+the row is added.  It is an error for the input assembly file to generate\n+a non-empty @code{.debug_line} and also use @code{loc} directives.\n \n The @var{options} are a sequence of the following tokens in any order:\n "
    },
    {
      "sha": "1c21d58c5913fd36cf2041d6cd02f6c6f248dccd",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 21,
      "deletions": 8,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -226,9 +226,15 @@ static unsigned int  dirs_in_use = 0;\n static unsigned int  dirs_allocated = 0;\n \n /* TRUE when we've seen a .loc directive recently.  Used to avoid\n-   doing work when there's nothing to do.  */\n+   doing work when there's nothing to do.  Will be reset by\n+   dwarf2_consume_line_info.  */\n bfd_boolean dwarf2_loc_directive_seen;\n \n+/* TRUE when we've seen any .loc directive at any time during parsing.\n+   Indicates the user wants us to generate a .debug_line section.\n+   Used in dwarf2_finish as sanity check.  */\n+static bfd_boolean dwarf2_any_loc_directive_seen;\n+\n /* TRUE when we're supposed to set the basic block mark whenever a\n    label is seen.  */\n bfd_boolean dwarf2_loc_mark_labels;\n@@ -1290,7 +1296,7 @@ dwarf2_directive_loc (int dummy ATTRIBUTE_UNUSED)\n     }\n \n   demand_empty_rest_of_line ();\n-  dwarf2_loc_directive_seen = TRUE;\n+  dwarf2_any_loc_directive_seen = dwarf2_loc_directive_seen = TRUE;\n   debug_type = DEBUG_NONE;\n \n   /* If we were given a view id, emit the row right away.  */\n@@ -2737,7 +2743,7 @@ dwarf2_init (void)\n \n \n /* Finish the dwarf2 debug sections.  We emit .debug.line if there\n-   were any .file/.loc directives, or --gdwarf2 was given, or if the\n+   were any .file/.loc directives, or --gdwarf2 was given, and if the\n    file has a non-empty .debug_info section and an empty .debug_line\n    section.  If we emit .debug_line, and the .debug_info section is\n    empty, we also emit .debug_info, .debug_aranges and .debug_abbrev.\n@@ -2761,8 +2767,10 @@ dwarf2_finish (void)\n   empty_debug_line = line_seg == NULL || !seg_not_empty_p (line_seg);\n \n   /* We can't construct a new debug_line section if we already have one.\n-     Give an error.  */\n-  if (all_segs && !empty_debug_line)\n+     Give an error if we have seen any .loc, otherwise trust the user\n+     knows what they are doing and want to generate the .debug_line\n+     (and all other debug sections) themselves.  */\n+  if (all_segs && !empty_debug_line && dwarf2_any_loc_directive_seen)\n     as_fatal (\"duplicate .debug_line sections\");\n \n   if ((!all_segs && emit_other_sections)\n@@ -2776,8 +2784,12 @@ dwarf2_finish (void)\n   sizeof_address = DWARF2_ADDR_SIZE (stdoutput);\n \n   /* Create and switch to the line number section.  */\n-  line_seg = subseg_new (\".debug_line\", 0);\n-  bfd_set_section_flags (line_seg, SEC_READONLY | SEC_DEBUGGING | SEC_OCTETS);\n+  if (empty_debug_line)\n+    {\n+      line_seg = subseg_new (\".debug_line\", 0);\n+      bfd_set_section_flags (line_seg,\n+\t\t\t     SEC_READONLY | SEC_DEBUGGING | SEC_OCTETS);\n+    }\n \n   /* For each subsection, chain the debug entries together.  */\n   for (s = all_segs; s; s = s->next)\n@@ -2803,7 +2815,8 @@ dwarf2_finish (void)\n \t}\n     }\n \n-  out_debug_line (line_seg);\n+  if (empty_debug_line)\n+    out_debug_line (line_seg);\n \n   /* If this is assembler generated line info, and there is no\n      debug_info already, we need .debug_info, .debug_abbrev and"
    },
    {
      "sha": "196f099c1a81881c7e7168abc712dd6b4cf1c0cc",
      "filename": "gas/testsuite/gas/i386/dwarf2-line-1.d",
      "status": "added",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/dwarf2-line-1.d?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -0,0 +1,45 @@\n+#as: -gdwarf-2\n+#readelf: -wl\n+#name: DWARF .debug_line 1\n+\n+Raw dump of debug contents of section \\.z?debug_line:\n+\n+  Offset:                      0x0\n+  Length:                      .*\n+  DWARF Version:               3\n+  Prologue Length:             .*\n+  Minimum Instruction Length:  1\n+  Initial value of 'is_stmt':  1\n+  Line Base:                   -5\n+  Line Range:                  14\n+  Opcode Base:                 13\n+\n+ Opcodes:\n+  Opcode 1 has 0 args\n+  Opcode 2 has 1 arg\n+  Opcode 3 has 1 arg\n+  Opcode 4 has 1 arg\n+  Opcode 5 has 1 arg\n+  Opcode 6 has 0 args\n+  Opcode 7 has 0 args\n+  Opcode 8 has 0 args\n+  Opcode 9 has 1 arg\n+  Opcode 10 has 0 args\n+  Opcode 11 has 0 args\n+  Opcode 12 has 1 arg\n+\n+ The Directory Table \\(offset 0x.*\\):\n+  .*\n+\n+ The File Name Table \\(offset 0x.*\\):\n+  Entry\tDir\tTime\tSize\tName\n+  1\t1\t0\t0\tdwarf2-line-1.s\n+\n+ Line Number Statements:\n+  \\[0x.*\\]  Extended opcode 2: set Address to 0x0\n+  \\[0x.*\\]  Special opcode 13: advance Address by 0 to 0x0 and Line by 8 to 9\n+  \\[0x.*\\]  Special opcode 20: advance Address by 1 to 0x1 and Line by 1 to 10\n+  \\[0x.*\\]  Advance PC by 1 to 0x2\n+  \\[0x.*\\]  Extended opcode 1: End of Sequence\n+\n+"
    },
    {
      "sha": "a2cb22e842aa0478fe2f5bc1cfa0ecc8c43ab229",
      "filename": "gas/testsuite/gas/i386/dwarf2-line-1.s",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/dwarf2-line-1.s?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -0,0 +1,28 @@\n+        .file   \"dwarf2-test.c\"\n+        .text\n+        .section .text.startup,\"ax\",@progbits\n+        .p2align 4\n+        .globl  main\n+        .type   main, @function\n+main:\n+        .cfi_startproc\n+        nop\n+        ret\n+        .cfi_endproc\n+        .size   main, .-main\n+        .text\n+\n+        .section .debug_info,\"\",%progbits\n+        .long   0x0\n+        .value  0x2\n+        .long   .Ldebug_abbrev0\n+        .byte   0x8\n+        .uleb128 0x1\n+\n+        .section .debug_abbrev,\"\",@progbits\n+.Ldebug_abbrev0:\n+        .uleb128 0x0    # (abbrev code)\n+        .uleb128 0x0    # (abbrev code)\n+        .uleb128 0x0    # (abbrev code)\n+\n+# No .debug_line ok even if there is a .debug_info section"
    },
    {
      "sha": "2553fea32cde2148f5bd46a5f372520a8f0a4074",
      "filename": "gas/testsuite/gas/i386/dwarf2-line-2.d",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/dwarf2-line-2.d?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -0,0 +1,48 @@\n+#as: -gdwarf-2\n+#readelf: -wl\n+#name: DWARF .debug_line 2\n+\n+Raw dump of debug contents of section .z?debug_line:\n+\n+  Offset:                      0x0\n+  Length:                      62\n+  DWARF Version:               .\n+  Prologue Length:             35\n+  Minimum Instruction Length:  1\n+  Initial value of 'is_stmt':  1\n+  Line Base:                   1\n+  Line Range:                  1\n+  Opcode Base:                 16\n+\n+ Opcodes:\n+  Opcode 1 has 0 args\n+  Opcode 2 has 1 arg\n+  Opcode 3 has 1 arg\n+  Opcode 4 has 1 arg\n+  Opcode 5 has 1 arg\n+  Opcode 6 has 0 args\n+  Opcode 7 has 0 args\n+  Opcode 8 has 0 args\n+  Opcode 9 has 1 arg\n+  Opcode 10 has 0 args\n+  Opcode 11 has 0 args\n+  Opcode 12 has 1 arg\n+  Opcode 13 has 0 args\n+  Opcode 14 has 0 args\n+  Opcode 15 has 0 args\n+\n+ The Directory Table is empty.\n+\n+ The File Name Table \\(offset 0x.*\\):\n+  Entry\tDir\tTime\tSize\tName\n+  1\t0\t0\t0\tfile1.txt\n+\n+ Line Number Statements:\n+  \\[0x.*\\]  Extended opcode 2: set Address to 0x0\n+  \\[0x.*\\]  Advance Line by 3 to 4\n+  \\[0x.*\\]  Copy\n+  \\[0x.*\\]  Copy \\(view 1\\)\n+  \\[0x.*\\]  Extended opcode 2: set Address to 0x0\n+  \\[0x.*\\]  Extended opcode 1: End of Sequence\n+\n+"
    },
    {
      "sha": "d43acdaa3a7eac9e891bca5cdac0201bdecdc0e7",
      "filename": "gas/testsuite/gas/i386/dwarf2-line-2.s",
      "status": "added",
      "additions": 91,
      "deletions": 0,
      "changes": 91,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/dwarf2-line-2.s?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -0,0 +1,91 @@\n+        .file   \"dwarf2-test.c\"\n+        .text\n+        .section .text.startup,\"ax\",@progbits\n+        .p2align 4\n+        .globl  main\n+        .type   main, @function\n+main:\n+        .cfi_startproc\n+        nop\n+        ret\n+        .cfi_endproc\n+        .size   main, .-main\n+        .text\n+\n+        .section .debug_info,\"\",%progbits\n+        .long   0x0\n+        .value  0x2\n+        .long   .Ldebug_abbrev0\n+        .byte   0x8\n+        .uleb128 0x1\n+\n+        .section .debug_abbrev,\"\",@progbits\n+.Ldebug_abbrev0:\n+        .uleb128 0x0    # (abbrev code)\n+        .uleb128 0x0    # (abbrev code)\n+        .uleb128 0x0    # (abbrev code)\n+\n+# A non-empty .debug_line section is ok when not using .loc directives\n+\t.section .debug_line\n+.Lline1_begin:\n+\t.4byte\t\t.Lline1_end - .Lline1_start\t/* Initial length */\n+.Lline1_start:\n+\t.2byte\t\t2\t\t\t/* Version */\n+\t.4byte\t\t.Lline1_lines - .Lline1_hdr\t/* header_length */\n+.Lline1_hdr:\n+\t.byte\t\t1\t\t\t/* Minimum insn length */\n+\t.byte\t\t1\t\t\t/* default_is_stmt */\n+\t.byte\t\t1\t\t\t/* line_base */\n+\t.byte\t\t1\t\t\t/* line_range */\n+\t.byte\t\t0x10\t\t\t/* opcode_base */\n+\n+\t/* Standard lengths */\n+\t.byte\t\t0\n+\t.byte\t\t1\n+\t.byte\t\t1\n+\t.byte\t\t1\n+\t.byte\t\t1\n+\t.byte\t\t0\n+\t.byte\t\t0\n+\t.byte\t\t0\n+\t.byte\t\t1\n+\t.byte\t\t0\n+\t.byte\t\t0\n+\t.byte\t\t1\n+\t.byte\t\t0\n+\t.byte\t\t0\n+\t.byte\t\t0\n+\n+\t/* Include directories */\n+\t.byte\t\t0\n+\n+\t/* File names */\n+\t.ascii\t\t\"file1.txt\\0\"\n+\t.uleb128\t0\n+\t.uleb128\t0\n+\t.uleb128\t0\n+\n+\t.byte\t\t0\n+\n+.Lline1_lines:\n+\t.byte\t\t0\t/* DW_LNE_set_address */\n+\t.uleb128\t5\n+\t.byte\t\t2\n+\t.4byte\t\t.Lbegin_func_cu1\n+\n+\t.byte\t\t3\t/* DW_LNS_advance_line */\n+\t.sleb128\t3\t/* ... to 4 */\n+\n+\t.byte\t\t1\t/* DW_LNS_copy */\n+\n+\t.byte\t\t1\t/* DW_LNS_copy (second time as an end-of-prologue marker) */\n+\n+\t.byte\t\t0\t/* DW_LNE_set_address */\n+\t.uleb128\t5\n+\t.byte\t\t2\n+\t.4byte\t\t.Lend_func_cu1\n+\n+\t.byte\t\t0\t/* DW_LNE_end_of_sequence */\n+\t.uleb128\t1\n+\t.byte\t\t1\n+"
    },
    {
      "sha": "42c94c56821860d9a0fac3174367c340be8198e6",
      "filename": "gas/testsuite/gas/i386/dwarf2-line-3.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/dwarf2-line-3.d?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -0,0 +1,3 @@\n+#as: -gdwarf-2\n+#name: DWARF .debug_line 3\n+#error_output: dwarf2-line-3.l"
    },
    {
      "sha": "c26e1fa8782ec0013b03e1fec7f50f236e8e8cfc",
      "filename": "gas/testsuite/gas/i386/dwarf2-line-3.l",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-3.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-3.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/dwarf2-line-3.l?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -0,0 +1,2 @@\n+[^:]*: Assembler messages:\n+[^:]*: Fatal error: duplicate .debug_line sections"
    },
    {
      "sha": "2085ef9394090adfd4ed31bbabfa3c8f7c70f9e1",
      "filename": "gas/testsuite/gas/i386/dwarf2-line-3.s",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-3.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-3.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/dwarf2-line-3.s?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -0,0 +1,32 @@\n+        .file   \"dwarf2-test.c\"\n+        .text\n+        .section .text.startup,\"ax\",@progbits\n+        .p2align 4\n+        .globl  main\n+        .type   main, @function\n+main:\n+        .cfi_startproc\n+        nop\n+\t.loc 1 1\n+        ret\n+        .cfi_endproc\n+        .size   main, .-main\n+        .text\n+\n+        .section .debug_info,\"\",%progbits\n+        .long   0x0\n+        .value  0x2\n+        .long   .Ldebug_abbrev0\n+        .byte   0x8\n+        .uleb128 0x1\n+\n+        .section .debug_abbrev,\"\",@progbits\n+.Ldebug_abbrev0:\n+        .uleb128 0x0    # (abbrev code)\n+        .uleb128 0x0    # (abbrev code)\n+        .uleb128 0x0    # (abbrev code)\n+\n+# A non-empty .debug_line section is NOT ok when using .loc directives\n+        .section .debug_line,\"\",@progbits\n+.Ldebug_line0:\n+        .byte 0x1"
    },
    {
      "sha": "c0c85f4639f2820fe0fc0d343fafd16b303ed029",
      "filename": "gas/testsuite/gas/i386/dwarf2-line-4.d",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-4.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-4.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/dwarf2-line-4.d?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -0,0 +1,46 @@\n+#as: -gdwarf-2\n+#readelf: -wl\n+#name: DWARF .debug_line 4\n+\n+Raw dump of debug contents of section \\.z?debug_line:\n+\n+  Offset:                      0x0\n+  Length:                      .*\n+  DWARF Version:               3\n+  Prologue Length:             .*\n+  Minimum Instruction Length:  1\n+  Initial value of 'is_stmt':  1\n+  Line Base:                   -5\n+  Line Range:                  14\n+  Opcode Base:                 13\n+\n+ Opcodes:\n+  Opcode 1 has 0 args\n+  Opcode 2 has 1 arg\n+  Opcode 3 has 1 arg\n+  Opcode 4 has 1 arg\n+  Opcode 5 has 1 arg\n+  Opcode 6 has 0 args\n+  Opcode 7 has 0 args\n+  Opcode 8 has 0 args\n+  Opcode 9 has 1 arg\n+  Opcode 10 has 0 args\n+  Opcode 11 has 0 args\n+  Opcode 12 has 1 arg\n+\n+ The Directory Table \\(offset 0x.*\\):\n+  .*\n+\n+ The File Name Table \\(offset 0x.*\\):\n+  Entry\tDir\tTime\tSize\tName\n+  1\t1\t0\t0\tdwarf2-line-4.s\n+\n+ Line Number Statements:\n+  \\[0x.*\\]  Extended opcode 2: set Address to 0x0\n+  \\[0x.*\\]  Special opcode 13: advance Address by 0 to 0x0 and Line by 8 to 9\n+  \\[0x.*\\]  Advance Line by -8 to 1\n+  \\[0x.*\\]  Special opcode 19: advance Address by 1 to 0x1 and Line by 0 to 1\n+  \\[0x.*\\]  Advance PC by 1 to 0x2\n+  \\[0x.*\\]  Extended opcode 1: End of Sequence\n+\n+"
    },
    {
      "sha": "89bb62d9db75ea7f926fe2505e6f5c61c03e6032",
      "filename": "gas/testsuite/gas/i386/dwarf2-line-4.s",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-4.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/dwarf2-line-4.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/dwarf2-line-4.s?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -0,0 +1,29 @@\n+        .file   \"dwarf2-test.c\"\n+        .text\n+        .section .text.startup,\"ax\",@progbits\n+        .p2align 4\n+        .globl  main\n+        .type   main, @function\n+main:\n+        .cfi_startproc\n+        nop\n+\t.loc 1 1\n+        ret\n+        .cfi_endproc\n+        .size   main, .-main\n+        .text\n+\n+        .section .debug_info,\"\",%progbits\n+        .long   0x0\n+        .value  0x2\n+        .long   .Ldebug_abbrev0\n+        .byte   0x8\n+        .uleb128 0x1\n+\n+        .section .debug_abbrev,\"\",@progbits\n+.Ldebug_abbrev0:\n+        .uleb128 0x0    # (abbrev code)\n+        .uleb128 0x0    # (abbrev code)\n+        .uleb128 0x0    # (abbrev code)\n+\n+# No .debug_line ok even if there is a .debug_info section and using .locs"
    },
    {
      "sha": "0efcc8c7c2708efe4c9eb8fd30201cdfe7e1c0e0",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/edc7a80a9c04667dfa74f90f74bd39827bc372b7/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=edc7a80a9c04667dfa74f90f74bd39827bc372b7",
      "patch": "@@ -599,6 +599,11 @@ if [expr ([istarget \"i*86-*-*\"] ||  [istarget \"x86_64-*-*\"]) && [gas_32_check]]\n \trun_dump_test \"localpic\"\n \trun_dump_test \"debug1\"\n \n+\trun_dump_test \"dwarf2-line-1\"\n+\trun_dump_test \"dwarf2-line-2\"\n+\trun_dump_test \"dwarf2-line-3\"\n+\trun_dump_test \"dwarf2-line-4\"\n+\n \trun_dump_test \"dw2-compress-2\"\n \trun_dump_test \"dw2-compressed-2\"\n "
    }
  ]
}