{
  "sha": "f8861f5dc2391e0c46dd118370195e7730ec46ca",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Zjg4NjFmNWRjMjM5MWUwYzQ2ZGQxMTgzNzAxOTVlNzczMGVjNDZjYQ==",
  "commit": {
    "author": {
      "name": "Jose E. Marchesi",
      "email": "jose.marchesi@oracle.com",
      "date": "2019-05-23T17:05:12Z"
    },
    "committer": {
      "name": "Jose E. Marchesi",
      "email": "jose.marchesi@oracle.com",
      "date": "2019-05-23T17:34:04Z"
    },
    "message": "gas: add support for eBPF\n\nThis patch adds a port for the Linux kernel eBPF to the GNU assembler.\nA testsuite and documentation updates are included.\n\ngas/ChangeLog:\n\n2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>\n\n\t* configure.ac: Handle bpf-*-* targets.\n\t* configure.tgt (generic_target): Likewise.\n\t* configure: Regenerate.\n\t* Makefile.am (TARGET_CPU_CFILES): Add tc-bpf.c.\n\t(TARGET_CPU_HFILES): Add tc-bpf.h.\n\t* Makefile.in: Regenerated.\n\t* config/tc-bpf.c: New file.\n\t* config/tc-bpf.h: Likewise.\n\t* doc/Makefile.am (CPU_DOCS): Add c-bpf.texi.\n\t* doc/Makefile.in: Regenerated.\n\t* doc/all.texi: set BPF.\n\t* doc/as.texi: Add eBPF contents.\n\t* doc/c-bpf.texi: New file.\n\t* testsuite/gas/bpf/alu.d: New file.\n\t* testsuite/gas/bpf/mem-be.d: Likewise.\n\t* testsuite/gas/bpf/mem.s: Likewise.\n\t* testsuite/gas/bpf/mem.d: Likewise.\n\t* testsuite/gas/bpf/lddw-be.d: Likewise.\n\t* testsuite/gas/bpf/lddw.s: Likewise.\n\t* testsuite/gas/bpf/lddw.d: Likewise.\n\t* testsuite/gas/bpf/jump-be.d: Likewise.\n\t* testsuite/gas/bpf/jump.s: Likewise.\n\t* testsuite/gas/bpf/jump.d: Likewise.\n\t* testsuite/gas/bpf/exit-be.d: Likewise.\n\t* testsuite/gas/bpf/exit.s: Likewise.\n\t* testsuite/gas/bpf/exit.d: Likewise.\n\t* testsuite/gas/bpf/call-be.d: Likewise.\n\t* testsuite/gas/bpf/call.s: Likewise.\n\t* testsuite/gas/bpf/call.d: Likewise.\n\t* testsuite/gas/bpf/bpf.exp: Likewise.\n\t* testsuite/gas/bpf/atomic-be.d: Likewise.\n\t* testsuite/gas/bpf/atomic.s: Likewise.\n\t* testsuite/gas/bpf/atomic.d: Likewise.\n\t* testsuite/gas/bpf/alu-be.d: Likewise.\n\t* testsuite/gas/bpf/alu32-be.d: Likewise.\n\t* testsuite/gas/bpf/alu32.s: Likewise.\n\t* testsuite/gas/bpf/alu32.d: Likewise.\n\t* testsuite/gas/bpf/alu.s: Likewise.\n\t* testsuite/gas/all/gas.exp: Introduce a nop_type for eBPF.\n\t* testsuite/gas/all/org-1.s: Support nop_type 6.\n\t* testsuite/gas/all/org-1.l: Updated to reflect changes in\n\torg-1.s.",
    "tree": {
      "sha": "e348f2208eef2eb8d714c4a4224e65b997cfea94",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e348f2208eef2eb8d714c4a4224e65b997cfea94"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f8861f5dc2391e0c46dd118370195e7730ec46ca",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f8861f5dc2391e0c46dd118370195e7730ec46ca",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f8861f5dc2391e0c46dd118370195e7730ec46ca",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f8861f5dc2391e0c46dd118370195e7730ec46ca/comments",
  "author": {
    "login": "jemarch",
    "id": 7061875,
    "node_id": "MDQ6VXNlcjcwNjE4NzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jemarch",
    "html_url": "https://github.com/jemarch",
    "followers_url": "https://api.github.com/users/jemarch/followers",
    "following_url": "https://api.github.com/users/jemarch/following{/other_user}",
    "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions",
    "organizations_url": "https://api.github.com/users/jemarch/orgs",
    "repos_url": "https://api.github.com/users/jemarch/repos",
    "events_url": "https://api.github.com/users/jemarch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jemarch/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jemarch",
    "id": 7061875,
    "node_id": "MDQ6VXNlcjcwNjE4NzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jemarch",
    "html_url": "https://github.com/jemarch",
    "followers_url": "https://api.github.com/users/jemarch/followers",
    "following_url": "https://api.github.com/users/jemarch/following{/other_user}",
    "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions",
    "organizations_url": "https://api.github.com/users/jemarch/orgs",
    "repos_url": "https://api.github.com/users/jemarch/repos",
    "events_url": "https://api.github.com/users/jemarch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jemarch/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "79472b45328232b083e897a511d4160a6dde0463",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/79472b45328232b083e897a511d4160a6dde0463",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/79472b45328232b083e897a511d4160a6dde0463"
    }
  ],
  "stats": {
    "total": 1615,
    "additions": 1606,
    "deletions": 9
  },
  "files": [
    {
      "sha": "483e888d3b606badea47355458a04ca941b7c434",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -1,3 +1,48 @@\n+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* configure.ac: Handle bpf-*-* targets.\n+\t* configure.tgt (generic_target): Likewise.\n+\t* configure: Regenerate.\n+\t* Makefile.am (TARGET_CPU_CFILES): Add tc-bpf.c.\n+\t(TARGET_CPU_HFILES): Add tc-bpf.h.\n+\t* Makefile.in: Regenerated.\n+\t* config/tc-bpf.c: New file.\n+\t* config/tc-bpf.h: Likewise.\n+\t* doc/Makefile.am (CPU_DOCS): Add c-bpf.texi.\n+\t* doc/Makefile.in: Regenerated.\n+\t* doc/all.texi: set BPF.\n+\t* doc/as.texi: Add eBPF contents.\n+\t* doc/c-bpf.texi: New file.\n+\t* testsuite/gas/bpf/alu.d: New file.\n+\t* testsuite/gas/bpf/mem-be.d: Likewise.\n+\t* testsuite/gas/bpf/mem.s: Likewise.\n+\t* testsuite/gas/bpf/mem.d: Likewise.\n+\t* testsuite/gas/bpf/lddw-be.d: Likewise.\n+\t* testsuite/gas/bpf/lddw.s: Likewise.\n+\t* testsuite/gas/bpf/lddw.d: Likewise.\n+\t* testsuite/gas/bpf/jump-be.d: Likewise.\n+\t* testsuite/gas/bpf/jump.s: Likewise.\n+\t* testsuite/gas/bpf/jump.d: Likewise.\n+\t* testsuite/gas/bpf/exit-be.d: Likewise.\n+\t* testsuite/gas/bpf/exit.s: Likewise.\n+\t* testsuite/gas/bpf/exit.d: Likewise.\n+\t* testsuite/gas/bpf/call-be.d: Likewise.\n+\t* testsuite/gas/bpf/call.s: Likewise.\n+\t* testsuite/gas/bpf/call.d: Likewise.\n+\t* testsuite/gas/bpf/bpf.exp: Likewise.\n+\t* testsuite/gas/bpf/atomic-be.d: Likewise.\n+\t* testsuite/gas/bpf/atomic.s: Likewise.\n+\t* testsuite/gas/bpf/atomic.d: Likewise.\n+\t* testsuite/gas/bpf/alu-be.d: Likewise.\n+\t* testsuite/gas/bpf/alu32-be.d: Likewise.\n+\t* testsuite/gas/bpf/alu32.s: Likewise.\n+\t* testsuite/gas/bpf/alu32.d: Likewise.\n+\t* testsuite/gas/bpf/alu.s: Likewise.\n+\t* testsuite/gas/all/gas.exp: Introduce a nop_type for eBPF.\n+\t* testsuite/gas/all/org-1.s: Support nop_type 6.\n+\t* testsuite/gas/all/org-1.l: Updated to reflect changes in\n+\torg-1.s.\n+\n 2019-05-22  John Darrington <john@darrington.wattle.id.au>\n \n \t* config/tc-s12z.c (s12z_strtol): New function. (md_show_usage): Update."
    },
    {
      "sha": "2e95409671a067d6ade22328d758f2d33812e4a1",
      "filename": "gas/Makefile.am",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/Makefile.am?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -134,6 +134,7 @@ TARGET_CPU_CFILES = \\\n \tconfig/tc-arm.c \\\n \tconfig/tc-avr.c \\\n \tconfig/tc-bfin.c \\\n+\tconfig/tc-bpf.c \\\n \tconfig/tc-cr16.c \\\n \tconfig/tc-cris.c \\\n \tconfig/tc-crx.c \\\n@@ -209,6 +210,7 @@ TARGET_CPU_HFILES = \\\n \tconfig/tc-arm.h \\\n \tconfig/tc-avr.h \\\n \tconfig/tc-bfin.h \\\n+\tconfig/tc-bpf.h \\\n \tconfig/tc-cr16.h \\\n \tconfig/tc-cris.h \\\n \tconfig/tc-crx.h \\"
    },
    {
      "sha": "595295e55571d7d4baf502458f4bcdc0ffde5e35",
      "filename": "gas/Makefile.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/Makefile.in?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -402,6 +402,7 @@ pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+runstatedir = @runstatedir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@\n@@ -523,6 +524,7 @@ TARGET_CPU_CFILES = \\\n \tconfig/tc-arm.c \\\n \tconfig/tc-avr.c \\\n \tconfig/tc-bfin.c \\\n+\tconfig/tc-bpf.c \\\n \tconfig/tc-cr16.c \\\n \tconfig/tc-cris.c \\\n \tconfig/tc-crx.c \\\n@@ -598,6 +600,7 @@ TARGET_CPU_HFILES = \\\n \tconfig/tc-arm.h \\\n \tconfig/tc-avr.h \\\n \tconfig/tc-bfin.h \\\n+\tconfig/tc-bpf.h \\\n \tconfig/tc-cr16.h \\\n \tconfig/tc-cris.h \\\n \tconfig/tc-crx.h \\\n@@ -896,6 +899,8 @@ config/tc-avr.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n config/tc-bfin.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n+config/tc-bpf.$(OBJEXT): config/$(am__dirstamp) \\\n+\tconfig/$(DEPDIR)/$(am__dirstamp)\n config/tc-cr16.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n config/tc-cris.$(OBJEXT): config/$(am__dirstamp) \\\n@@ -1151,6 +1156,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/tc-arm.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/tc-avr.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/tc-bfin.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/tc-bpf.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/tc-cr16.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/tc-cris.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/tc-crx.Po@am__quote@"
    },
    {
      "sha": "9318c3563be8813b279c8b72ee3ee74b21c50b19",
      "filename": "gas/config/tc-bpf.c",
      "status": "added",
      "additions": 354,
      "deletions": 0,
      "changes": 354,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/config/tc-bpf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/config/tc-bpf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-bpf.c?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,354 @@\n+/* tc-bpf.c -- Assembler for the Linux eBPF.\n+   Copyright (C) 2019 Free Software Foundation, Inc.\n+   Contributed by Oracle, Inc.\n+\n+   This file is part of GAS, the GNU Assembler.\n+\n+   GAS is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GAS is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GAS; see the file COPYING.  If not, write to\n+   the Free Software Foundation, 51 Franklin Street - Fifth Floor,\n+   Boston, MA 02110-1301, USA.  */\n+\n+#include \"as.h\"\n+#include \"subsegs.h\"\n+#include \"symcat.h\"\n+#include \"opcodes/bpf-desc.h\"\n+#include \"opcodes/bpf-opc.h\"\n+#include \"cgen.h\"\n+#include \"elf/common.h\"\n+#include \"elf/bpf.h\"\n+#include \"dwarf2dbg.h\"\n+\n+const char comment_chars[]        = \";\";\n+const char line_comment_chars[] = \"#\";\n+const char line_separator_chars[] = \"`\";\n+const char EXP_CHARS[]            = \"eE\";\n+const char FLT_CHARS[]            = \"fFdD\";\n+\n+/* The target specific pseudo-ops which we support.  */\n+const pseudo_typeS md_pseudo_table[] =\n+{\n+    { NULL,         NULL,             0 }\n+};\n+\n+/* ISA handling.  */\n+static CGEN_BITSET *bpf_isa;\n+\n+\f\n+\n+/* Command-line options processing.  */\n+\n+enum options\n+{\n+  OPTION_LITTLE_ENDIAN = OPTION_MD_BASE,\n+  OPTION_BIG_ENDIAN\n+};\n+\n+struct option md_longopts[] =\n+{\n+  { \"EL\", no_argument, NULL, OPTION_LITTLE_ENDIAN },\n+  { \"EB\", no_argument, NULL, OPTION_BIG_ENDIAN },\n+  { NULL,          no_argument, NULL, 0 },\n+};\n+\n+size_t md_longopts_size = sizeof (md_longopts);\n+\n+const char * md_shortopts = \"\";\n+\n+extern int target_big_endian;\n+\n+/* Whether target_big_endian has been set while parsing command-line\n+   arguments.  */\n+static int set_target_endian = 0;\n+\n+int\n+md_parse_option (int c, const char * arg ATTRIBUTE_UNUSED)\n+{\n+  switch (c)\n+    {\n+    case OPTION_BIG_ENDIAN:\n+      set_target_endian = 1;\n+      target_big_endian = 1;\n+      break;\n+    case OPTION_LITTLE_ENDIAN:\n+      set_target_endian = 1;\n+      target_big_endian = 0;\n+      break;\n+    default:\n+      return 0;\n+    }\n+\n+  return 1;\n+}\n+\n+void\n+md_show_usage (FILE * stream)\n+{\n+  fprintf (stream, _(\"\\nBPF options:\\n\"));\n+  fprintf (stream, _(\"\\\n+  --EL\t\t\tgenerate code for a little endian machine\\n\\\n+  --EB\t\t\tgenerate code for a big endian machine\\n\"));\n+}\n+\n+\f\n+void\n+md_begin (void)\n+{\n+  /* Initialize the `cgen' interface.  */\n+\n+  /* If not specified in the command line, use the host\n+     endianness.  */\n+  if (!set_target_endian)\n+    {\n+#ifdef WORDS_BIGENDIAN\n+      target_big_endian = 1;\n+#else\n+      target_big_endian = 0;\n+#endif\n+    }\n+\n+  /* Set the ISA, which depends on the target endianness. */\n+  bpf_isa = cgen_bitset_create (ISA_MAX);\n+  if (target_big_endian)\n+    cgen_bitset_set (bpf_isa, ISA_EBPFBE);\n+  else\n+    cgen_bitset_set (bpf_isa, ISA_EBPFLE);\n+\n+  /* Set the machine number and endian.  */\n+  gas_cgen_cpu_desc = bpf_cgen_cpu_open (CGEN_CPU_OPEN_ENDIAN,\n+                                         target_big_endian ?\n+                                         CGEN_ENDIAN_BIG : CGEN_ENDIAN_LITTLE,\n+                                         CGEN_CPU_OPEN_ISAS,\n+                                         bpf_isa,\n+                                         CGEN_CPU_OPEN_END);\n+  bpf_cgen_init_asm (gas_cgen_cpu_desc);\n+\n+  /* This is a callback from cgen to gas to parse operands.  */\n+  cgen_set_parse_operand_fn (gas_cgen_cpu_desc, gas_cgen_parse_operand);\n+\n+  /* Set the machine type. */\n+  bfd_default_set_arch_mach (stdoutput, bfd_arch_bpf, bfd_mach_bpf);\n+}\n+\n+valueT\n+md_section_align (segT segment, valueT size)\n+{\n+  int align = bfd_get_section_alignment (stdoutput, segment);\n+\n+  return ((size + (1 << align) - 1) & -(1 << align));\n+}\n+\n+\f\n+/* Functions concerning relocs.  */\n+\n+/* The location from which a PC relative jump should be calculated,\n+   given a PC relative reloc.  */\n+\n+long\n+md_pcrel_from_section (fixS *fixP, segT sec)\n+{\n+  if (fixP->fx_addsy != (symbolS *) NULL\n+      && (! S_IS_DEFINED (fixP->fx_addsy)\n+          || (S_GET_SEGMENT (fixP->fx_addsy) != sec)\n+          || S_IS_EXTERNAL (fixP->fx_addsy)\n+          || S_IS_WEAK (fixP->fx_addsy)))\n+    {\n+        /* The symbol is undefined (or is defined but not in this section).\n+         Let the linker figure it out.  */\n+      return 0;\n+    }\n+\n+  return fixP->fx_where + fixP->fx_frag->fr_address;\n+}\n+\n+/* Write a value out to the object file, using the appropriate endianness.  */\n+\n+void\n+md_number_to_chars (char * buf, valueT val, int n)\n+{\n+  if (target_big_endian)\n+    number_to_chars_bigendian (buf, val, n);\n+  else\n+    number_to_chars_littleendian (buf, val, n);\n+}\n+\n+arelent *\n+tc_gen_reloc (asection *sec, fixS *fix)\n+{\n+  return gas_cgen_tc_gen_reloc (sec, fix);\n+}\n+\n+/* Return the bfd reloc type for OPERAND of INSN at fixup FIXP.  This\n+   is called when the operand is an expression that couldn't be fully\n+   resolved.  Returns BFD_RELOC_NONE if no reloc type can be found.\n+   *FIXP may be modified if desired.  */\n+\n+bfd_reloc_code_real_type\n+md_cgen_lookup_reloc (const CGEN_INSN *insn ATTRIBUTE_UNUSED,\n+\t\t      const CGEN_OPERAND *operand,\n+\t\t      fixS *fixP)\n+{\n+  switch (operand->type)\n+    {\n+    case BPF_OPERAND_OFFSET16:\n+      return BFD_RELOC_BPF_16;\n+    case BPF_OPERAND_IMM32:\n+      return BFD_RELOC_BPF_32;\n+    case BPF_OPERAND_IMM64:\n+      return BFD_RELOC_BPF_64;\n+    case BPF_OPERAND_DISP16:\n+      fixP->fx_pcrel = 1;\n+      return BFD_RELOC_BPF_DISP16;\n+    case BPF_OPERAND_DISP32:\n+      fixP->fx_pcrel = 1;\n+      return BFD_RELOC_BPF_DISP32;\n+    default:\n+      break;\n+    }\n+  return BFD_RELOC_NONE;\n+}\n+\f\n+/* *FRAGP has been relaxed to its final size, and now needs to have\n+   the bytes inside it modified to conform to the new size.\n+\n+   Called after relaxation is finished.\n+   fragP->fr_type == rs_machine_dependent.\n+   fragP->fr_subtype is the subtype of what the address relaxed to.  */\n+\n+void\n+md_convert_frag (bfd *abfd ATTRIBUTE_UNUSED,\n+\t\t segT sec ATTRIBUTE_UNUSED,\n+\t\t fragS *fragP ATTRIBUTE_UNUSED)\n+{\n+  as_fatal (_(\"convert_frag called\"));\n+}\n+\n+int\n+md_estimate_size_before_relax (fragS *fragP ATTRIBUTE_UNUSED,\n+                               segT segment ATTRIBUTE_UNUSED)\n+{\n+  as_fatal (_(\"estimate_size_before_relax called\"));\n+  return 0;\n+}\n+\n+\f\n+void\n+md_apply_fix (fixS *fixP, valueT *valP, segT seg)\n+{\n+  /* Some fixups for instructions require special attention.  This is\n+     handled in the code block below.  */\n+  if ((int) fixP->fx_r_type >= (int) BFD_RELOC_UNUSED)\n+    {\n+      int opindex = (int) fixP->fx_r_type - (int) BFD_RELOC_UNUSED;\n+      const CGEN_OPERAND *operand = cgen_operand_lookup_by_num (gas_cgen_cpu_desc,\n+                                                                opindex);\n+      char *where;\n+\n+      switch (operand->type)\n+        {\n+        case BPF_OPERAND_DISP32:\n+          /* eBPF supports two kind of CALL instructions: the so\n+             called pseudo calls (\"bpf to bpf\") and external calls\n+             (\"bpf to kernel\").\n+\n+             Both kind of calls use the same instruction (CALL).\n+             However, external calls are constructed by passing a\n+             constant argument to the instruction, whereas pseudo\n+             calls result from expressions involving symbols.  In\n+             practice, instructions requiring a fixup are interpreted\n+             as pseudo-calls.  If we are executing this code, this is\n+             a pseudo call.\n+\n+             The kernel expects for pseudo-calls to be annotated by\n+             having BPF_PSEUDO_CALL in the SRC field of the\n+             instruction.  But beware the infamous nibble-swapping of\n+             eBPF and take endianness into account here.\n+\n+             Note that the CALL instruction has only one operand, so\n+             this code is executed only once per instruction.  */\n+          where = fixP->fx_frag->fr_literal + fixP->fx_where;\n+          cgen_put_insn_value (gas_cgen_cpu_desc, (unsigned char *) where + 1, 8,\n+                               target_big_endian ? 0x01 : 0x10);\n+          /* Fallthrough.  */\n+        case BPF_OPERAND_DISP16:\n+          /* The PC-relative displacement fields in jump instructions\n+             shouldn't be in bytes.  Instead, they hold the number of\n+             64-bit words to the target, _minus one_.  */ \n+          *valP = (((long) (*valP)) - 8) / 8;\n+          break;\n+        default:\n+          break;\n+        }\n+    }\n+\n+  /* And now invoke CGEN's handler, which will eventually install\n+     *valP into the corresponding operand.  */\n+  gas_cgen_md_apply_fix (fixP, valP, seg);\n+}\n+\n+void\n+md_assemble (char *str)\n+{\n+  const CGEN_INSN *insn;\n+  char *errmsg;\n+  CGEN_FIELDS fields;\n+\n+#if CGEN_INT_INSN_P\n+  CGEN_INSN_INT buffer[CGEN_MAX_INSN_SIZE / sizeof (CGEN_INT_INSN_P)];\n+#else\n+  unsigned char buffer[CGEN_MAX_INSN_SIZE];\n+  memset (buffer, 0, CGEN_MAX_INSN_SIZE); /* XXX to remove when CGEN\n+                                             is fixed to handle\n+                                             opcodes-in-words\n+                                             properly.  */\n+#endif\n+\n+  gas_cgen_init_parse ();\n+  insn = bpf_cgen_assemble_insn (gas_cgen_cpu_desc, str, &fields,\n+                                  buffer, &errmsg);\n+\n+  if (insn == NULL)\n+    {\n+      as_bad (\"%s\", errmsg);\n+      return;\n+    }\n+\n+  gas_cgen_finish_insn (insn, buffer, CGEN_FIELDS_BITSIZE (&fields),\n+                        0, /* zero to ban relaxable insns.  */\n+                        NULL); /* NULL so results not returned here.  */\n+}\n+\n+void\n+md_operand (expressionS *expressionP)\n+{\n+  gas_cgen_md_operand (expressionP);\n+}\n+\n+\n+symbolS *\n+md_undefined_symbol (char *name ATTRIBUTE_UNUSED)\n+{\n+  return NULL;\n+}\n+\n+\f\n+/* Turn a string in input_line_pointer into a floating point constant\n+   of type TYPE, and store the appropriate bytes in *LITP.  The number\n+   of LITTLENUMS emitted is stored in *SIZEP.  An error message is\n+   returned, or NULL on OK.  */\n+\n+const char *\n+md_atof (int type, char *litP, int *sizeP)\n+{\n+  return ieee_md_atof (type, litP, sizeP, FALSE);\n+}"
    },
    {
      "sha": "310cbc0a17b00c7ad1283000ec707944d26a586b",
      "filename": "gas/config/tc-bpf.h",
      "status": "added",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/config/tc-bpf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/config/tc-bpf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-bpf.h?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,51 @@\n+/* tc-bpf.h -- Header file for tc-ebpf.c.\n+   Copyright (C) 2019 Free Software Foundation, Inc.\n+   Contributed by Oracle, Inc.\n+\n+   This file is part of GAS, the GNU Assembler.\n+\n+   GAS is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GAS is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GAS; see the file COPYING.  If not, write to the Free\n+   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA\n+   02110-1301, USA.  */\n+\n+#define TC_BPF\n+\n+#define LISTING_HEADER \"BPF GAS \"\n+\n+/* The target BFD architecture.  */\n+#define TARGET_ARCH bfd_arch_bpf\n+#define TARGET_MACH 0 /* The default.  */\n+\n+#define TARGET_FORMAT                                                   \\\n+  (target_big_endian ? \"elf64-bpfbe\" : \"elf64-bpfle\")\n+\n+/* This is used to set the default value for `target_big_endian'.  */\n+#ifndef TARGET_BYTES_BIG_ENDIAN\n+#define TARGET_BYTES_BIG_ENDIAN 0\n+#endif\n+\n+/* .-foo gets turned into PC relative relocs.  */\n+#define DIFF_EXPR_OK    1\n+#define GAS_CGEN_PCREL_R_TYPE(R_TYPE) gas_cgen_pcrel_r_type (R_TYPE)\n+\n+/* Call md_pcrel_from_section(), not md_pcrel_from().  */\n+#define MD_PCREL_FROM_SECTION(FIXP, SEC) md_pcrel_from_section (FIXP, SEC)\n+extern long md_pcrel_from_section (struct fix *, segT);\n+\n+/* We don't need to handle .word strangely.  */\n+#define WORKING_DOT_WORD\n+\n+/* Values passed to md_apply_fix don't include the symbol value.  */\n+#define MD_APPLY_SYM_VALUE(FIX) 0\n+"
    },
    {
      "sha": "8b921094c488e68efa38fd3be0b4a8b1960a44a8",
      "filename": "gas/configure",
      "status": "modified",
      "additions": 30,
      "deletions": 8,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/configure?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -770,6 +770,7 @@ infodir\n docdir\n oldincludedir\n includedir\n+runstatedir\n localstatedir\n sharedstatedir\n sysconfdir\n@@ -867,6 +868,7 @@ datadir='${datarootdir}'\n sysconfdir='${prefix}/etc'\n sharedstatedir='${prefix}/com'\n localstatedir='${prefix}/var'\n+runstatedir='${localstatedir}/run'\n includedir='${prefix}/include'\n oldincludedir='/usr/include'\n docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'\n@@ -1119,6 +1121,15 @@ do\n   | -silent | --silent | --silen | --sile | --sil)\n     silent=yes ;;\n \n+  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n+  | --runstate | --runstat | --runsta | --runst | --runs \\\n+  | --run | --ru | --r)\n+    ac_prev=runstatedir ;;\n+  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n+  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n+  | --run=* | --ru=* | --r=*)\n+    runstatedir=$ac_optarg ;;\n+\n   -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n     ac_prev=sbindir ;;\n   -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n@@ -1256,7 +1267,7 @@ fi\n for ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n \t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n \t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n-\t\tlibdir localedir mandir\n+\t\tlibdir localedir mandir runstatedir\n do\n   eval ac_val=\\$$ac_var\n   # Remove trailing slashes.\n@@ -1409,6 +1420,7 @@ Fine tuning of the installation directories:\n   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n+  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n   --libdir=DIR            object code libraries [EPREFIX/lib]\n   --includedir=DIR        C header files [PREFIX/include]\n   --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n@@ -11343,7 +11355,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11346 \"configure\"\n+#line 11358 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11449,7 +11461,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11452 \"configure\"\n+#line 11464 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11836,7 +11848,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -11882,7 +11894,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -11906,7 +11918,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -11951,7 +11963,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -11975,7 +11987,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -12831,6 +12843,16 @@ _ACEOF\n \tdone\n \t;;\n \n+      bpf)\n+      \tif test $this_target = $target ; then\n+\n+cat >>confdefs.h <<_ACEOF\n+#define DEFAULT_ARCH \"${arch}\"\n+_ACEOF\n+\n+\tfi\n+        using_cgen=yes\n+        ;;\n       epiphany | fr30 | ip2k | iq2000 | lm32 | m32r | or1k)\n \tusing_cgen=yes\n \t;;"
    },
    {
      "sha": "34e114aa089e1fac0e5fec40279a69226e7a9133",
      "filename": "gas/configure.ac",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/configure.ac?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -430,6 +430,12 @@ changequote([,])dnl\n \tdone\n \t;;\n \n+      bpf)\n+      \tif test $this_target = $target ; then\n+\t  AC_DEFINE_UNQUOTED(DEFAULT_ARCH, \"${arch}\", [Default architecture.])\n+\tfi\n+        using_cgen=yes\n+        ;;\n       epiphany | fr30 | ip2k | iq2000 | lm32 | m32r | or1k)\n \tusing_cgen=yes\n \t;;"
    },
    {
      "sha": "a4828c4cae3b4fc552c94c65d8e33629f8a10f75",
      "filename": "gas/configure.tgt",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/configure.tgt",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/configure.tgt",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/configure.tgt?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -182,6 +182,7 @@ case ${generic_target} in\n   d30v-*-*)\t\t\t\tfmt=elf ;;\n   dlx-*-*)\t\t\t\tfmt=elf ;;\n \n+  bpf-*-*)\t\t\t\tfmt=elf ;;\n   epiphany-*-*)\t\t\t\tfmt=elf ;;\n \n   fr30-*-*)\t\t\t\tfmt=elf ;;"
    },
    {
      "sha": "9bd50f4b77a871d167b3ee6bfdfaf72f905ba438",
      "filename": "gas/doc/Makefile.am",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/doc/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/doc/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/Makefile.am?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -52,6 +52,7 @@ CPU_DOCS = \\\n \tc-arm.texi \\\n \tc-avr.texi \\\n \tc-bfin.texi \\\n+\tc-bpf.texi \\\n \tc-cr16.texi \\\n \tc-cris.texi \\\n \tc-csky.texi \\"
    },
    {
      "sha": "854ee9daef81de75531703d985e84300ce2d42ba",
      "filename": "gas/doc/Makefile.in",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/doc/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/doc/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/Makefile.in?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -364,6 +364,7 @@ pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+runstatedir = @runstatedir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@\n@@ -407,6 +408,7 @@ CPU_DOCS = \\\n \tc-arm.texi \\\n \tc-avr.texi \\\n \tc-bfin.texi \\\n+\tc-bpf.texi \\\n \tc-cr16.texi \\\n \tc-cris.texi \\\n \tc-csky.texi \\"
    },
    {
      "sha": "f76fdf779f966780a03626f890e51880bf5c653a",
      "filename": "gas/doc/all.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/doc/all.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/doc/all.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/all.texi?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -30,6 +30,7 @@\n @set ARM\n @set AVR\n @set Blackfin\n+@set BPF\n @set CR16\n @set CRIS\n @set CSKY"
    },
    {
      "sha": "763c9d22635a6e4e5f2d9063215b9ffb62be37f3",
      "filename": "gas/doc/as.texi",
      "status": "modified",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/doc/as.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/doc/as.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/as.texi?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -40,6 +40,9 @@\n @ifset Blackfin\n @set Blackfin\n @end ifset\n+@ifset BPF\n+@set BPF\n+@end ifset\n @ifset H8/300\n @set H8\n @end ifset\n@@ -296,6 +299,11 @@ gcc(1), ld(1), and the Info entries for @file{binutils} and @file{ld}.\n    [@b{-mno-fdpic}]\n    [@b{-mnopic}]\n @end ifset\n+@ifset BPF\n+\n+@emph{Target BPF options:}\n+   [@b{-EL}] [@b{-EB}]\n+@end ifset\n @ifset CRIS\n \n @emph{Target CRIS options:}\n@@ -1001,6 +1009,25 @@ the Blackfin processor family.\n \n @end ifset\n \n+@ifset BPF\n+\n+@ifclear man\n+@xref{BPF Options}, for the options available when @value{AS} is\n+configured for the Linux kernel BPF processor family.\n+@end ifclear\n+\n+@ifset man\n+@c man begin OPTIONS\n+The following options are available when @value{AS} is configured for\n+the Linux kernel BPF processor family.\n+@c man end\n+@c man begin INCLUDE\n+@include c-bpf.texi\n+@c ended inside the included file\n+@end ifset\n+\n+@end ifset\n+\n @c man begin OPTIONS\n @ifset CRIS\n See the info pages for documentation of the CRIS-specific options.\n@@ -7615,6 +7642,9 @@ subject, see the hardware manufacturer's manual.\n @ifset Blackfin\n * Blackfin-Dependent::\t\tBlackfin Dependent Features\n @end ifset\n+@ifset BPF\n+* BPF-Dependent::\t\tBPF Dependent Features\n+@end ifset\n @ifset CR16\n * CR16-Dependent::              CR16 Dependent Features\n @end ifset\n@@ -7802,6 +7832,10 @@ subject, see the hardware manufacturer's manual.\n @include c-bfin.texi\n @end ifset\n \n+@ifset BPF\n+@include c-bpf.texi\n+@end ifset\n+\n @ifset CR16\n @include c-cr16.texi\n @end ifset"
    },
    {
      "sha": "a7a694f3bd4ed0746d2d2944a4edb0d08faf2290",
      "filename": "gas/doc/c-bpf.texi",
      "status": "added",
      "additions": 364,
      "deletions": 0,
      "changes": 364,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/doc/c-bpf.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/doc/c-bpf.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-bpf.texi?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,364 @@\n+@c Copyright (C) 2019 Free Software Foundation, Inc.\n+@c This is part of the GAS manual.\n+@c For copying conditions, see the file as.texinfo.\n+\n+@ifset GENERIC\n+@page\n+@node BPF-Dependent\n+@chapter BPF Dependent Features\n+@end ifset\n+\n+@ifclear GENERIC\n+@node Machine Dependencies\n+@chapter BPF Dependent Features\n+@end ifclear\n+\n+@cindex BPF support\n+@menu\n+* BPF Options::                 Options\n+* BPF Syntax::\t\t        Syntax\n+* BPF Opcodes::\t\t\tOpcodes\n+@end menu\n+\n+@node BPF Options\n+@section Options\n+@cindex BPF options (none)\n+@cindex options for BPF (none)\n+\n+@c man begin OPTIONS\n+@table @gcctabopt\n+\n+@cindex @option{-EB} command-line option, BPF\n+@item -EB\n+This option specifies that the assembler should emit big-endian eBPF.\n+\n+@cindex @option{-EL} command-line option, BPF\n+@item -EL\n+This option specifies that the assembler should emit little-endian\n+eBPF.\n+@end table\n+\n+Note that if no endianness option is specified in the command line,\n+the host endianness is used.\n+@c man end\n+\n+@node BPF Syntax\n+@section Syntax\n+@menu\n+* BPF-Chars::                Special Characters\n+* BPF-Regs::                 Register Names\n+* BPF-Pseudo-Maps::\t     Pseudo map fds\n+@end menu\n+\n+@node BPF-Chars\n+@subsection Special Characters\n+\n+@cindex line comment character, BPF\n+@cindex BPF line comment character\n+The presence of a @samp{;} on a line indicates the start of a comment\n+that extends to the end of the current line.  If a @samp{#} appears as\n+the first character of a line, the whole line is treated as a comment.\n+\n+@cindex statement separator, BPF\n+Statements and assembly directives are separated by newlines.\n+\n+@node BPF-Regs\n+@subsection Register Names\n+\n+@cindex BPF register names\n+@cindex register names, BPF\n+The eBPF processor provides ten general-purpose 64-bit registers,\n+which are read-write, and a read-only frame pointer register:\n+\n+@table @samp\n+@item %r0 .. %r9\n+General-purpose registers.\n+@item %r10\n+Frame pointer register.\n+@end table\n+\n+Some registers have additional names, to reflect their role in the\n+eBPF ABI:\n+\n+@table @samp\n+@item %a\n+This is @samp{%r0}.\n+@item %ctx\n+This is @samp{%r6}.\n+@item %fp\n+This is @samp{%r10}.\n+@end table\n+\n+@node BPF-Pseudo-Maps\n+@subsection Pseudo Maps\n+\n+@cindex pseudo map fd, BPF\n+The @samp{LDDW} instruction can take a literal pseudo map file\n+descriptor as its second argument.  This uses the syntax\n+@samp{%map_fd(N)} where @samp{N} is a signed number.\n+\n+For example, to load the address of the pseudo map with file\n+descriptor @samp{2} in register @samp{r1} we would do:\n+\n+@smallexample\n+        lddw %r1, %map_fd(2)\n+@end smallexample\n+\n+@node BPF Opcodes\n+@section Opcodes\n+\n+@cindex BPF opcodes\n+@cindex opcodes for BPF\n+In the instruction descriptions below the following field descriptors\n+are used:\n+\n+@table @code\n+@item %d\n+Destination general-purpose register whose role is to be destination\n+of an operation.\n+@item %s\n+Source general-purpose register whose role is to be the source of an\n+operation.\n+@item disp16\n+16-bit signed PC-relative offset, measured in number of 64-bit words,\n+minus one.\n+@item disp32\n+32-bit signed PC-relative offset, measured in number of 64-bit words,\n+minus one.\n+@item offset16\n+Signed 16-bit immediate.\n+@item imm32\n+Signed 32-bit immediate.\n+@item imm64\n+Signed 64-bit immediate.\n+@end table\n+\n+@subsubsection Arithmetic instructions\n+\n+The destination register in these instructions act like an\n+accumulator.\n+\n+@table @code\n+@item add %d, (%s|imm32)\n+64-bit arithmetic addition.\n+@item sub %d, (%s|imm32)\n+64-bit arithmetic subtraction.\n+@item mul %d, (%s|imm32)\n+64-bit arithmetic multiplication.\n+@item div %d, (%s|imm32)\n+64-bit arithmetic integer division.\n+@item mod %d, (%s|imm32)\n+64-bit integer remainder.\n+@item and %d, (%s|imm32)\n+64-bit bit-wise ``and'' operation.\n+@item or %d, (%s|imm32)\n+64-bit bit-wise ``or'' operation.\n+@item xor %d, (%s|imm32)\n+64-bit bit-wise exclusive-or operation.\n+@item lsh %d, (%s|imm32)\n+64-bit left shift, by @code{%s} or @code{imm32} bits.\n+@item rsh %d, (%s|imm32)\n+64-bit right logical shift, by @code{%s} or @code{imm32} bits.\n+@item arsh %d, (%s|imm32)\n+64-bit right arithmetic shift, by @code{%s} or @code{imm32} bits.\n+@item neg %d\n+64-bit arithmetic negation.\n+@item mov %d, (%s|imm32)\n+Move the 64-bit value of @code{%s} in @code{%d}, or load @code{imm32}\n+in @code{%d}.\n+@end table\n+\n+@subsubsection 32-bit arithmetic instructions\n+\n+The destination register in these instructions act as an accumulator.\n+\n+@table @code\n+@item add32 %d, (%s|imm32)\n+32-bit arithmetic addition.\n+@item sub32 %d, (%s|imm32)\n+32-bit arithmetic subtraction.\n+@item mul32 %d, (%s|imm32)\n+32-bit arithmetic multiplication.\n+@item div32 %d, (%s|imm32)\n+32-bit arithmetic integer division.\n+@item mod32 %d, (%s|imm32)\n+32-bit integer remainder.\n+@item and32 %d, (%s|imm32)\n+32-bit bit-wise ``and'' operation.\n+@item or32 %d, (%s|imm32)\n+32-bit bit-wise ``or'' operation.\n+@item xor32 %d, (%s|imm32)\n+32-bit bit-wise exclusive-or operation.\n+@item lsh32 %d, (%s|imm32)\n+32-bit left shift, by @code{%s} or @code{imm32} bits.\n+@item rsh32 %d, (%s|imm32)\n+32-bit right logical shift, by @code{%s} or @code{imm32} bits.\n+@item arsh32 %d, (%s|imm32)\n+32-bit right arithmetic shift, by @code{%s} or @code{imm32} bits.\n+@item neg32 %d\n+32-bit arithmetic negation.\n+@item mov32 %d, (%s|imm32)\n+Move the 32-bit value of @code{%s} in @code{%d}, or load @code{imm32}\n+in @code{%d}.\n+@end table\n+\n+@subsubsection Endianness conversion instructions\n+\n+@table @code\n+@item endle %d, (8|16|32)\n+Convert the 8-bit, 16-bit or 32-bit value in @code{%d} to\n+little-endian.\n+@item endbe %d, (8|16|32)\n+Convert the 8-bit, 16-bit or 32-bit value in @code{%d} to big-endian.\n+@end table\n+\n+@subsubsection 64-bit load and pseudo maps\n+\n+@table @code\n+@item lddw %d, imm64\n+Load the given signed 64-bit immediate, or pseudo map descriptor, to\n+the destination register @code{%d}.\n+@item lddw %d, %map_fd(N)\n+Load the address of the given pseudo map fd @emph{N} to the\n+destination register @code{%d}.\n+@end table\n+\n+@subsubsection Load instructions for socket filters\n+\n+The following instructions are intended to be used in socket filters,\n+and are therefore not general-purpose: they make assumptions on the\n+contents of several registers.  See the file\n+@file{Documentation/networking/filter.txt} in the Linux kernel source\n+tree for more information.\n+\n+Absolute loads:\n+\n+@table @code\n+@item ldabsdw %d, %s, imm32\n+Absolute 64-bit load.\n+@item ldabsw %d, %s, imm32\n+Absolute 32-bit load.\n+@item ldabsh %d, %s, imm32\n+Absolute 16-bit load.\n+@item ldabsb %d, %s, imm32\n+Absolute 8-bit load.\n+@end table\n+\n+Indirect loads:\n+\n+@table @code\n+@item ldinddw %d, %s, imm32\n+Indirect 64-bit load.\n+@item ldindw %d, %s, imm32\n+Indirect 32-bit load.\n+@item ldindh %d, %s, imm32\n+Indirect 16-bit load.\n+@item ldindb %d, %s, imm32\n+Indirect 8-bit load.\n+@end table\n+\n+@subsubsection Generic load/store instructions\n+\n+General-purpose load and store instructions are provided for several\n+word sizes.\n+\n+Load to register instructions:\n+\n+@table @code\n+@item ldxdw %d, [%s+offset16]\n+Generic 64-bit load.\n+@item ldxw %d, [%s+offset16]\n+Generic 32-bit load.\n+@item ldxh %d, [%s+offset16]\n+Generic 16-bit load.\n+@item ldxb %d, [%s+offset16]\n+Generic 8-bit load.\n+@end table\n+\n+Store from register instructions:\n+\n+@table @code\n+@item stxdw [%d+offset16], %s\n+Generic 64-bit store.\n+@item stxw [%d+offset16], %s\n+Generic 32-bit store.\n+@item stxh [%d+offset16], %s\n+Generic 16-bit store.\n+@item stxb [%d+offset16], %s\n+Generic 8-bit store.\n+@end table\n+\n+Store from immediates instructions:\n+\n+@table @code\n+@item stddw [%d+offset16], imm32\n+Store immediate as 64-bit.\n+@item stdw [%d+offset16], imm32\n+Store immediate as 32-bit.\n+@item stdh [%d+offset16], imm32\n+Store immediate as 16-bit.\n+@item stdb [%d+offset16], imm32\n+Store immediate as 8-bit.\n+@end table\n+\n+@subsubsection Jump instructions\n+\n+eBPF provides the following compare-and-jump instructions, which\n+compare the values of the two given registers, or the values of a\n+register and an immediate, and perform a branch in case the comparison\n+holds true.\n+\n+@table @code\n+@item ja %d,(%s|imm32),disp16\n+Jump-always.\n+@item jeq %d,(%s|imm32),disp16\n+Jump if equal.\n+@item jgt %d,(%s|imm32),disp16\n+Jump if greater.\n+@item jge %d,(%s|imm32),disp16\n+Jump if greater or equal.\n+@item jlt %d,(%s|imm32),disp16\n+Jump if lesser.\n+@item jle %d,(%s|imm32),disp16\n+Jump if lesser or equal.\n+@item jset %d,(%s|imm32),disp16\n+Jump if signed equal.\n+@item jne %d,(%s|imm32),disp16\n+Jump if not equal.\n+@item jsgt %d,(%s|imm32),disp16\n+Jump if signed greater.\n+@item jsge %d,(%s|imm32),disp16\n+Jump if signed greater or equal.\n+@item jslt %d,(%s|imm32),disp16\n+Jump if signed lesser.\n+@item jsle %d,(%s|imm32),disp16\n+Jump if signed lesser or equal.\n+@end table\n+\n+A call instruction is provided in order to perform calls to other eBPF\n+functions, or to external kernel helpers:\n+\n+@table @code\n+@item call (disp32|imm32)\n+Jump and link to the offset @emph{disp32}, or to the kernel helper\n+function identified by @emph{imm32}.\n+@end table\n+\n+Finally:\n+\n+@table @code\n+@item exit\n+Terminate the eBPF program.\n+@end table\n+\n+@subsubsection Atomic instructions\n+\n+Atomic exchange-and-add instructions are provided in two flavors: one\n+for swapping 64-bit quantities and another for 32-bit quantities.\n+\n+@table @code\n+@item xadddw [%d+offset16],%s\n+Exchange-and-add a 64-bit value at the specified location.\n+@item xaddw [%d+offset16],%s\n+Exchange-and-add a 32-bit value at the specified location.\n+@end table"
    },
    {
      "sha": "4f0e98029cf6bd9cd801e0d659a0e48077fa18f5",
      "filename": "gas/testsuite/gas/all/gas.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/all/gas.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/all/gas.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/gas.exp?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -427,6 +427,9 @@ dg-finish\n \n # Set $nop_type appropriately to indicate the NOP instruction mnemonic.\n case $target_triplet in {\n+    { \"bpf-*-*\" } {\n+        set nop_type 6\n+    }\n     { \"mmix-*-*\" } {\n \tset nop_type 5\n     }"
    },
    {
      "sha": "e95dd18e472ec10a62a83e1632f143ffc1efcf10",
      "filename": "gas/testsuite/gas/all/org-1.l",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/all/org-1.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/all/org-1.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/org-1.l?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -1,2 +1,2 @@\n .*: Assembler messages:\n-.*:22: Error: attempt to move \\.org backwards\n+.*:24: Error: attempt to move \\.org backwards"
    },
    {
      "sha": "7dccbe3d6f51bdb0ea4c63058886b7114c3cba55",
      "filename": "gas/testsuite/gas/all/org-1.s",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/all/org-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/all/org-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/org-1.s?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -9,6 +9,8 @@\n \tmov\tg0, g0\n \t.elseif\tnop_type == 5\n \tset\t$0, $0\n+        .elseif nop_type == 6\n+        mov\t%r1,%r1\n \t.else\n \tnop\n \t.endif"
    },
    {
      "sha": "9aab7fb5b49ef2fad5ce49194699f692f7184f11",
      "filename": "gas/testsuite/gas/bpf/alu-be.d",
      "status": "added",
      "additions": 59,
      "deletions": 0,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/alu-be.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/alu-be.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/alu-be.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,59 @@\n+#as: --EB\n+#source: alu.s\n+#objdump: -dr\n+#name: eBPF ALU64 instructions, big endian\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\t07 20 00 00 00 00 02 9a \tadd %r2,0x29a\n+   8:\t07 30 00 00 ff ff fd 66 \tadd %r3,-666\n+  10:\t07 40 00 00 7e ad be ef \tadd %r4,0x7eadbeef\n+  18:\t0f 56 00 00 00 00 00 00 \tadd %r5,%ctx\n+  20:\t17 20 00 00 00 00 02 9a \tsub %r2,0x29a\n+  28:\t17 30 00 00 ff ff fd 66 \tsub %r3,-666\n+  30:\t17 40 00 00 7e ad be ef \tsub %r4,0x7eadbeef\n+  38:\t1f 56 00 00 00 00 00 00 \tsub %r5,%ctx\n+  40:\t27 20 00 00 00 00 02 9a \tmul %r2,0x29a\n+  48:\t27 30 00 00 ff ff fd 66 \tmul %r3,-666\n+  50:\t27 40 00 00 7e ad be ef \tmul %r4,0x7eadbeef\n+  58:\t2f 56 00 00 00 00 00 00 \tmul %r5,%ctx\n+  60:\t37 20 00 00 00 00 02 9a \tdiv %r2,0x29a\n+  68:\t37 30 00 00 ff ff fd 66 \tdiv %r3,-666\n+  70:\t37 40 00 00 7e ad be ef \tdiv %r4,0x7eadbeef\n+  78:\t3f 56 00 00 00 00 00 00 \tdiv %r5,%ctx\n+  80:\t47 20 00 00 00 00 02 9a \tor %r2,0x29a\n+  88:\t47 30 00 00 ff ff fd 66 \tor %r3,-666\n+  90:\t47 40 00 00 7e ad be ef \tor %r4,0x7eadbeef\n+  98:\t4f 56 00 00 00 00 00 00 \tor %r5,%ctx\n+  a0:\t57 20 00 00 00 00 02 9a \tand %r2,0x29a\n+  a8:\t57 30 00 00 ff ff fd 66 \tand %r3,-666\n+  b0:\t57 40 00 00 7e ad be ef \tand %r4,0x7eadbeef\n+  b8:\t5f 56 00 00 00 00 00 00 \tand %r5,%ctx\n+  c0:\t67 20 00 00 00 00 02 9a \tlsh %r2,0x29a\n+  c8:\t67 30 00 00 ff ff fd 66 \tlsh %r3,-666\n+  d0:\t67 40 00 00 7e ad be ef \tlsh %r4,0x7eadbeef\n+  d8:\t6f 56 00 00 00 00 00 00 \tlsh %r5,%ctx\n+  e0:\t77 20 00 00 00 00 02 9a \trsh %r2,0x29a\n+  e8:\t77 30 00 00 ff ff fd 66 \trsh %r3,-666\n+  f0:\t77 40 00 00 7e ad be ef \trsh %r4,0x7eadbeef\n+  f8:\t7f 56 00 00 00 00 00 00 \trsh %r5,%ctx\n+ 100:\t97 20 00 00 00 00 02 9a \tmod %r2,0x29a\n+ 108:\t97 30 00 00 ff ff fd 66 \tmod %r3,-666\n+ 110:\t97 40 00 00 7e ad be ef \tmod %r4,0x7eadbeef\n+ 118:\t9f 56 00 00 00 00 00 00 \tmod %r5,%ctx\n+ 120:\ta7 20 00 00 00 00 02 9a \txor %r2,0x29a\n+ 128:\ta7 30 00 00 ff ff fd 66 \txor %r3,-666\n+ 130:\ta7 40 00 00 7e ad be ef \txor %r4,0x7eadbeef\n+ 138:\taf 56 00 00 00 00 00 00 \txor %r5,%ctx\n+ 140:\tb7 20 00 00 00 00 02 9a \tmov %r2,0x29a\n+ 148:\tb7 30 00 00 ff ff fd 66 \tmov %r3,-666\n+ 150:\tb7 40 00 00 7e ad be ef \tmov %r4,0x7eadbeef\n+ 158:\tbf 56 00 00 00 00 00 00 \tmov %r5,%ctx\n+ 160:\tc7 20 00 00 00 00 02 9a \tarsh %r2,0x29a\n+ 168:\tc7 30 00 00 ff ff fd 66 \tarsh %r3,-666\n+ 170:\tc7 40 00 00 7e ad be ef \tarsh %r4,0x7eadbeef\n+ 178:\tcf 56 00 00 00 00 00 00 \tarsh %r5,%ctx\n+ 180:\t8f 20 00 00 00 00 00 00 \tneg %r2"
    },
    {
      "sha": "c1ad2e0136950703e4e5f248e70df936527d0aba",
      "filename": "gas/testsuite/gas/bpf/alu.d",
      "status": "added",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/alu.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/alu.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/alu.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,58 @@\n+#as: --EL\n+#objdump: -dr\n+#name: eBPF ALU64 instructions\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\t07 02 00 00 9a 02 00 00 \tadd %r2,0x29a\n+   8:\t07 03 00 00 66 fd ff ff \tadd %r3,-666\n+  10:\t07 04 00 00 ef be ad 7e \tadd %r4,0x7eadbeef\n+  18:\t0f 65 00 00 00 00 00 00 \tadd %r5,%ctx\n+  20:\t17 02 00 00 9a 02 00 00 \tsub %r2,0x29a\n+  28:\t17 03 00 00 66 fd ff ff \tsub %r3,-666\n+  30:\t17 04 00 00 ef be ad 7e \tsub %r4,0x7eadbeef\n+  38:\t1f 65 00 00 00 00 00 00 \tsub %r5,%ctx\n+  40:\t27 02 00 00 9a 02 00 00 \tmul %r2,0x29a\n+  48:\t27 03 00 00 66 fd ff ff \tmul %r3,-666\n+  50:\t27 04 00 00 ef be ad 7e \tmul %r4,0x7eadbeef\n+  58:\t2f 65 00 00 00 00 00 00 \tmul %r5,%ctx\n+  60:\t37 02 00 00 9a 02 00 00 \tdiv %r2,0x29a\n+  68:\t37 03 00 00 66 fd ff ff \tdiv %r3,-666\n+  70:\t37 04 00 00 ef be ad 7e \tdiv %r4,0x7eadbeef\n+  78:\t3f 65 00 00 00 00 00 00 \tdiv %r5,%ctx\n+  80:\t47 02 00 00 9a 02 00 00 \tor %r2,0x29a\n+  88:\t47 03 00 00 66 fd ff ff \tor %r3,-666\n+  90:\t47 04 00 00 ef be ad 7e \tor %r4,0x7eadbeef\n+  98:\t4f 65 00 00 00 00 00 00 \tor %r5,%ctx\n+  a0:\t57 02 00 00 9a 02 00 00 \tand %r2,0x29a\n+  a8:\t57 03 00 00 66 fd ff ff \tand %r3,-666\n+  b0:\t57 04 00 00 ef be ad 7e \tand %r4,0x7eadbeef\n+  b8:\t5f 65 00 00 00 00 00 00 \tand %r5,%ctx\n+  c0:\t67 02 00 00 9a 02 00 00 \tlsh %r2,0x29a\n+  c8:\t67 03 00 00 66 fd ff ff \tlsh %r3,-666\n+  d0:\t67 04 00 00 ef be ad 7e \tlsh %r4,0x7eadbeef\n+  d8:\t6f 65 00 00 00 00 00 00 \tlsh %r5,%ctx\n+  e0:\t77 02 00 00 9a 02 00 00 \trsh %r2,0x29a\n+  e8:\t77 03 00 00 66 fd ff ff \trsh %r3,-666\n+  f0:\t77 04 00 00 ef be ad 7e \trsh %r4,0x7eadbeef\n+  f8:\t7f 65 00 00 00 00 00 00 \trsh %r5,%ctx\n+ 100:\t97 02 00 00 9a 02 00 00 \tmod %r2,0x29a\n+ 108:\t97 03 00 00 66 fd ff ff \tmod %r3,-666\n+ 110:\t97 04 00 00 ef be ad 7e \tmod %r4,0x7eadbeef\n+ 118:\t9f 65 00 00 00 00 00 00 \tmod %r5,%ctx\n+ 120:\ta7 02 00 00 9a 02 00 00 \txor %r2,0x29a\n+ 128:\ta7 03 00 00 66 fd ff ff \txor %r3,-666\n+ 130:\ta7 04 00 00 ef be ad 7e \txor %r4,0x7eadbeef\n+ 138:\taf 65 00 00 00 00 00 00 \txor %r5,%ctx\n+ 140:\tb7 02 00 00 9a 02 00 00 \tmov %r2,0x29a\n+ 148:\tb7 03 00 00 66 fd ff ff \tmov %r3,-666\n+ 150:\tb7 04 00 00 ef be ad 7e \tmov %r4,0x7eadbeef\n+ 158:\tbf 65 00 00 00 00 00 00 \tmov %r5,%ctx\n+ 160:\tc7 02 00 00 9a 02 00 00 \tarsh %r2,0x29a\n+ 168:\tc7 03 00 00 66 fd ff ff \tarsh %r3,-666\n+ 170:\tc7 04 00 00 ef be ad 7e \tarsh %r4,0x7eadbeef\n+ 178:\tcf 65 00 00 00 00 00 00 \tarsh %r5,%ctx\n+ 180:\t8f 02 00 00 00 00 00 00 \tneg %r2"
    },
    {
      "sha": "18e60d5eaed1218cfb8d7c52a8d475a486f3cb8f",
      "filename": "gas/testsuite/gas/bpf/alu.s",
      "status": "added",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/alu.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/alu.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/alu.s?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,51 @@\n+# Tests for the ALU64 eBPF instructions\n+        .text\n+        add\t%r2, 666\n+        add\t%r3, -666\n+        add\t%r4, 0x7eadbeef\n+        add\t%r5, %r6\n+        sub\t%r2, 666\n+        sub\t%r3, -666\n+        sub\t%r4, 0x7eadbeef\n+        sub\t%r5, %r6\n+        mul\t%r2, 666\n+        mul\t%r3, -666\n+        mul\t%r4, 0x7eadbeef\n+        mul\t%r5, %r6\n+        div\t%r2, 666\n+        div\t%r3, -666\n+        div\t%r4, 0x7eadbeef\n+        div\t%r5, %r6\n+        or\t%r2, 666\n+        or\t%r3, -666\n+        or\t%r4, 0x7eadbeef\n+        or\t%r5, %r6\n+        and\t%r2, 666\n+        and\t%r3, -666\n+        and\t%r4, 0x7eadbeef\n+        and\t%r5, %r6\n+        lsh\t%r2, 666\n+        lsh\t%r3, -666\n+        lsh\t%r4, 0x7eadbeef\n+        lsh\t%r5, %r6\n+        rsh\t%r2, 666\n+        rsh\t%r3, -666\n+        rsh\t%r4, 0x7eadbeef\n+        rsh\t%r5, %r6\n+        mod\t%r2, 666\n+        mod\t%r3, -666\n+        mod\t%r4, 0x7eadbeef\n+        mod\t%r5, %r6\n+        xor\t%r2, 666\n+        xor\t%r3, -666\n+        xor\t%r4, 0x7eadbeef\n+        xor\t%r5, %r6\n+        mov\t%r2, 666\n+        mov\t%r3, -666\n+        mov\t%r4, 0x7eadbeef\n+        mov\t%r5, %r6\n+        arsh\t%r2, 666\n+        arsh\t%r3, -666\n+        arsh\t%r4, 0x7eadbeef\n+        arsh\t%r5, %r6\n+        neg     %r2"
    },
    {
      "sha": "8cebbbfbc9dad2dcb04f971abdd03f1a63e7a4f5",
      "filename": "gas/testsuite/gas/bpf/alu32-be.d",
      "status": "added",
      "additions": 65,
      "deletions": 0,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/alu32-be.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/alu32-be.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/alu32-be.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,65 @@\n+#as: --EB\n+#source: alu32.s\n+#objdump: -dr\n+#name: eBPF ALU instructions, big-endian\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\t04 20 00 00 00 00 02 9a \tadd32 %r2,0x29a\n+   8:\t04 30 00 00 ff ff fd 66 \tadd32 %r3,-666\n+  10:\t04 40 00 00 7e ad be ef \tadd32 %r4,0x7eadbeef\n+  18:\t0c 56 00 00 00 00 00 00 \tadd32 %r5,%ctx\n+  20:\t14 20 00 00 00 00 02 9a \tsub32 %r2,0x29a\n+  28:\t14 30 00 00 ff ff fd 66 \tsub32 %r3,-666\n+  30:\t14 40 00 00 7e ad be ef \tsub32 %r4,0x7eadbeef\n+  38:\t1c 56 00 00 00 00 00 00 \tsub32 %r5,%ctx\n+  40:\t24 20 00 00 00 00 02 9a \tmul32 %r2,0x29a\n+  48:\t24 30 00 00 ff ff fd 66 \tmul32 %r3,-666\n+  50:\t24 40 00 00 7e ad be ef \tmul32 %r4,0x7eadbeef\n+  58:\t2c 56 00 00 00 00 00 00 \tmul32 %r5,%ctx\n+  60:\t34 20 00 00 00 00 02 9a \tdiv32 %r2,0x29a\n+  68:\t34 30 00 00 ff ff fd 66 \tdiv32 %r3,-666\n+  70:\t34 40 00 00 7e ad be ef \tdiv32 %r4,0x7eadbeef\n+  78:\t3c 56 00 00 00 00 00 00 \tdiv32 %r5,%ctx\n+  80:\t44 20 00 00 00 00 02 9a \tor32 %r2,0x29a\n+  88:\t44 30 00 00 ff ff fd 66 \tor32 %r3,-666\n+  90:\t44 40 00 00 7e ad be ef \tor32 %r4,0x7eadbeef\n+  98:\t4c 56 00 00 00 00 00 00 \tor32 %r5,%ctx\n+  a0:\t54 20 00 00 00 00 02 9a \tand32 %r2,0x29a\n+  a8:\t54 30 00 00 ff ff fd 66 \tand32 %r3,-666\n+  b0:\t54 40 00 00 7e ad be ef \tand32 %r4,0x7eadbeef\n+  b8:\t5c 56 00 00 00 00 00 00 \tand32 %r5,%ctx\n+  c0:\t64 20 00 00 00 00 02 9a \tlsh32 %r2,0x29a\n+  c8:\t64 30 00 00 ff ff fd 66 \tlsh32 %r3,-666\n+  d0:\t64 40 00 00 7e ad be ef \tlsh32 %r4,0x7eadbeef\n+  d8:\t6c 56 00 00 00 00 00 00 \tlsh32 %r5,%ctx\n+  e0:\t74 20 00 00 00 00 02 9a \trsh32 %r2,0x29a\n+  e8:\t74 30 00 00 ff ff fd 66 \trsh32 %r3,-666\n+  f0:\t74 40 00 00 7e ad be ef \trsh32 %r4,0x7eadbeef\n+  f8:\t7c 56 00 00 00 00 00 00 \trsh32 %r5,%ctx\n+ 100:\t94 20 00 00 00 00 02 9a \tmod32 %r2,0x29a\n+ 108:\t94 30 00 00 ff ff fd 66 \tmod32 %r3,-666\n+ 110:\t94 40 00 00 7e ad be ef \tmod32 %r4,0x7eadbeef\n+ 118:\t9c 56 00 00 00 00 00 00 \tmod32 %r5,%ctx\n+ 120:\ta4 20 00 00 00 00 02 9a \txor32 %r2,0x29a\n+ 128:\ta4 30 00 00 ff ff fd 66 \txor32 %r3,-666\n+ 130:\ta4 40 00 00 7e ad be ef \txor32 %r4,0x7eadbeef\n+ 138:\tac 56 00 00 00 00 00 00 \txor32 %r5,%ctx\n+ 140:\tb4 20 00 00 00 00 02 9a \tmov32 %r2,0x29a\n+ 148:\tb4 30 00 00 ff ff fd 66 \tmov32 %r3,-666\n+ 150:\tb4 40 00 00 7e ad be ef \tmov32 %r4,0x7eadbeef\n+ 158:\tbc 56 00 00 00 00 00 00 \tmov32 %r5,%ctx\n+ 160:\tc4 20 00 00 00 00 02 9a \tarsh32 %r2,0x29a\n+ 168:\tc4 30 00 00 ff ff fd 66 \tarsh32 %r3,-666\n+ 170:\tc4 40 00 00 7e ad be ef \tarsh32 %r4,0x7eadbeef\n+ 178:\tcc 56 00 00 00 00 00 00 \tarsh32 %r5,%ctx\n+ 180:\t8c 20 00 00 00 00 00 00 \tneg32 %r2\n+ 188:\td4 90 00 00 00 00 00 10 \tendle %r9,16\n+ 190:\td4 80 00 00 00 00 00 20 \tendle %r8,32\n+ 198:\td4 70 00 00 00 00 00 40 \tendle %r7,64\n+ 1a0:\tdc 60 00 00 00 00 00 10 \tendbe %ctx,16\n+ 1a8:\tdc 50 00 00 00 00 00 20 \tendbe %r5,32\n+ 1b0:\tdc 40 00 00 00 00 00 40 \tendbe %r4,64"
    },
    {
      "sha": "655a71b14b18bef38712a802fa28314f908c2cc7",
      "filename": "gas/testsuite/gas/bpf/alu32.d",
      "status": "added",
      "additions": 64,
      "deletions": 0,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/alu32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/alu32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/alu32.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,64 @@\n+#as: --EL\n+#objdump: -dr\n+#name: eBPF ALU instructions\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\t04 02 00 00 9a 02 00 00 \tadd32 %r2,0x29a\n+   8:\t04 03 00 00 66 fd ff ff \tadd32 %r3,-666\n+  10:\t04 04 00 00 ef be ad 7e \tadd32 %r4,0x7eadbeef\n+  18:\t0c 65 00 00 00 00 00 00 \tadd32 %r5,%ctx\n+  20:\t14 02 00 00 9a 02 00 00 \tsub32 %r2,0x29a\n+  28:\t14 03 00 00 66 fd ff ff \tsub32 %r3,-666\n+  30:\t14 04 00 00 ef be ad 7e \tsub32 %r4,0x7eadbeef\n+  38:\t1c 65 00 00 00 00 00 00 \tsub32 %r5,%ctx\n+  40:\t24 02 00 00 9a 02 00 00 \tmul32 %r2,0x29a\n+  48:\t24 03 00 00 66 fd ff ff \tmul32 %r3,-666\n+  50:\t24 04 00 00 ef be ad 7e \tmul32 %r4,0x7eadbeef\n+  58:\t2c 65 00 00 00 00 00 00 \tmul32 %r5,%ctx\n+  60:\t34 02 00 00 9a 02 00 00 \tdiv32 %r2,0x29a\n+  68:\t34 03 00 00 66 fd ff ff \tdiv32 %r3,-666\n+  70:\t34 04 00 00 ef be ad 7e \tdiv32 %r4,0x7eadbeef\n+  78:\t3c 65 00 00 00 00 00 00 \tdiv32 %r5,%ctx\n+  80:\t44 02 00 00 9a 02 00 00 \tor32 %r2,0x29a\n+  88:\t44 03 00 00 66 fd ff ff \tor32 %r3,-666\n+  90:\t44 04 00 00 ef be ad 7e \tor32 %r4,0x7eadbeef\n+  98:\t4c 65 00 00 00 00 00 00 \tor32 %r5,%ctx\n+  a0:\t54 02 00 00 9a 02 00 00 \tand32 %r2,0x29a\n+  a8:\t54 03 00 00 66 fd ff ff \tand32 %r3,-666\n+  b0:\t54 04 00 00 ef be ad 7e \tand32 %r4,0x7eadbeef\n+  b8:\t5c 65 00 00 00 00 00 00 \tand32 %r5,%ctx\n+  c0:\t64 02 00 00 9a 02 00 00 \tlsh32 %r2,0x29a\n+  c8:\t64 03 00 00 66 fd ff ff \tlsh32 %r3,-666\n+  d0:\t64 04 00 00 ef be ad 7e \tlsh32 %r4,0x7eadbeef\n+  d8:\t6c 65 00 00 00 00 00 00 \tlsh32 %r5,%ctx\n+  e0:\t74 02 00 00 9a 02 00 00 \trsh32 %r2,0x29a\n+  e8:\t74 03 00 00 66 fd ff ff \trsh32 %r3,-666\n+  f0:\t74 04 00 00 ef be ad 7e \trsh32 %r4,0x7eadbeef\n+  f8:\t7c 65 00 00 00 00 00 00 \trsh32 %r5,%ctx\n+ 100:\t94 02 00 00 9a 02 00 00 \tmod32 %r2,0x29a\n+ 108:\t94 03 00 00 66 fd ff ff \tmod32 %r3,-666\n+ 110:\t94 04 00 00 ef be ad 7e \tmod32 %r4,0x7eadbeef\n+ 118:\t9c 65 00 00 00 00 00 00 \tmod32 %r5,%ctx\n+ 120:\ta4 02 00 00 9a 02 00 00 \txor32 %r2,0x29a\n+ 128:\ta4 03 00 00 66 fd ff ff \txor32 %r3,-666\n+ 130:\ta4 04 00 00 ef be ad 7e \txor32 %r4,0x7eadbeef\n+ 138:\tac 65 00 00 00 00 00 00 \txor32 %r5,%ctx\n+ 140:\tb4 02 00 00 9a 02 00 00 \tmov32 %r2,0x29a\n+ 148:\tb4 03 00 00 66 fd ff ff \tmov32 %r3,-666\n+ 150:\tb4 04 00 00 ef be ad 7e \tmov32 %r4,0x7eadbeef\n+ 158:\tbc 65 00 00 00 00 00 00 \tmov32 %r5,%ctx\n+ 160:\tc4 02 00 00 9a 02 00 00 \tarsh32 %r2,0x29a\n+ 168:\tc4 03 00 00 66 fd ff ff \tarsh32 %r3,-666\n+ 170:\tc4 04 00 00 ef be ad 7e \tarsh32 %r4,0x7eadbeef\n+ 178:\tcc 65 00 00 00 00 00 00 \tarsh32 %r5,%ctx\n+ 180:\t8c 02 00 00 00 00 00 00 \tneg32 %r2\n+ 188:\td4 09 00 00 10 00 00 00 \tendle %r9,16\n+ 190:\td4 08 00 00 20 00 00 00 \tendle %r8,32\n+ 198:\td4 07 00 00 40 00 00 00 \tendle %r7,64\n+ 1a0:\tdc 06 00 00 10 00 00 00 \tendbe %ctx,16\n+ 1a8:\tdc 05 00 00 20 00 00 00 \tendbe %r5,32\n+ 1b0:\tdc 04 00 00 40 00 00 00 \tendbe %r4,64"
    },
    {
      "sha": "7b6f014e8be1b35f9bdd51c311e5c89a4244041e",
      "filename": "gas/testsuite/gas/bpf/alu32.s",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/alu32.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/alu32.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/alu32.s?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,57 @@\n+# Tests for the ALU eBPF instructions\n+        .text\n+        add32\t%r2, 666\n+        add32\t%r3, -666\n+        add32\t%r4, 0x7eadbeef\n+        add32\t%r5, %r6\n+        sub32\t%r2, 666\n+        sub32\t%r3, -666\n+        sub32\t%r4, 0x7eadbeef\n+        sub32\t%r5, %r6\n+        mul32\t%r2, 666\n+        mul32\t%r3, -666\n+        mul32\t%r4, 0x7eadbeef\n+        mul32\t%r5, %r6\n+        div32\t%r2, 666\n+        div32\t%r3, -666\n+        div32\t%r4, 0x7eadbeef\n+        div32\t%r5, %r6\n+        or32\t%r2, 666\n+        or32\t%r3, -666\n+        or32\t%r4, 0x7eadbeef\n+        or32\t%r5, %r6\n+        and32\t%r2, 666\n+        and32\t%r3, -666\n+        and32\t%r4, 0x7eadbeef\n+        and32\t%r5, %r6\n+        lsh32\t%r2, 666\n+        lsh32\t%r3, -666\n+        lsh32\t%r4, 0x7eadbeef\n+        lsh32\t%r5, %r6\n+        rsh32\t%r2, 666\n+        rsh32\t%r3, -666\n+        rsh32\t%r4, 0x7eadbeef\n+        rsh32\t%r5, %r6\n+        mod32\t%r2, 666\n+        mod32\t%r3, -666\n+        mod32\t%r4, 0x7eadbeef\n+        mod32\t%r5, %r6\n+        xor32\t%r2, 666\n+        xor32\t%r3, -666\n+        xor32\t%r4, 0x7eadbeef\n+        xor32\t%r5, %r6\n+        mov32\t%r2, 666\n+        mov32\t%r3, -666\n+        mov32\t%r4, 0x7eadbeef\n+        mov32\t%r5, %r6\n+        arsh32\t%r2, 666\n+        arsh32\t%r3, -666\n+        arsh32\t%r4, 0x7eadbeef\n+        arsh32\t%r5, %r6\n+        neg32\t%r2\n+\tendle\t%r9,16\n+        endle\t%r8,32\n+        endle\t%r7,64\n+        endbe\t%r6,16\n+        endbe\t%r5,32\n+        endbe\t%r4,64"
    },
    {
      "sha": "04161e08acaec8b9d93bdf0ca39dc5dadc0648a5",
      "filename": "gas/testsuite/gas/bpf/atomic-be.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/atomic-be.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/atomic-be.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/atomic-be.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,12 @@\n+#as: --EB\n+#source: atomic.s\n+#objdump: -dr\n+#name: eBPF atomic instructions, big endian\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\tdb 12 1e ef 00 00 00 00 \txadddw \\[%r1\\+0x1eef\\],%r2\n+   8:\tc3 12 1e ef 00 00 00 00 \txaddw \\[%r1\\+0x1eef\\],%r2"
    },
    {
      "sha": "1c83cb582abeb56105c639e846e423ac26ff2861",
      "filename": "gas/testsuite/gas/bpf/atomic.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/atomic.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/atomic.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/atomic.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,11 @@\n+#as: --EL\n+#objdump: -dr\n+#name: eBPF atomic instructions\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\tdb 21 ef 1e 00 00 00 00 \txadddw \\[%r1\\+0x1eef\\],%r2\n+   8:\tc3 21 ef 1e 00 00 00 00 \txaddw \\[%r1\\+0x1eef\\],%r2"
    },
    {
      "sha": "0119b24c8bb31f0f54b39f44698e9d158513bb7f",
      "filename": "gas/testsuite/gas/bpf/atomic.s",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/atomic.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/atomic.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/atomic.s?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,5 @@\n+        # Test for eBPF ADDW and ADDDW instructions\n+        .text\n+        xadddw\t[%r1+0x1eef], %r2\n+        xaddw\t[%r1+0x1eef], %r2\n+        "
    },
    {
      "sha": "e228fd4d1b87f0b52dd29b635a32282be1a444f7",
      "filename": "gas/testsuite/gas/bpf/bpf.exp",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/bpf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/bpf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/bpf.exp?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,38 @@\n+# GAS testsuite for the Linux eBPF -*- Tcl -*-\n+#\n+# Copyright (C) 2019 Free Software Foundation, Inc.\n+# Contributed by Oracle, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  \n+\n+if {[istarget bpf*-*-*]} {\n+    run_dump_test lddw\n+    run_dump_test alu\n+    run_dump_test alu32\n+    run_dump_test mem\n+    run_dump_test jump\n+    run_dump_test call\n+    run_dump_test exit\n+    run_dump_test atomic\n+\n+    run_dump_test lddw-be\n+    run_dump_test alu-be\n+    run_dump_test alu32-be\n+    run_dump_test mem-be\n+    run_dump_test jump-be\n+    run_dump_test call-be\n+    run_dump_test exit-be\n+    run_dump_test atomic-be\n+}"
    },
    {
      "sha": "bd3b50f36b221348e7be2df4b907dbbb4ab4062c",
      "filename": "gas/testsuite/gas/bpf/call-be.d",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/call-be.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/call-be.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/call-be.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,19 @@\n+#as: --EB\n+#source: call.s\n+#objdump: -dr\n+#name: eBPF CALL instruction, big endian\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+[0-9a-f]+ <.*>:\n+   0:\t85 00 00 00 00 00 00 00 \tcall 0\n+   8:\t85 00 00 00 00 00 00 01 \tcall 1\n+  10:\t85 00 00 00 ff ff ff fe \tcall -2\n+  18:\t85 00 00 00 00 00 00 0a \tcall 10\n+  20:\t85 01 00 00 00 00 00 00 \tcall 0\n+[0-9a-f]+ <foo>:\n+  28:\t85 01 00 00 ff ff ff ff \tcall -1\n+  30:\t85 01 00 00 ff ff ff fe \tcall -2\n+  38:\t85 01 00 00 ff ff ff fd \tcall -3\n\\ No newline at end of file"
    },
    {
      "sha": "daefbd080221f601ca0d911fc980492190f0242c",
      "filename": "gas/testsuite/gas/bpf/call.d",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/call.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/call.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/call.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,18 @@\n+#as: --EL\n+#objdump: -dr\n+#name: eBPF CALL instruction\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+[0-9a-f]+ <.*>:\n+   0:\t85 00 00 00 00 00 00 00 \tcall 0\n+   8:\t85 00 00 00 01 00 00 00 \tcall 1\n+  10:\t85 00 00 00 fe ff ff ff \tcall -2\n+  18:\t85 00 00 00 0a 00 00 00 \tcall 10\n+  20:\t85 10 00 00 00 00 00 00 \tcall 0\n+[0-9a-f]+ <foo>:\n+  28:\t85 10 00 00 ff ff ff ff \tcall -1\n+  30:\t85 10 00 00 fe ff ff ff \tcall -2\n+  38:\t85 10 00 00 fd ff ff ff \tcall -3"
    },
    {
      "sha": "45c8ca5f803900c6c80dbc8054cc70dceb868bdb",
      "filename": "gas/testsuite/gas/bpf/call.s",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/call.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/call.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/call.s?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,11 @@\n+        # eBPF tests for the CALL instruction\n+\n+        .text\n+        call 0\n+        call 1\n+        call -2\n+        call 0xa\n+        call foo\n+foo:    call foo\n+        call foo\n+        call foo"
    },
    {
      "sha": "d3b88c7373a15661e38cae72c67c95f8c32cf604",
      "filename": "gas/testsuite/gas/bpf/exit-be.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/exit-be.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/exit-be.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/exit-be.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,11 @@\n+#as: --EB\n+#source: exit.s\n+#objdump: -dr\n+#name: eBPF EXIT instruction, big endian\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\t95 00 00 00 00 00 00 00 \texit\n\\ No newline at end of file"
    },
    {
      "sha": "87bc91b2d2ee04ef49fa3fa11bba8b26fe3fba9b",
      "filename": "gas/testsuite/gas/bpf/exit.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/exit.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/exit.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/exit.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,10 @@\n+#as: --EL\n+#objdump: -dr\n+#name: eBPF EXIT instruction\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\t95 00 00 00 00 00 00 00 \texit\n\\ No newline at end of file"
    },
    {
      "sha": "5a4c4f19632e52e86fe8fae5a4b560a998cc8f7c",
      "filename": "gas/testsuite/gas/bpf/exit.s",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/exit.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/exit.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/exit.s?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,2 @@\n+        .text\n+        exit"
    },
    {
      "sha": "65632e0813be4ffc367dfb3043fda203fb57da58",
      "filename": "gas/testsuite/gas/bpf/jump-be.d",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/jump-be.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/jump-be.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/jump-be.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,32 @@\n+#as: --EB\n+#source: jump.s\n+#objdump: -dr\n+#name: eBPF JUMP instructions, big endian\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\t05 00 00 03 00 00 00 00 \tja 3\n+   8:\t0f 11 00 00 00 00 00 00 \tadd %r1,%r1\n+  10:\t15 30 00 01 00 00 00 03 \tjeq %r3,3,1\n+  18:\t1d 34 00 00 00 00 00 00 \tjeq %r3,%r4,0\n+  20:\t35 30 ff fd 00 00 00 03 \tjge %r3,3,-3\n+  28:\t3d 34 ff fc 00 00 00 00 \tjge %r3,%r4,-4\n+  30:\ta5 30 00 01 00 00 00 03 \tjlt %r3,3,1\n+  38:\tad 34 00 00 00 00 00 00 \tjlt %r3,%r4,0\n+  40:\tb5 30 00 01 00 00 00 03 \tjle %r3,3,1\n+  48:\tbd 34 00 00 00 00 00 00 \tjle %r3,%r4,0\n+  50:\t45 30 00 01 00 00 00 03 \tjset %r3,3,1\n+  58:\t4d 34 00 00 00 00 00 00 \tjset %r3,%r4,0\n+  60:\t55 30 00 01 00 00 00 03 \tjne %r3,3,1\n+  68:\t5d 34 00 00 00 00 00 00 \tjne %r3,%r4,0\n+  70:\t65 30 00 01 00 00 00 03 \tjsgt %r3,3,1\n+  78:\t6d 34 00 00 00 00 00 00 \tjsgt %r3,%r4,0\n+  80:\t75 30 00 01 00 00 00 03 \tjsge %r3,3,1\n+  88:\t7d 34 00 00 00 00 00 00 \tjsge %r3,%r4,0\n+  90:\tc5 30 00 01 00 00 00 03 \tjslt %r3,3,1\n+  98:\tcd 34 00 00 00 00 00 00 \tjslt %r3,%r4,0\n+  a0:\td5 30 00 01 00 00 00 03 \tjsle %r3,3,1\n+  a8:\tdd 34 00 00 00 00 00 00 \tjsle %r3,%r4,0"
    },
    {
      "sha": "ca600f602ba9fc53a9e0424d9367ead4dfb72534",
      "filename": "gas/testsuite/gas/bpf/jump.d",
      "status": "added",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/jump.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/jump.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/jump.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,31 @@\n+#as: --EL\n+#objdump: -dr\n+#name: eBPF JUMP instructions\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\t05 00 03 00 00 00 00 00 \tja 3\n+   8:\t0f 11 00 00 00 00 00 00 \tadd %r1,%r1\n+  10:\t15 03 01 00 03 00 00 00 \tjeq %r3,3,1\n+  18:\t1d 43 00 00 00 00 00 00 \tjeq %r3,%r4,0\n+  20:\t35 03 fd ff 03 00 00 00 \tjge %r3,3,-3\n+  28:\t3d 43 fc ff 00 00 00 00 \tjge %r3,%r4,-4\n+  30:\ta5 03 01 00 03 00 00 00 \tjlt %r3,3,1\n+  38:\tad 43 00 00 00 00 00 00 \tjlt %r3,%r4,0\n+  40:\tb5 03 01 00 03 00 00 00 \tjle %r3,3,1\n+  48:\tbd 43 00 00 00 00 00 00 \tjle %r3,%r4,0\n+  50:\t45 03 01 00 03 00 00 00 \tjset %r3,3,1\n+  58:\t4d 43 00 00 00 00 00 00 \tjset %r3,%r4,0\n+  60:\t55 03 01 00 03 00 00 00 \tjne %r3,3,1\n+  68:\t5d 43 00 00 00 00 00 00 \tjne %r3,%r4,0\n+  70:\t65 03 01 00 03 00 00 00 \tjsgt %r3,3,1\n+  78:\t6d 43 00 00 00 00 00 00 \tjsgt %r3,%r4,0\n+  80:\t75 03 01 00 03 00 00 00 \tjsge %r3,3,1\n+  88:\t7d 43 00 00 00 00 00 00 \tjsge %r3,%r4,0\n+  90:\tc5 03 01 00 03 00 00 00 \tjslt %r3,3,1\n+  98:\tcd 43 00 00 00 00 00 00 \tjslt %r3,%r4,0\n+  a0:\td5 03 01 00 03 00 00 00 \tjsle %r3,3,1\n+  a8:\tdd 43 00 00 00 00 00 00 \tjsle %r3,%r4,0\n\\ No newline at end of file"
    },
    {
      "sha": "aae4295e1603628df94416aa324de8745f29698d",
      "filename": "gas/testsuite/gas/bpf/jump.s",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/jump.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/jump.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/jump.s?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,25 @@\n+# Tests for the JUMP instructions\n+        .text\n+        ja 2f\n+        add %r1,%r1\n+1:      jeq %r3,3,2f\n+        jeq %r3,%r4,2f\n+2:      jge %r3,3,1b\n+        jge %r3,%r4,1b\n+1:      jlt %r3,3,1f\n+        jlt %r3,%r4,1f\n+1:      jle %r3,3,1f\n+        jle %r3,%r4,1f\n+1:      jset %r3,3,1f\n+        jset %r3,%r4,1f\n+1:      jne %r3,3,1f\n+        jne %r3,%r4,1f\n+1:      jsgt %r3,3,1f\n+        jsgt %r3,%r4,1f\n+1:      jsge %r3,3,1f\n+        jsge %r3,%r4,1f\n+1:      jslt %r3,3,1f\n+        jslt %r3,%r4,1f\n+1:      jsle %r3,3,1f\n+        jsle %r3,%r4,1f\n+1:      "
    },
    {
      "sha": "1d722fa569b81ce68f84a2a0d40cc553339f2c5c",
      "filename": "gas/testsuite/gas/bpf/lddw-be.d",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/lddw-be.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/lddw-be.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/lddw-be.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,18 @@\n+#as: --EB\n+#source: lddw.s\n+#objdump: -dr\n+#name: eBPF LDDW, big-endian\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\t18 30 00 00 00 00 00 01 \tlddw %r3,1\n+   8:\t00 00 00 00 00 00 00 00 \n+  10:\t18 40 00 00 de ad be ef \tlddw %r4,0xdeadbeef\n+  18:\t00 00 00 00 00 00 00 00 \n+  20:\t18 50 00 00 55 66 77 88 \tlddw %r5,0x1122334455667788\n+  28:\t00 00 00 00 11 22 33 44 \n+  30:\t18 60 00 00 ff ff ff fe \tlddw %ctx,-2\n+  38:\t00 00 00 00 ff ff ff ff "
    },
    {
      "sha": "2ab4f73ac524f2ec512ed400b20fa7cc803a1f7c",
      "filename": "gas/testsuite/gas/bpf/lddw.d",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/lddw.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/lddw.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/lddw.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,17 @@\n+#as: --EL\n+#objdump: -dr\n+#name: eBPF LDDW\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\t18 03 00 00 01 00 00 00 \tlddw %r3,1\n+   8:\t00 00 00 00 00 00 00 00 \n+  10:\t18 04 00 00 ef be ad de \tlddw %r4,0xdeadbeef\n+  18:\t00 00 00 00 00 00 00 00 \n+  20:\t18 05 00 00 88 77 66 55 \tlddw %r5,0x1122334455667788\n+  28:\t00 00 00 00 44 33 22 11 \n+  30:\t18 06 00 00 fe ff ff ff \tlddw %ctx,-2\n+  38:\t00 00 00 00 ff ff ff ff "
    },
    {
      "sha": "9e65e4a6074ae67ad3a614f2271c1c78d0fc7a3b",
      "filename": "gas/testsuite/gas/bpf/lddw.s",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/lddw.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/lddw.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/lddw.s?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,6 @@\n+# Tests for the LDDW instruction\n+        .text\n+        lddw\t%r3, 1\n+        lddw\t%r4, 0xdeadbeef\n+        lddw\t%r5, 0x1122334455667788\n+        lddw\t%r6, -2"
    },
    {
      "sha": "70d8806bc51e4996f871b20445ee1d6147870bab",
      "filename": "gas/testsuite/gas/bpf/mem-be.d",
      "status": "added",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/mem-be.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/mem-be.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/mem-be.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,30 @@\n+#as: --EB\n+#source: mem.s\n+#objdump: -dr\n+#name: eBPF MEM instructions, modulus lddw, big endian\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\t20 23 00 00 00 00 be ef \tldabsw %r2,%r3,0xbeef\n+   8:\t28 45 00 00 00 00 be ef \tldabsh %r4,%r5,0xbeef\n+  10:\t30 67 00 00 00 00 be ef \tldabsb %ctx,%r7,0xbeef\n+  18:\t38 89 00 00 00 00 be ef \tldabsdw %r8,%r9,0xbeef\n+  20:\t40 23 00 00 00 00 be ef \tldindw %r2,%r3,0xbeef\n+  28:\t48 45 00 00 00 00 be ef \tldindh %r4,%r5,0xbeef\n+  30:\t50 67 00 00 00 00 be ef \tldindb %ctx,%r7,0xbeef\n+  38:\t58 89 00 00 00 00 be ef \tldinddw %r8,%r9,0xbeef\n+  40:\t61 21 7e ef 00 00 00 00 \tldxw %r2,\\[%r1\\+0x7eef\\]\n+  48:\t69 21 7e ef 00 00 00 00 \tldxh %r2,\\[%r1\\+0x7eef\\]\n+  50:\t71 21 7e ef 00 00 00 00 \tldxb %r2,\\[%r1\\+0x7eef\\]\n+  58:\t79 21 ff fe 00 00 00 00 \tldxdw %r2,\\[%r1\\+-2\\]\n+  60:\t63 12 7e ef 00 00 00 00 \tstxw \\[%r1\\+0x7eef\\],%r2\n+  68:\t6b 12 7e ef 00 00 00 00 \tstxh \\[%r1\\+0x7eef\\],%r2\n+  70:\t73 12 7e ef 00 00 00 00 \tstxb \\[%r1\\+0x7eef\\],%r2\n+  78:\t7b 12 ff fe 00 00 00 00 \tstxdw \\[%r1\\+-2\\],%r2\n+  80:\t72 10 7e ef 11 22 33 44 \tstb \\[%r1\\+0x7eef\\],0x11223344\n+  88:\t6a 10 7e ef 11 22 33 44 \tsth \\[%r1\\+0x7eef\\],0x11223344\n+  90:\t62 10 7e ef 11 22 33 44 \tstw \\[%r1\\+0x7eef\\],0x11223344\n+  98:\t7a 10 ff fe 11 22 33 44 \tstdw \\[%r1\\+-2\\],0x11223344\n\\ No newline at end of file"
    },
    {
      "sha": "53492767fd0cb5fa97bd7b1626ca0afd44f5d5bd",
      "filename": "gas/testsuite/gas/bpf/mem.d",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/mem.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/mem.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/mem.d?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,29 @@\n+#as: --EL\n+#objdump: -dr\n+#name: eBPF MEM instructions, modulus lddw\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+   0:\t20 32 00 00 ef be 00 00 \tldabsw %r2,%r3,0xbeef\n+   8:\t28 54 00 00 ef be 00 00 \tldabsh %r4,%r5,0xbeef\n+  10:\t30 76 00 00 ef be 00 00 \tldabsb %ctx,%r7,0xbeef\n+  18:\t38 98 00 00 ef be 00 00 \tldabsdw %r8,%r9,0xbeef\n+  20:\t40 32 00 00 ef be 00 00 \tldindw %r2,%r3,0xbeef\n+  28:\t48 54 00 00 ef be 00 00 \tldindh %r4,%r5,0xbeef\n+  30:\t50 76 00 00 ef be 00 00 \tldindb %ctx,%r7,0xbeef\n+  38:\t58 98 00 00 ef be 00 00 \tldinddw %r8,%r9,0xbeef\n+  40:\t61 12 ef 7e 00 00 00 00 \tldxw %r2,\\[%r1\\+0x7eef\\]\n+  48:\t69 12 ef 7e 00 00 00 00 \tldxh %r2,\\[%r1\\+0x7eef\\]\n+  50:\t71 12 ef 7e 00 00 00 00 \tldxb %r2,\\[%r1\\+0x7eef\\]\n+  58:\t79 12 fe ff 00 00 00 00 \tldxdw %r2,\\[%r1\\+-2\\]\n+  60:\t63 21 ef 7e 00 00 00 00 \tstxw \\[%r1\\+0x7eef\\],%r2\n+  68:\t6b 21 ef 7e 00 00 00 00 \tstxh \\[%r1\\+0x7eef\\],%r2\n+  70:\t73 21 ef 7e 00 00 00 00 \tstxb \\[%r1\\+0x7eef\\],%r2\n+  78:\t7b 21 fe ff 00 00 00 00 \tstxdw \\[%r1\\+-2\\],%r2\n+  80:\t72 01 ef 7e 44 33 22 11 \tstb \\[%r1\\+0x7eef\\],0x11223344\n+  88:\t6a 01 ef 7e 44 33 22 11 \tsth \\[%r1\\+0x7eef\\],0x11223344\n+  90:\t62 01 ef 7e 44 33 22 11 \tstw \\[%r1\\+0x7eef\\],0x11223344\n+  98:\t7a 01 fe ff 44 33 22 11 \tstdw \\[%r1\\+-2\\],0x11223344"
    },
    {
      "sha": "cc5329c4ca8ce6a3148aa5d57fdd779daad8bbae",
      "filename": "gas/testsuite/gas/bpf/mem.s",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/mem.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8861f5dc2391e0c46dd118370195e7730ec46ca/gas/testsuite/gas/bpf/mem.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/mem.s?ref=f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "patch": "@@ -0,0 +1,24 @@\n+# eBPF tests for MEM instructions, modulus lddw.\n+\n+        .text\n+\n+ \tldabsw %r2, %r3, 0xbeef\n+\tldabsh %r4, %r5, 0xbeef\n+ \tldabsb %r6, %r7, 0xbeef\n+ \tldabsdw %r8, %r9, 0xbeef\n+\tldindw %r2, %r3, 0xbeef\n+ \tldindh %r4, %r5, 0xbeef\n+ \tldindb %r6, %r7, 0xbeef\n+ \tldinddw %r8, %r9, 0xbeef\n+ \tldxw %r2, [%r1+0x7eef]\n+ \tldxh %r2, [%r1+0x7eef]\n+ \tldxb %r2, [%r1+0x7eef]\n+ \tldxdw %r2, [%r1+-2]\n+ \tstxw [%r1+0x7eef], %r2\n+ \tstxh [%r1+0x7eef], %r2\n+ \tstxb [%r1+0x7eef], %r2\n+ \tstxdw [%r1+-2], %r2\n+ \tstb [%r1+0x7eef], 0x11223344\n+ \tsth [%r1+0x7eef], 0x11223344\n+ \tstw [%r1+0x7eef], 0x11223344\n+ \tstdw [%r1+-2], 0x11223344"
    }
  ]
}