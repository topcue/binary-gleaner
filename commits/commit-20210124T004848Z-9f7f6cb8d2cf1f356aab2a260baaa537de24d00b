{
  "sha": "9f7f6cb8d2cf1f356aab2a260baaa537de24d00b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWY3ZjZjYjhkMmNmMWYzNTZhYWIyYTI2MGJhYWE1MzdkZTI0ZDAwYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-01-24T00:48:32Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-01-24T00:48:48Z"
    },
    "message": "Remove call to reset from compile_to_object\n\ncompile_to_object declares 'error_message' and then immediately calls\nreset on it.  It seemed better to change it to use initialization\ninstead; and then I noticed that set_arguments could return a\nunique_xmalloc_ptr<char> itself.\n\n2021-01-23  Tom Tromey  <tom@tromey.com>\n\n\t* compile/compile-internal.h (class compile_instance)\n\t<set_arguments>: Change return type.\n\t* compile/compile.c (compile_to_object): Remove call to reset.\n\t(compile_instance::set_arguments): Change return type.",
    "tree": {
      "sha": "816b55aeabd58ee8cb04a6a9feca901abfe49a7b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/816b55aeabd58ee8cb04a6a9feca901abfe49a7b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9f7f6cb8d2cf1f356aab2a260baaa537de24d00b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f7f6cb8d2cf1f356aab2a260baaa537de24d00b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9f7f6cb8d2cf1f356aab2a260baaa537de24d00b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f7f6cb8d2cf1f356aab2a260baaa537de24d00b/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c99d72de189600f1a8307416f8a8979924ba931b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c99d72de189600f1a8307416f8a8979924ba931b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c99d72de189600f1a8307416f8a8979924ba931b"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 15,
    "deletions": 7
  },
  "files": [
    {
      "sha": "a45957b55a118d02926b9174458f41b4d047052c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f7f6cb8d2cf1f356aab2a260baaa537de24d00b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f7f6cb8d2cf1f356aab2a260baaa537de24d00b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9f7f6cb8d2cf1f356aab2a260baaa537de24d00b",
      "patch": "@@ -1,3 +1,10 @@\n+2021-01-23  Tom Tromey  <tom@tromey.com>\n+\n+\t* compile/compile-internal.h (class compile_instance)\n+\t<set_arguments>: Change return type.\n+\t* compile/compile.c (compile_to_object): Remove call to reset.\n+\t(compile_instance::set_arguments): Change return type.\n+\n 2021-01-23  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* gdbtypes.c (copy_type_recursive): Use get_type_arch."
    },
    {
      "sha": "49ddbd42c83dcc6a80645c4a412b28d588779ec6",
      "filename": "gdb/compile/compile-internal.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f7f6cb8d2cf1f356aab2a260baaa537de24d00b/gdb/compile/compile-internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f7f6cb8d2cf1f356aab2a260baaa537de24d00b/gdb/compile/compile-internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-internal.h?ref=9f7f6cb8d2cf1f356aab2a260baaa537de24d00b",
      "patch": "@@ -96,7 +96,8 @@ class compile_instance\n \n   /* Set compilation arguments.  REGEXP is only used for protocol\n      version GCC_FE_VERSION_0.  */\n-  char *set_arguments (int argc, char **argv, const char *regexp = NULL);\n+  gdb::unique_xmalloc_ptr<char> set_arguments (int argc, char **argv,\n+\t\t\t\t\t       const char *regexp = NULL);\n \n   /* Set the filename of the program to compile.  Nop for GCC_FE_VERSION_0.  */\n   void set_source_file (const char *filename);"
    },
    {
      "sha": "4e72adc943deb237de53a94d1be4fdd26b608170",
      "filename": "gdb/compile/compile.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f7f6cb8d2cf1f356aab2a260baaa537de24d00b/gdb/compile/compile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f7f6cb8d2cf1f356aab2a260baaa537de24d00b/gdb/compile/compile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile.c?ref=9f7f6cb8d2cf1f356aab2a260baaa537de24d00b",
      "patch": "@@ -714,9 +714,8 @@ compile_to_object (struct command_line *cmd, const char *cmd_string,\n   int argc = argv_holder.count ();\n   char **argv = argv_holder.get ();\n \n-  gdb::unique_xmalloc_ptr<char> error_message;\n-  error_message.reset (compiler->set_arguments (argc, argv,\n-\t\t\t\t\t\ttriplet_rx.c_str ()));\n+  gdb::unique_xmalloc_ptr<char> error_message\n+    = compiler->set_arguments (argc, argv, triplet_rx.c_str ());\n \n   if (error_message != NULL)\n     error (\"%s\", error_message.get ());\n@@ -882,13 +881,14 @@ compile_instance::set_triplet_regexp (const char *regexp)\n \n /* See compile-internal.h.  */\n \n-char *\n+gdb::unique_xmalloc_ptr<char>\n compile_instance::set_arguments (int argc, char **argv, const char *regexp)\n {\n   if (version () >= GCC_FE_VERSION_1)\n-    return FORWARD (set_arguments, argc, argv);\n+    return gdb::unique_xmalloc_ptr<char> (FORWARD (set_arguments, argc, argv));\n   else\n-    return FORWARD (set_arguments_v0, regexp, argc, argv);\n+    return gdb::unique_xmalloc_ptr<char> (FORWARD (set_arguments_v0, regexp,\n+\t\t\t\t\t\t   argc, argv));\n }\n \n /* See compile-internal.h.  */"
    }
  ]
}