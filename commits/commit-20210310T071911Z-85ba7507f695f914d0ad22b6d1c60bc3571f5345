{
  "sha": "85ba7507f695f914d0ad22b6d1c60bc3571f5345",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODViYTc1MDdmNjk1ZjkxNGQwYWQyMmI2ZDFjNjBiYzM1NzFmNTM0NQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-10T07:19:11Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-10T07:19:11Z"
    },
    "message": "x86: reuse further VEX entries for EVEX\n\nWhen the VEX.L=1 decode matches that of both EVEX.L'L=1 and EVEX.L'L=2\n(typically when all three are invalid) the (smaller) VEX table entry can\nbe reused by EVEX, instead of duplicating data. (Note that XM and XMM as\nwell as EXxmm_md and EXd are equivalent at least for the purposes here.)",
    "tree": {
      "sha": "9de6b0b4de79c378ee0d1dafd1870532d806e9db",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9de6b0b4de79c378ee0d1dafd1870532d806e9db"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/85ba7507f695f914d0ad22b6d1c60bc3571f5345",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/85ba7507f695f914d0ad22b6d1c60bc3571f5345",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/85ba7507f695f914d0ad22b6d1c60bc3571f5345",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/85ba7507f695f914d0ad22b6d1c60bc3571f5345/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "066f82b96a4902b9f4f76dfc8d24f8d73ceeef0f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/066f82b96a4902b9f4f76dfc8d24f8d73ceeef0f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/066f82b96a4902b9f4f76dfc8d24f8d73ceeef0f"
    }
  ],
  "stats": {
    "total": 144,
    "additions": 46,
    "deletions": 98
  },
  "files": [
    {
      "sha": "0b1992a23fd9f0d703e2815ec76922d3e6f6d365",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/85ba7507f695f914d0ad22b6d1c60bc3571f5345/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/85ba7507f695f914d0ad22b6d1c60bc3571f5345/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=85ba7507f695f914d0ad22b6d1c60bc3571f5345",
      "patch": "@@ -1,3 +1,22 @@\n+2021-03-10  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* opcodes/i386-dis.c (EVEX_LEN_0F6E, EVEX_LEN_0F7E_P_1,\n+\tEVEX_LEN_0F7E_P_2, EVEX_LEN_0FC4, EVEX_LEN_0FC5, EVEX_LEN_0FD6,\n+\tEVEX_LEN_0F3816, EVEX_LEN_0F3A14, EVEX_LEN_0F3A15,\n+\tEVEX_LEN_0F3A16, EVEX_LEN_0F3A17, EVEX_LEN_0F3A20,\n+\tEVEX_LEN_0F3A21_W_0, EVEX_LEN_0F3A22, EVEX_W_0FD6_L_0): Delete.\n+\t(EVEX_LEN_0F3816, EVEX_W_0FD6): New.\n+\t(get_valid_dis386): Also handle 512-bit vector length when\n+\tvectoring into vex_len_table[].\n+\t* i386-dis-evex.h (evex_table): Adjust opcode 0F6E, 0FC4, 0FC5,\n+\t0FD6, 0F3A14, 0F3A15, 0F3A16, 0F3A17, 0F3A20, and 0F3A22\n+\tentries.\n+\t* i386-dis-evex-len.h: Delete opcode 0F6E, 0FC4, 0FC5, 0FD6,\n+\t0F3A14, 0F3A15, 0F3A16, 0F3A17, 0F3A20, and 0F3A22 entries.\n+\t* i386-dis-evex-prefix.h: Adjust 0F7E entry.\n+\t* i386-dis-evex-w.h: Adjust 0F7E, 0F7F, 0FD6, and 0F3A21\n+\tentries.\n+\n 2021-03-10  Jan Beulich  <jbeulich@suse.com>\n \n \t* opcodes/i386-dis.c (EVEX_LEN_0F3A00_W_1, EVEX_LEN_0F3A01_W_1):"
    },
    {
      "sha": "46f6eeb65bd647c19ffc4101dc2c06043aac942c",
      "filename": "opcodes/i386-dis-evex-len.h",
      "status": "modified",
      "additions": 0,
      "deletions": 65,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/85ba7507f695f914d0ad22b6d1c60bc3571f5345/opcodes/i386-dis-evex-len.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/85ba7507f695f914d0ad22b6d1c60bc3571f5345/opcodes/i386-dis-evex-len.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-len.h?ref=85ba7507f695f914d0ad22b6d1c60bc3571f5345",
      "patch": "@@ -1,34 +1,4 @@\n static const struct dis386 evex_len_table[][3] = {\n-  /* EVEX_LEN_0F6E */\n-  {\n-    { \"vmovK\",\t{ XMScalar, Edq }, PREFIX_DATA },\n-  },\n-\n-  /* EVEX_LEN_0F7E_P_1 */\n-  {\n-    { VEX_W_TABLE (EVEX_W_0F7E_P_1) },\n-  },\n-\n-  /* EVEX_LEN_0F7E_P_2 */\n-  {\n-    { \"vmovK\",\t{ Edq, XMScalar }, 0 },\n-  },\n-\n-  /* EVEX_LEN_0FC4 */\n-  {\n-    { \"vpinsrw\",\t{ XM, Vex, Edqw, Ib }, PREFIX_DATA },\n-  },\n-\n-  /* EVEX_LEN_0FC5 */\n-  {\n-    { \"vpextrw\",\t{ Gdq, XS, Ib }, PREFIX_DATA },\n-  },\n-\n-  /* EVEX_LEN_0FD6 */\n-  {\n-    { VEX_W_TABLE (EVEX_W_0FD6_L_0) },\n-  },\n-\n   /* EVEX_LEN_0F3816 */\n   {\n     { Bad_Opcode },\n@@ -106,26 +76,6 @@ static const struct dis386 evex_len_table[][3] = {\n     { VEX_W_TABLE (VEX_W_0F3A01_L_1) },\n   },\n \n-  /* EVEX_LEN_0F3A14 */\n-  {\n-    { \"vpextrb\",\t{ Edqb, XM, Ib }, PREFIX_DATA },\n-  },\n-\n-  /* EVEX_LEN_0F3A15 */\n-  {\n-    { \"vpextrw\",\t{ Edqw, XM, Ib }, PREFIX_DATA },\n-  },\n-\n-  /* EVEX_LEN_0F3A16 */\n-  {\n-    { \"vpextrK\",\t{ Edq, XM, Ib }, PREFIX_DATA },\n-  },\n-\n-  /* EVEX_LEN_0F3A17 */\n-  {\n-    { \"vextractps\",\t{ Edqd, XMM, Ib }, PREFIX_DATA },\n-  },\n-\n   /* EVEX_LEN_0F3A18 */\n   {\n     { Bad_Opcode },\n@@ -154,21 +104,6 @@ static const struct dis386 evex_len_table[][3] = {\n     { VEX_W_TABLE (EVEX_W_0F3A1B_L_2) },\n   },\n \n-  /* EVEX_LEN_0F3A20 */\n-  {\n-    { \"vpinsrb\",\t{ XM, Vex, Edqb, Ib }, PREFIX_DATA },\n-  },\n-\n-  /* EVEX_LEN_0F3A21_W_0 */\n-  {\n-    { \"vinsertps\",\t{ XMM, Vex, EXxmm_md, Ib }, PREFIX_DATA },\n-  },\n-\n-  /* EVEX_LEN_0F3A22 */\n-  {\n-    { \"vpinsrK\",\t{ XM, Vex, Edq, Ib }, PREFIX_DATA },\n-  },\n-\n   /* EVEX_LEN_0F3A23 */\n   {\n     { Bad_Opcode },"
    },
    {
      "sha": "50a11f417adb057163532f83f7958d945b5557f6",
      "filename": "opcodes/i386-dis-evex-prefix.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/85ba7507f695f914d0ad22b6d1c60bc3571f5345/opcodes/i386-dis-evex-prefix.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/85ba7507f695f914d0ad22b6d1c60bc3571f5345/opcodes/i386-dis-evex-prefix.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-prefix.h?ref=85ba7507f695f914d0ad22b6d1c60bc3571f5345",
      "patch": "@@ -139,8 +139,8 @@\n   /* PREFIX_EVEX_0F7E */\n   {\n     { Bad_Opcode },\n-    { EVEX_LEN_TABLE (EVEX_LEN_0F7E_P_1) },\n-    { EVEX_LEN_TABLE (EVEX_LEN_0F7E_P_2) },\n+    { VEX_W_TABLE (EVEX_W_0F7E_P_1) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F7E_P_2) },\n   },\n   /* PREFIX_EVEX_0F7F */\n   {"
    },
    {
      "sha": "ff89007fb8b27745b53a4d156731052633356157",
      "filename": "opcodes/i386-dis-evex-w.h",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/85ba7507f695f914d0ad22b6d1c60bc3571f5345/opcodes/i386-dis-evex-w.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/85ba7507f695f914d0ad22b6d1c60bc3571f5345/opcodes/i386-dis-evex-w.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-w.h?ref=85ba7507f695f914d0ad22b6d1c60bc3571f5345",
      "patch": "@@ -251,7 +251,7 @@\n   /* EVEX_W_0F7E_P_1 */\n   {\n     { Bad_Opcode },\n-    { \"vmovq\",\t{ XMScalar, EXxmm_mq }, 0 },\n+    { VEX_LEN_TABLE (VEX_LEN_0F7E_P_1) },\n   },\n   /* EVEX_W_0F7F_P_1 */\n   {\n@@ -291,10 +291,10 @@\n     { Bad_Opcode },\n     { \"vpaddq\",\t\t{ XM, Vex, EXx }, PREFIX_DATA },\n   },\n-  /* EVEX_W_0FD6_L_0 */\n+  /* EVEX_W_0FD6 */\n   {\n     { Bad_Opcode },\n-    { \"vmovq\",\t{ EXqS, XMScalar }, PREFIX_DATA },\n+    { VEX_LEN_TABLE (VEX_LEN_0FD6) },\n   },\n   /* EVEX_W_0FE6_P_1 */\n   {\n@@ -625,7 +625,7 @@\n   },\n   /* EVEX_W_0F3A21 */\n   {\n-    { EVEX_LEN_TABLE (EVEX_LEN_0F3A21_W_0) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F3A21) },\n   },\n   /* EVEX_W_0F3A23_L_n */\n   {"
    },
    {
      "sha": "eb88e5f43000c2aebb0177e8cb6ff285ddf755eb",
      "filename": "opcodes/i386-dis-evex.h",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/85ba7507f695f914d0ad22b6d1c60bc3571f5345/opcodes/i386-dis-evex.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/85ba7507f695f914d0ad22b6d1c60bc3571f5345/opcodes/i386-dis-evex.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex.h?ref=85ba7507f695f914d0ad22b6d1c60bc3571f5345",
      "patch": "@@ -125,7 +125,7 @@ static const struct dis386 evex_table[][256] = {\n     { VEX_W_TABLE (EVEX_W_0F6B) },\n     { VEX_W_TABLE (EVEX_W_0F6C) },\n     { VEX_W_TABLE (EVEX_W_0F6D) },\n-    { EVEX_LEN_TABLE (EVEX_LEN_0F6E) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F6E) },\n     { PREFIX_TABLE (PREFIX_EVEX_0F6F) },\n     /* 70 */\n     { PREFIX_TABLE (PREFIX_EVEX_0F70) },\n@@ -222,8 +222,8 @@ static const struct dis386 evex_table[][256] = {\n     { Bad_Opcode },\n     { PREFIX_TABLE (PREFIX_EVEX_0FC2) },\n     { Bad_Opcode },\n-    { EVEX_LEN_TABLE (EVEX_LEN_0FC4) },\n-    { EVEX_LEN_TABLE (EVEX_LEN_0FC5) },\n+    { VEX_LEN_TABLE (VEX_LEN_0FC4) },\n+    { VEX_LEN_TABLE (VEX_LEN_0FC5) },\n     { \"vshufpX\",\t{ XM, Vex, EXx, Ib }, PREFIX_OPCODE },\n     { Bad_Opcode },\n     /* C8 */\n@@ -242,7 +242,7 @@ static const struct dis386 evex_table[][256] = {\n     { VEX_W_TABLE (EVEX_W_0FD3) },\n     { VEX_W_TABLE (EVEX_W_0FD4) },\n     { \"vpmullw\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n-    { EVEX_LEN_TABLE (EVEX_LEN_0FD6) },\n+    { VEX_W_TABLE (EVEX_W_0FD6) },\n     { Bad_Opcode },\n     /* D8 */\n     { \"vpsubusb\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n@@ -606,10 +606,10 @@ static const struct dis386 evex_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { EVEX_LEN_TABLE (EVEX_LEN_0F3A14) },\n-    { EVEX_LEN_TABLE (EVEX_LEN_0F3A15) },\n-    { EVEX_LEN_TABLE (EVEX_LEN_0F3A16) },\n-    { EVEX_LEN_TABLE (EVEX_LEN_0F3A17) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F3A14) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F3A15) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F3A16) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F3A17) },\n     /* 18 */\n     { EVEX_LEN_TABLE (EVEX_LEN_0F3A18) },\n     { EVEX_LEN_TABLE (EVEX_LEN_0F3A19) },\n@@ -620,9 +620,9 @@ static const struct dis386 evex_table[][256] = {\n     { \"vpcmpu%DQ\",\t{ XMask, Vex, EXx, VPCMP }, PREFIX_DATA },\n     { \"vpcmp%DQ\",\t{ XMask, Vex, EXx, VPCMP }, PREFIX_DATA },\n     /* 20 */\n-    { EVEX_LEN_TABLE (EVEX_LEN_0F3A20) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F3A20) },\n     { VEX_W_TABLE (EVEX_W_0F3A21) },\n-    { EVEX_LEN_TABLE (EVEX_LEN_0F3A22) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F3A22) },\n     { EVEX_LEN_TABLE (EVEX_LEN_0F3A23) },\n     { Bad_Opcode },\n     { \"vpternlog%DQ\",\t{ XM, Vex, EXx, Ib }, PREFIX_DATA },"
    },
    {
      "sha": "65e8d3411b0883647ad38a5fb40c407b5326c2df",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 11,
      "deletions": 17,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/85ba7507f695f914d0ad22b6d1c60bc3571f5345/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/85ba7507f695f914d0ad22b6d1c60bc3571f5345/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=85ba7507f695f914d0ad22b6d1c60bc3571f5345",
      "patch": "@@ -1334,13 +1334,7 @@ enum\n \n enum\n {\n-  EVEX_LEN_0F6E = 0,\n-  EVEX_LEN_0F7E_P_1,\n-  EVEX_LEN_0F7E_P_2,\n-  EVEX_LEN_0FC4,\n-  EVEX_LEN_0FC5,\n-  EVEX_LEN_0FD6,\n-  EVEX_LEN_0F3816,\n+  EVEX_LEN_0F3816 = 0,\n   EVEX_LEN_0F3819,\n   EVEX_LEN_0F381A_M_0,\n   EVEX_LEN_0F381B_M_0,\n@@ -1351,17 +1345,10 @@ enum\n   EVEX_LEN_0F38C7_M_0,\n   EVEX_LEN_0F3A00,\n   EVEX_LEN_0F3A01,\n-  EVEX_LEN_0F3A14,\n-  EVEX_LEN_0F3A15,\n-  EVEX_LEN_0F3A16,\n-  EVEX_LEN_0F3A17,\n   EVEX_LEN_0F3A18,\n   EVEX_LEN_0F3A19,\n   EVEX_LEN_0F3A1A,\n   EVEX_LEN_0F3A1B,\n-  EVEX_LEN_0F3A20,\n-  EVEX_LEN_0F3A21_W_0,\n-  EVEX_LEN_0F3A22,\n   EVEX_LEN_0F3A23,\n   EVEX_LEN_0F3A38,\n   EVEX_LEN_0F3A39,\n@@ -1549,7 +1536,7 @@ enum\n   EVEX_W_0FD2,\n   EVEX_W_0FD3,\n   EVEX_W_0FD4,\n-  EVEX_W_0FD6_L_0,\n+  EVEX_W_0FD6,\n   EVEX_W_0FE6_P_1,\n   EVEX_W_0FE6_P_2,\n   EVEX_W_0FE6_P_3,\n@@ -9063,9 +9050,16 @@ get_valid_dis386 (const struct dis386 *dp, disassemble_info *info)\n \tcase 128:\n \t  vindex = 0;\n \t  break;\n+\tcase 512:\n+\t  /* This allows re-using in particular table entries where only\n+\t     128-bit operand size (VEX.L=0 / EVEX.L'L=0) are valid.  */\n+\t  if (vex.evex)\n+\t    {\n \tcase 256:\n-\t  vindex = 1;\n-\t  break;\n+\t      vindex = 1;\n+\t      break;\n+\t    }\n+\t/* Fall through.  */\n \tdefault:\n \t  abort ();\n \t  break;"
    }
  ]
}