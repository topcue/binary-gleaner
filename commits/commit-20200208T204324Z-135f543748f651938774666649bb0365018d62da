{
  "sha": "135f543748f651938774666649bb0365018d62da",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTM1ZjU0Mzc0OGY2NTE5Mzg3NzQ2NjY2NDliYjAzNjUwMThkNjJkYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:40:54Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:43:24Z"
    },
    "message": "Simplify \"want_partial_unit\" handling\n\nThis changes the \"want_partial_unit\" parameters to have type bool, and\nalso removes the parameter from process_psymtab_comp_unit_reader.\nThis latter change seemed like an improvement, because it avoids a\npointless function call in the case where we are not planning to read\na partial unit.\n\n2020-02-08  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (process_psymtab_comp_unit_reader): Remove\n\t\"want_partial_unit\" parameter.\n\t(process_psymtab_comp_unit): Change want_partial_unit to bool.\n\tInline check for DW_TAG_partial_unit.\n\t(dwarf2_build_psymtabs_hard, scan_partial_symbols): Update.\n\nChange-Id: I99e647f0c4faa3346e90a6e7bacc82af57eccff1",
    "tree": {
      "sha": "578df1b5141f7b987be1ae8ae6c52dead59690df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/578df1b5141f7b987be1ae8ae6c52dead59690df"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/135f543748f651938774666649bb0365018d62da",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/135f543748f651938774666649bb0365018d62da",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/135f543748f651938774666649bb0365018d62da",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/135f543748f651938774666649bb0365018d62da/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9f66ff1c8cd8f5512d49813abe48ddb9141474bf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f66ff1c8cd8f5512d49813abe48ddb9141474bf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9f66ff1c8cd8f5512d49813abe48ddb9141474bf"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 13,
    "deletions": 9
  },
  "files": [
    {
      "sha": "90ec52c65bf7c0493ed986179a59c39516195965",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/135f543748f651938774666649bb0365018d62da/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/135f543748f651938774666649bb0365018d62da/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=135f543748f651938774666649bb0365018d62da",
      "patch": "@@ -1,3 +1,11 @@\n+2020-02-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (process_psymtab_comp_unit_reader): Remove\n+\t\"want_partial_unit\" parameter.\n+\t(process_psymtab_comp_unit): Change want_partial_unit to bool.\n+\tInline check for DW_TAG_partial_unit.\n+\t(dwarf2_build_psymtabs_hard, scan_partial_symbols): Update.\n+\n 2020-02-08  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.c (read_n_bytes, read_direct_string): Move to"
    },
    {
      "sha": "4a9f16047c214f3bcf31784e60b0d9585cf0a926",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 5,
      "deletions": 9,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/135f543748f651938774666649bb0365018d62da/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/135f543748f651938774666649bb0365018d62da/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=135f543748f651938774666649bb0365018d62da",
      "patch": "@@ -7240,7 +7240,6 @@ static void\n process_psymtab_comp_unit_reader (const struct die_reader_specs *reader,\n \t\t\t\t  const gdb_byte *info_ptr,\n \t\t\t\t  struct die_info *comp_unit_die,\n-\t\t\t\t  int want_partial_unit,\n \t\t\t\t  enum language pretend_language)\n {\n   struct dwarf2_cu *cu = reader->cu;\n@@ -7253,9 +7252,6 @@ process_psymtab_comp_unit_reader (const struct die_reader_specs *reader,\n   enum pc_bounds_kind cu_bounds_kind;\n   const char *filename;\n \n-  if (comp_unit_die->tag == DW_TAG_partial_unit && !want_partial_unit)\n-    return;\n-\n   gdb_assert (! per_cu->is_debug_types);\n \n   prepare_one_comp_unit (cu, comp_unit_die, pretend_language);\n@@ -7369,7 +7365,7 @@ process_psymtab_comp_unit_reader (const struct die_reader_specs *reader,\n \n static void\n process_psymtab_comp_unit (struct dwarf2_per_cu_data *this_cu,\n-\t\t\t   int want_partial_unit,\n+\t\t\t   bool want_partial_unit,\n \t\t\t   enum language pretend_language)\n {\n   /* If this compilation unit was already read in, free the\n@@ -7389,10 +7385,10 @@ process_psymtab_comp_unit (struct dwarf2_per_cu_data *this_cu,\n   else if (this_cu->is_debug_types)\n     build_type_psymtabs_reader (&reader, reader.info_ptr,\n \t\t\t\treader.comp_unit_die);\n-  else\n+  else if (want_partial_unit\n+\t   || reader.comp_unit_die->tag != DW_TAG_partial_unit)\n     process_psymtab_comp_unit_reader (&reader, reader.info_ptr,\n \t\t\t\t      reader.comp_unit_die,\n-\t\t\t\t      want_partial_unit,\n \t\t\t\t      pretend_language);\n \n   /* Age out any secondary CUs.  */\n@@ -7752,7 +7748,7 @@ dwarf2_build_psymtabs_hard (struct dwarf2_per_objfile *dwarf2_per_objfile)\n \t\t\t   addrmap_create_mutable (&temp_obstack));\n \n   for (dwarf2_per_cu_data *per_cu : dwarf2_per_objfile->all_comp_units)\n-    process_psymtab_comp_unit (per_cu, 0, language_minimal);\n+    process_psymtab_comp_unit (per_cu, false, language_minimal);\n \n   /* This has to wait until we read the CUs, we need the list of DWOs.  */\n   process_skeletonless_type_units (dwarf2_per_objfile);\n@@ -7969,7 +7965,7 @@ scan_partial_symbols (struct partial_die_info *first_die, CORE_ADDR *lowpc,\n \n \t\t/* Go read the partial unit, if needed.  */\n \t\tif (per_cu->v.psymtab == NULL)\n-\t\t  process_psymtab_comp_unit (per_cu, 1, cu->language);\n+\t\t  process_psymtab_comp_unit (per_cu, true, cu->language);\n \n \t\tcu->per_cu->imported_symtabs_push (per_cu);\n \t      }"
    }
  ]
}