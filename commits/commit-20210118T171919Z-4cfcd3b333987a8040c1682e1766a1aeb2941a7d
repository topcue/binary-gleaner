{
  "sha": "4cfcd3b333987a8040c1682e1766a1aeb2941a7d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGNmY2QzYjMzMzk4N2E4MDQwYzE2ODJlMTc2NmExYWViMjk0MWE3ZA==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-17T09:52:42Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-18T17:19:19Z"
    },
    "message": "sim: common: modernize gennltvals.sh\n\nIt's not 1996 anymore, so stop writing shell code like it is, and\nrewrite it with modern POSIX shell standards.  This makes it much\nmore user friendly.\n\nThen regenerate the file with latest newlib sources to verify.",
    "tree": {
      "sha": "710c43cc804f73ebe9e42b64e82604bd5d72530f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/710c43cc804f73ebe9e42b64e82604bd5d72530f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4cfcd3b333987a8040c1682e1766a1aeb2941a7d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4cfcd3b333987a8040c1682e1766a1aeb2941a7d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4cfcd3b333987a8040c1682e1766a1aeb2941a7d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4cfcd3b333987a8040c1682e1766a1aeb2941a7d/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "02baa133856849a03aabb10c5fcb824f7b3996e1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/02baa133856849a03aabb10c5fcb824f7b3996e1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/02baa133856849a03aabb10c5fcb824f7b3996e1"
    }
  ],
  "stats": {
    "total": 411,
    "additions": 244,
    "deletions": 167
  },
  "files": [
    {
      "sha": "fd368d6d67f60a47f47f2081e07d287eac9b4aee",
      "filename": "sim/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4cfcd3b333987a8040c1682e1766a1aeb2941a7d/sim/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4cfcd3b333987a8040c1682e1766a1aeb2941a7d/sim/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ChangeLog?ref=4cfcd3b333987a8040c1682e1766a1aeb2941a7d",
      "patch": "@@ -1,3 +1,10 @@\n+2021-01-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (headers): Change args to gennltvals.sh.\n+\t* gennltvals.sh: Rewrite from scratch.\n+\t* gentvals.sh: Delete.\n+\t* nltvals.def: Regen.\n+\n 2021-01-15  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac: Delete AC_CONFIG_SUBDIRS(testsuite) call."
    },
    {
      "sha": "33cd788737cbfa7aa3be3499c094feef7a2a33f3",
      "filename": "sim/common/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4cfcd3b333987a8040c1682e1766a1aeb2941a7d/sim/common/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4cfcd3b333987a8040c1682e1766a1aeb2941a7d/sim/common/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/Makefile.in?ref=4cfcd3b333987a8040c1682e1766a1aeb2941a7d",
      "patch": "@@ -82,7 +82,7 @@ headers:\n \trootme=`pwd` ; \\\n \tcd $(srcdir) ; \\\n \trm -f nltvals.new ; \\\n-\t$(SHELL) $(abs_srcdir)/gennltvals.sh $(SHELL) $(srcroot) \"$(CPP_FOR_TARGET)\" > nltvals.new ; \\\n+\t$(SHELL) $(abs_srcdir)/gennltvals.sh --cpp \"$(CPP_FOR_TARGET)\" --srcroot $(srcroot) --output nltvals.new ; \\\n \t$(SHELL) $(srcroot)/move-if-change nltvals.new nltvals.def\n \n .c.o:"
    },
    {
      "sha": "005fa5b2368cca3c44652bca30de8e1bcb77872f",
      "filename": "sim/common/gennltvals.sh",
      "status": "modified",
      "additions": 229,
      "deletions": 92,
      "changes": 321,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4cfcd3b333987a8040c1682e1766a1aeb2941a7d/sim/common/gennltvals.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4cfcd3b333987a8040c1682e1766a1aeb2941a7d/sim/common/gennltvals.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/gennltvals.sh?ref=4cfcd3b333987a8040c1682e1766a1aeb2941a7d",
      "patch": "@@ -1,101 +1,238 @@\n #! /bin/sh\n-# Generate nltvals.def, a file that describes various newlib/libgloss\n-# target values used by the host/target interface.\n+# Copyright (C) 1996-2021 Free Software Foundation, Inc.\n #\n-# Syntax: /bin/sh gennltvals.sh shell srcroot cpp\n-\n-shell=$1\n-srcroot=$2\n-cpp=$3\n-\n-srccom=$srcroot/sim/common\n-if [ -d \"${srcroot}/newlib\" ]; then\n-  # If newlib is manually in the same source tree, use it.\n-  newlibroot=${srcroot}\n-else\n-  # Else assume it's alongside the gdb/binutils repo.\n-  newlibroot=${srcroot}/../newlib\n-fi\n-\n-echo '/* Newlib/libgloss macro values needed by remote target support.  */'\n-echo '/* This file is machine generated by gennltvals.sh.  */'\n-\n-$shell ${srccom}/gentvals.sh \"\" errno ${newlibroot}/newlib/libc/include \\\n-\t\"errno.h sys/errno.h\" 'E[[:upper:][:digit:]]*' \"${cpp}\"\n-\n-$shell ${srccom}/gentvals.sh \"\" signal ${newlibroot}/newlib/libc/include \\\n-\t\"signal.h sys/signal.h\" 'SIG[[:upper:][:digit:]]*' \"${cpp}\"\n-\n-$shell ${srccom}/gentvals.sh \"\" open ${newlibroot}/newlib/libc/include \\\n-\t\"fcntl.h sys/fcntl.h sys/_default_fcntl.h\" 'O_[[:upper:][:digit:]]*' \"${cpp}\"\n+# This file is part of the GNU simulators.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Display the tool usage and exit.\n+usage() {\n+  cat <<EOF\n+Usage: $0 [path to newlib source tree]\n+\n+Generate nltvals.def, a file that describes various newlib/libgloss target\n+values used by the host/target interface.  This needs to be rerun whenever\n+the newlib source changes.  Developers manually run it.\n+\n+If the path to newlib is not specified, it will be searched for in:\n+- the root of this source tree\n+- alongside this source tree\n+\n+Options:\n+  -o, --output <file>   Write to the specified file instead of stdout.\n+  --cpp <cpp>           The preprocessor to use.\n+  --srcroot <dir>       The root of this source tree.\n+  -h, --help            This text you're reading!\n+EOF\n+  if [ $# -gt 0 ]; then\n+    error \"$*\"\n+  fi\n+  exit 0\n+}\n+\n+# Show an error message and exit.\n+error() {\n+  echo \"$0: error: $*\" >&2\n+  exit 1\n+}\n+\n+ARG_CPP=\"cpp\"\n+ARG_SRCROOT=\"\"\n+ARG_NEWLIB=\"\"\n+ARG_OUTPUT=\"\"\n+\n+# Emit the header for this generated def file.\n+gen_header() {\n+  cat <<EOF\n+/* Newlib/libgloss macro values needed by remote target support.  */\n+/* This file is machine generated by gennltvals.sh.  */\n+EOF\n+}\n+\n+# Extract constants from the specified files using a regular expression and the\n+# preprocessor.\n+gentvals() {\n+  target=$1\n+  type=$2\n+  dir=$3\n+  # FIXME: Would be nice to process #include's in these files.\n+  files=$4\n+  pattern=$5\n+\n+  # Require all files exist in order to regenerate properly.\n+  for f in ${files}; do\n+    if [ ! -f \"${dir}/${f}\" ]; then\n+      error \"file does not exist: ${dir}/${f}\"\n+    fi\n+  done\n+\n+  if [ -z \"${target}\" ]; then\n+    echo \"#ifdef ${type}_defs\"\n+  else\n+    echo \"#ifdef NL_TARGET_${target}\"\n+    echo \"#ifdef ${type}_defs\"\n+  fi\n+\n+  printf \"/* from %s */\\n\" ${files}\n+\n+  if [ -z \"${target}\" ]; then\n+    echo \"/* begin ${type} target macros */\"\n+  else\n+    echo \"/* begin ${target} ${type} target macros */\"\n+  fi\n+\n+  # Extract all the symbols.\n+  (\n+  printf '#include <%s>\\n' ${files}\n+  for f in ${files}; do\n+    sed -E -n -e \"/^# *define[[:space:]]${pattern}/{\\\n+        s|# *define[[:space:]](${pattern})[[:space:]]*([^[:space:]][^[:space:]]*).*$|\\1|; \\\n+        p}\" \\\n+      \"${dir}/${f}\"\n+  done |\n+  sort -u |\n+  while read -r sym; do\n+    echo \"#ifdef ${sym}\"\n+    echo \"DEFVAL { \\\"${sym}\\\", ${sym} },\"\n+    echo \"#endif\"\n+  done\n+  ) |\n+  ${ARG_CPP} -E -I\"${dir}\" - |\n+  sed -E -n -e '/^DEFVAL/{s/DEFVAL//; s/[[:space:]]+/ /; p}'\n+\n+  if [ -z \"${target}\" ]; then\n+    echo \"/* end ${type} target macros */\"\n+    echo \"#endif\"\n+  else\n+    echo \"/* end ${target} ${type} target macros */\"\n+    echo \"#endif\"\n+    echo \"#endif\"\n+  fi\n+}\n+\n+# Generate the common C library constants.  No arch should override these.\n+gen_common() {\n+  gentvals \"\" errno ${ARG_NEWLIB}/newlib/libc/include \\\n+    \"errno.h sys/errno.h\" 'E[[:upper:][:digit:]]*'\n+\n+  gentvals \"\" signal ${ARG_NEWLIB}/newlib/libc/include \\\n+    \"signal.h sys/signal.h\" 'SIG[[:upper:][:digit:]]*'\n+\n+  gentvals \"\" open ${ARG_NEWLIB}/newlib/libc/include \\\n+    \"fcntl.h sys/fcntl.h sys/_default_fcntl.h\" 'O_[[:upper:][:digit:]]*'\n+}\n \n # Unfortunately, each newlib/libgloss port has seen fit to define their own\n # syscall.h file.  This means that system call numbers can vary for each port.\n # Support for all this crud is kept here, rather than trying to get too fancy.\n # If you want to try to improve this, please do, but don't break anything.\n # Note that there is a standard syscall.h file (libgloss/syscall.h) now which\n # hopefully more targets can use.\n-\n-dir=libgloss target=bfin\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=newlib/libc/sys/d10v/sys target=d10v\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-# OBSOLETE dir=libgloss target=d30v\n-# OBSOLETE $shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-# OBSOLETE \t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss/cr16/sys target=cr16\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss target=fr30\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss target=frv\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss/i960 target=i960\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss target=m32r\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss/mcore target=mcore\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss target=mn10200\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss target=mn10300\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss target=msp430\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss target=sparc\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss/v850/sys target=v850\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss target=lm32\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n-\n-dir=libgloss target=pru\n-$shell ${srccom}/gentvals.sh $target sys ${newlibroot}/$dir \\\n-\t\"syscall.h\" 'SYS_[_[:alnum:]]*' \"${cpp}\"\n+#\n+# NB: New ports should use libgloss, not newlib.\n+gen_arch() {\n+  target=\"$1\"\n+  dir=\"${2:-libgloss}\"\n+  gentvals \"${target}\" sys \"${ARG_NEWLIB}/${dir}\" \"syscall.h\" 'SYS_[_[:alnum:]]*'\n+}\n+\n+gen_arches() {\n+  gen_arch bfin\n+  gen_arch d10v newlib/libc/sys/d10v/sys\n+  gen_arch cr16 libgloss/cr16/sys\n+  gen_arch fr30\n+  gen_arch frv\n+  gen_arch i960 libgloss/i960\n+  gen_arch m32r\n+  gen_arch mcore libgloss/mcore\n+  gen_arch mn10200\n+  gen_arch mn10300\n+  gen_arch msp430\n+  gen_arch sparc\n+  gen_arch v850 libgloss/v850/sys\n+  gen_arch lm32\n+  gen_arch pru\n+}\n+\n+# Process the script command line options.\n+parse_opts() {\n+  while [ $# -gt 0 ]; do\n+    case $1 in\n+      --cpp)\n+        ARG_CPP=\"$2\"\n+        shift\n+        ;;\n+      -o|--output)\n+        ARG_OUTPUT=\"$2\"\n+        shift\n+        ;;\n+      --srcroot)\n+        ARG_SRCROOT=\"$2\"\n+        shift\n+        ;;\n+      -h|--help)\n+        usage\n+        ;;\n+      --)\n+        shift\n+        break\n+        ;;\n+      -*)\n+        usage \"unknown option: $1\"\n+        ;;\n+      *)\n+        break\n+        ;;\n+    esac\n+    shift\n+  done\n+\n+  if [ $# -gt 2 ]; then\n+    error \"too many arguments: $*\"\n+  elif [ $# -eq 1 ]; then\n+    ARG_NEWLIB=\"$1\"\n+  fi\n+\n+  # Try to find newlib relative to our source tree.\n+  if [ -z \"${ARG_NEWLIB}\" ]; then\n+    if [ -z \"${ARG_SRCROOT}\" ]; then\n+      ARG_SRCROOT=\"$(dirname \"$0\")/../..\"\n+    fi\n+    if [ -d \"${ARG_SRCROOT}/newlib\" ]; then\n+      # If newlib is manually in the same source tree, use it.\n+      ARG_NEWLIB=\"${ARG_SRCROOT}/newlib\"\n+    elif [ -d \"${ARG_SRCROOT}/../newlib\" ]; then\n+      # Or see if it's alongside the gdb/binutils repo.\n+      ARG_NEWLIB=\"${ARG_SRCROOT}/../newlib\"\n+    else\n+      error \"unable to find newlib\"\n+    fi\n+  fi\n+}\n+\n+main() {\n+  # The error checking isn't perfect, but should be good enough for this script.\n+  set -e\n+\n+  parse_opts \"$@\"\n+\n+  if [ -n \"${ARG_OUTPUT}\" ]; then\n+    exec >\"${ARG_OUTPUT}\" || exit 1\n+  fi\n+\n+  gen_header\n+  gen_common\n+  gen_arches\n+}\n+main \"$@\""
    },
    {
      "sha": "6dd7315f30aaa5695e65cf5a444fa4d7fa98a892",
      "filename": "sim/common/gentvals.sh",
      "status": "removed",
      "additions": 0,
      "deletions": 74,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02baa133856849a03aabb10c5fcb824f7b3996e1/sim/common/gentvals.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02baa133856849a03aabb10c5fcb824f7b3996e1/sim/common/gentvals.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/gentvals.sh?ref=02baa133856849a03aabb10c5fcb824f7b3996e1",
      "patch": "@@ -1,74 +0,0 @@\n-#!/bin/sh\n-# Usage: gentvals.sh target type dir files pattern cpp\n-\n-target=$1\n-type=$2\n-dir=$3\n-# FIXME: Would be nice to process #include's in these files.\n-files=$4\n-pattern=$5\n-cpp=$6\n-\n-# FIXME: need trap to remove tmp files.\n-\n-rm -f tmpvals.list tmpvals.uniq\n-for f in $files\n-do\n-\tif test -f $dir/$f ; then\n-\t\tgrep \"#define[ \t]$pattern\" $dir/$f | sed -e \"s/^.*#define[ \t]\\($pattern\\)[ \t]*\\([^ \t][^ \t]*\\).*$/\\1/\" >> tmpvals.list\n-\tfi\n-done\n-\n-sort <tmpvals.list | uniq >tmpvals.uniq\n-\n-rm -f tmpvals.h\n-for f in $files\n-do\n-\tif test -f $dir/$f ; then\n-\t\techo \"#include <$f>\" >>tmpvals.h\n-\tfi\n-done\n-\n-cat tmpvals.uniq |\n-while read sym\n-do\n-\techo \"#ifdef $sym\" >>tmpvals.h\n-\techo 'DEFVAL { \"'$sym'\", '$sym ' },' >>tmpvals.h\n-\techo \"#endif\" >>tmpvals.h\n-done\n-\n-if test -z \"$target\"\n-then\n-\techo \"#ifdef ${type}_defs\"\n-else\n-\techo \"#ifdef NL_TARGET_$target\"\n-\techo \"#ifdef ${type}_defs\"\n-fi\n-\n-for f in $files\n-do\n-\tif test -f $dir/$f ; then\n-\t\techo \"/* from $f */\"\n-\tfi\n-done\n-\n-if test -z \"$target\"\n-then\n-\techo \"/* begin $type target macros */\"\n-else\n-\techo \"/* begin $target $type target macros */\"\n-fi\n-\n-$cpp -I$dir tmpvals.h | grep DEFVAL | sed -e 's/DEFVAL//' -e 's/  / /'\n-\n-if test -z \"$target\"\n-then\n-\techo \"/* end $type target macros */\"\n-\techo \"#endif\"\n-else\n-\techo \"/* end $target $type target macros */\"\n-\techo \"#endif\"\n-\techo \"#endif\"\n-fi\n-\n-rm -f tmpvals.list tmpvals.uniq tmpvals.h"
    },
    {
      "sha": "08df7d5c4598408d295b33d98350f3eaa8a933d5",
      "filename": "sim/common/nltvals.def",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4cfcd3b333987a8040c1682e1766a1aeb2941a7d/sim/common/nltvals.def",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4cfcd3b333987a8040c1682e1766a1aeb2941a7d/sim/common/nltvals.def",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/nltvals.def?ref=4cfcd3b333987a8040c1682e1766a1aeb2941a7d",
      "patch": "@@ -115,6 +115,7 @@\n  { \"SIGPROF\", 27 },\n  { \"SIGQUIT\", 3 },\n  { \"SIGSEGV\", 11 },\n+ { \"SIGSTKSZ\", 8192 },\n  { \"SIGSTOP\", 17 },\n  { \"SIGSYS\", 12 },\n  { \"SIGTERM\", 15 },\n@@ -138,12 +139,18 @@\n /* begin open target macros */\n  { \"O_ACCMODE\", (0|1|2) },\n  { \"O_APPEND\", 0x0008 },\n+ { \"O_CLOEXEC\", 0x40000 },\n  { \"O_CREAT\", 0x0200 },\n+ { \"O_DIRECT\", 0x80000 },\n+ { \"O_DIRECTORY\", 0x200000 },\n  { \"O_EXCL\", 0x0800 },\n+ { \"O_EXEC\", 0x400000 },\n  { \"O_NOCTTY\", 0x8000 },\n+ { \"O_NOFOLLOW\", 0x100000 },\n  { \"O_NONBLOCK\", 0x4000 },\n  { \"O_RDONLY\", 0 },\n  { \"O_RDWR\", 2 },\n+ { \"O_SEARCH\", 0x400000 },\n  { \"O_SYNC\", 0x2000 },\n  { \"O_TRUNC\", 0x0400 },\n  { \"O_WRONLY\", 1 },"
    }
  ]
}