{
  "sha": "81b327aadd3454a5c855e10180b30b6cafe5fc84",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODFiMzI3YWFkZDM0NTRhNWM4NTVlMTAxODBiMzBiNmNhZmU1ZmM4NA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-10T08:53:52Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-06-25T17:22:03Z"
    },
    "message": "gdb/guile: improve the errors when creating breakpoints\n\nWhen creating a breakpoint using the guile API, if an invalid\nbreakpoint type number was used then the error would report the wrong\nargument position, like this:\n\n  (gdb) guile (define wp2 (make-breakpoint \"result\" #:wp-class WP_WRITE #:type 999))\n  ERROR: In procedure make-breakpoint:\n  ERROR: In procedure gdbscm_make_breakpoint: Out of range: invalid breakpoint type in position 3: 999\n  Error while executing Scheme code.\n  (gdb)\n\nThe 'position 3' here is actually pointing at WP_WRITE, when it should\nsay 'position 5' and point to the 999.  This commit fixes this.\n\nHowever, you also get errors like this:\n\n  (gdb) guile (define wp2 (make-breakpoint \"result\" #:wp-class WP_WRITE #:type BP_NONE))\n  ERROR: In procedure make-breakpoint:\n  ERROR: In procedure gdbscm_make_breakpoint: Out of range: invalid breakpoint type in position 3: 0\n  Error while executing Scheme code.\n\nThe BP_NONE is a valid breakpoint type, it's just not valid for\ncreating breakpoints through the 'make-breakpoint' API.  The use of\n'0' in the error message (which is the value of BP_NONE) is not\ngreat.  This commit changes the error in this case to:\n\n  (gdb) guile (define wp2 (make-breakpoint \"result\" #:wp-class WP_WRITE #:type BP_NONE))\n  ERROR: In procedure make-breakpoint:\n  ERROR: In procedure gdbscm_make_breakpoint: unsupported breakpoint type in position 5: \"BP_NONE\"\n  Error while executing Scheme code.\n\nWhich seems better; we now use the name of the type, and report that\nthis type is unsupported.\n\ngdb/ChangeLog:\n\n\t* guile/scm-breakpoint.c (gdbscm_make_breakpoint): Split the error\n\tfor invalid breakpoint numbers, and unsupported breakpoint\n\tnumbers.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.guile/scm-breakpoint.exp (test_watchpoints): Add new tests.",
    "tree": {
      "sha": "635e9620afd2ab37246a5d4a4d2fba235d9a34fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/635e9620afd2ab37246a5d4a4d2fba235d9a34fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/81b327aadd3454a5c855e10180b30b6cafe5fc84",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81b327aadd3454a5c855e10180b30b6cafe5fc84",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/81b327aadd3454a5c855e10180b30b6cafe5fc84",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81b327aadd3454a5c855e10180b30b6cafe5fc84/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "202054aea670db6441f6b04c59ff58e6c3a1f8ca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/202054aea670db6441f6b04c59ff58e6c3a1f8ca",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/202054aea670db6441f6b04c59ff58e6c3a1f8ca"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 29,
    "deletions": 1
  },
  "files": [
    {
      "sha": "80ccc9f4c85c8f7da5726eff228119adb91a3830",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81b327aadd3454a5c855e10180b30b6cafe5fc84/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81b327aadd3454a5c855e10180b30b6cafe5fc84/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=81b327aadd3454a5c855e10180b30b6cafe5fc84",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* guile/scm-breakpoint.c (gdbscm_make_breakpoint): Split the error\n+\tfor invalid breakpoint numbers, and unsupported breakpoint\n+\tnumbers.\n+\n 2021-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/index-write.c (struct addrmap_index_data): Add"
    },
    {
      "sha": "346b00629b0aedf290fcaab01f3584c7ff9d951a",
      "filename": "gdb/guile/scm-breakpoint.c",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81b327aadd3454a5c855e10180b30b6cafe5fc84/gdb/guile/scm-breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81b327aadd3454a5c855e10180b30b6cafe5fc84/gdb/guile/scm-breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-breakpoint.c?ref=81b327aadd3454a5c855e10180b30b6cafe5fc84",
      "patch": "@@ -387,8 +387,19 @@ gdbscm_make_breakpoint (SCM location_scm, SCM rest)\n \t\t\t\t     _(\"invalid watchpoint class\"));\n \t}\n       break;\n+    case bp_none:\n+    case bp_hardware_watchpoint:\n+    case bp_read_watchpoint:\n+    case bp_access_watchpoint:\n+      {\n+\tconst char *type_name = bpscm_type_to_string (type);\n+\tgdbscm_misc_error (FUNC_NAME, type_arg_pos,\n+\t\t\t   gdbscm_scm_from_c_string (type_name),\n+\t\t\t   _(\"unsupported breakpoint type\"));\n+      }\n+      break;\n     default:\n-      gdbscm_out_of_range_error (FUNC_NAME, access_type_arg_pos,\n+      gdbscm_out_of_range_error (FUNC_NAME, type_arg_pos,\n \t\t\t\t scm_from_int (type),\n \t\t\t\t _(\"invalid breakpoint type\"));\n     }"
    },
    {
      "sha": "330e7c84f1ad3d8eeb73e559ef7f6142b0137009",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81b327aadd3454a5c855e10180b30b6cafe5fc84/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81b327aadd3454a5c855e10180b30b6cafe5fc84/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=81b327aadd3454a5c855e10180b30b6cafe5fc84",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.guile/scm-breakpoint.exp (test_watchpoints): Add new tests.\n+\n gdb/testsuite/ChangeLog\n 2021-06-25  Carl Love  <cel@us.ibm.com>\n "
    },
    {
      "sha": "0e9e64ed4aed4ec0d00a6448db6b2d41a06e7cab",
      "filename": "gdb/testsuite/gdb.guile/scm-breakpoint.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81b327aadd3454a5c855e10180b30b6cafe5fc84/gdb/testsuite/gdb.guile/scm-breakpoint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81b327aadd3454a5c855e10180b30b6cafe5fc84/gdb/testsuite/gdb.guile/scm-breakpoint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.guile/scm-breakpoint.exp?ref=81b327aadd3454a5c855e10180b30b6cafe5fc84",
      "patch": "@@ -258,6 +258,13 @@ proc_with_prefix test_watchpoints { } {\n     gdb_test \"continue\" \\\n \t\".*\\[Ww\\]atchpoint.*result.*Old value = 0.*New value = 25.*main.*\" \\\n \t\"test watchpoint write\"\n+\n+    gdb_test \"guile (define wp2 (make-breakpoint \\\"result\\\" #:wp-class WP_WRITE #:type 999))\" \\\n+\t\"ERROR: In procedure gdbscm_make_breakpoint: Out of range: invalid breakpoint type in position 5: 999\\r\\n.*\" \\\n+\t\"create a breakpoint with an invalid type number\"\n+    gdb_test \"guile (define wp2 (make-breakpoint \\\"result\\\" #:wp-class WP_WRITE #:type BP_NONE))\" \\\n+\t\"ERROR: In procedure gdbscm_make_breakpoint: unsupported breakpoint type in position 5: \\\"BP_NONE\\\"\\r\\n.*\" \\\n+\t\"create a breakpoint with an unsupported type\"\n }\n \n proc_with_prefix test_bkpt_internal { } {"
    }
  ]
}