{
  "sha": "5e4d9bbc4b4e57eacb614c38f30dac9af08cace8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWU0ZDliYmM0YjRlNTdlYWNiNjE0YzM4ZjMwZGFjOWFmMDhjYWNlOA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-02-02T15:40:50Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-02-02T15:40:50Z"
    },
    "message": "gdb/dwarf: fix bound check in read_rnglist_index\n\nI think this check in read_rnglist_index is wrong:\n\n      /* Validate that reading won't go beyond the end of the section.  */\n      if (start_offset + cu->header.offset_size > rnglist_base + section->size)\n        error (_(\"Reading DW_FORM_rnglistx index beyond end of\"\n                 \".debug_rnglists section [in module %s]\"),\n               objfile_name (objfile));\n\nThe addition `rnglist_base + section->size` doesn't make sense.\nrnglist_base is an offset into `section`, so it doesn't make sense to\nadd it to `section`'s size.  `start_offset` also is an offset into\n`section`, so we should just compare it to just `section->size`.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (read_rnglist_index): Fix bound check.\n\nChange-Id: If0ff7c73f4f80f79aac447518f4e8f131f2db8f2",
    "tree": {
      "sha": "dd9185a7ddb8a3754ea3042d4baad15ba2973ad2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dd9185a7ddb8a3754ea3042d4baad15ba2973ad2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5e4d9bbc4b4e57eacb614c38f30dac9af08cace8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e4d9bbc4b4e57eacb614c38f30dac9af08cace8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5e4d9bbc4b4e57eacb614c38f30dac9af08cace8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e4d9bbc4b4e57eacb614c38f30dac9af08cace8/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a0c1eeba9b13b759b058dd5640ccb0dc2630a723",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0c1eeba9b13b759b058dd5640ccb0dc2630a723",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a0c1eeba9b13b759b058dd5640ccb0dc2630a723"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 7,
    "deletions": 1
  },
  "files": [
    {
      "sha": "c71492d7a3301ad02979f5f11fb93e6b85f190a4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e4d9bbc4b4e57eacb614c38f30dac9af08cace8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e4d9bbc4b4e57eacb614c38f30dac9af08cace8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5e4d9bbc4b4e57eacb614c38f30dac9af08cace8",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-02  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2/read.c (read_rnglist_index): Fix bound check.\n+\n 2021-02-02  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* dwarf2/read.c (read_loclist_index): Change complaints into"
    },
    {
      "sha": "9a71329c990d00857ddedb7b09a5f2555a510844",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e4d9bbc4b4e57eacb614c38f30dac9af08cace8/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e4d9bbc4b4e57eacb614c38f30dac9af08cace8/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=5e4d9bbc4b4e57eacb614c38f30dac9af08cace8",
      "patch": "@@ -20257,6 +20257,8 @@ read_rnglist_index (struct dwarf2_cu *cu, ULONGEST rnglist_index,\n      : RNGLIST_HEADER_SIZE64);\n   ULONGEST rnglist_base =\n       (cu->dwo_unit != nullptr) ? rnglist_header_size : cu->ranges_base;\n+\n+  /* Offset in .debug_rnglists of the offset for RNGLIST_INDEX.  */\n   ULONGEST start_offset =\n     rnglist_base + rnglist_index * cu->header.offset_size;\n \n@@ -20285,7 +20287,7 @@ read_rnglist_index (struct dwarf2_cu *cu, ULONGEST rnglist_index,\n \t   objfile_name (objfile));\n \n   /* Validate that reading won't go beyond the end of the section.  */\n-  if (start_offset + cu->header.offset_size > rnglist_base + section->size)\n+  if (start_offset + cu->header.offset_size > section->size)\n     error (_(\"Reading DW_FORM_rnglistx index beyond end of\"\n \t     \".debug_rnglists section [in module %s]\"),\n \t   objfile_name (objfile));"
    }
  ]
}