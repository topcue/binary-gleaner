{
  "sha": "1820745a0af0768d9dcd515b98ad038ff9f15f23",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTgyMDc0NWEwYWYwNzY4ZDlkY2Q1MTViOThhZDAzOGZmOWYxNWYyMw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-07-24T14:21:56Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-10-03T16:04:55Z"
    },
    "message": "libctf: don't leak hash keys or values on value replacement\n\nWhen a ctf_dynhash_insert() finds a slot already existing, it should\ncall the key and value free functions on the existing key and value and\nmove the passed-in key into place, so that the lifetime rules for hash\nkeys are always the same no matter whether the key existed or not but\nneither are the keys or values leaked.\n\nNew in v3.\nv5: fix tabdamage.\n\nlibctf/\n\t* ctf-hash.c (ctf_hashtab_insert): Pass in the key and value\n\tfreeing functions: if set, free the key and value if the slot\n\talready exists.  Always reassign the key.\n\t(ctf_dynhash_insert): Adjust call appropriately.\n\t(ctf_hash_insert_type): Likewise.",
    "tree": {
      "sha": "8904098f8a9792eefe985e0f194c2ac7a76333cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8904098f8a9792eefe985e0f194c2ac7a76333cb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1820745a0af0768d9dcd515b98ad038ff9f15f23",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1820745a0af0768d9dcd515b98ad038ff9f15f23",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1820745a0af0768d9dcd515b98ad038ff9f15f23",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1820745a0af0768d9dcd515b98ad038ff9f15f23/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5de9eada3b4e39c89431765b1c59159cb04878ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5de9eada3b4e39c89431765b1c59159cb04878ed",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5de9eada3b4e39c89431765b1c59159cb04878ed"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 22,
    "deletions": 4
  },
  "files": [
    {
      "sha": "08a2e3a5361e631fae37db7fdb15cdd7a47677d8",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1820745a0af0768d9dcd515b98ad038ff9f15f23/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1820745a0af0768d9dcd515b98ad038ff9f15f23/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=1820745a0af0768d9dcd515b98ad038ff9f15f23",
      "patch": "@@ -1,3 +1,11 @@\n+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-hash.c (ctf_hashtab_insert): Pass in the key and value\n+\tfreeing functions: if set, free the key and value if the slot\n+\talready exists.  Always reassign the key.\n+\t(ctf_dynhash_insert): Adjust call appropriately.\n+\t(ctf_hash_insert_type): Likewise.\n+\n 2019-08-03  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-create.c (ctf_add_type): Look up and use the forwarded-to"
    },
    {
      "sha": "59fceed6253a9cfa94d82ecb89b2dd3bd26a3953",
      "filename": "libctf/ctf-hash.c",
      "status": "modified",
      "additions": 14,
      "deletions": 4,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1820745a0af0768d9dcd515b98ad038ff9f15f23/libctf/ctf-hash.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1820745a0af0768d9dcd515b98ad038ff9f15f23/libctf/ctf-hash.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-hash.c?ref=1820745a0af0768d9dcd515b98ad038ff9f15f23",
      "patch": "@@ -152,7 +152,9 @@ ctf_hashtab_lookup (struct htab *htab, const void *key, enum insert_option inser\n }\n \n static ctf_helem_t *\n-ctf_hashtab_insert (struct htab *htab, void *key, void *value)\n+ctf_hashtab_insert (struct htab *htab, void *key, void *value,\n+\t\t    ctf_hash_free_fun key_free,\n+\t\t    ctf_hash_free_fun value_free)\n {\n   ctf_helem_t **slot;\n \n@@ -169,8 +171,15 @@ ctf_hashtab_insert (struct htab *htab, void *key, void *value)\n       *slot = malloc (sizeof (ctf_helem_t));\n       if (!*slot)\n \treturn NULL;\n-      (*slot)->key = key;\n     }\n+  else\n+    {\n+      if (key_free)\n+\t  key_free ((*slot)->key);\n+      if (value_free)\n+\t  value_free ((*slot)->value);\n+    }\n+  (*slot)->key = key;\n   (*slot)->value = value;\n   return *slot;\n }\n@@ -180,7 +189,8 @@ ctf_dynhash_insert (ctf_dynhash_t *hp, void *key, void *value)\n {\n   ctf_helem_t *slot;\n \n-  slot = ctf_hashtab_insert (hp->htab, key, value);\n+  slot = ctf_hashtab_insert (hp->htab, key, value,\n+\t\t\t     hp->key_free, hp->value_free);\n \n   if (!slot)\n     return errno;\n@@ -317,7 +327,7 @@ ctf_hash_insert_type (ctf_hash_t *hp, ctf_file_t *fp, uint32_t type,\n     return 0;\t\t   /* Just ignore empty strings on behalf of caller.  */\n \n   if (ctf_hashtab_insert ((struct htab *) hp, (char *) str,\n-\t\t\t  (void *) (ptrdiff_t) type) != NULL)\n+\t\t\t  (void *) (ptrdiff_t) type, NULL, NULL) != NULL)\n     return 0;\n   return errno;\n }"
    }
  ]
}