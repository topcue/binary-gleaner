{
  "sha": "4d60b897707863bdfceb5b6e1c14545ad173a3a1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGQ2MGI4OTc3MDc4NjNiZGZjZWI1YjZlMWMxNDU0NWFkMTczYTNhMQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-06-07T09:18:47Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-06-28T15:31:30Z"
    },
    "message": "gdb/remote: Use true/false instead of 1/0\n\nThe remote_state::starting_up member variable is already of type bool,\nbut in some places we still write to it using 1 and 0.  This commit\njust updates things to use true and false.\n\nThere should be no user visible change after this commit.\n\ngdb/ChangeLog:\n\n\t* remote.c (remote_target::start_remote): Set 'starting_up' using\n\tboolean values instead of integers.",
    "tree": {
      "sha": "6205d0ece5f197df9c8467fc94c07748b1540dbb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6205d0ece5f197df9c8467fc94c07748b1540dbb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4d60b897707863bdfceb5b6e1c14545ad173a3a1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4d60b897707863bdfceb5b6e1c14545ad173a3a1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4d60b897707863bdfceb5b6e1c14545ad173a3a1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4d60b897707863bdfceb5b6e1c14545ad173a3a1/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "78484bcab9ac1cab4ddc87fdbdc4a7e1fab7c5ee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/78484bcab9ac1cab4ddc87fdbdc4a7e1fab7c5ee",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/78484bcab9ac1cab4ddc87fdbdc4a7e1fab7c5ee"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 9,
    "deletions": 4
  },
  "files": [
    {
      "sha": "5ba05036ec29a50b13dc4b958e084fcb80c98a2e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4d60b897707863bdfceb5b6e1c14545ad173a3a1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4d60b897707863bdfceb5b6e1c14545ad173a3a1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4d60b897707863bdfceb5b6e1c14545ad173a3a1",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* remote.c (remote_target::start_remote): Set 'starting_up' using\n+\tboolean values instead of integers.\n+\n 2021-06-25  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* guile/scm-param.c (struct param_smob) <set_command,"
    },
    {
      "sha": "adc53e324d012066d95645c09606bb6c93d0254f",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4d60b897707863bdfceb5b6e1c14545ad173a3a1/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4d60b897707863bdfceb5b6e1c14545ad173a3a1/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=4d60b897707863bdfceb5b6e1c14545ad173a3a1",
      "patch": "@@ -4667,7 +4667,7 @@ remote_target::start_remote (int from_tty, int extended_p)\n      Ctrl-C before we're connected and synced up can't interrupt the\n      target.  Instead, it offers to drop the (potentially wedged)\n      connection.  */\n-  rs->starting_up = 1;\n+  rs->starting_up = true;\n \n   QUIT;\n \n@@ -4808,7 +4808,7 @@ remote_target::start_remote (int from_tty, int extended_p)\n \n \t  /* We're connected, but not running.  Drop out before we\n \t     call start_remote.  */\n-\t  rs->starting_up = 0;\n+\t  rs->starting_up = false;\n \t  return;\n \t}\n       else\n@@ -4923,7 +4923,7 @@ remote_target::start_remote (int from_tty, int extended_p)\n \n \t  /* We're connected, but not running.  Drop out before we\n \t     call start_remote.  */\n-\t  rs->starting_up = 0;\n+\t  rs->starting_up = false;\n \t  return;\n \t}\n \n@@ -4968,7 +4968,7 @@ remote_target::start_remote (int from_tty, int extended_p)\n      target, our symbols have been relocated, and we're merged the\n      target's tracepoints with ours.  We're done with basic start\n      up.  */\n-  rs->starting_up = 0;\n+  rs->starting_up = false;\n \n   /* Maybe breakpoints are global and need to be inserted now.  */\n   if (breakpoints_should_be_inserted_now ())"
    }
  ]
}