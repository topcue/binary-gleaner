{
  "sha": "797439622361bc901ed64b398c0d689c97cd8121",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Nzk3NDM5NjIyMzYxYmM5MDFlZDY0YjM5OGMwZDY4OWM5N2NkODEyMQ==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-16T18:02:22Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-04-06T16:26:59Z"
    },
    "message": "Add signal number conversions for NetBSD\n\ngdb/ChangeLog:\n\n\t* nbsd-tdep.c: Include \"gdbarch.h\".\n\tDefine enum with NetBSD signal numbers.\n\t(nbsd_gdb_signal_from_target, nbsd_gdb_signal_to_target): New.\n\t* alpha-nbsd-tdep.c (alphanbsd_init_abi): Call nbsd_init_abi().\n\t* amd64-nbsd-tdep.c (amd64nbsd_init_abi): Likewise.\n\t* arm-nbsd-tdep.c (arm_netbsd_elf_init_abi): Likewise.\n\t* hppa-nbsd-tdep.c (hppanbsd_init_abi): Likewise.\n\t* i386-nbsd-tdep.c (i386nbsd_init_abi): Likewise.\n\t* mips-nbsd-tdep.c (nbsd_init_abi): Likewise.\n\t* ppc-nbsd-tdep.c (ppcnbsd_init_abi): Likewise.\n\t* sh-nbsd-tdep.c (shnbsd_init_abi): Likewise.\n\t* sparc-nbsd-tdep.c (sparc32nbsd_init_abi): Likewise.\n\t* sparc64-nbsd-tdep.c (sparc64nbsd_init_abi): Likewise.\n\t* vax-nbsd-tdep.c (vaxnbsd_elf_init_abi): Likewise.",
    "tree": {
      "sha": "9d0df3cb0d3d6fb19ae3d5c754291d4784f1edab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9d0df3cb0d3d6fb19ae3d5c754291d4784f1edab"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/797439622361bc901ed64b398c0d689c97cd8121",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/797439622361bc901ed64b398c0d689c97cd8121",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/797439622361bc901ed64b398c0d689c97cd8121",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/797439622361bc901ed64b398c0d689c97cd8121/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8707c522016e68372b79d10eb3b74e0fc4b3e1b4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8707c522016e68372b79d10eb3b74e0fc4b3e1b4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8707c522016e68372b79d10eb3b74e0fc4b3e1b4"
    }
  ],
  "stats": {
    "total": 342,
    "additions": 342,
    "deletions": 0
  },
  "files": [
    {
      "sha": "b1a965304a471d962426c40e440e8b5356a7cbb2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -1,3 +1,20 @@\n+2020-04-06  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* nbsd-tdep.c: Include \"gdbarch.h\".\n+\tDefine enum with NetBSD signal numbers.\n+\t(nbsd_gdb_signal_from_target, nbsd_gdb_signal_to_target): New.\n+\t* alpha-nbsd-tdep.c (alphanbsd_init_abi): Call nbsd_init_abi().\n+\t* amd64-nbsd-tdep.c (amd64nbsd_init_abi): Likewise.\n+\t* arm-nbsd-tdep.c (arm_netbsd_elf_init_abi): Likewise.\n+\t* hppa-nbsd-tdep.c (hppanbsd_init_abi): Likewise.\n+\t* i386-nbsd-tdep.c (i386nbsd_init_abi): Likewise.\n+\t* mips-nbsd-tdep.c (nbsd_init_abi): Likewise.\n+\t* ppc-nbsd-tdep.c (ppcnbsd_init_abi): Likewise.\n+\t* sh-nbsd-tdep.c (shnbsd_init_abi): Likewise.\n+\t* sparc-nbsd-tdep.c (sparc32nbsd_init_abi): Likewise.\n+\t* sparc64-nbsd-tdep.c (sparc64nbsd_init_abi): Likewise.\n+\t* vax-nbsd-tdep.c (vaxnbsd_elf_init_abi): Likewise.\n+\n 2020-04-03  Hannes Domani  <ssbssa@yahoo.de>\n \n \tPR gdb/25325"
    },
    {
      "sha": "58294edb3f66b21355a51b65194a32f8a5841391",
      "filename": "gdb/alpha-nbsd-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/alpha-nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/alpha-nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/alpha-nbsd-tdep.c?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -258,6 +258,8 @@ alphanbsd_init_abi (struct gdbarch_info info,\n   /* Hook into the MDEBUG frame unwinder.  */\n   alpha_mdebug_init_abi (info, gdbarch);\n \n+  nbsd_init_abi (info, gdbarch);\n+\n   /* NetBSD/alpha does not provide single step support via ptrace(2); we\n      must use software single-stepping.  */\n   set_gdbarch_software_single_step (gdbarch, alpha_software_single_step);"
    },
    {
      "sha": "59071488ed791fcea603c5a63fa1c1ebdb45f14e",
      "filename": "gdb/amd64-nbsd-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/amd64-nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/amd64-nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-nbsd-tdep.c?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -106,6 +106,7 @@ amd64nbsd_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n \n   amd64_init_abi (info, gdbarch,\n \t\t  amd64_target_description (X86_XSTATE_SSE_MASK, true));\n+  nbsd_init_abi (info, gdbarch);\n \n   tdep->jb_pc_offset = 7 * 8;\n "
    },
    {
      "sha": "a6104f760b3b15e3ca7c1dd95d062f59e0ec2330",
      "filename": "gdb/arm-nbsd-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/arm-nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/arm-nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-nbsd-tdep.c?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -150,6 +150,9 @@ arm_netbsd_elf_init_abi (struct gdbarch_info info,\n   struct gdbarch_tdep *tdep = gdbarch_tdep (gdbarch);\n \n   arm_netbsd_init_abi_common (info, gdbarch);\n+\n+  nbsd_init_abi (info, gdbarch);\n+\n   if (tdep->fp_model == ARM_FLOAT_AUTO)\n     tdep->fp_model = ARM_FLOAT_SOFT_VFP;\n "
    },
    {
      "sha": "d601aa96f3fb66ec9898ba2c51efa7cd477f6eba",
      "filename": "gdb/hppa-nbsd-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/hppa-nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/hppa-nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/hppa-nbsd-tdep.c?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -201,6 +201,8 @@ hppanbsd_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n   /* Obviously NetBSD is BSD-based.  */\n   hppabsd_init_abi (info, gdbarch);\n \n+  nbsd_init_abi (info, gdbarch);\n+\n   /* Core file support.  */\n   set_gdbarch_iterate_over_regset_sections\n     (gdbarch, hppanbsd_iterate_over_regset_sections);"
    },
    {
      "sha": "f350412d9bd7d7f1fd0bc3f069946032493f68ca",
      "filename": "gdb/i386-nbsd-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/i386-nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/i386-nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-nbsd-tdep.c?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -377,6 +377,8 @@ i386nbsd_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n   /* Obviously NetBSD is BSD-based.  */\n   i386bsd_init_abi (info, gdbarch);\n \n+  nbsd_init_abi (info, gdbarch);\n+\n   /* NetBSD has a different `struct reg'.  */\n   tdep->gregset_reg_offset = i386nbsd_r_reg_offset;\n   tdep->gregset_num_regs = ARRAY_SIZE (i386nbsd_r_reg_offset);"
    },
    {
      "sha": "6f4d22b24fbc9bfb55f6cb4758b1c43eb0c0acda",
      "filename": "gdb/mips-nbsd-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/mips-nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/mips-nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mips-nbsd-tdep.c?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -354,6 +354,8 @@ static void\n mipsnbsd_init_abi (struct gdbarch_info info,\n                    struct gdbarch *gdbarch)\n {\n+  nbsd_init_abi (info, gdbarch)\n+\n   set_gdbarch_iterate_over_regset_sections\n     (gdbarch, mipsnbsd_iterate_over_regset_sections);\n "
    },
    {
      "sha": "6680d3c6fdee127c24f1e14e71d4a1ceef0ac8fa",
      "filename": "gdb/nbsd-tdep.c",
      "status": "modified",
      "additions": 300,
      "deletions": 0,
      "changes": 300,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nbsd-tdep.c?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -22,6 +22,7 @@\n #include \"defs.h\"\n #include \"solib-svr4.h\"\n #include \"nbsd-tdep.h\"\n+#include \"gdbarch.h\"\n \n /* FIXME: kettenis/20060115: We should really eliminate the next two\n    functions completely.  */\n@@ -47,3 +48,302 @@ nbsd_pc_in_sigtramp (CORE_ADDR pc, const char *func_name)\n   return (func_name != NULL\n \t  && startswith (func_name, \"__sigtramp\"));\n }\n+\n+/* This enum is derived from NETBSD's <sys/signal.h>.  */\n+\n+enum\n+  {\n+   NBSD_SIGHUP = 1,\n+   NBSD_SIGINT = 2,\n+   NBSD_SIGQUIT = 3,\n+   NBSD_SIGILL = 4,\n+   NBSD_SIGTRAP = 5,\n+   NBSD_SIGABRT = 6,\n+   NBSD_SIGEMT = 7,\n+   NBSD_SIGFPE = 8,\n+   NBSD_SIGKILL = 9,\n+   NBSD_SIGBUS = 10,\n+   NBSD_SIGSEGV = 11,\n+   NBSD_SIGSYS = 12,\n+   NBSD_SIGPIPE = 13,\n+   NBSD_SIGALRM = 14,\n+   NBSD_SIGTERM = 15,\n+   NBSD_SIGURG = 16,\n+   NBSD_SIGSTOP = 17,\n+   NBSD_SIGTSTP = 18,\n+   NBSD_SIGCONT = 19,\n+   NBSD_SIGCHLD = 20,\n+   NBSD_SIGTTIN = 21,\n+   NBSD_SIGTTOU = 22,\n+   NBSD_SIGIO = 23,\n+   NBSD_SIGXCPU = 24,\n+   NBSD_SIGXFSZ = 25,\n+   NBSD_SIGVTALRM = 26,\n+   NBSD_SIGPROF = 27,\n+   NBSD_SIGWINCH = 28,\n+   NBSD_SIGINFO = 29,\n+   NBSD_SIGUSR1 = 30,\n+   NBSD_SIGUSR2 = 31,\n+   NBSD_SIGPWR = 32,\n+   NBSD_SIGRTMIN = 33,\n+   NBSD_SIGRTMAX = 63,\n+  };\n+\n+/* Implement the \"gdb_signal_from_target\" gdbarch method.  */\n+\n+static enum gdb_signal\n+nbsd_gdb_signal_from_target (struct gdbarch *gdbarch, int signal)\n+{\n+  switch (signal)\n+    {\n+    case 0:\n+      return GDB_SIGNAL_0;\n+\n+    case NBSD_SIGHUP:\n+      return GDB_SIGNAL_HUP;\n+\n+    case NBSD_SIGINT:\n+      return GDB_SIGNAL_INT;\n+\n+    case NBSD_SIGQUIT:\n+      return GDB_SIGNAL_QUIT;\n+\n+    case NBSD_SIGILL:\n+      return GDB_SIGNAL_ILL;\n+\n+    case NBSD_SIGTRAP:\n+      return GDB_SIGNAL_TRAP;\n+\n+    case NBSD_SIGABRT:\n+      return GDB_SIGNAL_ABRT;\n+\n+    case NBSD_SIGEMT:\n+      return GDB_SIGNAL_EMT;\n+\n+    case NBSD_SIGFPE:\n+      return GDB_SIGNAL_FPE;\n+\n+    case NBSD_SIGKILL:\n+      return GDB_SIGNAL_KILL;\n+\n+    case NBSD_SIGBUS:\n+      return GDB_SIGNAL_BUS;\n+\n+    case NBSD_SIGSEGV:\n+      return GDB_SIGNAL_SEGV;\n+\n+    case NBSD_SIGSYS:\n+      return GDB_SIGNAL_SYS;\n+\n+    case NBSD_SIGPIPE:\n+      return GDB_SIGNAL_PIPE;\n+\n+    case NBSD_SIGALRM:\n+      return GDB_SIGNAL_ALRM;\n+\n+    case NBSD_SIGTERM:\n+      return GDB_SIGNAL_TERM;\n+\n+    case NBSD_SIGURG:\n+      return GDB_SIGNAL_URG;\n+\n+    case NBSD_SIGSTOP:\n+      return GDB_SIGNAL_STOP;\n+\n+    case NBSD_SIGTSTP:\n+      return GDB_SIGNAL_TSTP;\n+\n+    case NBSD_SIGCONT:\n+      return GDB_SIGNAL_CONT;\n+\n+    case NBSD_SIGCHLD:\n+      return GDB_SIGNAL_CHLD;\n+\n+    case NBSD_SIGTTIN:\n+      return GDB_SIGNAL_TTIN;\n+\n+    case NBSD_SIGTTOU:\n+      return GDB_SIGNAL_TTOU;\n+\n+    case NBSD_SIGIO:\n+      return GDB_SIGNAL_IO;\n+\n+    case NBSD_SIGXCPU:\n+      return GDB_SIGNAL_XCPU;\n+\n+    case NBSD_SIGXFSZ:\n+      return GDB_SIGNAL_XFSZ;\n+\n+    case NBSD_SIGVTALRM:\n+      return GDB_SIGNAL_VTALRM;\n+\n+    case NBSD_SIGPROF:\n+      return GDB_SIGNAL_PROF;\n+\n+    case NBSD_SIGWINCH:\n+      return GDB_SIGNAL_WINCH;\n+\n+    case NBSD_SIGINFO:\n+      return GDB_SIGNAL_INFO;\n+\n+    case NBSD_SIGUSR1:\n+      return GDB_SIGNAL_USR1;\n+\n+    case NBSD_SIGUSR2:\n+      return GDB_SIGNAL_USR2;\n+\n+    case NBSD_SIGPWR:\n+      return GDB_SIGNAL_PWR;\n+\n+    /* SIGRTMIN and SIGRTMAX are not continuous in <gdb/signals.def>,\n+       therefore we have to handle them here.  */\n+    case NBSD_SIGRTMIN:\n+      return GDB_SIGNAL_REALTIME_33;\n+\n+    case NBSD_SIGRTMAX:\n+      return GDB_SIGNAL_REALTIME_63;\n+    }\n+\n+  if (signal >= NBSD_SIGRTMIN + 1 && signal <= NBSD_SIGRTMAX - 1)\n+    {\n+      int offset = signal - NBSD_SIGRTMIN + 1;\n+\n+      return (enum gdb_signal) ((int) GDB_SIGNAL_REALTIME_34 + offset);\n+    }\n+\n+  return GDB_SIGNAL_UNKNOWN;\n+}\n+\n+/* Implement the \"gdb_signal_to_target\" gdbarch method.  */\n+\n+static int\n+nbsd_gdb_signal_to_target (struct gdbarch *gdbarch,\n+                enum gdb_signal signal)\n+{\n+  switch (signal)\n+    {\n+    case GDB_SIGNAL_0:\n+      return 0;\n+\n+    case GDB_SIGNAL_HUP:\n+      return NBSD_SIGHUP;\n+\n+    case GDB_SIGNAL_INT:\n+      return NBSD_SIGINT;\n+\n+    case GDB_SIGNAL_QUIT:\n+      return NBSD_SIGQUIT;\n+\n+    case GDB_SIGNAL_ILL:\n+      return NBSD_SIGILL;\n+\n+    case GDB_SIGNAL_TRAP:\n+      return NBSD_SIGTRAP;\n+\n+    case GDB_SIGNAL_ABRT:\n+      return NBSD_SIGABRT;\n+\n+    case GDB_SIGNAL_EMT:\n+      return NBSD_SIGEMT;\n+\n+    case GDB_SIGNAL_FPE:\n+      return NBSD_SIGFPE;\n+\n+    case GDB_SIGNAL_KILL:\n+      return NBSD_SIGKILL;\n+\n+    case GDB_SIGNAL_BUS:\n+      return NBSD_SIGBUS;\n+\n+    case GDB_SIGNAL_SEGV:\n+      return NBSD_SIGSEGV;\n+\n+    case GDB_SIGNAL_SYS:\n+      return NBSD_SIGSYS;\n+\n+    case GDB_SIGNAL_PIPE:\n+      return NBSD_SIGPIPE;\n+\n+    case GDB_SIGNAL_ALRM:\n+      return NBSD_SIGALRM;\n+\n+    case GDB_SIGNAL_TERM:\n+      return NBSD_SIGTERM;\n+\n+    case GDB_SIGNAL_URG:\n+      return NBSD_SIGSTOP;\n+\n+    case GDB_SIGNAL_TSTP:\n+      return NBSD_SIGTSTP;\n+\n+    case GDB_SIGNAL_CONT:\n+      return NBSD_SIGCONT;\n+\n+    case GDB_SIGNAL_CHLD:\n+      return NBSD_SIGCHLD;\n+\n+    case GDB_SIGNAL_TTIN:\n+      return NBSD_SIGTTIN;\n+\n+    case GDB_SIGNAL_TTOU:\n+      return NBSD_SIGTTOU;\n+\n+    case GDB_SIGNAL_IO:\n+      return NBSD_SIGIO;\n+\n+    case GDB_SIGNAL_XCPU:\n+      return NBSD_SIGXCPU;\n+\n+    case GDB_SIGNAL_XFSZ:\n+      return NBSD_SIGXFSZ;\n+\n+    case GDB_SIGNAL_VTALRM:\n+      return NBSD_SIGVTALRM;\n+\n+    case GDB_SIGNAL_PROF:\n+      return NBSD_SIGPROF;\n+\n+    case GDB_SIGNAL_WINCH:\n+      return NBSD_SIGWINCH;\n+\n+    case GDB_SIGNAL_INFO:\n+      return NBSD_SIGINFO;\n+\n+    case GDB_SIGNAL_USR1:\n+      return NBSD_SIGUSR1;\n+\n+    case GDB_SIGNAL_USR2:\n+      return NBSD_SIGUSR2;\n+\n+    case GDB_SIGNAL_PWR:\n+      return NBSD_SIGPWR;\n+\n+    /* GDB_SIGNAL_REALTIME_33 is not continuous in <gdb/signals.def>,\n+       therefore we have to handle it here.  */\n+    case GDB_SIGNAL_REALTIME_33:\n+      return NBSD_SIGRTMIN;\n+\n+    /* Same comment applies to _64.  */\n+    case GDB_SIGNAL_REALTIME_63:\n+      return NBSD_SIGRTMAX;\n+    }\n+\n+  if (signal >= GDB_SIGNAL_REALTIME_34\n+      && signal <= GDB_SIGNAL_REALTIME_62)\n+    {\n+      int offset = signal - GDB_SIGNAL_REALTIME_32;\n+\n+      return NBSD_SIGRTMIN + 1 + offset;\n+    }\n+\n+  return -1;\n+}\n+\n+/* See nbsd-tdep.h.  */\n+\n+void\n+nbsd_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n+{\n+  set_gdbarch_gdb_signal_from_target (gdbarch, nbsd_gdb_signal_from_target);\n+  set_gdbarch_gdb_signal_to_target (gdbarch, nbsd_gdb_signal_to_target);\n+}"
    },
    {
      "sha": "4b06c13f87bb18b72bcead3add6b63d761673acd",
      "filename": "gdb/nbsd-tdep.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/nbsd-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/nbsd-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nbsd-tdep.h?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -25,4 +25,8 @@ struct link_map_offsets *nbsd_lp64_solib_svr4_fetch_link_map_offsets (void);\n \n int nbsd_pc_in_sigtramp (CORE_ADDR, const char *);\n \n+/* NetBSD specific set of ABI-related routines.  */\n+\n+void nbsd_init_abi (struct gdbarch_info, struct gdbarch *);\n+\n #endif /* NBSD_TDEP_H */"
    },
    {
      "sha": "81492deaccd842792915774bc943ad93b11ec28d",
      "filename": "gdb/ppc-nbsd-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/ppc-nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/ppc-nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ppc-nbsd-tdep.c?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -173,6 +173,8 @@ static void\n ppcnbsd_init_abi (struct gdbarch_info info,\n                   struct gdbarch *gdbarch)\n {\n+  nbsd_init_abi (info, gdbarch);\n+\n   /* For NetBSD, this is an on again, off again thing.  Some systems\n      do use the broken struct convention, and some don't.  */\n   set_gdbarch_return_value (gdbarch, ppcnbsd_return_value);"
    },
    {
      "sha": "2b2a7e3fd4a1adb93e69e2dcf65c56846015cc5f",
      "filename": "gdb/sh-nbsd-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/sh-nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/sh-nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sh-nbsd-tdep.c?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -63,6 +63,7 @@ shnbsd_init_abi (struct gdbarch_info info,\n                   struct gdbarch *gdbarch)\n {\n   struct gdbarch_tdep *tdep = gdbarch_tdep (gdbarch);\n+  nbsd_init_abi (info, gdbarch);\n \n   tdep->core_gregmap = (struct sh_corefile_regmap *)regmap;\n   tdep->sizeof_gregset = 84;"
    },
    {
      "sha": "ab1b557c57cd8cdf6c00d8350aa13f2916439740",
      "filename": "gdb/sparc-nbsd-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/sparc-nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/sparc-nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sparc-nbsd-tdep.c?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -296,6 +296,8 @@ sparc32nbsd_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n {\n   struct gdbarch_tdep *tdep = gdbarch_tdep (gdbarch);\n \n+  nbsd_init_abi (info, gdbarch);\n+\n   /* NetBSD doesn't support the 128-bit `long double' from the psABI.  */\n   set_gdbarch_long_double_bit (gdbarch, 64);\n   set_gdbarch_long_double_format (gdbarch, floatformats_ieee_double);"
    },
    {
      "sha": "dac7fa78b9b1403b3f967610be0cf529b7515758",
      "filename": "gdb/sparc64-nbsd-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/sparc64-nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/sparc64-nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sparc64-nbsd-tdep.c?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -249,6 +249,8 @@ sparc64nbsd_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n {\n   struct gdbarch_tdep *tdep = gdbarch_tdep (gdbarch);\n \n+  nbsd_init_abi (info, gdbarch);\n+\n   tdep->gregset = &sparc64nbsd_gregset;\n   tdep->sizeof_gregset = 160;\n "
    },
    {
      "sha": "7630ac5ab94baed4c3ce32fee32c9e86d40f2141",
      "filename": "gdb/vax-nbsd-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797439622361bc901ed64b398c0d689c97cd8121/gdb/vax-nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797439622361bc901ed64b398c0d689c97cd8121/gdb/vax-nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/vax-nbsd-tdep.c?ref=797439622361bc901ed64b398c0d689c97cd8121",
      "patch": "@@ -29,6 +29,8 @@\n static void\n vaxnbsd_elf_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n {\n+  nbsd_init_abi (info, gdbarch);\n+\n   /* NetBSD ELF uses SVR4-style shared libraries.  */\n   set_solib_svr4_fetch_link_map_offsets\n     (gdbarch, svr4_ilp32_fetch_link_map_offsets);"
    }
  ]
}