{
  "sha": "548c8b2ba71f5c93035028a32a596cca37c9b7cf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTQ4YzhiMmJhNzFmNWM5MzAzNTAyOGEzMmE1OTZjY2EzN2M5YjdjZg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-31T07:00:45Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-31T10:58:12Z"
    },
    "message": "PR26495 UBSAN: tc-score.c, tc-score7.c left shift of negative value\n\n\tPR 26495\n\t* config/tc-score.c (s3_apply_fix): Use unsigned variables.\n\t* config/tc-score7.c (s7_apply_fix): Likewise.",
    "tree": {
      "sha": "643987fe7a4b57292fee8951e36cf3c429ef80ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/643987fe7a4b57292fee8951e36cf3c429ef80ab"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/548c8b2ba71f5c93035028a32a596cca37c9b7cf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/548c8b2ba71f5c93035028a32a596cca37c9b7cf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/548c8b2ba71f5c93035028a32a596cca37c9b7cf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/548c8b2ba71f5c93035028a32a596cca37c9b7cf/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "51bf29b1f75b811f8b398543e164798244ec9cc3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51bf29b1f75b811f8b398543e164798244ec9cc3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/51bf29b1f75b811f8b398543e164798244ec9cc3"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 21,
    "deletions": 15
  },
  "files": [
    {
      "sha": "0d55433db368b33e261dac94e0c2154d8424b641",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/548c8b2ba71f5c93035028a32a596cca37c9b7cf/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/548c8b2ba71f5c93035028a32a596cca37c9b7cf/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=548c8b2ba71f5c93035028a32a596cca37c9b7cf",
      "patch": "@@ -1,3 +1,9 @@\n+2020-08-31  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26495\n+\t* config/tc-score.c (s3_apply_fix): Use unsigned variables.\n+\t* config/tc-score7.c (s7_apply_fix): Likewise.\n+\n 2020-08-31  Alan Modra  <amodra@gmail.com>\n \n \tPR 26480"
    },
    {
      "sha": "594905e82e7840a9df693a53224e39b8c1f718de",
      "filename": "gas/config/tc-score.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/548c8b2ba71f5c93035028a32a596cca37c9b7cf/gas/config/tc-score.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/548c8b2ba71f5c93035028a32a596cca37c9b7cf/gas/config/tc-score.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-score.c?ref=548c8b2ba71f5c93035028a32a596cca37c9b7cf",
      "patch": "@@ -7065,10 +7065,10 @@ s3_section_align (segT segment ATTRIBUTE_UNUSED, valueT size)\n static void\n s3_apply_fix (fixS *fixP, valueT *valP, segT seg)\n {\n-  offsetT value = *valP;\n-  offsetT newval;\n-  offsetT content;\n-  unsigned short HI, LO;\n+  valueT value = *valP;\n+  valueT newval;\n+  valueT content;\n+  valueT HI, LO;\n \n   char *buf = fixP->fx_frag->fr_literal + fixP->fx_where;\n \n@@ -7099,7 +7099,7 @@ s3_apply_fix (fixS *fixP, valueT *valP, segT seg)\n       if (fixP->fx_done)        /* For la rd, imm32.  */\n         {\n           newval = s3_md_chars_to_number (buf, s3_INSN_SIZE);\n-          HI = (value) >> 16;   /* mul to 2, then take the hi 16 bit.  */\n+          HI = value >> 16;   /* mul to 2, then take the hi 16 bit.  */\n           newval |= (HI & 0x3fff) << 1;\n           newval |= ((HI >> 14) & 0x3) << 16;\n           s3_md_number_to_chars (buf, newval, s3_INSN_SIZE);\n@@ -7109,7 +7109,7 @@ s3_apply_fix (fixS *fixP, valueT *valP, segT seg)\n       if (fixP->fx_done)        /* For la rd, imm32.  */\n         {\n           newval = s3_md_chars_to_number (buf, s3_INSN_SIZE);\n-          LO = (value) & 0xffff;\n+          LO = value & 0xffff;\n           newval |= (LO & 0x3fff) << 1; /* 16 bit: imm -> 14 bit in lo, 2 bit in hi.  */\n           newval |= ((LO >> 14) & 0x3) << 16;\n           s3_md_number_to_chars (buf, newval, s3_INSN_SIZE);"
    },
    {
      "sha": "36abcc83ae1bbb7fa6e62d6efa3fb463c982c70b",
      "filename": "gas/config/tc-score7.c",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/548c8b2ba71f5c93035028a32a596cca37c9b7cf/gas/config/tc-score7.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/548c8b2ba71f5c93035028a32a596cca37c9b7cf/gas/config/tc-score7.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-score7.c?ref=548c8b2ba71f5c93035028a32a596cca37c9b7cf",
      "patch": "@@ -6613,11 +6613,11 @@ s7_section_align (segT segment, valueT size)\n static void\n s7_apply_fix (fixS *fixP, valueT *valP, segT seg)\n {\n-  offsetT value = *valP;\n-  offsetT abs_value = 0;\n-  offsetT newval;\n-  offsetT content;\n-  unsigned short HI, LO;\n+  valueT value = *valP;\n+  valueT abs_value = 0;\n+  valueT newval;\n+  valueT content;\n+  valueT HI, LO;\n \n   char *buf = fixP->fx_frag->fr_literal + fixP->fx_where;\n \n@@ -6648,7 +6648,7 @@ s7_apply_fix (fixS *fixP, valueT *valP, segT seg)\n       if (fixP->fx_done)\n         {                       /* For la rd, imm32.  */\n           newval = s7_md_chars_to_number (buf, s7_INSN_SIZE);\n-          HI = (value) >> 16;   /* mul to 2, then take the hi 16 bit.  */\n+          HI = value >> 16;   /* mul to 2, then take the hi 16 bit.  */\n           newval |= (HI & 0x3fff) << 1;\n           newval |= ((HI >> 14) & 0x3) << 16;\n           s7_number_to_chars (buf, newval, s7_INSN_SIZE);\n@@ -6658,7 +6658,7 @@ s7_apply_fix (fixS *fixP, valueT *valP, segT seg)\n       if (fixP->fx_done)        /* For la rd, imm32.  */\n         {\n           newval = s7_md_chars_to_number (buf, s7_INSN_SIZE);\n-          LO = (value) & 0xffff;\n+          LO = value & 0xffff;\n           newval |= (LO & 0x3fff) << 1; /* 16 bit: imm -> 14 bit in lo, 2 bit in hi.  */\n           newval |= ((LO >> 14) & 0x3) << 16;\n           s7_number_to_chars (buf, newval, s7_INSN_SIZE);\n@@ -6668,7 +6668,7 @@ s7_apply_fix (fixS *fixP, valueT *valP, segT seg)\n       {\n         content = s7_md_chars_to_number (buf, s7_INSN_SIZE);\n         value = fixP->fx_offset;\n-        if (!(value >= 0 && value <= 0x1ffffff))\n+        if (value > 0x1ffffff)\n           {\n             as_bad_where (fixP->fx_file, fixP->fx_line,\n                           _(\"j or jl truncate (0x%x)  [0 ~ 2^25-1]\"), (unsigned int) value);\n@@ -6723,7 +6723,7 @@ s7_apply_fix (fixS *fixP, valueT *valP, segT seg)\n       content = s7_md_chars_to_number (buf, s7_INSN16_SIZE);\n       content &= 0xf001;\n       value = fixP->fx_offset;\n-      if (!(value >= 0 && value <= 0xfff))\n+      if (value > 0xfff)\n         {\n           as_bad_where (fixP->fx_file, fixP->fx_line,\n                         _(\"j! or jl! truncate (0x%x)  [0 ~ 2^12-1]\"), (unsigned int) value);"
    }
  ]
}