{
  "sha": "b56bf084434de08080875134e983f8b46eb2328f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjU2YmYwODQ0MzRkZTA4MDgwODc1MTM0ZTk4M2Y4YjQ2ZWIyMzI4Zg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2018-09-09T16:14:20Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-02-27T14:54:43Z"
    },
    "message": "gdb/bfin: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\nand gdbarch_unwind_pc.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* gdb/bfin-tdep.c (bfin_dummy_id): Delete.\n\t(bfin_unwind_pc): Delete.\n\t(bfin_gdbarch_init): Don't register deleted functions with gdbarch.",
    "tree": {
      "sha": "66082364f7eef0ceae4e87ad5691743fee818c78",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/66082364f7eef0ceae4e87ad5691743fee818c78"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b56bf084434de08080875134e983f8b46eb2328f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b56bf084434de08080875134e983f8b46eb2328f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b56bf084434de08080875134e983f8b46eb2328f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b56bf084434de08080875134e983f8b46eb2328f/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a19a650fcca359a02bfadb201c9b032ce7479525",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a19a650fcca359a02bfadb201c9b032ce7479525",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a19a650fcca359a02bfadb201c9b032ce7479525"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 6,
    "deletions": 18
  },
  "files": [
    {
      "sha": "4b4d33850dd1ed5823cb36022d9cc2f8548e1beb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b56bf084434de08080875134e983f8b46eb2328f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b56bf084434de08080875134e983f8b46eb2328f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b56bf084434de08080875134e983f8b46eb2328f",
      "patch": "@@ -1,3 +1,9 @@\n+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb/bfin-tdep.c (bfin_dummy_id): Delete.\n+\t(bfin_unwind_pc): Delete.\n+\t(bfin_gdbarch_init): Don't register deleted functions with gdbarch.\n+\n 2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb/arm-tdep.c (arm_dummy_id): Delete."
    },
    {
      "sha": "9d3e8ebce164e41be97acc9fad903077512c6ce8",
      "filename": "gdb/bfin-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 18,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b56bf084434de08080875134e983f8b46eb2328f/gdb/bfin-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b56bf084434de08080875134e983f8b46eb2328f/gdb/bfin-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bfin-tdep.c?ref=b56bf084434de08080875134e983f8b46eb2328f",
      "patch": "@@ -756,22 +756,6 @@ static const struct frame_base bfin_frame_base =\n   bfin_frame_args_address\n };\n \n-static struct frame_id\n-bfin_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  CORE_ADDR sp;\n-\n-  sp = get_frame_register_unsigned (this_frame, BFIN_SP_REGNUM);\n-\n-  return frame_id_build (sp, get_frame_pc (this_frame));\n-}\n-\n-static CORE_ADDR\n-bfin_unwind_pc (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, BFIN_PC_REGNUM);\n-}\n-\n static CORE_ADDR\n bfin_frame_align (struct gdbarch *gdbarch, CORE_ADDR address)\n {\n@@ -826,7 +810,6 @@ bfin_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   set_gdbarch_dwarf2_reg_to_regnum (gdbarch, bfin_reg_to_regnum);\n   set_gdbarch_register_name (gdbarch, bfin_register_name);\n   set_gdbarch_register_type (gdbarch, bfin_register_type);\n-  set_gdbarch_dummy_id (gdbarch, bfin_dummy_id);\n   set_gdbarch_push_dummy_call (gdbarch, bfin_push_dummy_call);\n   set_gdbarch_believe_pcc_promotion (gdbarch, 1);\n   set_gdbarch_return_value (gdbarch, bfin_return_value);\n@@ -836,7 +819,6 @@ bfin_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   set_gdbarch_sw_breakpoint_from_kind (gdbarch, bfin_sw_breakpoint_from_kind);\n   set_gdbarch_decr_pc_after_break (gdbarch, 2);\n   set_gdbarch_frame_args_skip (gdbarch, 8);\n-  set_gdbarch_unwind_pc (gdbarch, bfin_unwind_pc);\n   set_gdbarch_frame_align (gdbarch, bfin_frame_align);\n \n   /* Hook in ABI-specific overrides, if they have been registered.  */"
    }
  ]
}