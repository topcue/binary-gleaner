{
  "sha": "1b7a07cba0aa096c2eb66895ef339aa5143e9995",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWI3YTA3Y2JhMGFhMDk2YzJlYjY2ODk1ZWYzMzlhYTUxNDNlOTk5NQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-03-02T02:55:46Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-03-15T22:02:08Z"
    },
    "message": "Use bitset for demangled_hash_languages\n\nI noticed that objfile_per_bfd_storage::demangled_hash_languages is a\nstd::vector, which seemed quite large for something that,\nfundamentally, can be represented as a bitset.  This patch\nreimplements it as a std::bitset.\n\ngdb/ChangeLog\n2019-03-15  Tom Tromey  <tom@tromey.com>\n\n\t* objfiles.h (struct objfile_per_bfd_storage)\n\t<demangled_hash_languages>: Now a bitset.\n\t* minsyms.c (add_minsym_to_demangled_hash_table): Update.\n\t(lookup_minimal_symbol): Update.",
    "tree": {
      "sha": "817c4e8fe6ceb3e62133833a2c40cf58e4f5f629",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/817c4e8fe6ceb3e62133833a2c40cf58e4f5f629"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1b7a07cba0aa096c2eb66895ef339aa5143e9995",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1b7a07cba0aa096c2eb66895ef339aa5143e9995",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1b7a07cba0aa096c2eb66895ef339aa5143e9995",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1b7a07cba0aa096c2eb66895ef339aa5143e9995/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3db066bcd5bac9a8d6be85ea4cfa8f52dbdcc600",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3db066bcd5bac9a8d6be85ea4cfa8f52dbdcc600",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3db066bcd5bac9a8d6be85ea4cfa8f52dbdcc600"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 21,
    "deletions": 11
  },
  "files": [
    {
      "sha": "867df1788399145bb4520c9942bcfe1a5e3c957f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1b7a07cba0aa096c2eb66895ef339aa5143e9995/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1b7a07cba0aa096c2eb66895ef339aa5143e9995/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1b7a07cba0aa096c2eb66895ef339aa5143e9995",
      "patch": "@@ -1,3 +1,10 @@\n+2019-03-15  Tom Tromey  <tom@tromey.com>\n+\n+\t* objfiles.h (struct objfile_per_bfd_storage)\n+\t<demangled_hash_languages>: Now a bitset.\n+\t* minsyms.c (add_minsym_to_demangled_hash_table): Update.\n+\t(lookup_minimal_symbol): Update.\n+\n 2019-03-15  Tom Tromey  <tom@tromey.com>\n \n \t* minsyms.h (class minimal_symbol_reader) <record_with_info>:"
    },
    {
      "sha": "cbb45f141c98543acdfe74f02027ad62072b38f1",
      "filename": "gdb/minsyms.c",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1b7a07cba0aa096c2eb66895ef339aa5143e9995/gdb/minsyms.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1b7a07cba0aa096c2eb66895ef339aa5143e9995/gdb/minsyms.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/minsyms.c?ref=1b7a07cba0aa096c2eb66895ef339aa5143e9995",
      "patch": "@@ -160,11 +160,7 @@ add_minsym_to_demangled_hash_table (struct minimal_symbol *sym,\n       unsigned int hash = search_name_hash (MSYMBOL_LANGUAGE (sym),\n \t\t\t\t\t    MSYMBOL_SEARCH_NAME (sym));\n \n-      auto &vec = objfile->per_bfd->demangled_hash_languages;\n-      auto it = std::lower_bound (vec.begin (), vec.end (),\n-\t\t\t\t  MSYMBOL_LANGUAGE (sym));\n-      if (it == vec.end () || *it != MSYMBOL_LANGUAGE (sym))\n-\tvec.insert (it, MSYMBOL_LANGUAGE (sym));\n+      objfile->per_bfd->demangled_hash_languages.set (MSYMBOL_LANGUAGE (sym));\n \n       struct minimal_symbol **table\n \t= objfile->per_bfd->msymbol_demangled_hash;\n@@ -354,8 +350,12 @@ lookup_minimal_symbol (const char *name, const char *sfile,\n \t    {\n \t      /* Once for each language in the demangled hash names\n \t\t table (usually just zero or one languages).  */\n-\t      for (auto lang : objfile->per_bfd->demangled_hash_languages)\n+\t      for (unsigned iter = 0; iter < nr_languages; ++iter)\n \t\t{\n+\t\t  if (!objfile->per_bfd->demangled_hash_languages.test (iter))\n+\t\t    continue;\n+\t\t  enum language lang = (enum language) iter;\n+\n \t\t  unsigned int hash\n \t\t    = (lookup_name.search_name_hash (lang)\n \t\t       % MINIMAL_SYMBOL_HASH_SIZE);\n@@ -497,8 +497,12 @@ iterate_over_minimal_symbols\n   /* The second pass is over the demangled table.  Once for each\n      language in the demangled hash names table (usually just zero or\n      one).  */\n-  for (auto lang : objf->per_bfd->demangled_hash_languages)\n+  for (unsigned liter = 0; liter < nr_languages; ++liter)\n     {\n+      if (!objf->per_bfd->demangled_hash_languages.test (liter))\n+\tcontinue;\n+\n+      enum language lang = (enum language) liter;\n       const language_defn *lang_def = language_def (lang);\n       symbol_name_matcher_ftype *name_match\n \t= get_symbol_name_matcher (lang_def, lookup_name);"
    },
    {
      "sha": "47df0023dcc08c80227926d37321ff2f214780eb",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1b7a07cba0aa096c2eb66895ef339aa5143e9995/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1b7a07cba0aa096c2eb66895ef339aa5143e9995/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=1b7a07cba0aa096c2eb66895ef339aa5143e9995",
      "patch": "@@ -28,6 +28,7 @@\n #include \"registry.h\"\n #include \"gdb_bfd.h\"\n #include \"psymtab.h\"\n+#include <bitset>\n #include <vector>\n #include \"common/next-iterator.h\"\n #include \"common/safe-iterator.h\"\n@@ -313,10 +314,8 @@ struct objfile_per_bfd_storage\n   minimal_symbol *msymbol_demangled_hash[MINIMAL_SYMBOL_HASH_SIZE] {};\n \n   /* All the different languages of symbols found in the demangled\n-     hash table.  A flat/vector-based map is more efficient than a map\n-     or hash table here, since this will only usually contain zero or\n-     one entries.  */\n-  std::vector<enum language> demangled_hash_languages;\n+     hash table.  */\n+  std::bitset<nr_languages> demangled_hash_languages;\n };\n \n /* Master structure for keeping track of each file from which"
    }
  ]
}