{
  "sha": "937af0fde5cf532c7f3958662525c45d46edd047",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTM3YWYwZmRlNWNmNTMyYzdmMzk1ODY2MjUyNWM0NWQ0NmVkZDA0Nw==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2016-01-22T03:34:05Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-17T04:58:32Z"
    },
    "message": "sim: avr: invert sim_state storage",
    "tree": {
      "sha": "7f52b91fd866d77d71339e71845e79c38097be66",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7f52b91fd866d77d71339e71845e79c38097be66"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/937af0fde5cf532c7f3958662525c45d46edd047",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/937af0fde5cf532c7f3958662525c45d46edd047",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/937af0fde5cf532c7f3958662525c45d46edd047",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/937af0fde5cf532c7f3958662525c45d46edd047/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e106fc358c217f8f1e09cfdd383f564178c8f5eb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e106fc358c217f8f1e09cfdd383f564178c8f5eb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e106fc358c217f8f1e09cfdd383f564178c8f5eb"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 23,
    "deletions": 11
  },
  "files": [
    {
      "sha": "a93bd599db026f9d07277a7aa390352e14179796",
      "filename": "sim/avr/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/937af0fde5cf532c7f3958662525c45d46edd047/sim/avr/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/937af0fde5cf532c7f3958662525c45d46edd047/sim/avr/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/ChangeLog?ref=937af0fde5cf532c7f3958662525c45d46edd047",
      "patch": "@@ -1,3 +1,14 @@\n+2021-05-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (do_call): Change sd to avr_sim_state.\n+\t(step_once): Likewise.\n+\t(sim_open): Likewise.\n+\t(sim_create_inferior): Likewise.\n+\t* sim-main.h (SIM_HAVE_COMMON_SIM_STATE): Define.\n+\t(struct sim_state): Delete.\n+\t(struct avr_sim_state): New struct.\n+\t(AVR_SIM_STATE): Define.\n+\n 2021-05-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c: Replace config.h include with defs.h."
    },
    {
      "sha": "d456c39390a76303450240600e87d2c251ccefe7",
      "filename": "sim/avr/interp.c",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/937af0fde5cf532c7f3958662525c45d46edd047/sim/avr/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/937af0fde5cf532c7f3958662525c45d46edd047/sim/avr/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/interp.c?ref=937af0fde5cf532c7f3958662525c45d46edd047",
      "patch": "@@ -727,13 +727,13 @@ decode (unsigned int pc)\n static void\n do_call (SIM_CPU *cpu, unsigned int npc)\n {\n-  SIM_DESC sd = CPU_STATE (cpu);\n+  const struct avr_sim_state *state = AVR_SIM_STATE (CPU_STATE (cpu));\n   unsigned int sp = read_word (REG_SP);\n \n   /* Big endian!  */\n   sram[sp--] = cpu->pc;\n   sram[sp--] = cpu->pc >> 8;\n-  if (sd->avr_pc22)\n+  if (state->avr_pc22)\n     {\n       sram[sp--] = cpu->pc >> 16;\n       cpu->cycles++;\n@@ -893,9 +893,9 @@ step_once (SIM_CPU *cpu)\n \t/* Fall through */\n       case OP_ret:\n \t{\n-\t  SIM_DESC sd = CPU_STATE (cpu);\n+\t  const struct avr_sim_state *state = AVR_SIM_STATE (CPU_STATE (cpu));\n \t  unsigned int sp = read_word (REG_SP);\n-\t  if (sd->avr_pc22)\n+\t  if (state->avr_pc22)\n \t    {\n \t      cpu->pc = sram[++sp] << 16;\n \t      cpu->cycles++;\n@@ -1681,7 +1681,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n \t  struct bfd *abfd, char * const *argv)\n {\n   int i;\n-  SIM_DESC sd = sim_state_alloc (kind, cb);\n+  SIM_DESC sd = sim_state_alloc_extra (kind, cb, sizeof (struct avr_sim_state));\n   SIM_ASSERT (STATE_MAGIC (sd) == SIM_MAGIC_NUMBER);\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n@@ -1752,6 +1752,7 @@ SIM_RC\n sim_create_inferior (SIM_DESC sd, struct bfd *abfd,\n \t\t     char * const *argv, char * const *env)\n {\n+  struct avr_sim_state *state = AVR_SIM_STATE (sd);\n   SIM_CPU *cpu = STATE_CPU (sd, 0);\n   SIM_ADDR addr;\n \n@@ -1763,7 +1764,7 @@ sim_create_inferior (SIM_DESC sd, struct bfd *abfd,\n   sim_pc_set (cpu, addr);\n \n   if (abfd != NULL)\n-    sd->avr_pc22 = (bfd_get_mach (abfd) >= bfd_mach_avr6);\n+    state->avr_pc22 = (bfd_get_mach (abfd) >= bfd_mach_avr6);\n \n   return SIM_RC_OK;\n }"
    },
    {
      "sha": "4f18882ae466fd95c69f47fb516a74a3540f4c42",
      "filename": "sim/avr/sim-main.h",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/937af0fde5cf532c7f3958662525c45d46edd047/sim/avr/sim-main.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/937af0fde5cf532c7f3958662525c45d46edd047/sim/avr/sim-main.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/sim-main.h?ref=937af0fde5cf532c7f3958662525c45d46edd047",
      "patch": "@@ -19,6 +19,8 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n #ifndef SIM_MAIN_H\n #define SIM_MAIN_H\n \n+#define SIM_HAVE_COMMON_SIM_STATE\n+\n #include \"sim-basics.h\"\n \n #include \"sim-base.h\"\n@@ -33,13 +35,11 @@ struct _sim_cpu {\n   sim_cpu_base base;\n };\n \n-struct sim_state {\n-  sim_cpu *cpu[MAX_NR_PROCESSORS];\n-\n+struct avr_sim_state {\n   /* If true, the pc needs more than 2 bytes.  */\n   int avr_pc22;\n-\n-  sim_state_base base;\n };\n \n+#define AVR_SIM_STATE(sd) ((struct avr_sim_state *) STATE_ARCH_DATA (sd))\n+\n #endif"
    }
  ]
}