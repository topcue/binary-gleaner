{
  "sha": "063f8e80b0858f3dfc27f7f5bbc3ffb1967095bc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDYzZjhlODBiMDg1OGYzZGZjMjdmN2Y1YmJjM2ZmYjE5NjcwOTViYw==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-04-06T18:08:46Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-04-07T17:12:03Z"
    },
    "message": "Define NetBSD specific skip_solib_resolver\n\ngdb/ChangeLog:\n\n\t* nbsd-tdep.c: Include \"objfiles.h\".\n\t(nbsd_skip_solib_resolver): New.\n\t(nbsd_init_abi): Call set_gdbarch_skip_solib_resolver().",
    "tree": {
      "sha": "5a00bfc6d39013aebdcc7927aaedd261ef419166",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5a00bfc6d39013aebdcc7927aaedd261ef419166"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/063f8e80b0858f3dfc27f7f5bbc3ffb1967095bc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/063f8e80b0858f3dfc27f7f5bbc3ffb1967095bc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/063f8e80b0858f3dfc27f7f5bbc3ffb1967095bc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/063f8e80b0858f3dfc27f7f5bbc3ffb1967095bc/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "85a9510ccbe8d897471cdd4f25a475329ae24498",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/85a9510ccbe8d897471cdd4f25a475329ae24498",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/85a9510ccbe8d897471cdd4f25a475329ae24498"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 22,
    "deletions": 0
  },
  "files": [
    {
      "sha": "255262a2f27cf442044f2c4d74a082828a8c1996",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/063f8e80b0858f3dfc27f7f5bbc3ffb1967095bc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/063f8e80b0858f3dfc27f7f5bbc3ffb1967095bc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=063f8e80b0858f3dfc27f7f5bbc3ffb1967095bc",
      "patch": "@@ -1,3 +1,9 @@\n+2020-04-07  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* nbsd-tdep.c: Include \"objfiles.h\".\n+\t(nbsd_skip_solib_resolver): New.\n+\t(nbsd_init_abi): Call set_gdbarch_skip_solib_resolver().\n+\n 2020-04-07  Nitika Achra  <Nitika.Achra@amd.com>\n \n \t* dwarf2/loc.c (loclist_describe_location): Call the function decode_debug_loclists_"
    },
    {
      "sha": "1d7230feef84dd2bfc21f448579bc94d31a907e8",
      "filename": "gdb/nbsd-tdep.c",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/063f8e80b0858f3dfc27f7f5bbc3ffb1967095bc/gdb/nbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/063f8e80b0858f3dfc27f7f5bbc3ffb1967095bc/gdb/nbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nbsd-tdep.c?ref=063f8e80b0858f3dfc27f7f5bbc3ffb1967095bc",
      "patch": "@@ -23,6 +23,7 @@\n #include \"solib-svr4.h\"\n #include \"nbsd-tdep.h\"\n #include \"gdbarch.h\"\n+#include \"objfiles.h\"\n \n /* FIXME: kettenis/20060115: We should really eliminate the next two\n    functions completely.  */\n@@ -339,11 +340,26 @@ nbsd_gdb_signal_to_target (struct gdbarch *gdbarch,\n   return -1;\n }\n \n+/* Shared library resolver handling.  */\n+\n+static CORE_ADDR\n+nbsd_skip_solib_resolver (struct gdbarch *gdbarch, CORE_ADDR pc)\n+{\n+  struct bound_minimal_symbol msym;\n+\n+  msym = lookup_minimal_symbol (\"_rtld_bind_start\", NULL, NULL);\n+  if (msym.minsym && BMSYMBOL_VALUE_ADDRESS (msym) == pc)\n+    return frame_unwind_caller_pc (get_current_frame ());\n+  else\n+    return find_solib_trampoline_target (get_current_frame (), pc);\n+}\n+\n /* See nbsd-tdep.h.  */\n \n void\n nbsd_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n {\n   set_gdbarch_gdb_signal_from_target (gdbarch, nbsd_gdb_signal_from_target);\n   set_gdbarch_gdb_signal_to_target (gdbarch, nbsd_gdb_signal_to_target);\n+  set_gdbarch_skip_solib_resolver (gdbarch, nbsd_skip_solib_resolver);\n }"
    }
  ]
}