{
  "sha": "acd6125f01dc9ba76423b7062c26ca16562943cf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWNkNjEyNWYwMWRjOWJhNzY0MjNiNzA2MmMyNmNhMTY1NjI5NDNjZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-01-25T14:38:21Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-01-25T14:38:21Z"
    },
    "message": "Add test case for symbol menu for local enumerators\n\nAda will normally present a menu to the user to allow manual\ndisambiguation of symbols.  The AdaCore internal GDB had a bug that\nprevented this from happening.  Although this bug is not in the FSF\nGDB, it seemed worthwhile to write a test case to ensure this.\n\ngdb/testsuite/ChangeLog\n2021-01-25  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/local-enum.exp: New file.\n\t* gdb.ada/local-enum/local.adb: New file.",
    "tree": {
      "sha": "508bad8ab5fcde8390e597e264254f55e345c2d9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/508bad8ab5fcde8390e597e264254f55e345c2d9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/acd6125f01dc9ba76423b7062c26ca16562943cf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/acd6125f01dc9ba76423b7062c26ca16562943cf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/acd6125f01dc9ba76423b7062c26ca16562943cf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/acd6125f01dc9ba76423b7062c26ca16562943cf/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9e42b97628f96d8c7f59890e368ddf3a0bd8c811",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e42b97628f96d8c7f59890e368ddf3a0bd8c811",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9e42b97628f96d8c7f59890e368ddf3a0bd8c811"
    }
  ],
  "stats": {
    "total": 116,
    "additions": 116,
    "deletions": 0
  },
  "files": [
    {
      "sha": "5789500167c74dce571262bb4edb631ab7eaf039",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acd6125f01dc9ba76423b7062c26ca16562943cf/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acd6125f01dc9ba76423b7062c26ca16562943cf/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=acd6125f01dc9ba76423b7062c26ca16562943cf",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-25  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/local-enum.exp: New file.\n+\t* gdb.ada/local-enum/local.adb: New file.\n+\n 2021-01-23  Tom Tromey  <tom@tromey.com>\n \n \t* lib/gdb.exp (default_gdb_init): Set INPUTRC to a cached file."
    },
    {
      "sha": "32daf9a0d96d1c5ac5657a227a92e697694a5d48",
      "filename": "gdb/testsuite/gdb.ada/local-enum.exp",
      "status": "added",
      "additions": 83,
      "deletions": 0,
      "changes": 83,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acd6125f01dc9ba76423b7062c26ca16562943cf/gdb/testsuite/gdb.ada/local-enum.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acd6125f01dc9ba76423b7062c26ca16562943cf/gdb/testsuite/gdb.ada/local-enum.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/local-enum.exp?ref=acd6125f01dc9ba76423b7062c26ca16562943cf",
      "patch": "@@ -0,0 +1,83 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+load_lib \"ada.exp\"\n+\n+if { [skip_ada_tests] } { return -1 }\n+\n+standard_ada_testfile local\n+\n+if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable debug] != \"\"} {\n+  return -1\n+}\n+\n+clean_restart ${testfile}\n+\n+set bp_location [gdb_get_line_number \"STOP\" ${testdir}/local.adb]\n+if ![runto \"local.adb:$bp_location\" ] then {\n+  perror \"Couldn't run ${testfile}\"\n+  return\n+}\n+\n+# The test has two constants named 'three', with different values.\n+# This prints one of them and checks the value.  WHICH_ENUM is the\n+# name of the enum, either \"e1\" or \"e2\".\n+proc print_three {which_enum value} {\n+    # We don't know which in order gdb will print the constants, so\n+    # adapt to either.\n+    set menu1 [multi_line \\\n+\t\t   \"Multiple matches for three\" \\\n+\t\t   \"\\\\\\[0\\\\\\] cancel\" \\\n+\t\t   \"\\\\\\[1\\\\\\] local\\\\.e2'\\\\(three\\\\) \\\\(enumeral\\\\)\" \\\n+\t\t   \"\\\\\\[2\\\\\\] local\\\\.e1'\\\\(three\\\\) \\\\(enumeral\\\\)\" \\\n+\t\t   \"> $\"]\n+    set menu2 [multi_line \\\n+\t\t   \"Multiple matches for three\" \\\n+\t\t   \"\\\\\\[0\\\\\\] cancel\" \\\n+\t\t   \"\\\\\\[1\\\\\\] local\\\\.e1'\\\\(three\\\\) \\\\(enumeral\\\\)\" \\\n+\t\t   \"\\\\\\[2\\\\\\] local\\\\.e2'\\\\(three\\\\) \\\\(enumeral\\\\)\" \\\n+\t\t   \"> $\"]\n+\n+    set index -1\n+    set test_name \"menu for test index $which_enum\"\n+    gdb_test_multiple \"print/d three\" $test_name {\n+\t-re $menu1 {\n+\t    pass $test_name\n+\t    if {$which_enum == \"e1\"} {\n+\t\tset index 2\n+\t    } else {\n+\t\tset index 1\n+\t    }\n+\t}\n+\t-re $menu2 {\n+\t    pass $test_name\n+\t    if {$which_enum == \"e1\"} {\n+\t\tset index 1\n+\t    } else {\n+\t\tset index 2\n+\t    }\n+\t}\n+\tdefault {\n+\t    fail $test_name\n+\t}\n+    }\n+\n+    if {$index != -1} {\n+\tgdb_test $index \" = $value\"\n+    }\n+}\n+\n+print_three e2 0\n+print_three e1 2"
    },
    {
      "sha": "9fafbb151fa8423757967e2562cbc6904bef0cab",
      "filename": "gdb/testsuite/gdb.ada/local-enum/local.adb",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acd6125f01dc9ba76423b7062c26ca16562943cf/gdb/testsuite/gdb.ada/local-enum/local.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acd6125f01dc9ba76423b7062c26ca16562943cf/gdb/testsuite/gdb.ada/local-enum/local.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/local-enum/local.adb?ref=acd6125f01dc9ba76423b7062c26ca16562943cf",
      "patch": "@@ -0,0 +1,28 @@\n+--  Copyright 2021 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+procedure Local is\n+  type E1 is (one, two, three);\n+  type E2 is (three, four, five);\n+\n+  type A1 is array (E1) of Integer;\n+  type A2 is array (E2) of Integer;\n+\n+  V1 : A1 := (0, 1, 2);\n+  V2 : A2 := (3, 4, 5);\n+\n+begin\n+  null; -- STOP\n+end Local;"
    }
  ]
}