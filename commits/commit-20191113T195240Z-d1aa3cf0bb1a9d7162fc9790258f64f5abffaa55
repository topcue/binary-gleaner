{
  "sha": "d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDFhYTNjZjBiYjFhOWQ3MTYyZmM5NzkwMjU4ZjY0ZjVhYmZmYWE1NQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-11-11T14:43:13Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-11-13T19:52:40Z"
    },
    "message": "Remove symbol-related static asserts\n\ncommit 3573abe1d added static asserts to ensure that symbol sizes\ndon't vary.  However, this failed to build on Windows, on at least one\nARM platform (see PR build/25182) and internally at AdaCore for PPC.\n\nSo, I think it is probably best to just remove these assertions,\neffectively reverting 3573abe1d.\n\ngdb/ChangeLog\n2019-11-13  Tom Tromey  <tromey@adacore.com>\n\n\tPR build/25182:\n\t* psympriv.h (partial_symbol): Remove static assert.\n\t* symtab.h (general_symbol_info, symbol): Remove static assert.\n\nChange-Id: I51940fb2240c474838b48494b5072081701789bb",
    "tree": {
      "sha": "c9ceeb405e96fc61434e2a6de03463f14146b2d5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c9ceeb405e96fc61434e2a6de03463f14146b2d5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "415ed2a17588f855397cc2d03aa68a79e84f77f7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/415ed2a17588f855397cc2d03aa68a79e84f77f7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/415ed2a17588f855397cc2d03aa68a79e84f77f7"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 6,
    "deletions": 19
  },
  "files": [
    {
      "sha": "be4c5a51f1360041cfdee269f3ef46a4604ba597",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55",
      "patch": "@@ -1,3 +1,9 @@\n+2019-11-13  Tom Tromey  <tromey@adacore.com>\n+\n+\tPR build/25182:\n+\t* psympriv.h (partial_symbol): Remove static assert.\n+\t* symtab.h (general_symbol_info, symbol): Remove static assert.\n+\n 2019-11-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdbsupport/format.c (format_pieces::format_pieces): Support"
    },
    {
      "sha": "19d692bd230e7019481d1deb9f480d00e755af6d",
      "filename": "gdb/psympriv.h",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55/gdb/psympriv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55/gdb/psympriv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psympriv.h?ref=d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55",
      "patch": "@@ -82,12 +82,6 @@ struct partial_symbol\n   ENUM_BITFIELD(address_class) aclass : SYMBOL_ACLASS_BITS;\n };\n \n-/* This struct is size-critical (see comment at the to of symtab.h), so this\n-   assert makes sure the size doesn't change accidentally.  Be careful when\n-   purposely increasing the size.  */\n-gdb_static_assert ((sizeof (void *) == 8 && sizeof (partial_symbol) == 40)\n-\t\t   || (sizeof (void *) == 4 && sizeof (partial_symbol) == 24));\n-\n /* A convenience enum to give names to some constants used when\n    searching psymtabs.  This is internal to psymtab and should not be\n    used elsewhere.  */"
    },
    {
      "sha": "a6bd3c44b806fd323b79c5452d3153ac443f96af",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=d1aa3cf0bb1a9d7162fc9790258f64f5abffaa55",
      "patch": "@@ -447,13 +447,6 @@ struct general_symbol_info\n   short section;\n };\n \n-/* This struct is size-critical (see comment at the top), so this assert\n-   makes sure the size doesn't change accidentally.  Be careful when\n-   purposely increasing the size.  */\n-gdb_static_assert ((sizeof (void *) == 8 && sizeof (general_symbol_info) == 32)\n-\t\t   || (sizeof (void *) == 4\n-\t\t       && sizeof (general_symbol_info) == 20));\n-\n extern void symbol_set_demangled_name (struct general_symbol_info *,\n \t\t\t\t       const char *,\n                                        struct obstack *);\n@@ -1204,12 +1197,6 @@ struct symbol : public general_symbol_info, public allocate_on_obstack\n   struct symbol *hash_next = nullptr;\n };\n \n-/* This struct is size-critical (see comment at the top), so this assert\n-   makes sure the size doesn't change accidentally.  Be careful when\n-   purposely increasing the size.  */\n-gdb_static_assert ((sizeof (void *) == 8 && sizeof (symbol) == 72)\n-\t\t   || (sizeof (void *) == 4 && sizeof (symbol) == 40));\n-\n /* Several lookup functions return both a symbol and the block in which the\n    symbol is found.  This structure is used in these cases.  */\n "
    }
  ]
}