{
  "sha": "3dfb1b6d34ec74160735230f606b1df55c917f9d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2RmYjFiNmQzNGVjNzQxNjA3MzUyMzBmNjA2YjFkZjU1YzkxN2Y5ZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-30T23:37:02Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-31T00:19:23Z"
    },
    "message": "Remove bfd_stdint.h\n\nIf we require C99 for binutils then stdint.h is available.\n\nbfd/\n\t* .gitignore: Delete bfd_stdint.h entry.\n\t* Makefile.am (bfdinclude_HEADERS): Delete bfd_stdint.h.\n\t(BUILD_HFILES, LOCAL_H_DEPS): Likewise.\n\t* bfd-in.h: Include stdint.h in place of bfd_stdint.h.\n\t* configure.ac: Don't invoke GCC_HEADER_STDINT.\n\t* configure.com: Don't create bfd_stdint.h.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* bfd-in2.h: Regenerate.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\n\t* doc/Makefile.in: Regenerate.\n\t* po/BLD-POTFILES.in: Regenerate.\nbinutils/\n\t* coffdump.c: Include stdint.h in place of bfd_stdint.h.\n\t* dwarf.c: Likewise.\ngas/\n\t* config/tc-aarch64.c: Include stdint.h in place of bfd_stdint.h.\n\t* config/tc-crx.c: Likewise.\n\t* config/tc-nds32.h: Likewise.\ninclude/\n\t* cgen/basic-modes.h: Include stdint.h in place of bfd_stdint.h.\n\t* elf/nfp.h: Likewise.\n\t* opcode/aarch64.h: Likewise.\n\t* opcode/cgen.h: Likewise.\n\t* opcode/nfp.h: Likewise.\n\t* opcode/ppc.h: Likewise.\nld/\n\t* elf-hints-local.h: Include stdint.h in place of bfd_stdint.h.\n\t* emultempl/nds32elf.em: Likewise.\n\t* testsuite/ld-elf/mbind2b.c: Likewise.\n\t* testsuite/ld-elf/pr18718.c: Likewise.\n\t* testsuite/ld-elf/pr18720a.c: Likewise.\n\t* testsuite/ld-elf/pr25749-1.c: Likewise.\n\t* testsuite/ld-elf/pr25749-1a.c: Likewise.\n\t* testsuite/ld-elf/pr25749-1b.c: Likewise.\n\t* testsuite/ld-elf/pr25749-1c.c: Likewise.\n\t* testsuite/ld-elf/pr25749-1d.c: Likewise.\n\t* testsuite/ld-elf/pr25749-2.c: Likewise.\n\t* testsuite/ld-elf/pr25754-1a.c: Likewise.\n\t* testsuite/ld-elf/pr25754-2a.c: Likewise.\n\t* testsuite/ld-elf/pr25754-3a.c: Likewise.\n\t* testsuite/ld-elf/pr25754-4a.c: Likewise.\n\t* testsuite/ld-elf/pr25754-5a.c: Likewise.\n\t* testsuite/ld-elf/pr25754-6a.c: Likewise.\nopcodes/\n\t* aarch64-dis.c: Include stdint.h in place of bfd_stdint.h.\n\t* aarch64-dis.h: Likewise.\n\t* aarch64-opc.c: Likewise.\n\t* avr-dis.c: Likewise.\n\t* csky-dis.c: Likewise.\n\t* nds32-asm.c: Likewise.\n\t* nds32-dis.c: Likewise.\n\t* nfp-dis.c: Likewise.\n\t* riscv-dis.c: Likewise.\n\t* s12z-dis.c: Likewise.\n\t* wasm32-dis.c: Likewise.",
    "tree": {
      "sha": "f57dd7b40fa1c58c7faa28759de43ca12ca48910",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f57dd7b40fa1c58c7faa28759de43ca12ca48910"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3dfb1b6d34ec74160735230f606b1df55c917f9d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3dfb1b6d34ec74160735230f606b1df55c917f9d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3dfb1b6d34ec74160735230f606b1df55c917f9d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3dfb1b6d34ec74160735230f606b1df55c917f9d/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "57ae980e3290c0c1a9fb4a93144cc5b24457f05a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/57ae980e3290c0c1a9fb4a93144cc5b24457f05a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/57ae980e3290c0c1a9fb4a93144cc5b24457f05a"
    }
  ],
  "stats": {
    "total": 990,
    "additions": 123,
    "deletions": 867
  },
  "files": [
    {
      "sha": "0a5530d128a7204d4619ea9e95430ae37d532a81",
      "filename": "bfd/.gitignore",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/.gitignore",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/.gitignore",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/.gitignore?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,6 +1,5 @@\n /bfd-in3.h\n /bfd.h\n-/bfd_stdint.h\n /bfdver.h\n /elf32-ia64.c\n /elf32-target.h"
    },
    {
      "sha": "58ddab03c02e47e821d6a54514d9660d9f5b01b4",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,3 +1,19 @@\n+2021-03-31  Alan Modra  <amodra@gmail.com>\n+\n+\t* .gitignore: Delete bfd_stdint.h entry.\n+\t* Makefile.am (bfdinclude_HEADERS): Delete bfd_stdint.h.\n+\t(BUILD_HFILES, LOCAL_H_DEPS): Likewise.\n+\t* bfd-in.h: Include stdint.h in place of bfd_stdint.h.\n+\t* configure.ac: Don't invoke GCC_HEADER_STDINT.\n+\t* configure.com: Don't create bfd_stdint.h.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* bfd-in2.h: Regenerate.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* doc/Makefile.in: Regenerate.\n+\t* po/BLD-POTFILES.in: Regenerate.\n+\n 2021-03-31  Alan Modra  <amodra@gmail.com>\n \n \t* bfd-in.h: Include string.h."
    },
    {
      "sha": "ed2f701805dfd8327d836d3e3f4e48d19a1b15c2",
      "filename": "bfd/Makefile.am",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/Makefile.am?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -33,7 +33,7 @@ bfdlibdir = @bfdlibdir@\n bfdincludedir = @bfdincludedir@\n bfdlib_LTLIBRARIES = libbfd.la\n bfdinclude_HEADERS = $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \\\n-\t\t     bfd_stdint.h $(INCDIR)/diagnostics.h $(INCDIR)/bfdlink.h\n+\t\t     $(INCDIR)/diagnostics.h $(INCDIR)/bfdlink.h\n else !INSTALL_LIBBFD\n # Empty these so that the respective installation directories will not be created.\n bfdlibdir =\n@@ -700,7 +700,7 @@ SOURCE_HFILES = \\\n \n ## ... and .h files which are in the build tree, minus config.h and bfd.h\n BUILD_HFILES = \\\n-\tbfdver.h elf32-target.h elf64-target.h targmatch.h bfd_stdint.h\n+\tbfdver.h elf32-target.h elf64-target.h targmatch.h\n \n # Ensure they are built early:\n BUILT_SOURCES = $(BUILD_HFILES)\n@@ -863,7 +863,7 @@ pex64igen.c: peXXigen.c\n \t$(SED) -e s/XX/pex64/g < $< >> $@\n \n BFD_H_DEPS= $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/diagnostics.h\n-LOCAL_H_DEPS= libbfd.h sysdep.h config.h bfd_stdint.h\n+LOCAL_H_DEPS= libbfd.h sysdep.h config.h\n $(BFD32_LIBS) \\\n  $(BFD64_LIBS) \\\n  $(ALL_MACHINES) \\"
    },
    {
      "sha": "12807d9976022ffcb1d16ef7eb209dc9a20eb148",
      "filename": "bfd/Makefile.in",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/Makefile.in?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -124,7 +124,6 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/plugins.m4 \\\n \t$(top_srcdir)/../config/po.m4 \\\n \t$(top_srcdir)/../config/progtest.m4 \\\n-\t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/zlib.m4 $(top_srcdir)/../libtool.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n@@ -249,7 +248,7 @@ am__can_run_installinfo = \\\n     *) (install-info --version) >/dev/null 2>&1;; \\\n   esac\n am__bfdinclude_HEADERS_DIST = $(INCDIR)/plugin-api.h bfd.h \\\n-\t$(INCDIR)/ansidecl.h $(INCDIR)/symcat.h bfd_stdint.h \\\n+\t$(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \\\n \t$(INCDIR)/diagnostics.h $(INCDIR)/bfdlink.h\n HEADERS = $(bfdinclude_HEADERS)\n RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive\t\\\n@@ -470,7 +469,7 @@ libbfd_la_LDFLAGS = $(am__append_1) -release `cat libtool-soversion` \\\n @INSTALL_LIBBFD_FALSE@bfdinclude_HEADERS = $(am__append_2)\n @INSTALL_LIBBFD_TRUE@bfdinclude_HEADERS = $(BFD_H) \\\n @INSTALL_LIBBFD_TRUE@\t$(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \\\n-@INSTALL_LIBBFD_TRUE@\tbfd_stdint.h $(INCDIR)/diagnostics.h \\\n+@INSTALL_LIBBFD_TRUE@\t$(INCDIR)/diagnostics.h \\\n @INSTALL_LIBBFD_TRUE@\t$(INCDIR)/bfdlink.h $(am__append_2)\n @INSTALL_LIBBFD_FALSE@rpath_bfdlibdir = @bfdlibdir@\n @INSTALL_LIBBFD_FALSE@noinst_LTLIBRARIES = libbfd.la\n@@ -1123,7 +1122,7 @@ SOURCE_HFILES = \\\n \txcofflink.h xsym.h\n \n BUILD_HFILES = \\\n-\tbfdver.h elf32-target.h elf64-target.h targmatch.h bfd_stdint.h\n+\tbfdver.h elf32-target.h elf64-target.h targmatch.h\n \n \n # Ensure they are built early:\n@@ -1155,7 +1154,7 @@ libbfd_la_LIBADD = `cat ofiles` @SHARED_LIBADD@ $(LIBDL) $(ZLIB)\n noinst_LIBRARIES = libbfd.a\n libbfd_a_SOURCES = \n BFD_H_DEPS = $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/diagnostics.h\n-LOCAL_H_DEPS = libbfd.h sysdep.h config.h bfd_stdint.h\n+LOCAL_H_DEPS = libbfd.h sysdep.h config.h\n BFD_H_FILES = bfd-in.h init.c opncls.c libbfd.c \\\n \tbfdio.c bfdwin.c section.c archures.c reloc.c \\\n \tsyms.c bfd.c archive.c corefile.c targets.c format.c \\"
    },
    {
      "sha": "a62ee4dea661b177e654454fb2baab63bf89856e",
      "filename": "bfd/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/aclocal.m4?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1178,7 +1178,6 @@ m4_include([../config/override.m4])\n m4_include([../config/plugins.m4])\n m4_include([../config/po.m4])\n m4_include([../config/progtest.m4])\n-m4_include([../config/stdint.m4])\n m4_include([../config/zlib.m4])\n m4_include([../libtool.m4])\n m4_include([../ltoptions.m4])"
    },
    {
      "sha": "46a0fcd441744b189630d2b2c9925970f7a1d80f",
      "filename": "bfd/bfd-in.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/bfd-in.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/bfd-in.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in.h?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -34,7 +34,7 @@ extern \"C\" {\n \n #include \"ansidecl.h\"\n #include \"symcat.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include \"diagnostics.h\"\n #include <stdarg.h>\n #include <string.h>"
    },
    {
      "sha": "92af6ca8af23522801586f1b148c287900db75a5",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -41,7 +41,7 @@ extern \"C\" {\n \n #include \"ansidecl.h\"\n #include \"symcat.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include \"diagnostics.h\"\n #include <stdarg.h>\n #include <string.h>"
    },
    {
      "sha": "14f3cac7677ccaf562ed24911b9064b3afda7809",
      "filename": "bfd/config.in",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/config.in?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -326,9 +326,6 @@\n /* Define to the version of this package. */\n #undef PACKAGE_VERSION\n \n-/* The size of `char', as computed by sizeof. */\n-#undef SIZEOF_CHAR\n-\n /* The size of `int', as computed by sizeof. */\n #undef SIZEOF_INT\n \n@@ -341,9 +338,6 @@\n /* The size of `off_t', as computed by sizeof. */\n #undef SIZEOF_OFF_T\n \n-/* The size of `short', as computed by sizeof. */\n-#undef SIZEOF_SHORT\n-\n /* The size of `void *', as computed by sizeof. */\n #undef SIZEOF_VOID_P\n "
    },
    {
      "sha": "fa499bba7bc2f046832db0878a841fb9f32abcc3",
      "filename": "bfd/configure",
      "status": "modified",
      "additions": 0,
      "deletions": 792,
      "changes": 792,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -13567,407 +13567,6 @@ fi\n \n done\n \n-\n-\n-inttype_headers=`echo inttypes.h sys/inttypes.h  | sed -e 's/,/ /g'`\n-\n-acx_cv_header_stdint=stddef.h\n-acx_cv_header_stdint_kind=\"(already complete)\"\n-for i in stdint.h $inttype_headers; do\n-  unset ac_cv_type_uintptr_t\n-  unset ac_cv_type_uintmax_t\n-  unset ac_cv_type_int_least32_t\n-  unset ac_cv_type_int_fast32_t\n-  unset ac_cv_type_uint64_t\n-  $as_echo_n \"looking for a compliant stdint.h in $i, \" >&6\n-  ac_fn_c_check_type \"$LINENO\" \"uintmax_t\" \"ac_cv_type_uintmax_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_uintmax_t\" = xyes; then :\n-  acx_cv_header_stdint=$i\n-else\n-  continue\n-fi\n-\n-  ac_fn_c_check_type \"$LINENO\" \"uintptr_t\" \"ac_cv_type_uintptr_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_uintptr_t\" = xyes; then :\n-\n-else\n-  acx_cv_header_stdint_kind=\"(mostly complete)\"\n-fi\n-\n-  ac_fn_c_check_type \"$LINENO\" \"int_least32_t\" \"ac_cv_type_int_least32_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_int_least32_t\" = xyes; then :\n-\n-else\n-  acx_cv_header_stdint_kind=\"(mostly complete)\"\n-fi\n-\n-  ac_fn_c_check_type \"$LINENO\" \"int_fast32_t\" \"ac_cv_type_int_fast32_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_int_fast32_t\" = xyes; then :\n-\n-else\n-  acx_cv_header_stdint_kind=\"(mostly complete)\"\n-fi\n-\n-  ac_fn_c_check_type \"$LINENO\" \"uint64_t\" \"ac_cv_type_uint64_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_uint64_t\" = xyes; then :\n-\n-else\n-  acx_cv_header_stdint_kind=\"(lacks uint64_t)\"\n-fi\n-\n-  break\n-done\n-if test \"$acx_cv_header_stdint\" = stddef.h; then\n-  acx_cv_header_stdint_kind=\"(lacks uintmax_t)\"\n-  for i in stdint.h $inttype_headers; do\n-    unset ac_cv_type_uintptr_t\n-    unset ac_cv_type_uint32_t\n-    unset ac_cv_type_uint64_t\n-    $as_echo_n \"looking for an incomplete stdint.h in $i, \" >&6\n-    ac_fn_c_check_type \"$LINENO\" \"uint32_t\" \"ac_cv_type_uint32_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_uint32_t\" = xyes; then :\n-  acx_cv_header_stdint=$i\n-else\n-  continue\n-fi\n-\n-    ac_fn_c_check_type \"$LINENO\" \"uint64_t\" \"ac_cv_type_uint64_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_uint64_t\" = xyes; then :\n-\n-fi\n-\n-    ac_fn_c_check_type \"$LINENO\" \"uintptr_t\" \"ac_cv_type_uintptr_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_uintptr_t\" = xyes; then :\n-\n-fi\n-\n-    break\n-  done\n-fi\n-if test \"$acx_cv_header_stdint\" = stddef.h; then\n-  acx_cv_header_stdint_kind=\"(u_intXX_t style)\"\n-  for i in sys/types.h $inttype_headers; do\n-    unset ac_cv_type_u_int32_t\n-    unset ac_cv_type_u_int64_t\n-    $as_echo_n \"looking for u_intXX_t types in $i, \" >&6\n-    ac_fn_c_check_type \"$LINENO\" \"u_int32_t\" \"ac_cv_type_u_int32_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_u_int32_t\" = xyes; then :\n-  acx_cv_header_stdint=$i\n-else\n-  continue\n-fi\n-\n-    ac_fn_c_check_type \"$LINENO\" \"u_int64_t\" \"ac_cv_type_u_int64_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_u_int64_t\" = xyes; then :\n-\n-fi\n-\n-    break\n-  done\n-fi\n-if test \"$acx_cv_header_stdint\" = stddef.h; then\n-  acx_cv_header_stdint_kind=\"(using manual detection)\"\n-fi\n-\n-test -z \"$ac_cv_type_uintptr_t\" && ac_cv_type_uintptr_t=no\n-test -z \"$ac_cv_type_uint64_t\" && ac_cv_type_uint64_t=no\n-test -z \"$ac_cv_type_u_int64_t\" && ac_cv_type_u_int64_t=no\n-test -z \"$ac_cv_type_int_least32_t\" && ac_cv_type_int_least32_t=no\n-test -z \"$ac_cv_type_int_fast32_t\" && ac_cv_type_int_fast32_t=no\n-\n-# ----------------- Summarize what we found so far\n-\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking what to include in bfd_stdint.h\" >&5\n-$as_echo_n \"checking what to include in bfd_stdint.h... \" >&6; }\n-\n-case `$as_basename -- bfd_stdint.h ||\n-$as_expr X/bfd_stdint.h : '.*/\\([^/][^/]*\\)/*$' \\| \\\n-\t Xbfd_stdint.h : 'X\\(//\\)$' \\| \\\n-\t Xbfd_stdint.h : 'X\\(/\\)' \\| . 2>/dev/null ||\n-$as_echo X/bfd_stdint.h |\n-    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n-\t    s//\\1/\n-\t    q\n-\t  }\n-\t  /^X\\/\\(\\/\\/\\)$/{\n-\t    s//\\1/\n-\t    q\n-\t  }\n-\t  /^X\\/\\(\\/\\).*/{\n-\t    s//\\1/\n-\t    q\n-\t  }\n-\t  s/.*/./; q'` in\n-  stdint.h) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: are you sure you want it there?\" >&5\n-$as_echo \"$as_me: WARNING: are you sure you want it there?\" >&2;} ;;\n-  inttypes.h) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: are you sure you want it there?\" >&5\n-$as_echo \"$as_me: WARNING: are you sure you want it there?\" >&2;} ;;\n-  *) ;;\n-esac\n-\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_header_stdint $acx_cv_header_stdint_kind\" >&5\n-$as_echo \"$acx_cv_header_stdint $acx_cv_header_stdint_kind\" >&6; }\n-\n-# ----------------- done included file, check C basic types --------\n-\n-# Lacking an uintptr_t?  Test size of void *\n-case \"$acx_cv_header_stdint:$ac_cv_type_uintptr_t\" in\n-  stddef.h:* | *:no) # The cast to long int works around a bug in the HP C Compiler\n-# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n-# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n-# This bug is HP SR number 8606223364.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of void *\" >&5\n-$as_echo_n \"checking size of void *... \" >&6; }\n-if ${ac_cv_sizeof_void_p+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (void *))\" \"ac_cv_sizeof_void_p\"        \"$ac_includes_default\"; then :\n-\n-else\n-  if test \"$ac_cv_type_void_p\" = yes; then\n-     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n-$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n-as_fn_error 77 \"cannot compute sizeof (void *)\n-See \\`config.log' for more details\" \"$LINENO\" 5; }\n-   else\n-     ac_cv_sizeof_void_p=0\n-   fi\n-fi\n-\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_void_p\" >&5\n-$as_echo \"$ac_cv_sizeof_void_p\" >&6; }\n-\n-\n-\n-cat >>confdefs.h <<_ACEOF\n-#define SIZEOF_VOID_P $ac_cv_sizeof_void_p\n-_ACEOF\n-\n- ;;\n-esac\n-\n-# Lacking an uint64_t?  Test size of long\n-case \"$acx_cv_header_stdint:$ac_cv_type_uint64_t:$ac_cv_type_u_int64_t\" in\n-  stddef.h:*:* | *:no:no) # The cast to long int works around a bug in the HP C Compiler\n-# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n-# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n-# This bug is HP SR number 8606223364.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of long\" >&5\n-$as_echo_n \"checking size of long... \" >&6; }\n-if ${ac_cv_sizeof_long+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (long))\" \"ac_cv_sizeof_long\"        \"$ac_includes_default\"; then :\n-\n-else\n-  if test \"$ac_cv_type_long\" = yes; then\n-     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n-$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n-as_fn_error 77 \"cannot compute sizeof (long)\n-See \\`config.log' for more details\" \"$LINENO\" 5; }\n-   else\n-     ac_cv_sizeof_long=0\n-   fi\n-fi\n-\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_long\" >&5\n-$as_echo \"$ac_cv_sizeof_long\" >&6; }\n-\n-\n-\n-cat >>confdefs.h <<_ACEOF\n-#define SIZEOF_LONG $ac_cv_sizeof_long\n-_ACEOF\n-\n- ;;\n-esac\n-\n-if test $acx_cv_header_stdint = stddef.h; then\n-  # Lacking a good header?  Test size of everything and deduce all types.\n-  # The cast to long int works around a bug in the HP C Compiler\n-# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n-# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n-# This bug is HP SR number 8606223364.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of int\" >&5\n-$as_echo_n \"checking size of int... \" >&6; }\n-if ${ac_cv_sizeof_int+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (int))\" \"ac_cv_sizeof_int\"        \"$ac_includes_default\"; then :\n-\n-else\n-  if test \"$ac_cv_type_int\" = yes; then\n-     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n-$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n-as_fn_error 77 \"cannot compute sizeof (int)\n-See \\`config.log' for more details\" \"$LINENO\" 5; }\n-   else\n-     ac_cv_sizeof_int=0\n-   fi\n-fi\n-\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_int\" >&5\n-$as_echo \"$ac_cv_sizeof_int\" >&6; }\n-\n-\n-\n-cat >>confdefs.h <<_ACEOF\n-#define SIZEOF_INT $ac_cv_sizeof_int\n-_ACEOF\n-\n-\n-  # The cast to long int works around a bug in the HP C Compiler\n-# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n-# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n-# This bug is HP SR number 8606223364.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of short\" >&5\n-$as_echo_n \"checking size of short... \" >&6; }\n-if ${ac_cv_sizeof_short+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (short))\" \"ac_cv_sizeof_short\"        \"$ac_includes_default\"; then :\n-\n-else\n-  if test \"$ac_cv_type_short\" = yes; then\n-     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n-$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n-as_fn_error 77 \"cannot compute sizeof (short)\n-See \\`config.log' for more details\" \"$LINENO\" 5; }\n-   else\n-     ac_cv_sizeof_short=0\n-   fi\n-fi\n-\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_short\" >&5\n-$as_echo \"$ac_cv_sizeof_short\" >&6; }\n-\n-\n-\n-cat >>confdefs.h <<_ACEOF\n-#define SIZEOF_SHORT $ac_cv_sizeof_short\n-_ACEOF\n-\n-\n-  # The cast to long int works around a bug in the HP C Compiler\n-# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n-# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n-# This bug is HP SR number 8606223364.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of char\" >&5\n-$as_echo_n \"checking size of char... \" >&6; }\n-if ${ac_cv_sizeof_char+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (char))\" \"ac_cv_sizeof_char\"        \"$ac_includes_default\"; then :\n-\n-else\n-  if test \"$ac_cv_type_char\" = yes; then\n-     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n-$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n-as_fn_error 77 \"cannot compute sizeof (char)\n-See \\`config.log' for more details\" \"$LINENO\" 5; }\n-   else\n-     ac_cv_sizeof_char=0\n-   fi\n-fi\n-\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_char\" >&5\n-$as_echo \"$ac_cv_sizeof_char\" >&6; }\n-\n-\n-\n-cat >>confdefs.h <<_ACEOF\n-#define SIZEOF_CHAR $ac_cv_sizeof_char\n-_ACEOF\n-\n-\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to int8_t\" >&5\n-$as_echo_n \"checking for type equivalent to int8_t... \" >&6; }\n-  case \"$ac_cv_sizeof_char\" in\n-    1) acx_cv_type_int8_t=char ;;\n-    *) as_fn_error $? \"no 8-bit type, please report a bug\" \"$LINENO\" 5\n-  esac\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int8_t\" >&5\n-$as_echo \"$acx_cv_type_int8_t\" >&6; }\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to int16_t\" >&5\n-$as_echo_n \"checking for type equivalent to int16_t... \" >&6; }\n-  case \"$ac_cv_sizeof_int:$ac_cv_sizeof_short\" in\n-    2:*) acx_cv_type_int16_t=int ;;\n-    *:2) acx_cv_type_int16_t=short ;;\n-    *) as_fn_error $? \"no 16-bit type, please report a bug\" \"$LINENO\" 5\n-  esac\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int16_t\" >&5\n-$as_echo \"$acx_cv_type_int16_t\" >&6; }\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to int32_t\" >&5\n-$as_echo_n \"checking for type equivalent to int32_t... \" >&6; }\n-  case \"$ac_cv_sizeof_int:$ac_cv_sizeof_long\" in\n-    4:*) acx_cv_type_int32_t=int ;;\n-    *:4) acx_cv_type_int32_t=long ;;\n-    *) as_fn_error $? \"no 32-bit type, please report a bug\" \"$LINENO\" 5\n-  esac\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int32_t\" >&5\n-$as_echo \"$acx_cv_type_int32_t\" >&6; }\n-fi\n-\n-# These tests are here to make the output prettier\n-\n-if test \"$ac_cv_type_uint64_t\" != yes && test \"$ac_cv_type_u_int64_t\" != yes; then\n-  case \"$ac_cv_sizeof_long\" in\n-    8) acx_cv_type_int64_t=long ;;\n-  esac\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to int64_t\" >&5\n-$as_echo_n \"checking for type equivalent to int64_t... \" >&6; }\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${acx_cv_type_int64_t-'using preprocessor symbols'}\" >&5\n-$as_echo \"${acx_cv_type_int64_t-'using preprocessor symbols'}\" >&6; }\n-fi\n-\n-# Now we can use the above types\n-\n-if test \"$ac_cv_type_uintptr_t\" != yes; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to intptr_t\" >&5\n-$as_echo_n \"checking for type equivalent to intptr_t... \" >&6; }\n-  case $ac_cv_sizeof_void_p in\n-    2) acx_cv_type_intptr_t=int16_t ;;\n-    4) acx_cv_type_intptr_t=int32_t ;;\n-    8) acx_cv_type_intptr_t=int64_t ;;\n-    *) as_fn_error $? \"no equivalent for intptr_t, please report a bug\" \"$LINENO\" 5\n-  esac\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_intptr_t\" >&5\n-$as_echo \"$acx_cv_type_intptr_t\" >&6; }\n-fi\n-\n-# ----------------- done all checks, emit header -------------\n-ac_config_commands=\"$ac_config_commands bfd_stdint.h\"\n-\n-\n-\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether time.h and sys/time.h may both be included\" >&5\n $as_echo_n \"checking whether time.h and sys/time.h may both be included... \" >&6; }\n if ${ac_cv_header_time+:} false; then :\n@@ -17458,24 +17057,6 @@ fi\n     LINGUAS=\"${LINGUAS-%UNSET%}\"\n \n \n-GCC=\"$GCC\"\n-CC=\"$CC\"\n-acx_cv_header_stdint=\"$acx_cv_header_stdint\"\n-acx_cv_type_int8_t=\"$acx_cv_type_int8_t\"\n-acx_cv_type_int16_t=\"$acx_cv_type_int16_t\"\n-acx_cv_type_int32_t=\"$acx_cv_type_int32_t\"\n-acx_cv_type_int64_t=\"$acx_cv_type_int64_t\"\n-acx_cv_type_intptr_t=\"$acx_cv_type_intptr_t\"\n-ac_cv_type_uintmax_t=\"$ac_cv_type_uintmax_t\"\n-ac_cv_type_uintptr_t=\"$ac_cv_type_uintptr_t\"\n-ac_cv_type_uint64_t=\"$ac_cv_type_uint64_t\"\n-ac_cv_type_u_int64_t=\"$ac_cv_type_u_int64_t\"\n-ac_cv_type_u_int32_t=\"$ac_cv_type_u_int32_t\"\n-ac_cv_type_int_least32_t=\"$ac_cv_type_int_least32_t\"\n-ac_cv_type_int_fast32_t=\"$ac_cv_type_int_fast32_t\"\n-ac_cv_sizeof_void_p=\"$ac_cv_sizeof_void_p\"\n-\n-\n \n _ACEOF\n \n@@ -17489,7 +17070,6 @@ do\n     \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n     \"config.h\") CONFIG_HEADERS=\"$CONFIG_HEADERS config.h:config.in\" ;;\n     \"default-1\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default-1\" ;;\n-    \"bfd_stdint.h\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS bfd_stdint.h\" ;;\n     \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n     \"doc/Makefile\") CONFIG_FILES=\"$CONFIG_FILES doc/Makefile\" ;;\n     \"bfd-in3.h\") CONFIG_FILES=\"$CONFIG_FILES bfd-in3.h:bfd-in2.h\" ;;\n@@ -18923,378 +18503,6 @@ _LT_EOF\n         ;;\n       esac\n     done ;;\n-    \"bfd_stdint.h\":C)\n-if test \"$GCC\" = yes; then\n-  echo \"/* generated for \" `$CC --version | sed 1q` \"*/\" > tmp-stdint.h\n-else\n-  echo \"/* generated for $CC */\" > tmp-stdint.h\n-fi\n-\n-sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-  #ifndef GCC_GENERATED_STDINT_H\n-  #define GCC_GENERATED_STDINT_H 1\n-\n-  #include <sys/types.h>\n-EOF\n-\n-if test \"$acx_cv_header_stdint\" != stdint.h; then\n-  echo \"#include <stddef.h>\" >> tmp-stdint.h\n-fi\n-if test \"$acx_cv_header_stdint\" != stddef.h; then\n-  echo \"#include <$acx_cv_header_stdint>\" >> tmp-stdint.h\n-fi\n-\n-sed 's/^ *//' >> tmp-stdint.h <<EOF\n-  /* glibc uses these symbols as guards to prevent redefinitions.  */\n-  #ifdef __int8_t_defined\n-  #define _INT8_T\n-  #define _INT16_T\n-  #define _INT32_T\n-  #endif\n-  #ifdef __uint32_t_defined\n-  #define _UINT32_T\n-  #endif\n-\n-EOF\n-\n-# ----------------- done header, emit basic int types -------------\n-if test \"$acx_cv_header_stdint\" = stddef.h; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    #ifndef _UINT8_T\n-    #define _UINT8_T\n-    #ifndef __uint8_t_defined\n-    #define __uint8_t_defined\n-    #ifndef uint8_t\n-    typedef unsigned $acx_cv_type_int8_t uint8_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _UINT16_T\n-    #define _UINT16_T\n-    #ifndef __uint16_t_defined\n-    #define __uint16_t_defined\n-    #ifndef uint16_t\n-    typedef unsigned $acx_cv_type_int16_t uint16_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _UINT32_T\n-    #define _UINT32_T\n-    #ifndef __uint32_t_defined\n-    #define __uint32_t_defined\n-    #ifndef uint32_t\n-    typedef unsigned $acx_cv_type_int32_t uint32_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _INT8_T\n-    #define _INT8_T\n-    #ifndef __int8_t_defined\n-    #define __int8_t_defined\n-    #ifndef int8_t\n-    typedef $acx_cv_type_int8_t int8_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _INT16_T\n-    #define _INT16_T\n-    #ifndef __int16_t_defined\n-    #define __int16_t_defined\n-    #ifndef int16_t\n-    typedef $acx_cv_type_int16_t int16_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _INT32_T\n-    #define _INT32_T\n-    #ifndef __int32_t_defined\n-    #define __int32_t_defined\n-    #ifndef int32_t\n-    typedef $acx_cv_type_int32_t int32_t;\n-    #endif\n-    #endif\n-    #endif\n-EOF\n-elif test \"$ac_cv_type_u_int32_t\" = yes; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* int8_t int16_t int32_t defined by inet code, we do the u_intXX types */\n-    #ifndef _INT8_T\n-    #define _INT8_T\n-    #endif\n-    #ifndef _INT16_T\n-    #define _INT16_T\n-    #endif\n-    #ifndef _INT32_T\n-    #define _INT32_T\n-    #endif\n-\n-    #ifndef _UINT8_T\n-    #define _UINT8_T\n-    #ifndef __uint8_t_defined\n-    #define __uint8_t_defined\n-    #ifndef uint8_t\n-    typedef u_int8_t uint8_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _UINT16_T\n-    #define _UINT16_T\n-    #ifndef __uint16_t_defined\n-    #define __uint16_t_defined\n-    #ifndef uint16_t\n-    typedef u_int16_t uint16_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _UINT32_T\n-    #define _UINT32_T\n-    #ifndef __uint32_t_defined\n-    #define __uint32_t_defined\n-    #ifndef uint32_t\n-    typedef u_int32_t uint32_t;\n-    #endif\n-    #endif\n-    #endif\n-EOF\n-else\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* Some systems have guard macros to prevent redefinitions, define them.  */\n-    #ifndef _INT8_T\n-    #define _INT8_T\n-    #endif\n-    #ifndef _INT16_T\n-    #define _INT16_T\n-    #endif\n-    #ifndef _INT32_T\n-    #define _INT32_T\n-    #endif\n-    #ifndef _UINT8_T\n-    #define _UINT8_T\n-    #endif\n-    #ifndef _UINT16_T\n-    #define _UINT16_T\n-    #endif\n-    #ifndef _UINT32_T\n-    #define _UINT32_T\n-    #endif\n-EOF\n-fi\n-\n-# ------------- done basic int types, emit int64_t types ------------\n-if test \"$ac_cv_type_uint64_t\" = yes; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* system headers have good uint64_t and int64_t */\n-    #ifndef _INT64_T\n-    #define _INT64_T\n-    #endif\n-    #ifndef _UINT64_T\n-    #define _UINT64_T\n-    #endif\n-EOF\n-elif test \"$ac_cv_type_u_int64_t\" = yes; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* system headers have an u_int64_t (and int64_t) */\n-    #ifndef _INT64_T\n-    #define _INT64_T\n-    #endif\n-    #ifndef _UINT64_T\n-    #define _UINT64_T\n-    #ifndef __uint64_t_defined\n-    #define __uint64_t_defined\n-    #ifndef uint64_t\n-    typedef u_int64_t uint64_t;\n-    #endif\n-    #endif\n-    #endif\n-EOF\n-elif test -n \"$acx_cv_type_int64_t\"; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* architecture has a 64-bit type, $acx_cv_type_int64_t */\n-    #ifndef _INT64_T\n-    #define _INT64_T\n-    #ifndef int64_t\n-    typedef $acx_cv_type_int64_t int64_t;\n-    #endif\n-    #endif\n-    #ifndef _UINT64_T\n-    #define _UINT64_T\n-    #ifndef __uint64_t_defined\n-    #define __uint64_t_defined\n-    #ifndef uint64_t\n-    typedef unsigned $acx_cv_type_int64_t uint64_t;\n-    #endif\n-    #endif\n-    #endif\n-EOF\n-else\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* some common heuristics for int64_t, using compiler-specific tests */\n-    #if defined __STDC_VERSION__ && (__STDC_VERSION__-0) >= 199901L\n-    #ifndef _INT64_T\n-    #define _INT64_T\n-    #ifndef __int64_t_defined\n-    #ifndef int64_t\n-    typedef long long int64_t;\n-    #endif\n-    #endif\n-    #endif\n-    #ifndef _UINT64_T\n-    #define _UINT64_T\n-    #ifndef uint64_t\n-    typedef unsigned long long uint64_t;\n-    #endif\n-    #endif\n-\n-    #elif defined __GNUC__ && defined (__STDC__) && __STDC__-0\n-    /* NextStep 2.0 cc is really gcc 1.93 but it defines __GNUC__ = 2 and\n-       does not implement __extension__.  But that compiler doesn't define\n-       __GNUC_MINOR__.  */\n-    # if __GNUC__ < 2 || (__NeXT__ && !__GNUC_MINOR__)\n-    # define __extension__\n-    # endif\n-\n-    # ifndef _INT64_T\n-    # define _INT64_T\n-    # ifndef int64_t\n-    __extension__ typedef long long int64_t;\n-    # endif\n-    # endif\n-    # ifndef _UINT64_T\n-    # define _UINT64_T\n-    # ifndef uint64_t\n-    __extension__ typedef unsigned long long uint64_t;\n-    # endif\n-    # endif\n-\n-    #elif !defined __STRICT_ANSI__\n-    # if defined _MSC_VER || defined __WATCOMC__ || defined __BORLANDC__\n-\n-    #  ifndef _INT64_T\n-    #  define _INT64_T\n-    #  ifndef int64_t\n-    typedef __int64 int64_t;\n-    #  endif\n-    #  endif\n-    #  ifndef _UINT64_T\n-    #  define _UINT64_T\n-    #  ifndef uint64_t\n-    typedef unsigned __int64 uint64_t;\n-    #  endif\n-    #  endif\n-    # endif /* compiler */\n-\n-    #endif /* ANSI version */\n-EOF\n-fi\n-\n-# ------------- done int64_t types, emit intptr types ------------\n-if test \"$ac_cv_type_uintptr_t\" != yes; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* Define intptr_t based on sizeof(void*) = $ac_cv_sizeof_void_p */\n-    #ifndef __uintptr_t_defined\n-    #ifndef uintptr_t\n-    typedef u$acx_cv_type_intptr_t uintptr_t;\n-    #endif\n-    #endif\n-    #ifndef __intptr_t_defined\n-    #ifndef intptr_t\n-    typedef $acx_cv_type_intptr_t  intptr_t;\n-    #endif\n-    #endif\n-EOF\n-fi\n-\n-# ------------- done intptr types, emit int_least types ------------\n-if test \"$ac_cv_type_int_least32_t\" != yes; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* Define int_least types */\n-    typedef int8_t     int_least8_t;\n-    typedef int16_t    int_least16_t;\n-    typedef int32_t    int_least32_t;\n-    #ifdef _INT64_T\n-    typedef int64_t    int_least64_t;\n-    #endif\n-\n-    typedef uint8_t    uint_least8_t;\n-    typedef uint16_t   uint_least16_t;\n-    typedef uint32_t   uint_least32_t;\n-    #ifdef _UINT64_T\n-    typedef uint64_t   uint_least64_t;\n-    #endif\n-EOF\n-fi\n-\n-# ------------- done intptr types, emit int_fast types ------------\n-if test \"$ac_cv_type_int_fast32_t\" != yes; then\n-      sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* Define int_fast types.  short is often slow */\n-    typedef int8_t       int_fast8_t;\n-    typedef int          int_fast16_t;\n-    typedef int32_t      int_fast32_t;\n-    #ifdef _INT64_T\n-    typedef int64_t      int_fast64_t;\n-    #endif\n-\n-    typedef uint8_t      uint_fast8_t;\n-    typedef unsigned int uint_fast16_t;\n-    typedef uint32_t     uint_fast32_t;\n-    #ifdef _UINT64_T\n-    typedef uint64_t     uint_fast64_t;\n-    #endif\n-EOF\n-fi\n-\n-if test \"$ac_cv_type_uintmax_t\" != yes; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* Define intmax based on what we found */\n-    #ifndef intmax_t\n-    #ifdef _INT64_T\n-    typedef int64_t       intmax_t;\n-    #else\n-    typedef long          intmax_t;\n-    #endif\n-    #endif\n-    #ifndef uintmax_t\n-    #ifdef _UINT64_T\n-    typedef uint64_t      uintmax_t;\n-    #else\n-    typedef unsigned long uintmax_t;\n-    #endif\n-    #endif\n-EOF\n-fi\n-\n-sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-  #endif /* GCC_GENERATED_STDINT_H */\n-EOF\n-\n-if test -r bfd_stdint.h && cmp -s tmp-stdint.h bfd_stdint.h; then\n-  rm -f tmp-stdint.h\n-else\n-  mv -f tmp-stdint.h bfd_stdint.h\n-fi\n-\n- ;;\n     \"default\":C)\n case \"$srcdir\" in\n   .) srcdirpre= ;;"
    },
    {
      "sha": "cb43ebcf6dea465b7dc33f777fce64f5bbeee5a6",
      "filename": "bfd/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure.ac?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -246,7 +246,6 @@ BFD_CC_FOR_BUILD\n AC_CHECK_HEADERS(alloca.h fcntl.h limits.h stddef.h stdlib.h string.h \\\n \t\t strings.h sys/file.h sys/resource.h sys/stat.h sys/time.h \\\n \t\t time.h unistd.h wchar.h wctype.h)\n-GCC_HEADER_STDINT(bfd_stdint.h)\n AC_HEADER_TIME\n AC_HEADER_DIRENT\n "
    },
    {
      "sha": "33012fbc1effacffcf672121528a5997d2411e38",
      "filename": "bfd/configure.com",
      "status": "modified",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/configure.com",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/configure.com",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure.com?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -239,13 +239,6 @@ $DECK\n $  EOD\n $!\n $!\n-$! create bfd_stdint.h\n-$!\n-$ write sys$output \"Generate `bfd_stdint.h'\"\n-$ create []bfd_stdint.h\n-#include <inttypes.h>\n-$!\n-$!\n $! create targmatch.h\n $!\n $ write sys$output \"Generate `targmatch.h'\""
    },
    {
      "sha": "93ba83ae4ac73a4ffc677b58a90b5b1d749f3f1c",
      "filename": "bfd/doc/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/doc/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/doc/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/doc/Makefile.in?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -119,7 +119,6 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/plugins.m4 \\\n \t$(top_srcdir)/../config/po.m4 \\\n \t$(top_srcdir)/../config/progtest.m4 \\\n-\t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/zlib.m4 $(top_srcdir)/../libtool.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\"
    },
    {
      "sha": "f81e2b4037b85aeba677af61cfa09f1af942bf6d",
      "filename": "bfd/po/BLD-POTFILES.in",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/po/BLD-POTFILES.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/bfd/po/BLD-POTFILES.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/po/BLD-POTFILES.in?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,4 +1,3 @@\n-bfd_stdint.h\n bfdver.h\n elf32-aarch64.c\n elf32-ia64.c"
    },
    {
      "sha": "aa7d9d80722aeef822612a0b5efecda831738c11",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-31  Alan Modra  <amodra@gmail.com>\n+\n+\t* coffdump.c: Include stdint.h in place of bfd_stdint.h.\n+\t* dwarf.c: Likewise.\n+\n 2021-03-31  Alan Modra  <amodra@gmail.com>\n \n \t* prdbg.c (pr_function_type): Replace LITSTTCPY with strcpy."
    },
    {
      "sha": "dd40221b45de081a494c0b6b15552781044c0d18",
      "filename": "binutils/coffdump.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/binutils/coffdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/binutils/coffdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/coffdump.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -26,7 +26,7 @@\n \n #include \"sysdep.h\"\n #include \"bfd.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include \"libiberty.h\"\n #include \"bucomm.h\"\n "
    },
    {
      "sha": "476e3919d1fa59044ddf64bbbc218aa87c286f38",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -21,7 +21,7 @@\n #include \"sysdep.h\"\n #include \"libiberty.h\"\n #include \"bfd.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include \"bucomm.h\"\n #include \"elfcomm.h\"\n #include \"elf/common.h\""
    },
    {
      "sha": "174cc86b2c606d643215dfacda8bc1e1d6c4d5dc",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-31  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/tc-aarch64.c: Include stdint.h in place of bfd_stdint.h.\n+\t* config/tc-crx.c: Likewise.\n+\t* config/tc-nds32.h: Likewise.\n+\n 2021-03-30  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (build_modrm_byte): Change return type."
    },
    {
      "sha": "9dd1defd09b1be34c3e520b3c155abb5854b56bd",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -22,7 +22,7 @@\n #include \"as.h\"\n #include <limits.h>\n #include <stdarg.h>\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #define\t NO_RELOC 0\n #include \"safe-ctype.h\"\n #include \"subsegs.h\""
    },
    {
      "sha": "a82acb5fa21b4c3d0015eb9fea82ca94fe3bd973",
      "filename": "gas/config/tc-crx.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/gas/config/tc-crx.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/gas/config/tc-crx.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-crx.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -23,7 +23,7 @@\n    MA 02110-1301, USA.  */\n \n #include \"as.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include \"safe-ctype.h\"\n #include \"dwarf2dbg.h\"\n #include \"opcode/crx.h\""
    },
    {
      "sha": "a74390a57e756b227a60dc909f969470a0cd1d0e",
      "filename": "gas/config/tc-nds32.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/gas/config/tc-nds32.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/gas/config/tc-nds32.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-nds32.h?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -22,7 +22,7 @@\n #ifndef TC_NDS32\n #define TC_NDS32\n \n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n \n /* Enum mapping symbol.  */\n enum mstate"
    },
    {
      "sha": "139e28ecbae485370b77d3c29141b29e9912e896",
      "filename": "gas/config/tc-pru.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/gas/config/tc-pru.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/gas/config/tc-pru.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-pru.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -21,7 +21,7 @@\n    02110-1301, USA.  */\n \n #include \"as.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include \"opcode/pru.h\"\n #include \"elf/pru.h\"\n #include \"tc-pru.h\""
    },
    {
      "sha": "a542710cd71280037b21bd7a63450fc0128e3bbf",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,3 +1,12 @@\n+2021-03-31  Alan Modra  <amodra@gmail.com>\n+\n+\t* cgen/basic-modes.h: Include stdint.h in place of bfd_stdint.h.\n+\t* elf/nfp.h: Likewise.\n+\t* opcode/aarch64.h: Likewise.\n+\t* opcode/cgen.h: Likewise.\n+\t* opcode/nfp.h: Likewise.\n+\t* opcode/ppc.h: Likewise.\n+\n 2021-03-29  Alan Modra  <amodra@gmail.com>\n \n \t* opcode/aarch64.h (alias_opcode_p): Simplify boolean expression."
    },
    {
      "sha": "2d76594524cb9163acdc044a25a9e11658eb90d9",
      "filename": "include/cgen/basic-modes.h",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/cgen/basic-modes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/cgen/basic-modes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/cgen/basic-modes.h?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -24,12 +24,10 @@\n \n /* This file doesn't contain all modes,\n    just the basic/portable ones.\n-   It also provides access to stdint.h (*1) so the includer doesn't have\n-   to deal with the portability issues.\n-   (*1): To the extent that bfd_stdint.h does for now.  */\n+   It also provides access to stdint.h so the includer doesn't have\n+   to deal with the portability issues.  */\n \n-/* IWBN to avoid unnecessary dependencies on bfd-anything.  */\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n \n typedef int8_t QI;\n typedef uint8_t UQI;"
    },
    {
      "sha": "ca609c19967f33693a0ecc7903b9fd855b210318",
      "filename": "include/elf/nfp.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/elf/nfp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/elf/nfp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/nfp.h?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -24,7 +24,7 @@\n #include \"bfd.h\"\n #include \"elf/common.h\"\n #include \"elf/reloc-macros.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n \n #ifdef __cplusplus\n extern \"C\""
    },
    {
      "sha": "7a97fa837f60e712f20b6a60b1a57d5ffa134565",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -23,7 +23,7 @@\n #define OPCODE_AARCH64_H\n \n #include \"bfd.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include <assert.h>\n #include <stdlib.h>\n "
    },
    {
      "sha": "8b7d2a4b547dd664a42c82da64b89fe1ca13a989",
      "filename": "include/opcode/cgen.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/opcode/cgen.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/opcode/cgen.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/cgen.h?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -24,8 +24,7 @@\n #include \"symcat.h\"\n #include \"cgen/bitset.h\"\n \n-/* ??? IWBN to replace bfd in the name.  */\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n \n #ifdef __cplusplus\n extern \"C\" {"
    },
    {
      "sha": "88c7d08f4833a7fc9e6bbba1ba63ef82d0d4fc6c",
      "filename": "include/opcode/nfp.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/opcode/nfp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/opcode/nfp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/nfp.h?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -23,7 +23,7 @@\n #define _NFP_H_\n \n #include \"bfd.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include \"elf/nfp.h\"\n \n #ifdef __cplusplus"
    },
    {
      "sha": "1c5f383e2093afd973e6f9e3a2ce3e77675d110f",
      "filename": "include/opcode/ppc.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/opcode/ppc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/include/opcode/ppc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/ppc.h?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -22,7 +22,7 @@\n #ifndef PPC_H\n #define PPC_H\n \n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n \n #ifdef __cplusplus\n extern \"C\" {"
    },
    {
      "sha": "dbdb4e128bfa84daba351cab583bf6aa3cba04ef",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,3 +1,23 @@\n+2021-03-31  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf-hints-local.h: Include stdint.h in place of bfd_stdint.h.\n+\t* emultempl/nds32elf.em: Likewise.\n+\t* testsuite/ld-elf/mbind2b.c: Likewise.\n+\t* testsuite/ld-elf/pr18718.c: Likewise.\n+\t* testsuite/ld-elf/pr18720a.c: Likewise.\n+\t* testsuite/ld-elf/pr25749-1.c: Likewise.\n+\t* testsuite/ld-elf/pr25749-1a.c: Likewise.\n+\t* testsuite/ld-elf/pr25749-1b.c: Likewise.\n+\t* testsuite/ld-elf/pr25749-1c.c: Likewise.\n+\t* testsuite/ld-elf/pr25749-1d.c: Likewise.\n+\t* testsuite/ld-elf/pr25749-2.c: Likewise.\n+\t* testsuite/ld-elf/pr25754-1a.c: Likewise.\n+\t* testsuite/ld-elf/pr25754-2a.c: Likewise.\n+\t* testsuite/ld-elf/pr25754-3a.c: Likewise.\n+\t* testsuite/ld-elf/pr25754-4a.c: Likewise.\n+\t* testsuite/ld-elf/pr25754-5a.c: Likewise.\n+\t* testsuite/ld-elf/pr25754-6a.c: Likewise.\n+\n 2021-03-29  Alan Modra  <amodra@gmail.com>\n \n \t* emultempl/aix.em (gld${EMULATION_NAME}_before_allocation): Simplify"
    },
    {
      "sha": "9cdfa2f29818302ea4d52bfdb835e7004379c1d5",
      "filename": "ld/elf-hints-local.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/elf-hints-local.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/elf-hints-local.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/elf-hints-local.h?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -25,7 +25,7 @@\n #ifndef\t_ELF_HINTS_H_\n #define\t_ELF_HINTS_H_\n \n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n \n /* Hints file produced by ldconfig.  */\n struct elfhints_hdr"
    },
    {
      "sha": "b00b7746cca237045f45739148a81ff7d11969c4",
      "filename": "ld/emultempl/nds32elf.em",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/emultempl/nds32elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/emultempl/nds32elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/nds32elf.em?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -24,7 +24,7 @@ fragment <<EOF\n \n #include \"elf-bfd.h\"\n #include \"elf/nds32.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include \"elf32-nds32.h\"\n \n static int relax_fp_as_gp = 1;\t\t/* --mrelax-omit-fp  */"
    },
    {
      "sha": "7e1367d6b0f9b7723d944f7dfe193c1329613e68",
      "filename": "ld/testsuite/ld-elf/mbind2b.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/mbind2b.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/mbind2b.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/mbind2b.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,6 +1,6 @@\n #include <stdio.h>\n #include <stdlib.h>\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern char bss_in_mbind0;\n extern char data_in_mbind3;"
    },
    {
      "sha": "bbf8e037c132ab0b02af7f4d1ba62e4785772e1a",
      "filename": "ld/testsuite/ld-elf/pr18718.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr18718.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr18718.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr18718.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,5 +1,5 @@\n #include <stdio.h>\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern void foo (void);\n extern void check_ptr_eq (void (*) (void), void (*) (void));"
    },
    {
      "sha": "fec4cf902ff7d8836a5a819fbff8c93971c917ee",
      "filename": "ld/testsuite/ld-elf/pr18720a.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr18720a.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr18720a.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr18720a.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,4 +1,4 @@\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern void bar (void);\n extern void foo (void);"
    },
    {
      "sha": "249d80fd1696f6e269ab54eebf6df1f9ef126602",
      "filename": "ld/testsuite/ld-elf/pr25749-1.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25749-1.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25749-1.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr25749-1.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,12 +1,12 @@\n #include <stdio.h>\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern intptr_t size (void);\n \n int\n main ()\n {\n-  if (size () == 303 /* size of this file */)\n+  if (size () == 299 /* size of this file */)\n     printf (\"PASS\\n\");\n #ifdef __GLIBC_PREREQ\n # if !__GLIBC_PREREQ (2, 28)"
    },
    {
      "sha": "657d29da5b12ce31aefda245029c1d2a0295da14",
      "filename": "ld/testsuite/ld-elf/pr25749-1a.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25749-1a.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25749-1a.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr25749-1a.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,4 +1,4 @@\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern void *_binary_pr25749_1_c_start;\n extern void *_binary_pr25749_1_c_end;"
    },
    {
      "sha": "328b47cf51f15a323b787df52eaf9367ba064103",
      "filename": "ld/testsuite/ld-elf/pr25749-1b.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25749-1b.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25749-1b.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr25749-1b.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,4 +1,4 @@\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern void *_binary_pr25749_1_c_size;\n "
    },
    {
      "sha": "3203624fb4167b5d53199c75730ceff60fa4ff14",
      "filename": "ld/testsuite/ld-elf/pr25749-1c.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25749-1c.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25749-1c.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr25749-1c.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,4 +1,4 @@\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern void *_binary_pr25749_1_c_size __attribute__ ((visibility(\"hidden\")));\n "
    },
    {
      "sha": "361d74c6c886875535f7643d61c7897c277e2077",
      "filename": "ld/testsuite/ld-elf/pr25749-1d.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25749-1d.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25749-1d.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr25749-1d.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,4 +1,4 @@\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern void *_binary_pr25749_1_c_start;\n extern void *_binary_pr25749_1_c_end;"
    },
    {
      "sha": "9a1b2b802f53261a91c673060961790570caa16f",
      "filename": "ld/testsuite/ld-elf/pr25749-2.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25749-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25749-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr25749-2.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,12 +1,12 @@\n #include <stdio.h>\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern intptr_t size;\n \n int\n main ()\n {\n-  if (size == 293 /* size of this file */)\n+  if (size == 289 /* size of this file */)\n     printf (\"PASS\\n\");\n #ifdef __GLIBC_PREREQ\n # if !__GLIBC_PREREQ (2, 28)"
    },
    {
      "sha": "bc65c174d055f18334765909cd16f68de1079ec7",
      "filename": "ld/testsuite/ld-elf/pr25754-1a.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25754-1a.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25754-1a.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr25754-1a.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,5 +1,5 @@\n #include <stdio.h>\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern uintptr_t bar;\n "
    },
    {
      "sha": "7c7fb28f4d5286da1f1f7ec311d9d45e9b20b9ca",
      "filename": "ld/testsuite/ld-elf/pr25754-2a.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25754-2a.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25754-2a.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr25754-2a.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,5 +1,5 @@\n #include <stdio.h>\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern uintptr_t bar;\n "
    },
    {
      "sha": "e57dfe2cc2dec4ee4e694535a1f9e812a72f9d36",
      "filename": "ld/testsuite/ld-elf/pr25754-3a.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25754-3a.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25754-3a.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr25754-3a.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,5 +1,5 @@\n #include <stdio.h>\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern uintptr_t bar;\n "
    },
    {
      "sha": "1148ecae7282c48e0cb98b7d2e4679d34fafdfd0",
      "filename": "ld/testsuite/ld-elf/pr25754-4a.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25754-4a.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25754-4a.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr25754-4a.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,5 +1,5 @@\n #include <stdio.h>\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern uintptr_t *get_bar (void);\n "
    },
    {
      "sha": "8ddfccd5bd0a9ae852bd75d042e1c93a30665717",
      "filename": "ld/testsuite/ld-elf/pr25754-5a.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25754-5a.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25754-5a.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr25754-5a.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,5 +1,5 @@\n #include <stdio.h>\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern uintptr_t *get_bar (void);\n "
    },
    {
      "sha": "b8e7ade4c6daf747240bee63d7cb75318c62b835",
      "filename": "ld/testsuite/ld-elf/pr25754-6a.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25754-6a.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/ld/testsuite/ld-elf/pr25754-6a.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr25754-6a.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,5 +1,5 @@\n #include <stdio.h>\n-#include <bfd_stdint.h>\n+#include <stdint.h>\n \n extern uintptr_t *get_bar (void);\n "
    },
    {
      "sha": "ae4dea918cb7ffffa47bc9fe4c86a84927eed1a1",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -1,3 +1,17 @@\n+2021-03-31  Alan Modra  <amodra@gmail.com>\n+\n+\t* aarch64-dis.c: Include stdint.h in place of bfd_stdint.h.\n+\t* aarch64-dis.h: Likewise.\n+\t* aarch64-opc.c: Likewise.\n+\t* avr-dis.c: Likewise.\n+\t* csky-dis.c: Likewise.\n+\t* nds32-asm.c: Likewise.\n+\t* nds32-dis.c: Likewise.\n+\t* nfp-dis.c: Likewise.\n+\t* riscv-dis.c: Likewise.\n+\t* s12z-dis.c: Likewise.\n+\t* wasm32-dis.c: Likewise.\n+\n 2021-03-30  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-opc.c (cs, ds, ss, es, fs, gs): Delete."
    },
    {
      "sha": "1472f7da155983e7e27e64c50f1cffa2665905b4",
      "filename": "opcodes/aarch64-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/aarch64-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/aarch64-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -19,7 +19,7 @@\n    see <http://www.gnu.org/licenses/>.  */\n \n #include \"sysdep.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include \"disassemble.h\"\n #include \"libiberty.h\"\n #include \"opintl.h\""
    },
    {
      "sha": "97045114a2e076e7d5f341b473de4898194f8dc0",
      "filename": "opcodes/aarch64-dis.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/aarch64-dis.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/aarch64-dis.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis.h?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -20,7 +20,7 @@\n \n #ifndef OPCODES_AARCH64_DIS_H\n #define OPCODES_AARCH64_DIS_H\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include \"aarch64-opc.h\"\n \n /* Lookup opcode WORD in the opcode table."
    },
    {
      "sha": "1f04aad5f987d4c07813bdaed585ddb9f8b36a38",
      "filename": "opcodes/aarch64-opc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/aarch64-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/aarch64-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -22,7 +22,7 @@\n #include <assert.h>\n #include <stdlib.h>\n #include <stdio.h>\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include <stdarg.h>\n #include <inttypes.h>\n "
    },
    {
      "sha": "06f8a0c663b967d2b6d0b4efb41c413cd3ef9087",
      "filename": "opcodes/avr-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/avr-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/avr-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/avr-dis.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -25,7 +25,7 @@\n #include \"disassemble.h\"\n #include \"opintl.h\"\n #include \"libiberty.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n \n struct avr_opcodes_s\n {"
    },
    {
      "sha": "45af88c8928ab609be5c3c57c112c4f21f1a71f1",
      "filename": "opcodes/csky-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/csky-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/csky-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/csky-dis.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -22,7 +22,7 @@\n #include \"sysdep.h\"\n #include \"config.h\"\n #include <stdio.h>\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include <elf/csky.h>\n #include \"disassemble.h\"\n #include \"elf-bfd.h\""
    },
    {
      "sha": "f641c60f68c4378608f1b1fdaaa3ad1ab823e0d9",
      "filename": "opcodes/nds32-asm.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/nds32-asm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/nds32-asm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/nds32-asm.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -22,7 +22,7 @@\n \n #include \"sysdep.h\"\n \n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include <assert.h>\n \n #include \"safe-ctype.h\""
    },
    {
      "sha": "25bb475d1abcd746d22a847e3d93c0f358706c13",
      "filename": "opcodes/nds32-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/nds32-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/nds32-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/nds32-dis.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -27,7 +27,7 @@\n #include \"symcat.h\"\n #include \"libiberty.h\"\n #include \"opintl.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include \"hashtab.h\"\n #include \"nds32-asm.h\"\n #include \"opcode/nds32.h\""
    },
    {
      "sha": "39ded6694ab7696cc0e75dcbc178715708797c41",
      "filename": "opcodes/nfp-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/nfp-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/nfp-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/nfp-dis.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -33,7 +33,7 @@\n #include \"opintl.h\"\n #include \"elf-bfd.h\"\n #include \"bfd.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n \n #define _NFP_ERR_STOP -1\n #define _NFP_ERR_CONT -8"
    },
    {
      "sha": "7ef4d4df18412b0db376be7043bf8a4c81c33095",
      "filename": "opcodes/riscv-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/riscv-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/riscv-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-dis.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -29,7 +29,7 @@\n #include \"elf/riscv.h\"\n #include \"cpu-riscv.h\"\n \n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include <ctype.h>\n \n static enum riscv_spec_class default_priv_spec = PRIV_SPEC_CLASS_NONE;"
    },
    {
      "sha": "4616bc827111413de87b7b26650170579a92a51a",
      "filename": "opcodes/s12z-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/s12z-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/s12z-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/s12z-dis.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -20,7 +20,7 @@\n \n #include \"sysdep.h\"\n #include <stdio.h>\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n #include <stdbool.h>\n #include <assert.h>\n "
    },
    {
      "sha": "f3fde3286e76bb29587a23cc69b0333b320e2ad3",
      "filename": "opcodes/wasm32-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/wasm32-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dfb1b6d34ec74160735230f606b1df55c917f9d/opcodes/wasm32-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/wasm32-dis.c?ref=3dfb1b6d34ec74160735230f606b1df55c917f9d",
      "patch": "@@ -27,7 +27,7 @@\n #include \"elf-bfd.h\"\n #include \"elf/internal.h\"\n #include \"elf/wasm32.h\"\n-#include \"bfd_stdint.h\"\n+#include <stdint.h>\n \n #ifdef HAVE_LIMITS_H\n #include <limits.h>"
    }
  ]
}