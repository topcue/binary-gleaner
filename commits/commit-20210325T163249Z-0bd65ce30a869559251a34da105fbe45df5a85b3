{
  "sha": "0bd65ce30a869559251a34da105fbe45df5a85b3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGJkNjVjZTMwYTg2OTU1OTI1MWEzNGRhMTA1ZmJlNDVkZjVhODViMw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-25T16:32:46Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-25T16:32:49Z"
    },
    "message": "libctf: don't dereference out-of-bounds locations in the qualifier hashtab\n\nisqualifier, which is used by ctf_lookup_by_name to figure out if a\ngiven word in a type name is a qualifier, takes the address of a\npossibly out-of-bounds location before checking its bounds.\n\nIn any reasonable compiler this will just lead to a harmless address\ncomputation that is then discarded if out-of-bounds, but it's still\nundefined behaviour and the sanitizer rightly complains.\n\nlibctf/ChangeLog\n2021-03-25  Nick Alcock  <nick.alcock@oracle.com>\n\n\tPR libctf/27628\n\t* ctf-lookup.c (isqualifier): Don't dereference out-of-bounds\n\tqhash values.",
    "tree": {
      "sha": "6f4d610cb1ea5dafff6200641bdea29f0c961a98",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6f4d610cb1ea5dafff6200641bdea29f0c961a98"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0bd65ce30a869559251a34da105fbe45df5a85b3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0bd65ce30a869559251a34da105fbe45df5a85b3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0bd65ce30a869559251a34da105fbe45df5a85b3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0bd65ce30a869559251a34da105fbe45df5a85b3/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5226ef61131c1dbb58bcf4ff10ece4312690bc82",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5226ef61131c1dbb58bcf4ff10ece4312690bc82",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5226ef61131c1dbb58bcf4ff10ece4312690bc82"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 13,
    "deletions": 3
  },
  "files": [
    {
      "sha": "c5d52f29d69834bad8ebb2714d5219ac13f7b469",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0bd65ce30a869559251a34da105fbe45df5a85b3/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0bd65ce30a869559251a34da105fbe45df5a85b3/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=0bd65ce30a869559251a34da105fbe45df5a85b3",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-25  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\tPR libctf/27628\n+\t* ctf-lookup.c (isqualifier): Don't dereference out-of-bounds\n+\tqhash values.\n+\n 2021-03-25  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-open-bfd.c (ctf_bfdopen_ctfsect): Initialize debugging."
    },
    {
      "sha": "fe66bc4c00ce30753a562782a5abe9b7ce42f2c7",
      "filename": "libctf/ctf-lookup.c",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0bd65ce30a869559251a34da105fbe45df5a85b3/libctf/ctf-lookup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0bd65ce30a869559251a34da105fbe45df5a85b3/libctf/ctf-lookup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-lookup.c?ref=0bd65ce30a869559251a34da105fbe45df5a85b3",
      "patch": "@@ -111,10 +111,14 @@ isqualifier (const char *s, size_t len)\n   };\n \n   int h = s[len - 1] + (int) len - 105;\n-  const struct qual *qp = &qhash[h];\n+  const struct qual *qp;\n \n-  return (h >= 0 && (size_t) h < sizeof (qhash) / sizeof (qhash[0])\n-\t  && (size_t) len == qp->q_len &&\n+  if (h < 0 || (size_t) h >= sizeof (qhash) / sizeof (qhash[0]))\n+    return 0;\n+\n+  qp = &qhash[h];\n+\n+  return ((size_t) len == qp->q_len &&\n \t  strncmp (qp->q_name, s, qp->q_len) == 0);\n }\n "
    }
  ]
}