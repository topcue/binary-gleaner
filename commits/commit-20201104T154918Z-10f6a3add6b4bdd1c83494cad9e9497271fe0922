{
  "sha": "10f6a3add6b4bdd1c83494cad9e9497271fe0922",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTBmNmEzYWRkNmI0YmRkMWM4MzQ5NGNhZDllOTQ5NzI3MWZlMDkyMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-04T15:49:16Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-04T15:49:18Z"
    },
    "message": "Only use stride for final element type\n\nA DWARF array type may specify a stride.  Currently, the DWARF reader\napplies this stride to every dimension of an array.  However, this\nseems incorrect to me -- only the innermost array ought to use the\nstride, while outer arrays should compute a stride based on the size\nof the inner arrays.  This patch arranges to apply the stride only to\nthe innermost array type.  This fixes a bug noticed when running some\nAda tests with -fgnat-encodings=minimal.\n\ngdb/ChangeLog\n2020-11-04  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2/read.c (read_array_type): Only apply stride to innermost\n\tarray.\n\ngdb/testsuite/ChangeLog\n2020-11-04  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/enum_idx_packed.exp: Add test.\n\t* gdb.ada/enum_idx_packed/foo.adb (Multi_Access):\n\tNew variable.\n\t* gdb.ada/enum_idx_packed/pck.ads (Short)\n\t(Multi_Dimension, Multi_Dimension_Access): New types.",
    "tree": {
      "sha": "05a6b642c9632e078286abad56a9b5d731ede1e1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/05a6b642c9632e078286abad56a9b5d731ede1e1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/10f6a3add6b4bdd1c83494cad9e9497271fe0922",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10f6a3add6b4bdd1c83494cad9e9497271fe0922",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/10f6a3add6b4bdd1c83494cad9e9497271fe0922",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10f6a3add6b4bdd1c83494cad9e9497271fe0922/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b72795a8f573c36aaeedd1a64f58ad52b4c72439",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b72795a8f573c36aaeedd1a64f58ad52b4c72439",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b72795a8f573c36aaeedd1a64f58ad52b4c72439"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 38,
    "deletions": 4
  },
  "files": [
    {
      "sha": "a98f89dc137796a3045d6a9934a4b3bc89524bff",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10f6a3add6b4bdd1c83494cad9e9497271fe0922/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10f6a3add6b4bdd1c83494cad9e9497271fe0922/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=10f6a3add6b4bdd1c83494cad9e9497271fe0922",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2/read.c (read_array_type): Only apply stride to innermost\n+\tarray.\n+\n 2020-11-04  Tom Tromey  <tromey@adacore.com>\n \n \t* gdbtypes.c (update_static_array_size): Handle bit stride."
    },
    {
      "sha": "a41712765d679636546b5cb81abce6f2eeeec913",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 12,
      "deletions": 4,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10f6a3add6b4bdd1c83494cad9e9497271fe0922/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10f6a3add6b4bdd1c83494cad9e9497271fe0922/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=10f6a3add6b4bdd1c83494cad9e9497271fe0922",
      "patch": "@@ -17097,15 +17097,23 @@ read_array_type (struct die_info *die, struct dwarf2_cu *cu)\n       int i = 0;\n \n       while (i < range_types.size ())\n-\ttype = create_array_type_with_stride (NULL, type, range_types[i++],\n-\t\t\t\t\t      byte_stride_prop, bit_stride);\n+\t{\n+\t  type = create_array_type_with_stride (NULL, type, range_types[i++],\n+\t\t\t\t\t\tbyte_stride_prop, bit_stride);\n+\t  bit_stride = 0;\n+\t  byte_stride_prop = nullptr;\n+\t}\n     }\n   else\n     {\n       size_t ndim = range_types.size ();\n       while (ndim-- > 0)\n-\ttype = create_array_type_with_stride (NULL, type, range_types[ndim],\n-\t\t\t\t\t      byte_stride_prop, bit_stride);\n+\t{\n+\t  type = create_array_type_with_stride (NULL, type, range_types[ndim],\n+\t\t\t\t\t\tbyte_stride_prop, bit_stride);\n+\t  bit_stride = 0;\n+\t  byte_stride_prop = nullptr;\n+\t}\n     }\n \n   /* Understand Dwarf2 support for vector types (like they occur on"
    },
    {
      "sha": "d18d88fa2fa3788344120a8a832bbf1d8eb14df7",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10f6a3add6b4bdd1c83494cad9e9497271fe0922/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10f6a3add6b4bdd1c83494cad9e9497271fe0922/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=10f6a3add6b4bdd1c83494cad9e9497271fe0922",
      "patch": "@@ -1,3 +1,11 @@\n+2020-11-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/enum_idx_packed.exp: Add test.\n+\t* gdb.ada/enum_idx_packed/foo.adb (Multi_Access):\n+\tNew variable.\n+\t* gdb.ada/enum_idx_packed/pck.ads (Short)\n+\t(Multi_Dimension, Multi_Dimension_Access): New types.\n+\n 2020-11-04  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/enum_idx_packed.exp: Test two forms of -fgnat-encodings."
    },
    {
      "sha": "2e5a85e76b3f5eb36053e0734be0dfd9103aabf4",
      "filename": "gdb/testsuite/gdb.ada/enum_idx_packed.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10f6a3add6b4bdd1c83494cad9e9497271fe0922/gdb/testsuite/gdb.ada/enum_idx_packed.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10f6a3add6b4bdd1c83494cad9e9497271fe0922/gdb/testsuite/gdb.ada/enum_idx_packed.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/enum_idx_packed.exp?ref=10f6a3add6b4bdd1c83494cad9e9497271fe0922",
      "patch": "@@ -118,4 +118,7 @@ foreach_with_prefix scenario {all minimal} {\n \tsetup_kfail \"minimal encodings\" *-*-*\n     }\n     gdb_test \"print multi_multi(2)\" \" = $matrix\"\n+\n+    gdb_test \"print multi_access.all\" \\\n+\t\" = \\\\(\\\\(8, 13, 21, 34, 55\\\\), \\\\(1, 1, 2, 3, 5\\\\)\\\\)\"\n }"
    },
    {
      "sha": "bc82831bb84075b3172f2d495d27177acb1d716a",
      "filename": "gdb/testsuite/gdb.ada/enum_idx_packed/foo.adb",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10f6a3add6b4bdd1c83494cad9e9497271fe0922/gdb/testsuite/gdb.ada/enum_idx_packed/foo.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10f6a3add6b4bdd1c83494cad9e9497271fe0922/gdb/testsuite/gdb.ada/enum_idx_packed/foo.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/enum_idx_packed/foo.adb?ref=10f6a3add6b4bdd1c83494cad9e9497271fe0922",
      "patch": "@@ -22,11 +22,16 @@ procedure Foo is\n    Small : Small_Table := New_Small_Table (Low => Red, High => Green);\n    Multi : Multi_Table := New_Multi_Table (Red, Green, Low, Medium);\n    Multi_Multi : Multi_Multi_Table := New_Multi_Multi_Table (1, 2, 1, 7, 1, 10);\n+   Multi_Access : Multi_Dimension_Access\n+     := new Multi_Dimension'(True => (1, 1, 2, 3, 5),\n+                             False => (8, 13, 21, 34, 55));\n+\n begin\n    Do_Nothing (Full'Address);  -- STOP\n    Do_Nothing (Primary'Address);\n    Do_Nothing (Cold'Address);\n    Do_Nothing (Small'Address);\n    Do_Nothing (Multi'Address);\n    Do_Nothing (Multi_Multi'Address);\n+   Do_Nothing (Multi_Access'Address);\n end Foo;"
    },
    {
      "sha": "7fe5a9e01d40315e01a8bb3f047807bebc307202",
      "filename": "gdb/testsuite/gdb.ada/enum_idx_packed/pck.ads",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10f6a3add6b4bdd1c83494cad9e9497271fe0922/gdb/testsuite/gdb.ada/enum_idx_packed/pck.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10f6a3add6b4bdd1c83494cad9e9497271fe0922/gdb/testsuite/gdb.ada/enum_idx_packed/pck.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/enum_idx_packed/pck.ads?ref=10f6a3add6b4bdd1c83494cad9e9497271fe0922",
      "patch": "@@ -17,6 +17,7 @@ with System;\n package Pck is\n    type Color is (Black, Red, Green, Blue, White);\n    type Strength is (None, Low, Medium, High);\n+   type Short is new Natural range 0 .. 2 ** 8 - 1;\n \n    type Full_Table is array (Color) of Boolean;\n    pragma Pack (Full_Table);\n@@ -43,5 +44,9 @@ package Pck is\n    function New_Multi_Multi_Table (L1, H1, L2, H2, L3, H3: Positive)\n       return Multi_Multi_Table;\n \n+   type Multi_Dimension is array (Boolean, Color) of Short;\n+   pragma Pack (Multi_Dimension);\n+   type Multi_Dimension_Access is access all Multi_Dimension;\n+\n    procedure Do_Nothing (A : System.Address);\n end Pck;"
    }
  ]
}