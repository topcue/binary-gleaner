{
  "sha": "040b3e95e41f7af82e95c781aadc56a16019fd68",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDQwYjNlOTVlNDFmN2FmODJlOTVjNzgxYWFkYzU2YTE2MDE5ZmQ2OA==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-02-17T16:58:17Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-02-18T21:14:59Z"
    },
    "message": "Fix leaks of 'per program space' and 'per inferior' ada task data.\n\nValgrind reports leaks such as the below.\nFix these leaks by changing ada_tasks_pspace_data_handle\nand ada_tasks_inferior_data_handle to use the 'with_cleanup' register variant.\n\nTested on debian/amd64 natively and under Valgrind.\n\n==26346== 56 bytes in 1 blocks are definitely lost in loss record 631 of 3,249\n==26346==    at 0x4C2C4CC: operator new(unsigned long) (vg_replace_malloc.c:344)\n==26346==    by 0x38F911: get_ada_tasks_inferior_data(inferior*) (ada-tasks.c:281)\n==26346==    by 0x38FA3F: ada_tasks_invalidate_inferior_data (ada-tasks.c:1362)\n==26346==    by 0x38FA3F: ada_tasks_new_objfile_observer(objfile*) (ada-tasks.c:1411)\n==26346==    by 0x60CBC5: operator() (functional:2127)\n==26346==    by 0x60CBC5: notify (observable.h:106)\n==26346==    by 0x60CBC5: clear_symtab_users(enum_flags<symfile_add_flag>) (symfile.c:2903)\n...\n\n==26346== 104 bytes in 1 blocks are definitely lost in loss record 984 of 3,249\n==26346==    at 0x4C2E0BC: calloc (vg_replace_malloc.c:762)\n==26346==    by 0x4056F0: xcalloc (common-utils.c:84)\n==26346==    by 0x38F8AE: xcnew<ada_tasks_pspace_data> (poison.h:122)\n==26346==    by 0x38F8AE: get_ada_tasks_pspace_data(program_space*) (ada-tasks.c:253)\n==26346==    by 0x38FA77: ada_tasks_invalidate_pspace_data (ada-tasks.c:1354)\n==26346==    by 0x38FA77: ada_tasks_new_objfile_observer(objfile*) (ada-tasks.c:1394)\n==26346==    by 0x60CBC5: operator() (functional:2127)\n==26346==    by 0x60CBC5: notify (observable.h:106)\n...\n\ngdb/ChangeLog\n2019-02-18  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* ada-task.c (_initialize_tasks): Use 'with_cleanup' register\n\tvariant for ada_tasks_pspace_data_handle and\n\tada_tasks_inferior_data_handle.\n\t(ada_tasks_pspace_data_cleanup): New function.\n\t(ada_tasks_inferior_data_cleanup): New function.",
    "tree": {
      "sha": "ee4afeb18e8eb33018fd7837347b08caca60e67b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ee4afeb18e8eb33018fd7837347b08caca60e67b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/040b3e95e41f7af82e95c781aadc56a16019fd68",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/040b3e95e41f7af82e95c781aadc56a16019fd68",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/040b3e95e41f7af82e95c781aadc56a16019fd68",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/040b3e95e41f7af82e95c781aadc56a16019fd68/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "a31b8bd9a054b494fd6ab18f14d84a2f0690f8a1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a31b8bd9a054b494fd6ab18f14d84a2f0690f8a1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a31b8bd9a054b494fd6ab18f14d84a2f0690f8a1"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 32,
    "deletions": 2
  },
  "files": [
    {
      "sha": "65d6548733956c5f4ecf07ffbfeab11e9094b4a4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/040b3e95e41f7af82e95c781aadc56a16019fd68/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/040b3e95e41f7af82e95c781aadc56a16019fd68/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=040b3e95e41f7af82e95c781aadc56a16019fd68",
      "patch": "@@ -1,3 +1,11 @@\n+2019-02-18  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* ada-task.c (_initialize_tasks): Use 'with_cleanup' register\n+\tvariant for ada_tasks_pspace_data_handle and\n+\tada_tasks_inferior_data_handle.\n+\t(ada_tasks_pspace_data_cleanup): New function.\n+\t(ada_tasks_inferior_data_cleanup): New function.\n+\n 2019-02-17  Tom Tromey  <tom@tromey.com>\n \n \t* macrotab.h (macro_source_fullname): Return a std::string."
    },
    {
      "sha": "440e32bf483d79b41944c92a6f34f56021ae7f34",
      "filename": "gdb/ada-tasks.c",
      "status": "modified",
      "additions": 24,
      "deletions": 2,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/040b3e95e41f7af82e95c781aadc56a16019fd68/gdb/ada-tasks.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/040b3e95e41f7af82e95c781aadc56a16019fd68/gdb/ada-tasks.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-tasks.c?ref=040b3e95e41f7af82e95c781aadc56a16019fd68",
      "patch": "@@ -161,6 +161,15 @@ struct ada_tasks_pspace_data\n /* Key to our per-program-space data.  */\n static const struct program_space_data *ada_tasks_pspace_data_handle;\n \n+/* A cleanup routine for our per-program-space data.  */\n+static void\n+ada_tasks_pspace_data_cleanup (struct program_space *pspace, void *arg)\n+{\n+  struct ada_tasks_pspace_data *data\n+    = (struct ada_tasks_pspace_data *) arg;\n+  xfree (data);\n+}\n+\n /* The kind of data structure used by the runtime to store the list\n    of Ada tasks.  */\n \n@@ -285,6 +294,15 @@ get_ada_tasks_inferior_data (struct inferior *inf)\n   return data;\n }\n \n+/* A cleanup routine for our per-inferior data.  */\n+static void\n+ada_tasks_inferior_data_cleanup (struct inferior *inf, void *arg)\n+{\n+  struct ada_tasks_inferior_data *data\n+    = (struct ada_tasks_inferior_data *) arg;\n+  delete data;\n+}\n+\n /* Return the task number of the task whose thread is THREAD, or zero\n    if the task could not be found.  */\n \n@@ -1414,8 +1432,12 @@ ada_tasks_new_objfile_observer (struct objfile *objfile)\n void\n _initialize_tasks (void)\n {\n-  ada_tasks_pspace_data_handle = register_program_space_data ();\n-  ada_tasks_inferior_data_handle = register_inferior_data ();\n+  ada_tasks_pspace_data_handle\n+    = register_program_space_data_with_cleanup (NULL,\n+\t\t\t\t\t\tada_tasks_pspace_data_cleanup);\n+  ada_tasks_inferior_data_handle\n+    = register_inferior_data_with_cleanup (NULL,\n+\t\t\t\t\t   ada_tasks_inferior_data_cleanup);\n \n   /* Attach various observers.  */\n   gdb::observers::normal_stop.attach (ada_tasks_normal_stop_observer);"
    }
  ]
}