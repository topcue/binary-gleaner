{
  "sha": "3abf97582679343f1708252712e9254d3e0f132c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2FiZjk3NTgyNjc5MzQzZjE3MDgyNTI3MTJlOTI1NGQzZTBmMTMyYw==",
  "commit": {
    "author": {
      "name": "Maciej W. Rozycki",
      "email": "macro@linux-mips.org",
      "date": "2020-07-26T13:43:21Z"
    },
    "committer": {
      "name": "Maciej W. Rozycki",
      "email": "macro@linux-mips.org",
      "date": "2020-07-26T13:43:21Z"
    },
    "message": "MIPS/binutils/testsuite: Correct mips.exp test ABI/emul/endian arrangement\n\nThe binutils testsuite supports involving LD in processing test cases\nand with the MIPS target that has the same issues the LD testsuite does.\n\nSo to support LD in the MIPS part of the binutils testsuite similarly\nto commit 86b24e15c45b (\"MIPS/LD/testsuite: Correct comm-data.exp test\nABI/emul/endian arrangement\") update the mips.exp test script to:\n\n- correctly select emulations for targets using non-traditional MIPS\n  emulations,\n\n- correctly select ABIs for targets that do not support all of them,\n\n- use the default endianness selection where possible to benefit targets\n  that support only one,\n\n- simplify test invocation by providing ABI-specific `run_dump_test'\n  wrappers, specifically `run_dump_test_o32', `run_dump_test_n32' and\n  `run_dump_test_n64', which remove the need to use conditionals across\n  the Expect script or to repeat ABI-specific GAS and LD flags with each\n  invocation,\n\nborrowing changes from commit 78da84f99405 (\"MIPS/LD/testsuite: Correct\nmips-elf.exp test ABI/emul/endian arrangement\").\n\nAs a side effect this disables o32 ABI testing for targets that are not\nsupposed to support them and do not with LD, but still have such support\nwith BFD and GAS due to our inflexibility in configuration.  Ultimately\nwe ought to support having o32 completely disabled.\n\n\tbinutils/\n\t* testsuite/binutils-all/mips/mips.exp (run_dump_test_abi)\n\t(run_dump_test_o32, run_dump_test_n32, run_dump_test_n64): New\n\tprocedures.\n\t(has_newabi): Remove variable.\n\t(has_abi, abi_asflags, abi_ldflags): New associative array\n\tvariables.\n\t(irixemul): New variable.\n\tReplace `run_dump_test' calls where applicable throughout with\n\t`run_dump_test_o32', `run_dump_test_n32' and `run_dump_test_n64'\n\tas appropriate.  Use `noarch' for tests that require their own\n\tarchitecture setting.\n\t* testsuite/binutils-all/mips/mips-ase-1.d: Remove GAS flags.\n\t* testsuite/binutils-all/mips/mips-ase-2.d: Likewise.\n\t* testsuite/binutils-all/mips/mips-ase-3.d: Likewise.\n\t* testsuite/binutils-all/mips/mips-note-2-n32.d: Likewise.\n\t* testsuite/binutils-all/mips/mips-note-2-n64.d: Likewise.\n\t* testsuite/binutils-all/mips/mips-note-2.d: Likewise.\n\t* testsuite/binutils-all/mips/mips-note-2r-n32.d: Likewise.\n\t* testsuite/binutils-all/mips/mips-note-2r-n64.d: Likewise.\n\t* testsuite/binutils-all/mips/mips-note-2r.d: Likewise.\n\t* testsuite/binutils-all/mips/mips-reginfo-n32.d: Likewise.\n\t* testsuite/binutils-all/mips/mips-reginfo.d: Likewise.\n\t* testsuite/binutils-all/mips/mips16-extend-noinsn.d: Likewise.\n\t* testsuite/binutils-all/mips/mips16-pcrel.d: Likewise.\n\t* testsuite/binutils-all/mips/mips16-alias.d: Remove `-32' from\n\tGAS flags.\n\t* testsuite/binutils-all/mips/mips16-extend-insn.d: Likewise.\n\t* testsuite/binutils-all/mips/mips16-noalias.d: Likewise.\n\t* testsuite/binutils-all/mips/mips16-undecoded.d: Likewise.\n\t* testsuite/binutils-all/mips/mips16e2-extend-insn.d: Likewise.\n\t* testsuite/binutils-all/mips/mips16e2-undecoded.d: Likewise.\n\t* testsuite/binutils-all/mips/mixed-micromips.d: Likewise.\n\t* testsuite/binutils-all/mips/mixed-mips16.d: Likewise.",
    "tree": {
      "sha": "121245fd69b48bb39358006387274ca5c8289e54",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/121245fd69b48bb39358006387274ca5c8289e54"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3abf97582679343f1708252712e9254d3e0f132c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3abf97582679343f1708252712e9254d3e0f132c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3abf97582679343f1708252712e9254d3e0f132c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3abf97582679343f1708252712e9254d3e0f132c/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "a237ab1af0c805298c319ca16004a606181c4bd2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a237ab1af0c805298c319ca16004a606181c4bd2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a237ab1af0c805298c319ca16004a606181c4bd2"
    }
  ],
  "stats": {
    "total": 311,
    "additions": 258,
    "deletions": 53
  },
  "files": [
    {
      "sha": "c308d897b22c8d8cecc71d8487b25480995b0375",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,3 +1,39 @@\n+2020-07-26  Maciej W. Rozycki  <macro@linux-mips.org>\n+\n+\t* testsuite/binutils-all/mips/mips.exp (run_dump_test_abi)\n+\t(run_dump_test_o32, run_dump_test_n32, run_dump_test_n64): New\n+\tprocedures.\n+\t(has_newabi): Remove variable.\n+\t(has_abi, abi_asflags, abi_ldflags): New associative array\n+\tvariables.\n+\t(irixemul): New variable.\n+\tReplace `run_dump_test' calls where applicable throughout with\n+\t`run_dump_test_o32', `run_dump_test_n32' and `run_dump_test_n64'\n+\tas appropriate.  Use `noarch' for tests that require their own\n+\tarchitecture setting.\n+\t* testsuite/binutils-all/mips/mips-ase-1.d: Remove GAS flags.\n+\t* testsuite/binutils-all/mips/mips-ase-2.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-ase-3.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2-n32.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2-n64.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2r-n32.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2r-n64.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2r.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-reginfo-n32.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-reginfo.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16-extend-noinsn.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16-pcrel.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16-alias.d: Remove `-32' from\n+\tGAS flags.\n+\t* testsuite/binutils-all/mips/mips16-extend-insn.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16-noalias.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16-undecoded.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16e2-extend-insn.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16e2-undecoded.d: Likewise.\n+\t* testsuite/binutils-all/mips/mixed-micromips.d: Likewise.\n+\t* testsuite/binutils-all/mips/mixed-mips16.d: Likewise.\n+\n 2020-07-24  Aaron Merey  <amerey@redhat.com>\n \n \t* Makefile.am: Replace LIBDEBUGINFOD with DEBUGINFOD_LIBS."
    },
    {
      "sha": "cfcefdd50eb61efcf9d2ad4b6c6d76e4f312e672",
      "filename": "binutils/testsuite/binutils-all/mips/mips-ase-1.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-ase-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-ase-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips-ase-1.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,6 @@\n #PROG: objcopy\n #objdump: -dp --prefix-addresses --show-raw-insn\n #name: MIPS ELF file ASE information interpretation for disassembly 1\n-#as: -32\n \n # Verify that in the absence of its ASE flag MDMX code is not disassembled\n # with MIPS64r2, where MDMX presence is not implied."
    },
    {
      "sha": "ecc6344df928cad86e5bcac9b99ade7ccd0befb3",
      "filename": "binutils/testsuite/binutils-all/mips/mips-ase-2.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-ase-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-ase-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips-ase-2.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,6 @@\n #PROG: objcopy\n #objdump: -dp --prefix-addresses --show-raw-insn\n #name: MIPS ELF file ASE information interpretation for disassembly 2\n-#as: -32\n \n # Verify that in the presence of its ASE flag MDMX code is disassembled\n # with MIPS64r2, where MDMX presence is not implied."
    },
    {
      "sha": "0ae9d1bed2540c6883daabfea5a3e0a11566f8a6",
      "filename": "binutils/testsuite/binutils-all/mips/mips-ase-3.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-ase-3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-ase-3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips-ase-3.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,6 @@\n #PROG: objcopy\n #objdump: -dp --prefix-addresses --show-raw-insn\n #name: MIPS ELF file ASE information interpretation for disassembly 3\n-#as: -32\n #objcopy: -R .MIPS.abiflags\n #source: mips-ase-2.s\n "
    },
    {
      "sha": "c2a581858ed30e5e657dd6fb197af51224ff0872",
      "filename": "binutils/testsuite/binutils-all/mips/mips-note-2-n32.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-note-2-n32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-note-2-n32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips-note-2-n32.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -2,6 +2,5 @@\n #readelf: --notes --wide\n #objcopy: --merge-notes\n #name: MIPS merge notes section (n32)\n-#as: -n32 -mips3\n #source: ../note-2-32.s\n #dump: ../note-2-32.d"
    },
    {
      "sha": "2a7ed7e1fde6e6bfbeba4e5dea533aaa5eb0dde4",
      "filename": "binutils/testsuite/binutils-all/mips/mips-note-2-n64.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-note-2-n64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-note-2-n64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips-note-2-n64.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -2,6 +2,5 @@\n #readelf: --notes --wide\n #objcopy: --merge-notes\n #name: MIPS merge notes section (n64)\n-#as: -64 -mips3\n #source: ../note-2-64.s\n #dump: ../note-2-64.d"
    },
    {
      "sha": "195b372fd02e0e3186a664b977a5b8c78ef6d61e",
      "filename": "binutils/testsuite/binutils-all/mips/mips-note-2.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-note-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-note-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips-note-2.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -2,6 +2,5 @@\n #readelf: --notes --wide\n #objcopy: --merge-notes\n #name: MIPS merge notes section (o32)\n-#as: -32\n #source: ../note-2-32.s\n #dump: ../note-2-32.d"
    },
    {
      "sha": "7522c28d9e665bfa9f0cc336cc2dd64fc21f8ecd",
      "filename": "binutils/testsuite/binutils-all/mips/mips-note-2r-n32.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-note-2r-n32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-note-2r-n32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips-note-2r-n32.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -2,7 +2,6 @@\n #readelf: --relocs\n #objcopy: --merge-notes\n #name: MIPS merge notes section relocations (n32)\n-#as: -n32 -mips3\n #source: ../note-2-32.s\n \n There are no relocations in this file."
    },
    {
      "sha": "8b3bd96140b5f898c025e3341288e8d01ec0566e",
      "filename": "binutils/testsuite/binutils-all/mips/mips-note-2r-n64.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-note-2r-n64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-note-2r-n64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips-note-2r-n64.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -2,7 +2,6 @@\n #readelf: --relocs\n #objcopy: --merge-notes\n #name: MIPS merge notes section relocations (n64)\n-#as: -64 -mips3\n #source: ../note-2-64.s\n \n There are no relocations in this file."
    },
    {
      "sha": "821b76c23d917cdc883ed4abececa79072d7ded9",
      "filename": "binutils/testsuite/binutils-all/mips/mips-note-2r.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-note-2r.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-note-2r.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips-note-2r.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -2,7 +2,6 @@\n #readelf: --relocs\n #objcopy: --merge-notes\n #name: MIPS merge notes section relocations (o32)\n-#as: -32\n #source: ../note-2-32.s\n \n There are no relocations in this file."
    },
    {
      "sha": "9ecaba29578a85a2ba8bf0bbdaf60f1efa877ce3",
      "filename": "binutils/testsuite/binutils-all/mips/mips-reginfo-n32.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-reginfo-n32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-reginfo-n32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips-reginfo-n32.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,6 +1,5 @@\n #PROG: objcopy\n #name: MIPS objcopy .reginfo section size (n32)\n-#as: -n32 -mips3\n #objcopy: --rename-section .foo=.reginfo\n #source: mips-reginfo.s\n #error: \\A[^\\n]*: incorrect `\\.reginfo' section size; expected 24, got 4\\n"
    },
    {
      "sha": "656d02adab12698545f50757f69a8c32309eab95",
      "filename": "binutils/testsuite/binutils-all/mips/mips-reginfo.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-reginfo.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips-reginfo.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips-reginfo.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,6 +1,5 @@\n #PROG: objcopy\n #name: MIPS objcopy .reginfo section size\n-#as: -32\n #objcopy: --rename-section .foo=.reginfo\n #error: \\A[^\\n]*: incorrect `\\.reginfo' section size; expected 24, got 4\\n\n #error:   [^\\n]*: bad value\\Z"
    },
    {
      "sha": "ea06ee6c2b9fcfd5d771991d135d9bcbe02c3797",
      "filename": "binutils/testsuite/binutils-all/mips/mips.exp",
      "status": "modified",
      "additions": 214,
      "deletions": 32,
      "changes": 246,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips.exp?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -27,41 +27,223 @@ if [is_remote host] {\n     set copyfile tmpdir/copy\n }\n \n-set has_newabi [expr [istarget *-*-irix6*] \\\n-\t\t     || [istarget mips*-*-linux*] \\\n-\t\t     || [istarget mips*-sde-elf*] \\\n-\t\t     || [istarget mips*-mti-elf*] \\\n-\t\t     || [istarget mips*-img-elf*]]\n-\n-run_dump_test \"mips-ase-1\"\n-run_dump_test \"mips-ase-2\"\n-run_dump_test \"mips-ase-3\"\n+# run_dump_test_abi ABI NAME ARGS\n+#\n+# Invoke \"run_dump_test\" for test NAME using ABI if supported by the\n+# target used, passing predefined ABI-specific arguments.  ARGS are\n+# as with \"run_dump_test\" and are appended to ABI-specific arguments,\n+# except for the special \"noarch\" keyword, which, if present, must\n+# appear first and is consumed causing any \"-march=\" option to be\n+# removed from ABI-specific GAS arguments, and likewise the special\n+# \"useld\" keyword, which, if present, must be next and is consumed\n+# causing LD arguments to be passed.\n+proc run_dump_test_abi { abi name args } {\n+    global abi_asflags\n+    global abi_ldflags\n+    global has_abi\n+\n+    set args [lindex $args 0]\n+    set asflags $abi_asflags($abi)\n+    if { [lindex $args 0] == \"noarch\" } {\n+\tset asflags [regsub -- {-march=[^[:blank:]]*} $asflags {}]\n+\tset args [lreplace $args 0 0]\n+    }\n+    if { [lindex $args 0] == \"useld\" } {\n+\tset ldflags $abi_ldflags($abi)\n+\tset args [lreplace $args 0 0]\n+    }\n+    if !$has_abi($abi) {\n+\tlappend args {notarget *-*-*}\n+    }\n+\n+    set testargs [list [list as $asflags]]\n+    if { [info exists ldflags] } {\n+\tlappend testargs [list ld $ldflags]\n+    }\n+    if { [llength $args] > 0 } {\n+\tset testargs [concat $testargs $args]\n+    }\n+\n+    run_dump_test $name $testargs\n+}\n+\n+# run_dump_test_o32 NAME ARGS\n+#\n+# Invoke \"run_dump_test_abi\" for test NAME using the o32 ABI and\n+# passing ARGS.\n+proc run_dump_test_o32 { name args } {\n+    run_dump_test_abi o32 $name [lindex $args 0]\n+}\n+\n+# run_dump_test_n32 NAME ARGS\n+#\n+# Invoke \"run_dump_test_abi\" for test NAME using the n32 ABI and\n+# passing ARGS.\n+proc run_dump_test_n32 { name args } {\n+    run_dump_test_abi n32 $name [lindex $args 0]\n+}\n+\n+# run_dump_test_n64 NAME ARGS\n+#\n+# Invoke \"run_dump_test_abi\" for test NAME using the n64 ABI and\n+# passing ARGS.\n+proc run_dump_test_n64 { name args } {\n+    run_dump_test_abi n64 $name [lindex $args 0]\n+}\n+\n+set has_abi(o32) [expr ![istarget *-*-openbsd*] \\\n+\t\t     && ![istarget mips64*el-ps2-elf*]]\n+set has_abi(n32) [expr [istarget *-img-elf*] \\\n+\t\t     || [istarget *-mti-elf*] \\\n+\t\t     || [istarget mips64*el-ps2-elf*] \\\n+\t\t     || [istarget *-sde-elf*] \\\n+\t\t     || [istarget *-*-freebsd*] \\\n+\t\t     || [istarget *-*-irix6*] \\\n+\t\t     || [istarget *-*-kfreebsd*-gnu] \\\n+\t\t     || [istarget *-*-linux*]]\n+set has_abi(n64) [expr [istarget *-*-freebsd*] \\\n+\t\t     || [istarget *-*-irix6*] \\\n+\t\t     || [istarget *-*-kfreebsd*-gnu] \\\n+\t\t     || [istarget *-*-linux*] \\\n+\t\t     || [istarget *-*-netbsd*] \\\n+\t\t     || [istarget *-*-openbsd*]]\n+\n+# Set defaults.\n+set abi_asflags(o32) \"\"\n+set abi_asflags(n32) \"\"\n+set abi_asflags(n64) \"\"\n+set abi_asflags(eabi) \"\"\n+set abi_ldflags(o32) \"\"\n+set abi_ldflags(n32) \"\"\n+set abi_ldflags(n64) \"\"\n+set abi_ldflags(eabi) \"\"\n+\n+# Override as needed.\n+if {[istarget *-*-openbsd*] } {\n+    set irixemul 0\n+} elseif { [istarget mips64*-*-linux*] } {\n+    if [istarget *el-*-*] {\n+\tset abi_asflags(o32) -32\n+\tset abi_ldflags(o32) -melf32ltsmip\n+\tset abi_asflags(n64) \"-march=from-abi -64\"\n+\tset abi_ldflags(n64) -melf64ltsmip\n+    } else {\n+\tset abi_asflags(o32) -32\n+\tset abi_ldflags(o32) -melf32btsmip\n+\tset abi_asflags(n64) \"-march=from-abi -64\"\n+\tset abi_ldflags(n64) -melf64btsmip\n+    }\n+    set irixemul 0\n+} elseif {[istarget *-*-linux*] } {\n+    if [istarget *el-*-*] {\n+\tset abi_asflags(n32) \"-march=from-abi -n32\"\n+\tset abi_ldflags(n32) -melf32ltsmipn32\n+\tset abi_asflags(n64) \"-march=from-abi -64\"\n+\tset abi_ldflags(n64) -melf64ltsmip\n+    } else {\n+\tset abi_asflags(n32) \"-march=from-abi -n32\"\n+\tset abi_ldflags(n32) -melf32btsmipn32\n+\tset abi_asflags(n64) \"-march=from-abi -64\"\n+\tset abi_ldflags(n64) -melf64btsmip\n+    }\n+    set irixemul 0\n+} elseif {[istarget *-img-elf*] \\\n+     || [istarget *-mti-elf*] \\\n+     || [istarget *-sde-elf*] \\\n+     || [istarget *-*-netbsd*] \\\n+     || [istarget *-*-linux*] \\\n+     || [istarget *-*-sysv4*] } {\n+    if [istarget *el-*-*] {\n+\tset abi_asflags(o32) -32\n+\tset abi_asflags(n32) \"-march=from-abi -n32\"\n+\tset abi_ldflags(n32) -melf32ltsmipn32\n+\tset abi_asflags(n64) \"-march=from-abi -64\"\n+\tset abi_ldflags(n64) -melf64ltsmip\n+    } else {\n+\tset abi_asflags(o32) -32\n+\tset abi_asflags(n32) \"-march=from-abi -n32\"\n+\tset abi_ldflags(n32) -melf32btsmipn32\n+\tset abi_asflags(n64) \"-march=from-abi -64\"\n+\tset abi_ldflags(n64) -melf64btsmip\n+    }\n+    set irixemul 0\n+} elseif { [istarget mips64*-*-freebsd*] \\\n+\t   || [istarget mips64*-*-kfreebsd*-gnu] } {\n+    if [istarget *el-*-*] {\n+\tset abi_asflags(o32) -32\n+\tset abi_ldflags(o32) -melf32ltsmip_fbsd\n+\tset abi_asflags(n64) \"-march=from-abi -64\"\n+\tset abi_ldflags(n64) -melf64ltsmip_fbsd\n+    } else {\n+\tset abi_asflags(o32) -32\n+\tset abi_ldflags(o32) -melf32btsmip_fbsd\n+\tset abi_asflags(n64) \"-march=from-abi -64\"\n+\tset abi_ldflags(n64) -melf64btsmip_fbsd\n+    }\n+    set irixemul 0\n+} elseif { [istarget *-*-freebsd*] \\\n+\t   || [istarget *-*-kfreebsd*-gnu] } {\n+    if [istarget *el-*-*] {\n+\tset abi_asflags(n32) \"-march=from-abi -n32\"\n+\tset abi_ldflags(n32) -melf32ltsmipn32_fbsd\n+\tset abi_asflags(n64) \"-march=from-abi -64\"\n+\tset abi_ldflags(n64) -melf64ltsmip_fbsd\n+    } else {\n+\tset abi_asflags(n32) \"-march=from-abi -n32\"\n+\tset abi_ldflags(n32) -melf32btsmipn32_fbsd\n+\tset abi_asflags(n64) \"-march=from-abi -64\"\n+\tset abi_ldflags(n64) -melf64btsmip_fbsd\n+    }\n+    set irixemul 0\n+} elseif { [istarget *vr4100*-*-elf*] \\\n+\t   || [istarget *vr4300*-*-elf*] \\\n+\t   || [istarget *vr5000*-*-elf*] } {\n+    set abi_asflags(o32) -32\n+    set irixemul 1\n+} elseif { [istarget mips64*el-ps2-elf*] } {\n+    set abi_asflags(o32) -32\n+    set abi_ldflags(o32) -melf32lr5900\n+    set irixemul 1\n+} elseif { [istarget *-*-elf*] \\\n+\t   || [istarget *-*-rtems*] } {\n+    set abi_asflags(o32) -32\n+    set irixemul 1\n+} elseif { [istarget *-*-irix6*] } {\n+    set abi_asflags(o32) -32\n+    set abi_asflags(n64) \"-march=from-abi -64\"\n+    set abi_ldflags(o32) -melf32bsmip\n+    set abi_ldflags(n64) -melf64bmip\n+    set irixemul 1\n+} else {\n+    set abi_asflags(o32) -32\n+    set irixemul 1\n+}\n+\n+run_dump_test_o32 \"mips-ase-1\"\n+run_dump_test_o32 \"mips-ase-2\"\n+run_dump_test_o32 \"mips-ase-3\"\n run_dump_test \"mips-xpa-virt-1\"\n run_dump_test \"mips-xpa-virt-2\"\n run_dump_test \"mips-xpa-virt-3\"\n run_dump_test \"mips-xpa-virt-4\"\n-run_dump_test \"mixed-mips16\"\n-run_dump_test \"mixed-micromips\"\n+run_dump_test_o32 \"mixed-mips16\" noarch\n+run_dump_test_o32 \"mixed-micromips\" noarch\n run_dump_test \"mixed-mips16-micromips\"\n-run_dump_test \"mips16-undecoded\"\n-run_dump_test \"mips16e2-undecoded\"\n-run_dump_test \"mips16-pcrel\"\n-run_dump_test \"mips16-extend-noinsn\"\n-run_dump_test \"mips16-extend-insn\"\n-run_dump_test \"mips16e2-extend-insn\"\n-run_dump_test \"mips16-alias\"\n-run_dump_test \"mips16-noalias\"\n-\n-run_dump_test \"mips-note-2\"\n-run_dump_test \"mips-note-2r\"\n-if $has_newabi {\n-    run_dump_test \"mips-note-2-n32\"\n-    run_dump_test \"mips-note-2-n64\"\n-    run_dump_test \"mips-note-2r-n32\"\n-    run_dump_test \"mips-note-2r-n64\"\n-}\n+run_dump_test_o32 \"mips16-undecoded\" noarch\n+run_dump_test_o32 \"mips16e2-undecoded\" noarch\n+run_dump_test_o32 \"mips16-pcrel\"\n+run_dump_test_o32 \"mips16-extend-noinsn\"\n+run_dump_test_o32 \"mips16-extend-insn\" noarch\n+run_dump_test_o32 \"mips16e2-extend-insn\" noarch\n+run_dump_test_o32 \"mips16-alias\" noarch\n+run_dump_test_o32 \"mips16-noalias\" noarch\n \n-run_dump_test \"mips-reginfo\"\n-if $has_newabi {\n-    run_dump_test \"mips-reginfo-n32\"\n-}\n+run_dump_test_o32 \"mips-note-2\"\n+run_dump_test_n32 \"mips-note-2-n32\"\n+run_dump_test_n64 \"mips-note-2-n64\"\n+run_dump_test_o32 \"mips-note-2r\"\n+run_dump_test_n32 \"mips-note-2r-n32\"\n+run_dump_test_n64 \"mips-note-2r-n64\"\n+\n+run_dump_test_o32 \"mips-reginfo\"\n+run_dump_test_n32 \"mips-reginfo-n32\""
    },
    {
      "sha": "5878b68388e9704c452c6e2748dd930ac1bde47b",
      "filename": "binutils/testsuite/binutils-all/mips/mips16-alias.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16-alias.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16-alias.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips16-alias.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,7 @@\n #PROG: objcopy\n #objdump: -d --prefix-addresses --show-raw-insn\n #name: MIPS16 instruction alias disassembly\n-#as: -32 -mips3\n+#as: -mips3\n \n .*: +file format .*mips.*\n "
    },
    {
      "sha": "e3f3d20d608fb3ff00dab62d818656d37cdeecaf",
      "filename": "binutils/testsuite/binutils-all/mips/mips16-extend-insn.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16-extend-insn.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16-extend-insn.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips16-extend-insn.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,7 @@\n #PROG: objcopy\n #objdump: -d --prefix-addresses --show-raw-insn\n #name: MIPS16 extensible and non-extensible instruction disassembly\n-#as: -32 -mips64\n+#as: -mips64\n \n # Verify interpreted and separate respectively EXTEND prefix disassembly\n # for extensible and non-extensible instructions."
    },
    {
      "sha": "5200efebe7ae2cad7c405636f20f17f711034b85",
      "filename": "binutils/testsuite/binutils-all/mips/mips16-extend-noinsn.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16-extend-noinsn.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16-extend-noinsn.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips16-extend-noinsn.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,6 @@\n #PROG: objcopy\n #objdump: -d --prefix-addresses --show-raw-insn\n #name: MIPS16 unsupported EXTEND and undefined opcode disassembly\n-#as: -32\n \n # Verify raw hexadecimal EXTEND and inexistent opcode disassembly.\n "
    },
    {
      "sha": "5af2db8c5f8146874b141cb9a4cabd45c345221a",
      "filename": "binutils/testsuite/binutils-all/mips/mips16-noalias.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16-noalias.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16-noalias.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips16-noalias.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,7 @@\n #PROG: objcopy\n #objdump: -M no-aliases -d --prefix-addresses --show-raw-insn\n #name: MIPS16 canonical alias disassembly\n-#as: -32 -mips3\n+#as: -mips3\n #source: mips16-alias.s\n \n .*: +file format .*mips.*"
    },
    {
      "sha": "9ce5cb35c131da589da8fe880e60ad8286eb313b",
      "filename": "binutils/testsuite/binutils-all/mips/mips16-pcrel.d",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16-pcrel.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16-pcrel.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips16-pcrel.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,6 @@\n #PROG: objcopy\n #objdump: -d --prefix-addresses --show-raw-insn\n #name: MIPS16 PC-relative instruction disassembly\n-#as: -32\n \n # Verify delay-slot adjustment for PC-relative operations.\n "
    },
    {
      "sha": "a63bc177bf4cf83bca03234a13ff7deea16316f7",
      "filename": "binutils/testsuite/binutils-all/mips/mips16-undecoded.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16-undecoded.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16-undecoded.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips16-undecoded.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,7 @@\n #PROG: objcopy\n #objdump: -dr --prefix-addresses --show-raw-insn\n #name: MIPS16 undecoded extended instruction field disassembly\n-#as: -32 -mips3\n+#as: -mips3\n \n .*: +file format .*mips.*\n "
    },
    {
      "sha": "c449cbabd9a500970ae95490792d6d58b1c3ccdf",
      "filename": "binutils/testsuite/binutils-all/mips/mips16e2-extend-insn.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16e2-extend-insn.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16e2-extend-insn.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips16e2-extend-insn.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,7 @@\n #PROG: objcopy\n #objdump: -d --prefix-addresses --show-raw-insn\n #name: MIPS16e2 extensible and non-extensible instruction disassembly\n-#as: -32 -mips64r2 -mmips16e2\n+#as: -mips64r2 -mmips16e2\n #source: mips16-extend-insn.s\n \n # Verify interpreted and separate respectively EXTEND prefix disassembly"
    },
    {
      "sha": "f5e6c3a2a1abfa457cfd33168de3858d5301f6b0",
      "filename": "binutils/testsuite/binutils-all/mips/mips16e2-undecoded.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16e2-undecoded.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mips16e2-undecoded.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mips16e2-undecoded.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,7 @@\n #PROG: objcopy\n #objdump: -dr --prefix-addresses --show-raw-insn\n #name: MIPS16e2 undecoded extended instruction field disassembly\n-#as: -32 -mips64r2 -mmips16e2\n+#as: -mips64r2 -mmips16e2\n #source: mips16-undecoded.s\n \n .*: +file format .*mips.*"
    },
    {
      "sha": "504ac9d675f0ddb2305a39da9e02b63505d1bc1d",
      "filename": "binutils/testsuite/binutils-all/mips/mixed-micromips.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mixed-micromips.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mixed-micromips.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mixed-micromips.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,7 @@\n #PROG: objcopy\n #objdump: -dr --prefix-addresses --show-raw-insn\n #name: Mixed MIPS and microMIPS disassembly\n-#as: -32 -mips2\n+#as: -mips2\n \n # Test mixed-mode disassembly in overlapping sections.\n "
    },
    {
      "sha": "f10fb51a65355a66ccd11ca47619cc145e666844",
      "filename": "binutils/testsuite/binutils-all/mips/mixed-mips16.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mixed-mips16.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3abf97582679343f1708252712e9254d3e0f132c/binutils/testsuite/binutils-all/mips/mixed-mips16.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mips/mixed-mips16.d?ref=3abf97582679343f1708252712e9254d3e0f132c",
      "patch": "@@ -1,7 +1,7 @@\n #PROG: objcopy\n #objdump: -dr --prefix-addresses --show-raw-insn\n #name: Mixed MIPS and MIPS16 disassembly\n-#as: -32 -mips2\n+#as: -mips2\n \n # Test mixed-mode disassembly in overlapping sections.\n "
    }
  ]
}