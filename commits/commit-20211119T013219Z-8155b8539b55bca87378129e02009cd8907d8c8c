{
  "sha": "8155b8539b55bca87378129e02009cd8907d8c8c",
  "node_id": "C_kwDOANOeidoAKDgxNTViODUzOWI1NWJjYTg3Mzc4MTI5ZTAyMDA5Y2Q4OTA3ZDhjOGM",
  "commit": {
    "author": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2021-08-11T08:26:39Z"
    },
    "committer": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2021-11-19T01:32:19Z"
    },
    "message": "RISC-V: Support STO_RISCV_VARIANT_CC and DT_RISCV_VARIANT_CC.\n\nThis is the original discussion,\nhttps://github.com/riscv/riscv-elf-psabi-doc/pull/190\n\nAnd here is the glibc part,\nhttps://sourceware.org/pipermail/libc-alpha/2021-August/129931.html\n\nFor binutils part, we need to support a new direcitve: .variant_cc.\nThe function symbol marked by .variant_cc means it need to be resolved\ndirectly without resolver for dynamic linker.  We also add a new dynamic\nentry, STO_RISCV_VARIANT_CC, to indicate there are symbols with the\nspecial attribute in the dynamic symbol table of the object.\n\nI heard that llvm already have supported this in their mainline, so\nI think it's time to commit this.\n\nbfd/\n\t* elfnn-riscv.c (riscv_elf_link_hash_table): Added variant_cc\n\tflag. It is used to check if relocations for variant CC symbols\n\tmay be present.\n\t(allocate_dynrelocs): If the symbol has STO_RISCV_VARIANT_CC\n\tflag, then raise the variant_cc flag of riscv_elf_link_hash_table.\n\t(riscv_elf_size_dynamic_sections): Added dynamic entry for\n\tvariant_cc.\n\t(riscv_elf_merge_symbol_attribute): New function, used to merge\n\tnon-visibility st_other attributes, including STO_RISCV_VARIANT_CC.\nbinutils/\n\t* readelf.c (get_riscv_dynamic_type): New function.\n\t(get_dynamic_type): Called get_riscv_dynamic_type for riscv targets.\n\t(get_riscv_symbol_other): New function.\n\t(get_symbol_other): Called get_riscv_symbol_other for riscv targets.\ngas/\n\t* config/tc-riscv.c (s_variant_cc): Marked symbol that it follows a\n\tvariant CC convention.\n\t(riscv_elf_copy_symbol_attributes): Same as elf_copy_symbol_attributes,\n\tbut without copying st_other.  If a function symbol has special st_other\n\tvalue set via directives, then attaching an IFUNC resolver to that symbol\n\tshould not override the st_other setting.\n\t(riscv_pseudo_table): Support variant_cc diretive.\n\t* config/tc-riscv.h (OBJ_COPY_SYMBOL_ATTRIBUTES): Defined.\n\t* testsuite/gas/riscv/variant_cc-set.d: New testcase.\n\t* testsuite/gas/riscv/variant_cc-set.s: Likewise.\n\t* testsuite/gas/riscv/variant_cc.d: Likewise.\n\t* testsuite/gas/riscv/variant_cc.s: Likewise.\ninclude/\n\t* elf/riscv.h (DT_RISCV_VARIANT_CC): Defined to (DT_LOPROC + 1).\n\t(STO_RISCV_VARIANT_CC): Defined to 0x80.\nld/\n\t* testsuite/ld-riscv-elf/variant_cc-1.s: New testcase.\n\t* testsuite/ld-riscv-elf/variant_cc-2.s: Likewise.\n\t* testsuite/ld-riscv-elf/variant_cc-now.d: Likewise.\n\t* testsuite/ld-riscv-elf/variant_cc-r.d: Likewise.\n\t* testsuite/ld-riscv-elf/variant_cc-shared.d: Likewise.\n\t* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Updated.",
    "tree": {
      "sha": "30524e98925e912c02387ae7b2bd0c58b9bb6ff4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/30524e98925e912c02387ae7b2bd0c58b9bb6ff4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8155b8539b55bca87378129e02009cd8907d8c8c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8155b8539b55bca87378129e02009cd8907d8c8c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8155b8539b55bca87378129e02009cd8907d8c8c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8155b8539b55bca87378129e02009cd8907d8c8c/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "fccf4ba5adaf69cac1875a194d8ee99dabf50c70",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fccf4ba5adaf69cac1875a194d8ee99dabf50c70",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fccf4ba5adaf69cac1875a194d8ee99dabf50c70"
    }
  ],
  "stats": {
    "total": 537,
    "additions": 536,
    "deletions": 1
  },
  "files": [
    {
      "sha": "d8c9066ad4841ce286246e40e8c570263d637ce0",
      "filename": "bfd/elfnn-riscv.c",
      "status": "modified",
      "additions": 43,
      "deletions": 1,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/bfd/elfnn-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/bfd/elfnn-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-riscv.c?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -134,6 +134,9 @@ struct riscv_elf_link_hash_table\n   /* The data segment phase, don't relax the section\n      when it is exp_seg_relro_adjust.  */\n   int *data_segment_phase;\n+\n+  /* Relocations for variant CC symbols may be present.  */\n+  int variant_cc;\n };\n \n /* Instruction access functions. */\n@@ -1172,6 +1175,11 @@ allocate_dynrelocs (struct elf_link_hash_entry *h, void *inf)\n \t      h->root.u.def.section = s;\n \t      h->root.u.def.value = h->plt.offset;\n \t    }\n+\n+\t  /* If the symbol has STO_RISCV_VARIANT_CC flag, then raise the\n+\t     variant_cc flag of riscv_elf_link_hash_table.  */\n+\t  if (h->other & STO_RISCV_VARIANT_CC)\n+\t    htab->variant_cc = 1;\n \t}\n       else\n \t{\n@@ -1555,7 +1563,18 @@ riscv_elf_size_dynamic_sections (bfd *output_bfd, struct bfd_link_info *info)\n \treturn false;\n     }\n \n-  return _bfd_elf_add_dynamic_tags (output_bfd, info, true);\n+  /* Add dynamic entries.  */\n+  if (elf_hash_table (info)->dynamic_sections_created)\n+    {\n+      if (!_bfd_elf_add_dynamic_tags (output_bfd, info, true))\n+\treturn false;\n+\n+      if (htab->variant_cc\n+\t  && !_bfd_elf_add_dynamic_entry (info, DT_RISCV_VARIANT_CC, 0))\n+       return false;\n+    }\n+\n+  return true;\n }\n \n #define TP_OFFSET 0\n@@ -5227,6 +5246,28 @@ riscv_elf_modify_segment_map (bfd *abfd,\n   return true;\n }\n \n+/* Merge non-visibility st_other attributes.  */\n+\n+static void\n+riscv_elf_merge_symbol_attribute (struct elf_link_hash_entry *h,\n+\t\t\t\t  unsigned int st_other,\n+\t\t\t\t  bool definition ATTRIBUTE_UNUSED,\n+\t\t\t\t  bool dynamic ATTRIBUTE_UNUSED)\n+{\n+  unsigned int isym_sto = st_other & ~ELF_ST_VISIBILITY (-1);\n+  unsigned int h_sto = h->other & ~ELF_ST_VISIBILITY (-1);\n+\n+  if (isym_sto == h_sto)\n+    return;\n+\n+  if (isym_sto & ~STO_RISCV_VARIANT_CC)\n+    _bfd_error_handler (_(\"unknown attribute for symbol `%s': 0x%02x\"),\n+\t\t\th->root.root.string, isym_sto);\n+\n+  if (isym_sto & STO_RISCV_VARIANT_CC)\n+    h->other |= STO_RISCV_VARIANT_CC;\n+}\n+\n #define TARGET_LITTLE_SYM\t\t\triscv_elfNN_vec\n #define TARGET_LITTLE_NAME\t\t\t\"elfNN-littleriscv\"\n #define TARGET_BIG_SYM\t\t\t\triscv_elfNN_be_vec\n@@ -5263,6 +5304,7 @@ riscv_elf_modify_segment_map (bfd *abfd,\n #define elf_backend_additional_program_headers \\\n   riscv_elf_additional_program_headers\n #define elf_backend_modify_segment_map\t\triscv_elf_modify_segment_map\n+#define elf_backend_merge_symbol_attribute\triscv_elf_merge_symbol_attribute\n \n #define elf_backend_init_index_section\t\t_bfd_elf_init_1_index_section\n "
    },
    {
      "sha": "2e7d28511fb0626782ad4fd9cb151b1a1320ae73",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -2442,6 +2442,17 @@ get_solaris_dynamic_type (unsigned long type)\n     }\n }\n \n+static const char *\n+get_riscv_dynamic_type (unsigned long type)\n+{\n+  switch (type)\n+    {\n+    case DT_RISCV_VARIANT_CC:\treturn \"RISCV_VARIANT_CC\";\n+    default:\n+      return NULL;\n+    }\n+}\n+\n static const char *\n get_dynamic_type (Filedata * filedata, unsigned long type)\n {\n@@ -2567,6 +2578,9 @@ get_dynamic_type (Filedata * filedata, unsigned long type)\n \t    case EM_ALTERA_NIOS2:\n \t      result = get_nios2_dynamic_type (type);\n \t      break;\n+\t    case EM_RISCV:\n+\t      result = get_riscv_dynamic_type (type);\n+\t      break;\n \t    default:\n \t      if (filedata->file_header.e_ident[EI_OSABI] == ELFOSABI_SOLARIS)\n \t\tresult = get_solaris_dynamic_type (type);\n@@ -12643,6 +12657,28 @@ get_ppc64_symbol_other (unsigned int other)\n   return NULL;\n }\n \n+static const char *\n+get_riscv_symbol_other (unsigned int other)\n+{\n+  static char buf[32];\n+  buf[0] = 0;\n+\n+  if (other & STO_RISCV_VARIANT_CC)\n+    {\n+      strcat (buf, _(\" VARIANT_CC\"));\n+      other &= ~STO_RISCV_VARIANT_CC;\n+    }\n+\n+  if (other != 0)\n+    snprintf (buf, sizeof buf, \" %x\", other);\n+\n+\n+  if (buf[0] != 0)\n+    return buf + 1;\n+  else\n+    return buf;\n+}\n+\n static const char *\n get_symbol_other (Filedata * filedata, unsigned int other)\n {\n@@ -12669,6 +12705,9 @@ get_symbol_other (Filedata * filedata, unsigned int other)\n     case EM_PPC64:\n       result = get_ppc64_symbol_other (other);\n       break;\n+    case EM_RISCV:\n+      result = get_riscv_symbol_other (other);\n+      break;\n     default:\n       result = NULL;\n       break;"
    },
    {
      "sha": "930cfb2125a3c2f36bc10cbca42a0eb74ccd29db",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 55,
      "deletions": 0,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -4411,6 +4411,60 @@ s_riscv_attribute (int ignored ATTRIBUTE_UNUSED)\n     }\n }\n \n+/* Mark symbol that it follows a variant CC convention.  */\n+\n+static void\n+s_variant_cc (int ignored ATTRIBUTE_UNUSED)\n+{\n+  char *name;\n+  char c;\n+  symbolS *sym;\n+  asymbol *bfdsym;\n+  elf_symbol_type *elfsym;\n+\n+  c = get_symbol_name (&name);\n+  if (!*name)\n+    as_bad (_(\"missing symbol name for .variant_cc directive\"));\n+  sym = symbol_find_or_make (name);\n+  restore_line_pointer (c);\n+  demand_empty_rest_of_line ();\n+\n+  bfdsym = symbol_get_bfdsym (sym);\n+  elfsym = elf_symbol_from (bfdsym);\n+  gas_assert (elfsym);\n+  elfsym->internal_elf_sym.st_other |= STO_RISCV_VARIANT_CC;\n+}\n+\n+/* Same as elf_copy_symbol_attributes, but without copying st_other.\n+   This is needed so RISC-V specific st_other values can be independently\n+   specified for an IFUNC resolver (that is called by the dynamic linker)\n+   and the symbol it resolves (aliased to the resolver).  In particular,\n+   if a function symbol has special st_other value set via directives,\n+   then attaching an IFUNC resolver to that symbol should not override\n+   the st_other setting.  Requiring the directive on the IFUNC resolver\n+   symbol would be unexpected and problematic in C code, where the two\n+   symbols appear as two independent function declarations.  */\n+\n+void\n+riscv_elf_copy_symbol_attributes (symbolS *dest, symbolS *src)\n+{\n+  struct elf_obj_sy *srcelf = symbol_get_obj (src);\n+  struct elf_obj_sy *destelf = symbol_get_obj (dest);\n+  if (srcelf->size)\n+    {\n+      if (destelf->size == NULL)\n+\tdestelf->size = XNEW (expressionS);\n+      *destelf->size = *srcelf->size;\n+    }\n+  else\n+    {\n+      if (destelf->size != NULL)\n+\tfree (destelf->size);\n+      destelf->size = NULL;\n+    }\n+  S_SET_SIZE (dest, S_GET_SIZE (src));\n+}\n+\n /* RISC-V pseudo-ops table.  */\n static const pseudo_typeS riscv_pseudo_table[] =\n {\n@@ -4425,6 +4479,7 @@ static const pseudo_typeS riscv_pseudo_table[] =\n   {\"sleb128\", s_riscv_leb128, 1},\n   {\"insn\", s_riscv_insn, 0},\n   {\"attribute\", s_riscv_attribute, 0},\n+  {\"variant_cc\", s_variant_cc, 0},\n \n   { NULL, NULL, 0 },\n };"
    },
    {
      "sha": "fbe5e765042577ed5c403804898c25ab7e145d5a",
      "filename": "gas/config/tc-riscv.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/gas/config/tc-riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/gas/config/tc-riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.h?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -152,4 +152,8 @@ extern void riscv_init_frag (struct frag *, int);\n #define obj_adjust_symtab() riscv_adjust_symtab ()\n extern void riscv_adjust_symtab (void);\n \n+void riscv_elf_copy_symbol_attributes (symbolS *, symbolS *);\n+#define OBJ_COPY_SYMBOL_ATTRIBUTES(DEST, SRC)  \\\n+  riscv_elf_copy_symbol_attributes (DEST, SRC)\n+\n #endif /* TC_RISCV */"
    },
    {
      "sha": "1b018368ea3b9a7de0d790e79101fc6ea2c7254e",
      "filename": "gas/testsuite/gas/riscv/variant_cc-set.d",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/gas/testsuite/gas/riscv/variant_cc-set.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/gas/testsuite/gas/riscv/variant_cc-set.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/variant_cc-set.d?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -0,0 +1,13 @@\n+#as:\n+#source: variant_cc-set.s\n+#readelf: -Ws\n+\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+foo\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+1[ \t]+bar\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+alias_foo\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+1[ \t]alias_bar\n+#..."
    },
    {
      "sha": "7b9878d6d341457d0ba893e1b57a1c0a27c710c4",
      "filename": "gas/testsuite/gas/riscv/variant_cc-set.s",
      "status": "added",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/gas/testsuite/gas/riscv/variant_cc-set.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/gas/testsuite/gas/riscv/variant_cc-set.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/variant_cc-set.s?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -0,0 +1,15 @@\n+\t.text\n+\t.global foo\n+\t.global bar\n+\t.global alias_foo\n+\t.global alias_bar\n+\t.variant_cc foo\n+\t.variant_cc alias_foo\n+\t.set alias_bar, foo\n+\t.set alias_foo, bar\n+foo:\n+bar:\n+\tcall\tfoo\n+\tcall\tbar\n+\tcall\talias_foo\n+\tcall\talias_bar"
    },
    {
      "sha": "8c1b96a1fcd242c978b36a14613e12f7d4e9bc9b",
      "filename": "gas/testsuite/gas/riscv/variant_cc.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/gas/testsuite/gas/riscv/variant_cc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/gas/testsuite/gas/riscv/variant_cc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/variant_cc.d?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -0,0 +1,9 @@\n+#as:\n+#source: variant_cc.s\n+#readelf: -Ws\n+\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+func\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+UND[ \t]+foo\n+#..."
    },
    {
      "sha": "e4b27f50ba9e59135c5f4f8e1336561bb02babe5",
      "filename": "gas/testsuite/gas/riscv/variant_cc.s",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/gas/testsuite/gas/riscv/variant_cc.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/gas/testsuite/gas/riscv/variant_cc.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/variant_cc.s?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -0,0 +1,5 @@\n+\t.text\n+\t.variant_cc foo\n+\t.variant_cc func\n+func:\n+\tcall\tfoo"
    },
    {
      "sha": "6edcf8ab901e15f392017f557a8cc76aef2813b6",
      "filename": "include/elf/riscv.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/include/elf/riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/include/elf/riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/riscv.h?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -117,6 +117,12 @@ END_RELOC_NUMBERS (R_RISCV_max)\n /* The name of the global pointer symbol.  */\n #define RISCV_GP_SYMBOL \"__global_pointer$\"\n \n+/* Processor specific dynamic array tags.  */\n+#define DT_RISCV_VARIANT_CC (DT_LOPROC + 1)\n+\n+/* RISC-V specific values for st_other.  */\n+#define STO_RISCV_VARIANT_CC 0x80\n+\n /* Additional section types.  */\n #define SHT_RISCV_ATTRIBUTES 0x70000003 /* Section holds attributes.  */\n "
    },
    {
      "sha": "3bd788208ed591c64b94316fe4c88df754243111",
      "filename": "ld/testsuite/ld-riscv-elf/ld-riscv-elf.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/ld/testsuite/ld-riscv-elf/ld-riscv-elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/ld/testsuite/ld-riscv-elf/ld-riscv-elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/ld-riscv-elf.exp?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -169,6 +169,9 @@ if [istarget \"riscv*-*-*\"] {\n \n     run_dump_test \"relro-relax-lui\"\n     run_dump_test \"relro-relax-pcrel\"\n+    run_dump_test \"variant_cc-now\"\n+    run_dump_test \"variant_cc-shared\"\n+    run_dump_test \"variant_cc-r\"\n     run_relax_twice_test\n \n     set abis [list rv32gc ilp32 [riscv_choose_ilp32_emul] rv64gc lp64 [riscv_choose_lp64_emul]]"
    },
    {
      "sha": "54ae162a7985177f2b97520885c7c145c272dd1e",
      "filename": "ld/testsuite/ld-riscv-elf/variant_cc-1.s",
      "status": "added",
      "additions": 61,
      "deletions": 0,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/ld/testsuite/ld-riscv-elf/variant_cc-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/ld/testsuite/ld-riscv-elf/variant_cc-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/variant_cc-1.s?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -0,0 +1,61 @@\n+.text\n+\n+.variant_cc cc_global_default_def\n+.variant_cc cc_global_default_undef\n+.variant_cc cc_global_default_ifunc\n+.variant_cc cc_global_hidden_def\n+.variant_cc cc_global_hidden_ifunc\n+.variant_cc cc_local\n+.variant_cc cc_local_ifunc\n+\n+.global cc_global_default_def\n+.global cc_global_default_undef\n+.global cc_global_default_ifunc\n+.global cc_global_hidden_def\n+.global cc_global_hidden_ifunc\n+.global nocc_global_default_def\n+.global nocc_global_default_undef\n+.global nocc_global_default_ifunc\n+.global nocc_global_hidden_def\n+.global nocc_global_hidden_ifunc\n+\n+.hidden cc_global_hidden_def\n+.hidden cc_global_hidden_ifunc\n+.hidden nocc_global_hidden_def\n+.hidden nocc_global_hidden_ifunc\n+\n+.type cc_global_default_ifunc, %gnu_indirect_function\n+.type cc_global_hidden_ifunc, %gnu_indirect_function\n+.type cc_local_ifunc, %gnu_indirect_function\n+.type nocc_global_default_ifunc, %gnu_indirect_function\n+.type nocc_global_hidden_ifunc, %gnu_indirect_function\n+.type nocc_local_ifunc, %gnu_indirect_function\n+\n+cc_global_default_def:\n+# cc_global_default_undef:\n+cc_global_hidden_def:\n+cc_global_default_ifunc:\n+cc_global_hidden_ifunc:\n+cc_local:\n+cc_local_ifunc:\n+nocc_global_default_def:\n+# nocc_global_default_undef:\n+nocc_global_hidden_def:\n+nocc_global_default_ifunc:\n+nocc_global_hidden_ifunc:\n+nocc_local:\n+nocc_local_ifunc:\n+\tcall cc_global_default_def\n+\tcall cc_global_default_undef\n+\tcall cc_global_hidden_def\n+\tcall cc_global_default_ifunc\n+\tcall cc_global_hidden_ifunc\n+\tcall cc_local\n+\tcall cc_local_ifunc\n+\tcall nocc_global_default_def\n+\tcall nocc_global_default_undef\n+\tcall nocc_global_hidden_def\n+\tcall nocc_global_default_ifunc\n+\tcall nocc_global_hidden_ifunc\n+\tcall nocc_local\n+\tcall nocc_local_ifunc"
    },
    {
      "sha": "d7ca2d48ce34d401f9073d42673e972212e59dea",
      "filename": "ld/testsuite/ld-riscv-elf/variant_cc-2.s",
      "status": "added",
      "additions": 61,
      "deletions": 0,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/ld/testsuite/ld-riscv-elf/variant_cc-2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/ld/testsuite/ld-riscv-elf/variant_cc-2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/variant_cc-2.s?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -0,0 +1,61 @@\n+.text\n+\n+.variant_cc cc_global_default_def\n+.variant_cc cc_global_default_undef\n+.variant_cc cc_global_default_ifunc\n+.variant_cc cc_global_hidden_def\n+.variant_cc cc_global_hidden_ifunc\n+.variant_cc cc_local2\n+.variant_cc cc_local2_ifunc\n+\n+.global cc_global_default_def\n+.global cc_global_default_undef\n+.global cc_global_default_ifunc\n+.global cc_global_hidden_def\n+.global cc_global_hidden_ifunc\n+.global nocc_global_default_def\n+.global nocc_global_default_undef\n+.global nocc_global_default_ifunc\n+.global nocc_global_hidden_def\n+.global nocc_global_hidden_ifunc\n+\n+.hidden cc_global_hidden_def\n+.hidden cc_global_hidden_ifunc\n+.hidden nocc_global_hidden_def\n+.hidden nocc_global_hidden_ifunc\n+\n+# .type cc_global_default_ifunc, %gnu_indirect_function\n+# .type cc_global_hidden_ifunc, %gnu_indirect_function\n+.type cc_local2_ifunc, %gnu_indirect_function\n+# .type nocc_global_default_ifunc, %gnu_indirect_function\n+# .type nocc_global_hidden_ifunc, %gnu_indirect_function\n+.type nocc_local2_ifunc, %gnu_indirect_function\n+\n+# cc_global_default_def:\n+# cc_global_default_undef:\n+# cc_global_hidden_def:\n+# cc_global_default_ifunc:\n+# cc_global_hidden_ifunc:\n+cc_local2:\n+cc_local2_ifunc:\n+# nocc_global_default_def:\n+# nocc_global_default_undef:\n+# nocc_global_hidden_def:\n+# nocc_global_default_ifunc:\n+# nocc_global_hidden_ifunc:\n+nocc_local2:\n+nocc_local2_ifunc:\n+\tcall cc_global_default_def\n+\tcall cc_global_default_undef\n+\tcall cc_global_hidden_def\n+\tcall cc_global_default_ifunc\n+\tcall cc_global_hidden_ifunc\n+\tcall cc_local2\n+\tcall cc_local2_ifunc\n+\tcall nocc_global_default_def\n+\tcall nocc_global_default_undef\n+\tcall nocc_global_hidden_def\n+\tcall nocc_global_default_ifunc\n+\tcall nocc_global_hidden_ifunc\n+\tcall nocc_local2\n+\tcall nocc_local2_ifunc"
    },
    {
      "sha": "9453554a159081fc51e3b8cf9baeede4d9b91214",
      "filename": "ld/testsuite/ld-riscv-elf/variant_cc-now.d",
      "status": "added",
      "additions": 73,
      "deletions": 0,
      "changes": 73,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/ld/testsuite/ld-riscv-elf/variant_cc-now.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/ld/testsuite/ld-riscv-elf/variant_cc-now.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/variant_cc-now.d?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -0,0 +1,73 @@\n+#source: variant_cc-1.s\n+#source: variant_cc-2.s\n+#ld: -shared --hash-style=sysv -Ttext 0x8000 -z now\n+#readelf: -rsW\n+\n+Relocation section '.rela.plt' at .*\n+#...\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_JUMP_SLOT[ \t]+0+0000[ \t]+nocc_global_default_undef \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_JUMP_SLOT[ \t]+0+0000[ \t]+cc_global_default_undef \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_JUMP_SLOT[ \t]+0+8000[ \t]+cc_global_default_def \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_JUMP_SLOT[ \t]+0+8000[ \t]+nocc_global_default_def \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_JUMP_SLOT[ \t]+cc_global_default_ifunc\\(\\)[ \t]+cc_global_default_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_IRELATIVE[ \t]+8000\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_JUMP_SLOT[ \t]+nocc_global_default_ifunc\\(\\)[ \t]+nocc_global_default_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_IRELATIVE[ \t]+8000\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_IRELATIVE[ \t]+8050\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_IRELATIVE[ \t]+8050\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_IRELATIVE[ \t]+8000\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_IRELATIVE[ \t]+8000\n+#...\n+Symbol table '.dynsym' contains .*\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+UND[ \t]+nocc_global_default_undef\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+UND[ \t]+cc_global_default_undef\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_default_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_default_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_default_def\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_default_def\n+#...\n+Symbol table '.symtab' contains .*\n+.*\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_local\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_local_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_local_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_local\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8050[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_local2\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8050[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_local2_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8050[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_local2_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8050[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_local2\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_hidden_def\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_hidden_def\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_hidden_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_hidden_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+UND[ \t]+nocc_global_default_undef\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+UND[ \t]+cc_global_default_undef\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_default_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_default_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_default_def\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_default_def\n+#..."
    },
    {
      "sha": "5235b8e90d7a3424e1e21bd879b7f66a87b4a2c3",
      "filename": "ld/testsuite/ld-riscv-elf/variant_cc-r.d",
      "status": "added",
      "additions": 76,
      "deletions": 0,
      "changes": 76,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/ld/testsuite/ld-riscv-elf/variant_cc-r.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/ld/testsuite/ld-riscv-elf/variant_cc-r.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/variant_cc-r.d?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -0,0 +1,76 @@\n+#source: variant_cc-1.s\n+#source: variant_cc-2.s\n+#as: -mno-relax\n+#ld: -r\n+#readelf: -rsW\n+\n+Relocation section '.rela.text' at .*\n+#...\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+cc_global_default_def \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+cc_global_default_undef \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+cc_global_hidden_def \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+cc_global_default_ifunc\\(\\)[ \t]+cc_global_default_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+cc_global_hidden_ifunc\\(\\)[ \t]+cc_global_hidden_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+cc_local \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+cc_local_ifunc\\(\\)[ \t]+cc_local_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+nocc_global_default_def \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+nocc_global_default_undef \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+nocc_global_hidden_def \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+nocc_global_default_ifunc\\(\\)[ \t]+nocc_global_default_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+nocc_global_hidden_ifunc\\(\\)[ \t]+nocc_global_hidden_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+nocc_local \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+nocc_local_ifunc\\(\\)[ \t]+nocc_local_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+cc_global_default_def \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+cc_global_default_undef \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+cc_global_hidden_def \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+cc_global_default_ifunc\\(\\)[ \t]+cc_global_default_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+cc_global_hidden_ifunc\\(\\)[ \t]+cc_global_hidden_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0070[ \t]+cc_local2 \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+cc_local2_ifunc\\(\\)[ \t]+cc_local2_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+nocc_global_default_def \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+nocc_global_default_undef \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0000[ \t]+nocc_global_hidden_def \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+nocc_global_default_ifunc\\(\\)[ \t]+nocc_global_default_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+nocc_global_hidden_ifunc\\(\\)[ \t]+nocc_global_hidden_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+0+0070[ \t]+nocc_local2 \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_CALL[ \t]+nocc_local2_ifunc\\(\\)[ \t]+nocc_local2_ifunc \\+ 0\n+#...\n+Symbol table '.symtab' contains .*\n+.*\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_local\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_local_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_local_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_local\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0070[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_local2\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0070[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_local2_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0070[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_local2_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0070[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_local2\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+UND[ \t]+nocc_global_default_undef\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+HIDDEN[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_hidden_def\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+UND[ \t]+cc_global_default_undef\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+IFUNC[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_default_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+HIDDEN[ \t]+1[ \t]+nocc_global_hidden_def\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+IFUNC[ \t]+GLOBAL[ \t]+HIDDEN[ \t]+1[ \t]+nocc_global_hidden_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+IFUNC[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_default_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_default_def\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_default_def\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+IFUNC[ \t]+GLOBAL[ \t]+HIDDEN[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_hidden_ifunc\n+#..."
    },
    {
      "sha": "ffb69a392f27b632c3a58059017b2f13ddde2217",
      "filename": "ld/testsuite/ld-riscv-elf/variant_cc-shared.d",
      "status": "added",
      "additions": 73,
      "deletions": 0,
      "changes": 73,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8155b8539b55bca87378129e02009cd8907d8c8c/ld/testsuite/ld-riscv-elf/variant_cc-shared.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8155b8539b55bca87378129e02009cd8907d8c8c/ld/testsuite/ld-riscv-elf/variant_cc-shared.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/variant_cc-shared.d?ref=8155b8539b55bca87378129e02009cd8907d8c8c",
      "patch": "@@ -0,0 +1,73 @@\n+#source: variant_cc-1.s\n+#source: variant_cc-2.s\n+#ld: -shared --hash-style=sysv -Ttext 0x8000\n+#readelf: -rsW\n+\n+Relocation section '.rela.plt' at .*\n+#...\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_JUMP_SLOT[ \t]+0+0000[ \t]+nocc_global_default_undef \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_JUMP_SLOT[ \t]+0+0000[ \t]+cc_global_default_undef \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_JUMP_SLOT[ \t]+0+8000[ \t]+cc_global_default_def \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_JUMP_SLOT[ \t]+0+8000[ \t]+nocc_global_default_def \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_JUMP_SLOT[ \t]+cc_global_default_ifunc\\(\\)[ \t]+cc_global_default_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_IRELATIVE[ \t]+8000\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_JUMP_SLOT[ \t]+nocc_global_default_ifunc\\(\\)[ \t]+nocc_global_default_ifunc \\+ 0\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_IRELATIVE[ \t]+8000\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_IRELATIVE[ \t]+8050\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_IRELATIVE[ \t]+8050\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_IRELATIVE[ \t]+8000\n+[0-9a-f]+[ \t]+[0-9a-f]+[ \t]+R_RISCV_IRELATIVE[ \t]+8000\n+#...\n+Symbol table '.dynsym' contains .*\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+UND[ \t]+nocc_global_default_undef\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+UND[ \t]+cc_global_default_undef\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_default_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_default_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_default_def\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_default_def\n+#...\n+Symbol table '.symtab' contains .*\n+.*\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_local\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_local_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_local_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_local\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8050[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_local2\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8050[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_local2_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8050[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_local2_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8050[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_local2\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_hidden_def\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_hidden_def\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_hidden_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+LOCAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_hidden_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+UND[ \t]+nocc_global_default_undef\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+0000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+UND[ \t]+cc_global_default_undef\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_default_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+IFUNC[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_default_ifunc\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+\\[VARIANT_CC\\][ \t]+1[ \t]+cc_global_default_def\n+#...\n+[ \t]+[0-9a-f]+:[ \t]+0+8000[ \t]+0[ \t]+NOTYPE[ \t]+GLOBAL[ \t]+DEFAULT[ \t]+1[ \t]+nocc_global_default_def\n+#..."
    }
  ]
}