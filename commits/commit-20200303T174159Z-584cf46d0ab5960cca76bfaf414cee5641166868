{
  "sha": "584cf46d0ab5960cca76bfaf414cee5641166868",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTg0Y2Y0NmQwYWI1OTYwY2NhNzZiZmFmNDE0Y2VlNTY0MTE2Njg2OA==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-02-12T16:53:32Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-03-03T17:41:59Z"
    },
    "message": "Rebase executable to match relocated base address\n\nWindows executables linked with -dynamicbase get a new base address\nwhen loaded, which makes debugging impossible if the executable isn't\nalso rebased in gdb.\n\nThe new base address is read from the Process Environment Block.\n\ngdb/ChangeLog:\n\n2020-03-03  Hannes Domani  <ssbssa@yahoo.de>\n\n\t* windows-tdep.c (windows_solib_create_inferior_hook): New function.\n\t(windows_init_abi): Set and use windows_so_ops.",
    "tree": {
      "sha": "238d93e7302f94acc16b119f34eee3d0c81c3438",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/238d93e7302f94acc16b119f34eee3d0c81c3438"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/584cf46d0ab5960cca76bfaf414cee5641166868",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/584cf46d0ab5960cca76bfaf414cee5641166868",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/584cf46d0ab5960cca76bfaf414cee5641166868",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/584cf46d0ab5960cca76bfaf414cee5641166868/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b8ba13856360d1cae00269a0ffe291cf573bb575",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b8ba13856360d1cae00269a0ffe291cf573bb575",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b8ba13856360d1cae00269a0ffe291cf573bb575"
    }
  ],
  "stats": {
    "total": 60,
    "additions": 59,
    "deletions": 1
  },
  "files": [
    {
      "sha": "2a1f3be79afbc9bbaa4e0887f318758631d1b013",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/584cf46d0ab5960cca76bfaf414cee5641166868/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/584cf46d0ab5960cca76bfaf414cee5641166868/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=584cf46d0ab5960cca76bfaf414cee5641166868",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-03  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* windows-tdep.c (windows_solib_create_inferior_hook): New function.\n+\t(windows_init_abi): Set and use windows_so_ops.\n+\n 2020-03-03  Sergio Durigan Junior  <sergiodj@redhat.com>\n \n \t* printcmd.c (print_c_string): Check also for TYPE_CODE_PTR"
    },
    {
      "sha": "4e5d8303ca451d7591c4b25a4e21e65655424a56",
      "filename": "gdb/windows-tdep.c",
      "status": "modified",
      "additions": 54,
      "deletions": 1,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/584cf46d0ab5960cca76bfaf414cee5641166868/gdb/windows-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/584cf46d0ab5960cca76bfaf414cee5641166868/gdb/windows-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-tdep.c?ref=584cf46d0ab5960cca76bfaf414cee5641166868",
      "patch": "@@ -34,6 +34,9 @@\n #include \"solib.h\"\n #include \"solib-target.h\"\n #include \"gdbcore.h\"\n+#include \"coff/internal.h\"\n+#include \"libcoff.h\"\n+#include \"solist.h\"\n \n /* Windows signal numbers differ between MinGW flavors and between\n    those and Cygwin.  The below enumeration was gleaned from the\n@@ -812,6 +815,53 @@ windows_get_siginfo_type (struct gdbarch *gdbarch)\n   return siginfo_type;\n }\n \n+/* Implement the \"solib_create_inferior_hook\" target_so_ops method.  */\n+\n+static void\n+windows_solib_create_inferior_hook (int from_tty)\n+{\n+  CORE_ADDR exec_base = 0;\n+\n+  /* Find base address of main executable in\n+     TIB->process_environment_block->image_base_address.  */\n+  struct gdbarch *gdbarch = target_gdbarch ();\n+  enum bfd_endian byte_order = gdbarch_byte_order (gdbarch);\n+  int ptr_bytes;\n+  int peb_offset;  /* Offset of process_environment_block in TIB.  */\n+  int base_offset; /* Offset of image_base_address in PEB.  */\n+  if (gdbarch_ptr_bit (gdbarch) == 32)\n+    {\n+      ptr_bytes = 4;\n+      peb_offset = 48;\n+      base_offset = 8;\n+    }\n+  else\n+    {\n+      ptr_bytes = 8;\n+      peb_offset = 96;\n+      base_offset = 16;\n+    }\n+  CORE_ADDR tlb;\n+  gdb_byte buf[8];\n+  if (target_get_tib_address (inferior_ptid, &tlb)\n+      && !target_read_memory (tlb + peb_offset, buf, ptr_bytes))\n+    {\n+      CORE_ADDR peb = extract_unsigned_integer (buf, ptr_bytes, byte_order);\n+      if (!target_read_memory (peb + base_offset, buf, ptr_bytes))\n+\texec_base = extract_unsigned_integer (buf, ptr_bytes, byte_order);\n+    }\n+\n+  /* Rebase executable if the base address changed because of ASLR.  */\n+  if (symfile_objfile != nullptr && exec_base != 0)\n+    {\n+      CORE_ADDR vmaddr = pe_data (exec_bfd)->pe_opthdr.ImageBase;\n+      if (vmaddr != exec_base)\n+\tobjfile_rebase (symfile_objfile, exec_base - vmaddr);\n+    }\n+}\n+\n+static struct target_so_ops windows_so_ops;\n+\n /* To be called from the various GDB_OSABI_CYGWIN handlers for the\n    various Windows architectures and machine types.  */\n \n@@ -830,7 +880,10 @@ windows_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n \n   set_gdbarch_gdb_signal_to_target (gdbarch, windows_gdb_signal_to_target);\n \n-  set_solib_ops (gdbarch, &solib_target_so_ops);\n+  windows_so_ops = solib_target_so_ops;\n+  windows_so_ops.solib_create_inferior_hook\n+    = windows_solib_create_inferior_hook;\n+  set_solib_ops (gdbarch, &windows_so_ops);\n \n   set_gdbarch_get_siginfo_type (gdbarch, windows_get_siginfo_type);\n }"
    }
  ]
}