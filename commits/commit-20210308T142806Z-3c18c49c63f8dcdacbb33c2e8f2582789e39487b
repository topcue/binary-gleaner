{
  "sha": "3c18c49c63f8dcdacbb33c2e8f2582789e39487b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2MxOGM0OWM2M2Y4ZGNkYWNiYjMzYzJlOGYyNTgyNzg5ZTM5NDg3Yg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:06Z"
    },
    "message": "Split out fortran_require_array\n\nThis splits out a helper function, fortran_require_array, that will be\nused in a later patch.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* f-lang.c (fortran_require_array): New function.\n\t(evaluate_subexp_f): Use it.",
    "tree": {
      "sha": "c32c00d429a97e535102fe832309e261ced7a9b1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c32c00d429a97e535102fe832309e261ced7a9b1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3c18c49c63f8dcdacbb33c2e8f2582789e39487b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c18c49c63f8dcdacbb33c2e8f2582789e39487b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3c18c49c63f8dcdacbb33c2e8f2582789e39487b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c18c49c63f8dcdacbb33c2e8f2582789e39487b/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "216f6fcbefa770589def331a4bcd1d244fbaf858",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/216f6fcbefa770589def331a4bcd1d244fbaf858",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/216f6fcbefa770589def331a4bcd1d244fbaf858"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 23,
    "deletions": 8
  },
  "files": [
    {
      "sha": "6450bbe05f57398e1ba43200a8b498471a4e7aea",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c18c49c63f8dcdacbb33c2e8f2582789e39487b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c18c49c63f8dcdacbb33c2e8f2582789e39487b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3c18c49c63f8dcdacbb33c2e8f2582789e39487b",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* f-lang.c (fortran_require_array): New function.\n+\t(evaluate_subexp_f): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* f-lang.c (eval_op_f_kind): New function."
    },
    {
      "sha": "0ee2806f1a1e3841826c85c1db9cb0a627a509fb",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 18,
      "deletions": 8,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c18c49c63f8dcdacbb33c2e8f2582789e39487b/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c18c49c63f8dcdacbb33c2e8f2582789e39487b/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=3c18c49c63f8dcdacbb33c2e8f2582789e39487b",
      "patch": "@@ -130,6 +130,23 @@ const struct op_print f_language::op_print_tab[] =\n };\n \f\n \n+/* A helper function for the \"bound\" intrinsics that checks that TYPE\n+   is an array.  LBOUND_P is true for lower bound; this is used for\n+   the error message, if any.  */\n+\n+static void\n+fortran_require_array (struct type *type, bool lbound_p)\n+{\n+  type = check_typedef (type);\n+  if (type->code () != TYPE_CODE_ARRAY)\n+    {\n+      if (lbound_p)\n+\terror (_(\"LBOUND can only be applied to arrays\"));\n+      else\n+\terror (_(\"UBOUND can only be applied to arrays\"));\n+    }\n+}\n+\n /* Create an array containing the lower bounds (when LBOUND_P is true) or\n    the upper bounds (when LBOUND_P is false) of ARRAY (which must be of\n    array type).  GDBARCH is the current architecture.  */\n@@ -1228,14 +1245,7 @@ evaluate_subexp_f (struct type *expect_type, struct expression *exp,\n \n \t/* Check that the first argument is array like.  */\n \targ1 = evaluate_subexp (nullptr, exp, pos, noside);\n-\ttype = check_typedef (value_type (arg1));\n-\tif (type->code () != TYPE_CODE_ARRAY)\n-\t  {\n-\t    if (lbound_p)\n-\t      error (_(\"LBOUND can only be applied to arrays\"));\n-\t    else\n-\t      error (_(\"UBOUND can only be applied to arrays\"));\n-\t  }\n+\tfortran_require_array (value_type (arg1), lbound_p);\n \n \tif (nargs == 1)\n \t  return fortran_bounds_all_dims (lbound_p, exp->gdbarch, arg1);"
    }
  ]
}