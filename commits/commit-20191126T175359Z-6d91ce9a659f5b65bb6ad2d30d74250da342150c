{
  "sha": "6d91ce9a659f5b65bb6ad2d30d74250da342150c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmQ5MWNlOWE2NTlmNWI2NWJiNmFkMmQzMGQ3NDI1MGRhMzQyMTUwYw==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-11-22T20:31:35Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-11-26T17:53:59Z"
    },
    "message": "Use safe_strerror instead of strerror where possible\n\nThis provides threadsafety. Unfortunately, since libinproctrace.so\ndoes not link to gnulib, we can't use it there, especially since it\nstill includes the gnulib headers (so it is difficult to directly\ncall the system strerror_r).\n\ngdb/ChangeLog:\n\n2019-11-26  Christian Biesinger  <cbiesinger@google.com>\n\n\t* linux-nat.c (detach_one_lwp): Call safe_strerror instead of\n\tstrerror.\n\t* nto-procfs.c (nto_procfs_target::create_inferior): Likewise.\n\t* windows-nat.c (windows_nat_target::create_inferior): Likewise.\n\ngdb/gdbserver/ChangeLog:\n\n2019-11-26  Christian Biesinger  <cbiesinger@google.com>\n\n\t* debug.c (debug_set_output): Call safe_strerror instead of\n\tstrerror.\n\t* linux-low.c (attach_proc_task_lwp_callback): Likewise.\n\t(linux_kill_one_lwp): Likewise.\n\t(linux_detach_one_lwp): Likewise.\n\t(linux_wait_for_event_filtered): Likewise.\n\t(store_register): Likewise.\n\t* lynx-low.c (lynx_attach): Likewise.\n\t* mem-break.c (insert_memory_breakpoint): Likewise.\n\t(remove_memory_breakpoint): Likewise.\n\t(delete_fast_tracepoint_jump): Likewise.\n\t(set_fast_tracepoint_jump): Likewise.\n\t(uninsert_fast_tracepoint_jumps_at): Likewise.\n\t(reinsert_fast_tracepoint_jumps_at): Likewise.\n\t* nto-low.c (nto_xfer_memory): Likewise.\n\t(nto_resume): Likewise.\n\nChange-Id: I9e259cdcaa6e11bbcc4ee6bdc5b7127d73e11abe",
    "tree": {
      "sha": "2dbdd57990ccd640f63ce6f70e2daa0bd8e6b8cd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2dbdd57990ccd640f63ce6f70e2daa0bd8e6b8cd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6d91ce9a659f5b65bb6ad2d30d74250da342150c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d91ce9a659f5b65bb6ad2d30d74250da342150c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6d91ce9a659f5b65bb6ad2d30d74250da342150c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d91ce9a659f5b65bb6ad2d30d74250da342150c/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0dfeecca1c5014b79c34bcfec361c4b36b533623",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0dfeecca1c5014b79c34bcfec361c4b36b533623",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0dfeecca1c5014b79c34bcfec361c4b36b533623"
    }
  ],
  "stats": {
    "total": 70,
    "additions": 48,
    "deletions": 22
  },
  "files": [
    {
      "sha": "b4d7eb7afaa59b094840ce84be06e9f146078133",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6d91ce9a659f5b65bb6ad2d30d74250da342150c",
      "patch": "@@ -1,3 +1,10 @@\n+2019-11-26  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* linux-nat.c (detach_one_lwp): Call safe_strerror instead of\n+\tstrerror.\n+\t* nto-procfs.c (nto_procfs_target::create_inferior): Likewise.\n+\t* windows-nat.c (windows_nat_target::create_inferior): Likewise.\n+\n 2019-11-25  Tom de Vries  <tdevries@suse.de>\n \n \t* contrib/words.sh: Add -c option."
    },
    {
      "sha": "7b22cfd2f8ce5c93235510d7adcc66ccd5c5ca55",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=6d91ce9a659f5b65bb6ad2d30d74250da342150c",
      "patch": "@@ -1,3 +1,22 @@\n+2019-11-26  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* debug.c (debug_set_output): Call safe_strerror instead of\n+\tstrerror.\n+\t* linux-low.c (attach_proc_task_lwp_callback): Likewise.\n+\t(linux_kill_one_lwp): Likewise.\n+\t(linux_detach_one_lwp): Likewise.\n+\t(linux_wait_for_event_filtered): Likewise.\n+\t(store_register): Likewise.\n+\t* lynx-low.c (lynx_attach): Likewise.\n+\t* mem-break.c (insert_memory_breakpoint): Likewise.\n+\t(remove_memory_breakpoint): Likewise.\n+\t(delete_fast_tracepoint_jump): Likewise.\n+\t(set_fast_tracepoint_jump): Likewise.\n+\t(uninsert_fast_tracepoint_jumps_at): Likewise.\n+\t(reinsert_fast_tracepoint_jumps_at): Likewise.\n+\t* nto-low.c (nto_xfer_memory): Likewise.\n+\t(nto_resume): Likewise.\n+\n 2019-11-20  Luis Machado  <luis.machado@linaro.org>\n \n \t* linux-aarch64-low.c (is_sve_tdesc): Check against target feature"
    },
    {
      "sha": "d299b934097f44cc10e3805b44ad3ecd6f082de7",
      "filename": "gdb/gdbserver/debug.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/gdbserver/debug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/gdbserver/debug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/debug.c?ref=6d91ce9a659f5b65bb6ad2d30d74250da342150c",
      "patch": "@@ -55,7 +55,7 @@ debug_set_output (const char *new_debug_file)\n   if (fptr == nullptr)\n     {\n       debug_printf (\"Cannot open %s for writing. %s. Switching to stderr.\\n\",\n-\t\t    new_debug_file, strerror (errno));\n+\t\t    new_debug_file, safe_strerror (errno));\n       return;\n     }\n "
    },
    {
      "sha": "f34811cda2a5981784a24b344e726bee61e31f61",
      "filename": "gdb/gdbserver/linux-low.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/gdbserver/linux-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/gdbserver/linux-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-low.c?ref=6d91ce9a659f5b65bb6ad2d30d74250da342150c",
      "patch": "@@ -1159,7 +1159,7 @@ attach_proc_task_lwp_callback (ptid_t ptid)\n \t    {\n \t      debug_printf (\"Cannot attach to lwp %d: \"\n \t\t\t    \"thread is gone (%d: %s)\\n\",\n-\t\t\t    lwpid, err, strerror (err));\n+\t\t\t    lwpid, err, safe_strerror (err));\n \t    }\n \t}\n       else if (err != 0)\n@@ -1303,7 +1303,7 @@ linux_kill_one_lwp (struct lwp_info *lwp)\n \n       debug_printf (\"LKL:  kill_lwp (SIGKILL) %s, 0, 0 (%s)\\n\",\n \t\t    target_pid_to_str (ptid_of (thr)),\n-\t\t    save_errno ? strerror (save_errno) : \"OK\");\n+\t\t    save_errno ? safe_strerror (save_errno) : \"OK\");\n     }\n \n   errno = 0;\n@@ -1314,7 +1314,7 @@ linux_kill_one_lwp (struct lwp_info *lwp)\n \n       debug_printf (\"LKL:  PTRACE_KILL %s, 0, 0 (%s)\\n\",\n \t\t    target_pid_to_str (ptid_of (thr)),\n-\t\t    save_errno ? strerror (save_errno) : \"OK\");\n+\t\t    save_errno ? safe_strerror (save_errno) : \"OK\");\n     }\n }\n \n@@ -1560,7 +1560,7 @@ linux_detach_one_lwp (struct lwp_info *lwp)\n \t  if (ret == -1)\n \t    {\n \t      warning (_(\"Couldn't reap LWP %d while detaching: %s\"),\n-\t\t       lwpid, strerror (errno));\n+\t\t       lwpid, safe_strerror (errno));\n \t    }\n \t  else if (!WIFEXITED (status) && !WIFSIGNALED (status))\n \t    {\n@@ -1573,7 +1573,7 @@ linux_detach_one_lwp (struct lwp_info *lwp)\n \t{\n \t  error (_(\"Can't detach %s: %s\"),\n \t\t target_pid_to_str (ptid_of (thread)),\n-\t\t strerror (save_errno));\n+\t\t safe_strerror (save_errno));\n \t}\n     }\n   else if (debug_threads)\n@@ -2715,7 +2715,7 @@ linux_wait_for_event_filtered (ptid_t wait_ptid, ptid_t filter_ptid,\n \n       if (debug_threads)\n \tdebug_printf (\"LWFE: waitpid(-1, ...) returned %d, %s\\n\",\n-\t\t      ret, errno ? strerror (errno) : \"ERRNO-OK\");\n+\t\t      ret, errno ? safe_strerror (errno) : \"ERRNO-OK\");\n \n       if (ret > 0)\n \t{\n@@ -5593,7 +5593,7 @@ store_register (const struct usrregs_info *usrregs,\n \t    return;\n \n \t  if ((*the_low_target.cannot_store_register) (regno) == 0)\n-\t    error (\"writing register %d: %s\", regno, strerror (errno));\n+\t    error (\"writing register %d: %s\", regno, safe_strerror (errno));\n \t}\n       regaddr += sizeof (PTRACE_XFER_TYPE);\n     }"
    },
    {
      "sha": "dd4cdd8c90cd069f18f98ac9558ed5c494c4e6fe",
      "filename": "gdb/gdbserver/lynx-low.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/gdbserver/lynx-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/gdbserver/lynx-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/lynx-low.c?ref=6d91ce9a659f5b65bb6ad2d30d74250da342150c",
      "patch": "@@ -316,7 +316,7 @@ lynx_attach (unsigned long pid)\n \n   if (lynx_ptrace (PTRACE_ATTACH, ptid, 0, 0, 0) != 0)\n     error (\"Cannot attach to process %lu: %s (%d)\\n\", pid,\n-\t   strerror (errno), errno);\n+\t   safe_strerror (errno), errno);\n \n   lynx_add_process (pid, 1);\n   lynx_add_threads_after_attach (pid);"
    },
    {
      "sha": "e9439158089c5bf193918572e4cc56335a580d08",
      "filename": "gdb/gdbserver/mem-break.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/gdbserver/mem-break.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/gdbserver/mem-break.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/mem-break.c?ref=6d91ce9a659f5b65bb6ad2d30d74250da342150c",
      "patch": "@@ -374,7 +374,7 @@ insert_memory_breakpoint (struct raw_breakpoint *bp)\n       if (debug_threads)\n \tdebug_printf (\"Failed to read shadow memory of\"\n \t\t      \" breakpoint at 0x%s (%s).\\n\",\n-\t\t      paddress (bp->pc), strerror (err));\n+\t\t      paddress (bp->pc), safe_strerror (err));\n     }\n   else\n     {\n@@ -386,7 +386,7 @@ insert_memory_breakpoint (struct raw_breakpoint *bp)\n \t{\n \t  if (debug_threads)\n \t    debug_printf (\"Failed to insert breakpoint at 0x%s (%s).\\n\",\n-\t\t\t  paddress (bp->pc), strerror (err));\n+\t\t\t  paddress (bp->pc), safe_strerror (err));\n \t}\n     }\n   return err != 0 ? -1 : 0;\n@@ -415,7 +415,7 @@ remove_memory_breakpoint (struct raw_breakpoint *bp)\n       if (debug_threads)\n \tdebug_printf (\"Failed to uninsert raw breakpoint \"\n \t\t      \"at 0x%s (%s) while deleting it.\\n\",\n-\t\t      paddress (bp->pc), strerror (err));\n+\t\t      paddress (bp->pc), safe_strerror (err));\n     }\n   return err != 0 ? -1 : 0;\n }\n@@ -597,7 +597,7 @@ delete_fast_tracepoint_jump (struct fast_tracepoint_jump *todel)\n \t\t  if (debug_threads)\n \t\t    debug_printf (\"Failed to uninsert fast tracepoint jump \"\n \t\t\t\t  \"at 0x%s (%s) while deleting it.\\n\",\n-\t\t\t\t  paddress (bp->pc), strerror (ret));\n+\t\t\t\t  paddress (bp->pc), safe_strerror (ret));\n \t\t  return ret;\n \t\t}\n \n@@ -660,7 +660,7 @@ set_fast_tracepoint_jump (CORE_ADDR where,\n       if (debug_threads)\n \tdebug_printf (\"Failed to read shadow memory of\"\n \t\t      \" fast tracepoint at 0x%s (%s).\\n\",\n-\t\t      paddress (where), strerror (err));\n+\t\t      paddress (where), safe_strerror (err));\n       free (jp);\n       return NULL;\n     }\n@@ -684,7 +684,7 @@ set_fast_tracepoint_jump (CORE_ADDR where,\n     {\n       if (debug_threads)\n \tdebug_printf (\"Failed to insert fast tracepoint jump at 0x%s (%s).\\n\",\n-\t\t      paddress (where), strerror (err));\n+\t\t      paddress (where), safe_strerror (err));\n \n       /* Unlink it.  */\n       proc->fast_tracepoint_jumps = jp->next;\n@@ -739,7 +739,7 @@ uninsert_fast_tracepoint_jumps_at (CORE_ADDR pc)\n \t  if (debug_threads)\n \t    debug_printf (\"Failed to uninsert fast tracepoint jump at\"\n \t\t\t  \" 0x%s (%s).\\n\",\n-\t\t\t  paddress (pc), strerror (err));\n+\t\t\t  paddress (pc), safe_strerror (err));\n \t}\n     }\n }\n@@ -786,7 +786,7 @@ reinsert_fast_tracepoint_jumps_at (CORE_ADDR where)\n       if (debug_threads)\n \tdebug_printf (\"Failed to reinsert fast tracepoint jump at\"\n \t\t      \" 0x%s (%s).\\n\",\n-\t\t      paddress (where), strerror (err));\n+\t\t      paddress (where), safe_strerror (err));\n     }\n }\n "
    },
    {
      "sha": "f267a9d78673ac095e688c16fe844f4a5e86f08e",
      "filename": "gdb/gdbserver/nto-low.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/gdbserver/nto-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/gdbserver/nto-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/nto-low.c?ref=6d91ce9a659f5b65bb6ad2d30d74250da342150c",
      "patch": "@@ -247,7 +247,7 @@ nto_xfer_memory (off_t memaddr, unsigned char *myaddr, int len,\n   if (nbytes == 0)\n     {\n       int e = errno;\n-      TRACE (\"Error in %s : errno=%d (%s)\\n\", __func__, e, strerror (e));\n+      TRACE (\"Error in %s : errno=%d (%s)\\n\", __func__, e, safe_strerror (e));\n     }\n   return nbytes;\n }\n@@ -505,7 +505,7 @@ nto_resume (struct thread_resume *resume_info, size_t n)\n \n   err = devctl (nto_inferior.ctl_fd, DCMD_PROC_RUN, &run, sizeof (run), 0);\n   if (err != EOK)\n-    TRACE (\"Error: %d \\\"%s\\\"\\n\", err, strerror (err));\n+    TRACE (\"Error: %d \\\"%s\\\"\\n\", err, safe_strerror (err));\n }\n \n /* Wait for inferior's event.  "
    },
    {
      "sha": "2a63ac727d3fe7ef5568709b2305c36067bfab0d",
      "filename": "gdb/linux-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-nat.c?ref=6d91ce9a659f5b65bb6ad2d30d74250da342150c",
      "patch": "@@ -1420,7 +1420,7 @@ detach_one_lwp (struct lwp_info *lp, int *signo_p)\n \t  if (ret == -1)\n \t    {\n \t      warning (_(\"Couldn't reap LWP %d while detaching: %s\"),\n-\t\t       lwpid, strerror (errno));\n+\t\t       lwpid, safe_strerror (errno));\n \t    }\n \t  else if (!WIFEXITED (status) && !WIFSIGNALED (status))\n \t    {"
    },
    {
      "sha": "dcb0494e9c96b916345a5a49afd9b11a2ef7be5f",
      "filename": "gdb/nto-procfs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/nto-procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/nto-procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nto-procfs.c?ref=6d91ce9a659f5b65bb6ad2d30d74250da342150c",
      "patch": "@@ -1317,7 +1317,7 @@ nto_procfs_target::create_inferior (const char *exec_file,\n     {\n       /* FIXME: expected warning?  */\n       /* warning( \"Failed to set Kill-on-Last-Close flag: errno = %d(%s)\\n\",\n-         errn, strerror(errn) ); */\n+         errn, safe_strerror(errn) ); */\n     }\n   if (!target_is_pushed (ops))\n     push_target (ops);"
    },
    {
      "sha": "d77828291c5ec87ae3cc29216981ccf52612b872",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d91ce9a659f5b65bb6ad2d30d74250da342150c/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=6d91ce9a659f5b65bb6ad2d30d74250da342150c",
      "patch": "@@ -2710,7 +2710,7 @@ windows_nat_target::create_inferior (const char *exec_file,\n \tredirect_inferior_handles (allargs, allargs_copy,\n \t\t\t\t   &fd_inp, &fd_out, &fd_err);\n       if (errno)\n-\twarning (_(\"Error in redirection: %s.\"), strerror (errno));\n+\twarning (_(\"Error in redirection: %s.\"), safe_strerror (errno));\n       else\n \terrno = e;\n       allargs_len = strlen (allargs_copy);"
    }
  ]
}