{
  "sha": "df5b8876083ec8c7bfb44ecb91b516c864edebfd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGY1Yjg4NzYwODNlYzhjN2JmYjQ0ZWNiOTFiNTE2Yzg2NGVkZWJmZA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-06-29T14:19:43Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-06-29T14:19:43Z"
    },
    "message": "gdb/testsuite: better handle failures in simavr board, reap simavr process\n\nThis patch makes a few adjustments to the simavr.exp to handle tests\nthat error out more gracefully.  I put all the changes in the same patch\nbecause right now it's in a very bad shape, so it's very painful to do\nsmall incremental adjustements.  I found that with these changes, it\nbecomes reasonably stable.\n\nFor example, the gdb.base/step-over-syscall.exp test is a bit buggy\n(stuff for another patch...), in that it calls gdb_load (through\nclean_restart) with a file that doesn't exist.  The gdb_load\nimplementation in simavr.exp gets called with a file that doesn't exist,\nand simavr (expectedly) fails to start.\n\nWhen this happens, we currently leave the $simavr_spawn_id variable set.\nHowever, because the simavr process has terminated, its spawn id is\nclosed.  When the next test tries to close the previous connection to\nsimavr, it fails to, and this error is thrown:\n\n    ERROR: close: spawn id exp86 not open\n        while executing\n    \"close -i $simavr_spawn_id\"\n        (procedure \"gdb_load\" line 18)\n        invoked from within\n\nIn other words, any test ran after step-over-syscall.exp will have\nsimavr.exp's gdb_load fail on it.\n\nThis patch tries to make sure that simavr.exp's gdb_load only leaves\nsimavr_spawn_id set if everything went fine.  If we couldn't start\nsimavr, don't see the expected output, or fail to connect to it, we\nclose the spawn id (if needed) and unset simavr_spawn_id.\n\nAs an additional precaution, I added a catch around the \"close the\nprevious connection\" code.  Ideally, this shouldn't be necessary, but I\nbet there are other similar scenarios where we might try to close an\nalready close spawn id.  So I think displaying a warning is better than\nmessing up all following tests.\n\nAlso, the board never wait'ed for the simavr process, resulting in tons\nof zombie simavr processes hanging around.  This patch adds some calls\nto \"wait\" whenever we close the connection (or realize it is already\nclosed), which seems to fix the problem.\n\nFinally I switched a `gdb_expect` to bare `expect`, where we wait for\nthe \"listening\" message from simavr.  I found it necessary because\ngdb_expect (through remote_expect) adds a `-i <gdb spawn id> -timeout\n10`.  So if for some reason the GDB process has crashed in the mean\ntime, this expect will unexpectedly error out with a `spawn id <gdb\nspawn id> not open`.  Therefore, change `gdb_expect` to `expect` so that\nwe only deal with simavr's spawn id here.\n\nHere are the results on TESTS=\"gdb.base/*.exp\" before:\n\n    # of expected passes\t\t4816\n    # of unexpected failures\t4433\n    # of known failures\t\t2\n    # of unresolved testcases\t300\n    # of untested testcases\t\t143\n    # of unsupported tests\t\t7\n    # of paths in test names\t2\n    # of duplicate test names\t10\n\nand after:\n\n    # of expected passes\t\t21957\n    # of unexpected failures\t1564\n    # of expected failures\t\t8\n    # of unknown successes\t\t1\n    # of known failures\t\t31\n    # of unresolved testcases\t532\n    # of untested testcases\t\t153\n    # of unsupported tests\t\t28\n    # of paths in test names\t2\n    # of duplicate test names\t32\n\nI tested using simavr's current master (7c254e2081b5).\n\ngdb/testsuite/ChangeLog:\n\n\t* boards/simavr.exp (gdb_load): Catch errors when closing\n\tprevious connection.  Close connection, wait for process and\n\tunset simavr_spawn_id on failure.\n\nChange-Id: I695fc765e1c22e1d1dc0b08e0f5141244986b868",
    "tree": {
      "sha": "4ba39db53e67407c1fe9f0a84e332aa50fe69856",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4ba39db53e67407c1fe9f0a84e332aa50fe69856"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/df5b8876083ec8c7bfb44ecb91b516c864edebfd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/df5b8876083ec8c7bfb44ecb91b516c864edebfd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/df5b8876083ec8c7bfb44ecb91b516c864edebfd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/df5b8876083ec8c7bfb44ecb91b516c864edebfd/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8c190ce03837391885bbba9055bea04d36077f9c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c190ce03837391885bbba9055bea04d36077f9c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8c190ce03837391885bbba9055bea04d36077f9c"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 39,
    "deletions": 4
  },
  "files": [
    {
      "sha": "b1bc547507dddb77f62223bf618b25bbe4b42668",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df5b8876083ec8c7bfb44ecb91b516c864edebfd/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df5b8876083ec8c7bfb44ecb91b516c864edebfd/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=df5b8876083ec8c7bfb44ecb91b516c864edebfd",
      "patch": "@@ -1,3 +1,9 @@\n+2020-06-29  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* boards/simavr.exp (gdb_load): Catch errors when closing\n+\tprevious connection.  Close connection, wait for process and\n+\tunset simavr_spawn_id on failure.\n+\n 2020-06-29  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/gdb.exp (unknown): Make test-case unresolved."
    },
    {
      "sha": "1bd02261f50187c7e2863202fac7031b62c0025e",
      "filename": "gdb/testsuite/boards/simavr.exp",
      "status": "modified",
      "additions": 33,
      "deletions": 4,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df5b8876083ec8c7bfb44ecb91b516c864edebfd/gdb/testsuite/boards/simavr.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df5b8876083ec8c7bfb44ecb91b516c864edebfd/gdb/testsuite/boards/simavr.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/boards/simavr.exp?ref=df5b8876083ec8c7bfb44ecb91b516c864edebfd",
      "patch": "@@ -70,7 +70,12 @@ proc gdb_load { file } {\n \n     # Close any previous simavr instance.\n     if { $simavr_spawn_id != \"\" } {\n-\tclose -i $simavr_spawn_id\n+\tverbose -log \"simavr: closing previous spawn id $simavr_spawn_id\"\n+\tif [catch { close -i $simavr_spawn_id } != 0] {\n+\t    warning \"simavr: failed to close connection to previous simavr instance\"\n+\t}\n+\n+\twait -i $simavr_spawn_id\n \tset simavr_spawn_id \"\"\n     }\n \n@@ -79,16 +84,40 @@ proc gdb_load { file } {\n     verbose -log \"Spawning simavr: $cmd\"\n     eval $cmd\n     set simavr_spawn_id $spawn_id\n-    gdb_expect {\n+\n+    verbose -log \"simavr: simavr spawned with spawn id $simavr_spawn_id, pid [exp_pid $simavr_spawn_id]\"\n+\n+    # Wait for \"listening on port\" message of simavr.\n+    expect {\n \t-i $simavr_spawn_id -re \".*avr_gdb_init listening on port 1234\" {}\n-\ttimeout { error \"unable to start simavr\" }\n+\ttimeout {\n+\t    verbose -log \"simavr: timeout, closing simavr spawn id\"\n+\t    close -i $simavr_spawn_id\n+\t    verbose -log \"simavr: timeout, waiting for simavr process exit\"\n+\t    wait -i $simavr_spawn_id\n+\t    set simavr_spawn_id \"\"\n+\t    error \"unable to start simavr: timeout\"\n+\t}\n+\teof {\n+\t    verbose -log \"simavr: eof, waiting for simavr process exit\"\n+\t    wait -i $simavr_spawn_id\n+\t    set simavr_spawn_id \"\"\n+\t    error \"unable to start simavr: eof\"\n+\t}\n     }\n \n     # Connect to simavr.\n     send_gdb \"target remote :1234\\n\"\n     gdb_expect {\n \t-re \".*Remote debugging using :1234.*\\[\\r\\n\\]+$gdb_prompt $\" {}\n-\ttimeout { error \"unable to connect to simavr stub\" }\n+\ttimeout {\n+\t    verbose -log \"simavr: unable to connect to simavr, closing simavr spawn id\"\n+\t    close -i $simavr_spawn_id\n+\t    verbose -log \"simavr: unable to connect to simavr, waiting for simavr process exit\"\n+\t    wait -i $simavr_spawn_id\n+\t    set simavr_spawn_id \"\"\n+\t    error \"unable to connect to simavr stub\"\n+\t}\n     }\n \n     return 0"
    }
  ]
}