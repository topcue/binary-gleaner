{
  "sha": "759cea5e3f7f141abfc2f31d5039cd7f109edf95",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzU5Y2VhNWUzZjdmMTQxYWJmYzJmMzFkNTAzOWNkN2YxMDllZGY5NQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-04-30T00:35:34Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-04-30T00:35:34Z"
    },
    "message": "gdb: fix shellcheck warnings SC2166 (&& and !! instead of -a and -o) in gdbarch.sh\n\nFix all warnings of this type:\n\n    In gdbarch.sh line 1238:\n        if [ \"x${invalid_p}\" = \"x0\" -a -n \"${postdefault}\" ]\n                                    ^-- SC2166: Prefer [ p ] && [ q ] as [ p -a q ] is not well defined.\n\nSee the rationale here [1].\n\n[1] https://github.com/koalaman/shellcheck/wiki/SC2166\n\ngdb/ChangeLog:\n\n\t* gdbarch.sh: Use shell operators && and || instead of\n\t-a and -o.",
    "tree": {
      "sha": "90dbb8dcc0a47fb278aa018316d585469ae16a5f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/90dbb8dcc0a47fb278aa018316d585469ae16a5f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/759cea5e3f7f141abfc2f31d5039cd7f109edf95",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/759cea5e3f7f141abfc2f31d5039cd7f109edf95",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/759cea5e3f7f141abfc2f31d5039cd7f109edf95",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/759cea5e3f7f141abfc2f31d5039cd7f109edf95/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cb02ab2416c2d83ca053652a21788189f3f7779f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cb02ab2416c2d83ca053652a21788189f3f7779f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cb02ab2416c2d83ca053652a21788189f3f7779f"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 12,
    "deletions": 7
  },
  "files": [
    {
      "sha": "bf0fdf55a5c3a5f1c88f5c46818a12b507713a64",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/759cea5e3f7f141abfc2f31d5039cd7f109edf95/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/759cea5e3f7f141abfc2f31d5039cd7f109edf95/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=759cea5e3f7f141abfc2f31d5039cd7f109edf95",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-29  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbarch.sh: Use shell operators && and || instead of\n+\t-a and -o.\n+\n 2020-04-29  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbarch.sh: Use $(...) instead of `...`."
    },
    {
      "sha": "f1b9276775e313910a7215d511a9577cc227534c",
      "filename": "gdb/gdbarch.sh",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/759cea5e3f7f141abfc2f31d5039cd7f109edf95/gdb/gdbarch.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/759cea5e3f7f141abfc2f31d5039cd7f109edf95/gdb/gdbarch.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.sh?ref=759cea5e3f7f141abfc2f31d5039cd7f109edf95",
      "patch": "@@ -156,8 +156,8 @@ EOF\n \n fallback_default_p ()\n {\n-    [ -n \"${postdefault}\" -a \"x${invalid_p}\" != \"x0\" ] \\\n-\t|| [ -n \"${predefault}\" -a \"x${invalid_p}\" = \"x0\" ]\n+    ( [ -n \"${postdefault}\" ] && [ \"x${invalid_p}\" != \"x0\" ] ) \\\n+\t|| ( [ -n \"${predefault}\" ] && [ \"x${invalid_p}\" = \"x0\" ] )\n }\n \n class_is_variable_p ()\n@@ -1235,7 +1235,7 @@ EOF\n \tkill $$\n \texit 1\n     fi\n-    if [ \"x${invalid_p}\" = \"x0\" -a -n \"${postdefault}\" ]\n+    if [ \"x${invalid_p}\" = \"x0\" ] && [ -n \"${postdefault}\" ]\n     then\n \techo \"Error: postdefault is useless when invalid_p=0\" 1>&2\n \tkill $$\n@@ -1921,7 +1921,7 @@ function_list | while do_read\n do\n     if class_is_function_p || class_is_variable_p\n     then\n-\tif [ -n \"${predefault}\" -a \"x${predefault}\" != \"x0\" ]\n+\tif [ -n \"${predefault}\" ] && [ \"x${predefault}\" != \"x0\" ]\n \tthen\n \t  printf \"  gdbarch->%s = %s;\\n\" \"$function\" \"$predefault\"\n \tfi\n@@ -2001,11 +2001,11 @@ do\n \tthen\n \t    printf \"  /* Skip verify of %s, has predicate.  */\\n\" \"$function\"\n \t# FIXME: See do_read for potential simplification\n- \telif [ -n \"${invalid_p}\" -a -n \"${postdefault}\" ]\n+\telif [ -n \"${invalid_p}\" ] && [ -n \"${postdefault}\" ]\n \tthen\n \t    printf \"  if (%s)\\n\" \"$invalid_p\"\n \t    printf \"    gdbarch->%s = %s;\\n\" \"$function\" \"$postdefault\"\n-\telif [ -n \"${predefault}\" -a -n \"${postdefault}\" ]\n+\telif [ -n \"${predefault}\" ] && [ -n \"${postdefault}\" ]\n \tthen\n \t    printf \"  if (gdbarch->%s == %s)\\n\" \"$function\" \"$predefault\"\n \t    printf \"    gdbarch->%s = %s;\\n\" \"$function\" \"$postdefault\"\n@@ -2136,7 +2136,7 @@ do\n \tfi\n \tprintf \"  if (gdbarch_debug >= 2)\\n\"\n \tprintf \"    fprintf_unfiltered (gdb_stdlog, \\\"gdbarch_%s called\\\\\\\\n\\\");\\n\" \"$function\"\n-\tif [ \"x${actual}\" = \"x-\" -o \"x${actual}\" = \"x\" ]\n+\tif [ \"x${actual}\" = \"x-\" ] || [ \"x${actual}\" = \"x\" ]\n \tthen\n \t    if class_is_multiarch_p\n \t    then"
    }
  ]
}