{
  "sha": "c471bdb19858ad0e7a0d5f5017fd5e1892525da8",
  "node_id": "C_kwDOANOeidoAKGM0NzFiZGIxOTg1OGFkMGU3YTBkNWY1MDE3ZmQ1ZTE4OTI1MjVkYTg",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-12-01T16:41:31Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-12-03T21:48:23Z"
    },
    "message": "gdb: use intrusive_list for cmd_list_element aliases list\n\nChange the manually-implemented linked list to use intrusive_list.  This\nis not strictly necessary, but it makes the code much simpler.\n\nChange-Id: Idd08090ebf2db8bdcf68e85ef72a9635f1584ccc",
    "tree": {
      "sha": "4573ba65482f0a7af9542860167a4f97f0b79a71",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4573ba65482f0a7af9542860167a4f97f0b79a71"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c471bdb19858ad0e7a0d5f5017fd5e1892525da8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c471bdb19858ad0e7a0d5f5017fd5e1892525da8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c471bdb19858ad0e7a0d5f5017fd5e1892525da8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c471bdb19858ad0e7a0d5f5017fd5e1892525da8/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "46680d22de34be5057a1033eb489c1453e70eecc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46680d22de34be5057a1033eb489c1453e70eecc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/46680d22de34be5057a1033eb489c1453e70eecc"
    }
  ],
  "stats": {
    "total": 100,
    "additions": 50,
    "deletions": 50
  },
  "files": [
    {
      "sha": "39f9eb54dc2065acf1ddff3723375ac1df67f2db",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 37,
      "deletions": 45,
      "changes": 82,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c471bdb19858ad0e7a0d5f5017fd5e1892525da8/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c471bdb19858ad0e7a0d5f5017fd5e1892525da8/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=c471bdb19858ad0e7a0d5f5017fd5e1892525da8",
      "patch": "@@ -30,12 +30,10 @@\n \n static void undef_cmd_error (const char *, const char *);\n \n-static struct cmd_list_element *delete_cmd (const char *name,\n-\t\t\t\t\t    struct cmd_list_element **list,\n-\t\t\t\t\t    struct cmd_list_element **prehook,\n-\t\t\t\t\t    struct cmd_list_element **prehookee,\n-\t\t\t\t\t    struct cmd_list_element **posthook,\n-\t\t\t\t\t    struct cmd_list_element **posthookee);\n+static cmd_list_element::aliases_list_type delete_cmd\n+  (const char *name, cmd_list_element **list, cmd_list_element **prehook,\n+   cmd_list_element **prehookee, cmd_list_element **posthook,\n+   cmd_list_element **posthookee);\n \n static struct cmd_list_element *find_cmd (const char *command,\n \t\t\t\t\t  int len,\n@@ -171,20 +169,24 @@ do_add_cmd (const char *name, enum command_class theclass,\n {\n   struct cmd_list_element *c = new struct cmd_list_element (name, theclass,\n \t\t\t\t\t\t\t    doc);\n-  struct cmd_list_element *p, *iter;\n \n   /* Turn each alias of the old command into an alias of the new\n      command.  */\n   c->aliases = delete_cmd (name, list, &c->hook_pre, &c->hookee_pre,\n \t\t\t   &c->hook_post, &c->hookee_post);\n-  for (iter = c->aliases; iter; iter = iter->alias_chain)\n-    iter->alias_target = c;\n+\n+  for (cmd_list_element &alias : c->aliases)\n+    alias.alias_target = c;\n+\n   if (c->hook_pre)\n     c->hook_pre->hookee_pre = c;\n+\n   if (c->hookee_pre)\n     c->hookee_pre->hook_pre = c;\n+\n   if (c->hook_post)\n     c->hook_post->hookee_post = c;\n+\n   if (c->hookee_post)\n     c->hookee_post->hook_post = c;\n \n@@ -195,7 +197,7 @@ do_add_cmd (const char *name, enum command_class theclass,\n     }\n   else\n     {\n-      p = *list;\n+      cmd_list_element *p = *list;\n       while (p->next && strcmp (p->next->name, name) <= 0)\n \t{\n \t  p = p->next;\n@@ -296,8 +298,7 @@ add_alias_cmd (const char *name, cmd_list_element *target,\n   c->allow_unknown = target->allow_unknown;\n   c->abbrev_flag = abbrev_flag;\n   c->alias_target = target;\n-  c->alias_chain = target->aliases;\n-  target->aliases = c;\n+  target->aliases.push_front (*c);\n \n   return c;\n }\n@@ -1195,14 +1196,13 @@ add_setshow_zuinteger_cmd (const char *name, command_class theclass,\n \t\t\t\t\t     show_list);\n }\n \n-/* Remove the command named NAME from the command list.  Return the\n-   list commands which were aliased to the deleted command.  If the\n-   command had no aliases, return NULL.  The various *HOOKs are set to\n-   the pre- and post-hook commands for the deleted command.  If the\n-   command does not have a hook, the corresponding out parameter is\n-   set to NULL.  */\n+/* Remove the command named NAME from the command list.  Return the list\n+   commands which were aliased to the deleted command.  The various *HOOKs are\n+   set to the pre- and post-hook commands for the deleted command.  If the\n+   command does not have a hook, the corresponding out parameter is set to\n+   NULL.  */\n \n-static struct cmd_list_element *\n+static cmd_list_element::aliases_list_type\n delete_cmd (const char *name, struct cmd_list_element **list,\n \t    struct cmd_list_element **prehook,\n \t    struct cmd_list_element **prehookee,\n@@ -1211,7 +1211,7 @@ delete_cmd (const char *name, struct cmd_list_element **list,\n {\n   struct cmd_list_element *iter;\n   struct cmd_list_element **previous_chain_ptr;\n-  struct cmd_list_element *aliases = NULL;\n+  cmd_list_element::aliases_list_type aliases;\n \n   *prehook = NULL;\n   *prehookee = NULL;\n@@ -1238,21 +1238,14 @@ delete_cmd (const char *name, struct cmd_list_element **list,\n \t  /* Update the link.  */\n \t  *previous_chain_ptr = iter->next;\n \n-\t  aliases = iter->aliases;\n+\t  aliases = std::move (iter->aliases);\n \n \t  /* If this command was an alias, remove it from the list of\n \t     aliases.  */\n \t  if (iter->is_alias ())\n \t    {\n-\t      struct cmd_list_element **prevp = &iter->alias_target->aliases;\n-\t      struct cmd_list_element *a = *prevp;\n-\n-\t      while (a != iter)\n-\t\t{\n-\t\t  prevp = &a->alias_chain;\n-\t\t  a = *prevp;\n-\t\t}\n-\t      *prevp = iter->alias_chain;\n+\t      auto it = iter->alias_target->aliases.iterator_to (*iter);\n+\t      iter->alias_target->aliases.erase (it);\n \t    }\n \n \t  delete iter;\n@@ -1351,11 +1344,9 @@ static void\n fput_aliases_definition_styled (struct cmd_list_element *cmd,\n \t\t\t\tstruct ui_file *stream)\n {\n-  for (cmd_list_element *iter = cmd->aliases;\n-       iter != nullptr;\n-       iter = iter->alias_chain)\n-    if (!iter->default_args.empty ())\n-      fput_alias_definition_styled (iter, stream);\n+  for (cmd_list_element &alias : cmd->aliases)\n+    if (!alias.default_args.empty ())\n+      fput_alias_definition_styled (&alias, stream);\n }\n \n \n@@ -1370,17 +1361,17 @@ fput_command_names_styled (struct cmd_list_element *c,\n \t\t\t   bool always_fput_c_name, const char *postfix,\n \t\t\t   struct ui_file *stream)\n {\n-  if (always_fput_c_name ||  c->aliases != nullptr)\n+  if (always_fput_c_name || !c->aliases.empty ())\n     fput_command_name_styled (c, stream);\n \n-  for (cmd_list_element *iter = c->aliases; iter; iter = iter->alias_chain)\n+  for (cmd_list_element &alias : c->aliases)\n     {\n       fputs_filtered (\", \", stream);\n       wrap_here (\"   \");\n-      fput_command_name_styled (iter, stream);\n+      fput_command_name_styled (&alias, stream);\n     }\n \n-  if (always_fput_c_name ||  c->aliases != nullptr)\n+  if (always_fput_c_name || !c->aliases.empty ())\n     fputs_filtered (postfix, stream);\n }\n \n@@ -1453,14 +1444,15 @@ apropos_cmd (struct ui_file *stream,\n \t    print_doc_of_command (c, prefix, verbose, regex, stream);\n \n \t  /* Try to match against the name of the aliases.  */\n-\t  for (cmd_list_element *iter = c->aliases;\n-\t       returnvalue < 0 && iter;\n-\t       iter = iter->alias_chain)\n+\t  for (const cmd_list_element &alias : c->aliases)\n \t    {\n-\t      name_len = strlen (iter->name);\n-\t      returnvalue = regex.search (iter->name, name_len, 0, name_len, NULL);\n+\t      name_len = strlen (alias.name);\n+\t      returnvalue = regex.search (alias.name, name_len, 0, name_len, NULL);\n \t      if (returnvalue >= 0)\n-\t\tprint_doc_of_command (c, prefix, verbose, regex, stream);\n+\t\t{\n+\t\t  print_doc_of_command (c, prefix, verbose, regex, stream);\n+\t\t  break;\n+\t\t}\n \t    }\n \t}\n       if (c->doc != NULL && returnvalue < 0)"
    },
    {
      "sha": "1d3a3db786ef1505d5ee481b4b3370d7ae59845b",
      "filename": "gdb/cli/cli-decode.h",
      "status": "modified",
      "additions": 13,
      "deletions": 5,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c471bdb19858ad0e7a0d5f5017fd5e1892525da8/gdb/cli/cli-decode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c471bdb19858ad0e7a0d5f5017fd5e1892525da8/gdb/cli/cli-decode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.h?ref=c471bdb19858ad0e7a0d5f5017fd5e1892525da8",
      "patch": "@@ -26,6 +26,7 @@\n #include \"gdb_regex.h\"\n #include \"cli-script.h\"\n #include \"completer.h\"\n+#include \"gdbsupport/intrusive_list.h\"\n \n /* Not a set/show command.  Note that some commands which begin with\n    \"set\" or \"show\" might be in this category, if their syntax does\n@@ -246,11 +247,18 @@ struct cmd_list_element\n      aliased command can be located in case it has been hooked.  */\n   struct cmd_list_element *alias_target = nullptr;\n \n-  /* Start of a linked list of all aliases of this command.  */\n-  struct cmd_list_element *aliases = nullptr;\n-\n-  /* Link pointer for aliases on an alias list.  */\n-  struct cmd_list_element *alias_chain = nullptr;\n+  /* Node to link aliases on an alias list.  */\n+  using aliases_list_node_type\n+    = intrusive_list_node<cmd_list_element>;\n+  aliases_list_node_type aliases_list_node;\n+\n+  /* Linked list of all aliases of this command.  */\n+  using aliases_list_member_node_type\n+    = intrusive_member_node<cmd_list_element,\n+\t\t\t    &cmd_list_element::aliases_list_node>;\n+  using aliases_list_type\n+    = intrusive_list<cmd_list_element, aliases_list_member_node_type>;\n+  aliases_list_type aliases;\n \n   /* If non-null, the pointer to a field in 'struct\n      cli_suppress_notification', which will be set to true in cmd_func"
    }
  ]
}