{
  "sha": "236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjM2ZjRlYmUzYWM3ZThmOTQxODRmZGNjMzljNzBkNzRjYzYyYjgyYQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-01-08T16:53:02Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-01-08T16:53:26Z"
    },
    "message": "Remove support for old gnu v2 name mangling.\n\n\tPR 24044\n\t* cxxfilt.c (hp_symbol_characters): Delete.\n\t(main): Remove depcreated demangling styles.\n\t* stabs.c (parse_stab_argtypes): Remove support for old gnu v2\n\tdemangling opnames.\n\t* testsuite/binutils-all/cxxfilt.exp: Use the\n\t--no-strip-underscore option for targets that do prefix their\n\tsymbols with underscores.\n\tUpdate tests to elimiate those that use gnu v2 encoding.",
    "tree": {
      "sha": "3a93862257e3b40a933ee072499d4bc077a66606",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3a93862257e3b40a933ee072499d4bc077a66606"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c8fcc36012301d7402fd990ee5d8f78dffa824f0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c8fcc36012301d7402fd990ee5d8f78dffa824f0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c8fcc36012301d7402fd990ee5d8f78dffa824f0"
    }
  ],
  "stats": {
    "total": 124,
    "additions": 53,
    "deletions": 71
  },
  "files": [
    {
      "sha": "995a6b3f67fc1b99903a51c2109b33e82cef3616",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a",
      "patch": "@@ -1,3 +1,15 @@\n+2019-01-08  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24044\n+\t* cxxfilt.c (hp_symbol_characters): Delete.\n+\t(main): Remove depcreated demangling styles.\n+\t* stabs.c (parse_stab_argtypes): Remove support for old gnu v2\n+\tdemangling opnames.\n+\t* testsuite/binutils-all/cxxfilt.exp: Use the\n+\t--no-strip-underscore option for targets that do prefix their\n+\tsymbols with underscores.\n+\tUpdate tests to elimiate those that use gnu v2 encoding.\n+\n 2019-01-08  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR 24065"
    },
    {
      "sha": "7b8210e6cce684a5c1f39600ba089e9292a010ab",
      "filename": "binutils/cxxfilt.c",
      "status": "modified",
      "additions": 3,
      "deletions": 46,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a/binutils/cxxfilt.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a/binutils/cxxfilt.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/cxxfilt.c?ref=236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a",
      "patch": "@@ -135,42 +135,6 @@ standard_symbol_characters (void)\n   return \"_$.\";\n }\n \n-/* Return the string of non-alnum characters that may occur\n-   as a valid symbol name component in an HP object file.\n-\n-   Note that, since HP's compiler generates object code straight from\n-   C++ source, without going through an assembler, its mangled\n-   identifiers can use all sorts of characters that no assembler would\n-   tolerate, so the alphabet this function creates is a little odd.\n-   Here are some sample mangled identifiers offered by HP:\n-\n-\ttypeid*__XT24AddressIndExpClassMember_\n-\t[Vftptr]key:__dt__32OrdinaryCompareIndExpClassMemberFv\n-\t__ct__Q2_9Elf64_Dyn18{unnamed.union.#1}Fv\n-\n-   This still seems really weird to me, since nowhere else in this\n-   file is there anything to recognize curly brackets, parens, etc.\n-   I've talked with Srikanth <srikanth@cup.hp.com>, and he assures me\n-   this is right, but I still strongly suspect that there's a\n-   misunderstanding here.\n-\n-   If we decide it's better for c++filt to use HP's assembler syntax\n-   to scrape identifiers out of its input, here's the definition of\n-   the symbol name syntax from the HP assembler manual:\n-\n-       Symbols are composed of uppercase and lowercase letters, decimal\n-       digits, dollar symbol, period (.), ampersand (&), pound sign(#) and\n-       underscore (_). A symbol can begin with a letter, digit underscore or\n-       dollar sign. If a symbol begins with a digit, it must contain a\n-       non-digit character.\n-\n-   So have fun.  */\n-static const char *\n-hp_symbol_characters (void)\n-{\n-  return \"_$.<>#,*&[]:(){}\";\n-}\n-\n extern int main (int, char **);\n \n int\n@@ -245,20 +209,13 @@ main (int argc, char **argv)\n \n   switch (current_demangling_style)\n     {\n-    case gnu_demangling:\n-    case lucid_demangling:\n-    case arm_demangling:\n+    case auto_demangling:\n+    case gnu_v3_demangling:\n     case java_demangling:\n-    case edg_demangling:\n     case gnat_demangling:\n-    case gnu_v3_demangling:\n     case dlang_demangling:\n     case rust_demangling:\n-    case auto_demangling:\n-      valid_symbols = standard_symbol_characters ();\n-      break;\n-    case hp_demangling:\n-      valid_symbols = hp_symbol_characters ();\n+       valid_symbols = standard_symbol_characters ();\n       break;\n     default:\n       /* Folks should explicitly indicate the appropriate alphabet for"
    },
    {
      "sha": "e84aa6f1ac5b0b53a2d86ac7b8b9b853cc90f390",
      "filename": "binutils/stabs.c",
      "status": "modified",
      "additions": 7,
      "deletions": 19,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a/binutils/stabs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a/binutils/stabs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/stabs.c?ref=236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a",
      "patch": "@@ -3037,27 +3037,15 @@ parse_stab_argtypes (void *dhandle, struct stab_handle *info,\n \t  && fieldname[1] == 'p'\n \t  && (fieldname[2] == '$' || fieldname[2] == '.'))\n \t{\n-\t  const char *opname;\n-\n-\t  opname = cplus_mangle_opname (fieldname + 3, 0);\n-\t  if (opname == NULL)\n-\t    {\n-\t      fprintf (stderr, _(\"No mangling for \\\"%s\\\"\\n\"), fieldname);\n-\t      return DEBUG_TYPE_NULL;\n-\t    }\n-\t  mangled_name_len += strlen (opname);\n-\t  physname = (char *) xmalloc (mangled_name_len);\n-\t  strncpy (physname, fieldname, 3);\n-\t  strcpy (physname + 3, opname);\n+\t  /* Opname selection is no longer supported by libiberty's demangler.  */\n+\t  return DEBUG_TYPE_NULL;\n \t}\n+\n+      physname = (char *) xmalloc (mangled_name_len);\n+      if (is_constructor)\n+\tphysname[0] = '\\0';\n       else\n-\t{\n-\t  physname = (char *) xmalloc (mangled_name_len);\n-\t  if (is_constructor)\n-\t    physname[0] = '\\0';\n-\t  else\n-\t    strcpy (physname, fieldname);\n-\t}\n+\tstrcpy (physname, fieldname);\n \n       physname_len = strlen (physname);\n       strcat (physname, buf);"
    },
    {
      "sha": "d59c26ae914eec2db350d2ff04cf89bb45615a3c",
      "filename": "binutils/testsuite/binutils-all/cxxfilt.exp",
      "status": "modified",
      "additions": 31,
      "deletions": 6,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a/binutils/testsuite/binutils-all/cxxfilt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a/binutils/testsuite/binutils-all/cxxfilt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/cxxfilt.exp?ref=236f4ebe3ac7e8f94184fdcc39c70d74cc62b82a",
      "patch": "@@ -18,8 +18,33 @@ proc test_cxxfilt {options mangled_string demangled_string} {\n     global CXXFILT\n     global CXXFILTFLAGS\n     \n+    if {   [istarget \"arm*-*-pe\"] \\\n+        || [istarget \"cris*-*-*\"] \\\n+\t|| [istarget \"cr16-*-*\"] \\\n+\t|| [istarget \"crx*-*-*\"] \\\n+\t|| [istarget \"epiphany-*-*\"] \\\n+\t|| [istarget \"ip2k-*-*\"] \\\n+\t|| [istarget \"metag-*-*\"] \\\n+\t|| [istarget \"mn10200-*-*\"] \\\n+\t|| [istarget \"mn10300-*-*\"] \\\n+\t|| [istarget \"ns32k-*-*\"] \\\n+\t|| [istarget \"pdp11-*-*\"] \\\n+\t|| [istarget \"rl78-*-*\"] \\\n+\t|| [istarget \"rx-*-*\"] \\\n+\t|| [istarget \"sh-*-*\"] \\\n+\t|| [istarget \"tic4*-*-*\"] \\\n+\t|| [istarget \"tic54*-*-*\"] \\\n+\t|| [istarget \"v850-*-*\"] \\\n+\t|| [istarget \"z8k-*-*\"] \\\n+\t|| [istarget \"*-*-cygwin\"] \\\n+\t|| [istarget \"*-*-mingw32\"] } then {\n+\tset cxxfilt_strip_opt \"--no-strip-underscore\"\n+    } else {\n+\tset cxxfilt_strip_opt \"\"\n+    }\n+\n     set testname \"cxxfilt: demangling $mangled_string\"\n-    set got [binutils_run $CXXFILT \"$options $CXXFILTFLAGS $mangled_string\"]\n+    set got [binutils_run $CXXFILT \"$cxxfilt_strip_opt $options $CXXFILTFLAGS $mangled_string\"]\n \n     if ![regexp $demangled_string $got] then {\n \tfail \"$testname\"\n@@ -32,12 +57,12 @@ proc test_cxxfilt {options mangled_string demangled_string} {\n \n # Mangled and demangled strings stolen from libiberty/testsuite/demangle-expected.\n test_cxxfilt {} \\\n-    \"AddAlignment__9ivTSolverUiP12ivInteractorP7ivTGlue\" \\\n-    \"ivTSolver::AddAlignment(unsigned int, ivInteractor ., ivTGlue .)*\"\n+    \"_Z1fIvJiELb0EEvPDOT1_EFT_DpT0_E\" \\\n+    \"void f.void, int, false.(void (.)(int) noexcept(false))*\"\n \n-test_cxxfilt {--format=lucid} \\\n-    \"__ct__12strstreambufFPFl_PvPFPv_v\" \\\n-    \"strstreambuf..(strstreambuf|_ct)(void .(.)(long), void (.)(void .))*\"\n+test_cxxfilt {--format=gnu-v3} \\\n+    \"_Z14int_if_addableI1YERiP1AIXszpldecvPT_Li0EdecvS4_Li0EEE\" \\\n+    \"int& int_if_addable.Y.(A.sizeof ((.((Y.)(0))).(.((Y.)(0))))..)*\"\n \n test_cxxfilt {--no-recurse-limit} \\\n     \"Z3fooiPiPS_PS0_PS1_PS2_PS3_PS4_PS5_PS6_PS7_PS8_PS9_PSA_PSB_PSC_\" \\"
    }
  ]
}