{
  "sha": "bcca550b3dc542284715c19655c1885bdf2d3b67",
  "node_id": "C_kwDOANOeidoAKGJjY2E1NTBiM2RjNTQyMjg0NzE1YzE5NjU1YzE4ODViZGYyZDNiNjc",
  "commit": {
    "author": {
      "name": "Richard Sandiford",
      "email": "richard.sandiford@arm.com",
      "date": "2021-12-02T15:00:57Z"
    },
    "committer": {
      "name": "Richard Sandiford",
      "email": "richard.sandiford@arm.com",
      "date": "2021-12-02T15:00:57Z"
    },
    "message": "aarch64: Add BC instruction\n\nThis patch adds support for the Armv8.8-A BC instruction.\n[https://developer.arm.com/documentation/ddi0596/2021-09/Base-Instructions/BC-cond--Branch-Consistent-conditionally-?lang=en]\n\ninclude/\n\t* opcode/aarch64.h (AARCH64_FEATURE_HBC): New macro.\n\t(AARCH64_ARCH_V8_8): Make armv8.8-a imply AARCH64_FEATURE_HBC.\n\nopcodes/\n\t* aarch64-tbl.h (aarch64_feature_hbc): New variable.\n\t(HBC, HBC_INSN): New macros.\n\t(aarch64_opcode_table): Add BC.C.\n\t* aarch64-dis-2.c: Regenerate.\n\ngas/\n\t* doc/c-aarch64.texi: Document +hbc.\n\t* config/tc-aarch64.c (aarch64_features): Add \"hbc\".\n\t* testsuite/gas/aarch64/hbc.s, testsuite/gas/aarch64/hbc.d: New test.\n\t* testsuite/gas/aarch64/hbc-invalid.s,\n\ttestsuite/gas/aarch64/hbc-invalid.l,\n\ttestsuite/gas/aarch64/hbc-invalid.d: New test.",
    "tree": {
      "sha": "9595ba94a8add55664ce8192a82dc8594e8b137a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9595ba94a8add55664ce8192a82dc8594e8b137a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bcca550b3dc542284715c19655c1885bdf2d3b67",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bcca550b3dc542284715c19655c1885bdf2d3b67",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bcca550b3dc542284715c19655c1885bdf2d3b67",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bcca550b3dc542284715c19655c1885bdf2d3b67/comments",
  "author": {
    "login": "rsandifo-arm",
    "id": 28043039,
    "node_id": "MDQ6VXNlcjI4MDQzMDM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rsandifo-arm",
    "html_url": "https://github.com/rsandifo-arm",
    "followers_url": "https://api.github.com/users/rsandifo-arm/followers",
    "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs",
    "repos_url": "https://api.github.com/users/rsandifo-arm/repos",
    "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "rsandifo-arm",
    "id": 28043039,
    "node_id": "MDQ6VXNlcjI4MDQzMDM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rsandifo-arm",
    "html_url": "https://github.com/rsandifo-arm",
    "followers_url": "https://api.github.com/users/rsandifo-arm/followers",
    "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs",
    "repos_url": "https://api.github.com/users/rsandifo-arm/repos",
    "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "63eff947512b36c770c92d45e4b22cb8a18a39be",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/63eff947512b36c770c92d45e4b22cb8a18a39be",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/63eff947512b36c770c92d45e4b22cb8a18a39be"
    }
  ],
  "stats": {
    "total": 206,
    "additions": 158,
    "deletions": 48
  },
  "files": [
    {
      "sha": "7277f38a4bb776fae01e6caf700b83e44d870170",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=bcca550b3dc542284715c19655c1885bdf2d3b67",
      "patch": "@@ -9980,6 +9980,8 @@ static const struct aarch64_option_cpu_value_table aarch64_features[] = {\n \t\t\tAARCH64_ARCH_NONE},\n   {\"mops\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_MOPS, 0),\n \t\t\tAARCH64_ARCH_NONE},\n+  {\"hbc\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_HBC, 0),\n+\t\t\tAARCH64_ARCH_NONE},\n   {NULL,\t\tAARCH64_ARCH_NONE, AARCH64_ARCH_NONE},\n };\n "
    },
    {
      "sha": "29bfd49207ffd0895153986aa9a19a6994b237c9",
      "filename": "gas/doc/c-aarch64.texi",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/doc/c-aarch64.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/doc/c-aarch64.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-aarch64.texi?ref=bcca550b3dc542284715c19655c1885bdf2d3b67",
      "patch": "@@ -183,6 +183,8 @@ automatically cause those extensions to be disabled.\n  @tab Enable ARMv8.2 16-bit floating-point support.  This implies @code{fp}.\n @item @code{fp} @tab ARMv8-A @tab ARMv8-A or later\n  @tab Enable floating-point extensions.\n+@item @code{hbc} @tab @tab Armv8.8-A or later\n+ @tab Enable Armv8.8-A hinted conditional branch instructions\n @item @code{i8mm} @tab ARMv8.2-A @tab ARMv8.6-A or later\n  @tab Enable Int8 Matrix Multiply extension.\n @item @code{lor} @tab ARMv8-A @tab ARMv8.1-A or later"
    },
    {
      "sha": "f243de547f66eeb64a6d5122031120635a162db1",
      "filename": "gas/testsuite/gas/aarch64/hbc-invalid.d",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/testsuite/gas/aarch64/hbc-invalid.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/testsuite/gas/aarch64/hbc-invalid.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/hbc-invalid.d?ref=bcca550b3dc542284715c19655c1885bdf2d3b67",
      "patch": "@@ -0,0 +1 @@\n+#error_output: hbc-invalid.l"
    },
    {
      "sha": "aef7a21c1dd2c227f98a8727eafe8847a111718c",
      "filename": "gas/testsuite/gas/aarch64/hbc-invalid.l",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/testsuite/gas/aarch64/hbc-invalid.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/testsuite/gas/aarch64/hbc-invalid.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/hbc-invalid.l?ref=bcca550b3dc542284715c19655c1885bdf2d3b67",
      "patch": "@@ -0,0 +1,3 @@\n+[^:]*: Assembler messages:\n+[^:]*:4: Error: selected processor does not support `bc.eq 1b'\n+[^:]*:8: Error: selected processor does not support `bc.eq 1b'"
    },
    {
      "sha": "bc2208755d96b7be14349945ef133ecb445a8ccc",
      "filename": "gas/testsuite/gas/aarch64/hbc-invalid.s",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/testsuite/gas/aarch64/hbc-invalid.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/testsuite/gas/aarch64/hbc-invalid.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/hbc-invalid.s?ref=bcca550b3dc542284715c19655c1885bdf2d3b67",
      "patch": "@@ -0,0 +1,8 @@\n+\t.arch\tarmv8.7-a\n+\n+1:\n+\tbc.eq\t1b\n+\n+\t.arch\tarmv8.7-a+mops\n+\n+\tbc.eq\t1b"
    },
    {
      "sha": "baf963d4d1f30cbef5f1795c88f1e4e0f8957dc6",
      "filename": "gas/testsuite/gas/aarch64/hbc.d",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/testsuite/gas/aarch64/hbc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/testsuite/gas/aarch64/hbc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/hbc.d?ref=bcca550b3dc542284715c19655c1885bdf2d3b67",
      "patch": "@@ -0,0 +1,37 @@\n+# objdump: -dr\n+\n+.*\n+\n+\n+Disassembly of section \\.text:\n+\n+0+ <\\.text>:\n+[^:]*:\t54000010 \tbc\\.eq\t0 <\\.text>  // bc\\.none\n+[^:]*:\t54fffff1 \tbc\\.ne\t0 <\\.text>  // bc\\.any\n+[^:]*:\t54ffffd9 \tbc\\.ls\t0 <\\.text>  // bc\\.plast\n+[^:]*:\t54ffffb3 \tbc\\.cc\t0 <\\.text>  // bc\\.lo, bc\\.ul, bc\\.last\n+[^:]*:\t54ffff98 \tbc\\.hi\t0 <\\.text>  // bc\\.pmore\n+[^:]*:\t54ffff72 \tbc\\.cs\t0 <\\.text>  // bc\\.hs, bc\\.nlast\n+[^:]*:\t54ffff58 \tbc\\.hi\t0 <\\.text>  // bc\\.pmore\n+[^:]*:\t54ffff3b \tbc\\.lt\t0 <\\.text>  // bc\\.tstop\n+[^:]*:\t54ffff1d \tbc\\.le\t0 <\\.text>\n+[^:]*:\t54fffefc \tbc\\.gt\t0 <\\.text>\n+[^:]*:\t54fffeda \tbc\\.ge\t0 <\\.text>  // bc\\.tcont\n+[^:]*:\t54fffeb3 \tbc\\.cc\t0 <\\.text>  // bc\\.lo, bc\\.ul, bc\\.last\n+[^:]*:\t54fffe92 \tbc\\.cs\t0 <\\.text>  // bc\\.hs, bc\\.nlast\n+[^:]*:\t54fffe76 \tbc\\.vs\t0 <\\.text>\n+[^:]*:\t54fffe57 \tbc\\.vc\t0 <\\.text>\n+[^:]*:\t54fffe34 \tbc\\.mi\t0 <\\.text>  // bc\\.first\n+[^:]*:\t54fffe15 \tbc\\.pl\t0 <\\.text>  // bc\\.nfrst\n+[^:]*:\t54fffdf3 \tbc\\.cc\t0 <\\.text>  // bc\\.lo, bc\\.ul, bc\\.last\n+[^:]*:\t54fffdd1 \tbc\\.ne\t0 <\\.text>  // bc\\.any\n+[^:]*:\t54fffdb0 \tbc\\.eq\t0 <\\.text>  // bc\\.none\n+[^:]*:\t54fffd94 \tbc\\.mi\t0 <\\.text>  // bc\\.first\n+[^:]*:\t54fffd75 \tbc\\.pl\t0 <\\.text>  // bc\\.nfrst\n+[^:]*:\t54fffd53 \tbc\\.cc\t0 <\\.text>  // bc\\.lo, bc\\.ul, bc\\.last\n+[^:]*:\t54fffd32 \tbc\\.cs\t0 <\\.text>  // bc\\.hs, bc\\.nlast\n+[^:]*:\t54fffd18 \tbc\\.hi\t0 <\\.text>  // bc\\.pmore\n+[^:]*:\t54fffcf9 \tbc\\.ls\t0 <\\.text>  // bc\\.plast\n+[^:]*:\t54fffcda \tbc\\.ge\t0 <\\.text>  // bc\\.tcont\n+[^:]*:\t54fffcbb \tbc\\.lt\t0 <\\.text>  // bc\\.tstop\n+[^:]*:\t54fffc90 \tbc\\.eq\t0 <\\.text>  // bc\\.none"
    },
    {
      "sha": "23af6ba8edd662463ae3403e62d94ef838f87fd1",
      "filename": "gas/testsuite/gas/aarch64/hbc.s",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/testsuite/gas/aarch64/hbc.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcca550b3dc542284715c19655c1885bdf2d3b67/gas/testsuite/gas/aarch64/hbc.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/hbc.s?ref=bcca550b3dc542284715c19655c1885bdf2d3b67",
      "patch": "@@ -0,0 +1,37 @@\n+\t.arch\tarmv8.8-a\n+\n+1:\n+\tbc.eq\t1b\n+\tbc.ne\t1b\n+\tbc.ls\t1b\n+\tbc.lo\t1b\n+\tbc.hi\t1b\n+\tbc.hs\t1b\n+\tbc.hi\t1b\n+\tbc.lt\t1b\n+\tbc.le\t1b\n+\tbc.gt\t1b\n+\tbc.ge\t1b\n+\tbc.cc\t1b\n+\tbc.cs\t1b\n+\tbc.vs\t1b\n+\tbc.vc\t1b\n+\tbc.mi\t1b\n+\tbc.pl\t1b\n+\n+\tbc.ul\t1b\n+\n+\tbc.any   1b\n+\tbc.none  1b\n+\tbc.first 1b\n+\tbc.nfrst 1b\n+\tbc.last  1b\n+\tbc.nlast 1b\n+\tbc.pmore 1b\n+\tbc.plast 1b\n+\tbc.tcont 1b\n+\tbc.tstop 1b\n+\n+\t.arch\tarmv8.7-a+hbc\n+\n+\tbc.eq\t1b"
    },
    {
      "sha": "4d4f108f39ae536e7c7b6bc72d83c5927a3aa431",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcca550b3dc542284715c19655c1885bdf2d3b67/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcca550b3dc542284715c19655c1885bdf2d3b67/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=bcca550b3dc542284715c19655c1885bdf2d3b67",
      "patch": "@@ -88,6 +88,7 @@ typedef uint32_t aarch64_insn;\n #define AARCH64_FEATURE_MEMTAG       (1ULL << 48) /* Memory Tagging Extension.  */\n #define AARCH64_FEATURE_TME\t     (1ULL << 49) /* Transactional Memory Extension.  */\n #define AARCH64_FEATURE_MOPS\t     (1ULL << 50) /* Standardization of memory operations.  */\n+#define AARCH64_FEATURE_HBC\t     (1ULL << 51) /* Hinted conditional branches.  */\n #define AARCH64_FEATURE_I8MM\t     (1ULL << 52) /* Matrix Multiply instructions.  */\n #define AARCH64_FEATURE_F32MM\t     (1ULL << 53)\n #define AARCH64_FEATURE_F64MM\t     (1ULL << 54)\n@@ -145,7 +146,8 @@ typedef uint32_t aarch64_insn;\n \t\t\t\t\t\t | AARCH64_FEATURE_LS64)\n #define AARCH64_ARCH_V8_8\tAARCH64_FEATURE (AARCH64_ARCH_V8_7,\t\\\n \t\t\t\t\t\t AARCH64_FEATURE_V8_8\t\\\n-\t\t\t\t\t\t | AARCH64_FEATURE_MOPS)\n+\t\t\t\t\t\t | AARCH64_FEATURE_MOPS\t\\\n+\t\t\t\t\t\t | AARCH64_FEATURE_HBC)\n #define AARCH64_ARCH_V8_R\t(AARCH64_FEATURE (AARCH64_ARCH_V8_4,\t\\\n \t\t\t\t\t\t AARCH64_FEATURE_V8_R)\t\\\n \t\t\t      & ~(AARCH64_FEATURE_V8_A | AARCH64_FEATURE_LOR))"
    },
    {
      "sha": "37a0f8c80f6f7b02347b400c9905ce801b370589",
      "filename": "opcodes/aarch64-dis-2.c",
      "status": "modified",
      "additions": 58,
      "deletions": 47,
      "changes": 105,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcca550b3dc542284715c19655c1885bdf2d3b67/opcodes/aarch64-dis-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcca550b3dc542284715c19655c1885bdf2d3b67/opcodes/aarch64-dis-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis-2.c?ref=bcca550b3dc542284715c19655c1885bdf2d3b67",
      "patch": "@@ -16913,87 +16913,98 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                             }\n                           else\n                             {\n-                              if (((word >> 10) & 0x1) == 0)\n+                              if (((word >> 25) & 0x1) == 0)\n                                 {\n-                                  if (((word >> 21) & 0x1) == 0)\n+                                  /* 33222222222211111111110000000000\n+                                     10987654321098765432109876543210\n+                                     x1010100xxxxxxxxxxxxxxxxxxx1xxxx\n+                                     bc.c.  */\n+                                  return 2631;\n+                                }\n+                              else\n+                                {\n+                                  if (((word >> 10) & 0x1) == 0)\n                                     {\n-                                      if (((word >> 22) & 0x1) == 0)\n+                                      if (((word >> 21) & 0x1) == 0)\n                                         {\n-                                          if (((word >> 23) & 0x1) == 0)\n+                                          if (((word >> 22) & 0x1) == 0)\n                                             {\n-                                              /* 33222222222211111111110000000000\n-                                                 10987654321098765432109876543210\n-                                                 x10101x0000xxxxxxxxxx0xxxxx1xxxx\n-                                                 braaz.  */\n-                                              return 647;\n+                                              if (((word >> 23) & 0x1) == 0)\n+                                                {\n+                                                  /* 33222222222211111111110000000000\n+                                                     10987654321098765432109876543210\n+                                                     x1010110000xxxxxxxxxx0xxxxx1xxxx\n+                                                     braaz.  */\n+                                                  return 647;\n+                                                }\n+                                              else\n+                                                {\n+                                                  /* 33222222222211111111110000000000\n+                                                     10987654321098765432109876543210\n+                                                     x1010110100xxxxxxxxxx0xxxxx1xxxx\n+                                                     eretaa.  */\n+                                                  return 653;\n+                                                }\n                                             }\n                                           else\n                                             {\n                                               /* 33222222222211111111110000000000\n                                                  10987654321098765432109876543210\n-                                                 x10101x0100xxxxxxxxxx0xxxxx1xxxx\n-                                                 eretaa.  */\n-                                              return 653;\n+                                                 x1010110x10xxxxxxxxxx0xxxxx1xxxx\n+                                                 retaa.  */\n+                                              return 651;\n                                             }\n                                         }\n                                       else\n                                         {\n                                           /* 33222222222211111111110000000000\n                                              10987654321098765432109876543210\n-                                             x10101x0x10xxxxxxxxxx0xxxxx1xxxx\n-                                             retaa.  */\n-                                          return 651;\n+                                             x1010110xx1xxxxxxxxxx0xxxxx1xxxx\n+                                             blraaz.  */\n+                                          return 649;\n                                         }\n                                     }\n                                   else\n                                     {\n-                                      /* 33222222222211111111110000000000\n-                                         10987654321098765432109876543210\n-                                         x10101x0xx1xxxxxxxxxx0xxxxx1xxxx\n-                                         blraaz.  */\n-                                      return 649;\n-                                    }\n-                                }\n-                              else\n-                                {\n-                                  if (((word >> 21) & 0x1) == 0)\n-                                    {\n-                                      if (((word >> 22) & 0x1) == 0)\n+                                      if (((word >> 21) & 0x1) == 0)\n                                         {\n-                                          if (((word >> 23) & 0x1) == 0)\n+                                          if (((word >> 22) & 0x1) == 0)\n                                             {\n-                                              /* 33222222222211111111110000000000\n-                                                 10987654321098765432109876543210\n-                                                 x10101x0000xxxxxxxxxx1xxxxx1xxxx\n-                                                 brabz.  */\n-                                              return 648;\n+                                              if (((word >> 23) & 0x1) == 0)\n+                                                {\n+                                                  /* 33222222222211111111110000000000\n+                                                     10987654321098765432109876543210\n+                                                     x1010110000xxxxxxxxxx1xxxxx1xxxx\n+                                                     brabz.  */\n+                                                  return 648;\n+                                                }\n+                                              else\n+                                                {\n+                                                  /* 33222222222211111111110000000000\n+                                                     10987654321098765432109876543210\n+                                                     x1010110100xxxxxxxxxx1xxxxx1xxxx\n+                                                     eretab.  */\n+                                                  return 654;\n+                                                }\n                                             }\n                                           else\n                                             {\n                                               /* 33222222222211111111110000000000\n                                                  10987654321098765432109876543210\n-                                                 x10101x0100xxxxxxxxxx1xxxxx1xxxx\n-                                                 eretab.  */\n-                                              return 654;\n+                                                 x1010110x10xxxxxxxxxx1xxxxx1xxxx\n+                                                 retab.  */\n+                                              return 652;\n                                             }\n                                         }\n                                       else\n                                         {\n                                           /* 33222222222211111111110000000000\n                                              10987654321098765432109876543210\n-                                             x10101x0x10xxxxxxxxxx1xxxxx1xxxx\n-                                             retab.  */\n-                                          return 652;\n+                                             x1010110xx1xxxxxxxxxx1xxxxx1xxxx\n+                                             blrabz.  */\n+                                          return 650;\n                                         }\n                                     }\n-                                  else\n-                                    {\n-                                      /* 33222222222211111111110000000000\n-                                         10987654321098765432109876543210\n-                                         x10101x0xx1xxxxxxxxxx1xxxxx1xxxx\n-                                         blrabz.  */\n-                                      return 650;\n-                                    }\n                                 }\n                             }\n                         }"
    },
    {
      "sha": "08721b13227851fb68f5fc393cce24cb3b26813d",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcca550b3dc542284715c19655c1885bdf2d3b67/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcca550b3dc542284715c19655c1885bdf2d3b67/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=bcca550b3dc542284715c19655c1885bdf2d3b67",
      "patch": "@@ -2497,6 +2497,8 @@ static const aarch64_feature_set aarch64_feature_mops =\n   AARCH64_FEATURE (AARCH64_FEATURE_MOPS, 0);\n static const aarch64_feature_set aarch64_feature_mops_memtag =\n   AARCH64_FEATURE (AARCH64_FEATURE_MOPS | AARCH64_FEATURE_MEMTAG, 0);\n+static const aarch64_feature_set aarch64_feature_hbc =\n+  AARCH64_FEATURE (AARCH64_FEATURE_HBC, 0);\n \n #define CORE\t\t&aarch64_feature_v8\n #define FP\t\t&aarch64_feature_fp\n@@ -2550,6 +2552,7 @@ static const aarch64_feature_set aarch64_feature_mops_memtag =\n #define FLAGM\t  &aarch64_feature_flagm\n #define MOPS\t  &aarch64_feature_mops\n #define MOPS_MEMTAG &aarch64_feature_mops_memtag\n+#define HBC\t  &aarch64_feature_hbc\n \n #define CORE_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, OP, CORE, OPS, QUALS, FLAGS, 0, 0, NULL }\n@@ -2681,6 +2684,8 @@ static const aarch64_feature_set aarch64_feature_mops_memtag =\n #define MOPS_MEMTAG_INSN(NAME, OPCODE, MASK, CLASS, OPS, QUALS, FLAGS, CONSTRAINTS, VERIFIER) \\\n   { NAME, OPCODE, MASK, CLASS, 0, MOPS_MEMTAG, OPS, QUALS, FLAGS, \\\n     CONSTRAINTS, 0, VERIFIER }\n+#define HBC_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n+  { NAME, OPCODE, MASK, CLASS, 0, HBC, OPS, QUALS, FLAGS, 0, 0, NULL }\n \n #define MOPS_CPY_OP1_OP2_PME_INSN(NAME, OPCODE, MASK, FLAGS, CONSTRAINTS) \\\n   MOPS_INSN (NAME, OPCODE, MASK, 0, \\\n@@ -5417,6 +5422,8 @@ const struct aarch64_opcode aarch64_opcode_table[] =\n      setge setget setgen setgetn  */\n   MOPS_SET_INSN (\"setg\", 0x1dc00400, 0xffe0fc00, MOPS_MEMTAG_INSN),\n \n+  HBC_INSN (\"bc.c\", 0x54000010, 0xff000010, condbranch, OP1 (ADDR_PCREL19), QL_PCREL_NIL, F_COND),\n+\n   {0, 0, 0, 0, 0, 0, {}, {}, 0, 0, 0, NULL},\n };\n "
    }
  ]
}