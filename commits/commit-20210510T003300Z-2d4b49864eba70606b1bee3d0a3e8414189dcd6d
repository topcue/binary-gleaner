{
  "sha": "2d4b49864eba70606b1bee3d0a3e8414189dcd6d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmQ0YjQ5ODY0ZWJhNzA2MDZiMWJlZTNkMGEzZTg0MTQxODlkY2Q2ZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-10T00:26:43Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-10T00:33:00Z"
    },
    "message": "Avoid possible pointer wrap\n\nPTR supplied to these macros can be read from user input, END is an\nend of buffer pointer.  It's safer to do arithmetic on END than on PTR.\n\n\t* dwarf.c (SAFE_BYTE_GET): Check bounds by subtracting amount from\n\tEND rather than adding amount to PTR.\n\t(SAFE_SIGNED_BYTE_GET, SAFE_BYTE_GET64): Likewise.",
    "tree": {
      "sha": "f3a8c3cd72a12ea0b3181a388beea89de5ac7448",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f3a8c3cd72a12ea0b3181a388beea89de5ac7448"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2d4b49864eba70606b1bee3d0a3e8414189dcd6d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d4b49864eba70606b1bee3d0a3e8414189dcd6d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2d4b49864eba70606b1bee3d0a3e8414189dcd6d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d4b49864eba70606b1bee3d0a3e8414189dcd6d/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "400f0c9b88c68784f9c516422f293bc4d19d9e5b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/400f0c9b88c68784f9c516422f293bc4d19d9e5b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/400f0c9b88c68784f9c516422f293bc4d19d9e5b"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 9,
    "deletions": 3
  },
  "files": [
    {
      "sha": "ae27252e982fcb48d176715d93462cb4760cc338",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d4b49864eba70606b1bee3d0a3e8414189dcd6d/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d4b49864eba70606b1bee3d0a3e8414189dcd6d/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=2d4b49864eba70606b1bee3d0a3e8414189dcd6d",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf.c (SAFE_BYTE_GET): Check bounds by subtracting amount from\n+\tEND rather than adding amount to PTR.\n+\t(SAFE_SIGNED_BYTE_GET, SAFE_BYTE_GET64): Likewise.\n+\n 2021-05-09  Alan Modra  <amodra@gmail.com>\n \n \t* objcopy.c (eq_string): Delete."
    },
    {
      "sha": "c584f5b2a24f6c09860a45b94655173e05c61eb9",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d4b49864eba70606b1bee3d0a3e8414189dcd6d/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d4b49864eba70606b1bee3d0a3e8414189dcd6d/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=2d4b49864eba70606b1bee3d0a3e8414189dcd6d",
      "patch": "@@ -406,7 +406,7 @@ read_leb128 (unsigned char *data,\n \t\t amount, (int) sizeof (VAL));\t\\\n \t  amount = sizeof (VAL);\t\t\\\n \t}\t\t\t\t\t\\\n-      if (((PTR) + amount) >= (END))\t\t\\\n+      if ((PTR) >= (END) - amount)\t\t\\\n \t{\t\t\t\t\t\\\n \t  if ((PTR) < (END))\t\t\t\\\n \t    amount = (END) - (PTR);\t\t\\\n@@ -434,7 +434,7 @@ read_leb128 (unsigned char *data,\n   do\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n       unsigned int amount = (AMOUNT);\t\t\t\\\n-      if (((PTR) + amount) >= (END))\t\t\t\\\n+      if ((PTR) >= (END) - amount)\t\t\t\\\n \t{\t\t\t\t\t\t\\\n \t  if ((PTR) < (END))\t\t\t\t\\\n \t    amount = (END) - (PTR);\t\t\t\\\n@@ -460,7 +460,7 @@ read_leb128 (unsigned char *data,\n #define SAFE_BYTE_GET64(PTR, HIGH, LOW, END)\t\t\\\n   do\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n-      if (((PTR) + 8) <= (END))\t\t\t\t\\\n+      if ((PTR) <= (END) - 8)\t\t\t\t\\\n \t{\t\t\t\t\t\t\\\n \t  byte_get_64 ((PTR), (HIGH), (LOW));\t\t\\\n \t}\t\t\t\t\t\t\\"
    }
  ]
}