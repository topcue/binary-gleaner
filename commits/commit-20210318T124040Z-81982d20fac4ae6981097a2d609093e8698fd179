{
  "sha": "81982d20fac4ae6981097a2d609093e8698fd179",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODE5ODJkMjBmYWM0YWU2OTgxMDk3YTJkNjA5MDkzZTg2OThmZDE3OQ==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-18T12:37:52Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-18T12:40:40Z"
    },
    "message": "libctf: eliminate dtd_u, part 3: functions\n\nOne more member vanishes from the dtd_u, leaving only the member for\nstruct/union/enum members.\n\nThere's not much to do here, since as of commit afd78bd6f0a30ba5 we use\nthe same representation (type sizes, etc) in the dtu_argv as we will\nuse in the final vlen, with one exception: the vlen has alignment\npadding, and the dtu_argv did not.  Simplify things by adding suitable\npadding in both cases.\n\nlibctf/ChangeLog\n2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-impl.h (ctf_dtdef_t) <dtd_u.dtu_argv>: Remove.\n\t* ctf-create.c (ctf_dtd_delete): No longer free it.\n\t(ctf_add_function): Use the dtd_vlen, not dtu_argv.  Properly align.\n\t* ctf-serialize.c (ctf_emit_type_sect): Just copy the dtd_vlen.\n\t* ctf-types.c (ctf_func_type_info): Just use the vlen.\n\t(ctf_func_type_args): Likewise.",
    "tree": {
      "sha": "62ce36d903e94cac575d47cd5dc2aa172f59f5f5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/62ce36d903e94cac575d47cd5dc2aa172f59f5f5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/81982d20fac4ae6981097a2d609093e8698fd179",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81982d20fac4ae6981097a2d609093e8698fd179",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/81982d20fac4ae6981097a2d609093e8698fd179",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81982d20fac4ae6981097a2d609093e8698fd179/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "534444b1ee161f342d303fd6549310963ce233c9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/534444b1ee161f342d303fd6549310963ce233c9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/534444b1ee161f342d303fd6549310963ce233c9"
    }
  ],
  "stats": {
    "total": 63,
    "additions": 28,
    "deletions": 35
  },
  "files": [
    {
      "sha": "3eff44c146a278090b9446116f6aaeb1d44592ae",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81982d20fac4ae6981097a2d609093e8698fd179/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81982d20fac4ae6981097a2d609093e8698fd179/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=81982d20fac4ae6981097a2d609093e8698fd179",
      "patch": "@@ -1,3 +1,12 @@\n+2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_dtdef_t) <dtd_u.dtu_argv>: Remove.\n+\t* ctf-create.c (ctf_dtd_delete): No longer free it.\n+\t(ctf_add_function): Use the dtd_vlen, not dtu_argv.  Properly align.\n+\t* ctf-serialize.c (ctf_emit_type_sect): Just copy the dtd_vlen.\n+\t* ctf-types.c (ctf_func_type_info): Just use the vlen.\n+\t(ctf_func_type_args): Likewise.\n+\n 2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-impl.h (ctf_dtdef_t) <dtd_u.dtu_arr>: Remove."
    },
    {
      "sha": "6acc2428cd79e475634c75931d734f08e55e4c4e",
      "filename": "libctf/ctf-create.c",
      "status": "modified",
      "additions": 14,
      "deletions": 19,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81982d20fac4ae6981097a2d609093e8698fd179/libctf/ctf-create.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81982d20fac4ae6981097a2d609093e8698fd179/libctf/ctf-create.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-create.c?ref=81982d20fac4ae6981097a2d609093e8698fd179",
      "patch": "@@ -242,9 +242,6 @@ ctf_dtd_delete (ctf_dict_t *fp, ctf_dtdef_t *dtd)\n \t  free (dmd);\n \t}\n       break;\n-    case CTF_K_FUNCTION:\n-      free (dtd->dtd_u.dtu_argv);\n-      break;\n     case CTF_K_FORWARD:\n       name_kind = dtd->dtd_data.ctt_type;\n       break;\n@@ -703,8 +700,9 @@ ctf_add_function (ctf_dict_t *fp, uint32_t flag,\n   ctf_dtdef_t *dtd;\n   ctf_id_t type;\n   uint32_t vlen;\n-  uint32_t *vdat = NULL;\n+  uint32_t *vdat;\n   ctf_dict_t *tmp = fp;\n+  size_t initial_vlen;\n   size_t i;\n \n   if (!(fp->ctf_flags & LCTF_RDWR))\n@@ -720,38 +718,35 @@ ctf_add_function (ctf_dict_t *fp, uint32_t flag,\n \n   if (ctc->ctc_return != 0\n       && ctf_lookup_by_id (&tmp, ctc->ctc_return) == NULL)\n-    return CTF_ERR;\t\t/* errno is set for us.  */\n+    return CTF_ERR;\t\t\t\t/* errno is set for us.  */\n \n   if (vlen > CTF_MAX_VLEN)\n     return (ctf_set_errno (fp, EOVERFLOW));\n \n-  if (vlen != 0 && (vdat = malloc (sizeof (ctf_id_t) * vlen)) == NULL)\n-    return (ctf_set_errno (fp, EAGAIN));\n+  /* One word extra allocated for padding for 4-byte alignment if need be.\n+     Not reflected in vlen: we don't want to copy anything into it, and\n+     it's in addition to (e.g.) the trailing 0 indicating varargs.  */\n+\n+  initial_vlen = (sizeof (uint32_t) * (vlen + (vlen & 1)));\n+  if ((type = ctf_add_generic (fp, flag, NULL, CTF_K_FUNCTION,\n+\t\t\t       initial_vlen, &dtd)) == CTF_ERR)\n+    return CTF_ERR;\t\t\t\t/* errno is set for us.  */\n+\n+  vdat = (uint32_t *) dtd->dtd_vlen;\n \n   for (i = 0; i < ctc->ctc_argc; i++)\n     {\n       tmp = fp;\n       if (argv[i] != 0 && ctf_lookup_by_id (&tmp, argv[i]) == NULL)\n-\t{\n-\t  free (vdat);\n-\t  return CTF_ERR;\t   /* errno is set for us.  */\n-\t}\n+\treturn CTF_ERR;\t\t\t\t/* errno is set for us.  */\n       vdat[i] = (uint32_t) argv[i];\n     }\n \n-  if ((type = ctf_add_generic (fp, flag, NULL, CTF_K_FUNCTION,\n-\t\t\t       0, &dtd)) == CTF_ERR)\n-    {\n-      free (vdat);\n-      return CTF_ERR;\t\t   /* errno is set for us.  */\n-    }\n-\n   dtd->dtd_data.ctt_info = CTF_TYPE_INFO (CTF_K_FUNCTION, flag, vlen);\n   dtd->dtd_data.ctt_type = (uint32_t) ctc->ctc_return;\n \n   if (ctc->ctc_flags & CTF_FUNC_VARARG)\n     vdat[vlen - 1] = 0;\t\t   /* Add trailing zero to indicate varargs.  */\n-  dtd->dtd_u.dtu_argv = vdat;\n \n   return type;\n }"
    },
    {
      "sha": "7a4e418ce2d4ad07aaeb36186a3e7006fa39a92f",
      "filename": "libctf/ctf-impl.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81982d20fac4ae6981097a2d609093e8698fd179/libctf/ctf-impl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81982d20fac4ae6981097a2d609093e8698fd179/libctf/ctf-impl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-impl.h?ref=81982d20fac4ae6981097a2d609093e8698fd179",
      "patch": "@@ -196,7 +196,6 @@ typedef struct ctf_dtdef\n   union\n   {\n     ctf_list_t dtu_members;\t/* struct, union, or enum */\n-    uint32_t *dtu_argv;\t\t/* function */\n   } dtd_u;\n } ctf_dtdef_t;\n "
    },
    {
      "sha": "460ae1a510ed8e2934a05004cec4551a591171ed",
      "filename": "libctf/ctf-serialize.c",
      "status": "modified",
      "additions": 3,
      "deletions": 13,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81982d20fac4ae6981097a2d609093e8698fd179/libctf/ctf-serialize.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81982d20fac4ae6981097a2d609093e8698fd179/libctf/ctf-serialize.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-serialize.c?ref=81982d20fac4ae6981097a2d609093e8698fd179",
      "patch": "@@ -892,19 +892,9 @@ ctf_emit_type_sect (ctf_dict_t *fp, unsigned char **tptr)\n \t  break;\n \n \tcase CTF_K_FUNCTION:\n-\t  {\n-\t    uint32_t *argv = (uint32_t *) (uintptr_t) t;\n-\t    uint32_t argc;\n-\n-\t    for (argc = 0; argc < vlen; argc++)\n-\t      *argv++ = dtd->dtd_u.dtu_argv[argc];\n-\n-\t    if (vlen & 1)\n-\t      *argv++ = 0;\t/* Pad to 4-byte boundary.  */\n-\n-\t    t = (unsigned char *) argv;\n-\t    break;\n-\t  }\n+\t  memcpy (t, dtd->dtd_vlen, sizeof (uint32_t) * (vlen + (vlen & 1)));\n+\t  t += sizeof (uint32_t) * (vlen + (vlen & 1));\n+\t  break;\n \n \tcase CTF_K_STRUCT:\n \tcase CTF_K_UNION:"
    },
    {
      "sha": "1e1ce8ee5290ea3b658b9ca3612d4e005b058905",
      "filename": "libctf/ctf-types.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81982d20fac4ae6981097a2d609093e8698fd179/libctf/ctf-types.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81982d20fac4ae6981097a2d609093e8698fd179/libctf/ctf-types.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-types.c?ref=81982d20fac4ae6981097a2d609093e8698fd179",
      "patch": "@@ -1678,7 +1678,7 @@ ctf_func_type_info (ctf_dict_t *fp, ctf_id_t type, ctf_funcinfo_t *fip)\n   if ((dtd = ctf_dynamic_type (fp, type)) == NULL)\n     args = (uint32_t *) ((uintptr_t) tp + increment);\n   else\n-    args = dtd->dtd_u.dtu_argv;\n+    args = (uint32_t *) dtd->dtd_vlen;\n \n   if (fip->ctc_argc != 0 && args[fip->ctc_argc - 1] == 0)\n     {\n@@ -1715,7 +1715,7 @@ ctf_func_type_args (ctf_dict_t *fp, ctf_id_t type, uint32_t argc, ctf_id_t *argv\n   if ((dtd = ctf_dynamic_type (fp, type)) == NULL)\n     args = (uint32_t *) ((uintptr_t) tp + increment);\n   else\n-    args = dtd->dtd_u.dtu_argv;\n+    args = (uint32_t *) dtd->dtd_vlen;\n \n   for (argc = MIN (argc, f.ctc_argc); argc != 0; argc--)\n     *argv++ = *args++;"
    }
  ]
}