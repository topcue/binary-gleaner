{
  "sha": "f76d800be844dd2aa4aa8f189a3ace16c5e931bc",
  "node_id": "C_kwDOANOeidoAKGY3NmQ4MDBiZTg0NGRkMmFhNGFhOGYxODlhM2FjZTE2YzVlOTMxYmM",
  "commit": {
    "author": {
      "name": "Jan Vrany",
      "email": "jan.vrany@labware.com",
      "date": "2020-06-23T13:45:38Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2021-12-14T10:56:30Z"
    },
    "message": "gdb/mi: use std::map for MI commands in mi-cmds.c\n\nThis changes the hashmap used in mi-cmds.c from a custom structure to\nstd::map.  Not only is replacing a custom container with a standard\none an improvement, but using std::map will make it easier to\ndynamically add commands; which is something that is planned for a\nlater series, where we will allow MI commands to be implemented in\nPython.\n\nThere should be no user visible changes after this commit.",
    "tree": {
      "sha": "4d57013d217a8cac2a84641735848821cb0fc420",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4d57013d217a8cac2a84641735848821cb0fc420"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f76d800be844dd2aa4aa8f189a3ace16c5e931bc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f76d800be844dd2aa4aa8f189a3ace16c5e931bc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f76d800be844dd2aa4aa8f189a3ace16c5e931bc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f76d800be844dd2aa4aa8f189a3ace16c5e931bc/comments",
  "author": {
    "login": "janvrany",
    "id": 82951,
    "node_id": "MDQ6VXNlcjgyOTUx",
    "avatar_url": "https://avatars.githubusercontent.com/u/82951?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/janvrany",
    "html_url": "https://github.com/janvrany",
    "followers_url": "https://api.github.com/users/janvrany/followers",
    "following_url": "https://api.github.com/users/janvrany/following{/other_user}",
    "gists_url": "https://api.github.com/users/janvrany/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/janvrany/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/janvrany/subscriptions",
    "organizations_url": "https://api.github.com/users/janvrany/orgs",
    "repos_url": "https://api.github.com/users/janvrany/repos",
    "events_url": "https://api.github.com/users/janvrany/events{/privacy}",
    "received_events_url": "https://api.github.com/users/janvrany/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": null,
  "parents": [
    {
      "sha": "3524a83e5950576a807134dde6c180211219e655",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3524a83e5950576a807134dde6c180211219e655",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3524a83e5950576a807134dde6c180211219e655"
    }
  ],
  "stats": {
    "total": 478,
    "additions": 230,
    "deletions": 248
  },
  "files": [
    {
      "sha": "e0eba0bfa67fec552f29694ca8d6363fbadf3aa5",
      "filename": "gdb/mi/mi-cmds.c",
      "status": "modified",
      "additions": 230,
      "deletions": 248,
      "changes": 478,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f76d800be844dd2aa4aa8f189a3ace16c5e931bc/gdb/mi/mi-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f76d800be844dd2aa4aa8f189a3ace16c5e931bc/gdb/mi/mi-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmds.c?ref=f76d800be844dd2aa4aa8f189a3ace16c5e931bc",
      "patch": "@@ -22,283 +22,265 @@\n #include \"top.h\"\n #include \"mi-cmds.h\"\n #include \"mi-main.h\"\n+#include <map>\n+#include <string>\n \n-struct mi_cmd;\n-static struct mi_cmd **lookup_table (const char *command);\n-static void build_table (struct mi_cmd *commands);\n+/* A command held in the MI_CMD_TABLE.  */\n \n-static struct mi_cmd mi_cmds[] =\n-{\n-/* Define a MI command of NAME, and its corresponding CLI command is\n-   CLI_NAME.  */\n-#define DEF_MI_CMD_CLI_1(NAME, CLI_NAME, ARGS_P, CALLED)\t\\\n-  { NAME, { CLI_NAME, ARGS_P}, NULL, CALLED }\n-#define DEF_MI_CMD_CLI(NAME, CLI_NAME, ARGS_P) \\\n-  DEF_MI_CMD_CLI_1(NAME, CLI_NAME, ARGS_P, NULL)\n+using mi_cmd_up = std::unique_ptr<struct mi_cmd>;\n \n-/* Define a MI command of NAME, and implemented by function MI_FUNC.  */\n-#define DEF_MI_CMD_MI_1(NAME, MI_FUNC, CALLED) \\\n-  { NAME, {NULL, 0}, MI_FUNC, CALLED }\n-#define DEF_MI_CMD_MI(NAME, MI_FUNC) DEF_MI_CMD_MI_1(NAME, MI_FUNC, NULL)\n+/* MI command table (built at run time). */\n \n-  DEF_MI_CMD_MI (\"ada-task-info\", mi_cmd_ada_task_info),\n-  DEF_MI_CMD_MI (\"add-inferior\", mi_cmd_add_inferior),\n-  DEF_MI_CMD_CLI_1 (\"break-after\", \"ignore\", 1,\n-\t\t    &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI_1 (\"break-condition\", mi_cmd_break_condition,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI_1 (\"break-commands\", mi_cmd_break_commands,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_CLI_1 (\"break-delete\", \"delete breakpoint\", 1,\n-\t\t    &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_CLI_1 (\"break-disable\", \"disable breakpoint\", 1,\n-\t\t    &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_CLI_1 (\"break-enable\", \"enable breakpoint\", 1,\n-\t\t     &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_CLI (\"break-info\", \"info break\", 1),\n-  DEF_MI_CMD_MI_1 (\"break-insert\", mi_cmd_break_insert,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI_1 (\"dprintf-insert\", mi_cmd_dprintf_insert,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_CLI (\"break-list\", \"info break\", 0),\n-  DEF_MI_CMD_MI_1 (\"break-passcount\", mi_cmd_break_passcount,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI_1 (\"break-watch\", mi_cmd_break_watch,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI_1 (\"catch-assert\", mi_cmd_catch_assert,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI_1 (\"catch-exception\", mi_cmd_catch_exception,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI_1 (\"catch-handlers\", mi_cmd_catch_handlers,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI_1 (\"catch-load\", mi_cmd_catch_load,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI_1 (\"catch-unload\", mi_cmd_catch_unload,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI_1 (\"catch-throw\", mi_cmd_catch_throw,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI_1 (\"catch-rethrow\", mi_cmd_catch_rethrow,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI_1 (\"catch-catch\", mi_cmd_catch_catch,\n-\t\t   &mi_suppress_notification.breakpoint),\n-  DEF_MI_CMD_MI (\"complete\", mi_cmd_complete),\n-  DEF_MI_CMD_MI (\"data-disassemble\", mi_cmd_disassemble),\n-  DEF_MI_CMD_MI (\"data-evaluate-expression\", mi_cmd_data_evaluate_expression),\n-  DEF_MI_CMD_MI (\"data-list-changed-registers\",\n-\t\t mi_cmd_data_list_changed_registers),\n-  DEF_MI_CMD_MI (\"data-list-register-names\", mi_cmd_data_list_register_names),\n-  DEF_MI_CMD_MI (\"data-list-register-values\", mi_cmd_data_list_register_values),\n-  DEF_MI_CMD_MI (\"data-read-memory\", mi_cmd_data_read_memory),\n-  DEF_MI_CMD_MI (\"data-read-memory-bytes\", mi_cmd_data_read_memory_bytes),\n-  DEF_MI_CMD_MI_1 (\"data-write-memory\", mi_cmd_data_write_memory,\n-\t\t   &mi_suppress_notification.memory),\n-  DEF_MI_CMD_MI_1 (\"data-write-memory-bytes\", mi_cmd_data_write_memory_bytes,\n-\t\t   &mi_suppress_notification.memory),\n-  DEF_MI_CMD_MI (\"data-write-register-values\",\n-\t\t mi_cmd_data_write_register_values),\n-  DEF_MI_CMD_MI (\"enable-timings\", mi_cmd_enable_timings),\n-  DEF_MI_CMD_MI (\"enable-pretty-printing\", mi_cmd_enable_pretty_printing),\n-  DEF_MI_CMD_MI (\"enable-frame-filters\", mi_cmd_enable_frame_filters),\n-  DEF_MI_CMD_MI (\"environment-cd\", mi_cmd_env_cd),\n-  DEF_MI_CMD_MI (\"environment-directory\", mi_cmd_env_dir),\n-  DEF_MI_CMD_MI (\"environment-path\", mi_cmd_env_path),\n-  DEF_MI_CMD_MI (\"environment-pwd\", mi_cmd_env_pwd),\n-  DEF_MI_CMD_CLI_1 (\"exec-arguments\", \"set args\", 1,\n-\t\t    &mi_suppress_notification.cmd_param_changed),\n-  DEF_MI_CMD_MI (\"exec-continue\", mi_cmd_exec_continue),\n-  DEF_MI_CMD_MI (\"exec-finish\", mi_cmd_exec_finish),\n-  DEF_MI_CMD_MI (\"exec-jump\", mi_cmd_exec_jump),\n-  DEF_MI_CMD_MI (\"exec-interrupt\", mi_cmd_exec_interrupt),\n-  DEF_MI_CMD_MI (\"exec-next\", mi_cmd_exec_next),\n-  DEF_MI_CMD_MI (\"exec-next-instruction\", mi_cmd_exec_next_instruction),\n-  DEF_MI_CMD_MI (\"exec-return\", mi_cmd_exec_return),\n-  DEF_MI_CMD_MI (\"exec-run\", mi_cmd_exec_run),\n-  DEF_MI_CMD_MI (\"exec-step\", mi_cmd_exec_step),\n-  DEF_MI_CMD_MI (\"exec-step-instruction\", mi_cmd_exec_step_instruction),\n-  DEF_MI_CMD_CLI (\"exec-until\", \"until\", 1),\n-  DEF_MI_CMD_CLI (\"file-exec-and-symbols\", \"file\", 1),\n-  DEF_MI_CMD_CLI (\"file-exec-file\", \"exec-file\", 1),\n-  DEF_MI_CMD_MI (\"file-list-exec-source-file\",\n-\t\t mi_cmd_file_list_exec_source_file),\n-  DEF_MI_CMD_MI (\"file-list-exec-source-files\",\n-\t\t mi_cmd_file_list_exec_source_files),\n-  DEF_MI_CMD_MI (\"file-list-shared-libraries\",\n-\t\t mi_cmd_file_list_shared_libraries),\n-  DEF_MI_CMD_CLI (\"file-symbol-file\", \"symbol-file\", 1),\n-  DEF_MI_CMD_MI (\"fix-multi-location-breakpoint-output\",\n-\t\t mi_cmd_fix_multi_location_breakpoint_output),\n-  DEF_MI_CMD_MI (\"gdb-exit\", mi_cmd_gdb_exit),\n-  DEF_MI_CMD_CLI_1 (\"gdb-set\", \"set\", 1,\n-\t\t    &mi_suppress_notification.cmd_param_changed),\n-  DEF_MI_CMD_CLI (\"gdb-show\", \"show\", 1),\n-  DEF_MI_CMD_CLI (\"gdb-version\", \"show version\", 0),\n-  DEF_MI_CMD_MI (\"inferior-tty-set\", mi_cmd_inferior_tty_set),\n-  DEF_MI_CMD_MI (\"inferior-tty-show\", mi_cmd_inferior_tty_show),\n-  DEF_MI_CMD_MI (\"info-ada-exceptions\", mi_cmd_info_ada_exceptions),\n-  DEF_MI_CMD_MI (\"info-gdb-mi-command\", mi_cmd_info_gdb_mi_command),\n-  DEF_MI_CMD_MI (\"info-os\", mi_cmd_info_os),\n-  DEF_MI_CMD_MI (\"interpreter-exec\", mi_cmd_interpreter_exec),\n-  DEF_MI_CMD_MI (\"list-features\", mi_cmd_list_features),\n-  DEF_MI_CMD_MI (\"list-target-features\", mi_cmd_list_target_features),\n-  DEF_MI_CMD_MI (\"list-thread-groups\", mi_cmd_list_thread_groups),\n-  DEF_MI_CMD_MI (\"remove-inferior\", mi_cmd_remove_inferior),\n-  DEF_MI_CMD_MI (\"stack-info-depth\", mi_cmd_stack_info_depth),\n-  DEF_MI_CMD_MI (\"stack-info-frame\", mi_cmd_stack_info_frame),\n-  DEF_MI_CMD_MI (\"stack-list-arguments\", mi_cmd_stack_list_args),\n-  DEF_MI_CMD_MI (\"stack-list-frames\", mi_cmd_stack_list_frames),\n-  DEF_MI_CMD_MI (\"stack-list-locals\", mi_cmd_stack_list_locals),\n-  DEF_MI_CMD_MI (\"stack-list-variables\", mi_cmd_stack_list_variables),\n-  DEF_MI_CMD_MI_1 (\"stack-select-frame\", mi_cmd_stack_select_frame,\n-\t\t   &mi_suppress_notification.user_selected_context),\n-  DEF_MI_CMD_MI (\"symbol-list-lines\", mi_cmd_symbol_list_lines),\n-  DEF_MI_CMD_MI (\"symbol-info-functions\", mi_cmd_symbol_info_functions),\n-  DEF_MI_CMD_MI (\"symbol-info-variables\", mi_cmd_symbol_info_variables),\n-  DEF_MI_CMD_MI (\"symbol-info-types\", mi_cmd_symbol_info_types),\n-  DEF_MI_CMD_MI (\"symbol-info-modules\", mi_cmd_symbol_info_modules),\n-  DEF_MI_CMD_MI (\"symbol-info-module-functions\",\n-\t\t mi_cmd_symbol_info_module_functions),\n-  DEF_MI_CMD_MI (\"symbol-info-module-variables\",\n-\t\t mi_cmd_symbol_info_module_variables),\n-  DEF_MI_CMD_CLI (\"target-attach\", \"attach\", 1),\n-  DEF_MI_CMD_MI (\"target-detach\", mi_cmd_target_detach),\n-  DEF_MI_CMD_CLI (\"target-disconnect\", \"disconnect\", 0),\n-  DEF_MI_CMD_CLI (\"target-download\", \"load\", 1),\n-  DEF_MI_CMD_MI (\"target-file-delete\", mi_cmd_target_file_delete),\n-  DEF_MI_CMD_MI (\"target-file-get\", mi_cmd_target_file_get),\n-  DEF_MI_CMD_MI (\"target-file-put\", mi_cmd_target_file_put),\n-  DEF_MI_CMD_MI (\"target-flash-erase\", mi_cmd_target_flash_erase),\n-  DEF_MI_CMD_CLI (\"target-select\", \"target\", 1),\n-  DEF_MI_CMD_MI (\"thread-info\", mi_cmd_thread_info),\n-  DEF_MI_CMD_MI (\"thread-list-ids\", mi_cmd_thread_list_ids),\n-  DEF_MI_CMD_MI_1 (\"thread-select\", mi_cmd_thread_select,\n-\t\t   &mi_suppress_notification.user_selected_context),\n-  DEF_MI_CMD_MI (\"trace-define-variable\", mi_cmd_trace_define_variable),\n-  DEF_MI_CMD_MI_1 (\"trace-find\", mi_cmd_trace_find,\n-\t\t   &mi_suppress_notification.traceframe),\n-  DEF_MI_CMD_MI (\"trace-frame-collected\",\n-\t\t mi_cmd_trace_frame_collected),\n-  DEF_MI_CMD_MI (\"trace-list-variables\", mi_cmd_trace_list_variables),\n-  DEF_MI_CMD_MI (\"trace-save\", mi_cmd_trace_save),\n-  DEF_MI_CMD_MI (\"trace-start\", mi_cmd_trace_start),\n-  DEF_MI_CMD_MI (\"trace-status\", mi_cmd_trace_status),\n-  DEF_MI_CMD_MI (\"trace-stop\", mi_cmd_trace_stop),\n-  DEF_MI_CMD_MI (\"var-assign\", mi_cmd_var_assign),\n-  DEF_MI_CMD_MI (\"var-create\", mi_cmd_var_create),\n-  DEF_MI_CMD_MI (\"var-delete\", mi_cmd_var_delete),\n-  DEF_MI_CMD_MI (\"var-evaluate-expression\", mi_cmd_var_evaluate_expression),\n-  DEF_MI_CMD_MI (\"var-info-path-expression\", mi_cmd_var_info_path_expression),\n-  DEF_MI_CMD_MI (\"var-info-expression\", mi_cmd_var_info_expression),\n-  DEF_MI_CMD_MI (\"var-info-num-children\", mi_cmd_var_info_num_children),\n-  DEF_MI_CMD_MI (\"var-info-type\", mi_cmd_var_info_type),\n-  DEF_MI_CMD_MI (\"var-list-children\", mi_cmd_var_list_children),\n-  DEF_MI_CMD_MI (\"var-set-format\", mi_cmd_var_set_format),\n-  DEF_MI_CMD_MI (\"var-set-frozen\", mi_cmd_var_set_frozen),\n-  DEF_MI_CMD_MI (\"var-set-update-range\", mi_cmd_var_set_update_range),\n-  DEF_MI_CMD_MI (\"var-set-visualizer\", mi_cmd_var_set_visualizer),\n-  DEF_MI_CMD_MI (\"var-show-attributes\", mi_cmd_var_show_attributes),\n-  DEF_MI_CMD_MI (\"var-show-format\", mi_cmd_var_show_format),\n-  DEF_MI_CMD_MI (\"var-update\", mi_cmd_var_update),\n-  { NULL, }\n-};\n+static std::map<std::string, mi_cmd_up> mi_cmd_table;\n \n-/* Pointer to the mi command table (built at run time). */\n+/* Insert COMMAND into the global mi_cmd_table.  Return false if\n+   COMMAND->name already exists in mi_cmd_table, in which case COMMAND will\n+   not have been added to mi_cmd_table.  Otherwise, return true, and\n+   COMMAND was added to mi_cmd_table.  */\n \n-static struct mi_cmd **mi_table;\n+static bool\n+insert_mi_cmd_entry (mi_cmd_up command)\n+{\n+  gdb_assert (command != nullptr);\n+  gdb_assert (command->name != nullptr);\n \n-/* A prime large enough to accomodate the entire command table.  */\n-enum\n-  {\n-    MI_TABLE_SIZE = 227\n-  };\n+  std::string name (command->name);\n \n-/* See mi-cmds.h.  */\n+  if (mi_cmd_table.find (name) != mi_cmd_table.end ())\n+    return false;\n \n-struct mi_cmd *\n-mi_cmd_lookup (const char *command)\n+  mi_cmd_table[name] = std::move (command);\n+  return true;\n+}\n+\n+/* Create an mi_cmd structure with name NAME.  */\n+\n+static mi_cmd_up\n+create_mi_cmd (const char *name)\n {\n-  return *lookup_table (command);\n+  mi_cmd_up cmd (new mi_cmd ());\n+  cmd->name = name;\n+  return cmd;\n }\n \n-/* Used for collecting hash hit/miss statistics.  */\n+/* Create and register a new MI command with an MI specific implementation.\n+   NAME must name an MI command that does not already exist, otherwise an\n+   assertion will trigger.  */\n \n-static struct\n+static void\n+add_mi_cmd_mi (const char *name, mi_cmd_argv_ftype function,\n+\t       int *suppress_notification = nullptr)\n {\n-  int hit;\n-  int miss;\n-  int rehash;\n-} stats;\n+  mi_cmd_up cmd_up = create_mi_cmd (name);\n+\n+  cmd_up->cli.cmd = nullptr;\n+  cmd_up->cli.args_p = 0;\n+  cmd_up->argv_func = function;\n+  cmd_up->suppress_notification = suppress_notification;\n \n-/* Look up a command.  */\n+  bool success = insert_mi_cmd_entry (std::move (cmd_up));\n+  gdb_assert (success);\n+}\n+\n+/* Create and register a new MI command implemented on top of a CLI\n+   command.  NAME must name an MI command that does not already exist,\n+   otherwise an assertion will trigger.  */\n \n-static struct mi_cmd **\n-lookup_table (const char *command)\n+static void\n+add_mi_cmd_cli (const char *name, const char *cli_name, int args_p,\n+\t\tint *suppress_notification = nullptr)\n {\n-  const char *chp;\n-  unsigned int index = 0;\n+  mi_cmd_up cmd_up = create_mi_cmd (name);\n \n-  /* Compute our hash.  */\n-  for (chp = command; *chp; chp++)\n-    {\n-      /* We use a somewhat arbitrary formula.  */\n-      index = ((index << 6) + (unsigned int) *chp) % MI_TABLE_SIZE;\n-    }\n+  cmd_up->cli.cmd = cli_name;\n+  cmd_up->cli.args_p = args_p;\n+  cmd_up->argv_func = nullptr;\n+  cmd_up->suppress_notification = suppress_notification;\n \n-  while (1)\n-    {\n-      struct mi_cmd **entry = &mi_table[index];\n-      if ((*entry) == 0)\n-\t{\n-\t  /* not found, return pointer to next free. */\n-\t  stats.miss++;\n-\t  return entry;\n-\t}\n-      if (strcmp (command, (*entry)->name) == 0)\n-\t{\n-\t  stats.hit++;\n-\t  return entry;\t\t/* found */\n-\t}\n-      index = (index + 1) % MI_TABLE_SIZE;\n-      stats.rehash++;\n-    }\n+  bool success = insert_mi_cmd_entry (std::move (cmd_up));\n+  gdb_assert (success);\n }\n \n+/* Initialize MI_CMD_TABLE, the global map of MI commands.  */\n+\n static void\n-build_table (struct mi_cmd *commands)\n+build_table ()\n {\n-  int nr_rehash = 0;\n-  int nr_entries = 0;\n-  struct mi_cmd *command;\n+  add_mi_cmd_mi (\"ada-task-info\", mi_cmd_ada_task_info);\n+  add_mi_cmd_mi (\"add-inferior\", mi_cmd_add_inferior);\n+  add_mi_cmd_cli (\"break-after\", \"ignore\", 1,\n+\t\t  &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_mi (\"break-condition\",mi_cmd_break_condition,\n+\t\t  &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_mi (\"break-commands\", mi_cmd_break_commands,\n+\t\t &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_cli (\"break-delete\", \"delete breakpoint\", 1,\n+\t\t  &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_cli (\"break-disable\", \"disable breakpoint\", 1,\n+\t\t  &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_cli (\"break-enable\", \"enable breakpoint\", 1,\n+\t\t  &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_cli (\"break-info\", \"info break\", 1);\n+  add_mi_cmd_mi (\"break-insert\", mi_cmd_break_insert,\n+\t\t &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_mi (\"dprintf-insert\", mi_cmd_dprintf_insert,\n+\t\t &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_cli (\"break-list\", \"info break\", 0);\n+  add_mi_cmd_mi (\"break-passcount\", mi_cmd_break_passcount,\n+\t\t &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_mi (\"break-watch\", mi_cmd_break_watch,\n+\t\t &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_mi (\"catch-assert\", mi_cmd_catch_assert,\n+\t\t &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_mi (\"catch-exception\", mi_cmd_catch_exception,\n+\t\t &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_mi (\"catch-handlers\", mi_cmd_catch_handlers,\n+\t\t &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_mi (\"catch-load\", mi_cmd_catch_load,\n+\t\t &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_mi (\"catch-unload\", mi_cmd_catch_unload,\n+\t\t &mi_suppress_notification.breakpoint);\n+  add_mi_cmd_mi (\"catch-throw\", mi_cmd_catch_throw,\n+                 &mi_suppress_notification.breakpoint),\n+  add_mi_cmd_mi (\"catch-rethrow\", mi_cmd_catch_rethrow,\n+                 &mi_suppress_notification.breakpoint),\n+  add_mi_cmd_mi (\"catch-catch\", mi_cmd_catch_catch,\n+                 &mi_suppress_notification.breakpoint),\n+  add_mi_cmd_mi (\"complete\", mi_cmd_complete);\n+  add_mi_cmd_mi (\"data-disassemble\", mi_cmd_disassemble);\n+  add_mi_cmd_mi (\"data-evaluate-expression\", mi_cmd_data_evaluate_expression);\n+  add_mi_cmd_mi (\"data-list-changed-registers\",\n+\t\t mi_cmd_data_list_changed_registers);\n+  add_mi_cmd_mi (\"data-list-register-names\", mi_cmd_data_list_register_names);\n+  add_mi_cmd_mi (\"data-list-register-values\",\n+\t\t mi_cmd_data_list_register_values);\n+  add_mi_cmd_mi (\"data-read-memory\", mi_cmd_data_read_memory);\n+  add_mi_cmd_mi (\"data-read-memory-bytes\", mi_cmd_data_read_memory_bytes);\n+  add_mi_cmd_mi (\"data-write-memory\", mi_cmd_data_write_memory,\n+\t\t &mi_suppress_notification.memory);\n+  add_mi_cmd_mi (\"data-write-memory-bytes\", mi_cmd_data_write_memory_bytes,\n+\t\t &mi_suppress_notification.memory);\n+  add_mi_cmd_mi (\"data-write-register-values\",\n+\t\t mi_cmd_data_write_register_values);\n+  add_mi_cmd_mi (\"enable-timings\", mi_cmd_enable_timings);\n+  add_mi_cmd_mi (\"enable-pretty-printing\", mi_cmd_enable_pretty_printing);\n+  add_mi_cmd_mi (\"enable-frame-filters\", mi_cmd_enable_frame_filters);\n+  add_mi_cmd_mi (\"environment-cd\", mi_cmd_env_cd);\n+  add_mi_cmd_mi (\"environment-directory\", mi_cmd_env_dir);\n+  add_mi_cmd_mi (\"environment-path\", mi_cmd_env_path);\n+  add_mi_cmd_mi (\"environment-pwd\", mi_cmd_env_pwd);\n+  add_mi_cmd_cli (\"exec-arguments\", \"set args\", 1,\n+\t\t  &mi_suppress_notification.cmd_param_changed);\n+  add_mi_cmd_mi (\"exec-continue\", mi_cmd_exec_continue);\n+  add_mi_cmd_mi (\"exec-finish\", mi_cmd_exec_finish);\n+  add_mi_cmd_mi (\"exec-jump\", mi_cmd_exec_jump);\n+  add_mi_cmd_mi (\"exec-interrupt\", mi_cmd_exec_interrupt);\n+  add_mi_cmd_mi (\"exec-next\", mi_cmd_exec_next);\n+  add_mi_cmd_mi (\"exec-next-instruction\", mi_cmd_exec_next_instruction);\n+  add_mi_cmd_mi (\"exec-return\", mi_cmd_exec_return);\n+  add_mi_cmd_mi (\"exec-run\", mi_cmd_exec_run);\n+  add_mi_cmd_mi (\"exec-step\", mi_cmd_exec_step);\n+  add_mi_cmd_mi (\"exec-step-instruction\", mi_cmd_exec_step_instruction);\n+  add_mi_cmd_cli (\"exec-until\", \"until\", 1);\n+  add_mi_cmd_cli (\"file-exec-and-symbols\", \"file\", 1);\n+  add_mi_cmd_cli (\"file-exec-file\", \"exec-file\", 1);\n+  add_mi_cmd_mi (\"file-list-exec-source-file\",\n+\t\t mi_cmd_file_list_exec_source_file);\n+  add_mi_cmd_mi (\"file-list-exec-source-files\",\n+\t\t mi_cmd_file_list_exec_source_files);\n+  add_mi_cmd_mi (\"file-list-shared-libraries\",\n+     mi_cmd_file_list_shared_libraries),\n+  add_mi_cmd_cli (\"file-symbol-file\", \"symbol-file\", 1);\n+  add_mi_cmd_mi (\"fix-multi-location-breakpoint-output\",\n+\t\t mi_cmd_fix_multi_location_breakpoint_output),\n+  add_mi_cmd_mi (\"gdb-exit\", mi_cmd_gdb_exit);\n+  add_mi_cmd_cli (\"gdb-set\", \"set\", 1,\n+\t\t  &mi_suppress_notification.cmd_param_changed);\n+  add_mi_cmd_cli (\"gdb-show\", \"show\", 1);\n+  add_mi_cmd_cli (\"gdb-version\", \"show version\", 0);\n+  add_mi_cmd_mi (\"inferior-tty-set\", mi_cmd_inferior_tty_set);\n+  add_mi_cmd_mi (\"inferior-tty-show\", mi_cmd_inferior_tty_show);\n+  add_mi_cmd_mi (\"info-ada-exceptions\", mi_cmd_info_ada_exceptions);\n+  add_mi_cmd_mi (\"info-gdb-mi-command\", mi_cmd_info_gdb_mi_command);\n+  add_mi_cmd_mi (\"info-os\", mi_cmd_info_os);\n+  add_mi_cmd_mi (\"interpreter-exec\", mi_cmd_interpreter_exec);\n+  add_mi_cmd_mi (\"list-features\", mi_cmd_list_features);\n+  add_mi_cmd_mi (\"list-target-features\", mi_cmd_list_target_features);\n+  add_mi_cmd_mi (\"list-thread-groups\", mi_cmd_list_thread_groups);\n+  add_mi_cmd_mi (\"remove-inferior\", mi_cmd_remove_inferior);\n+  add_mi_cmd_mi (\"stack-info-depth\", mi_cmd_stack_info_depth);\n+  add_mi_cmd_mi (\"stack-info-frame\", mi_cmd_stack_info_frame);\n+  add_mi_cmd_mi (\"stack-list-arguments\", mi_cmd_stack_list_args);\n+  add_mi_cmd_mi (\"stack-list-frames\", mi_cmd_stack_list_frames);\n+  add_mi_cmd_mi (\"stack-list-locals\", mi_cmd_stack_list_locals);\n+  add_mi_cmd_mi (\"stack-list-variables\", mi_cmd_stack_list_variables);\n+  add_mi_cmd_mi (\"stack-select-frame\", mi_cmd_stack_select_frame,\n+\t\t &mi_suppress_notification.user_selected_context);\n+  add_mi_cmd_mi (\"symbol-list-lines\", mi_cmd_symbol_list_lines);\n+  add_mi_cmd_mi (\"symbol-info-functions\", mi_cmd_symbol_info_functions);\n+  add_mi_cmd_mi (\"symbol-info-variables\", mi_cmd_symbol_info_variables);\n+  add_mi_cmd_mi (\"symbol-info-types\", mi_cmd_symbol_info_types);\n+  add_mi_cmd_mi (\"symbol-info-modules\", mi_cmd_symbol_info_modules);\n+  add_mi_cmd_mi (\"symbol-info-module-functions\",\n+                 mi_cmd_symbol_info_module_functions);\n+  add_mi_cmd_mi (\"symbol-info-module-variables\",\n+                 mi_cmd_symbol_info_module_variables);\n+  add_mi_cmd_cli (\"target-attach\", \"attach\", 1);\n+  add_mi_cmd_mi (\"target-detach\", mi_cmd_target_detach);\n+  add_mi_cmd_cli (\"target-disconnect\", \"disconnect\", 0);\n+  add_mi_cmd_cli (\"target-download\", \"load\", 1);\n+  add_mi_cmd_mi (\"target-file-delete\", mi_cmd_target_file_delete);\n+  add_mi_cmd_mi (\"target-file-get\", mi_cmd_target_file_get);\n+  add_mi_cmd_mi (\"target-file-put\", mi_cmd_target_file_put);\n+  add_mi_cmd_mi (\"target-flash-erase\", mi_cmd_target_flash_erase);\n+  add_mi_cmd_cli (\"target-select\", \"target\", 1);\n+  add_mi_cmd_mi (\"thread-info\", mi_cmd_thread_info);\n+  add_mi_cmd_mi (\"thread-list-ids\", mi_cmd_thread_list_ids);\n+  add_mi_cmd_mi (\"thread-select\", mi_cmd_thread_select,\n+\t\t &mi_suppress_notification.user_selected_context);\n+  add_mi_cmd_mi (\"trace-define-variable\", mi_cmd_trace_define_variable);\n+  add_mi_cmd_mi (\"trace-find\", mi_cmd_trace_find,\n+\t\t &mi_suppress_notification.traceframe);\n+  add_mi_cmd_mi (\"trace-frame-collected\", mi_cmd_trace_frame_collected);\n+  add_mi_cmd_mi (\"trace-list-variables\", mi_cmd_trace_list_variables);\n+  add_mi_cmd_mi (\"trace-save\", mi_cmd_trace_save);\n+  add_mi_cmd_mi (\"trace-start\", mi_cmd_trace_start);\n+  add_mi_cmd_mi (\"trace-status\", mi_cmd_trace_status);\n+  add_mi_cmd_mi (\"trace-stop\", mi_cmd_trace_stop);\n+  add_mi_cmd_mi (\"var-assign\", mi_cmd_var_assign);\n+  add_mi_cmd_mi (\"var-create\", mi_cmd_var_create);\n+  add_mi_cmd_mi (\"var-delete\", mi_cmd_var_delete);\n+  add_mi_cmd_mi (\"var-evaluate-expression\", mi_cmd_var_evaluate_expression);\n+  add_mi_cmd_mi (\"var-info-path-expression\", mi_cmd_var_info_path_expression);\n+  add_mi_cmd_mi (\"var-info-expression\", mi_cmd_var_info_expression);\n+  add_mi_cmd_mi (\"var-info-num-children\", mi_cmd_var_info_num_children);\n+  add_mi_cmd_mi (\"var-info-type\", mi_cmd_var_info_type);\n+  add_mi_cmd_mi (\"var-list-children\", mi_cmd_var_list_children);\n+  add_mi_cmd_mi (\"var-set-format\", mi_cmd_var_set_format);\n+  add_mi_cmd_mi (\"var-set-frozen\", mi_cmd_var_set_frozen);\n+  add_mi_cmd_mi (\"var-set-update-range\", mi_cmd_var_set_update_range);\n+  add_mi_cmd_mi (\"var-set-visualizer\", mi_cmd_var_set_visualizer);\n+  add_mi_cmd_mi (\"var-show-attributes\", mi_cmd_var_show_attributes);\n+  add_mi_cmd_mi (\"var-show-format\", mi_cmd_var_show_format);\n+  add_mi_cmd_mi (\"var-update\", mi_cmd_var_update);\n+}\n \n-  mi_table = XCNEWVEC (struct mi_cmd *, MI_TABLE_SIZE);\n-  for (command = commands; command->name != 0; command++)\n-    {\n-      struct mi_cmd **entry = lookup_table (command->name);\n+/* See mi-cmds.h.  */\n+\n+struct mi_cmd *\n+mi_cmd_lookup (const char *command)\n+{\n+  gdb_assert (command != nullptr);\n \n-      if (*entry)\n-\tinternal_error (__FILE__, __LINE__,\n-\t\t\t_(\"command `%s' appears to be duplicated\"),\n-\t\t\tcommand->name);\n-      *entry = command;\n-      /* FIXME lose these prints */\n-      if (0)\n-\t{\n-\t  fprintf_unfiltered (gdb_stdlog, \"%-30s %2d\\n\",\n-\t\t\t      command->name, stats.rehash - nr_rehash);\n-\t}\n-      nr_entries++;\n-      nr_rehash = stats.rehash;\n-    }\n-  if (0)\n-    {\n-      fprintf_filtered (gdb_stdlog, \"Average %3.1f\\n\",\n-\t\t\t(double) nr_rehash / (double) nr_entries);\n-    }\n+  auto it = mi_cmd_table.find (command);\n+  if (it == mi_cmd_table.end ())\n+    return nullptr;\n+  return it->second.get ();\n }\n \n void _initialize_mi_cmds ();\n void\n _initialize_mi_cmds ()\n {\n-  build_table (mi_cmds);\n-  memset (&stats, 0, sizeof (stats));\n+  build_table ();\n }"
    }
  ]
}