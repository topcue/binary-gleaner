{
  "sha": "1db66fb653995e45fa55d44bddf25bdf55efb46a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWRiNjZmYjY1Mzk5NWU0NWZhNTVkNDRiZGRmMjViZGY1NWVmYjQ2YQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-06-10T10:40:11Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-06-10T10:40:11Z"
    },
    "message": "arm: avoid \"shadowing\" of glibc function name\n\nOld enough glibc has an (unguarded) declaration of index() in string.h,\nwhich triggers a \"shadows a global declaration\" warning.",
    "tree": {
      "sha": "3dcb5f0d732578debad0b8cea0fbe5ddbc43fe24",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3dcb5f0d732578debad0b8cea0fbe5ddbc43fe24"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1db66fb653995e45fa55d44bddf25bdf55efb46a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1db66fb653995e45fa55d44bddf25bdf55efb46a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1db66fb653995e45fa55d44bddf25bdf55efb46a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1db66fb653995e45fa55d44bddf25bdf55efb46a/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e925962f4e5767a1d1d43fd3876564912ba807e1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e925962f4e5767a1d1d43fd3876564912ba807e1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e925962f4e5767a1d1d43fd3876564912ba807e1"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 24,
    "deletions": 16
  },
  "files": [
    {
      "sha": "8ffba29fe7618d06e5818272c241c08564b0fa1f",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1db66fb653995e45fa55d44bddf25bdf55efb46a/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1db66fb653995e45fa55d44bddf25bdf55efb46a/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=1db66fb653995e45fa55d44bddf25bdf55efb46a",
      "patch": "@@ -1,3 +1,11 @@\n+2021-06-10  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-arm.c (do_bfloat_vfma): Rename index to idx.\n+\t(do_vusdot): Likewise.\n+\t(do_vsudot): Likewise.\n+\t(check_cde_operand): Likewise.\n+\t(do_vdot): Likewise.\n+\n 2021-06-10  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-arm.c (reg_expected_msgs): Add REG_TYPE_ZR entry."
    },
    {
      "sha": "fa023b4461eb5240dad2078a7c54e551afb84c9e",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 16,
      "deletions": 16,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1db66fb653995e45fa55d44bddf25bdf55efb46a/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1db66fb653995e45fa55d44bddf25bdf55efb46a/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=1db66fb653995e45fa55d44bddf25bdf55efb46a",
      "patch": "@@ -17937,14 +17937,14 @@ do_bfloat_vfma (void)\n       neon_check_type (3, rs, N_EQK, N_EQK, N_BF16 | N_KEY);\n \n       inst.instruction |= (1 << 25);\n-      int index = inst.operands[2].reg & 0xf;\n-      constraint (!(index < 4), _(\"index must be in the range 0 to 3\"));\n+      int idx = inst.operands[2].reg & 0xf;\n+      constraint (!(idx < 4), _(\"index must be in the range 0 to 3\"));\n       inst.operands[2].reg >>= 4;\n       constraint (!(inst.operands[2].reg < 8),\n \t\t  _(\"indexed register must be less than 8\"));\n       neon_three_args (t_bit);\n-      inst.instruction |= ((index & 1) << 3);\n-      inst.instruction |= ((index & 2) << 4);\n+      inst.instruction |= ((idx & 1) << 3);\n+      inst.instruction |= ((idx & 2) << 4);\n     }\n   else\n     {\n@@ -21579,13 +21579,13 @@ do_vusdot (void)\n       neon_check_type (3, rs, N_EQK, N_EQK, N_S8 | N_KEY);\n \n       inst.instruction |= (1 << 25);\n-      int index = inst.operands[2].reg & 0xf;\n-      constraint ((index != 1 && index != 0), _(\"index must be 0 or 1\"));\n+      int idx = inst.operands[2].reg & 0xf;\n+      constraint ((idx != 1 && idx != 0), _(\"index must be 0 or 1\"));\n       inst.operands[2].reg >>= 4;\n       constraint (!(inst.operands[2].reg < 16),\n \t\t  _(\"indexed register must be less than 16\"));\n       neon_three_args (rs == NS_QQS);\n-      inst.instruction |= (index << 5);\n+      inst.instruction |= (idx << 5);\n     }\n   else\n     {\n@@ -21607,13 +21607,13 @@ do_vsudot (void)\n       neon_check_type (3, rs, N_EQK, N_EQK, N_U8 | N_KEY);\n \n       inst.instruction |= (1 << 25);\n-      int index = inst.operands[2].reg & 0xf;\n-      constraint ((index != 1 && index != 0), _(\"index must be 0 or 1\"));\n+      int idx = inst.operands[2].reg & 0xf;\n+      constraint ((idx != 1 && idx != 0), _(\"index must be 0 or 1\"));\n       inst.operands[2].reg >>= 4;\n       constraint (!(inst.operands[2].reg < 16),\n \t\t  _(\"indexed register must be less than 16\"));\n       neon_three_args (rs == NS_QQS);\n-      inst.instruction |= (index << 5);\n+      inst.instruction |= (idx << 5);\n     }\n }\n \n@@ -21642,10 +21642,10 @@ do_vummla (void)\n }\n \n static void\n-check_cde_operand (size_t index, int is_dual)\n+check_cde_operand (size_t idx, int is_dual)\n {\n-  unsigned Rx = inst.operands[index].reg;\n-  bool isvec = inst.operands[index].isvec;\n+  unsigned Rx = inst.operands[idx].reg;\n+  bool isvec = inst.operands[idx].isvec;\n   if (is_dual == 0 && thumb_mode)\n     constraint (\n \t\t!((Rx <= 14 && Rx != 13) || (Rx == REG_PC && isvec)),\n@@ -22289,13 +22289,13 @@ do_vdot (void)\n       neon_check_type (3, rs, N_EQK, N_EQK, N_BF16 | N_KEY);\n \n       inst.instruction |= (1 << 25);\n-      int index = inst.operands[2].reg & 0xf;\n-      constraint ((index != 1 && index != 0), _(\"index must be 0 or 1\"));\n+      int idx = inst.operands[2].reg & 0xf;\n+      constraint ((idx != 1 && idx != 0), _(\"index must be 0 or 1\"));\n       inst.operands[2].reg >>= 4;\n       constraint (!(inst.operands[2].reg < 16),\n \t\t  _(\"indexed register must be less than 16\"));\n       neon_three_args (rs == NS_QQS);\n-      inst.instruction |= (index << 5);\n+      inst.instruction |= (idx << 5);\n     }\n   else\n     {"
    }
  ]
}