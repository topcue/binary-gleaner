{
  "sha": "e1f57067b162cba9f39e087726c7a2f2cfaae96f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTFmNTcwNjdiMTYyY2JhOWYzOWUwODc3MjZjN2EyZjJjZmFhZTk2Zg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-10-27T15:31:53Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-11-02T09:07:05Z"
    },
    "message": "gdb/riscv: read frame base register as unsigned in the unwinder\n\nI noticed an issue with the RISC-V prologue scanning stack unwinder.\nWe currently read the frame base register (either $sp or $fp) as a\nsigned value.  This means that the frame_id's stack_addr field will be\na signed value.\n\nIn other contexts though these registers are data pointers, and so are\nunsigned.\n\nThere's not many places where this mismatch actually shows though, but\nI did find one place.  Consider this GDB session:\n\n  (gdb) maintenance set dwarf unwinders off\n  (gdb) set backtrace past-main on\n  ...\n  (gdb) b main\n  Breakpoint 1 at 0x20400344: file main.c, line 86.\n  (gdb) run\n  ...\n  (gdb) bt\n  #0  main () at main.c:86\n  #1  0x2040005c in _start () at start.S:59\n  Backtrace stopped: frame did not save the PC\n  (gdb) info frame 1\n  Stack frame at 0x80000a1c:\n   pc = 0x2040005c in _start (start.S:59); saved pc = <not saved>\n   Outermost frame: frame did not save the PC\n   caller of frame at 0x80000a1c\n   source language asm.\n   Arglist at 0x80000a1c, args:\n   Locals at 0x80000a1c, Previous frame's sp is 0x80000a1c\n  (gdb) frame address 0x80000a1c\n  No frame at address 0x80000a1c.\n  (gdb) frame address 0xffffffff80000a1c\n  #1  0x2040005c in _start () at start.S:59\n  59              call main\n\nNotice that the 'info frame 1' reports that the frame is at\n'0x80000a1c', this is the unsigned frame base value, but when I try\nto select a frame using this address I can't.\n\nThe reason is that the frame_id for frame #1 actually has the\nunsigned (and hence sign-extended) stack_addr value.  When I use the\nsign extended address I can correctly select the frame.\n\nI propose changing the prologue scanning unwinder to read the frame\nbase as unsigned.  After this in the above case I can now do this:\n\n  (gdb) frame address 0x80000a1c\n  #1  0x2040005c in _start () at start.S:59\n  59              call main\n  (gdb) frame address 0xffffffff80000a1c\n  No frame at address 0xffffffff80000a1c.\n\nWhich I think makes more sense.\n\nThis issue causes failures in gdb.base/frame-selection.exp if you\ncompile for RV32 with a linker script that places the stack in the\ncorrect location, which are resolved by this patch.\n\ngdb/ChangeLog:\n\n\t* riscv-tdep.c (riscv_frame_cache): Read the frame base register\n\tas an unsigned value.",
    "tree": {
      "sha": "713c49148ef348592b6b7999c64b318567e5db58",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/713c49148ef348592b6b7999c64b318567e5db58"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e1f57067b162cba9f39e087726c7a2f2cfaae96f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e1f57067b162cba9f39e087726c7a2f2cfaae96f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e1f57067b162cba9f39e087726c7a2f2cfaae96f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e1f57067b162cba9f39e087726c7a2f2cfaae96f/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8807d3127cb4b9199a3d5a16aa2851cc28e9826c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8807d3127cb4b9199a3d5a16aa2851cc28e9826c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8807d3127cb4b9199a3d5a16aa2851cc28e9826c"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 7,
    "deletions": 1
  },
  "files": [
    {
      "sha": "98715c905149813ad7b51bff33e0cb20ffb58c2a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1f57067b162cba9f39e087726c7a2f2cfaae96f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1f57067b162cba9f39e087726c7a2f2cfaae96f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e1f57067b162cba9f39e087726c7a2f2cfaae96f",
      "patch": "@@ -1,3 +1,9 @@\n+2020-11-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\t    Craig Blackmore   <craig.blackmore@embecosm.com>\n+\n+\t* riscv-tdep.c (riscv_frame_cache): Read the frame base register\n+\tas an unsigned value.\n+\n 2020-11-01  Tom Tromey  <tom@tromey.com>\n \n \t* dbxread.c (dbx_end_psymtab): Update."
    },
    {
      "sha": "e18f953eb131668b7d6f205a3d013169dceaa967",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1f57067b162cba9f39e087726c7a2f2cfaae96f/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1f57067b162cba9f39e087726c7a2f2cfaae96f/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=e1f57067b162cba9f39e087726c7a2f2cfaae96f",
      "patch": "@@ -2942,7 +2942,7 @@ riscv_frame_cache (struct frame_info *this_frame, void **this_cache)\n \n   /* We can now calculate the frame base address.  */\n   cache->frame_base\n-    = (get_frame_register_signed (this_frame, cache->frame_base_reg)\n+    = (get_frame_register_unsigned (this_frame, cache->frame_base_reg)\n        + cache->frame_base_offset);\n   if (riscv_debug_unwinder)\n     fprintf_unfiltered (gdb_stdlog, \"Frame base is %s ($%s + 0x%x)\\n\","
    }
  ]
}