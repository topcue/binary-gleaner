{
  "sha": "c1bd443b4d86e12f2a97856270e40df24c7f3df7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzFiZDQ0M2I0ZDg2ZTEyZjJhOTc4NTYyNzBlNDBkZjI0YzdmM2RmNw==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2020-06-15T16:52:27Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-03-24T17:52:08Z"
    },
    "message": "AArch64: Add target description/feature for MTE registers\n\nThis patch adds a target description and feature \"mte\" for aarch64.\n\nIt includes one new register, tag_ctl, that can be used to configure the\ntag generation rules and sync/async modes.  It is 64-bit in size.\n\nThe patch also adjusts the code that creates the target descriptions at\nruntime based on CPU feature checks.\n\ngdb/ChangeLog:\n\n2021-03-24  Luis Machado  <luis.machado@linaro.org>\n\n\t* aarch64-linux-nat.c\n\t(aarch64_linux_nat_target::read_description): Take MTE flag into\n\taccount.\n\tSlight refactor to hwcap flag checking.\n\t* aarch64-linux-tdep.c\n\t(aarch64_linux_core_read_description): Likewise.\n\t* aarch64-tdep.c (tdesc_aarch64_list): Add one more dimension for\n\tMTE.\n\t(aarch64_read_description): Add mte_p parameter and update to use it.\n\tUpdate the documentation.\n\t(aarch64_gdbarch_init): Update call to aarch64_read_description.\n\t* aarch64-tdep.h (aarch64_read_description): Add mte_p parameter.\n\t* arch/aarch64.c: Include ../features/aarch64-mte.c.\n\t(aarch64_create_target_description): Add mte_p parameter and update\n\tthe code to use it.\n\t* arch/aarch64.h (aarch64_create_target_description): Add mte_p\n\tparameter.\n\t* features/Makefile (FEATURE_XMLFILES): Add aarch64-mte.xml.\n\t* features/aarch64-mte.c: New file, generated.\n\t* features/aarch64-mte.xml: New file.\n\ngdbserver/ChangeLog:\n\n2021-03-24  Luis Machado  <luis.machado@linaro.org>\n\n\t* linux-aarch64-ipa.cc (get_ipa_tdesc): Update call to\n\taarch64_linux_read_description.\n\t(initialize_low_tracepoint): Likewise.\n\t* linux-aarch64-low.cc (aarch64_target::low_arch_setup): Take MTE flag\n\tinto account.\n\t* linux-aarch64-tdesc.cc (tdesc_aarch64_list): Add one more dimension\n\tfor MTE.\n\t(aarch64_linux_read_description): Add mte_p parameter and update to\n\tuse it.\n\t* linux-aarch64-tdesc.h (aarch64_linux_read_description): Add mte_p\n\tparameter.",
    "tree": {
      "sha": "9aae2ce3110607d8710532a75ff12c529f1cd78d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9aae2ce3110607d8710532a75ff12c529f1cd78d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c1bd443b4d86e12f2a97856270e40df24c7f3df7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c1bd443b4d86e12f2a97856270e40df24c7f3df7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c1bd443b4d86e12f2a97856270e40df24c7f3df7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c1bd443b4d86e12f2a97856270e40df24c7f3df7/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0424512519142571509c67e83cd9dc2ed51d2dec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0424512519142571509c67e83cd9dc2ed51d2dec",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0424512519142571509c67e83cd9dc2ed51d2dec"
    }
  ],
  "stats": {
    "total": 135,
    "additions": 110,
    "deletions": 25
  },
  "files": [
    {
      "sha": "33a58cb06d9e400805b66579afeddaa0bc2b39ea",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -1,3 +1,26 @@\n+2021-03-24  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* aarch64-linux-nat.c\n+\t(aarch64_linux_nat_target::read_description): Take MTE flag into\n+\taccount.\n+\tSlight refactor to hwcap flag checking.\n+\t* aarch64-linux-tdep.c\n+\t(aarch64_linux_core_read_description): Likewise.\n+\t* aarch64-tdep.c (tdesc_aarch64_list): Add one more dimension for\n+\tMTE.\n+\t(aarch64_read_description): Add mte_p parameter and update to use it.\n+\tUpdate the documentation.\n+\t(aarch64_gdbarch_init): Update call to aarch64_read_description.\n+\t* aarch64-tdep.h (aarch64_read_description): Add mte_p parameter.\n+\t* arch/aarch64.c: Include ../features/aarch64-mte.c.\n+\t(aarch64_create_target_description): Add mte_p parameter and update\n+\tthe code to use it.\n+\t* arch/aarch64.h (aarch64_create_target_description): Add mte_p\n+\tparameter.\n+\t* features/Makefile (FEATURE_XMLFILES): Add aarch64-mte.xml.\n+\t* features/aarch64-mte.c: New file, generated.\n+\t* features/aarch64-mte.xml: New file.\n+\n 2021-03-24  Luis Machado  <luis.machado@linaro.org>\n \n \t* Makefile.in (HFILES_NO_SRCDIR): Add arch/aarch64-mte-linux.h."
    },
    {
      "sha": "c56880e33d707a3df847628a91fe9994d73b7b2e",
      "filename": "gdb/aarch64-linux-nat.c",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/aarch64-linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/aarch64-linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-nat.c?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -653,9 +653,12 @@ aarch64_linux_nat_target::read_description ()\n     return aarch32_read_description ();\n \n   CORE_ADDR hwcap = linux_get_hwcap (this);\n+  CORE_ADDR hwcap2 = linux_get_hwcap2 (this);\n \n-  return aarch64_read_description (aarch64_sve_get_vq (tid),\n-\t\t\t\t   hwcap & AARCH64_HWCAP_PACA);\n+  bool pauth_p = hwcap & AARCH64_HWCAP_PACA;\n+  bool mte_p = hwcap2 & HWCAP2_MTE;\n+\n+  return aarch64_read_description (aarch64_sve_get_vq (tid), pauth_p, mte_p);\n }\n \n /* Convert a native/host siginfo object, into/from the siginfo in the"
    },
    {
      "sha": "1c45770a287169e9ed817ebac604e9d0cdb54bba",
      "filename": "gdb/aarch64-linux-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/aarch64-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/aarch64-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-tdep.c?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -731,9 +731,12 @@ aarch64_linux_core_read_description (struct gdbarch *gdbarch,\n \t\t\t\t     struct target_ops *target, bfd *abfd)\n {\n   CORE_ADDR hwcap = linux_get_hwcap (target);\n+  CORE_ADDR hwcap2 = linux_get_hwcap2 (target);\n \n+  bool pauth_p = hwcap & AARCH64_HWCAP_PACA;\n+  bool mte_p = hwcap2 & HWCAP2_MTE;\n   return aarch64_read_description (aarch64_linux_core_read_vq (gdbarch, abfd),\n-\t\t\t\t   hwcap & AARCH64_HWCAP_PACA);\n+\t\t\t\t   pauth_p, mte_p);\n }\n \n /* Implementation of `gdbarch_stap_is_single_operand', as defined in"
    },
    {
      "sha": "685c50b84dabb27a537d482e3125635789eb8578",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -58,7 +58,7 @@\n #define HA_MAX_NUM_FLDS\t\t4\n \n /* All possible aarch64 target descriptors.  */\n-static target_desc *tdesc_aarch64_list[AARCH64_MAX_SVE_VQ + 1][2/*pauth*/];\n+static target_desc *tdesc_aarch64_list[AARCH64_MAX_SVE_VQ + 1][2/*pauth*/][2 /* mte */];\n \n /* The standard register names, and all the valid aliases for them.  */\n static const struct\n@@ -3260,21 +3260,23 @@ aarch64_displaced_step_hw_singlestep (struct gdbarch *gdbarch)\n \n /* Get the correct target description for the given VQ value.\n    If VQ is zero then it is assumed SVE is not supported.\n-   (It is not possible to set VQ to zero on an SVE system).  */\n+   (It is not possible to set VQ to zero on an SVE system).\n+\n+   MTE_P indicates the presence of the Memory Tagging Extension feature. */\n \n const target_desc *\n-aarch64_read_description (uint64_t vq, bool pauth_p)\n+aarch64_read_description (uint64_t vq, bool pauth_p, bool mte_p)\n {\n   if (vq > AARCH64_MAX_SVE_VQ)\n     error (_(\"VQ is %\" PRIu64 \", maximum supported value is %d\"), vq,\n \t   AARCH64_MAX_SVE_VQ);\n \n-  struct target_desc *tdesc = tdesc_aarch64_list[vq][pauth_p];\n+  struct target_desc *tdesc = tdesc_aarch64_list[vq][pauth_p][mte_p];\n \n   if (tdesc == NULL)\n     {\n-      tdesc = aarch64_create_target_description (vq, pauth_p);\n-      tdesc_aarch64_list[vq][pauth_p] = tdesc;\n+      tdesc = aarch64_create_target_description (vq, pauth_p, mte_p);\n+      tdesc_aarch64_list[vq][pauth_p][mte_p] = tdesc;\n     }\n \n   return tdesc;\n@@ -3374,7 +3376,7 @@ aarch64_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n      value.  */\n   const struct target_desc *tdesc = info.target_desc;\n   if (!tdesc_has_registers (tdesc) || vq != aarch64_get_tdesc_vq (tdesc))\n-    tdesc = aarch64_read_description (vq, false);\n+    tdesc = aarch64_read_description (vq, false, false);\n   gdb_assert (tdesc);\n \n   feature_core = tdesc_find_feature (tdesc,\"org.gnu.gdb.aarch64.core\");"
    },
    {
      "sha": "f6d24292f845f6c5a134fe3aa3c3ed9a2864087d",
      "filename": "gdb/aarch64-tdep.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/aarch64-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/aarch64-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.h?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -102,7 +102,8 @@ struct gdbarch_tdep\n   }\n };\n \n-const target_desc *aarch64_read_description (uint64_t vq, bool pauth_p);\n+const target_desc *aarch64_read_description (uint64_t vq, bool pauth_p,\n+\t\t\t\t\t     bool mte_p);\n \n extern int aarch64_process_record (struct gdbarch *gdbarch,\n \t\t\t       struct regcache *regcache, CORE_ADDR addr);"
    },
    {
      "sha": "c38f8312c9033b2b14de9c725ff4070d77166d1b",
      "filename": "gdb/arch/aarch64.c",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/arch/aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/arch/aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch/aarch64.c?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -23,11 +23,12 @@\n #include \"../features/aarch64-fpu.c\"\n #include \"../features/aarch64-sve.c\"\n #include \"../features/aarch64-pauth.c\"\n+#include \"../features/aarch64-mte.c\"\n \n /* See arch/aarch64.h.  */\n \n target_desc *\n-aarch64_create_target_description (uint64_t vq, bool pauth_p)\n+aarch64_create_target_description (uint64_t vq, bool pauth_p, bool mte_p)\n {\n   target_desc_up tdesc = allocate_target_description ();\n \n@@ -47,5 +48,9 @@ aarch64_create_target_description (uint64_t vq, bool pauth_p)\n   if (pauth_p)\n     regnum = create_feature_aarch64_pauth (tdesc.get (), regnum);\n \n+  /* Memory tagging extension registers.  */\n+  if (mte_p)\n+    regnum = create_feature_aarch64_mte (tdesc.get (), regnum);\n+\n   return tdesc.release ();\n }"
    },
    {
      "sha": "0eb702c5b5eff3ed960871b7d1751840e187a34b",
      "filename": "gdb/arch/aarch64.h",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/arch/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/arch/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch/aarch64.h?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -25,9 +25,12 @@\n /* Create the aarch64 target description.  A non zero VQ value indicates both\n    the presence of SVE and the Vector Quotient - the number of 128bit chunks in\n    an SVE Z register.  HAS_PAUTH_P indicates the presence of the PAUTH\n-   feature.  */\n+   feature.\n \n-target_desc *aarch64_create_target_description (uint64_t vq, bool has_pauth_p);\n+   MTE_P indicates the presence of the Memory Tagging Extension feature.  */\n+\n+target_desc *aarch64_create_target_description (uint64_t vq, bool has_pauth_p,\n+\t\t\t\t\t\tbool mte_p);\n \n /* Register numbers of various important registers.\n    Note that on SVE, the Z registers reuse the V register numbers and the V"
    },
    {
      "sha": "522ad58aab0fd93786140f9bb25d496bca2d0d88",
      "filename": "gdb/features/Makefile",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/features/Makefile",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/features/Makefile",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/Makefile?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -202,6 +202,7 @@ $(outdir)/%.dat: %.xml number-regs.xsl sort-regs.xsl gdbserver-regs.xsl\n FEATURE_XMLFILES = aarch64-core.xml \\\n \taarch64-fpu.xml \\\n \taarch64-pauth.xml \\\n+\taarch64-mte.xml \\\n \tarc/v1-core.xml \\\n \tarc/v1-aux.xml \\\n \tarc/v2-core.xml \\"
    },
    {
      "sha": "883b19cd1526bf6ea7dbbd6802cea844df930351",
      "filename": "gdb/features/aarch64-mte.c",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/features/aarch64-mte.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/features/aarch64-mte.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/aarch64-mte.c?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -0,0 +1,14 @@\n+/* THIS FILE IS GENERATED.  -*- buffer-read-only: t -*- vi:set ro:\n+  Original: aarch64-mte.xml */\n+\n+#include \"gdbsupport/tdesc.h\"\n+\n+static int\n+create_feature_aarch64_mte (struct target_desc *result, long regnum)\n+{\n+  struct tdesc_feature *feature;\n+\n+  feature = tdesc_create_feature (result, \"org.gnu.gdb.aarch64.mte\");\n+  tdesc_create_reg (feature, \"tag_ctl\", regnum++, 0, \"system\", 64, \"uint64\");\n+  return regnum;\n+}"
    },
    {
      "sha": "da6c7bfd2f6350784a5c9e460e009a168b45b440",
      "filename": "gdb/features/aarch64-mte.xml",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/features/aarch64-mte.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdb/features/aarch64-mte.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/aarch64-mte.xml?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\"?>\n+<!-- Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+     Copying and distribution of this file, with or without modification,\n+     are permitted in any medium without royalty provided the copyright\n+     notice and this notice are preserved.  -->\n+\n+<!DOCTYPE feature SYSTEM \"gdb-target.dtd\">\n+<feature name=\"org.gnu.gdb.aarch64.mte\">\n+  <reg name=\"tag_ctl\" bitsize=\"64\" type=\"uint64\" group=\"system\" save-restore=\"no\"/>\n+</feature>"
    },
    {
      "sha": "db906600b2874fb64ba8966b6d678932d44c16eb",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -1,3 +1,17 @@\n+2021-03-24  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* linux-aarch64-ipa.cc (get_ipa_tdesc): Update call to\n+\taarch64_linux_read_description.\n+\t(initialize_low_tracepoint): Likewise.\n+\t* linux-aarch64-low.cc (aarch64_target::low_arch_setup): Take MTE flag\n+\tinto account.\n+\t* linux-aarch64-tdesc.cc (tdesc_aarch64_list): Add one more dimension\n+\tfor MTE.\n+\t(aarch64_linux_read_description): Add mte_p parameter and update to\n+\tuse it.\n+\t* linux-aarch64-tdesc.h (aarch64_linux_read_description): Add mte_p\n+\tparameter.\n+\n 2021-03-24  Luis Machado  <luis.machado@linaro.org>\n \n \t* linux-aarch64-low.cc: Include arch/aarch64-mte-linux.h."
    },
    {
      "sha": "ebf017ed1146e596cd91cbca378dba96dbcf469e",
      "filename": "gdbserver/linux-aarch64-ipa.cc",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdbserver/linux-aarch64-ipa.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdbserver/linux-aarch64-ipa.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-ipa.cc?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -147,12 +147,12 @@ get_raw_reg (const unsigned char *raw_regs, int regnum)\n \n /* Return target_desc to use for IPA, given the tdesc index passed by\n    gdbserver.  Index is ignored, since we have only one tdesc\n-   at the moment.  SVE and pauth not yet supported.  */\n+   at the moment.  SVE, pauth and MTE not yet supported.  */\n \n const struct target_desc *\n get_ipa_tdesc (int idx)\n {\n-  return aarch64_linux_read_description (0, false);\n+  return aarch64_linux_read_description (0, false, false);\n }\n \n /* Allocate buffer for the jump pads.  The branch instruction has a reach\n@@ -204,6 +204,6 @@ alloc_jump_pad_buffer (size_t size)\n void\n initialize_low_tracepoint (void)\n {\n-  /* SVE and pauth not yet supported.  */\n-  aarch64_linux_read_description (0, false);\n+  /* SVE, pauth and MTE not yet supported.  */\n+  aarch64_linux_read_description (0, false, false);\n }"
    },
    {
      "sha": "14493c1fbe72d47062461cac0eff3e6a86a24e86",
      "filename": "gdbserver/linux-aarch64-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdbserver/linux-aarch64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdbserver/linux-aarch64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-low.cc?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -664,9 +664,13 @@ aarch64_target::low_arch_setup ()\n     {\n       uint64_t vq = aarch64_sve_get_vq (tid);\n       unsigned long hwcap = linux_get_hwcap (8);\n+      unsigned long hwcap2 = linux_get_hwcap2 (8);\n       bool pauth_p = hwcap & AARCH64_HWCAP_PACA;\n+      /* MTE is AArch64-only.  */\n+      bool mte_p = hwcap2 & HWCAP2_MTE;\n \n-      current_process ()->tdesc = aarch64_linux_read_description (vq, pauth_p);\n+      current_process ()->tdesc\n+\t= aarch64_linux_read_description (vq, pauth_p, mte_p);\n     }\n   else\n     current_process ()->tdesc = aarch32_linux_read_description ();"
    },
    {
      "sha": "ee005b8ea18fd2f59af1a321bae35bf2076793d7",
      "filename": "gdbserver/linux-aarch64-tdesc.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdbserver/linux-aarch64-tdesc.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdbserver/linux-aarch64-tdesc.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-tdesc.cc?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -27,22 +27,22 @@\n #include <inttypes.h>\n \n /* All possible aarch64 target descriptors.  */\n-struct target_desc *tdesc_aarch64_list[AARCH64_MAX_SVE_VQ + 1][2/*pauth*/];\n+struct target_desc *tdesc_aarch64_list[AARCH64_MAX_SVE_VQ + 1][2/*pauth*/][2 /* mte */];\n \n /* Create the aarch64 target description.  */\n \n const target_desc *\n-aarch64_linux_read_description (uint64_t vq, bool pauth_p)\n+aarch64_linux_read_description (uint64_t vq, bool pauth_p, bool mte_p)\n {\n   if (vq > AARCH64_MAX_SVE_VQ)\n     error (_(\"VQ is %\" PRIu64 \", maximum supported value is %d\"), vq,\n \t   AARCH64_MAX_SVE_VQ);\n \n-  struct target_desc *tdesc = tdesc_aarch64_list[vq][pauth_p];\n+  struct target_desc *tdesc = tdesc_aarch64_list[vq][pauth_p][mte_p];\n \n   if (tdesc == NULL)\n     {\n-      tdesc = aarch64_create_target_description (vq, pauth_p);\n+      tdesc = aarch64_create_target_description (vq, pauth_p, mte_p);\n \n       static const char *expedite_regs_aarch64[] = { \"x29\", \"sp\", \"pc\", NULL };\n       static const char *expedite_regs_aarch64_sve[] = { \"x29\", \"sp\", \"pc\",\n@@ -53,7 +53,7 @@ aarch64_linux_read_description (uint64_t vq, bool pauth_p)\n       else\n \tinit_target_desc (tdesc, expedite_regs_aarch64_sve);\n \n-      tdesc_aarch64_list[vq][pauth_p] = tdesc;\n+      tdesc_aarch64_list[vq][pauth_p][mte_p] = tdesc;\n     }\n \n   return tdesc;"
    },
    {
      "sha": "8319ca7d68b3d1f70abd257bc10c24e9a760e6c4",
      "filename": "gdbserver/linux-aarch64-tdesc.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdbserver/linux-aarch64-tdesc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1bd443b4d86e12f2a97856270e40df24c7f3df7/gdbserver/linux-aarch64-tdesc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-tdesc.h?ref=c1bd443b4d86e12f2a97856270e40df24c7f3df7",
      "patch": "@@ -20,6 +20,7 @@\n #ifndef GDBSERVER_LINUX_AARCH64_TDESC_H\n #define GDBSERVER_LINUX_AARCH64_TDESC_H\n \n-const target_desc * aarch64_linux_read_description (uint64_t vq, bool pauth_p);\n+const target_desc * aarch64_linux_read_description (uint64_t vq, bool pauth_p,\n+\t\t\t\t\t\t    bool mte_p);\n \n #endif /* GDBSERVER_LINUX_AARCH64_TDESC_H */"
    }
  ]
}