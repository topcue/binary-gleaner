{
  "sha": "a8d136756b9882f90311af7205a00c0d97fea64d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YThkMTM2NzU2Yjk4ODJmOTAzMTFhZjcyMDVhMDBjMGQ5N2ZlYTY0ZA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-12-04T12:36:48Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-12-04T12:36:48Z"
    },
    "message": "[gdb/testsuite] Fix control-flow in gdb.reverse/insn-reverse.exp\n\nIn gdb.reverse/insn-reverse.exp, we have loop containing a call to\ngdb_test_multiple, which itself contains a break:\n...\n  for {} {$count < 500} {incr count} {\n    ...\n    gdb_test_multiple \"x/i \\$pc\" \"\" {\n      ...\n      break\n    }\n...\n\nOn SLE-11 with:\n...\n$ runtest --version\nExpect version is       5.44.1.11\nTcl version is          8.5\nFramework version is    1.4.4\n...\nthe break doesn't seem to have the effect of breaking out of the loop.\n\nThe break does have the effect of terminating evaluation of the expect clause,\nwhich means we don't set insn_array, after which we run into:\n...\nERROR: tcl error sourcing src/gdb/testsuite/gdb.reverse/insn-reverse.exp.\nERROR: can't read \"insn_array(5)\": no such element in array\n...\n\ngdb/testsuite/ChangeLog:\n\n2020-12-04  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.reverse/insn-reverse.exp: Don't break inside gdb_test_multiple\n\tclause.",
    "tree": {
      "sha": "815a49754c5b7fab5b7882234d412f7565c7e0db",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/815a49754c5b7fab5b7882234d412f7565c7e0db"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a8d136756b9882f90311af7205a00c0d97fea64d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8d136756b9882f90311af7205a00c0d97fea64d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a8d136756b9882f90311af7205a00c0d97fea64d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8d136756b9882f90311af7205a00c0d97fea64d/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f17727b3497a630b01dffd219cdc372a058be121",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f17727b3497a630b01dffd219cdc372a058be121",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f17727b3497a630b01dffd219cdc372a058be121"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 20,
    "deletions": 11
  },
  "files": [
    {
      "sha": "6d7d0c27266aab6e26dfda296176d3531fb4377f",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8d136756b9882f90311af7205a00c0d97fea64d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8d136756b9882f90311af7205a00c0d97fea64d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=a8d136756b9882f90311af7205a00c0d97fea64d",
      "patch": "@@ -1,3 +1,8 @@\n+2020-12-04  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.reverse/insn-reverse.exp: Don't break inside gdb_test_multiple\n+\tclause.\n+\n 2020-12-04  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.reverse/insn-reverse.exp: Fix count handling."
    },
    {
      "sha": "54af9582f23792f5f72280e8ff37176f3b870c62",
      "filename": "gdb/testsuite/gdb.reverse/insn-reverse.exp",
      "status": "modified",
      "additions": 15,
      "deletions": 11,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8d136756b9882f90311af7205a00c0d97fea64d/gdb/testsuite/gdb.reverse/insn-reverse.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8d136756b9882f90311af7205a00c0d97fea64d/gdb/testsuite/gdb.reverse/insn-reverse.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.reverse/insn-reverse.exp?ref=a8d136756b9882f90311af7205a00c0d97fea64d",
      "patch": "@@ -79,23 +79,27 @@ proc test { func testcase_nr } {\n \tset count 0\n \tset insn_addr \"\"\n \tfor {} {$count < 500} {incr count} {\n+\t    set prev_insn_addr $insn_addr\n+\t    set insn_addr \"\"\n \t    gdb_test_multiple \"x/i \\$pc\" \"\" {\n \t\t-re \".* ($hex) <.*>:\\[ \\t\\]*(.*)\\r\\n$gdb_prompt $\" {\n-\t\t    set prev_insn_addr $insn_addr\n \t\t    set insn_addr $expect_out(1,string)\n+\t\t    set insn_array($count) $expect_out(2,string)\n+\t\t}\n+\t    }\n \n-\t\t    if [expr {$last_insn == $insn_addr}] {\n-\t\t\tbreak\n-\t\t    }\n+\t    if { $insn_addr == \"\" } {\n+\t\tbreak\n+\t    }\n \n-\t\t    if { $prev_insn_addr == $insn_addr } {\n-\t\t\t# Failed to make progress, might have run into SIGILL.\n-\t\t\tunsupported \"no progress at: $expect_out(2,string)\"\n-\t\t\tbreak\n-\t\t    }\n+\t    if { $last_insn == $insn_addr } {\n+\t\tbreak\n+\t    }\n \n-\t\t    set insn_array($count) $expect_out(2,string)\n-\t\t}\n+\t    if { $prev_insn_addr == $insn_addr } {\n+\t\t# Failed to make progress, might have run into SIGILL.\n+\t\tunsupported \"no progress at: $expect_out(2,string)\"\n+\t\tbreak\n \t    }\n \n \t    set pre_regs($count) [capture_command_output \"info all-registers\" \"\"]"
    }
  ]
}