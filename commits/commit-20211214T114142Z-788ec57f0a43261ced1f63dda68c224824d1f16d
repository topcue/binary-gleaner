{
  "sha": "788ec57f0a43261ced1f63dda68c224824d1f16d",
  "node_id": "C_kwDOANOeidoAKDc4OGVjNTdmMGE0MzI2MWNlZDFmNjNkZGE2OGMyMjQ4MjRkMWYxNmQ",
  "commit": {
    "author": {
      "name": "Jan Vrany",
      "email": "jan.vrany@labware.com",
      "date": "2021-11-08T14:00:13Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2021-12-14T11:41:42Z"
    },
    "message": "gdb/mi: rename mi_cmd to mi_command\n\nJust give this class a new name, more inline with the name of the\nsub-classes.  I've also updated mi_cmd_up to mi_command_up in\nmi-cmds.c inline with this new naming scheme.\n\nThere should be no user visible changes after this commit.",
    "tree": {
      "sha": "cf5fde90ecba484fe983d3ff1ca14b32e29d1c65",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cf5fde90ecba484fe983d3ff1ca14b32e29d1c65"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/788ec57f0a43261ced1f63dda68c224824d1f16d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/788ec57f0a43261ced1f63dda68c224824d1f16d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/788ec57f0a43261ced1f63dda68c224824d1f16d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/788ec57f0a43261ced1f63dda68c224824d1f16d/comments",
  "author": {
    "login": "janvrany",
    "id": 82951,
    "node_id": "MDQ6VXNlcjgyOTUx",
    "avatar_url": "https://avatars.githubusercontent.com/u/82951?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/janvrany",
    "html_url": "https://github.com/janvrany",
    "followers_url": "https://api.github.com/users/janvrany/followers",
    "following_url": "https://api.github.com/users/janvrany/following{/other_user}",
    "gists_url": "https://api.github.com/users/janvrany/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/janvrany/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/janvrany/subscriptions",
    "organizations_url": "https://api.github.com/users/janvrany/orgs",
    "repos_url": "https://api.github.com/users/janvrany/repos",
    "events_url": "https://api.github.com/users/janvrany/events{/privacy}",
    "received_events_url": "https://api.github.com/users/janvrany/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": null,
  "parents": [
    {
      "sha": "1f6c8c3317e5692e9994c18f427b45093863d572",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f6c8c3317e5692e9994c18f427b45093863d572",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1f6c8c3317e5692e9994c18f427b45093863d572"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 23,
    "deletions": 23
  },
  "files": [
    {
      "sha": "3bfd5918ce92f1109684f4745dd2cf22c4dad7bc",
      "filename": "gdb/mi/mi-cmd-info.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/788ec57f0a43261ced1f63dda68c224824d1f16d/gdb/mi/mi-cmd-info.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/788ec57f0a43261ced1f63dda68c224824d1f16d/gdb/mi/mi-cmd-info.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmd-info.c?ref=788ec57f0a43261ced1f63dda68c224824d1f16d",
      "patch": "@@ -67,7 +67,7 @@ void\n mi_cmd_info_gdb_mi_command (const char *command, char **argv, int argc)\n {\n   const char *cmd_name;\n-  struct mi_cmd *cmd;\n+  mi_command *cmd;\n   struct ui_out *uiout = current_uiout;\n \n   /* This command takes exactly one argument.  */"
    },
    {
      "sha": "9c11db00b3a3585b1e6ecf02ec6e02047d98e7ab",
      "filename": "gdb/mi/mi-cmds.c",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/788ec57f0a43261ced1f63dda68c224824d1f16d/gdb/mi/mi-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/788ec57f0a43261ced1f63dda68c224824d1f16d/gdb/mi/mi-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmds.c?ref=788ec57f0a43261ced1f63dda68c224824d1f16d",
      "patch": "@@ -28,22 +28,22 @@\n \n /* A command held in the MI_CMD_TABLE.  */\n \n-using mi_cmd_up = std::unique_ptr<struct mi_cmd>;\n+using mi_command_up = std::unique_ptr<struct mi_command>;\n \n /* MI command table (built at run time). */\n \n-static std::map<std::string, mi_cmd_up> mi_cmd_table;\n+static std::map<std::string, mi_command_up> mi_cmd_table;\n \n /* MI command with a pure MI implementation.  */\n \n-struct mi_command_mi : public mi_cmd\n+struct mi_command_mi : public mi_command\n {\n-  /* Constructor.  For NAME and SUPPRESS_NOTIFICATION see mi_cmd\n+  /* Constructor.  For NAME and SUPPRESS_NOTIFICATION see mi_command\n      constructor, FUNC is the function called from do_invoke, which\n      implements this MI command.  */\n   mi_command_mi (const char *name, mi_cmd_argv_ftype func,\n                  int *suppress_notification)\n-    : mi_cmd (name, suppress_notification),\n+    : mi_command (name, suppress_notification),\n       m_argv_function (func)\n   {\n     gdb_assert (func != nullptr);\n@@ -72,17 +72,17 @@ struct mi_command_mi : public mi_cmd\n \n /* MI command implemented on top of a CLI command.  */\n \n-struct mi_command_cli : public mi_cmd\n+struct mi_command_cli : public mi_command\n {\n-  /* Constructor.  For NAME and SUPPRESS_NOTIFICATION see mi_cmd\n+  /* Constructor.  For NAME and SUPPRESS_NOTIFICATION see mi_command\n      constructor, CLI_NAME is the name of a CLI command that should be\n      invoked to implement this MI command.  If ARGS_P is true then any\n      arguments from entered by the user as part of the MI command line are\n      forwarded to CLI_NAME as its argument string, otherwise, if ARGS_P is\n      false, nullptr is send to CLI_NAME as its argument string.  */\n   mi_command_cli (const char *name, const char *cli_name, bool args_p,\n                   int *suppress_notification)\n-    : mi_cmd (name, suppress_notification),\n+    : mi_command (name, suppress_notification),\n       m_cli_name (cli_name),\n       m_args_p (args_p)\n   { /* Nothing.  */ }\n@@ -114,7 +114,7 @@ struct mi_command_cli : public mi_cmd\n    COMMAND was added to mi_cmd_table.  */\n \n static bool\n-insert_mi_cmd_entry (mi_cmd_up command)\n+insert_mi_cmd_entry (mi_command_up command)\n {\n   gdb_assert (command != nullptr);\n \n@@ -135,8 +135,8 @@ static void\n add_mi_cmd_mi (const char *name, mi_cmd_argv_ftype function,\n \t       int *suppress_notification = nullptr)\n {\n-  mi_cmd_up command (new mi_command_mi (name, function,\n-                                        suppress_notification));\n+  mi_command_up command (new mi_command_mi (name, function,\n+\t\t\t\t\t    suppress_notification));\n \n   bool success = insert_mi_cmd_entry (std::move (command));\n   gdb_assert (success);\n@@ -150,16 +150,16 @@ static void\n add_mi_cmd_cli (const char *name, const char *cli_name, int args_p,\n \t\tint *suppress_notification = nullptr)\n {\n-  mi_cmd_up command (new mi_command_cli (name, cli_name, args_p != 0,\n-                                         suppress_notification));\n+  mi_command_up command (new mi_command_cli (name, cli_name, args_p != 0,\n+\t\t\t\t\t     suppress_notification));\n \n   bool success = insert_mi_cmd_entry (std::move (command));\n   gdb_assert (success);\n }\n \n /* See mi-cmds.h.  */\n \n-mi_cmd::mi_cmd (const char *name, int *suppress_notification)\n+mi_command::mi_command (const char *name, int *suppress_notification)\n   : m_name (name),\n     m_suppress_notification (suppress_notification)\n {\n@@ -169,7 +169,7 @@ mi_cmd::mi_cmd (const char *name, int *suppress_notification)\n /* See mi-cmds.h.  */\n \n void\n-mi_cmd::invoke (struct mi_parse *parse) const\n+mi_command::invoke (struct mi_parse *parse) const\n {\n   gdb::optional<scoped_restore_tmpl<int>> restore\n     = do_suppress_notification ();\n@@ -179,7 +179,7 @@ mi_cmd::invoke (struct mi_parse *parse) const\n /* See mi-cmds.h.  */\n \n gdb::optional<scoped_restore_tmpl<int>>\n-mi_cmd::do_suppress_notification () const\n+mi_command::do_suppress_notification () const\n {\n   if (m_suppress_notification != nullptr)\n     return scoped_restore_tmpl<int> (m_suppress_notification, 1);\n@@ -353,7 +353,7 @@ build_table ()\n \n /* See mi-cmds.h.  */\n \n-struct mi_cmd *\n+mi_command *\n mi_cmd_lookup (const char *command)\n {\n   gdb_assert (command != nullptr);"
    },
    {
      "sha": "5945f03e5d35250ab4d4cbfa435e73724007c9db",
      "filename": "gdb/mi/mi-cmds.h",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/788ec57f0a43261ced1f63dda68c224824d1f16d/gdb/mi/mi-cmds.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/788ec57f0a43261ced1f63dda68c224824d1f16d/gdb/mi/mi-cmds.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmds.h?ref=788ec57f0a43261ced1f63dda68c224824d1f16d",
      "patch": "@@ -141,17 +141,17 @@ extern mi_cmd_argv_ftype mi_cmd_complete;\n \n /* The abstract base class for all MI command types.  */\n \n-struct mi_cmd\n+struct mi_command\n {\n   /* Constructor.  NAME is the name of this MI command, excluding any\n      leading dash, that is the initial string the user will enter to run\n      this command.  The SUPPRESS_NOTIFICATION pointer is a flag which will\n      be set to 1 when this command is invoked, and reset to its previous\n      value once the command invocation has completed.  */\n-  mi_cmd (const char *name, int *suppress_notification);\n+  mi_command (const char *name, int *suppress_notification);\n \n   /* Destructor.  */\n-  virtual ~mi_cmd () = default;\n+  virtual ~mi_command () = default;\n \n   /* Return the name of this command.  This is the command that the user\n      will actually type in, without any arguments, and without the leading\n@@ -190,7 +190,7 @@ struct mi_cmd\n /* Lookup a command in the MI command table, returns nullptr if COMMAND is\n    not found.  */\n \n-extern mi_cmd *mi_cmd_lookup (const char *command);\n+extern mi_command *mi_cmd_lookup (const char *command);\n \n /* Debug flag */\n extern int mi_debug_p;"
    },
    {
      "sha": "44c3a49b1c0cf86c46b138bcfc847e97ab16d102",
      "filename": "gdb/mi/mi-parse.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/788ec57f0a43261ced1f63dda68c224824d1f16d/gdb/mi/mi-parse.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/788ec57f0a43261ced1f63dda68c224824d1f16d/gdb/mi/mi-parse.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-parse.h?ref=788ec57f0a43261ced1f63dda68c224824d1f16d",
      "patch": "@@ -49,7 +49,7 @@ struct mi_parse\n     enum mi_command_type op;\n     char *command;\n     char *token;\n-    const struct mi_cmd *cmd;\n+    const struct mi_command *cmd;\n     struct mi_timestamp *cmd_start;\n     char *args;\n     char **argv;"
    }
  ]
}