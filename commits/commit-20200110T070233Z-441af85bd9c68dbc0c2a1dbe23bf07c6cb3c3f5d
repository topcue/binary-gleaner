{
  "sha": "441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDQxYWY4NWJkOWM2OGRiYzBjMmExZGJlMjNiZjA3YzZjYjNjM2Y1ZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-08T20:29:42Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-10T07:02:33Z"
    },
    "message": "ubsan: m10300: shift exponent -4\n\n\t* m10300-dis.c (disassemble): Move extraction of DREG, AREG, RREG,\n\tand XRREG value earlier to avoid a shift with negative exponent.\n\t* m10200-dis.c (disassemble): Similarly.",
    "tree": {
      "sha": "57e997f3add2572d384e6c8f7a9a93074d88f9c5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/57e997f3add2572d384e6c8f7a9a93074d88f9c5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8948cc6971fb82feffc49e2d21747111466ad642",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8948cc6971fb82feffc49e2d21747111466ad642",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8948cc6971fb82feffc49e2d21747111466ad642"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 24,
    "deletions": 30
  },
  "files": [
    {
      "sha": "7c5f16bbc6b3910480e90f038c895123e18c3449",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d",
      "patch": "@@ -1,3 +1,9 @@\n+2020-01-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* m10300-dis.c (disassemble): Move extraction of DREG, AREG, RREG,\n+\tand XRREG value earlier to avoid a shift with negative exponent.\n+\t* m10200-dis.c (disassemble): Similarly.\n+\n 2020-01-09  Nick Clifton  <nickc@redhat.com>\n \n \tPR 25224"
    },
    {
      "sha": "537ce46ae02d736652c75ca2055c3925469524ee",
      "filename": "opcodes/m10200-dis.c",
      "status": "modified",
      "additions": 9,
      "deletions": 15,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d/opcodes/m10200-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d/opcodes/m10200-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/m10200-dis.c?ref=441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d",
      "patch": "@@ -83,16 +83,18 @@ disassemble (bfd_vma memaddr,\n \n \t      operand = &mn10200_operands[*opindex_ptr];\n \n-\t      if ((operand->flags & MN10200_OPERAND_EXTENDED) != 0)\n+\t      if ((operand->flags & MN10200_OPERAND_DREG) != 0\n+\t\t  || (operand->flags & MN10200_OPERAND_AREG) != 0)\n+\t\tvalue = ((insn >> (operand->shift + extra_shift))\n+\t\t\t & ((1 << operand->bits) - 1));\n+\t      else if ((operand->flags & MN10200_OPERAND_EXTENDED) != 0)\n \t\t{\n \t\t  value = (insn & 0xffff) << 8;\n \t\t  value |= extension;\n \t\t}\n \t      else\n-\t\t{\n-\t\t  value = ((insn >> (operand->shift))\n-\t\t\t   & ((1L << operand->bits) - 1L));\n-\t\t}\n+\t\tvalue = ((insn >> (operand->shift))\n+\t\t\t & ((1L << operand->bits) - 1L));\n \n \t      if ((operand->flags & MN10200_OPERAND_SIGNED) != 0)\n \t\tvalue = ((long)(value << (32 - operand->bits))\n@@ -106,18 +108,10 @@ disassemble (bfd_vma memaddr,\n \t      nocomma = 0;\n \n \t      if ((operand->flags & MN10200_OPERAND_DREG) != 0)\n-\t\t{\n-\t\t  value = ((insn >> (operand->shift + extra_shift))\n-\t\t\t   & ((1 << operand->bits) - 1));\n-\t\t  (*info->fprintf_func) (info->stream, \"d%ld\", value);\n-\t\t}\n+\t\t(*info->fprintf_func) (info->stream, \"d%ld\", value);\n \n \t      else if ((operand->flags & MN10200_OPERAND_AREG) != 0)\n-\t\t{\n-\t\t  value = ((insn >> (operand->shift + extra_shift))\n-\t\t\t   & ((1 << operand->bits) - 1));\n-\t\t  (*info->fprintf_func) (info->stream, \"a%ld\", value);\n-\t\t}\n+\t\t(*info->fprintf_func) (info->stream, \"a%ld\", value);\n \n \t      else if ((operand->flags & MN10200_OPERAND_PSW) != 0)\n \t\t(*info->fprintf_func) (info->stream, \"psw\");"
    },
    {
      "sha": "00210c25cd359a67c3316d72a832fbe360efbc92",
      "filename": "opcodes/m10300-dis.c",
      "status": "modified",
      "additions": 9,
      "deletions": 15,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d/opcodes/m10300-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d/opcodes/m10300-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/m10300-dis.c?ref=441af85bd9c68dbc0c2a1dbe23bf07c6cb3c3f5d",
      "patch": "@@ -318,7 +318,13 @@ disassemble (bfd_vma memaddr,\n \t      if ((operand->flags & MN10300_OPERAND_PLUS) != 0)\n \t\tnocomma = 1;\n \n-\t      if ((operand->flags & MN10300_OPERAND_SPLIT) != 0)\n+\t      if ((operand->flags & MN10300_OPERAND_DREG) != 0\n+\t\t  || (operand->flags & MN10300_OPERAND_AREG) != 0\n+\t\t  || (operand->flags & MN10300_OPERAND_RREG) != 0\n+\t\t  || (operand->flags & MN10300_OPERAND_XRREG) != 0)\n+\t\tvalue = ((insn >> (operand->shift + extra_shift))\n+\t\t\t & ((1 << operand->bits) - 1));\n+\t      else if ((operand->flags & MN10300_OPERAND_SPLIT) != 0)\n \t\t{\n \t\t  unsigned long temp;\n \n@@ -410,18 +416,10 @@ disassemble (bfd_vma memaddr,\n \t      nocomma = 0;\n \n \t      if ((operand->flags & MN10300_OPERAND_DREG) != 0)\n-\t\t{\n-\t\t  value = ((insn >> (operand->shift + extra_shift))\n-\t\t\t   & ((1 << operand->bits) - 1));\n-\t\t  (*info->fprintf_func) (info->stream, \"d%d\", (int) value);\n-\t\t}\n+\t\t(*info->fprintf_func) (info->stream, \"d%d\", (int) value);\n \n \t      else if ((operand->flags & MN10300_OPERAND_AREG) != 0)\n-\t\t{\n-\t\t  value = ((insn >> (operand->shift + extra_shift))\n-\t\t\t   & ((1 << operand->bits) - 1));\n-\t\t  (*info->fprintf_func) (info->stream, \"a%d\", (int) value);\n-\t\t}\n+\t\t(*info->fprintf_func) (info->stream, \"a%d\", (int) value);\n \n \t      else if ((operand->flags & MN10300_OPERAND_SP) != 0)\n \t\t(*info->fprintf_func) (info->stream, \"sp\");\n@@ -434,8 +432,6 @@ disassemble (bfd_vma memaddr,\n \n \t      else if ((operand->flags & MN10300_OPERAND_RREG) != 0)\n \t\t{\n-\t\t  value = ((insn >> (operand->shift + extra_shift))\n-\t\t\t   & ((1 << operand->bits) - 1));\n \t\t  if (value < 8)\n \t\t    (*info->fprintf_func) (info->stream, \"r%d\", (int) value);\n \t\t  else if (value < 12)\n@@ -446,8 +442,6 @@ disassemble (bfd_vma memaddr,\n \n \t      else if ((operand->flags & MN10300_OPERAND_XRREG) != 0)\n \t\t{\n-\t\t  value = ((insn >> (operand->shift + extra_shift))\n-\t\t\t   & ((1 << operand->bits) - 1));\n \t\t  if (value == 0)\n \t\t    (*info->fprintf_func) (info->stream, \"sp\");\n \t\t  else"
    }
  ]
}