{
  "sha": "42330a681af23a80d3e1f201d2a65886875e74bd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDIzMzBhNjgxYWYyM2E4MGQzZTFmMjAxZDJhNjU4ODY4NzVlNzRiZA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-01-24T12:46:56Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-01-31T00:41:06Z"
    },
    "message": "gdb/tui: Disassembler scrolling of very small programs\n\nIn TUI mode, if the disassembly output for the program is less than\none screen long, then currently if the user scrolls down until on the\nlast assembly instruction is displayed and then tries to scroll up\nusing Page-Up, the display doesn't update - they are stuck viewing the\nlast line.\n\nIf the user tries to scroll up using the Up-Arrow, then the display\nscrolls normally.\n\nWhat is happening is on the Page-Up we ask GDB to scroll backward the\nsame number of lines as the height of the TUI ASM window.  The back\nscanner, which looks for a good place to start disassembling, fails to\nfind a starting address which will provide the requested number of new\nlines before we get back to the original starting address (which is\nnot surprising, our whole program contains less than a screen height\nof instructions), as a result the back scanner gives up and returns\nthe original starting address.\n\nWhen we scroll with Up-Arrow we only ask the back scanner to find 1\nnew instruction, which it manages to do, so this scroll works.\n\nThe solution here is, when we fail to find enough instructions, to\nreturn the lowest address we did manage to find.  This will ensure we\njump to the lowest possible address in the disassembly output.\n\ngdb/ChangeLog:\n\n\tPR tui/9765\n\t* tui/tui-disasm.c (tui_find_disassembly_address): If we don't\n\thave enough lines to fill the screen, still return the lowest\n\taddress we found.\n\ngdb/testsuite/ChangeLog:\n\n\tPR tui/9765\n\t* gdb.tui/tui-layout-asm-short-prog.S: New file.\n\t* gdb.tui/tui-layout-asm-short-prog.exp: New file.\n\nChange-Id: I6a6a7972c68a0559e9717fd8d82870b669a40af3",
    "tree": {
      "sha": "7c08bfb403ba2b4f930125483344aaa5227d675b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7c08bfb403ba2b4f930125483344aaa5227d675b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/42330a681af23a80d3e1f201d2a65886875e74bd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/42330a681af23a80d3e1f201d2a65886875e74bd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/42330a681af23a80d3e1f201d2a65886875e74bd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/42330a681af23a80d3e1f201d2a65886875e74bd/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7a27a45bc66f38cbaee868092f0aaa55ef8d4564",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a27a45bc66f38cbaee868092f0aaa55ef8d4564",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7a27a45bc66f38cbaee868092f0aaa55ef8d4564"
    }
  ],
  "stats": {
    "total": 88,
    "additions": 87,
    "deletions": 1
  },
  "files": [
    {
      "sha": "5bdca27efc574d50d4eff8f1f6caee2eb2054ff1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/42330a681af23a80d3e1f201d2a65886875e74bd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/42330a681af23a80d3e1f201d2a65886875e74bd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=42330a681af23a80d3e1f201d2a65886875e74bd",
      "patch": "@@ -1,3 +1,10 @@\n+2020-01-31  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\tPR tui/9765\n+\t* tui/tui-disasm.c (tui_find_disassembly_address): If we don't\n+\thave enough lines to fill the screen, still return the lowest\n+\taddress we found.\n+\n 2020-01-31  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* tui/tui-win.c (_initialize_tui_win): Update help text for '+',"
    },
    {
      "sha": "a6ae5e98623fc540f2105b10f6f1a6f86d3ae3c8",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/42330a681af23a80d3e1f201d2a65886875e74bd/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/42330a681af23a80d3e1f201d2a65886875e74bd/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=42330a681af23a80d3e1f201d2a65886875e74bd",
      "patch": "@@ -1,3 +1,9 @@\n+2020-01-31  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\tPR tui/9765\n+\t* gdb.tui/tui-layout-asm-short-prog.S: New file.\n+\t* gdb.tui/tui-layout-asm-short-prog.exp: New file.\n+\n 2020-01-29  Luis Machado  <luis.machado@linaro.org>\n \n \t* gdb.arch/aarch64-brk-patterns.c: New source file."
    },
    {
      "sha": "7705ef139aa75be1fe39a2da0e35a9495b3b4797",
      "filename": "gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.S",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/42330a681af23a80d3e1f201d2a65886875e74bd/gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.S",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/42330a681af23a80d3e1f201d2a65886875e74bd/gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.S",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.S?ref=42330a681af23a80d3e1f201d2a65886875e74bd",
      "patch": "@@ -0,0 +1,22 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+\t.global _start\n+_start:\n+\t.rept 5\n+\tnop\n+\t.endr"
    },
    {
      "sha": "d0b871ff762865298e19d6a91b48f641ce482907",
      "filename": "gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.exp",
      "status": "added",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/42330a681af23a80d3e1f201d2a65886875e74bd/gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/42330a681af23a80d3e1f201d2a65886875e74bd/gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/tui-layout-asm-short-prog.exp?ref=42330a681af23a80d3e1f201d2a65886875e74bd",
      "patch": "@@ -0,0 +1,51 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Ensure that 'layout asm' can scroll away from the last line of a\n+# very short program using a page up sized scroll.\n+\n+load_lib \"tuiterm.exp\"\n+\n+standard_testfile tui-layout-asm-short-prog.S\n+\n+if {[build_executable \"failed to prepare\" ${testfile} ${srcfile} \\\n+\t {debug additional_flags=-nostdlib \\\n+\t      additional_flags=-nostartfiles}] == -1} {\n+    return -1\n+}\n+\n+Term::clean_restart 24 80 $testfile\n+if {![Term::prepare_for_tui]} {\n+    unsupported \"TUI not supported\"\n+}\n+\n+# This puts us into TUI mode, and should display the ASM window.\n+Term::command \"layout asm\"\n+Term::check_box_contents \"check asm box contents\" 0 0 80 15 \"<_start>\"\n+\n+# Record the first line of output, we'll need this later.\n+set first_line [Term::get_line 1]\n+\n+# Scroll forward a large amount, this should take us to the last\n+# instruction in the program.\n+Term::command \"+ 13\"\n+Term::check_box_contents \"check asm box contents again\" 0 0 80 15 \\\n+    \"^ *$hex\\[^\\n\\]+\\n +\\n\"\n+\n+# Now scroll backward again, we should return to the start of the\n+# program.\n+Term::command \"- 13\"\n+gdb_assert {[string eq \"$first_line\" [Term::get_line 1]]} \\\n+    \"check first line is back\""
    },
    {
      "sha": "547d2c9e6d684f0ce7474f2fe1b74bae70376237",
      "filename": "gdb/tui/tui-disasm.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/42330a681af23a80d3e1f201d2a65886875e74bd/gdb/tui/tui-disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/42330a681af23a80d3e1f201d2a65886875e74bd/gdb/tui/tui-disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.c?ref=42330a681af23a80d3e1f201d2a65886875e74bd",
      "patch": "@@ -268,7 +268,7 @@ tui_find_disassembly_address (struct gdbarch *gdbarch, CORE_ADDR pc, int from)\n       if (asm_lines.size () < max_lines)\n \t{\n \t  if (!possible_new_low.has_value ())\n-\t    return pc;\n+\t    return new_low;\n \n \t  /* Take the best possible match we have.  */\n \t  new_low = *possible_new_low;"
    }
  ]
}