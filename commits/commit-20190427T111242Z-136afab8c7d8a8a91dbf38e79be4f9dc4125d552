{
  "sha": "136afab8c7d8a8a91dbf38e79be4f9dc4125d552",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTM2YWZhYjhjN2Q4YThhOTFkYmYzOGU3OWJlNGY5ZGM0MTI1ZDU1Mg==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-04-23T21:43:24Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-04-27T11:12:42Z"
    },
    "message": "Implement show | set may-call-functions [on|off]\n\nInferior function calls are powerful but might lead to undesired\nresults such as crashes when calling nested functions (frequently\nused in particular in Ada).\n\nThis implements a GDB setting to disable calling inferior functions.\n\nNote: the idea is that if/when the 'slash command' patch is pushed,\nthat this setting can be changed e.g. by using the shortcut /c.\n\nThis is version 2 of the patch.  It handles all the received comments,\nmostly replace 'can-call' by 'may-call', and avoid using\n'inferior function call' in factor of 'calling function in the program'.\n\n2019-04-26  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\ngdb/ChangeLog\n\t* NEWS: Mention the new set|show may-call-functions.\n\t* infcall.c (may_call_functions_p): New variable.\n\t(show_may_call_functions_p): New function.\n\t(call_function_by_hand_dummy): Throws an error if not\n\tmay-call-functions.\n\t(_initialize_infcall): Call add_setshow_boolean_cmd for\n\tmay-call-functions.\n\ngdb/testsuite/ChangeLog\n\t* gdb.base/callexit.exp: Test may-call-functions off.\n\ngdb/doc/ChangeLog\n\t* gdb.texinfo (Calling): Document the new\n\tset|show may-call-functions.",
    "tree": {
      "sha": "2d6f40d947a3fa3a627cf6b7d0b360f4174d10de",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2d6f40d947a3fa3a627cf6b7d0b360f4174d10de"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/136afab8c7d8a8a91dbf38e79be4f9dc4125d552",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/136afab8c7d8a8a91dbf38e79be4f9dc4125d552",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/136afab8c7d8a8a91dbf38e79be4f9dc4125d552",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "a45328b93bdd5399da8a9e56817e445cc2068edd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a45328b93bdd5399da8a9e56817e445cc2068edd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a45328b93bdd5399da8a9e56817e445cc2068edd"
    }
  ],
  "stats": {
    "total": 86,
    "additions": 86,
    "deletions": 0
  },
  "files": [
    {
      "sha": "58aa736d28eedc9e4f79cacd491b6634e34bb987",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=136afab8c7d8a8a91dbf38e79be4f9dc4125d552",
      "patch": "@@ -1,3 +1,13 @@\n+2019-04-27  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* NEWS: Mention the new set|show may-call-functions.\n+\t* infcall.c (may_call_functions_p): New variable.\n+\t(show_may_call_functions_p): New function.\n+\t(call_function_by_hand_dummy): Throws an error if not\n+\tmay-call-functions.\n+\t(_initialize_infcall): Call add_setshow_boolean_cmd for\n+\tmay-call-functions.\n+\n 2019-04-25  Keith Seitz  <keiths@redhat.com>\n \n \tPR c++/24367"
    },
    {
      "sha": "42b04e952a3aebc6083467e5b64d70346a4aadc0",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=136afab8c7d8a8a91dbf38e79be4f9dc4125d552",
      "patch": "@@ -27,6 +27,18 @@\n      'array_indexes', 'symbols', 'unions', 'deref_refs', 'actual_objects',\n      'static_members', 'max_elements', 'repeat_threshold', and 'format'.\n \n+* New commands\n+\n+set may-call-functions [on|off]\n+show may-call-functions\n+  This controls whether GDB will attempt to call functions in\n+  the program, such as with expressions in the print command.  It\n+  defaults to on.  Calling functions in the program being debugged\n+  can have undesired side effects.  It is now possible to forbid\n+  such function calls.  If function calls are forbidden, GDB will throw\n+  an error when a command (such as print expression) calls a function\n+  in the program.\n+\n *** Changes in GDB 8.3\n \n * GDB and GDBserver now support access to additional registers on"
    },
    {
      "sha": "3efed670fa21f234c89348b2a89e2cfc04e4cbca",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=136afab8c7d8a8a91dbf38e79be4f9dc4125d552",
      "patch": "@@ -1,3 +1,8 @@\n+2019-04-27  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* gdb.texinfo (Calling): Document the new\n+\tset|show may-call-functions.\n+\n 2019-04-22  Pedro Alves  <palves@redhat.com>\n \n \t* gdb.texinfo (Reverse Execution): Mention and xref process record"
    },
    {
      "sha": "cf8333d86be2ecdca858d9f66b0d8309a867a925",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=136afab8c7d8a8a91dbf38e79be4f9dc4125d552",
      "patch": "@@ -18693,6 +18693,28 @@ the default C@t{++} exception handler and the inferior terminated.\n Show the current setting of stack unwinding in the functions called by\n @value{GDBN}.\n \n+@item set may-call-functions\n+@kindex set may-call-functions\n+@cindex disabling calling functions in the program\n+@cindex calling functions in the program, disabling\n+Set permission to call functions in the program.\n+This controls whether @value{GDBN} will attempt to call functions in\n+the program, such as with expressions in the @code{print} command.  It\n+defaults to @code{on}.\n+\n+To call a function in the program, @value{GDBN} has to temporarily\n+modify the state of the inferior.  This has potentially undesired side\n+effects.  Also, having @value{GDBN} call nested functions is likely to\n+be erroneous and may even crash the program being debugged.  You can\n+avoid such hazards by forbidding @value{GDBN} from calling functions\n+in the program being debugged.  If calling functions in the program\n+is forbidden, GDB will throw an error when a command (such as printing\n+an expression) starts a function call in the program.\n+\n+@item show may-call-functions\n+@kindex show may-call-functions\n+Show permission to call functions in the program.\n+\n @end table\n \n @subsection Calling functions with no debug info"
    },
    {
      "sha": "f99206c458203e8fa12861607d8f2eeef349c7ec",
      "filename": "gdb/infcall.c",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/infcall.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/infcall.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcall.c?ref=136afab8c7d8a8a91dbf38e79be4f9dc4125d552",
      "patch": "@@ -55,6 +55,17 @@\n    asynchronous inferior function call implementation, and that in\n    turn means restructuring the code so that it is event driven.  */\n \n+static int may_call_functions_p = 1;\n+static void\n+show_may_call_functions_p (struct ui_file *file, int from_tty,\n+\t\t\t   struct cmd_list_element *c,\n+\t\t\t   const char *value)\n+{\n+  fprintf_filtered (file,\n+\t\t    _(\"Permission to call functions in the program is %s.\\n\"),\n+\t\t    value);\n+}\n+\n /* How you should pass arguments to a function depends on whether it\n    was defined in K&R style or prototype style.  If you define a\n    function using the K&R syntax that takes a `float' argument, then\n@@ -708,6 +719,10 @@ call_function_by_hand_dummy (struct value *function,\n   struct gdb_exception e;\n   char name_buf[RAW_FUNCTION_ADDRESS_SIZE];\n \n+  if (!may_call_functions_p)\n+    error (_(\"Cannot call functions in the program: \"\n+\t     \"may-call-functions is off.\"));\n+\n   if (!target_has_execution)\n     noprocess ();\n \n@@ -1359,6 +1374,17 @@ When the function is done executing, GDB will silently stop.\"),\n void\n _initialize_infcall (void)\n {\n+  add_setshow_boolean_cmd (\"may-call-functions\", no_class,\n+\t\t\t   &may_call_functions_p, _(\"\\\n+Set permission to call functions in the program.\"), _(\"\\\n+Show permission to call functions in the program.\"), _(\"\\\n+When this permission is on, GDB may call functions in the program.\\n\\\n+Otherwise, any sort of attempt to call a function in the program\\n\\\n+will result in an error.\"),\n+\t\t\t   NULL,\n+\t\t\t   show_may_call_functions_p,\n+\t\t\t   &setlist, &showlist);\n+\n   add_setshow_boolean_cmd (\"coerce-float-to-double\", class_obscure,\n \t\t\t   &coerce_float_to_double_p, _(\"\\\n Set coercion of floats to doubles when calling functions.\"), _(\"\\"
    },
    {
      "sha": "e81409387e14dceaec67c5064acb7b8dd65a24f6",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=136afab8c7d8a8a91dbf38e79be4f9dc4125d552",
      "patch": "@@ -1,3 +1,7 @@\n+2019-04-27  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* gdb.base/callexit.exp: Test may-call-functions off.\n+\n 2019-04-25  Keith Seitz  <keiths@redhat.com>\n \n \tPR c++/24367"
    },
    {
      "sha": "9a32d3d54a5de25722790da466c18f8227d35c2b",
      "filename": "gdb/testsuite/gdb.base/callexit.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/testsuite/gdb.base/callexit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/136afab8c7d8a8a91dbf38e79be4f9dc4125d552/gdb/testsuite/gdb.base/callexit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/callexit.exp?ref=136afab8c7d8a8a91dbf38e79be4f9dc4125d552",
      "patch": "@@ -37,6 +37,13 @@ if { ![runto_main] } {\n     return 0\n }\n \n+# Verify set may-call-functions behaviour.\n+gdb_test_no_output \"set may-call-functions off\"\n+gdb_test \"call callexit()\" \\\n+    \"Cannot call functions in the program: may-call-functions is off.\" \\\n+    \"inferior function call refused in off state\"\n+gdb_test_no_output \"set may-call-functions on\"\n+\n # Call function (causing the program to exit), and see if gdb handles\n # it properly.\n gdb_test \"call callexit()\" \\"
    }
  ]
}