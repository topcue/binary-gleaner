{
  "sha": "a225c9a8692814b4a29360479aee217d73e22d50",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTIyNWM5YTg2OTI4MTRiNGEyOTM2MDQ3OWFlZTIxN2Q3M2UyMmQ1MA==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-17T15:31:49Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-17T15:34:06Z"
    },
    "message": "Add support for NetBSD threads in sh-nbsd-nat.c\n\nNetBSD ptrace(2) accepts thread id (LWP) as the 4th argument for threads.\n\ngdb/ChangeLog:\n\n\t* sh-nbsd-nat.c (fetch_registers): New variable lwp and pass\n\tit to the ptrace call.\n\t* sh-nbsd-nat.c (store_registers): Likewise.",
    "tree": {
      "sha": "4d6a313043c46a23131c6e700c1a5d60b5408cd0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4d6a313043c46a23131c6e700c1a5d60b5408cd0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a225c9a8692814b4a29360479aee217d73e22d50",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a225c9a8692814b4a29360479aee217d73e22d50",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a225c9a8692814b4a29360479aee217d73e22d50",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a225c9a8692814b4a29360479aee217d73e22d50/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9809762324491b851332ce600ae9bde8dd34f601",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9809762324491b851332ce600ae9bde8dd34f601",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9809762324491b851332ce600ae9bde8dd34f601"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 11,
    "deletions": 3
  },
  "files": [
    {
      "sha": "e418e43740d48b5c13ae7a98623a74a60bea3c37",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a225c9a8692814b4a29360479aee217d73e22d50/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a225c9a8692814b4a29360479aee217d73e22d50/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a225c9a8692814b4a29360479aee217d73e22d50",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-17  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* sh-nbsd-nat.c (fetch_registers): New variable lwp and pass\n+\tit to the ptrace call.\n+\t* sh-nbsd-nat.c (store_registers): Likewise.\n+\n 2020-03-17  Kamil Rytarowski  <n54@gmx.com>\n \n \t* sh-nbsd-nat.c (sh_nbsd_nat_target): Inherit from"
    },
    {
      "sha": "b4f9db691ce0869bccf1cbba14aea71472946bf6",
      "filename": "gdb/sh-nbsd-nat.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a225c9a8692814b4a29360479aee217d73e22d50/gdb/sh-nbsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a225c9a8692814b4a29360479aee217d73e22d50/gdb/sh-nbsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sh-nbsd-nat.c?ref=a225c9a8692814b4a29360479aee217d73e22d50",
      "patch": "@@ -53,13 +53,14 @@ void\n sh_nbsd_nat_target::fetch_registers (struct regcache *regcache, int regno)\n {\n   pid_t pid = regcache->ptid ().pid ();\n+  int lwp = regcache->ptid ().lwp ();\n \n   if (regno == -1 || GETREGS_SUPPLIES (regcache->arch (), regno))\n     {\n       struct reg inferior_registers;\n \n       if (ptrace (PT_GETREGS, pid,\n-\t\t  (PTRACE_TYPE_ARG3) &inferior_registers, 0) == -1)\n+\t\t  (PTRACE_TYPE_ARG3) &inferior_registers, lwp) == -1)\n \tperror_with_name (_(\"Couldn't get registers\"));\n \n       sh_corefile_supply_regset (&sh_corefile_gregset, regcache, regno,\n@@ -75,21 +76,22 @@ void\n sh_nbsd_nat_target::store_registers (struct regcache *regcache, int regno)\n {\n   pid_t pid = regcache->ptid ().pid ();\n+  int lwp = regcache->ptid ().lwp ();\n \n   if (regno == -1 || GETREGS_SUPPLIES (regcache->arch (), regno))\n     {\n       struct reg inferior_registers;\n \n       if (ptrace (PT_GETREGS, pid,\n-\t\t  (PTRACE_TYPE_ARG3) &inferior_registers, 0) == -1)\n+\t\t  (PTRACE_TYPE_ARG3) &inferior_registers, lwp) == -1)\n \tperror_with_name (_(\"Couldn't get registers\"));\n \n       sh_corefile_collect_regset (&sh_corefile_gregset, regcache, regno,\n \t\t\t\t  (char *) &inferior_registers,\n \t\t\t\t  SHNBSD_SIZEOF_GREGS);\n \n       if (ptrace (PT_SETREGS, pid,\n-\t\t  (PTRACE_TYPE_ARG3) &inferior_registers, 0) == -1)\n+\t\t  (PTRACE_TYPE_ARG3) &inferior_registers, lwp) == -1)\n \tperror_with_name (_(\"Couldn't set registers\"));\n \n       if (regno != -1)"
    }
  ]
}