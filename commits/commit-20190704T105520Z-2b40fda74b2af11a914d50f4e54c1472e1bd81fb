{
  "sha": "2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmI0MGZkYTc0YjJhZjExYTkxNGQ1MGY0ZTU0YzE0NzJlMWJkODFmYg==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-07-04T10:48:16Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-07-04T10:55:20Z"
    },
    "message": "i386/AArch64: Remove old xml tests\n\nBoth the i386, X86_64 and AArch64 builds of gdbserver include a bunch of legacy\nxml files, dat files and auto generated C files, when building for unit test.\n\nThese tests exists back from when feature target descriptions were added to\nprove that the new target descriptions were identical to the original\nolder versions. The old files are not used for anything other than these tests.\n\nNow that this has been proven, we are not gaining anything by keeping the\noriginal files and tests. Should new functionality be added, it would break\nthe tests, unless the functionality was backported to the xml. There is no\nrequirement that we must match the exact xml from N releases ago.  It adds\nobfuscation, where as the feature target descriptions were meant to simplify\nthe code.\n\nIn addition, there are a bunch of xml and dat files which are completely unused.\n\nThis patch removes the selftests and the target descriptions from gdbserver.\n\nUpdate the unittest to allow 0 tests (note, this failed on other targets that\nnever had any tests).\n\ngdb/ChangeLog:\n\n\t* aarch64-tdep.c: Remove xml self tests.\n\t* amd64-linux-tdep.c: Likewise.\n\t* amd64-tdep.c: Likewise.\n\t* i386-linux-tdep.c: Likewise.\n\t* i386-tdep.c: Likewise.\n\ngdb/gdbserver/ChangeLog:\n\n\t* configure.srv: Remove legacy xml.\n\t* linux-aarch64-low.c (initialize_low_arch): Remove\n\tinitialize_low_tdesc call.\n\t* linux-aarch64-tdesc-selftest.c: Remove file.\n\t* linux-aarch64-tdesc.h (initialize_low_tdesc): Remove.\n\t* linux-x86-low.c (initialize_low_arch): Remove\n\tinitialize_low_tdesc call.\n\t* linux-x86-tdesc-selftest.c: Remove file.\n\t* linux-x86-tdesc.h (initialize_low_tdesc): Remove.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.server/unittest.exp: Allow 0 unit tests to run.",
    "tree": {
      "sha": "279bb13c5cd574f712dd72f46a03bb0341059929",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/279bb13c5cd574f712dd72f46a03bb0341059929"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d4693039f950eefb983a66e3270209b738e4ce8a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4693039f950eefb983a66e3270209b738e4ce8a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d4693039f950eefb983a66e3270209b738e4ce8a"
    }
  ],
  "stats": {
    "total": 395,
    "additions": 29,
    "deletions": 366
  },
  "files": [
    {
      "sha": "bb9f811fbf2c682855b87595d00e6693cf0f9ee4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -1,3 +1,11 @@\n+2019-07-04  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* aarch64-tdep.c: Remove xml self tests.\n+\t* amd64-linux-tdep.c: Likewise.\n+\t* amd64-tdep.c: Likewise.\n+\t* i386-linux-tdep.c: Likewise.\n+\t* i386-tdep.c: Likewise.\n+\n 2019-07-03  Pedro Alves  <palves@redhat.com>\n \n \tPR cli/24732"
    },
    {
      "sha": "b945697fad34172fe7491b7bcd80444cfc836428",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -3430,8 +3430,6 @@ When on, AArch64 specific debugging is enabled.\"),\n \t\t\t    selftests::aarch64_analyze_prologue_test);\n   selftests::register_test (\"aarch64-process-record\",\n \t\t\t    selftests::aarch64_process_record_test);\n-  selftests::record_xml_tdesc (\"aarch64.xml\",\n-\t\t\t       aarch64_create_target_description (0, false));\n #endif\n }\n "
    },
    {
      "sha": "008817c38d3bcfd13f41ed12ede215ebd60bb44c",
      "filename": "gdb/amd64-linux-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/amd64-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/amd64-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-linux-tdep.c?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -2279,32 +2279,4 @@ _initialize_amd64_linux_tdep (void)\n \t\t\t  GDB_OSABI_LINUX, amd64_linux_init_abi);\n   gdbarch_register_osabi (bfd_arch_i386, bfd_mach_x64_32,\n \t\t\t  GDB_OSABI_LINUX, amd64_x32_linux_init_abi);\n-\n-#if GDB_SELF_TEST\n-  struct\n-  {\n-    const char *xml;\n-    uint64_t mask;\n-  } xml_masks[] = {\n-    { \"i386/amd64-linux.xml\", X86_XSTATE_SSE_MASK },\n-    { \"i386/amd64-avx-linux.xml\", X86_XSTATE_AVX_MASK },\n-    { \"i386/amd64-mpx-linux.xml\", X86_XSTATE_MPX_MASK },\n-    { \"i386/amd64-avx-mpx-linux.xml\", X86_XSTATE_AVX_MPX_MASK },\n-    { \"i386/amd64-avx-avx512-linux.xml\", X86_XSTATE_AVX_AVX512_MASK },\n-    { \"i386/amd64-avx-mpx-avx512-pku-linux.xml\",\n-      X86_XSTATE_AVX_MPX_AVX512_PKU_MASK },\n-    { \"i386/x32-linux.xml\", X86_XSTATE_SSE_MASK },\n-    { \"i386/x32-avx-linux.xml\", X86_XSTATE_AVX_MASK },\n-    { \"i386/x32-avx-avx512-linux.xml\", X86_XSTATE_AVX_AVX512_MASK },\n-  };\n-\n-  for (auto &a : xml_masks)\n-    {\n-      auto tdesc = amd64_linux_read_description (a.mask,\n-\t\t\t\t\t\t startswith (a.xml,\n-\t\t\t\t\t\t\t     \"i386/x32\"));\n-\n-      selftests::record_xml_tdesc (a.xml, tdesc);\n-    }\n-#endif /* GDB_SELF_TEST */\n }"
    },
    {
      "sha": "f02b007afdaca86e6bf7d474f94fbbab26df850e",
      "filename": "gdb/amd64-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/amd64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/amd64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-tdep.c?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -3318,29 +3318,6 @@ _initialize_amd64_tdep (void)\n  \t\t\t  amd64_none_init_abi);\n   gdbarch_register_osabi (bfd_arch_i386, bfd_mach_x64_32, GDB_OSABI_NONE,\n  \t\t\t  amd64_x32_none_init_abi);\n-\n-#if GDB_SELF_TEST\n-  struct\n-  {\n-    const char *xml;\n-    uint64_t mask;\n-  } xml_masks[] = {\n-    { \"i386/amd64.xml\", X86_XSTATE_SSE_MASK },\n-    { \"i386/amd64-avx.xml\", X86_XSTATE_AVX_MASK },\n-    { \"i386/amd64-mpx.xml\", X86_XSTATE_MPX_MASK },\n-    { \"i386/amd64-avx-mpx.xml\", X86_XSTATE_AVX_MPX_MASK },\n-    { \"i386/amd64-avx-avx512.xml\", X86_XSTATE_AVX_AVX512_MASK },\n-    { \"i386/amd64-avx-mpx-avx512-pku.xml\",\n-      X86_XSTATE_AVX_MPX_AVX512_PKU_MASK },\n-  };\n-\n-  for (auto &a : xml_masks)\n-    {\n-      auto tdesc = amd64_target_description (a.mask, true);\n-\n-      selftests::record_xml_tdesc (a.xml, tdesc);\n-    }\n-#endif /* GDB_SELF_TEST */\n }\n \f\n "
    },
    {
      "sha": "f3518368996e08f679165e1510b6e373915116f3",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -1,3 +1,15 @@\n+2019-07-04  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* configure.srv: Remove legacy xml.\n+\t* linux-aarch64-low.c (initialize_low_arch): Remove\n+\tinitialize_low_tdesc call.\n+\t* linux-aarch64-tdesc-selftest.c: Remove file.\n+\t* linux-aarch64-tdesc.h (initialize_low_tdesc): Remove.\n+\t* linux-x86-low.c (initialize_low_arch): Remove\n+\tinitialize_low_tdesc call.\n+\t* linux-x86-tdesc-selftest.c: Remove file.\n+\t* linux-x86-tdesc.h (initialize_low_tdesc): Remove.\n+\n 2019-06-20  Tom de Vries  <tdevries@suse.de>\n \n \t* linux-s390-ipa.c (get_ipa_tdesc)[!__s390x__]: Use"
    },
    {
      "sha": "c20177ef1836313659a17a7971cad580beee6753",
      "filename": "gdb/gdbserver/configure.srv",
      "status": "modified",
      "additions": 4,
      "deletions": 22,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/gdbserver/configure.srv",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/gdbserver/configure.srv",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/configure.srv?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -24,14 +24,6 @@\n # Default hostio_last_error implementation\n srv_hostio_err_objs=\"hostio-errno.o\"\n \n-if $enable_unittests; then\n-   srv_i386_linux_regobj=\"i386-linux.o i386-avx-linux.o i386-avx-avx512-linux.o i386-avx-mpx-avx512-pku-linux.o i386-mpx-linux.o i386-avx-mpx-linux.o i386-mmx-linux.o linux-x86-tdesc-selftest.o\"\n-   srv_amd64_linux_regobj=\"amd64-linux.o amd64-avx-linux.o amd64-avx-avx512-linux.o amd64-avx-mpx-avx512-pku-linux.o amd64-mpx-linux.o amd64-avx-mpx-linux.o x32-linux.o x32-avx-linux.o x32-avx-avx512-linux.o\"\n-else\n-   srv_i386_linux_regobj=\"\"\n-   srv_amd64_linux_regobj=\"\"\n-fi\n-\n ipa_ppc_linux_regobj=\"powerpc-32l-ipa.o powerpc-altivec32l-ipa.o powerpc-cell32l-ipa.o powerpc-vsx32l-ipa.o powerpc-isa205-32l-ipa.o powerpc-isa205-altivec32l-ipa.o powerpc-isa205-vsx32l-ipa.o powerpc-isa205-ppr-dscr-vsx32l-ipa.o powerpc-isa207-vsx32l-ipa.o powerpc-isa207-htm-vsx32l-ipa.o powerpc-e500l-ipa.o powerpc-64l-ipa.o powerpc-altivec64l-ipa.o powerpc-cell64l-ipa.o powerpc-vsx64l-ipa.o powerpc-isa205-64l-ipa.o powerpc-isa205-altivec64l-ipa.o powerpc-isa205-vsx64l-ipa.o powerpc-isa205-ppr-dscr-vsx64l-ipa.o powerpc-isa207-vsx64l-ipa.o powerpc-isa207-htm-vsx64l-ipa.o\"\n \n # Linux object files.  This is so we don't have to repeat\n@@ -41,12 +33,7 @@ srv_linux_obj=\"linux-low.o linux-osdata.o linux-procfs.o linux-ptrace.o linux-wa\n # Input is taken from the \"${target}\" variable.\n \n case \"${target}\" in\n-  aarch64*-*-linux*)\n-\t\t\tsrv_regobj=\"arm-with-neon.o\"\n-\t\t\tif $enable_unittests; then\n-\t\t\t  srv_regobj=\"${srv_regobj} aarch64.o\"\n-\t\t\t  srv_regobj=\"${srv_regobj} linux-aarch64-tdesc-selftest.o\"\n-                        fi\n+  aarch64*-*-linux*)\tsrv_regobj=\"arm-with-neon.o\"\n \t\t\tsrv_tgtobj=\"linux-aarch64-low.o aarch64-linux-hw-point.o\"\n \t\t\tsrv_tgtobj=\"$srv_tgtobj linux-aarch32-low.o\"\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} arch/arm.o\"\n@@ -110,12 +97,7 @@ case \"${target}\" in\n \t\t\tsrv_tgtobj=\"x86-low.o x86-dregs.o win32-low.o win32-i386-low.o\"\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} arch/i386.o\"\n \t\t\t;;\n-  i[34567]86-*-linux*)\tsrv_regobj=\"$srv_i386_linux_regobj\"\n-\t\t\tif test \"$gdb_cv_i386_is_x86_64\" = yes ; then\n-\t\t\t    srv_regobj=\"$srv_regobj $srv_amd64_linux_regobj\"\n-\t\t\t    srv_tgtobj=\"amd64-linux-siginfo.o\"\n-\t\t\tfi\n-\t\t\tsrv_tgtobj=\"${srv_tgtobj} arch/i386.o\"\n+  i[34567]86-*-linux*)\tsrv_tgtobj=\"${srv_tgtobj} arch/i386.o\"\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} $srv_linux_obj linux-x86-low.o x86-low.o x86-dregs.o i387-fp.o\"\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} linux-x86-tdesc.o\"\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} linux-btrace.o x86-linux.o\"\n@@ -382,8 +364,8 @@ case \"${target}\" in\n \t\t\tsrv_linux_usrregs=yes\n \t\t\tsrv_linux_thread_db=yes\n \t\t\t;;\n-  x86_64-*-linux*)\tsrv_regobj=\"$srv_amd64_linux_regobj $srv_i386_linux_regobj\"\n-\t\t\tsrv_tgtobj=\"$srv_linux_obj linux-x86-low.o x86-low.o x86-dregs.o i387-fp.o\"\n+  x86_64-*-linux*)\tsrv_tgtobj=\"$srv_linux_obj linux-x86-low.o x86-low.o\"\n+\t\t\tsrv_tgtobj=\"${srv_tgtobj} x86-dregs.o i387-fp.o\"\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} arch/i386.o arch/amd64.o\"\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} linux-x86-tdesc.o\"\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} linux-btrace.o x86-linux.o\""
    },
    {
      "sha": "5aea5de3726cd1f230417e3f43aa2e0491d98343",
      "filename": "gdb/gdbserver/linux-aarch64-low.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/gdbserver/linux-aarch64-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/gdbserver/linux-aarch64-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch64-low.c?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -3097,8 +3097,4 @@ initialize_low_arch (void)\n \n   initialize_regsets_info (&aarch64_regsets_info);\n   initialize_regsets_info (&aarch64_sve_regsets_info);\n-\n-#if GDB_SELF_TEST\n-  initialize_low_tdesc ();\n-#endif\n }"
    },
    {
      "sha": "bf24a27c598b78d1ed0ede3c6409b52086a291f0",
      "filename": "gdb/gdbserver/linux-aarch64-tdesc-selftest.c",
      "status": "removed",
      "additions": 0,
      "deletions": 45,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d4693039f950eefb983a66e3270209b738e4ce8a/gdb/gdbserver/linux-aarch64-tdesc-selftest.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d4693039f950eefb983a66e3270209b738e4ce8a/gdb/gdbserver/linux-aarch64-tdesc-selftest.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch64-tdesc-selftest.c?ref=d4693039f950eefb983a66e3270209b738e4ce8a",
      "patch": "@@ -1,45 +0,0 @@\n-/* Copyright (C) 2017-2019 Free Software Foundation, Inc.\n-\n-   This file is part of GDB.\n-\n-   This program is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3 of the License, or\n-   (at your option) any later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n-\n-#include \"server.h\"\n-#include \"tdesc.h\"\n-#include \"common/selftest.h\"\n-#include \"linux-aarch64-tdesc.h\"\n-\n-/* Defined in auto-generated file features/aarch64.c.  */\n-void init_registers_aarch64 (void);\n-extern const struct target_desc *tdesc_aarch64;\n-\n-namespace selftests {\n-namespace tdesc {\n-static void\n-aarch64_tdesc_test ()\n-{\n-  const target_desc *tdesc = aarch64_linux_read_description (0, false);\n-  SELF_CHECK (*tdesc == *tdesc_aarch64);\n-}\n-}\n-} // namespace selftests\n-\n-void\n-initialize_low_tdesc ()\n-{\n-  init_registers_aarch64 ();\n-\n-  selftests::register_test (\"aarch64-tdesc\",\n-\t\t\t    selftests::tdesc::aarch64_tdesc_test);\n-}"
    },
    {
      "sha": "0cd9adc7d70f4208682df4d75bc07d4b228adcda",
      "filename": "gdb/gdbserver/linux-aarch64-tdesc.h",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/gdbserver/linux-aarch64-tdesc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/gdbserver/linux-aarch64-tdesc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch64-tdesc.h?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -22,8 +22,4 @@\n \n const target_desc * aarch64_linux_read_description (uint64_t vq, bool pauth_p);\n \n-#if GDB_SELF_TEST\n-void initialize_low_tdesc ();\n-#endif\n-\n #endif /* GDBSERVER_LINUX_AARCH64_TDESC_H */"
    },
    {
      "sha": "db240e2bc46ce3ada2c981490947d41668f66e00",
      "filename": "gdb/gdbserver/linux-x86-low.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/gdbserver/linux-x86-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/gdbserver/linux-x86-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-x86-low.c?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -2911,10 +2911,6 @@ initialize_low_arch (void)\n   tdesc_amd64_linux_no_xml->xmltarget = xmltarget_amd64_linux_no_xml;\n #endif\n \n-#if GDB_SELF_TEST\n-  initialize_low_tdesc ();\n-#endif\n-\n   tdesc_i386_linux_no_xml = allocate_target_description ();\n   copy_target_description (tdesc_i386_linux_no_xml,\n \t\t\t   i386_linux_read_description (X86_XSTATE_SSE_MASK));"
    },
    {
      "sha": "50474b3668cc44145896e115bcde318ca690aec6",
      "filename": "gdb/gdbserver/linux-x86-tdesc-selftest.c",
      "status": "removed",
      "additions": 0,
      "deletions": 183,
      "changes": 183,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d4693039f950eefb983a66e3270209b738e4ce8a/gdb/gdbserver/linux-x86-tdesc-selftest.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d4693039f950eefb983a66e3270209b738e4ce8a/gdb/gdbserver/linux-x86-tdesc-selftest.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-x86-tdesc-selftest.c?ref=d4693039f950eefb983a66e3270209b738e4ce8a",
      "patch": "@@ -1,183 +0,0 @@\n-/* Copyright (C) 2017-2019 Free Software Foundation, Inc.\n-\n-   This file is part of GDB.\n-\n-   This program is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3 of the License, or\n-   (at your option) any later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n-\n-#include \"server.h\"\n-#include \"linux-x86-tdesc.h\"\n-#include \"tdesc.h\"\n-#include \"common/selftest.h\"\n-#include \"common/x86-xstate.h\"\n-\n-/* Defined in auto-generated file i386-linux.c.  */\n-void init_registers_i386_linux (void);\n-extern const struct target_desc *tdesc_i386_linux;\n-\n-/* Defined in auto-generated file i386-mmx-linux.c.  */\n-void init_registers_i386_mmx_linux (void);\n-extern const struct target_desc *tdesc_i386_mmx_linux;\n-\n-/* Defined in auto-generated file i386-avx-linux.c.  */\n-void init_registers_i386_avx_linux (void);\n-extern const struct target_desc *tdesc_i386_avx_linux;\n-\n-/* Defined in auto-generated file i386-avx-mpx-linux.c.  */\n-void init_registers_i386_avx_mpx_linux (void);\n-extern const struct target_desc *tdesc_i386_avx_mpx_linux;\n-\n-/* Defined in auto-generated file i386-avx-avx512-linux.c.  */\n-void init_registers_i386_avx_avx512_linux (void);\n-extern const struct target_desc *tdesc_i386_avx_avx512_linux;\n-\n-/* Defined in auto-generated file i386-avx-mpx-avx512-linux.c.  */\n-void init_registers_i386_avx_mpx_avx512_pku_linux (void);\n-extern const struct target_desc *tdesc_i386_avx_mpx_avx512_pku_linux;\n-\n-/* Defined in auto-generated file i386-mpx-linux.c.  */\n-void init_registers_i386_mpx_linux (void);\n-extern const struct target_desc *tdesc_i386_mpx_linux;\n-\n-#ifdef __x86_64__\n-\n-/* Defined in auto-generated file amd64-linux.c.  */\n-void init_registers_amd64_linux (void);\n-extern const struct target_desc *tdesc_amd64_linux;\n-\n-/* Defined in auto-generated file amd64-avx-linux.c.  */\n-void init_registers_amd64_avx_linux (void);\n-extern const struct target_desc *tdesc_amd64_avx_linux;\n-\n-/* Defined in auto-generated file amd64-avx-avx512-linux.c.  */\n-void init_registers_amd64_avx_avx512_linux (void);\n-extern const struct target_desc *tdesc_amd64_avx_avx512_linux;\n-\n-/* Defined in auto-generated file amd64-avx-mpx-avx512-pku-linux.c.  */\n-void init_registers_amd64_avx_mpx_avx512_pku_linux (void);\n-extern const struct target_desc *tdesc_amd64_avx_mpx_avx512_pku_linux;\n-\n-/* Defined in auto-generated file amd64-avx-mpx-linux.c.  */\n-void init_registers_amd64_avx_mpx_linux (void);\n-extern const struct target_desc *tdesc_amd64_avx_mpx_linux;\n-\n-/* Defined in auto-generated file amd64-mpx-linux.c.  */\n-void init_registers_amd64_mpx_linux (void);\n-extern const struct target_desc *tdesc_amd64_mpx_linux;\n-\n-/* Defined in auto-generated file x32-linux.c.  */\n-void init_registers_x32_linux (void);\n-extern const struct target_desc *tdesc_x32_linux;\n-\n-/* Defined in auto-generated file x32-avx-linux.c.  */\n-void init_registers_x32_avx_linux (void);\n-extern const struct target_desc *tdesc_x32_avx_linux;\n-\n-/* Defined in auto-generated file x32-avx-avx512-linux.c.  */\n-void init_registers_x32_avx_avx512_linux (void);\n-extern const struct target_desc *tdesc_x32_avx_avx512_linux;\n-\n-#endif\n-\n-namespace selftests {\n-namespace tdesc {\n-static void\n-i386_tdesc_test ()\n-{\n-  struct\n-  {\n-    unsigned int mask;\n-    const target_desc *tdesc;\n-  } tdesc_tests[] = {\n-    { X86_XSTATE_X87, tdesc_i386_mmx_linux },\n-    { X86_XSTATE_SSE_MASK, tdesc_i386_linux },\n-    { X86_XSTATE_AVX_MASK, tdesc_i386_avx_linux },\n-    { X86_XSTATE_MPX_MASK, tdesc_i386_mpx_linux },\n-    { X86_XSTATE_AVX_MPX_MASK, tdesc_i386_avx_mpx_linux },\n-    { X86_XSTATE_AVX_AVX512_MASK, tdesc_i386_avx_avx512_linux },\n-    { X86_XSTATE_AVX_MPX_AVX512_PKU_MASK, tdesc_i386_avx_mpx_avx512_pku_linux }\n-  };\n-\n-  for (auto &elem : tdesc_tests)\n-    {\n-      const target_desc *tdesc = i386_linux_read_description (elem.mask);\n-\n-      SELF_CHECK (*tdesc == *elem.tdesc);\n-    }\n-}\n-\n-#ifdef __x86_64__\n-\n-static void\n-amd64_tdesc_test ()\n-{\n-  struct\n-  {\n-    unsigned int mask;\n-    const target_desc *tdesc[2];\n-  } tdesc_tests[] = {\n-    { X86_XSTATE_SSE_MASK, { tdesc_amd64_linux, tdesc_x32_linux } },\n-    { X86_XSTATE_AVX_MASK, { tdesc_amd64_avx_linux, tdesc_x32_avx_linux } },\n-    { X86_XSTATE_MPX_MASK, { tdesc_amd64_mpx_linux, tdesc_x32_avx_linux } },\n-    { X86_XSTATE_AVX_MPX_MASK, { tdesc_amd64_avx_mpx_linux,\n-\t\t\t\t tdesc_x32_avx_linux } },\n-    { X86_XSTATE_AVX_AVX512_MASK, { tdesc_amd64_avx_avx512_linux,\n-      tdesc_x32_avx_avx512_linux } },\n-    { X86_XSTATE_AVX_MPX_AVX512_PKU_MASK,\n-      { tdesc_amd64_avx_mpx_avx512_pku_linux,  tdesc_x32_avx_avx512_linux } },\n-  };\n-\n-  for (auto &elem : tdesc_tests)\n-    {\n-      for (int i = 0; i < 2; i++)\n-\t{\n-\t  const target_desc *tdesc = amd64_linux_read_description (elem.mask,\n-\t\t\t\t\t\t\t\t   i);\n-\n-\t  SELF_CHECK (*tdesc == *elem.tdesc[i]);\n-\t}\n-    }\n-}\n-\n-#endif\n-}\n-} // namespace selftests\n-\n-void\n-initialize_low_tdesc ()\n-{\n-  init_registers_i386_linux ();\n-  init_registers_i386_mmx_linux ();\n-  init_registers_i386_avx_linux ();\n-  init_registers_i386_mpx_linux ();\n-  init_registers_i386_avx_mpx_linux ();\n-  init_registers_i386_avx_avx512_linux ();\n-  init_registers_i386_avx_mpx_avx512_pku_linux ();\n-\n-  selftests::register_test (\"i386-tdesc\", selftests::tdesc::i386_tdesc_test);\n-\n-#ifdef __x86_64__\n-  init_registers_x32_linux ();\n-  init_registers_x32_avx_linux ();\n-  init_registers_x32_avx_avx512_linux ();\n-\n-  init_registers_amd64_linux ();\n-  init_registers_amd64_avx_linux ();\n-  init_registers_amd64_mpx_linux ();\n-  init_registers_amd64_avx_mpx_linux ();\n-  init_registers_amd64_avx_avx512_linux ();\n-  init_registers_amd64_avx_mpx_avx512_pku_linux ();\n-\n-  selftests::register_test (\"amd64-tdesc\", selftests::tdesc::amd64_tdesc_test);\n-#endif\n-}"
    },
    {
      "sha": "bca9b64bca54046f9b03dec6a600dd1074234309",
      "filename": "gdb/gdbserver/linux-x86-tdesc.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/gdbserver/linux-x86-tdesc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/gdbserver/linux-x86-tdesc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-x86-tdesc.h?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -53,6 +53,4 @@ const struct target_desc *amd64_linux_read_description (uint64_t xcr0,\n \n const struct target_desc *i386_linux_read_description (uint64_t xcr0);\n \n-void initialize_low_tdesc ();\n-\n #endif /* GDBSERVER_LINUX_X86_TDESC_H */"
    },
    {
      "sha": "4d94ea659aa2365233ac0e03766eeccd62a02841",
      "filename": "gdb/i386-linux-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/i386-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/i386-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-linux-tdep.c?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -1081,28 +1081,4 @@ _initialize_i386_linux_tdep (void)\n {\n   gdbarch_register_osabi (bfd_arch_i386, 0, GDB_OSABI_LINUX,\n \t\t\t  i386_linux_init_abi);\n-\n-#if GDB_SELF_TEST\n-  struct\n-  {\n-    const char *xml;\n-    uint64_t mask;\n-  } xml_masks[] = {\n-    { \"i386/i386-linux.xml\", X86_XSTATE_SSE_MASK },\n-    { \"i386/i386-mmx-linux.xml\", X86_XSTATE_X87_MASK },\n-    { \"i386/i386-avx-linux.xml\", X86_XSTATE_AVX_MASK },\n-    { \"i386/i386-mpx-linux.xml\", X86_XSTATE_MPX_MASK },\n-    { \"i386/i386-avx-mpx-linux.xml\", X86_XSTATE_AVX_MPX_MASK },\n-    { \"i386/i386-avx-avx512-linux.xml\", X86_XSTATE_AVX_AVX512_MASK },\n-    { \"i386/i386-avx-mpx-avx512-pku-linux.xml\",\n-      X86_XSTATE_AVX_MPX_AVX512_PKU_MASK },\n-  };\n-\n-  for (auto &a : xml_masks)\n-    {\n-      auto tdesc = i386_linux_read_description (a.mask);\n-\n-      selftests::record_xml_tdesc (a.xml, tdesc);\n-    }\n-#endif /* GDB_SELF_TEST */\n }"
    },
    {
      "sha": "e3dd4b3238dcdd8c98f64449ccc0afb152d6876a",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -9098,28 +9098,4 @@ Show Intel Memory Protection Extensions specific variables.\"),\n \n   /* Tell remote stub that we support XML target description.  */\n   register_remote_support_xml (\"i386\");\n-\n-#if GDB_SELF_TEST\n-  struct\n-  {\n-    const char *xml;\n-    uint64_t mask;\n-  } xml_masks[] = {\n-    { \"i386/i386.xml\", X86_XSTATE_SSE_MASK },\n-    { \"i386/i386-mmx.xml\", X86_XSTATE_X87_MASK },\n-    { \"i386/i386-avx.xml\", X86_XSTATE_AVX_MASK },\n-    { \"i386/i386-mpx.xml\", X86_XSTATE_MPX_MASK },\n-    { \"i386/i386-avx-mpx.xml\", X86_XSTATE_AVX_MPX_MASK },\n-    { \"i386/i386-avx-avx512.xml\", X86_XSTATE_AVX_AVX512_MASK },\n-    { \"i386/i386-avx-mpx-avx512-pku.xml\",\n-      X86_XSTATE_AVX_MPX_AVX512_PKU_MASK },\n-  };\n-\n-  for (auto &a : xml_masks)\n-    {\n-      auto tdesc = i386_target_description (a.mask, false);\n-\n-      selftests::record_xml_tdesc (a.xml, tdesc);\n-    }\n-#endif /* GDB_SELF_TEST */\n }"
    },
    {
      "sha": "2ad89ac01f58d4e7aeace19d90b554d14908da0d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -1,3 +1,7 @@\n+2019-07-04  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* gdb.server/unittest.exp: Allow 0 unit tests to run.\n+\n 2019-07-03  Pedro Alves  <palves@redhat.com>\n \n \t* lib/gdb.exp (foreach_with_prefix): Use \"catch\" and"
    },
    {
      "sha": "5aa6e4c58f8ba9d5c5d1d1632c8192e0b7cf6d11",
      "filename": "gdb/testsuite/gdb.server/unittest.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/testsuite/gdb.server/unittest.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b40fda74b2af11a914d50f4e54c1472e1bd81fb/gdb/testsuite/gdb.server/unittest.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/unittest.exp?ref=2b40fda74b2af11a914d50f4e54c1472e1bd81fb",
      "patch": "@@ -35,7 +35,7 @@ gdb_expect {\n     -i $server_spawn_id\n     -re \"Ran ($decimal) unit tests, 0 failed\" {\n \tset num_ran $expect_out(1,string)\n-\tgdb_assert \"$num_ran > 0\" $test\n+\tgdb_assert \"$num_ran >= 0\" $test\n     }\n \n     -re \"Selftests have been disabled for this build.\\r\\n$\" {"
    }
  ]
}