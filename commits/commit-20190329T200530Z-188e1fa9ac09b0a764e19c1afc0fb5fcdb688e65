{
  "sha": "188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTg4ZTFmYTlhYzA5YjBhNzY0ZTE5YzFhZmMwZmI1ZmNkYjY4OGU2NQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-03-20T20:52:24Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-03-29T20:05:30Z"
    },
    "message": "Add usage for commands in printcmd.c\n\nI noticed that the help for \"info addr\" did not include a \"usage\"\nline; and when adding it I went through and fixed a few minor issues\nin printcmd.c:\n\n* Added usage lines to all commands\n* Updated the help text for some commands\n* Changed some help to use upper case metasyntactic variables\n* Removed some dead code\n\nRegression tested on x86-64 Fedora 29.\n\ngdb/ChangeLog\n2019-03-29  Tom Tromey  <tromey@adacore.com>\n\n\t* printcmd.c (_initialize_printcmd): Add usage lines.  Update some\n\thelp text.  Remove dead code.\n\ngdb/testsuite/ChangeLog\n2019-03-29  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.base/help.exp: Tighten apropos regexp.",
    "tree": {
      "sha": "7fbdb85711e8d4adcf4f41829a3e7b95f0bdcd5e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7fbdb85711e8d4adcf4f41829a3e7b95f0bdcd5e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2880242dd0b8538b68aece7d9e8b1678dcdfd0ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2880242dd0b8538b68aece7d9e8b1678dcdfd0ab",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2880242dd0b8538b68aece7d9e8b1678dcdfd0ab"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 47,
    "deletions": 24
  },
  "files": [
    {
      "sha": "a79a860dda317a31bb95004b4f4477cc7f25dadd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65",
      "patch": "@@ -1,3 +1,8 @@\n+2019-03-29  Tom Tromey  <tromey@adacore.com>\n+\n+\t* printcmd.c (_initialize_printcmd): Add usage lines.  Update some\n+\thelp text.  Remove dead code.\n+\n 2019-03-29  Keith Seitz  <keiths@redhat.com>\n \n \tFrom Siddhesh Poyarekar:"
    },
    {
      "sha": "bdaaec81495ca24973602ed2faf80c27656b46bc",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 37,
      "deletions": 23,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65",
      "patch": "@@ -2652,10 +2652,12 @@ _initialize_printcmd (void)\n   gdb::observers::free_objfile.attach (clear_dangling_display_expressions);\n \n   add_info (\"address\", info_address_command,\n-\t    _(\"Describe where symbol SYM is stored.\"));\n+\t    _(\"Describe where symbol SYM is stored.\\n\\\n+Usage: info address SYM\"));\n \n   add_info (\"symbol\", info_symbol_command, _(\"\\\n Describe what symbol is at location ADDR.\\n\\\n+Usage: info symbol ADDR\\n\\\n Only for symbols with fixed locations (global or static scope).\"));\n \n   add_com (\"x\", class_vars, x_command, _(\"\\\n@@ -2673,16 +2675,13 @@ Defaults for format and size letters are those previously used.\\n\\\n Default count is 1.  Default address is following last thing printed\\n\\\n with this command or \\\"print\\\".\"));\n \n-#if 0\n-  add_com (\"whereis\", class_vars, whereis_command,\n-\t   _(\"Print line number and file of definition of variable.\"));\n-#endif\n-\n   add_info (\"display\", info_display_command, _(\"\\\n-Expressions to display when program stops, with code numbers.\"));\n+Expressions to display when program stops, with code numbers.\\n\\\n+Usage: info display\"));\n \n   add_cmd (\"undisplay\", class_vars, undisplay_command, _(\"\\\n Cancel some expressions to be displayed when program stops.\\n\\\n+Usage: undisplay [NUM]...\\n\\\n Arguments are the code numbers of the expressions to stop displaying.\\n\\\n No argument means cancel all automatic-display expressions.\\n\\\n \\\"delete display\\\" has the same effect as this command.\\n\\\n@@ -2691,6 +2690,7 @@ Do \\\"info display\\\" to see current list of code numbers.\"),\n \n   add_com (\"display\", class_vars, display_command, _(\"\\\n Print value of expression EXP each time the program stops.\\n\\\n+Usage: display[/FMT] EXP\\n\\\n /FMT may be used before EXP as in the \\\"print\\\" command.\\n\\\n /FMT \\\"i\\\" or \\\"s\\\" or including a size-letter is allowed,\\n\\\n as in the \\\"x\\\" command, and then EXP is used to get the address to examine\\n\\\n@@ -2700,35 +2700,41 @@ Use \\\"undisplay\\\" to cancel display requests previously made.\"));\n \n   add_cmd (\"display\", class_vars, enable_display_command, _(\"\\\n Enable some expressions to be displayed when program stops.\\n\\\n+Usage: enable display [NUM]...\\n\\\n Arguments are the code numbers of the expressions to resume displaying.\\n\\\n No argument means enable all automatic-display expressions.\\n\\\n Do \\\"info display\\\" to see current list of code numbers.\"), &enablelist);\n \n   add_cmd (\"display\", class_vars, disable_display_command, _(\"\\\n Disable some expressions to be displayed when program stops.\\n\\\n+Usage: disable display [NUM]...\\n\\\n Arguments are the code numbers of the expressions to stop displaying.\\n\\\n No argument means disable all automatic-display expressions.\\n\\\n Do \\\"info display\\\" to see current list of code numbers.\"), &disablelist);\n \n   add_cmd (\"display\", class_vars, undisplay_command, _(\"\\\n Cancel some expressions to be displayed when program stops.\\n\\\n+Usage: delete display [NUM]...\\n\\\n Arguments are the code numbers of the expressions to stop displaying.\\n\\\n No argument means cancel all automatic-display expressions.\\n\\\n Do \\\"info display\\\" to see current list of code numbers.\"), &deletelist);\n \n   add_com (\"printf\", class_vars, printf_command, _(\"\\\n Formatted printing, like the C \\\"printf\\\" function.\\n\\\n-Usage: printf \\\"format string\\\", arg1, arg2, arg3, ..., argn\\n\\\n+Usage: printf \\\"format string\\\", ARG1, ARG2, ARG3, ..., ARGN\\n\\\n This supports most C printf format specifications, like %s, %d, etc.\"));\n \n   add_com (\"output\", class_vars, output_command, _(\"\\\n Like \\\"print\\\" but don't put in value history and don't print newline.\\n\\\n+Usage: output EXP\\n\\\n This is useful in user-defined commands.\"));\n \n   add_prefix_cmd (\"set\", class_vars, set_command, _(\"\\\n-Evaluate expression EXP and assign result to variable VAR, using assignment\\n\\\n-syntax appropriate for the current language (VAR = EXP or VAR := EXP for\\n\\\n-example).  VAR may be a debugger \\\"convenience\\\" variable (names starting\\n\\\n+Evaluate expression EXP and assign result to variable VAR\\n\\\n+Usage: set VAR = EXP\\n\\\n+This uses assignment syntax appropriate for the current language\\n\\\n+(VAR = EXP or VAR := EXP for example).\\n\\\n+VAR may be a debugger \\\"convenience\\\" variable (names starting\\n\\\n with $), a register (a few standard names starting with $), or an actual\\n\\\n variable in the program being debugged.  EXP is any valid expression.\\n\\\n Use \\\"set variable\\\" for variables with names identical to set subcommands.\\n\\\n@@ -2738,9 +2744,11 @@ You can see these environment settings with the \\\"show\\\" command.\"),\n \t\t  &setlist, \"set \", 1, &cmdlist);\n   if (dbx_commands)\n     add_com (\"assign\", class_vars, set_command, _(\"\\\n-Evaluate expression EXP and assign result to variable VAR, using assignment\\n\\\n-syntax appropriate for the current language (VAR = EXP or VAR := EXP for\\n\\\n-example).  VAR may be a debugger \\\"convenience\\\" variable (names starting\\n\\\n+Evaluate expression EXP and assign result to variable VAR\\n\\\n+Usage: assign VAR = EXP\\n\\\n+This uses assignment syntax appropriate for the current language\\n\\\n+(VAR = EXP or VAR := EXP for example).\\n\\\n+VAR may be a debugger \\\"convenience\\\" variable (names starting\\n\\\n with $), a register (a few standard names starting with $), or an actual\\n\\\n variable in the program being debugged.  EXP is any valid expression.\\n\\\n Use \\\"set variable\\\" for variables with names identical to set subcommands.\\n\\\n@@ -2750,15 +2758,18 @@ You can see these environment settings with the \\\"show\\\" command.\"));\n   /* \"call\" is the same as \"set\", but handy for dbx users to call fns.  */\n   c = add_com (\"call\", class_vars, call_command, _(\"\\\n Call a function in the program.\\n\\\n+Usage: call EXP\\n\\\n The argument is the function name and arguments, in the notation of the\\n\\\n current working language.  The result is printed and saved in the value\\n\\\n history, if it is not void.\"));\n   set_cmd_completer (c, expression_completer);\n \n   add_cmd (\"variable\", class_vars, set_command, _(\"\\\n-Evaluate expression EXP and assign result to variable VAR, using assignment\\n\\\n-syntax appropriate for the current language (VAR = EXP or VAR := EXP for\\n\\\n-example).  VAR may be a debugger \\\"convenience\\\" variable (names starting\\n\\\n+Evaluate expression EXP and assign result to variable VAR\\n\\\n+Usage: set variable VAR = EXP\\n\\\n+This uses assignment syntax appropriate for the current language\\n\\\n+(VAR = EXP or VAR := EXP for example).\\n\\\n+VAR may be a debugger \\\"convenience\\\" variable (names starting\\n\\\n with $), a register (a few standard names starting with $), or an actual\\n\\\n variable in the program being debugged.  EXP is any valid expression.\\n\\\n This may usually be abbreviated to simply \\\"set\\\".\"),\n@@ -2767,6 +2778,7 @@ This may usually be abbreviated to simply \\\"set\\\".\"),\n \n   c = add_com (\"print\", class_vars, print_command, _(\"\\\n Print value of expression EXP.\\n\\\n+Usage: print[/FMT] EXP\\n\\\n Variables accessible are those of the lexical environment of the selected\\n\\\n stack frame, plus all those whose scope is global or an entire file.\\n\\\n \\n\\\n@@ -2793,8 +2805,8 @@ but no count or size letter (see \\\"x\\\" command).\"));\n \n   add_setshow_uinteger_cmd (\"max-symbolic-offset\", no_class,\n \t\t\t    &max_symbolic_offset, _(\"\\\n-Set the largest offset that will be printed in <symbol+1234> form.\"), _(\"\\\n-Show the largest offset that will be printed in <symbol+1234> form.\"), _(\"\\\n+Set the largest offset that will be printed in <SYMBOL+1234> form.\"), _(\"\\\n+Show the largest offset that will be printed in <SYMBOL+1234> form.\"), _(\"\\\n Tell GDB to only display the symbolic form of an address if the\\n\\\n offset between the closest earlier symbol and the address is less than\\n\\\n the specified maximum offset.  The default is \\\"unlimited\\\", which tells GDB\\n\\\n@@ -2805,13 +2817,15 @@ it.  Zero is equivalent to \\\"unlimited\\\".\"),\n \t\t\t    &setprintlist, &showprintlist);\n   add_setshow_boolean_cmd (\"symbol-filename\", no_class,\n \t\t\t   &print_symbol_filename, _(\"\\\n-Set printing of source filename and line number with <symbol>.\"), _(\"\\\n-Show printing of source filename and line number with <symbol>.\"), NULL,\n+Set printing of source filename and line number with <SYMBOL>.\"), _(\"\\\n+Show printing of source filename and line number with <SYMBOL>.\"), NULL,\n \t\t\t   NULL,\n \t\t\t   show_print_symbol_filename,\n \t\t\t   &setprintlist, &showprintlist);\n \n   add_com (\"eval\", no_class, eval_command, _(\"\\\n-Convert \\\"printf format string\\\", arg1, arg2, arg3, ..., argn to\\n\\\n-a command line, and call it.\"));\n+Construct a GDB command and then evaluate it.\\n\\\n+Usage: eval \\\"format string\\\", ARG1, ARG2, ARG3, ..., ARGN\\n\\\n+Convert the arguments to a string as \\\"printf\\\" would, but then\\n\\\n+treat this string as a command line, and evaluate it.\"));\n }"
    },
    {
      "sha": "c0310ca5258edd92b55a72c77a846460d0d4a124",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65",
      "patch": "@@ -1,3 +1,7 @@\n+2019-03-29  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.base/help.exp: Tighten apropos regexp.\n+\n 2019-03-29  Keith Seitz  <keiths@redhat.com>\n \n \t* gdb.fortran/array-bounds.exp: New file."
    },
    {
      "sha": "511e7d6238574641d7c0f280cb65fce2d2a02009",
      "filename": "gdb/testsuite/gdb.base/help.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65/gdb/testsuite/gdb.base/help.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65/gdb/testsuite/gdb.base/help.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/help.exp?ref=188e1fa9ac09b0a764e19c1afc0fb5fcdb688e65",
      "patch": "@@ -120,7 +120,7 @@ gdb_test \"help info bogus-gdb-command\" \"Undefined info command: \\\"bogus-gdb-comm\n gdb_test \"help gotcha\" \"Undefined command: \\\"gotcha\\\"\\.  Try \\\"help\\\"\\.\" \"help gotcha\"\n \n # test apropos regex\n-gdb_test \"apropos \\\\\\(print\\[\\^ bsiedf\\\\\\\".-\\]\\\\\\)\" \"handle -- Specify how to handle signals\"\n+gdb_test \"apropos \\\\\\(print\\[\\^\\[ bsiedf\\\\\\\".-\\]\\\\\\)\" \"handle -- Specify how to handle signals\"\n # test apropos >1 word string\n gdb_test \"apropos handle signal\" \"handle -- Specify how to handle signals\"\n # test apropos apropos"
    }
  ]
}