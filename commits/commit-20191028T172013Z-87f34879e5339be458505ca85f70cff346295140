{
  "sha": "87f34879e5339be458505ca85f70cff346295140",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODdmMzQ4NzllNTMzOWJlNDU4NTA1Y2E4NWY3MGNmZjM0NjI5NTE0MA==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-01T18:41:58Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-28T17:20:13Z"
    },
    "message": "Add a string_view version of startswith\n\nMakes sure that the string is longer than prefix, so that strncmp will\ndo the right thing even if the string is not null-terminated.\n\nFor use in my string_view conversion patch:\nhttps://sourceware.org/ml/gdb-patches/2019-10/msg00030.html\nhttps://gnutoolchain-gerrit.osci.io/r/c/binutils-gdb/+/125\n\ngdb/ChangeLog:\n\n2019-10-28  Christian Biesinger  <cbiesinger@google.com>\n\n\t* gdbsupport/common-utils.h (startswith): Add an overloaded version\n\tthat takes gdb::string_view arguments.\n\nChange-Id: I5389855de2fd70e7065a789a79374b0693651b71",
    "tree": {
      "sha": "29821d4b4a5077e384f42d2e82c0656c61a438ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/29821d4b4a5077e384f42d2e82c0656c61a438ab"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/87f34879e5339be458505ca85f70cff346295140",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87f34879e5339be458505ca85f70cff346295140",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/87f34879e5339be458505ca85f70cff346295140",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87f34879e5339be458505ca85f70cff346295140/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1ee3542c0a3830cac933ae56cc5f29e9c3f7c6ca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ee3542c0a3830cac933ae56cc5f29e9c3f7c6ca",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1ee3542c0a3830cac933ae56cc5f29e9c3f7c6ca"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 17,
    "deletions": 0
  },
  "files": [
    {
      "sha": "7059623788e7713547f3fa167ac2a4e19b1753bd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87f34879e5339be458505ca85f70cff346295140/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87f34879e5339be458505ca85f70cff346295140/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=87f34879e5339be458505ca85f70cff346295140",
      "patch": "@@ -1,3 +1,8 @@\n+2019-10-28  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* gdbsupport/common-utils.h (startswith): Add an overloaded version\n+\tthat takes gdb::string_view arguments.\n+\n 2019-10-26  Tom de Vries  <tdevries@suse.de>\n \n \t* aarch64-linux-tdep.c: Fix typos in comments."
    },
    {
      "sha": "23bf354a8bd1bedff5c6855ec0759acb430173bf",
      "filename": "gdb/gdbsupport/common-utils.h",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87f34879e5339be458505ca85f70cff346295140/gdb/gdbsupport/common-utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87f34879e5339be458505ca85f70cff346295140/gdb/gdbsupport/common-utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/common-utils.h?ref=87f34879e5339be458505ca85f70cff346295140",
      "patch": "@@ -43,6 +43,8 @@\n #endif\n #endif\n \n+#include \"gdb_string_view.h\"\n+\n /* xmalloc(), xrealloc() and xcalloc() have already been declared in\n    \"libiberty.h\". */\n \n@@ -118,6 +120,16 @@ startswith (const char *string, const char *pattern)\n   return strncmp (string, pattern, strlen (pattern)) == 0;\n }\n \n+/* Version of startswith that takes string_view arguments.  See comment\n+   above.  */\n+\n+static inline bool\n+startswith (gdb::string_view string, gdb::string_view pattern)\n+{\n+  return (string.length () >= pattern.length ()\n+\t  && strncmp (string.data (), pattern.data (), pattern.length ()) == 0);\n+}\n+\n ULONGEST strtoulst (const char *num, const char **trailer, int base);\n \n /* Skip leading whitespace characters in INP, returning an updated"
    }
  ]
}