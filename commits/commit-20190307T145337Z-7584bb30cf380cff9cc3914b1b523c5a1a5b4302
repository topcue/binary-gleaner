{
  "sha": "7584bb30cf380cff9cc3914b1b523c5a1a5b4302",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzU4NGJiMzBjZjM4MGNmZjljYzM5MTRiMWI1MjNjNWExYTViNDMwMg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-03-07T14:53:37Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-03-07T14:53:37Z"
    },
    "message": "gdb: Move value_from_host_double into value.c and make more use of it\n\nThe function value_from_host_double can be moved from f-lang.c into\nvalue.c as a generally useful function, and then used more widely.\n\nTested on X86-64/GNU Linux with no regressions.\n\ngdb/ChangeLog:\n\n\t* f-lang.c (value_from_host_double): Moved to...\n\t* value.c (value_from_host_double): ...here.\n\t* value.h (value_from_host_double): Declare.\n\t* guile/scm-math.c (vlscm_convert_typed_number): Use\n\tvalue_from_host_double.\n\t(vlscm_convert_number): Likewise.\n\t* guile/scm-value.c (gdbscm_value_to_real): Likewise.\n\t* python/py-value.c (convert_value_from_python): Likewise.",
    "tree": {
      "sha": "6a6bf77b40345eadf32c168a602575d5ab347fcd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6a6bf77b40345eadf32c168a602575d5ab347fcd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7584bb30cf380cff9cc3914b1b523c5a1a5b4302",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7584bb30cf380cff9cc3914b1b523c5a1a5b4302",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7584bb30cf380cff9cc3914b1b523c5a1a5b4302",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2c5ebf12393443eec1d666f613cbc70a6b72f49a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2c5ebf12393443eec1d666f613cbc70a6b72f49a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2c5ebf12393443eec1d666f613cbc70a6b72f49a"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 29,
    "deletions": 35
  },
  "files": [
    {
      "sha": "d3d6e5b4ee6d4d9c4251a1fede74b38669078c88",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7584bb30cf380cff9cc3914b1b523c5a1a5b4302",
      "patch": "@@ -1,3 +1,14 @@\n+2019-03-07  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* f-lang.c (value_from_host_double): Moved to...\n+\t* value.c (value_from_host_double): ...here.\n+\t* value.h (value_from_host_double): Declare.\n+\t* guile/scm-math.c (vlscm_convert_typed_number): Use\n+\tvalue_from_host_double.\n+\t(vlscm_convert_number): Likewise.\n+\t* guile/scm-value.c (gdbscm_value_to_real): Likewise.\n+\t* python/py-value.c (convert_value_from_python): Likewise.\n+\n 2019-03-06  Tom Tromey  <tom@tromey.com>\n \n \t* gcore.c (write_gcore_file): Use SCOPE_EXIT."
    },
    {
      "sha": "7bd119690b4049d2716eb825f2b14367be587b7d",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=7584bb30cf380cff9cc3914b1b523c5a1a5b4302",
      "patch": "@@ -241,20 +241,6 @@ f_collect_symbol_completion_matches (completion_tracker &tracker,\n \t\t\t\t\t\t      text, word, \":\", code);\n }\n \n-/* Create and return a value object of TYPE containing the value D.  The\n-   TYPE must be of TYPE_CODE_FLT, and must be large enough to hold D once\n-   it is converted to target format.  */\n-\n-static struct value *\n-value_from_host_double (struct type *type, double d)\n-{\n-  struct value *value = allocate_value (type);\n-  gdb_assert (TYPE_CODE (type) == TYPE_CODE_FLT);\n-  target_float_from_host_double (value_contents_raw (value),\n-                                 value_type (value), d);\n-  return value;\n-}\n-\n /* Special expression evaluation cases for Fortran.  */\n struct value *\n evaluate_subexp_f (struct type *expect_type, struct expression *exp,"
    },
    {
      "sha": "d351ed0522c132e0a0cfb1c6e81747c0dba19849",
      "filename": "gdb/guile/scm-math.c",
      "status": "modified",
      "additions": 2,
      "deletions": 14,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/guile/scm-math.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/guile/scm-math.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-math.c?ref=7584bb30cf380cff9cc3914b1b523c5a1a5b4302",
      "patch": "@@ -559,13 +559,7 @@ vlscm_convert_typed_number (const char *func_name, int obj_arg_pos, SCM obj,\n \t}\n     }\n   else if (TYPE_CODE (type) == TYPE_CODE_FLT)\n-    {\n-      struct value *value = allocate_value (type);\n-      target_float_from_host_double (value_contents_raw (value),\n-\t\t\t\t     value_type (value),\n-\t\t\t\t     scm_to_double (obj));\n-      return value;\n-    }\n+    return value_from_host_double (type, scm_to_double (obj));\n   else\n     {\n       *except_scmp = gdbscm_make_type_error (func_name, obj_arg_pos, obj,\n@@ -645,13 +639,7 @@ vlscm_convert_number (const char *func_name, int obj_arg_pos, SCM obj,\n \t\t\t\t   gdbscm_scm_to_ulongest (obj));\n     }\n   else if (scm_is_real (obj))\n-    {\n-      struct value *value = allocate_value (bt->builtin_double);\n-      target_float_from_host_double (value_contents_raw (value),\n-\t\t\t\t     value_type (value),\n-\t\t\t\t     scm_to_double (obj));\n-      return value;\n-    }\n+    return value_from_host_double (bt->builtin_double, scm_to_double (obj));\n \n   *except_scmp = gdbscm_make_out_of_range_error (func_name, obj_arg_pos, obj,\n \t\t\t_(\"value not a number representable on the target\"));"
    },
    {
      "sha": "658924b1197296311b627846aa3da916bef564b9",
      "filename": "gdb/guile/scm-value.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/guile/scm-value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/guile/scm-value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-value.c?ref=7584bb30cf380cff9cc3914b1b523c5a1a5b4302",
      "patch": "@@ -903,8 +903,7 @@ gdbscm_value_to_real (SCM self)\n       if (is_floating_value (value))\n \t{\n \t  d = target_float_to_host_double (value_contents (value), type);\n-\t  check = allocate_value (type);\n-\t  target_float_from_host_double (value_contents_raw (check), type, d);\n+\t  check = value_from_host_double (type, d);\n \t}\n       else if (TYPE_UNSIGNED (type))\n \t{"
    },
    {
      "sha": "dd6a536b6ade9fa6dd7cda18523b49242bbac994",
      "filename": "gdb/python/py-value.c",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/python/py-value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/python/py-value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-value.c?ref=7584bb30cf380cff9cc3914b1b523c5a1a5b4302",
      "patch": "@@ -1739,11 +1739,7 @@ convert_value_from_python (PyObject *obj)\n \t  double d = PyFloat_AsDouble (obj);\n \n \t  if (! PyErr_Occurred ())\n-\t    {\n-\t      value = allocate_value (builtin_type_pyfloat);\n-\t      target_float_from_host_double (value_contents_raw (value),\n-\t\t\t\t\t     value_type (value), d);\n-\t    }\n+\t    value = value_from_host_double (builtin_type_pyfloat, d);\n \t}\n       else if (gdbpy_is_string (obj))\n \t{"
    },
    {
      "sha": "dc297dfe0f9efaf827c84b58107c1e4a2d87141b",
      "filename": "gdb/value.c",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.c?ref=7584bb30cf380cff9cc3914b1b523c5a1a5b4302",
      "patch": "@@ -3430,6 +3430,19 @@ value_from_pointer (struct type *type, CORE_ADDR addr)\n   return val;\n }\n \n+/* Create and return a value object of TYPE containing the value D.  The\n+   TYPE must be of TYPE_CODE_FLT, and must be large enough to hold D once\n+   it is converted to target format.  */\n+\n+struct value *\n+value_from_host_double (struct type *type, double d)\n+{\n+  struct value *value = allocate_value (type);\n+  gdb_assert (TYPE_CODE (type) == TYPE_CODE_FLT);\n+  target_float_from_host_double (value_contents_raw (value),\n+\t\t\t\t value_type (value), d);\n+  return value;\n+}\n \n /* Create a value of type TYPE whose contents come from VALADDR, if it\n    is non-null, and whose memory address (in the inferior) is"
    },
    {
      "sha": "d3905cc354a775dd4c97ed558f4933e058f782de",
      "filename": "gdb/value.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/value.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7584bb30cf380cff9cc3914b1b523c5a1a5b4302/gdb/value.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.h?ref=7584bb30cf380cff9cc3914b1b523c5a1a5b4302",
      "patch": "@@ -669,6 +669,7 @@ extern void pack_long (gdb_byte *buf, struct type *type, LONGEST num);\n extern struct value *value_from_longest (struct type *type, LONGEST num);\n extern struct value *value_from_ulongest (struct type *type, ULONGEST num);\n extern struct value *value_from_pointer (struct type *type, CORE_ADDR addr);\n+extern struct value *value_from_host_double (struct type *type, double d);\n extern struct value *value_from_history_ref (const char *, const char **);\n extern struct value *value_from_component (struct value *, struct type *,\n \t\t\t\t\t   LONGEST);"
    }
  ]
}