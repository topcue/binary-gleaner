{
  "sha": "e19f8248297bb9864ff14368cc89d2446572837a",
  "node_id": "C_kwDOANOeidoAKGUxOWY4MjQ4Mjk3YmI5ODY0ZmYxNDM2OGNjODlkMjQ0NjU3MjgzN2E",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-11-24T19:22:43Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-11-24T19:34:36Z"
    },
    "message": "Revert (part of) \"gdb fix for catch-syscall.exp\"\n\nThis reverts (par of) commit ab198279120fe7937c0970a8bb881922726678f9.\nThis commit changed what the test expects when catching the execve\nsyscall based on the behavior seen on a Linux PowerPC machine.  That is,\nwe get an \"entry\" event, but no \"return\" event.  This is not what we get\non Linux with other architectures, though, and it seems like a\nPowerPC-specific bug.\n\nRevert the part of the patch related to this, but not the other hunk.\n\nChange-Id: I4248776e4299f10999487be96d4acd1b33639996",
    "tree": {
      "sha": "10f5e5dcefe2c864177aab06bab9f90294f0e3d8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/10f5e5dcefe2c864177aab06bab9f90294f0e3d8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e19f8248297bb9864ff14368cc89d2446572837a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e19f8248297bb9864ff14368cc89d2446572837a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e19f8248297bb9864ff14368cc89d2446572837a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e19f8248297bb9864ff14368cc89d2446572837a/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d8ed269e5c875845fcd0f1a25457eafe3f485249",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d8ed269e5c875845fcd0f1a25457eafe3f485249",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d8ed269e5c875845fcd0f1a25457eafe3f485249"
    }
  ],
  "stats": {
    "total": 4,
    "additions": 1,
    "deletions": 3
  },
  "files": [
    {
      "sha": "cdd5e2aec47b46e62c8846e2b5ed4c4968c10d64",
      "filename": "gdb/testsuite/gdb.base/catch-syscall.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e19f8248297bb9864ff14368cc89d2446572837a/gdb/testsuite/gdb.base/catch-syscall.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e19f8248297bb9864ff14368cc89d2446572837a/gdb/testsuite/gdb.base/catch-syscall.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/catch-syscall.exp?ref=e19f8248297bb9864ff14368cc89d2446572837a",
      "patch": "@@ -348,9 +348,7 @@ proc test_catch_syscall_execve {} {\n \t# Check for entry/return across the execve, making sure that the\n \t# syscall_state isn't lost when turning into a new process.\n \tinsert_catch_syscall_with_arg \"execve\"\n-\n-\t# Check that the execve is called.\n-\tcheck_call_to_syscall \"execve\"\n+\tcheck_continue \"execve\"\n \n \t# Continue to main so extended-remote can read files as needed.\n \t# (Otherwise that \"Reading\" output confuses gdb_continue_to_end.)"
    }
  ]
}