{
  "sha": "e755667f94f2579056fb5210eed525dafebb96f3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTc1NTY2N2Y5NGYyNTc5MDU2ZmI1MjEwZWVkNTI1ZGFmZWJiOTZmMw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-12-13T15:19:17Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-06-26T14:56:39Z"
    },
    "message": "libctf, elfcpp, gold: do not assume that <byteswap.h> contains bswap_*\n\nAt least one C library (uclibc-ng) defines some of these only when\nthe compiler is GCC.  We might as well test for all three cases and\nhandle any of them being missing.\n\nVery similar code exists in libctf and split between elfcpp and gold:\nfix both.\n\n(Also sync up elfcpp with a change made to libctf swap.h a few months\nago: since there is no out-of-line definition of the bswap replacements,\nthey should be declared static inline, not just inline, to prevent the\nlinker generating out-of-line references to them.)\n\n\tPR libctf/25120\nlibctf/\n\t* configure.ac: Check for bswap_16, bswap_32, and bswap_64 decls.\n\t* swap.h (bswap_16): Do not assume that presence of <byteswap.h>\n\tmeans this is declared.\n\t(bswap_32): Likewise.\n\t(bswap_64): Likewise.\n\t(bswap_identity_64): Remove, unused.\n\t* configure: Regenerated.\n\t* config.h.in: Likewise.\ngold/\n\t* configure.ac: Check for bswap_16, bswap_32, and bswap_64 decls.\n\t* configure: Regenerated.\n\t* config.h.in: Likewise.\nelfcpp/\n\t* elfcpp_swap.h (bswap_16): Do not assume that presence of\n\t<byteswap.h> means this is declared.  Make static inline, matching\n\trecent change to libctf, since there is no non-inline definition\n\tof these functions.\n\t(bswap_32): Likewise.\n\t(bswap_64): Likewise.",
    "tree": {
      "sha": "7d4024539b52d471f42cf6f3d9f61d72197043fa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7d4024539b52d471f42cf6f3d9f61d72197043fa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e755667f94f2579056fb5210eed525dafebb96f3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e755667f94f2579056fb5210eed525dafebb96f3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e755667f94f2579056fb5210eed525dafebb96f3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e755667f94f2579056fb5210eed525dafebb96f3/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "866706584c6622bd7f9f595c307422771ce1d564",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/866706584c6622bd7f9f595c307422771ce1d564",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/866706584c6622bd7f9f595c307422771ce1d564"
    }
  ],
  "stats": {
    "total": 249,
    "additions": 190,
    "deletions": 59
  },
  "files": [
    {
      "sha": "ee6db3a060f36ff6bafecf8b4333c88b5b238c64",
      "filename": "elfcpp/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e755667f94f2579056fb5210eed525dafebb96f3/elfcpp/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e755667f94f2579056fb5210eed525dafebb96f3/elfcpp/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/ChangeLog?ref=e755667f94f2579056fb5210eed525dafebb96f3",
      "patch": "@@ -1,3 +1,12 @@\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* elfcpp_swap.h (bswap_16): Do not assume that presence of\n+\t<byteswap.h> means this is declared.  Make static inline, matching\n+\trecent change to libctf, since there is no non-inline definition\n+\tof these functions.\n+\t(bswap_32): Likewise.\n+\t(bswap_64): Likewise.\n+\n 2020-06-18  Fangrui Song  <i@maskray.me>\n \n \tPR gold/26039"
    },
    {
      "sha": "61b3ba5752012ef59c8d90ce6566cc0fe72a0e91",
      "filename": "elfcpp/elfcpp_swap.h",
      "status": "modified",
      "additions": 11,
      "deletions": 5,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e755667f94f2579056fb5210eed525dafebb96f3/elfcpp/elfcpp_swap.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e755667f94f2579056fb5210eed525dafebb96f3/elfcpp/elfcpp_swap.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/elfcpp_swap.h?ref=e755667f94f2579056fb5210eed525dafebb96f3",
      "patch": "@@ -46,24 +46,30 @@\n \n #ifdef HAVE_BYTESWAP_H\n #include <byteswap.h>\n-#else\n+#endif // defined(HAVE_BYTESWAP_H)\n+\n // Provide our own versions of the byteswap functions.\n-inline uint16_t\n+#if !HAVE_DECL_BSWAP_16\n+static inline uint16_t\n bswap_16(uint16_t v)\n {\n   return ((v >> 8) & 0xff) | ((v & 0xff) << 8);\n }\n+#endif // !HAVE_DECL_BSWAP16\n \n-inline uint32_t\n+#if !HAVE_DECL_BSWAP_32\n+static inline uint32_t\n bswap_32(uint32_t v)\n {\n   return (  ((v & 0xff000000) >> 24)\n \t  | ((v & 0x00ff0000) >>  8)\n \t  | ((v & 0x0000ff00) <<  8)\n \t  | ((v & 0x000000ff) << 24));\n }\n+#endif // !HAVE_DECL_BSWAP32\n \n-inline uint64_t\n+#if !HAVE_DECL_BSWAP_64\n+static inline uint64_t\n bswap_64(uint64_t v)\n {\n   return (  ((v & 0xff00000000000000ULL) >> 56)\n@@ -75,7 +81,7 @@ bswap_64(uint64_t v)\n \t  | ((v & 0x000000000000ff00ULL) << 40)\n \t  | ((v & 0x00000000000000ffULL) << 56));\n }\n-#endif // !defined(HAVE_BYTESWAP_H)\n+#endif // !HAVE_DECL_BSWAP64\n \n // gcc 4.3 and later provides __builtin_bswap32 and __builtin_bswap64.\n "
    },
    {
      "sha": "9e06ff80c27cd8979bb9d4f0d5f8103c30163fe5",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e755667f94f2579056fb5210eed525dafebb96f3/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e755667f94f2579056fb5210eed525dafebb96f3/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=e755667f94f2579056fb5210eed525dafebb96f3",
      "patch": "@@ -1,3 +1,9 @@\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac: Check for bswap_16, bswap_32, and bswap_64 decls.\n+\t* configure: Regenerated.\n+\t* config.h.in: Likewise.\n+\n 2020-06-24  Nick Clifton  <nickc@redhat.com>\n \n \t* target-reloc.h (issue_discarded_error): Initialise the"
    },
    {
      "sha": "aaad1bee7065d398096f2081e00db349620648e7",
      "filename": "gold/config.in",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e755667f94f2579056fb5210eed525dafebb96f3/gold/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e755667f94f2579056fb5210eed525dafebb96f3/gold/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/config.in?ref=e755667f94f2579056fb5210eed525dafebb96f3",
      "patch": "@@ -52,6 +52,18 @@\n    don't. */\n #undef HAVE_DECL_BASENAME\n \n+/* Define to 1 if you have the declaration of `bswap_16', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BSWAP_16\n+\n+/* Define to 1 if you have the declaration of `bswap_32', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BSWAP_32\n+\n+/* Define to 1 if you have the declaration of `bswap_64', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BSWAP_64\n+\n /* Define to 1 if you have the declaration of `ffs', and to 0 if you don't. */\n #undef HAVE_DECL_FFS\n "
    },
    {
      "sha": "199a739e7d1241fae4fd1be3666a574d57438538",
      "filename": "gold/configure",
      "status": "modified",
      "additions": 81,
      "deletions": 46,
      "changes": 127,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e755667f94f2579056fb5210eed525dafebb96f3/gold/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e755667f94f2579056fb5210eed525dafebb96f3/gold/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/configure?ref=e755667f94f2579056fb5210eed525dafebb96f3",
      "patch": "@@ -2167,6 +2167,52 @@ fi\n \n } # ac_fn_cxx_check_header_mongrel\n \n+# ac_fn_cxx_check_decl LINENO SYMBOL VAR INCLUDES\n+# -----------------------------------------------\n+# Tests whether SYMBOL is declared in INCLUDES, setting cache variable VAR\n+# accordingly.\n+ac_fn_cxx_check_decl ()\n+{\n+  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+  as_decl_name=`echo $2|sed 's/ *(.*//'`\n+  as_decl_use=`echo $2|sed -e 's/(/((/' -e 's/)/) 0&/' -e 's/,/) 0& (/g'`\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $as_decl_name is declared\" >&5\n+$as_echo_n \"checking whether $as_decl_name is declared... \" >&6; }\n+if eval \\${$3+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+#ifndef $as_decl_name\n+#ifdef __cplusplus\n+  (void) $as_decl_use;\n+#else\n+  (void) $as_decl_name;\n+#endif\n+#endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  eval \"$3=yes\"\n+else\n+  eval \"$3=no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+eval ac_res=\\$$3\n+\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n+$as_echo \"$ac_res\" >&6; }\n+  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n+\n+} # ac_fn_cxx_check_decl\n+\n # ac_fn_cxx_try_link LINENO\n # -------------------------\n # Try to link conftest.$ac_ext, and return whether this succeeded.\n@@ -2279,52 +2325,6 @@ $as_echo \"$ac_res\" >&6; }\n   eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n \n } # ac_fn_cxx_check_func\n-\n-# ac_fn_cxx_check_decl LINENO SYMBOL VAR INCLUDES\n-# -----------------------------------------------\n-# Tests whether SYMBOL is declared in INCLUDES, setting cache variable VAR\n-# accordingly.\n-ac_fn_cxx_check_decl ()\n-{\n-  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n-  as_decl_name=`echo $2|sed 's/ *(.*//'`\n-  as_decl_use=`echo $2|sed -e 's/(/((/' -e 's/)/) 0&/' -e 's/,/) 0& (/g'`\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $as_decl_name is declared\" >&5\n-$as_echo_n \"checking whether $as_decl_name is declared... \" >&6; }\n-if eval \\${$3+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-$4\n-int\n-main ()\n-{\n-#ifndef $as_decl_name\n-#ifdef __cplusplus\n-  (void) $as_decl_use;\n-#else\n-  (void) $as_decl_name;\n-#endif\n-#endif\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_cxx_try_compile \"$LINENO\"; then :\n-  eval \"$3=yes\"\n-else\n-  eval \"$3=no\"\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-fi\n-eval ac_res=\\$$3\n-\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n-$as_echo \"$ac_res\" >&6; }\n-  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n-\n-} # ac_fn_cxx_check_decl\n cat >config.log <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n@@ -9780,6 +9780,41 @@ fi\n done\n \n \n+ac_fn_cxx_check_decl \"$LINENO\" \"bswap_16\" \"ac_cv_have_decl_bswap_16\" \"#include <byteswap.h>\n+\"\n+if test \"x$ac_cv_have_decl_bswap_16\" = xyes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_BSWAP_16 $ac_have_decl\n+_ACEOF\n+ac_fn_cxx_check_decl \"$LINENO\" \"bswap_32\" \"ac_cv_have_decl_bswap_32\" \"#include <byteswap.h>\n+\"\n+if test \"x$ac_cv_have_decl_bswap_32\" = xyes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_BSWAP_32 $ac_have_decl\n+_ACEOF\n+ac_fn_cxx_check_decl \"$LINENO\" \"bswap_64\" \"ac_cv_have_decl_bswap_64\" \"#include <byteswap.h>\n+\"\n+if test \"x$ac_cv_have_decl_bswap_64\" = xyes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_BSWAP_64 $ac_have_decl\n+_ACEOF\n+\n+\n for ac_header in windows.h\n do :\n   ac_fn_cxx_check_header_mongrel \"$LINENO\" \"windows.h\" \"ac_cv_header_windows_h\" \"$ac_includes_default\""
    },
    {
      "sha": "eca4f01c111f24cb9fc4c79a0435b906c92b4bf3",
      "filename": "gold/configure.ac",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e755667f94f2579056fb5210eed525dafebb96f3/gold/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e755667f94f2579056fb5210eed525dafebb96f3/gold/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/configure.ac?ref=e755667f94f2579056fb5210eed525dafebb96f3",
      "patch": "@@ -602,6 +602,9 @@ AC_CHECK_HEADERS(tr1/unordered_set tr1/unordered_map)\n AC_CHECK_HEADERS(ext/hash_map ext/hash_set)\n AC_CHECK_HEADERS(byteswap.h)\n \n+dnl Check for bswap_{16,32,64}\n+AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64], [], [], [[#include <byteswap.h>]])\n+\n dnl When plugins enabled dynamic loader interface is required. Check headers\n dnl which may provide this interface. Add the necessary library to link.\n AC_CHECK_HEADERS(windows.h)"
    },
    {
      "sha": "743237e3d34dc8e19cdf1fabbaed1d392e19eff0",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e755667f94f2579056fb5210eed525dafebb96f3/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e755667f94f2579056fb5210eed525dafebb96f3/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=e755667f94f2579056fb5210eed525dafebb96f3",
      "patch": "@@ -1,3 +1,15 @@\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\tPR libctf/25120\n+\t* configure.ac: Check for bswap_16, bswap_32, and bswap_64 decls.\n+\t* swap.h (bswap_16): Do not assume that presence of <byteswap.h>\n+\tmeans this is declared.\n+\t(bswap_32): Likewise.\n+\t(bswap_64): Likewise.\n+\t(bswap_identity_64): Remove, unused.\n+\t* configure: Regenerated.\n+\t* config.h.in: Likewise.\n+\n 2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n \n \tPR libctf/25120"
    },
    {
      "sha": "ac0eb3e12f86ded67548dd1fe079d613be5009cc",
      "filename": "libctf/config.h.in",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e755667f94f2579056fb5210eed525dafebb96f3/libctf/config.h.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e755667f94f2579056fb5210eed525dafebb96f3/libctf/config.h.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/config.h.in?ref=e755667f94f2579056fb5210eed525dafebb96f3",
      "patch": "@@ -13,6 +13,18 @@\n    don't. */\n #undef HAVE_DECL_ASPRINTF\n \n+/* Define to 1 if you have the declaration of `bswap_16', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BSWAP_16\n+\n+/* Define to 1 if you have the declaration of `bswap_32', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BSWAP_32\n+\n+/* Define to 1 if you have the declaration of `bswap_64', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BSWAP_64\n+\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n "
    },
    {
      "sha": "58263e5632db40cc888c892e1fde96c9e0d7886c",
      "filename": "libctf/configure",
      "status": "modified",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e755667f94f2579056fb5210eed525dafebb96f3/libctf/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e755667f94f2579056fb5210eed525dafebb96f3/libctf/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/configure?ref=e755667f94f2579056fb5210eed525dafebb96f3",
      "patch": "@@ -13028,6 +13028,40 @@ cat >>confdefs.h <<_ACEOF\n #define HAVE_DECL_ASPRINTF $ac_have_decl\n _ACEOF\n \n+ac_fn_c_check_decl \"$LINENO\" \"bswap_16\" \"ac_cv_have_decl_bswap_16\" \"#include <byteswap.h>\n+\"\n+if test \"x$ac_cv_have_decl_bswap_16\" = xyes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_BSWAP_16 $ac_have_decl\n+_ACEOF\n+ac_fn_c_check_decl \"$LINENO\" \"bswap_32\" \"ac_cv_have_decl_bswap_32\" \"#include <byteswap.h>\n+\"\n+if test \"x$ac_cv_have_decl_bswap_32\" = xyes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_BSWAP_32 $ac_have_decl\n+_ACEOF\n+ac_fn_c_check_decl \"$LINENO\" \"bswap_64\" \"ac_cv_have_decl_bswap_64\" \"#include <byteswap.h>\n+\"\n+if test \"x$ac_cv_have_decl_bswap_64\" = xyes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_BSWAP_64 $ac_have_decl\n+_ACEOF\n+\n \n \n "
    },
    {
      "sha": "f7e0cace52cd4bcbf6f33bdc9ac0db067a076e91",
      "filename": "libctf/configure.ac",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e755667f94f2579056fb5210eed525dafebb96f3/libctf/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e755667f94f2579056fb5210eed525dafebb96f3/libctf/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/configure.ac?ref=e755667f94f2579056fb5210eed525dafebb96f3",
      "patch": "@@ -100,6 +100,8 @@ AC_CHECK_HEADERS(byteswap.h endian.h)\n AC_CHECK_FUNCS(pread)\n \n AC_CHECK_DECLS([asprintf])\n+dnl Check for bswap_{16,32,64}\n+AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64], [], [], [[#include <byteswap.h>]])\n \n dnl Check for qsort_r.  (Taken from gnulib.)\n AC_CHECK_FUNCS_ONCE([qsort_r])"
    },
    {
      "sha": "c8962a271855c3f5e3a9432c9a9cbcb5786f5bef",
      "filename": "libctf/swap.h",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e755667f94f2579056fb5210eed525dafebb96f3/libctf/swap.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e755667f94f2579056fb5210eed525dafebb96f3/libctf/swap.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/swap.h?ref=e755667f94f2579056fb5210eed525dafebb96f3",
      "patch": "@@ -25,15 +25,19 @@\n \n #ifdef HAVE_BYTESWAP_H\n #include <byteswap.h>\n-#else\n+#endif /* defined(HAVE_BYTESWAP_H) */\n \n /* Provide our own versions of the byteswap functions.  */\n+\n+#if !HAVE_DECL_BSWAP_16\n static inline uint16_t\n bswap_16 (uint16_t v)\n {\n   return ((v >> 8) & 0xff) | ((v & 0xff) << 8);\n }\n+#endif /* !HAVE_DECL_BSWAP16 */\n \n+#if !HAVE_DECL_BSWAP_32\n static inline uint32_t\n bswap_32 (uint32_t v)\n {\n@@ -42,13 +46,9 @@ bswap_32 (uint32_t v)\n \t  | ((v & 0x0000ff00) <<  8)\n \t  | ((v & 0x000000ff) << 24));\n }\n+#endif /* !HAVE_DECL_BSWAP32 */\n \n-static inline uint64_t\n-bswap_identity_64 (uint64_t v)\n-{\n-  return v;\n-}\n-\n+#if !HAVE_DECL_BSWAP_64\n static inline uint64_t\n bswap_64 (uint64_t v)\n {\n@@ -61,6 +61,6 @@ bswap_64 (uint64_t v)\n \t  | ((v & 0x000000000000ff00ULL) << 40)\n \t  | ((v & 0x00000000000000ffULL) << 56));\n }\n-#endif /* !defined(HAVE_BYTESWAP_H) */\n+#endif /* !HAVE_DECL_BSWAP64 */\n \n #endif /* !defined(_CTF_SWAP_H) */"
    }
  ]
}