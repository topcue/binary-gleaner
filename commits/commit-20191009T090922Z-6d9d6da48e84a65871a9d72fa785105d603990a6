{
  "sha": "6d9d6da48e84a65871a9d72fa785105d603990a6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmQ5ZDZkYTQ4ZTg0YTY1ODcxYTlkNzJmYTc4NTEwNWQ2MDM5OTBhNg==",
  "commit": {
    "author": {
      "name": "Andreas Arnez",
      "email": "arnez@linux.ibm.com",
      "date": "2019-10-09T09:09:22Z"
    },
    "committer": {
      "name": "Andreas Arnez",
      "email": "arnez@linux.ibm.com",
      "date": "2019-10-09T09:09:22Z"
    },
    "message": "s390: Add record/replay support for arch13 instructions\n\nEnable recording most of the new \"arch13\" instructions on z/Architecture\ntargets, except for the specialized-function-assist instructions:\n\n  SORTL - sort lists\n  DFLTCC - deflate conversion call\n  KDSA - compute digital signature authentication\n\ngdb/ChangeLog:\n\n\t* s390-tdep.c (390_process_record): Handle new arch13 instructions\n\texcept SORTL, DFLTCC, and KDSA.",
    "tree": {
      "sha": "0c95e1aa20151ab6a3f5bd98e45eceaed2755a3f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0c95e1aa20151ab6a3f5bd98e45eceaed2755a3f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6d9d6da48e84a65871a9d72fa785105d603990a6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d9d6da48e84a65871a9d72fa785105d603990a6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6d9d6da48e84a65871a9d72fa785105d603990a6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d9d6da48e84a65871a9d72fa785105d603990a6/comments",
  "author": {
    "login": "aarnez",
    "id": 32961398,
    "node_id": "MDQ6VXNlcjMyOTYxMzk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/32961398?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aarnez",
    "html_url": "https://github.com/aarnez",
    "followers_url": "https://api.github.com/users/aarnez/followers",
    "following_url": "https://api.github.com/users/aarnez/following{/other_user}",
    "gists_url": "https://api.github.com/users/aarnez/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aarnez/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aarnez/subscriptions",
    "organizations_url": "https://api.github.com/users/aarnez/orgs",
    "repos_url": "https://api.github.com/users/aarnez/repos",
    "events_url": "https://api.github.com/users/aarnez/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aarnez/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "aarnez",
    "id": 32961398,
    "node_id": "MDQ6VXNlcjMyOTYxMzk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/32961398?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aarnez",
    "html_url": "https://github.com/aarnez",
    "followers_url": "https://api.github.com/users/aarnez/followers",
    "following_url": "https://api.github.com/users/aarnez/following{/other_user}",
    "gists_url": "https://api.github.com/users/aarnez/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aarnez/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aarnez/subscriptions",
    "organizations_url": "https://api.github.com/users/aarnez/orgs",
    "repos_url": "https://api.github.com/users/aarnez/repos",
    "events_url": "https://api.github.com/users/aarnez/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aarnez/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "336bfbeb1848f4b9558456fdcf283ee8a32d7fd1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/336bfbeb1848f4b9558456fdcf283ee8a32d7fd1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/336bfbeb1848f4b9558456fdcf283ee8a32d7fd1"
    }
  ],
  "stats": {
    "total": 60,
    "additions": 54,
    "deletions": 6
  },
  "files": [
    {
      "sha": "35614ccc324b6e3666698ad2c7733aa18db84a3b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d9d6da48e84a65871a9d72fa785105d603990a6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d9d6da48e84a65871a9d72fa785105d603990a6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6d9d6da48e84a65871a9d72fa785105d603990a6",
      "patch": "@@ -1,3 +1,8 @@\n+2019-10-09  Andreas Arnez  <arnez@linux.ibm.com>\n+\n+\t* s390-tdep.c (390_process_record): Handle new arch13 instructions\n+\texcept SORTL, DFLTCC, and KDSA.\n+\n 2019-10-08  Tom Tromey  <tromey@adacore.com>\n \n \t* windows-nat.c (struct windows_thread_info_struct) <sf>: Remove."
    },
    {
      "sha": "e7f1215e1aec7792509fd23eb4e95cc5bfdc4f02",
      "filename": "gdb/s390-tdep.c",
      "status": "modified",
      "additions": 49,
      "deletions": 6,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d9d6da48e84a65871a9d72fa785105d603990a6/gdb/s390-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d9d6da48e84a65871a9d72fa785105d603990a6/gdb/s390-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/s390-tdep.c?ref=6d9d6da48e84a65871a9d72fa785105d603990a6",
      "patch": "@@ -4134,6 +4134,7 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \tcase 0xb998: /* ALCR - add logical with carry */\n \tcase 0xb999: /* SLBR - subtract logical with borrow */\n \tcase 0xb9f4: /* NRK - and */\n+\tcase 0xb9f5: /* NCRK - and with complement */\n \tcase 0xb9f6: /* ORK - or */\n \tcase 0xb9f7: /* XRK - xor */\n \tcase 0xb9f8: /* ARK - add */\n@@ -4166,20 +4167,32 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \tcase 0xb919: /* SGFR - subtract */\n \tcase 0xb91a: /* ALGFR - add logical */\n \tcase 0xb91b: /* SLGFR - subtract logical */\n+\tcase 0xb964: /* NNGRK - and 64 bit */\n+\tcase 0xb965: /* OCGRK - or with complement 64 bit */\n+\tcase 0xb966: /* NOGRK - or 64 bit */\n+\tcase 0xb967: /* NXGRK - not exclusive or 64 bit */\n+\tcase 0xb974: /* NNRK - and 32 bit */\n+\tcase 0xb975: /* OCRK - or with complement 32 bit */\n+\tcase 0xb976: /* NORK - or 32 bit */\n+\tcase 0xb977: /* NXRK - not exclusive or 32 bit */\n \tcase 0xb980: /* NGR - and */\n \tcase 0xb981: /* OGR - or */\n \tcase 0xb982: /* XGR - xor */\n \tcase 0xb988: /* ALCGR - add logical with carry */\n \tcase 0xb989: /* SLBGR - subtract logical with borrow */\n+\tcase 0xb9c0: /* SELFHR - select high */\n \tcase 0xb9e1: /* POPCNT - population count */\n \tcase 0xb9e4: /* NGRK - and */\n+\tcase 0xb9e5: /* NCGRK - and with complement */\n \tcase 0xb9e6: /* OGRK - or */\n \tcase 0xb9e7: /* XGRK - xor */\n \tcase 0xb9e8: /* AGRK - add */\n \tcase 0xb9e9: /* SGRK - subtract */\n \tcase 0xb9ea: /* ALGRK - add logical */\n+\tcase 0xb9e3: /* SELGR - select 64 bit */\n \tcase 0xb9eb: /* SLGRK - subtract logical */\n \tcase 0xb9ed: /* MSGRKC - multiply single 64x64 -> 64 */\n+\tcase 0xb9f0: /* SELR - select 32 bit */\n \tcase 0xb9fd: /* MSRKC - multiply single 32x32 -> 32 */\n \t  /* 64-bit gpr destination + flags */\n \t  if (s390_record_gpr_g (gdbarch, regcache, inib[6]))\n@@ -4555,7 +4568,13 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \t    return -1;\n \t  break;\n \n-\t/* 0xb932-0xb93b undefined */\n+\t/* 0xb932-0xb937 undefined */\n+\n+\t/* 0xb938 unsupported: SORTL - sort lists */\n+\t/* 0xb939 unsupported: DFLTCC - deflate conversion call */\n+\t/* 0xb93a unsupported: KDSA - compute dig. signature auth. */\n+\n+\t/* 0xb93b undefined */\n \n \tcase 0xb93c: /* PPNO - perform pseudorandom number operation [partial] */\n \t  regcache_raw_read_unsigned (regcache, S390_R1_REGNUM, &tmp);\n@@ -5485,6 +5504,13 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \t/* 0xe3ce undefined */\n \t/* 0xe3d0-0xe3ff undefined */\n \n+\tcase 0xe601: /* VLEBRH - vector load byte reversed element */\n+\tcase 0xe602: /* VLEBRG - vector load byte reversed element */\n+\tcase 0xe603: /* VLEBRF - vector load byte reversed element */\n+\tcase 0xe604: /* VLLEBRZ - vector load byte rev. el. and zero */\n+\tcase 0xe605: /* VLBRREP - vector load byte rev. el. and replicate */\n+\tcase 0xe606: /* VLBR - vector load byte reversed elements */\n+\tcase 0xe607: /* VLER - vector load elements reversed */\n \tcase 0xe634: /* VPKZ - vector pack zoned */\n \tcase 0xe635: /* VLRL - vector load rightmost with immed. length */\n \tcase 0xe637: /* VLRLR - vector load rightmost with length */\n@@ -5547,6 +5573,9 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \tcase 0xe77f: /* VSRAB - vector shift right arithmetic by byte */\n \tcase 0xe784: /* VPDI - vector permute doubleword immediate */\n \tcase 0xe785: /* VBPERM - vector bit permute */\n+\tcase 0xe786: /* VSLD - vector shift left double by bit */\n+\tcase 0xe787: /* VSRD - vector shift right double by bit */\n+\tcase 0xe78b: /* VSTRS - vector string search */\n \tcase 0xe78c: /* VPERM - vector permute */\n \tcase 0xe78d: /* VSEL - vector select */\n \tcase 0xe78e: /* VFMS - vector fp multiply and subtract */\n@@ -5575,10 +5604,10 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \tcase 0xe7bc: /* VGFMA - vector Galois field multiply sum and accumulate */\n \tcase 0xe7bd: /* VSBCBI - vector subtract with borrow compute borrow indication */\n \tcase 0xe7bf: /* VSBI - vector subtract with borrow indication */\n-\tcase 0xe7c0: /* VCLGD - vector convert to logical 64-bit */\n-\tcase 0xe7c1: /* VCDLG - vector convert from logical 64-bit */\n-\tcase 0xe7c2: /* VCGD - vector convert to fixed 64-bit */\n-\tcase 0xe7c3: /* VCDG - vector convert from fixed 64-bit */\n+\tcase 0xe7c0: /* VCLFP - vector fp convert to logical */\n+\tcase 0xe7c1: /* VCFPL - vector fp convert from logical */\n+\tcase 0xe7c2: /* VCSFP - vector fp convert to fixed */\n+\tcase 0xe7c3: /* VCFPS - vector fp convert from fixed */\n \tcase 0xe7c4: /* VLDE/VFLL - vector fp load lengthened */\n \tcase 0xe7c5: /* VLED/VFLR - vector fp load rounded */\n \tcase 0xe7c7: /* VFI - vector load fp integer */\n@@ -5629,6 +5658,7 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \t    return -1;\n \t  break;\n \n+\tcase 0xe609: /* VSTEBRH - vector store byte reversed element */\n \tcase 0xe709: /* VSTEH - vector store element */\n \t  oaddr = s390_record_calc_disp (gdbarch, regcache, inib[3], insn[1], 0);\n \t  if (record_full_arch_list_add_mem (oaddr, 2))\n@@ -5637,6 +5667,7 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \t    return -1;\n \t  break;\n \n+\tcase 0xe60a: /* VSTEBRG - vector store byte reversed element */\n \tcase 0xe70a: /* VSTEG - vector store element */\n \t  oaddr = s390_record_calc_disp (gdbarch, regcache, inib[3], insn[1], 0);\n \t  if (record_full_arch_list_add_mem (oaddr, 8))\n@@ -5645,6 +5676,7 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \t    return -1;\n \t  break;\n \n+\tcase 0xe60b: /* VSTEBRF - vector store byte reversed element */\n \tcase 0xe70b: /* VSTEF - vector store element */\n \t  oaddr = s390_record_calc_disp (gdbarch, regcache, inib[3], insn[1], 0);\n \t  if (record_full_arch_list_add_mem (oaddr, 4))\n@@ -5655,6 +5687,8 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \n \t/* 0xe70c-0xe70d undefined */\n \n+\tcase 0xe60e: /* VSTBR - vector store byte reversed elements */\n+\tcase 0xe60f: /* VSTER - vector store elements reversed */\n \tcase 0xe70e: /* VST - vector store */\n \t  oaddr = s390_record_calc_disp (gdbarch, regcache, inib[3], insn[1], 0);\n \t  if (record_full_arch_list_add_mem (oaddr, 16))\n@@ -6234,7 +6268,16 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n       /* SSE/SIL-format instruction */\n       switch (insn[0])\n \t{\n-\t/* 0xe500-0xe543 undefined, privileged, or unsupported */\n+\t/* 0xe500-0xe509 undefined, privileged, or unsupported */\n+\n+\tcase 0xe50a: /* MVCRL - move right to left */\n+\t  regcache_raw_read_unsigned (regcache, S390_R0_REGNUM, &tmp);\n+\t  oaddr = s390_record_calc_disp (gdbarch, regcache, 0, insn[1], 0);\n+\t  if (record_full_arch_list_add_mem (oaddr, (tmp & 0xff) + 1))\n+\t    return -1;\n+\t  break;\n+\n+\t/* 0xe50b-0xe543 undefined, privileged, or unsupported */\n \n \tcase 0xe544: /* MVHHI - move */\n \t  oaddr = s390_record_calc_disp (gdbarch, regcache, 0, insn[1], 0);"
    }
  ]
}