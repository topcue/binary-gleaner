{
  "sha": "5b9c07b2782fb9368f06c2561b7329c384ec5da0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWI5YzA3YjI3ODJmYjkzNjhmMDZjMjU2MWI3MzI5YzM4NGVjNWRhMA==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-04-06T14:25:10Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-04-06T14:25:31Z"
    },
    "message": "x86: Move x86-specific linker options to elf_linker_x86_params\n\nRemove x86-specific linker options from bfd_link_info and put them in\nelf_linker_x86_params.  Add _bfd_elf_linker_x86_set_options to pass\nx86-specific linker options from ld to bfd.\n\nbfd/\n\n\t* elf-linker-x86.h: New file.\n\t* elf32-i386.c (elf_i386_convert_load_reloc): Use htab->params\n\tto get x86-specific linker options.\n\t* elf64-x86-64.c (elf_x86_64_convert_load_reloc): Likewise.\n\t(elf_x86_64_check_relocs): Likewise.\n\t(elf_x86_64_relocate_section): Likewise.\n\t(elf_x86_64_link_setup_gnu_properties): Likewise.\n\t* elfxx-x86.c (_bfd_x86_elf_merge_gnu_properties): Likewise.\n\t(_bfd_x86_elf_link_setup_gnu_properties): Likewise.\n\t(_bfd_elf_linker_x86_set_options): New function.\n\t* elfxx-x86.h: Include \"elf-linker-x86.h\".\n\t(elf_x86_link_hash_table): Add params.\n\ninclude/\n\n\t* bfdlink.h (bfd_link_info): Remove x86-specific linker options.\n\nld/\n\n\t* Makefile.am (ELF_X86_DEPS): Add $(srcdir)/emultempl/elf-x86.em.\n\t(eelf_i386_sol2.c): Also depend on\n\t$(srcdir)/emultempl/solaris2-x86.em.\n\t(eelf_x86_64_sol2.c): Likewise.\n\t* Makefile.in: Regenerated.\n\t* emulparams/call_nop.sh: Set x86-specific linker options via\n\tparams.\n\t* emulparams/cet.sh: Likewise.\n\t* emulparams/reloc_overflow.sh: Likewise.\n\t* emulparams/elf32_x86_64.sh (EXTRA_EM_FILE): New.  Set to\n\t\"elf-x86\".\n\t* emulparams/elf_i386.sh: Likewise.\n\t* emulparams/elf_i386_be.sh: Likewise.\n\t* emulparams/elf_i386_chaos.sh: Likewise.\n\t* emulparams/elf_i386_ldso.sh: Likewise.\n\t* emulparams/elf_i386_vxworks.sh: Likewise.\n\t* emulparams/elf_iamcu.sh: Likewise.\n\t* emulparams/elf_k1om.sh: Likewise.\n\t* emulparams/elf_l1om.sh: Likewise.\n\t* emulparams/elf_x86_64.sh: Likewise.\n\t* emulparams/elf_i386_sol2.sh (EXTRA_EM_FILE): Changed to\n\t\"solaris2-x86\".\n\t* emulparams/elf_x86_64_sol2.sh: Likewise.\n\t* emultempl/elf-x86.em: New file.\n\t* emultempl/solaris2-x86.em: Likewise.\n\t* emultempl/elf32.em (gld${EMULATION_NAME}_before_parse): Don't\n\tset link_info.call_nop_byte.",
    "tree": {
      "sha": "7258bdae0c83c09117cd939b2e770521c5604dc6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7258bdae0c83c09117cd939b2e770521c5604dc6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5b9c07b2782fb9368f06c2561b7329c384ec5da0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b9c07b2782fb9368f06c2561b7329c384ec5da0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5b9c07b2782fb9368f06c2561b7329c384ec5da0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b9c07b2782fb9368f06c2561b7329c384ec5da0/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d55e5aa6b29906346c51ad00e6a9b112590aa294",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d55e5aa6b29906346c51ad00e6a9b112590aa294",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d55e5aa6b29906346c51ad00e6a9b112590aa294"
    }
  ],
  "stats": {
    "total": 314,
    "additions": 256,
    "deletions": 58
  },
  "files": [
    {
      "sha": "72156b972244c331314a27602453181f5f4c4259",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -1,3 +1,18 @@\n+2019-04-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elf-linker-x86.h: New file.\n+\t* elf32-i386.c (elf_i386_convert_load_reloc): Use htab->params\n+\tto get x86-specific linker options.\n+\t* elf64-x86-64.c (elf_x86_64_convert_load_reloc): Likewise.\n+\t(elf_x86_64_check_relocs): Likewise.\n+\t(elf_x86_64_relocate_section): Likewise.\n+\t(elf_x86_64_link_setup_gnu_properties): Likewise.\n+\t* elfxx-x86.c (_bfd_x86_elf_merge_gnu_properties): Likewise.\n+\t(_bfd_x86_elf_link_setup_gnu_properties): Likewise.\n+\t(_bfd_elf_linker_x86_set_options): New function.\n+\t* elfxx-x86.h: Include \"elf-linker-x86.h\".\n+\t(elf_x86_link_hash_table): Add params.\n+\n 2019-04-03  Alan Modra  <amodra@gmail.com>\n \n \t* coff-i386.c, * coff-x86_64.c, * coffgen.c, * dwarf2.c,"
    },
    {
      "sha": "bd14b7114b254a2a5e905090e7579dc54075d117",
      "filename": "bfd/elf-linker-x86.h",
      "status": "added",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/bfd/elf-linker-x86.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/bfd/elf-linker-x86.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-linker-x86.h?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -0,0 +1,47 @@\n+/* x86-specific ELF linker support between ld and bfd.\n+   Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of BFD, the Binary File Descriptor library.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+   MA 02110-1301, USA.  */\n+\n+/* Used to pass x86-specific linker options from ld to bfd.  */\n+struct elf_linker_x86_params\n+{\n+  /* TRUE if BND prefix in PLT entries is always generated.  */\n+  unsigned int bndplt: 1;\n+\n+  /* TRUE if IBT-enabled PLT entries should be generated.  */\n+  unsigned int ibtplt: 1;\n+\n+  /* TRUE if GNU_PROPERTY_X86_FEATURE_1_IBT should be generated.  */\n+  unsigned int ibt: 1;\n+\n+  /* TRUE if GNU_PROPERTY_X86_FEATURE_1_SHSTK should be generated.  */\n+  unsigned int shstk: 1;\n+\n+  /* TRUE if we shouldn't check relocation overflow.  */\n+  unsigned int no_reloc_overflow_check: 1;\n+\n+  /* TRUE if generate a 1-byte NOP as suffix for x86 call instruction.  */\n+  unsigned int call_nop_as_suffix : 1;\n+\n+  /* The 1-byte NOP for x86 call instruction.  */\n+  char call_nop_byte;\n+};\n+\n+extern void _bfd_elf_linker_x86_set_options\n+  (struct bfd_link_info *, struct elf_linker_x86_params *);"
    },
    {
      "sha": "5d3f2eb4b529247f2f56e1748720f500d2babfe8",
      "filename": "bfd/elf32-i386.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/bfd/elf32-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/bfd/elf32-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-i386.c?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -1343,8 +1343,8 @@ elf_i386_convert_load_reloc (bfd *abfd, Elf_Internal_Shdr *symtab_hdr,\n \t\t}\n \t      else\n \t\t{\n-\t\t  nop = link_info->call_nop_byte;\n-\t\t  if (link_info->call_nop_as_suffix)\n+\t\t  nop = htab->params->call_nop_byte;\n+\t\t  if (htab->params->call_nop_as_suffix)\n \t\t    {\n \t\t      nop_offset = roff + 3;\n \t\t      irel->r_offset -= 1;"
    },
    {
      "sha": "6790228271b38c9ed5e44a59d715171f0f456f8a",
      "filename": "bfd/elf64-x86-64.c",
      "status": "modified",
      "additions": 11,
      "deletions": 5,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/bfd/elf64-x86-64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/bfd/elf64-x86-64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-x86-64.c?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -1676,8 +1676,8 @@ elf_x86_64_convert_load_reloc (bfd *abfd,\n \t    }\n \t  else\n \t    {\n-\t      nop = link_info->call_nop_byte;\n-\t      if (link_info->call_nop_as_suffix)\n+\t      nop = htab->params->call_nop_byte;\n+\t      if (htab->params->call_nop_as_suffix)\n \t\t{\n \t\t  nop_offset = irel->r_offset + 3;\n \t\t  disp = bfd_get_32 (abfd, contents + irel->r_offset);\n@@ -2149,7 +2149,7 @@ elf_x86_64_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t     run-time relocation overflow.  Don't error out for\n \t     sections we don't care about, such as debug sections or\n \t     when relocation overflow check is disabled.  */\n-\t  if (!info->no_reloc_overflow_check\n+\t  if (!htab->params->no_reloc_overflow_check\n \t      && !converted_reloc\n \t      && (bfd_link_pic (info)\n \t\t  || (bfd_link_executable (info)\n@@ -3206,7 +3206,7 @@ elf_x86_64_relocate_section (bfd *output_bfd,\n \t\t     convert R_X86_64_32 to dynamic R_X86_64_RELATIVE.  */\n \t\t  if (r_type == htab->pointer_r_type\n \t\t      || (r_type == R_X86_64_32\n-\t\t\t  && info->no_reloc_overflow_check))\n+\t\t\t  && htab->params->no_reloc_overflow_check))\n \t\t    {\n \t\t      relocate = TRUE;\n \t\t      outrel.r_info = htab->r_info (0, R_X86_64_RELATIVE);\n@@ -5048,7 +5048,13 @@ elf_x86_64_link_setup_gnu_properties (struct bfd_link_info *info)\n \n   if (get_elf_x86_backend_data (info->output_bfd)->target_os != is_nacl)\n     {\n-      if (info->bndplt)\n+      const struct elf_backend_data *bed\n+\t= get_elf_backend_data (info->output_bfd);\n+      struct elf_x86_link_hash_table *htab\n+\t= elf_x86_hash_table (info, bed->target_id);\n+      if (!htab)\n+\tabort ();\n+      if (htab->params->bndplt)\n \t{\n \t  init_table.lazy_plt = &elf_x86_64_lazy_bnd_plt;\n \t  init_table.non_lazy_plt = &elf_x86_64_non_lazy_bnd_plt;"
    },
    {
      "sha": "8d08a69d22c3800f5b3ba6183463c45691bc0dfe",
      "filename": "bfd/elfxx-x86.c",
      "status": "modified",
      "additions": 30,
      "deletions": 12,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/bfd/elfxx-x86.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/bfd/elfxx-x86.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-x86.c?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -2479,12 +2479,18 @@ _bfd_x86_elf_merge_gnu_properties (struct bfd_link_info *info,\n \t 2. If APROP is NULL, remove x86 feature.\n \t 3. Otherwise, do nothing.\n        */\n+      const struct elf_backend_data *bed\n+\t= get_elf_backend_data (info->output_bfd);\n+      struct elf_x86_link_hash_table *htab\n+\t= elf_x86_hash_table (info, bed->target_id);\n+      if (!htab)\n+\tabort ();\n       if (aprop != NULL && bprop != NULL)\n \t{\n \t  features = 0;\n-\t  if (info->ibt)\n+\t  if (htab->params->ibt)\n \t    features = GNU_PROPERTY_X86_FEATURE_1_IBT;\n-\t  if (info->shstk)\n+\t  if (htab->params->shstk)\n \t    features |= GNU_PROPERTY_X86_FEATURE_1_SHSTK;\n \t  number = aprop->u.number;\n \t  /* Add GNU_PROPERTY_X86_FEATURE_1_IBT and\n@@ -2501,9 +2507,9 @@ _bfd_x86_elf_merge_gnu_properties (struct bfd_link_info *info,\n \t     have them.  Set IBT and SHSTK properties for -z ibt and -z\n \t     shstk if needed.  */\n \t  features = 0;\n-\t  if (info->ibt)\n+\t  if (htab->params->ibt)\n \t    features = GNU_PROPERTY_X86_FEATURE_1_IBT;\n-\t  if (info->shstk)\n+\t  if (htab->params->shstk)\n \t    features |= GNU_PROPERTY_X86_FEATURE_1_SHSTK;\n \t  if (features)\n \t    {\n@@ -2556,12 +2562,6 @@ _bfd_x86_elf_link_setup_gnu_properties\n   unsigned int class_align = ABI_64_P (info->output_bfd) ? 3 : 2;\n   unsigned int got_align;\n \n-  features = 0;\n-  if (info->ibt)\n-    features = GNU_PROPERTY_X86_FEATURE_1_IBT;\n-  if (info->shstk)\n-    features |= GNU_PROPERTY_X86_FEATURE_1_SHSTK;\n-\n   /* Find a normal input file with GNU property note.  */\n   for (pbfd = info->input_bfds;\n        pbfd != NULL;\n@@ -2581,6 +2581,12 @@ _bfd_x86_elf_link_setup_gnu_properties\n   if (htab == NULL)\n     return pbfd;\n \n+  features = 0;\n+  if (htab->params->ibt)\n+    features = GNU_PROPERTY_X86_FEATURE_1_IBT;\n+  if (htab->params->shstk)\n+    features |= GNU_PROPERTY_X86_FEATURE_1_SHSTK;\n+\n   if (ebfd != NULL)\n     {\n       prop = NULL;\n@@ -2630,7 +2636,7 @@ _bfd_x86_elf_link_setup_gnu_properties\n \n   htab->plt0_pad_byte = init_table->plt0_pad_byte;\n \n-  use_ibt_plt = info->ibtplt || info->ibt;\n+  use_ibt_plt = htab->params->ibtplt || htab->params->ibt;\n   if (!use_ibt_plt && pbfd != NULL)\n     {\n       /* Check if GNU_PROPERTY_X86_FEATURE_1_IBT is on.  */\n@@ -2853,7 +2859,7 @@ _bfd_x86_elf_link_setup_gnu_properties\n \t\t\t\t\t\t  plt_alignment))\n \t\t    goto error_alignment;\n \t\t}\n-\t      else if (info->bndplt && ABI_64_P (dynobj))\n+\t      else if (htab->params->bndplt && ABI_64_P (dynobj))\n \t\t{\n \t\t  /* Create the second PLT for Intel MPX support.  MPX\n \t\t     PLT is supported only for non-NaCl target in 64-bit\n@@ -2984,3 +2990,15 @@ _bfd_x86_elf_link_fixup_gnu_properties\n \t}\n     }\n }\n+\n+void\n+_bfd_elf_linker_x86_set_options (struct bfd_link_info * info,\n+\t\t\t\t struct elf_linker_x86_params *params)\n+{\n+  const struct elf_backend_data *bed\n+    = get_elf_backend_data (info->output_bfd);\n+  struct elf_x86_link_hash_table *htab\n+    = elf_x86_hash_table (info, bed->target_id);\n+  if (htab != NULL)\n+    htab->params = params;\n+}"
    },
    {
      "sha": "013ac4b761e4503d6bdbcad968ba16d0150f44f9",
      "filename": "bfd/elfxx-x86.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/bfd/elfxx-x86.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/bfd/elfxx-x86.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-x86.h?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -24,6 +24,7 @@\n #include \"libbfd.h\"\n #include \"elf-bfd.h\"\n #include \"hashtab.h\"\n+#include \"elf-linker-x86.h\"\n \n #define PLT_CIE_LENGTH\t\t20\n #define PLT_FDE_LENGTH\t\t36\n@@ -530,6 +531,9 @@ struct elf_x86_link_hash_table\n   int dynamic_interpreter_size;\n   const char *dynamic_interpreter;\n   const char *tls_get_addr;\n+\n+  /* Options passed from the linker.  */\n+  struct elf_linker_x86_params *params;\n };\n \n /* Architecture-specific backend data for x86.  */"
    },
    {
      "sha": "0a6759ffa4a949b16f53c4dbfcebab9618ad093e",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -1,3 +1,7 @@\n+2019-04-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* bfdlink.h (bfd_link_info): Remove x86-specific linker options.\n+\n 2019-04-01  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* opcode/arm.h (FPU_NEON_ARMV8_1): New."
    },
    {
      "sha": "c35469dd11ef49e5faa827cdd5a8638819667740",
      "filename": "include/bfdlink.h",
      "status": "modified",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/include/bfdlink.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/include/bfdlink.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/bfdlink.h?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -482,36 +482,15 @@ struct bfd_link_info\n      been opened.  */\n   unsigned int check_relocs_after_open_input: 1;\n \n-  /* TRUE if BND prefix in PLT entries is always generated.  */\n-  unsigned int bndplt: 1;\n-\n-  /* TRUE if IBT-enabled PLT entries should be generated.  */\n-  unsigned int ibtplt: 1;\n-\n-  /* TRUE if GNU_PROPERTY_X86_FEATURE_1_IBT should be generated.  */\n-  unsigned int ibt: 1;\n-\n-  /* TRUE if GNU_PROPERTY_X86_FEATURE_1_SHSTK should be generated.  */\n-  unsigned int shstk: 1;\n-\n   /* TRUE if generation of .interp/PT_INTERP should be suppressed.  */\n   unsigned int nointerp: 1;\n \n-  /* TRUE if we shouldn't check relocation overflow.  */\n-  unsigned int no_reloc_overflow_check: 1;\n-\n-  /* TRUE if generate a 1-byte NOP as suffix for x86 call instruction.  */\n-  unsigned int call_nop_as_suffix : 1;\n-\n   /* TRUE if common symbols should be treated as undefined.  */\n   unsigned int inhibit_common_definition : 1;\n \n   /* TRUE if \"-Map map\" is passed to linker.  */\n   unsigned int has_map_file : 1;\n \n-  /* The 1-byte NOP for x86 call instruction.  */\n-  char call_nop_byte;\n-\n   /* Char that may appear as the first char of a symbol, but should be\n      skipped (like symbol_leading_char) when looking up symbols in\n      wrap_hash.  Used by PowerPC Linux for 'dot' symbols.  */"
    },
    {
      "sha": "88044d199039bc2bd185b881aef072559a366a87",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -1,3 +1,33 @@\n+2019-04-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Makefile.am (ELF_X86_DEPS): Add $(srcdir)/emultempl/elf-x86.em.\n+\t(eelf_i386_sol2.c): Also depend on\n+\t$(srcdir)/emultempl/solaris2-x86.em.\n+\t(eelf_x86_64_sol2.c): Likewise.\n+\t* Makefile.in: Regenerated.\n+\t* emulparams/call_nop.sh: Set x86-specific linker options via\n+\tparams.\n+\t* emulparams/cet.sh: Likewise.\n+\t* emulparams/reloc_overflow.sh: Likewise.\n+\t* emulparams/elf32_x86_64.sh (EXTRA_EM_FILE): New.  Set to\n+\t\"elf-x86\".\n+\t* emulparams/elf_i386.sh: Likewise.\n+\t* emulparams/elf_i386_be.sh: Likewise.\n+\t* emulparams/elf_i386_chaos.sh: Likewise.\n+\t* emulparams/elf_i386_ldso.sh: Likewise.\n+\t* emulparams/elf_i386_vxworks.sh: Likewise.\n+\t* emulparams/elf_iamcu.sh: Likewise.\n+\t* emulparams/elf_k1om.sh: Likewise.\n+\t* emulparams/elf_l1om.sh: Likewise.\n+\t* emulparams/elf_x86_64.sh: Likewise.\n+\t* emulparams/elf_i386_sol2.sh (EXTRA_EM_FILE): Changed to\n+\t\"solaris2-x86\".\n+\t* emulparams/elf_x86_64_sol2.sh: Likewise.\n+\t* emultempl/elf-x86.em: New file.\n+\t* emultempl/solaris2-x86.em: Likewise.\n+\t* emultempl/elf32.em (gld${EMULATION_NAME}_before_parse): Don't\n+\tset link_info.call_nop_byte.\n+\n 2019-04-05  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-powerpc/tlsexe32.d: Remove trailing spaces."
    },
    {
      "sha": "6d750c8db2049a9deaa8b855b287cf5a504898ef",
      "filename": "ld/Makefile.am",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.am?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -618,7 +618,8 @@ GENSCRIPTS = LIB_PATH='${LIB_PATH}' $(SHELL) $(srcdir)/genscripts.sh \"${srcdir}\"\n GEN_DEPENDS = $(srcdir)/genscripts.sh stringify.sed\n ELF_DEPS = $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/elf-generic.em $(srcdir)/scripttempl/DWARF.sc\n ELF_GEN_DEPS = $(srcdir)/emultempl/generic.em $(srcdir)/emultempl/elf-generic.em $(srcdir)/emultempl/genelf.em $(srcdir)/scripttempl/DWARF.sc\n-ELF_X86_DEPS = $(ELF_DEPS) $(srcdir)/emulparams/plt_unwind.sh \\\n+ELF_X86_DEPS = $(ELF_DEPS) $(srcdir)/emultempl/elf-x86.em \\\n+\t       $(srcdir)/emulparams/plt_unwind.sh \\\n \t       $(srcdir)/emulparams/extern_protected_data.sh \\\n \t       $(srcdir)/emulparams/dynamic_undefined_weak.sh \\\n \t       $(srcdir)/emulparams/reloc_overflow.sh \\\n@@ -1310,6 +1311,7 @@ eelf_i386_nacl.c: $(srcdir)/emulparams/elf_i386_nacl.sh \\\n eelf_i386_sol2.c: $(srcdir)/emulparams/elf_i386_sol2.sh \\\n   $(srcdir)/emulparams/solaris2.sh \\\n   $(srcdir)/emultempl/solaris2.em \\\n+  $(srcdir)/emultempl/solaris2-x86.em \\\n   $(ELF_X86_DEPS) $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}\n \n eelf_i386_vxworks.c: $(srcdir)/emulparams/elf_i386_vxworks.sh \\\n@@ -1866,6 +1868,7 @@ eelf_x86_64_sol2.c: $(srcdir)/emulparams/elf_x86_64_sol2.sh \\\n   $(srcdir)/emulparams/elf_x86_64.sh \\\n   $(srcdir)/emulparams/solaris2.sh \\\n   $(srcdir)/emultempl/solaris2.em \\\n+  $(srcdir)/emultempl/solaris2-x86.em \\\n   $(ELF_X86_DEPS) $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}\n \n ehppa64linux.c: $(srcdir)/emulparams/hppa64linux.sh \\"
    },
    {
      "sha": "0f3c11a31e7f5089431a44c7419e49c99ead4b90",
      "filename": "ld/Makefile.in",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.in?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -986,7 +986,8 @@ GENSCRIPTS = LIB_PATH='${LIB_PATH}' $(SHELL) $(srcdir)/genscripts.sh \"${srcdir}\"\n GEN_DEPENDS = $(srcdir)/genscripts.sh stringify.sed\n ELF_DEPS = $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/elf-generic.em $(srcdir)/scripttempl/DWARF.sc\n ELF_GEN_DEPS = $(srcdir)/emultempl/generic.em $(srcdir)/emultempl/elf-generic.em $(srcdir)/emultempl/genelf.em $(srcdir)/scripttempl/DWARF.sc\n-ELF_X86_DEPS = $(ELF_DEPS) $(srcdir)/emulparams/plt_unwind.sh \\\n+ELF_X86_DEPS = $(ELF_DEPS) $(srcdir)/emultempl/elf-x86.em \\\n+\t       $(srcdir)/emulparams/plt_unwind.sh \\\n \t       $(srcdir)/emulparams/extern_protected_data.sh \\\n \t       $(srcdir)/emulparams/dynamic_undefined_weak.sh \\\n \t       $(srcdir)/emulparams/reloc_overflow.sh \\\n@@ -2914,6 +2915,7 @@ eelf_i386_nacl.c: $(srcdir)/emulparams/elf_i386_nacl.sh \\\n eelf_i386_sol2.c: $(srcdir)/emulparams/elf_i386_sol2.sh \\\n   $(srcdir)/emulparams/solaris2.sh \\\n   $(srcdir)/emultempl/solaris2.em \\\n+  $(srcdir)/emultempl/solaris2-x86.em \\\n   $(ELF_X86_DEPS) $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}\n \n eelf_i386_vxworks.c: $(srcdir)/emulparams/elf_i386_vxworks.sh \\\n@@ -3470,6 +3472,7 @@ eelf_x86_64_sol2.c: $(srcdir)/emulparams/elf_x86_64_sol2.sh \\\n   $(srcdir)/emulparams/elf_x86_64.sh \\\n   $(srcdir)/emulparams/solaris2.sh \\\n   $(srcdir)/emultempl/solaris2.em \\\n+  $(srcdir)/emultempl/solaris2-x86.em \\\n   $(ELF_X86_DEPS) $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}\n \n ehppa64linux.c: $(srcdir)/emulparams/hppa64linux.sh \\"
    },
    {
      "sha": "b1e2e73cbf83801a009d29f04005a208c9f61491",
      "filename": "ld/emulparams/call_nop.sh",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/call_nop.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/call_nop.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/call_nop.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -7,31 +7,31 @@ PARSE_AND_LIST_ARGS_CASE_Z_CALL_NOP='\n \t{\n \t  if (strcmp (optarg + 9, \"prefix-addr\") == 0)\n \t    {\n-\t      link_info.call_nop_as_suffix = FALSE;\n-\t      link_info.call_nop_byte = 0x67;\n+\t      params.call_nop_as_suffix = FALSE;\n+\t      params.call_nop_byte = 0x67;\n \t    }\n \t  else if (strcmp (optarg + 9, \"suffix-nop\") == 0)\n \t    {\n-\t      link_info.call_nop_as_suffix = TRUE;\n-\t      link_info.call_nop_byte = 0x90;\n+\t      params.call_nop_as_suffix = TRUE;\n+\t      params.call_nop_byte = 0x90;\n \t    }\n \t  else if (strncmp (optarg + 9, \"prefix-\", 7) == 0)\n \t    {\n \t      char *end;\n-\t      link_info.call_nop_byte = strtoul (optarg + 16 , &end, 0);\n+\t      params.call_nop_byte = strtoul (optarg + 16 , &end, 0);\n \t      if (*end)\n \t\teinfo (_(\"%F%P: invalid number for -z call-nop=prefix-: %s\\n\"),\n \t\t       optarg + 16);\n-\t      link_info.call_nop_as_suffix = FALSE;\n+\t      params.call_nop_as_suffix = FALSE;\n \t    }\n \t  else if (strncmp (optarg + 9, \"suffix-\", 7) == 0)\n \t    {\n \t      char *end;\n-\t      link_info.call_nop_byte = strtoul (optarg + 16, &end, 0);\n+\t      params.call_nop_byte = strtoul (optarg + 16, &end, 0);\n \t      if (*end)\n \t\teinfo (_(\"%F%P: invalid number for -z call-nop=suffix-: %s\\n\"),\n \t\t       optarg + 16);\n-\t      link_info.call_nop_as_suffix = TRUE;\n+\t      params.call_nop_as_suffix = TRUE;\n \t    }\n \t  else\n \t    einfo (_(\"%F%P: unsupported option: -z %s\\n\"), optarg);"
    },
    {
      "sha": "1d45b16283054184330b470c40924bc888a09d70",
      "filename": "ld/emulparams/cet.sh",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/cet.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/cet.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/cet.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -8,11 +8,11 @@ PARSE_AND_LIST_OPTIONS_CET='\n '\n PARSE_AND_LIST_ARGS_CASE_Z_CET='\n       else if (strcmp (optarg, \"ibtplt\") == 0)\n-\tlink_info.ibtplt = TRUE;\n+\tparams.ibtplt = TRUE;\n       else if (strcmp (optarg, \"ibt\") == 0)\n-\tlink_info.ibt = TRUE;\n+\tparams.ibt = TRUE;\n       else if (strcmp (optarg, \"shstk\") == 0)\n-\tlink_info.shstk = TRUE;\n+\tparams.shstk = TRUE;\n '\n \n PARSE_AND_LIST_OPTIONS=\"$PARSE_AND_LIST_OPTIONS $PARSE_AND_LIST_OPTIONS_CET\""
    },
    {
      "sha": "6fddf626af1f6a0b64e919ec0789a486b343756c",
      "filename": "ld/emulparams/elf32_x86_64.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf32_x86_64.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf32_x86_64.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf32_x86_64.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -14,6 +14,7 @@ COMMONPAGESIZE=\"CONSTANT (COMMONPAGESIZE)\"\n ARCH=\"i386:x64-32\"\n MACHINE=\n TEMPLATE_NAME=elf32\n+EXTRA_EM_FILE=\"elf-x86\"\n GENERATE_SHLIB_SCRIPT=yes\n GENERATE_PIE_SCRIPT=yes\n NO_SMALL_DATA=yes"
    },
    {
      "sha": "5d3f71f10bdae1c91a212ff49e6c7cf6a2dc2797",
      "filename": "ld/emulparams/elf_i386.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_i386.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_i386.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_i386.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -12,6 +12,7 @@ COMMONPAGESIZE=\"CONSTANT (COMMONPAGESIZE)\"\n ARCH=i386\n MACHINE=\n TEMPLATE_NAME=elf32\n+EXTRA_EM_FILE=\"elf-x86\"\n GENERATE_SHLIB_SCRIPT=yes\n GENERATE_PIE_SCRIPT=yes\n NO_SMALL_DATA=yes"
    },
    {
      "sha": "8d4cffe901ab3659eca0190d8d6b11945ca227b3",
      "filename": "ld/emulparams/elf_i386_be.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_i386_be.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_i386_be.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_i386_be.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -3,6 +3,7 @@\n . ${srcdir}/emulparams/call_nop.sh\n SCRIPT_NAME=elf\n OUTPUT_FORMAT=\"elf32-i386\"\n+EXTRA_EM_FILE=\"elf-x86\"\n NO_RELA_RELOCS=yes\n TEXT_START_ADDR=0x80000000\n MAXPAGESIZE=\"CONSTANT (MAXPAGESIZE)\""
    },
    {
      "sha": "ec2bb7f4a546e44176a7426749b0e5595182c2fd",
      "filename": "ld/emulparams/elf_i386_chaos.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_i386_chaos.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_i386_chaos.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_i386_chaos.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -4,6 +4,7 @@\n . ${srcdir}/emulparams/call_nop.sh\n SCRIPT_NAME=elf_chaos\n OUTPUT_FORMAT=\"elf32-i386\"\n+EXTRA_EM_FILE=\"elf-x86\"\n TEXT_START_ADDR=0x40000000\n MAXPAGESIZE=\"CONSTANT (MAXPAGESIZE)\"\n ARCH=i386"
    },
    {
      "sha": "981c7014a3df6b2a825355f5758edf721d16ca5b",
      "filename": "ld/emulparams/elf_i386_ldso.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_i386_ldso.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_i386_ldso.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_i386_ldso.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -4,6 +4,7 @@\n . ${srcdir}/emulparams/call_nop.sh\n SCRIPT_NAME=elf\n OUTPUT_FORMAT=\"elf32-i386\"\n+EXTRA_EM_FILE=\"elf-x86\"\n NO_RELA_RELOCS=yes\n TEXT_START_ADDR=0x08048000\n MAXPAGESIZE=\"CONSTANT (MAXPAGESIZE)\""
    },
    {
      "sha": "c45a586e8e92fce5c35f0d36c6bb7cc0d2bcbbe1",
      "filename": "ld/emulparams/elf_i386_sol2.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_i386_sol2.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_i386_sol2.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_i386_sol2.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -1,4 +1,4 @@\n . ${srcdir}/emulparams/elf_i386_ldso.sh\n . ${srcdir}/emulparams/solaris2.sh\n-EXTRA_EM_FILE=solaris2\n+EXTRA_EM_FILE=\"solaris2-x86\"\n OUTPUT_FORMAT=\"elf32-i386-sol2\""
    },
    {
      "sha": "efc164f68947f79a7ba7388c0fbc0053484988d9",
      "filename": "ld/emulparams/elf_i386_vxworks.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_i386_vxworks.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_i386_vxworks.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_i386_vxworks.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -7,6 +7,7 @@ COMMONPAGESIZE=\"CONSTANT (COMMONPAGESIZE)\"\n ARCH=i386\n MACHINE=\n TEMPLATE_NAME=elf32\n+EXTRA_EM_FILE=\"elf-x86\"\n GENERATE_SHLIB_SCRIPT=yes\n GENERATE_PIE_SCRIPT=yes\n NO_SMALL_DATA=yes"
    },
    {
      "sha": "d30a155293599e47c9dc9defe87781c971212e4a",
      "filename": "ld/emulparams/elf_iamcu.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_iamcu.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_iamcu.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_iamcu.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -12,6 +12,7 @@ ARCH=iamcu\n MACHINE=\n COMPILE_IN=yes\n TEMPLATE_NAME=elf32\n+EXTRA_EM_FILE=\"elf-x86\"\n GENERATE_SHLIB_SCRIPT=yes\n GENERATE_PIE_SCRIPT=yes\n NO_SMALL_DATA=yes"
    },
    {
      "sha": "ec84bd0b9f85d9ffc98e6848f4c3427e3d6130c6",
      "filename": "ld/emulparams/elf_k1om.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_k1om.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_k1om.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_k1om.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -13,6 +13,7 @@ ARCH=\"k1om\"\n MACHINE=\n COMPILE_IN=yes\n TEMPLATE_NAME=elf32\n+EXTRA_EM_FILE=\"elf-x86\"\n GENERATE_SHLIB_SCRIPT=yes\n GENERATE_PIE_SCRIPT=yes\n NO_SMALL_DATA=yes"
    },
    {
      "sha": "fade2da88fee758eaf6676c2536b248c589f5564",
      "filename": "ld/emulparams/elf_l1om.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_l1om.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_l1om.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_l1om.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -13,6 +13,7 @@ ARCH=\"l1om\"\n MACHINE=\n COMPILE_IN=yes\n TEMPLATE_NAME=elf32\n+EXTRA_EM_FILE=\"elf-x86\"\n GENERATE_SHLIB_SCRIPT=yes\n GENERATE_PIE_SCRIPT=yes\n NO_SMALL_DATA=yes"
    },
    {
      "sha": "241911dab3e71162c02a439f0a9b759145d6b1c2",
      "filename": "ld/emulparams/elf_x86_64.sh",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_x86_64.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_x86_64.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_x86_64.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -14,6 +14,7 @@ COMMONPAGESIZE=\"CONSTANT (COMMONPAGESIZE)\"\n ARCH=\"i386:x86-64\"\n MACHINE=\n TEMPLATE_NAME=elf32\n+EXTRA_EM_FILE=\"elf-x86\"\n GENERATE_SHLIB_SCRIPT=yes\n GENERATE_PIE_SCRIPT=yes\n NO_SMALL_DATA=yes\n@@ -47,7 +48,7 @@ case \"$target\" in\n '\n \tPARSE_AND_LIST_ARGS_CASE_Z_BNDPLT='\n       else if (strcmp (optarg, \"bndplt\") == 0)\n-\tlink_info.bndplt = TRUE;\n+\tparams.bndplt = TRUE;\n '\n \tPARSE_AND_LIST_OPTIONS=\"$PARSE_AND_LIST_OPTIONS $PARSE_AND_LIST_OPTIONS_BNDPLT\"\n \tPARSE_AND_LIST_ARGS_CASE_Z=\"$PARSE_AND_LIST_ARGS_CASE_Z $PARSE_AND_LIST_ARGS_CASE_Z_BNDPLT\""
    },
    {
      "sha": "3bd975ffc795e6c682c6efb69542d7244b999b52",
      "filename": "ld/emulparams/elf_x86_64_sol2.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_x86_64_sol2.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/elf_x86_64_sol2.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_x86_64_sol2.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -1,4 +1,4 @@\n . ${srcdir}/emulparams/elf_x86_64.sh\n . ${srcdir}/emulparams/solaris2.sh\n-EXTRA_EM_FILE=solaris2\n+EXTRA_EM_FILE=\"solaris2-x86\"\n OUTPUT_FORMAT=\"elf64-x86-64-sol2\""
    },
    {
      "sha": "6bf0abced7c53c7cc385ca0767c29671f968f096",
      "filename": "ld/emulparams/reloc_overflow.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/reloc_overflow.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emulparams/reloc_overflow.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/reloc_overflow.sh?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -4,7 +4,7 @@ PARSE_AND_LIST_OPTIONS_RELOC_OVERFLOW='\n '\n PARSE_AND_LIST_ARGS_CASE_Z_RELOC_OVERFLOW='\n       else if (strcmp (optarg, \"noreloc-overflow\") == 0)\n-\tlink_info.no_reloc_overflow_check = TRUE;\n+\tparams.no_reloc_overflow_check = TRUE;\n '\n \n PARSE_AND_LIST_OPTIONS=\"$PARSE_AND_LIST_OPTIONS $PARSE_AND_LIST_OPTIONS_RELOC_OVERFLOW\""
    },
    {
      "sha": "09780a1e6f575d2a6e780eea98e1b4e9ddbcdb86",
      "filename": "ld/emultempl/elf-x86.em",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emultempl/elf-x86.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emultempl/elf-x86.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/elf-x86.em?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -0,0 +1,57 @@\n+# This shell script emits a C file. -*- C -*-\n+# Copyright (C) 2019 Free Software Foundation, Inc.\n+#\n+# This file is part of the GNU Binutils.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the license, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING3. If not,\n+# see <http://www.gnu.org/licenses/>.\n+#\n+\n+# This file is sourced from elf32.em, and defines x86 specific routines.\n+#\n+fragment <<EOF\n+\n+#include \"elf-linker-x86.h\"\n+\n+static struct elf_linker_x86_params params;\n+\n+/* This is a convenient point to tell BFD about target specific flags.\n+   After the output has been created, but before inputs are read.  */\n+\n+static void\n+elf_x86_create_output_section_statements (void)\n+{\n+  _bfd_elf_linker_x86_set_options (&link_info, &params);\n+}\n+\n+EOF\n+\n+LDEMUL_CREATE_OUTPUT_SECTION_STATEMENTS=elf_x86_create_output_section_statements\n+\n+if test -n \"$CALL_NOP_BYTE\"; then\n+\n+fragment <<EOF\n+\n+static void\n+elf_x86_before_parse (void)\n+{\n+  params.call_nop_byte = $CALL_NOP_BYTE;\n+\n+  gld${EMULATION_NAME}_before_parse ();\n+}\n+\n+EOF\n+\n+LDEMUL_BEFORE_PARSE=elf_x86_before_parse\n+fi"
    },
    {
      "sha": "3e8ee4693e67851e9f497a7393784a8c17bbf8bd",
      "filename": "ld/emultempl/elf32.em",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emultempl/elf32.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emultempl/elf32.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/elf32.em?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -103,7 +103,6 @@ gld${EMULATION_NAME}_before_parse (void)\n   input_flags.dynamic = ${DYNAMIC_LINK-TRUE};\n   config.has_shared = `if test -n \"$GENERATE_SHLIB_SCRIPT\" ; then echo TRUE ; else echo FALSE ; fi`;\n   config.separate_code = `if test \"x${SEPARATE_CODE}\" = xyes ; then echo TRUE ; else echo FALSE ; fi`;\n-  `if test -n \"$CALL_NOP_BYTE\" ; then echo link_info.call_nop_byte = $CALL_NOP_BYTE; fi`;\n   link_info.check_relocs_after_open_input = TRUE;\n   link_info.relro = DEFAULT_LD_Z_RELRO;\n   link_info.separate_code = DEFAULT_LD_Z_SEPARATE_CODE;"
    },
    {
      "sha": "559cb8f0a4bd6ee67684e5a247fcebdd7997e615",
      "filename": "ld/emultempl/solaris2-x86.em",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emultempl/solaris2-x86.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b9c07b2782fb9368f06c2561b7329c384ec5da0/ld/emultempl/solaris2-x86.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/solaris2-x86.em?ref=5b9c07b2782fb9368f06c2561b7329c384ec5da0",
      "patch": "@@ -0,0 +1,23 @@\n+# This shell script emits a C file. -*- C -*-\n+#   Copyright (C) 2019 Free Software Foundation, Inc.\n+#\n+# This file is part of the GNU Binutils.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+# MA 02110-1301, USA.\n+#\n+\n+source_em \"${srcdir}/emultempl/elf-x86.em\"\n+source_em \"${srcdir}/emultempl/solaris2.em\""
    }
  ]
}