{
  "sha": "e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTNiZWIyMWQzNTIxZTdmNWJhOGI0MDczMmVhMWJmZTNjYWZkOTAzMw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:13:56Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:15:55Z"
    },
    "message": "Remove dwarf2_per_cu_data::dwarf2_per_objfile reference in cutu_reader::keep\n\nHere, it should be safe to use dwarf2_per_cu_data->cu->per_objfile, as\nwe know that dwarf2_per_cu_data->cu will be set at this point.\n\nNote that this adds a reference to dwarf2_per_cu_data::cu, which we'll\nwant to remove later, but the current focus is to remove references to\ndwarf2_per_cu_data::dwarf2_per_objfile.  We'll deal with that in a\nsubsequent patch.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (cutu_reader::keep): Access dwarf2_per_objfile\n\tobject through m_this_cu->cu.\n\nChange-Id: I8dc26d4db021e0b9e9306eb033965b2704bba87c",
    "tree": {
      "sha": "be3efb2d6712d7788a4692ad876add55aeb2e453",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/be3efb2d6712d7788a4692ad876add55aeb2e453"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d460f6600a4452b09ee875519ebc70362863fcba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d460f6600a4452b09ee875519ebc70362863fcba",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d460f6600a4452b09ee875519ebc70362863fcba"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 10,
    "deletions": 2
  },
  "files": [
    {
      "sha": "e5f20d322729b36524da93f162ec9c498b5f54ca",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2/read.c (cutu_reader::keep): Access dwarf2_per_objfile\n+\tobject through m_this_cu->cu.\n+\n 2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* dwarf2/read.c (queue_and_load_dwo_tu): Expect a dwarf2_cu as"
    },
    {
      "sha": "d58303098c1f18467177a2ab32149ddbf2479380",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033",
      "patch": "@@ -7162,8 +7162,11 @@ cutu_reader::keep ()\n   gdb_assert (!dummy_p);\n   if (m_new_cu != NULL)\n     {\n-      struct dwarf2_per_objfile *dwarf2_per_objfile\n-\t= m_this_cu->dwarf2_per_objfile;\n+      /* We know that m_this_cu->cu is set, since we are in the process of\n+         parsing the CU.  */\n+      gdb_assert (m_this_cu->cu != nullptr);\n+      dwarf2_per_objfile *dwarf2_per_objfile = m_this_cu->cu->per_objfile;\n+\n       /* Link this CU into read_in_chain.  */\n       m_this_cu->cu->read_in_chain = dwarf2_per_objfile->per_bfd->read_in_chain;\n       dwarf2_per_objfile->per_bfd->read_in_chain = m_this_cu;"
    }
  ]
}