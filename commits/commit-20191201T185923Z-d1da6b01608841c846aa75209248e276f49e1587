{
  "sha": "d1da6b01608841c846aa75209248e276f49e1587",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDFkYTZiMDE2MDg4NDFjODQ2YWE3NTIwOTI0OGUyNzZmNDllMTU4Nw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-11T23:06:00Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-01T18:59:23Z"
    },
    "message": "Allow using less horizontal space in TUI source window\n\nThe source window currently uses a field width of 6 for line numbers,\nand it further aligns to the next tab stop.  This seemed a bit\nwasteful of horizontal space to me, so I changed that in an earlier\npatch.\n\nHowever, that change wasn't universally popular.  This patch instead\nadds the option to use less horizontal space in the TUI source window.\n\ngdb/ChangeLog\n2019-12-01  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-winsource.h (tui_copy_source_line): Add \"ndigits\"\n\tparameter.\n\t* tui/tui-winsource.c (tui_copy_source_line): Add \"ndigits\"\n\tparameter.\n\t* tui/tui-win.h (compact_source): Declare.\n\t* tui/tui-win.c (compact_source): New global.\n\t(tui_set_compact_source, tui_show_compact_source): New functions.\n\t(_initialize_tui_win): Add \"compact-source\" setting.\n\t* tui/tui-source.c (tui_source_window::set_contents): Handle\n\tcompact_source setting.\n\t* tui/tui-disasm.c (tui_disasm_window::set_contents): Update.\n\t* NEWS: Document new setting.\n\ngdb/doc/ChangeLog\n2019-12-01  Tom Tromey  <tom@tromey.com>\n\n\t* gdb.texinfo (TUI Configuration): Document new setting.\n\nChange-Id: I46ce9a68b12c9c79332d510f9c14b3c84b7efadd",
    "tree": {
      "sha": "e3a2f0b33cacf71c077a015f2647690086e70ef9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e3a2f0b33cacf71c077a015f2647690086e70ef9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d1da6b01608841c846aa75209248e276f49e1587",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1da6b01608841c846aa75209248e276f49e1587",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d1da6b01608841c846aa75209248e276f49e1587",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1da6b01608841c846aa75209248e276f49e1587/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "489dbda6a8d6d54bbc349c7048553fc5f791cb41",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/489dbda6a8d6d54bbc349c7048553fc5f791cb41",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/489dbda6a8d6d54bbc349c7048553fc5f791cb41"
    }
  ],
  "stats": {
    "total": 113,
    "additions": 102,
    "deletions": 11
  },
  "files": [
    {
      "sha": "15f3e6c892455700d90fd28be8bff726cc97ce8b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1da6b01608841c846aa75209248e276f49e1587/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1da6b01608841c846aa75209248e276f49e1587/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d1da6b01608841c846aa75209248e276f49e1587",
      "patch": "@@ -1,3 +1,18 @@\n+2019-12-01  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-winsource.h (tui_copy_source_line): Add \"ndigits\"\n+\tparameter.\n+\t* tui/tui-winsource.c (tui_copy_source_line): Add \"ndigits\"\n+\tparameter.\n+\t* tui/tui-win.h (compact_source): Declare.\n+\t* tui/tui-win.c (compact_source): New global.\n+\t(tui_set_compact_source, tui_show_compact_source): New functions.\n+\t(_initialize_tui_win): Add \"compact-source\" setting.\n+\t* tui/tui-source.c (tui_source_window::set_contents): Handle\n+\tcompact_source setting.\n+\t* tui/tui-disasm.c (tui_disasm_window::set_contents): Update.\n+\t* NEWS: Document new setting.\n+\n 2019-11-30  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2read.c (dwarf2_add_field): Include field offset when"
    },
    {
      "sha": "56d4a3467398696c715de4ea0ace7a9ac96a75b0",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1da6b01608841c846aa75209248e276f49e1587/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1da6b01608841c846aa75209248e276f49e1587/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=d1da6b01608841c846aa75209248e276f49e1587",
      "patch": "@@ -188,6 +188,14 @@ show print frame-info\n   'frame', 'stepi'.  The python frame filtering also respect this setting.\n   The 'backtrace' '-frame-info' option can override this global setting.\n \n+set tui compact-source\n+show tui compact-source\n+\n+  Enable the \"compact\" display mode for the TUI source window.  The\n+  compact display uses only as much space as is needed for the line\n+  numbers in the current file, and only a single space to separate the\n+  line numbers from the source.\n+\n info modules [-q] [REGEXP]\n   Return a list of Fortran modules matching REGEXP, or all modules if\n   no REGEXP is given."
    },
    {
      "sha": "8028f789ea4f0b27f8202d0dcd01815927ffc3c4",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1da6b01608841c846aa75209248e276f49e1587/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1da6b01608841c846aa75209248e276f49e1587/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=d1da6b01608841c846aa75209248e276f49e1587",
      "patch": "@@ -1,3 +1,7 @@\n+2019-12-01  Tom Tromey  <tom@tromey.com>\n+\n+\t* gdb.texinfo (TUI Configuration): Document new setting.\n+\n 2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* gdb.texinfo (Define): Indicate that user-defined prefix can"
    },
    {
      "sha": "9b5297ed112a68ed716042e616bc03ddc9d3c49a",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1da6b01608841c846aa75209248e276f49e1587/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1da6b01608841c846aa75209248e276f49e1587/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=d1da6b01608841c846aa75209248e276f49e1587",
      "patch": "@@ -28017,6 +28017,14 @@ Use extra bright or bold and standout mode.\n Set the width of tab stops to be @var{nchars} characters.  This\n setting affects the display of TAB characters in the source and\n assembly windows.\n+\n+@item set tui compact-source @r{[}on@r{|}off@r{]}\n+@kindex set tui compact-source\n+Set whether the TUI source window is displayed in ``compact'' form.\n+The default display uses more space for line numbers and starts the\n+source text at the next tab stop; the compact display uses only as\n+much space as is needed for the line numbers in the current file, and\n+only a single space to separate the line numbers from the source.\n @end table\n \n @node Emacs"
    },
    {
      "sha": "9819cb9ecaf1f6cafd112a6e7cd26e470afdd8a9",
      "filename": "gdb/tui/tui-disasm.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1da6b01608841c846aa75209248e276f49e1587/gdb/tui/tui-disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1da6b01608841c846aa75209248e276f49e1587/gdb/tui/tui-disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.c?ref=d1da6b01608841c846aa75209248e276f49e1587",
      "patch": "@@ -245,7 +245,7 @@ tui_disasm_window::set_contents (struct gdbarch *arch,\n \t   + asm_lines[i].insn);\n \n       const char *ptr = line.c_str ();\n-      src->line = tui_copy_source_line (&ptr, -1, offset, line_width);\n+      src->line = tui_copy_source_line (&ptr, -1, offset, line_width, 0);\n \n       src->line_or_addr.loa = LOA_ADDRESS;\n       src->line_or_addr.u.addr = asm_lines[i].addr;"
    },
    {
      "sha": "32877d7bc87a009205b7a880bf54bd2e9ea7ac98",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 13,
      "deletions": 2,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1da6b01608841c846aa75209248e276f49e1587/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1da6b01608841c846aa75209248e276f49e1587/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=d1da6b01608841c846aa75209248e276f49e1587",
      "patch": "@@ -20,6 +20,7 @@\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n \n #include \"defs.h\"\n+#include <math.h>\n #include <ctype.h>\n #include \"symtab.h\"\n #include \"frame.h\"\n@@ -33,6 +34,7 @@\n #include \"tui/tui-data.h\"\n #include \"tui/tui-io.h\"\n #include \"tui/tui-stack.h\"\n+#include \"tui/tui-win.h\"\n #include \"tui/tui-winsource.h\"\n #include \"tui/tui-source.h\"\n #include \"gdb_curses.h\"\n@@ -59,8 +61,10 @@ tui_source_window::set_contents (struct gdbarch *arch,\n       nlines = (line_no + (height - 2)) - line_no;\n \n       std::string srclines;\n+      const std::vector<off_t> *offsets;\n       if (!g_source_cache.get_source_lines (s, line_no, line_no + nlines,\n-\t\t\t\t\t    &srclines))\n+\t\t\t\t\t    &srclines)\n+\t  || !g_source_cache.get_line_charpos (s, &offsets))\n \tret = TUI_FAILURE;\n       else\n \t{\n@@ -78,6 +82,13 @@ tui_source_window::set_contents (struct gdbarch *arch,\n \t  start_line_or_addr.loa = LOA_LINE;\n \t  cur_line_no = start_line_or_addr.u.line_no = line_no;\n \n+\t  int digits = 0;\n+\t  if (compact_source)\n+\t    {\n+\t      double l = log10 (offsets->size ());\n+\t      digits = 1 + (int) l;\n+\t    }\n+\n \t  const char *iter = srclines.c_str ();\n \t  content.resize (nlines);\n \t  while (cur_line < nlines)\n@@ -89,7 +100,7 @@ tui_source_window::set_contents (struct gdbarch *arch,\n \t      if (*iter != '\\0')\n \t\ttext = tui_copy_source_line (&iter, cur_line_no,\n \t\t\t\t\t     horizontal_offset,\n-\t\t\t\t\t     line_width);\n+\t\t\t\t\t     line_width, digits);\n \n \t      /* Set whether element is the execution point\n \t\t and whether there is a break point on it.  */"
    },
    {
      "sha": "576f9a543dd7fc241ea81a17b6376f41240c56a9",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1da6b01608841c846aa75209248e276f49e1587/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1da6b01608841c846aa75209248e276f49e1587/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=d1da6b01608841c846aa75209248e276f49e1587",
      "patch": "@@ -927,6 +927,29 @@ tui_show_tab_width (struct ui_file *file, int from_tty,\n \n }\n \n+/* See tui-win.h.  */\n+\n+bool compact_source = false;\n+\n+/* Callback for \"set tui compact-source\".  */\n+\n+static void\n+tui_set_compact_source (const char *ignore, int from_tty,\n+\t\t\tstruct cmd_list_element *c)\n+{\n+  if (TUI_SRC_WIN != nullptr)\n+    TUI_SRC_WIN->refill ();\n+}\n+\n+/* Callback for \"show tui compact-source\".  */\n+\n+static void\n+tui_show_compact_source (struct ui_file *file, int from_tty,\n+\t\t\t struct cmd_list_element *c, const char *value)\n+{\n+  printf_filtered (_(\"TUI source window compactness is %s.\\n\"), value);\n+}\n+\n /* Set the tab width of the specified window.  */\n static void\n tui_set_tab_width_command (const char *arg, int from_tty)\n@@ -1484,4 +1507,14 @@ When enabled GDB will print a message when the terminal is resized.\"),\n \t\t\t   show_tui_resize_message,\n \t\t\t   &maintenance_set_cmdlist,\n \t\t\t   &maintenance_show_cmdlist);\n+\n+  add_setshow_boolean_cmd (\"compact-source\", class_tui,\n+\t\t\t   &compact_source, _(\"\\\n+Set whether the TUI source window is compact.\"), _(\"\\\n+Show whether the TUI source window is compact.\"), _(\"\\\n+This variable controls whether the TUI source window is shown\\n\\\n+in a compact form.  The compact form puts the source closer to\\n\\\n+the line numbers and uses less horizontal space.\"),\n+\t\t\t   tui_set_compact_source, tui_show_compact_source,\n+\t\t\t   &tui_setlist, &tui_showlist);\n }"
    },
    {
      "sha": "1ffe683107a47f58fba45a670469f8503c7b2074",
      "filename": "gdb/tui/tui-win.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1da6b01608841c846aa75209248e276f49e1587/gdb/tui/tui-win.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1da6b01608841c846aa75209248e276f49e1587/gdb/tui/tui-win.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.h?ref=d1da6b01608841c846aa75209248e276f49e1587",
      "patch": "@@ -54,4 +54,7 @@ extern void tui_update_gdb_sizes (void);\n /* Create or get the TUI command list.  */\n struct cmd_list_element **tui_get_cmd_list (void);\n \n+/* Whether compact source display should be used.  */\n+extern bool compact_source;\n+\n #endif /* TUI_TUI_WIN_H */"
    },
    {
      "sha": "81937c100c563c94677d364754b0e708964aa798",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1da6b01608841c846aa75209248e276f49e1587/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1da6b01608841c846aa75209248e276f49e1587/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=d1da6b01608841c846aa75209248e276f49e1587",
      "patch": "@@ -69,7 +69,7 @@ tui_display_main ()\n \n std::string\n tui_copy_source_line (const char **ptr, int line_no, int first_col,\n-\t\t      int line_width)\n+\t\t      int line_width, int ndigits)\n {\n   const char *lineptr = *ptr;\n \n@@ -78,10 +78,15 @@ tui_copy_source_line (const char **ptr, int line_no, int first_col,\n \n   if (line_no > 0)\n     {\n-      result = string_printf (\"%-6d\", line_no);\n-      int len = result.size ();\n-      len = len - ((len / tui_tab_width) * tui_tab_width);\n-      result.append (len, ' ');\n+      if (ndigits > 0)\n+\tresult = string_printf (\"%*d \", ndigits, line_no);\n+      else\n+\t{\n+\t  result = string_printf (\"%-6d\", line_no);\n+\t  int len = result.size ();\n+\t  len = len - ((len / tui_tab_width) * tui_tab_width);\n+\t  result.append (len, ' ');\n+\t}\n     }\n \n   int column = 0;"
    },
    {
      "sha": "8b9620034feafe01c5fabffde2a3cd25dea5b74f",
      "filename": "gdb/tui/tui-winsource.h",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1da6b01608841c846aa75209248e276f49e1587/gdb/tui/tui-winsource.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1da6b01608841c846aa75209248e276f49e1587/gdb/tui/tui-winsource.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.h?ref=d1da6b01608841c846aa75209248e276f49e1587",
      "patch": "@@ -238,12 +238,16 @@ extern void tui_update_source_windows_with_line (struct symtab *,\n /* Extract some source text from PTR.  LINE_NO is the line number.  If\n    it is positive, it is printed at the start of the line.  FIRST_COL\n    is the first column to extract, and LINE_WIDTH is the number of\n-   characters to display.  Returns a string holding the desired text.\n-   PTR is updated to point to the start of the next line.  */\n+   characters to display.  NDIGITS is used to format the line number\n+   (if it is positive).  If NDIGITS is greater than 0, then that many\n+   digits are used; otherwise the line number is formatted with 6\n+   digits and the text is aligned to the next tab stop.  Returns a\n+   string holding the desired text.  PTR is updated to point to the\n+   start of the next line.  */\n \n extern std::string tui_copy_source_line (const char **ptr,\n \t\t\t\t\t int line_no, int first_col,\n-\t\t\t\t\t int line_width);\n+\t\t\t\t\t int line_width, int ndigits);\n \n /* Constant definitions. */\n #define SCROLL_THRESHOLD 2\t/* Threshold for lazy scroll.  */"
    }
  ]
}