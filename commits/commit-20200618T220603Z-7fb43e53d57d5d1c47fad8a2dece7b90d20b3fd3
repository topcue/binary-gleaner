{
  "sha": "7fb43e53d57d5d1c47fad8a2dece7b90d20b3fd3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2ZiNDNlNTNkNTdkNWQxYzQ3ZmFkOGEyZGVjZTdiOTBkMjBiM2ZkMw==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-06-18T20:28:22Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-06-18T22:06:03Z"
    },
    "message": "Don't write to inferior_ptid in procfs.c\n\nThe inferior_ptid write in procfs_do_thread_registers should be\nunnecessary because the target_fetch_registers method should (and\ndoes) extract the ptid from the regcache.\n\nNot tested.\n\ngdb/ChangeLog:\n2020-06-18  Pedro Alves  <palves@redhat.com>\n\n\t* procfs.c (procfs_target::attach): Don't write to inferior_ptid.\n\t(procfs_target::detach): Use switch_to_no_thread\n\tinstead of writing to inferior_ptid directly.\n\t(do_attach): Change return type to void.  Switch to the added\n\tthread.\n\t(procfs_target::create_inferior): Switch to the added thread.\n\t(procfs_do_thread_registers): Don't write to inferior_ptid.",
    "tree": {
      "sha": "a76e70ff466f281f09981344f451141e43635405",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a76e70ff466f281f09981344f451141e43635405"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7fb43e53d57d5d1c47fad8a2dece7b90d20b3fd3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7fb43e53d57d5d1c47fad8a2dece7b90d20b3fd3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7fb43e53d57d5d1c47fad8a2dece7b90d20b3fd3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7fb43e53d57d5d1c47fad8a2dece7b90d20b3fd3/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "18493a005acc8fbccbee4a2b767334eaaf636dd2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/18493a005acc8fbccbee4a2b767334eaaf636dd2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/18493a005acc8fbccbee4a2b767334eaaf636dd2"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 18,
    "deletions": 10
  },
  "files": [
    {
      "sha": "2a082f277b83b8b80af74777225cffd36076667c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7fb43e53d57d5d1c47fad8a2dece7b90d20b3fd3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7fb43e53d57d5d1c47fad8a2dece7b90d20b3fd3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7fb43e53d57d5d1c47fad8a2dece7b90d20b3fd3",
      "patch": "@@ -1,3 +1,13 @@\n+2020-06-18  Pedro Alves  <palves@redhat.com>\n+\n+\t* procfs.c (procfs_target::attach): Don't write to inferior_ptid.\n+\t(procfs_target::detach): Use switch_to_no_thread\n+\tinstead of writing to inferior_ptid directly.\n+\t(do_attach): Change return type to void.  Switch to the added\n+\tthread.\n+\t(procfs_target::create_inferior): Switch to the added thread.\n+\t(procfs_do_thread_registers): Don't write to inferior_ptid.\n+\n 2020-06-18  Pedro Alves  <palves@redhat.com>\n \n \t* infrun.c (generic_mourn_inferior): Use switch_to_thread instead"
    },
    {
      "sha": "71472a5e38abc5971dab4e860e47444f2612c530",
      "filename": "gdb/procfs.c",
      "status": "modified",
      "additions": 8,
      "deletions": 10,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7fb43e53d57d5d1c47fad8a2dece7b90d20b3fd3/gdb/procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7fb43e53d57d5d1c47fad8a2dece7b90d20b3fd3/gdb/procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/procfs.c?ref=7fb43e53d57d5d1c47fad8a2dece7b90d20b3fd3",
      "patch": "@@ -1726,7 +1726,7 @@ proc_iterate_over_threads (procinfo *pi,\n /* Here are all of the gdb target vector functions and their\n    friends.  */\n \n-static ptid_t do_attach (ptid_t ptid);\n+static void do_attach (ptid_t ptid);\n static void do_detach ();\n static void proc_trace_syscalls_1 (procinfo *pi, int syscallnum,\n \t\t\t\t   int entry_or_exit, int mode, int from_tty);\n@@ -1815,7 +1815,7 @@ procfs_target::attach (const char *args, int from_tty)\n \n       fflush (stdout);\n     }\n-  inferior_ptid = do_attach (ptid_t (pid));\n+  do_attach (ptid_t (pid));\n   if (!target_is_pushed (this))\n     push_target (this);\n }\n@@ -1839,12 +1839,12 @@ procfs_target::detach (inferior *inf, int from_tty)\n \n   do_detach ();\n \n-  inferior_ptid = null_ptid;\n+  switch_to_no_thread ();\n   detach_inferior (inf);\n   maybe_unpush_target ();\n }\n \n-static ptid_t\n+static void\n do_attach (ptid_t ptid)\n {\n   procinfo *pi;\n@@ -1912,9 +1912,8 @@ do_attach (ptid_t ptid)\n \n   /* Add it to gdb's thread list.  */\n   ptid = ptid_t (pi->pid, lwpid, 0);\n-  add_thread (&the_procfs_target, ptid);\n-\n-  return ptid;\n+  thread_info *thr = add_thread (&the_procfs_target, ptid);\n+  switch_to_thread (thr);\n }\n \n static void\n@@ -3013,7 +3012,8 @@ procfs_target::create_inferior (const char *exec_file,\n   /* We have something that executes now.  We'll be running through\n      the shell at this point (if startup-with-shell is true), but the\n      pid shouldn't change.  */\n-  add_thread_silent (this, ptid_t (pid));\n+  thread_info *thr = add_thread_silent (this, ptid_t (pid));\n+  switch_to_thread (thr);\n \n   procfs_init_inferior (pid);\n }\n@@ -3676,8 +3676,6 @@ procfs_do_thread_registers (bfd *obfd, ptid_t ptid,\n      once it is implemented in this platform:\n      gdbarch_iterate_over_regset_sections().  */\n \n-  scoped_restore save_inferior_ptid = make_scoped_restore (&inferior_ptid);\n-  inferior_ptid = ptid;\n   target_fetch_registers (regcache, -1);\n \n   fill_gregset (regcache, &gregs, -1);"
    }
  ]
}