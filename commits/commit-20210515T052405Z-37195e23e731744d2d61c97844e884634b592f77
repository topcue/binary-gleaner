{
  "sha": "37195e23e731744d2d61c97844e884634b592f77",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzcxOTVlMjNlNzMxNzQ0ZDJkNjFjOTc4NDRlODg0NjM0YjU5MmY3Nw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-15T05:18:48Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-15T05:24:05Z"
    },
    "message": "read_debug_line_header\n\nThis patch also better constrains the data read, and removes pointer UB.\n\n\t* dwarf.c (read_debug_line_header): Delete initial_length_size.\n\tAvoid pointer UB.  Keep within length specified by header.\n\tDelete dead code.",
    "tree": {
      "sha": "82de8ba02e9cf68c9be4cab1a00d70e043d16d66",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/82de8ba02e9cf68c9be4cab1a00d70e043d16d66"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/37195e23e731744d2d61c97844e884634b592f77",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37195e23e731744d2d61c97844e884634b592f77",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/37195e23e731744d2d61c97844e884634b592f77",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37195e23e731744d2d61c97844e884634b592f77/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "edba4e4abaf679d3ce4d61fcbfe77b2bebfd4537",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/edba4e4abaf679d3ce4d61fcbfe77b2bebfd4537",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/edba4e4abaf679d3ce4d61fcbfe77b2bebfd4537"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 11,
    "deletions": 18
  },
  "files": [
    {
      "sha": "93a47cbbebbebcdc1b3bd84bedad8cfbe1e25b10",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37195e23e731744d2d61c97844e884634b592f77/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37195e23e731744d2d61c97844e884634b592f77/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=37195e23e731744d2d61c97844e884634b592f77",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf.c (read_debug_line_header): Delete initial_length_size.\n+\tAvoid pointer UB.  Keep within length specified by header.\n+\tDelete dead code.\n+\n 2021-05-15  Alan Modra  <amodra@gmail.com>\n \n \t* dwarf.c (process_debug_info): Always do the first CU length"
    },
    {
      "sha": "4f69dbb8f85c6dac2d9e2485c43d09e29200a3a9",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 5,
      "deletions": 18,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37195e23e731744d2d61c97844e884634b592f77/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37195e23e731744d2d61c97844e884634b592f77/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=37195e23e731744d2d61c97844e884634b592f77",
      "patch": "@@ -4053,7 +4053,6 @@ read_debug_line_header (struct dwarf_section * section,\n \t\t\tunsigned char ** end_of_sequence)\n {\n   unsigned char *hdrptr;\n-  unsigned int initial_length_size;\n \n   /* Extract information from the Line Number Program Header.\n      (section 6.2.4 in the Dwarf3 doc).  */\n@@ -4067,15 +4066,11 @@ read_debug_line_header (struct dwarf_section * section,\n       /* This section is 64-bit DWARF 3.  */\n       SAFE_BYTE_GET_AND_INC (linfo->li_length, hdrptr, 8, end);\n       linfo->li_offset_size = 8;\n-      initial_length_size = 12;\n     }\n   else\n-    {\n-      linfo->li_offset_size = 4;\n-      initial_length_size = 4;\n-    }\n+    linfo->li_offset_size = 4;\n \n-  if (linfo->li_length + initial_length_size > section->size)\n+  if (linfo->li_length > (size_t) (end - hdrptr))\n     {\n       /* If the length field has a relocation against it, then we should\n \t not complain if it is inaccurate (and probably negative).  This\n@@ -4085,7 +4080,7 @@ read_debug_line_header (struct dwarf_section * section,\n \t is used to compute the correct length once that is done.  */\n       if (reloc_at (section, (hdrptr - section->start) - linfo->li_offset_size))\n \t{\n-\t  linfo->li_length = (end - data) - initial_length_size;\n+\t  linfo->li_length = end - hdrptr;\n \t}\n       else\n \t{\n@@ -4094,6 +4089,7 @@ read_debug_line_header (struct dwarf_section * section,\n \t  return NULL;\n \t}\n     }\n+  end = hdrptr + linfo->li_length;\n \n   /* Get and check the version number.  */\n   SAFE_BYTE_GET_AND_INC (linfo->li_version, hdrptr, 2, end);\n@@ -4144,16 +4140,7 @@ read_debug_line_header (struct dwarf_section * section,\n   SAFE_BYTE_GET_AND_INC (linfo->li_line_range, hdrptr, 1, end);\n   SAFE_BYTE_GET_AND_INC (linfo->li_opcode_base, hdrptr, 1, end);\n \n-  * end_of_sequence = data + linfo->li_length + initial_length_size;\n-  /* PR 17512: file:002-117414-0.004.  */\n-  if (* end_of_sequence > end)\n-    {\n-      warn (_(\"Line length %s extends beyond end of section\\n\"),\n-\t    dwarf_vmatoa (\"u\", linfo->li_length));\n-      * end_of_sequence = end;\n-      return NULL;\n-    }\n-\n+  *end_of_sequence = end;\n   return hdrptr;\n }\n "
    }
  ]
}