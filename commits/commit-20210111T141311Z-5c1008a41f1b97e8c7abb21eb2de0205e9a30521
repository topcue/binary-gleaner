{
  "sha": "5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWMxMDA4YTQxZjFiOTdlOGM3YWJiMjFlYjJkZTAyMDVlOWEzMDUyMQ==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-09T19:16:10Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-11T14:13:11Z"
    },
    "message": "sim: call SIM_AC_OPTION_WARNINGS(no) in remaining ports\n\nWe want all ports to opt into extra warnings as the default compiler\nsettings lets a lot slide.  Opt all the ports that haven't already in\nto the warning system.  None of them build with -Werror, so disable\nthat by default.  Hopefully someone finds these important enough to\nstart fixing at some point.",
    "tree": {
      "sha": "54cabb32e5c04936cc2d7896c962a5280ec4260f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/54cabb32e5c04936cc2d7896c962a5280ec4260f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a0c38f0d705129e14c025de814d7fd619edde650",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0c38f0d705129e14c025de814d7fd619edde650",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a0c38f0d705129e14c025de814d7fd619edde650"
    }
  ],
  "stats": {
    "total": 1150,
    "additions": 1130,
    "deletions": 20
  },
  "files": [
    {
      "sha": "24ed05ed7787cb64b6729c8f43de27438fed2f2a",
      "filename": "sim/bpf/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/bpf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/bpf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/ChangeLog?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Call SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "52d64ce601211577549320be70cd55930d52d9b5",
      "filename": "sim/bpf/configure",
      "status": "modified",
      "additions": 107,
      "deletions": 2,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/bpf/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/bpf/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/configure?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -788,6 +788,9 @@ enable_sim_endian\n enable_sim_alignment\n enable_sim_scache\n enable_sim_default_model\n+enable_werror\n+enable_build_warnings\n+enable_sim_build_warnings\n enable_cgen_maint\n '\n       ac_precious_vars='build_alias\n@@ -1448,6 +1451,11 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-werror         treat compile warnings as errors\n+  --enable-build-warnings enable build-time compiler warnings if gcc is used\n+  --enable-sim-build-warnings\n+                          enable SIM specific build-time compiler warnings if\n+                          gcc is used\n   --enable-cgen-maint=DIR build cgen generated files\n \n Optional Packages:\n@@ -12934,7 +12942,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12937 \"configure\"\n+#line 12945 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13040,7 +13048,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13043 \"configure\"\n+#line 13051 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13777,6 +13785,103 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+    ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n cgen_maint=no\n cgen=guile\n cgendir='$(srcdir)/../../cgen'"
    },
    {
      "sha": "e9df51ab1ed5e704e8b5bb19fe399b8654209a89",
      "filename": "sim/bpf/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/bpf/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/bpf/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/configure.ac?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -9,6 +9,7 @@ SIM_AC_OPTION_ENDIAN([], [LITTLE])\n SIM_AC_OPTION_ALIGNMENT(NONSTRICT_ALIGNMENT)\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL([bpf-def])\n+SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_CGEN_MAINT\n \n SIM_AC_OUTPUT"
    },
    {
      "sha": "68599f7afc647124c8e2616a8b5a36ba2b868c03",
      "filename": "sim/erc32/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/erc32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/erc32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/ChangeLog?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Call SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "71558e1851f93dbeaec92921899a3b6548eacb83",
      "filename": "sim/erc32/configure",
      "status": "modified",
      "additions": 107,
      "deletions": 2,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/erc32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/erc32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/configure?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -782,6 +782,9 @@ enable_sim_environment\n enable_sim_inline\n with_pkgversion\n with_bugurl\n+enable_werror\n+enable_build_warnings\n+enable_sim_build_warnings\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1431,6 +1434,11 @@ Optional Features:\n                           environment\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n+  --enable-werror         treat compile warnings as errors\n+  --enable-build-warnings enable build-time compiler warnings if gcc is used\n+  --enable-sim-build-warnings\n+                          enable SIM specific build-time compiler warnings if\n+                          gcc is used\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -12916,7 +12924,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12919 \"configure\"\n+#line 12927 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13022,7 +13030,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13025 \"configure\"\n+#line 13033 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13573,6 +13581,103 @@ _ACEOF\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+    ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n # In the Cygwin environment, we need some additional flags.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for cygwin\" >&5\n $as_echo_n \"checking for cygwin... \" >&6; }"
    },
    {
      "sha": "2c81b846a8281a9cd1d9db85d8f12b9229fa77e5",
      "filename": "sim/erc32/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/erc32/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/erc32/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/configure.ac?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -18,6 +18,7 @@ AC_INIT(Makefile.in)\n sinclude(../common/acinclude.m4)\n \n SIM_AC_COMMON\n+SIM_AC_OPTION_WARNINGS(no)\n \n # In the Cygwin environment, we need some additional flags.\n AC_CACHE_CHECK([for cygwin], sim_cv_os_cygwin,"
    },
    {
      "sha": "5fa03620f9175b4f4a9def197dfeafc14ea25e8a",
      "filename": "sim/frv/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/frv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/frv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/ChangeLog?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Call SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "dd0cf46484353f5d147ddebce101ab5f1686556d",
      "filename": "sim/frv/configure",
      "status": "modified",
      "additions": 107,
      "deletions": 2,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/frv/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/frv/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/configure?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -788,6 +788,9 @@ enable_sim_endian\n enable_sim_alignment\n enable_sim_scache\n enable_sim_default_model\n+enable_werror\n+enable_build_warnings\n+enable_sim_build_warnings\n enable_cgen_maint\n enable_sim_trapdump\n enable_sim_hardware\n@@ -1449,6 +1452,11 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-werror         treat compile warnings as errors\n+  --enable-build-warnings enable build-time compiler warnings if gcc is used\n+  --enable-sim-build-warnings\n+                          enable SIM specific build-time compiler warnings if\n+                          gcc is used\n   --enable-cgen-maint=DIR build cgen generated files\n   --enable-sim-trapdump   Make unknown traps dump the registers\n   --enable-sim-hardware=LIST\n@@ -12938,7 +12946,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12941 \"configure\"\n+#line 12949 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13044,7 +13052,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13047 \"configure\"\n+#line 13055 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13722,6 +13730,103 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+    ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n cgen_maint=no\n cgen=guile\n cgendir='$(srcdir)/../../cgen'"
    },
    {
      "sha": "5588533a5d61b825b0a0358d43ada525fce39d4b",
      "filename": "sim/frv/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/frv/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/frv/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/configure.ac?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -8,6 +8,7 @@ SIM_AC_OPTION_ENDIAN(BIG)\n SIM_AC_OPTION_ALIGNMENT(STRICT_ALIGNMENT)\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(fr500)\n+SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_CGEN_MAINT\n \n #"
    },
    {
      "sha": "1f9281fd4b1ab7147dcc9b84a8567504e21d87a6",
      "filename": "sim/h8300/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/h8300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/h8300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/ChangeLog?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Call SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "5254a367857ab34361f05d0e0d79907e68954f9f",
      "filename": "sim/h8300/configure",
      "status": "modified",
      "additions": 107,
      "deletions": 2,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/h8300/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/h8300/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/configure?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -782,6 +782,9 @@ with_pkgversion\n with_bugurl\n enable_sim_endian\n enable_sim_alignment\n+enable_werror\n+enable_build_warnings\n+enable_sim_build_warnings\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1436,6 +1439,11 @@ Optional Features:\n   --enable-sim-alignment=align\n                           Specify strict, nonstrict or forced alignment of\n                           memory accesses\n+  --enable-werror         treat compile warnings as errors\n+  --enable-build-warnings enable build-time compiler warnings if gcc is used\n+  --enable-sim-build-warnings\n+                          enable SIM specific build-time compiler warnings if\n+                          gcc is used\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -12921,7 +12929,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12924 \"configure\"\n+#line 12932 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13027,7 +13035,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13030 \"configure\"\n+#line 13038 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13670,6 +13678,103 @@ fi\n fi\n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+    ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n for ac_header in sys/param.h\n do :\n   ac_fn_c_check_header_mongrel \"$LINENO\" \"sys/param.h\" \"ac_cv_header_sys_param_h\" \"$ac_includes_default\""
    },
    {
      "sha": "8caacadd662de48dbd07b50e43d884b07df9ee56",
      "filename": "sim/h8300/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/h8300/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/h8300/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/configure.ac?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -6,6 +6,7 @@ SIM_AC_COMMON\n \n SIM_AC_OPTION_ENDIAN(BIG)\n SIM_AC_OPTION_ALIGNMENT(NONSTRICT_ALIGNMENT)\n+SIM_AC_OPTION_WARNINGS(no)\n \n AC_CHECK_HEADERS(sys/param.h)\n "
    },
    {
      "sha": "f609759169c5a5c5062fc05a576cce54e40c89f2",
      "filename": "sim/iq2000/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/iq2000/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/iq2000/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/ChangeLog?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Call SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "cd7acea00dce4d18386bc7f3036f37a06449a935",
      "filename": "sim/iq2000/configure",
      "status": "modified",
      "additions": 107,
      "deletions": 2,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/iq2000/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/iq2000/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/configure?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -787,6 +787,9 @@ enable_sim_endian\n enable_sim_alignment\n enable_sim_scache\n enable_sim_default_model\n+enable_werror\n+enable_build_warnings\n+enable_sim_build_warnings\n enable_cgen_maint\n enable_sim_hardware\n '\n@@ -1447,6 +1450,11 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-werror         treat compile warnings as errors\n+  --enable-build-warnings enable build-time compiler warnings if gcc is used\n+  --enable-sim-build-warnings\n+                          enable SIM specific build-time compiler warnings if\n+                          gcc is used\n   --enable-cgen-maint=DIR build cgen generated files\n   --enable-sim-hardware=LIST\n                           Specify the hardware to be included in the build.\n@@ -12935,7 +12943,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12938 \"configure\"\n+#line 12946 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13041,7 +13049,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13044 \"configure\"\n+#line 13052 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13719,6 +13727,103 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+    ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n cgen_maint=no\n cgen=guile\n cgendir='$(srcdir)/../../cgen'"
    },
    {
      "sha": "4a1b28baa235c719586ebd15af3ed761064097f1",
      "filename": "sim/iq2000/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/iq2000/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/iq2000/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/configure.ac?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -8,6 +8,7 @@ SIM_AC_OPTION_ENDIAN(BIG)\n SIM_AC_OPTION_ALIGNMENT(STRICT_ALIGNMENT)\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(iq2000)\n+SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_CGEN_MAINT\n \n SIM_AC_OPTION_HARDWARE(yes,\"\",\"\")"
    },
    {
      "sha": "0c93128195d9839ac2cf82d27867dddfdfa4ac71",
      "filename": "sim/lm32/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/lm32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/lm32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/ChangeLog?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Call SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "8f5aae6ef26d11d6c6f6150dec38b532bc87e166",
      "filename": "sim/lm32/configure",
      "status": "modified",
      "additions": 107,
      "deletions": 2,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/lm32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/lm32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/configure?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -787,6 +787,9 @@ enable_sim_endian\n enable_sim_alignment\n enable_sim_scache\n enable_sim_default_model\n+enable_werror\n+enable_build_warnings\n+enable_sim_build_warnings\n enable_cgen_maint\n enable_sim_hardware\n '\n@@ -1447,6 +1450,11 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-werror         treat compile warnings as errors\n+  --enable-build-warnings enable build-time compiler warnings if gcc is used\n+  --enable-sim-build-warnings\n+                          enable SIM specific build-time compiler warnings if\n+                          gcc is used\n   --enable-cgen-maint=DIR build cgen generated files\n   --enable-sim-hardware=LIST\n                           Specify the hardware to be included in the build.\n@@ -12935,7 +12943,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12938 \"configure\"\n+#line 12946 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13041,7 +13049,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13044 \"configure\"\n+#line 13052 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13719,6 +13727,103 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+    ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n cgen_maint=no\n cgen=guile\n cgendir='$(srcdir)/../../cgen'"
    },
    {
      "sha": "7da76d989fe421f7f702db82f64b0372e8ebe65c",
      "filename": "sim/lm32/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/lm32/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/lm32/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/configure.ac?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -8,6 +8,7 @@ SIM_AC_OPTION_ENDIAN(BIG)\n SIM_AC_OPTION_ALIGNMENT(STRICT_ALIGNMENT,STRICT_ALIGNMENT)\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(lm32)\n+SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_CGEN_MAINT\n SIM_AC_OPTION_HARDWARE(yes,,lm32cpu lm32timer lm32uart)\n "
    },
    {
      "sha": "551e12b7bcc126a9e0c681cc241b24f1d59c0310",
      "filename": "sim/m32r/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/m32r/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/m32r/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/ChangeLog?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Call SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "efcaed96fdfb665c5a32bb34d57a00c32308ca4d",
      "filename": "sim/m32r/configure",
      "status": "modified",
      "additions": 107,
      "deletions": 2,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/m32r/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/m32r/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/configure?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -789,6 +789,9 @@ enable_sim_endian\n enable_sim_alignment\n enable_sim_scache\n enable_sim_default_model\n+enable_werror\n+enable_build_warnings\n+enable_sim_build_warnings\n enable_cgen_maint\n enable_sim_hardware\n '\n@@ -1449,6 +1452,11 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-werror         treat compile warnings as errors\n+  --enable-build-warnings enable build-time compiler warnings if gcc is used\n+  --enable-sim-build-warnings\n+                          enable SIM specific build-time compiler warnings if\n+                          gcc is used\n   --enable-cgen-maint=DIR build cgen generated files\n   --enable-sim-hardware=LIST\n                           Specify the hardware to be included in the build.\n@@ -12937,7 +12945,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12940 \"configure\"\n+#line 12948 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13043,7 +13051,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13046 \"configure\"\n+#line 13054 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13721,6 +13729,103 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+    ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n cgen_maint=no\n cgen=guile\n cgendir='$(srcdir)/../../cgen'"
    },
    {
      "sha": "e74a8a57bed835532c9f4a781574429d5fd3d34b",
      "filename": "sim/m32r/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/m32r/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/m32r/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/configure.ac?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -8,6 +8,7 @@ SIM_AC_OPTION_ENDIAN(BIG)\n SIM_AC_OPTION_ALIGNMENT(STRICT_ALIGNMENT)\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(m32r/d)\n+SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_CGEN_MAINT\n \n   case \"${target_alias}\" in"
    },
    {
      "sha": "016ffd039cfa33b2d142e4654fc762783aba768f",
      "filename": "sim/or1k/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/or1k/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/or1k/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/ChangeLog?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Call SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n \n \t* sim-main.h: Include config.h."
    },
    {
      "sha": "8d8746e4e9a38cfa04be6d6124e82d2413e606ad",
      "filename": "sim/or1k/configure",
      "status": "modified",
      "additions": 107,
      "deletions": 2,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/or1k/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/or1k/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/configure?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -788,6 +788,9 @@ enable_sim_alignment\n enable_sim_bitsize\n enable_sim_scache\n enable_sim_default_model\n+enable_werror\n+enable_build_warnings\n+enable_sim_build_warnings\n enable_cgen_maint\n '\n       ac_precious_vars='build_alias\n@@ -1448,6 +1451,11 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-werror         treat compile warnings as errors\n+  --enable-build-warnings enable build-time compiler warnings if gcc is used\n+  --enable-sim-build-warnings\n+                          enable SIM specific build-time compiler warnings if\n+                          gcc is used\n   --enable-cgen-maint=DIR build cgen generated files\n \n Optional Packages:\n@@ -12934,7 +12942,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12937 \"configure\"\n+#line 12945 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13040,7 +13048,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13043 \"configure\"\n+#line 13051 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13777,6 +13785,103 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+    ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking default sim environment setting\" >&5\n $as_echo_n \"checking default sim environment setting... \" >&6; }\n sim_environment=\"ALL_ENVIRONMENT\""
    },
    {
      "sha": "19a1da319bc05dddee139a0e9442934f54ff96ed",
      "filename": "sim/or1k/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/or1k/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/or1k/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/configure.ac?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -9,6 +9,7 @@ SIM_AC_OPTION_ALIGNMENT(STRICT_ALIGNMENT)\n SIM_AC_OPTION_BITSIZE([32], [31], [32])\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL([or1200])\n+SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_ENVIRONMENT\n SIM_AC_OPTION_INLINE()\n SIM_AC_OPTION_CGEN_MAINT"
    },
    {
      "sha": "ddce2366f25040b9637fc8822955dbcd7beae640",
      "filename": "sim/rl78/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/rl78/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/rl78/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/ChangeLog?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Call SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n \n \t* cpu.h (pc): Change to an extern."
    },
    {
      "sha": "842091b27775485b92736c74ece169bc5b81bfc1",
      "filename": "sim/rl78/configure",
      "status": "modified",
      "additions": 107,
      "deletions": 2,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/rl78/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/rl78/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/configure?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -780,6 +780,9 @@ enable_sim_environment\n enable_sim_inline\n with_pkgversion\n with_bugurl\n+enable_werror\n+enable_build_warnings\n+enable_sim_build_warnings\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1429,6 +1432,11 @@ Optional Features:\n                           environment\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n+  --enable-werror         treat compile warnings as errors\n+  --enable-build-warnings enable build-time compiler warnings if gcc is used\n+  --enable-sim-build-warnings\n+                          enable SIM specific build-time compiler warnings if\n+                          gcc is used\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -12914,7 +12922,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12917 \"configure\"\n+#line 12925 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13020,7 +13028,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13023 \"configure\"\n+#line 13031 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13571,6 +13579,103 @@ _ACEOF\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+    ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n for ac_header in getopt.h\n do :\n   ac_fn_c_check_header_mongrel \"$LINENO\" \"getopt.h\" \"ac_cv_header_getopt_h\" \"$ac_includes_default\""
    },
    {
      "sha": "65bb40766f594e30b248f0a046b6dac8bdf0d226",
      "filename": "sim/rl78/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/rl78/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/rl78/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/configure.ac?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -22,6 +22,7 @@ AC_INIT(Makefile.in)\n sinclude(../common/acinclude.m4)\n \n SIM_AC_COMMON\n+SIM_AC_OPTION_WARNINGS(no)\n \n AC_CHECK_HEADERS(getopt.h)\n "
    },
    {
      "sha": "684c38a21803a6f5eb04370eef3962c123d278a0",
      "filename": "sim/rx/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/rx/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/rx/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/ChangeLog?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Call SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "3969c67038011d79df98b8e4dd0ba3e5a73a64c4",
      "filename": "sim/rx/configure",
      "status": "modified",
      "additions": 107,
      "deletions": 2,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/rx/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/rx/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/configure?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -780,6 +780,9 @@ enable_sim_environment\n enable_sim_inline\n with_pkgversion\n with_bugurl\n+enable_werror\n+enable_build_warnings\n+enable_sim_build_warnings\n enable_cycle_accurate\n enable_cycle_stats\n '\n@@ -1431,6 +1434,11 @@ Optional Features:\n                           environment\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n+  --enable-werror         treat compile warnings as errors\n+  --enable-build-warnings enable build-time compiler warnings if gcc is used\n+  --enable-sim-build-warnings\n+                          enable SIM specific build-time compiler warnings if\n+                          gcc is used\n   --disable-cycle-accurate\n                           Disable cycle accurate simulation (faster runtime)\n   --disable-cycle-stats   Disable cycle statistics (faster runtime)\n@@ -12919,7 +12927,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12922 \"configure\"\n+#line 12930 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13025,7 +13033,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13028 \"configure\"\n+#line 13036 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13576,6 +13584,103 @@ _ACEOF\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+    ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n for ac_header in getopt.h\n do :\n   ac_fn_c_check_header_mongrel \"$LINENO\" \"getopt.h\" \"ac_cv_header_getopt_h\" \"$ac_includes_default\""
    },
    {
      "sha": "6c14434f4af29b846e4f1075f432894b7a3fe6f1",
      "filename": "sim/rx/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/rx/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c1008a41f1b97e8c7abb21eb2de0205e9a30521/sim/rx/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/configure.ac?ref=5c1008a41f1b97e8c7abb21eb2de0205e9a30521",
      "patch": "@@ -22,6 +22,7 @@ AC_INIT(Makefile.in)\n sinclude(../common/acinclude.m4)\n \n SIM_AC_COMMON\n+SIM_AC_OPTION_WARNINGS(no)\n \n AC_CHECK_HEADERS(getopt.h)\n "
    }
  ]
}