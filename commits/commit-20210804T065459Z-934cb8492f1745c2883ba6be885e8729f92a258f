{
  "sha": "934cb8492f1745c2883ba6be885e8729f92a258f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTM0Y2I4NDkyZjE3NDVjMjg4M2JhNmJlODg1ZTg3MjlmOTJhMjU4Zg==",
  "commit": {
    "author": {
      "name": "Cl\u00e9ment Chigot",
      "email": "clement.chigot@atos.net",
      "date": "2021-07-30T11:56:54Z"
    },
    "committer": {
      "name": "Cl\u00e9ment Chigot",
      "email": "clement.chigot@atos.net",
      "date": "2021-08-04T06:54:59Z"
    },
    "message": "gas: always add dummy symbols when creating XCOFF sections.\n\nMost of the algorithms for XCOFF in tc-ppc.c assume that\nthe csects field of a ppc_xcoff_section isn't NULL.\nThis was already made for most of the sections with the creation\nof a dummy symbol.\nThis patch simply mades it default when creating a xcoff_section.\n\ngas/\n\t* config/tc-ppc.c (ppc_init_xcoff_section): Always create\n\tthe dummy symbol.\n\t(md_begin): Adjust ppc_init_xcoff_section call.\n\t(ppc_comm): Likewise.\n\t(ppc_change_csect): Likewise.",
    "tree": {
      "sha": "d2f4ddc14f74b40ffb87949553981fae4d4da0d7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d2f4ddc14f74b40ffb87949553981fae4d4da0d7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/934cb8492f1745c2883ba6be885e8729f92a258f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/934cb8492f1745c2883ba6be885e8729f92a258f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/934cb8492f1745c2883ba6be885e8729f92a258f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/934cb8492f1745c2883ba6be885e8729f92a258f/comments",
  "author": {
    "login": "Helflym",
    "id": 23002587,
    "node_id": "MDQ6VXNlcjIzMDAyNTg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/23002587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Helflym",
    "html_url": "https://github.com/Helflym",
    "followers_url": "https://api.github.com/users/Helflym/followers",
    "following_url": "https://api.github.com/users/Helflym/following{/other_user}",
    "gists_url": "https://api.github.com/users/Helflym/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Helflym/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Helflym/subscriptions",
    "organizations_url": "https://api.github.com/users/Helflym/orgs",
    "repos_url": "https://api.github.com/users/Helflym/repos",
    "events_url": "https://api.github.com/users/Helflym/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Helflym/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "Helflym",
    "id": 23002587,
    "node_id": "MDQ6VXNlcjIzMDAyNTg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/23002587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Helflym",
    "html_url": "https://github.com/Helflym",
    "followers_url": "https://api.github.com/users/Helflym/followers",
    "following_url": "https://api.github.com/users/Helflym/following{/other_user}",
    "gists_url": "https://api.github.com/users/Helflym/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Helflym/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Helflym/subscriptions",
    "organizations_url": "https://api.github.com/users/Helflym/orgs",
    "repos_url": "https://api.github.com/users/Helflym/repos",
    "events_url": "https://api.github.com/users/Helflym/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Helflym/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "47fcfcbadce36c7ccc00c69b4c80717a0d6b9288",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/47fcfcbadce36c7ccc00c69b4c80717a0d6b9288",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/47fcfcbadce36c7ccc00c69b4c80717a0d6b9288"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 11,
    "deletions": 17
  },
  "files": [
    {
      "sha": "b7567083f662cedcdb1f1a87f8fa077df6112b06",
      "filename": "gas/config/tc-ppc.c",
      "status": "modified",
      "additions": 11,
      "deletions": 17,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/934cb8492f1745c2883ba6be885e8729f92a258f/gas/config/tc-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/934cb8492f1745c2883ba6be885e8729f92a258f/gas/config/tc-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ppc.c?ref=934cb8492f1745c2883ba6be885e8729f92a258f",
      "patch": "@@ -1014,18 +1014,15 @@ ppc_xcoff_section_is_initialized (struct ppc_xcoff_section *section)\n \n /* Initialize a ppc_xcoff_section.\n    Dummy symbols are used to ensure the position of .text over .data\n-   and .tdata.  These symbols won't be output.  */\n+   and .tdata.  Moreover, they allow all algorithms here to be sure that\n+   csects isn't NULL.  These symbols won't be output.  */\n static void\n-ppc_init_xcoff_section (struct ppc_xcoff_section *s, segT seg,\n-\t\t\tbool need_dummy)\n+ppc_init_xcoff_section (struct ppc_xcoff_section *s, segT seg)\n {\n   s->segment = seg;\n   s->next_subsegment = 2;\n-  if (need_dummy)\n-    {\n-      s->csects = symbol_make (\"dummy\\001\");\n-      symbol_get_tc (s->csects)->within = s->csects;\n-    }\n+  s->csects = symbol_make (\"dummy\\001\");\n+  symbol_get_tc (s->csects)->within = s->csects;\n }\n \n /* The current csect.  */\n@@ -1881,9 +1878,9 @@ md_begin (void)\n   /* Create XCOFF sections with .text in first, as it's creating dummy symbols\n      to serve as initial csects.  This forces the text csects to precede the\n      data csects.  These symbols will not be output.  */\n-  ppc_init_xcoff_section (&ppc_xcoff_text_section, text_section, true);\n-  ppc_init_xcoff_section (&ppc_xcoff_data_section, data_section, true);\n-  ppc_init_xcoff_section (&ppc_xcoff_bss_section, bss_section, true);\n+  ppc_init_xcoff_section (&ppc_xcoff_text_section, text_section);\n+  ppc_init_xcoff_section (&ppc_xcoff_data_section, data_section);\n+  ppc_init_xcoff_section (&ppc_xcoff_bss_section, bss_section);\n #endif\n }\n \n@@ -4400,8 +4397,7 @@ ppc_comm (int lcomm)\n       section = &ppc_xcoff_tbss_section;\n       if (!ppc_xcoff_section_is_initialized (section))\n \t{\n-\t  ppc_init_xcoff_section (section,\n-\t\t\t\t  subseg_new (\".tbss\", 0), false);\n+\t  ppc_init_xcoff_section (section, subseg_new (\".tbss\", 0));\n \t  bfd_set_section_flags (section->segment,\n \t\t\t\t SEC_ALLOC | SEC_THREAD_LOCAL);\n \t  seg_info (section->segment)->bss = 1;\n@@ -4558,8 +4554,7 @@ ppc_change_csect (symbolS *sym, offsetT align)\n \t  /* Create .tdata section if not yet done.  */\n \t  if (!ppc_xcoff_section_is_initialized (section))\n \t    {\n-\t      ppc_init_xcoff_section (section, subseg_new (\".tdata\", 0),\n-\t\t\t\t      true);\n+\t      ppc_init_xcoff_section (section, subseg_new (\".tdata\", 0));\n \t      bfd_set_section_flags (section->segment, SEC_ALLOC\n \t\t\t\t     | SEC_LOAD | SEC_RELOC | SEC_DATA\n \t\t\t\t     | SEC_THREAD_LOCAL);\n@@ -4570,8 +4565,7 @@ ppc_change_csect (symbolS *sym, offsetT align)\n \t  /* Create .tbss section if not yet done.  */\n \t  if (!ppc_xcoff_section_is_initialized (section))\n \t    {\n-\t      ppc_init_xcoff_section (section, subseg_new (\".tbss\", 0),\n-\t\t\t\t      false);\n+\t      ppc_init_xcoff_section (section, subseg_new (\".tbss\", 0));\n \t      bfd_set_section_flags (section->segment, SEC_ALLOC |\n \t\t\t\t     SEC_THREAD_LOCAL);\n \t      seg_info (section->segment)->bss = 1;"
    }
  ]
}