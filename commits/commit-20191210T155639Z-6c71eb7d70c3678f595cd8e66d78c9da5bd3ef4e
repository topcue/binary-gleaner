{
  "sha": "6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmM3MWViN2Q3MGMzNjc4ZjU5NWNkOGU2NmQ3OGM5ZGE1YmQzZWY0ZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-12-03T20:31:21Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-12-10T15:56:39Z"
    },
    "message": "Normalize Ada ptype to use a single \"?\"\n\nSometimes -- notably with unchecked unions -- the Ada \"ptype\" code\nwill print a \"?\" or \"??\" to indicate something unknown.  The choice of\nwhat was printed was somewhat arbitrary, and in one case, Ada would\nprint an empty string rather than \"?\".\n\nThis patch normalizes the Ada code to use \"?\" rather than an empty\nstring or \"??\".  My reasoning here is that a single question mark is\nenough to convey unknown-ness.\n\ngdb/ChangeLog\n2019-12-10  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-typeprint.c (print_choices): Use a single \"?\".\n\t(print_variant_part): Print \"?\" if the discriminant name\n\tis not known.\n\ngdb/testsuite/ChangeLog\n2019-12-10  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/unchecked_union.exp: New file.\n\t* gdb.ada/unchecked_union/pck.adb: New file.\n\t* gdb.ada/unchecked_union/pck.ads: New file.\n\t* gdb.ada/unchecked_union/unchecked_union.adb: New file.\n\t* gdb-utils.exp (string_to_regexp): Also quote \"?\".\n\nChange-Id: I3403040780a155ffa2c44c8e6a04ba86bc810e29",
    "tree": {
      "sha": "771eb800267f5ffe7370e3b30962495fe68848d6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/771eb800267f5ffe7370e3b30962495fe68848d6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0a0a05217640d96938b4cd58c9ce01ef5026e15a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0a0a05217640d96938b4cd58c9ce01ef5026e15a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0a0a05217640d96938b4cd58c9ce01ef5026e15a"
    }
  ],
  "stats": {
    "total": 176,
    "additions": 171,
    "deletions": 5
  },
  "files": [
    {
      "sha": "ac58517ce17f8fd835cbc191430fc40e3007474d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e",
      "patch": "@@ -1,3 +1,9 @@\n+2019-12-10  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-typeprint.c (print_choices): Use a single \"?\".\n+\t(print_variant_part): Print \"?\" if the discriminant name\n+\tis not known.\n+\n 2019-12-10  George Barrett  <bob@bob131.so>\n \n \tFix scripted probe breakpoints."
    },
    {
      "sha": "70fad1c3268b341102be8000a18f668b90c43077",
      "filename": "gdb/ada-typeprint.c",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/ada-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/ada-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-typeprint.c?ref=6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e",
      "patch": "@@ -526,7 +526,7 @@ print_choices (struct type *type, int field_num, struct ui_file *stream,\n     }\n \n Huh:\n-  fprintf_filtered (stream, \"?? =>\");\n+  fprintf_filtered (stream, \"? =>\");\n   return 0;\n }\n \n@@ -592,9 +592,12 @@ print_variant_part (struct type *type, int field_num, struct type *outer_type,\n \t\t    struct ui_file *stream, int show, int level,\n \t\t    const struct type_print_options *flags)\n {\n-  fprintf_filtered (stream, \"\\n%*scase %s is\", level + 4, \"\",\n-\t\t    ada_variant_discrim_name\n-\t\t    (TYPE_FIELD_TYPE (type, field_num)));\n+  const char *variant\n+    = ada_variant_discrim_name (TYPE_FIELD_TYPE (type, field_num));\n+  if (*variant == '\\0')\n+    variant = \"?\";\n+\n+  fprintf_filtered (stream, \"\\n%*scase %s is\", level + 4, \"\", variant);\n   print_variant_clauses (type, field_num, outer_type, stream, show,\n \t\t\t level + 4, flags);\n   fprintf_filtered (stream, \"\\n%*send case;\", level + 4, \"\");"
    },
    {
      "sha": "52edbc13083df2cfc6387dc9b33014eea42043f7",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e",
      "patch": "@@ -1,3 +1,11 @@\n+2019-12-10  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/unchecked_union.exp: New file.\n+\t* gdb.ada/unchecked_union/pck.adb: New file.\n+\t* gdb.ada/unchecked_union/pck.ads: New file.\n+\t* gdb.ada/unchecked_union/unchecked_union.adb: New file.\n+\t* gdb-utils.exp (string_to_regexp): Also quote \"?\".\n+\n 2019-12-10  George Barrett  <bob@bob131.so>\n \n \tTest scripted probe breakpoints."
    },
    {
      "sha": "e52223813909118ad093a85ec252903330da3f5b",
      "filename": "gdb/testsuite/gdb.ada/unchecked_union.exp",
      "status": "added",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/testsuite/gdb.ada/unchecked_union.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/testsuite/gdb.ada/unchecked_union.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/unchecked_union.exp?ref=6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e",
      "patch": "@@ -0,0 +1,58 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test ptype of an unchecked union.\n+\n+load_lib \"ada.exp\"\n+\n+standard_ada_testfile unchecked_union\n+\n+if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable {debug}] != \"\"} {\n+  return -1\n+}\n+\n+clean_restart ${testfile}\n+\n+set bp_location [gdb_get_line_number \"BREAK\" ${testdir}/unchecked_union.adb]\n+runto \"unchecked_union.adb:$bp_location\"\n+\n+proc multi_line_string {str} {\n+    set result {}\n+    foreach line [split $str \\n] {\n+\tlappend result [string_to_regexp $line]\n+    }\n+    return [eval multi_line $result]\n+}\n+\n+set inner_string {    case ? is\n+        when ? =>\n+            small: range 0 .. 255;\n+        when ? =>\n+            large: range 255 .. 510;\n+    end case;\n+}\n+set inner_full \"type = record (?) is\\n${inner_string}end record\"\n+\n+set pair_string {    case ? is\n+        when ? =>\n+            field_one: range 0 .. 255;\n+        when ? =>\n+            field_two: range 255 .. 510;\n+    end case;\n+}\n+set pair_full \"type = record\\n${inner_string}${pair_string}end record\"\n+\n+gdb_test \"ptype Pair\" [multi_line_string $pair_full]\n+gdb_test \"ptype Inner\" [multi_line_string $inner_full]"
    },
    {
      "sha": "6535991a193f9b91bc6faf6d79b4f530d9bf87a0",
      "filename": "gdb/testsuite/gdb.ada/unchecked_union/pck.adb",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/testsuite/gdb.ada/unchecked_union/pck.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/testsuite/gdb.ada/unchecked_union/pck.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/unchecked_union/pck.adb?ref=6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e",
      "patch": "@@ -0,0 +1,21 @@\n+--  Copyright 2019 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+package body Pck is\n+   procedure Do_Nothing (A : System.Address) is\n+   begin\n+      null;\n+   end Do_Nothing;\n+end Pck;"
    },
    {
      "sha": "b8d00101753ce26cf0b86249a79e937b6fee4480",
      "filename": "gdb/testsuite/gdb.ada/unchecked_union/pck.ads",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/testsuite/gdb.ada/unchecked_union/pck.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/testsuite/gdb.ada/unchecked_union/pck.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/unchecked_union/pck.ads?ref=6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e",
      "patch": "@@ -0,0 +1,19 @@\n+--  Copyright 2019 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with System;\n+package Pck is\n+   procedure Do_Nothing (A : System.Address);\n+end Pck;"
    },
    {
      "sha": "d6de66d86d9d582dc229b59d7d93fe39ad5cdd45",
      "filename": "gdb/testsuite/gdb.ada/unchecked_union/unchecked_union.adb",
      "status": "added",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/testsuite/gdb.ada/unchecked_union/unchecked_union.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/testsuite/gdb.ada/unchecked_union/unchecked_union.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/unchecked_union/unchecked_union.adb?ref=6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e",
      "patch": "@@ -0,0 +1,51 @@\n+--  Copyright 2019 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with System;\n+with Pck; use Pck;\n+\n+procedure Foo is\n+   type Key is (Alpha, Omega);\n+\n+   type Inner(Disc : Key := Omega) is record\n+      case Disc is\n+         when Alpha =>\n+            Small : Integer range 0..255;\n+         when others =>\n+            Large : Integer range 255..510;\n+      end case;\n+   end record;\n+   pragma Unchecked_Union (Inner);\n+\n+   type Outer(Disc : Key := Alpha) is record\n+      case Disc is\n+         when Alpha =>\n+            Field_One : Integer range 0..255;\n+         when others =>\n+            Field_Two : Integer range 255..510;\n+      end case;\n+   end record;\n+   pragma Unchecked_Union (Outer);\n+\n+   type Pair is record\n+      Pone : Inner;\n+      Ptwo : Outer;\n+   end record;\n+\n+   Value : Pair;\n+\n+begin\n+   Do_Nothing (Value'Address);          -- BREAK\n+end Foo;"
    },
    {
      "sha": "17c1adfa805e17040586a2e63b51257a0985c89a",
      "filename": "gdb/testsuite/lib/gdb-utils.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/testsuite/lib/gdb-utils.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e/gdb/testsuite/lib/gdb-utils.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb-utils.exp?ref=6c71eb7d70c3678f595cd8e66d78c9da5bd3ef4e",
      "patch": "@@ -34,7 +34,7 @@ proc gdb_init_commands {} {\n \n proc string_to_regexp {str} {\n     set result $str\n-    regsub -all {[]*+.|(){}^$\\[\\\\]} $str {\\\\&} result\n+    regsub -all {[]?*+.|(){}^$\\[\\\\]} $str {\\\\&} result\n     return $result\n }\n "
    }
  ]
}