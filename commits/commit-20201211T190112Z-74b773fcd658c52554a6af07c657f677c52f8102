{
  "sha": "74b773fcd658c52554a6af07c657f677c52f8102",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzRiNzczZmNkNjU4YzUyNTU0YTZhZjA3YzY1N2Y2NzdjNTJmODEwMg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-12-11T18:48:11Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-12-11T19:01:12Z"
    },
    "message": "gdb: factor out debug_prefixed_printf_cond\n\nThe same pattern happens often to define a \"debug_printf\" macro:\n\n    #define displaced_debug_printf(fmt, ...) \\\n      do \\\n        { \\\n          if (debug_displaced) \\\n    \tdebug_prefixed_printf (\"displaced\", __func__, fmt, ##__VA_ARGS__); \\\n        } \\\n      while (0)\n\nMove this pattern behind a helper macro, debug_prefixed_printf_cond and\nupdate the existing macros to use it.\n\ngdb/ChangeLog:\n\n\t* displaced-stepping.h (displaced_debug_printf): Use\n\tdebug_prefixed_printf_cond.\n\t* dwarf2/read.c (dwarf_read_debug_printf): Likewise.\n\t(dwarf_read_debug_printf_v): Likewise.\n\t* infrun.h (infrun_debug_printf): Likewise.\n\t* linux-nat.c (linux_nat_debug_printf): Likewise.\n\ngdbsupport/ChangeLog:\n\n\t* common-debug.h (debug_prefixed_printf_cond): New.\n\t* event-loop.h (event_loop_debug_printf): Use\n\tdebug_prefixed_printf_cond.\n\nChange-Id: I1ff48b98b8d1cc405d1c7e8da8ceadf4e3a17f99",
    "tree": {
      "sha": "b192e163ad6ce311802e338938c9fd7e8dfddb51",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b192e163ad6ce311802e338938c9fd7e8dfddb51"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/74b773fcd658c52554a6af07c657f677c52f8102",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74b773fcd658c52554a6af07c657f677c52f8102",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/74b773fcd658c52554a6af07c657f677c52f8102",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74b773fcd658c52554a6af07c657f677c52f8102/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "346e7e192370a4d602e14466825c329ed5920c8f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/346e7e192370a4d602e14466825c329ed5920c8f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/346e7e192370a4d602e14466825c329ed5920c8f"
    }
  ],
  "stats": {
    "total": 77,
    "additions": 41,
    "deletions": 36
  },
  "files": [
    {
      "sha": "787ee0d60a6b6f2880d10e85245d2ff9e7ea1015",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74b773fcd658c52554a6af07c657f677c52f8102/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74b773fcd658c52554a6af07c657f677c52f8102/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=74b773fcd658c52554a6af07c657f677c52f8102",
      "patch": "@@ -1,3 +1,12 @@\n+2020-12-11  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* displaced-stepping.h (displaced_debug_printf): Use\n+\tdebug_prefixed_printf_cond.\n+\t* dwarf2/read.c (dwarf_read_debug_printf): Likewise.\n+\t(dwarf_read_debug_printf_v): Likewise.\n+\t* infrun.h (infrun_debug_printf): Likewise.\n+\t* linux-nat.c (linux_nat_debug_printf): Likewise.\n+\n 2020-12-11  Tom Tromey  <tom@tromey.com>\n \n \t* p-exp.y (intvar): Remove global."
    },
    {
      "sha": "146c3d0feb2eb4179e1c33f3538c9d045be00494",
      "filename": "gdb/displaced-stepping.h",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74b773fcd658c52554a6af07c657f677c52f8102/gdb/displaced-stepping.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74b773fcd658c52554a6af07c657f677c52f8102/gdb/displaced-stepping.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/displaced-stepping.h?ref=74b773fcd658c52554a6af07c657f677c52f8102",
      "patch": "@@ -33,12 +33,7 @@ extern bool debug_displaced;\n /* Print a \"displaced\" debug statement.  */\n \n #define displaced_debug_printf(fmt, ...) \\\n-  do \\\n-    { \\\n-      if (debug_displaced) \\\n-\tdebug_prefixed_printf (\"displaced\", __func__, fmt, ##__VA_ARGS__); \\\n-    } \\\n-  while (0)\n+  debug_prefixed_printf_cond (debug_displaced, \"displaced\",fmt, ##__VA_ARGS__)\n \n enum displaced_step_prepare_status\n {"
    },
    {
      "sha": "91f669b1e834c916d0f78f4586767d22598309b7",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 4,
      "deletions": 12,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74b773fcd658c52554a6af07c657f677c52f8102/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74b773fcd658c52554a6af07c657f677c52f8102/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=74b773fcd658c52554a6af07c657f677c52f8102",
      "patch": "@@ -96,22 +96,14 @@ static unsigned int dwarf_read_debug = 0;\n /* Print a \"dwarf-read\" debug statement if dwarf_read_debug is >= 1.  */\n \n #define dwarf_read_debug_printf(fmt, ...) \\\n-  do \\\n-    { \\\n-      if (dwarf_read_debug >= 1) \\\n-\tdebug_prefixed_printf (\"dwarf-read\", __func__, fmt, ##__VA_ARGS__); \\\n-    } \\\n-  while (0)\n+  debug_prefixed_printf_cond (dwarf_read_debug >= 1, \"dwarf-read\", fmt, \\\n+\t\t\t      ##__VA_ARGS__)\n \n /* Print a \"dwarf-read\" debug statement if dwarf_read_debug is >= 2.  */\n \n #define dwarf_read_debug_printf_v(fmt, ...) \\\n-  do \\\n-    { \\\n-      if (dwarf_read_debug >= 2) \\\n-\tdebug_prefixed_printf (\"dwarf-read\", __func__, fmt, ##__VA_ARGS__); \\\n-    } \\\n-  while (0)\n+  debug_prefixed_printf_cond (dwarf_read_debug >= 2, \"dwarf-read\", fmt, \\\n+\t\t\t      ##__VA_ARGS__)\n \n /* When non-zero, dump DIEs after they are read in.  */\n static unsigned int dwarf_die_debug = 0;"
    },
    {
      "sha": "4a4db84baa880314f8efb300f3974ec2c4b31c93",
      "filename": "gdb/infrun.h",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74b773fcd658c52554a6af07c657f677c52f8102/gdb/infrun.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74b773fcd658c52554a6af07c657f677c52f8102/gdb/infrun.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.h?ref=74b773fcd658c52554a6af07c657f677c52f8102",
      "patch": "@@ -34,12 +34,7 @@ extern unsigned int debug_infrun;\n /* Print an \"infrun\" debug statement.  */\n \n #define infrun_debug_printf(fmt, ...) \\\n-  do \\\n-    { \\\n-      if (debug_infrun) \\\n-\tdebug_prefixed_printf (\"infrun\", __func__, fmt, ##__VA_ARGS__); \\\n-    } \\\n-  while (0)\n+  debug_prefixed_printf_cond (debug_infrun, \"infrun\",fmt, ##__VA_ARGS__)\n \n /* Nonzero if we want to give control to the user when we're notified\n    of shared library events by the dynamic linker.  */"
    },
    {
      "sha": "da5f277b5530ca386205ef983363354eb786bac7",
      "filename": "gdb/linux-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74b773fcd658c52554a6af07c657f677c52f8102/gdb/linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74b773fcd658c52554a6af07c657f677c52f8102/gdb/linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-nat.c?ref=74b773fcd658c52554a6af07c657f677c52f8102",
      "patch": "@@ -202,12 +202,7 @@ show_debug_linux_nat (struct ui_file *file, int from_tty,\n /* Print a linux-nat debug statement.  */\n \n #define linux_nat_debug_printf(fmt, ...) \\\n-  do \\\n-    { \\\n-      if (debug_linux_nat) \\\n-\tdebug_prefixed_printf (\"linux-nat\", __func__, fmt, ##__VA_ARGS__); \\\n-    } \\\n-  while (0)\n+  debug_prefixed_printf_cond (debug_linux_nat, \"linux-nat\", fmt, ##__VA_ARGS__)\n \n struct simple_pid_list\n {"
    },
    {
      "sha": "6be1f245bc5ba0f63420dfb92707c1b486468fc3",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74b773fcd658c52554a6af07c657f677c52f8102/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74b773fcd658c52554a6af07c657f677c52f8102/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=74b773fcd658c52554a6af07c657f677c52f8102",
      "patch": "@@ -1,3 +1,9 @@\n+2020-12-11  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* common-debug.h (debug_prefixed_printf_cond): New.\n+\t* event-loop.h (event_loop_debug_printf): Use\n+\tdebug_prefixed_printf_cond.\n+\n 2020-12-08  Alexander Fedotov  <alfedotov@gmail.com>\n \n \t* pathstuff.cc (get_standard_cache_dir): Use LOCALAPPDATA environment"
    },
    {
      "sha": "7bc62185f7abf94488f5c6907bf0e1e6fbae5c62",
      "filename": "gdbsupport/common-debug.h",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74b773fcd658c52554a6af07c657f677c52f8102/gdbsupport/common-debug.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74b773fcd658c52554a6af07c657f677c52f8102/gdbsupport/common-debug.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/common-debug.h?ref=74b773fcd658c52554a6af07c657f677c52f8102",
      "patch": "@@ -50,4 +50,21 @@ extern void ATTRIBUTE_PRINTF (3, 4) debug_prefixed_printf\n extern void ATTRIBUTE_PRINTF (3, 0) debug_prefixed_vprintf\n   (const char *module, const char *func, const char *format, va_list args);\n \n+\n+/* Helper to define \"_debug_print\" macros.\n+\n+   DEBUG_ENABLED_COND is an expression that evaluates to true if the debugging\n+   statement is enabled and should be printed.\n+\n+   The other arguments, as well as the name of the current function, are\n+   forwarded to debug_prefixed_printf.  */\n+\n+#define debug_prefixed_printf_cond(debug_enabled_cond, module, fmt, ...) \\\n+  do \\\n+    { \\\n+      if (debug_enabled_cond) \\\n+\tdebug_prefixed_printf (module, __func__, fmt, ##__VA_ARGS__); \\\n+    } \\\n+  while (0)\n+\n #endif /* COMMON_COMMON_DEBUG_H */"
    },
    {
      "sha": "09d665f7e69d4fe85404361d0e52d20d9513265d",
      "filename": "gdbsupport/event-loop.h",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74b773fcd658c52554a6af07c657f677c52f8102/gdbsupport/event-loop.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74b773fcd658c52554a6af07c657f677c52f8102/gdbsupport/event-loop.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/event-loop.h?ref=74b773fcd658c52554a6af07c657f677c52f8102",
      "patch": "@@ -129,12 +129,8 @@ extern debug_event_loop_kind debug_event_loop;\n /* Print an \"event loop\" debug statement.  */\n \n #define event_loop_debug_printf(fmt, ...) \\\n-  do \\\n-    { \\\n-      if (debug_event_loop != debug_event_loop_kind::OFF) \\\n-\tdebug_prefixed_printf (\"event-loop\", __func__, fmt, ##__VA_ARGS__); \\\n-    } \\\n-  while (0)\n+  debug_prefixed_printf_cond (debug_event_loop != debug_event_loop_kind::OFF, \\\n+\t\t\t      \"event-loop\", fmt, ##__VA_ARGS__)\n \n /* Print an \"event loop\" debug statement that is know to come from a UI-related\n    event (e.g. calling the event handler for the fd of the CLI).  */"
    }
  ]
}