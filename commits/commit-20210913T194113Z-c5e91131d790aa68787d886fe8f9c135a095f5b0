{
  "sha": "c5e91131d790aa68787d886fe8f9c135a095f5b0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzVlOTExMzFkNzkwYWE2ODc4N2Q4ODZmZThmOWMxMzVhMDk1ZjViMA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-13T19:41:13Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-13T19:41:13Z"
    },
    "message": "[gdb/testsuite] Check for valid test name\n\nWhen running gdb.base/batch-exit-status.exp I noticed that the test name\ncontains a newline:\n...\nPASS: gdb.base/batch-exit-status.exp: : No such file or directory\\.^M\n: No such file or directory\\.: [lindex $result 2] == 0\n...\n\nCheck for this in ::CheckTestNames::check, such that we have a warning:\n...\nPASS: gdb.base/batch-exit-status.exp: : No such file or directory\\.^M\n: No such file or directory\\.: [lindex $result 2] == 0\nWARNING: Newline in test name\n...\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "0ed7eda69376df79efffd3b238b1176e38451b4b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0ed7eda69376df79efffd3b238b1176e38451b4b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c5e91131d790aa68787d886fe8f9c135a095f5b0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5e91131d790aa68787d886fe8f9c135a095f5b0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c5e91131d790aa68787d886fe8f9c135a095f5b0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5e91131d790aa68787d886fe8f9c135a095f5b0/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3047c7869d38d4d7f84720d815d31085f3c788fa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3047c7869d38d4d7f84720d815d31085f3c788fa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3047c7869d38d4d7f84720d815d31085f3c788fa"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 9,
    "deletions": 0
  },
  "files": [
    {
      "sha": "e2ac5bd02b9e765a3a3c7d677ba6eb8c82e00334",
      "filename": "gdb/testsuite/lib/check-test-names.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5e91131d790aa68787d886fe8f9c135a095f5b0/gdb/testsuite/lib/check-test-names.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5e91131d790aa68787d886fe8f9c135a095f5b0/gdb/testsuite/lib/check-test-names.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/check-test-names.exp?ref=c5e91131d790aa68787d886fe8f9c135a095f5b0",
      "patch": "@@ -93,6 +93,13 @@ namespace eval ::CheckTestNames {\n \treturn $message\n     }\n \n+    # Check if MESSAGE is a well-formed test name.\n+    proc _check_well_formed_name { message } {\n+\tif { [regexp \\n $message]} {\n+\t    warning \"Newline in test name\"\n+\t}\n+    }\n+\n     # Check if MESSAGE contains either the source path or the build path.\n     # This will result in test names that can't easily be compared between\n     # different runs of GDB.\n@@ -110,6 +117,8 @@ namespace eval ::CheckTestNames {\n \tif [ _check_duplicates $message ] {\n \t    clone_output \"DUPLICATE: $message\"\n \t}\n+\n+\t_check_well_formed_name $message\n     }\n \n     # If COUNT is greater than zero, disply PREFIX followed by COUNT."
    }
  ]
}