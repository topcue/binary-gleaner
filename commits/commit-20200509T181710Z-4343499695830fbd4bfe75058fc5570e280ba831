{
  "sha": "4343499695830fbd4bfe75058fc5570e280ba831",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDM0MzQ5OTY5NTgzMGZiZDRiZmU3NTA1OGZjNTU3MGUyODBiYTgzMQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-09T18:17:10Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-09T18:17:10Z"
    },
    "message": "[gdb] Fix catch throw regexp matching\n\nWhen running test-case gdb.mi/mi-catch-cpp-exceptions.exp, we have:\n...\nFAIL: gdb.mi/mi-catch-cpp-exceptions.exp: all with invalid regexp: run until \\\n  breakpoint in main (unknown output after running)\n...\n\nThis is a regression since commit 596dc4adff \"Speed up psymbol reading by\nremoving a copy\".\n\nBefore that commit, we have:\n...\n$ gdb \\\n    -batch \\\n    ./outputs/gdb.mi/mi-catch-cpp-exceptions/mi-catch-cpp-exceptions \\\n    -ex \"break 67\" \\\n    -ex \"catch throw -r blahblah\" \\\n    -ex r\nBreakpoint 1 at 0x4008e5: file mi-catch-cpp-exceptions.cc, line 67.\nCatchpoint 2 (throw)\n\nBreakpoint 1, main () at mi-catch-cpp-exceptions.cc:67\n67                  return 1;   /* Stop here.  */\n...\nIn other words:\n- we set a breakpoint somewhere in main,\n- we set a catchpoint with a regexp that is intended to not match any\n  exception, and\n- run to the breakpoint, without the catchpoint triggering.\n\nAfter the commit, we have:\n...\n$ gdb \\\n    -batch \\\n    ./outputs/gdb.mi/mi-catch-cpp-exceptions/mi-catch-cpp-exceptions \\\n    -ex \"break 67\" \\\n    -ex \"catch throw -r blahblah\" \\\n    -ex r\nBreakpoint 1 at 0x4008e5: file mi-catch-cpp-exceptions.cc, line 67.\nCatchpoint 2 (throw)\n\nCatchpoint 2 (exception thrown), 0x00007ffff7ab037e in __cxa_throw () from \\\n  /usr/lib64/libstdc++.so.6\n...\nIn other words, the catchpoint triggers.\n\nThis is caused by this bit of the commit:\n...\n       type_name = cplus_typename_from_type_info (typeinfo_arg);\n\n       canon = cp_canonicalize_string (type_name.c_str ());\n-      if (!canon.empty ())\n-       std::swap (type_name, canon);\n+      name = (canon == nullptr\n+\t      ? canon.get ()\n+\t      : type_name.c_str ());\n     }\n   catch (const gdb_exception_error &e)\n     {\n       exception_print (gdb_stderr, e);\n     }\n\n-  if (!type_name.empty ())\n+  if (name != nullptr)\n     {\n-      if (self->pattern->exec (type_name.c_str (), 0, NULL, 0) != 0)\n+      if (self->pattern->exec (name, 0, NULL, 0) != 0)\n...\n\nBefore the commit, we have:\n- type_name == \"my_exception\"\n- canon = \"\"\nand the !type_name.empty () test succeeds, and gdb executes the\nself->pattern->exec call.\n\nAfter the commit, we have:\n- type_name == \"my_exception\"\n- canon == NULL\n- name == NULL\nand the name != nullptr test fails, and gdb doesn't execute the\nself->pattern->exec call.\n\nFix this by inverting the condition for the calculation of name:\n...\n-      name = (canon == nullptr\n+      name = (canon != nullptr\n...\n\nBuild and tested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2020-05-09  Tom de Vries  <tdevries@suse.de>\n\n\tPR gdb/25955\n\t* break-catch-throw.c (check_status_exception_catchpoint): Fix name\n\tcalculation.",
    "tree": {
      "sha": "1ce4db3abd59e1af063d4b6db504ab30068efeaf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1ce4db3abd59e1af063d4b6db504ab30068efeaf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4343499695830fbd4bfe75058fc5570e280ba831",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4343499695830fbd4bfe75058fc5570e280ba831",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4343499695830fbd4bfe75058fc5570e280ba831",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4343499695830fbd4bfe75058fc5570e280ba831/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2f78cffc1671188924ab3ec46a6a962894add49a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2f78cffc1671188924ab3ec46a6a962894add49a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2f78cffc1671188924ab3ec46a6a962894add49a"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 7,
    "deletions": 1
  },
  "files": [
    {
      "sha": "a132f20dde5944447f4ec41349223a704f506100",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4343499695830fbd4bfe75058fc5570e280ba831/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4343499695830fbd4bfe75058fc5570e280ba831/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4343499695830fbd4bfe75058fc5570e280ba831",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-09  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR gdb/25955\n+\t* break-catch-throw.c (check_status_exception_catchpoint): Fix name\n+\tcalculation.\n+\n 2020-05-09  Tom Tromey  <tom@tromey.com>\n \n \t* top.c (server_command): Now bool."
    },
    {
      "sha": "7f4a9f955dfc7edbb61ac5452a0245f1f9f7dab7",
      "filename": "gdb/break-catch-throw.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4343499695830fbd4bfe75058fc5570e280ba831/gdb/break-catch-throw.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4343499695830fbd4bfe75058fc5570e280ba831/gdb/break-catch-throw.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/break-catch-throw.c?ref=4343499695830fbd4bfe75058fc5570e280ba831",
      "patch": "@@ -166,7 +166,7 @@ check_status_exception_catchpoint (struct bpstats *bs)\n       type_name = cplus_typename_from_type_info (typeinfo_arg);\n \n       canon = cp_canonicalize_string (type_name.c_str ());\n-      name = (canon == nullptr\n+      name = (canon != nullptr\n \t      ? canon.get ()\n \t      : type_name.c_str ());\n     }"
    }
  ]
}