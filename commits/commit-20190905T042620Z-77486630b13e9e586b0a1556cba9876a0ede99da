{
  "sha": "77486630b13e9e586b0a1556cba9876a0ede99da",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Nzc0ODY2MzBiMTNlOWU1ODZiMGExNTU2Y2JhOTg3NmEwZWRlOTlkYQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-04T06:00:37Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-05T04:26:20Z"
    },
    "message": "R_PPC64_PCREL_OPT\n\nThe loads and stores handled in the second instruction of a sequence\nmarked by R_PPC64_PCREL_OPT may be a prefix instruction.  For example:\n pld ra,symbol@got@pcrel\n0:\n pld rt,off(ra)\n .reloc 0b-8,R_PPC64_PCREL_OPT,(.-8)-(0b-8)\ncan be optimised to\n pld rt,symbol+off@pcrel\n pnop\n\n\t* elf64-ppc.c (xlate_pcrel_opt): Handle prefix loads and stores\n\tin second instruction.\n\t(ppc64_elf_relocate_section): Likewise.",
    "tree": {
      "sha": "161e6fdbc465968b10e3a7be716026b1f6acf33c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/161e6fdbc465968b10e3a7be716026b1f6acf33c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/77486630b13e9e586b0a1556cba9876a0ede99da",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77486630b13e9e586b0a1556cba9876a0ede99da",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/77486630b13e9e586b0a1556cba9876a0ede99da",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77486630b13e9e586b0a1556cba9876a0ede99da/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb"
    }
  ],
  "stats": {
    "total": 92,
    "additions": 75,
    "deletions": 17
  },
  "files": [
    {
      "sha": "7f587df81afa16bd641c3a41a1ee7261bb660618",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77486630b13e9e586b0a1556cba9876a0ede99da/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77486630b13e9e586b0a1556cba9876a0ede99da/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=77486630b13e9e586b0a1556cba9876a0ede99da",
      "patch": "@@ -1,3 +1,9 @@\n+2019-09-05  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf64-ppc.c (xlate_pcrel_opt): Handle prefix loads and stores\n+\tin second instruction.\n+\t(ppc64_elf_relocate_section): Likewise.\n+\n 2019-09-05  Alan Modra  <amodra@gmail.com>\n \n \tPR 24955"
    },
    {
      "sha": "e39b6faf17b9bba73ae05b6fb5647317aa789750",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 39,
      "deletions": 12,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77486630b13e9e586b0a1556cba9876a0ede99da/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77486630b13e9e586b0a1556cba9876a0ede99da/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=77486630b13e9e586b0a1556cba9876a0ede99da",
      "patch": "@@ -8282,12 +8282,31 @@ ok_lo_toc_insn (unsigned int insn, enum elf_ppc64_reloc_type r_type)\n static bfd_boolean\n xlate_pcrel_opt (uint64_t *pinsn1, uint64_t *pinsn2, bfd_signed_vma *poff)\n {\n-  uint32_t insn2 = *pinsn2 >> 32;\n-  uint64_t i1new;\n+  uint64_t insn1 = *pinsn1;\n+  uint64_t insn2 = *pinsn2;\n   bfd_signed_vma off;\n \n+  if ((insn2 & (63ULL << 58)) == 1ULL << 58)\n+    {\n+      /* Check that regs match.  */\n+      if (((insn2 >> 16) & 31) != ((insn1 >> 21) & 31))\n+\treturn FALSE;\n+\n+      /* P8LS or PMLS form, non-pcrel.  */\n+      if ((insn2 & (-1ULL << 50) & ~(1ULL << 56)) != (1ULL << 58))\n+\treturn FALSE;\n+\n+      *pinsn1 = (insn2 & ~(31 << 16) & ~0x3ffff0000ffffULL) | (1ULL << 52);\n+      *pinsn2 = PNOP;\n+      off = ((insn2 >> 16) & 0x3ffff0000ULL) | (insn2 & 0xffff);\n+      *poff = (off ^ 0x200000000ULL) - 0x200000000ULL;\n+      return TRUE;\n+    }\n+\n+  insn2 >>= 32;\n+\n   /* Check that regs match.  */\n-  if (((insn2 >> 16) & 31) != ((*pinsn1 >> 21) & 31))\n+  if (((insn2 >> 16) & 31) != ((insn1 >> 21) & 31))\n     return FALSE;\n \n   switch ((insn2 >> 26) & 63)\n@@ -8308,15 +8327,15 @@ xlate_pcrel_opt (uint64_t *pinsn1, uint64_t *pinsn2, bfd_signed_vma *poff)\n     case 54: /* stfd */\n       /* These are the PMLS cases, where we just need to tack a prefix\n \t on the insn.  */\n-      i1new = ((1ULL << 58) | (2ULL << 56) | (1ULL << 52)\n+      insn1 = ((1ULL << 58) | (2ULL << 56) | (1ULL << 52)\n \t       | (insn2 & ((63ULL << 26) | (31ULL << 21))));\n       off = insn2 & 0xffff;\n       break;\n \n     case 58: /* lwa, ld */\n       if ((insn2 & 1) != 0)\n \treturn FALSE;\n-      i1new = ((1ULL << 58) | (1ULL << 52)\n+      insn1 = ((1ULL << 58) | (1ULL << 52)\n \t       | (insn2 & 2 ? 41ULL << 26 : 57ULL << 26)\n \t       | (insn2 & (31ULL << 21)));\n       off = insn2 & 0xfffc;\n@@ -8325,7 +8344,7 @@ xlate_pcrel_opt (uint64_t *pinsn1, uint64_t *pinsn2, bfd_signed_vma *poff)\n     case 57: /* lxsd, lxssp */\n       if ((insn2 & 3) < 2)\n \treturn FALSE;\n-      i1new = ((1ULL << 58) | (1ULL << 52)\n+      insn1 = ((1ULL << 58) | (1ULL << 52)\n \t       | ((40ULL | (insn2 & 3)) << 26)\n \t       | (insn2 & (31ULL << 21)));\n       off = insn2 & 0xfffc;\n@@ -8336,37 +8355,37 @@ xlate_pcrel_opt (uint64_t *pinsn1, uint64_t *pinsn2, bfd_signed_vma *poff)\n \treturn FALSE;\n       else if ((insn2 & 3) >= 2)\n \t{\n-\t  i1new = ((1ULL << 58) | (1ULL << 52)\n+\t  insn1 = ((1ULL << 58) | (1ULL << 52)\n \t\t   | ((44ULL | (insn2 & 3)) << 26)\n \t\t   | (insn2 & (31ULL << 21)));\n \t  off = insn2 & 0xfffc;\n \t}\n       else\n \t{\n-\t  i1new = ((1ULL << 58) | (1ULL << 52)\n+\t  insn1 = ((1ULL << 58) | (1ULL << 52)\n \t\t   | ((50ULL | (insn2 & 4) | ((insn2 & 8) >> 3)) << 26)\n \t\t   | (insn2 & (31ULL << 21)));\n \t  off = insn2 & 0xfff0;\n \t}\n       break;\n \n     case 56: /* lq */\n-      i1new = ((1ULL << 58) | (1ULL << 52)\n+      insn1 = ((1ULL << 58) | (1ULL << 52)\n \t       | (insn2 & ((63ULL << 26) | (31ULL << 21))));\n       off = insn2 & 0xffff;\n       break;\n \n     case 62: /* std, stq */\n       if ((insn2 & 1) != 0)\n \treturn FALSE;\n-      i1new = ((1ULL << 58) | (1ULL << 52)\n+      insn1 = ((1ULL << 58) | (1ULL << 52)\n \t       | ((insn2 & 2) == 0 ? 61ULL << 26 : 60ULL << 26)\n \t       | (insn2 & (31ULL << 21)));\n       off = insn2 & 0xfffc;\n       break;\n     }\n \n-  *pinsn1 = i1new;\n+  *pinsn1 = insn1;\n   *pinsn2 = (uint64_t) NOP << 32;\n   *poff = (off ^ 0x8000) - 0x8000;\n   return TRUE;\n@@ -15413,7 +15432,12 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \t\t\t  pinsn2 = bfd_get_32 (input_bfd, contents + off2);\n \t\t\t  pinsn2 <<= 32;\n \t\t\t  if ((pinsn2 & (63ULL << 58)) == 1ULL << 58)\n-\t\t\t    break;\n+\t\t\t    {\n+\t\t\t      if (off2 + 8 > input_section->size)\n+\t\t\t\tbreak;\n+\t\t\t      pinsn2 |= bfd_get_32 (input_bfd,\n+\t\t\t\t\t\t    contents + off2 + 4);\n+\t\t\t    }\n \t\t\t  if (xlate_pcrel_opt (&pinsn, &pinsn2, &addend_off))\n \t\t\t    {\n \t\t\t      addend += addend_off;\n@@ -15424,6 +15448,9 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \t\t\t\t\t  contents + offset + 4);\n \t\t\t      bfd_put_32 (input_bfd, pinsn2 >> 32,\n \t\t\t\t\t  contents + off2);\n+\t\t\t      if ((pinsn2 & (63ULL << 58)) == 1ULL << 58)\n+\t\t\t\tbfd_put_32 (input_bfd, pinsn2,\n+\t\t\t\t\t    contents + off2 + 4);\n \t\t\t    }\n \t\t\t}\n \t\t    }"
    },
    {
      "sha": "0da9e2542da2c5fa8e136f453234855f5cc7ed40",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77486630b13e9e586b0a1556cba9876a0ede99da/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77486630b13e9e586b0a1556cba9876a0ede99da/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=77486630b13e9e586b0a1556cba9876a0ede99da",
      "patch": "@@ -1,3 +1,9 @@\n+2019-09-05  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/ld-powerpc/pcrelopt.s,\n+\t* testsuite/ld-powerpc/pcrelopt.d: Test offset and prefix in\n+\tsecond instruction.\n+\n 2019-08-29  Alan Modra  <amodra@gmail.com>\n \n \tPR ld/24406"
    },
    {
      "sha": "aeaa0cdb5d9ee70c12d543e7e411608738d8c211",
      "filename": "ld/testsuite/ld-powerpc/pcrelopt.d",
      "status": "modified",
      "additions": 12,
      "deletions": 5,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77486630b13e9e586b0a1556cba9876a0ede99da/ld/testsuite/ld-powerpc/pcrelopt.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77486630b13e9e586b0a1556cba9876a0ede99da/ld/testsuite/ld-powerpc/pcrelopt.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/pcrelopt.d?ref=77486630b13e9e586b0a1556cba9876a0ede99da",
      "patch": "@@ -80,10 +80,17 @@ Disassembly of section \\.text:\n .*:\t(04 10 00 01|01 00 10 04) \tpstxv   vs0,66028\n .*:\t(d8 00 01 ec|ec 01 00 d8) \n .*:\t(60 00 00 00|00 00 00 60) \tnop\n-.*:\t(04 10 00 01|01 00 10 04) \tpld     r9,66008\n-.*:\t(e5 20 01 d8|d8 01 20 e5) \n-.*:\t(e8 09 00 00|00 00 09 e8) \tld      r0,0\\(r9\\)\n+.*:\t(06 10 00 01|01 00 10 06) \tplbz    r3,70676\n+.*:\t(88 60 14 14|14 14 60 88) \n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n .*:\t(60 00 00 00|00 00 00 60) \tnop\n-.*:\t(06 10 00 01|01 00 10 06) \tpla     r7,66000\n-.*:\t(38 e0 01 d0|d0 01 e0 38) \n+.*:\t(04 10 12 35|35 12 10 04) \tplq     r4,305485896\n+.*:\t(e0 80 58 48|48 58 80 e0) \n+.*:\t(07 00 00 00|00 00 00 07) \tpnop\n+.*:\t(00 00 00 00|00 00 00 00) \n+.*:\t(04 10 00 01|01 00 10 04) \tpld     r9,65976\n+.*:\t(e5 20 01 b8|b8 01 20 e5) \n+.*:\t(e8 09 00 00|00 00 09 e8) \tld      r0,0\\(r9\\)\n+.*:\t(06 10 00 01|01 00 10 06) \tpla     r7,65972\n+.*:\t(38 e0 01 b4|b4 01 e0 38) \n .*:\t(88 c7 00 00|00 00 c7 88) \tlbz     r6,0\\(r7\\)"
    },
    {
      "sha": "715a52b5f7ba0f959886f533cb17092279247504",
      "filename": "ld/testsuite/ld-powerpc/pcrelopt.s",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77486630b13e9e586b0a1556cba9876a0ede99da/ld/testsuite/ld-powerpc/pcrelopt.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77486630b13e9e586b0a1556cba9876a0ede99da/ld/testsuite/ld-powerpc/pcrelopt.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/pcrelopt.s?ref=77486630b13e9e586b0a1556cba9876a0ede99da",
      "patch": "@@ -103,6 +103,18 @@ _start:\n \t\t.reloc .-8,R_PPC64_PCREL_OPT,0f-(.-8)\n 0:\tstxv 0,0(9)\n \n+#offsets are allowed too\n+\tpld 9,sym@got@pcrel\n+0:\n+\tlbz 3,0x1234(9)\n+\t.reloc 0b-8,R_PPC64_PCREL_OPT,(.-4)-(0b-8)\n+\n+#and prefix insns as the second insn\n+\tpld 9,sym@got@pcrel\n+0:\n+\tplq 4,0x12345678(9)\n+\t.reloc 0b-8,R_PPC64_PCREL_OPT,(.-8)-(0b-8)\n+\n # This should not optimize\n \t.extern i\n \t.type i,@object"
    }
  ]
}