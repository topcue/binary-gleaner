{
  "sha": "e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTEwYTA3YjMyZGMxZmFlZDI1YjViYmNiYmM0N2Q2OGUyZmY1MzdiOQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-07-17T07:17:28Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-07-19T02:57:47Z"
    },
    "message": "Power10 stub selection\n\nThis patch better supports mixing of power10 and non-power10 code,\nas might be seen in a cpu-optimized library using ifuncs to select\nfunctions optimized for a given cpu.  Using -Wl,--no-power10-stubs\nisn't that good in this situation since non-power10 notoc stubs are\nslower and larger than the power10 variants, which you'd like to use\non power10 code paths.\n\nWith this change, power10 pc-relative code that makes calls marked\n@notoc uses power10 stubs if stubs are necessary, and other calls use\nnon-power10 instructions in stubs.  This will mean that if gcc is\ngenerating code for -mcpu=power10 but with pc-rel disabled then you'll\nget the older stubs even on power10 (unless you force with\n-Wl,--power10-stubs).  That shouldn't be too big a problem: stubs that\nuse r2 are reasonable.  It's just the ones that set up addressing\nusing \"mflr 12; bcl 20,31,.+4; mflr 11; mtlr 12\" that should be\navoided if possible.\n\nbfd/\n\t* elf64-ppc.c (struct ppc_link_hash_table): Add has_power10_relocs.\n\t(select_alt_stub): New function.\n\t(ppc_get_stub_entry): Use it here.\n\t(ppc64_elf_check_relocs): Set had_power10_relocs rather than\n\tpower10_stubs.\n\t(ppc64_elf_size_stubs): Clear power10_stubs here instead.  Don't\n\tmerge notoc stubs with other varieties when power10_stubs is \"auto\".\n\tInstead dup the stub hash table entry.\n\t(plt_stub_size, ppc_build_one_stub, ppc_size_one_stub): Adjust\n\ttests of power10_stubs.\nld/\n\t* emultempl/ppc64elf.em (power10-stubs): Accept optional \"auto\" arg.\n\t* ld.texi (power10-stubs): Update.\n\t* testsuite/ld-powerpc/callstub-1.d: Force --power10-stubs.\n\t* testsuite/ld-powerpc/callstub-2.d: Relax branch offset comparison.\n\t* testsuite/ld-powerpc/callstub-4.d: New test.\n\t* testsuite/ld-powerpc/notoc.d: Force --no-power10-stubs.\n\t* testsuite/ld-powerpc/notoc3.d,\n\t* testsuite/ld-powerpc/notoc3.s,\n\t* testsuite/ld-powerpc/notoc3.wf: New test.\n\t* testsuite/ld-powerpc/powerpc.exp: Run new tests.  Pass\n\t--no-power10-stubs for notoc link.",
    "tree": {
      "sha": "1eeb63b4cdb332eb53f3e8f4ae91773bda69a008",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1eeb63b4cdb332eb53f3e8f4ae91773bda69a008"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6095ca52575d8e49003a3685453bc5bd0d929f1e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6095ca52575d8e49003a3685453bc5bd0d929f1e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6095ca52575d8e49003a3685453bc5bd0d929f1e"
    }
  ],
  "stats": {
    "total": 393,
    "additions": 359,
    "deletions": 34
  },
  "files": [
    {
      "sha": "43326b548ef40e1bd8a8bebdcded079dfe89c648",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -1,3 +1,16 @@\n+2020-07-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf64-ppc.c (struct ppc_link_hash_table): Add has_power10_relocs.\n+\t(select_alt_stub): New function.\n+\t(ppc_get_stub_entry): Use it here.\n+\t(ppc64_elf_check_relocs): Set had_power10_relocs rather than\n+\tpower10_stubs.\n+\t(ppc64_elf_size_stubs): Clear power10_stubs here instead.  Don't\n+\tmerge notoc stubs with other varieties when power10_stubs is \"auto\".\n+\tInstead dup the stub hash table entry.\n+\t(plt_stub_size, ppc_build_one_stub, ppc_size_one_stub): Adjust\n+\ttests of power10_stubs.\n+\n 2020-07-15  Alan Modra  <amodra@gmail.com>\n \n \tPR 26239"
    },
    {
      "sha": "8d622fb90921e41d889c830d7368d714e94ff839",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 89,
      "deletions": 12,
      "changes": 101,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -3245,6 +3245,9 @@ struct ppc_link_hash_table\n   /* Whether calls are made via the PLT from NOTOC functions.  */\n   unsigned int notoc_plt:1;\n \n+  /* Whether any code linked seems to be Power10.  */\n+  unsigned int has_power10_relocs:1;\n+\n   /* Incremented every time we size stubs.  */\n   unsigned int stub_iteration;\n \n@@ -3679,6 +3682,37 @@ ppc_stub_name (const asection *input_section,\n   return stub_name;\n }\n \n+/* If mixing power10 with non-power10 code and --power10-stubs is not\n+   specified (or is auto) then calls using @notoc relocations that\n+   need a stub will utilize power10 instructions in the stub, and\n+   calls without @notoc relocations will not use power10 instructions.\n+   The two classes of stubs are stored in separate stub_hash_table\n+   entries having the same key string.  The two entries will always be\n+   adjacent on entry->root.next chain, even if hash table resizing\n+   occurs.  This function selects the correct entry to use.  */\n+\n+static struct ppc_stub_hash_entry *\n+select_alt_stub (struct ppc_stub_hash_entry *entry, bfd_boolean notoc)\n+{\n+  bfd_boolean have_notoc;\n+\n+  have_notoc = (entry->stub_type == ppc_stub_plt_call_notoc\n+\t\t|| entry->stub_type == ppc_stub_plt_branch_notoc\n+\t\t|| entry->stub_type == ppc_stub_long_branch_notoc);\n+\n+  if (have_notoc != notoc)\n+    {\n+      const char *stub_name = entry->root.string;\n+\n+      entry = (struct ppc_stub_hash_entry *) entry->root.next;\n+      if (entry != NULL\n+\t  && entry->root.string != stub_name)\n+\tentry = NULL;\n+    }\n+\n+  return entry;\n+}\n+\n /* Look up an entry in the stub hash.  Stub entries are cached because\n    creating the stub name takes a bit of time.  */\n \n@@ -3723,6 +3757,13 @@ ppc_get_stub_entry (const asection *input_section,\n       free (stub_name);\n     }\n \n+  if (stub_entry != NULL && htab->params->power10_stubs == -1)\n+    {\n+      bfd_boolean notoc = ELF64_R_TYPE (rel->r_info) == R_PPC64_REL24_NOTOC;\n+\n+      stub_entry = select_alt_stub (stub_entry, notoc);\n+    }\n+\n   return stub_entry;\n }\n \n@@ -4599,8 +4640,7 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \tcase R_PPC64_PLT_PCREL34:\n \tcase R_PPC64_PLT_PCREL34_NOTOC:\n \tcase R_PPC64_PCREL28:\n-\t  if (htab->params->power10_stubs < 0)\n-\t    htab->params->power10_stubs = 1;\n+\t  htab->has_power10_relocs = 1;\n \t  break;\n \tdefault:\n \t  break;\n@@ -10761,7 +10801,7 @@ plt_stub_size (struct ppc_link_hash_table *htab,\n \n   if (stub_entry->stub_type >= ppc_stub_plt_call_notoc)\n     {\n-      if (htab->params->power10_stubs > 0)\n+      if (htab->params->power10_stubs != 0)\n \t{\n \t  bfd_vma start = (stub_entry->stub_offset\n \t\t\t   + stub_entry->group->stub_sec->output_offset\n@@ -11602,7 +11642,7 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \n       relp = p;\n       num_rel = 0;\n-      if (htab->params->power10_stubs > 0)\n+      if (htab->params->power10_stubs != 0)\n \t{\n \t  bfd_boolean load = stub_entry->stub_type >= ppc_stub_plt_call_notoc;\n \t  p = build_power10_offset (htab->params->stub_bfd, p, off, odd, load);\n@@ -11641,7 +11681,7 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n       if (info->emitrelocations)\n \t{\n \t  bfd_vma roff = relp - stub_entry->group->stub_sec->contents;\n-\t  if (htab->params->power10_stubs > 0)\n+\t  if (htab->params->power10_stubs != 0)\n \t    num_rel += num_relocs_for_power10_offset (off, odd);\n \t  else\n \t    {\n@@ -11651,7 +11691,7 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \t  r = get_relocs (stub_entry->group->stub_sec, num_rel);\n \t  if (r == NULL)\n \t    return FALSE;\n-\t  if (htab->params->power10_stubs > 0)\n+\t  if (htab->params->power10_stubs != 0)\n \t    r = emit_relocs_for_power10_offset (info, r, roff, targ, off, odd);\n \t  else\n \t    r = emit_relocs_for_offset (info, r, roff, targ, off);\n@@ -11669,7 +11709,7 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \t    }\n \t}\n \n-      if (htab->params->power10_stubs <= 0\n+      if (htab->params->power10_stubs == 0\n \t  && htab->glink_eh_frame != NULL\n \t  && htab->glink_eh_frame->size != 0)\n \t{\n@@ -12017,15 +12057,15 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n       if (info->emitrelocations)\n \t{\n \t  unsigned int num_rel;\n-\t  if (htab->params->power10_stubs > 0)\n+\t  if (htab->params->power10_stubs != 0)\n \t    num_rel = num_relocs_for_power10_offset (off, odd);\n \t  else\n \t    num_rel = num_relocs_for_offset (off - 8);\n \t  stub_entry->group->stub_sec->reloc_count += num_rel;\n \t  stub_entry->group->stub_sec->flags |= SEC_RELOC;\n \t}\n \n-      if (htab->params->power10_stubs > 0)\n+      if (htab->params->power10_stubs != 0)\n \textra = size_power10_offset (off, odd);\n       else\n \textra = size_offset (off - 8);\n@@ -12036,7 +12076,7 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \t calculated.  */\n       off -= extra;\n \n-      if (htab->params->power10_stubs <= 0)\n+      if (htab->params->power10_stubs == 0)\n \t{\n \t  /* After the bcl, lr has been modified so we need to emit\n \t     .eh_frame info saying the return address is in r12.  */\n@@ -12099,7 +12139,7 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n       if (info->emitrelocations)\n \t{\n \t  unsigned int num_rel;\n-\t  if (htab->params->power10_stubs > 0)\n+\t  if (htab->params->power10_stubs != 0)\n \t    num_rel = num_relocs_for_power10_offset (off, odd);\n \t  else\n \t    num_rel = num_relocs_for_offset (off - 8);\n@@ -12109,7 +12149,7 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \n       size = plt_stub_size (htab, stub_entry, off);\n \n-      if (htab->params->power10_stubs <= 0)\n+      if (htab->params->power10_stubs == 0)\n \t{\n \t  /* After the bcl, lr has been modified so we need to emit\n \t     .eh_frame info saying the return address is in r12.  */\n@@ -13034,6 +13074,9 @@ ppc64_elf_size_stubs (struct bfd_link_info *info)\n   if (htab == NULL)\n     return FALSE;\n \n+  if (htab->params->power10_stubs == -1 && !htab->has_power10_relocs)\n+    htab->params->power10_stubs = 0;\n+\n   if (htab->params->plt_thread_safe == -1 && !bfd_link_executable (info))\n     htab->params->plt_thread_safe = 1;\n   if (!htab->opd_abi)\n@@ -13409,13 +13452,47 @@ ppc64_elf_size_stubs (struct bfd_link_info *info)\n \t\t  if (stub_entry != NULL)\n \t\t    {\n \t\t      enum ppc_stub_type old_type;\n+\n \t\t      /* A stub has already been created, but it may\n \t\t\t not be the required type.  We shouldn't be\n \t\t\t transitioning from plt_call to long_branch\n \t\t\t stubs or vice versa, but we might be\n \t\t\t upgrading from plt_call to plt_call_r2save or\n \t\t\t from long_branch to long_branch_r2off.  */\n \t\t      free (stub_name);\n+\t\t      if (htab->params->power10_stubs == -1)\n+\t\t\t{\n+\t\t\t  /* For --power10-stubs=auto, don't merge _notoc\n+\t\t\t     and other varieties of stubs.  (The _both\n+\t\t\t     variety won't be created.)  */\n+\t\t\t  bfd_boolean notoc = r_type == R_PPC64_REL24_NOTOC;\n+\t\t\t  struct ppc_stub_hash_entry *alt_stub\n+\t\t\t    = select_alt_stub (stub_entry, notoc);\n+\n+\t\t\t  if (alt_stub == NULL)\n+\t\t\t    {\n+\t\t\t      alt_stub = (struct ppc_stub_hash_entry *)\n+\t\t\t\tstub_hash_newfunc (NULL,\n+\t\t\t\t\t\t   &htab->stub_hash_table,\n+\t\t\t\t\t\t   stub_entry->root.string);\n+\t\t\t      if (alt_stub == NULL)\n+\t\t\t\t{\n+\t\t\t\t  /* xgettext:c-format */\n+\t\t\t\t  _bfd_error_handler\n+\t\t\t\t    (_(\"%pB: cannot create stub entry %s\"),\n+\t\t\t\t     section->owner, stub_entry->root.string);\n+\t\t\t\t  goto error_ret_free_internal;\n+\t\t\t\t}\n+\t\t\t      *alt_stub = *stub_entry;\n+\t\t\t      stub_entry->root.next = &alt_stub->root;\n+\t\t\t      if (notoc)\n+\t\t\t\t/* Sort notoc stubs first, for no good\n+\t\t\t\t   reason.  */\n+\t\t\t\talt_stub = stub_entry;\n+\t\t\t      alt_stub->stub_type = stub_type;\n+\t\t\t    }\n+\t\t\t  stub_entry = alt_stub;\n+\t\t\t}\n \t\t      old_type = stub_entry->stub_type;\n \t\t      switch (old_type)\n \t\t\t{"
    },
    {
      "sha": "51a4e9c53bdc8eaad1d4780d30c22ee76b55e63a",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -1,3 +1,17 @@\n+2020-07-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* emultempl/ppc64elf.em (power10-stubs): Accept optional \"auto\" arg.\n+\t* ld.texi (power10-stubs): Update.\n+\t* testsuite/ld-powerpc/callstub-1.d: Force --power10-stubs.\n+\t* testsuite/ld-powerpc/callstub-2.d: Relax branch offset comparison.\n+\t* testsuite/ld-powerpc/callstub-4.d: New test.\n+\t* testsuite/ld-powerpc/notoc.d: Force --no-power10-stubs.\n+\t* testsuite/ld-powerpc/notoc3.d,\n+\t* testsuite/ld-powerpc/notoc3.s,\n+\t* testsuite/ld-powerpc/notoc3.wf: New test.\n+\t* testsuite/ld-powerpc/powerpc.exp: Run new tests.  Pass\n+\t--no-power10-stubs for notoc link.\n+\n 2020-07-17  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* scripttempt/mmo.sc: Move .init first in .text output section."
    },
    {
      "sha": "1331d03113bd7c3091558f423eac86bb16008653",
      "filename": "ld/emultempl/ppc64elf.em",
      "status": "modified",
      "additions": 16,
      "deletions": 3,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/emultempl/ppc64elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/emultempl/ppc64elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/ppc64elf.em?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -716,7 +716,7 @@ PARSE_AND_LIST_LONGOPTS=${PARSE_AND_LIST_LONGOPTS}'\n   { \"no-plt-align\", no_argument, NULL, OPTION_NO_PLT_ALIGN },\n   { \"plt-localentry\", optional_argument, NULL, OPTION_PLT_LOCALENTRY },\n   { \"no-plt-localentry\", no_argument, NULL, OPTION_NO_PLT_LOCALENTRY },\n-  { \"power10-stubs\", no_argument, NULL, OPTION_POWER10_STUBS },\n+  { \"power10-stubs\", optional_argument, NULL, OPTION_POWER10_STUBS },\n   { \"no-power10-stubs\", no_argument, NULL, OPTION_NO_POWER10_STUBS },\n   { \"emit-stub-syms\", no_argument, NULL, OPTION_STUBSYMS },\n   { \"no-emit-stub-syms\", no_argument, NULL, OPTION_NO_STUBSYMS },\n@@ -773,7 +773,7 @@ PARSE_AND_LIST_OPTIONS=${PARSE_AND_LIST_OPTIONS}'\n   --no-plt-localentry         Don'\\''t optimize ELFv2 calls\\n\"\n \t\t   ));\n   fprintf (file, _(\"\\\n-  --power10-stubs             Use Power10 PLT call stubs (default auto)\\n\"\n+  --power10-stubs [=auto]     Use Power10 PLT call stubs (default auto)\\n\"\n \t\t   ));\n   fprintf (file, _(\"\\\n   --no-power10-stubs          Don'\\''t use Power10 PLT call stubs\\n\"\n@@ -889,7 +889,20 @@ PARSE_AND_LIST_ARGS_CASES=${PARSE_AND_LIST_ARGS_CASES}'\n       break;\n \n     case OPTION_POWER10_STUBS:\n-      params.power10_stubs = 1;\n+      if (optarg != NULL)\n+\t{\n+\t  if (strcasecmp (optarg, \"auto\") == 0)\n+\t    params.power10_stubs = -1;\n+\t  else if (strcasecmp (optarg, \"yes\") == 0)\n+\t    params.power10_stubs = 1;\n+\t  else if (strcasecmp (optarg, \"no\") == 0)\n+\t    params.power10_stubs = 0;\n+\t  else\n+\t    einfo (_(\"%F%P: invalid --power10-stubs argument `%s'\\''\\n\"),\n+\t\t   optarg);\n+\t}\n+      else\n+\tparams.power10_stubs = 1;\n       break;\n \n     case OPTION_NO_POWER10_STUBS:"
    },
    {
      "sha": "2a93e9456aca3c2bed36f539ba223c9955ea4cdd",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -7922,15 +7922,13 @@ care.  @option{--no-plt-localentry} is the default.\n @itemx --no-power10-stubs\n When PowerPC64 @command{ld} links input object files containing\n relocations used on power10 prefixed instructions it normally creates\n-linkage stubs (PLT call and long branch) using power10 instructions.\n-In particular for @code{@@notoc} PLT calls where @code{r2} is not\n-known the power10 stubs are smaller and faster, so are preferred for\n+linkage stubs (PLT call and long branch) using power10 instructions\n+for @code{@@notoc} PLT calls where @code{r2} is not known.  The\n+power10 notoc stubs are smaller and faster, so are preferred for\n power10.  @option{--power10-stubs} and @option{--no-power10-stubs}\n allow you to override the linker's selection of stub instructions.\n-For example, when linking a shared library that contains cpu-optimized\n-versions of functions for both power9 and power10, you might use\n-@option{--no-power10-stubs} so that power9 code making calls doesn't\n-attempt to execute power10 instructions.\n+@option{--power10-stubs=auto} allows the user to select the default\n+auto mode.\n @end table\n \n @ifclear GENERIC"
    },
    {
      "sha": "48efdfba0fa702033cf41d5b8814da472a2a9051",
      "filename": "ld/testsuite/ld-powerpc/callstub-1.d",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/callstub-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/callstub-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/callstub-1.d?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -1,5 +1,5 @@\n #as: -a64 -mpower10\n-#ld: -melf64ppc -shared --plt-align=0 --hash-style=gnu\n+#ld: -melf64ppc -shared --plt-align=0 --power10-stubs --hash-style=gnu\n #objdump: -dr -Mpower10\n \n .*\n@@ -20,10 +20,10 @@ Disassembly of section \\.text:\n .*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n .*:\t(4e 80 04 20|20 04 80 4e) \tbctr\n #...\n-.*:\t(4b ff ff c1|c1 ff ff 4b) \tbl      .*\\.plt_call\\.f1>\n+\n+.*<_start>:\n+.*:\t(4b ff .. ..|.. .. ff 4b) \tbl      .*\\.plt_call\\.f1>\n .*:\t(e8 41 00 18|18 00 41 e8) \tld      r2,24\\(r1\\)\n-.*:\t(4b ff ff bd|bd ff ff 4b) \tbl      .*\\.plt_call\\.f1\\+0x4>\n-.*:\t(4b ff ff cd|cd ff ff 4b) \tbl      .*\\.plt_call\\.f2>\n-.*:\t(04 10 00 01|01 00 10 04) \tpld     r3,.*\n-.*:\t(e4 60 .. ..|.. .. 60 e4) \n+.*:\t(4b ff .. ..|.. .. ff 4b) \tbl      .*\\.plt_call\\.f1\\+0x4>\n+.*:\t(4b ff .. ..|.. .. ff 4b) \tbl      .*\\.plt_call\\.f2>\n #pass"
    },
    {
      "sha": "5b43783aae15bba150ff004cd7c0522dba901654",
      "filename": "ld/testsuite/ld-powerpc/callstub-2.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/callstub-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/callstub-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/callstub-2.d?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -27,9 +27,9 @@ Disassembly of section \\.text:\n .*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n .*:\t(4e 80 04 20|20 04 80 4e) \tbctr\n \n-#...\n-.*:\t(4b ff ff bd|bd ff ff 4b) \tbl      .*\\.plt_call\\.f1>\n+.*<_start>:\n+.*:\t(4b ff .. ..|.. .. ff 4b) \tbl      .*\\.plt_call\\.f1>\n .*:\t(e8 41 00 18|18 00 41 e8) \tld      r2,24\\(r1\\)\n-.*:\t(4b ff ff b9|b9 ff ff 4b) \tbl      .*\\.plt_call\\.f1\\+0x4>\n-.*:\t(4b ff ff d5|d5 ff ff 4b) \tbl      .*\\.plt_call\\.f2>\n+.*:\t(4b ff .. ..|.. .. ff 4b) \tbl      .*\\.plt_call\\.f1\\+0x4>\n+.*:\t(4b ff .. ..|.. .. ff 4b) \tbl      .*\\.plt_call\\.f2>\n #pass"
    },
    {
      "sha": "12ea0d9be032e5b2b8c8f628927f09bfedf5a312",
      "filename": "ld/testsuite/ld-powerpc/callstub-4.d",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/callstub-4.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/callstub-4.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/callstub-4.d?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -0,0 +1,32 @@\n+#source: callstub-1.s\n+#as: -a64 -mpower10\n+#ld: -melf64ppc -shared --plt-align=0 --hash-style=gnu\n+#objdump: -dr -Mpower10\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+.*\\.plt_call\\.f1>:\n+.*:\t(04 10 00 01|01 00 10 04) \tpld     r12,.*\n+.*:\t(e5 80 .. ..|.. .. 80 e5) \n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(4e 80 04 20|20 04 80 4e) \tbctr\n+.*:\t(f8 41 00 18|18 00 41 f8) \tstd     r2,24\\(r1\\)\n+.*:\t(e9 82 80 28|28 80 82 e9) \tld      r12,-32728\\(r2\\)\n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(4e 80 04 20|20 04 80 4e) \tbctr\n+\n+.*\\.plt_call\\.f2>:\n+.*:\t(04 10 00 01|01 00 10 04) \tpld     r12,.*\n+.*:\t(e5 80 .. ..|.. .. 80 e5) \n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(4e 80 04 20|20 04 80 4e) \tbctr\n+#...\n+\n+.*<_start>:\n+.*:\t(4b ff .. ..|.. .. ff 4b) \tbl      .*\\.plt_call\\.f1\\+0x10>\n+.*:\t(e8 41 00 18|18 00 41 e8) \tld      r2,24\\(r1\\)\n+.*:\t(4b ff .. ..|.. .. ff 4b) \tbl      .*\\.plt_call\\.f1>\n+.*:\t(4b ff .. ..|.. .. ff 4b) \tbl      .*\\.plt_call\\.f2>\n+#pass"
    },
    {
      "sha": "3555be7334c03b21e4c066662f5b5d1f978be82d",
      "filename": "ld/testsuite/ld-powerpc/notoc.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/notoc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/notoc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/notoc.d?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -1,6 +1,6 @@\n #source: notoc.s\n #as: -a64\n-#ld: --no-plt-localentry -T ext.lnk\n+#ld: --no-plt-localentry --no-power10-stubs -T ext.lnk\n #objdump: -d\n #target: powerpc64*-*-*\n "
    },
    {
      "sha": "ce19e994bbe09189ae98fb1bcd09ef83e9a9250c",
      "filename": "ld/testsuite/ld-powerpc/notoc3.d",
      "status": "added",
      "additions": 97,
      "deletions": 0,
      "changes": 97,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/notoc3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/notoc3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/notoc3.d?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -0,0 +1,97 @@\n+#as: -a64 -mpower10\n+#ld: --no-plt-localentry -T ext.lnk\n+#objdump: -d\n+#target: powerpc64*-*-*\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+.* <.*\\.long_branch\\.f1>:\n+.*:\t(18 00 41 f8|f8 41 00 18) \tstd     r2,24\\(r1\\)\n+.*:\t(.. .. 00 48|48 00 .. ..) \tb       .* <f1>\n+\n+.* <.*\\.long_branch\\.g1>:\n+.*:\t(18 00 41 f8|f8 41 00 18) \tstd     r2,24\\(r1\\)\n+.*:\t(.. .. 00 48|48 00 .. ..) \tb       .* <g1>\n+\n+.* <.*\\.plt_branch\\.ext>:\n+.*:\t(00 20 60 3d|3d 60 20 00) \tlis     r11,8192\n+.*:\t(00 00 6b 61|61 6b 00 00) \tori     r11,r11,0\n+.*:\t(ff ef 13 06|06 13 ef ff) \tpla     r12,-268435736\n+.*:\t(e8 fe 80 39|39 80 fe e8) \n+.*:\t(46 17 6b 79|79 6b 17 46) \trldicr  r11,r11,34,29\n+.*:\t(14 62 8b 7d|7d 8b 62 14) \tadd     r12,r11,r12\n+.*:\t(a6 03 89 7d|7d 89 03 a6) \tmtctr   r12\n+.*:\t(20 04 80 4e|4e 80 04 20) \tbctr\n+.*:\t(00 80 82 e9|e9 82 80 00) \tld      r12,-32768\\(r2\\)\n+.*:\t(a6 03 89 7d|7d 89 03 a6) \tmtctr   r12\n+.*:\t(20 04 80 4e|4e 80 04 20) \tbctr\n+\n+.* <.*\\.long_branch\\.f2>:\n+.*:\t(00 00 00 60|60 00 00 00) \tnop\n+.*:\t(00 00 10 06|06 10 00 00) \tpla     r12,108\n+.*:\t(6c 00 80 39|39 80 00 6c) \n+.*:\t(.. .. 00 48|48 00 .. ..) \tb       .* <f2>\n+\n+.* <.*\\.long_branch\\.g2>:\n+.*:\t(00 00 00 60|60 00 00 00) \tnop\n+.*:\t(00 00 10 06|06 10 00 00) \tpla     r12,144\n+.*:\t(90 00 80 39|39 80 00 90) \n+.*:\t(.. .. 00 48|48 00 .. ..) \tb       .* <g2>\n+#...\n+\n+.* <f1>:\n+.*:\t(01 00 00 48|48 00 00 01) \tbl      .* <f1>\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <.*\\.long_branch\\.f2>\n+.*:\t(.. .. 00 48|48 00 .. ..) \tbl      .* <g1>\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <.*\\.long_branch\\.g2>\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <.*\\.plt_branch\\.ext>\n+.*:\t(20 00 80 4e|4e 80 00 20) \tblr\n+\n+.* <g1>:\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <.*\\.long_branch\\.f2>\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <f1>\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <.*\\.long_branch\\.g2>\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <g1>\n+.*:\t(20 00 80 4e|4e 80 00 20) \tblr\n+\n+.* <f2>:\n+.*:\t(02 10 40 3c|3c 40 10 02) \tlis     r2,4098\n+.*:\t(00 90 42 38|38 42 90 00) \taddi    r2,r2,-28672\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <.*\\.long_branch\\.f1>\n+.*:\t(18 00 41 e8|e8 41 00 18) \tld      r2,24\\(r1\\)\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <f2\\+0x8>\n+.*:\t(00 00 00 60|60 00 00 00) \tnop\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <.*\\.long_branch\\.g1>\n+.*:\t(18 00 41 e8|e8 41 00 18) \tld      r2,24\\(r1\\)\n+.*:\t(.. .. 00 48|48 00 .. ..) \tbl      .* <g2\\+0x8>\n+.*:\t(00 00 00 60|60 00 00 00) \tnop\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <.*\\.plt_branch\\.ext\\+0x20>\n+.*:\t(00 00 00 60|60 00 00 00) \tnop\n+.*:\t(20 00 80 4e|4e 80 00 20) \tblr\n+\n+.* <g2>:\n+.*:\t(02 10 40 3c|3c 40 10 02) \tlis     r2,4098\n+.*:\t(00 90 42 38|38 42 90 00) \taddi    r2,r2,-28672\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <f2\\+0x8>\n+.*:\t(00 00 00 60|60 00 00 00) \tnop\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <.*\\.long_branch\\.f1>\n+.*:\t(18 00 41 e8|e8 41 00 18) \tld      r2,24\\(r1\\)\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <g2\\+0x8>\n+.*:\t(00 00 00 60|60 00 00 00) \tnop\n+.*:\t(.. .. ff 4b|4b ff .. ..) \tbl      .* <.*\\.long_branch\\.g1>\n+.*:\t(18 00 41 e8|e8 41 00 18) \tld      r2,24\\(r1\\)\n+.*:\t(20 00 80 4e|4e 80 00 20) \tblr\n+\n+.* <_start>:\n+.*:\t(00 00 00 48|48 00 00 00) \tb       .* <_start>\n+#...\n+\n+Disassembly of section \\.text\\.ext:\n+\n+8000000000000000 <ext>:\n+8000000000000000:\t(02 10 40 3c|3c 40 10 02) \tlis     r2,4098\n+8000000000000004:\t(00 90 42 38|38 42 90 00) \taddi    r2,r2,-28672\n+8000000000000008:\t(00 00 00 60|60 00 00 00) \tnop\n+800000000000000c:\t(20 00 80 4e|4e 80 00 20) \tblr"
    },
    {
      "sha": "afbefa4a3ca4c4521d55284274e88c486b771897",
      "filename": "ld/testsuite/ld-powerpc/notoc3.s",
      "status": "added",
      "additions": 59,
      "deletions": 0,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/notoc3.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/notoc3.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/notoc3.s?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -0,0 +1,59 @@\n+ .text\n+ .globl f1, f2, g1, g2, _start\n+ .weak ext\n+ .abiversion 2\n+\n+f1:\n+ .localentry f1,1\n+ bl f1@notoc\n+ bl f2@notoc\n+ bl g1@notoc\n+ bl g2@notoc\n+ bl ext@notoc\n+ blr\n+\n+g1:\n+ .localentry g1,1\n+ bl f2@notoc\n+ bl f1@notoc\n+ bl g2@notoc\n+ bl g1@notoc\n+ blr\n+\n+f2:\n+0:\n+ addis 2,12,.TOC.-0b@ha\n+ addi 2,2,.TOC.-0b@l\n+ .localentry f2,.-0b\n+ bl f1\n+ nop\n+ bl f2\n+ nop\n+ bl g1\n+ nop\n+ bl g2\n+ nop\n+ bl ext\n+ nop\n+ blr\n+\n+g2:\n+0:\n+ addis 2,12,.TOC.-0b@ha\n+ addi 2,2,.TOC.-0b@l\n+ .localentry g2,.-0b\n+ bl f2\n+ nop\n+ bl f1\n+ nop\n+ bl g2\n+ nop\n+ bl g1\n+ nop\n+ blr\n+\n+_start:\n+ .cfi_startproc\n+ b _start\n+ pld 3,_start\n+ .cfi_endproc"
    },
    {
      "sha": "23904f83b9920df00bd0adb266a8edc495223530",
      "filename": "ld/testsuite/ld-powerpc/notoc3.wf",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/notoc3.wf",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/notoc3.wf",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/notoc3.wf?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -0,0 +1,17 @@\n+Contents of the \\.eh_frame section:\n+\n+\n+00000000 0000000000000010 00000000 CIE\n+  Version:               1\n+  Augmentation:          \"zR\"\n+  Code alignment factor: 4\n+  Data alignment factor: -8\n+  Return address column: 65\n+  Augmentation data:     1b\n+  DW_CFA_def_cfa: r1 ofs 0\n+\n+00000014 0000000000000010 00000018 FDE cie=00000000 pc=000000001000020c\\.\\.0000000010000218\n+  DW_CFA_nop\n+  DW_CFA_nop\n+  DW_CFA_nop\n+"
    },
    {
      "sha": "bd269a2f8c1bebbc80df296d0dead01d0c78f276",
      "filename": "ld/testsuite/ld-powerpc/powerpc.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/powerpc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9/ld/testsuite/ld-powerpc/powerpc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/powerpc.exp?ref=e10a07b32dc1faed25b5bbcbbc47d68e2ff537b9",
      "patch": "@@ -317,10 +317,14 @@ set ppc64elftests {\n     {\"ambig shared v1\" \"-shared -melf64ppc\" \"\" \"-a64\" {funv1.s} {} \"funv1.so\"}\n     {\"ambig shared v2\" \"-shared -melf64ppc\" \"\" \"-a64\" {funv2.s} {} \"funv2.so\"}\n     {\"notoc ext\" \"\" \"\" \"-a64\" {ext.s} {} \"\"}\n-    {\"notoc\" \"-melf64ppc --no-plt-localentry -T ext.lnk\" \"\" \"-a64\" {notoc.s}\n+    {\"notoc\" \"-melf64ppc --no-plt-localentry --no-power10-stubs -T ext.lnk\"\n+\t\"\" \"-a64\" {notoc.s}\n \t{{objdump -d notoc.d} {readelf {-wf -W} notoc.wf}} \"notoc\"}\n     {\"notoc2\" \"-melf64ppc -shared\" \"\" \"-a64 -mpower10\" {notoc2.s}\n \t{{objdump {-d -Mpower10} notoc2.d}} \"notoc2\"}\n+    {\"notoc3\" \"-melf64ppc --no-plt-localentry -T ext.lnk\" \"\"\n+\t\"-a64 -mpower10\" {notoc3.s}\n+\t{{objdump -d notoc3.d} {readelf {-wf -W} notoc3.wf}} \"notoc3\"}\n     {\"pcrelopt\" \"-melf64ppc --hash-style=gnu\" \"tmpdir/symtocbase.so\"\n \t\"-a64 -mpower10\" {pcrelopt.s}\n \t{{objdump {-d -Mpower10} pcrelopt.d}\n@@ -403,6 +407,7 @@ if [ supports_ppc64 ] then {\n     run_dump_test \"callstub-1\"\n     run_dump_test \"callstub-2\"\n     run_dump_test \"callstub-3\"\n+    run_dump_test \"callstub-4\"\n     run_dump_test \"tlsgd\"\n     run_dump_test \"tlsld\"\n     run_dump_test \"tlsie\""
    }
  ]
}