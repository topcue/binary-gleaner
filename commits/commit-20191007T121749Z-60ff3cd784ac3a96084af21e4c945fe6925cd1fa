{
  "sha": "60ff3cd784ac3a96084af21e4c945fe6925cd1fa",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjBmZjNjZDc4NGFjM2E5NjA4NGFmMjFlNGM5NDVmZTY5MjVjZDFmYQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-10-07T12:10:55Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-10-07T12:17:49Z"
    },
    "message": "gdb/testsuite/ada: Handle missing debug info case\n\nUpdate a test script to handle the case where missing Ada debug\ninformation means we can't catch exceptions.  This was discussed on\nthe list here:\n\n  https://sourceware.org/ml/gdb-patches/2019-08/msg00607.html\n\nAnd is similar to code that already exists in the test scripts\ngdb.ada/catch_ex.exp and gdb.ada/mi_catch_ex.exp.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.ada/catch_ex_std.exp: Handle being unabled to catch Ada\n\texceptions due to missing debug information.",
    "tree": {
      "sha": "45ac550794e7eee963b49e06610e8d124e554f66",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/45ac550794e7eee963b49e06610e8d124e554f66"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/60ff3cd784ac3a96084af21e4c945fe6925cd1fa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60ff3cd784ac3a96084af21e4c945fe6925cd1fa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/60ff3cd784ac3a96084af21e4c945fe6925cd1fa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60ff3cd784ac3a96084af21e4c945fe6925cd1fa/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b2caee6aaa78106d7ae3c46dda3a84a325e43a1d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b2caee6aaa78106d7ae3c46dda3a84a325e43a1d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b2caee6aaa78106d7ae3c46dda3a84a325e43a1d"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 23,
    "deletions": 7
  },
  "files": [
    {
      "sha": "4adf16af00c68077cefbba59a90c6789a7c6c4c2",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60ff3cd784ac3a96084af21e4c945fe6925cd1fa/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60ff3cd784ac3a96084af21e4c945fe6925cd1fa/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=60ff3cd784ac3a96084af21e4c945fe6925cd1fa",
      "patch": "@@ -1,3 +1,8 @@\n+2019-10-07  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.ada/catch_ex_std.exp: Handle being unabled to catch Ada\n+\texceptions due to missing debug information.\n+\n 2019-10-07  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.base/default.exp: Expect _gdb_major/_gdb_minor to be 9.1."
    },
    {
      "sha": "f3a4e59d4b9108764cd11510506311a7af17d1c3",
      "filename": "gdb/testsuite/gdb.ada/catch_ex_std.exp",
      "status": "modified",
      "additions": 18,
      "deletions": 7,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60ff3cd784ac3a96084af21e4c945fe6925cd1fa/gdb/testsuite/gdb.ada/catch_ex_std.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60ff3cd784ac3a96084af21e4c945fe6925cd1fa/gdb/testsuite/gdb.ada/catch_ex_std.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/catch_ex_std.exp?ref=60ff3cd784ac3a96084af21e4c945fe6925cd1fa",
      "patch": "@@ -95,12 +95,23 @@ if {![runto_main]} then {\n    return 0\n }\n \n-gdb_test \"catch exception some_kind_of_error\" \\\n-    \"Catchpoint \\[0-9\\]+: `some_kind_of_error' Ada exception\"\n+set can_catch_exceptions 0\n+gdb_test_multiple \"catch exception some_kind_of_error\" \"\" {\n+    -re \"Catchpoint \\[0-9\\]+: `some_kind_of_error' Ada exception\\r\\n$gdb_prompt $\" {\n+\tpass $gdb_test_name\n+\tset can_catch_exceptions 1\n+    }\n \n-gdb_test \"cont\" \\\n-    \"Catchpoint \\[0-9\\]+, .* at .*foo\\.adb:\\[0-9\\]+.*\" \\\n-    \"caught the exception\"\n+    -re \"Your Ada runtime appears to be missing some debugging information.\\r\\nCannot insert Ada exception catchpoint in this configuration.\\r\\n$gdb_prompt $\" {\n+\t    unsupported $gdb_test_name\n+    }\n+}\n \n-gdb_test \"print \\$_ada_exception = some_package.some_kind_of_error'Address\" \\\n-    \" = true\"\n+if { $can_catch_exceptions } {\n+    gdb_test \"cont\" \\\n+\t\"Catchpoint \\[0-9\\]+, .* at .*foo\\.adb:\\[0-9\\]+.*\" \\\n+\t\"caught the exception\"\n+\n+    gdb_test \"print \\$_ada_exception = some_package.some_kind_of_error'Address\" \\\n+\t\" = true\"\n+}"
    }
  ]
}