{
  "sha": "9335d9f8235a13777ae058b1ad59f124b678f4fc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTMzNWQ5ZjgyMzVhMTM3NzdhZTA1OGIxYWQ1OWYxMjRiNjc4ZjRmYw==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-07-08T06:33:28Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-08-18T00:27:36Z"
    },
    "message": "sim: rename ChangeLog files to ChangeLog-2021\n\nNow that ChangeLog entries are no longer used for sim patches,\nthis commit renames all relevant sim ChangeLog to ChangeLog-2021,\nsimilar to what we would do in the context of the \"Start of New\nYear\" procedure.\n\nThe purpose of this change is to avoid people merging ChangeLog\nentries by mistake when applying existing commits that they are\ncurrently working on.\n\nAlso throw in a .gitignore entry to keep people from adding new\nChangeLog files anywhere in the sim tree.",
    "tree": {
      "sha": "55967dca6225c01fddbe724e1549446d1c472959",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/55967dca6225c01fddbe724e1549446d1c472959"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9335d9f8235a13777ae058b1ad59f124b678f4fc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9335d9f8235a13777ae058b1ad59f124b678f4fc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9335d9f8235a13777ae058b1ad59f124b678f4fc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9335d9f8235a13777ae058b1ad59f124b678f4fc/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8ae5245324fdc1d42cc221ce72689b40f4c08f66",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ae5245324fdc1d42cc221ce72689b40f4c08f66",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8ae5245324fdc1d42cc221ce72689b40f4c08f66"
    }
  ],
  "stats": {
    "total": 4338,
    "additions": 2170,
    "deletions": 2168
  },
  "files": [
    {
      "sha": "21a97784ab771f5d1e9d355218ce02ed0f972199",
      "filename": "include/sim/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/include/sim/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/include/sim/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/sim/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "include/sim/ChangeLog"
    },
    {
      "sha": "0ba781c2234670d4f50de8e1fb8a7b1bceb99d23",
      "filename": "sim/.gitignore",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/.gitignore",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/.gitignore",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/.gitignore?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "patch": "@@ -1,3 +1,5 @@\n+ChangeLog\n+\n /*/gentmap\n /*/run\n /*/hw-config.h"
    },
    {
      "sha": "cae9e35c04a11c9d90665789512c12bbbce1f1bd",
      "filename": "sim/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/ChangeLog"
    },
    {
      "sha": "81c2b87485af09c08d3ea5e3e2fe2097404959e0",
      "filename": "sim/aarch64/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/aarch64/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/aarch64/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/aarch64/ChangeLog"
    },
    {
      "sha": "fa1d7ab806e58d92cc14c309dbb04c06e6fda53a",
      "filename": "sim/arm/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/arm/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/arm/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/arm/ChangeLog"
    },
    {
      "sha": "e36f2aa3f5902be7febc2ae1ebed7b2e517eeb64",
      "filename": "sim/avr/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/avr/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/avr/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/avr/ChangeLog"
    },
    {
      "sha": "d02e56cc12786ec478f364b47eaed85576788828",
      "filename": "sim/bfin/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/bfin/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/bfin/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/bfin/ChangeLog"
    },
    {
      "sha": "54110018b20fb29dc4240d7214523325c33d7b4c",
      "filename": "sim/bpf/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/bpf/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/bpf/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/bpf/ChangeLog"
    },
    {
      "sha": "ad5980cd7d7a977bef839d65a5975f787e1624cc",
      "filename": "sim/common/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/common/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/common/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/common/ChangeLog"
    },
    {
      "sha": "a8deb87b310143cb8a14197118de6a3dcadc51ee",
      "filename": "sim/cr16/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/cr16/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/cr16/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/cr16/ChangeLog"
    },
    {
      "sha": "0f71a616ffb615297d4a9d232e11c0602986468b",
      "filename": "sim/cris/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/cris/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/cris/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/cris/ChangeLog"
    },
    {
      "sha": "5ae2318350d0fbc9a1554cf201e8df81b7540470",
      "filename": "sim/d10v/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/d10v/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/d10v/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/d10v/ChangeLog"
    },
    {
      "sha": "15296c1041681cd6a1a239cfa2a90f9727a228fb",
      "filename": "sim/erc32/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/erc32/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/erc32/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/erc32/ChangeLog"
    },
    {
      "sha": "da9fab31464c2f8b9506ded9f3663b8b5ae15198",
      "filename": "sim/example-synacor/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/example-synacor/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/example-synacor/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/example-synacor/ChangeLog"
    },
    {
      "sha": "5a5cd4bae37dba0ef2ca45e03316c509ec314365",
      "filename": "sim/frv/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/frv/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/frv/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/frv/ChangeLog"
    },
    {
      "sha": "05409272c4c9b5f66fa7aeec45f6fa57d329d1e6",
      "filename": "sim/ft32/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/ft32/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/ft32/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/ft32/ChangeLog"
    },
    {
      "sha": "3ce64e436e2d3e56f290f7c541ed648f417bb4f2",
      "filename": "sim/h8300/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/h8300/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/h8300/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/h8300/ChangeLog"
    },
    {
      "sha": "22efdf3260ffbd1c9445d3ce55d14e5dca5c19ef",
      "filename": "sim/igen/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/igen/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/igen/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/igen/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/igen/ChangeLog"
    },
    {
      "sha": "8110c358ad927eb5f6ec3f54ba314b0ba93b1549",
      "filename": "sim/iq2000/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/iq2000/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/iq2000/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/iq2000/ChangeLog"
    },
    {
      "sha": "64510e326b00e8395d304eb41c179daa1c5c9d0e",
      "filename": "sim/lm32/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/lm32/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/lm32/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/lm32/ChangeLog"
    },
    {
      "sha": "31375f62dfb8466658faa6214c38a7601cc21b8c",
      "filename": "sim/m32c/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/m32c/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/m32c/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/m32c/ChangeLog"
    },
    {
      "sha": "9f0244c01228c81e3106cccc375717dd34763157",
      "filename": "sim/m32r/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/m32r/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/m32r/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/m32r/ChangeLog"
    },
    {
      "sha": "c79a4e7053fea2f7cc2dd5cf67af60037a353612",
      "filename": "sim/m68hc11/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/m68hc11/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/m68hc11/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/m68hc11/ChangeLog"
    },
    {
      "sha": "c5c4016c36ffd879448e3b7324caa2c1188cd2f3",
      "filename": "sim/mcore/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/mcore/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/mcore/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/mcore/ChangeLog"
    },
    {
      "sha": "d01048cf05ca263063c9a76c54ecfa084221af2c",
      "filename": "sim/microblaze/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/microblaze/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/microblaze/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/microblaze/ChangeLog"
    },
    {
      "sha": "e463f82172f3573188e6eecfa5689ba3598a191b",
      "filename": "sim/mips/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/mips/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/mips/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/mips/ChangeLog"
    },
    {
      "sha": "a4ff98a300016b1d10d7c4e83da7a81d5e785574",
      "filename": "sim/mn10300/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/mn10300/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/mn10300/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/mn10300/ChangeLog"
    },
    {
      "sha": "b76988d38c91e8acd8cd5956b26b3745228248cc",
      "filename": "sim/moxie/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/moxie/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/moxie/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/moxie/ChangeLog"
    },
    {
      "sha": "8aadf3843809e534e1523a1e8743429a6a3d94b4",
      "filename": "sim/msp430/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/msp430/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/msp430/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/msp430/ChangeLog"
    },
    {
      "sha": "10d300634698beca16d79abf547e4bab2aa5e5e9",
      "filename": "sim/or1k/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/or1k/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/or1k/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/or1k/ChangeLog"
    },
    {
      "sha": "13dda80c92e397ed0a49ab179af7c7113c7f6ace",
      "filename": "sim/ppc/ChangeLog-2021",
      "status": "renamed",
      "additions": 2168,
      "deletions": 0,
      "changes": 2168,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/ppc/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/ppc/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "patch": "@@ -4679,3 +4679,2171 @@ Wed May 29 22:57:40 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>\n \n \t* ChangeLog.00, ChangeLog: ChangeLog from gdb-4.16 becomes\n \tChangeLog.00\n+\n+Wed May 29 22:57:40 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>\n+\n+\t* ChangeLog.00, ChangeLog: ChangeLog from gdb-4.16 becomes\n+        ChangeLog.00\n+\n+Thu Apr  4 15:17:22 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* INSTALL: Fix some long lines and remove x86 specific options in\n+\tthe examples.\n+\n+Sun Mar 31 15:47:33 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>\n+\n+        * INSTALL: Update to reflect gdb-4.16.\n+\n+        * RUN: Update to reflect gdb-4.16.  Review notes on building a BSD\n+        runtime environment.\n+\n+\t* README: Point out copyright status of simulator in introduction.\n+\n+Thu Mar  7 19:53:49 1996  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* emul_netbsd.c: Only include sys/mount.h if HAVE_SYS_MOUNT_H is\n+\tdefined.\n+\t* configure.in: Test for sys/mount.h.\n+\t* configure,config.in: Regenerate.\n+\n+Thu Feb 22 22:48:57 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* README, RUN, INSTALL: Update to reflect announcement\n+\t* psim: PSIM 1.0.1 released\n+\n+Thu Feb 22 14:01:56 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* emul_bugapi.c (emul_bugapi_do_read): New function to handle\n+\treads.\n+\t(emul_bugapi_instruction_call): Add support for .INCHR/.INLN\n+\tsystem calls.\n+\n+\t* emul_bugapi.c (emul_bugapi_do_write): Call flush_stdoutput.\n+\t* emul_netbsd.c (do_write): Call flush_stdoutput.\n+\n+\t* main.c (flush_stdoutput): Do fflush (stdout).\n+\t* sim_calls.c (flush_stdoutput): Do gdb_flush (gdb_stdout);\n+\t* sim_callbacks.h (flush_stdoutput): Declare.\n+\n+Wed Feb 21 10:39:35 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* emul_bugapi.c (bug_mapping): New structure to map bug system\n+\tcall numbers to a string.\n+\t(toplevel): Add remaining bugapi system calls.\n+\t(emul_bugapi_instruction_name): Map bugapi system call number to a\n+\tstring.\n+\t(emul_bugapi_do_write): Common code to process write system calls.\n+\t(emul_bugapi_instruction_call): If os-emul tracing is on, trace\n+\tthe system call.  Use the name to print unknown system call.\n+\tCorrect implementation of _OUTLN.  Add support for _OUTSTR and\n+\t_PCRLR system calls.\n+\n+Wed Feb 21 17:07:27 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* NOTES: New file.  Ramblings on why things were done they way\n+ \tthey were.\n+\n+\t* psim.c (psim_options): Didn't enter the model value into the\n+ \tdevice tree as a string.\n+\n+  \t* cpu.c (cpu_synchronize_context): Wrong test for conditional\n+ \tflush of cache.\n+\n+\t* emul_generic.c (emul_add_tree_hardware): reg value didn't match\n+ \tbus address.\n+\n+\t* ppc-opcode-flat: new file. Generate an instruction decode\n+ \tfunction like ppc-opcode-complex but use switch statements.\n+\n+\t* INSTALL: document new opcode file, add example configurations.\n+\n+Tue Feb 20 18:42:31 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* main.c (main): rename psim instance (system) to simulation and\n+ \tmake global.\n+\t* main.c (error): print out performance even when an error occures.\n+\n+\t* emul_bugapi.c (emul_bugapi_create): Fix argument passing.\n+\n+\t* emul_generic.c (emul_add_tree_hardware): Move hardware devices\n+ \tto 0x80000000 from 0x400000.\n+\n+Mon Feb 19 22:54:40 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* ppc-instructions (TLB Invalidate Entry, TLB Invalidate ALL):\n+        Implement by passing on request to all processors.\n+\t* ppc-instructions (TLB Synchronize): Implement as empty, processor\n+\ttlb's are always in sync.\n+\n+\t* cpu.c (cpu_page_tlb_invalidate_all): New function.  Pass on TLB\n+        invalidate request to processors VM sub-system.\n+\t* cpu.c (cpu_page_tlb_invalidate_entry): Ditto.\n+\n+\t* vm.c (vm_page_tlb_invalidate_all): New function. Mark all page\n+        TLB entries as invalid.\n+\t* vm.c (vm_page_tlb_invalidate_entry): New function. Ditt but only\n+\tinvalidate one TLB entry.\n+\n+\t* psim.c (psim_init): Invalidate TLB's before (re)starting.\n+\n+Mon Feb 19 21:25:56 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* emul_generic.c (emul_add_tree_options): Add argument\n+        oea_interrupt_prefix (0 or 1) that specifies the prefix MSR[IP]\n+        and hence the location of the interrupt vectors.  Add this to the\n+        device tree.\n+\n+\t* emul_chirp.c (emul_chirp_create): Allow configuration of\n+        floating-point and interrupt prefix (default 0) using the above.\n+\n+\t* emul_netbsd.c (emul_netbsd_create): Pass dummy arg for\n+        interrupt-prefix.\n+\n+\t* emul_bugapi.c (emul_bugapi_create): Allow configuration of\n+        interrupt prefix (default 1) and configure interrupt table traps\n+        accordingly.\n+\n+\t* emul_generic.c (emul_add_tree_hardware): Include a small eeprom\n+        in the list of devices.\n+\n+\t* device_table.c: For moment fake eeprom device by a memory\n+        device.  In future will need a proper eeprom device.\n+\n+Tue Feb 20 17:01:26 1996  J.T. Conklin  <jtc@rtl.cygnus.com>\n+\n+\t* config.in: Regenerated.\n+\n+Fri Feb 16 10:42:27 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* psim.c: Include options.h so print_options is declared.\n+\n+Thu Feb 15 18:10:13 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* emul_netbsd.c (toplevel): Do not include sys/resource.h if the\n+\tsystem doesn't have it, and turn off getrusage processing.\n+\t(write_rusage): #ifdef out if we don't have getrusage.\n+\t(do_getrusage): Define as 0 if we don't have getrusage.\n+\n+Wed Feb 14 17:38:12 1996  J. T. Conklin  <jtc@cygnus.com>\n+\n+\t* configure.in (AC_HEADER_DIRENT): Add, so that we can figure out\n+\twhere the directory functions are declared.\n+\t* configure: Regenerate\n+\n+\t* emul_netbsd.c: Use the macros defined by configure to find the\n+\tappropriate directory functions.\n+\n+Thu Feb  8 00:53:13 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* configure.in (xor_endian): Trace setting of xor-endian flag.\n+\n+Wed Feb  7 18:20:56 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* psim.c (psim_usage): Extend documentation.\n+\n+\t* ppc-instructions (model-print): fix typo.\n+\n+Sun Feb  4 23:58:02 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* configure.in (with-smp): Default configuration allow up to\n+\tfive processors (but enable only one).\n+\n+\t* emul_bugapi.c (emul_bugapi_create): If floating-point is\n+\tallowed, enable the floating point instruction set in the\n+\tmsr.\n+\n+Tue Jan 30 22:52:32 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* emul_chirp.c (chirp_emul_seek, chirp_emul_read,\n+        chirp_emul_write): Tolerate invalid ihandles.\n+\n+\t* device.c (device_instance_create, device_instance_delete):\n+\tinit/delete instance name\n+\n+\t* emul_chirp.c (emul_chirp_instruction_call): Read the nr args and\n+        returns when determining the service.\n+\n+\t* emul_chirp.c (chirp_read_t2h_args): Allow variable number of\n+        args for the method \"call-method\".\n+\n+\t* emul_chirp.c (chirp_emul_getprop): Tolerate a n_returns of zero\n+        - should be one. Some OpenBoot code doesn't pass correct arg.\n+\n+\t* emul_chirp.c (chirp_emul_getprop): Trace more property types.\n+\n+Tue Jan 30 19:12:29 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* RUN: New file. Describe how to run PSIM\n+\t* INSTALL: New file. Describe how to install PSIM\n+\t* README: New file. Overview PSIM.\n+\t* BUGS: New file. Briefly discuss bugs and limitations\n+\n+Wed Jan 24 20:28:08 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* emul_bugapi.c (OEA_START_ADDRESS): Put it back to 0x100000,\n+        wasn't correctly using GLD.\n+\n+Mon Jan 22 22:44:13 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* emul_generic.c (emul_add_tree_options): Make default number of\n+\tactive processors 1 (even when SMP enabled).\n+\n+Mon Jan 22 22:37:34 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* device_table.c (icu_io_read_buffer_callback): Add extra register\n+        (at addr + 4) that returns number of processors.\n+\n+\t* emul_generic.c (emul_add_tree_hardware): Update device node to\n+        match.\n+\n+Mon Jan 22 22:00:42 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* emul_bugapi.c (OEA_START_ADDRESS): Change to 0x4000 so that it\n+        matches gas-960116/ld.\n+\n+Fri Jan 19 00:32:27 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* psim-960119 released - psim-1.0b01.\n+\n+Fri Jan 19 00:32:27 1996  Andrew Cagney - aka Noid  <cagney@highland.au.com>\n+\n+\t* psim.c (psim_create): Re-order so that all options are set\n+        before the CPU's are created.  Was breaking mon_create();\n+\n+\t* psim.c (psim_create): Tidy up conflicting configuration errors.\n+\n+\t* debug.c: Add missing print-info entry to trace table.\n+\n+\t* os_emul.c (os_emul_create): Fix `-e' option. Was looking under\n+        wrong name.\n+\n+\t* psim.c (psim_options): Fix `-r' option. Was entering under wrong\n+        name.\n+\n+Thu Jan 18 20:33:48 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* vm.c (om_unpack_bats): Fix checking of bat bits.\n+\n+\t* emul_chirp.c (emul_chirp_create): Store address of OB in memory\n+ \tin the os_emul_data structure.\n+\n+\t* emul_bugapi.c (emul_bugapi_create): Store the address of the\n+ \tbugapi code (in main memory) in the os_emul_data structure.\n+\n+Thu Jan 18 01:14:55 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* vm.c (om_translate_effective_to_real): Fix trace output.\n+\n+Wed Jan 17 22:21:55 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* device_table.c (generic_device_init_address): Create memory from\n+        information obtained from `reg' property.\n+\t* device_table.c (vm_init_address_callback): Use information\n+        obtained from properties.\n+\t* emul_netbsd.c (emul_netbsd_create): Update to create device and\n+        property entries to match\n+\n+Tue Jan 16 09:50:53 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* idecode_expression.h (ALU_END): Add ITRACE of the result.\n+\n+\t* ppc-instructions (Equivalent): Enable this instruction.\n+\t(Add to Minus One Extended): Ditto.\n+\t(Subtract from Minus One Extended): Ditto.\n+\t(Add/And/Or/Xor Immediate): Add alu trace of result.\n+\t(Add/And/Or/Xor Shifted Immediate): Ditto.\n+\t(And/Or/Equivalent/Nand/Nor): Ditto.\n+\t(And/Or with Complement): Ditto.\n+\t(Extend Sign Byte/Half Word): Ditto.\n+\t(Count Leading Zeros): Ditto.\n+\t(Shift Right Algerbraic Word): Ditto.\n+\t(Shift Right Algerbraic Word Immediate): Ditto.\n+\n+Tue Jan  9 15:10:27 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* emul_bugapi.c (emul_bugapi_instruction_call) : Make format type\n+ \tcorrect.\n+\t* emul_chirp.c (map_over_chirp_note) : Ditto\n+\t* emul_chirp.c (chirp_emul_test) : Ditto\n+\t* device_table.c (register_init): Ditto\n+\n+Tue Jan  9 14:16:26 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* configure.in: Make disable-sim-switch default.  Switch only\n+ \tuseful if using --enable-sim-opcode=ppc-opcode-stupid and then\n+ \tonly marginally so.\n+\n+Mon Jan  8 12:17:22 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* device_table.c (register_init): Make format type correct.\n+\n+Wed Jan  3 19:21:46 1996  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* emul_bugapi.c (emul_bugapi_create): Add nodes to init the\n+ \tsystem-call trap to the emul instruction call instruction (Along\n+ \twith an rfi and infinate loop).\n+\n+\t* emul_bugapi.c (emul_bugapi_instruction_call): Expand to include\n+ \ta few real PPC bug calls.  Test with simple hello world.\n+\n+Tue Jan  2 20:51:19 1996  Andrew Cagney - aka Noid  <cagney@highland.com.au>\n+\n+\t* device.h, device.c (device_child, device_sibling): New\n+        functions.  Return corresponding device value.\n+\n+\t* emul_chirp.c (chirp_emul_child, chirp_emul_peer,\n+        chirp_emul_parent): New functions - emulate corresponding OpenBoot\n+        interfaces.\n+\n+\t* device_table.c (register_init): Extend properties attached to\n+        register init node to allow a specific processor's register to be\n+        specified.\n+\n+\t* emul_chirp.c (emul_chirp_create): Init SMP correctly - the\n+        initial PC for all processors is an infinate loop but then, for\n+        processor zero, is quickly changed to be the correct code starting\n+        address.\n+\n+\t* emul_chirp.c (emul_chirp_create): Add fake bootpath\n+        et.al. properties to tree.\n+\n+\t* emul_chirp.c (chirp_emul_getproplen): New function.  Emulate the\n+        getproplen OpenBoot call.\n+\n+\t* emul_chirp.c (emul_chirp_instruction_call): Document other\n+        possible chirp emulation internal states.\n+\n+\t* emul_chirp.c (emul_chirp_instruction_call): Trace failed lookups\n+ \tas well as successful ones.\n+\n+\t* emul_chirp.c (emul_chirp_open): New function - handle open\n+        client call.\n+\n+\t* Makefile.in (maintainer-clean): Proper rule that eliminates more\n+        junk.\n+\n+Tue Dec 19 13:00:11 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* emul_chirp.c (chirp_emul_exit): Full out call.\n+\n+\t* device_table.c (htab_map_page): Wasn't handling byte swap when\n+\tcreating entries in the hash table.\n+\n+\t* device.c (device_tree_find_node): Allow primative wild-card match\n+ \tof device names with the path.\n+\n+\tFIXME: As mentioned earlier, the device stuff needs work to bring\n+ \tit into line with OpenBoot.  Part of this work is rewriting the\n+\tfind_node function so that it behaves as specified in p1275.\n+\n+Mon Dec 18 19:58:56 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* emul_chrp.c (chirp_emul_write, chirp_emul_finddevice): add\n+ \tbetter tracing.\n+\n+\t* emul_chrp.c: Change return type of emul functions to int.  Emul\n+ \tfunctions either return -1 or zero so unsigned was a bit\n+ \tdangerous.\n+\n+\t* inline.h (*), igen.c, dgen.c, *: Update INLINE macros so that\n+        they are paramaterised with the type of the function.  Gets around\n+        the problem of `static' needing to come first with `attribute'\n+        comming last.  Format declarations and definitions so that emacs\n+\tdoesn't get confused.\n+\n+Fri Dec 15 17:06:44 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* std-config.h (PSIM_INLINE): Add missing inline configuration\n+ \tcontrol for the main loop.\n+\n+\t* mon.c (mon_print_info): If monitoring disabled still print out\n+ \tthe number seconds used.\n+\n+\t* psim.c (run_until_stop): Don't monitor the cache misses when\n+ \tmonitoring is disabled.\n+\n+\t* configure.in (sim_mon, sim_monitor): Correct typo - sim_mon ->\n+ \tsim_monitor for shell variable (or should that have been the other\n+ \tway around?).\n+\n+\t* vm.c (vm_synchronize_context): Fix wrong test for unsuported\n+ \tchange in endian-mode.\n+\n+\t* std-config.h (WITH_REGPARM), inline.h (IDECODE_INLINE,\n+\tSEMANTICS_INLINE): Add -DWITH_REGPARM=<n> option.  Enables the\n+\t__attribute__((__regparm(WITH_REGPARM))) for some functions.\n+\tconfigure with --enable-sim-cflags=\"-DWITH_REGPARAM=3\" (say).\n+\tUnfortunatly it tickles a bug (gcc?) and can't be used.\n+\n+Mon Dec 18 13:36:06 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* device.c (device_tree_add_device): Make trace fprintf arguments\n+\ttype correct.\n+\t* device_table.c (htab_decode_hash_table): Ditto.\n+\t(htab_map_binary): Ditto.\n+\t(htab_init_callback): Ditto.\n+\t* vm.c (om_virtual_to_real): Ditto.\n+\n+Sat Dec 16 09:54:18 1995  Michael Meissner  <meissner@wogglebug.tiac.net>\n+\n+\t* emul_netbsd.c (emul_netbsd_create): Deal with new BFD that\n+\tchanged how big/little endian support is recorded, while remaining\n+\tcompatible with the old BFD with #ifdefs.\n+\t* emul_chirp.c (emul_chirp_create): Ditto.\n+\t* emul_bugapi.c (emul_bugapi_create): Ditto.\n+\n+Fri Dec 15 15:55:56 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* std-config.h (MODEL_INLINE): Turn off INLINE_MODULE by default.\n+\n+\t* corefile.h: Delete declarations for unknown functions.\n+\t* device.h: Ditto.\n+\t* interrupts.h: Ditto.\n+\t* interrupts.c: Ditto.\n+\n+Thu Dec 14 18:49:34 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* lf.c (lf_print_function_type): New function.  Munges a function\n+ \ttype so that the prefix (eg INLINE...) is inserted after the type\n+ \tbut before any `*'.\n+\n+\t* igen.c: Change to output functions using this.\n+\n+Wed Dec 13 23:47:00 1995  Andrew Cagney   <cagney@highland.com.au>\n+\n+\tFIXME: Emul CHIRP does not correctly implement the find device\n+ \tfunction.\n+\n+\tFIXME: Emul CHIRP and device do not implement device instance\n+ \toperations.\n+\n+Wed Dec 13 23:47:00 1995  Andrew Cagney   <cagney@highland.com.au>\n+\n+\t* options.c (options_inline): Function to output meaningful\n+        description of the INLINE options.\n+\n+\t* configure.in (inline): Replace inline magic numbers with macro\n+        names. Map 1->LOCALS_INLINE and 2->ALL_INLINE.\n+\n+\t* inline.h, inline.c: update to use inline method.\n+\n+\t* std-config.h (CPU_INLINE), cpu.h, inline.h, inline.c: make cpu.h\n+        inline always.\n+\n+\t* std-config.h (EVENTS_INLINE): Inline events in psim.\n+\n+Wed Dec 13 22:01:21 1995  Andrew Cagney   <cagney@highland.com.au>\n+\n+\t* device_table.c (htab_sum_binary): DMA binaries to correct byte\n+        within a page.\n+\n+Tue Dec 12 22:51:18 1995  Andrew Cagney   <cagney@highland.com.au>\n+\n+\t* psim.c (psim_merge_device_file): Change `=' to `==', was this an\n+        error?\n+\n+Tue Dec  5 11:56:14 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* ppc-instructions (ppc_nr_mtcrf_crs, ppc_branch_conditional_name,\n+ \tppc_function_unit_name): Simplify by declaring these arrays as\n+ \tpure and simple static (instead of STATIC_MODEL).\n+\n+Tue Dec  5 00:45:34 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* sim_calls.c (sim_create, sim_load), main.c (main), psim.c: Pass\n+        an options device into psim_create() so that options can be merged\n+        into the tree.\n+\n+\t* device.c (*add*): Change semantics so the add functions only add\n+        when the new device (or property) doesn't already exist.  This\n+        allows merging of options and data.\n+\n+Mon Dec  4 17:12:13 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* Makefile.in (BASICS_H): Didn't include basics.h in the list of\n+        header files to depend on.\n+\n+Mon Dec  4 17:12:13 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* std-config.h: (*_MODULE): Extend the <module>_inline macro's so\n+        that they also allow control over static functions.  Rewrite\n+        document to reflect this.\n+\n+\t* std-config.h: (INLINE): Simplify definition, the above and\n+        earlier changes to igen.h eliminate the need to be defensive about\n+        enabling the inline of static functions.\n+\n+\t* std-config.h: (SIM_ENDIAN_INLINE, BITS_INLINE): Document limited\n+        suport for inlineing of modules for all callers.  Adjust relevant\n+        macro's so that DEFAULT_INLINE will enable this.\n+\n+\t* basics.h: Re-order #includes and definitions so that c-code for\n+        basic include files does not call functions delcared in later\n+        #includes.\n+\n+\t* basics.h (__attribute__), sim_callbacks.h: Move attribute macro\n+        to basics.h and add hack (include <stdio.h>) to try and bring that\n+        and other possible conflicting macros into scope much earler.\n+\n+\t* sim-endian.h,c (SIM_ENDIAN_INLINE) bits.h,c (BITS_INLINE):\n+        Change to use the updated inline definitions.  If enabled\n+        immediately include the corresponding c-code so that it will inline\n+        for all modules.\n+\n+\t* inline.h, inline.c (SIM_ENDIAN_INLINE, BITS_INLINE): Remove\n+        these cases, moved to module specific header files.\n+\n+Sat Dec  2 18:37:51 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* vm.c, vm_n.c: Fix htab code.\n+\n+\t* vm.c (vm_data_map_read_buffer): Was using EA not RA when reading\n+        the data from core.\n+\n+\t* device.c: Fix htab create code.\n+\n+Fri Nov 24 23:10:09 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* bits.h, bits.c (EXTRACTED): Convert to function, fix - had &&\n+        instead of &.\n+\n+\t* sim-endian.h (SWAP_N), sim-endian-n.h, sim-endian.c: How\n+        embarasing - fix yet another bug in the swap code!  Simplify\n+        everything by using more functions. Add host to big-endian byte\n+        swapping support.\n+\n+Fri Nov 24 23:10:09 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* devices.h, devices.c: delete, replaced by the files\n+        device_table.[ch] and device.[ch].\n+\t* device_tree.h, device_tree.c: ditto\n+\n+\t* device_table.h, device_table.c: New files.  Contain a table of\n+        devices.\n+\n+\t* device.h, device.c, Makefile.in, std-config.h (DEVICE_INLINE),\n+        options.c (print_options): New files.  Define the device object\n+        along with any attached properties.\n+\n+\t* device_tree.h, device_tree.c: Update to use new device object.\n+        For convenience, change the printd functions into device_tree_add\n+        functions.\n+\n+\t* psim.c (create_*_tree): Use new device_tree create functions.\n+\n+\t* corefile.h, corefile.c corefile-n.h (core_n.h): Update to use\n+        the new device.h / device_table.h interface.  Rename core_n.h to\n+        corefile-n.h to be consistent with other n files.\n+\n+\t* Makefile.in (run): add corefile-n.h to dependencies for\n+        corefile.\n+\n+\t* basics.h (device_instance), device.h, device.c, device_table.h,\n+        device_table.c: Add the concept of a device instance and operators\n+        on these instances - corresponds to ihandle in OpenBoot speak.\n+        Don't yet implement it.\n+\n+Tue Nov 14 12:27:08 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* emul_generic.h, emul_generic.c (emul_syscall_enter,\n+ \temul_syscall_exit): rename from emul_enter_call /\n+ \temul_exit_call. As only used by emul_do_system_call simplify\n+ \tassociated code.\n+\n+\t* os_emul.h, os_emul.c, emul_generic.h: Correct and fill an\n+ \tos_emul interface.\n+\n+\t* os_emul.c, emul_bugapi.h, emul_bugapi.c, Makefile.in: Add\n+ \tpreliminary hooks for a kernel mode rom emulation.\n+\n+\t* cap.h (new), cap.c (new): Capability data base.  Some emulations\n+ \tpass object identifiers (capabilities?) to/from the simulated code\n+ \t(for instance the phandle in OpenBoot).  The cap object is able to\n+ \tcheck/map between internal and external (target program)\n+ \trepresentations of each identifier.\n+\n+\t* os_emul.c, emul_chirp.h, emul_chirp.c, Makefile.in: Add\n+ \tpreliminary hooks for a kernel mode IEEE-1275 emulation.\n+\n+\t* cpu.h, cpu.c (cpu_create, cpu_os_emulation, cpu): Add os_emul to\n+ \tlist of arguments passed in when creating a cpu.  Grant access to\n+ \tthe element.\n+\n+\t* std-config.h (OS_EMUL_INLINE), options.c (print_options),\n+\tinline.h, inline.c: New to allow control over inline of\n+\tcorresponding code files.\n+\n+\t* ppc-instructions (instruction_call): Add illegal instruction to\n+ \tcall the instruction-call emulation handler.\n+\n+\t* interrupts.c (system_call_interrupt): Call renamed\n+        os_emul_system_call function().\n+\n+\t* emul_netbsd.c: Update to interface to generic emulation.  Since\n+        all its functions are called via a table don't worry about any\n+        inline.\n+\n+\t* emul_generic.h, emul_generic.c, spa-*(delete): Remove references\n+        and code for spa, no longer to be used.\n+\n+\t* psim.c (create_chirp_device_tree): Fill out what was previously\n+        the openboot create function so that it starts to create a full\n+        OpenBoot device tree.\n+\n+Tue Nov 28 21:48:06 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* debug.h, debug.c: pte trace is made redundant by htab trace,\n+        delete it.  Add vm to list of options.  Simplify tracing output so\n+        lines are not as long.\n+\n+Tue Nov 14 12:27:08 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* events.h, events.c (event_queue_init), psim.c (psim_init): (re)\n+ \tinitialize the event queue.\n+\n+\n+\n+\n+\n+\n+Tue Nov 28 13:38:26 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* sim-endian.h: Look at WORDS_BIGENDIAN to determine if the host\n+\tis big endian or little endian.  For SWAP_n, use htonl/htons if\n+\thost is little endian, not big endian and if WITH_NTOH is defined.\n+\n+\t* configure{,.in} (--enable-sim-model-issue): Instead of defining\n+\t0/1, define it to be MODEL_ISSUE_{PROCESS,IGNORE}.  Add\n+\tAC_C_BIGENDIAN to determine if the host is big endian or not.\n+\t* config.in: Regenerate.\n+\n+\t* std-config.h (WITH_MODEL_ISSUE): Default to 0.\n+\t(CURRENT_MODEL_ISSUE): Reference WITH_MODEL_ISSUE, and if that is\n+\t0, use current_model_issue.\n+\t(MODEL_ISSUE_{PROCESS,IGNORE}): Define as -1/1.\n+\n+\t* psim.c (current_model_issue): New global variable.\n+\n+\t* cpu.c (cpu_create): Use CURRENT_MODEL_ISSUE > 0 instead of\n+\tWITH_MODEL_ISSUE.\n+\t(cpu_{init,halt}): Ditto.\n+\t* mon.c (mon_print_info): Ditto.\n+\t* ppc-instructions (PPC_INSN_* macros, branch handling): Ditto.\n+\n+\t* mon.c (mon_print_info): Print instructions/second if verbose > 0,\n+\trather than > 1.\n+\n+\t* main.c (main): Set current_model_issue to MODEL_ISSUE_PROCESS if\n+\tthe -I switch is used.\n+\t* sim_calls (sim_open): Ditto.\n+\n+\t* ppc-instructions (model support): Add support for determining\n+\twhen we don't have enough writeback slots.  Add tracing for the\n+\tbeginning of each cycle.\n+\n+Mon Nov 27 17:46:33 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* mon.c: Check for whether to include sys/types.h and sys/time.h.\n+\n+\t* configure.in: Check for include files sys/types.h and\n+\tsys/time.h.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\n+\t* cpu.h (CONST_ATTRIBUTE): Define as __attribute__((__const__)) if\n+\tnot already defined.\n+\t(cpu_system): Use CONST_ATTRIBUTE, so that when we're not inlining\n+\tthe world, the optimizer has a fair chance of CSE'ing function\n+\tcalls.\n+\t(cpu_{monitor,nr,registers,model}): Ditto.\n+\n+\t* std-config.h (MODEL_INLINE): If not defined, define as 1 if\n+\tDEFAULT_INLINE is non-zero, 0 otherwise, rather than just the\n+\tvalue of DEFAULT_INLINE.\n+\n+Fri Nov 24 11:24:34 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* lf.h (__attribute__): If not GCC and at least 2.7.0, define as\n+\tnothing.\n+ \t(lf_printf): Add printf __attribute__, so the compiler will\n+\tautomatically check the format string.\n+\n+\t* configure{,.in} (--enable-sim-icache): If argument is define,\n+\tadd -R to flags passed to igen.\n+\n+\t* igen.c (stdlib.h): Include if the system supplies one.\n+\t(semantics_use_cache_struct): New global for -R flag to say\n+\tsemantics is to use the cache structure directly rather than\n+\tputting the values into local variables.\n+\t(first_undef, last_undef): New structures to remember names to\n+\t#undef if -R.\n+\t(lf_print_c_extraction): If -R and this is semantics, emit names\n+\tas #defines pointing to the cache structure, rather than loading\n+\tthe values into local variables.\n+\t(lf_print_c_semantic_function): If -R, #undef all of the names\n+\tdefined in lf_print_c_extraction.\n+\t(main): Recognize -R.\n+\n+\t* idecode_fields.h (SPR_*): Redefine spr_* macros as SPR_* to\n+\tavoid a name confict if -R passed to igen.\n+\n+\t* ppc-instructions (mfspr, mtspr): Rename spr field to SPR.\n+\t(model_data): Add field to count the various # of CRs that the\n+\tmtcrf instruction used.\n+\t(model_mon_info): Return structures counting the # of CRs that the\n+\tmtcrf instruction used.\n+\t(branches, sync instructions): Do not call model functions if\n+\tWITH_MODEL_ISSUE is 0.\n+\n+\t* mon.c (stdlib.h): Include if the system supplies one.\n+ \t(mon_sort_instruction_names): New function to sort instruction\n+\tnames alphabetically.\n+\t(mon_print_info): Call qsort with mon_sort_instruction_names to\n+\tsort instruction names.  Don't abort if WITH_MODEL_ISSUE is 0.\n+\n+\t* debug.h (ITRACE): Make printf_filtered arguments type correct.\n+\t* idecode_expression.h (CR0_COMPARE): Ditto.\n+\t* psim.c (psim_read_register): Ditto.\n+\n+\t* igen.c (lf_print_my_prefix): Use __attribute__((__unused__)) to\n+\tsilence compiler warnings about unused automatically generated\n+\tvariables.\n+\t(lf_print_c_extraction): Ditto.\n+\t* idecode_expression.h (FPSCR_BEGIN): Ditto.\n+\n+\t* ppc-cache-rules: Define rules for making a bitmask for all\n+\tregisters.\n+\n+\t* ppc-instructions: Rewrite model specific functions to use the\n+\tbitmask of the register number, instead of using the register\n+\tpointer to get the register number, and then making the bitmask.\n+\n+Wed Nov 22 15:24:27 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* ppc-instructions (model_branches): Add conditional argument to\n+\tcount the number of times each type of conditional branch is used.\n+\t(conditional branches): Pass B0 or -1 to model_branches.\n+\t(model_mon_info): Print out conditional branch counts.\n+\t(model-data): Add support for printing out conditional branch\n+\ttypes.\n+\n+Tue Nov 21 16:31:25 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* igen.c (insn_table_load_insns): Add support for model-static for\n+\tinternal functions that should not be inlined.\n+\t(lf_print_c_semantic): Remove model_cleanup.\n+\t(gen_model_{c,h}): Ditto.\n+\n+\t* ppc-instructions: Redo model specific support once again.  Add\n+\tfloating point support to the model specific information.  Flesh\n+\tout all of the floating mutiply add/subtract instructions.  Add\n+\tbetter tracing support to the model specific information.\n+\n+Sun Nov 19 23:00:52 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* ppc-instructions (model data, model_busy): Rather than using a\n+\tbit mask for the busy units, just use a char array.  Also, only\n+\tsupport 2 function units an insn can use, rather than a loop.\n+\n+Fri Nov 17 14:08:08 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* table.c (table_entry_read): Move setting entry->line_nr to after\n+\tthe model specific fields so the line numbers for the annex are\n+\tcorrect.\n+\n+\t* cpu.c (cpu_{create,init,halt}): Check for WITH_MODEL_ISSUE\n+\tbefore calling the model functions.\n+\n+\t* debug.c (trace_descriptor): Add trace_model support.\n+\t* debug.h (trace_options): Ditto.\n+\n+\t* igen.c (gen_icache_h): Create type idecode_cache as void if not\n+\tcaching instructions.\n+\t(gen_model_{c,h}): Drop model_issue support.  Add support for\n+\tmodel_cleanup.\n+\t(lf_print_my_prefix): Initialize a const itable_index with the\n+\tcurrent index.\n+\t(lf_print_c_semantic): Call model_cleanup at the end of the\n+\tfunction to check for instructions that aren't supported yet by\n+\tthe scheduling code.\n+\n+\t* mon.h (count_type): New type for counters.\n+\t* mon.c: Use count_type instead of unsigned.\n+\n+\t* ppc-instructions: Redo scheduling code once again.  Make it all\n+\tinline friendly.  Instead of having general code emitted by igen,\n+\tgo the route of having each semantic routine call the appropriate\n+\tmodule.\n+\n+Thu Nov 16 09:52:26 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* table.c (table_entry_read): Allow the annex to have blank lines.\n+\n+\t* ppc-instructions: Change lines in model stuff that just have a\n+\ttab to just newline.  Add 601 support.  Document most instructions\n+\tin terms of model specific timing information.  Drop 'FUNCTION'\n+\tfrom PPC_FUNCTION_UNIT_xxx enums.  Change PPC_UNIT_UNKNOWN ->\n+\tPPC_UNIT_BAD.  Add TRACE(trace_tbd) for all data cache\n+\tinstruction.s.  Signal illegal instruciton if data cache block\n+\tinvalidate is issued from problem state.\n+\n+\t* igen.c (max_model_fields_len): New static to keep track of the\n+\tmax size for the model specific fields.\n+\t(model_c_insn): Use max_model_fields_len to size fields.\n+\t(insn_table_insert_insn): Set max_model_fields_len.\n+\t(model_table_insert): Ditto.\n+\t(gen_model_{c,h}): Model_issue is now called with a processor\n+\targument.\n+\n+\t* debug.c (trace_description): Add support for trace_tbd.\n+\n+\t* mon.c (mon_issue): Pass processor argument to model_issue.\n+\n+\t* Makefile.in: Delete all function unit support, since the newer\n+\ttable driven model support replaces it.\n+\t* cpu.{c,h}: Ditto.\n+\t* mon.c: Ditto.\n+\t* inline.{c,h}: Ditto.\n+\t* std-config.h: Ditto.\n+\t* options.c: Ditto.\n+\t* configure{,.in}: Ditto.\n+\t* Makefile.in: Ditto.\n+\t* psim.c: Ditto.\n+\t* function_unit.{c,h}: Delete these now usused files.\n+\n+\t* std-config.h (WITH_MODEL_ISSUE): Add new macro on whether to\n+\ttrace instructions in a model specific manor.\n+\t* options.c (print_options): Print it out.\n+\t* configure{,.in}: Add --enable-sim-model-issue option.\n+\t* Makefile.in: Add --enable-sim-model-issue flags.\n+\t* igen.c (lf_print_c_semantic): Add call to mon_issue here.  Check\n+\tfor WITH_MODEL_ISSUE.\n+\t* mon.c (mon_issue): Remove call to mon_issue_here.\n+\n+\t* ppc-instructions: Move branch tracing to the actual branch\n+\tinstructions, rather than testing it in model_issue.  Add code to\n+\tcode successful/unsuccessful branch predictions, and the number of\n+\tconditional branches that fell through.\n+\n+Wed Nov 15 17:32:13 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* cpu.h (cpu_model): Add declaration.\n+\n+\t* cpu.c (struct _cpu): Add model_ptr to hold model specific\n+\tinformation.\n+\t(cpu_model): Return the model internal pointer.\n+\t(cpu_{create,init,halt}): Call the appropriate model function.\n+\n+\t* inline.c (mon.c): Move include of mon.c after model.c.\n+\n+\t* mon.c (_cpu_mon): Add fields to count unaligned memory\n+\treferences.\n+\t(mon_issue): Call model_issue, not function_unit_issue.\n+\t(mon_{read,write}): Count # of unaligned memory accesses.\n+\t(mon_print_info): Switch to calling model_mon_info and\n+\tmodel_mon_info_free instead of function_unit version.  Print out\n+\tnumber of unaligned reads/writes.\n+\n+\t* {ppc-instructions,igen.c}: More global changes to add model\n+\tspecific features.\n+\n+\t* inline.{c,h}: Provide for inlining options.c.\n+\t* options.{c,h}: Ditto.\n+\t* std-config.h: Add OPTIONS_INLINE.\n+\n+Tue Nov 14 04:47:25 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* Makefile.in (devices.o, main.o): Update dependency.\n+\n+\t* igen.c (gen_model_h): Use correct variable in loop.\n+\t(gen_model_c): Use strcmp, strcasecmp.\n+\t(gen_model_c): Use EXTERN_MODEL for arrays.\n+\t(gen_model_h): Use STATIC_MODEL for arrays.\n+\t(lf_print_c_semantic_function_header): Delete unused function.\n+\n+\t* main.c (cpu.h): Include cpu.h to get model.h.\n+\n+\t* inline.h ({EXTERN,STATIC}_MODEL): Define.\n+\n+Mon Nov 13 09:14:13 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* igen.c ({insn,model}_table_fields): Spell mnemonic correctly.\n+\t(gen_itable_h,itable_c_insn): Ditto.\n+\t(model support): Move model support around, add support for\n+\tmodel-data, model-internal.  Use annex field for model-macros\n+\tnow.\n+\n+\t* configure.in (--enable-sim-inline): If --enable-sim-inline=no,\n+\talso define INLINE as nothing.\n+\t* configure: Regenerate.\n+\n+\t* std-config.h (INLINE): Rather than nuking INLINE, only define it\n+\tas __inline__ if any of the INLINE flags are non-zero.\n+\n+\t* options.c (print_options): Print out WITH_XOR_ENDAIN.\n+\n+Mon Nov 13 23:03:45 1995  Andrew Cagney   <cagneyhighland.com.au>\n+\n+\t* ppc-instructions (rfi): Add missing code.\n+\n+\t* cpu.c (cpu_get_time_base): Fix calculation of current value of\n+        time base register.\n+\n+\t* ppc-spr-table (TBL, TBU): Fix TBL/TBU entries - was confusing\n+        m[tf]tb with m[tf]spr.\n+\n+\t* ppc-instructions (mtspr, mfspr): Fix mttbl - wasn't storing\n+        lower word.\n+\n+Mon Nov 13 21:35:37 1995  Andrew Cagney   <cagneyhighland.com.au>\n+\n+\t* std-config.h (INLINE, STATIC_INLINE): Was being set to static\n+        inline..  Only problem being that with ppc-opcode-simple this gave\n+        it the chance to inline all the idecode functions with potentially\n+        disasterous results on a 16mb PC.  For moment hobble INLINE.\n+\n+\t* configure.in, std-config.h (WITH_SMP): Make that 5 processors by\n+        default ...\n+\n+\t* configure.in: Tweek flags passed to gcc for --with-sim-warnings.\n+        Firstly make them errors and secondly remove the options gcc-245\n+        doesn't reconize.\n+\n+Mon Nov 13 17:57:24 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* misc.c (zalloc), cpu.c (cpu_init), devices\n+ \t(console_io_read_buffer_callback, icu_io_read_buffer_callback,\n+ \tvm_io_read_buffer_callback), main.c (zalloc), mon.c (memset),\n+ \tsim_calls.c (zalloc) : replace bzero() with memset().\n+\n+\t* emul_netbsd.c (write_direntries), psim.c (psim_read_register,\n+ \tpsim_write_register): replace bcopy() with memcpy().\n+\n+Sun Nov 12 20:55:41 1995  Andrew Cagney   <cagneyhighland.com.au>\n+\n+\t* configure.in: for --disable-sim-inline (--enable-sim-inline=no),\n+        force DEFAULT_INLINE to 0 rather then trusting the std\n+        configuration.\n+\n+Sun Nov 12 20:55:41 1995  Andrew Cagney   <cagneyhighland.com.au>\n+\n+\t* igen.c (lf_print_idecode_table, idecode_table_leaf): Fix\n+        generation of switch entries in tables - treat the same as\n+        cracking/semantic functions.\n+\n+\t* igen.c (idecode_switch_end, idecode_switch_leaf): Fix generation\n+        of a boolean switch statement (field zero or non-zero).\n+\n+\t* ppc-opcode-test-1, ppc-opcode-test-2: New files.  These test the\n+        switch/table generation ability of igen.\n+\n+\t* igen.c (idecode_switch_leaf): Fix code output when a switch\n+        statement needs to look up a table.\n+\n+\t* igen.c (idecode_declare_if_switch): New function called from\n+        gen_idecode_c - need to declare any idecode switch functions\n+        before they are used in idecode tables.\n+\n+\t* igen.c (lf_print_c_cracker_function, idecode_crack_leaf,\n+        idecode_crack_insn): Add is_inline_function argument to code\n+        printing cracker functions which indicates if STATIC_IDECODE or\n+        STATIC_INLINE_IDECODE should be used for definition.  For\n+        idecode_crack_insn (which implies not duplicating/expanding) don't\n+        declare function as inline - we assume that the only time this is\n+        code is generated is when things are being tested.  For\n+        idecode_crack_leaf, make static (instead of INLINE) if the\n+        instructions parent is a table as function will always be called\n+        via a table.\n+\n+\t* igen.c (idecode_expand_if_switch): Declare as STATIC_IDECODE not\n+        STATIC_INLINE_IDECODE. Only the outermost idecode switch will be\n+        called directly, all others are called via a table.\n+\n+\t* igen.c (lf_print_semantic_function_header, semantics_h_leaf,\n+        semantics_h_insn, semantics_h_function,\n+        lf_print_c_semantic_function, semantics_c_function): Add\n+        is_inline_function argument to lf_print_semantic_function_header\n+        to indicate if an inline or static function declaration/definition\n+        should be output.  Depending on situtation call accordingly:\n+        functions (not instruction semantic routines) are always inline;\n+        Semantic routines are made inline when there is no icache (cache\n+        will contain the function address) and are duplicating (see above)\n+        and the parent of the instruction is a switch statement.\n+\n+\t* igen.c (opcode_field_new): Delete.  Code changed to use ZALLOC\n+        and moved to insn_table_find_opcode_field.\n+\n+\t* table.c (table_open): Fix typo (nr_model_fields vs nr_fields).\n+\n+\t* igen.c (model_c_insn): Suggestion - document the name of the\n+        instruction on each line of the instruction model table.\n+\n+Fri Nov 10 00:44:38 1995  Andrew Cagney   <cagneyhighland.com.au>\n+\n+\t* emul_netbsd.c (do_ioctl): Cleanup compilation.\n+\n+\t* sim_callbacks.h (__attribute__): Only define if not defined (was\n+        already defined on NetBSD host).\n+\n+Wed Nov  8 21:49:52 1995  Andrew Cagney   <cagneyhighland.com.au>\n+\n+\t* std-config.h (WITH_XOR_ENDIAN), configure.in, Makefile.in: New\n+        macro, indicates if the PowerPC's horrible XOR endian mode should\n+        be suported.  Add to configure and make.\n+\n+\t* vm_n.h (vm_data_map_read_N, vm_data_map_write_N), vm.c\n+        (vm_instruction_map_read): If XOR endian, xor the address\n+\twith a value from an xor table (indexed by size of access).\n+\n+\t* vm.c (vm_synchronize_context), cpu.c (cpu_synchronize_context):\n+        set up xor table to xor if there is a conflict between the\n+        CURRENT_TARGET_ENDIAN and the endian indicated in the MSR.  Move\n+        check of suported change of endian mode from cpu.c to vm.c.\n+\n+\t* vm.c (vm_data_map_write_buffer, vm_data_map_read_buffer):\n+        Hopefully added correct hack to handle XOR endian mode.\n+\n+\tFIXME: If NONSTRICT alignment and XOR ENDIAN and MSR indicates\n+        little endian mode, the model accepts miss aligned transfers.\n+\n+\tFIXME: Need to create an `init' device that, during\n+        initializatioin for XOR mode, it mushes (XOR address) all the dma\n+        data before passing it on to the core for storage. Just like the\n+        real thing really.\n+\n+Wed Nov  8 21:49:52 1995  Andrew Cagney   <cagneyhighland.com.au>\n+\n+\t* devices.c (halt_io_write_buffer_callback): Use value written to\n+        halt device to determine exit status.  Thus allowing\n+        success/failure of OEA tests.\n+\n+Wed Nov  8 00:10:38 1995  Andrew Cagney   <cagneyhighland.com.au>\n+\n+\t* ppc-instructions (icbi): If icache present flush it.\n+\n+Tue Nov  7 23:36:31 1995  Andrew Cagney   <cagneyhighland.com.au>\n+\n+\t* devices.c (htab_init_callback): Add code to create htab/pte.\n+\n+\t* devices.c (dma_file, file_init_callback, htab_init_callback):\n+        New function - Dma the named file into memory at the specified\n+        address.  Use.\n+\n+\t* device_tree.h, device_tree.c (scand_*): New functions.\n+\n+Tue Nov  7 23:36:31 1995  Andrew Cagney   <cagneyhighland.com.au>\n+\n+\t* filter_filename.c, Makefile.in: Change so that only dependant on\n+        a very limited nr of files.  Stops an unnecessary dependency.\n+\n+Tue Nov  7 15:44:33 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* core.c (core_map_find_mapping): Use cpu_halt rather than error\n+ \tto abort an access to an undefined address.\n+\n+Sun Nov 12 07:58:09 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* igen.c (model_table_insert_{macro,function}): New functions.\n+\t(insn_table_load_insns): Call them.\n+\t(gen_model_h): Move section emiting model-macros to be first.\n+\t(model_{c,h}_function): New functions cloned from semantic\n+\tfunctions to print out the prototype and function for\n+\tmodel-functions.\n+\t(gen_model_{c,h}): Print out model-functions.\n+\n+\t* ppc-instructions (model_{start,halt,print_info}): Add dummy\n+\tmodel-functions.\n+\n+\t* options.c (print_options): Print out WITH_{,DEFAULT_}MODEL, not\n+\tWITH_PPC_{,DEFAULT_}_MODEL.\n+\t(options_ppc): Delete now unused function.\n+\t(cpu.h): Include cpu.h, not just basics.h.\n+\n+\t* std-config.h (WITH_{,DEFAULT_}MODEL): Define.\n+\n+\t* igen.c (model_macros, last_model_macro): New statics to keep\n+\ttrack of macros to go in model.h.\n+\t(insn_table_load_insns): Add model-macros to model_macros linked\n+\tlist.\n+\t(model_table_fields): Add field for printable name.\n+\t(gen_model_h): If there are model macros defined, print them out.\n+\tPrint out DEFAULT_MODEL as the first model if there any models\n+\tspecified, otherwise MODEL_NONE.  Print out external decl for\n+\tcurrent_model.  Print out decl for model_set.\n+\t(gen_model_c): Add function model_set.  Switch to use printable\n+\tname for the model, not the internal identifier used.\n+\n+\t* psim.c (current_model): New global variable.\n+\n+\t* ppc-instructions: Add macros for flag defines.  Switch first\n+\tmodel so 604 is first.\n+\n+\t* main.c (main): Call model_set, not function_unit_model.\n+\t* sim_calls.c (sim_open): Ditto.\n+\t* sim_calls.c, Makefile.in: sim_calls.c now includes cpu.h.\n+\n+Sat Nov 11 07:27:41 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* mon.h (mon_events): New enumeration for other events we want to\n+\thandle.\n+\t(mon_event): Add declaration for function.\n+\n+\t* mon.c (mon_event): New function.\n+\t(mon_print_info): Print icache misses.\n+\n+\t* psim.c (run_until_stop): Monitor icache misses.\n+\n+\t* configure.in (--enable-sim-inline): Fix typos in handling comma\n+\tseparated inline options.\n+\t(--enable-sim-icache): Echo icache size.\n+\t* configure: Regenerate.\n+\n+\t* igen.c (semantics_h_print_function): Emit STATIC_SEMANTICS\n+\tinstead of INLINE_SEMANTICS so that the compiler won't keep all of\n+\tthe semantic functions as inline RTL, given that the address of\n+\tthe function is taken which forces outline calls anyway.\n+\t(lf_print_c_semantic_function_header): Ditto.\n+\t(gen_semantics_h): Define STATIC_SEMANTICS as nothing if not\n+\tdefined.\n+\t(lf_print_c_cracker_function): Emit STATIC_IDECODE instead of\n+\tSTATIC_INLINE_IDECODE.\n+\t(gen_idecode_c): Define STATIC_IDECODE if not defined.\n+\t(gen_model_h): Use #ifdefs to define types to hold model units,\n+\tcycles, and flags.\n+\t(model_table_insert): Add a sentinel functional unit at the end to\n+\tsimplify loop processing.\n+\t(model_c_insn): Use <function-unit>_SENTINAL instead of 0 for any\n+\tinstruction not specifing a function unit for the current model.\n+\t(gen_model_{c,h}): Provide bounds for model_time_mapping.\n+\n+\t* inline.h (STATIC_SEMANTICS): Define to be static if\n+\tSEMANTICS_INLINE is defined.\n+\t(STATIC_IDECODE): Define to be static if IDECODE_INLINE is\n+\tdefined.\n+\n+\t* options.c (print_options): Fix typo.\n+\n+Fri Nov 10 06:39:46 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* configure.in (--enable-sim-{opcode,config}): Use $srcdir when\n+\tcheck for the existence of files.\n+\t* configure: Regenerate.\n+\n+\t* table.c (table): New field nr_model_fields.\n+\t(table_open): New parameter nr_model_fields.\n+\t(table_entry_read): Parse model fields that begin with a '*' after\n+\teach instruction.\n+\t* igen.c, dgen.c: Change callers of table_open.\n+\n+\t* igen.c: Add support for dumping model specific information in\n+\tmodel.h and model.c.\n+\t(insn_field_name): Delete unused array.\n+\t(global variables): Make global variables static, so we can tell\n+\twhen they are no longer used.\n+\t(cache_semantic_actual): Delete unused variable.\n+\t(insn_table_load_insns): If the insn is really a machine model,\n+\tcall model_table_insert instead of other processing.\n+\t(model_table_insert): New function to handle defining the\n+\tfunctional units of a particular machine model.\n+\t(insn_table): Add last_function field so we can add functions at\n+\tthe end.\n+\t(insn_table_insert_function): Use last_function field when\n+\tappending new function.\n+\n+\t* ppc-instructions: Add a few model specific information for 603,\n+\t603e, and 604 for testing purposes.\n+\n+\t* table.h (table_model_entry): New linked list to hold model\n+\tspecific information, one per line.\n+\t(table_entry): Add model_first, model_last fields.\n+\n+\t* configure.in (--enable-sim-inline): If gcc is found and\n+\t--enable-sim-inline is not specified, defaine DEFAULT_INLINE to 1,\n+\tnot 2.\n+\t(--enable-sim-reserved-bits): New switch to check whether reserved\n+\tbits are set in the instruction.\n+\t(--enable-sim-opcode): Make complex the default.\n+\t(all switches): Add appropriate checks and error messages.\n+\t* configure: Regenerate.\n+\n+\t* Makefile.in (RESERVED_CFLAGS): New variable set by\n+\t--enable-sim-reserved-bits.\n+\t(CONFIG_CFLAGS): Include RESERVED_CFLAGS.\n+\t(BUILT_SRC): igen now generates model.c and model.h.\n+\t(LIB_OBJ): Include table.o.\n+\t(tmp-igen): Add -m/-M options to write model.c/model.h.\n+\t(model.o): New object.\n+\t(CPU_H): Include model.h.\n+\n+\t* cpu.h: Include model.h.\n+\n+\t* std-config.h (WITH_RESERVED_BITS): Define.\n+\t(MODEL_INLINE): Ditto.\n+\n+\t* options.c (print_options): Print out WITH_RESERVED_BITS.\n+\n+Thu Nov  9 12:22:15 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* configure.in: If --silent, don't output information messages.\n+\t* configure: Regenerate.\n+\n+\t* configure.in (--enable-sim-alignment): Fix typo in specifing non\n+\tstrict alignment.\n+\t(--enable-sim-switch): Make default on.\n+\t(--enable-sim-duplicate): Make default on.\n+\t(--enable-sim-smp): Make default 0.\n+\t(--enable-sim-mon): Don't set sim_float if not set.\n+\t(--enable-sim-inline): If gcc is found and --enable-sim-inline is\n+\tnot specified, define DEFAULT_INLINE to be 2.\n+\t(all --enable-sim-* rules): Echo rules set to non empty to file\n+\tdescriptor 6.\n+\t* configure: Regenerate.\n+\n+\t* options.c (options_env): Fix typo if WITH_ENV is 0.\n+\t(print_options): Print GCC compiler version if available and\n+\tdate/time options was compiled.  If OPCODE_RULES, IGEN_FLAGS,\n+\tand/or DGEN_FLAGS are defined, print them.\n+\n+\t* Makefile.in (all link actions): Pass SIM_CFLAGS as well as\n+\tCFLAGS.\n+\t(options.o): Compile options.o with OPCODE_RULES, IGEN_FLAGS, and\n+\tDGEN_FLAGS defined, so they can be printed out.\n+\n+\t* igen.c (lf_print_c_validate): Check for WITH_ASSERT, so that\n+\tthis test can be compiled away if the user really wants a fast\n+\tsimulator by not doing assertion failures.\n+\n+Wed Nov  8 13:19:47 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* options.c: New file to print out all of the WITH_ options.\n+\t* options.h: New include file to declare print_options.\n+\t* debug.h (trace_options): Add trace_opts to call print_options.\n+\t* debug.c (trace_description): Add trace_opts support.\n+\t* main.c (main): If user requested options, print them.\n+\t* sim_calls.c (sim_open): Ditto.\n+\n+\t* igen.c (opcode_field_new): Add void to make it a proper prototype.\n+\n+\t* emul_generic.c (emul_enter_call): Make printf_filtered arguments\n+\ttype correct.\n+\t* emul_netbsd.c (do_kill): Ditto.\n+\t* registers.c (registers_dump): Ditto.\n+\t* vm.c (om_translate_effective_to_real): Ditto.\n+\t* vm_n.h (vm_data_map_read_N): Ditto.\n+\t(vm_data_map_write_N): Ditto.\n+\t* devices.h (DTRACE_INIT): Ditto.\n+\t(DTRACE_{ATTACH,DETACH}_ADDRESS): Ditto.\n+\t(DTRACE_IO_{READ,WRITE}_BUFFER): Ditto.\n+\t(DTRACE_DMA_{READ,WRITE}_BUFFER): Ditto.\n+\t* devices.c (update_for_binary_section): Ditto.\n+\t(write_stack_arguments): Ditto.\n+\t(stack_ioctl_callback): Ditto.\n+\t* device_tree.c (device_tree_add_passthrough): Ditto.\n+\t(device_tree_{add,find}_device): Ditto.\n+\t(device_tree_{add,find}_integer): Ditto.\n+\t(device_tree_find_{string,boolean}): Ditto.\n+\t(device_tree_init{,_device}): Ditto.\n+\t(device_tree_dump): Ditto.\n+\t* sim_calls.c (sim_{read,write}): Ditto.\n+\t(sim_{fetch,store}_register): Ditto.\n+\t(sim_stop_reason): Ditto.\n+\n+\t* sim_callbacks.h (printf_filtered): Declare with attribute\n+\tprintf, so we can enable format checks.\n+\n+\t* devices.c (console_io_{read,write}_buffer_callback): Cast swtich\n+\targument to int, since ANSI doesn't allow long switch values.\n+\t* emul_netbsd.c (do___sysctl): Ditto.\n+\n+\t* emul_netbsd.c (do___sysctl): Fix up printf call.\n+\n+\t* corefile.c (core_translate): Don't do arithmetic with void *\n+\tpointers.  Cast to char * first.\n+\n+\t* function_unit.c (FUNC_{LOAD,STORE}): Rename from {LOAD,STORE}\n+\tand change all uses.\n+\n+\t* Makefile.in ({FUNC,MODEL,WARNING}_CFLAGS): New flags set by\n+\tconfigure --enable switches.\n+\t(CONFIG_CFLAGS): Include FUNC_CFLAGS and MODE_CFLAGS.\n+\t(.c.o): Include WARNING_CFLAGS.\n+\t(CPU_H): Include function_unit.h.\n+\t(LIB_OBJ): Include function_unit.o.\n+\t(BUILT_SRC_WO_CONFIG): Split from BUILT_SRC and do not include\n+\tconfig.h or ppc-config.h.\n+\t(BUILT_SRC): Include BUILT_SRC_WO_CONFIG, config.h and\n+\tppc-config.h.\n+\t(filter_filename.o): Include config.h/ppc-config.h dependencies.\n+\t(idecode.o, semantics.o, psim.o): Specify CC line without\n+\tWARNING_CFLAGS so that we don't get all of the unused variable\n+\twarnings that are generated.\n+\t(function_unit.o): Add rule to build.\n+\t(main.o, sim_calls.o): Add function_unit.h, itable.h dependencies.\n+\t(mon.o): Include mon.c dependency.\n+\t(TAGS): Depend on BUILT_SRC.\n+\t(clean): Don't delete config.h or ppc-config.h\n+\n+\t* basics.h (sim_callbacks.h): Move include after the include of\n+\tconfig.h and ppc-config.h.\n+\n+\t* bits.{h,c} (ROTL32,ROTL64): Move these functions to bits.c.  Add\n+\tsupport for BITS_INLINE to inline these.  Add declarations to\n+\tbits.h.\n+\n+\t* configure.in (--enable-sim-warnings): Add new option to specify\n+\tcompiler warnings for all modules except idecode.o and semantics.o\n+\twhich have lots of unused variables because they are machine\n+\tgenerated.\n+\t(--enable-sim-function-unit): New switch to configure whether\n+\tfunction unit support is compiled in or not.\n+\t(--enable-sim-{,default-}mode): New switches to control which cpu\n+\tmodel is used.\n+\t* configure: Regenerate.\n+\n+\t* corefile.c (core_attach_address_callback): Delete unused\n+\tvariable device_address.\n+\n+\t* cpu.c (struct _cpu): Add function unit pointer field func_unit.\n+\t(cpu_create): If WITH_FUNCTION_UNIT, call function_unit_create.\n+\t(cpu_init): If WITH_FUNCTION_UNIT, call function_unit_init.\n+\t(cpu_halt): If WITH_FUNCTION_UNIT, call function_unit_halt.\n+\t(cpu_function_unit): New function to return func_unit field.\n+\n+\t* cpu.h (function_unit.h): Include new include file.\n+\t(cpu_function_unit): Declare.\n+\n+\t* debug.c (stdlib.h): Test HAVE_STDLIB_H, not HAVE_STDLIB.\n+\t(config.h): Include config.h.\n+\n+\t* devices.c (icu_io_write_buffer_callback): Delete unused variable\n+\tsystem.\n+\n+\t* emul_generic.c (emul_exit_call): Print out status value.\n+\n+\t* emul_netbsd.c (do_read): Delete unused variable nr_moved.\n+\n+\t* filter_filename.h (includes): Include config.h, ppc-config.h,\n+\tnot basics.h.\n+\n+\t* inline.c: Include bits.c if BITS_INLINE.  Include\n+\tfunction_unit.c if FUNCTION_UNIT_INLINE.\n+\n+\t* inline.h (INLINE_BITS): Define if BITS_INLINE.\n+\t(INLINE_FUNCTION_UNIT): Define if FUNCTION_UNIT_INLINE.\n+\n+\t* interrupts.c (instruction_storage_interrupt): Delete unused\n+\tvariable nia.\n+\n+\t* lf.h (config.h): Include config.h.\n+\n+\t* main.c (includes): Include function_unit.c.  If HAVE_UNISTD_H,\n+\tinclude unistd.h.\n+\t(usage): Update for -m model, -i, and -I options.\n+\t(main): Delete unused variables stack_pointer and i.  Add support\n+\tfor -i, -m model arguments.  Call psim_print_info with verbose ==\n+\t1 if -i, and verbose == 2 if -I.\n+\n+\t* mon.c (stdio.h): Include stdio.h to pick up sprintf prototype.\n+\t(mon_issue): Call function_unit_issue if function units are\n+\tsupported.\n+\t(mon_print_info): Take psim * argument.  Print out information\n+\tfrom function_unit if available.  Move read/write stats to always\n+\tprint, instead of printing if verbose > 1.  Fix up plural\n+\tvs. singular usage.\n+\n+\t* mon.h (mon_print_info): Update prototype.\n+\n+\t* psim.c (current_ppc_model): Add global variable.\n+\t(psim_print_info): Pass system argument to mon_print_info.\n+\n+\t* sim_calls.c (function_unit.h): Include.\n+\t(sim_open): Add support for -i and -m model options.  If -i call\n+\tpsim_print_info with verbose == 1, if -I, with verbose == 2.\n+\t(sim_resume): Delete unused variable program_counter.\n+\n+\t* std-config.h (WITH_FUNCTION_UNIT): Define.\n+\t(ppc_model): Add enumeration giving all PowerPC models currently\n+\tknown about.\n+\t({WITH,CURRENT}_PPC_MODEL): Define.\n+\t(FUNCTION_UNIT_INLINE): Define.\n+\n+\t* table.c (config.h): Include config.h.\n+\n+\t* vm.c (om_virtual_to_real): Print pte_word_{0,1} so the compiler\n+\tdoesn't complain that they're unused.\n+\n+\t* vm_n.h (vm_data_map_read_N): Delete unused variable rval.\n+\n+Mon Nov  6 23:15:54 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* sim-endian.c (ppc-endian.c), sim-endian.h (ppc-endian.h):\n+        renameed.  These files are target independant.\n+\t* Makefile.in, basics.h: update for new name.\n+\n+\t* sim-endian.h (SWAP_N), sim-endian.c (_SWAP_1): Rename existing\n+        SWAP_<N> to _SWAP_<N> so that sim-endian.h can contain SWAP_N\n+        macro's as required.\n+\n+\t* sim-endian.c, sim-endian-n.h (new file): Move endian code into a\n+        debugable header file.\n+\n+\t* ppc-instructions (Byte-Reverse): Enable byte reverse\n+        instructions using SWAP_N macros.\n+\n+Mon Nov  6 10:39:28 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* Makefile.in (config.status): Remove references to config.make\n+\tand config.hdr.\n+\n+\t* config.{make,hdr}: Delete, no longer used.\n+\t* build-psim: Ditto.\n+\n+Mon Nov  6 20:49:56 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* sim_calls.c (sim_open): Fix parsing of `target sim' options.\n+\n+\t* device_tree.c (device_tree_add_string): Wasn't saving the value\n+ \tof the string being entered into the tree.\n+\n+\t* psim.c (create_filed_device_tree): Not terminating string device\n+ \tnames with a null.\n+\n+\t* psim.c (psim_create): Use `env' instead of\n+ \t`environment-architecture' to be consistent with configure.\n+  \tReconize user/uea, virtual/vea and operating/oea.\n+\n+Sat Nov  4 12:29:45 1995  Fred Fish  <fnf@cygnus.com>\n+\n+\t* core.c:  Rename to corefile.c\n+\t* core.h:  Rename to corefile.h\n+\t* inline.c: Include corefile.h, renamed from core.h.\n+\t* cpu.h: Include corefile.h, renamed from core.h\n+\t* vm.c: Include corefile.h, renamed from core.h\n+\t* corefile.c: Include corefile.h rather than core.h\n+\t* README.psim (KNOWN PROBLEMS): Change core.* references to corefile.*\n+\treferences.\n+\t* Makefile.in (CPU_H): Change core.h to corefile.h\n+\t(vm.o):  Change dependency to corefile.h\n+\t(LIB_SRC): Change core.c to corefile.c.\n+\t(LIB_OBJ): Change core.o to corefile.o.\n+\t(corefile.o):  Change dependencies to corefile.c, corefile.h.\n+\n+Fri Nov  3 11:37:24 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* ppc-instructions (data cache instructions): Make all data cache\n+\tinstructions nops instead of invalid instructions.\n+\n+\t* Makefile.in (CONFIG_CFLAGS): Add ALIGNMENT_CFLAGS and\n+\tTIMEBASE_CFLAGS which weren't included.\n+\n+Thu Nov  2 08:54:04 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* Makefile.in: Uncomment built file dependencies.\n+\n+\t* configure.in: Rewrite --enable-sim switch handling to use the\n+\tautoconf builtins so it works correctly if the configure or\n+\tMakefile.in files are modified and make decides to rebuild\n+\tMakefile.  Also document all of the --enable-sim switches\n+\tsupported.  Check whether getrusage and sys/resource.h are\n+\tsupported.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Add support for all of the variables set with\n+\t--enable-sim switches.\n+\n+\t* Makefile.in (clean): make clean now removes all built sources as\n+\twell.\n+\n+\t* cpu.c: Use HAVE_STRING_H, HAVE_STRINGS_H, HAVE_UNISTD_H,\n+\tHAVE_TIME_H, HAVE_SYS_TIMES_H, HAVE_SYS_RESOURCE_H defined in\n+\tthe generated config.h.\n+\t* debug.c: Ditto.\n+\t* device_tree.c: Ditto.\n+\t* devices.c: Ditto.\n+\t* dgen.c: Ditto.\n+\t* emul_netbsd.c: Ditto.\n+\t* igen.c: Ditto.\n+\t* lf.c: Ditto.\n+\t* misc.c: Ditto.\n+\t* psim.c: Ditto.\n+\t* registers.c: Ditto.\n+\t* sim_calls.c: Ditt.\n+\t* table.c: Ditto.\n+\n+\n+\t* main.c (main): Call psim_print_info with verbose == 2.\n+\n+\t* mon.c (mon_print_info): Align the cpu number and number of\n+\tinstructions fields.  Do not print an instruction category if the\n+\tCPU did not execute any of those instructions.  Print out number\n+\tof reads and writes.  If getrusage is supported, print out number\n+\tof simulated instructins per second.\n+\n+\t* configure.in: Add support for --enable-sim-opcode=stupid.\n+\t* configure: Regenerate.\n+\n+Wed Nov  1 23:46:59 1995  Andrew Cagney   <cagney@highland.com.au>\n+\n+\t* std-config (INLINE_DEVICE_TREE): Don't inline either of\n+        device_tree.c or devices.c.  There is no significant gain.\n+\n+\t* configure.in, Makefile.in: add --enable-sim-icache=[0-9]* and\n+ \tIGEN_ICACHE macro.\n+\n+Wed Nov  1 23:46:59 1995  Andrew Cagney   <cagney@highland.com.au>\n+\n+\t* igen.c (main), misc.h (target_a2i, i2target), misc.c: Add\n+        functions to convert between target and igen internal bit numbers.\n+        Make IO go through these functions. Add -b (bit size) and -h (high\n+        bit nr) options to igen.  Typical usage would be: ./igen -b 16 -h\n+        15 for a 16 bit instruction format with the msb given a number 15.\n+\n+Wed Nov  1 22:17:32 1995  Andrew Cagney   <cagney@highland.com.au>\n+\n+\t* dgen.c (main): Was outputting optarg even when it was NULL.\n+\n+Tue Oct 31 23:48:33 1995  Andrew Cagney   <cagney@highland.com.au>\n+\n+\t* vm_n.h (vm_data_map_load_N, vm_data_map_store_n), debug.h,\n+        debug.c: Add tracing of load/store unit (virtual) with -t\n+        load-store.\n+\n+Tue Oct 31 21:44:01 1995  Andrew Cagney   <cagney@highland.com.au>\n+\n+        * std-config.h (WITH_ENVIRONMENT): Add USER_ENVIRONMENT which does\n+        not include things such as the time base and events.\n+\n+\t* interrupt.c, sim_calls.c, cpu.h, vm.c, configure.in: Add UEA to\n+ \tall environment switches for above.\n+\n+\t* psim.c (psim_create): ditto - new device tree node name is\n+        /options/environment-architecture with values user, virtual and\n+        operating.\n+\n+Tue Oct 31 21:31:32 1995  Andrew Cagney   <cagney@highland.com.au>\n+\n+\t* ppc-opcode-stupid: Third example of use of opcode table - this\n+        one expands all mtspr/mfspr and branch instructions.  Appears to\n+        give about a 10% gain in performance if everything enabled.  Also\n+        takes about 150mb of swap to build.\n+\n+Wed Nov  1 10:49:48 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* emul_netbsd.c (do_exit): Print arguments and close parenthesis\n+\tif tracing, since exit doesn't go through emul_exit_call.\n+\t(do_read): Print arguments if tracing.\n+\t(do_write): Ditto.\n+\t(do_open): Ditto.\n+\t(do_break): Ditto.\n+\t(do_kill): Ditto.\n+\t(do_dup): Ditto.\n+\t(do_sigprocmask): Replace trace with printing arguments if\n+\ttracing.\n+\t(do_ioctl): Print arguments if tracing.\n+\t(do_umask): Ditto.\n+\t(do_dup2): Ditto.\n+\t(do_fcntl): Ditto.\n+\t(do_gettimeofday): Ditto.\n+\t(do_getrusage): Ditto.\n+\t(do_fstatfs): Ditto.\n+\n+\t* filter_filename.c: New file to provide filter_filename to strip\n+\tthe directory prefix from a file.\n+\t* filter_filename.h: New include file to declare filter_filename.\n+\n+\t* debug.h: Include filter_filename.h.\n+\t(TRACE,DTRACE,ERROR): Use filter_filename on __FILE__.\n+\n+\t* misc.h: Include filter_filename.h.\n+ \t(ASSERT): Use filter_filename on __FILE__.\n+\n+\t* igen.c (lf_print_my_prefix): Use filter_filename on the filename\n+\targument.\n+\n+\t* Makefile.in: Add filter_filename support.\n+\n+\t* ppc-instructions (dcbi, icbi): Make these NOPs rather than\n+\tinvalid instructions.\n+\n+\t* configure.in: Add support for more --enable-sim-* switches.\n+\tUse config.make and config.hdr to write to Makefile and config.h\n+\trespectively.  Don't rewrite Makefile, just append to it.\n+\t* configure: Regenerate.\n+\t* config.{make,hdr}: New shell scripts.\n+\n+\t* Makefile.in: Remove all variables set by configure.in.\n+\t(psim.o): Depend on $(BUILT_SRC) also.\n+\n+\t* emul_netbsd.c (do_gettimeofday,do_getrusage): When comparing an\n+\tinteger, use 0, not NULL.\n+\n+Tue Oct 31 15:20:04 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* configure.in: Add support for --enable-sim-inline,\n+\t--enable-sim-bswap, --enable-sim-cflags, --enable-sim-complex,\n+\t--enable-sim-switch, --enable-sim-duplicate, --enable-sim-filter,\n+\tand --enable-sim-endian switch to control various Makefile\n+\tvariables.\n+\t* configure: Regenerate from configure.in.\n+\t* Makefile.in: Add various Make variables that the various\n+\tswitches alter.\n+\n+\t* std-config.h (DEFAULT_INLINE): Don't set this to 2 if using GCC\n+\tand optimizing by default.\n+\n+Fri Oct 27 19:26:27 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* bits.h (ROTL32, ROTL64): Were functions, made them macros, now\n+ \tmake them functions again.  Appears 2.6.3 is confused by just a\n+ \tmacro.\n+\n+Thu Oct 26 18:31:58 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* ppc-endian.c (SWAP_8): Fix 8 byte swap!\n+\n+\t* psim.c (psim_create): Not correctly checking that runtime\n+ \tconfiguration of things like ENDIAN, ENVIRONMENT and ALIGNMENT\n+ \tmatched the compiled in ones.\n+\n+\t* debug.h (ITRACE), igen.c: Tidy up more tracing flags -\n+ \ttrace_semantics is now different to trace_idecode, the former\n+ \tchecks the cache.\n+\n+Tue Oct 24 21:54:13 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* ppc-instructions (mtsrin): Missing instruction\n+\t* ppc-instructions (mfsrin): Missing instruction\n+\t* ppc-instructions (eieio): Missing instruction\n+\n+Tue Oct 24 20:55:29 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* build-psim: New shell script - see internals for usage,\n+ \tsimplifies the process of building custom simulators.\n+\n+Mon Oct 23 23:48:59 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* std-config.h (SEMANTICS_INLINE): Tidy up notes on each of the\n+        INLINE macros.  Make SEMANTICS_INLINE == 1 if DEFAULT_INLINE == 2.\n+        Don't use DEFAULT_INLINE to define REGISTERS_INLINE DEVICES_INLINE\n+        DEVICE_TREE_INLINE or INTERRUPTS_INLINE as none of these are on\n+        the instruction or data critical paths.\n+\n+\t* FIXME: devices.c/emul_netbsd.c would benefit (slightly) from\n+ \tthe inclusion of device_tree.c/emul_generic.c.\n+\n+Mon Oct 23 00:31:50 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* os_emul.[hc], emul_generic.[hc], emul_netbsd.[hc]: replace\n+        system.[hc].  Start of suport for multiple emulations and\n+        emulation state (os_emul object).\n+\n+\t* emul_generic.[hc]: Start of code to implement proper system call\n+\ttracing (from spy).\n+\n+Sun Oct 22 21:33:51 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* cpu.h, cpu.c (cpu_init): New function, zero the registers before\n+        the processor is started. Fixes problem of registers being\n+        undefined when restarting from within gdb.\n+\n+\t* cpu.h, cpu.c (cpu_flush_icache): New function, flushes the\n+        instruction cache (if present).  Fixes problem of cpu caching gdb\n+        breakpoint instructions.\n+\n+\tFIXME: PSIM sometimes aborts calling error(), it should instead\n+ \tcall sim_error() say which takes care of housekeeping such as\n+ \tsaving the CIA before calling error.\n+\n+\t* NOTE: cpu_flush_cache() instead of cpu_synchronize_context() is\n+ \tused when restarting a simulation because the latter has the\n+ \tunwanted side effect (well I as a kernel hacker think it is) of\n+ \tperforming an isync when the instruction stream doesn't contain\n+ \tone.\n+\n+Sun Oct 22 19:27:48 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* mon.h (new), mon.c (new), std-config.h (WITH_MON): Performance\n+        monitoring module. Counts both instructions issued and\n+        load/stores.\n+\n+\t* NOTE: mon does not contain to count instruction loads as this\n+ \tinformation is already available from the mon_issue() hook.\n+\n+\t* igen.c (lf_print_c_semantic), vm_n.h: Add counting code.\n+\n+\t* psim.h, psim.c (psim_create), cpu.h, cpu.c (cpu_create): Attach\n+        a common monitor to each of the cpus. Delete\n+        cpu_increment_number_of_insns() and cpu_get_number_of_insns()\n+        replaced by copied code in mon.[hc].\n+\n+Sun Oct 22 18:42:45 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* sim_calls.c, main.c, psim.c (psim_create): always create\n+        `WITH_SMP' cpus.  The actual number of CPU's active in a\n+        simulation run is taken from the device node: /init/smp (an\n+        integer). WITH_SMP changed to 2 (remember to put it back to 0).\n+\n+Fri Oct 20 17:26:54 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* system.c: More system call emulation.  If code appears NetBSD\n+ \tspecific, make conditional to being compiled on a NetBSD system\n+ \t(sigh).\n+\n+Wed Oct 18 23:02:20 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* Makefile.in, gen.c(delete), igen.c(new), dgen.c(new),\n+ \tlf.[ch](new), table.[ch](new): Split into two generators - igen\n+ \tthat outputs the instruction tables and dgen that outputs the spr\n+ \ttables.  Add -f (filter out) flag to igen to filter out certain\n+ \tinstructions (ex 64 bit ones) from the created tables.  Include\n+ \t$(LIBIBERTY_LIB) in link options in case host lacks some libc\n+ \tfunctions.\n+\n+\t* NOTE: igen, since it was originally written for the\n+ \tPowerPC/RS6000, things the MSB is 0 and the LSB is 63{31}.\n+\n+\t* Makefile.in, std-config.h, ppc-cache-rules(new),\n+ \tppc-opcode-complex(new), ppc-opcode-simple(new): (for igen) Create\n+ \tcache-rule and opcode-rule tables from macros found std-config.h.\n+ \tDelete corresponding macro's from std-config.h.\n+\n+\t* igen.c (gen_itable_c, gen_itable_h), Makefile.in: code to output\n+ \tan table of all the instructions.  Code to output a type\n+ \tenumerating all the instructin names.\n+\n+\t* igen.c(lf_print_c_semantic): Move call to increment instruction\n+ \tcounter so that it occures _after_ the instruction has been fully\n+ \tvalidated, was double counting illegal/invalid instructions.  Add\n+ \tconditional so only compiled in when WITH_PROFILE enabled (enabled\n+ \tby default).\n+\n+\t* igen.c, cpu.h, cpu.c(cpu_increment_number_of_insns): Include\n+ \titable.h, count individual instruction types not just total,\n+ \tadjust reporting functions to output this.\n+\n+\t* ppc-instructions (64 bit Load Doubleword with Update Indexed):\n+ \tHad 32./ instead of 31./\n+\n+\t* ppc-instructions (64 bit Store Double Word Conditional Indexed):\n+ \tbitrot - updated to use newer CR register operators.\n+\n+\t* ppc-instructions (64bit Floating Convert from Integer\n+ \tDoubleword): Correct call to Round_Float().\n+\n+Mon Oct 16 00:31:20 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* basics.h: #include \"sim_callbacks.h\" earlier so that its\n+ \tprototypes are declared in all other header files.\n+\n+\t* bits.h, bits.c, idecode_expression.h (ROTL32, ROTL64): Update\n+ \tdoc in bits.h, remove dead code in bits.c, move ROTL32/ROTL64 into\n+ \tbits.h.\n+\n+\t* cpu.c(cpu_add_commas), device_tree.h, device_tree.c(scand_*):\n+ \tAdd size of buffer argument to functions writing a string into a\n+ \tbuffer.  Check for buffer overflow.\n+\n+Sun Oct 15 22:16:11 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* devices.h, devices.c, debug.h, debug.c: add macro's for tracing\n+        of each device.  Make parameter names consistent so macros work.\n+        Use macro's in device functions.\n+\n+\t* device_tree.c, devices.h, devices.c: include path to device in a\n+        devices node when creating it.\n+\n+\t* device_tree.c, debug.h, debug.c: Add tracing of `device-tree'.\n+\n+\t* core.c: add tracing of core-device, adjust parameter names in\n+ \tcore functions to be consistent with those in devices*.\n+\n+Sun Oct 15 20:33:20 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+        * debug.h, debug.c (trace_option): New function. Parses the trace\n+        option, updating the trace array.\n+\n+\t* debug.h, debug.c (trace_usage): New function. Outputs the list\n+        of all possible trace options.\n+\n+\t* sim_calls.c (sim_open), main.c (main): Use new trace_option() to\n+ \tparse trace options specified with the simpler -t flag.  Adjust\n+ \tusage.\n+\n+\t* FIXME: basic parsing of command line options is still duplicated\n+ \tby main.c and sim_calls.c\n+\n+Thu Oct 26 10:42:28 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* Makefile.in (clean): Delete *.i and *.out files.\n+\n+\t* ppc-endian.c (SWAP_n): Add SET argument to allow use of SWAP\n+\tmacros for either assignment or return.  Fix SWAP_8 to use a\n+\tunion, and two SWAP_4's.  Delete SWAP_N, since nobody uses it now.\n+\t(ENDIAN_N): Add SET argument to SWAP_n calls.  Delete macro defs\n+\tthat hardwired swapping on/off, let optimizer delete dead code.\n+\n+\t* main.c (main): Add printf that we caught a signal and print out\n+\tthe failing address.\n+\n+Thu Oct 19 21:43:39 1995  Fred Fish  <fnf@fishfood.amigalib.com>\n+\n+\t* Makefile.in:  Remove tabs from otherwise empty line.\n+\tConfuses many non-GNU versions of \"make\".\n+\n+Wed Oct 18 08:51:25 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* Makefile.in (clean): Delete files produced by gen.\n+\n+Mon Oct 16 17:34:24 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* gen.c (lf_print_c_semantic_function): Move counting # of\n+\tinstructions here so it works with caching.\n+\t(gen_idecode_c): Move from here.\n+\n+Wed Oct 11 17:13:15 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* gen.c, ppc-instructions, psim.c: Fix code for generating\n+\tcracking instruction cache.  Delete the code that cached just the\n+\tresult from doing an instruction lookup - this ran slower than no\n+\tcache at all.\n+\n+Fri Oct 13 09:58:43 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* Makefile.in (gen.o): Include $(INLINE_CFLAGS).\n+\n+\t* debug.h (ppc_trace): Rename from trace, to avoid a conflict with\n+\tTCL when gdb is linked with the simulator.\n+\t* debug.c (ppc_trace): Ditto.\n+\t* sim_calls.c (sim_open): Change trace -> ppc_trace.\n+\t* main.c (main): Ditto.\n+\n+\t* cpu.c (cpu_add_commas): Remove extra static.\n+\n+Thu Oct 12 11:35:53 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* Makefile.in (psim.o): Now that inlines are turned on, make\n+\tpsim.o depend on all sources.\n+\n+\t* cpu.c (cpu_add_commas): New function to format a long with\n+\tcommas.\n+\t(cpu_print_info): Use it to print number_of_insns.\n+\n+\t* ppc-endian.c (SWAP_n): New macros to speed up byte swapping for\n+\t2, 4, and 8 bytes.\n+\t(ENDIAN_N): If both target and host byte orders are known, don't\n+\tbother testing CURRENT_{TARGET,HOST}_BYTE_ORDER.\n+\n+\t* ppc-endian.h (target specific H2T_n/T2H_n macros): Remove #if 0\n+\tto allow target specific H2T_n/T2H_n macros to be used.\n+\t(htonl, ntohl): If compiled on a 486 by GCC and WITH_BSWAP is\n+\tnon-zero, redefine the htonl/ntohl macros to use the BSWAP instead\n+\tof the 3 instruction sequence that runs on 386s.\n+\n+\t* std-config.h (WITH_{HOST,TARGET}_BYTE_ORDER): Don't override if\n+\tspecified on the compile line.\n+\t(WITH_BSWAP): If not defined, define as 0.\n+\n+\t* Makefile.in (INLINE_CFLAGS): Add -DDEFAULT_INLINE=2 to add\n+\tdefault inline support.  Pass INLINE_CFLAGS when compiling.\n+\n+\t* devices.{h,c} (unimp_device_ioctl): Use STATIC_DEVICES, not\n+\tINLINE_DEVICES since GCC doesn't like inline functions that\n+\taccept variable arguments.\n+\t(stack_ioctl_callback): Make function just static because GCC\n+\tdoesn't like inline functions that accept variable arguments.\n+\n+\t* devices.h (STATIC_DEVICES): Define as empty if not defined.\n+\n+\t* inline.c: Correct pathnames of included C files to match current\n+\timplementation.\n+\n+\t* inline.h (STATIC_DEVICES): If DEVICES_INLINE is defined to be\n+\tnon-zero, define STATIC_DEVICES to be static.\n+\n+\t* std-config.h (INLINE): If GNU C and optimizing, define this as\n+\t__inline__.\n+\t(DEFAULT_INLINE): If not defined, define as 0.\n+\t(ENDIAN_INLINE): If not defined, define as DEFAULT_INLINE.\n+\t({CORE,VM,CPU,EVENTS,REGISTERS,INTERRUPTS}_INLINE): Ditto.\n+\t({SPREG,IDECODE}_INLINE): Ditto.\n+\n+Wed Oct 11 17:13:15 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+        * ppc-instructions: Initial cut of floating point suport added.\n+  \tOf note include - use of host IEEE floating point instructions,\n+ \tuse of PowerPC manual pseudo code to handle the FPSCR.  It is not\n+ \tcurrently a pretty sight.\n+\n+\t* memory_map.h, memory_map.c, memory_map_n.h, core.h, core.c:\n+ \tmerge into core.h, core.c, core_n.h. The type memory_map replaced\n+ \twith core_map.  This removes a level of pointer indirection when\n+ \ttranslating an address.\n+\n+\t* memory_map.h, memory_map.c, memory_map_n.h: delete.\n+\n+\t* Makefile.in et.al (sorry): tweek to use new core, core_map and\n+ \tcore.h.\n+\n+Wed Oct 11 12:10:26 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* sim_calls.c, main.c: Add -g (trace_gdb) option, add tracing to\n+ \tmost of the other functions in sim_calls.c.\n+\n+\t* basics.h (CONCAT3), memory_map.c, memory_map_n.h, Makefile.in:\n+ \tAdd macros to better cover up `generic' code.  Makes it possible\n+ \tto step through the generic code!\n+\n+\t* vm.c, vm_n.h, Makefile.in: ditto\n+\n+Tue Oct 10 15:42:59 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* devices.h, devices.c, memory_map.h, memory_map.c: Changed\n+ \tcallback interface so that there is a read/write buffer but no\n+ \tread/write_word.  VEA default memory read/write handler sometimes\n+ \tcouldn't resolve an access and of those some were for a memory\n+ \tfault and some were because gdb was making a bogus request.\n+\n+\t* devices.h, devices.c, memory_map.h, memory_map.c, vm.h, vm.c:\n+ \teliminate transfer_mode (raw or cooked) parameter from read/write\n+ \tbuffer.\n+\n+Fri Oct  6 20:23:56 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* ppc-instructions (fmul, fmuls): correct instruction format - had\n+ \tFRB instead of FRC.\n+\n+Wed Oct  4 17:31:12 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* psim.c, device_tree.h, device_tree.c, devices.c (printd_*,\n+ \tscand_*): new functions to parse/print fields in device names\n+ \twhile hiding any machine dependency.\n+\n+\t* devices.c, psim.c: Change the stack init code so that it is\n+ \thandled by a device.  Arguments passed across using a device ioctl\n+ \t(hack).\n+\n+\t* devices.h, devices.c: device ioctl callback changed to allow a\n+ \tvariable number of arguments.  This gives greater flexability and\n+ \tgreater chance of bugs.\n+\n+Tue Oct  3 22:01:56 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* main.c (printf_filtered, error): Missing va_end() to close off\n+        variable argument use.\n+\n+\t* Makefile.in (tmp-gencode): comment out hack to get around some\n+        versions of make not handling files being created as side-effects.\n+\n+\t* gen.c (lf_open): Add -n (real_file_name) option.  Specifies an\n+        alternative file name to use in output files for things like #line\n+        macros.\n+\n+        Makefile.in (tmp-gencode): Use gen -n so that debug info is\n+        correct.\n+\n+\t* Makefile.in (TARGETLIB): Use this instead of libsim.a in the\n+\tMakefile.\n+\n+Sat Oct  7 22:40:59 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* sim_calls.c (sim_set_callbacks): Define new function.\n+\n+Fri Oct  6 17:23:10 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* psim.c (psim_print_info): Print exit status or signal number.\n+\n+Mon Oct  2 11:46:37 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* cpu.c (struct _cpu): Add number_of_insns field to trace how many\n+\tinstructions are executed.\n+\t(cpu_increment_number_of_insns): New function to increment the\n+\tnumber of instructions issued.\n+\t(cpu_get_number_of_insns): New function to return the number of\n+\tinstructions issued.\n+\t(cpu_print_info): New function to print cpu related information.\n+\tAt present, print the number of instructions executed.\n+\n+\t* gen_idecode_c: Emit call to cpu_increment_number_of_insns within\n+\tidecode_issue.\n+\n+\t* psim.c (psim_print_info): New function to iterate over each of\n+\tthe CPU's calling cpu_print_info.\n+\n+\t* psim.h,cpu.h: Add new declarations.\n+\n+\t* sim_calls.c (sim_open): Add argument processing to add the same\n+\tswitches main.c accepts for the standalone processor.\n+\t(sim_close): Call psim_print_info if -I.\n+\n+\t* main.c (main): Add comment saying to update sim_calls.c when\n+\tadding switches.  Add -I to call psim_print_info when done.\n+\t(usage): Update usage message.\n+\n+Sun Oct  1 13:52:59 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* main.c (printf_filtered): Correct to match new prototype.\n+\n+Sat Sep 30 20:47:05 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* sim_callbacks.h (printf_filtered): Correct prototype.\n+\n+Thu Sep 21 16:26:49 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* device_tree.c (OEA_MEMORY_SIZE): Define if not defined to\n+\t0x100000.\n+\t(clayton_memory_size): Define as OEA_MEMORY_SIZE.\n+\n+\t* std-config.h (WITH_TRACE): Default to 1 now.\n+\n+\t* psim.c (write_stack_arguments): Don't write any stack arguments\n+\tif OEA.\n+\n+\t* main.c (main): Switch to using getopt.  Make -p also set\n+\ttrace_semantics.  Make -a turn on all trace flags.  Make -C turn\n+\ton console tracing.\n+\n+\t* device_tree.c (create_option_device_node): Assume a program is\n+\tOEA if the start address is < 4096, not just == 0.\n+\n+Wed Sep 20 13:36:06 1995  Ian Lance Taylor  <ian@cygnus.com>\n+\n+\t* Makefile.in (maintainer-clean): New synonym for realclean.\n+\n+Sun Sep 10 10:23:56 1995  Michael Tiemann  <tiemann@axon.cygnus.com>\n+\n+\t* registers.c (register_description): Add gdb synonyms for cr\n+\t(cnd) and msr (ps).\n+\n+Fri Sep  8 13:16:10 1995  Ian Lance Taylor  <ian@cygnus.com>\n+\n+\t* Makefile.in (install): Don't install in $(tooldir).\n+\n+\t* configure.in: Call AC_CONFIG_HEADER.  Don't try to use\n+\tbfd/hosts/*.h file or bfd/config/*.mh file.  Call AC_PROG_CC and\n+\tAC_PROG_RANLIB.  Substitute in values for CFLAGS, HDEFINES, AR,\n+\tand CC_FOR_BUILD.  Call AC_CHECK_HEADERS for various header files.\n+\tTouch stamp.h if creating config.h.\n+\t* configure: Rebuild.\n+\t* config.in: New file, created by autoheader.\n+\t* Makefile.in (AR): Define as @AR@.\n+\t(CC): New variable, defined as @CC@.\n+\t(CFLAGS): Define as @CFLAGS@.\n+\t(CC_FOR_BUILD): New variable, defined as @CC_FOR_BUILD@.\n+\t(RANLIB): Define as @RANLIB@.\n+\t(HDEFINES, TDEFINES): New variables.\n+\t(@host_makefile_frag@): Remove.\n+\t(mostlyclean): Make the same as clean, not distclean.\n+\t(clean): Remove config.log.\n+\t(distclean): Remove config.h and stamp-h.\n+\t(Makefile): Don't depend upon @frags@.  Just rebuild Makefile when\n+\tinvoking config.status.\n+\t(config.h, stamp-h): New targets.\n+\t(gen, gen.o): Build with CC_FOR_BUILD, not CC.\n+\t(ppc-config.h): Rename from old config.h build.\n+\t* (basics.h,gen.c,ppc-endian.c,psim.c): Include ppc-config.h.\n+\n+Fri Sep  8 09:51:03 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* configure{,.in}: Don't include sysdep.h from bfd, since bfd no\n+\tlonger provides it.\n+\t* basics.h (sysdep.h): Don't include it.\n+\t* Makefile.in (BASICS_H): Remove sysdep.h.\n+\n+Wed Sep  6 13:25:42 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+ \t* core.c (core_add_data): First growth of bss was being put at\n+        wrong address (0) instead of &end.\n+\n+ \t* core.c (core_add_stack, core_add_data): Was not handling case\n+        where bss/stack is grown across the current end-of-{bss,stack}.\n+\n+Wed Sep  6 00:46:10 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* system.c (system_call): Fix SYS_break - was aligning bss to a\n+        page boundary instead of just an 8 byte one; On first call sbrk(0)\n+        != sbrk(0).\n+\n+Thu Aug 24 14:48:54 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* Makefile.in (install): Fix install rule.\n+\n+Tue Aug 22 09:31:18 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n+\n+\t* system.c (system_call): Add read support.\n+\n+\t* main.c (main): -t sets trace_device_tree.  Correct usage message\n+\tto current reality.\n+\n+\t* device_tree.c (update_memory_node_for_section): Make tracing\n+\toutput line up.  If not code or readonly, assume that the section\n+\tis a data section and has read/write permissions.  Add readonly\n+\tsupport.\n+\n+\t* core.c (create_core_from_addresses): Print end address in traces\n+\tand make tracing output line up.\n+\n+\t* Makefile.in: Rewrite from Makefile to work with the Cygnus\n+\tenvironment, and support compiling in a different directory than\n+\tthe sources reside in.\n+\n+\t* ppc-endian.h: Rename from endian.h so that it doesn't get\n+\tconfused with /usr/include/sys/endian.h on Linux.  Add Linux\n+\tendian support.\n+\n+\t* ppc-endian.c: Rename to be consistant with ppc-endian.h.\n+\tInclude ppc-endian.h, not endian.h.\n+\n+\t* basics.h (sysdep.h): Include sysdep.h that configure makes.\n+\tInclude ppc-endian.h, not endian.h.\n+\n+\t* std-config.h: Rename from ppc-config.  Put #ifndefs around most\n+\tconfiguration macros, so they can be overridden via CFLAGS.  By\n+\tdefault, turn off tracing.\n+\n+\t* configure.in: Clone from other simulator targets.\n+\t* configure: Generate via autoconf from configure.in.\n+\n+Sat Aug 19 09:05:32 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* ppc-instructions: fix srawi (was geting XER[CA] real wrong).\n+\n+\t* interrupts.c (data_storage_interrupt): allow stack to grow by\n+        upto one MB per increment.\n+\n+\t* ppc-instructions: divw was computing rA / rA not rA / rB\n+\n+\t* main.c (main): really stupid. Wasn't exiting with correct status\n+\n+Fri Aug 18 00:38:01 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* system.c (system_call): add system calls kill(2) and getpid(2).\n+\n+\t* main.c (main): Check/return exit status when simulation\n+        finishes.\n+\n+Thu Aug 17 14:29:18 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* device_tree.c (create_option_device_node): Alignment rules (at\n+ \tleast for the moment) now are for strict alignment only for LE OEA\n+ \tmode.  (Because of compiler problems).\n+\n+\t* system.c (system_call) SYS_exit: Wasn't exiting with correct status.\n+\n+Thu Aug 17 01:16:38 1995  Andrew Cagney  <cagney@highland.com.au>\n+\n+\t* vm.c (DEFINE_VM_DATA_MAP_WRITE_N): For miss aligned transfer\n+        forgot to return.\n+\n+\t* system.c (system_call): didn't page align break argument before\n+        determining increment break increment.\n+\n+\t* psim/ppc: Re-arange entire directory structure so that\n+        everything lives in the one directory.  While a pain for cleaning,\n+        makes building across multiple architectures much simpler.\n+\n+\t* devices.c, device_tree.c: Added code that provides a simple\n+        illustration of how an interrupt control device could be\n+        implemented.\n+\n+\t* devices.c: Added code so that the dumb console device can read\n+        (from stdin) as well as write to stdout.",
      "previous_filename": "sim/ppc/ChangeLog"
    },
    {
      "sha": "9f6612f6a778d02cf4d17b97e8839ea3eaeddf2e",
      "filename": "sim/ppc/ChangeLog.00",
      "status": "removed",
      "additions": 0,
      "deletions": 2168,
      "changes": 2168,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ae5245324fdc1d42cc221ce72689b40f4c08f66/sim/ppc/ChangeLog.00",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ae5245324fdc1d42cc221ce72689b40f4c08f66/sim/ppc/ChangeLog.00",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/ChangeLog.00?ref=8ae5245324fdc1d42cc221ce72689b40f4c08f66",
      "patch": "@@ -1,2168 +0,0 @@\n-Wed May 29 22:57:40 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>\n-\n-\t* ChangeLog.00, ChangeLog: ChangeLog from gdb-4.16 becomes\n-        ChangeLog.00\n-\n-Thu Apr  4 15:17:22 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* INSTALL: Fix some long lines and remove x86 specific options in\n-\tthe examples.\n-\n-Sun Mar 31 15:47:33 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>\n-\n-        * INSTALL: Update to reflect gdb-4.16.\n-\n-        * RUN: Update to reflect gdb-4.16.  Review notes on building a BSD\n-        runtime environment.\n-\n-\t* README: Point out copyright status of simulator in introduction.\n-\n-Thu Mar  7 19:53:49 1996  Michael Meissner  <meissner@cygnus.com>\n-\n-\t* emul_netbsd.c: Only include sys/mount.h if HAVE_SYS_MOUNT_H is\n-\tdefined.\n-\t* configure.in: Test for sys/mount.h.\n-\t* configure,config.in: Regenerate.\n-\n-Thu Feb 22 22:48:57 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* README, RUN, INSTALL: Update to reflect announcement\n-\t* psim: PSIM 1.0.1 released\n-\n-Thu Feb 22 14:01:56 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* emul_bugapi.c (emul_bugapi_do_read): New function to handle\n-\treads.\n-\t(emul_bugapi_instruction_call): Add support for .INCHR/.INLN\n-\tsystem calls.\n-\n-\t* emul_bugapi.c (emul_bugapi_do_write): Call flush_stdoutput.\n-\t* emul_netbsd.c (do_write): Call flush_stdoutput.\n-\n-\t* main.c (flush_stdoutput): Do fflush (stdout).\n-\t* sim_calls.c (flush_stdoutput): Do gdb_flush (gdb_stdout);\n-\t* sim_callbacks.h (flush_stdoutput): Declare.\n-\n-Wed Feb 21 10:39:35 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* emul_bugapi.c (bug_mapping): New structure to map bug system\n-\tcall numbers to a string.\n-\t(toplevel): Add remaining bugapi system calls.\n-\t(emul_bugapi_instruction_name): Map bugapi system call number to a\n-\tstring.\n-\t(emul_bugapi_do_write): Common code to process write system calls.\n-\t(emul_bugapi_instruction_call): If os-emul tracing is on, trace\n-\tthe system call.  Use the name to print unknown system call.\n-\tCorrect implementation of _OUTLN.  Add support for _OUTSTR and\n-\t_PCRLR system calls.\n-\n-Wed Feb 21 17:07:27 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* NOTES: New file.  Ramblings on why things were done they way\n- \tthey were.\n-\t\n-\t* psim.c (psim_options): Didn't enter the model value into the\n- \tdevice tree as a string.\n-\t\n-  \t* cpu.c (cpu_synchronize_context): Wrong test for conditional\n- \tflush of cache.\n-\n-\t* emul_generic.c (emul_add_tree_hardware): reg value didn't match\n- \tbus address.\n-\t\n-\t* ppc-opcode-flat: new file. Generate an instruction decode\n- \tfunction like ppc-opcode-complex but use switch statements.\n-\n-\t* INSTALL: document new opcode file, add example configurations.\n-\n-Tue Feb 20 18:42:31 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* main.c (main): rename psim instance (system) to simulation and\n- \tmake global.\n-\t* main.c (error): print out performance even when an error occures.\n-\n-\t* emul_bugapi.c (emul_bugapi_create): Fix argument passing.\n-\n-\t* emul_generic.c (emul_add_tree_hardware): Move hardware devices\n- \tto 0x80000000 from 0x400000.\n-\n-Mon Feb 19 22:54:40 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* ppc-instructions (TLB Invalidate Entry, TLB Invalidate ALL):\n-        Implement by passing on request to all processors.\n-\t* ppc-instructions (TLB Synchronize): Implement as empty, processor\n-\ttlb's are always in sync.\n-\n-\t* cpu.c (cpu_page_tlb_invalidate_all): New function.  Pass on TLB\n-        invalidate request to processors VM sub-system.\n-\t* cpu.c (cpu_page_tlb_invalidate_entry): Ditto.\n-\n-\t* vm.c (vm_page_tlb_invalidate_all): New function. Mark all page\n-        TLB entries as invalid.\n-\t* vm.c (vm_page_tlb_invalidate_entry): New function. Ditt but only\n-\tinvalidate one TLB entry.\n-\n-\t* psim.c (psim_init): Invalidate TLB's before (re)starting.\n-\n-Mon Feb 19 21:25:56 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* emul_generic.c (emul_add_tree_options): Add argument\n-        oea_interrupt_prefix (0 or 1) that specifies the prefix MSR[IP]\n-        and hence the location of the interrupt vectors.  Add this to the\n-        device tree.\n-\n-\t* emul_chirp.c (emul_chirp_create): Allow configuration of\n-        floating-point and interrupt prefix (default 0) using the above.\n-\n-\t* emul_netbsd.c (emul_netbsd_create): Pass dummy arg for\n-        interrupt-prefix.\n-\n-\t* emul_bugapi.c (emul_bugapi_create): Allow configuration of\n-        interrupt prefix (default 1) and configure interrupt table traps\n-        accordingly.\n-\n-\t* emul_generic.c (emul_add_tree_hardware): Include a small eeprom\n-        in the list of devices.\n-\n-\t* device_table.c: For moment fake eeprom device by a memory\n-        device.  In future will need a proper eeprom device.\n-\n-Tue Feb 20 17:01:26 1996  J.T. Conklin  <jtc@rtl.cygnus.com>\n-\n-\t* config.in: Regenerated.\n-\n-Fri Feb 16 10:42:27 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* psim.c: Include options.h so print_options is declared.\n-\n-Thu Feb 15 18:10:13 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* emul_netbsd.c (toplevel): Do not include sys/resource.h if the\n-\tsystem doesn't have it, and turn off getrusage processing.\n-\t(write_rusage): #ifdef out if we don't have getrusage.\n-\t(do_getrusage): Define as 0 if we don't have getrusage.\n-\n-Wed Feb 14 17:38:12 1996  J. T. Conklin  <jtc@cygnus.com>\n-\n-\t* configure.in (AC_HEADER_DIRENT): Add, so that we can figure out\n-\twhere the directory functions are declared.\n-\t* configure: Regenerate\n-\n-\t* emul_netbsd.c: Use the macros defined by configure to find the\n-\tappropriate directory functions.\n-\n-Thu Feb  8 00:53:13 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* configure.in (xor_endian): Trace setting of xor-endian flag.\n-\n-Wed Feb  7 18:20:56 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* psim.c (psim_usage): Extend documentation.\n-\n-\t* ppc-instructions (model-print): fix typo.\n-\n-Sun Feb  4 23:58:02 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* configure.in (with-smp): Default configuration allow up to\n-\tfive processors (but enable only one).\n-\n-\t* emul_bugapi.c (emul_bugapi_create): If floating-point is\n-\tallowed, enable the floating point instruction set in the\n-\tmsr.\n-\n-Tue Jan 30 22:52:32 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* emul_chirp.c (chirp_emul_seek, chirp_emul_read,\n-        chirp_emul_write): Tolerate invalid ihandles.\n-\n-\t* device.c (device_instance_create, device_instance_delete):\n-\tinit/delete instance name\n-\n-\t* emul_chirp.c (emul_chirp_instruction_call): Read the nr args and\n-        returns when determining the service.\n-\n-\t* emul_chirp.c (chirp_read_t2h_args): Allow variable number of\n-        args for the method \"call-method\".\n-\n-\t* emul_chirp.c (chirp_emul_getprop): Tolerate a n_returns of zero\n-        - should be one. Some OpenBoot code doesn't pass correct arg.\n-\n-\t* emul_chirp.c (chirp_emul_getprop): Trace more property types.\n-\n-Tue Jan 30 19:12:29 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* RUN: New file. Describe how to run PSIM\n-\t* INSTALL: New file. Describe how to install PSIM\n-\t* README: New file. Overview PSIM.\n-\t* BUGS: New file. Briefly discuss bugs and limitations\n-\t\n-Wed Jan 24 20:28:08 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* emul_bugapi.c (OEA_START_ADDRESS): Put it back to 0x100000,\n-        wasn't correctly using GLD.\n-\n-Mon Jan 22 22:44:13 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* emul_generic.c (emul_add_tree_options): Make default number of\n-\tactive processors 1 (even when SMP enabled).\n-\n-Mon Jan 22 22:37:34 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* device_table.c (icu_io_read_buffer_callback): Add extra register\n-        (at addr + 4) that returns number of processors.\n-\n-\t* emul_generic.c (emul_add_tree_hardware): Update device node to\n-        match.\n-\n-Mon Jan 22 22:00:42 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* emul_bugapi.c (OEA_START_ADDRESS): Change to 0x4000 so that it\n-        matches gas-960116/ld.\n-\n-Fri Jan 19 00:32:27 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* psim-960119 released - psim-1.0b01.\n-\n-Fri Jan 19 00:32:27 1996  Andrew Cagney - aka Noid  <cagney@highland.au.com>\n-\n-\t* psim.c (psim_create): Re-order so that all options are set\n-        before the CPU's are created.  Was breaking mon_create();\n-\n-\t* psim.c (psim_create): Tidy up conflicting configuration errors.\n-\n-\t* debug.c: Add missing print-info entry to trace table.\n-\n-\t* os_emul.c (os_emul_create): Fix `-e' option. Was looking under\n-        wrong name.\n-\n-\t* psim.c (psim_options): Fix `-r' option. Was entering under wrong\n-        name.\n-\n-Thu Jan 18 20:33:48 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* vm.c (om_unpack_bats): Fix checking of bat bits.\n-\n-\t* emul_chirp.c (emul_chirp_create): Store address of OB in memory\n- \tin the os_emul_data structure.\n-\n-\t* emul_bugapi.c (emul_bugapi_create): Store the address of the\n- \tbugapi code (in main memory) in the os_emul_data structure.\n-\n-Thu Jan 18 01:14:55 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* vm.c (om_translate_effective_to_real): Fix trace output.\n-\n-Wed Jan 17 22:21:55 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* device_table.c (generic_device_init_address): Create memory from\n-        information obtained from `reg' property.\n-\t* device_table.c (vm_init_address_callback): Use information\n-        obtained from properties.\n-\t* emul_netbsd.c (emul_netbsd_create): Update to create device and\n-        property entries to match\n-\n-Tue Jan 16 09:50:53 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* idecode_expression.h (ALU_END): Add ITRACE of the result.\n-\n-\t* ppc-instructions (Equivalent): Enable this instruction.\n-\t(Add to Minus One Extended): Ditto.\n-\t(Subtract from Minus One Extended): Ditto.\n-\t(Add/And/Or/Xor Immediate): Add alu trace of result.\n-\t(Add/And/Or/Xor Shifted Immediate): Ditto.\n-\t(And/Or/Equivalent/Nand/Nor): Ditto.\n-\t(And/Or with Complement): Ditto.\n-\t(Extend Sign Byte/Half Word): Ditto.\n-\t(Count Leading Zeros): Ditto.\n-\t(Shift Right Algerbraic Word): Ditto.\n-\t(Shift Right Algerbraic Word Immediate): Ditto.\n-\n-Tue Jan  9 15:10:27 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* emul_bugapi.c (emul_bugapi_instruction_call) : Make format type\n- \tcorrect.\n-\t* emul_chirp.c (map_over_chirp_note) : Ditto\n-\t* emul_chirp.c (chirp_emul_test) : Ditto\n-\t* device_table.c (register_init): Ditto\n-\n-Tue Jan  9 14:16:26 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* configure.in: Make disable-sim-switch default.  Switch only\n- \tuseful if using --enable-sim-opcode=ppc-opcode-stupid and then\n- \tonly marginally so.\n-\n-Mon Jan  8 12:17:22 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* device_table.c (register_init): Make format type correct.\n-\n-Wed Jan  3 19:21:46 1996  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* emul_bugapi.c (emul_bugapi_create): Add nodes to init the\n- \tsystem-call trap to the emul instruction call instruction (Along\n- \twith an rfi and infinate loop).\n-\n-\t* emul_bugapi.c (emul_bugapi_instruction_call): Expand to include\n- \ta few real PPC bug calls.  Test with simple hello world.\n-\n-Tue Jan  2 20:51:19 1996  Andrew Cagney - aka Noid  <cagney@highland.com.au>\n-\n-\t* device.h, device.c (device_child, device_sibling): New\n-        functions.  Return corresponding device value.\n-\n-\t* emul_chirp.c (chirp_emul_child, chirp_emul_peer,\n-        chirp_emul_parent): New functions - emulate corresponding OpenBoot\n-        interfaces.\n-\n-\t* device_table.c (register_init): Extend properties attached to\n-        register init node to allow a specific processor's register to be\n-        specified.\n-\n-\t* emul_chirp.c (emul_chirp_create): Init SMP correctly - the\n-        initial PC for all processors is an infinate loop but then, for\n-        processor zero, is quickly changed to be the correct code starting\n-        address.\n-\n-\t* emul_chirp.c (emul_chirp_create): Add fake bootpath\n-        et.al. properties to tree.\n-\n-\t* emul_chirp.c (chirp_emul_getproplen): New function.  Emulate the\n-        getproplen OpenBoot call.\n-\n-\t* emul_chirp.c (emul_chirp_instruction_call): Document other\n-        possible chirp emulation internal states.\n-\n-\t* emul_chirp.c (emul_chirp_instruction_call): Trace failed lookups\n- \tas well as successful ones.\n-\t\n-\t* emul_chirp.c (emul_chirp_open): New function - handle open\n-        client call.\n-\n-\t* Makefile.in (maintainer-clean): Proper rule that eliminates more\n-        junk.\n-\n-Tue Dec 19 13:00:11 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* emul_chirp.c (chirp_emul_exit): Full out call.\n-\n-\t* device_table.c (htab_map_page): Wasn't handling byte swap when\n-\tcreating entries in the hash table.\n-\n-\t* device.c (device_tree_find_node): Allow primative wild-card match\n- \tof device names with the path.\n-\n-\tFIXME: As mentioned earlier, the device stuff needs work to bring\n- \tit into line with OpenBoot.  Part of this work is rewriting the\n-\tfind_node function so that it behaves as specified in p1275.\n-\n-Mon Dec 18 19:58:56 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* emul_chrp.c (chirp_emul_write, chirp_emul_finddevice): add\n- \tbetter tracing.\n-\n-\t* emul_chrp.c: Change return type of emul functions to int.  Emul\n- \tfunctions either return -1 or zero so unsigned was a bit\n- \tdangerous.\n-\t\n-\t* inline.h (*), igen.c, dgen.c, *: Update INLINE macros so that\n-        they are paramaterised with the type of the function.  Gets around\n-        the problem of `static' needing to come first with `attribute'\n-        comming last.  Format declarations and definitions so that emacs\n-\tdoesn't get confused.\n-\n-Fri Dec 15 17:06:44 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* std-config.h (PSIM_INLINE): Add missing inline configuration\n- \tcontrol for the main loop.\n-\n-\t* mon.c (mon_print_info): If monitoring disabled still print out\n- \tthe number seconds used.\n-\n-\t* psim.c (run_until_stop): Don't monitor the cache misses when\n- \tmonitoring is disabled.\n-\n-\t* configure.in (sim_mon, sim_monitor): Correct typo - sim_mon ->\n- \tsim_monitor for shell variable (or should that have been the other\n- \tway around?).\n-\n-\t* vm.c (vm_synchronize_context): Fix wrong test for unsuported\n- \tchange in endian-mode.\n-\t\n-\t* std-config.h (WITH_REGPARM), inline.h (IDECODE_INLINE,\n-\tSEMANTICS_INLINE): Add -DWITH_REGPARM=<n> option.  Enables the\n-\t__attribute__((__regparm(WITH_REGPARM))) for some functions.\n-\tconfigure with --enable-sim-cflags=\"-DWITH_REGPARAM=3\" (say).\n-\tUnfortunatly it tickles a bug (gcc?) and can't be used.\n-\n-Mon Dec 18 13:36:06 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* device.c (device_tree_add_device): Make trace fprintf arguments\n-\ttype correct.\n-\t* device_table.c (htab_decode_hash_table): Ditto.\n-\t(htab_map_binary): Ditto.\n-\t(htab_init_callback): Ditto.\n-\t* vm.c (om_virtual_to_real): Ditto.\n-\n-Sat Dec 16 09:54:18 1995  Michael Meissner  <meissner@wogglebug.tiac.net>\n-\n-\t* emul_netbsd.c (emul_netbsd_create): Deal with new BFD that\n-\tchanged how big/little endian support is recorded, while remaining\n-\tcompatible with the old BFD with #ifdefs.\n-\t* emul_chirp.c (emul_chirp_create): Ditto.\n-\t* emul_bugapi.c (emul_bugapi_create): Ditto.\n-\n-Fri Dec 15 15:55:56 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* std-config.h (MODEL_INLINE): Turn off INLINE_MODULE by default.\n-\n-\t* corefile.h: Delete declarations for unknown functions.\n-\t* device.h: Ditto.\n-\t* interrupts.h: Ditto.\n-\t* interrupts.c: Ditto.\n-\n-Thu Dec 14 18:49:34 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* lf.c (lf_print_function_type): New function.  Munges a function\n- \ttype so that the prefix (eg INLINE...) is inserted after the type\n- \tbut before any `*'.\n-\n-\t* igen.c: Change to output functions using this.\n-\n-Wed Dec 13 23:47:00 1995  Andrew Cagney   <cagney@highland.com.au>\n-\n-\tFIXME: Emul CHIRP does not correctly implement the find device\n- \tfunction.\n-\n-\tFIXME: Emul CHIRP and device do not implement device instance\n- \toperations.\n-\n-Wed Dec 13 23:47:00 1995  Andrew Cagney   <cagney@highland.com.au>\n-\n-\t* options.c (options_inline): Function to output meaningful\n-        description of the INLINE options.\n-\n-\t* configure.in (inline): Replace inline magic numbers with macro\n-        names. Map 1->LOCALS_INLINE and 2->ALL_INLINE.\n-\n-\t* inline.h, inline.c: update to use inline method.\n-\n-\t* std-config.h (CPU_INLINE), cpu.h, inline.h, inline.c: make cpu.h\n-        inline always.\n-\n-\t* std-config.h (EVENTS_INLINE): Inline events in psim.\n-\n-Wed Dec 13 22:01:21 1995  Andrew Cagney   <cagney@highland.com.au>\n-\n-\t* device_table.c (htab_sum_binary): DMA binaries to correct byte\n-        within a page.\n-\n-Tue Dec 12 22:51:18 1995  Andrew Cagney   <cagney@highland.com.au>\n-\n-\t* psim.c (psim_merge_device_file): Change `=' to `==', was this an\n-        error?\n-\n-Tue Dec  5 11:56:14 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* ppc-instructions (ppc_nr_mtcrf_crs, ppc_branch_conditional_name,\n- \tppc_function_unit_name): Simplify by declaring these arrays as\n- \tpure and simple static (instead of STATIC_MODEL).\n-\n-Tue Dec  5 00:45:34 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* sim_calls.c (sim_create, sim_load), main.c (main), psim.c: Pass\n-        an options device into psim_create() so that options can be merged\n-        into the tree.\n-\n-\t* device.c (*add*): Change semantics so the add functions only add\n-        when the new device (or property) doesn't already exist.  This\n-        allows merging of options and data.\n-\n-Mon Dec  4 17:12:13 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* Makefile.in (BASICS_H): Didn't include basics.h in the list of\n-        header files to depend on.\n-\n-Mon Dec  4 17:12:13 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* std-config.h: (*_MODULE): Extend the <module>_inline macro's so\n-        that they also allow control over static functions.  Rewrite\n-        document to reflect this.\n-\n-\t* std-config.h: (INLINE): Simplify definition, the above and\n-        earlier changes to igen.h eliminate the need to be defensive about\n-        enabling the inline of static functions.\n-\n-\t* std-config.h: (SIM_ENDIAN_INLINE, BITS_INLINE): Document limited\n-        suport for inlineing of modules for all callers.  Adjust relevant\n-        macro's so that DEFAULT_INLINE will enable this.\n-\n-\t* basics.h: Re-order #includes and definitions so that c-code for\n-        basic include files does not call functions delcared in later\n-        #includes.\n-\n-\t* basics.h (__attribute__), sim_callbacks.h: Move attribute macro\n-        to basics.h and add hack (include <stdio.h>) to try and bring that\n-        and other possible conflicting macros into scope much earler.\n-\n-\t* sim-endian.h,c (SIM_ENDIAN_INLINE) bits.h,c (BITS_INLINE):\n-        Change to use the updated inline definitions.  If enabled\n-        immediately include the corresponding c-code so that it will inline\n-        for all modules.\n-\n-\t* inline.h, inline.c (SIM_ENDIAN_INLINE, BITS_INLINE): Remove\n-        these cases, moved to module specific header files.\n-\n-Sat Dec  2 18:37:51 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* vm.c, vm_n.c: Fix htab code.\n-\n-\t* vm.c (vm_data_map_read_buffer): Was using EA not RA when reading\n-        the data from core.\n-\n-\t* device.c: Fix htab create code.\n-\n-Fri Nov 24 23:10:09 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* bits.h, bits.c (EXTRACTED): Convert to function, fix - had &&\n-        instead of &.\n-\n-\t* sim-endian.h (SWAP_N), sim-endian-n.h, sim-endian.c: How\n-        embarasing - fix yet another bug in the swap code!  Simplify\n-        everything by using more functions. Add host to big-endian byte\n-        swapping support.\n-\n-Fri Nov 24 23:10:09 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* devices.h, devices.c: delete, replaced by the files\n-        device_table.[ch] and device.[ch].\n-\t* device_tree.h, device_tree.c: ditto\n-\n-\t* device_table.h, device_table.c: New files.  Contain a table of\n-        devices.\n-\n-\t* device.h, device.c, Makefile.in, std-config.h (DEVICE_INLINE),\n-        options.c (print_options): New files.  Define the device object\n-        along with any attached properties.\n-\n-\t* device_tree.h, device_tree.c: Update to use new device object.\n-        For convenience, change the printd functions into device_tree_add\n-        functions.\n-\n-\t* psim.c (create_*_tree): Use new device_tree create functions.\n-\n-\t* corefile.h, corefile.c corefile-n.h (core_n.h): Update to use\n-        the new device.h / device_table.h interface.  Rename core_n.h to\n-        corefile-n.h to be consistent with other n files.\n-\n-\t* Makefile.in (run): add corefile-n.h to dependencies for\n-        corefile.\n-\n-\t* basics.h (device_instance), device.h, device.c, device_table.h,\n-        device_table.c: Add the concept of a device instance and operators\n-        on these instances - corresponds to ihandle in OpenBoot speak.\n-        Don't yet implement it.\n-\n-Tue Nov 14 12:27:08 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* emul_generic.h, emul_generic.c (emul_syscall_enter,\n- \temul_syscall_exit): rename from emul_enter_call /\n- \temul_exit_call. As only used by emul_do_system_call simplify\n- \tassociated code.\n-\n-\t* os_emul.h, os_emul.c, emul_generic.h: Correct and fill an\n- \tos_emul interface.\n-\n-\t* os_emul.c, emul_bugapi.h, emul_bugapi.c, Makefile.in: Add\n- \tpreliminary hooks for a kernel mode rom emulation.\n-\t\n-\t* cap.h (new), cap.c (new): Capability data base.  Some emulations\n- \tpass object identifiers (capabilities?) to/from the simulated code\n- \t(for instance the phandle in OpenBoot).  The cap object is able to\n- \tcheck/map between internal and external (target program)\n- \trepresentations of each identifier.\n-\t\n-\t* os_emul.c, emul_chirp.h, emul_chirp.c, Makefile.in: Add\n- \tpreliminary hooks for a kernel mode IEEE-1275 emulation.\n-\n-\t* cpu.h, cpu.c (cpu_create, cpu_os_emulation, cpu): Add os_emul to\n- \tlist of arguments passed in when creating a cpu.  Grant access to\n- \tthe element.\n-\n-\t* std-config.h (OS_EMUL_INLINE), options.c (print_options),\n-\tinline.h, inline.c: New to allow control over inline of\n-\tcorresponding code files.\n-\n-\t* ppc-instructions (instruction_call): Add illegal instruction to\n- \tcall the instruction-call emulation handler.\n-\t\n-\t* interrupts.c (system_call_interrupt): Call renamed\n-        os_emul_system_call function().\n-\n-\t* emul_netbsd.c: Update to interface to generic emulation.  Since\n-        all its functions are called via a table don't worry about any\n-        inline.\n-\n-\t* emul_generic.h, emul_generic.c, spa-*(delete): Remove references\n-        and code for spa, no longer to be used.\n-\n-\t* psim.c (create_chirp_device_tree): Fill out what was previously\n-        the openboot create function so that it starts to create a full\n-        OpenBoot device tree.\n-\n-Tue Nov 28 21:48:06 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* debug.h, debug.c: pte trace is made redundant by htab trace,\n-        delete it.  Add vm to list of options.  Simplify tracing output so\n-        lines are not as long.\n-\n-Tue Nov 14 12:27:08 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* events.h, events.c (event_queue_init), psim.c (psim_init): (re)\n- \tinitialize the event queue.\n-\n-\n-\n-\n-\n-\n-Tue Nov 28 13:38:26 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* sim-endian.h: Look at WORDS_BIGENDIAN to determine if the host\n-\tis big endian or little endian.  For SWAP_n, use htonl/htons if\n-\thost is little endian, not big endian and if WITH_NTOH is defined.\n-\n-\t* configure{,.in} (--enable-sim-model-issue): Instead of defining\n-\t0/1, define it to be MODEL_ISSUE_{PROCESS,IGNORE}.  Add\n-\tAC_C_BIGENDIAN to determine if the host is big endian or not.\n-\t* config.in: Regenerate.\n-\n-\t* std-config.h (WITH_MODEL_ISSUE): Default to 0.\n-\t(CURRENT_MODEL_ISSUE): Reference WITH_MODEL_ISSUE, and if that is\n-\t0, use current_model_issue.\n-\t(MODEL_ISSUE_{PROCESS,IGNORE}): Define as -1/1.\n-\n-\t* psim.c (current_model_issue): New global variable.\n-\n-\t* cpu.c (cpu_create): Use CURRENT_MODEL_ISSUE > 0 instead of\n-\tWITH_MODEL_ISSUE.\n-\t(cpu_{init,halt}): Ditto.\n-\t* mon.c (mon_print_info): Ditto.\n-\t* ppc-instructions (PPC_INSN_* macros, branch handling): Ditto.\n-\n-\t* mon.c (mon_print_info): Print instructions/second if verbose > 0,\n-\trather than > 1.\n-\n-\t* main.c (main): Set current_model_issue to MODEL_ISSUE_PROCESS if\n-\tthe -I switch is used.\n-\t* sim_calls (sim_open): Ditto.\n-\n-\t* ppc-instructions (model support): Add support for determining\n-\twhen we don't have enough writeback slots.  Add tracing for the\n-\tbeginning of each cycle.\n-\n-Mon Nov 27 17:46:33 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* mon.c: Check for whether to include sys/types.h and sys/time.h.\n-\n-\t* configure.in: Check for include files sys/types.h and\n-\tsys/time.h.\n-\t* configure: Regenerate.\n-\t* config.in: Regenerate.\n-\n-\t* cpu.h (CONST_ATTRIBUTE): Define as __attribute__((__const__)) if\n-\tnot already defined.\n-\t(cpu_system): Use CONST_ATTRIBUTE, so that when we're not inlining\n-\tthe world, the optimizer has a fair chance of CSE'ing function\n-\tcalls.\n-\t(cpu_{monitor,nr,registers,model}): Ditto.\n-\n-\t* std-config.h (MODEL_INLINE): If not defined, define as 1 if\n-\tDEFAULT_INLINE is non-zero, 0 otherwise, rather than just the\n-\tvalue of DEFAULT_INLINE.\n-\n-Fri Nov 24 11:24:34 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* lf.h (__attribute__): If not GCC and at least 2.7.0, define as\n-\tnothing.\n- \t(lf_printf): Add printf __attribute__, so the compiler will\n-\tautomatically check the format string.\n-\n-\t* configure{,.in} (--enable-sim-icache): If argument is define,\n-\tadd -R to flags passed to igen.\n-\n-\t* igen.c (stdlib.h): Include if the system supplies one.\n-\t(semantics_use_cache_struct): New global for -R flag to say\n-\tsemantics is to use the cache structure directly rather than\n-\tputting the values into local variables.\n-\t(first_undef, last_undef): New structures to remember names to\n-\t#undef if -R.\n-\t(lf_print_c_extraction): If -R and this is semantics, emit names\n-\tas #defines pointing to the cache structure, rather than loading\n-\tthe values into local variables.\n-\t(lf_print_c_semantic_function): If -R, #undef all of the names\n-\tdefined in lf_print_c_extraction.\n-\t(main): Recognize -R.\n-\n-\t* idecode_fields.h (SPR_*): Redefine spr_* macros as SPR_* to\n-\tavoid a name confict if -R passed to igen.\n-\n-\t* ppc-instructions (mfspr, mtspr): Rename spr field to SPR.\n-\t(model_data): Add field to count the various # of CRs that the\n-\tmtcrf instruction used.\n-\t(model_mon_info): Return structures counting the # of CRs that the\n-\tmtcrf instruction used.\n-\t(branches, sync instructions): Do not call model functions if\n-\tWITH_MODEL_ISSUE is 0.\n-\n-\t* mon.c (stdlib.h): Include if the system supplies one.\n- \t(mon_sort_instruction_names): New function to sort instruction\n-\tnames alphabetically.\n-\t(mon_print_info): Call qsort with mon_sort_instruction_names to\n-\tsort instruction names.  Don't abort if WITH_MODEL_ISSUE is 0.\n-\t\n-\t* debug.h (ITRACE): Make printf_filtered arguments type correct.\n-\t* idecode_expression.h (CR0_COMPARE): Ditto.\n-\t* psim.c (psim_read_register): Ditto.\n-\n-\t* igen.c (lf_print_my_prefix): Use __attribute__((__unused__)) to\n-\tsilence compiler warnings about unused automatically generated\n-\tvariables.\n-\t(lf_print_c_extraction): Ditto.\n-\t* idecode_expression.h (FPSCR_BEGIN): Ditto.\n-\n-\t* ppc-cache-rules: Define rules for making a bitmask for all\n-\tregisters.\n-\n-\t* ppc-instructions: Rewrite model specific functions to use the\n-\tbitmask of the register number, instead of using the register\n-\tpointer to get the register number, and then making the bitmask.\n-\n-Wed Nov 22 15:24:27 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* ppc-instructions (model_branches): Add conditional argument to\n-\tcount the number of times each type of conditional branch is used.\n-\t(conditional branches): Pass B0 or -1 to model_branches.\n-\t(model_mon_info): Print out conditional branch counts.\n-\t(model-data): Add support for printing out conditional branch\n-\ttypes.\n-\n-Tue Nov 21 16:31:25 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* igen.c (insn_table_load_insns): Add support for model-static for\n-\tinternal functions that should not be inlined.\n-\t(lf_print_c_semantic): Remove model_cleanup.\n-\t(gen_model_{c,h}): Ditto.\n-\n-\t* ppc-instructions: Redo model specific support once again.  Add\n-\tfloating point support to the model specific information.  Flesh\n-\tout all of the floating mutiply add/subtract instructions.  Add\n-\tbetter tracing support to the model specific information.\n-\n-Sun Nov 19 23:00:52 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* ppc-instructions (model data, model_busy): Rather than using a\n-\tbit mask for the busy units, just use a char array.  Also, only\n-\tsupport 2 function units an insn can use, rather than a loop.\n-\n-Fri Nov 17 14:08:08 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* table.c (table_entry_read): Move setting entry->line_nr to after\n-\tthe model specific fields so the line numbers for the annex are\n-\tcorrect.\n-\n-\t* cpu.c (cpu_{create,init,halt}): Check for WITH_MODEL_ISSUE\n-\tbefore calling the model functions.\n-\n-\t* debug.c (trace_descriptor): Add trace_model support.\n-\t* debug.h (trace_options): Ditto.\n-\n-\t* igen.c (gen_icache_h): Create type idecode_cache as void if not\n-\tcaching instructions.\n-\t(gen_model_{c,h}): Drop model_issue support.  Add support for\n-\tmodel_cleanup.\n-\t(lf_print_my_prefix): Initialize a const itable_index with the\n-\tcurrent index.\n-\t(lf_print_c_semantic): Call model_cleanup at the end of the\n-\tfunction to check for instructions that aren't supported yet by\n-\tthe scheduling code.\n-\t\n-\t* mon.h (count_type): New type for counters.\n-\t* mon.c: Use count_type instead of unsigned.\n-\n-\t* ppc-instructions: Redo scheduling code once again.  Make it all\n-\tinline friendly.  Instead of having general code emitted by igen,\n-\tgo the route of having each semantic routine call the appropriate\n-\tmodule.\n-\n-Thu Nov 16 09:52:26 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* table.c (table_entry_read): Allow the annex to have blank lines.\n-\n-\t* ppc-instructions: Change lines in model stuff that just have a\n-\ttab to just newline.  Add 601 support.  Document most instructions\n-\tin terms of model specific timing information.  Drop 'FUNCTION'\n-\tfrom PPC_FUNCTION_UNIT_xxx enums.  Change PPC_UNIT_UNKNOWN ->\n-\tPPC_UNIT_BAD.  Add TRACE(trace_tbd) for all data cache\n-\tinstruction.s.  Signal illegal instruciton if data cache block\n-\tinvalidate is issued from problem state.\n-\n-\t* igen.c (max_model_fields_len): New static to keep track of the\n-\tmax size for the model specific fields.\n-\t(model_c_insn): Use max_model_fields_len to size fields.\n-\t(insn_table_insert_insn): Set max_model_fields_len.\n-\t(model_table_insert): Ditto.\n-\t(gen_model_{c,h}): Model_issue is now called with a processor\n-\targument.\n-\n-\t* debug.c (trace_description): Add support for trace_tbd.\n-\n-\t* mon.c (mon_issue): Pass processor argument to model_issue.\n-\n-\t* Makefile.in: Delete all function unit support, since the newer\n-\ttable driven model support replaces it.\n-\t* cpu.{c,h}: Ditto.\n-\t* mon.c: Ditto.\n-\t* inline.{c,h}: Ditto.\n-\t* std-config.h: Ditto.\n-\t* options.c: Ditto.\n-\t* configure{,.in}: Ditto.\n-\t* Makefile.in: Ditto.\n-\t* psim.c: Ditto.\n-\t* function_unit.{c,h}: Delete these now usused files.\n-\n-\t* std-config.h (WITH_MODEL_ISSUE): Add new macro on whether to\n-\ttrace instructions in a model specific manor.\n-\t* options.c (print_options): Print it out.\n-\t* configure{,.in}: Add --enable-sim-model-issue option.\n-\t* Makefile.in: Add --enable-sim-model-issue flags.\n-\t* igen.c (lf_print_c_semantic): Add call to mon_issue here.  Check\n-\tfor WITH_MODEL_ISSUE.\n-\t* mon.c (mon_issue): Remove call to mon_issue_here.\n-\n-\t* ppc-instructions: Move branch tracing to the actual branch\n-\tinstructions, rather than testing it in model_issue.  Add code to\n-\tcode successful/unsuccessful branch predictions, and the number of\n-\tconditional branches that fell through.\n-\n-Wed Nov 15 17:32:13 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* cpu.h (cpu_model): Add declaration.\n-\n-\t* cpu.c (struct _cpu): Add model_ptr to hold model specific\n-\tinformation.\n-\t(cpu_model): Return the model internal pointer.\n-\t(cpu_{create,init,halt}): Call the appropriate model function.\n-\n-\t* inline.c (mon.c): Move include of mon.c after model.c.\n-\n-\t* mon.c (_cpu_mon): Add fields to count unaligned memory\n-\treferences.\n-\t(mon_issue): Call model_issue, not function_unit_issue.\n-\t(mon_{read,write}): Count # of unaligned memory accesses.\n-\t(mon_print_info): Switch to calling model_mon_info and\n-\tmodel_mon_info_free instead of function_unit version.  Print out\n-\tnumber of unaligned reads/writes.\n-\n-\t* {ppc-instructions,igen.c}: More global changes to add model\n-\tspecific features.\n-\n-\t* inline.{c,h}: Provide for inlining options.c.\n-\t* options.{c,h}: Ditto.\n-\t* std-config.h: Add OPTIONS_INLINE.\n-\n-Tue Nov 14 04:47:25 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* Makefile.in (devices.o, main.o): Update dependency.\n-\n-\t* igen.c (gen_model_h): Use correct variable in loop.\n-\t(gen_model_c): Use strcmp, strcasecmp.\n-\t(gen_model_c): Use EXTERN_MODEL for arrays.\n-\t(gen_model_h): Use STATIC_MODEL for arrays.\n-\t(lf_print_c_semantic_function_header): Delete unused function.\n-\n-\t* main.c (cpu.h): Include cpu.h to get model.h.\n-\n-\t* inline.h ({EXTERN,STATIC}_MODEL): Define.\n-\n-Mon Nov 13 09:14:13 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* igen.c ({insn,model}_table_fields): Spell mnemonic correctly.\n-\t(gen_itable_h,itable_c_insn): Ditto.\n-\t(model support): Move model support around, add support for\n-\tmodel-data, model-internal.  Use annex field for model-macros\n-\tnow.\n-\n-\t* configure.in (--enable-sim-inline): If --enable-sim-inline=no,\n-\talso define INLINE as nothing.\n-\t* configure: Regenerate.\n-\n-\t* std-config.h (INLINE): Rather than nuking INLINE, only define it\n-\tas __inline__ if any of the INLINE flags are non-zero.\n-\n-\t* options.c (print_options): Print out WITH_XOR_ENDAIN.\n-\n-Mon Nov 13 23:03:45 1995  Andrew Cagney   <cagneyhighland.com.au>\n-\n-\t* ppc-instructions (rfi): Add missing code.\n-\n-\t* cpu.c (cpu_get_time_base): Fix calculation of current value of\n-        time base register.\n-\n-\t* ppc-spr-table (TBL, TBU): Fix TBL/TBU entries - was confusing\n-        m[tf]tb with m[tf]spr.\n-\n-\t* ppc-instructions (mtspr, mfspr): Fix mttbl - wasn't storing\n-        lower word.\n-\n-Mon Nov 13 21:35:37 1995  Andrew Cagney   <cagneyhighland.com.au>\n-\n-\t* std-config.h (INLINE, STATIC_INLINE): Was being set to static\n-        inline..  Only problem being that with ppc-opcode-simple this gave\n-        it the chance to inline all the idecode functions with potentially\n-        disasterous results on a 16mb PC.  For moment hobble INLINE.\n-\n-\t* configure.in, std-config.h (WITH_SMP): Make that 5 processors by\n-        default ...\n-\n-\t* configure.in: Tweek flags passed to gcc for --with-sim-warnings.\n-        Firstly make them errors and secondly remove the options gcc-245\n-        doesn't reconize.\n-\n-Mon Nov 13 17:57:24 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* misc.c (zalloc), cpu.c (cpu_init), devices\n- \t(console_io_read_buffer_callback, icu_io_read_buffer_callback,\n- \tvm_io_read_buffer_callback), main.c (zalloc), mon.c (memset),\n- \tsim_calls.c (zalloc) : replace bzero() with memset().\n-\n-\t* emul_netbsd.c (write_direntries), psim.c (psim_read_register,\n- \tpsim_write_register): replace bcopy() with memcpy().\n-\t\n-Sun Nov 12 20:55:41 1995  Andrew Cagney   <cagneyhighland.com.au>\n-\n-\t* configure.in: for --disable-sim-inline (--enable-sim-inline=no),\n-        force DEFAULT_INLINE to 0 rather then trusting the std\n-        configuration.\n-\n-Sun Nov 12 20:55:41 1995  Andrew Cagney   <cagneyhighland.com.au>\n-\n-\t* igen.c (lf_print_idecode_table, idecode_table_leaf): Fix\n-        generation of switch entries in tables - treat the same as\n-        cracking/semantic functions.\n-\n-\t* igen.c (idecode_switch_end, idecode_switch_leaf): Fix generation\n-        of a boolean switch statement (field zero or non-zero).\n-\n-\t* ppc-opcode-test-1, ppc-opcode-test-2: New files.  These test the\n-        switch/table generation ability of igen.\n-\n-\t* igen.c (idecode_switch_leaf): Fix code output when a switch\n-        statement needs to look up a table.\n-\n-\t* igen.c (idecode_declare_if_switch): New function called from\n-        gen_idecode_c - need to declare any idecode switch functions\n-        before they are used in idecode tables.\n-\n-\t* igen.c (lf_print_c_cracker_function, idecode_crack_leaf,\n-        idecode_crack_insn): Add is_inline_function argument to code\n-        printing cracker functions which indicates if STATIC_IDECODE or\n-        STATIC_INLINE_IDECODE should be used for definition.  For\n-        idecode_crack_insn (which implies not duplicating/expanding) don't\n-        declare function as inline - we assume that the only time this is\n-        code is generated is when things are being tested.  For\n-        idecode_crack_leaf, make static (instead of INLINE) if the\n-        instructions parent is a table as function will always be called\n-        via a table.\n-\n-\t* igen.c (idecode_expand_if_switch): Declare as STATIC_IDECODE not\n-        STATIC_INLINE_IDECODE. Only the outermost idecode switch will be\n-        called directly, all others are called via a table.\n-\n-\t* igen.c (lf_print_semantic_function_header, semantics_h_leaf,\n-        semantics_h_insn, semantics_h_function,\n-        lf_print_c_semantic_function, semantics_c_function): Add\n-        is_inline_function argument to lf_print_semantic_function_header\n-        to indicate if an inline or static function declaration/definition\n-        should be output.  Depending on situtation call accordingly:\n-        functions (not instruction semantic routines) are always inline;\n-        Semantic routines are made inline when there is no icache (cache\n-        will contain the function address) and are duplicating (see above)\n-        and the parent of the instruction is a switch statement.\n-\n-\t* igen.c (opcode_field_new): Delete.  Code changed to use ZALLOC\n-        and moved to insn_table_find_opcode_field.\n-\n-\t* table.c (table_open): Fix typo (nr_model_fields vs nr_fields).\n-\n-\t* igen.c (model_c_insn): Suggestion - document the name of the\n-        instruction on each line of the instruction model table.\n-\n-Fri Nov 10 00:44:38 1995  Andrew Cagney   <cagneyhighland.com.au>\n-\n-\t* emul_netbsd.c (do_ioctl): Cleanup compilation.\n-\n-\t* sim_callbacks.h (__attribute__): Only define if not defined (was\n-        already defined on NetBSD host).\n-\n-Wed Nov  8 21:49:52 1995  Andrew Cagney   <cagneyhighland.com.au>\n-\n-\t* std-config.h (WITH_XOR_ENDIAN), configure.in, Makefile.in: New\n-        macro, indicates if the PowerPC's horrible XOR endian mode should\n-        be suported.  Add to configure and make.\n-\n-\t* vm_n.h (vm_data_map_read_N, vm_data_map_write_N), vm.c\n-        (vm_instruction_map_read): If XOR endian, xor the address\n-\twith a value from an xor table (indexed by size of access).\n-\n-\t* vm.c (vm_synchronize_context), cpu.c (cpu_synchronize_context):\n-        set up xor table to xor if there is a conflict between the\n-        CURRENT_TARGET_ENDIAN and the endian indicated in the MSR.  Move\n-        check of suported change of endian mode from cpu.c to vm.c.\n-\n-\t* vm.c (vm_data_map_write_buffer, vm_data_map_read_buffer):\n-        Hopefully added correct hack to handle XOR endian mode.\n-\n-\tFIXME: If NONSTRICT alignment and XOR ENDIAN and MSR indicates\n-        little endian mode, the model accepts miss aligned transfers.\n-\n-\tFIXME: Need to create an `init' device that, during\n-        initializatioin for XOR mode, it mushes (XOR address) all the dma\n-        data before passing it on to the core for storage. Just like the\n-        real thing really.\n-\n-Wed Nov  8 21:49:52 1995  Andrew Cagney   <cagneyhighland.com.au>\n-\n-\t* devices.c (halt_io_write_buffer_callback): Use value written to\n-        halt device to determine exit status.  Thus allowing\n-        success/failure of OEA tests.\n-\n-Wed Nov  8 00:10:38 1995  Andrew Cagney   <cagneyhighland.com.au>\n-\n-\t* ppc-instructions (icbi): If icache present flush it.\n-\n-Tue Nov  7 23:36:31 1995  Andrew Cagney   <cagneyhighland.com.au>\n-\n-\t* devices.c (htab_init_callback): Add code to create htab/pte.\n-\n-\t* devices.c (dma_file, file_init_callback, htab_init_callback):\n-        New function - Dma the named file into memory at the specified\n-        address.  Use.\n-\n-\t* device_tree.h, device_tree.c (scand_*): New functions.\n-\n-Tue Nov  7 23:36:31 1995  Andrew Cagney   <cagneyhighland.com.au>\n-\n-\t* filter_filename.c, Makefile.in: Change so that only dependant on\n-        a very limited nr of files.  Stops an unnecessary dependency.\n-\n-Tue Nov  7 15:44:33 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* core.c (core_map_find_mapping): Use cpu_halt rather than error\n- \tto abort an access to an undefined address.\n-\n-Sun Nov 12 07:58:09 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* igen.c (model_table_insert_{macro,function}): New functions.\n-\t(insn_table_load_insns): Call them.\n-\t(gen_model_h): Move section emiting model-macros to be first.\n-\t(model_{c,h}_function): New functions cloned from semantic\n-\tfunctions to print out the prototype and function for\n-\tmodel-functions.\n-\t(gen_model_{c,h}): Print out model-functions.\n-\n-\t* ppc-instructions (model_{start,halt,print_info}): Add dummy\n-\tmodel-functions.\n-\n-\t* options.c (print_options): Print out WITH_{,DEFAULT_}MODEL, not\n-\tWITH_PPC_{,DEFAULT_}_MODEL.\n-\t(options_ppc): Delete now unused function.\n-\t(cpu.h): Include cpu.h, not just basics.h.\n-\n-\t* std-config.h (WITH_{,DEFAULT_}MODEL): Define.\n-\n-\t* igen.c (model_macros, last_model_macro): New statics to keep\n-\ttrack of macros to go in model.h.\n-\t(insn_table_load_insns): Add model-macros to model_macros linked\n-\tlist.\n-\t(model_table_fields): Add field for printable name.\n-\t(gen_model_h): If there are model macros defined, print them out.\n-\tPrint out DEFAULT_MODEL as the first model if there any models\n-\tspecified, otherwise MODEL_NONE.  Print out external decl for\n-\tcurrent_model.  Print out decl for model_set.\n-\t(gen_model_c): Add function model_set.  Switch to use printable\n-\tname for the model, not the internal identifier used.\n-\n-\t* psim.c (current_model): New global variable.\n-\n-\t* ppc-instructions: Add macros for flag defines.  Switch first\n-\tmodel so 604 is first.\n-\n-\t* main.c (main): Call model_set, not function_unit_model.\n-\t* sim_calls.c (sim_open): Ditto.\n-\t* sim_calls.c, Makefile.in: sim_calls.c now includes cpu.h.\n-\n-Sat Nov 11 07:27:41 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* mon.h (mon_events): New enumeration for other events we want to\n-\thandle.\n-\t(mon_event): Add declaration for function.\n-\n-\t* mon.c (mon_event): New function.\n-\t(mon_print_info): Print icache misses.\n-\n-\t* psim.c (run_until_stop): Monitor icache misses.\n-\n-\t* configure.in (--enable-sim-inline): Fix typos in handling comma\n-\tseparated inline options.\n-\t(--enable-sim-icache): Echo icache size.\n-\t* configure: Regenerate.\n-\n-\t* igen.c (semantics_h_print_function): Emit STATIC_SEMANTICS\n-\tinstead of INLINE_SEMANTICS so that the compiler won't keep all of\n-\tthe semantic functions as inline RTL, given that the address of\n-\tthe function is taken which forces outline calls anyway.\n-\t(lf_print_c_semantic_function_header): Ditto.\n-\t(gen_semantics_h): Define STATIC_SEMANTICS as nothing if not\n-\tdefined.\n-\t(lf_print_c_cracker_function): Emit STATIC_IDECODE instead of\n-\tSTATIC_INLINE_IDECODE.\n-\t(gen_idecode_c): Define STATIC_IDECODE if not defined.\n-\t(gen_model_h): Use #ifdefs to define types to hold model units,\n-\tcycles, and flags.\n-\t(model_table_insert): Add a sentinel functional unit at the end to\n-\tsimplify loop processing.\n-\t(model_c_insn): Use <function-unit>_SENTINAL instead of 0 for any\n-\tinstruction not specifing a function unit for the current model.\n-\t(gen_model_{c,h}): Provide bounds for model_time_mapping.\n-\t\n-\t* inline.h (STATIC_SEMANTICS): Define to be static if\n-\tSEMANTICS_INLINE is defined.\n-\t(STATIC_IDECODE): Define to be static if IDECODE_INLINE is\n-\tdefined.\n-\t\n-\t* options.c (print_options): Fix typo.\n-\n-Fri Nov 10 06:39:46 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* configure.in (--enable-sim-{opcode,config}): Use $srcdir when\n-\tcheck for the existence of files.\n-\t* configure: Regenerate.\n-\n-\t* table.c (table): New field nr_model_fields.\n-\t(table_open): New parameter nr_model_fields.\n-\t(table_entry_read): Parse model fields that begin with a '*' after\n-\teach instruction.\n-\t* igen.c, dgen.c: Change callers of table_open.\n-\n-\t* igen.c: Add support for dumping model specific information in\n-\tmodel.h and model.c.\n-\t(insn_field_name): Delete unused array.\n-\t(global variables): Make global variables static, so we can tell\n-\twhen they are no longer used.\n-\t(cache_semantic_actual): Delete unused variable.\n-\t(insn_table_load_insns): If the insn is really a machine model,\n-\tcall model_table_insert instead of other processing.\n-\t(model_table_insert): New function to handle defining the\n-\tfunctional units of a particular machine model.\n-\t(insn_table): Add last_function field so we can add functions at\n-\tthe end.\n-\t(insn_table_insert_function): Use last_function field when\n-\tappending new function.\n-\n-\t* ppc-instructions: Add a few model specific information for 603,\n-\t603e, and 604 for testing purposes.\n-\t\n-\t* table.h (table_model_entry): New linked list to hold model\n-\tspecific information, one per line.\n-\t(table_entry): Add model_first, model_last fields.\n-\n-\t* configure.in (--enable-sim-inline): If gcc is found and\n-\t--enable-sim-inline is not specified, defaine DEFAULT_INLINE to 1,\n-\tnot 2.\n-\t(--enable-sim-reserved-bits): New switch to check whether reserved\n-\tbits are set in the instruction.\n-\t(--enable-sim-opcode): Make complex the default.\n-\t(all switches): Add appropriate checks and error messages.\n-\t* configure: Regenerate.\n-\n-\t* Makefile.in (RESERVED_CFLAGS): New variable set by\n-\t--enable-sim-reserved-bits.\n-\t(CONFIG_CFLAGS): Include RESERVED_CFLAGS.\n-\t(BUILT_SRC): igen now generates model.c and model.h.\n-\t(LIB_OBJ): Include table.o.\n-\t(tmp-igen): Add -m/-M options to write model.c/model.h.\n-\t(model.o): New object.\n-\t(CPU_H): Include model.h.\n-\n-\t* cpu.h: Include model.h.\n-\n-\t* std-config.h (WITH_RESERVED_BITS): Define.\n-\t(MODEL_INLINE): Ditto.\n-\n-\t* options.c (print_options): Print out WITH_RESERVED_BITS.\n-\n-Thu Nov  9 12:22:15 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* configure.in: If --silent, don't output information messages.\n-\t* configure: Regenerate.\n-\n-\t* configure.in (--enable-sim-alignment): Fix typo in specifing non\n-\tstrict alignment.\n-\t(--enable-sim-switch): Make default on.\n-\t(--enable-sim-duplicate): Make default on.\n-\t(--enable-sim-smp): Make default 0.\n-\t(--enable-sim-mon): Don't set sim_float if not set.\n-\t(--enable-sim-inline): If gcc is found and --enable-sim-inline is\n-\tnot specified, define DEFAULT_INLINE to be 2.\n-\t(all --enable-sim-* rules): Echo rules set to non empty to file\n-\tdescriptor 6.\n-\t* configure: Regenerate.\n-\n-\t* options.c (options_env): Fix typo if WITH_ENV is 0.\n-\t(print_options): Print GCC compiler version if available and\n-\tdate/time options was compiled.  If OPCODE_RULES, IGEN_FLAGS,\n-\tand/or DGEN_FLAGS are defined, print them.\n-\n-\t* Makefile.in (all link actions): Pass SIM_CFLAGS as well as\n-\tCFLAGS.\n-\t(options.o): Compile options.o with OPCODE_RULES, IGEN_FLAGS, and\n-\tDGEN_FLAGS defined, so they can be printed out.\n-\n-\t* igen.c (lf_print_c_validate): Check for WITH_ASSERT, so that\n-\tthis test can be compiled away if the user really wants a fast\n-\tsimulator by not doing assertion failures.\n-\n-Wed Nov  8 13:19:47 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* options.c: New file to print out all of the WITH_ options.\n-\t* options.h: New include file to declare print_options.\n-\t* debug.h (trace_options): Add trace_opts to call print_options.\n-\t* debug.c (trace_description): Add trace_opts support.\n-\t* main.c (main): If user requested options, print them.\n-\t* sim_calls.c (sim_open): Ditto.\n-\t\n-\t* igen.c (opcode_field_new): Add void to make it a proper prototype.\n-\n-\t* emul_generic.c (emul_enter_call): Make printf_filtered arguments\n-\ttype correct.\n-\t* emul_netbsd.c (do_kill): Ditto.\n-\t* registers.c (registers_dump): Ditto.\n-\t* vm.c (om_translate_effective_to_real): Ditto.\n-\t* vm_n.h (vm_data_map_read_N): Ditto.\n-\t(vm_data_map_write_N): Ditto.\n-\t* devices.h (DTRACE_INIT): Ditto.\n-\t(DTRACE_{ATTACH,DETACH}_ADDRESS): Ditto.\n-\t(DTRACE_IO_{READ,WRITE}_BUFFER): Ditto.\n-\t(DTRACE_DMA_{READ,WRITE}_BUFFER): Ditto.\n-\t* devices.c (update_for_binary_section): Ditto.\n-\t(write_stack_arguments): Ditto.\n-\t(stack_ioctl_callback): Ditto.\n-\t* device_tree.c (device_tree_add_passthrough): Ditto.\n-\t(device_tree_{add,find}_device): Ditto.\n-\t(device_tree_{add,find}_integer): Ditto.\n-\t(device_tree_find_{string,boolean}): Ditto.\n-\t(device_tree_init{,_device}): Ditto.\n-\t(device_tree_dump): Ditto.\n-\t* sim_calls.c (sim_{read,write}): Ditto.\n-\t(sim_{fetch,store}_register): Ditto.\n-\t(sim_stop_reason): Ditto.\n-\n-\t* sim_callbacks.h (printf_filtered): Declare with attribute\n-\tprintf, so we can enable format checks.\n-\n-\t* devices.c (console_io_{read,write}_buffer_callback): Cast swtich\n-\targument to int, since ANSI doesn't allow long switch values.\n-\t* emul_netbsd.c (do___sysctl): Ditto.\n-\n-\t* emul_netbsd.c (do___sysctl): Fix up printf call.\n-\t\n-\t* corefile.c (core_translate): Don't do arithmetic with void *\n-\tpointers.  Cast to char * first.\n-\t\n-\t* function_unit.c (FUNC_{LOAD,STORE}): Rename from {LOAD,STORE}\n-\tand change all uses.\n-\n-\t* Makefile.in ({FUNC,MODEL,WARNING}_CFLAGS): New flags set by\n-\tconfigure --enable switches.\n-\t(CONFIG_CFLAGS): Include FUNC_CFLAGS and MODE_CFLAGS.\n-\t(.c.o): Include WARNING_CFLAGS.\n-\t(CPU_H): Include function_unit.h.\n-\t(LIB_OBJ): Include function_unit.o.\n-\t(BUILT_SRC_WO_CONFIG): Split from BUILT_SRC and do not include\n-\tconfig.h or ppc-config.h.\n-\t(BUILT_SRC): Include BUILT_SRC_WO_CONFIG, config.h and\n-\tppc-config.h.\n-\t(filter_filename.o): Include config.h/ppc-config.h dependencies.\n-\t(idecode.o, semantics.o, psim.o): Specify CC line without\n-\tWARNING_CFLAGS so that we don't get all of the unused variable\n-\twarnings that are generated.\n-\t(function_unit.o): Add rule to build.\n-\t(main.o, sim_calls.o): Add function_unit.h, itable.h dependencies.\n-\t(mon.o): Include mon.c dependency.\n-\t(TAGS): Depend on BUILT_SRC.\n-\t(clean): Don't delete config.h or ppc-config.h\n-\n-\t* basics.h (sim_callbacks.h): Move include after the include of\n-\tconfig.h and ppc-config.h.\n-\n-\t* bits.{h,c} (ROTL32,ROTL64): Move these functions to bits.c.  Add\n-\tsupport for BITS_INLINE to inline these.  Add declarations to\n-\tbits.h.\n-\n-\t* configure.in (--enable-sim-warnings): Add new option to specify\n-\tcompiler warnings for all modules except idecode.o and semantics.o\n-\twhich have lots of unused variables because they are machine\n-\tgenerated.\n-\t(--enable-sim-function-unit): New switch to configure whether\n-\tfunction unit support is compiled in or not.\n-\t(--enable-sim-{,default-}mode): New switches to control which cpu\n-\tmodel is used.\n-\t* configure: Regenerate.\n-\n-\t* corefile.c (core_attach_address_callback): Delete unused\n-\tvariable device_address.\n-\n-\t* cpu.c (struct _cpu): Add function unit pointer field func_unit.\n-\t(cpu_create): If WITH_FUNCTION_UNIT, call function_unit_create.\n-\t(cpu_init): If WITH_FUNCTION_UNIT, call function_unit_init.\n-\t(cpu_halt): If WITH_FUNCTION_UNIT, call function_unit_halt.\n-\t(cpu_function_unit): New function to return func_unit field.\n-\n-\t* cpu.h (function_unit.h): Include new include file.\n-\t(cpu_function_unit): Declare.\n-\n-\t* debug.c (stdlib.h): Test HAVE_STDLIB_H, not HAVE_STDLIB.\n-\t(config.h): Include config.h.\n-\n-\t* devices.c (icu_io_write_buffer_callback): Delete unused variable\n-\tsystem.\n-\n-\t* emul_generic.c (emul_exit_call): Print out status value.\n-\n-\t* emul_netbsd.c (do_read): Delete unused variable nr_moved.\n-\n-\t* filter_filename.h (includes): Include config.h, ppc-config.h,\n-\tnot basics.h.\n-\n-\t* inline.c: Include bits.c if BITS_INLINE.  Include\n-\tfunction_unit.c if FUNCTION_UNIT_INLINE.\n-\n-\t* inline.h (INLINE_BITS): Define if BITS_INLINE.\n-\t(INLINE_FUNCTION_UNIT): Define if FUNCTION_UNIT_INLINE.\n-\n-\t* interrupts.c (instruction_storage_interrupt): Delete unused\n-\tvariable nia.\n-\n-\t* lf.h (config.h): Include config.h.\n-\n-\t* main.c (includes): Include function_unit.c.  If HAVE_UNISTD_H,\n-\tinclude unistd.h.\n-\t(usage): Update for -m model, -i, and -I options.\n-\t(main): Delete unused variables stack_pointer and i.  Add support\n-\tfor -i, -m model arguments.  Call psim_print_info with verbose ==\n-\t1 if -i, and verbose == 2 if -I.\n-\n-\t* mon.c (stdio.h): Include stdio.h to pick up sprintf prototype.\n-\t(mon_issue): Call function_unit_issue if function units are\n-\tsupported.\n-\t(mon_print_info): Take psim * argument.  Print out information\n-\tfrom function_unit if available.  Move read/write stats to always\n-\tprint, instead of printing if verbose > 1.  Fix up plural\n-\tvs. singular usage.\n-\n-\t* mon.h (mon_print_info): Update prototype.\n-\n-\t* psim.c (current_ppc_model): Add global variable.\n-\t(psim_print_info): Pass system argument to mon_print_info.\n-\n-\t* sim_calls.c (function_unit.h): Include.\n-\t(sim_open): Add support for -i and -m model options.  If -i call\n-\tpsim_print_info with verbose == 1, if -I, with verbose == 2.\n-\t(sim_resume): Delete unused variable program_counter.\n-\n-\t* std-config.h (WITH_FUNCTION_UNIT): Define.\n-\t(ppc_model): Add enumeration giving all PowerPC models currently\n-\tknown about.\n-\t({WITH,CURRENT}_PPC_MODEL): Define.\n-\t(FUNCTION_UNIT_INLINE): Define.\n-\n-\t* table.c (config.h): Include config.h.\n-\n-\t* vm.c (om_virtual_to_real): Print pte_word_{0,1} so the compiler\n-\tdoesn't complain that they're unused.\n-\n-\t* vm_n.h (vm_data_map_read_N): Delete unused variable rval.\n-\t\n-Mon Nov  6 23:15:54 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* sim-endian.c (ppc-endian.c), sim-endian.h (ppc-endian.h):\n-        renameed.  These files are target independant.\n-\t* Makefile.in, basics.h: update for new name.\n-\n-\t* sim-endian.h (SWAP_N), sim-endian.c (_SWAP_1): Rename existing\n-        SWAP_<N> to _SWAP_<N> so that sim-endian.h can contain SWAP_N\n-        macro's as required.\n-\n-\t* sim-endian.c, sim-endian-n.h (new file): Move endian code into a\n-        debugable header file.\n-\n-\t* ppc-instructions (Byte-Reverse): Enable byte reverse\n-        instructions using SWAP_N macros.\n-\n-Mon Nov  6 10:39:28 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* Makefile.in (config.status): Remove references to config.make\n-\tand config.hdr.\n-\n-\t* config.{make,hdr}: Delete, no longer used.\n-\t* build-psim: Ditto.\n-\n-Mon Nov  6 20:49:56 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* sim_calls.c (sim_open): Fix parsing of `target sim' options.\n-\n-\t* device_tree.c (device_tree_add_string): Wasn't saving the value\n- \tof the string being entered into the tree.\n-\n-\t* psim.c (create_filed_device_tree): Not terminating string device\n- \tnames with a null.\n-\t\n-\t* psim.c (psim_create): Use `env' instead of\n- \t`environment-architecture' to be consistent with configure.\n-  \tReconize user/uea, virtual/vea and operating/oea.\n-\n-Sat Nov  4 12:29:45 1995  Fred Fish  <fnf@cygnus.com>\n-\n-\t* core.c:  Rename to corefile.c\n-\t* core.h:  Rename to corefile.h\n-\t* inline.c: Include corefile.h, renamed from core.h.\n-\t* cpu.h: Include corefile.h, renamed from core.h\n-\t* vm.c: Include corefile.h, renamed from core.h\n-\t* corefile.c: Include corefile.h rather than core.h\n-\t* README.psim (KNOWN PROBLEMS): Change core.* references to corefile.*\n-\treferences.\n-\t* Makefile.in (CPU_H): Change core.h to corefile.h\n-\t(vm.o):  Change dependency to corefile.h\n-\t(LIB_SRC): Change core.c to corefile.c.\n-\t(LIB_OBJ): Change core.o to corefile.o.\n-\t(corefile.o):  Change dependencies to corefile.c, corefile.h.\n-\n-Fri Nov  3 11:37:24 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* ppc-instructions (data cache instructions): Make all data cache\n-\tinstructions nops instead of invalid instructions.\n-\n-\t* Makefile.in (CONFIG_CFLAGS): Add ALIGNMENT_CFLAGS and\n-\tTIMEBASE_CFLAGS which weren't included.\n-\n-Thu Nov  2 08:54:04 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* Makefile.in: Uncomment built file dependencies.\n-\t\n-\t* configure.in: Rewrite --enable-sim switch handling to use the\n-\tautoconf builtins so it works correctly if the configure or\n-\tMakefile.in files are modified and make decides to rebuild\n-\tMakefile.  Also document all of the --enable-sim switches\n-\tsupported.  Check whether getrusage and sys/resource.h are\n-\tsupported.\n-\t* config.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* Makefile.in: Add support for all of the variables set with\n-\t--enable-sim switches.\n-\n-\t* Makefile.in (clean): make clean now removes all built sources as\n-\twell.\n-\t\n-\t* cpu.c: Use HAVE_STRING_H, HAVE_STRINGS_H, HAVE_UNISTD_H,\n-\tHAVE_TIME_H, HAVE_SYS_TIMES_H, HAVE_SYS_RESOURCE_H defined in\n-\tthe generated config.h.\n-\t* debug.c: Ditto.\n-\t* device_tree.c: Ditto.\n-\t* devices.c: Ditto.\n-\t* dgen.c: Ditto.\n-\t* emul_netbsd.c: Ditto.\n-\t* igen.c: Ditto.\n-\t* lf.c: Ditto.\n-\t* misc.c: Ditto.\n-\t* psim.c: Ditto.\n-\t* registers.c: Ditto.\n-\t* sim_calls.c: Ditt.\n-\t* table.c: Ditto.\n-\n-\n-\t* main.c (main): Call psim_print_info with verbose == 2.\n-\n-\t* mon.c (mon_print_info): Align the cpu number and number of\n-\tinstructions fields.  Do not print an instruction category if the\n-\tCPU did not execute any of those instructions.  Print out number\n-\tof reads and writes.  If getrusage is supported, print out number\n-\tof simulated instructins per second.\n-\t\n-\t* configure.in: Add support for --enable-sim-opcode=stupid.\n-\t* configure: Regenerate.\n-\n-Wed Nov  1 23:46:59 1995  Andrew Cagney   <cagney@highland.com.au>\n-\n-\t* std-config (INLINE_DEVICE_TREE): Don't inline either of\n-        device_tree.c or devices.c.  There is no significant gain.\n-\n-\t* configure.in, Makefile.in: add --enable-sim-icache=[0-9]* and\n- \tIGEN_ICACHE macro.\n-\t\n-Wed Nov  1 23:46:59 1995  Andrew Cagney   <cagney@highland.com.au>\n-\n-\t* igen.c (main), misc.h (target_a2i, i2target), misc.c: Add\n-        functions to convert between target and igen internal bit numbers.\n-        Make IO go through these functions. Add -b (bit size) and -h (high\n-        bit nr) options to igen.  Typical usage would be: ./igen -b 16 -h\n-        15 for a 16 bit instruction format with the msb given a number 15.\n-\n-Wed Nov  1 22:17:32 1995  Andrew Cagney   <cagney@highland.com.au>\n-\n-\t* dgen.c (main): Was outputting optarg even when it was NULL.\n-\n-Tue Oct 31 23:48:33 1995  Andrew Cagney   <cagney@highland.com.au>\n-\n-\t* vm_n.h (vm_data_map_load_N, vm_data_map_store_n), debug.h,\n-        debug.c: Add tracing of load/store unit (virtual) with -t\n-        load-store.\n-\n-Tue Oct 31 21:44:01 1995  Andrew Cagney   <cagney@highland.com.au>\n-\n-        * std-config.h (WITH_ENVIRONMENT): Add USER_ENVIRONMENT which does\n-        not include things such as the time base and events.\n-\n-\t* interrupt.c, sim_calls.c, cpu.h, vm.c, configure.in: Add UEA to\n- \tall environment switches for above.\n-\n-\t* psim.c (psim_create): ditto - new device tree node name is\n-        /options/environment-architecture with values user, virtual and\n-        operating.\n-\n-Tue Oct 31 21:31:32 1995  Andrew Cagney   <cagney@highland.com.au>\n-\n-\t* ppc-opcode-stupid: Third example of use of opcode table - this\n-        one expands all mtspr/mfspr and branch instructions.  Appears to\n-        give about a 10% gain in performance if everything enabled.  Also\n-        takes about 150mb of swap to build.\n-\n-Wed Nov  1 10:49:48 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* emul_netbsd.c (do_exit): Print arguments and close parenthesis\n-\tif tracing, since exit doesn't go through emul_exit_call.\n-\t(do_read): Print arguments if tracing.\n-\t(do_write): Ditto.\n-\t(do_open): Ditto.\n-\t(do_break): Ditto.\n-\t(do_kill): Ditto.\n-\t(do_dup): Ditto.\n-\t(do_sigprocmask): Replace trace with printing arguments if\n-\ttracing.\n-\t(do_ioctl): Print arguments if tracing.\n-\t(do_umask): Ditto.\n-\t(do_dup2): Ditto.\n-\t(do_fcntl): Ditto.\n-\t(do_gettimeofday): Ditto.\n-\t(do_getrusage): Ditto.\n-\t(do_fstatfs): Ditto.\n-\n-\t* filter_filename.c: New file to provide filter_filename to strip\n-\tthe directory prefix from a file.\n-\t* filter_filename.h: New include file to declare filter_filename.\n-\n-\t* debug.h: Include filter_filename.h.\n-\t(TRACE,DTRACE,ERROR): Use filter_filename on __FILE__.\n-\n-\t* misc.h: Include filter_filename.h.\n- \t(ASSERT): Use filter_filename on __FILE__.\n-\n-\t* igen.c (lf_print_my_prefix): Use filter_filename on the filename\n-\targument.\n-\n-\t* Makefile.in: Add filter_filename support.\n-\n-\t* ppc-instructions (dcbi, icbi): Make these NOPs rather than\n-\tinvalid instructions.\n-\n-\t* configure.in: Add support for more --enable-sim-* switches.\n-\tUse config.make and config.hdr to write to Makefile and config.h\n-\trespectively.  Don't rewrite Makefile, just append to it.\n-\t* configure: Regenerate.\n-\t* config.{make,hdr}: New shell scripts.\n-\t\n-\t* Makefile.in: Remove all variables set by configure.in.\n-\t(psim.o): Depend on $(BUILT_SRC) also.\n-\n-\t* emul_netbsd.c (do_gettimeofday,do_getrusage): When comparing an\n-\tinteger, use 0, not NULL.\n-\n-Tue Oct 31 15:20:04 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* configure.in: Add support for --enable-sim-inline,\n-\t--enable-sim-bswap, --enable-sim-cflags, --enable-sim-complex,\n-\t--enable-sim-switch, --enable-sim-duplicate, --enable-sim-filter,\n-\tand --enable-sim-endian switch to control various Makefile\n-\tvariables.\n-\t* configure: Regenerate from configure.in.\n-\t* Makefile.in: Add various Make variables that the various\n-\tswitches alter.\n-\n-\t* std-config.h (DEFAULT_INLINE): Don't set this to 2 if using GCC\n-\tand optimizing by default.\n-\n-Fri Oct 27 19:26:27 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* bits.h (ROTL32, ROTL64): Were functions, made them macros, now\n- \tmake them functions again.  Appears 2.6.3 is confused by just a\n- \tmacro.\n-\n-Thu Oct 26 18:31:58 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* ppc-endian.c (SWAP_8): Fix 8 byte swap!\n-\n-\t* psim.c (psim_create): Not correctly checking that runtime\n- \tconfiguration of things like ENDIAN, ENVIRONMENT and ALIGNMENT\n- \tmatched the compiled in ones.\n-\n-\t* debug.h (ITRACE), igen.c: Tidy up more tracing flags -\n- \ttrace_semantics is now different to trace_idecode, the former\n- \tchecks the cache.\n-\t\n-Tue Oct 24 21:54:13 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* ppc-instructions (mtsrin): Missing instruction\n-\t* ppc-instructions (mfsrin): Missing instruction\n-\t* ppc-instructions (eieio): Missing instruction\n-\n-Tue Oct 24 20:55:29 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* build-psim: New shell script - see internals for usage,\n- \tsimplifies the process of building custom simulators.\n-\n-Mon Oct 23 23:48:59 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* std-config.h (SEMANTICS_INLINE): Tidy up notes on each of the\n-        INLINE macros.  Make SEMANTICS_INLINE == 1 if DEFAULT_INLINE == 2.\n-        Don't use DEFAULT_INLINE to define REGISTERS_INLINE DEVICES_INLINE\n-        DEVICE_TREE_INLINE or INTERRUPTS_INLINE as none of these are on\n-        the instruction or data critical paths.\n-  \t\n-\t* FIXME: devices.c/emul_netbsd.c would benefit (slightly) from\n- \tthe inclusion of device_tree.c/emul_generic.c.\n-\n-Mon Oct 23 00:31:50 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* os_emul.[hc], emul_generic.[hc], emul_netbsd.[hc]: replace\n-        system.[hc].  Start of suport for multiple emulations and\n-        emulation state (os_emul object).\n-\n-\t* emul_generic.[hc]: Start of code to implement proper system call\n-\ttracing (from spy).\n-\n-Sun Oct 22 21:33:51 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* cpu.h, cpu.c (cpu_init): New function, zero the registers before\n-        the processor is started. Fixes problem of registers being\n-        undefined when restarting from within gdb.\n-\n-\t* cpu.h, cpu.c (cpu_flush_icache): New function, flushes the\n-        instruction cache (if present).  Fixes problem of cpu caching gdb\n-        breakpoint instructions.\n-\n-\tFIXME: PSIM sometimes aborts calling error(), it should instead\n- \tcall sim_error() say which takes care of housekeeping such as\n- \tsaving the CIA before calling error.\n-\t\n-\t* NOTE: cpu_flush_cache() instead of cpu_synchronize_context() is\n- \tused when restarting a simulation because the latter has the\n- \tunwanted side effect (well I as a kernel hacker think it is) of\n- \tperforming an isync when the instruction stream doesn't contain\n- \tone.\n-\n-Sun Oct 22 19:27:48 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* mon.h (new), mon.c (new), std-config.h (WITH_MON): Performance\n-        monitoring module. Counts both instructions issued and\n-        load/stores.\n-\n-\t* NOTE: mon does not contain to count instruction loads as this\n- \tinformation is already available from the mon_issue() hook.\n-\n-\t* igen.c (lf_print_c_semantic), vm_n.h: Add counting code.\n-\n-\t* psim.h, psim.c (psim_create), cpu.h, cpu.c (cpu_create): Attach\n-        a common monitor to each of the cpus. Delete\n-        cpu_increment_number_of_insns() and cpu_get_number_of_insns()\n-        replaced by copied code in mon.[hc].\n-\n-Sun Oct 22 18:42:45 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* sim_calls.c, main.c, psim.c (psim_create): always create\n-        `WITH_SMP' cpus.  The actual number of CPU's active in a\n-        simulation run is taken from the device node: /init/smp (an\n-        integer). WITH_SMP changed to 2 (remember to put it back to 0).\n-\n-Fri Oct 20 17:26:54 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* system.c: More system call emulation.  If code appears NetBSD\n- \tspecific, make conditional to being compiled on a NetBSD system\n- \t(sigh).\n-\n-Wed Oct 18 23:02:20 1995  Andrew Cagney  <cagney@highland.com.au>\n-\t\n-\t* Makefile.in, gen.c(delete), igen.c(new), dgen.c(new),\n- \tlf.[ch](new), table.[ch](new): Split into two generators - igen\n- \tthat outputs the instruction tables and dgen that outputs the spr\n- \ttables.  Add -f (filter out) flag to igen to filter out certain\n- \tinstructions (ex 64 bit ones) from the created tables.  Include\n- \t$(LIBIBERTY_LIB) in link options in case host lacks some libc\n- \tfunctions.\n-\n-\t* NOTE: igen, since it was originally written for the\n- \tPowerPC/RS6000, things the MSB is 0 and the LSB is 63{31}.\n-\t\n-\t* Makefile.in, std-config.h, ppc-cache-rules(new),\n- \tppc-opcode-complex(new), ppc-opcode-simple(new): (for igen) Create\n- \tcache-rule and opcode-rule tables from macros found std-config.h.\n- \tDelete corresponding macro's from std-config.h.\n-  \t\n-\t* igen.c (gen_itable_c, gen_itable_h), Makefile.in: code to output\n- \tan table of all the instructions.  Code to output a type\n- \tenumerating all the instructin names.\n-\n-\t* igen.c(lf_print_c_semantic): Move call to increment instruction\n- \tcounter so that it occures _after_ the instruction has been fully\n- \tvalidated, was double counting illegal/invalid instructions.  Add\n- \tconditional so only compiled in when WITH_PROFILE enabled (enabled\n- \tby default).\n-\t\n-\t* igen.c, cpu.h, cpu.c(cpu_increment_number_of_insns): Include\n- \titable.h, count individual instruction types not just total,\n- \tadjust reporting functions to output this.\n-\t\n-\t* ppc-instructions (64 bit Load Doubleword with Update Indexed):\n- \tHad 32./ instead of 31./\n-\n-\t* ppc-instructions (64 bit Store Double Word Conditional Indexed):\n- \tbitrot - updated to use newer CR register operators.\n-\n-\t* ppc-instructions (64bit Floating Convert from Integer\n- \tDoubleword): Correct call to Round_Float().\n-\n-Mon Oct 16 00:31:20 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* basics.h: #include \"sim_callbacks.h\" earlier so that its\n- \tprototypes are declared in all other header files.\n-\n-\t* bits.h, bits.c, idecode_expression.h (ROTL32, ROTL64): Update\n- \tdoc in bits.h, remove dead code in bits.c, move ROTL32/ROTL64 into\n- \tbits.h.\n-\n-\t* cpu.c(cpu_add_commas), device_tree.h, device_tree.c(scand_*):\n- \tAdd size of buffer argument to functions writing a string into a\n- \tbuffer.  Check for buffer overflow.\n-\t\n-Sun Oct 15 22:16:11 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* devices.h, devices.c, debug.h, debug.c: add macro's for tracing\n-        of each device.  Make parameter names consistent so macros work.\n-        Use macro's in device functions.\n-\n-\t* device_tree.c, devices.h, devices.c: include path to device in a\n-        devices node when creating it.\n-\n-\t* device_tree.c, debug.h, debug.c: Add tracing of `device-tree'.\n-\n-\t* core.c: add tracing of core-device, adjust parameter names in\n- \tcore functions to be consistent with those in devices*.\n-\n-Sun Oct 15 20:33:20 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-        * debug.h, debug.c (trace_option): New function. Parses the trace\n-        option, updating the trace array.\n-\n-\t* debug.h, debug.c (trace_usage): New function. Outputs the list\n-        of all possible trace options.\n-\n-\t* sim_calls.c (sim_open), main.c (main): Use new trace_option() to\n- \tparse trace options specified with the simpler -t flag.  Adjust\n- \tusage.\n-\n-\t* FIXME: basic parsing of command line options is still duplicated\n- \tby main.c and sim_calls.c\n-\n-Thu Oct 26 10:42:28 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* Makefile.in (clean): Delete *.i and *.out files.\n-\n-\t* ppc-endian.c (SWAP_n): Add SET argument to allow use of SWAP\n-\tmacros for either assignment or return.  Fix SWAP_8 to use a\n-\tunion, and two SWAP_4's.  Delete SWAP_N, since nobody uses it now.\n-\t(ENDIAN_N): Add SET argument to SWAP_n calls.  Delete macro defs\n-\tthat hardwired swapping on/off, let optimizer delete dead code.\n-\n-\t* main.c (main): Add printf that we caught a signal and print out\n-\tthe failing address.\n-\n-Thu Oct 19 21:43:39 1995  Fred Fish  <fnf@fishfood.amigalib.com>\n-\n-\t* Makefile.in:  Remove tabs from otherwise empty line.\n-\tConfuses many non-GNU versions of \"make\".\n-\n-Wed Oct 18 08:51:25 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* Makefile.in (clean): Delete files produced by gen.\n-\n-Mon Oct 16 17:34:24 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* gen.c (lf_print_c_semantic_function): Move counting # of\n-\tinstructions here so it works with caching.\n-\t(gen_idecode_c): Move from here.\n-\n-Wed Oct 11 17:13:15 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* gen.c, ppc-instructions, psim.c: Fix code for generating\n-\tcracking instruction cache.  Delete the code that cached just the\n-\tresult from doing an instruction lookup - this ran slower than no\n-\tcache at all.\n-\n-Fri Oct 13 09:58:43 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* Makefile.in (gen.o): Include $(INLINE_CFLAGS).\n-\n-\t* debug.h (ppc_trace): Rename from trace, to avoid a conflict with\n-\tTCL when gdb is linked with the simulator.\n-\t* debug.c (ppc_trace): Ditto.\n-\t* sim_calls.c (sim_open): Change trace -> ppc_trace.\n-\t* main.c (main): Ditto.\n-\n-\t* cpu.c (cpu_add_commas): Remove extra static.\n-\n-Thu Oct 12 11:35:53 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* Makefile.in (psim.o): Now that inlines are turned on, make\n-\tpsim.o depend on all sources.\n-\n-\t* cpu.c (cpu_add_commas): New function to format a long with\n-\tcommas.\n-\t(cpu_print_info): Use it to print number_of_insns.\n-\t\n-\t* ppc-endian.c (SWAP_n): New macros to speed up byte swapping for\n-\t2, 4, and 8 bytes.\n-\t(ENDIAN_N): If both target and host byte orders are known, don't\n-\tbother testing CURRENT_{TARGET,HOST}_BYTE_ORDER.\n-\n-\t* ppc-endian.h (target specific H2T_n/T2H_n macros): Remove #if 0\n-\tto allow target specific H2T_n/T2H_n macros to be used.\n-\t(htonl, ntohl): If compiled on a 486 by GCC and WITH_BSWAP is\n-\tnon-zero, redefine the htonl/ntohl macros to use the BSWAP instead\n-\tof the 3 instruction sequence that runs on 386s.\n-\n-\t* std-config.h (WITH_{HOST,TARGET}_BYTE_ORDER): Don't override if\n-\tspecified on the compile line.\n-\t(WITH_BSWAP): If not defined, define as 0.\n-\n-\t* Makefile.in (INLINE_CFLAGS): Add -DDEFAULT_INLINE=2 to add\n-\tdefault inline support.  Pass INLINE_CFLAGS when compiling.\n-\n-\t* devices.{h,c} (unimp_device_ioctl): Use STATIC_DEVICES, not\n-\tINLINE_DEVICES since GCC doesn't like inline functions that\n-\taccept variable arguments.\n-\t(stack_ioctl_callback): Make function just static because GCC\n-\tdoesn't like inline functions that accept variable arguments.\n-\n-\t* devices.h (STATIC_DEVICES): Define as empty if not defined.\n-\n-\t* inline.c: Correct pathnames of included C files to match current\n-\timplementation.\n-\n-\t* inline.h (STATIC_DEVICES): If DEVICES_INLINE is defined to be\n-\tnon-zero, define STATIC_DEVICES to be static.\n-\n-\t* std-config.h (INLINE): If GNU C and optimizing, define this as\n-\t__inline__.\n-\t(DEFAULT_INLINE): If not defined, define as 0.\n-\t(ENDIAN_INLINE): If not defined, define as DEFAULT_INLINE.\n-\t({CORE,VM,CPU,EVENTS,REGISTERS,INTERRUPTS}_INLINE): Ditto.\n-\t({SPREG,IDECODE}_INLINE): Ditto.\t\n-\t\n-Wed Oct 11 17:13:15 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-        * ppc-instructions: Initial cut of floating point suport added.\n-  \tOf note include - use of host IEEE floating point instructions,\n- \tuse of PowerPC manual pseudo code to handle the FPSCR.  It is not\n- \tcurrently a pretty sight.\n-\t\n-\t* memory_map.h, memory_map.c, memory_map_n.h, core.h, core.c:\n- \tmerge into core.h, core.c, core_n.h. The type memory_map replaced\n- \twith core_map.  This removes a level of pointer indirection when\n- \ttranslating an address.\n-\n-\t* memory_map.h, memory_map.c, memory_map_n.h: delete.\n-\n-\t* Makefile.in et.al (sorry): tweek to use new core, core_map and\n- \tcore.h.\n-\t\n-Wed Oct 11 12:10:26 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* sim_calls.c, main.c: Add -g (trace_gdb) option, add tracing to\n- \tmost of the other functions in sim_calls.c.\n-\n-\t* basics.h (CONCAT3), memory_map.c, memory_map_n.h, Makefile.in:\n- \tAdd macros to better cover up `generic' code.  Makes it possible\n- \tto step through the generic code!\n-\n-\t* vm.c, vm_n.h, Makefile.in: ditto\n-\t\n-Tue Oct 10 15:42:59 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* devices.h, devices.c, memory_map.h, memory_map.c: Changed\n- \tcallback interface so that there is a read/write buffer but no\n- \tread/write_word.  VEA default memory read/write handler sometimes\n- \tcouldn't resolve an access and of those some were for a memory\n- \tfault and some were because gdb was making a bogus request.\n-\n-\t* devices.h, devices.c, memory_map.h, memory_map.c, vm.h, vm.c:\n- \teliminate transfer_mode (raw or cooked) parameter from read/write\n- \tbuffer.\n-\t\n-Fri Oct  6 20:23:56 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* ppc-instructions (fmul, fmuls): correct instruction format - had\n- \tFRB instead of FRC.\n-\n-Wed Oct  4 17:31:12 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* psim.c, device_tree.h, device_tree.c, devices.c (printd_*,\n- \tscand_*): new functions to parse/print fields in device names\n- \twhile hiding any machine dependency.\n-\n-\t* devices.c, psim.c: Change the stack init code so that it is\n- \thandled by a device.  Arguments passed across using a device ioctl\n- \t(hack).\n-\n-\t* devices.h, devices.c: device ioctl callback changed to allow a\n- \tvariable number of arguments.  This gives greater flexability and\n- \tgreater chance of bugs.\n-\n-Tue Oct  3 22:01:56 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* main.c (printf_filtered, error): Missing va_end() to close off\n-        variable argument use.\n-\n-\t* Makefile.in (tmp-gencode): comment out hack to get around some\n-        versions of make not handling files being created as side-effects.\n-\n-\t* gen.c (lf_open): Add -n (real_file_name) option.  Specifies an\n-        alternative file name to use in output files for things like #line\n-        macros.\n-\n-        Makefile.in (tmp-gencode): Use gen -n so that debug info is\n-        correct.\n-\n-\t* Makefile.in (TARGETLIB): Use this instead of libsim.a in the\n-\tMakefile.\n-\n-Sat Oct  7 22:40:59 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* sim_calls.c (sim_set_callbacks): Define new function.\n-\n-Fri Oct  6 17:23:10 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* psim.c (psim_print_info): Print exit status or signal number.\n-\n-Mon Oct  2 11:46:37 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* cpu.c (struct _cpu): Add number_of_insns field to trace how many\n-\tinstructions are executed.\n-\t(cpu_increment_number_of_insns): New function to increment the\n-\tnumber of instructions issued.\n-\t(cpu_get_number_of_insns): New function to return the number of\n-\tinstructions issued.\n-\t(cpu_print_info): New function to print cpu related information.\n-\tAt present, print the number of instructions executed.\n-\n-\t* gen_idecode_c: Emit call to cpu_increment_number_of_insns within\n-\tidecode_issue.\n-\n-\t* psim.c (psim_print_info): New function to iterate over each of\n-\tthe CPU's calling cpu_print_info.\n-\t\n-\t* psim.h,cpu.h: Add new declarations.\n-\n-\t* sim_calls.c (sim_open): Add argument processing to add the same\n-\tswitches main.c accepts for the standalone processor.\n-\t(sim_close): Call psim_print_info if -I.\n-\n-\t* main.c (main): Add comment saying to update sim_calls.c when\n-\tadding switches.  Add -I to call psim_print_info when done.\n-\t(usage): Update usage message.\n-\n-Sun Oct  1 13:52:59 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* main.c (printf_filtered): Correct to match new prototype.\n-\n-Sat Sep 30 20:47:05 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* sim_callbacks.h (printf_filtered): Correct prototype.\n-\n-Thu Sep 21 16:26:49 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* device_tree.c (OEA_MEMORY_SIZE): Define if not defined to\n-\t0x100000.\n-\t(clayton_memory_size): Define as OEA_MEMORY_SIZE.\n-\n-\t* std-config.h (WITH_TRACE): Default to 1 now.\n-\n-\t* psim.c (write_stack_arguments): Don't write any stack arguments\n-\tif OEA.\n-\n-\t* main.c (main): Switch to using getopt.  Make -p also set\n-\ttrace_semantics.  Make -a turn on all trace flags.  Make -C turn\n-\ton console tracing.\n-\n-\t* device_tree.c (create_option_device_node): Assume a program is\n-\tOEA if the start address is < 4096, not just == 0.\n-\n-Wed Sep 20 13:36:06 1995  Ian Lance Taylor  <ian@cygnus.com>\n-\n-\t* Makefile.in (maintainer-clean): New synonym for realclean.\n-\n-Sun Sep 10 10:23:56 1995  Michael Tiemann  <tiemann@axon.cygnus.com>\n-\n-\t* registers.c (register_description): Add gdb synonyms for cr\n-\t(cnd) and msr (ps).\n-\n-Fri Sep  8 13:16:10 1995  Ian Lance Taylor  <ian@cygnus.com>\n-\n-\t* Makefile.in (install): Don't install in $(tooldir).\n-\n-\t* configure.in: Call AC_CONFIG_HEADER.  Don't try to use\n-\tbfd/hosts/*.h file or bfd/config/*.mh file.  Call AC_PROG_CC and\n-\tAC_PROG_RANLIB.  Substitute in values for CFLAGS, HDEFINES, AR,\n-\tand CC_FOR_BUILD.  Call AC_CHECK_HEADERS for various header files.\n-\tTouch stamp.h if creating config.h.\n-\t* configure: Rebuild.\n-\t* config.in: New file, created by autoheader.\n-\t* Makefile.in (AR): Define as @AR@.\n-\t(CC): New variable, defined as @CC@.\n-\t(CFLAGS): Define as @CFLAGS@.\n-\t(CC_FOR_BUILD): New variable, defined as @CC_FOR_BUILD@.\n-\t(RANLIB): Define as @RANLIB@.\n-\t(HDEFINES, TDEFINES): New variables.\n-\t(@host_makefile_frag@): Remove.\n-\t(mostlyclean): Make the same as clean, not distclean.\n-\t(clean): Remove config.log.\n-\t(distclean): Remove config.h and stamp-h.\n-\t(Makefile): Don't depend upon @frags@.  Just rebuild Makefile when\n-\tinvoking config.status.\n-\t(config.h, stamp-h): New targets.\n-\t(gen, gen.o): Build with CC_FOR_BUILD, not CC.\n-\t(ppc-config.h): Rename from old config.h build.\n-\t* (basics.h,gen.c,ppc-endian.c,psim.c): Include ppc-config.h.\n-\t\n-Fri Sep  8 09:51:03 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* configure{,.in}: Don't include sysdep.h from bfd, since bfd no\n-\tlonger provides it.\n-\t* basics.h (sysdep.h): Don't include it.\n-\t* Makefile.in (BASICS_H): Remove sysdep.h.\n-\n-Wed Sep  6 13:25:42 1995  Andrew Cagney  <cagney@highland.com.au>\n- \n- \t* core.c (core_add_data): First growth of bss was being put at\n-        wrong address (0) instead of &end.\n- \n- \t* core.c (core_add_stack, core_add_data): Was not handling case\n-        where bss/stack is grown across the current end-of-{bss,stack}.\n-\n-Wed Sep  6 00:46:10 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* system.c (system_call): Fix SYS_break - was aligning bss to a\n-        page boundary instead of just an 8 byte one; On first call sbrk(0)\n-        != sbrk(0).\n-\n-Thu Aug 24 14:48:54 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* Makefile.in (install): Fix install rule.\n-\n-Tue Aug 22 09:31:18 1995  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* system.c (system_call): Add read support.\n-\n-\t* main.c (main): -t sets trace_device_tree.  Correct usage message\n-\tto current reality.\n-\n-\t* device_tree.c (update_memory_node_for_section): Make tracing\n-\toutput line up.  If not code or readonly, assume that the section\n-\tis a data section and has read/write permissions.  Add readonly\n-\tsupport.\n-\n-\t* core.c (create_core_from_addresses): Print end address in traces\n-\tand make tracing output line up.\n-\n-\t* Makefile.in: Rewrite from Makefile to work with the Cygnus\n-\tenvironment, and support compiling in a different directory than\n-\tthe sources reside in.\n-\n-\t* ppc-endian.h: Rename from endian.h so that it doesn't get\n-\tconfused with /usr/include/sys/endian.h on Linux.  Add Linux\n-\tendian support.\n-\n-\t* ppc-endian.c: Rename to be consistant with ppc-endian.h.\n-\tInclude ppc-endian.h, not endian.h.\n-\n-\t* basics.h (sysdep.h): Include sysdep.h that configure makes.\n-\tInclude ppc-endian.h, not endian.h.\n-\n-\t* std-config.h: Rename from ppc-config.  Put #ifndefs around most\n-\tconfiguration macros, so they can be overridden via CFLAGS.  By\n-\tdefault, turn off tracing.\n-\n-\t* configure.in: Clone from other simulator targets.\n-\t* configure: Generate via autoconf from configure.in.\n-\n-Sat Aug 19 09:05:32 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* ppc-instructions: fix srawi (was geting XER[CA] real wrong).\n-\n-\t* interrupts.c (data_storage_interrupt): allow stack to grow by\n-        upto one MB per increment.\n-\n-\t* ppc-instructions: divw was computing rA / rA not rA / rB\n-\n-\t* main.c (main): really stupid. Wasn't exiting with correct status\n-\n-Fri Aug 18 00:38:01 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* system.c (system_call): add system calls kill(2) and getpid(2).\n-\n-\t* main.c (main): Check/return exit status when simulation\n-        finishes.\n-\n-Thu Aug 17 14:29:18 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* device_tree.c (create_option_device_node): Alignment rules (at\n- \tleast for the moment) now are for strict alignment only for LE OEA\n- \tmode.  (Because of compiler problems).\n-\n-\t* system.c (system_call) SYS_exit: Wasn't exiting with correct status.\n-\n-Thu Aug 17 01:16:38 1995  Andrew Cagney  <cagney@highland.com.au>\n-\n-\t* vm.c (DEFINE_VM_DATA_MAP_WRITE_N): For miss aligned transfer\n-        forgot to return.\n-\n-\t* system.c (system_call): didn't page align break argument before\n-        determining increment break increment.\n-\n-\t* psim/ppc: Re-arange entire directory structure so that\n-        everything lives in the one directory.  While a pain for cleaning,\n-        makes building across multiple architectures much simpler.\n-\n-\t* devices.c, device_tree.c: Added code that provides a simple\n-        illustration of how an interrupt control device could be\n-        implemented.\n-\n-\t* devices.c: Added code so that the dumb console device can read\n-        (from stdin) as well as write to stdout.\n-"
    },
    {
      "sha": "275d5e83de058ac6b357906ae4a04c4b7925b858",
      "filename": "sim/pru/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/pru/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/pru/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/pru/ChangeLog"
    },
    {
      "sha": "e9aa74490f121e533a6a1ad2503ae0a4795026ef",
      "filename": "sim/riscv/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/riscv/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/riscv/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/riscv/ChangeLog"
    },
    {
      "sha": "effa5127773e5b7daea2393bc1d730d9bad5cf35",
      "filename": "sim/rl78/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/rl78/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/rl78/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/rl78/ChangeLog"
    },
    {
      "sha": "8a77a8d53bc404a1ab50d5711855b8a4477a68f0",
      "filename": "sim/rx/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/rx/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/rx/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/rx/ChangeLog"
    },
    {
      "sha": "e32e5dfd8126c7656d370d0cc223cb5c98f4e0ec",
      "filename": "sim/sh/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/sh/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/sh/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/sh/ChangeLog"
    },
    {
      "sha": "7265ed83cd3022abb6b3164f8fbc6822436c9ea9",
      "filename": "sim/testsuite/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/ChangeLog"
    },
    {
      "sha": "9a6c8343814132a74d3b6cd3e5ce52a6de1df93d",
      "filename": "sim/testsuite/aarch64/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/aarch64/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/aarch64/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/aarch64/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/aarch64/ChangeLog"
    },
    {
      "sha": "89fab48557b173a19a31ad64890ae7c1e9229e9e",
      "filename": "sim/testsuite/arm/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/arm/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/arm/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/arm/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/arm/ChangeLog"
    },
    {
      "sha": "5ce686f4db1c12675bb9656a688c5205a7f3c7a4",
      "filename": "sim/testsuite/avr/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/avr/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/avr/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/avr/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/avr/ChangeLog"
    },
    {
      "sha": "ea617e3fdff350da03ec192bf919cc1e7b379b54",
      "filename": "sim/testsuite/bfin/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/bfin/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/bfin/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/bfin/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/bfin/ChangeLog"
    },
    {
      "sha": "5814a7c768a7b5346b37995e5d3a0dc3e52c5b52",
      "filename": "sim/testsuite/bpf/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/bpf/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/bpf/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/bpf/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/bpf/ChangeLog"
    },
    {
      "sha": "68353f04910c47963d71aca3917d96f445e52f87",
      "filename": "sim/testsuite/cr16/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/cr16/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/cr16/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/cr16/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/cr16/ChangeLog"
    },
    {
      "sha": "121b6f326175dd2532a34a5e3a2c29a025b7b87d",
      "filename": "sim/testsuite/cris/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/cris/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/cris/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/cris/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/cris/ChangeLog"
    },
    {
      "sha": "f50a384c8129215534a16a0a2f38f4ef7f761703",
      "filename": "sim/testsuite/d10v/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/d10v/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/d10v/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/d10v/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/d10v/ChangeLog"
    },
    {
      "sha": "bb9b0b499325cf2226713a23f2ad11a24f904bc3",
      "filename": "sim/testsuite/example-synacor/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/example-synacor/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/example-synacor/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/example-synacor/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/example-synacor/ChangeLog"
    },
    {
      "sha": "aa7409f3ab35f381e8c4cf4fc81af9df3247ff1a",
      "filename": "sim/testsuite/frv/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/frv/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/frv/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/frv/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/frv/ChangeLog"
    },
    {
      "sha": "346ac7476ae77968f76e70bfbfced1f257c5bfe7",
      "filename": "sim/testsuite/ft32/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/ft32/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/ft32/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/ft32/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/ft32/ChangeLog"
    },
    {
      "sha": "828b136fa4b888a41d3f42ff50ccd000660b5dfb",
      "filename": "sim/testsuite/h8300/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/h8300/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/h8300/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/h8300/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/h8300/ChangeLog"
    },
    {
      "sha": "4c94a665507b8098fd620f2e645742c597992ce7",
      "filename": "sim/testsuite/iq2000/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/iq2000/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/iq2000/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/iq2000/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/iq2000/ChangeLog"
    },
    {
      "sha": "4c94a665507b8098fd620f2e645742c597992ce7",
      "filename": "sim/testsuite/lm32/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/lm32/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/lm32/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/lm32/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/lm32/ChangeLog"
    },
    {
      "sha": "8172521f37983f6fa575bf06ce08dfa362955876",
      "filename": "sim/testsuite/m32c/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/m32c/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/m32c/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/m32c/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/m32c/ChangeLog"
    },
    {
      "sha": "535435ac3f889ae4002f9e1cda5a4542ec9de1f5",
      "filename": "sim/testsuite/m32r/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/m32r/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/m32r/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/m32r/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/m32r/ChangeLog"
    },
    {
      "sha": "4c94a665507b8098fd620f2e645742c597992ce7",
      "filename": "sim/testsuite/m68hc11/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/m68hc11/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/m68hc11/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/m68hc11/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/m68hc11/ChangeLog"
    },
    {
      "sha": "78f076918ee1becec3f473bf710db80809b53f22",
      "filename": "sim/testsuite/mcore/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/mcore/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/mcore/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/mcore/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/mcore/ChangeLog"
    },
    {
      "sha": "205646e8a2e001420f7466db9ffe148d01cfa7ef",
      "filename": "sim/testsuite/microblaze/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/microblaze/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/microblaze/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/microblaze/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/microblaze/ChangeLog"
    },
    {
      "sha": "b64f6912d10066b1a8e77a421eede2f4d41c60b0",
      "filename": "sim/testsuite/mips/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/mips/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/mips/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/mips/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/mips/ChangeLog"
    },
    {
      "sha": "4c94a665507b8098fd620f2e645742c597992ce7",
      "filename": "sim/testsuite/mn10300/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/mn10300/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/mn10300/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/mn10300/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/mn10300/ChangeLog"
    },
    {
      "sha": "4c94a665507b8098fd620f2e645742c597992ce7",
      "filename": "sim/testsuite/moxie/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/moxie/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/moxie/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/moxie/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/moxie/ChangeLog"
    },
    {
      "sha": "ebb42c559cb90dfe0262f6e42d44562c29e4f742",
      "filename": "sim/testsuite/msp430/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/msp430/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/msp430/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/msp430/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/msp430/ChangeLog"
    },
    {
      "sha": "b105c0f0cfd3d625cc2e7f6a4bc6888ce12d1a95",
      "filename": "sim/testsuite/or1k/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/or1k/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/or1k/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/or1k/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/or1k/ChangeLog"
    },
    {
      "sha": "a10ff0bc16fe1d8beb3dd35187dce94686d6b230",
      "filename": "sim/testsuite/pru/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/pru/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/pru/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/pru/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/pru/ChangeLog"
    },
    {
      "sha": "9d7feba490090096057df6f650415892302b56c2",
      "filename": "sim/testsuite/riscv/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/riscv/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/riscv/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/riscv/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/riscv/ChangeLog"
    },
    {
      "sha": "0e1f20060f42ad6f36dd03346e15c385e4b95701",
      "filename": "sim/testsuite/sh/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/sh/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/sh/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sh/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/sh/ChangeLog"
    },
    {
      "sha": "5e9ddbe5bed703ec64e221e1e0a2b8a87d58ed35",
      "filename": "sim/testsuite/v850/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/v850/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/testsuite/v850/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/v850/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/testsuite/v850/ChangeLog"
    },
    {
      "sha": "aaa686606e117dd9360c4b98df366db29034aad7",
      "filename": "sim/v850/ChangeLog-2021",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/v850/ChangeLog-2021",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9335d9f8235a13777ae058b1ad59f124b678f4fc/sim/v850/ChangeLog-2021",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/ChangeLog-2021?ref=9335d9f8235a13777ae058b1ad59f124b678f4fc",
      "previous_filename": "sim/v850/ChangeLog"
    }
  ]
}