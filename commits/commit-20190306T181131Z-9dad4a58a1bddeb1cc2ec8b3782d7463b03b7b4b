{
  "sha": "9dad4a58a1bddeb1cc2ec8b3782d7463b03b7b4b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWRhZDRhNThhMWJkZGViMWNjMmVjOGIzNzgyZDc0NjNiMDNiN2I0Yg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-16T16:16:59Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-03-06T18:11:31Z"
    },
    "message": "gdb/fortran: Add new function to evaluate Fortran expressions\n\nThis is an initial restructure, it adds a new function in which\nFortran specific expressions can be evaluated.  No Fortran specific\nexpressions are added with this commit though, so for now, the new\nfunction just forwards all expressions to the default expression\nhandler, as such, there should be no user visible changes after this\ncommit.  However, the new function will be useful in later commits.\n\ngdb/ChangeLog:\n\n\t* f-lang.c (evaluate_subexp_f): New function.\n\t(exp_descriptor_f): New global.\n\t(f_language_defn): Use exp_descriptor_f instead of\n\texp_descriptor_standard.",
    "tree": {
      "sha": "a58d6c8c8aa45f0354de9372683c1256774709d4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a58d6c8c8aa45f0354de9372683c1256774709d4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9dad4a58a1bddeb1cc2ec8b3782d7463b03b7b4b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9dad4a58a1bddeb1cc2ec8b3782d7463b03b7b4b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9dad4a58a1bddeb1cc2ec8b3782d7463b03b7b4b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9dad4a58a1bddeb1cc2ec8b3782d7463b03b7b4b/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c8f9160408315deceee5e8776f0b1c4d9cba4398",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c8f9160408315deceee5e8776f0b1c4d9cba4398",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c8f9160408315deceee5e8776f0b1c4d9cba4398"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 28,
    "deletions": 1
  },
  "files": [
    {
      "sha": "a632de69c373862853b63b762987991a52b38a5c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dad4a58a1bddeb1cc2ec8b3782d7463b03b7b4b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dad4a58a1bddeb1cc2ec8b3782d7463b03b7b4b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9dad4a58a1bddeb1cc2ec8b3782d7463b03b7b4b",
      "patch": "@@ -1,3 +1,10 @@\n+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* f-lang.c (evaluate_subexp_f): New function.\n+\t(exp_descriptor_f): New global.\n+\t(f_language_defn): Use exp_descriptor_f instead of\n+\texp_descriptor_standard.\n+\n 2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* f-exp.y (struct token): Add comments."
    },
    {
      "sha": "5beb46c5f3174b2737bbf920a51fd6fe0804e143",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 21,
      "deletions": 1,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9dad4a58a1bddeb1cc2ec8b3782d7463b03b7b4b/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9dad4a58a1bddeb1cc2ec8b3782d7463b03b7b4b/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=9dad4a58a1bddeb1cc2ec8b3782d7463b03b7b4b",
      "patch": "@@ -239,13 +239,33 @@ f_collect_symbol_completion_matches (completion_tracker &tracker,\n \t\t\t\t\t\t      text, word, \":\", code);\n }\n \n+/* Special expression evaluation cases for Fortran.  */\n+struct value *\n+evaluate_subexp_f (struct type *expect_type, struct expression *exp,\n+\t\t   int *pos, enum noside noside)\n+{\n+  /* Currently no special handling is required. */\n+  return evaluate_subexp_standard (expect_type, exp, pos, noside);\n+}\n+\n static const char *f_extensions[] =\n {\n   \".f\", \".F\", \".for\", \".FOR\", \".ftn\", \".FTN\", \".fpp\", \".FPP\",\n   \".f90\", \".F90\", \".f95\", \".F95\", \".f03\", \".F03\", \".f08\", \".F08\",\n   NULL\n };\n \n+/* Expression processing for Fortran.  */\n+static const struct exp_descriptor exp_descriptor_f =\n+{\n+  print_subexp_standard,\n+  operator_length_standard,\n+  operator_check_standard,\n+  op_name_standard,\n+  dump_subexp_body_standard,\n+  evaluate_subexp_f\n+};\n+\n extern const struct language_defn f_language_defn =\n {\n   \"fortran\",\n@@ -256,7 +276,7 @@ extern const struct language_defn f_language_defn =\n   array_column_major,\n   macro_expansion_no,\n   f_extensions,\n-  &exp_descriptor_standard,\n+  &exp_descriptor_f,\n   f_parse,\t\t\t/* parser */\n   null_post_parser,\n   f_printchar,\t\t\t/* Print character constant */"
    }
  ]
}