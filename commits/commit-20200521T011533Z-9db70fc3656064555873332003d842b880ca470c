{
  "sha": "9db70fc3656064555873332003d842b880ca470c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWRiNzBmYzM2NTYwNjQ1NTU4NzMzMzIwMDNkODQyYjg4MGNhNDcwYw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-20T13:18:41Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-21T01:15:33Z"
    },
    "message": "Replace \"if (x) free (x)\" with \"free (x)\", binutils\n\n\t* addr2line.c: Replace \"if (x) free (x)\" with \"free (x)\" throughout.\n\t* dlltool.c: Likewise.\n\t* elfcomm.c: Likewise.\n\t* rddbg.c: Likewise.\n\t* readelf.c: Likewise.\n\t* stabs.c: Likewise.\n\t* windmc.c: Likewise.\n\t* windres.c: Likewise.\n\t* wrstabs.c: Likewise.",
    "tree": {
      "sha": "d1aaec716012f043f5ba4aa0e43bf879a32be214",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d1aaec716012f043f5ba4aa0e43bf879a32be214"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9db70fc3656064555873332003d842b880ca470c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9db70fc3656064555873332003d842b880ca470c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9db70fc3656064555873332003d842b880ca470c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9db70fc3656064555873332003d842b880ca470c/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c95949892f6f1e2974a0fb8a5463d7b6432ac469",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c95949892f6f1e2974a0fb8a5463d7b6432ac469",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c95949892f6f1e2974a0fb8a5463d7b6432ac469"
    }
  ],
  "stats": {
    "total": 268,
    "additions": 92,
    "deletions": 176
  },
  "files": [
    {
      "sha": "a6194bda0d2fc23bb4b642d78591b3adebe18957",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db70fc3656064555873332003d842b880ca470c/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db70fc3656064555873332003d842b880ca470c/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=9db70fc3656064555873332003d842b880ca470c",
      "patch": "@@ -1,3 +1,15 @@\n+2020-05-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* addr2line.c: Replace \"if (x) free (x)\" with \"free (x)\" throughout.\n+\t* dlltool.c: Likewise.\n+\t* elfcomm.c: Likewise.\n+\t* rddbg.c: Likewise.\n+\t* readelf.c: Likewise.\n+\t* stabs.c: Likewise.\n+\t* windmc.c: Likewise.\n+\t* windres.c: Likewise.\n+\t* wrstabs.c: Likewise.\n+\n 2020-05-21  Alan Modra  <amodra@gmail.com>\n \n \t* readelf.c (get_num_dynamic_syms): Bounds check mipsxlat array"
    },
    {
      "sha": "846720fc81886dae7896c7aed38baeb49293c560",
      "filename": "binutils/addr2line.c",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db70fc3656064555873332003d842b880ca470c/binutils/addr2line.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db70fc3656064555873332003d842b880ca470c/binutils/addr2line.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/addr2line.c?ref=9db70fc3656064555873332003d842b880ca470c",
      "patch": "@@ -314,8 +314,7 @@ translate_addresses (bfd *abfd, asection *section)\n                   else\n                     printf (\"\\n\");\n \n-                  if (alloc != NULL)\n-                    free (alloc);\n+\t\t  free (alloc);\n                 }\n \n               if (base_names && filename != NULL)\n@@ -410,11 +409,8 @@ process_file (const char *file_name, const char *section_name,\n \n   translate_addresses (abfd, section);\n \n-  if (syms != NULL)\n-    {\n-      free (syms);\n-      syms = NULL;\n-    }\n+  free (syms);\n+  syms = NULL;\n \n   bfd_close (abfd);\n "
    },
    {
      "sha": "d22ff54e098a19551ebab7ba8e2a02cf18002c00",
      "filename": "binutils/dlltool.c",
      "status": "modified",
      "additions": 4,
      "deletions": 12,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db70fc3656064555873332003d842b880ca470c/binutils/dlltool.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db70fc3656064555873332003d842b880ca470c/binutils/dlltool.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dlltool.c?ref=9db70fc3656064555873332003d842b880ca470c",
      "patch": "@@ -1253,8 +1253,7 @@ def_import (const char *app_name, const char *module, const char *dllext,\n \n   append_import (application_name, module, ord_val, its_name);\n \n-  if (buf)\n-    free (buf);\n+  free (buf);\n }\n \n void\n@@ -1335,7 +1334,7 @@ run (const char *what, char *args)\n \n   pid = pexecute (argv[0], (char * const *) argv, program_name, temp_base,\n \t\t  &errmsg_fmt, &errmsg_arg, PEXECUTE_ONE | PEXECUTE_SEARCH);\n-  free(argv);\n+  free (argv);\n \n   if (pid == -1)\n     {\n@@ -3388,15 +3387,8 @@ dll_name_list_free_contents (dll_name_list_node_type * entry)\n   if (entry)\n     {\n       if (entry->next)\n-        {\n-          dll_name_list_free_contents (entry->next);\n-          entry->next = NULL;\n-        }\n-      if (entry->dllname)\n-        {\n-          free (entry->dllname);\n-          entry->dllname = NULL;\n-        }\n+\tdll_name_list_free_contents (entry->next);\n+      free (entry->dllname);\n       free (entry);\n     }\n }"
    },
    {
      "sha": "558afa7d056c29304a2bf2c4061ffad5341a9841",
      "filename": "binutils/elfcomm.c",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db70fc3656064555873332003d842b880ca470c/binutils/elfcomm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db70fc3656064555873332003d842b880ca470c/binutils/elfcomm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/elfcomm.c?ref=9db70fc3656064555873332003d842b880ca470c",
      "patch": "@@ -744,14 +744,10 @@ setup_nested_archive (struct archive_info *nested_arch,\n void\n release_archive (struct archive_info * arch)\n {\n-  if (arch->file_name != NULL)\n-    free (arch->file_name);\n-  if (arch->index_array != NULL)\n-    free (arch->index_array);\n-  if (arch->sym_table != NULL)\n-    free (arch->sym_table);\n-  if (arch->longnames != NULL)\n-    free (arch->longnames);\n+  free (arch->file_name);\n+  free (arch->index_array);\n+  free (arch->sym_table);\n+  free (arch->longnames);\n }\n \n /* Get the name of an archive member from the current archive header."
    },
    {
      "sha": "930dbf71349bedcc2ecb58ffef3081476bc1973f",
      "filename": "binutils/rddbg.c",
      "status": "modified",
      "additions": 4,
      "deletions": 9,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db70fc3656064555873332003d842b880ca470c/binutils/rddbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db70fc3656064555873332003d842b880ca470c/binutils/rddbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/rddbg.c?ref=9db70fc3656064555873332003d842b880ca470c",
      "patch": "@@ -319,8 +319,7 @@ read_symbol_stabs_debugging_info (bfd *abfd, asymbol **syms, long symcount,\n \t      sc[strlen (sc) - 1] = '\\0';\n \t      n = concat (sc, bfd_asymbol_name (*ps), (const char *) NULL);\n \t      free (sc);\n-\t      if (f != NULL)\n-\t\tfree (f);\n+\t      free (f);\n \t      f = n;\n \t      s = n;\n \t    }\n@@ -372,8 +371,7 @@ static int saved_stabs_index;\n static void\n save_stab (int type, int desc, bfd_vma value, const char *string)\n {\n-  if (saved_stabs[saved_stabs_index].string != NULL)\n-    free (saved_stabs[saved_stabs_index].string);\n+  free (saved_stabs[saved_stabs_index].string);\n   saved_stabs[saved_stabs_index].type = type;\n   saved_stabs[saved_stabs_index].desc = desc;\n   saved_stabs[saved_stabs_index].value = value;\n@@ -428,11 +426,8 @@ free_saved_stabs (void)\n \n   for (i = 0; i < SAVE_STABS_COUNT; i++)\n     {\n-      if (saved_stabs[i].string != NULL)\n-\t{\n-\t  free (saved_stabs[i].string);\n-\t  saved_stabs[i].string = NULL;\n-\t}\n+      free (saved_stabs[i].string);\n+      saved_stabs[i].string = NULL;\n     }\n \n   saved_stabs_index = 0;"
    },
    {
      "sha": "0bdabccc8eb140898254835309ecbb3482f4cc8d",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 54,
      "deletions": 118,
      "changes": 172,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db70fc3656064555873332003d842b880ca470c/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db70fc3656064555873332003d842b880ca470c/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=9db70fc3656064555873332003d842b880ca470c",
      "patch": "@@ -7010,8 +7010,7 @@ process_section_groups (Filedata * filedata)\n \t  if (symtab_sec != sec)\n \t    {\n \t      symtab_sec = sec;\n-\t      if (symtab)\n-\t\tfree (symtab);\n+\t      free (symtab);\n \t      symtab = GET_ELF_SYMBOLS (filedata, symtab_sec, & num_syms);\n \t    }\n \n@@ -7040,8 +7039,7 @@ process_section_groups (Filedata * filedata)\n \n \t      group_name = SECTION_NAME (filedata->section_headers + sym->st_shndx);\n \t      strtab_sec = NULL;\n-\t      if (strtab)\n-\t\tfree (strtab);\n+\t      free (strtab);\n \t      strtab = NULL;\n \t      strtab_size = 0;\n \t    }\n@@ -7051,17 +7049,15 @@ process_section_groups (Filedata * filedata)\n \t      if (symtab_sec->sh_link >= filedata->file_header.e_shnum)\n \t\t{\n \t\t  strtab_sec = NULL;\n-\t\t  if (strtab)\n-\t\t    free (strtab);\n+\t\t  free (strtab);\n \t\t  strtab = NULL;\n \t\t  strtab_size = 0;\n \t\t}\n \t      else if (strtab_sec\n \t\t       != (sec = filedata->section_headers + symtab_sec->sh_link))\n \t\t{\n \t\t  strtab_sec = sec;\n-\t\t  if (strtab)\n-\t\t    free (strtab);\n+\t\t  free (strtab);\n \n \t\t  strtab = (char *) get_data (NULL, filedata, strtab_sec->sh_offset,\n \t\t\t\t\t      1, strtab_sec->sh_size,\n@@ -7169,17 +7165,14 @@ process_section_groups (Filedata * filedata)\n \t      group->root = g;\n \t    }\n \n-\t  if (start)\n-\t    free (start);\n+\t  free (start);\n \n \t  group++;\n \t}\n     }\n \n-  if (symtab)\n-    free (symtab);\n-  if (strtab)\n-    free (strtab);\n+  free (symtab);\n+  free (strtab);\n   return TRUE;\n }\n \n@@ -7367,8 +7360,7 @@ process_ia64_vms_dynamic_relocs (Filedata * filedata)\n \t}\n     }\n \n-  if (strtab != NULL)\n-    free (strtab);\n+  free (strtab);\n \n   return res;\n }\n@@ -7514,8 +7506,7 @@ process_relocs (Filedata * filedata)\n \t\t\t\t    symtab, nsyms, strtab, strtablen,\n \t\t\t\t    is_rela,\n \t\t\t\t    symsec->sh_type == SHT_DYNSYM);\n-\t\t  if (strtab)\n-\t\t    free (strtab);\n+\t\t  free (strtab);\n \t\t  free (symtab);\n \t\t}\n \t      else\n@@ -8041,19 +8032,15 @@ ia64_process_unwind (Filedata * filedata)\n \t      && aux.table_len > 0)\n \t    dump_ia64_unwind (filedata, & aux);\n \n-\t  if (aux.table)\n-\t    free ((char *) aux.table);\n-\t  if (aux.info)\n-\t    free ((char *) aux.info);\n+\t  free ((char *) aux.table);\n+\t  free ((char *) aux.info);\n \t  aux.table = NULL;\n \t  aux.info = NULL;\n \t}\n     }\n \n-  if (aux.symtab)\n-    free (aux.symtab);\n-  if (aux.strtab)\n-    free ((char *) aux.strtab);\n+  free (aux.symtab);\n+  free ((char *) aux.strtab);\n \n   return res;\n }\n@@ -8423,16 +8410,13 @@ hppa_process_unwind (Filedata * filedata)\n \t\tres = FALSE;\n \t    }\n \n-\t  if (aux.table)\n-\t    free ((char *) aux.table);\n+\t  free ((char *) aux.table);\n \t  aux.table = NULL;\n \t}\n     }\n \n-  if (aux.symtab)\n-    free (aux.symtab);\n-  if (aux.strtab)\n-    free ((char *) aux.strtab);\n+  free (aux.symtab);\n+  free ((char *) aux.strtab);\n \n   return res;\n }\n@@ -8492,11 +8476,8 @@ arm_print_vma_and_name (Filedata *                 filedata,\n static void\n arm_free_section (struct arm_section *arm_sec)\n {\n-  if (arm_sec->data != NULL)\n-    free (arm_sec->data);\n-\n-  if (arm_sec->rela != NULL)\n-    free (arm_sec->rela);\n+  free (arm_sec->data);\n+  free (arm_sec->rela);\n }\n \n /* 1) If SEC does not match the one cached in ARM_SEC, then free the current\n@@ -9530,10 +9511,8 @@ arm_process_unwind (Filedata * filedata)\n \t  }\n       }\n \n-  if (aux.symtab)\n-    free (aux.symtab);\n-  if (aux.strtab)\n-    free ((char *) aux.strtab);\n+  free (aux.symtab);\n+  free ((char *) aux.strtab);\n \n   return res;\n }\n@@ -10062,16 +10041,10 @@ get_num_dynamic_syms (Filedata * filedata)\n     no_hash:\n       if (num_of_syms == 0)\n \t{\n-\t  if (filedata->buckets)\n-\t    {\n-\t      free (filedata->buckets);\n-\t      filedata->buckets = NULL;\n-\t    }\n-\t  if (filedata->chains)\n-\t    {\n-\t      free (filedata->chains);\n-\t      filedata->chains = NULL;\n-\t    }\n+\t  free (filedata->buckets);\n+\t  filedata->buckets = NULL;\n+\t  free (filedata->chains);\n+\t  filedata->chains = NULL;\n \t  filedata->nbuckets = 0;\n \t}\n     }\n@@ -10229,21 +10202,12 @@ get_num_dynamic_syms (Filedata * filedata)\n       if (num_of_syms == 0)\n \t{\n \tno_gnu_hash:\n-\t  if (filedata->mipsxlat)\n-\t    {\n-\t      free (filedata->mipsxlat);\n-\t      filedata->mipsxlat = NULL;\n-\t    }\n-\t  if (filedata->gnuchains)\n-\t    {\n-\t      free (filedata->gnuchains);\n-\t      filedata->gnuchains = NULL;\n-\t    }\n-\t  if (filedata->gnubuckets)\n-\t    {\n-\t      free (filedata->gnubuckets);\n-\t      filedata->gnubuckets = NULL;\n-\t    }\n+\t  free (filedata->mipsxlat);\n+\t  filedata->mipsxlat = NULL;\n+\t  free (filedata->gnuchains);\n+\t  filedata->gnuchains = NULL;\n+\t  free (filedata->gnubuckets);\n+\t  filedata->gnubuckets = NULL;\n \t  filedata->ngnubuckets = 0;\n \t  filedata->ngnuchains = 0;\n \t}\n@@ -14654,12 +14618,9 @@ free_debug_section (enum dwarf_section_display_enum debug)\n   section->address = 0;\n   section->size = 0;\n \n-  if (section->reloc_info != NULL)\n-    {\n-      free (section->reloc_info);\n-      section->reloc_info = NULL;\n-      section->num_relocs = 0;\n-    }\n+  free (section->reloc_info);\n+  section->reloc_info = NULL;\n+  section->num_relocs = 0;\n }\n \n static bfd_boolean\n@@ -16763,8 +16724,7 @@ process_mips_specific (Filedata * filedata)\n \t    }\n \n \tsgot_print_fail:\n-\t  if (data)\n-\t    free (data);\n+\t  free (data);\n \t}\n       return res;\n     }\n@@ -17396,8 +17356,7 @@ process_mips_specific (Filedata * filedata)\n \t}\n \n     got_print_fail:\n-      if (data)\n-\tfree (data);\n+      free (data);\n     }\n \n   if (mips_pltgot != 0 && jmprel != 0 && pltrel != 0 && pltrelsz != 0)\n@@ -17474,8 +17433,7 @@ process_mips_specific (Filedata * filedata)\n \t}\n       printf (\"\\n\");\n \n-      if (data)\n-\tfree (data);\n+      free (data);\n       free (rels);\n     }\n \n@@ -19747,11 +19705,8 @@ process_notes_at (Filedata *           filedata,\n       if (! process_note (& inote, filedata))\n \tres = FALSE;\n \n-      if (temp != NULL)\n-\t{\n-\t  free (temp);\n-\t  temp = NULL;\n-\t}\n+      free (temp);\n+      temp = NULL;\n     }\n \n   free (pnotes);\n@@ -20305,38 +20260,23 @@ process_object (Filedata * filedata)\n   filedata->string_table = NULL;\n   filedata->string_table_length = 0;\n \n-  if (filedata->dump.dump_sects != NULL)\n-    {\n-      free (filedata->dump.dump_sects);\n-      filedata->dump.dump_sects = NULL;\n-      filedata->dump.num_dump_sects = 0;\n-    }\n+  free (filedata->dump.dump_sects);\n+  filedata->dump.dump_sects = NULL;\n+  filedata->dump.num_dump_sects = 0;\n \n-  if (filedata->dynamic_strings)\n-    {\n-      free (filedata->dynamic_strings);\n-      filedata->dynamic_strings = NULL;\n-      filedata->dynamic_strings_length = 0;\n-    }\n+  free (filedata->dynamic_strings);\n+  filedata->dynamic_strings = NULL;\n+  filedata->dynamic_strings_length = 0;\n \n-  if (filedata->dynamic_symbols)\n-    {\n-      free (filedata->dynamic_symbols);\n-      filedata->dynamic_symbols = NULL;\n-      filedata->num_dynamic_syms = 0;\n-    }\n+  free (filedata->dynamic_symbols);\n+  filedata->dynamic_symbols = NULL;\n+  filedata->num_dynamic_syms = 0;\n \n-  if (filedata->dynamic_syminfo)\n-    {\n-      free (filedata->dynamic_syminfo);\n-      filedata->dynamic_syminfo = NULL;\n-    }\n+  free (filedata->dynamic_syminfo);\n+  filedata->dynamic_syminfo = NULL;\n \n-  if (filedata->dynamic_section)\n-    {\n-      free (filedata->dynamic_section);\n-      filedata->dynamic_section = NULL;\n-    }\n+  free (filedata->dynamic_section);\n+  filedata->dynamic_section = NULL;\n \n   while (filedata->symtab_shndx_list != NULL)\n     {\n@@ -20345,11 +20285,8 @@ process_object (Filedata * filedata)\n       filedata->symtab_shndx_list = next;\n     }\n \n-  if (filedata->section_headers_groups)\n-    {\n-      free (filedata->section_headers_groups);\n-      filedata->section_headers_groups = NULL;\n-    }\n+  free (filedata->section_headers_groups);\n+  filedata->section_headers_groups = NULL;\n \n   if (filedata->section_groups)\n     {\n@@ -20810,8 +20747,7 @@ main (int argc, char ** argv)\n     if (! process_file (argv[optind++]))\n       err = TRUE;\n \n-  if (cmdline.dump_sects != NULL)\n-    free (cmdline.dump_sects);\n+  free (cmdline.dump_sects);\n \n   free (dump_ctf_symtab_name);\n   free (dump_ctf_strtab_name);"
    },
    {
      "sha": "9f043d1191bb317d7303ad6e3b70b865f192da52",
      "filename": "binutils/stabs.c",
      "status": "modified",
      "additions": 6,
      "deletions": 12,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db70fc3656064555873332003d842b880ca470c/binutils/stabs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db70fc3656064555873332003d842b880ca470c/binutils/stabs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/stabs.c?ref=9db70fc3656064555873332003d842b880ca470c",
      "patch": "@@ -2119,8 +2119,7 @@ parse_stab_struct_type (void *                dhandle,\n       || ! parse_stab_tilde_field (dhandle, info, pp, typenums, &vptrbase,\n \t\t\t\t   &ownvptr, p_end))\n     {\n-      if (fields != NULL)\n-\tfree (fields);\n+      free (fields);\n       return DEBUG_TYPE_NULL;\n     }\n \n@@ -2955,12 +2954,9 @@ parse_stab_members (void *                dhandle,\n   return TRUE;\n \n  fail:\n-  if (name != NULL)\n-    free (name);\n-  if (variants != NULL)\n-    free (variants);\n-  if (argtypes != NULL)\n-    free (argtypes);\n+  free (name);\n+  free (variants);\n+  free (argtypes);\n   return FALSE;\n }\n \n@@ -3901,8 +3897,7 @@ stab_demangle_argtypes (void *dhandle, struct stab_handle *info,\n   return minfo.args;\n \n  error_return:\n-  if (minfo.typestrings != NULL)\n-    free (minfo.typestrings);\n+  free (minfo.typestrings);\n   return NULL;\n }\n \n@@ -4516,8 +4511,7 @@ stab_demangle_template (struct stab_demangle_info *minfo, const char **pp,\n       if (s3 == NULL || s4 == NULL)\n \t{\n \t  stab_bad_demangle (orig);\n-\t  if (s3 != NULL)\n-\t    free (s3);\n+\t  free (s3);\n \t  return FALSE;\n \t}\n "
    },
    {
      "sha": "0aae65071fd35da50cb12b1ddb04a65a6e6c4f68",
      "filename": "binutils/windmc.c",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db70fc3656064555873332003d842b880ca470c/binutils/windmc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db70fc3656064555873332003d842b880ca470c/binutils/windmc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/windmc.c?ref=9db70fc3656064555873332003d842b880ca470c",
      "patch": "@@ -1161,12 +1161,9 @@ main (int argc, char **argv)\n     }\n   write_bin ();\n \n-  if (mc_nodes_lang)\n-    free (mc_nodes_lang);\n-  if (mc_severity_codes)\n-    free (mc_severity_codes);\n-  if (mc_facility_codes)\n-    free (mc_facility_codes);\n+  free (mc_nodes_lang);\n+  free (mc_severity_codes);\n+  free (mc_facility_codes);\n \n   xexit (0);\n   return 0;"
    },
    {
      "sha": "427e9823ce784edc6cd852cf3141b6cd998af2e5",
      "filename": "binutils/windres.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db70fc3656064555873332003d842b880ca470c/binutils/windres.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db70fc3656064555873332003d842b880ca470c/binutils/windres.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/windres.c?ref=9db70fc3656064555873332003d842b880ca470c",
      "patch": "@@ -704,8 +704,7 @@ quot (const char *string)\n   if ((buflen < slen * 2 + 2) || ! buf)\n     {\n       buflen = slen * 2 + 2;\n-      if (buf)\n-\tfree (buf);\n+      free (buf);\n       buf = (char *) xmalloc (buflen);\n     }\n "
    },
    {
      "sha": "0deed3151a3c9032440d8f27b374380ce36da8d9",
      "filename": "binutils/wrstabs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db70fc3656064555873332003d842b880ca470c/binutils/wrstabs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db70fc3656064555873332003d842b880ca470c/binutils/wrstabs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/wrstabs.c?ref=9db70fc3656064555873332003d842b880ca470c",
      "patch": "@@ -1224,8 +1224,7 @@ stab_method_type (void *p, bfd_boolean domainp, int argcount,\n     }\n   strcat (buf, \";\");\n \n-  if (args != NULL)\n-    free (args);\n+  free (args);\n \n   if (! stab_push_string (info, buf, 0, definition, 0))\n     return FALSE;"
    }
  ]
}