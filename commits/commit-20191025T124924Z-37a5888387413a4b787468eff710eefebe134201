{
  "sha": "37a5888387413a4b787468eff710eefebe134201",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzdhNTg4ODM4NzQxM2E0Yjc4NzQ2OGVmZjcxMGVlZmViZTEzNDIwMQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-10-25T09:16:24Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-10-25T12:49:24Z"
    },
    "message": "PR25125, relaxation chooses wrong branch size\n\nThe patch I made for PR12049 didn't test for a \"negative\" branch\nproperly.  \"if (target < address)\" ought to have been\n\"if (target < address + fragP->fr_fix)\".  Rather than making that\nchange, this patch adds fragP->fr_fix into address earlier.  The patch\nalso avoids running into a bad interaction with the m68k\nmd_prepare_relax_scan by returning zero growth immediately, since the\nadjusted target expression would result in a zero \"aim\".\n\n\tPR gas/25125\n\tPR gas/12049\n\t* write.c (relax_frag): Correct calculation of delta for\n\tpositive branches where \"stretch\" would make the branch\n\tnegative.  Return zero immediately in that case.  Correct\n\tTC_PCREL_ADJUST comment.",
    "tree": {
      "sha": "85003343520c718155045d0ea00437ef7b502930",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/85003343520c718155045d0ea00437ef7b502930"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/37a5888387413a4b787468eff710eefebe134201",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37a5888387413a4b787468eff710eefebe134201",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/37a5888387413a4b787468eff710eefebe134201",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37a5888387413a4b787468eff710eefebe134201/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "158da0d12a7c9bb01c6d9b8d3da609a1e2561916",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/158da0d12a7c9bb01c6d9b8d3da609a1e2561916",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/158da0d12a7c9bb01c6d9b8d3da609a1e2561916"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 13,
    "deletions": 4
  },
  "files": [
    {
      "sha": "8b78037430555b011d1fef184bae380076a6145c",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a5888387413a4b787468eff710eefebe134201/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a5888387413a4b787468eff710eefebe134201/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=37a5888387413a4b787468eff710eefebe134201",
      "patch": "@@ -1,3 +1,12 @@\n+2019-10-25  Alan Modra  <amodra@gmail.com>\n+\n+\tPR gas/25125\n+\tPR gas/12049\n+\t* write.c (relax_frag): Correct calculation of delta for\n+\tpositive branches where \"stretch\" would make the branch\n+\tnegative.  Return zero immediately in that case.  Correct\n+\tTC_PCREL_ADJUST comment.\n+\n 2019-10-16  Alan Modra  <amodra@gmail.com>\n \n \t* config/tc-xtensa.c (xg_order_trampoline_chain_entry): Don't"
    },
    {
      "sha": "8f7786eb367cc646e031cd8f46e8a00914e5336f",
      "filename": "gas/write.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a5888387413a4b787468eff710eefebe134201/gas/write.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a5888387413a4b787468eff710eefebe134201/gas/write.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/write.c?ref=37a5888387413a4b787468eff710eefebe134201",
      "patch": "@@ -2497,7 +2497,7 @@ relax_frag (segT segment, fragS *fragP, long stretch)\n   const relax_typeS *table;\n \n   target = fragP->fr_offset;\n-  address = fragP->fr_address;\n+  address = fragP->fr_address + fragP->fr_fix;\n   table = TC_GENERIC_RELAX_TABLE;\n   this_state = fragP->fr_subtype;\n   start_type = this_type = table + this_state;\n@@ -2537,13 +2537,13 @@ relax_frag (segT segment, fragS *fragP, long stretch)\n \t     negative.  Don't allow this in case the negative reach is\n \t     large enough to require a larger branch instruction.  */\n \t  else if (target < address)\n-\t    target = fragP->fr_next->fr_address + stretch;\n+\t    return 0;\n \t}\n     }\n \n-  aim = target - address - fragP->fr_fix;\n+  aim = target - address;\n #ifdef TC_PCREL_ADJUST\n-  /* Currently only the ns32k family needs this.  */\n+  /* Currently only the ns32k and arc needs this.  */\n   aim += TC_PCREL_ADJUST (fragP);\n #endif\n "
    }
  ]
}