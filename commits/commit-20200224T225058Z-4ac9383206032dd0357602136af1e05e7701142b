{
  "sha": "4ac9383206032dd0357602136af1e05e7701142b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGFjOTM4MzIwNjAzMmRkMDM1NzYwMjEzNmFmMWUwNWU3NzAxMTQyYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-24T22:50:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-24T22:50:58Z"
    },
    "message": "Fix a memory leak and remove an unused member\n\nI noticed that setup_type_unit_groups leaks the symtab vector -- it\nallocates this with XNEWVEC, but from what I can tell, nothing frees\nit.  This patch changes it to use XOBNEWVEC.\n\nAlso, the type_unit_unshareable::num_symtabs member is assigned but\nnever read.  So, this removes it.\n\ngdb/ChangeLog\n2020-02-24  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.h (struct type_unit_unshareable) <num_symtabs>:\n\tRemove.\n\t* dwarf2/read.c (dwarf2_cu::setup_type_unit_groups): Use\n\tXOBNEWVEC.",
    "tree": {
      "sha": "1c681b7b640328c94f9baf2cc5bdf39552860f16",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1c681b7b640328c94f9baf2cc5bdf39552860f16"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4ac9383206032dd0357602136af1e05e7701142b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ac9383206032dd0357602136af1e05e7701142b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4ac9383206032dd0357602136af1e05e7701142b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ac9383206032dd0357602136af1e05e7701142b/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "197400e8009fa9a15ddc59cbf2cc32b0debd3424",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/197400e8009fa9a15ddc59cbf2cc32b0debd3424",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/197400e8009fa9a15ddc59cbf2cc32b0debd3424"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 10,
    "deletions": 7
  },
  "files": [
    {
      "sha": "1a159470e66796ef8e2f319b6378e2416d21eff6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ac9383206032dd0357602136af1e05e7701142b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ac9383206032dd0357602136af1e05e7701142b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4ac9383206032dd0357602136af1e05e7701142b",
      "patch": "@@ -1,3 +1,10 @@\n+2020-02-24  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.h (struct type_unit_unshareable) <num_symtabs>:\n+\tRemove.\n+\t* dwarf2/read.c (dwarf2_cu::setup_type_unit_groups): Use\n+\tXOBNEWVEC.\n+\n 2020-02-24  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.h (struct dwarf2_per_cu_data) <type_unit_group_p>:"
    },
    {
      "sha": "d97956ecb6ace0dcda4c111ae25e077f835f5654",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ac9383206032dd0357602136af1e05e7701142b/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ac9383206032dd0357602136af1e05e7701142b/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=4ac9383206032dd0357602136af1e05e7701142b",
      "patch": "@@ -589,10 +589,6 @@ struct type_unit_group\n   /* The data used to construct the hash key.  */\n   struct stmt_list_hash hash;\n \n-  /* The number of symtabs from the line header.\n-     The value here must match line_header.num_file_names.  */\n-  unsigned int num_symtabs;\n-\n   /* The symbol tables for this TU (obtained from the files listed in\n      DW_AT_stmt_list).\n      WARNING: The order of entries here must match the order of entries\n@@ -10854,9 +10850,9 @@ dwarf2_cu::setup_type_unit_groups (struct die_info *die)\n \t process_full_type_unit still needs to know if this is the first\n \t time.  */\n \n-      tu_group->num_symtabs = line_header->file_names_size ();\n-      tu_group->symtabs = XNEWVEC (struct symtab *,\n-\t\t\t\t   line_header->file_names_size ());\n+      tu_group->symtabs\n+\t= XOBNEWVEC (&COMPUNIT_OBJFILE (cust)->objfile_obstack,\n+\t\t     struct symtab *, line_header->file_names_size ());\n \n       auto &file_names = line_header->file_names ();\n       for (i = 0; i < file_names.size (); ++i)"
    }
  ]
}