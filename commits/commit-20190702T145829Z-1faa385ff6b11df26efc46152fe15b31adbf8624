{
  "sha": "1faa385ff6b11df26efc46152fe15b31adbf8624",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWZhYTM4NWZmNmIxMWRmMjZlZmM0NjE1MmZlMTViMzFhZGJmODYyNA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-07-02T14:58:29Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-07-02T14:58:29Z"
    },
    "message": "Stop the BFD library from issuing a warning message when processing allocated sections in debuginfo files that lie outside of any loadable segment.\n\n\tPR 24717\n\t* elf.c (is_debuginfo_file): New function.\n\t(assign_file_positions_for_non_load_sections): Do not warn about\n\tallocated sections outside of loadable segments if they are found\n\tin a debuginfo file.\n\t* elf-bfd.h (is_debuginfo_file): Prototype.",
    "tree": {
      "sha": "1986e9f8225acf817943dcaa56b2ca645a9f5ea4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1986e9f8225acf817943dcaa56b2ca645a9f5ea4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1faa385ff6b11df26efc46152fe15b31adbf8624",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1faa385ff6b11df26efc46152fe15b31adbf8624",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1faa385ff6b11df26efc46152fe15b31adbf8624",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1faa385ff6b11df26efc46152fe15b31adbf8624/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "854f60884cc35806dab1c0f9e7711c45cefaf7fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/854f60884cc35806dab1c0f9e7711c45cefaf7fc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/854f60884cc35806dab1c0f9e7711c45cefaf7fc"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 47,
    "deletions": 1
  },
  "files": [
    {
      "sha": "1e2a3f1b79332809c2459a926cb25f9e61bbec48",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1faa385ff6b11df26efc46152fe15b31adbf8624/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1faa385ff6b11df26efc46152fe15b31adbf8624/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=1faa385ff6b11df26efc46152fe15b31adbf8624",
      "patch": "@@ -1,3 +1,12 @@\n+2019-07-02  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24717\n+\t* elf.c (is_debuginfo_file): New function.\n+\t(assign_file_positions_for_non_load_sections): Do not warn about\n+\tallocated sections outside of loadable segments if they are found\n+\tin a debuginfo file.\n+\t* elf-bfd.h (is_debuginfo_file): Prototype.\n+\n 2019-07-02  Nick Clifton  <nickc@redhat.com>\n \n \tPR 24753"
    },
    {
      "sha": "a6a831b206ba029f2189269d95798f8c9f8616c5",
      "filename": "bfd/elf-bfd.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1faa385ff6b11df26efc46152fe15b31adbf8624/bfd/elf-bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1faa385ff6b11df26efc46152fe15b31adbf8624/bfd/elf-bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-bfd.h?ref=1faa385ff6b11df26efc46152fe15b31adbf8624",
      "patch": "@@ -2751,6 +2751,8 @@ extern bfd_vma elf64_r_sym (bfd_vma);\n extern bfd_vma elf32_r_info (bfd_vma, bfd_vma);\n extern bfd_vma elf32_r_sym (bfd_vma);\n \n+extern bfd_boolean is_debuginfo_file (bfd *);\n+\n /* Large common section.  */\n extern asection _bfd_elf_large_com_section;\n "
    },
    {
      "sha": "265150d5114acf06459a07194c4db8e9c506f66f",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 36,
      "deletions": 1,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1faa385ff6b11df26efc46152fe15b31adbf8624/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1faa385ff6b11df26efc46152fe15b31adbf8624/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=1faa385ff6b11df26efc46152fe15b31adbf8624",
      "patch": "@@ -5810,6 +5810,35 @@ assign_file_positions_for_load_sections (bfd *abfd,\n   return TRUE;\n }\n \n+/* Determine if a bfd is a debuginfo file.  Unfortunately there\n+   is no defined method for detecting such files, so we have to\n+   use heuristics instead.  */\n+\n+bfd_boolean\n+is_debuginfo_file (bfd *abfd)\n+{\n+  if (abfd == NULL || bfd_get_flavour (abfd) != bfd_target_elf_flavour)\n+    return FALSE;\n+\n+  Elf_Internal_Shdr **start_headers = elf_elfsections (abfd);\n+  Elf_Internal_Shdr **end_headers = start_headers + elf_numsections (abfd);\n+  Elf_Internal_Shdr **headerp;\n+\n+  for (headerp = start_headers; headerp < end_headers; headerp ++)\n+    {\n+      Elf_Internal_Shdr *header = * headerp;\n+\n+      /* Debuginfo files do not have any allocated SHT_PROGBITS sections.\n+\t The only allocated sections are SHT_NOBITS or SHT_NOTES.  */\n+      if ((header->sh_flags & SHF_ALLOC) == SHF_ALLOC\n+\t  && header->sh_type != SHT_NOBITS\n+\t  && header->sh_type != SHT_NOTE)\n+\treturn FALSE;\n+    }\n+\n+  return TRUE;\n+}\n+\n /* Assign file positions for the other sections.  */\n \n static bfd_boolean\n@@ -5843,7 +5872,13 @@ assign_file_positions_for_non_load_sections (bfd *abfd,\n \tBFD_ASSERT (hdr->sh_offset == hdr->bfd_section->filepos);\n       else if ((hdr->sh_flags & SHF_ALLOC) != 0)\n \t{\n-\t  if (hdr->sh_size != 0)\n+\t  if (hdr->sh_size != 0\n+\t      /* PR 24717 - debuginfo files are known to be not strictly\n+\t\t compliant with the ELF standard.  In particular they often\n+\t\t have .note.gnu.property sections that are outside of any\n+\t\t loadable segment.  This is not a problem for such files,\n+\t\t so do not warn about them.  */\n+\t      && ! is_debuginfo_file (abfd))\n \t    _bfd_error_handler\n \t      /* xgettext:c-format */\n \t      (_(\"%pB: warning: allocated section `%s' not in segment\"),"
    }
  ]
}