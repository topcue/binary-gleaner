{
  "sha": "70d3120f32281980105169dee74440146e97702e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzBkMzEyMGYzMjI4MTk4MDEwNTE2OWRlZTc0NDQwMTQ2ZTk3NzAyZQ==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-01-05T17:11:20Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-01-05T17:11:20Z"
    },
    "message": "libctf, testsuite: don't run without a suitable compiler\n\nWe never actually check to see if the compiler supports CTF,\nor even if a suitable compiler exists.\n\nlibctf/ChangeLog\n2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* Makefile.am (BASEDIR): New.\n\t(BFDDIR): Likewise.\n\t(check-DEJAGNU): Add development.exp to prerequisites.\n\t(development.exp): New.\n\t(CONFIG_STATUS_DEPENDENCIES): New.\n\t(EXTRA_DEJAGNU_SITE_CONFIG): Likewise.\n\t(DISTCLEANFILES): Likewise.\n\t* Makefile.in: Regenerated.\n\t* testsuite/lib/ctf-lib.exp (check_ctf_available): Return boolean.\n\t* testsuite/libctf-lookup/lookup.exp: Call check_ctf_available.\n\t* testsuite/libctf-regression/regression.exp: Likewise.",
    "tree": {
      "sha": "0b30270fcc831e78afcfc644360576c349f3adc2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0b30270fcc831e78afcfc644360576c349f3adc2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/70d3120f32281980105169dee74440146e97702e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/70d3120f32281980105169dee74440146e97702e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/70d3120f32281980105169dee74440146e97702e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/70d3120f32281980105169dee74440146e97702e/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b4b6ea46807ec9c01ed4f4f18a50840358d16c28",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b4b6ea46807ec9c01ed4f4f18a50840358d16c28",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b4b6ea46807ec9c01ed4f4f18a50840358d16c28"
    }
  ],
  "stats": {
    "total": 60,
    "additions": 57,
    "deletions": 3
  },
  "files": [
    {
      "sha": "0f5e96a2c839c437113eb9c21935eb5850d188a5",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70d3120f32281980105169dee74440146e97702e/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70d3120f32281980105169dee74440146e97702e/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=70d3120f32281980105169dee74440146e97702e",
      "patch": "@@ -1,3 +1,17 @@\n+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* Makefile.am (BASEDIR): New.\n+\t(BFDDIR): Likewise.\n+\t(check-DEJAGNU): Add development.exp to prerequisites.\n+\t(development.exp): New.\n+\t(CONFIG_STATUS_DEPENDENCIES): New.\n+\t(EXTRA_DEJAGNU_SITE_CONFIG): Likewise.\n+\t(DISTCLEANFILES): Likewise.\n+\t* Makefile.in: Regenerated.\n+\t* testsuite/lib/ctf-lib.exp (check_ctf_available): Return boolean.\n+\t* testsuite/libctf-lookup/lookup.exp: Call check_ctf_available.\n+\t* testsuite/libctf-regression/regression.exp: Likewise.\n+\n 2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-types.c (ctf_type_aname): Print forwards to unions and enums"
    },
    {
      "sha": "f45433483c03217b594dcaf055141585fca9f839",
      "filename": "libctf/Makefile.am",
      "status": "modified",
      "additions": 14,
      "deletions": 1,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70d3120f32281980105169dee74440146e97702e/libctf/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70d3120f32281980105169dee74440146e97702e/libctf/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.am?ref=70d3120f32281980105169dee74440146e97702e",
      "patch": "@@ -27,6 +27,8 @@ AUTOMAKE_OPTIONS = dejagnu foreign no-texinfo.tex\n ZLIB = @zlibdir@ -lz\n ZLIBINC = @zlibinc@\n \n+BASEDIR = $(srcdir)/..\n+BFDDIR = $(BASEDIR)/bfd\n INCDIR = $(srcdir)/../include\n AM_CPPFLAGS = -D_GNU_SOURCE -I$(srcdir) -I$(srcdir)/../include -I$(srcdir)/../bfd -I../bfd @INCINTL@\n AM_CFLAGS = -std=gnu99 @ac_libctf_warn_cflags@ @warn@ @c_warn@ @WARN_PEDANTIC@ @WERROR@ $(ZLIBINC)\n@@ -75,7 +77,7 @@ CC_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-check-DEJAGNU: site.exp\n+check-DEJAGNU: site.exp development.exp\n \tsrcroot=`cd $(srcdir) && pwd`; export srcroot; \\\n \tr=`pwd`; export r; \\\n \tLC_ALL=C; export LC_ALL; \\\n@@ -87,3 +89,14 @@ check-DEJAGNU: site.exp\n \t\tCC_FOR_HOST=\"$(CC)\" LIBS=\"$(LIBS)\" $(RUNTESTFLAGS); \\\n \telse echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n \tfi\n+\n+development.exp: $(BFDDIR)/development.sh\n+\t$(EGREP) \"(development|experimental)=\" $(BFDDIR)/development.sh  \\\n+\t  | $(AWK) -F= '{ print \"set \" $$1 \" \" $$2 }' > $@\n+\n+# development.sh is used to determine -Werror default.\n+CONFIG_STATUS_DEPENDENCIES = $(BFDDIR)/development.sh\n+\n+EXTRA_DEJAGNU_SITE_CONFIG = development.exp\n+\n+DISTCLEANFILES = site.exp development.exp"
    },
    {
      "sha": "d31d017c1f5ea9cdae08381299791cf64822ba24",
      "filename": "libctf/Makefile.in",
      "status": "modified",
      "additions": 13,
      "deletions": 1,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70d3120f32281980105169dee74440146e97702e/libctf/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70d3120f32281980105169dee74440146e97702e/libctf/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.in?ref=70d3120f32281980105169dee74440146e97702e",
      "patch": "@@ -448,6 +448,8 @@ AUTOMAKE_OPTIONS = dejagnu foreign no-texinfo.tex\n # case both are empty.\n ZLIB = @zlibdir@ -lz\n ZLIBINC = @zlibinc@\n+BASEDIR = $(srcdir)/..\n+BFDDIR = $(BASEDIR)/bfd\n INCDIR = $(srcdir)/../include\n AM_CPPFLAGS = -D_GNU_SOURCE -I$(srcdir) -I$(srcdir)/../include -I$(srcdir)/../bfd -I../bfd @INCINTL@\n AM_CFLAGS = -std=gnu99 @ac_libctf_warn_cflags@ @warn@ @c_warn@ @WARN_PEDANTIC@ @WERROR@ $(ZLIBINC)\n@@ -486,6 +488,11 @@ CC_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n+\n+# development.sh is used to determine -Werror default.\n+CONFIG_STATUS_DEPENDENCIES = $(BFDDIR)/development.sh\n+EXTRA_DEJAGNU_SITE_CONFIG = development.exp\n+DISTCLEANFILES = site.exp development.exp\n all: config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-am\n \n@@ -1216,6 +1223,7 @@ clean-generic:\n distclean-generic:\n \t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n \t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\t-test -z \"$(DISTCLEANFILES)\" || rm -f $(DISTCLEANFILES)\n \n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\"\n@@ -1319,7 +1327,7 @@ uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES\n .PRECIOUS: Makefile\n \n \n-check-DEJAGNU: site.exp\n+check-DEJAGNU: site.exp development.exp\n \tsrcroot=`cd $(srcdir) && pwd`; export srcroot; \\\n \tr=`pwd`; export r; \\\n \tLC_ALL=C; export LC_ALL; \\\n@@ -1332,6 +1340,10 @@ check-DEJAGNU: site.exp\n \telse echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n \tfi\n \n+development.exp: $(BFDDIR)/development.sh\n+\t$(EGREP) \"(development|experimental)=\" $(BFDDIR)/development.sh  \\\n+\t  | $(AWK) -F= '{ print \"set \" $$1 \" \" $$2 }' > $@\n+\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"
    },
    {
      "sha": "fe02812219545a8eaf4b35a8344d18f14b3411a5",
      "filename": "libctf/testsuite/lib/ctf-lib.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70d3120f32281980105169dee74440146e97702e/libctf/testsuite/lib/ctf-lib.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70d3120f32281980105169dee74440146e97702e/libctf/testsuite/lib/ctf-lib.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/lib/ctf-lib.exp?ref=70d3120f32281980105169dee74440146e97702e",
      "patch": "@@ -399,7 +399,12 @@ proc check_ctf_available { } {\n \t    set f [open $src \"w\"]\n \t    puts $f \"int main() { return 0; }\"\n \t    close $f\n-\t    set ctf_available_saved [compile_one_cc $src $output \"-gt -c\"]\n+\t    set comp_output [compile_one_cc $src $output \"-gt -c\"]\n+            if { $comp_output == \"\"} {\n+                set ctf_available_saved 1\n+            } else {\n+                set ctf_available_saved 0\n+            }\n \t    remote_file host delete $src\n \t    remote_file host delete $output\n \t    file delete $src"
    },
    {
      "sha": "84ff46ce4d858b06844601e5cbdd5bcbbc37a54b",
      "filename": "libctf/testsuite/libctf-lookup/lookup.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70d3120f32281980105169dee74440146e97702e/libctf/testsuite/libctf-lookup/lookup.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70d3120f32281980105169dee74440146e97702e/libctf/testsuite/libctf-lookup/lookup.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/libctf-lookup/lookup.exp?ref=70d3120f32281980105169dee74440146e97702e",
      "patch": "@@ -23,6 +23,11 @@ if ![is_elf_format] {\n     return 0\n }\n \n+if {![check_ctf_available]} {\n+    unsupported \"no CTF format support in the compiler\"\n+    return 0\n+}\n+\n if {[info exists env(LC_ALL)]} {\n     set old_lc_all $env(LC_ALL)\n }"
    },
    {
      "sha": "605d96f57b7c256c85e34d46835fa63a6d6918bc",
      "filename": "libctf/testsuite/libctf-regression/regression.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70d3120f32281980105169dee74440146e97702e/libctf/testsuite/libctf-regression/regression.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70d3120f32281980105169dee74440146e97702e/libctf/testsuite/libctf-regression/regression.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/libctf-regression/regression.exp?ref=70d3120f32281980105169dee74440146e97702e",
      "patch": "@@ -18,6 +18,11 @@\n # MA 02110-1301, USA.\n #\n \n+if {![check_ctf_available]} {\n+    unsupported \"no CTF format support in the compiler\"\n+    return 0\n+}\n+\n if ![is_elf_format] {\n     unsupported \"CTF needs bfd changes to be emitted on non-ELF\"\n     return 0"
    }
  ]
}