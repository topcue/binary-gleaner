{
  "sha": "8c4b5f3d987c80a1746e3f198bb060d7d7671945",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGM0YjVmM2Q5ODdjODBhMTc0NmUzZjE5OGJiMDYwZDdkNzY3MTk0NQ==",
  "commit": {
    "author": {
      "name": "Michael Weghorn",
      "email": "m.weghorn@posteo.de",
      "date": "2020-05-25T15:38:32Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-05-25T15:38:45Z"
    },
    "message": "gdbsupport: Let construct_inferior_arguments take gdb::array_view param\n\nAdapt the construct_inferior_arguments function to\ntake a gdb::array_view<char * const> parameter instead\nof a char * array and an int indicating the length\nand adapt the only call site.\n\nThis will allow calling it more simply in a follow-up\npatch introducing more uses of the function.\n\ngdbsupport/ChangeLog:\n\n\t* common-inferior.cc, common-inferior.h (construct_inferior_arguments):\n\tAdapt to take a gdb::array_view<char * const> parameter.\n\tAdapt call site.\n\nChange-Id: I1c6496c8c0b0eb3ef3fda96e9e3bd64c5e6cac3c",
    "tree": {
      "sha": "df99a374fb4b48754c1438e7e5279b62b8565d8d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/df99a374fb4b48754c1438e7e5279b62b8565d8d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8c4b5f3d987c80a1746e3f198bb060d7d7671945",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c4b5f3d987c80a1746e3f198bb060d7d7671945",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8c4b5f3d987c80a1746e3f198bb060d7d7671945",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c4b5f3d987c80a1746e3f198bb060d7d7671945/comments",
  "author": {
    "login": "michaelweghorn",
    "id": 6560939,
    "node_id": "MDQ6VXNlcjY1NjA5Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6560939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelweghorn",
    "html_url": "https://github.com/michaelweghorn",
    "followers_url": "https://api.github.com/users/michaelweghorn/followers",
    "following_url": "https://api.github.com/users/michaelweghorn/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelweghorn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelweghorn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelweghorn/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelweghorn/orgs",
    "repos_url": "https://api.github.com/users/michaelweghorn/repos",
    "events_url": "https://api.github.com/users/michaelweghorn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelweghorn/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c699004a29093c69fc6aeed04bbd838362666676",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c699004a29093c69fc6aeed04bbd838362666676",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c699004a29093c69fc6aeed04bbd838362666676"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 20,
    "deletions": 12
  },
  "files": [
    {
      "sha": "891da91c806e42612ded631e7063b942e8056d54",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c4b5f3d987c80a1746e3f198bb060d7d7671945/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c4b5f3d987c80a1746e3f198bb060d7d7671945/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=8c4b5f3d987c80a1746e3f198bb060d7d7671945",
      "patch": "@@ -151,8 +151,9 @@ get_inferior_args (void)\n {\n   if (current_inferior ()->argc != 0)\n     {\n-      std::string n = construct_inferior_arguments (current_inferior ()->argc,\n-\t\t\t\t\t            current_inferior ()->argv);\n+      gdb::array_view<char * const> args (current_inferior ()->argv,\n+                                          current_inferior ()->argc);\n+      std::string n = construct_inferior_arguments (args);\n       set_inferior_args (n.c_str ());\n     }\n "
    },
    {
      "sha": "61b57ffc456bf959bb1c75b4a3fc5342db766751",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c4b5f3d987c80a1746e3f198bb060d7d7671945/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c4b5f3d987c80a1746e3f198bb060d7d7671945/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=8c4b5f3d987c80a1746e3f198bb060d7d7671945",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-25  Michael Weghorn  <m.weghorn@posteo.de>\n+\n+\t* common-inferior.cc, common-inferior.h (construct_inferior_arguments):\n+\tAdapt to take a gdb::array_view<char * const> parameter.\n+\tAdapt call site.\n+\n 2020-05-25  Michael Weghorn  <m.weghorn@posteo.de>\n \n \t* common-inferior.cc, common-inferior.h (construct_inferior_arguments):"
    },
    {
      "sha": "a67d1740a27d78f13c31b1b9658c96d5cdf7ca30",
      "filename": "gdbsupport/common-inferior.cc",
      "status": "modified",
      "additions": 7,
      "deletions": 9,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c4b5f3d987c80a1746e3f198bb060d7d7671945/gdbsupport/common-inferior.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c4b5f3d987c80a1746e3f198bb060d7d7671945/gdbsupport/common-inferior.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/common-inferior.cc?ref=8c4b5f3d987c80a1746e3f198bb060d7d7671945",
      "patch": "@@ -28,10 +28,8 @@ bool startup_with_shell = true;\n /* See common-inferior.h.  */\n \n std::string\n-construct_inferior_arguments (int argc, char * const *argv)\n+construct_inferior_arguments (gdb::array_view<char * const> argv)\n {\n-  gdb_assert (argc >= 0);\n-\n   std::string result;\n \n   if (startup_with_shell)\n@@ -48,7 +46,7 @@ construct_inferior_arguments (int argc, char * const *argv)\n       static const char special[] = \"\\\"!#$&*()\\\\|[]{}<>?'`~^; \\t\\n\";\n       static const char quote = '\\'';\n #endif\n-      for (int i = 0; i < argc; ++i)\n+      for (int i = 0; i < argv.size (); ++i)\n \t{\n \t  if (i > 0)\n \t    result += ' ';\n@@ -103,19 +101,19 @@ construct_inferior_arguments (int argc, char * const *argv)\n     {\n       /* In this case we can't handle arguments that contain spaces,\n \t tabs, or newlines -- see breakup_args().  */\n-      for (int i = 0; i < argc; ++i)\n+      for (char *arg : argv)\n \t{\n-\t  char *cp = strchr (argv[i], ' ');\n+\t  char *cp = strchr (arg, ' ');\n \t  if (cp == NULL)\n-\t    cp = strchr (argv[i], '\\t');\n+\t    cp = strchr (arg, '\\t');\n \t  if (cp == NULL)\n-\t    cp = strchr (argv[i], '\\n');\n+\t    cp = strchr (arg, '\\n');\n \t  if (cp != NULL)\n \t    error (_(\"can't handle command-line \"\n \t\t     \"argument containing whitespace\"));\n \t}\n \n-      for (int i = 0; i < argc; ++i)\n+      for (int i = 0; i < argv.size (); ++i)\n \t{\n \t  if (i > 0)\n \t    result += \" \";"
    },
    {
      "sha": "4362934cefde8407bb42eb8569c7b7372fd1b0b0",
      "filename": "gdbsupport/common-inferior.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c4b5f3d987c80a1746e3f198bb060d7d7671945/gdbsupport/common-inferior.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c4b5f3d987c80a1746e3f198bb060d7d7671945/gdbsupport/common-inferior.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/common-inferior.h?ref=8c4b5f3d987c80a1746e3f198bb060d7d7671945",
      "patch": "@@ -21,6 +21,8 @@\n #ifndef COMMON_COMMON_INFERIOR_H\n #define COMMON_COMMON_INFERIOR_H\n \n+#include \"gdbsupport/array-view.h\"\n+\n /* Return the exec wrapper to be used when starting the inferior, or NULL\n    otherwise.  */\n extern const char *get_exec_wrapper ();\n@@ -60,6 +62,7 @@ extern bool startup_with_shell;\n \n /* Compute command-line string given argument vector. This does the\n    same shell processing as fork_inferior.  */\n-extern std::string construct_inferior_arguments (int, char * const *);\n+extern std::string\n+construct_inferior_arguments (gdb::array_view<char * const>);\n \n #endif /* COMMON_COMMON_INFERIOR_H */"
    }
  ]
}