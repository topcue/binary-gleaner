{
  "sha": "89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODliZGM3N2VhYmY1ZWRlNjgzMjJmNmU0N2UwMDNjMWRjNDViOWNjYg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-02T06:43:05Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-05T02:03:34Z"
    },
    "message": "PR24955, libbfd terminating program on out of memory\n\nThis patch fixes the worst of the cases where libbfd might terminate\na program due to calling xstrdup or xmalloc.  I've also fixed some\nerror paths that didn't clean up properly.\n\n\tPR 24955\n\t* libbfd-in.h (bfd_strdup): New inline function.\n\t* archive.c (_bfd_get_elt_at_filepos): Use bfd_strdup.  Close\n\tbfd on error.\n\t* elfcode.h (_bfd_elf_bfd_from_remote_memory): Use bfd_strdup.\n\t* opncls.c (bfd_fopen): Use bfd_strdup.  Close fd and stream\n\ton error.\n\t(bfd_openstreamr): Use bfd_strdup.\n\t(bfd_openr_iovec, bfd_openw, bfd_create): Likewise.\n\t* plugin.c (try_load_plugin): Use bfd_malloc.\n\t* libbfd.h: Regenerate.",
    "tree": {
      "sha": "87e650254fe116fdf69906ca003a0d8c34c491ac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/87e650254fe116fdf69906ca003a0d8c34c491ac"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "809f9153986595498fbb59e547ea4e75a94a50f6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/809f9153986595498fbb59e547ea4e75a94a50f6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/809f9153986595498fbb59e547ea4e75a94a50f6"
    }
  ],
  "stats": {
    "total": 94,
    "additions": 85,
    "deletions": 9
  },
  "files": [
    {
      "sha": "319ba5a57129c80fd77256d75c0d83e54bf49a74",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
      "patch": "@@ -1,3 +1,17 @@\n+2019-09-05  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24955\n+\t* libbfd-in.h (bfd_strdup): New inline function.\n+\t* archive.c (_bfd_get_elt_at_filepos): Use bfd_strdup.  Close\n+\tbfd on error.\n+\t* elfcode.h (_bfd_elf_bfd_from_remote_memory): Use bfd_strdup.\n+\t* opncls.c (bfd_fopen): Use bfd_strdup.  Close fd and stream\n+\ton error.\n+\t(bfd_openstreamr): Use bfd_strdup.\n+\t(bfd_openr_iovec, bfd_openw, bfd_create): Likewise.\n+\t* plugin.c (try_load_plugin): Use bfd_malloc.\n+\t* libbfd.h: Regenerate.\n+\n 2019-09-02  Alan Modra  <amodra@gmail.com>\n \n \tPR 11983"
    },
    {
      "sha": "ef71e8a79632c0d4306c091ab3d40a2460fc1e58",
      "filename": "bfd/archive.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/archive.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/archive.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/archive.c?ref=89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
      "patch": "@@ -728,7 +728,9 @@ _bfd_get_elt_at_filepos (bfd *archive, file_ptr filepos)\n   else\n     {\n       n_bfd->origin = n_bfd->proxy_origin;\n-      n_bfd->filename = xstrdup (filename);\n+      n_bfd->filename = bfd_strdup (filename);\n+      if (n_bfd->filename == NULL)\n+\tgoto out;\n     }\n \n   n_bfd->arelt_data = new_areldata;\n@@ -745,8 +747,10 @@ _bfd_get_elt_at_filepos (bfd *archive, file_ptr filepos)\n       || _bfd_add_bfd_to_archive_cache (archive, filepos, n_bfd))\n     return n_bfd;\n \n+ out:\n   free (new_areldata);\n   n_bfd->arelt_data = NULL;\n+  bfd_close (n_bfd);\n   return NULL;\n }\n "
    },
    {
      "sha": "625ae993df6a609ae982a788d1e7e3849f747e10",
      "filename": "bfd/elfcode.h",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/elfcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/elfcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfcode.h?ref=89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
      "patch": "@@ -1652,6 +1652,7 @@ NAME(_bfd_elf,bfd_from_remote_memory)\n   bfd_vma high_offset;\n   bfd_vma shdr_end;\n   bfd_vma loadbase;\n+  char *filename;\n \n   /* Read in the ELF header in external format.  */\n   err = target_read_memory (ehdr_vma, (bfd_byte *) &x_ehdr, sizeof x_ehdr);\n@@ -1859,14 +1860,22 @@ NAME(_bfd_elf,bfd_from_remote_memory)\n       free (contents);\n       return NULL;\n     }\n+  filename = bfd_strdup (\"<in-memory>\");\n+  if (filename == NULL)\n+    {\n+      free (bim);\n+      free (contents);\n+      return NULL;\n+    }\n   nbfd = _bfd_new_bfd ();\n   if (nbfd == NULL)\n     {\n+      free (filename);\n       free (bim);\n       free (contents);\n       return NULL;\n     }\n-  nbfd->filename = xstrdup (\"<in-memory>\");\n+  nbfd->filename = filename;\n   nbfd->xvec = templ->xvec;\n   bim->size = high_offset;\n   bim->buffer = contents;"
    },
    {
      "sha": "cac4d3b022e9273aefdd50640d2cbed064d1352a",
      "filename": "bfd/libbfd-in.h",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/libbfd-in.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/libbfd-in.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd-in.h?ref=89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
      "patch": "@@ -123,6 +123,15 @@ extern void *bfd_realloc2\n extern void *bfd_zmalloc2\n   (bfd_size_type, bfd_size_type) ATTRIBUTE_HIDDEN;\n \n+static inline char *\n+bfd_strdup (const char *str)\n+{\n+  size_t len = strlen (str) + 1;\n+  char *buf = bfd_malloc (len);\n+  if (buf != NULL)\n+    memcpy (buf, str, len);\n+  return buf;\n+}\n /* These routines allocate and free things on the BFD's objalloc.  */\n \n extern void *bfd_alloc2"
    },
    {
      "sha": "aabe247068e8c80b69b890c12bedb6e0ba8027f7",
      "filename": "bfd/libbfd.h",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/libbfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/libbfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd.h?ref=89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
      "patch": "@@ -128,6 +128,15 @@ extern void *bfd_realloc2\n extern void *bfd_zmalloc2\n   (bfd_size_type, bfd_size_type) ATTRIBUTE_HIDDEN;\n \n+static inline char *\n+bfd_strdup (const char *str)\n+{\n+  size_t len = strlen (str) + 1;\n+  char *buf = bfd_malloc (len);\n+  if (buf != NULL)\n+    memcpy (buf, str, len);\n+  return buf;\n+}\n /* These routines allocate and free things on the BFD's objalloc.  */\n \n extern void *bfd_alloc2"
    },
    {
      "sha": "07f89b9a4c152a1c69933cea62a84c5e2c4be3c3",
      "filename": "bfd/opncls.c",
      "status": "modified",
      "additions": 35,
      "deletions": 6,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/opncls.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/opncls.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/opncls.c?ref=89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
      "patch": "@@ -223,6 +223,8 @@ bfd_fopen (const char *filename, const char *target, const char *mode, int fd)\n   if (nbfd->iostream == NULL)\n     {\n       bfd_set_error (bfd_error_system_call);\n+      if (fd != -1)\n+\tclose (fd);\n       _bfd_delete_bfd (nbfd);\n       return NULL;\n     }\n@@ -231,7 +233,13 @@ bfd_fopen (const char *filename, const char *target, const char *mode, int fd)\n \n   /* PR 11983: Do not cache the original filename, but\n      rather make a copy - the original might go away.  */\n-  nbfd->filename = xstrdup (filename);\n+  nbfd->filename = bfd_strdup (filename);\n+  if (nbfd->filename == NULL)\n+    {\n+      fclose (nbfd->iostream);\n+      _bfd_delete_bfd (nbfd);\n+      return NULL;\n+    }\n \n   /* Figure out whether the user is opening the file for reading,\n      writing, or both, by looking at the MODE argument.  */\n@@ -243,8 +251,9 @@ bfd_fopen (const char *filename, const char *target, const char *mode, int fd)\n   else\n     nbfd->direction = write_direction;\n \n-  if (! bfd_cache_init (nbfd))\n+  if (!bfd_cache_init (nbfd))\n     {\n+      fclose (nbfd->iostream);\n       _bfd_delete_bfd (nbfd);\n       return NULL;\n     }\n@@ -398,7 +407,12 @@ bfd_openstreamr (const char *filename, const char *target, void *streamarg)\n   nbfd->iostream = stream;\n   /* PR 11983: Do not cache the original filename, but\n      rather make a copy - the original might go away.  */\n-  nbfd->filename = xstrdup (filename);\n+  nbfd->filename = bfd_strdup (filename);\n+  if (nbfd->filename == NULL)\n+    {\n+      _bfd_delete_bfd (nbfd);\n+      return NULL;\n+    }\n   nbfd->direction = read_direction;\n \n   if (! bfd_cache_init (nbfd))\n@@ -594,7 +608,12 @@ bfd_openr_iovec (const char *filename, const char *target,\n \n   /* PR 11983: Do not cache the original filename, but\n      rather make a copy - the original might go away.  */\n-  nbfd->filename = xstrdup (filename);\n+  nbfd->filename = bfd_strdup (filename);\n+  if (nbfd->filename == NULL)\n+    {\n+      _bfd_delete_bfd (nbfd);\n+      return NULL;\n+    }\n   nbfd->direction = read_direction;\n \n   /* `open_p (...)' would get expanded by an the open(2) syscall macro.  */\n@@ -661,7 +680,12 @@ bfd_openw (const char *filename, const char *target)\n \n   /* PR 11983: Do not cache the original filename, but\n      rather make a copy - the original might go away.  */\n-  nbfd->filename = xstrdup (filename);\n+  nbfd->filename = bfd_strdup (filename);\n+  if (nbfd->filename == NULL)\n+    {\n+      _bfd_delete_bfd (nbfd);\n+      return NULL;\n+    }\n   nbfd->direction = write_direction;\n \n   if (bfd_open_file (nbfd) == NULL)\n@@ -801,7 +825,12 @@ bfd_create (const char *filename, bfd *templ)\n     return NULL;\n   /* PR 11983: Do not cache the original filename, but\n      rather make a copy - the original might go away.  */\n-  nbfd->filename = xstrdup (filename);\n+  nbfd->filename = bfd_strdup (filename);\n+  if (nbfd->filename == NULL)\n+    {\n+      _bfd_delete_bfd (nbfd);\n+      return NULL;\n+    }\n   if (templ)\n     nbfd->xvec = templ->xvec;\n   nbfd->direction = no_direction;"
    },
    {
      "sha": "5f760e9c4297131c581f9f568ea98c754ddd41ee",
      "filename": "bfd/plugin.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/plugin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89bdc77eabf5ede68322f6e47e003c1dc45b9ccb/bfd/plugin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/plugin.c?ref=89bdc77eabf5ede68322f6e47e003c1dc45b9ccb",
      "patch": "@@ -262,7 +262,9 @@ try_load_plugin (const char *pname, bfd *abfd, int *has_plugin_p)\n \t}\n     }\n \n-  plugin_list_iter = (struct plugin_list_entry *) xmalloc (sizeof *plugin_list_iter);\n+  plugin_list_iter = bfd_malloc (sizeof *plugin_list_iter);\n+  if (plugin_list_iter == NULL)\n+    return 0;\n   plugin_list_iter->handle = plugin_handle;\n   plugin_list_iter->claim_file = NULL;\n   plugin_list_iter->next = plugin_list;"
    }
  ]
}