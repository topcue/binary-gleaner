{
  "sha": "9b30da15e72bd4e8265169bfd511272aa3875738",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWIzMGRhMTVlNzJiZDRlODI2NTE2OWJmZDUxMTI3MmFhMzg3NTczOA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2019-12-17T20:01:15Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-12-17T20:01:15Z"
    },
    "message": "Add virtual destructor to tui_layout_base\n\nI stumbled on some ASan failures when using the TUI, when tearing down a\nTUI layout.  The simplest way to trigger it is to run:\n\n  $ ./gdb --data-directory=data-directory -batch -ex \"layout next\"\n\nThe ASan report is:\n\n    =================================================================\n    ==2829136==ERROR: AddressSanitizer: new-delete-type-mismatch on 0x608000009a20 in thread T0:\n      object passed to delete has wrong type:\n      size of the allocated type:   88 bytes;\n      size of the deallocated type: 24 bytes.\n        #0 0x7f470fe2507e in operator delete(void*, unsigned long) /build/gcc/src/gcc/libsanitizer/asan/asan_new_delete.cc:177\n        #1 0x55f88c75700d in std::default_delete<tui_layout_base>::operator()(tui_layout_base*) const /usr/include/c++/9.2.0/bits/unique_ptr.h:81\n        #2 0x55f88c756328 in std::unique_ptr<tui_layout_base, std::default_delete<tui_layout_base> >::~unique_ptr() /usr/include/c++/9.2.0/bits/unique_ptr.h:284\n        #3 0x7f470ee536a6 in __run_exit_handlers (/usr/lib/libc.so.6+0x3e6a6)\n        #4 0x7f470ee5385d in __GI_exit (/usr/lib/libc.so.6+0x3e85d)\n        #5 0x55f88c69f2ac in quit_force(int*, int) /home/simark/src/binutils-gdb/gdb/top.c:1766\n        #6 0x55f88becc29a in captured_main_1 /home/simark/src/binutils-gdb/gdb/main.c:1183\n        #7 0x55f88becc814 in captured_main /home/simark/src/binutils-gdb/gdb/main.c:1192\n        #8 0x55f88becc8a9 in gdb_main(captured_main_args*) /home/simark/src/binutils-gdb/gdb/main.c:1217\n        #9 0x55f88b3159cd in main /home/simark/src/binutils-gdb/gdb/gdb.c:32\n        #10 0x7f470ee3c152 in __libc_start_main (/usr/lib/libc.so.6+0x27152)\n        #11 0x55f88b31579d in _start (/home/simark/build/binutils-gdb/gdb/gdb+0x11fb79d)\n\n    0x608000009a20 is located 0 bytes inside of 88-byte region [0x608000009a20,0x608000009a78)\n    allocated by thread T0 here:\n        #0 0x7f470fe238f8 in operator new(unsigned long) /build/gcc/src/gcc/libsanitizer/asan/asan_new_delete.cc:104\n        #1 0x55f88c750906 in tui_layout_split::clone() const /home/simark/src/binutils-gdb/gdb/tui/tui-layout.c:515\n        #2 0x55f88c74e60e in show_layout /home/simark/src/binutils-gdb/gdb/tui/tui-layout.c:90\n        #3 0x55f88c74e7db in tui_set_layout(tui_layout_type) /home/simark/src/binutils-gdb/gdb/tui/tui-layout.c:116\n        #4 0x55f88c782f4f in tui_enable() /home/simark/src/binutils-gdb/gdb/tui/tui.c:481\n        #5 0x55f88c74eeb2 in tui_layout_command /home/simark/src/binutils-gdb/gdb/tui/tui-layout.c:286\n        #6 0x55f88b6f969b in do_const_cfunc /home/simark/src/binutils-gdb/gdb/cli/cli-decode.c:107\n        #7 0x55f88b701859 in cmd_func(cmd_list_element*, char const*, int) /home/simark/src/binutils-gdb/gdb/cli/cli-decode.c:1952\n        #8 0x55f88c69b455 in execute_command(char const*, int) /home/simark/src/binutils-gdb/gdb/top.c:652\n        #9 0x55f88bec9026 in catch_command_errors /home/simark/src/binutils-gdb/gdb/main.c:400\n        #10 0x55f88becc1f2 in captured_main_1 /home/simark/src/binutils-gdb/gdb/main.c:1167\n        #11 0x55f88becc814 in captured_main /home/simark/src/binutils-gdb/gdb/main.c:1192\n        #12 0x55f88becc8a9 in gdb_main(captured_main_args*) /home/simark/src/binutils-gdb/gdb/main.c:1217\n        #13 0x55f88b3159cd in main /home/simark/src/binutils-gdb/gdb/gdb.c:32\n        #14 0x7f470ee3c152 in __libc_start_main (/usr/lib/libc.so.6+0x27152)\n\nThe problem is that the tui_layout_base is missing a virtual destructor.\nWe allocate a derived object (tui_layout_split), but delete it through a\ntui_layout_base pointer.  Since the tui_layout_base destructor is not\nvirtual, the derived (tui_layout_split) destructor is not called, only\nthe base destructor.\n\nThat code is not in gdb-9-branch, so I don't think this patch is\nrelevant for the stable branch.\n\nNote that this is caught as a diagnostic with clang:\n\n    In file included from /home/simark/src/binutils-gdb/gdb/tui/tui-layout.c:22:\n    In file included from /home/simark/src/binutils-gdb/gdb/defs.h:28:\n    In file included from /home/simark/src/binutils-gdb/gdb/gdbsupport/common-defs.h:133:\n    In file included from /home/simark/src/binutils-gdb/gdb/gdbsupport/common-exceptions.h:25:\n    In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/memory:80:\n    /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/unique_ptr.h:81:2: error: delete called on 'tui_layout_base' that is abstract but has non-virtual destructor [-Werror,-Wdelete-abstract-non-virtual-dtor]\n            delete __ptr;\n            ^\n    /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/unique_ptr.h:284:4: note: in instantiation of member function 'std::default_delete<tui_layout_base>::operator()' requested here\n              get_deleter()(std::move(__ptr));\n              ^\n    /home/simark/src/binutils-gdb/gdb/tui/tui-layout.c:54:41: note: in instantiation of member function 'std::unique_ptr<tui_layout_base, std::default_delete<tui_layout_base> >::~unique_ptr' requested here\n    static std::unique_ptr<tui_layout_base> applied_layout;\n                                            ^\n    1 error generated.\n\nGCC has the similar -Wdelete-non-virtual-dtor, enabled by -Wall, but it\ndoesn't show up because warnings are inhibited for system headers, where\nstd::unique_ptr is defined.  There is a bug about it here:\n\n    https://gcc.gnu.org/bugzilla/show_bug.cgi?id=58876\n\ngdb/ChangeLog:\n\n\t* tui/tui-layout.h (class tui_layout_base): Add virtual\n\tdestructor.",
    "tree": {
      "sha": "bd4714e401cd35a06dd519d518d8af8e046a33f2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bd4714e401cd35a06dd519d518d8af8e046a33f2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9b30da15e72bd4e8265169bfd511272aa3875738",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9b30da15e72bd4e8265169bfd511272aa3875738",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9b30da15e72bd4e8265169bfd511272aa3875738",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9b30da15e72bd4e8265169bfd511272aa3875738/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5024637fac653914d471808288dc3221bc7ec089",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5024637fac653914d471808288dc3221bc7ec089",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5024637fac653914d471808288dc3221bc7ec089"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 7,
    "deletions": 0
  },
  "files": [
    {
      "sha": "5464461c62cc795230c93f763a937f31208c2b4a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9b30da15e72bd4e8265169bfd511272aa3875738/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9b30da15e72bd4e8265169bfd511272aa3875738/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9b30da15e72bd4e8265169bfd511272aa3875738",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-17  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* tui/tui-layout.h (class tui_layout_base): Add virtual\n+\tdestructor.\n+\n 2019-12-16  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* infcmd.c (prepare_one_step): Step over skipped inline functions."
    },
    {
      "sha": "cfe807d8690a12b3e4f8dc6be3e4abd1678dac56",
      "filename": "gdb/tui/tui-layout.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9b30da15e72bd4e8265169bfd511272aa3875738/gdb/tui/tui-layout.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9b30da15e72bd4e8265169bfd511272aa3875738/gdb/tui/tui-layout.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.h?ref=9b30da15e72bd4e8265169bfd511272aa3875738",
      "patch": "@@ -34,6 +34,8 @@ class tui_layout_base\n \n   DISABLE_COPY_AND_ASSIGN (tui_layout_base);\n \n+  virtual ~tui_layout_base () = default;\n+\n   /* Clone this object.  Ordinarily a layout is cloned before it is\n      used, so that any necessary modifications do not affect the\n      \"skeleton\" layout.  */"
    }
  ]
}