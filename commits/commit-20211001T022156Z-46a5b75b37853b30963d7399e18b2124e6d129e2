{
  "sha": "46a5b75b37853b30963d7399e18b2124e6d129e2",
  "node_id": "C_kwDOANOeidoAKDQ2YTViNzViMzc4NTNiMzA5NjNkNzM5OWUxOGIyMTI0ZTZkMTI5ZTI",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-08-30T15:20:59Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-10-01T02:21:56Z"
    },
    "message": "gdb/testsuite/dwarf: use options for rnglists/loclists procs\n\nChange how rnglists and loclists procs to align them with how procs for\naranges (and other things in the DWARF assembler) work.  Instead of\nusing \"args\" (variable number of parameters in TCL) and command-line\nstyle option arguments, use one leading \"option\" parameters, used as a\nkind of key/value dictionary of options parsed using `parse_options`.\n\nChange-Id: I63e60d17ae16a020ce4d6de44baf3d152ea42a1a",
    "tree": {
      "sha": "a011d55ff6482845641406890881edaf48cef79c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a011d55ff6482845641406890881edaf48cef79c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/46a5b75b37853b30963d7399e18b2124e6d129e2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46a5b75b37853b30963d7399e18b2124e6d129e2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/46a5b75b37853b30963d7399e18b2124e6d129e2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46a5b75b37853b30963d7399e18b2124e6d129e2/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c5dfcc218832f26e7ecefa6c44a2b350c605148f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5dfcc218832f26e7ecefa6c44a2b350c605148f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c5dfcc218832f26e7ecefa6c44a2b350c605148f"
    }
  ],
  "stats": {
    "total": 121,
    "additions": 46,
    "deletions": 75
  },
  "files": [
    {
      "sha": "478299dd90d24af82ff714a846c3cd34cb6b6f2d",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-zero-range.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/gdb.dwarf2/dw2-zero-range.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/gdb.dwarf2/dw2-zero-range.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-zero-range.exp?ref=46a5b75b37853b30963d7399e18b2124e6d129e2",
      "patch": "@@ -81,8 +81,8 @@ foreach_with_prefix ranges_sect {ranges rnglists} {\n \t\t}\n \t    }\n \n-\t    rnglists {\n-\t\ttable {\n+\t    rnglists {} {\n+\t\ttable {} {\n \t\t    rnglists_label: list_ {\n \t\t\tstart_end 0 1\n \t\t    }"
    },
    {
      "sha": "7844628bc168933f3d385394e4b3bdf3d4d694e0",
      "filename": "gdb/testsuite/gdb.dwarf2/loclists-multiple-cus.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/gdb.dwarf2/loclists-multiple-cus.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/gdb.dwarf2/loclists-multiple-cus.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/loclists-multiple-cus.exp?ref=46a5b75b37853b30963d7399e18b2124e6d129e2",
      "patch": "@@ -87,17 +87,17 @@ foreach_with_prefix is_64 {false true} {\n \t    }\n \t}\n \n-\tloclists -is-64 $is_64 {\n+\tloclists {is-64 $is_64} {\n \t    # This table is unused, but exists so that the used table is not at\n \t    # the beginning of the section.\n-\t    table {\n+\t    table {} {\n \t\tlist_ {\n \t\t    start_length 0x1000 0x1000 { DW_OP_addr 0x100000 }\n \t\t}\n \t    }\n \n \t    # The lists in this table are accessed by index (DW_FORM_rnglistx).\n-\t    table -post-header-label cu_table {\n+\t    table {post-header-label cu_table} {\n \t\t# This list is unused, but exists to offset the next ones.\n \t\tlist_ {\n \t\t    start_length 0x1000 0x1000 { DW_OP_addr 0x100000 }"
    },
    {
      "sha": "b7a4590e40118eab7e5a2f3fcef5f63003ddb393",
      "filename": "gdb/testsuite/gdb.dwarf2/loclists-sec-offset.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/gdb.dwarf2/loclists-sec-offset.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/gdb.dwarf2/loclists-sec-offset.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/loclists-sec-offset.exp?ref=46a5b75b37853b30963d7399e18b2124e6d129e2",
      "patch": "@@ -165,10 +165,10 @@ foreach_with_prefix is_64 {false true} {\n \t    }\n \t}\n \n-\tloclists -is-64 $is_64 {\n+\tloclists {is-64 $is_64} {\n \t    # The lists in this table are accessed by direct offset\n \t    # (DW_FORM_sec_offset).\n-\t    table {\n+\t    table {} {\n \t\tfoo_location_list: list_ {\n \t\t    start_length $func1_addr $func1_len {\n \t\t\tDW_OP_constu 0x123456\n@@ -182,7 +182,7 @@ foreach_with_prefix is_64 {false true} {\n \t\t}\n \t    }\n \n-\t    table -post-header-label cu2_table {\n+\t    table {post-header-label cu2_table} {\n \t\tbar_location_list: list_ {\n \t\t    start_length $func3_addr $func3_len {\n \t\t\tDW_OP_constu 0x345678\n@@ -196,7 +196,7 @@ foreach_with_prefix is_64 {false true} {\n \t\t}\n \t    }\n \n-\t    table -with-offset-array false {\n+\t    table {with-offset-array false} {\n \t\tbaz_location_list: list_ {\n \t\t    start_length $func5_addr $func5_len {\n \t\t\tDW_OP_constu 0x567890"
    },
    {
      "sha": "e3c12e5093ff22d524219181cb9066a40630d7b9",
      "filename": "gdb/testsuite/gdb.dwarf2/loclists-start-end.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/gdb.dwarf2/loclists-start-end.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/gdb.dwarf2/loclists-start-end.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/loclists-start-end.exp?ref=46a5b75b37853b30963d7399e18b2124e6d129e2",
      "patch": "@@ -78,17 +78,17 @@ foreach_with_prefix is_64 {false true} {\n \t    }\n \t}\n \n-\tloclists -is-64 $is_64 {\n+\tloclists {is-64 $is_64} {\n \t    # This table is unused, but exists so that the used table is not at\n \t    # the beginning of the section.\n-\t    table {\n+\t    table {} {\n \t\tlist_ {\n \t\t    start_end 0x1000 0x2000 { DW_OP_addr 0x100000 }\n \t\t}\n \t    }\n \n \t    # The lists in this table are accessed by index (DW_FORM_rnglistx).\n-\t    table -post-header-label cu_table {\n+\t    table {post-header-label cu_table} {\n \t\t# This list is unused, but exists to offset the next ones.\n \t\tlist_ {\n \t\t    start_end 0x1000 0x2000 { DW_OP_addr 0x100000 }"
    },
    {
      "sha": "2e83b37de66e4fd2afc5feefb92bff764fc06f54",
      "filename": "gdb/testsuite/gdb.dwarf2/rnglists-multiple-cus.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/gdb.dwarf2/rnglists-multiple-cus.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/gdb.dwarf2/rnglists-multiple-cus.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/rnglists-multiple-cus.exp?ref=46a5b75b37853b30963d7399e18b2124e6d129e2",
      "patch": "@@ -63,17 +63,17 @@ foreach_with_prefix is_64 {false true} {\n \t    }\n \t}\n \n-\trnglists -is-64 $is_64 {\n+\trnglists {is-64 $is_64} {\n \t    # This table is unused, but exists so that the used table is not at\n \t    # the beginning of the section.\n-\t    table {\n+\t    table {} {\n \t\tlist_ {\n \t\t    start_end 0x1000 0x2000\n \t\t}\n \t    }\n \n \t    # The lists in this table are accessed by index (DW_FORM_rnglistx).\n-\t    table -post-header-label cu_table {\n+\t    table {post-header-label cu_table} {\n \t\t# This list is unused, but exists to offset the next ones.\n \t\tlist_ {\n \t\t    start_end 0x2000 0x3000"
    },
    {
      "sha": "e5ae7772e9546c37f0d63918291c68e15a329369",
      "filename": "gdb/testsuite/gdb.dwarf2/rnglists-sec-offset.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/gdb.dwarf2/rnglists-sec-offset.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/gdb.dwarf2/rnglists-sec-offset.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/rnglists-sec-offset.exp?ref=46a5b75b37853b30963d7399e18b2124e6d129e2",
      "patch": "@@ -90,10 +90,10 @@ foreach_with_prefix is_64 {false true} {\n \t    }\n \t}\n \n-\trnglists -is-64 $is_64 {\n+\trnglists {is-64 $is_64} {\n \t    # The lists in this table are accessed by direct offset\n \t    # (DW_FORM_sec_offset).\n-\t    table {\n+\t    table {} {\n \t\t# For the first CU.\n \t\tcu1_range_list: list_ {\n \t\t    start_end 0x4000 0x5000\n@@ -105,7 +105,7 @@ foreach_with_prefix is_64 {false true} {\n \t\t}\n \t    }\n \n-\t    table -post-header-label cu2_table {\n+\t    table {post-header-label cu2_table} {\n \t\t# For the second CU.\n \t\tcu2_range_list: list_ {\n \t\t    start_end 0x5000 0x6000\n@@ -117,7 +117,7 @@ foreach_with_prefix is_64 {false true} {\n \t\t}\n \t    }\n \n-\t    table -with-offset-array false {\n+\t    table {with-offset-array false} {\n \t\t# For the third CU.\n \t\tcu3_range_list: list_ {\n \t\t    start_end 0x6000 0x7000"
    },
    {
      "sha": "66f9844fe2ead05d14478cc9778ce7a49dfbd450",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 27,
      "deletions": 56,
      "changes": 83,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46a5b75b37853b30963d7399e18b2124e6d129e2/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=46a5b75b37853b30963d7399e18b2124e6d129e2",
      "patch": "@@ -1543,27 +1543,18 @@ namespace eval Dwarf {\n     #\n     # The target address size is based on the current target's address size.\n     #\n-    # There is one mandatory positional argument, BODY, which must be Tcl code\n-    # that emits the content of the section.  It is evaluated in the caller's\n-    # context.\n+    # BODY must be Tcl code that emits the content of the section.  It is\n+    # evaluated in the caller's context.\n     #\n-    # The following option can be used:\n-    #\n-    #  - -is-64 true|false: Whether to use 64-bit DWARF instead of 32-bit DWARF.\n-    #                       The default is 32-bit.\n+    # The `is-64 true|false` options tells whether to use 64-bit DWARF instead\n+    # of 32-bit DWARF.  The default is 32-bit.\n \n-    proc rnglists { args } {\n+    proc rnglists { options body } {\n \tvariable _debug_rnglists_addr_size\n \tvariable _debug_rnglists_offset_size\n \tvariable _debug_rnglists_is_64_dwarf\n \n-\tparse_args {{\"is-64\" \"false\"}}\n-\n-\tif { [llength $args] != 1 } {\n-\t    error \"rnglists proc expects one positional argument (body)\"\n-\t}\n-\n-\tlassign $args body\n+\tparse_options {{\"is-64\" \"false\"}}\n \n \tif [is_64_target] {\n \t    set _debug_rnglists_addr_size 8\n@@ -1603,34 +1594,29 @@ namespace eval Dwarf {\n     # This proc is meant to be used within proc rnglists' body.  It is made\n     # available as `table` while inside proc rnglists' body.\n     #\n-    # Accepts one positional argument, BODY.  BODY may call the LIST_ procedure\n-    # to generate rnglists.\n+    # BODY must be Tcl code that emits the content of the table.  It may call\n+    # the LIST_ procedure to generate rnglists.  It is evaluated in the\n+    # caller's context.\n     #\n-    # The -post-header-label option can be used to define a label just after\n+    # The `post-header-label` option can be used to define a label just after\n     # the header of the table.  This is the label that a DW_AT_rnglists_base\n     # attribute will usually refer to.\n     #\n-    # The `-with-offset-array true|false` option can be used to control whether\n+    # The `with-offset-array true|false` option can be used to control whether\n     # the headers of the location list tables have an array of offset.  The\n     # default is true.\n \n-    proc _rnglists_table { args } {\n+    proc _rnglists_table { options body } {\n \tvariable _debug_rnglists_table_count\n \tvariable _debug_rnglists_addr_size\n \tvariable _debug_rnglists_offset_size\n \tvariable _debug_rnglists_is_64_dwarf\n \n-\tparse_args {\n+\tparse_options {\n \t    {post-header-label \"\"}\n \t    {with-offset-array true}\n \t}\n \n-\tif { [llength $args] != 1 } {\n-\t    error \"table proc expects one positional argument (body)\"\n-\t}\n-\n-\tlassign $args body\n-\n \t# Count of lists in the table.\n \tvariable _debug_rnglists_list_count 0\n \n@@ -1743,27 +1729,18 @@ namespace eval Dwarf {\n     #\n     # The target address size is based on the current target's address size.\n     #\n-    # There is one mandatory positional argument, BODY, which must be Tcl code\n-    # that emits the content of the section.  It is evaluated in the caller's\n-    # context.\n-    #\n-    # The following option can be used:\n+    # BODY must be Tcl code that emits the content of the section.  It is\n+    # evaluated in the caller's context.\n     #\n-    #  - -is-64 true|false: Whether to use 64-bit DWARF instead of 32-bit DWARF.\n-    #                       The default is 32-bit.\n+    # The `is-64 true|false` options tells whether to use 64-bit DWARF instead\n+    # of 32-bit DWARF.  The default is 32-bit.\n \n-    proc loclists { args } {\n+    proc loclists { options body } {\n \tvariable _debug_loclists_addr_size\n \tvariable _debug_loclists_offset_size\n \tvariable _debug_loclists_is_64_dwarf\n \n-\tparse_args {{\"is-64\" \"false\"}}\n-\n-\tif { [llength $args] != 1 } {\n-\t    error \"loclists proc expects one positional argument (body)\"\n-\t}\n-\n-\tlassign $args body\n+\tparse_options {{\"is-64\" \"false\"}}\n \n \tif [is_64_target] {\n \t    set _debug_loclists_addr_size 8\n@@ -1803,35 +1780,29 @@ namespace eval Dwarf {\n     # This proc is meant to be used within proc loclists' body.  It is made\n     # available as `table` while inside proc rnglists' body.\n     #\n-    # Accepts one position argument, BODY.  BODY may call the LIST_\n-    # procedure to generate loclists.\n+    # BODY must be Tcl code that emits the content of the table.  It may call\n+    # the LIST_ procedure to generate rnglists.  It is evaluated in the\n+    # caller's context.\n     #\n-    # The -post-header-label option can be used to define a label just after the\n-    # header of the table.  This is the label that a DW_AT_loclists_base\n+    # The `post-header-label` option can be used to define a label just after\n+    # the header of the table.  This is the label that a DW_AT_loclists_base\n     # attribute will usually refer to.\n     #\n-    # The `-with-offset-array true|false` option can be used to control\n+    # The `with-offset-array true|false` option can be used to control\n     # whether the headers of the location list tables have an array of\n     # offset.  The default is true.\n \n-    proc _loclists_table { args } {\n+    proc _loclists_table { options body } {\n \tvariable _debug_loclists_table_count\n \tvariable _debug_loclists_addr_size\n \tvariable _debug_loclists_offset_size\n \tvariable _debug_loclists_is_64_dwarf\n \n-\tparse_args {\n+\tparse_options {\n \t    {post-header-label \"\"}\n \t    {with-offset-array true}\n \t}\n \n-\tif { [llength $args] != 1 } {\n-\t    error \"table proc expects one positional argument (body)\"\n-\t}\n-\n-\tlassign $args body\n-\n-\n \t# Count of lists in the table.\n \tvariable _debug_loclists_list_count 0\n "
    }
  ]
}