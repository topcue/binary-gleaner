{
  "sha": "31a8f60f2f31fccc1be955a692f1bd5330f8650d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzFhOGY2MGYyZjMxZmNjYzFiZTk1NWE2OTJmMWJkNTMzMGY4NjUwZA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-09-13T20:53:26Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-10-06T10:18:37Z"
    },
    "message": "gdb: handle unmapped overlays in find_pc_line\n\nI configured and built an m32r-elf toolchain, and ran the\ngdb.base/overlays.exp test.  I saw a couple of errors where GDB would\nplace a breakpoint in the wrong place when placing a breakpoint using\na function name, for example in this function:\n\n/* 1 */  int foo (int x)\n/* 2 */  {\n/* 3 */    if (x)\n/* 4 */      return some_global_variable;\n/* 5 */    else\n/* 6 */      return 0;\n/* 7 */  }\n\nGDB would place the breakpoint on line 2 instead of line 3.  The issue\nis that GDB was failing to skip the prologue correctly.\n\nThe reason for this is that in m32r-tdep.c:m32r_skip_prologue, we\nfirst use find_pc_partial_function to find the functions start and end\naddresses, then we use find_pc_line to find the start and end of the\nfirst line of the function.\n\nCurrently, if the pc value passed to find_pc_partial_function is in an\nunmapped overlay then the function start and end addresses that are\nreturned are also the unmapped addresses.\n\nHowever, this is not the case for find_pc_line, here, if the address\npassed in is in an unmapped overlay then we still get back a\nsymtab_and_line describing the mapped location.\n\nWhat this means is that if a function's mapped location is 0x100 ->\n0x120, and its unmapped locations is 0x400 -> 0x420 then we think that\nthe start/end is 0x400 and 0x420 respectively, but the first line\nmight run from 0x100 to 0x108.\n\nGDB will then try to scan the prologue starting from 0x400 and ending\nat 0x108, this immediately gives up as it thinks we have gone past the\nend of the prologue and the breakpoint is placed at 0x400.\n\nIn this commit I propose that we change find_pc_line to return\naddresses in the unmapped range if the address passed in is already in\nthe unmapped range.  Now the first line will appear to run from 0x400\nto 0x408 and the prologue scanner will correctly find the end of the\nprologue.\n\nWith this commit gdb.base/overlays.exp now completely passes with an\nm32r-elf toolchain.\n\ngdb/ChangeLog:\n\n\t* symtab.c (find_pc_line): Return unmapped addresses when the\n\trequested address is also unmapped.",
    "tree": {
      "sha": "848371858a7543cb860705bbe05b171c31e1cc4e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/848371858a7543cb860705bbe05b171c31e1cc4e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/31a8f60f2f31fccc1be955a692f1bd5330f8650d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/31a8f60f2f31fccc1be955a692f1bd5330f8650d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/31a8f60f2f31fccc1be955a692f1bd5330f8650d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/31a8f60f2f31fccc1be955a692f1bd5330f8650d/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ed3bdac42ce8e545e04bd15a153a85aee4a7a9af",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 17,
    "deletions": 3
  },
  "files": [
    {
      "sha": "2744ad8e0975b42ec35377f522bfb154e9bcfd30",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/31a8f60f2f31fccc1be955a692f1bd5330f8650d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/31a8f60f2f31fccc1be955a692f1bd5330f8650d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=31a8f60f2f31fccc1be955a692f1bd5330f8650d",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* symtab.c (find_pc_line): Return unmapped addresses when the\n+\trequested address is also unmapped.\n+\n 2020-10-05  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* Makefile.in (HFILES_NO_SRCDIR): Remove tui/tui-windata.h, add"
    },
    {
      "sha": "a4f8239a8a16715e5164c0e2b1c63b0f88098cbf",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 12,
      "deletions": 3,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/31a8f60f2f31fccc1be955a692f1bd5330f8650d/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/31a8f60f2f31fccc1be955a692f1bd5330f8650d/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=31a8f60f2f31fccc1be955a692f1bd5330f8650d",
      "patch": "@@ -3323,9 +3323,18 @@ find_pc_line (CORE_ADDR pc, int notcurrent)\n   struct obj_section *section;\n \n   section = find_pc_overlay (pc);\n-  if (pc_in_unmapped_range (pc, section))\n-    pc = overlay_mapped_address (pc, section);\n-  return find_pc_sect_line (pc, section, notcurrent);\n+  if (!pc_in_unmapped_range (pc, section))\n+    return find_pc_sect_line (pc, section, notcurrent);\n+\n+  /* If the original PC was an unmapped address then we translate this to a\n+     mapped address in order to lookup the sal.  However, as the user\n+     passed us an unmapped address it makes more sense to return a result\n+     that has the pc and end fields translated to unmapped addresses.  */\n+  pc = overlay_mapped_address (pc, section);\n+  symtab_and_line sal = find_pc_sect_line (pc, section, notcurrent);\n+  sal.pc = overlay_unmapped_address (sal.pc, section);\n+  sal.end = overlay_unmapped_address (sal.end, section);\n+  return sal;\n }\n \n /* See symtab.h.  */"
    }
  ]
}