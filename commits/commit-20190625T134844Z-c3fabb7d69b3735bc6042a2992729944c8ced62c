{
  "sha": "c3fabb7d69b3735bc6042a2992729944c8ced62c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzNmYWJiN2Q2OWIzNzM1YmM2MDQyYTI5OTI3Mjk5NDRjOGNlZDYyYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-20T21:31:00Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:44Z"
    },
    "message": "Remove tui_alloc_win_info\n\nThere is only a single caller of tui_alloc_win_info, and we're going\nto add more \"new\" cases to that caller, so remove tui_alloc_win_info\nand inline it into init_and_make_win.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-data.h (tui_alloc_win_info): Don't declare.\n\t* tui/tui-layout.c (init_and_make_win): Use \"new\" directly.\n\t* tui/tui-data.c (tui_alloc_win_info): Remove.",
    "tree": {
      "sha": "c40e230d3d7a747b707f6b52a44aee7f09aee4b7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c40e230d3d7a747b707f6b52a44aee7f09aee4b7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c3fabb7d69b3735bc6042a2992729944c8ced62c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3fabb7d69b3735bc6042a2992729944c8ced62c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c3fabb7d69b3735bc6042a2992729944c8ced62c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3fabb7d69b3735bc6042a2992729944c8ced62c/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bbc228ee056cd006e971d5f1cb70ae0f69c1eb36",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bbc228ee056cd006e971d5f1cb70ae0f69c1eb36",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bbc228ee056cd006e971d5f1cb70ae0f69c1eb36"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 29,
    "deletions": 27
  },
  "files": [
    {
      "sha": "42308e055dfebfa943bb224d43b20a70e0cae58d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3fabb7d69b3735bc6042a2992729944c8ced62c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3fabb7d69b3735bc6042a2992729944c8ced62c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c3fabb7d69b3735bc6042a2992729944c8ced62c",
      "patch": "@@ -1,3 +1,9 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-data.h (tui_alloc_win_info): Don't declare.\n+\t* tui/tui-layout.c (init_and_make_win): Use \"new\" directly.\n+\t* tui/tui-data.c (tui_alloc_win_info): Remove.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-win.c (tui_set_win_focus_to): Don't check window type."
    },
    {
      "sha": "5eac1dcdc864bf19e5338ff212f0b3bd8131b000",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3fabb7d69b3735bc6042a2992729944c8ced62c/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3fabb7d69b3735bc6042a2992729944c8ced62c/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=c3fabb7d69b3735bc6042a2992729944c8ced62c",
      "patch": "@@ -419,28 +419,6 @@ tui_source_window_base::tui_source_window_base (enum tui_win_type type)\n   start_line_or_addr.u.addr = 0;\n }\n \n-struct tui_win_info *\n-tui_alloc_win_info (enum tui_win_type type)\n-{\n-  switch (type)\n-    {\n-    case SRC_WIN:\n-      return new tui_source_window ();\n-\n-    case DISASSEM_WIN:\n-      return new tui_disasm_window ();\n-\n-    case DATA_WIN:\n-      return new tui_data_window ();\n-\n-    case CMD_WIN:\n-      return new tui_cmd_window ();\n-    }\n-\n-  gdb_assert_not_reached (_(\"Unhandled window type\"));\n-}\n-\n-\n /* Allocates the content and elements in a block.  */\n tui_win_content\n tui_alloc_content (int num_elements, enum tui_win_type type)"
    },
    {
      "sha": "a82cbb57e4dfbc484a04c31084a17082db19c3d2",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3fabb7d69b3735bc6042a2992729944c8ced62c/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3fabb7d69b3735bc6042a2992729944c8ced62c/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=c3fabb7d69b3735bc6042a2992729944c8ced62c",
      "patch": "@@ -531,7 +531,6 @@ extern struct tui_win_info *tui_win_list[MAX_MAJOR_WINDOWS];\n \n /* Data Manipulation Functions.  */\n extern void tui_initialize_static_data (void);\n-extern struct tui_win_info *tui_alloc_win_info (enum tui_win_type);\n extern void tui_init_generic_part (struct tui_gen_win_info *);\n extern tui_win_content tui_alloc_content (int, enum tui_win_type);\n extern int tui_add_content_elements (struct tui_gen_win_info *, "
    },
    {
      "sha": "6d343921d4c4807fb6f2d23cde2b4fde134f4986",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 23,
      "deletions": 4,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3fabb7d69b3735bc6042a2992729944c8ced62c/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3fabb7d69b3735bc6042a2992729944c8ced62c/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=c3fabb7d69b3735bc6042a2992729944c8ced62c",
      "patch": "@@ -798,10 +798,29 @@ init_and_make_win (tui_gen_win_info *win_info,\n {\n   if (win_info == NULL)\n     {\n-      if (tui_win_is_auxillary (win_type))\n-\twin_info = new tui_gen_win_info (win_type);\n-      else\n-\twin_info = tui_alloc_win_info (win_type);\n+      switch (win_type)\n+\t{\n+\tcase SRC_WIN:\n+\t  win_info = new tui_source_window ();\n+\t  break;\n+\n+\tcase DISASSEM_WIN:\n+\t  win_info = new tui_disasm_window ();\n+\t  break;\n+\n+\tcase DATA_WIN:\n+\t  win_info = new tui_data_window ();\n+\t  break;\n+\n+\tcase CMD_WIN:\n+\t  win_info = new tui_cmd_window ();\n+\t  break;\n+\n+\tdefault:\n+\t  gdb_assert (tui_win_is_auxillary (win_type));\n+\t  win_info = new tui_gen_win_info (win_type);\n+\t  break;\n+\t}\n     }\n \n   win_info->reset (win_type, height, width, origin_x, origin_y);"
    }
  ]
}