{
  "sha": "ff47f4f06d296b672337e2c7363a745cd2725f58",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmY0N2Y0ZjA2ZDI5NmI2NzIzMzdlMmM3MzYzYTc0NWNkMjcyNWY1OA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-21T16:51:05Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-01-15T00:57:52Z"
    },
    "message": "Fix valgrind error from gdb.decode_line\n\nPR symtab/12535 points out that gdb.decode_line(\"\") will cause a\nvalgrind report.\n\nI think the empty linespec does not really make sense.  So, this patch\nchanges gdb.decode_line to treat a whitespace-only linespec the same\nas a non-existing argument.\n\ngdb/ChangeLog\n2020-01-14  Tom Tromey  <tom@tromey.com>\n\n\tPR symtab/12535:\n\t* python/python.c (gdbpy_decode_line): Treat empty string the same\n\tas no argument.\n\ngdb/testsuite/ChangeLog\n2020-01-14  Tom Tromey  <tom@tromey.com>\n\n\tPR symtab/12535:\n\t* gdb.python/python.exp: Test decode_line with empty string\n\targument.\n\nChange-Id: I1d95812b4b7a21d69a3e9afd05b9e3141a931897",
    "tree": {
      "sha": "9a60eb2433cffbcbfab90243b5fe2744a8e8cd76",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9a60eb2433cffbcbfab90243b5fe2744a8e8cd76"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ff47f4f06d296b672337e2c7363a745cd2725f58",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ff47f4f06d296b672337e2c7363a745cd2725f58",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ff47f4f06d296b672337e2c7363a745cd2725f58",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ff47f4f06d296b672337e2c7363a745cd2725f58/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b300843444cf833f7b3943ebae060c3d88b4ce91",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b300843444cf833f7b3943ebae060c3d88b4ce91",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b300843444cf833f7b3943ebae060c3d88b4ce91"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 25,
    "deletions": 0
  },
  "files": [
    {
      "sha": "d348abbf585f53b618efa9d8ec068d85763559f3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff47f4f06d296b672337e2c7363a745cd2725f58/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff47f4f06d296b672337e2c7363a745cd2725f58/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ff47f4f06d296b672337e2c7363a745cd2725f58",
      "patch": "@@ -1,3 +1,9 @@\n+2020-01-14  Tom Tromey  <tom@tromey.com>\n+\n+\tPR symtab/12535:\n+\t* python/python.c (gdbpy_decode_line): Treat empty string the same\n+\tas no argument.\n+\n 2020-01-14  Tom Tromey  <tom@tromey.com>\n \n \t* Makefile.in (CLIBS): Remove second use of $(LIBIBERTY)."
    },
    {
      "sha": "d6f7f99c457300cba8e6dbe590ac15b4b2e2b110",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff47f4f06d296b672337e2c7363a745cd2725f58/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff47f4f06d296b672337e2c7363a745cd2725f58/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=ff47f4f06d296b672337e2c7363a745cd2725f58",
      "patch": "@@ -810,6 +810,15 @@ gdbpy_decode_line (PyObject *self, PyObject *args)\n   if (! PyArg_ParseTuple (args, \"|s\", &arg))\n     return NULL;\n \n+  /* Treat a string consisting of just whitespace the same as\n+     NULL.  */\n+  if (arg != NULL)\n+    {\n+      arg = skip_spaces (arg);\n+      if (*arg == '\\0')\n+\targ = NULL;\n+    }\n+\n   if (arg != NULL)\n     location = string_to_event_location_basic (&arg, python_language,\n \t\t\t\t\t       symbol_name_match_type::WILD);"
    },
    {
      "sha": "fd9ba7ea619bff6b49546bd4df9c0b60693613d2",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff47f4f06d296b672337e2c7363a745cd2725f58/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff47f4f06d296b672337e2c7363a745cd2725f58/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=ff47f4f06d296b672337e2c7363a745cd2725f58",
      "patch": "@@ -1,3 +1,9 @@\n+2020-01-14  Tom Tromey  <tom@tromey.com>\n+\n+\tPR symtab/12535:\n+\t* gdb.python/python.exp: Test decode_line with empty string\n+\targument.\n+\n 2020-01-14  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* gdb.base/skip-inline.exp: Extend test."
    },
    {
      "sha": "a50a7b43e2c26c250f3ca914a236f6b712bdd990",
      "filename": "gdb/testsuite/gdb.python/python.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff47f4f06d296b672337e2c7363a745cd2725f58/gdb/testsuite/gdb.python/python.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff47f4f06d296b672337e2c7363a745cd2725f58/gdb/testsuite/gdb.python/python.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/python.exp?ref=ff47f4f06d296b672337e2c7363a745cd2725f58",
      "patch": "@@ -234,6 +234,10 @@ gdb_test \"python print (len(symtab))\" \"2\" \"test decode_line current location\"\n gdb_test \"python print (symtab\\[0\\])\" \"None\" \"test decode_line expression parse\"\n gdb_test \"python print (len(symtab\\[1\\]))\" \"1\" \"test decode_line current location\"\n \n+# Test that decode_line with an empty string argument does not crash.\n+gdb_py_test_silent_cmd \"python symtab2 = gdb.decode_line('')\" \\\n+    \"test decode_line with empty string\" 1\n+\n if { [is_remote host] } {\n     set python_c [string_to_regexp \"python.c\"]\n } else {"
    }
  ]
}