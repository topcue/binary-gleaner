{
  "sha": "e6c3b5bfb449d1a02d26f3c4bae5b732951479fc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTZjM2I1YmZiNDQ5ZDFhMDJkMjZmM2M0YmFlNWI3MzI5NTE0NzlmYw==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-02-20T10:39:28Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-02-20T10:39:28Z"
    },
    "message": "AArch64: Add pauth core file section\n\nUsed for the AArch64 pointer authentication code mask registers in Arm v8.3-a.\n\nNT_ARM_PAC_MASK matches the value in Linux include/uapi/linux/elf.h\n\ninclude/ChangeLog:\n\n\t* elf/common.h (NT_ARM_PAC_MASK): Add define.\n\nbfd/ChangeLog:\n\n\t* elf-bfd.h (elfcore_write_aarch_pauth): Add declaration.\n\t* elf.c (elfcore_grok_aarch_pauth): New function.\n\t(elfcore_grok_note): Check for NT_ARM_PAC_MASK.\n\t(elfcore_write_aarch_pauth): New function.\n\t(elfcore_write_register_note): Check for AArch64 pauth section.",
    "tree": {
      "sha": "9fb625a78e11377adfcfdb56ae89ba67f74e4899",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9fb625a78e11377adfcfdb56ae89ba67f74e4899"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "34d75fb5c419a23922174c520e124523e01114c4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/34d75fb5c419a23922174c520e124523e01114c4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/34d75fb5c419a23922174c520e124523e01114c4"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 43,
    "deletions": 0
  },
  "files": [
    {
      "sha": "c10f1a4f2be9f65bff5b446be663689aaac2d46f",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=e6c3b5bfb449d1a02d26f3c4bae5b732951479fc",
      "patch": "@@ -1,3 +1,11 @@\n+2019-02-20  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* elf-bfd.h (elfcore_write_aarch_pauth): Add declaration.\n+\t* elf.c (elfcore_grok_aarch_pauth): New function.\n+\t(elfcore_grok_note): Check for NT_ARM_PAC_MASK.\n+\t(elfcore_write_aarch_pauth): New function.\n+\t(elfcore_write_register_note): Check for AArch64 pauth section.\n+\n 2019-02-20  Alan Modra  <amodra@gmail.com>\n \n \tPR 24225"
    },
    {
      "sha": "56cddda6417b80ff6959505e8561389e243114c7",
      "filename": "bfd/elf-bfd.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc/bfd/elf-bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc/bfd/elf-bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-bfd.h?ref=e6c3b5bfb449d1a02d26f3c4bae5b732951479fc",
      "patch": "@@ -2634,6 +2634,8 @@ extern char *elfcore_write_aarch_hw_watch\n   (bfd *, char *, int *, const void *, int);\n extern char *elfcore_write_aarch_sve\n   (bfd *, char *, int *, const void *, int);\n+extern char *elfcore_write_aarch_pauth\n+  (bfd *, char *, int *, const void *, int);\n extern char *elfcore_write_lwpstatus\n   (bfd *, char *, int *, long, int, const void *);\n extern char *elfcore_write_register_note"
    },
    {
      "sha": "f16acaa08d8e24af9af069efcdcb244b2c19c734",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=e6c3b5bfb449d1a02d26f3c4bae5b732951479fc",
      "patch": "@@ -9541,6 +9541,12 @@ elfcore_grok_aarch_sve (bfd *abfd, Elf_Internal_Note *note)\n   return elfcore_make_note_pseudosection (abfd, \".reg-aarch-sve\", note);\n }\n \n+static bfd_boolean\n+elfcore_grok_aarch_pauth (bfd *abfd, Elf_Internal_Note *note)\n+{\n+  return elfcore_make_note_pseudosection (abfd, \".reg-aarch-pauth\", note);\n+}\n+\n #if defined (HAVE_PRPSINFO_T)\n typedef prpsinfo_t   elfcore_psinfo_t;\n #if defined (HAVE_PRPSINFO32_T)\t\t/* Sparc64 cross Sparc32 */\n@@ -10135,6 +10141,13 @@ elfcore_grok_note (bfd *abfd, Elf_Internal_Note *note)\n       else\n \treturn TRUE;\n \n+    case NT_ARM_PAC_MASK:\n+      if (note->namesz == 6\n+\t  && strcmp (note->namedata, \"LINUX\") == 0)\n+\treturn elfcore_grok_aarch_pauth (abfd, note);\n+      else\n+\treturn TRUE;\n+\n     case NT_PRPSINFO:\n     case NT_PSINFO:\n       if (bed->elf_backend_grok_psinfo)\n@@ -11494,6 +11507,18 @@ elfcore_write_aarch_sve (bfd *abfd,\n \t\t\t     note_name, NT_ARM_SVE, aarch_sve, size);\n }\n \n+char *\n+elfcore_write_aarch_pauth (bfd *abfd,\n+\t\t\t   char *buf,\n+\t\t\t   int *bufsiz,\n+\t\t\t   const void *aarch_pauth,\n+\t\t\t   int size)\n+{\n+  char *note_name = \"LINUX\";\n+  return elfcore_write_note (abfd, buf, bufsiz,\n+\t\t\t     note_name, NT_ARM_PAC_MASK, aarch_pauth, size);\n+}\n+\n char *\n elfcore_write_register_note (bfd *abfd,\n \t\t\t     char *buf,\n@@ -11574,6 +11599,8 @@ elfcore_write_register_note (bfd *abfd,\n     return elfcore_write_aarch_hw_watch (abfd, buf, bufsiz, data, size);\n   if (strcmp (section, \".reg-aarch-sve\") == 0)\n     return elfcore_write_aarch_sve (abfd, buf, bufsiz, data, size);\n+  if (strcmp (section, \".reg-aarch-pauth\") == 0)\n+    return elfcore_write_aarch_pauth (abfd, buf, bufsiz, data, size);\n   return NULL;\n }\n "
    },
    {
      "sha": "6d6ec66b18fd84d5326d5b99d23c60729af581cc",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=e6c3b5bfb449d1a02d26f3c4bae5b732951479fc",
      "patch": "@@ -1,3 +1,7 @@\n+2019-02-20  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* elf/common.h (NT_ARM_PAC_MASK): Add define.\n+\n 2019-02-15  Saagar Jha  <saagar@saagarjha.com>\n \n \t* mach-o/loader.h: Use new OS names in comments."
    },
    {
      "sha": "e8faf67be3707f60c1f9a178ed4730551238835b",
      "filename": "include/elf/common.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc/include/elf/common.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6c3b5bfb449d1a02d26f3c4bae5b732951479fc/include/elf/common.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/common.h?ref=e6c3b5bfb449d1a02d26f3c4bae5b732951479fc",
      "patch": "@@ -650,6 +650,8 @@\n \t\t\t\t\t/*   note name must be \"LINUX\".  */\n #define NT_ARM_SVE\t0x405\t\t/* AArch SVE registers.  */\n \t\t\t\t\t/*   note name must be \"LINUX\".  */\n+#define NT_ARM_PAC_MASK\t0x406\t\t/* AArch pointer authentication code masks */\n+\t\t\t\t\t/*   note name must be \"LINUX\".  */\n #define NT_SIGINFO\t0x53494749\t/* Fields of siginfo_t.  */\n #define NT_FILE\t\t0x46494c45\t/* Description of mapped files.  */\n "
    }
  ]
}