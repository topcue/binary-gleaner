{
  "sha": "214a5cbea656f3ffc1e7e525627c56849347c709",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjE0YTVjYmVhNjU2ZjNmZmMxZTdlNTI1NjI3YzU2ODQ5MzQ3YzcwOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T21:28:03Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:36Z"
    },
    "message": "Introduce set_highlight method\n\nThis introduces the tui_win_info::set_highlight method, and changes\nthe highlighting-related code to use bool rather than int.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-wingeneral.c (tui_unhighlight_win, tui_highlight_win):\n\tUpdate.\n\t* tui/tui-layout.c (make_command_window)\n\t(show_source_disasm_command, show_data, init_and_make_win)\n\t(show_source_or_disasm_and_command): Update.\n\t* tui/tui-data.h (struct tui_win_info) <set_highlight>: New\n\tmethod.\n\t<can_highight, is_highlighted>: Now bool.\n\t(tui_set_win_highlight): Don't declare.\n\t* tui/tui-data.c (tui_set_win_highlight): Remove.",
    "tree": {
      "sha": "134f77046a642e2278612c67220a000feee4a627",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/134f77046a642e2278612c67220a000feee4a627"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/214a5cbea656f3ffc1e7e525627c56849347c709",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/214a5cbea656f3ffc1e7e525627c56849347c709",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/214a5cbea656f3ffc1e7e525627c56849347c709",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/214a5cbea656f3ffc1e7e525627c56849347c709/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8e2daf1532e587fee8d14aab1baad40e628065e2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e2daf1532e587fee8d14aab1baad40e628065e2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8e2daf1532e587fee8d14aab1baad40e628065e2"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 32,
    "deletions": 23
  },
  "files": [
    {
      "sha": "71fe526d358138eda6a8bea4e4a2fd1f7606dbd3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/214a5cbea656f3ffc1e7e525627c56849347c709/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/214a5cbea656f3ffc1e7e525627c56849347c709/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=214a5cbea656f3ffc1e7e525627c56849347c709",
      "patch": "@@ -1,3 +1,16 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-wingeneral.c (tui_unhighlight_win, tui_highlight_win):\n+\tUpdate.\n+\t* tui/tui-layout.c (make_command_window)\n+\t(show_source_disasm_command, show_data, init_and_make_win)\n+\t(show_source_or_disasm_and_command): Update.\n+\t* tui/tui-data.h (struct tui_win_info) <set_highlight>: New\n+\tmethod.\n+\t<can_highight, is_highlighted>: Now bool.\n+\t(tui_set_win_highlight): Don't declare.\n+\t* tui/tui-data.c (tui_set_win_highlight): Remove.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-wingeneral.c (make_visible): Remove check of window"
    },
    {
      "sha": "a351113efb974204d94beed47d5f815382a9919c",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/214a5cbea656f3ffc1e7e525627c56849347c709/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/214a5cbea656f3ffc1e7e525627c56849347c709/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=214a5cbea656f3ffc1e7e525627c56849347c709",
      "patch": "@@ -69,14 +69,6 @@ tui_win_is_auxillary (enum tui_win_type win_type)\n   return (win_type > MAX_MAJOR_WINDOWS);\n }\n \n-void\n-tui_set_win_highlight (struct tui_win_info *win_info, \n-\t\t       int highlight)\n-{\n-  if (win_info != NULL)\n-    win_info->is_highlighted = highlight;\n-}\n-\n /******************************************\n ** ACCESSORS & MUTATORS FOR PRIVATE DATA\n ******************************************/"
    },
    {
      "sha": "572fea548310e6c41d91efecde105763b9c8327a",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/214a5cbea656f3ffc1e7e525627c56849347c709/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/214a5cbea656f3ffc1e7e525627c56849347c709/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=214a5cbea656f3ffc1e7e525627c56849347c709",
      "patch": "@@ -276,6 +276,12 @@ struct tui_win_info\n   /* Compute the maximum height of this window.  */\n   virtual int max_height () const;\n \n+  /* Set whether this window is highglighted.  */\n+  void set_highlight (bool highlight)\n+  {\n+    is_highlighted = highlight;\n+  }\n+\n   /* Methods to scroll the contents of this window.  Note that they\n      are named with \"_scroll\" coming at the end because the more\n      obvious \"scroll_forward\" is defined as a macro in term.h.  */\n@@ -287,10 +293,10 @@ struct tui_win_info\n   struct tui_gen_win_info generic;\t/* General window information.  */\n \n   /* Can this window ever be highlighted?  */\n-  int can_highlight = 0;\n+  bool can_highlight = false;\n \n   /* Is this window highlighted?  */\n-  int is_highlighted = 0;\n+  bool is_highlighted = false;\n };\n \n /* The base class for all source-like windows, namely the source and\n@@ -447,8 +453,6 @@ struct tui_cmd_window : public tui_win_info\n };\n \n extern int tui_win_is_auxillary (enum tui_win_type win_type);\n-extern void tui_set_win_highlight (struct tui_win_info *win_info,\n-\t\t\t\t   int highlight);\n \n \n /* Global Data.  */"
    },
    {
      "sha": "d060c5c7807710c61008c1812e7d4785ef324dbb",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/214a5cbea656f3ffc1e7e525627c56849347c709/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/214a5cbea656f3ffc1e7e525627c56849347c709/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=214a5cbea656f3ffc1e7e525627c56849347c709",
      "patch": "@@ -546,7 +546,7 @@ make_command_window (int height, int origin_y)\n \t\t\t\t\t\t 0,\n \t\t\t\t\t\t origin_y,\n \t\t\t\t\t\t DONT_BOX_WINDOW);\n-  result->can_highlight = FALSE;\n+  result->can_highlight = false;\n   return result;\n }\n \n@@ -627,7 +627,7 @@ show_source_disasm_command (void)\n \t\t\t     TUI_SRC_WIN->generic.width,\n \t\t\t     TUI_SRC_WIN->execution_info->width,\n \t\t\t     0);\n-\t  TUI_SRC_WIN->can_highlight = TRUE;\n+\t  TUI_SRC_WIN->can_highlight = true;\n \t  init_gen_win_info (TUI_SRC_WIN->execution_info,\n \t\t\t     EXEC_INFO_WIN,\n \t\t\t     src_height,\n@@ -677,7 +677,7 @@ show_source_disasm_command (void)\n \t\t\t     3,\n \t\t\t     0,\n \t\t\t     src_height - 1);\n-\t  TUI_DISASM_WIN->can_highlight = TRUE;\n+\t  TUI_DISASM_WIN->can_highlight = true;\n \t  tui_make_visible (&TUI_DISASM_WIN->generic);\n \t  tui_make_visible (TUI_DISASM_WIN->execution_info);\n \t}\n@@ -698,7 +698,7 @@ show_source_disasm_command (void)\n \t\t\t     TUI_CMD_WIN->generic.width,\n \t\t\t     0,\n \t\t\t     TUI_CMD_WIN->generic.origin.y);\n-\t  TUI_CMD_WIN->can_highlight = FALSE;\n+\t  TUI_CMD_WIN->can_highlight = false;\n \t  tui_make_visible (&TUI_CMD_WIN->generic);\n \t}\n       tui_refresh_win (&TUI_CMD_WIN->generic);\n@@ -723,7 +723,7 @@ show_data (enum tui_layout_type new_layout)\n   tui_make_all_invisible ();\n   tui_make_invisible (locator);\n   make_data_window (&tui_win_list[DATA_WIN], data_height, 0);\n-  TUI_DATA_WIN->can_highlight = TRUE;\n+  TUI_DATA_WIN->can_highlight = true;\n   if (new_layout == SRC_DATA_COMMAND)\n     win_type = SRC_WIN;\n   else\n@@ -835,9 +835,9 @@ init_and_make_win (void *opaque_win_info,\n   if (!tui_win_is_auxillary (win_type))\n     {\n       if (generic->type == CMD_WIN)\n-\t((struct tui_win_info *) opaque_win_info)->can_highlight = FALSE;\n+\t((struct tui_win_info *) opaque_win_info)->can_highlight = false;\n       else\n-\t((struct tui_win_info *) opaque_win_info)->can_highlight = TRUE;\n+\t((struct tui_win_info *) opaque_win_info)->can_highlight = true;\n     }\n   tui_make_window (generic, box_it);\n \n@@ -942,7 +942,7 @@ show_source_or_disasm_and_command (enum tui_layout_type layout_type)\n \t\t\t     3,\n \t\t\t     0,\n \t\t\t     0);\n-\t  base->can_highlight = TRUE;\n+\t  base->can_highlight = true;\n \t  tui_make_visible (&(*win_info_ptr)->generic);\n \t  tui_make_visible (base->execution_info);\n \t}\n@@ -966,7 +966,7 @@ show_source_or_disasm_and_command (enum tui_layout_type layout_type)\n \t\t\t     TUI_CMD_WIN->generic.width,\n \t\t\t     TUI_CMD_WIN->generic.origin.x,\n \t\t\t     TUI_CMD_WIN->generic.origin.y);\n-\t  TUI_CMD_WIN->can_highlight = FALSE;\n+\t  TUI_CMD_WIN->can_highlight = false;\n \t  tui_make_visible (&TUI_CMD_WIN->generic);\n \t}\n       tui_set_current_layout_to (layout_type);"
    },
    {
      "sha": "c17782894424cbd99dd39690b4dc91d1516ec142",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/214a5cbea656f3ffc1e7e525627c56849347c709/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/214a5cbea656f3ffc1e7e525627c56849347c709/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=214a5cbea656f3ffc1e7e525627c56849347c709",
      "patch": "@@ -114,7 +114,7 @@ tui_unhighlight_win (struct tui_win_info *win_info)\n     {\n       box_win (&win_info->generic, NO_HILITE);\n       wrefresh (win_info->generic.handle);\n-      tui_set_win_highlight (win_info, 0);\n+      win_info->set_highlight (false);\n     }\n }\n \n@@ -128,7 +128,7 @@ tui_highlight_win (struct tui_win_info *win_info)\n     {\n       box_win (&win_info->generic, HILITE);\n       wrefresh (win_info->generic.handle);\n-      tui_set_win_highlight (win_info, 1);\n+      win_info->set_highlight (true);\n     }\n }\n "
    }
  ]
}