{
  "sha": "dab863ef408588aba1c396901e3e5070948d2047",
  "node_id": "C_kwDOANOeidoAKGRhYjg2M2VmNDA4NTg4YWJhMWMzOTY5MDFlM2U1MDcwOTQ4ZDIwNDc",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-14T14:24:18Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-18T17:00:00Z"
    },
    "message": "Remove a use of xfree in location.c\n\nThis small cleanup removes a use of xfree from location.c, by\nswitching to unique_xmalloc_ptr.  One function is only used in\nlocation.c, so it is made static.  And, another function is changed to\navoid a copy.",
    "tree": {
      "sha": "9ce96ef1d6d47d125ba54fd3d235f4d41d2eb281",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9ce96ef1d6d47d125ba54fd3d235f4d41d2eb281"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dab863ef408588aba1c396901e3e5070948d2047",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dab863ef408588aba1c396901e3e5070948d2047",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dab863ef408588aba1c396901e3e5070948d2047",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dab863ef408588aba1c396901e3e5070948d2047/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e53c95d40b128a1e794b27ec8b166ae1445356eb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e53c95d40b128a1e794b27ec8b166ae1445356eb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e53c95d40b128a1e794b27ec8b166ae1445356eb"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 13,
    "deletions": 23
  },
  "files": [
    {
      "sha": "b24cf30dc712832e5aef9581f391fe0e935b403f",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dab863ef408588aba1c396901e3e5070948d2047/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dab863ef408588aba1c396901e3e5070948d2047/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=dab863ef408588aba1c396901e3e5070948d2047",
      "patch": "@@ -2098,12 +2098,8 @@ canonicalize_linespec (struct linespec_state *state, const linespec *ls)\n   /* If this location originally came from a linespec, save a string\n      representation of it for display and saving to file.  */\n   if (state->is_linespec)\n-    {\n-      char *linespec = explicit_location_to_linespec (explicit_loc);\n-\n-      set_event_location_string (canon, linespec);\n-      xfree (linespec);\n-    }\n+    set_event_location_string (canon,\n+\t\t\t       explicit_location_to_linespec (explicit_loc));\n }\n \n /* Given a line offset in LS, construct the relevant SALs.  */"
    },
    {
      "sha": "d4180cfe429816aa9746489862f52e115897157a",
      "filename": "gdb/location.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dab863ef408588aba1c396901e3e5070948d2047/gdb/location.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dab863ef408588aba1c396901e3e5070948d2047/gdb/location.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/location.c?ref=dab863ef408588aba1c396901e3e5070948d2047",
      "patch": "@@ -231,7 +231,7 @@ get_explicit_location_const (const struct event_location *location)\n    AS_LINESPEC is non-zero if this string should be a linespec.\n    Otherwise it will be output in explicit form.  */\n \n-static char *\n+static gdb::unique_xmalloc_ptr<char>\n explicit_to_string_internal (int as_linespec,\n \t\t\t     const struct explicit_location *explicit_loc)\n {\n@@ -282,20 +282,20 @@ explicit_to_string_internal (int as_linespec,\n \t\t  explicit_loc->line_offset.offset);\n     }\n \n-  return xstrdup (buf.c_str ());\n+  return make_unique_xstrdup (buf.c_str ());\n }\n \n /* See description in location.h.  */\n \n-char *\n+static gdb::unique_xmalloc_ptr<char>\n explicit_location_to_string (const struct explicit_location *explicit_loc)\n {\n   return explicit_to_string_internal (0, explicit_loc);\n }\n \n /* See description in location.h.  */\n \n-char *\n+gdb::unique_xmalloc_ptr<char>\n explicit_location_to_linespec (const struct explicit_location *explicit_loc)\n {\n   return explicit_to_string_internal (1, explicit_loc);\n@@ -425,7 +425,7 @@ event_location_to_string (struct event_location *location)\n \n \tcase EXPLICIT_LOCATION:\n \t  EL_STRING (location)\n-\t    = explicit_location_to_string (EL_EXPLICIT (location));\n+\t    = explicit_location_to_string (EL_EXPLICIT (location)).release ();\n \t  break;\n \n \tcase PROBE_LOCATION:\n@@ -981,8 +981,8 @@ event_location_empty_p (const struct event_location *location)\n \n void\n set_event_location_string (struct event_location *location,\n-\t\t\t   const char *string)\n+\t\t\t   gdb::unique_xmalloc_ptr<char> string)\n {\n   xfree (EL_STRING (location));\n-  EL_STRING (location) = string == NULL ?  NULL : xstrdup (string);\n+  EL_STRING (location) = string.release ();\n }"
    },
    {
      "sha": "b391ce3b1dda2976ceffb88b4973049a416a7224",
      "filename": "gdb/location.h",
      "status": "modified",
      "additions": 4,
      "deletions": 10,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dab863ef408588aba1c396901e3e5070948d2047/gdb/location.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dab863ef408588aba1c396901e3e5070948d2047/gdb/location.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/location.h?ref=dab863ef408588aba1c396901e3e5070948d2047",
      "patch": "@@ -109,16 +109,10 @@ struct explicit_location\n extern enum event_location_type\n   event_location_type (const struct event_location *);\n \n-/* Return a malloc'd explicit string representation of the given\n-   explicit location.  The location must already be canonicalized/valid.  */\n+/* Return a linespec string representation of the given explicit\n+   location.  The location must already be canonicalized/valid.  */\n \n-extern char *\n-  explicit_location_to_string (const struct explicit_location *explicit_loc);\n-\n-/* Return a malloc'd linespec string representation of the given\n-   explicit location.  The location must already be canonicalized/valid.  */\n-\n-extern char *\n+extern gdb::unique_xmalloc_ptr<char>\n   explicit_location_to_linespec (const struct explicit_location *explicit_loc);\n \n /* Return a string representation of the LOCATION.\n@@ -286,6 +280,6 @@ extern int event_location_empty_p (const struct event_location *location);\n \n extern void\n   set_event_location_string (struct event_location *location,\n-\t\t\t     const char *string);\n+\t\t\t     gdb::unique_xmalloc_ptr<char> string);\n \n #endif /* LOCATION_H */"
    }
  ]
}