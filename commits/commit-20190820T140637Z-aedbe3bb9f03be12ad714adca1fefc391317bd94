{
  "sha": "aedbe3bb9f03be12ad714adca1fefc391317bd94",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWVkYmUzYmI5ZjAzYmUxMmFkNzE0YWRjYTFmZWZjMzkxMzE3YmQ5NA==",
  "commit": {
    "author": {
      "name": "Conrad Meyer",
      "email": "cem@FreeBSD.org",
      "date": "2019-08-19T07:02:19Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-08-20T14:06:37Z"
    },
    "message": "Improve remote attach round-trips without btrace\n\nFor remotes which do not support btrace at all, we can save several\nround trips for each thread.  This is especially significant when your\nremote is a kernel with 100s or 1000s of threads and latency is\nintercontinental.\n\nPreviously, with target, remote, and infrun debugging enabled, one\nmight see:\n\n    Sending packet: $Hg18aee#43...Ack\n    Packet received: OK\n    Sending packet: $Hg186f7#eb...Ack\n    Packet received: OK\n    remote:target_xfer_partial (24, , 0x805454000, 0x0, 0x0, 4096) = -1, 0\n\nrepeated for all non-exited threads.\n\nAfterwards, if the remote does not specify 'qXfer:btrace-conf:read+'\nin qSupported stub features, these unnecessary thread switches are\navoided.\n\ngdb/ChangeLog:\n\n\t* remote.c (remote_target::remote_btrace_maybe_reopen): Avoid\n\tunnecessary thread walk if remote doesn't support the packet.",
    "tree": {
      "sha": "577892888ccb5462341d72bc9056f6c46edbe16f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/577892888ccb5462341d72bc9056f6c46edbe16f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aedbe3bb9f03be12ad714adca1fefc391317bd94",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aedbe3bb9f03be12ad714adca1fefc391317bd94",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aedbe3bb9f03be12ad714adca1fefc391317bd94",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aedbe3bb9f03be12ad714adca1fefc391317bd94/comments",
  "author": {
    "login": "cemeyer",
    "id": 124738,
    "node_id": "MDQ6VXNlcjEyNDczOA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/124738?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cemeyer",
    "html_url": "https://github.com/cemeyer",
    "followers_url": "https://api.github.com/users/cemeyer/followers",
    "following_url": "https://api.github.com/users/cemeyer/following{/other_user}",
    "gists_url": "https://api.github.com/users/cemeyer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cemeyer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cemeyer/subscriptions",
    "organizations_url": "https://api.github.com/users/cemeyer/orgs",
    "repos_url": "https://api.github.com/users/cemeyer/repos",
    "events_url": "https://api.github.com/users/cemeyer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cemeyer/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ac533243beac35f158341d53edab53031218bcde",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac533243beac35f158341d53edab53031218bcde",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ac533243beac35f158341d53edab53031218bcde"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 10,
    "deletions": 0
  },
  "files": [
    {
      "sha": "d9e676ac7cde1781cdffde4edbfd4dfabfcbf7fc",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aedbe3bb9f03be12ad714adca1fefc391317bd94/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aedbe3bb9f03be12ad714adca1fefc391317bd94/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=aedbe3bb9f03be12ad714adca1fefc391317bd94",
      "patch": "@@ -1,3 +1,8 @@\n+2019-08-20  Conrad Meyer  <cem@FreeBSD.org>\n+\n+\t* remote.c (remote_target::remote_btrace_maybe_reopen): Avoid\n+\tunnecessary thread walk if remote doesn't support the packet.\n+\n 2019-08-19  Tom Tromey  <tromey@adacore.com>\n \n \t* python/py-value.c (value_has_field): Fix indentation."
    },
    {
      "sha": "ae06c4ba79155ed37478e1d45af8148f6c3c5ce6",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aedbe3bb9f03be12ad714adca1fefc391317bd94/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aedbe3bb9f03be12ad714adca1fefc391317bd94/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=aedbe3bb9f03be12ad714adca1fefc391317bd94",
      "patch": "@@ -13700,6 +13700,11 @@ remote_target::remote_btrace_maybe_reopen ()\n   int warned = 0;\n #endif\n \n+  /* Don't bother walking the entirety of the remote thread list when\n+     we know the feature isn't supported by the remote.  */\n+  if (packet_support (PACKET_qXfer_btrace_conf) != PACKET_ENABLE)\n+    return;\n+\n   scoped_restore_current_thread restore_thread;\n \n   for (thread_info *tp : all_non_exited_threads ())"
    }
  ]
}