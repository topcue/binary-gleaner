{
  "sha": "ba3265d04cc794d2af8b7d590a0658f7d732071c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmEzMjY1ZDA0Y2M3OTRkMmFmOGI3ZDU5MGEwNjU4ZjdkNzMyMDcxYw==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-03-02T10:02:02Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-03-02T10:02:02Z"
    },
    "message": "Restore readelf's string dump to previous behaviour where newlines were caused line breaks.\n\n\tPR 25543\n\t* readelf.c (dump_section_as_strings): Display new-line characters\n\tas \\n and then insert a line break.\n\t* testsuite/binutils-all/pr25543.s: New test.\n\t* testsuite/binutils-all/pr25543.d: Test driver.\n\t* testsuite/binutils-all/readelf.exp: Run the new test.",
    "tree": {
      "sha": "130a816b897725b0eae9cfdc8ed5a711a48feed5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/130a816b897725b0eae9cfdc8ed5a711a48feed5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ba3265d04cc794d2af8b7d590a0658f7d732071c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba3265d04cc794d2af8b7d590a0658f7d732071c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ba3265d04cc794d2af8b7d590a0658f7d732071c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba3265d04cc794d2af8b7d590a0658f7d732071c/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cb001c0d283dd884efe06770d033a50fb1bc6c7d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cb001c0d283dd884efe06770d033a50fb1bc6c7d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cb001c0d283dd884efe06770d033a50fb1bc6c7d"
    }
  ],
  "stats": {
    "total": 109,
    "additions": 102,
    "deletions": 7
  },
  "files": [
    {
      "sha": "479061d0f049c522d9983445db6e2cf28cb68e0b",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3265d04cc794d2af8b7d590a0658f7d732071c/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3265d04cc794d2af8b7d590a0658f7d732071c/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=ba3265d04cc794d2af8b7d590a0658f7d732071c",
      "patch": "@@ -1,3 +1,12 @@\n+2020-03-02  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25543\n+\t* readelf.c (dump_section_as_strings): Display new-line characters\n+\tas \\n and then insert a line break.\n+\t* testsuite/binutils-all/pr25543.s: New test.\n+\t* testsuite/binutils-all/pr25543.d: Test driver.\n+\t* testsuite/binutils-all/readelf.exp: Run the new test.\n+\n 2020-02-27  Nick Clifton  <nickc@redhat.com>\n \n \tPR 25526"
    },
    {
      "sha": "d4756c93b3454965accc7797593cde66936e0eae",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 73,
      "deletions": 7,
      "changes": 80,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3265d04cc794d2af8b7d590a0658f7d732071c/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3265d04cc794d2af8b7d590a0658f7d732071c/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=ba3265d04cc794d2af8b7d590a0658f7d732071c",
      "patch": "@@ -13732,6 +13732,14 @@ dump_section_as_strings (Elf_Internal_Shdr * section, Filedata * filedata)\n   end  = start + num_bytes;\n   some_strings_shown = FALSE;\n \n+#ifdef HAVE_MBSTATE_T\n+  mbstate_t state;\n+  /* Initialise the multibyte conversion state.  */\n+  memset (& state, 0, sizeof (state));\n+#endif\n+\n+  bfd_boolean continuing = FALSE;\n+\n   while (data < end)\n     {\n       while (!ISPRINT (* data))\n@@ -13742,18 +13750,76 @@ dump_section_as_strings (Elf_Internal_Shdr * section, Filedata * filedata)\n \t{\n \t  size_t maxlen = end - data;\n \n+\t  if (continuing)\n+\t    {\n+\t      printf (\"            \");\n+\t      continuing = FALSE;\n+\t    }\n+\t  else\n+\t    {\n #ifndef __MSVCRT__\n-\t  /* PR 11128: Use two separate invocations in order to work\n-             around bugs in the Solaris 8 implementation of printf.  */\n-\t  printf (\"  [%6tx]  \", data - start);\n+\t      /* PR 11128: Use two separate invocations in order to work\n+\t\t around bugs in the Solaris 8 implementation of printf.  */\n+\t      printf (\"  [%6tx]  \", data - start);\n #else\n-\t  printf (\"  [%6Ix]  \", (size_t) (data - start));\n+\t      printf (\"  [%6Ix]  \", (size_t) (data - start));\n #endif\n+\t    }\n+\n \t  if (maxlen > 0)\n \t    {\n-\t      print_symbol ((int) maxlen, (const char *) data);\n-\t      putchar ('\\n');\n-\t      data += strnlen ((const char *) data, maxlen);\n+\t      char c;\n+\n+\t      while (maxlen)\n+\t\t{\n+\t\t  c = *data++;\n+\n+\t\t  if (c == 0)\n+\t\t    break;\n+\n+\t\t  /* PR 25543: Treat new-lines as string-ending characters.  */\n+\t\t  if (c == '\\n')\n+\t\t    {\n+\t\t      printf (\"\\\\n\\n\");\n+\t\t      if (*data != 0)\n+\t\t\tcontinuing = TRUE;\n+\t\t      break;\n+\t\t    }\n+\n+\t\t  /* Do not print control characters directly as they can affect terminal\n+\t\t     settings.  Such characters usually appear in the names generated\n+\t\t     by the assembler for local labels.  */\n+\t\t  if (ISCNTRL (c))\n+\t\t    {\n+\t\t      printf (\"^%c\", c + 0x40);\n+\t\t    }\n+\t\t  else if (ISPRINT (c))\n+\t\t    {\n+\t\t      putchar (c);\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      size_t  n;\n+#ifdef HAVE_MBSTATE_T\n+\t\t      wchar_t w;\n+#endif\n+\t\t      /* Let printf do the hard work of displaying multibyte characters.  */\n+\t\t      printf (\"%.1s\", data - 1);\n+#ifdef HAVE_MBSTATE_T\n+\t\t      /* Try to find out how many bytes made up the character that was\n+\t\t\t just printed.  Advance the symbol pointer past the bytes that\n+\t\t\t were displayed.  */\n+\t\t      n = mbrtowc (& w, (char *)(data - 1), MB_CUR_MAX, & state);\n+#else\n+\t\t      n = 1;\n+#endif\n+\t\t      if (n != (size_t) -1 && n != (size_t) -2 && n > 0)\n+\t\t\tdata += (n - 1);\n+\t\t    }\n+\t\t}\n+\n+\t      if (c != '\\n')\n+\t\tputchar ('\\n');\n \t    }\n \t  else\n \t    {"
    },
    {
      "sha": "75f23922db970d4e66762f0d98c591fbd7307176",
      "filename": "binutils/testsuite/binutils-all/pr25543.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3265d04cc794d2af8b7d590a0658f7d732071c/binutils/testsuite/binutils-all/pr25543.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3265d04cc794d2af8b7d590a0658f7d732071c/binutils/testsuite/binutils-all/pr25543.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/pr25543.d?ref=ba3265d04cc794d2af8b7d590a0658f7d732071c",
      "patch": "@@ -0,0 +1,12 @@\n+#source: pr25543.s\n+#readelf: -p.data\n+#notarget: rx-*\n+\n+String dump of section '.data':\n+  \\[     0\\]  line1 : This is a line without a newline at the end\n+  \\[    34\\]  line2 : This is a line with a newline at the end\\\\n\n+  \\[    66\\]  line3 : This is a line with a \\\\n\n+            newline in the middle\n+  \\[    9b\\]  line4 : This is a line with a \\^Mcontrol character\n+  \\[    cd\\]  line6 : The previous line was empty\\\\n\n+#pass"
    },
    {
      "sha": "71bfe05a0c837a177929230312b58a09f339bdc7",
      "filename": "binutils/testsuite/binutils-all/pr25543.s",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3265d04cc794d2af8b7d590a0658f7d732071c/binutils/testsuite/binutils-all/pr25543.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3265d04cc794d2af8b7d590a0658f7d732071c/binutils/testsuite/binutils-all/pr25543.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/pr25543.s?ref=ba3265d04cc794d2af8b7d590a0658f7d732071c",
      "patch": "@@ -0,0 +1,7 @@\n+\t.data\n+\t.asciz \"line1 : This is a line without a newline at the end\"\n+\t.asciz \"line2 : This is a line with a newline at the end\\n\"\n+\t.asciz \"line3 : This is a line with a \\nnewline in the middle\"\n+\t.asciz \"line4 : This is a line with a \\rcontrol character\"\n+\t.asciz \"\"\n+\t.asciz \"line6 : The previous line was empty\\n\""
    },
    {
      "sha": "cc78e66ea3cd9fe717bd845841d9e10ab2717e6b",
      "filename": "binutils/testsuite/binutils-all/readelf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3265d04cc794d2af8b7d590a0658f7d732071c/binutils/testsuite/binutils-all/readelf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3265d04cc794d2af8b7d590a0658f7d732071c/binutils/testsuite/binutils-all/readelf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/readelf.exp?ref=ba3265d04cc794d2af8b7d590a0658f7d732071c",
      "patch": "@@ -349,6 +349,7 @@ readelf_wi_test\n readelf_compressed_wa_test\n \n readelf_dump_test\n+run_dump_test \"pr25543\"\n \n # PR 13482 - Check for off-by-one errors when dumping .note sections.\n if {![binutils_assemble $srcdir/$subdir/version.s tmpdir/version.o]} then {"
    }
  ]
}