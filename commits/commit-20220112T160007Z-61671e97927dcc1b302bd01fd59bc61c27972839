{
  "sha": "61671e97927dcc1b302bd01fd59bc61c27972839",
  "node_id": "C_kwDOANOeidoAKDYxNjcxZTk3OTI3ZGNjMWIzMDJiZDAxZmQ1OWJjNjFjMjc5NzI4Mzk",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-01-12T11:52:19Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-01-12T16:00:07Z"
    },
    "message": "gdb/python: add gdb.host_charset function\n\nWe already have gdb.target_charset and gdb.target_wide_charset.  This\ncommit adds gdb.host_charset along the same lines.",
    "tree": {
      "sha": "1078be11dae50585e6c5716377407c6a75c675da",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1078be11dae50585e6c5716377407c6a75c675da"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/61671e97927dcc1b302bd01fd59bc61c27972839",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61671e97927dcc1b302bd01fd59bc61c27972839",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/61671e97927dcc1b302bd01fd59bc61c27972839",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61671e97927dcc1b302bd01fd59bc61c27972839/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "51eebae32ab1b7bb454c90252edb877211f6fcb4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51eebae32ab1b7bb454c90252edb877211f6fcb4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/51eebae32ab1b7bb454c90252edb877211f6fcb4"
    }
  ],
  "stats": {
    "total": 74,
    "additions": 74,
    "deletions": 0
  },
  "files": [
    {
      "sha": "8c13cefb22f3373a2171d46bae0d8a826e75a4fc",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61671e97927dcc1b302bd01fd59bc61c27972839/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61671e97927dcc1b302bd01fd59bc61c27972839/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=61671e97927dcc1b302bd01fd59bc61c27972839",
      "patch": "@@ -143,6 +143,9 @@ show debug lin-lwp\n      is equivalent to the existing 'maint packet' CLI command; it\n      allows a user specified packet to be sent to the remote target.\n \n+  ** New function gdb.host_charset(), returns a string, which is the\n+     name of the current host charset.\n+\n * New features in the GDB remote stub, GDBserver\n \n   ** GDBserver is now supported on OpenRISC GNU/Linux."
    },
    {
      "sha": "38fce5b38e3751201cacaa25dabd8a45e68e1281",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61671e97927dcc1b302bd01fd59bc61c27972839/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61671e97927dcc1b302bd01fd59bc61c27972839/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=61671e97927dcc1b302bd01fd59bc61c27972839",
      "patch": "@@ -518,6 +518,14 @@ Return the name of the current target wide character set\n never returned.\n @end defun\n \n+@findex gdb.host_charset\n+@defun gdb.host_charset ()\n+Return a string, the name of the current host character set\n+(@pxref{Character Sets}).  This differs from\n+@code{gdb.parameter('host-charset')} in that @samp{auto} is never\n+returned.\n+@end defun\n+\n @findex gdb.solib_name\n @defun gdb.solib_name (address)\n Return the name of the shared library holding the given @var{address}"
    },
    {
      "sha": "4dcda53d9abd1f2467f793c070fbd5537bd5f01a",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61671e97927dcc1b302bd01fd59bc61c27972839/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61671e97927dcc1b302bd01fd59bc61c27972839/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=61671e97927dcc1b302bd01fd59bc61c27972839",
      "patch": "@@ -571,6 +571,16 @@ gdbpy_target_wide_charset (PyObject *self, PyObject *args)\n   return PyUnicode_Decode (cset, strlen (cset), host_charset (), NULL);\n }\n \n+/* Implement gdb.host_charset().  */\n+\n+static PyObject *\n+gdbpy_host_charset (PyObject *self, PyObject *args)\n+{\n+  const char *cset = host_charset ();\n+\n+  return PyUnicode_Decode (cset, strlen (cset), host_charset (), NULL);\n+}\n+\n /* A Python function which evaluates a string using the gdb CLI.  */\n \n static PyObject *\n@@ -2281,6 +2291,9 @@ Return the name of the current target charset.\" },\n   { \"target_wide_charset\", gdbpy_target_wide_charset, METH_NOARGS,\n     \"target_wide_charset () -> string.\\n\\\n Return the name of the current target wide charset.\" },\n+  { \"host_charset\", gdbpy_host_charset, METH_NOARGS,\n+    \"host_charset () -> string.\\n\\\n+Return the name of the current host charset.\" },\n   { \"rbreak\", (PyCFunction) gdbpy_rbreak, METH_VARARGS | METH_KEYWORDS,\n     \"rbreak (Regex) -> List.\\n\\\n Return a Tuple containing gdb.Breakpoint objects that match the given Regex.\" },"
    },
    {
      "sha": "e4af0e5b56fe234a28d572838164f01210434fc7",
      "filename": "gdb/testsuite/gdb.python/py-charset.exp",
      "status": "added",
      "additions": 50,
      "deletions": 0,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61671e97927dcc1b302bd01fd59bc61c27972839/gdb/testsuite/gdb.python/py-charset.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61671e97927dcc1b302bd01fd59bc61c27972839/gdb/testsuite/gdb.python/py-charset.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-charset.exp?ref=61671e97927dcc1b302bd01fd59bc61c27972839",
      "patch": "@@ -0,0 +1,50 @@\n+# Copyright 2022 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+load_lib gdb-python.exp\n+\n+gdb_exit\n+gdb_start\n+\n+# Skip all tests if Python scripting is not enabled.\n+if { [skip_python_tests] } { continue }\n+\n+# Each test data has 4 parts:\n+# 1. The string used in 'show XXX-charset' command,\n+# 2. The string expected in the output of the command used in #1,\n+# 3. The string used is gdb.XXXX_charset() python function call,\n+# 4. A string that is a regexp appended to the result of #1, used to\n+#    match the output of #3\n+foreach test_data { {host host host \"\"} \\\n+\t\t\t{target target target \"\"} \\\n+\t\t\t{target-wide \"target wide\" \\\n+\t\t\t     \"target_wide\" \"(LE|BE)?\"} } {\n+    with_test_prefix \"charset=[lindex $test_data 0]\" {\n+\tset charset \"unknown\"\n+\tgdb_test_multiple \"show [lindex $test_data 0]-charset\" \"\" {\n+\t    -re \"The [lindex $test_data 1] character set is \\\"auto; currently (\\[^\\\"\\]*)\\\".*$gdb_prompt $\" {\n+\t\tset charset $expect_out(1,string)\n+\t\tpass $gdb_test_name\n+\t    }\n+\t    -re \"The [lindex $test_data 1] character set is \\\"(\\[^\\\"\\]*)\\\".*$gdb_prompt $\" {\n+\t\tset charset $expect_out(1,string)\n+\t\tpass $gdb_test_name\n+\t    }\n+\t}\n+\tset charset \"${charset}[lindex $test_data 3]\"\n+\tgdb_test \"python print(gdb.[lindex $test_data 2]_charset())\" \\\n+\t    \"${charset}\"\n+    }\n+}"
    }
  ]
}