{
  "sha": "d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDFlMzYwMTljMWY1Y2M1ZGU4Yjk5ZGQ4NmNhY2ZiZjQxOGZjMWM1Yg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-10-31T22:03:25Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-10-31T22:03:25Z"
    },
    "message": "[gdb/testsuite] Remove superfluous 3rd argument from gdb_test call (2)\n\nThere's a pattern:\n...\ngdb_test <command> <pattern> <command>\n...\nthat can be written shorter as:\n...\ngdb_test <command> <pattern>\n...\n\nDetect this pattern in proc gdb_test:\n...\n     global gdb_prompt\n     upvar timeout timeout\n\n     if [llength $args]>2 then {\n        set message [lindex $args 2]\n+       if { $message == [lindex $args 0] && [llength $args] == 3 } {\n+           error \"HERE\"\n+       }\n     } else {\n         set message [lindex $args 0]\n     }\n...\nand fix all occurrences in some gdb testsuite subdirs.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2019-10-31  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.arch/amd64-disp-step-avx.exp: Drop superfluous 3rd argument to\n\tgdb_test.\n\t* gdb.arch/amd64-disp-step.exp: Same.\n\t* gdb.asm/asm-source.exp: Same.\n\t* gdb.btrace/buffer-size.exp: Same.\n\t* gdb.btrace/cpu.exp: Same.\n\t* gdb.btrace/enable.exp: Same.\n\t* gdb.dwarf2/count.exp: Same.\n\t* gdb.dwarf2/dw2-ranges-func.exp: Same.\n\t* gdb.dwarf2/dw2-ranges-psym.exp: Same.\n\t* gdb.fortran/vla-datatypes.exp: Same.\n\t* gdb.fortran/vla-history.exp: Same.\n\t* gdb.fortran/vla-ptype.exp: Same.\n\t* gdb.fortran/vla-value.exp: Same.\n\t* gdb.fortran/whatis_type.exp: Same.\n\t* gdb.guile/guile.exp: Same.\n\t* gdb.multi/tids.exp: Same.\n\t* gdb.python/py-finish-breakpoint.exp: Same.\n\t* gdb.python/py-framefilter.exp: Same.\n\t* gdb.python/py-pp-registration.exp: Same.\n\t* gdb.python/py-xmethods.exp: Same.\n\t* gdb.python/python.exp: Same.\n\t* gdb.server/connect-with-no-symbol-file.exp: Same.\n\t* gdb.server/no-thread-db.exp: Same.\n\t* gdb.server/run-without-local-binary.exp: Same.\n\t* gdb.stabs/weird.exp: Same.\n\t* gdb.threads/attach-many-short-lived-threads.exp: Same.\n\t* gdb.threads/thread-find.exp: Same.\n\t* gdb.threads/tls-shared.exp: Same.\n\t* gdb.threads/tls.exp: Same.\n\t* gdb.threads/wp-replication.exp: Same.\n\t* gdb.trace/ax.exp: Same.\n\t* lib/gdb.exp (gdb_test_exact, help_test_raw): Same.\n\nChange-Id: I2fa544c68f8c0099a77e03ff04ddc010eb2b6c7c",
    "tree": {
      "sha": "49b43cdef154e5fc3e5e06dc6fe6849950ab723e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/49b43cdef154e5fc3e5e06dc6fe6849950ab723e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68"
    }
  ],
  "stats": {
    "total": 360,
    "additions": 177,
    "deletions": 183
  },
  "files": [
    {
      "sha": "a5decfd99a9add8effa7de80c4e33c7f4f177c3a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -1,3 +1,39 @@\n+2019-10-31  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.arch/amd64-disp-step-avx.exp: Drop superfluous 3rd argument to\n+\tgdb_test.\n+\t* gdb.arch/amd64-disp-step.exp: Same.\n+\t* gdb.asm/asm-source.exp: Same.\n+\t* gdb.btrace/buffer-size.exp: Same.\n+\t* gdb.btrace/cpu.exp: Same.\n+\t* gdb.btrace/enable.exp: Same.\n+\t* gdb.dwarf2/count.exp: Same.\n+\t* gdb.dwarf2/dw2-ranges-func.exp: Same.\n+\t* gdb.dwarf2/dw2-ranges-psym.exp: Same.\n+\t* gdb.fortran/vla-datatypes.exp: Same.\n+\t* gdb.fortran/vla-history.exp: Same.\n+\t* gdb.fortran/vla-ptype.exp: Same.\n+\t* gdb.fortran/vla-value.exp: Same.\n+\t* gdb.fortran/whatis_type.exp: Same.\n+\t* gdb.guile/guile.exp: Same.\n+\t* gdb.multi/tids.exp: Same.\n+\t* gdb.python/py-finish-breakpoint.exp: Same.\n+\t* gdb.python/py-framefilter.exp: Same.\n+\t* gdb.python/py-pp-registration.exp: Same.\n+\t* gdb.python/py-xmethods.exp: Same.\n+\t* gdb.python/python.exp: Same.\n+\t* gdb.server/connect-with-no-symbol-file.exp: Same.\n+\t* gdb.server/no-thread-db.exp: Same.\n+\t* gdb.server/run-without-local-binary.exp: Same.\n+\t* gdb.stabs/weird.exp: Same.\n+\t* gdb.threads/attach-many-short-lived-threads.exp: Same.\n+\t* gdb.threads/thread-find.exp: Same.\n+\t* gdb.threads/tls-shared.exp: Same.\n+\t* gdb.threads/tls.exp: Same.\n+\t* gdb.threads/wp-replication.exp: Same.\n+\t* gdb.trace/ax.exp: Same.\n+\t* lib/gdb.exp (gdb_test_exact, help_test_raw): Same.\n+\n 2019-10-31  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.ada/array_bounds.exp: Drop superfluous 3rd argument to gdb_test."
    },
    {
      "sha": "f652fd834e649db12515c9ad9fc6294110710ec9",
      "filename": "gdb/testsuite/gdb.arch/amd64-disp-step-avx.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.arch/amd64-disp-step-avx.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.arch/amd64-disp-step-avx.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/amd64-disp-step-avx.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -78,11 +78,9 @@ proc disp_step_func { func } {\n     set test_end_label \"${func}_end\"\n \n     gdb_test \"break ${test_start_label}\" \\\n-\t\"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-\t\"break ${test_start_label}\"\n+\t\"Breakpoint.*at.* file .*$srcfile, line.*\"\n     gdb_test \"break ${test_end_label}\" \\\n-\t\"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-\t\"break ${test_end_label}\"\n+\t\"Breakpoint.*at.* file .*$srcfile, line.*\"\n \n     gdb_test \"continue\" \\\n \t\"Continuing.*Breakpoint.*, ${test_start_label} ().*\" \\"
    },
    {
      "sha": "6f493923b0deb77f6d775d1ac3e0d72db5185794",
      "filename": "gdb/testsuite/gdb.arch/amd64-disp-step.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 28,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.arch/amd64-disp-step.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.arch/amd64-disp-step.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/amd64-disp-step.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -45,18 +45,14 @@ if ![runto_main] then {\n # Test call/ret.\n \n gdb_test \"break test_call\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-    \"break test_call\"\n+    \"Breakpoint.*at.* file .*$srcfile, line.*\"\n gdb_test \"break test_call_end\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-    \"break test_call_end\"\n+    \"Breakpoint.*at.* file .*$srcfile, line.*\"\n \n gdb_test \"break test_ret\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-    \"break test_ret\"\n+    \"Breakpoint.*at.* file .*$srcfile, line.*\"\n gdb_test \"break test_ret_end\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-    \"break test_ret_end\"\n+    \"Breakpoint.*at.* file .*$srcfile, line.*\"\n \n gdb_test \"continue\" \\\n     \"Continuing.*Breakpoint.*, test_call ().*\" \\\n@@ -77,18 +73,14 @@ gdb_test \"continue\" \\\n # Test abs-jmp/rep-ret.\n \n gdb_test \"break test_abs_jmp\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-    \"break test_abs_jmp\"\n+    \"Breakpoint.*at.* file .*$srcfile, line.*\"\n gdb_test \"break test_abs_jmp_end\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-    \"break test_abs_jmp_end\"\n+    \"Breakpoint.*at.* file .*$srcfile, line.*\"\n \n gdb_test \"break test_rep_ret\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-    \"break test_rep_ret\"\n+    \"Breakpoint.*at.* file .*$srcfile, line.*\"\n gdb_test \"break test_rep_ret_end\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-    \"break test_rep_ret_end\"\n+    \"Breakpoint.*at.* file .*$srcfile, line.*\"\n \n gdb_test \"continue\" \\\n     \"Continuing.*Breakpoint.*, test_abs_jmp ().*\" \\\n@@ -109,11 +101,9 @@ gdb_test \"continue\" \\\n # Test syscall.\n \n gdb_test \"break test_syscall\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-    \"break test_syscall\"\n+    \"Breakpoint.*at.* file .*$srcfile, line.*\"\n gdb_test \"break test_syscall_end\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-    \"break test_syscall_end\"\n+    \"Breakpoint.*at.* file .*$srcfile, line.*\"\n \n gdb_test \"continue\" \\\n     \"Continuing.*Breakpoint.*, test_syscall ().*\" \\\n@@ -128,11 +118,9 @@ gdb_test \"continue\" \\\n # These don't occur in normal code, but gdb should still DTRT.\n \n gdb_test \"break test_int3\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-    \"break test_int3\"\n+    \"Breakpoint.*at.* file .*$srcfile, line.*\"\n gdb_test \"break test_int3_end\" \\\n-    \"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-    \"break test_int3_end\"\n+    \"Breakpoint.*at.* file .*$srcfile, line.*\"\n \n gdb_test \"continue\" \\\n     \"Continuing.*Breakpoint.*, test_int3 ().*\" \\\n@@ -192,11 +180,9 @@ proc rip_test { reg } {\n     set test_end_label \"test_rip_${reg}_end\"\n \n     gdb_test \"break ${test_start_label}\" \\\n-\t\"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-\t\"break ${test_start_label}\"\n+\t\"Breakpoint.*at.* file .*$srcfile, line.*\"\n     gdb_test \"break ${test_end_label}\" \\\n-\t\"Breakpoint.*at.* file .*$srcfile, line.*\" \\\n-\t\"break ${test_end_label}\"\n+\t\"Breakpoint.*at.* file .*$srcfile, line.*\"\n \n     gdb_test \"continue\" \\\n \t\"Continuing.*Breakpoint.*, ${test_start_label} ().*\" \\"
    },
    {
      "sha": "5904cb18bcb933730c9525b1b595a35890e9ebe0",
      "filename": "gdb/testsuite/gdb.asm/asm-source.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.asm/asm-source.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.asm/asm-source.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.asm/asm-source.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -421,8 +421,7 @@ gdb_test_multiple \"info sources\" \"info sources\" {\n \n # Try 'info line'\n gdb_test \"info line\" \\\n-\t\"Line $line_call_foo3_again of.*asmsrc2.s.*starts at.*<\\\\.?foo2+.*> and ends at.*<\\\\.?foo2+.*>.\" \\\n-\t\"info line\"\n+\t\"Line $line_call_foo3_again of.*asmsrc2.s.*starts at.*<\\\\.?foo2+.*> and ends at.*<\\\\.?foo2+.*>.\"\n \n # Try 'nexting' over next call to foo3\n gdb_test \"next\" \"$line_foo2_leave\\[ \\t\\]+gdbasm_leave\" \"next over foo3\""
    },
    {
      "sha": "a52458b132535e0e656bfd940619d9ae913073d4",
      "filename": "gdb/testsuite/gdb.btrace/buffer-size.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.btrace/buffer-size.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.btrace/buffer-size.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.btrace/buffer-size.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -43,4 +43,4 @@ gdb_test \"info record\" [multi_line \\\n   \"Recording format: \\[^\\\\\\r\\\\\\n\\]*\" \\\n   \"Buffer size: 4kB\\.\" \\\n   \"Recorded 0 instructions in 0 functions \\\\\\(0 gaps\\\\\\) for \\[^\\\\\\r\\\\\\n\\]*\" \\\n-  ] \"info record\"\n+  ]"
    },
    {
      "sha": "93ed0c623033a3ebfcdea6354ba40e463db3f569",
      "filename": "gdb/testsuite/gdb.btrace/cpu.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.btrace/cpu.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.btrace/cpu.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.btrace/cpu.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -42,11 +42,9 @@ proc test_junk { arg junk current } {\n gdb_test \"show record btrace cpu\" \"btrace cpu is 'auto'\\.\" \"default cpu\"\n \n gdb_test \"set record\" \\\n-    \"\\\"set record\\\" must be followed by an appropriate subcommand.*\" \\\n-    \"set record\"\n+    \"\\\"set record\\\" must be followed by an appropriate subcommand.*\"\n gdb_test \"set record btrace\" \\\n-    \"\\\"set record btrace\\\" must be followed by an appropriate subcommand.*\" \\\n-    \"set record btrace\"\n+    \"\\\"set record btrace\\\" must be followed by an appropriate subcommand.*\"\n test_bad \"\" \"auto\"\n \n test_good \"intel: 0/0\""
    },
    {
      "sha": "6b74d1d6bf24548c58372f52735ac79f31eddc25",
      "filename": "gdb/testsuite/gdb.btrace/enable.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.btrace/enable.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.btrace/enable.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.btrace/enable.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -64,7 +64,7 @@ gdb_test \"info record\" \"Active record target: record-btrace\\r\n Recorded 0 instructions in 0 functions \\\\\\(0 gaps\\\\\\) for thread 1.*\\\\.\" \"info record without trace\"\n \n # stop btrace record\n-gdb_test \"record stop\" \"Process record is stopped and all execution logs are deleted\\\\.\" \"record stop\"\n+gdb_test \"record stop\" \"Process record is stopped and all execution logs are deleted\\\\.\"\n gdb_test \"record stop\" \"No record target is currently active\\\\..*\" \"record stop the second time\"\n \n # enable btrace again"
    },
    {
      "sha": "5c8f0f10846fdaf5d5fc74b1d26967fb8f30351c",
      "filename": "gdb/testsuite/gdb.dwarf2/count.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 14,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.dwarf2/count.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.dwarf2/count.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/count.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -109,17 +109,17 @@ if ![runto_main] {\n     return -1\n }\n \n-gdb_test \"ptype array\" \"type = char \\\\\\[5\\\\\\]\" \"ptype array\"\n-gdb_test \"whatis array\" \"type = char \\\\\\[5\\\\\\]\" \"whatis array\"\n-gdb_test \"print array\" \" = \\\"hello\\\"\" \"print array\"\n-gdb_test \"print sizeof array\" \" = 5\" \"print sizeof array\"\n-\n-gdb_test \"ptype array2\" \"type = char \\\\\\[1\\\\\\]\" \"ptype array\"\n-gdb_test \"whatis array2\" \"type = char \\\\\\[1\\\\\\]\" \"whatis array\"\n-gdb_test \"print array2\" \" = \\\"A\\\"\" \"print array\"\n-gdb_test \"print sizeof array2\" \" = 1\" \"print sizeof array\"\n-\n-gdb_test \"ptype static_array\" \"type = char \\\\\\[5\\\\\\]\" \"ptype static_array\"\n-gdb_test \"whatis static_array\" \"type = char \\\\\\[5\\\\\\]\" \"whatis static_array\"\n-gdb_test \"print static_array\" \" = \\\"world\\\"\" \"print static_array\"\n-gdb_test \"print sizeof static_array\" \" = 5\" \"print sizeof static_array\"\n+gdb_test \"ptype array\" \"type = char \\\\\\[5\\\\\\]\"\n+gdb_test \"whatis array\" \"type = char \\\\\\[5\\\\\\]\"\n+gdb_test \"print array\" \" = \\\"hello\\\"\"\n+gdb_test \"print sizeof array\" \" = 5\"\n+\n+gdb_test \"ptype array2\" \"type = char \\\\\\[1\\\\\\]\"\n+gdb_test \"whatis array2\" \"type = char \\\\\\[1\\\\\\]\"\n+gdb_test \"print array2\" \" = \\\"A\\\"\"\n+gdb_test \"print sizeof array2\" \" = 1\"\n+\n+gdb_test \"ptype static_array\" \"type = char \\\\\\[5\\\\\\]\"\n+gdb_test \"whatis static_array\" \"type = char \\\\\\[5\\\\\\]\"\n+gdb_test \"print static_array\" \" = \\\"world\\\"\"\n+gdb_test \"print sizeof static_array\" \" = 5\""
    },
    {
      "sha": "214dcdf379f47a67db4a22efbe5f54edb4df1677",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-ranges-func.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.dwarf2/dw2-ranges-func.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.dwarf2/dw2-ranges-func.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-ranges-func.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -257,8 +257,7 @@ proc do_test {suffix} {\n \t# This is intentional since that behavior is one of the bugs that\n \t# this test case tests for.\n \tgdb_test \"break foo\" \\\n-\t    \"Breakpoint.*at.* file .*$srcfile, line \\\\d+\\\\.\" \\\n-\t    \"break foo\"\n+\t    \"Breakpoint.*at.* file .*$srcfile, line \\\\d+\\\\.\"\n \n \t# Continue to foo.  Allow execution to stop either on the prologue\n \t# or on the call to bar since either behavior is acceptable though\n@@ -323,8 +322,7 @@ proc do_test {suffix} {\n     # This more permissive RE for \"break foo\" will allow a breakpoint on\n     # multiple locations to PASS.  */\n     gdb_test \"break foo\" \\\n-\t\"Breakpoint.*at.*\" \\\n-\t\"break foo\"\n+\t\"Breakpoint.*at.*\"\n \n     gdb_test \"break baz\" \\\n \t\"Breakpoint.*at.* file .*$srcfile, line \\\\d+\\\\.\""
    },
    {
      "sha": "333577eb5e7063107f7f1f1d0871d83cfbfdc654",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -134,5 +134,4 @@ if ![runto_main] {\n # Note we use a name that is very different from the linkage name, in\n # order to not set the breakpoint via minsyms.\n gdb_test \"break someothername\" \\\n-    \"Breakpoint.*at.*\" \\\n-    \"break someothername\"\n+    \"Breakpoint.*at.*\""
    },
    {
      "sha": "c8025c7698f303460e27cd4259316cedfa927e6a",
      "filename": "gdb/testsuite/gdb.fortran/vla-datatypes.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 10,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.fortran/vla-datatypes.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.fortran/vla-datatypes.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/vla-datatypes.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -55,16 +55,11 @@ gdb_test \"print l\" \" = \\\\.TRUE\\\\.\" \"charactervla allocated\"\n \n gdb_breakpoint [gdb_get_line_number \"vlas-initialized\"]\n gdb_continue_to_breakpoint \"vlas-initialized\"\n-gdb_test \"ptype intvla\" \"type = $int, allocatable \\\\\\(11,22,33\\\\\\)\" \\\n-  \"ptype intvla\"\n-gdb_test \"ptype realvla\" \"type = $real, allocatable \\\\\\(11,22,33\\\\\\)\" \\\n-  \"ptype realvla\"\n-gdb_test \"ptype complexvla\" \"type = $complex, allocatable \\\\\\(11,22,33\\\\\\)\" \\\n-  \"ptype complexvla\"\n-gdb_test \"ptype logicalvla\" \"type = $logical, allocatable \\\\\\(11,22,33\\\\\\)\" \\\n-  \"ptype logicalvla\"\n-gdb_test \"ptype charactervla\" \"type = character\\\\\\*1, allocatable \\\\\\(11,22,33\\\\\\)\" \\\n-  \"ptype charactervla\"\n+gdb_test \"ptype intvla\" \"type = $int, allocatable \\\\\\(11,22,33\\\\\\)\"\n+gdb_test \"ptype realvla\" \"type = $real, allocatable \\\\\\(11,22,33\\\\\\)\"\n+gdb_test \"ptype complexvla\" \"type = $complex, allocatable \\\\\\(11,22,33\\\\\\)\"\n+gdb_test \"ptype logicalvla\" \"type = $logical, allocatable \\\\\\(11,22,33\\\\\\)\"\n+gdb_test \"ptype charactervla\" \"type = character\\\\\\*1, allocatable \\\\\\(11,22,33\\\\\\)\"\n \n gdb_test \"print intvla(5,5,5)\" \" = 1\" \"print intvla(5,5,5) (1st)\"\n gdb_test \"print realvla(5,5,5)\" \" = 3.14\\\\d+\" \\"
    },
    {
      "sha": "b7ce366e7978cefe5ec6f3603a05a30a9e85df2b",
      "filename": "gdb/testsuite/gdb.fortran/vla-history.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.fortran/vla-history.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.fortran/vla-history.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/vla-history.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -39,17 +39,17 @@ with_timeout_factor 2 {\n }\n \n # Try to access history values for full vla prints.\n-gdb_test \"print \\$1\" \" = <not allocated>\" \"print \\$1\"\n+gdb_test \"print \\$1\" \" = <not allocated>\"\n with_timeout_factor 2 {\n     gdb_test \"print \\$2\" \\\n       \" = \\\\( *\\\\( *\\\\( *1311, *1311, *1311,\\[()1311, .\\]*\\\\)\" \"print \\$4\"\n }\n \n gdb_breakpoint [gdb_get_line_number \"vla2-filled\"]\n gdb_continue_to_breakpoint \"vla2-filled\"\n-gdb_test \"print vla2(1,43,20)\" \" = 1311\" \"print vla2(1,43,20)\"\n-gdb_test \"print vla1(1,3,8)\" \" = 1001\" \"print vla2(1,3,8)\"\n+gdb_test \"print vla2(1,43,20)\" \" = 1311\"\n+gdb_test \"print vla1(1,3,8)\" \" = 1001\"\n \n # Try to access history values for vla values.\n-gdb_test \"print \\$5\" \" = 1311\" \"print \\$5\"\n-gdb_test \"print \\$6\" \" = 1001\" \"print \\$6\"\n+gdb_test \"print \\$5\" \" = 1311\"\n+gdb_test \"print \\$6\" \" = 1001\""
    },
    {
      "sha": "918ed072b9e0783cbadb1895a122fd658129e155",
      "filename": "gdb/testsuite/gdb.fortran/vla-ptype.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.fortran/vla-ptype.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.fortran/vla-ptype.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/vla-ptype.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -55,8 +55,7 @@ gdb_breakpoint [gdb_get_line_number \"vla1-filled\"]\n gdb_continue_to_breakpoint \"vla1-filled\"\n gdb_test \"ptype vla1\" \"type = $real, allocatable \\\\\\(10,10,10\\\\\\)\" \\\n   \"ptype vla1 filled\"\n-gdb_test \"ptype vla1(3, 6, 9)\" \"type = $real\" \\\n-  \"ptype vla1(3, 6, 9)\"\n+gdb_test \"ptype vla1(3, 6, 9)\" \"type = $real\"\n \n gdb_breakpoint [gdb_get_line_number \"vla2-filled\"]\n gdb_continue_to_breakpoint \"vla2-filled\"\n@@ -69,8 +68,7 @@ gdb_breakpoint [gdb_get_line_number \"pvla-associated\"]\n gdb_continue_to_breakpoint \"pvla-associated\"\n gdb_test \"ptype pvla\" \"type = $real \\\\\\(10,10,10\\\\\\)\" \\\n   \"ptype pvla associated\"\n-gdb_test \"ptype pvla(3, 6, 9)\" \"type = $real\" \\\n-  \"ptype pvla(3, 6, 9)\"\n+gdb_test \"ptype pvla(3, 6, 9)\" \"type = $real\"\n \n gdb_breakpoint [gdb_get_line_number \"pvla-re-associated\"]\n gdb_continue_to_breakpoint \"pvla-re-associated\""
    },
    {
      "sha": "5b6ad5df72c82f55696d2cd853f8adc578faf880",
      "filename": "gdb/testsuite/gdb.fortran/vla-value.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.fortran/vla-value.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.fortran/vla-value.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/vla-value.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -148,12 +148,12 @@ gdb_test \"print \\$myvar\" \\\n   \"print \\$myvar set to vla1\"\n \n gdb_test \"next\" \"\\\\d+.*vla1\\\\(1, 3, 8\\\\) = 1001\" \"next (2)\"\n-gdb_test \"print \\$myvar(3,6,9)\" \" = 1311\" \"print \\$myvar(3,6,9)\"\n+gdb_test \"print \\$myvar(3,6,9)\" \" = 1311\"\n \n gdb_breakpoint [gdb_get_line_number \"pvla-associated\"]\n gdb_continue_to_breakpoint \"pvla-associated, second time\"\n gdb_test_no_output \"set \\$mypvar = pvla\" \"set \\$mypvar = pvla\"\n-gdb_test \"print \\$mypvar(1,3,8)\" \" = 1001\" \"print \\$mypvar(1,3,8)\"\n+gdb_test \"print \\$mypvar(1,3,8)\" \" = 1001\"\n \n # deallocate pointer and make sure user defined variable still has the\n # right value."
    },
    {
      "sha": "15306d7920f675ffe1dcc8a12f7a43cbdd45adf4",
      "filename": "gdb/testsuite/gdb.fortran/whatis_type.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.fortran/whatis_type.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.fortran/whatis_type.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/whatis_type.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -50,14 +50,12 @@ gdb_test \"ptype t1\" \\\n   [multi_line \"type = Type t1\" \\\n \t          \"    $t1_i\" \\\n \t          \"    $t1_r\" \\\n-\t          \"End Type t1\"] \\\n-  \"ptype t1\"\n+\t          \"End Type t1\"]\n gdb_test \"ptype t1v\" \\\n   [multi_line \"type = Type t1\" \\\n \t          \"    $t1_i\" \\\n \t          \"    $t1_r\" \\\n-\t          \"End Type t1\"] \\\n-  \"ptype t1v\"\n+\t          \"End Type t1\"]\n \n gdb_test \"ptype t2v\" \\\n   [multi_line \"type = Type t2\" \\"
    },
    {
      "sha": "0d37514de5a5d9ea823bb93ba97c901641a646cc",
      "filename": "gdb/testsuite/gdb.guile/guile.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.guile/guile.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.guile/guile.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.guile/guile.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -68,7 +68,7 @@ gdb_test_multiline \"show guile command\" \\\n \n gdb_test \"source $srcdir/$subdir/source2.scm\" \"yes\" \"source source2.scm\"\n \n-gdb_test \"source -s source2.scm\" \"yes\" \"source -s source2.scm\"\n+gdb_test \"source -s source2.scm\" \"yes\"\n \n gdb_test \"guile (print (current-objfile))\" \"= #f\"\n gdb_test \"guile (print (objfiles))\" \"= \\\\(\\\\)\""
    },
    {
      "sha": "e5113f1d0ebc3a4d9114b05244c8f60b1ad4ff9f",
      "filename": "gdb/testsuite/gdb.multi/tids.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 8,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.multi/tids.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.multi/tids.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.multi/tids.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -52,10 +52,12 @@ proc thread_apply {tid_list exp_tid_list {message \"\"}} {\n     }\n \n     set cmd \"thread apply $tid_list\"\n-    if {$message == \"\"} {\n-\tset message $cmd\n+    if {$message != \"\"} {\n+\tgdb_test \"$cmd p 1234\" $r $message\n+\treturn\n     }\n-    gdb_test \"$cmd p 1234\" $r $message\n+\n+    gdb_test \"$cmd p 1234\" $r\n }\n \n # Issue \"info threads TID_LIST\" and expect EXP_TID_LIST (a list of\n@@ -66,10 +68,11 @@ proc info_threads {tid_list exp_tid_list {message \"\"}} {\n     set r [join $expected \" ${any}\\r\\n${any} \"]\n     set r \"${any} $r ${any}\"\n     set cmd \"info threads $tid_list\"\n-    if {$message == \"\"} {\n-\tset message $cmd\n+    if {$message != \"\"} {\n+\tgdb_test $cmd $r $message\n+\treturn\n     }\n-    gdb_test $cmd $r $message\n+    gdb_test $cmd $r\n }\n \n # Issue \"info threads TID_LIST\" and expect INFO_THR output.  Then\n@@ -96,8 +99,7 @@ proc thr_apply_info_thr_error {tid_list exp_error_apply {exp_error_info \"\"}} {\n \t$exp_error_info\n \n     gdb_test \"thread apply $tid_list\" \\\n-\t$exp_error_apply \\\n-\t\"thread apply $tid_list\"\n+\t$exp_error_apply\n }\n \n # Issue both \"info threads TID_LIST\" and \"thread apply TID_LIST\" and"
    },
    {
      "sha": "fda32a2358911bb6c7e79532ad8a6544fbbc571e",
      "filename": "gdb/testsuite/gdb.python/py-finish-breakpoint.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.python/py-finish-breakpoint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.python/py-finish-breakpoint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-finish-breakpoint.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -255,5 +255,5 @@ if ![runto \"test_exec_exit\"] then {\n }     \n \n gdb_test \"python SimpleFinishBreakpoint(gdb.newest_frame())\" \"SimpleFinishBreakpoint init\" \"set FinishBP after the exec\"\n-gdb_test \"catch exec\" \"Catchpoint.*\\(exec\\).*\" \"catch exec\"\n+gdb_test \"catch exec\" \"Catchpoint.*\\(exec\\).*\"\n gdb_test \"continue\" \"SimpleFinishBreakpoint out of scope.*\" \"catch out of scope after exec\""
    },
    {
      "sha": "e04080621bdd2e8851ef5222756c25a9da95b811",
      "filename": "gdb/testsuite/gdb.python/py-framefilter.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.python/py-framefilter.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.python/py-framefilter.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-framefilter.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -85,8 +85,7 @@ gdb_continue_to_breakpoint \"Inner test breakpoint\"\n \n # Test multiple local blocks.\n gdb_test \"bt full no-filters\" \\\n-    \".*#0.*end_func.*h = 9.*f = 42.*g = 19.*bar = $hex \\\"Inside block x2\\\".*d = 15.*e = 14.*foo = $hex \\\"Inside block\\\".*str = $hex \\\"The End\\\".*st2 = $hex \\\"Is Near\\\".*b = 12.*c = 5.*\" \\\n-    \"bt full no-filters\"\n+    \".*#0.*end_func.*h = 9.*f = 42.*g = 19.*bar = $hex \\\"Inside block x2\\\".*d = 15.*e = 14.*foo = $hex \\\"Inside block\\\".*str = $hex \\\"The End\\\".*st2 = $hex \\\"Is Near\\\".*b = 12.*c = 5.*\"\n gdb_test \"bt full\" \\\n     \".*#0.*cnuf_dne.*h = 9.*f = 42.*g = 19.*bar = $hex \\\"Inside block x2\\\".*d = 15.*e = 14.*foo = $hex \\\"Inside block\\\".*str = $hex \\\"The End\\\".*st2 = $hex \\\"Is Near\\\".*b = 12.*c = 5.*\" \\\n     \"bt full with filters\"\n@@ -145,8 +144,7 @@ gdb_test \"disable frame-filter global NoSuchFilter\" \\\n \n # Test no-filters\n gdb_test \"bt no-filters\" \\\n-    \".*#0.*end_func.*#22.*in func1.*#27.*in main \\\\(\\\\).*\" \\\n-    \"bt no-filters\"\n+    \".*#0.*end_func.*#22.*in func1.*#27.*in main \\\\(\\\\).*\"\n \n # Test reverse\n gdb_test \"bt\" \\"
    },
    {
      "sha": "0eb7f8b2bf52c1ebd211a604f45d569bb1ba586f",
      "filename": "gdb/testsuite/gdb.python/py-pp-registration.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.python/py-pp-registration.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.python/py-pp-registration.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-pp-registration.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -58,10 +58,8 @@ proc prepare_test { } {\n proc test_printers { s_prefix } {\n     global hex\n \n-    gdb_test \"print flt\" \" = x=<42> y=<43>\" \\\n-\t\"print flt\"\n-    gdb_test \"print s\" \" = ${s_prefix} a=<1> b=<$hex>\" \\\n-\t\"print s\"\n+    gdb_test \"print flt\" \" = x=<42> y=<43>\"\n+    gdb_test \"print s\" \" = ${s_prefix} a=<1> b=<$hex>\"\n }\n \n # Test registration with verbose off."
    },
    {
      "sha": "0b4096747f029581a0d1921030c48ff0fb0cc075",
      "filename": "gdb/testsuite/gdb.python/py-xmethods.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.python/py-xmethods.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.python/py-xmethods.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-xmethods.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -159,8 +159,7 @@ gdb_test_no_output \"disable xmethod progspace E_methods;method_int\" \\\n gdb_test \"info xmethod progspace E_methods;method_int\" \".* \\\\\\[disabled\\\\\\]\" \\\n   \"info xmethod xmethods E_methods;method_int\"\n gdb_test_no_output \"disable xmethod progspace G_methods\" \"disable G_methods 2\"\n-gdb_test \"info xmethod progspace\" \".*G_methods \\\\\\[disabled\\\\\\].*\" \\\n-  \"info xmethod progspace\"\n+gdb_test \"info xmethod progspace\" \".*G_methods \\\\\\[disabled\\\\\\].*\"\n \n # PR 18285\n # First make sure both are enabled."
    },
    {
      "sha": "bbcec850e41a5a84fc0415b6a5b6b3d06b2ee7df",
      "filename": "gdb/testsuite/gdb.python/python.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.python/python.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.python/python.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/python.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -94,7 +94,7 @@ gdb_py_test_multiple \"indented multi-line python command\" \\\n \n gdb_test \"source $remote_source2_py\" \"yes\" \"source source2.py\"\n \n-gdb_test \"source -s source2.py\" \"yes\" \"source -s source2.py\"\n+gdb_test \"source -s source2.py\" \"yes\"\n \n set remote_source2_symlink_notpy \\\n     [gdb_remote_download host ${srcdir}/${subdir}/source2.py \\"
    },
    {
      "sha": "79a24a5fe4d312681ac7592449a6167b2581ccb9",
      "filename": "gdb/testsuite/gdb.server/connect-with-no-symbol-file.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.server/connect-with-no-symbol-file.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.server/connect-with-no-symbol-file.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/connect-with-no-symbol-file.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -50,7 +50,7 @@ proc connect_no_symbol_file { sysroot action } {\n \n \t# Make sure we're disconnected, in case we're testing with an\n \t# extended-remote board, therefore already connected.\n-\tgdb_test \"disconnect\" \".*\" \"disconnect\"\n+\tgdb_test \"disconnect\" \".*\"\n \n \t# Discard any symbol files that we have opened.\n \tgdb_test \"file\" \".*\" \"discard symbol table\" \\"
    },
    {
      "sha": "501cb2a79ca322366e09c92496d527b99d85901c",
      "filename": "gdb/testsuite/gdb.server/no-thread-db.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.server/no-thread-db.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.server/no-thread-db.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/no-thread-db.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -52,5 +52,4 @@ gdb_continue_to_breakpoint \"after tls assignment\"\n \n # Printing a tls variable should fail gracefully without a libthread_db.\n gdb_test \"print foo\" \\\n-    \"Cannot find thread-local storage for Thread \\[^,\\]+, executable file ${binfile}:\\[\\r\\n\\]+Remote target failed to process qGetTLSAddr request\" \\\n-    \"print foo\"\n+    \"Cannot find thread-local storage for Thread \\[^,\\]+, executable file ${binfile}:\\[\\r\\n\\]+Remote target failed to process qGetTLSAddr request\""
    },
    {
      "sha": "b4d5fda7a692708ad1df817a39cb0b5b92eb2442",
      "filename": "gdb/testsuite/gdb.server/run-without-local-binary.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.server/run-without-local-binary.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.server/run-without-local-binary.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/run-without-local-binary.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -39,7 +39,7 @@ save_vars { GDBFLAGS } {\n \n     # Make sure we're disconnected, in case we're testing with an\n     # extended-remote board, therefore already connected.\n-    gdb_test \"disconnect\" \".*\" \"disconnect\"\n+    gdb_test \"disconnect\" \".*\"\n \n     # Let's start gdbserver in extended-remote mode now.  We cannot\n     # use gdbserver_start_extended here because it starts gdbserver,"
    },
    {
      "sha": "56a26bb0e1b4f9bd4e97420dc3b294c463884aa2",
      "filename": "gdb/testsuite/gdb.stabs/weird.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.stabs/weird.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.stabs/weird.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.stabs/weird.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -137,7 +137,7 @@ proc do_tests {} {\n \tprint_weird_var attr126\n \n \tgdb_test \"p const69\" \" = 69\" \"'e' constant on non-enum type\"\n-\tgdb_test \"whatis const69\" \"type = (unsigned int|inttype)\" \"whatis const69\"\n+\tgdb_test \"whatis const69\" \"type = (unsigned int|inttype)\"\n \n \tgdb_test \"p sizeof (const70)\" \" = 2\" \"'e' constant with embedded type\"\n \n@@ -147,16 +147,16 @@ proc do_tests {} {\n \n         gdb_test \"p constString3\" \" = \\\"String3 with embedded quote ' in the middle\\\"\" \"string constant 3\"\n         gdb_test \"p constString4\" { = \"String4 with embedded quote \\\\\" in the middle\"} \"string constant 4\"\n-\tgdb_test \"p bad_neg0\" \" = \\{field0 = 42, field2 =.*field3 = 45\\}\" \"p bad_neg0\"\n+\tgdb_test \"p bad_neg0\" \" = \\{field0 = 42, field2 =.*field3 = 45\\}\"\n \n \tgdb_test \"ptype inttype\" \"type = (unsigned int|inttype)\" \"ptype on inttype\"\n \tgdb_test \"p sizeof (float72type)\" \" = 9\" \"unrecognized floating point type\"\n \n \t# This big number needs to be kept as one piece\n \tgdb_test \"p/x int256var\" \" = 0x0*2a0000002b0000002c0000002d0000002d0000002c0000002b0000002a\" \"print very big integer\"\n \n-\tgdb_test \"whatis consth\" \"type = inttype\" \"whatis consth\"\n-\tgdb_test \"whatis consth2\" \"type = inttype\" \"whatis consth2\"\n+\tgdb_test \"whatis consth\" \"type = inttype\"\n+\tgdb_test \"whatis consth2\" \"type = inttype\"\n \n \t# GDB does not yet understand S constants\n \tsetup_xfail \"*-*-*\""
    },
    {
      "sha": "06d8a295b7652444a26d59bda0fb90c48f809a17",
      "filename": "gdb/testsuite/gdb.threads/attach-many-short-lived-threads.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.threads/attach-many-short-lived-threads.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.threads/attach-many-short-lived-threads.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/attach-many-short-lived-threads.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -128,7 +128,7 @@ proc test {} {\n \t    # detaching from the program and reattaching, we check that\n \t    # the program doesn't die due to gdb leaving a pending\n \t    # breakpoint hit on a new thread unprocessed.\n-\t    gdb_test \"break break_fn\" \"Breakpoint.*\" \"break break_fn\"\n+\t    gdb_test \"break break_fn\" \"Breakpoint.*\"\n \n \t    # Wait a bit, to give time for most threads to hit the\n \t    # breakpoint, including threads we might have failed to"
    },
    {
      "sha": "97d7637d7a3dee4c533858d2f1816bf96e8230de",
      "filename": "gdb/testsuite/gdb.threads/thread-find.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.threads/thread-find.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.threads/thread-find.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/thread-find.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -276,9 +276,7 @@ gdb_test_multiple \"info threads 3-3\" \"info threads 3-3\" {\n # Test bad input\n \n gdb_test \"info thread foo\" \\\n-    \"Invalid thread ID: foo\" \\\n-    \"info thread foo\"\n+    \"Invalid thread ID: foo\"\n \n gdb_test \"info thread foo -1\" \\\n-    \"Invalid thread ID: foo -1\" \\\n-    \"info thread foo -1\"\n+    \"Invalid thread ID: foo -1\""
    },
    {
      "sha": "9d46a70df0b7a3d4806d75bf603a2a4795bcfbe3",
      "filename": "gdb/testsuite/gdb.threads/tls-shared.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.threads/tls-shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.threads/tls-shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/tls-shared.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -61,6 +61,4 @@ gdb_test \"continue\" \\\n         \"continue to break\"\n # This is more of a gcc/glibc test, really. \n #\n-gdb_test \"print result\" \"3\" \"print result\"\n-\n-\n+gdb_test \"print result\" \"3\""
    },
    {
      "sha": "eaa8391f9f600c08a53b8390869d1d954688ccfc",
      "filename": "gdb/testsuite/gdb.threads/tls.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.threads/tls.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.threads/tls.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/tls.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -290,10 +290,9 @@ gdb_expect {\n runto spin\n \n gdb_test \"info address a_global\" \\\n-\t\".*a_global.*static storage at address.*\" \"info address a_global\"\n+\t\".*a_global.*static storage at address.*\"\n \n-gdb_test \"info address me\" \".*me.*is a (complex DWARF expression:|variable).*\" \\\n-    \"info address me\"\n+gdb_test \"info address me\" \".*me.*is a (complex DWARF expression:|variable).*\"\n \n \n # Test LOC_UNRESOLVED references resolving for `extern' TLS variables."
    },
    {
      "sha": "35a351ce8f49d04d1a3509a4c9cf074bb0a24f8d",
      "filename": "gdb/testsuite/gdb.threads/wp-replication.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.threads/wp-replication.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.threads/wp-replication.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/wp-replication.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -114,8 +114,7 @@ for { set i 0 } { $i < $NR_THREADS } { incr i } {\n     # in the background for a specific thread.\n     if {$i < $hwatch_count} {\n       gdb_test \"watch watched_data\\[$i\\]\" \\\n-\t\"Hardware watchpoint .*\" \\\n-\t\"watch watched_data\\[$i\\]\"\n+\t\"Hardware watchpoint .*\"\n     } else {\n       verbose -log \"Not setting watchpoint for watched_data\\[$i\\]\\n\"\n     }"
    },
    {
      "sha": "f0ff1f1c91392fdb70f85ac4ccbc56456673beb8",
      "filename": "gdb/testsuite/gdb.trace/ax.exp",
      "status": "modified",
      "additions": 47,
      "deletions": 47,
      "changes": 94,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.trace/ax.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/gdb.trace/ax.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.trace/ax.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -40,99 +40,99 @@ gdb_load $binfile\n runto_main\n gdb_reinitialize_dir $srcdir/$subdir\n \n-gdb_test \"maint agent 12\" \".*const8 12.*pop.*end.*\" \"maint agent 12\"\n+gdb_test \"maint agent 12\" \".*const8 12.*pop.*end.*\"\n \n-gdb_test \"maint agent gdb_char_test\" \"\" \"maint agent gdb_char_test\"\n+gdb_test \"maint agent gdb_char_test\" \"\"\n \n-gdb_test \"maint agent gdb_arr_test\\[12\\]\" \"\" \"maint agent gdb_arr_test\\[12\\]\"\n+gdb_test \"maint agent gdb_arr_test\\[12\\]\" \"\"\n \n-gdb_test \"maint agent gdb_arr_test\\[gdb_short_test\\]\" \"\" \"maint agent gdb_arr_test\\[gdb_short_test\\]\"\n+gdb_test \"maint agent gdb_arr_test\\[gdb_short_test\\]\" \"\"\n \n-gdb_test \"maint agent gdb_struct1_test\" \"\" \"maint agent gdb_struct1_test\"\n+gdb_test \"maint agent gdb_struct1_test\" \"\"\n \n-gdb_test \"maint agent gdb_struct1_test.s\" \"\" \"maint agent gdb_struct1_test.s\"\n+gdb_test \"maint agent gdb_struct1_test.s\" \"\"\n \n-gdb_test \"maint agent gdb_struct1_test.arr\\[gdb_struct1_test.c\\]\" \"\" \"maint agent gdb_struct1_test.arr\\[gdb_struct1_test.c\\]\"\n+gdb_test \"maint agent gdb_struct1_test.arr\\[gdb_struct1_test.c\\]\" \"\"\n \n-gdb_test \"maint agent gdb_structp_test\" \"\" \"maint agent gdb_structp_test\"\n+gdb_test \"maint agent gdb_structp_test\" \"\"\n \n-gdb_test \"maint agent gdb_structp_test->l\" \"\" \"maint agent gdb_structp_test->l\"\n+gdb_test \"maint agent gdb_structp_test->l\" \"\"\n \n-gdb_test \"maint agent gdb_structp_test->bfield\" \"\" \"maint agent gdb_structp_test->bfield\"\n+gdb_test \"maint agent gdb_structp_test->bfield\" \"\"\n \n-gdb_test \"maint agent gdb_long_test + gdb_short_test\" \"\" \"maint agent gdb_long_test + gdb_short_test\"\n+gdb_test \"maint agent gdb_long_test + gdb_short_test\" \"\"\n \n-gdb_test \"maint agent gdb_long_test - gdb_short_test\" \"\" \"maint agent gdb_long_test - gdb_short_test\"\n+gdb_test \"maint agent gdb_long_test - gdb_short_test\" \"\"\n \n-gdb_test \"maint agent gdb_long_test * gdb_short_test\" \"\" \"maint agent gdb_long_test * gdb_short_test\"\n+gdb_test \"maint agent gdb_long_test * gdb_short_test\" \"\"\n \n-gdb_test \"maint agent gdb_long_test / gdb_short_test\" \"\" \"maint agent gdb_long_test / gdb_short_test\"\n+gdb_test \"maint agent gdb_long_test / gdb_short_test\" \"\"\n \n-gdb_test \"maint agent gdb_structp_test + 1\" \"\" \"maint agent gdb_structp_test + 1\"\n+gdb_test \"maint agent gdb_structp_test + 1\" \"\"\n \n-gdb_test \"maint agent gdb_long_test == gdb_short_test\" \"\" \"maint agent gdb_long_test == gdb_short_test\"\n+gdb_test \"maint agent gdb_long_test == gdb_short_test\" \"\"\n \n-gdb_test \"maint agent gdb_long_test != gdb_short_test\" \"\" \"maint agent gdb_long_test != gdb_short_test\"\n+gdb_test \"maint agent gdb_long_test != gdb_short_test\" \"\"\n \n-gdb_test \"maint agent gdb_long_test < gdb_short_test\" \"\" \"maint agent gdb_long_test < gdb_short_test\"\n+gdb_test \"maint agent gdb_long_test < gdb_short_test\" \"\"\n \n-gdb_test \"maint agent gdb_long_test <= gdb_short_test\" \"\" \"maint agent gdb_long_test <= gdb_short_test\"\n+gdb_test \"maint agent gdb_long_test <= gdb_short_test\" \"\"\n \n-gdb_test \"maint agent gdb_long_test > gdb_short_test\" \"\" \"maint agent gdb_long_test > gdb_short_test\"\n+gdb_test \"maint agent gdb_long_test > gdb_short_test\" \"\"\n \n-gdb_test \"maint agent gdb_long_test >= gdb_short_test\" \"\" \"maint agent gdb_long_test >= gdb_short_test\"\n+gdb_test \"maint agent gdb_long_test >= gdb_short_test\" \"\"\n \n-gdb_test \"maint agent &gdb_long_test == &gdb_short_test\" \"\" \"maint agent &gdb_long_test == &gdb_short_test\"\n+gdb_test \"maint agent &gdb_long_test == &gdb_short_test\" \"\"\n \n-gdb_test \"maint agent &gdb_long_test < &gdb_short_test\" \"\" \"maint agent &gdb_long_test < &gdb_short_test\"\n+gdb_test \"maint agent &gdb_long_test < &gdb_short_test\" \"\"\n \n-gdb_test \"maint agent (unsigned char)1L\" \".*ext 8.*\" \"maint agent (unsigned char)1L\"\n+gdb_test \"maint agent (unsigned char)1L\" \".*ext 8.*\"\n \n # Now test eval version of agent expressions.\n \n-gdb_test \"maint agent-eval 12\" \".*const8 12.*end.*\" \"maint agent-eval 12\"\n+gdb_test \"maint agent-eval 12\" \".*const8 12.*end.*\"\n \n-gdb_test \"maint agent-eval gdb_char_test\" \"\" \"maint agent-eval gdb_char_test\"\n+gdb_test \"maint agent-eval gdb_char_test\" \"\"\n \n-gdb_test \"maint agent-eval gdb_arr_test\\[12\\]\" \"\" \"maint agent-eval gdb_arr_test\\[12\\]\"\n+gdb_test \"maint agent-eval gdb_arr_test\\[12\\]\" \"\"\n \n-gdb_test \"maint agent-eval gdb_arr_test\\[gdb_short_test\\]\" \"\" \"maint agent-eval gdb_arr_test\\[gdb_short_test\\]\"\n+gdb_test \"maint agent-eval gdb_arr_test\\[gdb_short_test\\]\" \"\"\n \n-gdb_test \"maint agent-eval gdb_struct1_test\" \"\" \"maint agent-eval gdb_struct1_test\"\n+gdb_test \"maint agent-eval gdb_struct1_test\" \"\"\n \n-gdb_test \"maint agent-eval gdb_struct1_test.s\" \"\" \"maint agent-eval gdb_struct1_test.s\"\n+gdb_test \"maint agent-eval gdb_struct1_test.s\" \"\"\n \n-gdb_test \"maint agent-eval gdb_struct1_test.arr\\[gdb_struct1_test.c\\]\" \"\" \"maint agent-eval gdb_struct1_test.arr\\[gdb_struct1_test.c\\]\"\n+gdb_test \"maint agent-eval gdb_struct1_test.arr\\[gdb_struct1_test.c\\]\" \"\"\n \n-gdb_test \"maint agent-eval gdb_structp_test\" \"\" \"maint agent-eval gdb_structp_test\"\n+gdb_test \"maint agent-eval gdb_structp_test\" \"\"\n \n-gdb_test \"maint agent-eval gdb_structp_test->l\" \"\" \"maint agent-eval gdb_structp_test->l\"\n+gdb_test \"maint agent-eval gdb_structp_test->l\" \"\"\n \n-gdb_test \"maint agent-eval gdb_structp_test->bfield\" \"\" \"maint agent-eval gdb_structp_test->bfield\"\n+gdb_test \"maint agent-eval gdb_structp_test->bfield\" \"\"\n \n-gdb_test \"maint agent-eval gdb_long_test + gdb_short_test\" \"\" \"maint agent-eval gdb_long_test + gdb_short_test\"\n+gdb_test \"maint agent-eval gdb_long_test + gdb_short_test\" \"\"\n \n-gdb_test \"maint agent-eval gdb_long_test - gdb_short_test\" \"\" \"maint agent-eval gdb_long_test - gdb_short_test\"\n+gdb_test \"maint agent-eval gdb_long_test - gdb_short_test\" \"\"\n \n-gdb_test \"maint agent-eval gdb_long_test * gdb_short_test\" \"\" \"maint agent-eval gdb_long_test * gdb_short_test\"\n+gdb_test \"maint agent-eval gdb_long_test * gdb_short_test\" \"\"\n \n-gdb_test \"maint agent-eval gdb_long_test / gdb_short_test\" \"\" \"maint agent-eval gdb_long_test / gdb_short_test\"\n+gdb_test \"maint agent-eval gdb_long_test / gdb_short_test\" \"\"\n \n-gdb_test \"maint agent-eval gdb_structp_test + 1\" \"\" \"maint agent-eval gdb_structp_test + 1\"\n+gdb_test \"maint agent-eval gdb_structp_test + 1\" \"\"\n \n-gdb_test \"maint agent-eval gdb_long_test == gdb_short_test\" \"\" \"maint agent-eval gdb_long_test == gdb_short_test\"\n+gdb_test \"maint agent-eval gdb_long_test == gdb_short_test\" \"\"\n \n-gdb_test \"maint agent-eval gdb_long_test != gdb_short_test\" \"\" \"maint agent-eval gdb_long_test != gdb_short_test\"\n+gdb_test \"maint agent-eval gdb_long_test != gdb_short_test\" \"\"\n \n-gdb_test \"maint agent-eval gdb_long_test < gdb_short_test\" \"\" \"maint agent-eval gdb_long_test < gdb_short_test\"\n+gdb_test \"maint agent-eval gdb_long_test < gdb_short_test\" \"\"\n \n-gdb_test \"maint agent-eval gdb_long_test <= gdb_short_test\" \"\" \"maint agent-eval gdb_long_test <= gdb_short_test\"\n+gdb_test \"maint agent-eval gdb_long_test <= gdb_short_test\" \"\"\n \n-gdb_test \"maint agent-eval gdb_long_test > gdb_short_test\" \"\" \"maint agent-eval gdb_long_test > gdb_short_test\"\n+gdb_test \"maint agent-eval gdb_long_test > gdb_short_test\" \"\"\n \n-gdb_test \"maint agent-eval gdb_long_test >= gdb_short_test\" \"\" \"maint agent-eval gdb_long_test >= gdb_short_test\"\n+gdb_test \"maint agent-eval gdb_long_test >= gdb_short_test\" \"\"\n \n-gdb_test \"maint agent-eval &gdb_long_test == &gdb_short_test\" \".*equal.*end.*\" \"maint agent-eval &gdb_long_test == &gdb_short_test\"\n+gdb_test \"maint agent-eval &gdb_long_test == &gdb_short_test\" \".*equal.*end.*\"\n \n-gdb_test \"maint agent-eval &gdb_long_test < &gdb_short_test\" \"\" \"maint agent-eval &gdb_long_test < &gdb_short_test\"\n+gdb_test \"maint agent-eval &gdb_long_test < &gdb_short_test\" \"\"\n "
    },
    {
      "sha": "2d395efb5656cad7225a093962d93c55c0115ae7",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 9,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=d1e36019c1f5cc5de8b99dd86cacfbf418fc1c5b",
      "patch": "@@ -1401,11 +1401,10 @@ proc gdb_test_exact { args } {\n     regsub -all \"\\n\" $pattern \"\\r\\n\" pattern\n     if [llength $args]==3 then {\n \tset message [lindex $args 2]\n-    } else {\n-\tset message $command\n+\treturn [gdb_test $command $pattern $message]\n     }\n \n-    return [gdb_test $command $pattern $message]\n+    return [gdb_test $command $pattern]\n }\n \n # Wrapper around gdb_test_multiple that looks for a list of expected\n@@ -5783,13 +5782,13 @@ proc gdb_gnu_strip_debug { dest args } {\n # If third argument TESTNAME is not empty, it's used as the name of the\n # test to be printed on pass/fail.\n proc help_test_raw { gdb_command expected_lines {testname {}} } {\n-    if {$testname == {}} {\n-\tset message $gdb_command\n-    } else {\n-\tset message $testname\n-    }\n     set expected_output [join $expected_lines \"\"]\n-    gdb_test \"${gdb_command}\" \"${expected_output}\" $message\n+    if {$testname != {}} {\n+\tgdb_test \"${gdb_command}\" \"${expected_output}\" $testname\n+\treturn\n+    }\n+\n+    gdb_test \"${gdb_command}\" \"${expected_output}\"\n }\n \n # A regexp that matches the end of help CLASS|PREFIX_COMMAND"
    }
  ]
}