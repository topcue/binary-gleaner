{
  "sha": "37bb890f814d58dd4c5f67db32ea4618008229ee",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzdiYjg5MGY4MTRkNThkZDRjNWY2N2RiMzJlYTQ2MTgwMDgyMjllZQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-28T23:09:15Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-29T00:52:21Z"
    },
    "message": "ELF output symbol hooks int vs. bfd_boolean\n\nelf_backend_link_output_symbol_hook and elf_link_output_symstrtab may\nreturn 2 when a symbol is to be discarded.  Update places that use\nbfd_boolean rather than int for these functions.\n\n\t* elflink.c (elf_link_output_symstrtab): Make flinfo parameter\n\ta void pointer.\n\t(bfd_elf_final_link): Delete out_sym_func typedef and don't cast\n\telf_link_output_symstrtab when calling output_arch_syms and\n\toutput_arch_local_syms.\n\t* elf-bfd.h (struct elf_backend_data <elf_backend_output_arch_syms,\n\telf_backend_output_arch_local_syms>): Change return type of func\n\targ to match elf_link_output_symstrtab.\n\t* elf-vxworks.h (elf_vxworks_link_output_symbol_hook): Correct\n\treturn type.\n\t* elf32-nds32.c (nds32_elf_output_symbol_hook): Correct return type.\n\t(nds32_elf_output_arch_syms): Correct func return type.",
    "tree": {
      "sha": "96cac119eb97496b93bf83069ff0634dde3846b1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/96cac119eb97496b93bf83069ff0634dde3846b1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/37bb890f814d58dd4c5f67db32ea4618008229ee",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37bb890f814d58dd4c5f67db32ea4618008229ee",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/37bb890f814d58dd4c5f67db32ea4618008229ee",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37bb890f814d58dd4c5f67db32ea4618008229ee/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0f68420117f805ecb51aa623867201f9d95a5ab7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f68420117f805ecb51aa623867201f9d95a5ab7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0f68420117f805ecb51aa623867201f9d95a5ab7"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 29,
    "deletions": 23
  },
  "files": [
    {
      "sha": "5cdb6c87313f0fe2c6681a6b921c65783583dba8",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37bb890f814d58dd4c5f67db32ea4618008229ee/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37bb890f814d58dd4c5f67db32ea4618008229ee/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=37bb890f814d58dd4c5f67db32ea4618008229ee",
      "patch": "@@ -1,3 +1,18 @@\n+2021-03-29  Alan Modra  <amodra@gmail.com>\n+\n+\t* elflink.c (elf_link_output_symstrtab): Make flinfo parameter\n+\ta void pointer.\n+\t(bfd_elf_final_link): Delete out_sym_func typedef and don't cast\n+\telf_link_output_symstrtab when calling output_arch_syms and\n+\toutput_arch_local_syms.\n+\t* elf-bfd.h (struct elf_backend_data <elf_backend_output_arch_syms,\n+\telf_backend_output_arch_local_syms>): Change return type of func\n+\targ to match elf_link_output_symstrtab.\n+\t* elf-vxworks.h (elf_vxworks_link_output_symbol_hook): Correct\n+\treturn type.\n+\t* elf32-nds32.c (nds32_elf_output_symbol_hook): Correct return type.\n+\t(nds32_elf_output_arch_syms): Correct func return type.\n+\n 2021-03-29  Alan Modra  <amodra@gmail.com>\n \n \t* elf-m10200.c (mn10200_elf_relocate_section): Return int."
    },
    {
      "sha": "dec6925fd4d94d625c3c31dd63286bc45c0b1aa8",
      "filename": "bfd/elf-bfd.h",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37bb890f814d58dd4c5f67db32ea4618008229ee/bfd/elf-bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37bb890f814d58dd4c5f67db32ea4618008229ee/bfd/elf-bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-bfd.h?ref=37bb890f814d58dd4c5f67db32ea4618008229ee",
      "patch": "@@ -1259,16 +1259,16 @@ struct elf_backend_data\n      not handled in the hash table.  */\n   bfd_boolean (*elf_backend_output_arch_local_syms)\n     (bfd *, struct bfd_link_info *, void *,\n-     bfd_boolean (*) (void *, const char *, Elf_Internal_Sym *, asection *,\n-\t\t      struct elf_link_hash_entry *));\n+     int (*) (void *, const char *, Elf_Internal_Sym *, asection *,\n+\t      struct elf_link_hash_entry *));\n \n   /* This function, if defined, is called after all symbols are emitted\n      into the symtab section.  It allows the backend to emit special\n      global symbols not handled in the hash table.  */\n   bfd_boolean (*elf_backend_output_arch_syms)\n     (bfd *, struct bfd_link_info *, void *,\n-     bfd_boolean (*) (void *, const char *, Elf_Internal_Sym *, asection *,\n-\t\t      struct elf_link_hash_entry *));\n+     int (*) (void *, const char *, Elf_Internal_Sym *, asection *,\n+\t      struct elf_link_hash_entry *));\n \n   /* Filter what symbols of the output file to include in the import\n      library if one is created.  */"
    },
    {
      "sha": "d0207a7849908d37435c66b09ae6e1be27dfc397",
      "filename": "bfd/elf-vxworks.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37bb890f814d58dd4c5f67db32ea4618008229ee/bfd/elf-vxworks.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37bb890f814d58dd4c5f67db32ea4618008229ee/bfd/elf-vxworks.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-vxworks.h?ref=37bb890f814d58dd4c5f67db32ea4618008229ee",
      "patch": "@@ -22,7 +22,7 @@\n bfd_boolean elf_vxworks_add_symbol_hook\n   (bfd *, struct bfd_link_info *, Elf_Internal_Sym *, const char **,\n    flagword *, asection **, bfd_vma *);\n-bfd_boolean elf_vxworks_link_output_symbol_hook\n+int elf_vxworks_link_output_symbol_hook\n   (struct bfd_link_info *, const char *name, Elf_Internal_Sym *,\n    asection *, struct elf_link_hash_entry *);\n bfd_boolean elf_vxworks_emit_relocs"
    },
    {
      "sha": "f6a89a78834a962fb60c332053a42283f799deda",
      "filename": "bfd/elf32-nds32.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37bb890f814d58dd4c5f67db32ea4618008229ee/bfd/elf32-nds32.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37bb890f814d58dd4c5f67db32ea4618008229ee/bfd/elf32-nds32.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-nds32.c?ref=37bb890f814d58dd4c5f67db32ea4618008229ee",
      "patch": "@@ -4677,7 +4677,7 @@ nds32_elf_final_link_relocate (reloc_howto_type *howto, bfd *input_bfd,\n \t\t\t\t  contents + address);\n }\n \n-static bfd_boolean\n+static int\n nds32_elf_output_symbol_hook (struct bfd_link_info *info,\n \t\t\t      const char *name,\n \t\t\t      Elf_Internal_Sym *elfsym ATTRIBUTE_UNUSED,\n@@ -12461,10 +12461,10 @@ static bfd_boolean\n nds32_elf_output_arch_syms (bfd *output_bfd ATTRIBUTE_UNUSED,\n \t\t\t    struct bfd_link_info *info,\n \t\t\t    void *finfo ATTRIBUTE_UNUSED,\n-\t\t\t    bfd_boolean (*func) (void *, const char *,\n-\t\t\t\t\t\t Elf_Internal_Sym *,\n-\t\t\t\t\t\t asection *,\n-\t\t\t\t\t\t struct elf_link_hash_entry *)\n+\t\t\t    int (*func) (void *, const char *,\n+\t\t\t\t\t Elf_Internal_Sym *,\n+\t\t\t\t\t asection *,\n+\t\t\t\t\t struct elf_link_hash_entry *)\n \t\t\t    ATTRIBUTE_UNUSED)\n {\n   FILE *sym_ld_script = NULL;"
    },
    {
      "sha": "6be14e7c333751d6ebb7b9e266163b8582bf891e",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 4,
      "deletions": 13,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37bb890f814d58dd4c5f67db32ea4618008229ee/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37bb890f814d58dd4c5f67db32ea4618008229ee/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=37bb890f814d58dd4c5f67db32ea4618008229ee",
      "patch": "@@ -9767,12 +9767,13 @@ elf_link_sort_relocs (bfd *abfd, struct bfd_link_info *info, asection **psec)\n /* Add a symbol to the output symbol string table.  */\n \n static int\n-elf_link_output_symstrtab (struct elf_final_link_info *flinfo,\n+elf_link_output_symstrtab (void *finf,\n \t\t\t   const char *name,\n \t\t\t   Elf_Internal_Sym *elfsym,\n \t\t\t   asection *input_sec,\n \t\t\t   struct elf_link_hash_entry *h)\n {\n+  struct elf_final_link_info *flinfo = finf;\n   int (*output_symbol_hook)\n     (struct bfd_link_info *, const char *, Elf_Internal_Sym *, asection *,\n      struct elf_link_hash_entry *);\n@@ -12662,13 +12663,8 @@ bfd_elf_final_link (bfd *abfd, struct bfd_link_info *info)\n   if (bed->elf_backend_output_arch_local_syms\n       && (info->strip != strip_all || emit_relocs))\n     {\n-      typedef int (*out_sym_func)\n-\t(void *, const char *, Elf_Internal_Sym *, asection *,\n-\t struct elf_link_hash_entry *);\n-\n       if (! ((*bed->elf_backend_output_arch_local_syms)\n-\t     (abfd, info, &flinfo,\n-\t      (out_sym_func) elf_link_output_symstrtab)))\n+\t     (abfd, info, &flinfo, elf_link_output_symstrtab)))\n \t{\n \t  ret = FALSE;\n \t  goto return_local_hash_table;\n@@ -12796,13 +12792,8 @@ bfd_elf_final_link (bfd *abfd, struct bfd_link_info *info)\n   if (bed->elf_backend_output_arch_syms\n       && (info->strip != strip_all || emit_relocs))\n     {\n-      typedef int (*out_sym_func)\n-\t(void *, const char *, Elf_Internal_Sym *, asection *,\n-\t struct elf_link_hash_entry *);\n-\n       if (! ((*bed->elf_backend_output_arch_syms)\n-\t     (abfd, info, &flinfo,\n-\t      (out_sym_func) elf_link_output_symstrtab)))\n+\t     (abfd, info, &flinfo, elf_link_output_symstrtab)))\n \t{\n \t  ret = FALSE;\n \t  goto return_local_hash_table;"
    }
  ]
}