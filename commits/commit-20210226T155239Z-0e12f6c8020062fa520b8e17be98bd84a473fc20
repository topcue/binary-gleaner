{
  "sha": "0e12f6c8020062fa520b8e17be98bd84a473fc20",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGUxMmY2YzgwMjAwNjJmYTUyMGI4ZTE3YmU5OGJkODRhNDczZmMyMA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-02-26T15:52:39Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-02-26T15:52:39Z"
    },
    "message": "Add support for decoding DWARF v5 DW_AT_addr_base tags.\n\n\t* dwarf.c (display_debug_addr): Handle dwarf-5 .debug_addr bits.",
    "tree": {
      "sha": "c5f8ae2bb9b49ee0b571e066edd0543292fe390d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c5f8ae2bb9b49ee0b571e066edd0543292fe390d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0e12f6c8020062fa520b8e17be98bd84a473fc20",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e12f6c8020062fa520b8e17be98bd84a473fc20",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0e12f6c8020062fa520b8e17be98bd84a473fc20",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e12f6c8020062fa520b8e17be98bd84a473fc20/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f821878623bb86d38e6c1579799038f495d09b61",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f821878623bb86d38e6c1579799038f495d09b61",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f821878623bb86d38e6c1579799038f495d09b61"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 40,
    "deletions": 3
  },
  "files": [
    {
      "sha": "0a89ac2f914a29b5c9aa20d7f8b58b305304b5e0",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e12f6c8020062fa520b8e17be98bd84a473fc20/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e12f6c8020062fa520b8e17be98bd84a473fc20/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=0e12f6c8020062fa520b8e17be98bd84a473fc20",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-26  Tom de Vries  <tdevries@suse.de>\n+\n+\t* dwarf.c (display_debug_addr): Handle dwarf-5 .debug_addr bits.\n+\n 2021-02-26  Tom de Vries  <tdevries@suse.de>\n \n \tPR 27390"
    },
    {
      "sha": "555e5e04b94b60824078c9eccdecb331631b843c",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 36,
      "deletions": 3,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0e12f6c8020062fa520b8e17be98bd84a473fc20/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0e12f6c8020062fa520b8e17be98bd84a473fc20/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=0e12f6c8020062fa520b8e17be98bd84a473fc20",
      "patch": "@@ -6063,8 +6063,8 @@ display_debug_macro (struct dwarf_section *section,\n       SAFE_BYTE_GET_AND_INC (version, curr, 2, end);\n       if (version != 4 && version != 5)\n \t{\n-\t  error (_(\"Only GNU extension to DWARF 4 or 5 of %s is currently supported.\\n\"),\n-\t\t section->name);\n+\t  error (_(\"Expected to find a version number of 4 or 5 in section %s but found %d instead\\n\"),\n+\t\t section->name, version);\n \t  return 0;\n \t}\n \n@@ -7416,6 +7416,7 @@ display_debug_addr (struct dwarf_section *section,\n   unsigned char *end;\n   unsigned int i;\n   unsigned int count;\n+  unsigned char * header;\n \n   if (section->size == 0)\n     {\n@@ -7456,6 +7457,7 @@ display_debug_addr (struct dwarf_section *section,\n   debug_addr_info [count]->addr_base = section->size;\n   qsort (debug_addr_info, count, sizeof (debug_info *), comp_addr_base);\n \n+  header = section->start;\n   for (i = 0; i < count; i++)\n     {\n       unsigned int idx;\n@@ -7466,7 +7468,38 @@ display_debug_addr (struct dwarf_section *section,\n \n       printf (_(\"\\tIndex\\tAddress\\n\"));\n       entry = section->start + debug_addr_info [i]->addr_base;\n-      end = section->start + debug_addr_info [i + 1]->addr_base;\n+      if (debug_addr_info [i]->dwarf_version >= 5)\n+\t{\n+\t  size_t           header_size = entry - header;\n+\t  unsigned char *  curr_header = header;\n+\t  dwarf_vma        length;\n+\t  int              version;\n+\t  int              segment_selector_size;\n+\n+\t  if (header_size != 8 && header_size != 16)\n+\t    {\n+\t      warn (_(\"Corrupt %s section: expecting header size of 8 or 16, but found %ld instead\\n\"),\n+\t\t    section->name, (long) header_size);\n+\t      return 0;\n+\t    }\n+\n+\t  SAFE_BYTE_GET_AND_INC (length, curr_header, 4, entry);\n+\t  if (length == 0xffffffff)\n+\t    SAFE_BYTE_GET (length, curr_header, 8, entry);\n+\t  end = curr_header + length;\n+\n+\t  SAFE_BYTE_GET_AND_INC (version, curr_header, 2, entry);\n+\t  if (version != 5)\n+\t    warn (_(\"Corrupt %s section: expecting version number 5 in header but found %d instead\\n\"),\n+\t\t  section->name, version);\n+\n+\t  SAFE_BYTE_GET_AND_INC (address_size, curr_header, 1, entry);\n+\t  SAFE_BYTE_GET_AND_INC (segment_selector_size, curr_header, 1, entry);\n+\t  address_size += segment_selector_size;\n+\t}\n+      else\n+\tend = section->start + debug_addr_info [i + 1]->addr_base;\n+      header = end;\n       idx = 0;\n       while (entry < end)\n \t{"
    }
  ]
}