{
  "sha": "cae64165f47b64898c4f1982d294862cfae89a47",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2FlNjQxNjVmNDdiNjQ4OThjNGYxOTgyZDI5NDg2MmNmYWU4OWE0Nw==",
  "commit": {
    "author": {
      "name": "Roland McGrath",
      "email": "mcgrathr@google.com",
      "date": "2020-06-15T18:45:02Z"
    },
    "committer": {
      "name": "Roland McGrath",
      "email": "mcgrathr@google.com",
      "date": "2020-06-15T18:45:02Z"
    },
    "message": "gold, ld: Implement -z start-stop-visibility=... option.\n\ngold/\n\tImplement -z start-stop-visibility=... option.\n\t* options.h (class General_options): Handle -z start-stop-visibility=.\n\t(General_options::start_stop_visibility_enum): New public method.\n\t(General_options::set_start_stop_visibility_enum): New private method.\n\t(General_options::start_stop_visibility_enum_): New private member.\n\t* options.cc (General_options::General_options): Add initializer.\n\t(General_options::finalize): Set this->start_stop_visibility_enum_\n\tfrom string value.\n\t* layout.cc (Layout::define_section_symbols): Use option setting.\n\nbfd/\n\t* elflink.c (bfd_elf_define_start_stop): Use start_stop_visibility\n\tfield of bfd_link_info.\n\ninclude/\n\t* bfdlink.h (struct bfd_link_info): New field start_stop_visibility.\n\nld/\n\t* NEWS: Mention -z start-stop-visibility=... option for ELF.\n\t* ld.texi (Options): Document -z start-stop-visibility=... option.\n\t* ldmain.c (main): Initialize link_info.start_stop_visibility.\n\t* emultempl/elf.em (gld${EMULATION_NAME}_handle_option):\n\tParse -z start-stop-visibility=... option.",
    "tree": {
      "sha": "d51ade829ba19bebf17822647e08d49506d534b8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d51ade829ba19bebf17822647e08d49506d534b8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cae64165f47b64898c4f1982d294862cfae89a47",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cae64165f47b64898c4f1982d294862cfae89a47",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cae64165f47b64898c4f1982d294862cfae89a47",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cae64165f47b64898c4f1982d294862cfae89a47/comments",
  "author": {
    "login": "frobtech",
    "id": 972096,
    "node_id": "MDQ6VXNlcjk3MjA5Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/972096?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frobtech",
    "html_url": "https://github.com/frobtech",
    "followers_url": "https://api.github.com/users/frobtech/followers",
    "following_url": "https://api.github.com/users/frobtech/following{/other_user}",
    "gists_url": "https://api.github.com/users/frobtech/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frobtech/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frobtech/subscriptions",
    "organizations_url": "https://api.github.com/users/frobtech/orgs",
    "repos_url": "https://api.github.com/users/frobtech/repos",
    "events_url": "https://api.github.com/users/frobtech/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frobtech/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "frobtech",
    "id": 972096,
    "node_id": "MDQ6VXNlcjk3MjA5Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/972096?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frobtech",
    "html_url": "https://github.com/frobtech",
    "followers_url": "https://api.github.com/users/frobtech/followers",
    "following_url": "https://api.github.com/users/frobtech/following{/other_user}",
    "gists_url": "https://api.github.com/users/frobtech/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frobtech/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frobtech/subscriptions",
    "organizations_url": "https://api.github.com/users/frobtech/orgs",
    "repos_url": "https://api.github.com/users/frobtech/repos",
    "events_url": "https://api.github.com/users/frobtech/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frobtech/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "669203174311c5be76744a879563c697cd479853",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/669203174311c5be76744a879563c697cd479853",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/669203174311c5be76744a879563c697cd479853"
    }
  ],
  "stats": {
    "total": 110,
    "additions": 103,
    "deletions": 7
  },
  "files": [
    {
      "sha": "741e96962b1df7a94f33404da53375920b76d1b8",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-15  Roland McGrath  <mcgrathr@google.com>\n+\n+\t* elflink.c (bfd_elf_define_start_stop): Use start_stop_visibility\n+\tfield of bfd_link_info.\n+\n 2020-06-15  Alan Modra  <amodra@gmail.com>\n \n \t* config.bfd: Obsolete powerpcle-*-pe targets.\n@@ -346,7 +351,7 @@\n \t(aout_link_add_symbols): e517df3dbf7 PR 19629 - Check for out of\n \trange string table offsets.\n \t531336e3a0b PR 20909 - Fix off-by-one error in check for an\n-\tillegal string offset. \n+\tillegal string offset.\n \t(aout_link_includes_newfunc): Add comment.\n \t(pdp11_aout_link_input_section): ad756e3f9e6 - Return with an error\n \ton unexpected relocation type rather than ASSERT."
    },
    {
      "sha": "14d8d159da7404748efafb8be9041878effb2bcd",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -14837,7 +14837,8 @@ bfd_elf_define_start_stop (struct bfd_link_info *info,\n       else\n \t{\n \t  if (ELF_ST_VISIBILITY (h->other) == STV_DEFAULT)\n-\t    h->other = (h->other & ~ELF_ST_VISIBILITY (-1)) | STV_PROTECTED;\n+\t    h->other = ((h->other & ~ELF_ST_VISIBILITY (-1))\n+\t\t\t| info->start_stop_visibility);\n \t  if (was_dynamic)\n \t    bfd_elf_link_record_dynamic_symbol (info, h);\n \t}"
    },
    {
      "sha": "1f9c52334b3e02f651833d2e1cecc477b534e83c",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -1,3 +1,15 @@\n+2020-06-15  Roland McGrath  <mcgrathr@google.com>\n+\n+\tImplement -z start-stop-visibility=... option.\n+\t* options.h (class General_options): Handle -z start-stop-visibility=.\n+\t(General_options::start_stop_visibility_enum): New public method.\n+\t(General_options::set_start_stop_visibility_enum): New private method.\n+\t(General_options::start_stop_visibility_enum_): New private member.\n+\t* options.cc (General_options::General_options): Add initializer.\n+\t(General_options::finalize): Set this->start_stop_visibility_enum_\n+\tfrom string value.\n+\t* layout.cc (Layout::define_section_symbols): Use option setting.\n+\n 2020-06-06  Alan Modra  <amodra@gmail.com>\n \n \t* powerpc.cc: Update throughout for reloc renaming."
    },
    {
      "sha": "b3b0c5701d3c92e6debae0d35e504dabffbea804",
      "filename": "gold/layout.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/gold/layout.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/gold/layout.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/layout.cc?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -2474,6 +2474,7 @@ Layout::create_initial_dynamic_sections(Symbol_table* symtab)\n void\n Layout::define_section_symbols(Symbol_table* symtab)\n {\n+  const elfcpp::STV visibility = parameters->options().start_stop_visibility_enum();\n   for (Section_list::const_iterator p = this->section_list_.begin();\n        p != this->section_list_.end();\n        ++p)\n@@ -2495,7 +2496,7 @@ Layout::define_section_symbols(Symbol_table* symtab)\n \t\t\t\t\t0, // symsize\n \t\t\t\t\telfcpp::STT_NOTYPE,\n \t\t\t\t\telfcpp::STB_GLOBAL,\n-\t\t\t\t\telfcpp::STV_PROTECTED,\n+\t\t\t\t\tvisibility,\n \t\t\t\t\t0, // nonvis\n \t\t\t\t\tfalse, // offset_is_from_end\n \t\t\t\t\ttrue); // only_if_ref\n@@ -2508,7 +2509,7 @@ Layout::define_section_symbols(Symbol_table* symtab)\n \t\t\t\t\t0, // symsize\n \t\t\t\t\telfcpp::STT_NOTYPE,\n \t\t\t\t\telfcpp::STB_GLOBAL,\n-\t\t\t\t\telfcpp::STV_PROTECTED,\n+\t\t\t\t\tvisibility,\n \t\t\t\t\t0, // nonvis\n \t\t\t\t\ttrue, // offset_is_from_end\n \t\t\t\t\ttrue); // only_if_ref"
    },
    {
      "sha": "b13ae71ce14b9ebfbf240a3007d76c936ddf0b28",
      "filename": "gold/options.cc",
      "status": "modified",
      "additions": 15,
      "deletions": 1,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/gold/options.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/gold/options.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/options.cc?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -997,7 +997,8 @@ General_options::General_options()\n     fix_v4bx_(FIX_V4BX_NONE),\n     endianness_(ENDIANNESS_NOT_SET),\n     discard_locals_(DISCARD_SEC_MERGE),\n-    orphan_handling_enum_(ORPHAN_PLACE)\n+    orphan_handling_enum_(ORPHAN_PLACE),\n+    start_stop_visibility_enum_(elfcpp::STV_PROTECTED)\n {\n   // Turn off option registration once construction is complete.\n   gold::options::ready_to_register = false;\n@@ -1169,6 +1170,19 @@ General_options::finalize()\n         this->set_orphan_handling_enum(ORPHAN_ERROR);\n     }\n \n+  // Parse the -z start-stop-visibility argument.\n+  if (this->user_set_start_stop_visibility())\n+    {\n+      if (strcmp(this->start_stop_visibility(), \"default\") == 0)\n+        this->set_start_stop_visibility_enum(elfcpp::STV_DEFAULT);\n+      else if (strcmp(this->start_stop_visibility(), \"internal\") == 0)\n+        this->set_start_stop_visibility_enum(elfcpp::STV_INTERNAL);\n+      else if (strcmp(this->start_stop_visibility(), \"hidden\") == 0)\n+        this->set_start_stop_visibility_enum(elfcpp::STV_HIDDEN);\n+      else if (strcmp(this->start_stop_visibility(), \"protected\") == 0)\n+        this->set_start_stop_visibility_enum(elfcpp::STV_PROTECTED);\n+    }\n+\n   // -M is equivalent to \"-Map -\".\n   if (this->print_map() && !this->user_set_Map())\n     {"
    },
    {
      "sha": "f0e9fbddcd5f77d6a78a405dcc5ecdbe4f786f17",
      "filename": "gold/options.h",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/gold/options.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/gold/options.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/options.h?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -1500,6 +1500,11 @@ class General_options\n \t      N_(\"Don't mark variables read-only after relocation\"));\n   DEFINE_uint64(stack_size, options::DASH_Z, '\\0', 0,\n \t\tN_(\"Set PT_GNU_STACK segment p_memsz to SIZE\"), N_(\"SIZE\"));\n+  DEFINE_enum(start_stop_visibility, options::DASH_Z, '\\0', \"protected\",\n+              N_(\"ELF symbol visibility for synthesized \"\n+                 \"__start_* and __stop_* symbols\"),\n+              (\"[default,internal,hidden,protected]\"),\n+              {\"default\", \"internal\", \"hidden\", \"protected\"});\n   DEFINE_bool(text, options::DASH_Z, '\\0', false,\n \t      N_(\"Do not permit relocations in read-only segments\"),\n \t      N_(\"Permit relocations in read-only segments\"));\n@@ -1750,6 +1755,10 @@ class General_options\n   orphan_handling_enum() const\n   { return this->orphan_handling_enum_; }\n \n+  elfcpp::STV\n+  start_stop_visibility_enum() const\n+  { return this->start_stop_visibility_enum_; }\n+\n  private:\n   // Don't copy this structure.\n   General_options(const General_options&);\n@@ -1809,6 +1818,10 @@ class General_options\n   set_orphan_handling_enum(Orphan_handling value)\n   { this->orphan_handling_enum_ = value; }\n \n+  void\n+  set_start_stop_visibility_enum(elfcpp::STV value)\n+  { this->start_stop_visibility_enum_ = value; }\n+\n   // These are called by finalize() to set up the search-path correctly.\n   void\n   add_to_library_path_with_sysroot(const std::string& arg)\n@@ -1876,6 +1889,8 @@ class General_options\n   std::vector<Position_dependent_options*> options_stack_;\n   // Orphan handling option, decoded to an enum value.\n   Orphan_handling orphan_handling_enum_;\n+  // Symbol visibility for __start_* / __stop_* magic symbols.\n+  elfcpp::STV start_stop_visibility_enum_;\n };\n \n // The position-dependent options.  We use this to store the state of"
    },
    {
      "sha": "f30e5e2a24a0c17192c33aacae26dc3d5bb89acc",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -1,3 +1,7 @@\n+2020-06-12  Roland McGrath  <mcgrathr@google.com>\n+\n+\t* bfdlink.h (struct bfd_link_info): New field start_stop_visibility.\n+\n 2020-06-12  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* opcode/riscv-opc.h: Update the defined versions of CSR from"
    },
    {
      "sha": "716343338302708f0331289fe526fe9aef67a32c",
      "filename": "include/bfdlink.h",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/include/bfdlink.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/include/bfdlink.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/bfdlink.h?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -542,10 +542,10 @@ struct bfd_link_info\n      Normally these optimizations are disabled by default but some targets\n      prefer to enable them by default.  So this field is a tri-state variable.\n      The values are:\n-     \n+\n      zero: Enable the optimizations (either from --relax being specified on\n        the command line or the backend's before_allocation emulation function.\n-       \n+\n      positive: The user has requested that these optimizations be disabled.\n        (Via the --no-relax command line option).\n \n@@ -649,6 +649,9 @@ struct bfd_link_info\n   /* May be used to set DT_FLAGS_1 for ELF. */\n   bfd_vma flags_1;\n \n+  /* May be used to set ELF visibility for __start_* / __stop_.  */\n+  unsigned int start_stop_visibility;\n+\n   /* Start and end of RELRO region.  */\n   bfd_vma relro_start, relro_end;\n "
    },
    {
      "sha": "6700e727d83299ba18bd4b09e616995ed22c68ac",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -1,3 +1,11 @@\n+2020-06-15  Roland McGrath  <mcgrathr@google.com>\n+\n+\t* NEWS: Mention -z start-stop-visibility=... option for ELF.\n+\t* ld.texi (Options): Document -z start-stop-visibility=... option.\n+\t* ldmain.c (main): Initialize link_info.start_stop_visibility.\n+\t* emultempl/elf.em (gld${EMULATION_NAME}_handle_option):\n+\tParse -z start-stop-visibility=... option.\n+\n 2020-06-15  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-scripts/include.exp: Don't load ld-lib.exp."
    },
    {
      "sha": "6955937429ba76a09a43be8fe202863d4518f07e",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -25,6 +25,9 @@\n   searched relative to the directory of the linker script before other search\n   paths.\n \n+* Add ELF linker command-line option `-z start-stop-visibility=...' to control\n+  the visibility of synthetic `__start_SECNAME` and `__stop_SECNAME` symbols.\n+\n Changes in 2.34:\n \n * The ld check for \"PHDR segment not covered by LOAD segment\" is more"
    },
    {
      "sha": "c577e8b2e61b8c128fc309636cc9b443141a354b",
      "filename": "ld/emultempl/elf.em",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/ld/emultempl/elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/ld/emultempl/elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/elf.em?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -749,6 +749,21 @@ fragment <<EOF\n \t{\n \t  link_info.flags_1 |= DF_1_GLOBAUDIT;\n \t}\n+      else if (CONST_STRNEQ (optarg, \"start-stop-visibility=\"))\n+\t{\n+\t  if (strcmp (optarg, \"start-stop-visibility=default\") == 0)\n+\t    link_info.start_stop_visibility = STV_DEFAULT;\n+\t  else if (strcmp (optarg, \"start-stop-visibility=internal\") == 0)\n+\t    link_info.start_stop_visibility = STV_INTERNAL;\n+\t  else if (strcmp (optarg, \"start-stop-visibility=hidden\") == 0)\n+\t    link_info.start_stop_visibility = STV_HIDDEN;\n+\t  else if (strcmp (optarg, \"start-stop-visibility=protected\") == 0)\n+\t    link_info.start_stop_visibility = STV_PROTECTED;\n+\t  else\n+\t    einfo (_(\"%F%P: invalid visibility in \\`-z %s'; \"\n+\t\t     \"must be default, internal, hidden, or protected\"),\n+\t\t   optarg);\n+\t}\n EOF\n \n if test x\"$GENERATE_SHLIB_SCRIPT\" = xyes; then"
    },
    {
      "sha": "b89c1a57c0b4e6476a003cec46e278bc8c29a2d5",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -1373,6 +1373,19 @@ Specify a stack size for an ELF @code{PT_GNU_STACK} segment.\n Specifying zero will override any default non-zero sized\n @code{PT_GNU_STACK} segment creation.\n \n+@item start-stop-visibility=@var{value}\n+@cindex visibility\n+@cindex ELF symbol visibility\n+Specify the ELF symbol visibility for synthesized\n+@code{__start_SECNAME} and @code{__stop_SECNAME} symbols (@pxref{Input\n+Section Example}).  @var{value} must be exactly @samp{default},\n+@samp{internal}, @samp{hidden}, or @samp{protected}.  If no @samp{-z\n+start-stop-visibility} option is given, @samp{protected} is used for\n+compatibility with historical practice.  However, it's highly\n+recommended to use @samp{-z start-stop-visibility=hidden} in new\n+programs and shared libraries so that these symbols are not exported\n+between shared objects, which is not usually what's intended.\n+\n @item text\n @itemx notext\n @itemx textoff"
    },
    {
      "sha": "b0ce69f11860b89c501fe1dc36f0e5e9b16281cb",
      "filename": "ld/ldmain.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae64165f47b64898c4f1982d294862cfae89a47/ld/ldmain.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae64165f47b64898c4f1982d294862cfae89a47/ld/ldmain.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldmain.c?ref=cae64165f47b64898c4f1982d294862cfae89a47",
      "patch": "@@ -27,6 +27,7 @@\n #include \"bfdlink.h\"\n #include \"ctf-api.h\"\n #include \"filenames.h\"\n+#include \"elf/common.h\"\n \n #include \"ld.h\"\n #include \"ldmain.h\"\n@@ -307,6 +308,7 @@ main (int argc, char **argv)\n #ifdef DEFAULT_NEW_DTAGS\n   link_info.new_dtags = DEFAULT_NEW_DTAGS;\n #endif\n+  link_info.start_stop_visibility = STV_PROTECTED;\n \n   ldfile_add_arch (\"\");\n   emulation = get_emulation (argc, argv);"
    }
  ]
}