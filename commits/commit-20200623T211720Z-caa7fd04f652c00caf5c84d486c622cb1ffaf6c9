{
  "sha": "caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2FhN2ZkMDRmNjUyYzAwY2FmNWM4NGQ0ODZjNjIyY2IxZmZhZjZjOQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-09T22:08:54Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-23T21:17:20Z"
    },
    "message": "gdb: New maintenance command to print XML target description\n\nThis commit adds a new maintenance command that dumps the current\ntarget description as an XML document.  This is a maintenance command\nas I currently only see this being useful for GDB developers, or for\npeople debugging a new remote target.\n\nBy default the command will print whatever the current target\ndescription is, whether this was delivered by the remote, loaded by\nthe user from a file, or if it is a built in target within GDB.\n\nThe command can also take an optional filename argument.  In this case\nGDB loads a target description from the file, and then reprints it.\nThis could be useful for testing GDB's parsing of target descriptions,\nor to check that GDB can successfully parse a particular XML\ndescription.\n\nIt is worth noting that the XML description printed will not be an\nexact copy of the document fed into GDB.  For example this minimal\ninput file:\n\n  <target>\n    <feature name=\"abc\">\n      <reg name=\"r1\" bitsize=\"32\"/>\n    </feature>\n  </target>\n\nWill produce this output:\n\n  (gdb) maint print xml-tdesc path/to/file.xml\n  <?xml version=\"1.0\"?>\n  <!DOCTYPE target SYSTEM \"gdb-target.dtd\">\n  <target>\n    <feature name=\"abc\">\n      <reg name=\"r1\" bitsize=\"32\" type=\"int\" regnum=\"0\"/>\n    </feature>\n  </target>\n\nNotice that GDB filled in both the 'type' and 'regnum' fields of the\n<reg>.  I think this is actually a positive as it means we get to\nreally understand how GDB processed the document, if GDB made some\nassumptions that differ to those the user expected then hopefully this\nwill bring those issues to the users attention.\n\nTo implement this I have tweaked the output produced by the\nprint_xml_feature which is defined within the gdbsupport/ directory.\nThe changes I have made to this class are:\n\n  1. The <architecture>...</architecture> tags are now not produced if\n  the architecture name is NULL.\n\n  2. The <osabi>...</osabi> tags get a newline at the end.\n\n  3. And, the whole XML document is indented using white space in a\n  nested fashion (as in the example output above).\n\nI think that these changes should be fine, the print_xml_feature class\nis used:\n\n  1. In gdbserver to generate an XML document to send as the target\n  description to GDB.\n\n  2. In GDB as part of a self-check function, a target_desc is\n  converted to XML then parsed back into a target_desc.  We then check\n  the before and after target_desc objects are the same.\n\n  3. In the new 'maint print xml-tdesc' command.\n\nIn all of these use cases adding the extra white space should be fine.\n\ngdbsupport/ChangeLog:\n\n\t* tdesc.cc (print_xml_feature::visit_pre): Use add_line to add\n\toutput content, and call indent as needed in all overloaded\n\tvariants.\n\t(print_xml_feature::visit_post): Likewise.\n\t(print_xml_feature::visit): Likewise.\n\t(print_xml_feature::add_line): Two new overloaded functions.\n\t* tdesc.h (print_xml_feature::indent): New member function.\n\t(print_xml_feature::add_line): Two new overloaded member\n\tfunctions.\n\t(print_xml_feature::m_depth): New member variable.\n\ngdb/ChangeLog:\n\n\t* target-descriptions.c (tdesc_architecture_name): Protect against\n\tNULL pointer dereference.\n\t(maint_print_xml_tdesc_cmd): New function.\n\t(_initialize_target_descriptions): Register new 'maint print\n\txml-tdesc' command and give it the filename completer.\n\t* NEWS: Mention new 'maint print xml-tdesc' command.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.xml/tdesc-reload.c: New file.\n\t* gdb.xml/tdesc-reload.exp: New file.\n\t* gdb.xml/maint-xml-dump-01.xml: New file.\n\t* gdb.xml/maint-xml-dump-02.xml: New file.\n\t* gdb.xml/maint-xml-dump.exp: New file.\n\ngdb/doc/ChangeLog:\n\n\t* gdb.texinfo (Maintenance Commands): Document new 'maint print\n\txml-desc' command.",
    "tree": {
      "sha": "b8aa24886889a95510d4b0cb5c7caf041ea36453",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b8aa24886889a95510d4b0cb5c7caf041ea36453"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fbf42f4e6d04745fe615dce1abd0190b78e368a6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fbf42f4e6d04745fe615dce1abd0190b78e368a6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fbf42f4e6d04745fe615dce1abd0190b78e368a6"
    }
  ],
  "stats": {
    "total": 482,
    "additions": 448,
    "deletions": 34
  },
  "files": [
    {
      "sha": "57bd32397d72ad27868bbf83413d48e6bd35575d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -1,3 +1,12 @@\n+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* target-descriptions.c (tdesc_architecture_name): Protect against\n+\tNULL pointer dereference.\n+\t(maint_print_xml_tdesc_cmd): New function.\n+\t(_initialize_target_descriptions): Register new 'maint print\n+\txml-tdesc' command and give it the filename completer.\n+\t* NEWS: Mention new 'maint print xml-tdesc' command.\n+\n 2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* target-descriptions.c (class tdesc_compatible_info): New class."
    },
    {
      "sha": "a116d62bca369b04e8cf5c3f1f6f0737122d40db",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -79,6 +79,12 @@ tui new-layout NAME WINDOW WEIGHT [WINDOW WEIGHT]...\n   Define a new TUI layout, specifying its name and the windows that\n   will be displayed.\n \n+maintenance print xml-tdesc [FILE]\n+  Prints the current target description as an XML document.  If the\n+  optional FILE is provided (which is an XML target description) then\n+  the target description is read from FILE into GDB, and then\n+  reprinted.\n+\n * Changed commands\n \n alias [-a] [--] ALIAS = COMMAND [DEFAULT-ARGS...]"
    },
    {
      "sha": "4b1a4c01f9f1599db3629714ef2f082574d44a38",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.texinfo (Maintenance Commands): Document new 'maint print\n+\txml-desc' command.\n+\n 2020-06-22  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* gdb.texinfo (Command aliases default args): New node documenting"
    },
    {
      "sha": "7f8c77a77f22ea6cce6f4eadae0eeb15edd0128f",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -38501,6 +38501,15 @@ The created source file is built into @value{GDBN} when @value{GDBN} is\n built again.  This command is used by developers after they add or\n modify XML target descriptions.\n \n+@kindex maint print xml-tdesc\n+@item maint print xml-tdesc  @r{[}@var{file}@r{]}\n+Print the target description (@pxref{Target Descriptions}) as an XML\n+file.  By default print the target description for the current target,\n+but if the optional argument @var{file} is provided, then that file is\n+read in by GDB and then used to produce the description.  The\n+@var{file} should be an XML document, of the form described in\n+@ref{Target Description Format}.\n+\n @kindex maint check xml-descriptions\n @item maint check xml-descriptions @var{dir}\n Check that the target descriptions dynamically created by @value{GDBN}"
    },
    {
      "sha": "1abdf51ec72b14c463509bd319407dcbb1fc2631",
      "filename": "gdb/target-descriptions.c",
      "status": "modified",
      "additions": 38,
      "deletions": 1,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/target-descriptions.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/target-descriptions.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-descriptions.c?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -662,7 +662,9 @@ tdesc_architecture (const struct target_desc *target_desc)\n const char *\n tdesc_architecture_name (const struct target_desc *target_desc)\n {\n-  return target_desc->arch->printable_name;\n+  if (target_desc->arch != NULL)\n+    return target_desc->arch->printable_name;\n+  return NULL;\n }\n \n /* See gdbsupport/tdesc.h.  */\n@@ -1755,6 +1757,36 @@ maint_print_c_tdesc_cmd (const char *args, int from_tty)\n     }\n }\n \n+/* Implement the maintenance print xml-tdesc command.  */\n+\n+static void\n+maint_print_xml_tdesc_cmd (const char *args, int from_tty)\n+{\n+  const struct target_desc *tdesc;\n+\n+  if (args == NULL)\n+    {\n+      /* Use the global target-supplied description, not the current\n+\t architecture's.  This lets a GDB for one architecture generate XML\n+\t for another architecture's description, even though the gdbarch\n+\t initialization code will reject the new description.  */\n+      tdesc = current_target_desc;\n+    }\n+  else\n+    {\n+      /* Use the target description from the XML file.  */\n+      tdesc = file_read_description_xml (args);\n+    }\n+\n+  if (tdesc == NULL)\n+    error (_(\"There is no target description to print.\"));\n+\n+  std::string buf;\n+  print_xml_feature v (&buf);\n+  tdesc->accept (v);\n+  puts_unfiltered (buf.c_str ());\n+}\n+\n namespace selftests {\n \n /* A reference target description, used for testing (see record_xml_tdesc).  */\n@@ -1892,6 +1924,11 @@ Print the current target description as a C source file.\"),\n \t   &maintenanceprintlist);\n   set_cmd_completer (cmd, filename_completer);\n \n+  cmd = add_cmd (\"xml-tdesc\", class_maintenance, maint_print_xml_tdesc_cmd, _(\"\\\n+Print the current target description as an XML file.\"),\n+\t\t &maintenanceprintlist);\n+  set_cmd_completer (cmd, filename_completer);\n+\n   cmd = add_cmd (\"xml-descriptions\", class_maintenance,\n \t\t maintenance_check_xml_descriptions, _(\"\\\n Check equality of GDB target descriptions and XML created descriptions.\\n\\"
    },
    {
      "sha": "26284dabb2507b8dbfd4860c95de74e51ef078ae",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -1,3 +1,11 @@\n+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.xml/tdesc-reload.c: New file.\n+\t* gdb.xml/tdesc-reload.exp: New file.\n+\t* gdb.xml/maint-xml-dump-01.xml: New file.\n+\t* gdb.xml/maint-xml-dump-02.xml: New file.\n+\t* gdb.xml/maint-xml-dump.exp: New file.\n+\n 2020-06-23  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* lib/completion-support.exp (test_gdb_completion_offers_commands):"
    },
    {
      "sha": "dd4f925167657815438e6d9b7c0a457219a8011a",
      "filename": "gdb/testsuite/gdb.xml/maint-xml-dump-01.xml",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/testsuite/gdb.xml/maint-xml-dump-01.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/testsuite/gdb.xml/maint-xml-dump-01.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.xml/maint-xml-dump-01.xml?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -0,0 +1,10 @@\n+<?xml version=\"1.0\"?>\n+<!-- This is a comment before DOCTYPE -->\n+<!DOCTYPE target SYSTEM \"gdb-target.dtd\">\n+<!-- This is a comment after DOCTYPE -->\n+<target>\n+  <feature name=\"abc\">\n+    <!-- The following is a register. -->\n+    <reg name=\"r1\" bitsize=\"32\"/>\t<!-- <reg name=\"r1\" bitsize=\"32\" type=\"int\" regnum=\"0\"/> -->\n+  </feature>\n+</target>"
    },
    {
      "sha": "c192294ca10daee560e509d43312ff21ae229317",
      "filename": "gdb/testsuite/gdb.xml/maint-xml-dump-02.xml",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/testsuite/gdb.xml/maint-xml-dump-02.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/testsuite/gdb.xml/maint-xml-dump-02.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.xml/maint-xml-dump-02.xml?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -0,0 +1,27 @@\n+<target>\n+  <osabi>Solaris</osabi>\n+  <feature name=\"abc\">\n+    <vector id=\"foo\" type=\"int32\" count=\"4\"/>\n+    <reg name=\"foo\" bitsize=\"16\" />\t<!-- <reg name=\"foo\" bitsize=\"16\" type=\"int\" regnum=\"0\"/> -->\n+  </feature>\n+  <feature name=\"def.xyz\">\n+    <struct id=\"my_struct\">\n+      <field name=\"field1\" type=\"int8\"/>\n+      <field name=\"field2\" type=\"int16\"/>\n+      <field name=\"field3\" type=\"int8\"/>\n+    </struct>\n+    <struct id=\"bit_field\" size=\"8\">\n+      <field name=\"bits1\" start=\"0\" end=\"3\" type=\"int8\"/>\n+      <field name=\"bits2\" start=\"4\" end=\"6\" type=\"int8\"/>\n+      <field name=\"bits3\" start=\"7\" end=\"7\"/>\t<!-- <field name=\"bits3\" start=\"7\" end=\"7\" type=\"bool\"/> -->\n+    </struct>\n+    <flags id=\"my_flags\" size=\"8\">\n+      <field name=\"flg1\" start=\"0\" end=\"0\"/>\t<!-- <field name=\"flg1\" start=\"0\" end=\"0\" type=\"bool\"/> -->\n+      <field name=\"flg2\" start=\"1\" end=\"1\"/>\t<!-- <field name=\"flg2\" start=\"1\" end=\"1\" type=\"bool\"/> -->\n+      <field name=\"flg3\" start=\"2\" end=\"6\"/>\t<!-- <field name=\"flg3\" start=\"2\" end=\"6\" type=\"uint64\"/> -->\n+      <field name=\"flg4\" start=\"7\" end=\"7\"/>\t<!-- <field name=\"flg4\" start=\"7\" end=\"7\" type=\"bool\"/> -->\n+    </flags>\n+    <reg name=\"r1\" bitsize=\"8\" type=\"my_flags\"/>\t<!-- <reg name=\"r1\" bitsize=\"8\" type=\"my_flags\" regnum=\"1\"/> -->\n+    <reg name=\"r2\" bitsize=\"8\" type=\"bit_field\"/>\t<!-- <reg name=\"r2\" bitsize=\"8\" type=\"bit_field\" regnum=\"2\"/> -->\n+  </feature>\n+</target>"
    },
    {
      "sha": "8ccfbb5e68788f8da811719fb996663fb9afe3c5",
      "filename": "gdb/testsuite/gdb.xml/maint-xml-dump.exp",
      "status": "added",
      "additions": 124,
      "deletions": 0,
      "changes": 124,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/testsuite/gdb.xml/maint-xml-dump.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/testsuite/gdb.xml/maint-xml-dump.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.xml/maint-xml-dump.exp?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -0,0 +1,124 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test the 'maint print xml-tdesc' command.  This file picks up every\n+# XML file matching the pattern maint-xml-dump-*.xml (in the same\n+# directory as this script) and passes each in turn to the command\n+# 'maint print xml-tdesc'.\n+#\n+# The expected output is generated by parsing the input XML file.  The\n+# rules for changing an XML file into the expected output are:\n+#\n+# 1. Blank lines, and lines starting with a comment are stripped from\n+#    the expected output.\n+#\n+# 2. The <?xml ... ?> and <!DOCTYPE ...> entities are optional,\n+#    suitable defaults will be added if these lines are missing from\n+#    the input file.\n+#\n+# 3. A trailing comment on a line will replace the expected output for\n+#    that line but with the indentation of the line preserved.  So\n+#    this (The '|' marks the start of the line):\n+#    |    <reg name=\"r1\" bitsize=\"32\"/>  <!-- <reg name=\"r1\" bitsize=\"32\" type=\"int\" regnum=\"0\"/> -->\n+#    Will actually look for the following output:\n+#    |    <reg name=\"r1\" bitsize=\"32\" type=\"int\" regnum=\"0\"/>\n+#\n+# 4. Indentation of lines will be preserved so your input file needs\n+#    to follow the expected indentation.\n+if {[gdb_skip_xml_test]} {\n+    unsupported \"xml tests not being run\"\n+    return -1\n+}\n+\n+gdb_start\n+\n+# Read the XML file FILENAME and produce an output pattern that should\n+# match what GDB produces with the 'maint print xml-desc' command.\n+proc build_pattern { filename } {\n+    set pattern {}\n+\n+    set xml_version_line {<?xml version=\"1.0\"?>}\n+    set doc_type_line {<!DOCTYPE target SYSTEM \"gdb-target.dtd\">}\n+\n+    set linenum 0\n+    set ifd [open \"$filename\" r]\n+    while {[gets $ifd line] >= 0} {\n+\tincr linenum\n+\n+\t# The <?xml .... ?> tag can only appear as the first line in\n+\t# the file.  If it is not present then add one to the expected\n+\t# output now.\n+\tif {$linenum == 1} {\n+\t    if {![regexp {^<\\?xml} $line]} {\n+\t\tset pattern [string_to_regexp $xml_version_line]\n+\t\tset xml_version_line \"\"\n+\t    }\n+\t}\n+\n+\t# If we have not yet seen a DOCTYPE line, then maybe we should\n+\t# be adding one?  If we find <target> then add a default\n+\t# DOCTYPE line, otherwise, if the XML file includes a DOCTYPE\n+\t# line, use that.\n+\tif {$doc_type_line != \"\" } {\n+\t    if {[regexp {^[ \\t]*<target>} $line]} {\n+\t\tset pattern [multi_line $pattern \\\n+\t\t\t\t [string_to_regexp $doc_type_line]]\n+\t\tset doc_type_line \"\"\n+\t    } elseif {[regexp {^[ \\t]*<!DOCTYPE } $line]} {\n+\t\tset doc_type_line \"\"\n+\t    }\n+\t}\n+\n+\tif {[regexp {^[ \\t]*<!--} $line]} {\n+\t    # Comment line, ignore it.\n+\t} elseif {[regexp {^[ \\t]+$} $line]} {\n+\t    # Blank line, ignore it.\n+\t} elseif {[regexp {^([ \\t]*).*<!-- (.*) -->$} $line \\\n+\t\t       matches grp1 grp2]} {\n+\t    set pattern [multi_line \\\n+\t\t\t     $pattern \\\n+\t\t\t     [string_to_regexp \"$grp1$grp2\"]]\n+\t} else {\n+\t    set pattern [multi_line \\\n+\t\t\t     $pattern \\\n+\t\t\t     [string_to_regexp $line]]\n+\t}\n+    }\n+    close $ifd\n+\n+    # Due to handling the <?xml ...?> tags we can end up with a stray\n+    # '\\r\\n' at the start of the output pattern.  Remove it here.\n+    if {[string range $pattern 0 1] == \"\\r\\n\"} {\n+\tset pattern [string range $pattern 2 end]\n+    }\n+\n+    return $pattern\n+}\n+\n+# Run over every test XML file and check the output.\n+foreach filename [lsort [glob $srcdir/$subdir/maint-xml-dump-*.xml]] {\n+    set pattern [build_pattern $filename]\n+\n+    if {[is_remote host]} {\n+\tset test_path [remote_download host $filename]\n+    } else {\n+\tset test_path $filename\n+    }\n+\n+    verbose -log \"Looking for:\\n$pattern\"\n+\n+    gdb_test \"maint print xml-tdesc $test_path\" \\\n+\t\"$pattern\" \"check [file tail $filename]\"\n+}"
    },
    {
      "sha": "f4825c8a7c1186e3fc77e381a89369df031109f1",
      "filename": "gdb/testsuite/gdb.xml/tdesc-reload.c",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/testsuite/gdb.xml/tdesc-reload.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/testsuite/gdb.xml/tdesc-reload.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.xml/tdesc-reload.c?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -0,0 +1,22 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int\n+main ()\n+{\n+  return 0;\n+}"
    },
    {
      "sha": "a671297f821f008431f6357b9f1730228da3d5c8",
      "filename": "gdb/testsuite/gdb.xml/tdesc-reload.exp",
      "status": "added",
      "additions": 83,
      "deletions": 0,
      "changes": 83,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/testsuite/gdb.xml/tdesc-reload.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdb/testsuite/gdb.xml/tdesc-reload.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.xml/tdesc-reload.exp?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -0,0 +1,83 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Testing for 'maint print xml-tdesc'.  Check we can print out the\n+# current target description and load it back in again.\n+\n+if {[gdb_skip_xml_test]} {\n+    unsupported \"xml tests not being run\"\n+    return -1\n+}\n+\n+standard_testfile\n+\n+if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile debug]} {\n+    return -1\n+}\n+\n+if ![runto_main] then {\n+    fail \"can't run to main\"\n+    return 0\n+}\n+\n+# Three files we're going to write out to.\n+set xml_file_1 [standard_output_file outfile1.xml]\n+set xml_file_2 [standard_output_file outfile2.xml]\n+set xml_file_3 [standard_output_file outfile3.xml]\n+\n+# Write the current target description to a file.\n+gdb_test_no_output \"pipe maint print xml-tdesc | cat > $xml_file_1\" \\\n+    \"write current target description to file\"\n+\n+# Read the target description back in to GDB, and the write it back\n+# out to a file.\n+gdb_test_no_output \\\n+    \"pipe maint print xml-tdesc $xml_file_1 | cat > $xml_file_2\" \\\n+    \"read previous xml description, and write it out to a second file\"\n+\n+# Check the two produced files are identical.\n+gdb_test \"shell diff -s $xml_file_1 $xml_file_2\" \\\n+    \"Files \\[^\\r\\n\\]* are identical\" \\\n+    \"first two produced xml files are identical\"\n+\n+# Restart GDB.\n+clean_restart\n+\n+# Change to use one of the target descriptions we wrote out earlier.\n+gdb_test_no_output \"set tdesc filename $xml_file_1\" \\\n+    \"set target description to use\"\n+\n+# Load the executable.\n+gdb_load ${binfile}\n+\n+# Run to `main' where we begin our tests.\n+if ![runto_main] then {\n+    untested \"could not run to main\"\n+    return -1\n+}\n+\n+# Run info registers just to check this appears to run fine with the\n+# new target description.\n+gdb_test \"info all-registers\" \".*\" \\\n+    \"Run info registers\"\n+\n+# Write out the current target description.\n+gdb_test_no_output \"pipe maint print xml-tdesc | cat > $xml_file_3\" \\\n+    \"write third target description to file\"\n+\n+# And check that it matches the original file we loaded.\n+gdb_test \"shell diff -s $xml_file_1 $xml_file_3\" \\\n+    \"Files \\[^\\r\\n\\]* are identical\" \\\n+    \"first and third produced xml files are identical\""
    },
    {
      "sha": "b2fbc56b1b9509ee0ef2cb253484f19a665f5b92",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -1,3 +1,16 @@\n+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* tdesc.cc (print_xml_feature::visit_pre): Use add_line to add\n+\toutput content, and call indent as needed in all overloaded\n+\tvariants.\n+\t(print_xml_feature::visit_post): Likewise.\n+\t(print_xml_feature::visit): Likewise.\n+\t(print_xml_feature::add_line): Two new overloaded functions.\n+\t* tdesc.h (print_xml_feature::indent): New member function.\n+\t(print_xml_feature::add_line): Two new overloaded member\n+\tfunctions.\n+\t(print_xml_feature::m_depth): New member variable.\n+\n 2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* tdesc.cc (print_xml_feature::visit_pre): Print compatible"
    },
    {
      "sha": "624588b6563b53e22e4920536ec693dff9948293",
      "filename": "gdbsupport/tdesc.cc",
      "status": "modified",
      "additions": 72,
      "deletions": 32,
      "changes": 104,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdbsupport/tdesc.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdbsupport/tdesc.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/tdesc.cc?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -294,12 +294,14 @@ tdesc_add_enum_value (tdesc_type_with_fields *type, int value,\n \n void print_xml_feature::visit_pre (const tdesc_feature *e)\n {\n-  string_appendf (*m_buffer, \"<feature name=\\\"%s\\\">\\n\", e->name.c_str ());\n+  add_line (\"<feature name=\\\"%s\\\">\", e->name.c_str ());\n+  indent (1);\n }\n \n void print_xml_feature::visit_post (const tdesc_feature *e)\n {\n-  string_appendf (*m_buffer, \"</feature>\\n\");\n+  indent (-1);\n+  add_line (\"</feature>\");\n }\n \n void print_xml_feature::visit (const tdesc_type_builtin *t)\n@@ -309,8 +311,8 @@ void print_xml_feature::visit (const tdesc_type_builtin *t)\n \n void print_xml_feature::visit (const tdesc_type_vector *t)\n {\n-  string_appendf (*m_buffer, \"<vector id=\\\"%s\\\" type=\\\"%s\\\" count=\\\"%d\\\"/>\\n\",\n-\t\t  t->name.c_str (), t->element_type->name.c_str (), t->count);\n+  add_line (\"<vector id=\\\"%s\\\" type=\\\"%s\\\" count=\\\"%d\\\"/>\",\n+\t    t->name.c_str (), t->element_type->name.c_str (), t->count);\n }\n \n void print_xml_feature::visit (const tdesc_type_with_fields *t)\n@@ -319,7 +321,9 @@ void print_xml_feature::visit (const tdesc_type_with_fields *t)\n \n   gdb_assert (t->kind >= TDESC_TYPE_STRUCT && t->kind <= TDESC_TYPE_ENUM);\n \n-  string_appendf (*m_buffer,\n+  std::string tmp;\n+\n+  string_appendf (tmp,\n \t\t  \"<%s id=\\\"%s\\\"\", types[t->kind - TDESC_TYPE_STRUCT],\n \t\t  t->name.c_str ());\n \n@@ -328,80 +332,116 @@ void print_xml_feature::visit (const tdesc_type_with_fields *t)\n     case TDESC_TYPE_STRUCT:\n     case TDESC_TYPE_FLAGS:\n       if (t->size > 0)\n-\tstring_appendf (*m_buffer, \" size=\\\"%d\\\"\", t->size);\n-      string_appendf (*m_buffer, \">\\n\");\n+\tstring_appendf (tmp, \" size=\\\"%d\\\"\", t->size);\n+      string_appendf (tmp, \">\");\n+      add_line (tmp);\n \n       for (const tdesc_type_field &f : t->fields)\n \t{\n-\t  string_appendf (*m_buffer, \"  <field name=\\\"%s\\\" \", f.name.c_str ());\n-\t  if (f.start == -1)\n-\t    string_appendf (*m_buffer, \"type=\\\"%s\\\"/>\\n\",\n-\t\t\t    f.type->name.c_str ());\n-\t  else\n-\t    string_appendf (*m_buffer, \"start=\\\"%d\\\" end=\\\"%d\\\"/>\\n\", f.start,\n+\t  tmp.clear ();\n+\t  string_appendf (tmp, \"  <field name=\\\"%s\\\"\", f.name.c_str ());\n+\t  if (f.start != -1)\n+\t    string_appendf (tmp, \" start=\\\"%d\\\" end=\\\"%d\\\"\", f.start,\n \t\t\t    f.end);\n+\t  string_appendf (tmp, \" type=\\\"%s\\\"/>\",\n+\t\t\t  f.type->name.c_str ());\n+\t  add_line (tmp);\n \t}\n       break;\n \n     case TDESC_TYPE_ENUM:\n-      string_appendf (*m_buffer, \">\\n\");\n+      string_appendf (tmp, \">\");\n+      add_line (tmp);\n       for (const tdesc_type_field &f : t->fields)\n-\tstring_appendf (*m_buffer, \"  <field name=\\\"%s\\\" start=\\\"%d\\\"/>\\n\",\n-\t\t\tf.name.c_str (), f.start);\n+\tadd_line (\"  <field name=\\\"%s\\\" start=\\\"%d\\\"/>\",\n+\t\t  f.name.c_str (), f.start);\n       break;\n \n     case TDESC_TYPE_UNION:\n-      string_appendf (*m_buffer, \">\\n\");\n+      string_appendf (tmp, \">\");\n+      add_line (tmp);\n       for (const tdesc_type_field &f : t->fields)\n-\tstring_appendf (*m_buffer, \"  <field name=\\\"%s\\\" type=\\\"%s\\\"/>\\n\",\n-\t\t\tf.name.c_str (), f.type->name.c_str ());\n+\tadd_line (\"  <field name=\\\"%s\\\" type=\\\"%s\\\"/>\",\n+\t\t  f.name.c_str (), f.type->name.c_str ());\n       break;\n \n     default:\n       error (_(\"xml output is not supported for type \\\"%s\\\".\"),\n \t     t->name.c_str ());\n     }\n \n-  string_appendf (*m_buffer, \"</%s>\\n\", types[t->kind - TDESC_TYPE_STRUCT]);\n+  add_line (\"</%s>\", types[t->kind - TDESC_TYPE_STRUCT]);\n }\n \n void print_xml_feature::visit (const tdesc_reg *r)\n {\n-  string_appendf (*m_buffer,\n+  std::string tmp;\n+\n+  string_appendf (tmp,\n \t\t  \"<reg name=\\\"%s\\\" bitsize=\\\"%d\\\" type=\\\"%s\\\" regnum=\\\"%ld\\\"\",\n \t\t  r->name.c_str (), r->bitsize, r->type.c_str (),\n \t\t  r->target_regnum);\n \n   if (r->group.length () > 0)\n-    string_appendf (*m_buffer, \" group=\\\"%s\\\"\", r->group.c_str ());\n+    string_appendf (tmp, \" group=\\\"%s\\\"\", r->group.c_str ());\n \n   if (r->save_restore == 0)\n-    string_appendf (*m_buffer, \" save-restore=\\\"no\\\"\");\n+    string_appendf (tmp, \" save-restore=\\\"no\\\"\");\n \n-  string_appendf (*m_buffer, \"/>\\n\");\n+  string_appendf (tmp, \"/>\");\n+\n+  add_line (tmp);\n }\n \n void print_xml_feature::visit_pre (const target_desc *e)\n {\n #ifndef IN_PROCESS_AGENT\n-  string_appendf (*m_buffer, \"<?xml version=\\\"1.0\\\"?>\\n\");\n-  string_appendf (*m_buffer, \"<!DOCTYPE target SYSTEM \\\"gdb-target.dtd\\\">\\n\");\n-  string_appendf (*m_buffer, \"<target>\\n<architecture>%s</architecture>\\n\",\n-\t\t  tdesc_architecture_name (e));\n+  add_line (\"<?xml version=\\\"1.0\\\"?>\");\n+  add_line (\"<!DOCTYPE target SYSTEM \\\"gdb-target.dtd\\\">\");\n+  add_line (\"<target>\");\n+  indent (1);\n+  if (tdesc_architecture_name (e))\n+    add_line (\"<architecture>%s</architecture>\",\n+\t      tdesc_architecture_name (e));\n \n   const char *osabi = tdesc_osabi_name (e);\n   if (osabi != nullptr)\n-    string_appendf (*m_buffer, \"<osabi>%s</osabi>\", osabi);\n+    add_line (\"<osabi>%s</osabi>\", osabi);\n \n   const std::vector<tdesc_compatible_info_up> &compatible_list\n     = tdesc_compatible_info_list (e);\n   for (const auto &c : compatible_list)\n-    string_appendf (*m_buffer, \"<compatible>%s</compatible>\\n\",\n-\t\t    tdesc_compatible_info_arch_name (c));\n+    add_line (\"<compatible>%s</compatible>\",\n+\t      tdesc_compatible_info_arch_name (c));\n #endif\n }\n \n void print_xml_feature::visit_post (const target_desc *e)\n {\n-  string_appendf (*m_buffer, \"</target>\\n\");\n+  indent (-1);\n+  add_line (\"</target>\");\n+}\n+\n+/* See gdbsupport/tdesc.h.  */\n+\n+void\n+print_xml_feature::add_line (const std::string &str)\n+{\n+  string_appendf (*m_buffer, \"%*s\", m_depth, \"\");\n+  string_appendf (*m_buffer, \"%s\", str.c_str ());\n+  string_appendf (*m_buffer, \"\\n\");\n+}\n+\n+/* See gdbsupport/tdesc.h.  */\n+\n+void\n+print_xml_feature::add_line (const char *fmt, ...)\n+{\n+  std::string tmp;\n+\n+  va_list ap;\n+  va_start (ap, fmt);\n+  string_vappendf (tmp, fmt, ap);\n+  va_end (ap);\n+  add_line (tmp);\n }"
    },
    {
      "sha": "73caf24536f38043d374832f727171d87d559768",
      "filename": "gdbsupport/tdesc.h",
      "status": "modified",
      "additions": 22,
      "deletions": 1,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdbsupport/tdesc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa7fd04f652c00caf5c84d486c622cb1ffaf6c9/gdbsupport/tdesc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/tdesc.h?ref=caa7fd04f652c00caf5c84d486c622cb1ffaf6c9",
      "patch": "@@ -410,7 +410,8 @@ class print_xml_feature : public tdesc_element_visitor\n {\n public:\n   print_xml_feature (std::string *buffer_)\n-    : m_buffer (buffer_)\n+    : m_buffer (buffer_),\n+      m_depth (0)\n   {}\n \n   void visit_pre (const target_desc *e) override;\n@@ -423,7 +424,27 @@ class print_xml_feature : public tdesc_element_visitor\n   void visit (const tdesc_reg *reg) override;\n \n private:\n+\n+  /* Called with a positive value of ADJUST when we move inside an element,\n+     for example inside <target>, and with a negative value when we leave\n+     the element.  In this class this function does nothing, but a\n+     sub-class can override this to track the current level of nesting.  */\n+  void indent (int adjust)\n+  {\n+    m_depth += (adjust * 2);\n+  }\n+\n+  /* Functions to add lines to the output buffer M_BUFFER.  Each of these\n+     functions appends a newline, so don't include one in the strings being\n+     passed.  */\n+  void add_line (const std::string &str);\n+  void add_line (const char *fmt, ...);\n+\n+  /* The buffer we are writing too.  */\n   std::string *m_buffer;\n+\n+  /* The current indentation depth.  */\n+  int m_depth;\n };\n \n #endif /* COMMON_TDESC_H */"
    }
  ]
}