{
  "sha": "c2137f55ad04e451d834048d4bfec1de2daea20e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzIxMzdmNTVhZDA0ZTQ1MWQ4MzQwNDhkNGJmZWMxZGUyZGFlYTIwZQ==",
  "commit": {
    "author": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2020-12-09T05:53:22Z"
    },
    "committer": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2020-12-10T02:50:44Z"
    },
    "message": "RISC-V: Add sext.[bh] and zext.[bhw] pseudo instructions.\n\nhttps://github.com/riscv/riscv-asm-manual/pull/61\n\nWe aleady have sext.w, so just add sext.b, sext.h, zext.b, zext.h\nand zext.w.  In a certain sense, zext.b is not a pseudo - It is an\nalias of andi.  Similarly, sext.b and sext.h are aliases of other\nrvb instructions, when we enable b extension; But they are pseudos\nwhen we just enable rvi.  However, this patch does not consider the\nrvb cases.  Besides, zext.w is only valid in rv64.\n\ngas/\n    * config/tc-riscv.c (riscv_ext): New function.  Use md_assemblef\n    to expand the zext and sext pseudos, to give them a chance to be\n    expanded into c-ext instructions.\n    (macro): Handle M_ZEXTH, M_ZEXTW, M_SEXTB and M_SEXTH.\n    * testsuite/gas/riscv/ext.s: New testcase.\n    * testsuite/gas/riscv/ext-32.d: Likewise.\n    * testsuite/gas/riscv/ext-64.d: Likewise.\ninclude/\n    * opcode/riscv.h (M_ZEXTH, M_ZEXTW, M_SEXTB, M_SEXTH.): Added.\nopcodes/\n    * riscv-opc.c (riscv_opcodes): Add sext.[bh] and zext.[bhw].",
    "tree": {
      "sha": "71848a36ae6d0a7e129af78179952d016007340a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/71848a36ae6d0a7e129af78179952d016007340a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c2137f55ad04e451d834048d4bfec1de2daea20e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2137f55ad04e451d834048d4bfec1de2daea20e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c2137f55ad04e451d834048d4bfec1de2daea20e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2137f55ad04e451d834048d4bfec1de2daea20e/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "8152e0407c25612c6a8079cc8e1a5c1fe14afdbf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8152e0407c25612c6a8079cc8e1a5c1fe14afdbf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8152e0407c25612c6a8079cc8e1a5c1fe14afdbf"
    }
  ],
  "stats": {
    "total": 188,
    "additions": 188,
    "deletions": 0
  },
  "files": [
    {
      "sha": "6672da456cb1128ddd58af78567e09d9b73dbac7",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2137f55ad04e451d834048d4bfec1de2daea20e/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2137f55ad04e451d834048d4bfec1de2daea20e/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=c2137f55ad04e451d834048d4bfec1de2daea20e",
      "patch": "@@ -1,3 +1,13 @@\n+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* config/tc-riscv.c (riscv_ext): New function.  Use md_assemblef\n+\tto expand the zext and sext pseudos, to give them a chance to be\n+\texpanded into c-ext instructions.\n+\t(macro): Handle M_ZEXTH, M_ZEXTW, M_SEXTB and M_SEXTH.\n+\t* testsuite/gas/riscv/ext.s: New testcase.\n+\t* testsuite/gas/riscv/ext-32.d: Likewise.\n+\t* testsuite/gas/riscv/ext-64.d: Likewise.\n+\n 2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* config/tc-riscv.c (riscv_multi_subset_supports): Handle INSN_CLASS_ZICSR"
    },
    {
      "sha": "ca7e52a16915a405b9eb55fc887105fd4d976913",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2137f55ad04e451d834048d4bfec1de2daea20e/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2137f55ad04e451d834048d4bfec1de2daea20e/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=c2137f55ad04e451d834048d4bfec1de2daea20e",
      "patch": "@@ -1433,6 +1433,23 @@ load_const (int reg, expressionS *ep)\n     }\n }\n \n+/* Zero extend and sign extend byte/half-word/word.  */\n+\n+static void\n+riscv_ext (int destreg, int srcreg, unsigned shift, bfd_boolean sign)\n+{\n+  if (sign)\n+    {\n+      md_assemblef (\"slli x%d, x%d, 0x%x\", destreg, srcreg, shift);\n+      md_assemblef (\"srai x%d, x%d, 0x%x\", destreg, destreg, shift);\n+    }\n+  else\n+    {\n+      md_assemblef (\"slli x%d, x%d, 0x%x\", destreg, srcreg, shift);\n+      md_assemblef (\"srli x%d, x%d, 0x%x\", destreg, destreg, shift);\n+    }\n+}\n+\n /* Expand RISC-V assembly macros into one or more instructions.  */\n static void\n macro (struct riscv_cl_insn *ip, expressionS *imm_expr,\n@@ -1554,6 +1571,22 @@ macro (struct riscv_cl_insn *ip, expressionS *imm_expr,\n       riscv_call (rd, rs1, imm_expr, *imm_reloc);\n       break;\n \n+    case M_ZEXTH:\n+      riscv_ext (rd, rs1, xlen - 16, FALSE);\n+      break;\n+\n+    case M_ZEXTW:\n+      riscv_ext (rd, rs1, xlen - 32, FALSE);\n+      break;\n+\n+    case M_SEXTB:\n+      riscv_ext (rd, rs1, xlen - 8, TRUE);\n+      break;\n+\n+    case M_SEXTH:\n+      riscv_ext (rd, rs1, xlen - 16, TRUE);\n+      break;\n+\n     default:\n       as_bad (_(\"Macro %s not implemented\"), ip->insn_mo->name);\n       break;"
    },
    {
      "sha": "918c9c8a163b6bf35df8adb9822194680536b948",
      "filename": "gas/testsuite/gas/riscv/ext-32.d",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2137f55ad04e451d834048d4bfec1de2daea20e/gas/testsuite/gas/riscv/ext-32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2137f55ad04e451d834048d4bfec1de2daea20e/gas/testsuite/gas/riscv/ext-32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/ext-32.d?ref=c2137f55ad04e451d834048d4bfec1de2daea20e",
      "patch": "@@ -0,0 +1,39 @@\n+#as: -march=rv32i\n+#source: ext.s\n+#objdump: -d\n+\n+.*:[ \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <target>:\n+[ \t]+0:[ \t]+0ff57513[ \t]+zext.b[ \t]+a0,a0\n+[ \t]+4:[ \t]+01051513[ \t]+slli[ \t]+a0,a0,0x10\n+[ \t]+8:[ \t]+01055513[ \t]+srli[ \t]+a0,a0,0x10\n+[ \t]+c:[ \t]+01851513[ \t]+slli[ \t]+a0,a0,0x18\n+[ \t]+10:[ \t]+41855513[ \t]+srai[ \t]+a0,a0,0x18\n+[ \t]+14:[ \t]+01051513[ \t]+slli[ \t]+a0,a0,0x10\n+[ \t]+18:[ \t]+41055513[ \t]+srai[ \t]+a0,a0,0x10\n+[ \t]+1c:[ \t]+0ff67593[ \t]+zext.b[ \t]+a1,a2\n+[ \t]+20:[ \t]+01061593[ \t]+slli[ \t]+a1,a2,0x10\n+[ \t]+24:[ \t]+0105d593[ \t]+srli[ \t]+a1,a1,0x10\n+[ \t]+28:[ \t]+01861593[ \t]+slli[ \t]+a1,a2,0x18\n+[ \t]+2c:[ \t]+4185d593[ \t]+srai[ \t]+a1,a1,0x18\n+[ \t]+30:[ \t]+01061593[ \t]+slli[ \t]+a1,a2,0x10\n+[ \t]+34:[ \t]+4105d593[ \t]+srai[ \t]+a1,a1,0x10\n+[ \t]+38:[ \t]+0ff57513[ \t]+zext.b[ \t]+a0,a0\n+[ \t]+3c:[ \t]+0542[ \t]+slli[ \t]+a0,a0,0x10\n+[ \t]+3e:[ \t]+8141[ \t]+srli[ \t]+a0,a0,0x10\n+[ \t]+40:[ \t]+0562[ \t]+slli[ \t]+a0,a0,0x18\n+[ \t]+42:[ \t]+8561[ \t]+srai[ \t]+a0,a0,0x18\n+[ \t]+44:[ \t]+0542[ \t]+slli[ \t]+a0,a0,0x10\n+[ \t]+46:[ \t]+8541[ \t]+srai[ \t]+a0,a0,0x10\n+[ \t]+48:[ \t]+0ff67593[ \t]+zext.b[ \t]+a1,a2\n+[ \t]+4c:[ \t]+01061593[ \t]+slli[ \t]+a1,a2,0x10\n+[ \t]+50:[ \t]+81c1[ \t]+srli[ \t]+a1,a1,0x10\n+[ \t]+52:[ \t]+01861593[ \t]+slli[ \t]+a1,a2,0x18\n+[ \t]+56:[ \t]+85e1[ \t]+srai[ \t]+a1,a1,0x18\n+[ \t]+58:[ \t]+01061593[ \t]+slli[ \t]+a1,a2,0x10\n+[ \t]+5c:[ \t]+85c1[ \t]+srai[ \t]+a1,a1,0x10\n+#..."
    },
    {
      "sha": "49d109b1db3b874faac41af0b5006f249620f96d",
      "filename": "gas/testsuite/gas/riscv/ext-64.d",
      "status": "added",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2137f55ad04e451d834048d4bfec1de2daea20e/gas/testsuite/gas/riscv/ext-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2137f55ad04e451d834048d4bfec1de2daea20e/gas/testsuite/gas/riscv/ext-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/ext-64.d?ref=c2137f55ad04e451d834048d4bfec1de2daea20e",
      "patch": "@@ -0,0 +1,51 @@\n+#as: -march=rv64i -defsym __64_bit__=1\n+#source: ext.s\n+#objdump: -d\n+\n+.*:[ \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <target>:\n+[ \t]+0:[ \t]+0ff57513[ \t]+zext.b[ \t]+a0,a0\n+[ \t]+4:[ \t]+03051513[ \t]+slli[ \t]+a0,a0,0x30\n+[ \t]+8:[ \t]+03055513[ \t]+srli[ \t]+a0,a0,0x30\n+[ \t]+c:[ \t]+03851513[ \t]+slli[ \t]+a0,a0,0x38\n+[ \t]+10:[ \t]+43855513[ \t]+srai[ \t]+a0,a0,0x38\n+[ \t]+14:[ \t]+03051513[ \t]+slli[ \t]+a0,a0,0x30\n+[ \t]+18:[ \t]+43055513[ \t]+srai[ \t]+a0,a0,0x30\n+[ \t]+1c:[ \t]+0ff67593[ \t]+zext.b[ \t]+a1,a2\n+[ \t]+20:[ \t]+03061593[ \t]+slli[ \t]+a1,a2,0x30\n+[ \t]+24:[ \t]+0305d593[ \t]+srli[ \t]+a1,a1,0x30\n+[ \t]+28:[ \t]+03861593[ \t]+slli[ \t]+a1,a2,0x38\n+[ \t]+2c:[ \t]+4385d593[ \t]+srai[ \t]+a1,a1,0x38\n+[ \t]+30:[ \t]+03061593[ \t]+slli[ \t]+a1,a2,0x30\n+[ \t]+34:[ \t]+4305d593[ \t]+srai[ \t]+a1,a1,0x30\n+[ \t]+38:[ \t]+02051513[ \t]+slli[ \t]+a0,a0,0x20\n+[ \t]+3c:[ \t]+02055513[ \t]+srli[ \t]+a0,a0,0x20\n+[ \t]+40:[ \t]+0005051b[ \t]+sext.w[ \t]+a0,a0\n+[ \t]+44:[ \t]+02061593[ \t]+slli[ \t]+a1,a2,0x20\n+[ \t]+48:[ \t]+0205d593[ \t]+srli[ \t]+a1,a1,0x20\n+[ \t]+4c:[ \t]+0006059b[ \t]+sext.w[ \t]+a1,a2\n+[ \t]+50:[ \t]+0ff57513[ \t]+zext.b[ \t]+a0,a0\n+[ \t]+54:[ \t]+1542[ \t]+slli[ \t]+a0,a0,0x30\n+[ \t]+56:[ \t]+9141[ \t]+srli[ \t]+a0,a0,0x30\n+[ \t]+58:[ \t]+1562[ \t]+slli[ \t]+a0,a0,0x38\n+[ \t]+5a:[ \t]+9561[ \t]+srai[ \t]+a0,a0,0x38\n+[ \t]+5c:[ \t]+1542[ \t]+slli[ \t]+a0,a0,0x30\n+[ \t]+5e:[ \t]+9541[ \t]+srai[ \t]+a0,a0,0x30\n+[ \t]+60:[ \t]+0ff67593[ \t]+zext.b[ \t]+a1,a2\n+[ \t]+64:[ \t]+03061593[ \t]+slli[ \t]+a1,a2,0x30\n+[ \t]+68:[ \t]+91c1[ \t]+srli[ \t]+a1,a1,0x30\n+[ \t]+6a:[ \t]+03861593[ \t]+slli[ \t]+a1,a2,0x38\n+[ \t]+6e:[ \t]+95e1[ \t]+srai[ \t]+a1,a1,0x38\n+[ \t]+70:[ \t]+03061593[ \t]+slli[ \t]+a1,a2,0x30\n+[ \t]+74:[ \t]+95c1[ \t]+srai[ \t]+a1,a1,0x30\n+[ \t]+76:[ \t]+1502[ \t]+slli[ \t]+a0,a0,0x20\n+[ \t]+78:[ \t]+9101[ \t]+srli[ \t]+a0,a0,0x20\n+[ \t]+7a:[ \t]+2501[ \t]+sext.w[ \t]+a0,a0\n+[ \t]+7c:[ \t]+02061593[ \t]+slli[ \t]+a1,a2,0x20\n+[ \t]+80:[ \t]+9181[ \t]+srli[ \t]+a1,a1,0x20\n+[ \t]+82:[ \t]+0006059b[ \t]+sext.w[ \t]+a1,a2\n+#..."
    },
    {
      "sha": "f95713422a217926f1d51f44bf8e98f2cd3cf02a",
      "filename": "gas/testsuite/gas/riscv/ext.s",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2137f55ad04e451d834048d4bfec1de2daea20e/gas/testsuite/gas/riscv/ext.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2137f55ad04e451d834048d4bfec1de2daea20e/gas/testsuite/gas/riscv/ext.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/ext.s?ref=c2137f55ad04e451d834048d4bfec1de2daea20e",
      "patch": "@@ -0,0 +1,38 @@\n+target:\n+\t.option norvc\n+\tzext.b\ta0, a0\n+\tzext.h\ta0, a0\n+\tsext.b\ta0, a0\n+\tsext.h\ta0, a0\n+\n+\tzext.b\ta1, a2\n+\tzext.h\ta1, a2\n+\tsext.b\ta1, a2\n+\tsext.h\ta1, a2\n+\n+.ifdef __64_bit__\n+\tzext.w\ta0, a0\n+\tsext.w\ta0, a0\n+\n+\tzext.w\ta1, a2\n+\tsext.w\ta1, a2\n+.endif\n+\n+\t.option rvc\n+\tzext.b\ta0, a0\n+\tzext.h\ta0, a0\n+\tsext.b\ta0, a0\n+\tsext.h\ta0, a0\n+\n+\tzext.b\ta1, a2\n+\tzext.h\ta1, a2\n+\tsext.b\ta1, a2\n+\tsext.h\ta1, a2\n+\n+.ifdef __64_bit__\n+\tzext.w\ta0, a0\n+\tsext.w\ta0, a0\n+\n+\tzext.w\ta1, a2\n+\tsext.w\ta1, a2\n+.endif"
    },
    {
      "sha": "cc235e08fab1a7649e1e29148d2b02a1a36b55de",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2137f55ad04e451d834048d4bfec1de2daea20e/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2137f55ad04e451d834048d4bfec1de2daea20e/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=c2137f55ad04e451d834048d4bfec1de2daea20e",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv.h (M_ZEXTH, M_ZEXTW, M_SEXTB, M_SEXTH.): Added.\n+\n 2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* opcode/riscv.h: Add INSN_CLASS_ZICSR and INSN_CLASS_ZIFENCEI."
    },
    {
      "sha": "1949072b83833fc1dc7ca60212640d4f23d6e50c",
      "filename": "include/opcode/riscv.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2137f55ad04e451d834048d4bfec1de2daea20e/include/opcode/riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2137f55ad04e451d834048d4bfec1de2daea20e/include/opcode/riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv.h?ref=c2137f55ad04e451d834048d4bfec1de2daea20e",
      "patch": "@@ -480,6 +480,10 @@ enum\n   M_CALL,\n   M_J,\n   M_LI,\n+  M_ZEXTH,\n+  M_ZEXTW,\n+  M_SEXTB,\n+  M_SEXTH,\n   M_NUM_MACROS\n };\n "
    },
    {
      "sha": "92a95254a541389971760b669bdf67a4bd74bd29",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2137f55ad04e451d834048d4bfec1de2daea20e/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2137f55ad04e451d834048d4bfec1de2daea20e/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=c2137f55ad04e451d834048d4bfec1de2daea20e",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* riscv-opc.c (riscv_opcodes): Add sext.[bh] and zext.[bhw].\n+\n 2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* disassemble.h (riscv_get_disassembler): Declare."
    },
    {
      "sha": "f90d717755070d5068b7f56d87b017512a5d55a1",
      "filename": "opcodes/riscv-opc.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2137f55ad04e451d834048d4bfec1de2daea20e/opcodes/riscv-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2137f55ad04e451d834048d4bfec1de2daea20e/opcodes/riscv-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-opc.c?ref=c2137f55ad04e451d834048d4bfec1de2daea20e",
      "patch": "@@ -238,6 +238,10 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"mv\",          0, INSN_CLASS_I,   \"d,s\",  MATCH_ADDI, MASK_ADDI | MASK_IMM, match_opcode, INSN_ALIAS },\n {\"move\",        0, INSN_CLASS_C,   \"d,CV\",  MATCH_C_MV, MASK_C_MV, match_c_add, INSN_ALIAS },\n {\"move\",        0, INSN_CLASS_I,   \"d,s\",  MATCH_ADDI, MASK_ADDI | MASK_IMM, match_opcode, INSN_ALIAS },\n+{\"sext.b\",      0, INSN_CLASS_I,   \"d,s\",  0,    (int) M_SEXTB,  match_never, INSN_MACRO },\n+{\"sext.h\",      0, INSN_CLASS_I,   \"d,s\",  0,    (int) M_SEXTH,  match_never, INSN_MACRO },\n+{\"zext.b\",      0, INSN_CLASS_I,   \"d,s\",  MATCH_ANDI | ENCODE_ITYPE_IMM (255), MASK_ANDI | MASK_IMM, match_opcode, INSN_ALIAS },\n+{\"zext.h\",      0, INSN_CLASS_I,   \"d,s\",  0,    (int) M_ZEXTH,  match_never, INSN_MACRO },\n {\"andi\",        0, INSN_CLASS_C,   \"Cs,Cw,Co\",  MATCH_C_ANDI, MASK_C_ANDI, match_opcode, INSN_ALIAS },\n {\"andi\",        0, INSN_CLASS_I,   \"d,s,j\",  MATCH_ANDI, MASK_ANDI, match_opcode, 0 },\n {\"and\",         0, INSN_CLASS_C,   \"Cs,Cw,Ct\",  MATCH_C_AND, MASK_C_AND, match_opcode, INSN_ALIAS },\n@@ -370,6 +374,7 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"sd\",         64, INSN_CLASS_C, \"Ct,Cl(Cs)\",  MATCH_C_SD, MASK_C_SD, match_opcode, INSN_ALIAS|INSN_DREF|INSN_8_BYTE },\n {\"sd\",         64, INSN_CLASS_I, \"t,q(s)\",  MATCH_SD, MASK_SD, match_opcode, INSN_DREF|INSN_8_BYTE },\n {\"sd\",         64, INSN_CLASS_I, \"t,A,s\",  0, (int) M_SD, match_never, INSN_MACRO },\n+{\"zext.w\",     64, INSN_CLASS_I, \"d,s\",    0, (int) M_ZEXTW,  match_never, INSN_MACRO },\n {\"sext.w\",     64, INSN_CLASS_C, \"d,CU\",  MATCH_C_ADDIW, MASK_C_ADDIW | MASK_RVC_IMM, match_rd_nonzero, INSN_ALIAS },\n {\"sext.w\",     64, INSN_CLASS_I, \"d,s\",  MATCH_ADDIW, MASK_ADDIW | MASK_IMM, match_opcode, INSN_ALIAS },\n {\"addiw\",      64, INSN_CLASS_C, \"d,CU,Co\",  MATCH_C_ADDIW, MASK_C_ADDIW, match_rd_nonzero, INSN_ALIAS },"
    }
  ]
}