{
  "sha": "6a010cf67a96adcaf80c74f926df6b42ce13e7df",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmEwMTBjZjY3YTk2YWRjYWY4MGM3NGY5MjZkZjZiNDJjZTEzZTdkZg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-08-01T08:13:29Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-08-02T08:52:42Z"
    },
    "message": "[GOLD] PowerPC relocation signed overflow check\n\nRelocations with right shifts were calculating wrong overflow status.\nSince the addr34 split-field reloc is implemented as an 18-bit high\npart with value shifted right by 16 and a 16-bit low part, most of the\npc-relative relocs were affected.\n\n\t* powerpc.cc (Powerpc_relocate_functions::rela, rela_ua): Perform\n\tsigned right shift for signed overflow check.",
    "tree": {
      "sha": "c420914e864baabfd4275178df6301b3d4b2f148",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c420914e864baabfd4275178df6301b3d4b2f148"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6a010cf67a96adcaf80c74f926df6b42ce13e7df",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6a010cf67a96adcaf80c74f926df6b42ce13e7df",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6a010cf67a96adcaf80c74f926df6b42ce13e7df",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6a010cf67a96adcaf80c74f926df6b42ce13e7df/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "97c0a07968a7c64e1de96abff8937d089f09b3e7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/97c0a07968a7c64e1de96abff8937d089f09b3e7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/97c0a07968a7c64e1de96abff8937d089f09b3e7"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 17,
    "deletions": 4
  },
  "files": [
    {
      "sha": "b2961d72f21bc7e35c1ce0cd336c98c753bf671e",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6a010cf67a96adcaf80c74f926df6b42ce13e7df/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6a010cf67a96adcaf80c74f926df6b42ce13e7df/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=6a010cf67a96adcaf80c74f926df6b42ce13e7df",
      "patch": "@@ -1,3 +1,8 @@\n+2019-08-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Powerpc_relocate_functions::rela, rela_ua): Perform\n+\tsigned right shift for signed overflow check.\n+\n 2019-07-29  Martin Liska  <mliska@suse.cz>\n \n \tPR 24768"
    },
    {
      "sha": "67c3061bb3ee5c0413c16638afed81a5aa2d9c51",
      "filename": "gold/powerpc.cc",
      "status": "modified",
      "additions": 12,
      "deletions": 4,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6a010cf67a96adcaf80c74f926df6b42ce13e7df/gold/powerpc.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6a010cf67a96adcaf80c74f926df6b42ce13e7df/gold/powerpc.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/powerpc.cc?ref=6a010cf67a96adcaf80c74f926df6b42ce13e7df",
      "patch": "@@ -1996,11 +1996,15 @@ class Powerpc_relocate_functions\n     typedef typename elfcpp::Swap<fieldsize, big_endian>::Valtype Valtype;\n     Valtype* wv = reinterpret_cast<Valtype*>(view);\n     Valtype val = elfcpp::Swap<fieldsize, big_endian>::readval(wv);\n-    Valtype reloc = value >> right_shift;\n+    if (overflow == CHECK_SIGNED)\n+      value = static_cast<SignedAddress>(value) >> right_shift;\n+    else\n+      value = value >> right_shift;\n+    Valtype reloc = value;\n     val &= ~dst_mask;\n     reloc &= dst_mask;\n     elfcpp::Swap<fieldsize, big_endian>::writeval(wv, val | reloc);\n-    return overflowed<valsize>(value >> right_shift, overflow);\n+    return overflowed<valsize>(value, overflow);\n   }\n \n   // Do a simple RELA relocation, unaligned.\n@@ -2023,11 +2027,15 @@ class Powerpc_relocate_functions\n     typedef typename elfcpp::Swap_unaligned<fieldsize, big_endian>::Valtype\n       Valtype;\n     Valtype val = elfcpp::Swap<fieldsize, big_endian>::readval(view);\n-    Valtype reloc = value >> right_shift;\n+    if (overflow == CHECK_SIGNED)\n+      value = static_cast<SignedAddress>(value) >> right_shift;\n+    else\n+      value = value >> right_shift;\n+    Valtype reloc = value;\n     val &= ~dst_mask;\n     reloc &= dst_mask;\n     elfcpp::Swap_unaligned<fieldsize, big_endian>::writeval(view, val | reloc);\n-    return overflowed<valsize>(value >> right_shift, overflow);\n+    return overflowed<valsize>(value, overflow);\n   }\n \n public:"
    }
  ]
}