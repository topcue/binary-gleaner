{
  "sha": "034dce7a47652cf0a5f8fbcc403ca995171cc417",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDM0ZGNlN2E0NzY1MmNmMGE1ZjhmYmNjNDAzY2E5OTUxNzFjYzQxNw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-17T18:01:32Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-17T18:01:32Z"
    },
    "message": "gdb: add cmd_list_element::is_command_class_help\n\nSame idea as the previous patches, but for whether a command is a\n\"command class help\" command.  I think this one is particularly useful,\nbecause it's not obvious when reading code what \"c->func == NULL\" means.\n\nRemove the cmd_func_p function, which does kind of the same thing as\ncmd_list_element::is_command_class_help (except it doesn't give a clue\nabout the semantic of a NULL func value).\n\ngdb/ChangeLog:\n\n\t* cli/cli-decode.h (cmd_list_element) <is_command_class_help>:\n\tNew, use it.\n\t* command.h (cmd_func_p): Remove.\n\t* cli/cli-decode.c (cmd_func_p): Remove.\n\nChange-Id: I521a3e1896dc93a5babe1493d18f5eb071e1b3b7",
    "tree": {
      "sha": "7e0e13041428cac10deee758fbd2883dc0ce928b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7e0e13041428cac10deee758fbd2883dc0ce928b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/034dce7a47652cf0a5f8fbcc403ca995171cc417",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/034dce7a47652cf0a5f8fbcc403ca995171cc417",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/034dce7a47652cf0a5f8fbcc403ca995171cc417",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/034dce7a47652cf0a5f8fbcc403ca995171cc417/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3d0b35641081d0f57d32583093f3297ff39b7379",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d0b35641081d0f57d32583093f3297ff39b7379",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3d0b35641081d0f57d32583093f3297ff39b7379"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 22,
    "deletions": 21
  },
  "files": [
    {
      "sha": "1e6b52ad19d99befc0528c5740de72a62ad8ceab",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/034dce7a47652cf0a5f8fbcc403ca995171cc417/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/034dce7a47652cf0a5f8fbcc403ca995171cc417/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=034dce7a47652cf0a5f8fbcc403ca995171cc417",
      "patch": "@@ -1,3 +1,10 @@\n+2021-05-17  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* cli/cli-decode.h (cmd_list_element) <is_command_class_help>:\n+\tNew, use it.\n+\t* command.h (cmd_func_p): Remove.\n+\t* cli/cli-decode.c (cmd_func_p): Remove.\n+\n 2021-05-17  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* cli/cli-decode.h (cmd_list_element) <is_alias>: New, use it."
    },
    {
      "sha": "fbead7004ed4f1b076b5809226550b17daec9d6d",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 8,
      "deletions": 17,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/034dce7a47652cf0a5f8fbcc403ca995171cc417/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/034dce7a47652cf0a5f8fbcc403ca995171cc417/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=034dce7a47652cf0a5f8fbcc403ca995171cc417",
      "patch": "@@ -1250,7 +1250,7 @@ help_cmd (const char *command, struct ui_file *stream)\n   fputs_filtered (c->doc, stream);\n   fputs_filtered (\"\\n\", stream);\n \n-  if (!c->is_prefix () && c->func != NULL)\n+  if (!c->is_prefix () && !c->is_command_class_help ())\n     return;\n \n   fprintf_filtered (stream, \"\\n\");\n@@ -1261,7 +1261,7 @@ help_cmd (const char *command, struct ui_file *stream)\n \t       all_commands, stream);\n \n   /* If this is a class name, print all of the commands in the class.  */\n-  if (c->func == NULL)\n+  if (c->is_command_class_help ())\n     help_list (cmdlist, \"\", c->theclass, stream);\n \n   if (c->hook_pre || c->hook_post)\n@@ -1362,7 +1362,7 @@ help_all (struct ui_file *stream)\n       /* If this is a class name, print all of the commands in the\n \t class.  */\n \n-      if (c->func == NULL)\n+      if (c->is_command_class_help ())\n \t{\n \t  fprintf_filtered (stream, \"\\nCommand class: %s\\n\\n\", c->name);\n \t  help_cmd_list (cmdlist, c->theclass, true, stream);\n@@ -1498,8 +1498,8 @@ help_cmd_list (struct cmd_list_element *list, enum command_class theclass,\n \t}\n \n       if (theclass == all_commands\n-\t  || (theclass == all_classes && c->func == NULL)\n-\t  || (theclass == c->theclass && c->func != NULL))\n+\t  || (theclass == all_classes && c->is_command_class_help ())\n+\t  || (theclass == c->theclass && !c->is_command_class_help ()))\n \t{\n \t  /* show C when\n \t     - showing all commands\n@@ -1545,7 +1545,7 @@ find_cmd (const char *command, int len, struct cmd_list_element *clist,\n   *nfound = 0;\n   for (c = clist; c; c = c->next)\n     if (!strncmp (command, c->name, len)\n-\t&& (!ignore_help_classes || c->func))\n+\t&& (!ignore_help_classes || !c->is_command_class_help ()))\n       {\n \tfound = c;\n \t(*nfound)++;\n@@ -2124,7 +2124,7 @@ complete_on_cmdlist (struct cmd_list_element *list,\n       for (ptr = list; ptr; ptr = ptr->next)\n \tif (!strncmp (ptr->name, text, textlen)\n \t    && !ptr->abbrev_flag\n-\t    && (!ignore_help_classes || ptr->func\n+\t    && (!ignore_help_classes || !ptr->is_command_class_help ()\n \t\t|| ptr->is_prefix ()))\n \t  {\n \t    if (pass == 0)\n@@ -2174,20 +2174,11 @@ complete_on_enum (completion_tracker &tracker,\n       tracker.add_completion (make_completion_match_str (name, text, word));\n }\n \n-\n-/* Check function pointer.  */\n-int\n-cmd_func_p (struct cmd_list_element *cmd)\n-{\n-  return (cmd->func != NULL);\n-}\n-\n-\n /* Call the command function.  */\n void\n cmd_func (struct cmd_list_element *cmd, const char *args, int from_tty)\n {\n-  if (cmd_func_p (cmd))\n+  if (!cmd->is_command_class_help ())\n     {\n       gdb::optional<scoped_restore_tmpl<int>> restore_suppress;\n "
    },
    {
      "sha": "9328659775ca83fa8e09c8a7881bc81323cf7ee1",
      "filename": "gdb/cli/cli-decode.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/034dce7a47652cf0a5f8fbcc403ca995171cc417/gdb/cli/cli-decode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/034dce7a47652cf0a5f8fbcc403ca995171cc417/gdb/cli/cli-decode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.h?ref=034dce7a47652cf0a5f8fbcc403ca995171cc417",
      "patch": "@@ -87,6 +87,12 @@ struct cmd_list_element\n   bool is_prefix () const\n   { return this->subcommands != nullptr; }\n \n+  /* Return true if this command is a \"command class help\" command.  For\n+     instance, a \"stack\" dummy command is registered so that one can do\n+     \"help stack\" and show help for all commands of the \"stack\" class.  */\n+  bool is_command_class_help () const\n+  { return this->func == nullptr; }\n+\n   /* Points to next command in this list.  */\n   struct cmd_list_element *next = nullptr;\n "
    },
    {
      "sha": "685038716a4194d8506dcbc5fecbf3cd83a3f8fc",
      "filename": "gdb/command.h",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/034dce7a47652cf0a5f8fbcc403ca995171cc417/gdb/command.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/034dce7a47652cf0a5f8fbcc403ca995171cc417/gdb/command.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/command.h?ref=034dce7a47652cf0a5f8fbcc403ca995171cc417",
      "patch": "@@ -595,9 +595,6 @@ extern void save_command_line (const char *cmd);\n \n extern void not_just_help_class_command (const char *, int);\n \n-/* Check function pointer.  */\n-extern int cmd_func_p (struct cmd_list_element *cmd);\n-\n /* Call the command function.  */\n extern void cmd_func (struct cmd_list_element *cmd,\n \t\t      const char *args, int from_tty);"
    },
    {
      "sha": "b9635368cacb37100bae87d3a41bd22001c10e59",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/034dce7a47652cf0a5f8fbcc403ca995171cc417/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/034dce7a47652cf0a5f8fbcc403ca995171cc417/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=034dce7a47652cf0a5f8fbcc403ca995171cc417",
      "patch": "@@ -666,7 +666,7 @@ execute_command (const char *p, int from_tty)\n \tdo_set_command (arg, from_tty, c);\n       else if (c->type == show_cmd)\n \tdo_show_command (arg, from_tty, c);\n-      else if (!cmd_func_p (c))\n+      else if (c->is_command_class_help ())\n \terror (_(\"That is not a command, just a help topic.\"));\n       else if (deprecated_call_command_hook)\n \tdeprecated_call_command_hook (c, arg, from_tty);"
    }
  ]
}