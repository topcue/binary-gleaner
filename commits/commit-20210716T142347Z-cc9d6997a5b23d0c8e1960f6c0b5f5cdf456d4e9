{
  "sha": "cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2M5ZDY5OTdhNWIyM2QwYzhlMTk2MGY2YzBiNWY1Y2RmNDU2ZDRlOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-06-18T19:08:33Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-07-16T14:23:47Z"
    },
    "message": "Fix array stride bug\n\nInvestigation of using the Python API with an Ada program showed that\nan array of dynamic types was not being handled properly.  I tracked\nthis down to an oddity of how array strides are handled.\n\nIn gdb, an array stride can be attached to the range type, via the\nrange_bounds object.  However, the stride can also be put into the\narray's first field.  From create_range_type_with_stride:\n\n  else if (bit_stride > 0)\n    TYPE_FIELD_BITSIZE (result_type, 0) = bit_stride;\n\nIt's hard to be sure why this is done, but I would guess a combination\nof historical reasons plus a desire (mentioned in a comment somewhere)\nto avoid modifying the range type.\n\nThis patch fixes the problem by changing type::bit_stride to\nunderstand this convention.  It also fixes one spot that reproduces\nthis logic.\n\nRegression tested on x86-64 Fedora 32.",
    "tree": {
      "sha": "98b8274e28e753f9ba06b8c17975fabba46199ac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/98b8274e28e753f9ba06b8c17975fabba46199ac"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "05a1dd47cc9b6fcc8ec112bd0b68b36567ccbb39",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05a1dd47cc9b6fcc8ec112bd0b68b36567ccbb39",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/05a1dd47cc9b6fcc8ec112bd0b68b36567ccbb39"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 20,
    "deletions": 7
  },
  "files": [
    {
      "sha": "1a261719422a0c9f4480956e85edba292636d53c",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 1,
      "deletions": 7,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9",
      "patch": "@@ -1280,13 +1280,7 @@ update_static_array_size (struct type *type)\n       int stride;\n       struct type *element_type;\n \n-      /* If the array itself doesn't provide a stride value then take\n-\t whatever stride the range provides.  Don't update BIT_STRIDE as\n-\t we don't want to place the stride value from the range into this\n-\t arrays bit size field.  */\n-      stride = TYPE_FIELD_BITSIZE (type, 0);\n-      if (stride == 0)\n-\tstride = range_type->bit_stride ();\n+      stride = type->bit_stride ();\n \n       if (!get_discrete_bounds (range_type, &low_bound, &high_bound))\n \tlow_bound = high_bound = 0;"
    },
    {
      "sha": "d754f2fcd36dc2cc4f3d20912436611643bdfbbd",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9",
      "patch": "@@ -1029,6 +1029,8 @@ struct type\n \n   ULONGEST bit_stride () const\n   {\n+    if (this->code () == TYPE_CODE_ARRAY && this->field (0).bitsize != 0)\n+      return this->field (0).bitsize;\n     return this->bounds ()->bit_stride ();\n   }\n "
    },
    {
      "sha": "d93ad4704a03f72e4673136022426e57289516b3",
      "filename": "gdb/testsuite/gdb.ada/array_of_variant.exp",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9/gdb/testsuite/gdb.ada/array_of_variant.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9/gdb/testsuite/gdb.ada/array_of_variant.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/array_of_variant.exp?ref=cc9d6997a5b23d0c8e1960f6c0b5f5cdf456d4e9",
      "patch": "@@ -14,6 +14,7 @@\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n load_lib \"ada.exp\"\n+load_lib \"gdb-python.exp\"\n \n if { [skip_ada_tests] } { return -1 }\n \n@@ -49,4 +50,20 @@ foreach_with_prefix scenario {all minimal} {\n     gdb_test \"print objects(2 .. 2)\" \\\n \t[string_to_regexp \" = (2 => $v2)\"] \\\n \t\"print second array slice\"\n+\n+    # This is only supported for the DWARF encoding.\n+    if {$scenario == \"minimal\" && ![skip_python_tests]} {\n+\tgdb_test_no_output \\\n+\t    \"python o = gdb.parse_and_eval('objects')\" \\\n+\t    \"fetch value for python\"\n+\tgdb_test \"python print(o)\" \\\n+\t    [string_to_regexp \"($v1, $v2)\"] \\\n+\t    \"python print array\"\n+\tgdb_test \"python print(o\\[1\\])\" \\\n+\t    [string_to_regexp \"$v1\"] \\\n+\t    \"python print first array element\"\n+\tgdb_test \"python print(o\\[2\\])\" \\\n+\t    [string_to_regexp \"$v2\"] \\\n+\t    \"python print second array element\"\n+    }\n }"
    }
  ]
}