{
  "sha": "e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTM2OTZmNjdhYmZjNDZkY2FjNmM5YmJlNDdmOGUyNWUzNGIxN2JlNQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-27T00:21:52Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-27T12:22:15Z"
    },
    "message": "Replace deprecated tcl case statements with switch statements\n\nbinutils/\n\t* testsuite/lib/binutils-common.exp (big_or_little_endian): Replace\n\tcase statement with switch statement.\ngas/\n\t* testsuite/gas/all/gas.exp: Replace case statements with switch\n\tstatements.\n\t* testsuite/gas/elf/elf.exp: Likewise.\n\t* testsuite/gas/macros/macros.exp: Likewise.\n\t* testsuite/lib/gas-defs.exp: Likewise.\nld/\n\t* testsuite/ld-elfvers/vers.exp: Replace case statements with\n\tswitch statements.\n\t* testsuite/ld-ifunc/ifunc.exp: Likewise.\n\t* testsuite/ld-unique/unique.exp: Likewise.",
    "tree": {
      "sha": "e241615305663b2d2fee857efefb7001014b78b1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e241615305663b2d2fee857efefb7001014b78b1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7568c93bf95a518797dfb2987b04911164c14a36",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7568c93bf95a518797dfb2987b04911164c14a36",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7568c93bf95a518797dfb2987b04911164c14a36"
    }
  ],
  "stats": {
    "total": 262,
    "additions": 148,
    "deletions": 114
  },
  "files": [
    {
      "sha": "74bf211681b8bd39028ce442ed9b20e355e58f8e",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (big_or_little_endian): Replace\n+\tcase statement with switch statement.\n+\n 2020-01-24  Nick Clifton  <nickc@redhat.com>\n \n \t* readelf.c (get_build_id): Fix warning messages about corrupt"
    },
    {
      "sha": "a253c01a5cad2fc2c45813983f1aeeffc53b97d1",
      "filename": "binutils/testsuite/lib/binutils-common.exp",
      "status": "modified",
      "additions": 15,
      "deletions": 3,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/binutils/testsuite/lib/binutils-common.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/binutils/testsuite/lib/binutils-common.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/lib/binutils-common.exp?ref=e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
      "patch": "@@ -1399,12 +1399,24 @@ proc big_or_little_endian {} {\n \tset tmp_flags \" [board_info [target_info name] multilib_flags]\"\n \n \tforeach x $tmp_flags {\n-\t    case $x in {\n-\t\t{*big*endian eb EB -eb -EB -mb -meb} {\n+\t    switch -glob $x {\n+\t\t*big*endian -\n+\t\teb -\n+\t\tEB -\n+\t\t-eb -\n+\t\t-EB -\n+\t\t-mb -\n+\t\t-meb {\n \t\t    set flags \" -EB\"\n \t\t    return $flags\n \t\t}\n-\t\t{*little*endian el EL -el -EL -ml -mel} {\n+\t\t*little*endian -\n+\t\tel -\n+\t\tEL -\n+\t\t-el -\n+\t\t-EL -\n+\t\t-ml -\n+\t\t-mel {\n \t\t    set flags \" -EL\"\n \t\t    return $flags\n \t\t}"
    },
    {
      "sha": "6c182f59e1915a2bd5563bf4ee631236805a46f3",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
      "patch": "@@ -1,3 +1,11 @@\n+2020-01-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/gas/all/gas.exp: Replace case statements with switch\n+\tstatements.\n+\t* testsuite/gas/elf/elf.exp: Likewise.\n+\t* testsuite/gas/macros/macros.exp: Likewise.\n+\t* testsuite/lib/gas-defs.exp: Likewise.\n+\n 2020-01-27  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR 25403"
    },
    {
      "sha": "d4140537827965447c3d4808a2380337772a809b",
      "filename": "gas/testsuite/gas/all/gas.exp",
      "status": "modified",
      "additions": 61,
      "deletions": 61,
      "changes": 122,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/gas/testsuite/gas/all/gas.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/gas/testsuite/gas/all/gas.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/gas.exp?ref=e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
      "patch": "@@ -80,9 +80,9 @@ if { ![ishost \"*-*-mingw*\"] } then {\n }\n \n # .equ works differently on some targets.\n-case $target_triplet in {\n-    { hppa*-*-* } { }\n-    { *c54x*-*-* } { }\n+switch -glob $target_triplet {\n+    hppa*-*-* { }\n+    *c54x*-*-* { }\n     default {\n \tgas_test \"equ-ok.s\" \"\" \"\" \".equ for symbol already set\"\n \tgas_test_error \"equ-bad.s\" \"\" \".equ for symbol already set through .eqv\"\n@@ -106,19 +106,19 @@ run_dump_test forward\n # mmix doesn't like .L1:\n # ti addresses aren't octets.\n if { ![is_aout_format] } {\n-    case $target_triplet in {\n-\t{ hppa*64*-*-* } {\n+    switch -glob $target_triplet {\n+\thppa*64*-*-* {\n \t    run_dump_test fwdexp\n \t}\n-\t{ alpha-*-*linux*ecoff } { }\n-\t{ alpha-*-osf* } { }\n-\t{ hppa*-*-hpux* } { }\n-\t{ mep-*-* } { }\n-\t{ mmix-*-* } { }\n-\t{ nds32*-*-* } { }\n-\t{ tic30*-*-* } { }\n-\t{ tic4x*-*-* } { }\n-\t{ tic54x*-*-* } { }\n+\talpha-*-*linux*ecoff { }\n+\talpha-*-osf* { }\n+\thppa*-*-hpux* { }\n+\tmep-*-* { }\n+\tmmix-*-* { }\n+\tnds32*-*-* { }\n+\ttic30*-*-* { }\n+\ttic4x*-*-* { }\n+\ttic54x*-*-* { }\n \tdefault {\n \t    run_dump_test fwdexp\n \t}\n@@ -129,23 +129,23 @@ if { ![is_aout_format] } {\n # most of the tests won't work on targets that set linkrelax.\n # 4 octet bytes confuse address matching on ti targets.\n # pdp11 gets unexpected reloc types.\n-case $target_triplet in {\n-    { alpha*-*-* } { }\n-    { am3*-*-* } { }\n-    { cr16*-*-* } { }\n-    { crx*-*-* } { }\n-    { h8300-*-* } { }\n-    { mips*-*-* } { }\n-    { mn10200-*-* } { }\n-    { mn10300-*-* } { }\n-    { msp430*-*-* } { }\n-    { nds32*-*-* } { }\n-    { pdp11-*-* } { }\n-    { tic30*-*-* } { }\n-    { tic4x*-*-* } { }\n-    { tic54x*-*-* } { }\n-    { xtensa*-*-* } { }\n-    { z80-*-* } { }\n+switch -glob $target_triplet {\n+    alpha*-*-* { }\n+    am3*-*-* { }\n+    cr16*-*-* { }\n+    crx*-*-* { }\n+    h8300-*-* { }\n+    mips*-*-* { }\n+    mn10200-*-* { }\n+    mn10300-*-* { }\n+    msp430*-*-* { }\n+    nds32*-*-* { }\n+    pdp11-*-* { }\n+    tic30*-*-* { }\n+    tic4x*-*-* { }\n+    tic54x*-*-* { }\n+    xtensa*-*-* { }\n+    z80-*-* { }\n     default {\n \trun_dump_test redef\n \t# These targets fail redef2 because they disallow redefined\n@@ -269,10 +269,10 @@ if {    ![istarget *c30*-*-*]\n \n # \".struct\" and \".align\" have different meanings on c54x\n # These directives are done in the c54x-specific tests instead\n-case $target_triplet in {\n-    { hppa*-*-* } { }\n-    { *c4x*-*-* } { }\n-    { *c54x*-*-* } { }\n+switch -glob $target_triplet {\n+    hppa*-*-* { }\n+    *c4x*-*-* { }\n+    *c54x*-*-* { }\n     default {\n \trun_dump_test struct\n \trun_dump_test align\n@@ -281,14 +281,14 @@ case $target_triplet in {\n }\n \n # '<' and '>' appear to have special meanings on the excluded targets\n-case $target_triplet in {\n-    { frv-*-* } { }\n-    { hppa*-*-* } { }\n-    { m32r-*-* } { }\n-    { mmix-*-* } { }\n-    { *c4x*-*-* } { }\n-    { *c54x*-*-* } { }\n-    { bfin-*-* } { }\n+switch -glob $target_triplet {\n+    frv-*-* { }\n+    hppa*-*-* { }\n+    m32r-*-* { }\n+    mmix-*-* { }\n+    *c4x*-*-* { }\n+    *c54x*-*-* { }\n+    bfin-*-* { }\n     default {\n \trun_dump_test altmacro\n \t# The second test is valid only when '!' is not a comment\n@@ -342,14 +342,14 @@ proc test_cond {} {\n # not limited to the fact that it depends on specific section\n # names appearing in the output file.\n # Again, p2align doesn't work on c54x and related targets.\n-case $target_triplet in {\n-    { alpha-*-linux*ecoff} { }\n-    { alpha-*-osf*} { }\n-    { hppa*-*-* } { }\n-    { *c4x*-*-* } { }\n-    { *c54x*-*-* } { }\n-    { rl78-*-* } { }\n-    { rx-*-* } { }\n+switch -glob $target_triplet {\n+    alpha-*-linux*ecoff { }\n+    alpha-*-osf* { }\n+    hppa*-*-* { }\n+    *c4x*-*-* { }\n+    *c54x*-*-* { }\n+    rl78-*-* { }\n+    rx-*-* { }\n     default {\n         test_cond\n \tremote_download host \"$srcdir/$subdir/incbin.dat\"\n@@ -394,11 +394,11 @@ run_dump_test quad\n run_dump_test octa\n \n # .set works differently on some targets.\n-case $target_triplet in {\n-    { alpha*-*-* } { }\n-    { mips*-*-* } { }\n-    { *c54x*-*-* } { }\n-    { z80-*-* } { }\n+switch -glob $target_triplet {\n+    alpha*-*-* { }\n+    mips*-*-* { }\n+    *c54x*-*-* { }\n+    z80-*-* { }\n     default {\n \trun_dump_test weakref1\n \trun_dump_test weakref1g\n@@ -426,17 +426,17 @@ dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/err-*.s $srcdir/$subdir/warn\n dg-finish\n \n # Set $nop_type appropriately to indicate the NOP instruction mnemonic.\n-case $target_triplet in {\n-    { \"bpf-*-*\" } {\n+switch -glob $target_triplet {\n+    bpf-*-* {\n         set nop_type 6\n     }\n-    { \"mmix-*-*\" } {\n+    mmix-*-* {\n \tset nop_type 5\n     }\n-    { \"or1k*-*-*\" } {\n+    or1k*-*-* {\n \tset nop_type 2\n     }\n-    { \"ia64-*-*\" } {\n+    ia64-*-* {\n \tset nop_type 1\n     }\n     default {"
    },
    {
      "sha": "5a298fe5832600c9de0286a3703839affdb6ae21",
      "filename": "gas/testsuite/gas/elf/elf.exp",
      "status": "modified",
      "additions": 32,
      "deletions": 30,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/gas/testsuite/gas/elf/elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/gas/testsuite/gas/elf/elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/elf.exp?ref=e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
      "patch": "@@ -112,14 +112,15 @@ if { [is_elf_format] } then {\n \t&& ![istarget \"am3*-*-*\"]} then {\n       run_dump_test \"ehopt0\"\n     }\n-    case $target_triplet in {\n-\t{ m68k-*-* m68[03]??-*-* } {\n+    switch -glob $target_triplet {\n+\tm68k-*-* -\n+\tm68[03]??-*-* {\n \t    run_dump_test \"file\" { { as \"--defsym m68k=1\" } }\n \t}\n-\t{ mmix-*-* } {\n+\tmmix-*-* {\n \t    run_dump_test \"file\" { { as \"--defsym mmix=1\" } }\n \t}\n-\t{ xtensa*-*-* } {\n+\txtensa*-*-* {\n \t    run_dump_test \"file\" { { as \"--rename-section file.s=file.c\" } }\n \t}\n \tdefault {\n@@ -135,37 +136,37 @@ if { [is_elf_format] } then {\n     run_dump_test \"group1b\"\n     run_dump_test \"group2\"\n     run_dump_test \"group3\"\n-    case $target_triplet in {\n-\t{ hppa64*-*-hpux* } { }\n-\t{ riscv*-*-* } { }\n+    switch -glob $target_triplet {\n+\thppa64*-*-hpux* { }\n+\triscv*-*-* { }\n \tdefault {\n \t    run_dump_test \"groupautoa\"\n \t}\n     }\n-    case $target_triplet in {\n-\t{ hppa64*-*-hpux* } { }\n-\t{ riscv*-*-* } { }\n-\t{ xtensa*-*-* } { }\n+    switch -glob $target_triplet {\n+\thppa64*-*-hpux* { }\n+\triscv*-*-* { }\n+\txtensa*-*-* { }\n \tdefault {\n \t    run_dump_test \"groupautob\"\n \t}\n     }\n-    case $target_triplet in {\n-\t{ alpha*-*-* } { }\n-\t{ am3*-*-* } { }\n-\t{ *c54x*-*-* } { }\n-\t{ cr16*-*-* } { }\n-\t{ crx*-*-* } { }\n-\t{ h8300-*-* } { }\n-\t{ hppa*-*-* } { }\n-\t{ iq2000*-*-* } { }\n-\t{ mips*-*-* } { }\n-\t{ mn10200-*-* } { }\n-\t{ mn10300-*-* } { }\n-\t{ msp43*-*-* } { }\n-\t{ rl78-*-* } { }\n-\t{ riscv*-*-* } { }\n-\t{ rx-*-* } { }\n+    switch -glob $target_triplet {\n+\talpha*-*-* { }\n+\tam3*-*-* { }\n+\t*c54x*-*-* { }\n+\tcr16*-*-* { }\n+\tcrx*-*-* { }\n+\th8300-*-* { }\n+\thppa*-*-* { }\n+\tiq2000*-*-* { }\n+\tmips*-*-* { }\n+\tmn10200-*-* { }\n+\tmn10300-*-* { }\n+\tmsp43*-*-* { }\n+\trl78-*-* { }\n+\triscv*-*-* { }\n+\trx-*-* { }\n \tdefault {\n \t    # The next test can fail if the target does not convert fixups\n \t    # against ordinary symbols into relocations against section symbols.\n@@ -183,11 +184,12 @@ if { [is_elf_format] } then {\n     # new sections created without atrributes.\n     if {! [istarget \"h8300-*-*\"]} then {\n \tset as_flags \"-al --generate-missing-build-notes=no\"\n-\tcase $target_triplet in {\n-\t    { i*86-*-* x86_64-*-* } {\n+\tswitch -glob $target_triplet {\n+\t    i*86-*-* -\n+\t    x86_64-*-* {\n \t\tset as_flags \"$as_flags -mx86-used-note=no\"\n \t    }\n-\t    { riscv*-*-* } {\n+\t    riscv*-*-* {\n \t\tset as_flags \"$as_flags -march-attr\"\n \t    }\n \t}"
    },
    {
      "sha": "7beaf48cf716e11f73af547aa36d3197e88a95a2",
      "filename": "gas/testsuite/gas/macros/macros.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/gas/testsuite/gas/macros/macros.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/gas/testsuite/gas/macros/macros.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/macros/macros.exp?ref=e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
      "patch": "@@ -42,10 +42,10 @@ gas_test_error \"err.s\" \"\" \"macro infinite recursion\"\n setup_xfail \"tic4x*-*\"\n gas_test \"and.s\" \"\" \"\" \"logical and in macro definition\"\n \n-case $target_triplet in {\n-    { hppa*-*-* } { if [istarget *-*-linux*] { run_dump_test semi } }\n-    { *c4x*-*-* } { }\n-    { *c54x*-*-* } { }\n+switch -glob $target_triplet {\n+    hppa*-*-* { if [istarget *-*-linux*] { run_dump_test semi } }\n+    *c4x*-*-* { }\n+    *c54x*-*-* { }\n     default {\n \trun_dump_test semi\n     }\n@@ -74,14 +74,14 @@ run_dump_test app4\n \n run_list_test badarg \"\"\n \n-case $target_triplet in {\n-    { *c54x*-*-* } { }\n-    { *c4x*-*-* } { }\n-    { mmix-* } { }\n-    { ns32k-*-* } { }\n-    { rl78-*-* } { }\n-    { rx-*-* } { }\n-    { vax-*-* } { }\n+switch -glob $target_triplet {\n+    *c54x*-*-* { }\n+    *c4x*-*-* { }\n+    mmix-* { }\n+    ns32k-*-* { }\n+    rl78-*-* { }\n+    rx-*-* { }\n+    vax-*-* { }\n     default { run_list_test dot \"-alm\" }\n }\n run_list_test end \"\""
    },
    {
      "sha": "6649eaa3762518ddaece284e48ee1043b61554d3",
      "filename": "gas/testsuite/lib/gas-defs.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/gas/testsuite/lib/gas-defs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/gas/testsuite/lib/gas-defs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/lib/gas-defs.exp?ref=e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
      "patch": "@@ -267,7 +267,7 @@ proc gas_init { args } {\n     global target_os\n     global stdoptlist\n \n-    case \"$target_cpu\" in {\n+    switch -glob \"$target_cpu\" {\n \t\"m68???\"\t\t{ set target_cpu_family m68k }\n \t\"i[3-7]86\"\t\t{ set target_cpu_family i386 }\n \tdefault\t\t\t{ set target_cpu_family $target_cpu }"
    },
    {
      "sha": "fe87678b85dbd750488133fd8635ef642428bf92",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
      "patch": "@@ -1,3 +1,10 @@\n+2020-01-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/ld-elfvers/vers.exp: Replace case statements with\n+\tswitch statements.\n+\t* testsuite/ld-ifunc/ifunc.exp: Likewise.\n+\t* testsuite/ld-unique/unique.exp: Likewise.\n+\n 2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>\n \t    Alan Modra  <amodra@gmail.com>\n "
    },
    {
      "sha": "6ab1e75db6aa2b34a7284d478d11372f877238e2",
      "filename": "ld/testsuite/ld-elfvers/vers.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/ld/testsuite/ld-elfvers/vers.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/ld/testsuite/ld-elfvers/vers.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvers/vers.exp?ref=e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
      "patch": "@@ -92,9 +92,9 @@ if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {\n     }\n }\n \n-case $target_triplet in {\n-    { ia64-*-* } { set as_options \"-x\" }\n-    { sparc-*-* } { set as_options \"-Av9a\" }\n+switch -glob $target_triplet {\n+    ia64-*-* { set as_options \"-x\" }\n+    sparc-*-* { set as_options \"-Av9a\" }\n     default { set as_options \"\" }\n }\n "
    },
    {
      "sha": "4e9e83bbc38961cc1e7bedf4e4c8500af99cc28e",
      "filename": "ld/testsuite/ld-ifunc/ifunc.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/ld/testsuite/ld-ifunc/ifunc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/ld/testsuite/ld-ifunc/ifunc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ifunc/ifunc.exp?ref=e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
      "patch": "@@ -268,8 +268,8 @@ if { $fails == 0 } {\n # ifunc should have an OSABI field of GNU.  The linked non-ifunc using\n # executable should have an OSABI field of NONE (aka System V).\n \n-case $target_triplet in {\n-    { hppa*-*-linux* } { set expected_none {UNIX - GNU} }\n+switch -glob $target_triplet {\n+    hppa*-*-linux* { set expected_none {UNIX - GNU} }\n     default { set expected_none {UNIX - System V} }\n }\n "
    },
    {
      "sha": "5457deb4ece590e1843957075defcb367f00a4c6",
      "filename": "ld/testsuite/ld-unique/unique.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/ld/testsuite/ld-unique/unique.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3696f67abfc46dcac6c9bbe47f8e25e34b17be5/ld/testsuite/ld-unique/unique.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-unique/unique.exp?ref=e3696f67abfc46dcac6c9bbe47f8e25e34b17be5",
      "patch": "@@ -163,8 +163,8 @@ if { $fails == 0 } {\n }\n \n # Check the empty object file.\n-case $target_triplet in {\n-    { hppa*-*-linux* } { set expected_none {UNIX - GNU} }\n+switch -glob $target_triplet {\n+    hppa*-*-linux* { set expected_none {UNIX - GNU} }\n     default { set expected_none {UNIX - System V} }\n }\n if {! [check_osabi tmpdir/unique_empty.o $expected_none]} {"
    }
  ]
}