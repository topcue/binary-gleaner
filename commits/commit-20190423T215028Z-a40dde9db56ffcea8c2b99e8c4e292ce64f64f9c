{
  "sha": "a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTQwZGRlOWRiNTZmZmNlYThjMmI5OWU4YzRlMjkyY2U2NGY2NGY5Yw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-10T20:15:03Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-23T21:50:28Z"
    },
    "message": "gdb/score: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc, and gdbarch_unwind_sp where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* score-tdep.c (score_unwind_sp): Delete.\n\t(score_unwind_pc): Delete.\n\t(score_dummy_id): Delete.\n\t(score_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "a05120191924926259099a87d9e064f6f86fcfba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a05120191924926259099a87d9e064f6f86fcfba"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "47c47d6907bc44a599baff948d2809616c74c44e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/47c47d6907bc44a599baff948d2809616c74c44e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/47c47d6907bc44a599baff948d2809616c74c44e"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 8,
    "deletions": 23
  },
  "files": [
    {
      "sha": "89b65eabbb06f69104d5b0439610bed6b55190b0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c",
      "patch": "@@ -1,3 +1,11 @@\n+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* score-tdep.c (score_unwind_sp): Delete.\n+\t(score_unwind_pc): Delete.\n+\t(score_dummy_id): Delete.\n+\t(score_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* rx-tdep.c (rx_unwind_pc): Delete."
    },
    {
      "sha": "19306d3464ee7cc054aa8d4ef7da5015b4216383",
      "filename": "gdb/score-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c/gdb/score-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c/gdb/score-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/score-tdep.c?ref=a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c",
      "patch": "@@ -64,18 +64,6 @@ score_register_type (struct gdbarch *gdbarch, int regnum)\n   return builtin_type (gdbarch)->builtin_uint32;\n }\n \n-static CORE_ADDR\n-score_unwind_sp (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, SCORE_SP_REGNUM);\n-}\n-\n-static CORE_ADDR\n-score_unwind_pc (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, SCORE_PC_REGNUM);\n-}\n-\n static const char *\n score7_register_name (struct gdbarch *gdbarch, int regnum)\n {\n@@ -478,14 +466,6 @@ score_return_value (struct gdbarch *gdbarch, struct value *function,\n     }\n }\n \n-static struct frame_id\n-score_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  return frame_id_build (get_frame_register_unsigned (this_frame,\n-\t\t\t\t\t\t      SCORE_SP_REGNUM),\n-\t\t\t get_frame_pc (this_frame));\n-}\n-\n static int\n score_type_needs_double_align (struct type *type)\n {\n@@ -1480,8 +1460,6 @@ score_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   set_gdbarch_register_type (gdbarch, score_register_type);\n   set_gdbarch_frame_align (gdbarch, score_frame_align);\n   set_gdbarch_inner_than (gdbarch, core_addr_lessthan);\n-  set_gdbarch_unwind_sp (gdbarch, score_unwind_sp);\n-  set_gdbarch_unwind_pc (gdbarch, score_unwind_pc);\n \n   switch (target_mach)\n     {\n@@ -1519,7 +1497,6 @@ score_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   /* Dummy frame hooks.  */\n   set_gdbarch_return_value (gdbarch, score_return_value);\n   set_gdbarch_call_dummy_location (gdbarch, AT_ENTRY_POINT);\n-  set_gdbarch_dummy_id (gdbarch, score_dummy_id);\n   set_gdbarch_push_dummy_call (gdbarch, score_push_dummy_call);\n \n   /* Normal frame hooks.  */"
    }
  ]
}