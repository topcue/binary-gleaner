{
  "sha": "197400e8009fa9a15ddc59cbf2cc32b0debd3424",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTk3NDAwZTgwMDlmYTlhMTVkZGM1OWNiZjJjYzMyYjBkZWJkMzQyNA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-24T22:50:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-24T22:50:57Z"
    },
    "message": "Convert IS_TYPE_UNIT_GROUP to method\n\nThis converts the IS_TYPE_UNIT_GROUP to a method on\ndwarf2_per_cu_data.\n\ngdb/ChangeLog\n2020-02-24  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.h (struct dwarf2_per_cu_data) <type_unit_group_p>:\n\tNew method.\n\t* dwarf2/read.c (IS_TYPE_UNIT_GROUP): Remove.\n\t(dw2_do_instantiate_symtab, dw2_get_file_names)\n\t(build_type_psymtab_dependencies, load_full_type_unit): Update.",
    "tree": {
      "sha": "34d697618bc7011d70041c9e4bea4e17e6df4413",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/34d697618bc7011d70041c9e4bea4e17e6df4413"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/197400e8009fa9a15ddc59cbf2cc32b0debd3424",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/197400e8009fa9a15ddc59cbf2cc32b0debd3424",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/197400e8009fa9a15ddc59cbf2cc32b0debd3424",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/197400e8009fa9a15ddc59cbf2cc32b0debd3424/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7693576838f4fe66b2a2380425b5ad950c671b34",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7693576838f4fe66b2a2380425b5ad950c671b34",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7693576838f4fe66b2a2380425b5ad950c671b34"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 20,
    "deletions": 7
  },
  "files": [
    {
      "sha": "2507b9c7dd025601b02420a866ae7362d6488212",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/197400e8009fa9a15ddc59cbf2cc32b0debd3424/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/197400e8009fa9a15ddc59cbf2cc32b0debd3424/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=197400e8009fa9a15ddc59cbf2cc32b0debd3424",
      "patch": "@@ -1,3 +1,11 @@\n+2020-02-24  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.h (struct dwarf2_per_cu_data) <type_unit_group_p>:\n+\tNew method.\n+\t* dwarf2/read.c (IS_TYPE_UNIT_GROUP): Remove.\n+\t(dw2_do_instantiate_symtab, dw2_get_file_names)\n+\t(build_type_psymtab_dependencies, load_full_type_unit): Update.\n+\n 2020-02-24  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2read.c (dwarf2_build_psymtabs_hard): Use"
    },
    {
      "sha": "0f514eafe880b4a4efd6d2a7eacf7e0247e431de",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/197400e8009fa9a15ddc59cbf2cc32b0debd3424/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/197400e8009fa9a15ddc59cbf2cc32b0debd3424/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=197400e8009fa9a15ddc59cbf2cc32b0debd3424",
      "patch": "@@ -573,9 +573,7 @@ struct type_unit_group\n   /* dwarf2read.c's main \"handle\" on a TU symtab.\n      To simplify things we create an artificial CU that \"includes\" all the\n      type units using this stmt_list so that the rest of the code still has\n-     a \"per_cu\" handle on the symtab.\n-     This PER_CU is recognized by having no section.  */\n-#define IS_TYPE_UNIT_GROUP(per_cu) ((per_cu)->section == NULL)\n+     a \"per_cu\" handle on the symtab.  */\n   struct dwarf2_per_cu_data per_cu;\n \n   /* The TUs that share this DW_AT_stmt_list entry.\n@@ -2322,7 +2320,7 @@ dw2_do_instantiate_symtab (struct dwarf2_per_cu_data *per_cu, bool skip_partial)\n \n   /* Skip type_unit_groups, reading the type units they contain\n      is handled elsewhere.  */\n-  if (IS_TYPE_UNIT_GROUP (per_cu))\n+  if (per_cu->type_unit_group_p ())\n     return;\n \n   /* The destructor of dwarf2_queue_guard frees any entries left on\n@@ -3178,7 +3176,7 @@ dw2_get_file_names (struct dwarf2_per_cu_data *this_cu)\n   /* This should never be called for TUs.  */\n   gdb_assert (! this_cu->is_debug_types);\n   /* Nor type unit groups.  */\n-  gdb_assert (! IS_TYPE_UNIT_GROUP (this_cu));\n+  gdb_assert (! this_cu->type_unit_group_p ());\n \n   if (this_cu->v.quick->file_names != NULL)\n     return this_cu->v.quick->file_names;\n@@ -7583,7 +7581,7 @@ build_type_psymtab_dependencies (void **slot, void *info)\n   int i;\n \n   gdb_assert (len > 0);\n-  gdb_assert (IS_TYPE_UNIT_GROUP (per_cu));\n+  gdb_assert (per_cu->type_unit_group_p ());\n \n   pst->number_of_dependencies = len;\n   pst->dependencies = objfile->partial_symtabs->allocate_dependencies (len);\n@@ -22718,7 +22716,7 @@ load_full_type_unit (struct dwarf2_per_cu_data *per_cu)\n   struct signatured_type *sig_type;\n \n   /* Caller is responsible for ensuring type_unit_groups don't get here.  */\n-  gdb_assert (! IS_TYPE_UNIT_GROUP (per_cu));\n+  gdb_assert (! per_cu->type_unit_group_p ());\n \n   /* We have the per_cu, but we need the signatured_type.\n      Fortunately this is an easy translation.  */"
    },
    {
      "sha": "f7e740c3e9ec0eae524838c6dabb101778465799",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/197400e8009fa9a15ddc59cbf2cc32b0debd3424/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/197400e8009fa9a15ddc59cbf2cc32b0debd3424/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=197400e8009fa9a15ddc59cbf2cc32b0debd3424",
      "patch": "@@ -437,6 +437,13 @@ struct dwarf2_per_cu_data\n   {\n     return dwarf_version;\n   }\n+\n+  /* A type unit group has a per_cu object that is recognized by\n+     having no section.  */\n+  bool type_unit_group_p () const\n+  {\n+    return section == nullptr;\n+  }\n };\n \n /* Entry in the signatured_types hash table.  */"
    }
  ]
}