{
  "sha": "2d128614d4101354d8125449539dc3255c37d345",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmQxMjg2MTRkNDEwMTM1NGQ4MTI1NDQ5NTM5ZGMzMjU1YzM3ZDM0NQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-10-12T21:53:16Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-10-13T02:18:47Z"
    },
    "message": "build_section_table cannot fail\n\nI noticed that build_section_table cannot fail.  This patch changes it\nto return a target_section_table and then removes the dead code.\n\ngdb/ChangeLog\n2020-10-12  Tom Tromey  <tom@tromey.com>\n\n\t* solib.c (solib_map_sections): Update.\n\t* record-full.c (record_full_core_open_1): Update.\n\t* exec.h (build_section_table): Return a target_section_table.\n\t* exec.c (exec_file_attach): Update.\n\t(build_section_table): Return a target_section_table.\n\t* corelow.c (core_target::core_target): Update.\n\t* bfd-target.c (target_bfd::target_bfd): Update.",
    "tree": {
      "sha": "4d07bd7567401171c8ea9edd5cee5170b0a0f3b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4d07bd7567401171c8ea9edd5cee5170b0a0f3b9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2d128614d4101354d8125449539dc3255c37d345",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d128614d4101354d8125449539dc3255c37d345",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2d128614d4101354d8125449539dc3255c37d345",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d128614d4101354d8125449539dc3255c37d345/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bb2a67773c5e06545c39a6373be720c7d3d9eeb5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb2a67773c5e06545c39a6373be720c7d3d9eeb5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bb2a67773c5e06545c39a6373be720c7d3d9eeb5"
    }
  ],
  "stats": {
    "total": 65,
    "additions": 26,
    "deletions": 39
  },
  "files": [
    {
      "sha": "7a66a4ddeb827640bd193614d8158a02f7983205",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d128614d4101354d8125449539dc3255c37d345/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d128614d4101354d8125449539dc3255c37d345/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2d128614d4101354d8125449539dc3255c37d345",
      "patch": "@@ -1,3 +1,13 @@\n+2020-10-12  Tom Tromey  <tom@tromey.com>\n+\n+\t* solib.c (solib_map_sections): Update.\n+\t* record-full.c (record_full_core_open_1): Update.\n+\t* exec.h (build_section_table): Return a target_section_table.\n+\t* exec.c (exec_file_attach): Update.\n+\t(build_section_table): Return a target_section_table.\n+\t* corelow.c (core_target::core_target): Update.\n+\t* bfd-target.c (target_bfd::target_bfd): Update.\n+\n 2020-10-12  Tom Tromey  <tom@tromey.com>\n \n \t* target.c (target_section_by_addr, memory_xfer_partial_1):"
    },
    {
      "sha": "d5defab9a80dcf6189626a65c0a7bbaf6427c187",
      "filename": "gdb/bfd-target.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d128614d4101354d8125449539dc3255c37d345/gdb/bfd-target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d128614d4101354d8125449539dc3255c37d345/gdb/bfd-target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bfd-target.c?ref=2d128614d4101354d8125449539dc3255c37d345",
      "patch": "@@ -89,9 +89,9 @@ target_bfd::get_section_table ()\n }\n \n target_bfd::target_bfd (struct bfd *abfd)\n-  : m_bfd (gdb_bfd_ref_ptr::new_reference (abfd))\n+  : m_bfd (gdb_bfd_ref_ptr::new_reference (abfd)),\n+    m_table (build_section_table (abfd))\n {\n-  build_section_table (abfd, &m_table);\n }\n \n target_ops *"
    },
    {
      "sha": "193dccbeeb51760a3db8578ccdd4d4d5be3723d3",
      "filename": "gdb/corelow.c",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d128614d4101354d8125449539dc3255c37d345/gdb/corelow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d128614d4101354d8125449539dc3255c37d345/gdb/corelow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/corelow.c?ref=2d128614d4101354d8125449539dc3255c37d345",
      "patch": "@@ -161,9 +161,7 @@ core_target::core_target ()\n \t   bfd_get_filename (core_bfd));\n \n   /* Find the data section */\n-  if (build_section_table (core_bfd, &m_core_section_table))\n-    error (_(\"\\\"%s\\\": Can't find sections: %s\"),\n-\t   bfd_get_filename (core_bfd), bfd_errmsg (bfd_get_error ()));\n+  m_core_section_table = build_section_table (core_bfd);\n \n   build_file_mappings ();\n }"
    },
    {
      "sha": "d4b9b7bcf6576e49230598ebf48d4cb2cc07368f",
      "filename": "gdb/exec.c",
      "status": "modified",
      "additions": 9,
      "deletions": 19,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d128614d4101354d8125449539dc3255c37d345/gdb/exec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d128614d4101354d8125449539dc3255c37d345/gdb/exec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/exec.c?ref=2d128614d4101354d8125449539dc3255c37d345",
      "patch": "@@ -413,7 +413,6 @@ exec_file_attach (const char *filename, int from_tty)\n       int load_via_target = 0;\n       const char *scratch_pathname, *canonical_pathname;\n       int scratch_chan;\n-      target_section_table sections;\n       char **matching;\n \n       if (is_target_filename (filename))\n@@ -503,15 +502,7 @@ exec_file_attach (const char *filename, int from_tty)\n \t\t gdb_bfd_errmsg (bfd_get_error (), matching).c_str ());\n \t}\n \n-      if (build_section_table (exec_bfd, &sections))\n-\t{\n-\t  /* Make sure to close exec_bfd, or else \"run\" might try to use\n-\t     it.  */\n-\t  exec_close ();\n-\t  error (_(\"\\\"%ps\\\": can't find the file sections: %s\"),\n-\t\t styled_string (file_name_style.style (), scratch_pathname),\n-\t\t bfd_errmsg (bfd_get_error ()));\n-\t}\n+      target_section_table sections = build_section_table (exec_bfd);\n \n       exec_bfd_mtime = bfd_get_mtime (exec_bfd);\n \n@@ -594,13 +585,13 @@ clear_section_table (struct target_section_table *table)\n   table->sections.clear ();\n }\n \n-/* Builds a section table, given args BFD, TABLE.\n-   Returns 0 if OK, 1 on error.  */\n+/* Builds a section table, given args BFD, TABLE.  */\n \n-int\n-build_section_table (struct bfd *some_bfd, target_section_table *table)\n+target_section_table\n+build_section_table (struct bfd *some_bfd)\n {\n-  table->sections.clear ();\n+  target_section_table table;\n+\n   for (asection *asect : gdb_bfd_sections (some_bfd))\n     {\n       flagword aflag;\n@@ -615,16 +606,15 @@ build_section_table (struct bfd *some_bfd, target_section_table *table)\n       if (!(aflag & SEC_ALLOC))\n \tcontinue;\n \n-      table->sections.emplace_back ();\n-      target_section &sect = table->sections.back ();\n+      table.sections.emplace_back ();\n+      target_section &sect = table.sections.back ();\n       sect.owner = NULL;\n       sect.the_bfd_section = asect;\n       sect.addr = bfd_section_vma (asect);\n       sect.endaddr = sect.addr + bfd_section_size (asect);\n     }\n \n-  /* We could realloc the table, but it probably loses for most files.  */\n-  return 0;\n+  return table;\n }\n \n /* Add the sections array defined by [SECTIONS..SECTIONS_END[ to the"
    },
    {
      "sha": "75177dda96a6942d766c4e0ade152ca1dc7f9817",
      "filename": "gdb/exec.h",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d128614d4101354d8125449539dc3255c37d345/gdb/exec.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d128614d4101354d8125449539dc3255c37d345/gdb/exec.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/exec.h?ref=2d128614d4101354d8125449539dc3255c37d345",
      "patch": "@@ -34,10 +34,9 @@ struct objfile;\n #define exec_bfd_mtime current_program_space->ebfd_mtime\n #define exec_filename current_program_space->pspace_exec_filename\n \n-/* Builds a section table, given args BFD, SECTABLE_PTR, SECEND_PTR.\n-   Returns 0 if OK, 1 on error.  */\n+/* Builds a section table, given args BFD.  */\n \n-extern int build_section_table (struct bfd *, struct target_section_table *);\n+extern target_section_table build_section_table (struct bfd *);\n \n /* Remove all entries from TABLE.  */\n "
    },
    {
      "sha": "40740f216cea9f7c6b19a0381d44d48ecd4f8f7e",
      "filename": "gdb/record-full.c",
      "status": "modified",
      "additions": 1,
      "deletions": 7,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d128614d4101354d8125449539dc3255c37d345/gdb/record-full.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d128614d4101354d8125449539dc3255c37d345/gdb/record-full.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-full.c?ref=2d128614d4101354d8125449539dc3255c37d345",
      "patch": "@@ -923,13 +923,7 @@ record_full_core_open_1 (const char *name, int from_tty)\n   for (i = 0; i < regnum; i ++)\n     record_full_core_regbuf->raw_supply (i, *regcache);\n \n-  if (build_section_table (core_bfd, &record_full_core_sections))\n-    {\n-      delete record_full_core_regbuf;\n-      record_full_core_regbuf = NULL;\n-      error (_(\"\\\"%s\\\": Can't find sections: %s\"),\n-\t     bfd_get_filename (core_bfd), bfd_errmsg (bfd_get_error ()));\n-    }\n+  record_full_core_sections = build_section_table (core_bfd);\n \n   push_target (&record_full_core_ops);\n   record_full_restore ();"
    },
    {
      "sha": "bd6a27d89837dc9198d014ca285dc78c83566d6d",
      "filename": "gdb/solib.c",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d128614d4101354d8125449539dc3255c37d345/gdb/solib.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d128614d4101354d8125449539dc3255c37d345/gdb/solib.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib.c?ref=2d128614d4101354d8125449539dc3255c37d345",
      "patch": "@@ -554,11 +554,7 @@ solib_map_sections (struct so_list *so)\n \n   if (so->sections == nullptr)\n     so->sections = new target_section_table;\n-  if (build_section_table (so->abfd, so->sections))\n-    {\n-      error (_(\"Can't find the file sections in `%s': %s\"),\n-\t     bfd_get_filename (so->abfd), bfd_errmsg (bfd_get_error ()));\n-    }\n+  *so->sections = build_section_table (so->abfd);\n \n   for (target_section &p : so->sections->sections)\n     {"
    }
  ]
}