{
  "sha": "d12b8d620c6aba8e0bf650549949fec1d208a683",
  "node_id": "C_kwDOANOeidoAKGQxMmI4ZDYyMGM2YWJhOGUwYmY2NTA1NDk5NDlmZWMxZDIwOGE2ODM",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2022-02-15T04:05:14Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2022-02-16T08:45:40Z"
    },
    "message": "asan : use of uninitialized value in buffer_and_nest\n\n\t* macro.c (buffer_and_nest): Don't read past end of string buffer.",
    "tree": {
      "sha": "e5150238347029fdc3061903fa20735a26e2ded7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e5150238347029fdc3061903fa20735a26e2ded7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d12b8d620c6aba8e0bf650549949fec1d208a683",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d12b8d620c6aba8e0bf650549949fec1d208a683",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d12b8d620c6aba8e0bf650549949fec1d208a683",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d12b8d620c6aba8e0bf650549949fec1d208a683/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fe69d4fcf0194a37a151f513e56ec31e106f3002",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe69d4fcf0194a37a151f513e56ec31e106f3002",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fe69d4fcf0194a37a151f513e56ec31e106f3002"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 20,
    "deletions": 9
  },
  "files": [
    {
      "sha": "cbb9574fd667ab45fe8036d7ba4d7012fb788c58",
      "filename": "gas/macro.c",
      "status": "modified",
      "additions": 20,
      "deletions": 9,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d12b8d620c6aba8e0bf650549949fec1d208a683/gas/macro.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d12b8d620c6aba8e0bf650549949fec1d208a683/gas/macro.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/macro.c?ref=d12b8d620c6aba8e0bf650549949fec1d208a683",
      "patch": "@@ -184,22 +184,33 @@ buffer_and_nest (const char *from, const char *to, sb *ptr,\n \t{\n \t  if (! flag_m68k_mri && ptr->ptr[i] == '.')\n \t    i++;\n-\t  if (from == NULL\n-\t     && strncasecmp (ptr->ptr + i, \"IRPC\", from_len = 4) != 0\n-\t     && strncasecmp (ptr->ptr + i, \"IRP\", from_len = 3) != 0\n-\t     && strncasecmp (ptr->ptr + i, \"IREPC\", from_len = 5) != 0\n-\t     && strncasecmp (ptr->ptr + i, \"IREP\", from_len = 4) != 0\n-\t     && strncasecmp (ptr->ptr + i, \"REPT\", from_len = 4) != 0\n-\t     && strncasecmp (ptr->ptr + i, \"REP\", from_len = 3) != 0)\n-\t    from_len = 0;\n+\t  if (from == NULL)\n+\t    {\n+\t      size_t len = ptr->len - i;\n+\t      if (len >= 5 && strncasecmp (ptr->ptr + i, \"IREPC\", 5) == 0)\n+\t\tfrom_len = 5;\n+\t      else if (len >= 4 && strncasecmp (ptr->ptr + i, \"IREP\", 4) == 0)\n+\t\tfrom_len = 4;\n+\t      else if (len >= 4 && strncasecmp (ptr->ptr + i, \"IRPC\", 4) == 0)\n+\t\tfrom_len = 4;\n+\t      else if (len >= 4 && strncasecmp (ptr->ptr + i, \"REPT\", 4) == 0)\n+\t\tfrom_len = 4;\n+\t      else if (len >= 3 && strncasecmp (ptr->ptr + i, \"IRP\", 3) == 0)\n+\t\tfrom_len = 3;\n+\t      else if (len >= 3 && strncasecmp (ptr->ptr + i, \"REP\", 3) == 0)\n+\t\tfrom_len = 3;\n+\t      else\n+\t\tfrom_len = 0;\n+\t    }\n \t  if ((from != NULL\n \t       ? strncasecmp (ptr->ptr + i, from, from_len) == 0\n \t       : from_len > 0)\n \t      && (ptr->len == (i + from_len)\n \t\t  || ! (is_part_of_name (ptr->ptr[i + from_len])\n \t\t\t|| is_name_ender (ptr->ptr[i + from_len]))))\n \t    depth++;\n-\t  if (strncasecmp (ptr->ptr + i, to, to_len) == 0\n+\t  if (ptr->len - i >= to_len\n+\t      && strncasecmp (ptr->ptr + i, to, to_len) == 0\n \t      && (ptr->len == (i + to_len)\n \t\t  || ! (is_part_of_name (ptr->ptr[i + to_len])\n \t\t\t|| is_name_ender (ptr->ptr[i + to_len]))))"
    }
  ]
}