{
  "sha": "13ccd4c06fdccad1cb97f15878cd411aa22bf12f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTNjY2Q0YzA2ZmRjY2FkMWNiOTdmMTU4NzhjZDQxMWFhMjJiZjEyZg==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T10:44:19Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:36:10Z"
    },
    "message": "[PATCH 21/57][Arm][GAS] Add support for MVE instructions: vmaxv, vmaxav, vminv and vminav\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (M_MNEM_vmaxv, M_MNEM_vmaxav, M_MNEM_vminv,\n\t M_MNEM_vminav): New instruction encodings.\n\t(do_mve_vmaxv): New encoding function.\n\t(insns): Add entries for new MVE mnemonics.\n\t* testsuite/gas/arm/mve-vmaxv-vminv-bad.d: New test.\n\t* testsuite/gas/arm/mve-vmaxv-vminv-bad.l: New test.\n\t* testsuite/gas/arm/mve-vmaxv-vminv-bad.s: New test.",
    "tree": {
      "sha": "a68eab6b8f81965b44440d293d9c35cabafd1608",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a68eab6b8f81965b44440d293d9c35cabafd1608"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/13ccd4c06fdccad1cb97f15878cd411aa22bf12f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13ccd4c06fdccad1cb97f15878cd411aa22bf12f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/13ccd4c06fdccad1cb97f15878cd411aa22bf12f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13ccd4c06fdccad1cb97f15878cd411aa22bf12f/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8cd7817067daffd567fbe09a85b215b609c56e1d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8cd7817067daffd567fbe09a85b215b609c56e1d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8cd7817067daffd567fbe09a85b215b609c56e1d"
    }
  ],
  "stats": {
    "total": 162,
    "additions": 162,
    "deletions": 0
  },
  "files": [
    {
      "sha": "5333e1768e1a9dd343a38bdb14d3346f59281af7",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13ccd4c06fdccad1cb97f15878cd411aa22bf12f/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13ccd4c06fdccad1cb97f15878cd411aa22bf12f/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=13ccd4c06fdccad1cb97f15878cd411aa22bf12f",
      "patch": "@@ -1,3 +1,13 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (M_MNEM_vmaxv, M_MNEM_vmaxav, M_MNEM_vminv,\n+\t M_MNEM_vminav): New instruction encodings.\n+\t(do_mve_vmaxv): New encoding function.\n+\t(insns): Add entries for new MVE mnemonics.\n+\t* testsuite/gas/arm/mve-vmaxv-vminv-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vmaxv-vminv-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vmaxv-vminv-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (do_mve_vmaxnmv): New encoding function."
    },
    {
      "sha": "6dd13164e7c7a0e301d2471e179cacf0f453931a",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13ccd4c06fdccad1cb97f15878cd411aa22bf12f/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13ccd4c06fdccad1cb97f15878cd411aa22bf12f/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=13ccd4c06fdccad1cb97f15878cd411aa22bf12f",
      "patch": "@@ -14163,6 +14163,10 @@ do_t_loloop (void)\n #define M_MNEM_vdwdup\t0xee011f60\n #define M_MNEM_vidup\t0xee010f6e\n #define M_MNEM_viwdup\t0xee010f60\n+#define M_MNEM_vmaxv\t0xeee20f00\n+#define M_MNEM_vmaxav\t0xeee00f00\n+#define M_MNEM_vminv\t0xeee20f80\n+#define M_MNEM_vminav\t0xeee00f80\n \n /* Neon instruction encoder helpers.  */\n \n@@ -17268,6 +17272,31 @@ do_mve_vmaxnmv (void)\n   mve_encode_rq (et.size == 16, 64);\n }\n \n+static void\n+do_mve_vmaxv (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_RQ, NS_NULL);\n+  struct neon_type_el et;\n+\n+  if (inst.instruction == M_MNEM_vmaxv || inst.instruction == M_MNEM_vminv)\n+    et = neon_check_type (2, rs, N_EQK, N_SU_MVE | N_KEY);\n+  else\n+    et = neon_check_type (2, rs, N_EQK, N_S8 | N_S16 | N_S32 | N_KEY);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  if (inst.operands[0].reg == REG_SP)\n+    as_tsktsk (MVE_BAD_SP);\n+  else if (inst.operands[0].reg == REG_PC)\n+    as_tsktsk (MVE_BAD_PC);\n+\n+  mve_encode_rq (et.type == NT_unsigned, et.size);\n+}\n+\n+\n static void\n do_neon_qrdmlah (void)\n {\n@@ -24434,6 +24463,10 @@ static const struct asm_opcode insns[] =\n  mCEF(viwdup,\t_viwdup,    4, (RMQ, RRe, RR, EXPi),\t\t  mve_viddup),\n  mToC(\"vmaxa\",\tee330e81,   2, (RMQ, RMQ),\t\t\t  mve_vmaxa_vmina),\n  mToC(\"vmina\",\tee331e81,   2, (RMQ, RMQ),\t\t\t  mve_vmaxa_vmina),\n+ mCEF(vmaxv,\t_vmaxv,\t  2, (RR, RMQ),\t\t\t\t  mve_vmaxv),\n+ mCEF(vmaxav,\t_vmaxav,  2, (RR, RMQ),\t\t\t\t  mve_vmaxv),\n+ mCEF(vminv,\t_vminv,\t  2, (RR, RMQ),\t\t\t\t  mve_vmaxv),\n+ mCEF(vminav,\t_vminav,  2, (RR, RMQ),\t\t\t\t  mve_vmaxv),\n \n #undef THUMB_VARIANT\n #define THUMB_VARIANT & mve_fp_ext"
    },
    {
      "sha": "9dd5c3ee581b80cd660636ab487ffc0a75f6c603",
      "filename": "gas/testsuite/gas/arm/mve-vmaxv-vminv-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13ccd4c06fdccad1cb97f15878cd411aa22bf12f/gas/testsuite/gas/arm/mve-vmaxv-vminv-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13ccd4c06fdccad1cb97f15878cd411aa22bf12f/gas/testsuite/gas/arm/mve-vmaxv-vminv-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxv-vminv-bad.d?ref=13ccd4c06fdccad1cb97f15878cd411aa22bf12f",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VMAXV, VMAXAV, VMIMV and VMINAV instructions\n+#as: -march=armv8.1-m.main+mve\n+#error_output: mve-vmaxv-vminv-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "16d109d2d34856b79b17de7bc4ba9f26ae912f1c",
      "filename": "gas/testsuite/gas/arm/mve-vmaxv-vminv-bad.l",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13ccd4c06fdccad1cb97f15878cd411aa22bf12f/gas/testsuite/gas/arm/mve-vmaxv-vminv-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13ccd4c06fdccad1cb97f15878cd411aa22bf12f/gas/testsuite/gas/arm/mve-vmaxv-vminv-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxv-vminv-bad.l?ref=13ccd4c06fdccad1cb97f15878cd411aa22bf12f",
      "patch": "@@ -0,0 +1,57 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vmaxv.u64 r0,q1'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vmaxv.f16 r0,q1'\n+[^:]*:12: Error: bad type in SIMD instruction -- `vminv.s64 r0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vminv.f32 r0,q1'\n+[^:]*:14: Error: bad type in SIMD instruction -- `vmaxav.u16 r0,q1'\n+[^:]*:15: Error: bad type in SIMD instruction -- `vmaxav.f32 r0,q1'\n+[^:]*:16: Error: bad type in SIMD instruction -- `vminav.u32 r0,q1'\n+[^:]*:17: Error: bad type in SIMD instruction -- `vminav.f16 r0,q1'\n+[^:]*:18: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:19: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:20: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:21: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Error: syntax error -- `vmaxveq.s32 r0,q1'\n+[^:]*:28: Error: syntax error -- `vmaxveq.s32 r0,q1'\n+[^:]*:30: Error: syntax error -- `vmaxveq.s32 r0,q1'\n+[^:]*:31: Error: vector predicated instruction should be in VPT/VPST block -- `vmaxvt.s32 r0,q1'\n+[^:]*:33: Error: instruction missing MVE vector predication code -- `vmaxv.s32 r0,q1'\n+[^:]*:35: Error: syntax error -- `vmaxaveq.s32 r0,q1'\n+[^:]*:36: Error: syntax error -- `vmaxaveq.s32 r0,q1'\n+[^:]*:38: Error: syntax error -- `vmaxaveq.s32 r0,q1'\n+[^:]*:39: Error: vector predicated instruction should be in VPT/VPST block -- `vmaxavt.s32 r0,q1'\n+[^:]*:41: Error: instruction missing MVE vector predication code -- `vmaxav.s32 r0,q1'\n+[^:]*:43: Error: syntax error -- `vminveq.s32 r0,q1'\n+[^:]*:44: Error: syntax error -- `vminveq.s32 r0,q1'\n+[^:]*:46: Error: syntax error -- `vminveq.s32 r0,q1'\n+[^:]*:47: Error: vector predicated instruction should be in VPT/VPST block -- `vminvt.s32 r0,q1'\n+[^:]*:49: Error: instruction missing MVE vector predication code -- `vminv.s32 r0,q1'\n+[^:]*:51: Error: syntax error -- `vminaveq.s32 r0,q1'\n+[^:]*:52: Error: syntax error -- `vminaveq.s32 r0,q1'\n+[^:]*:54: Error: syntax error -- `vminaveq.s32 r0,q1'\n+[^:]*:55: Error: vector predicated instruction should be in VPT/VPST block -- `vminavt.s32 r0,q1'\n+[^:]*:57: Error: instruction missing MVE vector predication code -- `vminav.s32 r0,q1'"
    },
    {
      "sha": "e274a7a51c3869f26b04e20caf96486164ac73d8",
      "filename": "gas/testsuite/gas/arm/mve-vmaxv-vminv-bad.s",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13ccd4c06fdccad1cb97f15878cd411aa22bf12f/gas/testsuite/gas/arm/mve-vmaxv-vminv-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13ccd4c06fdccad1cb97f15878cd411aa22bf12f/gas/testsuite/gas/arm/mve-vmaxv-vminv-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxv-vminv-bad.s?ref=13ccd4c06fdccad1cb97f15878cd411aa22bf12f",
      "patch": "@@ -0,0 +1,57 @@\n+.macro cond, op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().s16 r0, q1\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vmaxv.u64 r0, q1\n+vmaxv.f16 r0, q1\n+vminv.s64 r0, q1\n+vminv.f32 r0, q1\n+vmaxav.u16 r0, q1\n+vmaxav.f32 r0, q1\n+vminav.u32 r0, q1\n+vminav.f16 r0, q1\n+vmaxv.s32 sp, q1\n+vmaxav.s32 pc, q1\n+vminv.s32 pc, q1\n+vminav.s32 sp, q1\n+cond vmaxv\n+cond vmaxav\n+cond vminv\n+cond vminav\n+it eq\n+vmaxveq.s32 r0, q1\n+vmaxveq.s32 r0, q1\n+vpst\n+vmaxveq.s32 r0, q1\n+vmaxvt.s32 r0, q1\n+vpst\n+vmaxv.s32 r0, q1\n+it eq\n+vmaxaveq.s32 r0, q1\n+vmaxaveq.s32 r0, q1\n+vpst\n+vmaxaveq.s32 r0, q1\n+vmaxavt.s32 r0, q1\n+vpst\n+vmaxav.s32 r0, q1\n+it eq\n+vminveq.s32 r0, q1\n+vminveq.s32 r0, q1\n+vpst\n+vminveq.s32 r0, q1\n+vminvt.s32 r0, q1\n+vpst\n+vminv.s32 r0, q1\n+it eq\n+vminaveq.s32 r0, q1\n+vminaveq.s32 r0, q1\n+vpst\n+vminaveq.s32 r0, q1\n+vminavt.s32 r0, q1\n+vpst\n+vminav.s32 r0, q1"
    }
  ]
}