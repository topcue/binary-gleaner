{
  "sha": "58d82c2c59814c6d3f56a4134a777ae6ec292460",
  "node_id": "C_kwDOANOeidoAKDU4ZDgyYzJjNTk4MTRjNmQzZjU2YTQxMzRhNzc3YWU2ZWMyOTI0NjA",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-10-05T23:27:58Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-10-05T23:27:58Z"
    },
    "message": "[gdb/testsuite] Add Term::dump_box in lib/tuiterm.exp\n\nFactor out new proc Term::get_region and use it to implement a\nnew proc Term::dump_box, similar to Term::dump_screen.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "2f962da7033ef70098c51081d77d1816cab60d89",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2f962da7033ef70098c51081d77d1816cab60d89"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/58d82c2c59814c6d3f56a4134a777ae6ec292460",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58d82c2c59814c6d3f56a4134a777ae6ec292460",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/58d82c2c59814c6d3f56a4134a777ae6ec292460",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58d82c2c59814c6d3f56a4134a777ae6ec292460/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1461d3712b921466015ab877b6e08ac27456a6a6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1461d3712b921466015ab877b6e08ac27456a6a6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1461d3712b921466015ab877b6e08ac27456a6a6"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 33,
    "deletions": 9
  },
  "files": [
    {
      "sha": "a0197402b1fff66543471e9aca55cb66a9162ddf",
      "filename": "gdb/testsuite/lib/tuiterm.exp",
      "status": "modified",
      "additions": 33,
      "deletions": 9,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58d82c2c59814c6d3f56a4134a777ae6ec292460/gdb/testsuite/lib/tuiterm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58d82c2c59814c6d3f56a4134a777ae6ec292460/gdb/testsuite/lib/tuiterm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/tuiterm.exp?ref=58d82c2c59814c6d3f56a4134a777ae6ec292460",
      "patch": "@@ -772,28 +772,38 @@ namespace eval Term {\n \t}\n     }\n \n-    # Check that the region of the screen described by X, Y, WIDTH,\n-    # and HEIGHT match REGEXP.  This is like check_contents except\n-    # only part of the screen is checked.  This can be used to check\n-    # the contents within a box (though check_box_contents is a better\n-    # choice for boxes with a border).\n-    proc check_region_contents { test_name x y width height regexp } {\n+    # Get the region of the screen described by X, Y, WIDTH,\n+    # and HEIGHT, and separate the lines using SEP.\n+    proc get_region { x y width height sep } {\n \tvariable _chars\n \n-\t# Now grab the contents of the box, join each line together\n-\t# with a '\\r\\n' sequence and match against REGEXP.\n+\t# Grab the contents of the box, join each line together\n+\t# using $sep.\n \tset result \"\"\n \tfor {set yy $y} {$yy < [expr {$y + $height}]} {incr yy} {\n \t    if {$yy > $y} {\n \t\t# Add the end of line sequence only if this isn't the\n \t\t# first line.\n-\t\tappend result \"\\r\\n\"\n+\t\tappend result $sep\n \t    }\n \t    for {set xx $x} {$xx < [expr {$x + $width}]} {incr xx} {\n \t\tappend result [lindex $_chars($xx,$yy) 0]\n \t    }\n \t}\n+\treturn $result\n+    }\n+\n+    # Check that the region of the screen described by X, Y, WIDTH,\n+    # and HEIGHT match REGEXP.  This is like check_contents except\n+    # only part of the screen is checked.  This can be used to check\n+    # the contents within a box (though check_box_contents is a better\n+    # choice for boxes with a border).\n+    proc check_region_contents { test_name x y width height regexp } {\n+\tvariable _chars\n \n+\t# Now grab the contents of the box, join each line together\n+\t# with a '\\r\\n' sequence and match against REGEXP.\n+\tset result [get_region $x $y $width $height \"\\r\\n\"]\n \tif {![gdb_assert {[regexp -- $regexp $result]} $test_name]} {\n \t    dump_screen\n \t}\n@@ -831,6 +841,20 @@ namespace eval Term {\n \t}\n     }\n \n+    # A debugging function to dump a box from the current screen, with line\n+    # numbers.\n+    proc dump_box { x y width height } {\n+\tverbose -log \"Box Dump ($width x $height) @ ($x, $y):\"\n+\tset region [get_region $x $y $width $height \"\\n\"]\n+\tset lines [split $region \"\\n\"]\n+\tset nr $y\n+\tforeach line $lines {\n+\t    set fmt [format %5d $nr]\n+\t    verbose -log \"$fmt $line\"\n+\t    incr nr\n+\t}\n+    }\n+\n     # Resize the terminal.\n     proc _do_resize {rows cols} {\n \tvariable _chars"
    }
  ]
}