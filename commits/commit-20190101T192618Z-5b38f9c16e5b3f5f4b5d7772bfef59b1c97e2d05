{
  "sha": "5b38f9c16e5b3f5f4b5d7772bfef59b1c97e2d05",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWIzOGY5YzE2ZTViM2Y1ZjRiNWQ3NzcyYmZlZjU5YjFjOTdlMmQwNQ==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2018-12-31T17:07:26Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-01-01T19:26:18Z"
    },
    "message": "Fix leak in print_one_catch_syscall.\n\nThe last text produced was not freed, causing the below leak\n(e.g. in gdb.base/catch-syscall.exp):\n\n==24970== 56 bytes in 12 blocks are definitely lost in loss record 626 of 3,289\n==24970==    at 0x4C2BE6D: malloc (vg_replace_malloc.c:309)\n==24970==    by 0x66B9C3F: __vasprintf_chk (vasprintf_chk.c:80)\n==24970==    by 0x405181: vasprintf (stdio2.h:210)\n==24970==    by 0x405181: xstrvprintf(char const*, __va_list_tag*) (common-utils.c:122)\n==24970==    by 0x40524B: xstrprintf(char const*, ...) (common-utils.c:113)\n==24970==    by 0x3B49DB: print_one_catch_syscall(breakpoint*, bp_location**) (break-catch-syscall.c:275)\n==24970==    by 0x3C698F: print_one_breakpoint_location(breakpoint*, bp_location*, int, bp_location**, int) (breakpoint.c:6076)\n==24970==    by 0x3C75B1: print_one_breakpoint(breakpoint*, bp_location**, int) (breakpoint.c:6373)\n==24970==    by 0x3C7D0E: breakpoint_1(char const*, int, int (*)(breakpoint const*)) (breakpoint.c:6571)\n==24970==    by 0x3C822C: info_breakpoints_command(char const*, int) (breakpoint.c:6625)\n\n2019-01-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* break-catch-syscall.c (print_one_catch_syscall): xfree\n\tthe last text.",
    "tree": {
      "sha": "ed9e10767d7c8f308fb1cdd058e4feaf1cfe7236",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ed9e10767d7c8f308fb1cdd058e4feaf1cfe7236"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5b38f9c16e5b3f5f4b5d7772bfef59b1c97e2d05",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b38f9c16e5b3f5f4b5d7772bfef59b1c97e2d05",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5b38f9c16e5b3f5f4b5d7772bfef59b1c97e2d05",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b38f9c16e5b3f5f4b5d7772bfef59b1c97e2d05/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "827041555ac443bd57340060f3e034fd7b199dd8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/827041555ac443bd57340060f3e034fd7b199dd8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/827041555ac443bd57340060f3e034fd7b199dd8"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 11,
    "deletions": 5
  },
  "files": [
    {
      "sha": "2402d7358756c247060d52d7ca6c50cc7c5be417",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b38f9c16e5b3f5f4b5d7772bfef59b1c97e2d05/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b38f9c16e5b3f5f4b5d7772bfef59b1c97e2d05/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5b38f9c16e5b3f5f4b5d7772bfef59b1c97e2d05",
      "patch": "@@ -1,3 +1,8 @@\n+2019-01-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* break-catch-syscall.c (print_one_catch_syscall): xfree\n+\tthe last text.\n+\n 2019-01-01  Joel Brobecker  <brobecker@adacore.com>\n \n \t* top.c (print_gdb_version): Update Copyright year in version"
    },
    {
      "sha": "6a911fbc2a3aa470adbe3ab25b633c670d79778b",
      "filename": "gdb/break-catch-syscall.c",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b38f9c16e5b3f5f4b5d7772bfef59b1c97e2d05/gdb/break-catch-syscall.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b38f9c16e5b3f5f4b5d7772bfef59b1c97e2d05/gdb/break-catch-syscall.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/break-catch-syscall.c?ref=5b38f9c16e5b3f5f4b5d7772bfef59b1c97e2d05",
      "patch": "@@ -265,7 +265,7 @@ print_one_catch_syscall (struct breakpoint *b,\n \n       for (int iter : c->syscalls_to_be_caught)\n         {\n-          char *x = text;\n+          char *previous_text = text;\n           struct syscall s;\n           get_syscall_by_number (gdbarch, iter, &s);\n \n@@ -274,14 +274,15 @@ print_one_catch_syscall (struct breakpoint *b,\n           else\n             text = xstrprintf (\"%s%d, \", text, iter);\n \n-          /* We have to xfree the last 'text' (now stored at 'x')\n-             because xstrprintf dynamically allocates new space for it\n-             on every call.  */\n-\t  xfree (x);\n+          /* We have to xfree previous_text because xstrprintf dynamically\n+\t     allocates new space for text on every call.  */\n+\t  xfree (previous_text);\n         }\n       /* Remove the last comma.  */\n       text[strlen (text) - 2] = '\\0';\n       uiout->field_string (\"what\", text);\n+      /* xfree last text.  */\n+      xfree (text);\n     }\n   else\n     uiout->field_string (\"what\", \"<any syscall>\");"
    }
  ]
}