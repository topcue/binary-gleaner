{
  "sha": "db972fce46368f7d2a60e43aca78f0757515c0c8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGI5NzJmY2U0NjM2OGY3ZDJhNjBlNDNhY2E3OGYwNzU3NTE1YzBjOA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-13T16:57:24Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-13T16:57:24Z"
    },
    "message": "gdb: bool-ify ext_lang_auto_load_enabled and friends\n\nMake it and related functions return bool.  Move function comments to\nheader where applicable.\n\ngdb/ChangeLog:\n\n\t* auto-load.h (auto_load_gdb_scripts_enabled): Return bool, move\n\tcomment here.\n\t* auto-load.c (auto_load_gdb_scripts_enabled): Return bool, move\n\tcomment to header.\n\t* extension-priv.h (struct extension_language_script_ops)\n\t<auto_load_enabled>: Return bool.\n\t* extension.h (ext_lang_auto_load_enabled): Return bool, move\n\tcomment here.\n\t* extension.c (ext_lang_auto_load_enabled): Return bool, move\n\tcomment to header.\n\t* guile/guile-header.h (gdbscm_auto_load_enabled): Return bool,\n\tmove comment here.\n\t* guile/scm-auto-load.c (gdbscm_auto_load_enabled): Return bool,\n\tmove comment to header.\n\t* python/python-header.h (gdbpy_auto_load_enabled): Return bool,\n\tmove comment here.\n\t* python/py-auto-load.c (gdbpy_auto_load_enabled): Return bool,\n\tmove comment to header.\n\nChange-Id: I657a17d2dab77a36884a137ce9b23a2cc6d53140",
    "tree": {
      "sha": "d447ae34443d4a8d46728ff9c04ffe9ff124bcac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d447ae34443d4a8d46728ff9c04ffe9ff124bcac"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/db972fce46368f7d2a60e43aca78f0757515c0c8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db972fce46368f7d2a60e43aca78f0757515c0c8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/db972fce46368f7d2a60e43aca78f0757515c0c8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db972fce46368f7d2a60e43aca78f0757515c0c8/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5e12f48ffbf5eba4524fdbae341f091c7cd0cb72",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e12f48ffbf5eba4524fdbae341f091c7cd0cb72",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5e12f48ffbf5eba4524fdbae341f091c7cd0cb72"
    }
  ],
  "stats": {
    "total": 63,
    "additions": 46,
    "deletions": 17
  },
  "files": [
    {
      "sha": "e9f7982cf00a6a4abeca8b55e43f13efd6fc9b77",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=db972fce46368f7d2a60e43aca78f0757515c0c8",
      "patch": "@@ -1,3 +1,24 @@\n+2021-01-13  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* auto-load.h (auto_load_gdb_scripts_enabled): Return bool, move\n+\tcomment here.\n+\t* auto-load.c (auto_load_gdb_scripts_enabled): Return bool, move\n+\tcomment to header.\n+\t* extension-priv.h (struct extension_language_script_ops)\n+\t<auto_load_enabled>: Return bool.\n+\t* extension.h (ext_lang_auto_load_enabled): Return bool, move\n+\tcomment here.\n+\t* extension.c (ext_lang_auto_load_enabled): Return bool, move\n+\tcomment to header.\n+\t* guile/guile-header.h (gdbscm_auto_load_enabled): Return bool,\n+\tmove comment here.\n+\t* guile/scm-auto-load.c (gdbscm_auto_load_enabled): Return bool,\n+\tmove comment to header.\n+\t* python/python-header.h (gdbpy_auto_load_enabled): Return bool,\n+\tmove comment here.\n+\t* python/py-auto-load.c (gdbpy_auto_load_enabled): Return bool,\n+\tmove comment to header.\n+\n 2021-01-13  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* auto-load.h (file_is_auto_load_safe): Change return type to"
    },
    {
      "sha": "0d5532b4882e4789de39a92a2cb8f990b24e6550",
      "filename": "gdb/auto-load.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/auto-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/auto-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/auto-load.c?ref=db972fce46368f7d2a60e43aca78f0757515c0c8",
      "patch": "@@ -93,9 +93,9 @@ show_auto_load_gdb_scripts (struct ui_file *file, int from_tty,\n \t\t    value);\n }\n \n-/* Return non-zero if auto-loading gdb scripts is enabled.  */\n+/* See auto-load.h.  */\n \n-int\n+bool\n auto_load_gdb_scripts_enabled (const struct extension_language_defn *extlang)\n {\n   return auto_load_gdb_scripts;"
    },
    {
      "sha": "ec802395d3ed0ee84ea2c411878f924b9fb908c9",
      "filename": "gdb/auto-load.h",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/auto-load.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/auto-load.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/auto-load.h?ref=db972fce46368f7d2a60e43aca78f0757515c0c8",
      "patch": "@@ -56,7 +56,9 @@ extern bool file_is_auto_load_safe (const char *filename,\n \t\t\t\t    const char *debug_fmt, ...)\n   ATTRIBUTE_PRINTF (2, 3);\n \n-extern int auto_load_gdb_scripts_enabled\n+/* Return true if auto-loading gdb scripts is enabled.  */\n+\n+extern bool auto_load_gdb_scripts_enabled\n   (const struct extension_language_defn *extlang);\n \n #endif /* AUTO_LOAD_H */"
    },
    {
      "sha": "1b6701ba6cc9c27479010595b7fa4e47482f462e",
      "filename": "gdb/extension-priv.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/extension-priv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/extension-priv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/extension-priv.h?ref=db972fce46368f7d2a60e43aca78f0757515c0c8",
      "patch": "@@ -92,7 +92,7 @@ struct extension_language_script_ops\n \n   /* Return non-zero if auto-loading scripts in this extension language\n      is enabled.  */\n-  int (*auto_load_enabled) (const struct extension_language_defn *);\n+  bool (*auto_load_enabled) (const struct extension_language_defn *);\n };\n \n /* The interface for making calls from GDB to an external extension"
    },
    {
      "sha": "0e0d42685fc7e44d698c9245c893f075e61d66c6",
      "filename": "gdb/extension.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/extension.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/extension.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/extension.c?ref=db972fce46368f7d2a60e43aca78f0757515c0c8",
      "patch": "@@ -282,14 +282,13 @@ ext_lang_objfile_script_executor\n   return extlang->script_ops->objfile_script_executor;\n }\n \n-/* Return non-zero if auto-loading of EXTLANG scripts is enabled.\n-   Zero is returned if support for this language isn't compiled in.  */\n+/* See extension.h.  */\n \n-int\n+bool\n ext_lang_auto_load_enabled (const struct extension_language_defn *extlang)\n {\n   if (extlang->script_ops == NULL)\n-    return 0;\n+    return false;\n \n   /* The extension language is required to implement this function.  */\n   gdb_assert (extlang->script_ops->auto_load_enabled != NULL);"
    },
    {
      "sha": "a505c68d25e8be3994c4637cf382674271d9e763",
      "filename": "gdb/extension.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/extension.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/extension.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/extension.h?ref=db972fce46368f7d2a60e43aca78f0757515c0c8",
      "patch": "@@ -268,7 +268,10 @@ extern objfile_script_sourcer_func *ext_lang_objfile_script_sourcer\n extern objfile_script_executor_func *ext_lang_objfile_script_executor\n   (const struct extension_language_defn *);\n \n-extern int ext_lang_auto_load_enabled (const struct extension_language_defn *);\n+/* Return true if auto-loading of EXTLANG scripts is enabled.\n+   False is returned if support for this language isn't compiled in.  */\n+\n+extern bool ext_lang_auto_load_enabled (const struct extension_language_defn *);\n \n /* Wrappers for each extension language API function that iterate over all\n    extension languages.  */"
    },
    {
      "sha": "c48547a41cde76bdd484e5cbfcdd8fa703b23a97",
      "filename": "gdb/guile/guile-internal.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/guile/guile-internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/guile/guile-internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/guile-internal.h?ref=db972fce46368f7d2a60e43aca78f0757515c0c8",
      "patch": "@@ -595,7 +595,10 @@ extern struct value *vlscm_convert_value_from_scheme\n extern objfile_script_sourcer_func gdbscm_source_objfile_script;\n extern objfile_script_executor_func gdbscm_execute_objfile_script;\n \n-extern int gdbscm_auto_load_enabled (const struct extension_language_defn *);\n+/* Return true if auto-loading Guile scripts is enabled.\n+   This is the extension_language_script_ops.auto_load_enabled \"method\".  */\n+\n+extern bool gdbscm_auto_load_enabled (const struct extension_language_defn *);\n \n extern void gdbscm_preserve_values\n   (const struct extension_language_defn *,"
    },
    {
      "sha": "569a47f69ca3ba5d2c435338e8c5fe0b08a4c4d8",
      "filename": "gdb/guile/scm-auto-load.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/guile/scm-auto-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/guile/scm-auto-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-auto-load.c?ref=db972fce46368f7d2a60e43aca78f0757515c0c8",
      "patch": "@@ -41,10 +41,9 @@ show_auto_load_guile_scripts (struct ui_file *file, int from_tty,\n   fprintf_filtered (file, _(\"Auto-loading of Guile scripts is %s.\\n\"), value);\n }\n \n-/* Return non-zero if auto-loading Guile scripts is enabled.\n-   This is the extension_language_script_ops.auto_load_enabled \"method\".  */\n+/* See guile-internal.h.  */\n \n-int\n+bool\n gdbscm_auto_load_enabled (const struct extension_language_defn *extlang)\n {\n   return auto_load_guile_scripts;"
    },
    {
      "sha": "3b279312e888152524b2cc89a60198f61b4d2798",
      "filename": "gdb/python/py-auto-load.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/python/py-auto-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/python/py-auto-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-auto-load.c?ref=db972fce46368f7d2a60e43aca78f0757515c0c8",
      "patch": "@@ -40,10 +40,9 @@ show_auto_load_python_scripts (struct ui_file *file, int from_tty,\n   fprintf_filtered (file, _(\"Auto-loading of Python scripts is %s.\\n\"), value);\n }\n \n-/* Return non-zero if auto-loading Python scripts is enabled.\n-   This is the extension_language_script_ops.auto_load_enabled \"method\".  */\n+/* See python-internal.h.  */\n \n-int\n+bool\n gdbpy_auto_load_enabled (const struct extension_language_defn *extlang)\n {\n   return auto_load_python_scripts;"
    },
    {
      "sha": "56702cad53a0a54c8f2f951123c602f8668d7957",
      "filename": "gdb/python/python-internal.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/python/python-internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db972fce46368f7d2a60e43aca78f0757515c0c8/gdb/python/python-internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python-internal.h?ref=db972fce46368f7d2a60e43aca78f0757515c0c8",
      "patch": "@@ -379,7 +379,10 @@ extern struct cmd_list_element *show_python_list;\n \f\n /* extension_language_script_ops \"methods\".  */\n \n-extern int gdbpy_auto_load_enabled (const struct extension_language_defn *);\n+/* Return true if auto-loading Python scripts is enabled.\n+   This is the extension_language_script_ops.auto_load_enabled \"method\".  */\n+\n+extern bool gdbpy_auto_load_enabled (const struct extension_language_defn *);\n \n /* extension_language_ops \"methods\".  */\n "
    }
  ]
}