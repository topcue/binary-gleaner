{
  "sha": "6c412691f9a2c9adaa3fdd057dcad6dcd68f13ec",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmM0MTI2OTFmOWEyYzlhZGFhM2ZkZDA1N2RjYWQ2ZGNkNjhmMTNlYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-30T00:49:08Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-30T02:29:06Z"
    },
    "message": "Avoid using DW_* macros in dwarf2/attribute.c\n\nThere's no need to use the DW_* accessor macros in dwarf2/attribute.c,\nand this is a necessary step toward our goal of removing them\nentirely.\n\ngdb/ChangeLog\n2020-09-29  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/attribute.c (attribute::address): Don't use DW_UNSND or\n\tDW_ADDR.\n\t(attribute::string): Don't use DW_STRING.\n\t(attribute::get_ref_die_offset): Don't use DW_UNSND.\n\t(attribute::constant_value): Don't use DW_UNSND or DW_SND.",
    "tree": {
      "sha": "81cc4b23f8a9f97b09fc4f39fdf295f911a183d8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/81cc4b23f8a9f97b09fc4f39fdf295f911a183d8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6c412691f9a2c9adaa3fdd057dcad6dcd68f13ec",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6c412691f9a2c9adaa3fdd057dcad6dcd68f13ec",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6c412691f9a2c9adaa3fdd057dcad6dcd68f13ec",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6c412691f9a2c9adaa3fdd057dcad6dcd68f13ec/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "95f982e587ddd0bf9a4799853982e7cc726280ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95f982e587ddd0bf9a4799853982e7cc726280ad",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/95f982e587ddd0bf9a4799853982e7cc726280ad"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 13,
    "deletions": 5
  },
  "files": [
    {
      "sha": "b78cffe5978aac07b054bad9f5f2e1113bd10253",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6c412691f9a2c9adaa3fdd057dcad6dcd68f13ec/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6c412691f9a2c9adaa3fdd057dcad6dcd68f13ec/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6c412691f9a2c9adaa3fdd057dcad6dcd68f13ec",
      "patch": "@@ -1,3 +1,11 @@\n+2020-09-29  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/attribute.c (attribute::address): Don't use DW_UNSND or\n+\tDW_ADDR.\n+\t(attribute::string): Don't use DW_STRING.\n+\t(attribute::get_ref_die_offset): Don't use DW_UNSND.\n+\t(attribute::constant_value): Don't use DW_UNSND or DW_SND.\n+\n 2020-09-29  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.c (dwarf2_find_base_address, read_call_site_scope)"
    },
    {
      "sha": "af24d660918c8e6766fa50c0d77ae8b66a7d0953",
      "filename": "gdb/dwarf2/attribute.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6c412691f9a2c9adaa3fdd057dcad6dcd68f13ec/gdb/dwarf2/attribute.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6c412691f9a2c9adaa3fdd057dcad6dcd68f13ec/gdb/dwarf2/attribute.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/attribute.c?ref=6c412691f9a2c9adaa3fdd057dcad6dcd68f13ec",
      "patch": "@@ -51,10 +51,10 @@ attribute::as_address () const\n \t as well as update callers to pass in at least the CU's DWARF\n \t version.  This is more overhead than what we're willing to\n \t expand for a pretty rare case.  */\n-      addr = DW_UNSND (this);\n+      addr = u.unsnd;\n     }\n   else\n-    addr = DW_ADDR (this);\n+    addr = u.addr;\n \n   return addr;\n }\n@@ -73,7 +73,7 @@ attribute::as_string () const\n       || form == DW_FORM_strx4\n       || form == DW_FORM_GNU_str_index\n       || form == DW_FORM_GNU_strp_alt)\n-    return DW_STRING (this);\n+    return u.str;\n   return nullptr;\n }\n \n@@ -135,13 +135,13 @@ LONGEST\n attribute::constant_value (int default_value) const\n {\n   if (form == DW_FORM_sdata || form == DW_FORM_implicit_const)\n-    return DW_SND (this);\n+    return u.snd;\n   else if (form == DW_FORM_udata\n \t   || form == DW_FORM_data1\n \t   || form == DW_FORM_data2\n \t   || form == DW_FORM_data4\n \t   || form == DW_FORM_data8)\n-    return DW_UNSND (this);\n+    return u.unsnd;\n   else\n     {\n       /* For DW_FORM_data16 see attribute::form_is_constant.  */"
    }
  ]
}