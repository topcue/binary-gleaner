{
  "sha": "d9790e22f44ecada1d0fd53cc82227677d1222cb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDk3OTBlMjJmNDRlY2FkYTFkMGZkNTNjYzgyMjI3Njc3ZDEyMjJjYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:00Z"
    },
    "message": "Split out eval_op_sub\n\nThis splits BINOP_SUB into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (eval_op_sub): New function.\n\t(evaluate_subexp_standard): Use it.",
    "tree": {
      "sha": "680ae70c84078ad198ac7bcf32a2da569062f4fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/680ae70c84078ad198ac7bcf32a2da569062f4fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d9790e22f44ecada1d0fd53cc82227677d1222cb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9790e22f44ecada1d0fd53cc82227677d1222cb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d9790e22f44ecada1d0fd53cc82227677d1222cb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9790e22f44ecada1d0fd53cc82227677d1222cb/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "aedaf9ac06d60186e2b593ee468179f8132a2510",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aedaf9ac06d60186e2b593ee468179f8132a2510",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/aedaf9ac06d60186e2b593ee468179f8132a2510"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 34,
    "deletions": 19
  },
  "files": [
    {
      "sha": "7533e9b2b1fceb1a60c675c814343a75b13793fa",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9790e22f44ecada1d0fd53cc82227677d1222cb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9790e22f44ecada1d0fd53cc82227677d1222cb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d9790e22f44ecada1d0fd53cc82227677d1222cb",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (eval_op_sub): New function.\n+\t(evaluate_subexp_standard): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (eval_op_add): New function."
    },
    {
      "sha": "ba1872336c13dd9c1f00eb92c014b25ab241fe80",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 29,
      "deletions": 19,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9790e22f44ecada1d0fd53cc82227677d1222cb/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9790e22f44ecada1d0fd53cc82227677d1222cb/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=d9790e22f44ecada1d0fd53cc82227677d1222cb",
      "patch": "@@ -1480,6 +1480,34 @@ eval_op_add (struct type *expect_type, struct expression *exp,\n     }\n }\n \n+/* A helper function for BINOP_SUB.  */\n+\n+static struct value *\n+eval_op_sub (struct type *expect_type, struct expression *exp,\n+\t     enum noside noside, enum exp_opcode op,\n+\t     struct value *arg1, struct value *arg2)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+  if (binop_user_defined_p (op, arg1, arg2))\n+    return value_x_binop (arg1, arg2, op, OP_NULL, noside);\n+  else if (ptrmath_type_p (exp->language_defn, value_type (arg1))\n+\t   && ptrmath_type_p (exp->language_defn, value_type (arg2)))\n+    {\n+      /* FIXME -- should be ptrdiff_t */\n+      struct type *type = builtin_type (exp->gdbarch)->builtin_long;\n+      return value_from_longest (type, value_ptrdiff (arg1, arg2));\n+    }\n+  else if (ptrmath_type_p (exp->language_defn, value_type (arg1))\n+\t   && is_integral_or_integral_reference (value_type (arg2)))\n+    return value_ptradd (arg1, - value_as_long (arg2));\n+  else\n+    {\n+      binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n+      return value_binop (arg1, arg2, BINOP_SUB);\n+    }\n+}\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,\n@@ -2171,25 +2199,7 @@ evaluate_subexp_standard (struct type *expect_type,\n     case BINOP_SUB:\n       arg1 = evaluate_subexp_with_coercion (exp, pos, noside);\n       arg2 = evaluate_subexp_with_coercion (exp, pos, noside);\n-      if (noside == EVAL_SKIP)\n-\treturn eval_skip_value (exp);\n-      if (binop_user_defined_p (op, arg1, arg2))\n-\treturn value_x_binop (arg1, arg2, op, OP_NULL, noside);\n-      else if (ptrmath_type_p (exp->language_defn, value_type (arg1))\n-\t       && ptrmath_type_p (exp->language_defn, value_type (arg2)))\n-\t{\n-\t  /* FIXME -- should be ptrdiff_t */\n-\t  type = builtin_type (exp->gdbarch)->builtin_long;\n-\t  return value_from_longest (type, value_ptrdiff (arg1, arg2));\n-\t}\n-      else if (ptrmath_type_p (exp->language_defn, value_type (arg1))\n-\t       && is_integral_or_integral_reference (value_type (arg2)))\n-\treturn value_ptradd (arg1, - value_as_long (arg2));\n-      else\n-\t{\n-\t  binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n-\t  return value_binop (arg1, arg2, BINOP_SUB);\n-\t}\n+      return eval_op_sub (expect_type, exp, noside, op, arg1, arg2);\n \n     case BINOP_EXP:\n     case BINOP_MUL:"
    }
  ]
}