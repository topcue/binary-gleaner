{
  "sha": "17d60030ae57fb53f5977fa6928d7d5006f42881",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTdkNjAwMzBhZTU3ZmI1M2Y1OTc3ZmE2OTI4ZDdkNTAwNmY0Mjg4MQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-01-07T12:04:15Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-01-07T12:05:43Z"
    },
    "message": "Fix another path length problem opening files on Win32 systems.\n\n\tPR 25713\n\t* bfdio.c (_bfd_real_fopen): For Win32 convert relative paths to\n\tabsolute paths and check to see if they are longer than MAX_PATH.",
    "tree": {
      "sha": "03056339f414ae52e055847569a1705458e56241",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/03056339f414ae52e055847569a1705458e56241"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/17d60030ae57fb53f5977fa6928d7d5006f42881",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17d60030ae57fb53f5977fa6928d7d5006f42881",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/17d60030ae57fb53f5977fa6928d7d5006f42881",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17d60030ae57fb53f5977fa6928d7d5006f42881/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "78e49486944c515dfed6a437edff4c2c15dd1d4e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/78e49486944c515dfed6a437edff4c2c15dd1d4e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/78e49486944c515dfed6a437edff4c2c15dd1d4e"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 27,
    "deletions": 2
  },
  "files": [
    {
      "sha": "ec3ab0a1f750216e267cd10dbcc723d6f7497018",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17d60030ae57fb53f5977fa6928d7d5006f42881/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17d60030ae57fb53f5977fa6928d7d5006f42881/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=17d60030ae57fb53f5977fa6928d7d5006f42881",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-07  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25713\n+\t* bfdio.c (_bfd_real_fopen): For Win32 convert relative paths to\n+\tabsolute paths and check to see if they are longer than MAX_PATH.\n+\n 2021-01-07  Philipp Tomsich  <prt@gnu.org>\n \n \t* elfxx-riscv.c (riscv_std_z_ext_strtab): Added zihintpause."
    },
    {
      "sha": "463b3879c52ba6beac47190f8eb0810b0c330e65",
      "filename": "bfd/bfdio.c",
      "status": "modified",
      "additions": 21,
      "deletions": 2,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17d60030ae57fb53f5977fa6928d7d5006f42881/bfd/bfdio.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17d60030ae57fb53f5977fa6928d7d5006f42881/bfd/bfdio.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfdio.c?ref=17d60030ae57fb53f5977fa6928d7d5006f42881",
      "patch": "@@ -116,14 +116,33 @@ _bfd_real_fopen (const char *filename, const char *modes)\n     }\n \n #elif defined (_WIN32)\n-  size_t filelen = strlen (filename) + 1;\n+  size_t filelen;\n+\n+  /* PR 25713: Handle extra long path names.\n+     For relative paths, convert them to absolute, in case that version is too long.  */\n+  if (! IS_ABSOLUTE_PATH (filename) && (strstr (filename, \".o\") != NULL))\n+    {\n+      char cwd[1024];\n+\n+      getcwd (cwd, sizeof (cwd));\n+      filelen = strlen (cwd) + 1;\n+      strncat (cwd, \"\\\\\", sizeof (cwd) - filelen);\n+      ++ filelen;\n+      strncat (cwd, filename, sizeof (cwd) - filelen);\n+\n+      filename = cwd;\n+    }\n+\n+  filelen = strlen (filename) + 1;\n \n   if (filelen > MAX_PATH - 1)\n     {\n       FILE * file;\n-      char * fullpath = (char *) malloc (filelen + 8);\n+      char * fullpath;\n       int    i;\n \n+      fullpath = (char *) malloc (filelen + 8);\n+\n       /* Add a Microsoft recommended prefix that\n \t will allow the extra-long path to work.  */\n       strcpy (fullpath, \"\\\\\\\\?\\\\\");"
    }
  ]
}