{
  "sha": "77c8aaf716d9f93dc5850f8b2481da5eb7a53662",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzdjOGFhZjcxNmQ5ZjkzZGM1ODUwZjhiMjQ4MWRhNWViN2E1MzY2Mg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-12-15T09:18:23Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-12-15T09:18:23Z"
    },
    "message": "[gdb/testsuite] Handle PS1 quirk in gdb.base/multi-line-starts-subshell.exp\n\nOn SLE-11, I run into:\n...\n(gdb) if 1^M\n >shell HOME=/dev/null PS1=\"gdb-subshell$ \" /bin/sh^M\n >end^M\nhostname:/dir> FAIL: gdb.base/multi-line-starts-subshell.exp: \\\n  spawn subshell from multi-line (timeout)\n...\n\nThe problem is that the PS1 setting has no effect, due to a bug on older\nopenSUSE/SLE version.  The mechanism there is:\n- /etc/profile sets ENV=/etc/bash.bashrc\n- /bin/sh is started\n- /bin/sh executes ENV, in other words /etc/bash.bashrc\n- during the execution of /etc/bash.bashrc, PS1 is set unconditionally\n\nFix this by setting PS1 after spawning the subshell.\n\nTested on x86_64-linux.\n\n2020-12-15  Tom de Vries  <tdevries@suse.de>\n\n\tPR testsuite/26952\n\t* gdb.base/multi-line-starts-subshell.exp: Set PS1 after spawning\n\tshell.",
    "tree": {
      "sha": "b97d2603184b88019d2b132d005f12834dacdd87",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b97d2603184b88019d2b132d005f12834dacdd87"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/77c8aaf716d9f93dc5850f8b2481da5eb7a53662",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77c8aaf716d9f93dc5850f8b2481da5eb7a53662",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/77c8aaf716d9f93dc5850f8b2481da5eb7a53662",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77c8aaf716d9f93dc5850f8b2481da5eb7a53662/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8a87b2791181eb7fc1533ffaeb95df8d87d41493",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a87b2791181eb7fc1533ffaeb95df8d87d41493",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8a87b2791181eb7fc1533ffaeb95df8d87d41493"
    }
  ],
  "stats": {
    "total": 6,
    "additions": 3,
    "deletions": 3
  },
  "files": [
    {
      "sha": "dc6d70582a8ec0dd98365b3d657b60358ef5564a",
      "filename": "gdb/testsuite/gdb.base/multi-line-starts-subshell.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77c8aaf716d9f93dc5850f8b2481da5eb7a53662/gdb/testsuite/gdb.base/multi-line-starts-subshell.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77c8aaf716d9f93dc5850f8b2481da5eb7a53662/gdb/testsuite/gdb.base/multi-line-starts-subshell.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/multi-line-starts-subshell.exp?ref=77c8aaf716d9f93dc5850f8b2481da5eb7a53662",
      "patch": "@@ -27,11 +27,11 @@ set shell_prompt_re [string_to_regexp $shell_prompt]\n \n # Point HOME nowhere to avoid the shell sourcing the user's init\n # scripts.\n-set shell_cmd \"HOME=/dev/null PS1=\\\"$shell_prompt\\\" /bin/sh\"\n+set shell_cmd \"HOME=/dev/null /bin/sh\"\n \n set test \"spawn subshell from multi-line\"\n-gdb_test_multiple \"if 1\\nshell ${shell_cmd}\\nend\" $test {\n-    -re \"$shell_prompt_re$\" {\n+gdb_test_multiple \"if 1\\nshell ${shell_cmd}\\nend\\nPS1=\\\"$shell_prompt\\\"\" $test {\n+    -re \"PS1=\\[^\\r\\n\\]*\\r\\n$shell_prompt_re$\" {\n \tpass $test\n \n \t# Now check that shell input works and that echo is enabled."
    }
  ]
}