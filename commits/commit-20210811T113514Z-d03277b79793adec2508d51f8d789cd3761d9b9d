{
  "sha": "d03277b79793adec2508d51f8d789cd3761d9b9d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDAzMjc3Yjc5NzkzYWRlYzI1MDhkNTFmOGQ3ODljZDM3NjFkOWI5ZA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-06-18T13:26:30Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-08-11T11:35:14Z"
    },
    "message": "gdb: register SIGBUS, SIGFPE, and SIGABRT handlers\n\nRegister handlers for SIGBUS, SIGFPE, and SIGABRT.  All of these\nsignals are setup as fatal signals that will cause GDB to terminate.\nHowever, by passing these signals through the handle_fatal_signal\nfunction, a user can arrange to see a backtrace when GDB\nterminates (see maint set backtrace-on-fatal-signal).\n\nIn normal use of GDB there should be no user visible changes after\nthis commit.  Only if GDB terminates with one of the above signals\nwill GDB change slightly, potentially printing a backtrace before\naborting.\n\nI've added new tests for SIGFPE, SIGBUS, and SIGABRT.",
    "tree": {
      "sha": "8f8974ee4e43c775da054ebdb09321eaaef2fd8d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8f8974ee4e43c775da054ebdb09321eaaef2fd8d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d03277b79793adec2508d51f8d789cd3761d9b9d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d03277b79793adec2508d51f8d789cd3761d9b9d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d03277b79793adec2508d51f8d789cd3761d9b9d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d03277b79793adec2508d51f8d789cd3761d9b9d/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6aa4f97c2b8a3fe3775d90c7485f4ace610fb103",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6aa4f97c2b8a3fe3775d90c7485f4ace610fb103",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6aa4f97c2b8a3fe3775d90c7485f4ace610fb103"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 20,
    "deletions": 2
  },
  "files": [
    {
      "sha": "9233a3650ac401e2b34637a556f96e8429f8c8ea",
      "filename": "gdb/event-top.c",
      "status": "modified",
      "additions": 16,
      "deletions": 1,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d03277b79793adec2508d51f8d789cd3761d9b9d/gdb/event-top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d03277b79793adec2508d51f8d789cd3761d9b9d/gdb/event-top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/event-top.c?ref=d03277b79793adec2508d51f8d789cd3761d9b9d",
      "patch": "@@ -1025,7 +1025,10 @@ static struct serial_event *quit_serial_event;\n    with the reception of the signal.\n \n    For SIGSEGV the handle_sig* function does all the work for handling this\n-   signal.  */\n+   signal.\n+\n+   For SIGFPE, SIGBUS, and SIGABRT, these signals will all cause GDB to\n+   terminate immediately.  */\n void\n gdb_init_signals (void)\n {\n@@ -1061,6 +1064,18 @@ gdb_init_signals (void)\n     create_async_signal_handler (async_sigtstp_handler, NULL, \"sigtstp\");\n #endif\n \n+#ifdef SIGFPE\n+  signal (SIGFPE, handle_fatal_signal);\n+#endif\n+\n+#ifdef SIGBUS\n+  signal (SIGBUS, handle_fatal_signal);\n+#endif\n+\n+#ifdef SIGABRT\n+  signal (SIGABRT, handle_fatal_signal);\n+#endif\n+\n   install_handle_sigsegv ();\n }\n "
    },
    {
      "sha": "8875d00fdb115926df3d54fc338d24ede2a47a49",
      "filename": "gdb/testsuite/gdb.base/bt-on-fatal-signal.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d03277b79793adec2508d51f8d789cd3761d9b9d/gdb/testsuite/gdb.base/bt-on-fatal-signal.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d03277b79793adec2508d51f8d789cd3761d9b9d/gdb/testsuite/gdb.base/bt-on-fatal-signal.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/bt-on-fatal-signal.exp?ref=d03277b79793adec2508d51f8d789cd3761d9b9d",
      "patch": "@@ -54,7 +54,10 @@ gdb_test_multiple \"maint set backtrace-on-fatal-signal on\" \"\" {\n }\n \n # Now the actual test loop.\n-foreach test_data {{SEGV \"Segmentation fault\"}} {\n+foreach test_data {{SEGV \"Segmentation fault\"} \\\n+\t\t       {FPE \"Floating point exception\"} \\\n+\t\t       {BUS \"Bus error\"} \\\n+\t\t       {ABRT \"Aborted\"}} {\n     set sig [lindex ${test_data} 0]\n     set msg [lindex ${test_data} 1]\n     with_test_prefix ${sig} {"
    }
  ]
}