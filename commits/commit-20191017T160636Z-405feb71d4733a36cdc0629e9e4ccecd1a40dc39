{
  "sha": "405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDA1ZmViNzFkNDczM2EzNmNkYzA2MjllOWU0Y2NlY2QxYTQwZGMzOQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-10-17T16:06:36Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-10-17T16:06:36Z"
    },
    "message": "[gdb] Fix typos in comments\n\nFix typos in comments.  NFC.\n\nTested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2019-10-17  Tom de Vries  <tdevries@suse.de>\n\n\t* arm-nbsd-nat.c: Fix typos in comments.\n\t* arm-tdep.c: Same.\n\t* darwin-nat-info.c: Same.\n\t* dwarf2read.c: Same.\n\t* elfread.c: Same.\n\t* event-top.c: Same.\n\t* findvar.c: Same.\n\t* gdbtypes.c: Same.\n\t* hppa-tdep.c: Same.\n\t* i386-tdep.c: Same.\n\t* jit.c: Same.\n\t* main.c: Same.\n\t* mdebugread.c: Same.\n\t* moxie-tdep.c: Same.\n\t* nto-procfs.c: Same.\n\t* osabi.c: Same.\n\t* ppc-linux-tdep.c: Same.\n\t* remote.c: Same.\n\t* riscv-tdep.c: Same.\n\t* s390-tdep.c: Same.\n\t* sh-tdep.c: Same.\n\t* sparc-linux-tdep.c: Same.\n\t* sparc-nat.c: Same.\n\t* stack.c: Same.\n\t* target-descriptions.c: Same.\n\t* top.c: Same.\n\t* varobj.c: Same.\n\nChange-Id: I6047967abd2d51c9000dea15184d19f4e952c3ff",
    "tree": {
      "sha": "f2075d2325440db8fca9b374c31639c71faab8cc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f2075d2325440db8fca9b374c31639c71faab8cc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "062f1fc13a075a34890988f3a396b5e58fc86396",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/062f1fc13a075a34890988f3a396b5e58fc86396",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/062f1fc13a075a34890988f3a396b5e58fc86396"
    }
  ],
  "stats": {
    "total": 132,
    "additions": 81,
    "deletions": 51
  },
  "files": [
    {
      "sha": "e70e40eecb417762b53f85e4872ba86e30043ca0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -1,3 +1,33 @@\n+2019-10-17  Tom de Vries  <tdevries@suse.de>\n+\n+\t* arm-nbsd-nat.c: Fix typos in comments.\n+\t* arm-tdep.c: Same.\n+\t* darwin-nat-info.c: Same.\n+\t* dwarf2read.c: Same.\n+\t* elfread.c: Same.\n+\t* event-top.c: Same.\n+\t* findvar.c: Same.\n+\t* gdbtypes.c: Same.\n+\t* hppa-tdep.c: Same.\n+\t* i386-tdep.c: Same.\n+\t* jit.c: Same.\n+\t* main.c: Same.\n+\t* mdebugread.c: Same.\n+\t* moxie-tdep.c: Same.\n+\t* nto-procfs.c: Same.\n+\t* osabi.c: Same.\n+\t* ppc-linux-tdep.c: Same.\n+\t* remote.c: Same.\n+\t* riscv-tdep.c: Same.\n+\t* s390-tdep.c: Same.\n+\t* sh-tdep.c: Same.\n+\t* sparc-linux-tdep.c: Same.\n+\t* sparc-nat.c: Same.\n+\t* stack.c: Same.\n+\t* target-descriptions.c: Same.\n+\t* top.c: Same.\n+\t* varobj.c: Same.\n+\n 2019-10-16  Tom Tromey  <tom@tromey.com>\n \n \t* objfiles.h (struct objfile) <original_name>: Now const."
    },
    {
      "sha": "82c8ad5eedaf0bcdb3249dfff4a3021267478b60",
      "filename": "gdb/arm-nbsd-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/arm-nbsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/arm-nbsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-nbsd-nat.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -437,7 +437,7 @@ fetch_elfcore_registers (struct regcache *regcache,\n \n static struct core_fns arm_netbsd_elfcore_fns =\n {\n-  bfd_target_elf_flavour,\t\t/* core_flovour.  */\n+  bfd_target_elf_flavour,\t\t/* core_flavour.  */\n   default_check_format,\t\t\t/* check_format.  */\n   default_core_sniffer,\t\t\t/* core_sniffer.  */\n   fetch_elfcore_registers,\t\t/* core_read_registers.  */"
    },
    {
      "sha": "fe5605c87005a69f169f506c7371c7f59b3581bd",
      "filename": "gdb/arm-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/arm-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/arm-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -6809,7 +6809,7 @@ thumb2_decode_svc_copro (struct gdbarch *gdbarch, uint16_t insn1,\n \t      if (bit_4 == 0) /* STC/STC2.  */\n \t\treturn thumb_copy_unmodified_32bit (gdbarch, insn1, insn2,\n \t\t\t\t\t\t    \"stc/stc2\", dsc);\n-\t      else /* LDC/LDC2 {literal, immeidate}.  */\n+\t      else /* LDC/LDC2 {literal, immediate}.  */\n \t\treturn thumb2_copy_copro_load_store (gdbarch, insn1, insn2,\n \t\t\t\t\t\t     regs, dsc);\n \t    }\n@@ -6954,7 +6954,7 @@ thumb_copy_16bit_ldr_literal (struct gdbarch *gdbarch, uint16_t insn1,\n   return 0;\n }\n \n-/* Copy Thumb cbnz/cbz insruction.  */\n+/* Copy Thumb cbnz/cbz instruction.  */\n \n static int\n thumb_copy_cbnz_cbz (struct gdbarch *gdbarch, uint16_t insn1,\n@@ -7329,7 +7329,7 @@ thumb_process_displaced_32bit_insn (struct gdbarch *gdbarch, uint16_t insn1,\n \t  case 0:\n \t    if (bit (insn1, 6))\n \t      {\n-\t\t/* Load/store {dual, execlusive}, table branch.  */\n+\t\t/* Load/store {dual, exclusive}, table branch.  */\n \t\tif (bits (insn1, 7, 8) == 1 && bits (insn1, 4, 5) == 1\n \t\t    && bits (insn2, 5, 7) == 0)\n \t\t  err = thumb2_copy_table_branch (gdbarch, insn1, insn2, regs,\n@@ -7390,7 +7390,7 @@ thumb_process_displaced_32bit_insn (struct gdbarch *gdbarch, uint16_t insn1,\n \t\terr = thumb_copy_unmodified_32bit (gdbarch, insn1, insn2,\n \t\t\t\t\t\t   \"dp/pb\", dsc);\n \t    }\n-\t  else /* Data processing (modified immeidate) */\n+\t  else /* Data processing (modified immediate) */\n \t    err = thumb_copy_unmodified_32bit (gdbarch, insn1, insn2,\n \t\t\t\t\t       \"dp/mi\", dsc);\n \t}"
    },
    {
      "sha": "b862c4485b003cfc9b67bf7b47105cb7a64fffcc",
      "filename": "gdb/darwin-nat-info.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/darwin-nat-info.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/darwin-nat-info.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/darwin-nat-info.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -810,7 +810,7 @@ info_mach_exceptions_command (const char *args, int from_tty)\n \t}\n       else if (strcmp (args, \"host\") == 0)\n \t{\n-\t  /* FIXME: This need a privilegied host port!  */\n+\t  /* FIXME: This needs a privileged host port!  */\n \t  kret = host_get_exception_ports\n \t    (darwin_host_self, EXC_MASK_ALL, info.masks,\n \t     &info.count, info.ports, info.behaviors, info.flavors);"
    },
    {
      "sha": "5c705b0898b10aae21f26764f052e824830f6aba",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -1486,7 +1486,7 @@ struct cu_partial_die_info\n   cu_partial_die_info (struct dwarf2_cu *cu, struct partial_die_info *pdi)\n     : cu (cu),\n       pdi (pdi)\n-  { /* Nothhing.  */ }\n+  { /* Nothing.  */ }\n \n private:\n   cu_partial_die_info () = delete;\n@@ -14942,7 +14942,7 @@ producer_is_codewarrior (struct dwarf2_cu *cu)\n   return cu->producer_is_codewarrior;\n }\n \n-/* Return the default accessibility type if it is not overriden by\n+/* Return the default accessibility type if it is not overridden by\n    DW_AT_accessibility.  */\n \n static enum dwarf_access_attribute"
    },
    {
      "sha": "1b5b4e0aa8086046fae20a93170c715e65488127",
      "filename": "gdb/elfread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/elfread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/elfread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/elfread.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -1433,7 +1433,7 @@ const struct sym_fns elf_sym_fns_gdb_index =\n   elf_symfile_read,\t\t/* read a symbol file into symtab */\n   NULL,\t\t\t\t/* sym_read_psymbols */\n   elf_symfile_finish,\t\t/* finished with file, cleanup */\n-  default_symfile_offsets,\t/* Translate ext. to int. relocatin */\n+  default_symfile_offsets,\t/* Translate ext. to int. relocation */\n   elf_symfile_segments,\t\t/* Get segment information from a file.  */\n   NULL,\n   default_symfile_relocate,\t/* Relocate a debug section.  */\n@@ -1450,7 +1450,7 @@ const struct sym_fns elf_sym_fns_debug_names =\n   elf_symfile_read,\t\t/* read a symbol file into symtab */\n   NULL,\t\t\t\t/* sym_read_psymbols */\n   elf_symfile_finish,\t\t/* finished with file, cleanup */\n-  default_symfile_offsets,\t/* Translate ext. to int. relocatin */\n+  default_symfile_offsets,\t/* Translate ext. to int. relocation */\n   elf_symfile_segments,\t\t/* Get segment information from a file.  */\n   NULL,\n   default_symfile_relocate,\t/* Relocate a debug section.  */"
    },
    {
      "sha": "0396dbcc52de74db3fbe32d41e33f04a3451c968",
      "filename": "gdb/event-top.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/event-top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/event-top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/event-top.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -421,7 +421,7 @@ display_gdb_prompt (const char *new_prompt)\n }\n \n /* Return the top level prompt, as specified by \"set prompt\", possibly\n-   overriden by the python gdb.prompt_hook hook, and then composed\n+   overridden by the python gdb.prompt_hook hook, and then composed\n    with the prompt prefix and suffix (annotations).  */\n \n static std::string\n@@ -1152,7 +1152,7 @@ handle_sigfpe (int sig)\n   signal (sig, handle_sigfpe);\n }\n \n-/* Event loop will call this functin to process a SIGFPE.  */\n+/* Event loop will call this function to process a SIGFPE.  */\n static void\n async_float_handler (gdb_client_data arg)\n {"
    },
    {
      "sha": "3c8e631b87f47d724d58815ecb0cc46cc8ff4a30",
      "filename": "gdb/findvar.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/findvar.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/findvar.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/findvar.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -218,7 +218,7 @@ store_typed_address (gdb_byte *buf, struct type *type, CORE_ADDR addr)\n    bytes.  If SOURCE_SIZE is greater than DEST_SIZE, then truncate the most\n    significant bytes.  If SOURCE_SIZE is less than DEST_SIZE then either sign\n    or zero extended according to IS_SIGNED.  Values are stored in memory with\n-   endianess BYTE_ORDER.  */\n+   endianness BYTE_ORDER.  */\n \n void\n copy_integer_to_size (gdb_byte *dest, int dest_size, const gdb_byte *source,"
    },
    {
      "sha": "fd1c765fed02095bb6396779f310bb68633fd0d9",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -2733,7 +2733,7 @@ check_stub_method_group (struct type *type, int method_id)\n     }\n }\n \n-/* Ensure it is in .rodata (if available) by workarounding GCC PR 44690.  */\n+/* Ensure it is in .rodata (if available) by working around GCC PR 44690.  */\n const struct cplus_struct_type cplus_struct_default = { };\n \n void"
    },
    {
      "sha": "c307de8a3e444982c20cf48ce49b0811036af963",
      "filename": "gdb/hppa-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/hppa-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/hppa-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/hppa-tdep.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -88,7 +88,7 @@ static const struct objfile_key<hppa_objfile_private,\n \t\t\t\tgdb::noop_deleter<hppa_objfile_private>>\n   hppa_objfile_priv_data;\n \n-/* Get at various relevent fields of an instruction word.  */\n+/* Get at various relevant fields of an instruction word.  */\n #define MASK_5 0x1f\n #define MASK_11 0x7ff\n #define MASK_14 0x3fff"
    },
    {
      "sha": "3eb6fa4a5d7757ce00916952b3b3c50a352b2a06",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -2956,7 +2956,7 @@ i386_return_value (struct gdbarch *gdbarch, struct value *function,\n \t|| code == TYPE_CODE_UNION\n \t|| code == TYPE_CODE_ARRAY)\n        && !i386_reg_struct_return_p (gdbarch, type))\n-      /* Complex double and long double uses the struct return covention.  */\n+      /* Complex double and long double uses the struct return convention.  */\n       || (code == TYPE_CODE_COMPLEX && TYPE_LENGTH (type) == 16)\n       || (code == TYPE_CODE_COMPLEX && TYPE_LENGTH (type) == 24)\n       /* 128-bit decimal float uses the struct return convention.  */"
    },
    {
      "sha": "08fd8623f9ccfd464aa2e421d28706e9019ab06f",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -76,7 +76,7 @@ struct target_buffer\n   ULONGEST size;\n };\n \n-/* Openning the file is a no-op.  */\n+/* Opening the file is a no-op.  */\n \n static void *\n mem_bfd_iovec_open (struct bfd *abfd, void *open_closure)"
    },
    {
      "sha": "a77d6ec44c56526c3973680c7365c76f577e6079",
      "filename": "gdb/main.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/main.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -911,7 +911,7 @@ captured_main_1 (struct captured_main_args *context)\n     }\n \n   /* Lookup gdbinit files.  Note that the gdbinit file name may be\n-     overriden during file initialization, so get_init_files should be\n+     overridden during file initialization, so get_init_files should be\n      called after gdb_init.  */\n   std::string system_gdbinit;\n   std::string home_gdbinit;"
    },
    {
      "sha": "e76fe9aaf4297311dd66cf7adae53a9647623c37",
      "filename": "gdb/mdebugread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/mdebugread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/mdebugread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mdebugread.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -187,7 +187,7 @@ static const struct ecoff_debug_swap *debug_swap;\n \n static struct ecoff_debug_info *debug_info;\n \n-/* Pointer to current file decriptor record, and its index.  */\n+/* Pointer to current file descriptor record, and its index.  */\n \n static FDR *cur_fdr;\n static int cur_fd;\n@@ -3729,7 +3729,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t  if (rh == f_idx)\n \t    continue;\n \n-\t  /* Do not add to dependeny list if psymtab was empty.  */\n+\t  /* Do not add to dependency list if psymtab was empty.  */\n \t  if (fdr_to_pst[rh].pst == NULL)\n \t    continue;\n \t  pst->dependencies[pst->number_of_dependencies++]"
    },
    {
      "sha": "81fdb7111c2af8c3605e80404089815cd4ba1e6d",
      "filename": "gdb/moxie-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/moxie-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/moxie-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/moxie-tdep.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -271,7 +271,7 @@ struct moxie_unwind_cache\n };\n \n /* Read an unsigned integer from the inferior, and adjust\n-   endianess.  */\n+   endianness.  */\n static ULONGEST\n moxie_process_readu (CORE_ADDR addr, gdb_byte *buf,\n \t\t     int length, enum bfd_endian byte_order)"
    },
    {
      "sha": "0a199e72248e90e6a188b18ce7348b7c5a1fda6f",
      "filename": "gdb/nto-procfs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/nto-procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/nto-procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nto-procfs.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -605,7 +605,7 @@ procfs_meminfo (const char *args, int from_tty)\n \t      if (strcmp (map.info.path, printme.name))\n \t\tcontinue;\n \n-\t      /* Lower debug_vaddr is always text, if nessessary, swap.  */\n+\t      /* Lower debug_vaddr is always text, if necessary, swap.  */\n \t      if ((int) map.info.vaddr < (int) printme.text.debug_vaddr)\n \t\t{\n \t\t  memcpy (&(printme.data), &(printme.text),"
    },
    {
      "sha": "cc1652c5ad0d057b893ff2bf66164cdb9f738cbc",
      "filename": "gdb/osabi.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/osabi.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/osabi.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/osabi.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -415,7 +415,7 @@ check_note (bfd *abfd, asection *sect, char *note, unsigned int *sectsize,\n   /* If this assertion triggers, increase MAX_NOTESZ.  */\n   gdb_assert (notesz <= MAX_NOTESZ);\n \n-  /* Check whether SECT is big enough to comtain the complete note.  */\n+  /* Check whether SECT is big enough to contain the complete note.  */\n   if (notesz > bfd_section_size (sect))\n     return 0;\n "
    },
    {
      "sha": "e692cffd7a16a2bea2e147eb350aa08aaa4c1256",
      "filename": "gdb/ppc-linux-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/ppc-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/ppc-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ppc-linux-tdep.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -657,7 +657,7 @@ const struct regset ppc32_linux_tm_sprregset = {\n    general-purpose regsets for 32-bit, 64-bit big-endian, and 64-bit\n    little endian targets.  The ptrace and core file buffers for 64-bit\n    targets use 8-byte fields for the 4-byte registers, and the\n-   position of the register in the fields depends on the endianess.\n+   position of the register in the fields depends on the endianness.\n    The 32-bit regmap is the same for both endian types because the\n    fields are all 4-byte long.\n \n@@ -761,7 +761,7 @@ const struct regset ppc32_linux_cfprregset = {\n \n /* Regmaps for the Hardware Transactional Memory checkpointed vector\n    regsets, for big and little endian targets.  The position of the\n-   4-byte VSCR in its 16-byte field depends on the endianess.  */\n+   4-byte VSCR in its 16-byte field depends on the endianness.  */\n \n static const struct regcache_map_entry ppc32_le_regmap_cvmx[] =\n   {"
    },
    {
      "sha": "f616569ff1c5f26040d3f0fb6faea0919f1554b2",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -141,7 +141,7 @@ struct vCont_action_support\n   bool S = false;\n };\n \n-/* About this many threadisds fit in a packet.  */\n+/* About this many threadids fit in a packet.  */\n \n #define MAXTHREADLISTRESULTS 32\n \n@@ -3250,7 +3250,7 @@ remote_target::remote_unpack_thread_info_response (char *pkt,\n     }\n   copy_threadref (&info->threadid, &ref);\n \n-  /* Loop on tagged fields , try to bail if somthing goes wrong.  */\n+  /* Loop on tagged fields , try to bail if something goes wrong.  */\n \n   /* Packets are terminated with nulls.  */\n   while ((pkt < limit) && mask && *pkt)\n@@ -3389,7 +3389,7 @@ remote_target::remote_get_threadlist (int startflag, threadref *nextthread,\n   struct remote_state *rs = get_remote_state ();\n   int result = 1;\n \n-  /* Trancate result limit to be smaller than the packet size.  */\n+  /* Truncate result limit to be smaller than the packet size.  */\n   if ((((result_limit + 1) * BUF_THREAD_ID_SIZE) + 10)\n       >= get_remote_packet_size ())\n     result_limit = (get_remote_packet_size () / BUF_THREAD_ID_SIZE) - 2;\n@@ -3411,8 +3411,8 @@ remote_target::remote_get_threadlist (int startflag, threadref *nextthread,\n   if (!threadmatch (&rs->echo_nextthread, nextthread))\n     {\n       /* FIXME: This is a good reason to drop the packet.  */\n-      /* Possably, there is a duplicate response.  */\n-      /* Possabilities :\n+      /* Possibly, there is a duplicate response.  */\n+      /* Possibilities :\n          retransmit immediatly - race conditions\n          retransmit after timeout - yes\n          exit\n@@ -11283,7 +11283,7 @@ output_threadid (char *title, threadref *ref)\n {\n   char hexid[20];\n \n-  pack_threadid (&hexid[0], ref);\t/* Convert threead id into hex.  */\n+  pack_threadid (&hexid[0], ref);\t/* Convert thread id into hex.  */\n   hexid[16] = 0;\n   printf_filtered (\"%s  %s\\n\", title, (&hexid[0]));\n }"
    },
    {
      "sha": "810b834463430c87b03b8ba6ed4a37da56024e40",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -1010,7 +1010,7 @@ class riscv_insn\n       LUI,\n       SD,\n       SW,\n-      /* These are needed for software breakopint support.  */\n+      /* These are needed for software breakpoint support.  */\n       JAL,\n       JALR,\n       BEQ,"
    },
    {
      "sha": "a4aae0736ddbc0022fa6e61c47f0dc068c2b5c8e",
      "filename": "gdb/s390-tdep.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/s390-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/s390-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/s390-tdep.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -2116,7 +2116,7 @@ s390_return_value (struct gdbarch *gdbarch, struct value *function,\n \n /* Frame unwinding.  */\n \n-/* Implmement the stack_frame_destroyed_p gdbarch method.  */\n+/* Implement the stack_frame_destroyed_p gdbarch method.  */\n \n static int\n s390_stack_frame_destroyed_p (struct gdbarch *gdbarch, CORE_ADDR pc)\n@@ -5311,7 +5311,7 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \tcase 0xe383: /* MSGC - multiply single 64x64mem -> 64 */\n \tcase 0xe398: /* ALC - add logical with carry */\n \tcase 0xe399: /* SLB - subtract logical with borrow */\n-\tcase 0xe727: /* LCBB - load count to block bounduary */\n+\tcase 0xe727: /* LCBB - load count to block boundary */\n \tcase 0xeb81: /* ICMY - insert characters under mask */\n \tcase 0xebdc: /* SRAK - shift left single */\n \tcase 0xebdd: /* SLAK - shift left single */\n@@ -5537,7 +5537,7 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \tcase 0xe704: /* VLLEZ - vector load logical element and zero */\n \tcase 0xe705: /* VLREP - vector load and replicate */\n \tcase 0xe706: /* VL - vector load */\n-\tcase 0xe707: /* VLBB - vector load to block bounduary */\n+\tcase 0xe707: /* VLBB - vector load to block boundary */\n \tcase 0xe712: /* VGEG - vector gather element */\n \tcase 0xe713: /* VGEF - vector gather element */\n \tcase 0xe722: /* VLVG - vector load vr element from gr */\n@@ -6238,7 +6238,7 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \t    return -1;\n \t  break;\n \n-\t/* 0xed42-0xed47 undefind */\n+\t/* 0xed42-0xed47 undefined */\n \n \tcase 0xed48: /* SLXT - shift significand left */\n \tcase 0xed49: /* SRXT - shift significand right */\n@@ -6253,10 +6253,10 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \t    return -1;\n \t  break;\n \n-\t/* 0xed4a-0xed4f undefind */\n-\t/* 0xed52-0xed53 undefind */\n-\t/* 0xed56-0xed57 undefind */\n-\t/* 0xed5a-0xed63 undefind */\n+\t/* 0xed4a-0xed4f undefined */\n+\t/* 0xed52-0xed53 undefined */\n+\t/* 0xed56-0xed57 undefined */\n+\t/* 0xed5a-0xed63 undefined */\n \t/* 0xed68-0xeda7 undefined */\n \n \tcase 0xeda8: /* CZDT - convert to zoned */"
    },
    {
      "sha": "48a388b2d8f3042f6839e80b0399f4c479bda644",
      "filename": "gdb/sh-tdep.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/sh-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/sh-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sh-tdep.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -912,7 +912,7 @@ sh_frame_align (struct gdbarch *ignore, CORE_ADDR sp)\n    not displace any of the other arguments passed in via registers R4\n    to R7.  */\n \n-/* Helper function to justify value in register according to endianess.  */\n+/* Helper function to justify value in register according to endianness.  */\n static const gdb_byte *\n sh_justify_value_in_reg (struct gdbarch *gdbarch, struct value *val, int len)\n {\n@@ -942,7 +942,7 @@ sh_stack_allocsize (int nargs, struct value **args)\n }\n \n /* Helper functions for getting the float arguments right.  Registers usage\n-   depends on the ABI and the endianess.  The comments should enlighten how\n+   depends on the ABI and the endianness.  The comments should enlighten how\n    it's intended to work.  */\n \n /* This array stores which of the float arg registers are already in use.  */\n@@ -1045,7 +1045,7 @@ sh_treat_as_flt_p (struct type *type)\n   /* Otherwise non-struct types are not treated as float.  */\n   if (TYPE_CODE (type) != TYPE_CODE_STRUCT)\n     return 0;\n-  /* Otherwise structs with more than one memeber are not treated as float.  */\n+  /* Otherwise structs with more than one member are not treated as float.  */\n   if (TYPE_NFIELDS (type) != 1)\n     return 0;\n   /* Otherwise if the type of that member is float, the whole type is\n@@ -1669,7 +1669,7 @@ sh_pseudo_register_read (struct gdbarch *gdbarch, readable_regcache *regcache,\n \t\t\t\t\t      2, base_regnum, temp_buffer);\n       if (status == REG_VALID)\n \t{\n-\t  /* We must pay attention to the endiannes. */\n+\t  /* We must pay attention to the endianness. */\n \t  sh_register_convert_to_virtual (gdbarch, reg_nr,\n \t\t\t\t\t  register_type (gdbarch, reg_nr),\n \t\t\t\t\t  temp_buffer, buffer);\n@@ -1712,7 +1712,7 @@ sh_pseudo_register_write (struct gdbarch *gdbarch, struct regcache *regcache,\n       gdb_byte temp_buffer[4 * 2];\n       base_regnum = dr_reg_base_num (gdbarch, reg_nr);\n \n-      /* We must pay attention to the endiannes.  */\n+      /* We must pay attention to the endianness.  */\n       sh_register_convert_to_raw (gdbarch, register_type (gdbarch, reg_nr),\n \t\t\t\t  reg_nr, buffer, temp_buffer);\n "
    },
    {
      "sha": "be3ff8d81418e7420701d420e8563ff6c401867f",
      "filename": "gdb/sparc-linux-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/sparc-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/sparc-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sparc-linux-tdep.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -68,7 +68,7 @@ static const struct tramp_frame sparc32_linux_sigframe =\n   SIGTRAMP_FRAME,\n   4,\n   {\n-    { 0x821020d8, ULONGEST_MAX },\t\t/* mov __NR_sugreturn, %g1 */\n+    { 0x821020d8, ULONGEST_MAX },\t\t/* mov __NR_sigreturn, %g1 */\n     { 0x91d02010, ULONGEST_MAX },\t\t/* ta  0x10 */\n     { TRAMP_SENTINEL_INSN, ULONGEST_MAX }\n   },"
    },
    {
      "sha": "8a124872c7f37ba33962bc7e14bb91b14faf4a8a",
      "filename": "gdb/sparc-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/sparc-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/sparc-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sparc-nat.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -308,7 +308,7 @@ sparc_xfer_wcookie (struct target_ops *ops, enum target_object object,\n void\n _initialize_sparc_nat (void)\n {\n-  /* Deafult to using SunOS 4 register sets.  */\n+  /* Default to using SunOS 4 register sets.  */\n   if (sparc_gregmap == NULL)\n     sparc_gregmap = &sparc32_sunos4_gregmap;\n   if (sparc_fpregmap == NULL)"
    },
    {
      "sha": "32c9c7380b43d8bb0ad296a1b106710b60cc07c6",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -959,7 +959,7 @@ get_user_print_what_frame_info (gdb::optional<enum print_what> *what)\n /* Print information about frame FRAME.  The output is format according\n    to PRINT_LEVEL and PRINT_WHAT and PRINT_ARGS.  For the meaning of\n    PRINT_WHAT, see enum print_what comments in frame.h.\n-   Note that PRINT_WHAT is overriden if FP_OPTS.print_frame_info\n+   Note that PRINT_WHAT is overridden if FP_OPTS.print_frame_info\n    != print_frame_info_auto.\n \n    Used in \"where\" output, and to emit breakpoint or step"
    },
    {
      "sha": "f4213bf5880661c7168e17e1ad11c085e1d9aac8",
      "filename": "gdb/target-descriptions.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/target-descriptions.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/target-descriptions.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-descriptions.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -1747,7 +1747,7 @@ static std::vector<xml_test_tdesc> xml_tdesc;\n \n #if GDB_SELF_TEST\n \n-/* See target-descritpions.h.  */\n+/* See target-descriptions.h.  */\n \n void\n record_xml_tdesc (const char *xml_file, const struct target_desc *tdesc)"
    },
    {
      "sha": "15d4fab8bebf52076251fcb619ea31b66542b5f8",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -86,7 +86,7 @@ extern void initialize_all_files (void);\n #define PREFIX(X) the_prompts.prompt_stack[the_prompts.top + X].prefix\n #define SUFFIX(X) the_prompts.prompt_stack[the_prompts.top + X].suffix\n \n-/* Default command line prompt.  This is overriden in some configs.  */\n+/* Default command line prompt.  This is overridden in some configs.  */\n \n #ifndef DEFAULT_PROMPT\n #define DEFAULT_PROMPT\t\"(gdb) \""
    },
    {
      "sha": "09c42a352a50324e7be2d22c05c518a20e27c1a6",
      "filename": "gdb/varobj.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/varobj.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/405feb71d4733a36cdc0629e9e4ccecd1a40dc39/gdb/varobj.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/varobj.c?ref=405feb71d4733a36cdc0629e9e4ccecd1a40dc39",
      "patch": "@@ -1831,7 +1831,7 @@ install_variable (struct varobj *var)\n   return true;\t\t\t/* OK */\n }\n \n-/* Unistall the object VAR.  */\n+/* Uninstall the object VAR.  */\n static void\n uninstall_variable (struct varobj *var)\n {"
    }
  ]
}