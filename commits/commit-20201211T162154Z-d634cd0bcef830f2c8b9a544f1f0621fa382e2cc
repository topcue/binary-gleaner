{
  "sha": "d634cd0bcef830f2c8b9a544f1f0621fa382e2cc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDYzNGNkMGJjZWY4MzBmMmM4YjlhNTQ0ZjFmMDYyMWZhMzgyZTJjYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-11T16:21:53Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-11T16:21:54Z"
    },
    "message": "Use thread_info_ref in stop_context\n\nThis changes stop_context to use a thread_info_ref, removing some\nmanual reference counting.\n\ngdb/ChangeLog\n2020-12-11  Tom Tromey  <tom@tromey.com>\n\n\t* infrun.c (struct stop_context) <thread>: Now a thread_info_ref.\n\t(stop_context::stop_context): Update.\n\t(stop_context::~stop_context): Remove.",
    "tree": {
      "sha": "0ee3b57e6577e4f3f77aa5b595a66494300214bb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0ee3b57e6577e4f3f77aa5b595a66494300214bb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d634cd0bcef830f2c8b9a544f1f0621fa382e2cc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d634cd0bcef830f2c8b9a544f1f0621fa382e2cc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d634cd0bcef830f2c8b9a544f1f0621fa382e2cc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d634cd0bcef830f2c8b9a544f1f0621fa382e2cc/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "51107df53aeb2f6a5a03a1af29eec773b3aca463",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51107df53aeb2f6a5a03a1af29eec773b3aca463",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/51107df53aeb2f6a5a03a1af29eec773b3aca463"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 8,
    "deletions": 15
  },
  "files": [
    {
      "sha": "98b7c137e26d763817bb647017496f2b28ecfbd3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d634cd0bcef830f2c8b9a544f1f0621fa382e2cc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d634cd0bcef830f2c8b9a544f1f0621fa382e2cc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d634cd0bcef830f2c8b9a544f1f0621fa382e2cc",
      "patch": "@@ -1,3 +1,9 @@\n+2020-12-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* infrun.c (struct stop_context) <thread>: Now a thread_info_ref.\n+\t(stop_context::stop_context): Update.\n+\t(stop_context::~stop_context): Remove.\n+\n 2020-12-11  Tom Tromey  <tom@tromey.com>\n \n \t* inferior.c (current_inferior_): Change type."
    },
    {
      "sha": "793a7d2badd99eff92236ebfdc4f94ed1350a0e4",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 2,
      "deletions": 15,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d634cd0bcef830f2c8b9a544f1f0621fa382e2cc/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d634cd0bcef830f2c8b9a544f1f0621fa382e2cc/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=d634cd0bcef830f2c8b9a544f1f0621fa382e2cc",
      "patch": "@@ -8097,7 +8097,6 @@ maybe_remove_breakpoints (void)\n struct stop_context\n {\n   stop_context ();\n-  ~stop_context ();\n \n   DISABLE_COPY_AND_ASSIGN (stop_context);\n \n@@ -8112,7 +8111,7 @@ struct stop_context\n \n   /* If stopp for a thread event, this is the thread that caused the\n      stop.  */\n-  struct thread_info *thread;\n+  thread_info_ref thread;\n \n   /* The inferior that caused the stop.  */\n   int inf_num;\n@@ -8131,20 +8130,8 @@ stop_context::stop_context ()\n     {\n       /* Take a strong reference so that the thread can't be deleted\n \t yet.  */\n-      thread = inferior_thread ();\n-      thread->incref ();\n+      thread = thread_info_ref::new_reference (inferior_thread ());\n     }\n-  else\n-    thread = NULL;\n-}\n-\n-/* Release a stop context previously created with save_stop_context.\n-   Releases the strong reference to the thread as well. */\n-\n-stop_context::~stop_context ()\n-{\n-  if (thread != NULL)\n-    thread->decref ();\n }\n \n /* Return true if the current context no longer matches the saved stop"
    }
  ]
}