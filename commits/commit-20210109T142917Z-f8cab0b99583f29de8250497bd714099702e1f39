{
  "sha": "f8cab0b99583f29de8250497bd714099702e1f39",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjhjYWIwYjk5NTgzZjI5ZGU4MjUwNDk3YmQ3MTQwOTk3MDJlMWYzOQ==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-09T07:40:14Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-09T14:29:17Z"
    },
    "message": "sim: sh64: delete port\n\nSupport for sh64 was dropped from bfd et al in 2018.  Without\nthat, the sim port is useless.  So clean up this code too.",
    "tree": {
      "sha": "4e408ac7feb655291f1c0f331e99825cb83eb3f7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4e408ac7feb655291f1c0f331e99825cb83eb3f7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f8cab0b99583f29de8250497bd714099702e1f39",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f8cab0b99583f29de8250497bd714099702e1f39",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f8cab0b99583f29de8250497bd714099702e1f39",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f8cab0b99583f29de8250497bd714099702e1f39/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "50df264daeb2f03d7f10f97bbbab4d424194d942",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/50df264daeb2f03d7f10f97bbbab4d424194d942",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/50df264daeb2f03d7f10f97bbbab4d424194d942"
    }
  ],
  "stats": {
    "total": 73954,
    "additions": 13,
    "deletions": 73941
  },
  "files": [
    {
      "sha": "d01c5fd3c423d9bd22db9bb8040dfd99ab4455cb",
      "filename": "sim/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8cab0b99583f29de8250497bd714099702e1f39/sim/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8cab0b99583f29de8250497bd714099702e1f39/sim/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ChangeLog?ref=f8cab0b99583f29de8250497bd714099702e1f39",
      "patch": "@@ -1,3 +1,10 @@\n+2021-01-09  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* MAINTAINERS (sh64): Move to past maintainers.\n+\t* configure: Regenerate.\n+\t* configure.tgt (sh64*-*-*): Delete.\n+\t* sh64/: Delete.\n+\n 2021-01-09  Mike Frysinger  <vapier@gentoo.org>\n \n \t* README-HACKING (AC_PREREQ): Delete."
    },
    {
      "sha": "5f4cc4c85e2ef109cfa7ddf4341c938d745bef3a",
      "filename": "sim/MAINTAINERS",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8cab0b99583f29de8250497bd714099702e1f39/sim/MAINTAINERS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8cab0b99583f29de8250497bd714099702e1f39/sim/MAINTAINERS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/MAINTAINERS?ref=f8cab0b99583f29de8250497bd714099702e1f39",
      "patch": "@@ -32,7 +32,6 @@ msp430\t\tNick Clifton <nickc@redhat.com>\n or1k\t\tStafford Horne <shorne@gmail.com>\n pru\t\tDimitar Dimitrov <dimitar@dinux.eu>\n sh\t\t(global maintainers)\n-sh64\t\tDave Brolley <brolley@redhat.com>\n common\t\tFrank Ch. Eigler <fche@redhat.com>\n *\t\t(target, then global maintainers)\n \n@@ -50,5 +49,6 @@ ppc\t\tGeoff Keating <geoffk@geoffk.org>\n ppc\t\tAndrew Cagney <cagney@gnu.org>\n rl78\t\tDJ Delorie <dj@redhat.com>\n rx\t\tDJ Delorie <dj@redhat.com>\n+sh64\t\tDave Brolley <brolley@redhat.com>\n v850\t\tDJ Delorie <dj@redhat.com>\n *\t\tMike Frysinger <vapier@gentoo.org>"
    },
    {
      "sha": "3135b67b1464a13d31991d868a4b293c1cc10cf5",
      "filename": "sim/configure",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8cab0b99583f29de8250497bd714099702e1f39/sim/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8cab0b99583f29de8250497bd714099702e1f39/sim/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/configure?ref=f8cab0b99583f29de8250497bd714099702e1f39",
      "patch": "@@ -690,7 +690,6 @@ or1k\n pru\n rl78\n rx\n-sh64\n sh\n erc32\n ppc\n@@ -3867,13 +3866,6 @@ subdirs=\"$subdirs aarch64\"\n   subdirs=\"$subdirs rx\"\n \n \n-       ;;\n-   sh64*-*-*)\n-\n-  sim_arch=sh64\n-  subdirs=\"$subdirs sh64\"\n-\n-\n        ;;\n    sh*-*-*)\n "
    },
    {
      "sha": "a48c6966e8ae72e44a9a03441c989cc828624e96",
      "filename": "sim/configure.tgt",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8cab0b99583f29de8250497bd714099702e1f39/sim/configure.tgt",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8cab0b99583f29de8250497bd714099702e1f39/sim/configure.tgt",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/configure.tgt?ref=f8cab0b99583f29de8250497bd714099702e1f39",
      "patch": "@@ -91,9 +91,6 @@ case \"${target}\" in\n    rx-*-*)\n        SIM_ARCH(rx)\n        ;;\n-   sh64*-*-*)\n-       SIM_ARCH(sh64)\n-       ;;\n    sh*-*-*)\n        SIM_ARCH(sh)\n        ;;"
    },
    {
      "sha": "cb5904d166dcdeb8bbe6f908e38e0723b4671e06",
      "filename": "sim/sh64/ChangeLog",
      "status": "removed",
      "additions": 0,
      "deletions": 864,
      "changes": 864,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/ChangeLog?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,864 +0,0 @@\n-2021-01-09  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2017-09-06  John Baldwin  <jhb@FreeBSD.org>\n-\n-\t* configure: Regenerate.\n-\n-2017-02-13  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* decode-compact.c (sh64_compact_init_idesc_table): Use ARRAY_SIZE.\n-\t* decode-media.c (sh64_media_init_idesc_table): Likewise.\n-\n-2016-01-10  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* config.in, configure: Regenerate.\n-\n-2016-01-10  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2016-01-10  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure.ac (SIM_AC_OPTION_ENVIRONMENT): Delete call.\n-\t* configure: Regenerate.\n-\n-2016-01-10  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2016-01-10  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2016-01-10  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure.ac (SIM_AC_OPTION_INLINE): Delete call.\n-\t* configure: Regenerate.\n-\n-2016-01-10  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2016-01-10  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2016-01-09  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* config.in, configure: Regenerate.\n-\n-2016-01-06  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-if.c (sim_open): Mark argv const.\n-\t(sim_create_inferior): Mark argv and env const.\n-\n-2016-01-04  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2016-01-03  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-if.c (sim_open): Update sim_parse_args comment.\n-\n-2016-01-03  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sh64-sim.h (GETTWI, SETTWI): Delete unused defines.\n-\t(sh5_devices): Delete.\n-\t(struct _device): Delete.\n-\n-2016-01-03  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sh64.c (count_argc): Delete.\n-\t(trap_handler): Change count_argc to countargv.\n-\n-2016-01-03  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure.ac (SIM_AC_OPTION_HOSTENDIAN): Delete.\n-\t* configure: Regenerate.\n-\n-2016-01-02  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* arch.h (TARGET_BIG_ENDIAN): Delete.\n-\t* configure.ac (SIM_AC_OPTION_ENDIAN): Change BIG_ENDIAN to BIG.\n-\t* configure: Regenerate.\n-\n-2016-01-02  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-if.c (sim_open): Delete #if 0 sim_add_option_table call.\n-\n-2016-01-02  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-if.c (current_state): Delete.\n-\t(sim_open): Delete current_state assignment.\n-\n-2015-12-27  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* Makefile.in (SIM_OBJS): Delete sim-hload.o.\n-\n-2015-12-26  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* config.in, configure: Regenerate.\n-\n-2015-12-26  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-if.c (sim_create_inferior): Replace old #if 0 code with dupargv.\n-\n-2015-12-25  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* Makefile.in (SIM_OBJS): Delete sim-model.o.\n-\t* tconfig.h: Delete file.\n-\n-2015-12-25  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* arch.c: Rename MACH to SIM_MACH.\n-\t* cpuall.h: Likewise.\n-\t* sh64.c: Rename MACH to SIM_MACH, MACH_IMP_PROPERTIES to\n-\tSIM_MACH_IMP_PROPERTIES, and MODEL to SIM_MODEL.\n-\n-2015-12-25  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-main.h (WITH_SCACHE_PBB): Move from ...\n-\t* tconfig.h (WITH_SCACHE_PBB): ... here.\n-\n-2015-12-24  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* tconfig.h (SIM_HANDLES_LMA): Delete.\n-\n-2015-12-24  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* tconfig.h (SIM_HAVE_BREAKPOINTS, SIM_BREAKPOINT,\n-\tSIM_BREAKPOINT_SIZE): Delete.\n-\n-2015-12-24  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* tconfig.h (WITH_WATCHPOINTS): Delete.\n-\n-2015-12-24  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* tconfig.h (SIM_HAVE_MEM_SIZE): Delete.\n-\n-2015-11-15  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* Makefile.in (SIM_OBJS): Delete sim-reason.o, sim-reg.o, and\n-\tsim-stop.o.\n-\n-2015-11-14  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-if.c (sim_close): Delete.\n-\n-2015-06-23  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2015-06-12  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2015-06-12  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2015-06-12  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* decode-compact.c (sh64_compact_decode): Change TRACE_EXTRACT to\n-\tCGEN_TRACE_EXTRACT.\n-\t* decode-media.c: Likewise.\n-\t* mloop-compact.in (execute): Change TRACE_INSN_INIT to\n-\tCGEN_TRACE_INSN_INIT, TRACE_INSN to CGEN_TRACE_INSN, and TRACE_INSN_FINI\n-\tto CGEN_TRACE_INSN_FINI.\n-\t(sh64_compact_pbb_before): Likewise.\n-\t(sh64_compact_pbb_after): Change TRACE_INSN_FINI to CGEN_TRACE_INSN_FINI.\n-\t* mloop-media.in: Likewise.\n-\t* sem-compact.c: Rename TRACE_RESULT to CGEN_TRACE_RESULT.\n-\t* sem-compact-switch.c: Likewise.\n-\t* sem-media.c: Likewise.\n-\t* sem-media-switch.c: Likewise.\n-\n-2015-04-18  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-main.h (USING_SIM_BASE_H): Delete.\n-\n-2015-04-18  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-main.h (_sim_cpu, SIM_CPU): Delete.\n-\n-2015-04-18  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-main.h (CIA_ADDR): Define.\n-\n-2015-04-17  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-main.h (CIA_GET, CIA_SET): Delete.\n-\n-2015-04-15  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* Makefile.in (SIM_OBJS): Delete sim-cpu.o.\n-\t* sim-main.h (STATE_CPU): Delete.\n-\n-2015-04-15  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-main.h (struct sim_state): Change cpu to an array of pointers.\n-\t(STATE_CPU): Handle WITH_SMP.\n-\n-2015-04-13  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2015-04-06  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* Makefile.in (SIM_OBJS): Delete sim-engine.o and sim-hrw.o.\n-\n-2015-03-31  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* config.in, configure: Regenerate.\n-\n-2015-03-24  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* tconfig.h (SIM_HAVE_BIENDIAN): Delete.\n-\n-2015-03-24  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2015-03-24  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2015-03-23  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2015-03-23  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2015-03-23  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* Makefile.in (CONFIG_DEVICES): Delete.\n-\t(SIM_OBJS): Delete CONFIG_DEVICES.\n-\n-2015-03-16  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* aclocal.m4, config.in, configure: Regenerate.\n-\t* tconfig.in: Rename file ...\n-\t* tconfig.h: ... here.\n-\n-2015-03-15  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* tconfig.in [HAVE_DV_SOCKSER]: Delete.\n-\n-2015-03-14  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* Makefile.in (SIM_RUN_OBJS): Delete.\n-\n-2014-08-23  Hans-Peter Nilsson  <hp@axis.com>\n-\n-    \t* configure.ac: Default simulator hardware to off again\n-\twithout emitting errors when off or dv-sockser.o unavailable.\n-    \t* configure: Regenerate.\n-\n-2014-08-19  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure: Regenerate.\n-\n-2014-08-15  Roland McGrath  <mcgrathr@google.com>\n-\n-\t* configure: Regenerate.\n-\t* config.in: Regenerate.\n-\n-2013-09-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure: Regenerate.\n-\n-2013-06-03  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* aclocal.m4, configure: Regenerate.\n-\n-2013-03-26  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure: Regenerate.\n-\n-2013-03-23  Joel Sherrill  <joel.sherrill@oarcorp.com>\n-\n-\t* configure.ac: Fail if dv-sockser.o not available.\n-\tError when --disable-sim-hardware is specified.\n-\t* configure: Regenerated.\n-\n-2012-06-15  Joel Brobecker  <brobecker@adacore.com>\n-\n-\t* config.in, configure: Regenerate.\n-\n-2012-05-18  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 14072\n-\t* interp.c: Include config.h before system header files.\n-\n-2012-03-24  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* aclocal.m4, config.in, configure: Regenerate.\n-\n-2011-12-03  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* aclocal.m4: New file.\n-\t* configure: Regenerate.\n-\n-2011-10-17  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure.ac: Change include to common/acinclude.m4.\n-\n-2011-10-17  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* configure.ac: Change AC_PREREQ to 2.64.  Delete AC_CONFIG_HEADER\n-\tcall.  Replace common.m4 include with SIM_AC_COMMON.\n-\t* configure: Regenerate.\n-\n-2011-07-05  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sim-if.c (sim_do_command): Delete.\n-\n-2011-02-14  Mike Frysinger  <vapier@gentoo.org>\n-\n-\t* sh64.c (trap_handler): Change zfree to free.\n-\n-2010-10-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* sh-desc.h: Regenerate.\n-\n-2010-02-12  Doug Evans  <dje@sebabeach.org>\n-\n-\t* decode-media.c, * decode-media.h: Regenerate.\n-\n-2010-02-11  Doug Evans  <dje@sebabeach.org>\n-\n-\t* decode-compact.c, * decode-media.c, * defs-compact.h, * defs-media.h,\n-\t* sem-compact-switch.c, * sem-compact.c, * sem-media-switch.c,\n-\t* sem-media.c, * sh-desc.c, * sh-desc.h: Regenerate.\n-\n-2010-01-24  Doug Evans  <dje@sebabeach.org>\n-\n-\t* cpu.h: Regenerate.\n-\n-2010-01-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n-\n-\t* configure: Regenerate.\n-\n-2010-01-02  Doug Evans  <dje@sebabeach.org>\n-\n-\t* arch.c, * arch.h, * cpu.c, * cpu.h, * cpuall.h, * decode-compact.c,\n-\t* decode-compact.h, * decode-media.c, * decode-media.h,\n-\t* defs-compact.h, * defs-media.h, * sem-compact-switch.c,\n-\t* sem-compact.c, * sem-media-switch.c, * sem-media.c, * sh-desc.c,\n-\t* sh-desc.h, * sh-opc.h: Regenerate, update copyright year.\n-\n-2009-11-22  Doug Evans  <dje@sebabeach.org>\n-\n-\t* cpu.h: Regenerate.\n-\t* cpuall.h: Regenerate.\n-\t* decode-compact.c: Regenerate.\n-\t* decode-compact.h: Regenerate.\n-\t* decode-media.c: Regenerate.\n-\t* decode-media.h: Regenerate.\n-\t* defs-compact.h: Regenerate.\n-\t* defs-media.h: Regenerate.\n-\n-2009-11-03  Doug Evans  <dje@sebabeach.org>\n-\n-\t* arch.c: Regenerate.\n-\t* arch.h: Regenerate.\n-\t* cpu.c: Regenerate.\n-\t* cpu.h: Regenerate.\n-\t* cpuall.h: Regenerate.\n-\t* decode-compact.c: Regenerate.\n-\t* decode-compact.h: Regenerate.\n-\t* decode-media.c: Regenerate.\n-\t* decode-media.h: Regenerate.\n-\t* defs-compact.h: Regenerate.\n-\t* defs-media.h: Regenerate.\n-\t* sem-compact-switch.c: Regenerate.\n-\t* sem-compact.c: Regenerate.\n-\t* sem-media-switch.c: Regenerate.\n-\t* sem-media.c: Regenerate.\n-\t* sh-desc.c: Regenerate.\n-\t* sh-opc.h: Regenerate.\n-\n-\t* Makefile.in (SIM_EXTRA_DEPS): Add sh-desc.h sh-opc.h.\n-\t(sh-desc.o): New rule.\n-\t(sh-desc.h,sh-desc.c,sh-opc.h): Replaces rule for desc.h.\n-\t(all generated file rules): Specify generated file with full path.\n-\n-2009-10-24  Doug Evans  <dje@sebabeach.org>\n-\n-\t* sh-desc.h: Regenerate.\n-\n-2009-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n-\n-\t* config.in: Regenerate.\n-\t* configure: Likewise.\n-\n-\t* configure: Regenerate.\n-\n-2008-07-11  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* configure: Regenerate to track ../common/common.m4 changes.\n-\t* config.in: Ditto.\n-\n-2008-06-06  Vladimir Prus  <vladimir@codesourcery.com>\n-\t    Daniel Jacobowitz  <dan@codesourcery.com>\n-\t    Joseph Myers  <joseph@codesourcery.com>\n-\n-\t* configure: Regenerate.\n-\n-2006-12-21  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* config.in, configure: Regenerate.\n-\n-2006-10-18  Dave Brolley  <brolley@redhat.com>\n-\n-\t* Contribute the following changes:\n-\n-\t2006-06-14  Dave Brolley  <brolley@redhat.com>\n-\n-\t* sh64-sim.h (sh64_fipr,sh64_fiprs,sh64_fldp,sh64_fstp,sh64_ftrv)\n-\t(sh64_fpref): New functions.\n-\t* sh64.c (sh64_fipr,sh64_fiprs,sh64_fldp,sh64_fstp,sh64_ftrv)\n-\t(sh64_fpref): New functions.\n-\t(sh_models): Add sh2e, sh2a, sh2a_nofpu, sh4_nofpu, sh4a,\n-\tsh4a_nofpu and sh4al.\n-\t(sh2e_mach): New MACH.\n-\t(sh2a_fpu_mach): New MACH.\n-\t(sh2a_nofpu_mach): New MACH.\n-\t(sh4_nofpu): New MACH.\n-\t(sh4a_mach): New MACH.\n-\t(sh4a_nofpu_mach): New MACH.\n-\t(sh4al_mach): New MACH.\n-\t* Makefile.in (stamp-*): Depend on $(CGEN_CPU_DIR)/sh-sim.cpu. Pass\n-\tarchfile to CGEN script.\n-\t* arch.c: Regenerated.\n-\t* arch.h: Regenerated.\n-\t* cpu.c: Regenerated.\n-\t* cpu.h: Regenerated.\n-\t* cpuall.h: Regenerated.\n-\t* decode-compact.c: Regenerated.\n-\t* decode-compact.h: Regenerated.\n-\t* decode-media.c: Regenerated.\n-\t* decode-media.h: Regenerated.\n-\t* defs-compact.h: Regenerated.\n-\t* defs-media.h: Regenerated.\n-\t* sem-compact-switch.c: Regenerated.\n-\t* sem-compact.c: Regenerated.\n-\t* sem-media-switch.c: Regenerated.\n-\t* sem-media.c: Regenerated.\n-\t* sh-desc.c: Regenerated.\n-\t* sh-desc.h: Regenerated.\n-\t* sh-opc.h: Regenerated.\n-\n-2006-06-05  Daniel Jacobowitz  <dan@codesourcery.com>\n-\n-\t* configure: Regenerated.\n-\n-2006-05-31  Daniel Jacobowitz  <dan@codesourcery.com>\n-\n-\t* configure: Regenerated.\n-\n-2005-05-02  Corinna Vinschen  <vinschen@redhat.com>\n-\n-\t* sh-desc.h: Move extern declaration of sh_cgen_ifld_table after\n-\tinclusion of cgen.h.\n-\n-2005-04-15  Corinna Vinschen  <vinschen@redhat.com>\n-\n-\t* configure.ac: New file.\n-\t* configure.in: Remove.\n-\t* configure: Regenerate.\n-\t* defs-media.h (sem_fields): Add missing sfmt_ldhil member.\n-\t* sim-if.c (sim_open): Use struct bfd instead of struct _bfd.\n-\t(sim_create_inferior): Ditto.\n-\n-2004-12-08  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* configure: Regenerate for ../common/aclocal.m4 update.\n-\n-Fri Feb 21 19:49:45 2003  J\"orn Rennecke <joern.rennecke@superh.com>\n-\n-\t* sem-media-switch.c, sem-media.c: Regenerate.\n-\n-2002-06-24  Richard Sandiford  <rsandifo@redhat.com>\n-\n-\t* sh64.c: Update path of \"callback.h\".\n-\n-2002-06-20  Elena Zannoni  <ezannoni@redhat.com>\n-\n-\t* sh64.c: Include correct file for register numbers.\n-\n-Fri May 17 14:27:41 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n-\n-\t* sim-if.c (sh64_disassemble_insn): Use  print_insn_sh instead of\n-\tprint_insn_shl.\n-\n-2001-07-05  Ben Elliston  <bje@redhat.com>\n-\n-\t* Makefile.in (stamp-arch): Use $(CGEN_CPU_DIR).\n-\t(stamp-desc): Likewise.\n-\t(stamp-cpu): Likewise.\n-\t(stamp-defs-compact): Likewise.\n-\t(stamp-defs-media): Likewise.\n-\t(stamp-decode-compact): Likewise.\n-\t(stamp-decode-media): Likewise.\n-\n-2001-03-30  Ben Elliston  <bje@redhat.com>\n-\n-\t* sim-if.c (sim_open): Set sh64_idesc_{media,compact} to NULL.\n-\t* sh64-sim.h (sh64_idesc_{compact,media}): Declare extern.\n-\t* sh64.c (sh64_idesc_{compact,media}): Make non-static.\n-\n-2001-01-30  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh64.c (SYS_argc, SYS_argn, SYS_argnlen): Define.\n-\t(trap_handler): Implement these syscalls.\n-\t(count_argc): New function.\n-\n-2001-01-24  Alexandre Oliva  <aoliva@redhat.com>\n-\n-\t* sh64.c (trap_handler): Implement time.\n-\n-\t* sh64.c (fetch_str): New function.\n-\t(trap_handler): Re-implement write, and implement lseek, read,\n-\topen and close.\n-\n-2001-01-18  Elena Zannoni  <ezannoni@kwikemart.cygnus.com>\n-\n-\t* sh64.c (sh64_fetch_register): When fetching the PC, return the\n- \tPC value and set the LSB according to the current ISA.\n-\n-2001-01-18  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh64.c (trap_handler): Use sim_engine_halt to indicate a program\n-\thas terminated, not exit!\n-\n-2001-01-12  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh64.c (sh64_fcnvds): Re-implement.\n-\n-\t* sh64.c: Include \"bfd.h\".\n-\t(trap_handler): New function. Consolidate function bodies of\n-\tsh64_trapa and sh64_compact_trapa.\n-\t(sh64_trapa): Use it.\n-\t(sh64_compact_trapa): Likewise.\n-\n-2001-01-11  Ben Elliston  <bje@redhat.com>\n-\n-\t* sem-media.c, sem-media-switch.c: Regenerate.\n-\t* sem-compact.c, sem-compact-switch.c: Likewise.\n-\n-\t* sh64.c (sh64_trapa): Adhere to SH64 sys call conventions.\n-\n-\t* cpu.h, sh-desc.c, sh-desc.h, sh-opc.h: Regenerate.\n-\t* decode-media.c, decode-media.h, defs-media.h: Likewise.\n-\t* sem-compact.c, sem-compact-switch.c: Likewise.\n-\t* sem-media.c, sem-media-switch.c: Likewise.\n-\n-2001-01-10  Ben Elliston  <bje@redhat.com>\n-\n-\t* sim-main.h (CIA_SET): Encode the current instruction set mode\n-\twhen setting the cia.\n-\n-2001-01-08  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh64.c (sh64_store_register): Do not set insn set mode--allow\n-\tsh64_h_pc_set() to do it.\n-\t(shmedia_init_cpu): Do not initialise the insn set mode--let the\n-\tloader set it based on bit 0 of the executable's starting address.\n-\t(shcompact_init_cpu): Likewise.\n-\t* mloop-compact.c (sh64_compact_pbb_begin): Emit a warning message\n-\tabout malformed programs which have illegal insns in delay slots.\n-\t(sh64_compact_pbb_cti_chain): Examine the least significant bit of\n-\tthe new pc, not the current instruction set mode to determine if\n-\tthe next pbb in the chain will consist of SHmedia instructions.\n-\t* mloop-media.c (sh64_media_pbb_cti_chain): Likewise for SHcompact\n-\tswitches. Set bit 0 when setting the pc for the next SHmedia pbb.\n-\n-\t* cpu.c, cpu.h: Regenerate.\n-\t* sem-compact.c, sem-compact-switch.c: Likewise.\n-\t* sem-media.c, sem-media-switch.c: Likewise.\n-\n-\t* sh64.c (sh64_compact_trapa): Use sim_io_write_{stdout,error}(),\n-\tnot stdio functions to emit output when executing write traps.\n-\n-2001-01-07  Alexandre Oliva  <aoliva@redhat.com>\n-\n-\t* sh64.c (sh64_compact_trapa): Support writing to stderr.  Flush\n-\toutput stream after each (compound) write.\n-\n-2001-01-06  Ben Elliston  <bje@redhat.com>\n-\n-\t* sem-media.c, sem-media-switch.c: Regenerate.\n-\n-2001-01-04  Ben Elliston  <bje@redhat.com>\n-\n-\t* sem-compact.c, sem-compact-switch.c: Regenerate.\n-\t* cpu.h: Regenerate.\n-\n-2001-01-03  Ben Elliston  <bje@redhat.com>\n-\n-\t* cpu.c, cpu.h: Regenerate.\n-\t* sem-media.c, sem-media-switch.c: Likewise.\n-\n-2001-01-02  Ben Elliston  <bje@redhat.com>\n-\n-\t* sim-if.c (sh64_disassemble_insn): Set arch and mach fields using\n-\tBFD primitives.\n-\n-\t* sem-compact.c, sem-compact-switch.c: Regenerate.\n-\n-2000-12-30  Alexandre Oliva  <aoliva@redhat.com>\n-\n-\t* sh64.c (sh64_nsb): Re-implement correctly.\n-\n-2000-12-26  Alexandre Oliva  <aoliva@redhat.com>\n-\n-\t* sh64.c (sh64_nsb): Re-implement.\n-\n-2000-12-27  Ben Elliston  <bje@redhat.com>\n-\n-\t* cpu.c, cpu.h: Regenerate.\n-\t* sem-compact.c, sem-compact-switch.c: Likewise.\n-\t* sem-media.c, sem-media-switch.c: Likewise.\n-\t* sh-desc.c: Likewise.\n-\n-2000-12-26  Ben Elliston  <bje@redhat.com>\n-\n-\t* mloop-compact.in, mloop-media.in: Remove.\n-\t* mloop-compact.c, mloop-media.c: New files.\n-\t* eng-compact.c, eng-media.c: Likewise.\n-\t* Makefile.in (mloop-compact.c): Remove target.\n-\t(stamp-mloop-compact): Likewise.\n-\t(mloop-media.c): Likewise.\n-\t(stamp-mloop-media): Likewise.\n-\t(sh64-clean): Update.\n-\t(stamp-mloop): Remove.\n-\n-2000-12-23  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh64.c (sh64_prepare_run): Rename from shmedia_prepare_run.\n-\t(shcompact_prepare_run): Remove.\n-\t(sh2_mach, sh3_mach, sh3e_mach, sh4_mach, sh5_mach): Update.\n-\n-2000-12-22  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh64.c (sh64_idesc_media, sh64_idesc_compact): New variables.\n-\t(sh64_dump): Remove.\n-\t(sh64_engine_run_full): Only compute idesc tables once.\n-\t(sh64_engine_run_fast): Likewise.\n-\t(shmedia_prepare_run): Do nothing.\n-\t(shcompact_prepare_run): Likewise.\n-\n-\t* sem-compact.c, sem-compact-switch.c: Regenerate.\n-\t* sem-media.c, sem-media-switch.c: Likewise.\n-\n-2000-12-19  Ben Elliston  <bje@redhat.com>\n-\n-\t* sem-media.c, sem-media-switch.c: Regenerate.\n-\n-2000-12-15  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh64.c (sh64_store_register): When storing a new PC, set ISA\n-\tmode based on the value of bit 0.\n-\n-\t* sh64.c: Include \"sim-sh64.h\" for GDB interfacing.\n-\t(sh64_fetch_register): Implement.\n-\t(sh64_store_register): Likewise.\n-\n-\t* sh64-sim.h (sh64_fmacs): Declare.\n-\t(sh64_ftrcdl, sh64_ftrcdq, sh64_ftrcsl): Likewise.\n-\n-\t* sem-media.c, sem-media-switch.c: Regenerate.\n-\n-2000-12-13  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh64-sim.h (sh64_compact_trapa): Renamed from sh64_trapa.\n-\t(sh64_trapa): Renamed from sh64_trap.\n-\t* sh64.c (sh64_trapa): Call sh64_compact_trapa for handling.\n-\tApply renaming described above.\n-\n-\t* decode-media.c, decode-media.h, defs-media.h: Regenerate.\n-\t* sem-media.c sem-media-switch.c: Likewise.\n-\t* sh-desc.c, sh-desc.h, sh-opc.h: Likewise.\n-\n-2000-12-12  Ben Elliston  <bje@redhat.com>\n-\n-\t* cpu.c, cpu.h, sh-desc.c: Regenerate.\n-\t* sem-media.c, sem-media-switch.c: Likewise.\n-\t* sem-compact.c, sem-compact-switch.c: Likewise.\n-\t* sh64-sim.h (sh64_ftrvs): Declare.\n-\t* sh64.c (sh64_ftrvs): Bug fixes.\n-\n-\t* sh64.c (sh64_fcmpgtd): Fix order of arguments to sim_fpu_is_gt.\n-\t(sh64_fcmpgts): Likewise.\n-\n-2000-12-11  Ben Elliston  <bje@redhat.com>\n-\n-\t* decode-media.c, decode-media.h: Regenerate.\n-\t* defs-media.h: Likewise.\n-\t* sem-media.c, sem-media-switch.c: Likewise.\n-\t* sh-desc.c: Likewise.\n-\n-2000-12-08  Ben Elliston  <bje@redhat.com>\n-\n-\t* decode-media.c, decode-media.h: Regenerate.\n-\t* defs-media.h: Likewise.\n-\t* sem-media.c, sem-media-switch.c: Likewise.\n-\n-2000-12-07  Ben Elliston  <bje@redhat.com>\n-\n-\t* decode-media.c, decode-media.h: Regenerate.\n-\t* sem-media.c, sem-media-switch.c: Likewise.\n-\n-\t* defs-media.h: Regenete.\n-\t* decode-compact.c, decode-media.c: Likewise.\n-\n-2000-12-06  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh64.c (sh64_fcmpund): Return a BI.\n-\t(sh64_fcmpuns): Likewise.\n-\t(sh64_nsb): Treat source value as unsigned.\n-\t(sh64_compact_model_insn_before): New function.\n-\t(sh64_media_model_insn_before): Likewise.\n-\t(sh64_compact_model_insn_after): Likewise.\n-\t(sh64_media_model_insn_after): Likewise.\n-\t(sh_models): Use sh5_mach for \"sh5\".\n-\t* sh64-sim.h: Add missing function prototypes.\n-\n-\t* cpu.c, cpu.h, defs-media.h, sh-desc.c: Regenerate.\n-\t* decode-media.c, decode-media.h: Likewise.\n-\t* sem-media.c, sem-media-switch.c: Likewise.\n-\n-2000-12-05  Ben Elliston  <bje@redhat.com>\n-\n-\t* mloop-compact.in, mloop-media.in: Use @prefix@.\n-\t* Makefile.in (stamp-mloop-compact): Pass -outfile-suffix option\n-\tto make generated files safe in the presence of parallel makes.\n-\t(stamp-mloop-media): Likewise.\n-\n-\t* decode-media.c, defs-media.h: Regenerate.\n-\n-2000-12-04  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh64-sim.h: Add function prototypes from sh64.c.\n-\n-\t* Makefile.in (SH64_OBJS): Add ISA variant objects.\n-\t(SIM_EXTRA_DEPS): Do not depend on opcodes headers.\n-\t(SH64_INCLUDE_DEPS): Update for ISA variants.\n-\t(stamp-mloop-compact, stamp-mloop-media): New targets.\n-\t(decode-compact.o, sem-compact.o): New rules.\n-\t(decode-media.o, sem-media.o): Likewise.\n-\t(sh64-clean): Update.\n-\t(stamp-all, stamp-mloop, stamp-decode, stamp-defs): New targets.\n-\t(stamp-desc, stamp-cpu): Likewise.\n-\t(stamp-defs-compact, stamp-defs-media): Likewise.\n-\t(stamp-decode-compact, stamp-decode-media): Likewise.\n-\n-\t* defs-compact.h, defs-media.h: Regenerate.\n-\n-2000-12-03  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh64-sim.h (sh64_fcmpeqd, sh64_fcmpeqs): Declare.\n-\t(sh64_fcmpged, sh64_fcmpges): Likewise.\n-\t(sh64_fcmpgtd, sh64_fcmpgts): Likewise.\n-\n-\t* sh64.c (sh64_endian): New function.\n-\t(sh64_fcmpeqd, sh64_fcmpeqs): Return a BI.\n-\t(sh64_fcmpged, sh64_fcmpges): Likewise.\n-\t(sh64_fcmpgtd, sh64_fcmpgts): Likewise.\n-\t(sh64_trap): Implement a basic syscall facility.\n-\t(sh64_trapa): Exit with return code in R5, not 0.\n-\t(sh64_model_sh5_u_exec): Remove.\n-\t(sh64_engine_run_full): New function.\n-\t(sh64_engine_run_fast): Likewise.\n-\t(shmedia_prepare_run): Likewise.\n-\t(shcompact_prepare_run): Likewise.\n-\t(sh64_get_idata): Likewise.\n-\t(sh64_init_cpu): Likewise.\n-\t(shmedia_init_cpu): Likewise.\n-\t(shcompact_init_cpu): Likewise.\n-\t(sh64_model_init): Likewise.\n-\t(sh_models): Define.\n-\t(sh5_imp_properties): Likewise.\n-\t(sh2_mach, sh3_mach, sh4_mach, sh5_mach): Define.\n-\n-\t* sem-compact.c, sem-compact-switch.c: Regenerate.\n-\n-2000-12-01  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh64-sim.h (sh64_endian): Declare.\n-\t* sim-main.h (sim_cia): Use UDI, not USI.\n-\t(WITH_PROFILE_MODEL_P): Remove.\n-\t* sim-if.c (sim_sh64_disassemble_insn): Remove.\n-\t(sh64_disassemble_insn): New function.\n-\t(sim_open): Use as this CPU's disassembler.\n-\t* eng.h: New file.\n-\t* decode.h (WITH_PROFILE_MODEL_P): Undefine.\n-\n-\t* decode-compact.c, decode-media.c: Regenerate.\n-\t* defs-compact.h, defs-media.h: Likewise.\n-\t* sem-compact.c, sem-compact-switch.c: Likewise.\n-\t* sh-desc.c, sh-desc.h: Likewise.\n-\t* cpu.c, cpu.h, cpuall.h: Likewise.\n-\n-2000-11-30  Ben Elliston  <bje@redhat.com>\n-\n-\t* arch.c, sh-desc.c, sh-desc.h: Regenerate.\n-\n-\t* tconfig.in (SIM_HAVE_BIENDIAN): Define.\n-\t* configure.in (SIM_AC_OPTION_BIGENDIAN): Do not hard-wire a\n-\ttarget byte order, but default to big endian.\n-\t* configure: Regenerate.\n-\n-2000-11-27  Ben Elliston  <bje@redhat.com>\n-\n-\t* sim-main.h (WITH_PROFILE_MODEL_P): Define.\n-\t* sh64-sim.h (ISM_COMPACT, ISM_MEDIA): New enums.\n-\n-\t* sh-desc.c, sh-desc.h: Regenerate.\n-\t* arch.c, cpu.h, cpuall.h: Regenerate.\n-\t* decode.h (WITH_PROFILE_MODEL_P): Remove.\n-\n-\t* mloop-compact.in, mloop-media.in: New files.\n-\t* decode.h: Likewise.\n-\n-2000-11-26  Ben Elliston  <bje@redhat.com>\n-\n-\t* sem-compact.c, sem-compact-switch.c: Generate.\n-\t* sem-media.c, sem-media-switch.c: Likewise.\n-\n-2000-11-25  Ben Elliston  <bje@redhat.com>\n-\n-\t* sh-desc.c, sh-desc.h, sh-opc.h: Generate.\n-\n-\t* arch.c, arch.h, cpuall.h, cpu.c, cpu.h: Generate.\n-\t* decode-compact.c, decode-compact.h: Likewise.\n-\t* decode-media.c, decode-media.h: Likewise.\n-\t* sh64-sim.h: New file.\n-\t* sim-main.h: Likewise.\n-\n-2000-11-22  Ben Elliston  <bje@redhat.com>\n-\n-\t* sim-if.c: New file.\n-\t* sh64.c: Likewise.\n-\n-2000-11-16  Ben Elliston  <bje@redhat.com>\n-\n-\t* config.in: New file.\n-\t* tconfig.in: Likewise.\n-\t* configure.in: Likewise.\n-\t* configure: Generate.\n-\t* Makefile.in: New file."
    },
    {
      "sha": "4b4d3ab0e6d4438e3585038dee2904023c2848aa",
      "filename": "sim/sh64/Makefile.in",
      "status": "removed",
      "additions": 0,
      "deletions": 150,
      "changes": 150,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/Makefile.in?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,150 +0,0 @@\n-# Makefile template for Configure for the SH64 simulator\n-# Copyright (C) 2000-2021 Free Software Foundation, Inc.\n-# Contributed by Red Hat, Inc.\n-#\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-## COMMON_PRE_CONFIG_FRAG\n-\n-SH64_OBJS = sh64.o cpu.o sh-desc.o \\\n-\tdecode-compact.o sem-compact.o mloop-compact.o \\\n-\tdecode-media.o sem-media.o mloop-media.o\n-\n-SIM_OBJS = \\\n-\t$(SIM_NEW_COMMON_OBJS) \\\n-\tcgen-utils.o cgen-trace.o cgen-scache.o \\\n-\tcgen-run.o \\\n-\tsim-if.o arch.o \\\n-\t$(SH64_OBJS)\n-\n-# Extra headers included by sim-main.h.\n-SIM_EXTRA_DEPS = \\\n-\t$(CGEN_INCLUDE_DEPS) \\\n-\tarch.h cpuall.h sh64-sim.h sh-desc.h sh-opc.h\n-\n-SIM_EXTRA_CFLAGS =\n-\n-SIM_EXTRA_CLEAN = sh64-clean\n-\n-## COMMON_POST_CONFIG_FRAG\n-\n-arch = sh\n-\n-sim-if.o: sim-if.c $(SIM_MAIN_DEPS) $(srcdir)/../common/sim-core.h\n-\n-arch.o: arch.c $(SIM_MAIN_DEPS)\n-\n-sh-desc.o: sh-desc.c $(SIM_MAIN_DEPS)\n-\n-devices.o: devices.c $(SIM_MAIN_DEPS)\n-\n-# SH64 objs\n-\n-SH64_INCLUDE_DEPS = \\\n-\t$(CGEN_MAIN_CPU_DEPS) \\\n-\tcpu.h decode.h \\\n-\tdecode-compact.h eng-compact.h defs-compact.h \\\n-\tdecode-media.h eng-media.h defs-media.h\n-\n-sh64.o: sh64.c $(SH64_INCLUDE_DEPS)\n-\n-mloop-compact.o: mloop-compact.c sem-compact-switch.c $(SH64_INCLUDE_DEPS)\n-\t$(CC) -c $(srcdir)/mloop-compact.c $(ALL_CFLAGS) -DWANT_ISA_COMPACT\n-\n-mloop-media.o: mloop-media.c sem-media-switch.c $(SH64_INCLUDE_DEPS)\n-\t$(CC) -c $(srcdir)/mloop-media.c $(ALL_CFLAGS) -DWANT_ISA_MEDIA\n-\n-cpu.o: $(srcdir)/cpu.c $(SH64_INCLUDE_DEPS)\n-\n-decode-compact.o: decode-compact.c $(SH64_INCLUDE_DEPS)\n-\t$(CC) -c $(srcdir)/decode-compact.c $(ALL_CFLAGS) -DWANT_ISA_COMPACT\n-\n-sem-compact.o: sem-compact.c $(SH64_INCLUDE_DEPS)\n-\t$(CC) -c $(srcdir)/sem-compact.c $(ALL_CFLAGS) -DWANT_ISA_COMPACT\n-\n-decode-media.o: decode-media.c $(SH64_INCLUDE_DEPS)\n-\t$(CC) -c $(srcdir)/decode-media.c $(ALL_CFLAGS) -DWANT_ISA_MEDIA\n-\n-sem-media.o: sem-media.c $(SH64_INCLUDE_DEPS)\n-\t$(CC) -c $(srcdir)/sem-media.c $(ALL_CFLAGS) -DWANT_ISA_MEDIA\n-\n-sh64-clean:\n-\trm -f tmp-*\n-\trm -f stamp-defs-{compact,media}\n-\trm -f stamp-arch stamp-desc stamp-cpu stamp-decode-{compact,media}\n-\n-# cgen support, enable with --enable-cgen-maint\n-CGEN_MAINT = ; @true\n-# The following line is commented in or out depending upon --enable-cgen-maint.\n-@CGEN_MAINT@CGEN_MAINT =\n-\n-# Utility rules for humans.\n-.PHONY: stamp-all stamp-decode stamp-defs\n-stamp-all: stamp-arch stamp-desc stamp-cpu stamp-decode stamp-defs\n-stamp-decode: stamp-decode-compact stamp-decode-media\n-stamp-defs: stamp-defs-compact stamp-defs-media\n-\n-# NOTE: Generated source files are specified as full paths,\n-# e.g. $(srcdir)/arch.c, because make may decide the files live\n-# in objdir otherwise.\n-\n-stamp-arch: $(CGEN_READ_SCM) $(CGEN_ARCH_SCM) $(CGEN_CPU_DIR)/sh.cpu $(CGEN_CPU_DIR)/sh.opc $(CGEN_CPU_DIR)/sh64-media.cpu $(CGEN_CPU_DIR)/sh64-compact.cpu $(CGEN_CPU_DIR)/sh-sim.cpu Makefile\n-\t$(MAKE) cgen-arch $(CGEN_FLAGS_TO_PASS) mach=all isa=compact,media archfile=$(CGEN_CPU_DIR)/sh.cpu \\\n-\t  FLAGS=\"with-scache\"\n-\ttouch $@\n-$(srcdir)/arch.h $(srcdir)/arch.c $(srcdir)/cpuall.h: $(CGEN_MAINT) stamp-arch\n-\t@true\n-\n-stamp-desc: $(CGEN_READ_SCM) $(CGEN_CPU_SCM) $(CGEN_CPU_DIR)/sh.cpu $(CGEN_CPU_DIR)/sh.opc $(CGEN_CPU_DIR)/sh64-compact.cpu $(CGEN_CPU_DIR)/sh64-media.cpu $(CGEN_CPU_DIR)/sh-sim.cpu Makefile\n-\t$(MAKE) cgen-desc $(CGEN_FLAGS_TO_PASS) cpu=sh64 mach=all isa=compact,media archfile=$(CGEN_CPU_DIR)/sh.cpu \n-\ttouch $@\n-$(srcdir)/sh-desc.h $(srcdir)/sh-desc.c $(srcdir)/sh-opc.h: $(CGEN_MAINT) stamp-desc\n-\t@true\n-\n-stamp-cpu: $(CGEN_READ_SCM) $(CGEN_CPU_SCM) $(CGEN_CPU_DIR)/sh.cpu $(CGEN_CPU_DIR)/sh.opc $(CGEN_CPU_DIR)/sh64-compact.cpu $(CGEN_CPU_DIR)/sh64-media.cpu $(CGEN_CPU_DIR)/sh-sim.cpu Makefile\n-\t$(MAKE) cgen-cpu $(CGEN_FLAGS_TO_PASS) \\\n-\t  cpu=sh64 mach=sh4,sh5 isa=compact,media FLAGS=\"with-multiple-isa with-scache\" archfile=$(CGEN_CPU_DIR)/sh.cpu \n-\trm -f $(srcdir)/model.c\n-\ttouch $@\n-$(srcdir)/cpu.h $(srcdir)/cpu.c: $(CGEN_MAINT) stamp-cpu\n-\t@true\n-\n-stamp-defs-compact: $(CGEN_READ_SCM) $(CGEN_CPU_SCM) $(CGEN_CPU_DIR)/sh.cpu $(CGEN_CPU_DIR)/sh.opc $(CGEN_CPU_DIR)/sh64-compact.cpu $(CGEN_CPU_DIR)/sh-sim.cpu Makefile\n-\t$(MAKE) cgen-defs $(CGEN_FLAGS_TO_PASS) \\\n-\t  cpu=sh64 mach=sh5 isa=compact FLAGS=\"with-scache\" SUFFIX=\"-compact\" archfile=$(CGEN_CPU_DIR)/sh.cpu \n-\ttouch $@\n-$(srcdir)/defs-compact.h: $(CGEN_MAINT) stamp-defs-compact\n-\t@true\n-\n-stamp-defs-media: $(CGEN_READ_SCM) $(CGEN_CPU_SCM) $(CGEN_CPU_DIR)/sh.cpu $(CGEN_CPU_DIR)/sh.opc $(CGEN_CPU_DIR)/sh64-media.cpu $(CGEN_CPU_DIR)/sh-sim.cpu Makefile\n-\t$(MAKE) cgen-defs $(CGEN_FLAGS_TO_PASS) \\\n-\t  cpu=sh64 mach=sh5 isa=media FLAGS=\"with-scache\" SUFFIX=\"-media\" archfile=$(CGEN_CPU_DIR)/sh.cpu \n-\ttouch $@\n-$(srcdir)/defs-media.h: $(CGEN_MAINT) stamp-defs-media\n-\n-stamp-decode-compact: $(CGEN_READ_SCM) $(CGEN_CPU_SCM) $(CGEN_DECODE_SCM) $(CGEN_CPU_DIR)/sh.cpu $(CGEN_CPU_DIR)/sh.opc $(CGEN_CPU_DIR)/sh64-compact.cpu $(CGEN_CPU_DIR)/sh-sim.cpu Makefile\n-\t$(MAKE) cgen-decode $(CGEN_FLAGS_TO_PASS) \\\n-\t  cpu=sh64 mach=sh5 isa=compact FLAGS=\"with-scache\" SUFFIX=\"-compact\" EXTRAFILES=\"$(CGEN_CPU_SEM) $(CGEN_CPU_SEMSW)\" \\\n-\t  archfile=$(CGEN_CPU_DIR)/sh.cpu\n-\ttouch $@\n-$(srcdir)/sem-compact.c $(srcdir)/sem-compact-switch.c $(srcdir)/decode-compact.c $(srcdir)/decode-compact.h: $(CGEN_MAINT) stamp-decode-compact\n-\t@true\n-\n-stamp-decode-media: $(CGEN_READ_SCM) $(CGEN_CPU_SCM) $(CGEN_DECODE_SCM) $(CGEN_CPU_DIR)/sh.cpu $(CGEN_CPU_DIR)/sh.opc $(CGEN_CPU_DIR)/sh64-media.cpu $(CGEN_CPU_DIR)/sh-sim.cpu Makefile\n-\t$(MAKE) cgen-decode $(CGEN_FLAGS_TO_PASS) \\\n-\t  cpu=sh64 mach=sh5 isa=media FLAGS=\"with-scache\" SUFFIX=\"-media\" EXTRAFILES=\"$(CGEN_CPU_SEM) $(CGEN_CPU_SEMSW)\" \\\n-\t  archfile=$(CGEN_CPU_DIR)/sh.cpu\n-\ttouch $@\n-$(srcdir)/sem-media.c $(srcdir)/sem-media-switch.c $(srcdir)/decode-media.c $(srcdir)/decode-media.h: $(CGEN_MAINT) stamp-decode-media\n-\t@true"
    },
    {
      "sha": "e9f11c775c310ba5c0051681d74d579dd6f39321",
      "filename": "sim/sh64/aclocal.m4",
      "status": "removed",
      "additions": 0,
      "deletions": 119,
      "changes": 119,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/aclocal.m4?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,119 +0,0 @@\n-# generated automatically by aclocal 1.15.1 -*- Autoconf -*-\n-\n-# Copyright (C) 1996-2017 Free Software Foundation, Inc.\n-\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n-# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n-# PARTICULAR PURPOSE.\n-\n-m4_ifndef([AC_CONFIG_MACRO_DIRS], [m4_defun([_AM_CONFIG_MACRO_DIRS], [])m4_defun([AC_CONFIG_MACRO_DIRS], [_AM_CONFIG_MACRO_DIRS($@)])])\n-# AM_CONDITIONAL                                            -*- Autoconf -*-\n-\n-# Copyright (C) 1997-2017 Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n-\n-# AM_CONDITIONAL(NAME, SHELL-CONDITION)\n-# -------------------------------------\n-# Define a conditional.\n-AC_DEFUN([AM_CONDITIONAL],\n-[AC_PREREQ([2.52])dnl\n- m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],\n-       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl\n-AC_SUBST([$1_TRUE])dnl\n-AC_SUBST([$1_FALSE])dnl\n-_AM_SUBST_NOTMAKE([$1_TRUE])dnl\n-_AM_SUBST_NOTMAKE([$1_FALSE])dnl\n-m4_define([_AM_COND_VALUE_$1], [$2])dnl\n-if $2; then\n-  $1_TRUE=\n-  $1_FALSE='#'\n-else\n-  $1_TRUE='#'\n-  $1_FALSE=\n-fi\n-AC_CONFIG_COMMANDS_PRE(\n-[if test -z \"${$1_TRUE}\" && test -z \"${$1_FALSE}\"; then\n-  AC_MSG_ERROR([[conditional \"$1\" was never defined.\n-Usually this means the macro was only invoked conditionally.]])\n-fi])])\n-\n-# Copyright (C) 2003-2017 Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n-\n-# Check whether the underlying file-system supports filenames\n-# with a leading dot.  For instance MS-DOS doesn't.\n-AC_DEFUN([AM_SET_LEADING_DOT],\n-[rm -rf .tst 2>/dev/null\n-mkdir .tst 2>/dev/null\n-if test -d .tst; then\n-  am__leading_dot=.\n-else\n-  am__leading_dot=_\n-fi\n-rmdir .tst 2>/dev/null\n-AC_SUBST([am__leading_dot])])\n-\n-# Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-\n-# From Jim Meyering\n-\n-# Copyright (C) 1996-2017 Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n-\n-# AM_MAINTAINER_MODE([DEFAULT-MODE])\n-# ----------------------------------\n-# Control maintainer-specific portions of Makefiles.\n-# Default is to disable them, unless 'enable' is passed literally.\n-# For symmetry, 'disable' may be passed as well.  Anyway, the user\n-# can override the default with the --enable/--disable switch.\n-AC_DEFUN([AM_MAINTAINER_MODE],\n-[m4_case(m4_default([$1], [disable]),\n-       [enable], [m4_define([am_maintainer_other], [disable])],\n-       [disable], [m4_define([am_maintainer_other], [enable])],\n-       [m4_define([am_maintainer_other], [enable])\n-        m4_warn([syntax], [unexpected argument to AM@&t@_MAINTAINER_MODE: $1])])\n-AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n-  dnl maintainer-mode's default is 'disable' unless 'enable' is passed\n-  AC_ARG_ENABLE([maintainer-mode],\n-    [AS_HELP_STRING([--]am_maintainer_other[-maintainer-mode],\n-      am_maintainer_other[ make rules and dependencies not useful\n-      (and sometimes confusing) to the casual installer])],\n-    [USE_MAINTAINER_MODE=$enableval],\n-    [USE_MAINTAINER_MODE=]m4_if(am_maintainer_other, [enable], [no], [yes]))\n-  AC_MSG_RESULT([$USE_MAINTAINER_MODE])\n-  AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])\n-  MAINT=$MAINTAINER_MODE_TRUE\n-  AC_SUBST([MAINT])dnl\n-]\n-)\n-\n-# Copyright (C) 2006-2017 Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n-\n-# _AM_SUBST_NOTMAKE(VARIABLE)\n-# ---------------------------\n-# Prevent Automake from outputting VARIABLE = @VARIABLE@ in Makefile.in.\n-# This macro is traced by Automake.\n-AC_DEFUN([_AM_SUBST_NOTMAKE])\n-\n-# AM_SUBST_NOTMAKE(VARIABLE)\n-# --------------------------\n-# Public sister of _AM_SUBST_NOTMAKE.\n-AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])\n-"
    },
    {
      "sha": "20266f8bb01646e3531d16c747a4753e3fe5f07e",
      "filename": "sim/sh64/arch.c",
      "status": "removed",
      "additions": 0,
      "deletions": 67,
      "changes": 67,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/arch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/arch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/arch.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,67 +0,0 @@\n-/* Simulator support for sh.\n-\n-THIS FILE IS MACHINE GENERATED WITH CGEN.\n-\n-Copyright 1996-2021 Free Software Foundation, Inc.\n-\n-This file is part of the GNU simulators.\n-\n-   This file is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   It is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n-\n-*/\n-\n-#include \"sim-main.h\"\n-#include \"bfd.h\"\n-\n-const SIM_MACH *sim_machs[] =\n-{\n-#ifdef HAVE_CPU_SH64\n-  & sh2_mach,\n-#endif\n-#ifdef HAVE_CPU_SH64\n-  & sh2e_mach,\n-#endif\n-#ifdef HAVE_CPU_SH64\n-  & sh2a_fpu_mach,\n-#endif\n-#ifdef HAVE_CPU_SH64\n-  & sh2a_nofpu_mach,\n-#endif\n-#ifdef HAVE_CPU_SH64\n-  & sh3_mach,\n-#endif\n-#ifdef HAVE_CPU_SH64\n-  & sh3e_mach,\n-#endif\n-#ifdef HAVE_CPU_SH64\n-  & sh4_nofpu_mach,\n-#endif\n-#ifdef HAVE_CPU_SH64\n-  & sh4_mach,\n-#endif\n-#ifdef HAVE_CPU_SH64\n-  & sh4a_nofpu_mach,\n-#endif\n-#ifdef HAVE_CPU_SH64\n-  & sh4a_mach,\n-#endif\n-#ifdef HAVE_CPU_SH64\n-  & sh4al_mach,\n-#endif\n-#ifdef HAVE_CPU_SH64\n-  & sh5_mach,\n-#endif\n-  0\n-};\n-"
    },
    {
      "sha": "586752c4939b7882f655d1951f17c8a9465a1582",
      "filename": "sim/sh64/arch.h",
      "status": "removed",
      "additions": 0,
      "deletions": 216,
      "changes": 216,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/arch.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/arch.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/arch.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,216 +0,0 @@\n-/* Simulator header for sh.\n-\n-THIS FILE IS MACHINE GENERATED WITH CGEN.\n-\n-Copyright 1996-2021 Free Software Foundation, Inc.\n-\n-This file is part of the GNU simulators.\n-\n-   This file is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   It is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n-\n-*/\n-\n-#ifndef SH_ARCH_H\n-#define SH_ARCH_H\n-\n-/* Enum declaration for model types.  */\n-typedef enum model_type {\n-  MODEL_SH2A_NOFPU, MODEL_SH2A_FPU, MODEL_SH4_NOFPU, MODEL_SH4\n- , MODEL_SH4A_NOFPU, MODEL_SH4A, MODEL_SH4AL, MODEL_SH5\n- , MODEL_SH5_MEDIA, MODEL_SH2, MODEL_SH2E, MODEL_SH3\n- , MODEL_SH3E, MODEL_MAX\n-} MODEL_TYPE;\n-\n-#define MAX_MODELS ((int) MODEL_MAX)\n-\n-/* Enum declaration for unit types.  */\n-typedef enum unit_type {\n-  UNIT_NONE, UNIT_SH2A_NOFPU_U_MULR_GR, UNIT_SH2A_NOFPU_U_MULR, UNIT_SH2A_NOFPU_U_TRAP\n- , UNIT_SH2A_NOFPU_U_WRITE_BACK, UNIT_SH2A_NOFPU_U_USE_MULTIPLY_RESULT, UNIT_SH2A_NOFPU_U_SHIFT, UNIT_SH2A_NOFPU_U_TAS\n- , UNIT_SH2A_NOFPU_U_MULSW, UNIT_SH2A_NOFPU_U_MULL, UNIT_SH2A_NOFPU_U_DMUL, UNIT_SH2A_NOFPU_U_MACL\n- , UNIT_SH2A_NOFPU_U_MACW, UNIT_SH2A_NOFPU_U_MULTIPLY, UNIT_SH2A_NOFPU_U_SET_MAC, UNIT_SH2A_NOFPU_U_LOAD_MAC\n- , UNIT_SH2A_NOFPU_U_LOAD_VBR, UNIT_SH2A_NOFPU_U_LOAD_GBR, UNIT_SH2A_NOFPU_U_USE_GR, UNIT_SH2A_NOFPU_U_LOAD_GR\n- , UNIT_SH2A_NOFPU_U_STC_VBR, UNIT_SH2A_NOFPU_U_LDCL_VBR, UNIT_SH2A_NOFPU_U_LDCL, UNIT_SH2A_NOFPU_U_USE_TBIT\n- , UNIT_SH2A_NOFPU_U_LDC_GBR, UNIT_SH2A_NOFPU_U_LDC_SR, UNIT_SH2A_NOFPU_U_SET_SR_BIT, UNIT_SH2A_NOFPU_U_USE_PR\n- , UNIT_SH2A_NOFPU_U_LOAD_PR, UNIT_SH2A_NOFPU_U_STS_PR, UNIT_SH2A_NOFPU_U_LDS_PR, UNIT_SH2A_NOFPU_U_MEMORY_ACCESS\n- , UNIT_SH2A_NOFPU_U_LOGIC_B, UNIT_SH2A_NOFPU_U_JSR, UNIT_SH2A_NOFPU_U_JMP, UNIT_SH2A_NOFPU_U_BRANCH\n- , UNIT_SH2A_NOFPU_U_SX, UNIT_SH2A_NOFPU_U_EXEC, UNIT_SH2A_FPU_U_USE_DR, UNIT_SH2A_FPU_U_LOAD_DR\n- , UNIT_SH2A_FPU_U_SET_DR, UNIT_SH2A_FPU_U_MULR_GR, UNIT_SH2A_FPU_U_MULR, UNIT_SH2A_FPU_U_FCNV\n- , UNIT_SH2A_FPU_U_FCMP, UNIT_SH2A_FPU_U_FSQRT, UNIT_SH2A_FPU_U_FDIV, UNIT_SH2A_FPU_U_FPU_LOAD_GR\n- , UNIT_SH2A_FPU_U_USE_FPSCR, UNIT_SH2A_FPU_U_LDSL_FPSCR, UNIT_SH2A_FPU_U_LDS_FPSCR, UNIT_SH2A_FPU_U_USE_FPUL\n- , UNIT_SH2A_FPU_U_FLDS_FPUL, UNIT_SH2A_FPU_U_LOAD_FPUL, UNIT_SH2A_FPU_U_SET_FPUL, UNIT_SH2A_FPU_U_FPU_MEMORY_ACCESS\n- , UNIT_SH2A_FPU_U_USE_FR, UNIT_SH2A_FPU_U_SET_FR_0, UNIT_SH2A_FPU_U_SET_FR, UNIT_SH2A_FPU_U_LOAD_FR\n- , UNIT_SH2A_FPU_U_MAYBE_FPU, UNIT_SH2A_FPU_U_FPU, UNIT_SH2A_FPU_U_TRAP, UNIT_SH2A_FPU_U_WRITE_BACK\n- , UNIT_SH2A_FPU_U_USE_MULTIPLY_RESULT, UNIT_SH2A_FPU_U_SHIFT, UNIT_SH2A_FPU_U_TAS, UNIT_SH2A_FPU_U_MULSW\n- , UNIT_SH2A_FPU_U_MULL, UNIT_SH2A_FPU_U_DMUL, UNIT_SH2A_FPU_U_MACL, UNIT_SH2A_FPU_U_MACW\n- , UNIT_SH2A_FPU_U_MULTIPLY, UNIT_SH2A_FPU_U_SET_MAC, UNIT_SH2A_FPU_U_LOAD_MAC, UNIT_SH2A_FPU_U_LOAD_VBR\n- , UNIT_SH2A_FPU_U_LOAD_GBR, UNIT_SH2A_FPU_U_USE_GR, UNIT_SH2A_FPU_U_LOAD_GR, UNIT_SH2A_FPU_U_STC_VBR\n- , UNIT_SH2A_FPU_U_LDCL_VBR, UNIT_SH2A_FPU_U_LDCL, UNIT_SH2A_FPU_U_USE_TBIT, UNIT_SH2A_FPU_U_LDC_GBR\n- , UNIT_SH2A_FPU_U_LDC_SR, UNIT_SH2A_FPU_U_SET_SR_BIT, UNIT_SH2A_FPU_U_USE_PR, UNIT_SH2A_FPU_U_LOAD_PR\n- , UNIT_SH2A_FPU_U_STS_PR, UNIT_SH2A_FPU_U_LDS_PR, UNIT_SH2A_FPU_U_MEMORY_ACCESS, UNIT_SH2A_FPU_U_LOGIC_B\n- , UNIT_SH2A_FPU_U_JSR, UNIT_SH2A_FPU_U_JMP, UNIT_SH2A_FPU_U_BRANCH, UNIT_SH2A_FPU_U_SX\n- , UNIT_SH2A_FPU_U_EXEC, UNIT_SH4_NOFPU_U_OCB, UNIT_SH4_NOFPU_U_MULR_GR, UNIT_SH4_NOFPU_U_MULR\n- , UNIT_SH4_NOFPU_U_TRAP, UNIT_SH4_NOFPU_U_WRITE_BACK, UNIT_SH4_NOFPU_U_USE_MULTIPLY_RESULT, UNIT_SH4_NOFPU_U_SHIFT\n- , UNIT_SH4_NOFPU_U_TAS, UNIT_SH4_NOFPU_U_MULSW, UNIT_SH4_NOFPU_U_MULL, UNIT_SH4_NOFPU_U_DMUL\n- , UNIT_SH4_NOFPU_U_MACL, UNIT_SH4_NOFPU_U_MACW, UNIT_SH4_NOFPU_U_MULTIPLY, UNIT_SH4_NOFPU_U_SET_MAC\n- , UNIT_SH4_NOFPU_U_LOAD_MAC, UNIT_SH4_NOFPU_U_LOAD_VBR, UNIT_SH4_NOFPU_U_LOAD_GBR, UNIT_SH4_NOFPU_U_USE_GR\n- , UNIT_SH4_NOFPU_U_LOAD_GR, UNIT_SH4_NOFPU_U_STC_VBR, UNIT_SH4_NOFPU_U_LDCL_VBR, UNIT_SH4_NOFPU_U_LDCL\n- , UNIT_SH4_NOFPU_U_USE_TBIT, UNIT_SH4_NOFPU_U_LDC_GBR, UNIT_SH4_NOFPU_U_LDC_SR, UNIT_SH4_NOFPU_U_SET_SR_BIT\n- , UNIT_SH4_NOFPU_U_USE_PR, UNIT_SH4_NOFPU_U_LOAD_PR, UNIT_SH4_NOFPU_U_STS_PR, UNIT_SH4_NOFPU_U_LDS_PR\n- , UNIT_SH4_NOFPU_U_MEMORY_ACCESS, UNIT_SH4_NOFPU_U_LOGIC_B, UNIT_SH4_NOFPU_U_JSR, UNIT_SH4_NOFPU_U_JMP\n- , UNIT_SH4_NOFPU_U_BRANCH, UNIT_SH4_NOFPU_U_SX, UNIT_SH4_NOFPU_U_EXEC, UNIT_SH4_U_FTRV\n- , UNIT_SH4_U_FIPR, UNIT_SH4_U_OCB, UNIT_SH4_U_MULR_GR, UNIT_SH4_U_MULR\n- , UNIT_SH4_U_USE_DR, UNIT_SH4_U_LOAD_DR, UNIT_SH4_U_SET_DR, UNIT_SH4_U_FCNV\n- , UNIT_SH4_U_FCMP, UNIT_SH4_U_FSQRT, UNIT_SH4_U_FDIV, UNIT_SH4_U_FPU_LOAD_GR\n- , UNIT_SH4_U_USE_FPSCR, UNIT_SH4_U_LDSL_FPSCR, UNIT_SH4_U_LDS_FPSCR, UNIT_SH4_U_USE_FPUL\n- , UNIT_SH4_U_FLDS_FPUL, UNIT_SH4_U_LOAD_FPUL, UNIT_SH4_U_SET_FPUL, UNIT_SH4_U_FPU_MEMORY_ACCESS\n- , UNIT_SH4_U_USE_FR, UNIT_SH4_U_SET_FR_0, UNIT_SH4_U_SET_FR, UNIT_SH4_U_LOAD_FR\n- , UNIT_SH4_U_MAYBE_FPU, UNIT_SH4_U_FPU, UNIT_SH4_U_TRAP, UNIT_SH4_U_WRITE_BACK\n- , UNIT_SH4_U_USE_MULTIPLY_RESULT, UNIT_SH4_U_SHIFT, UNIT_SH4_U_TAS, UNIT_SH4_U_MULSW\n- , UNIT_SH4_U_MULL, UNIT_SH4_U_DMUL, UNIT_SH4_U_MACL, UNIT_SH4_U_MACW\n- , UNIT_SH4_U_MULTIPLY, UNIT_SH4_U_SET_MAC, UNIT_SH4_U_LOAD_MAC, UNIT_SH4_U_LOAD_VBR\n- , UNIT_SH4_U_LOAD_GBR, UNIT_SH4_U_USE_GR, UNIT_SH4_U_LOAD_GR, UNIT_SH4_U_STC_VBR\n- , UNIT_SH4_U_LDCL_VBR, UNIT_SH4_U_LDCL, UNIT_SH4_U_USE_TBIT, UNIT_SH4_U_LDC_GBR\n- , UNIT_SH4_U_LDC_SR, UNIT_SH4_U_SET_SR_BIT, UNIT_SH4_U_USE_PR, UNIT_SH4_U_LOAD_PR\n- , UNIT_SH4_U_STS_PR, UNIT_SH4_U_LDS_PR, UNIT_SH4_U_MEMORY_ACCESS, UNIT_SH4_U_LOGIC_B\n- , UNIT_SH4_U_JSR, UNIT_SH4_U_JMP, UNIT_SH4_U_BRANCH, UNIT_SH4_U_SX\n- , UNIT_SH4_U_EXEC, UNIT_SH4A_NOFPU_U_OCB, UNIT_SH4A_NOFPU_U_MULR_GR, UNIT_SH4A_NOFPU_U_MULR\n- , UNIT_SH4A_NOFPU_U_FCNV, UNIT_SH4A_NOFPU_U_FCMP, UNIT_SH4A_NOFPU_U_FSQRT, UNIT_SH4A_NOFPU_U_FDIV\n- , UNIT_SH4A_NOFPU_U_FPU_LOAD_GR, UNIT_SH4A_NOFPU_U_USE_FPSCR, UNIT_SH4A_NOFPU_U_LDSL_FPSCR, UNIT_SH4A_NOFPU_U_LDS_FPSCR\n- , UNIT_SH4A_NOFPU_U_USE_FPUL, UNIT_SH4A_NOFPU_U_FLDS_FPUL, UNIT_SH4A_NOFPU_U_LOAD_FPUL, UNIT_SH4A_NOFPU_U_SET_FPUL\n- , UNIT_SH4A_NOFPU_U_FPU_MEMORY_ACCESS, UNIT_SH4A_NOFPU_U_USE_FR, UNIT_SH4A_NOFPU_U_SET_FR_0, UNIT_SH4A_NOFPU_U_SET_FR\n- , UNIT_SH4A_NOFPU_U_LOAD_FR, UNIT_SH4A_NOFPU_U_MAYBE_FPU, UNIT_SH4A_NOFPU_U_FPU, UNIT_SH4A_NOFPU_U_TRAP\n- , UNIT_SH4A_NOFPU_U_WRITE_BACK, UNIT_SH4A_NOFPU_U_USE_MULTIPLY_RESULT, UNIT_SH4A_NOFPU_U_SHIFT, UNIT_SH4A_NOFPU_U_TAS\n- , UNIT_SH4A_NOFPU_U_MULSW, UNIT_SH4A_NOFPU_U_MULL, UNIT_SH4A_NOFPU_U_DMUL, UNIT_SH4A_NOFPU_U_MACL\n- , UNIT_SH4A_NOFPU_U_MACW, UNIT_SH4A_NOFPU_U_MULTIPLY, UNIT_SH4A_NOFPU_U_SET_MAC, UNIT_SH4A_NOFPU_U_LOAD_MAC\n- , UNIT_SH4A_NOFPU_U_LOAD_VBR, UNIT_SH4A_NOFPU_U_LOAD_GBR, UNIT_SH4A_NOFPU_U_USE_GR, UNIT_SH4A_NOFPU_U_LOAD_GR\n- , UNIT_SH4A_NOFPU_U_STC_VBR, UNIT_SH4A_NOFPU_U_LDCL_VBR, UNIT_SH4A_NOFPU_U_LDCL, UNIT_SH4A_NOFPU_U_USE_TBIT\n- , UNIT_SH4A_NOFPU_U_LDC_GBR, UNIT_SH4A_NOFPU_U_LDC_SR, UNIT_SH4A_NOFPU_U_SET_SR_BIT, UNIT_SH4A_NOFPU_U_USE_PR\n- , UNIT_SH4A_NOFPU_U_LOAD_PR, UNIT_SH4A_NOFPU_U_STS_PR, UNIT_SH4A_NOFPU_U_LDS_PR, UNIT_SH4A_NOFPU_U_MEMORY_ACCESS\n- , UNIT_SH4A_NOFPU_U_LOGIC_B, UNIT_SH4A_NOFPU_U_JSR, UNIT_SH4A_NOFPU_U_JMP, UNIT_SH4A_NOFPU_U_BRANCH\n- , UNIT_SH4A_NOFPU_U_SX, UNIT_SH4A_NOFPU_U_EXEC, UNIT_SH4A_U_FTRV, UNIT_SH4A_U_FIPR\n- , UNIT_SH4A_U_OCB, UNIT_SH4A_U_MULR_GR, UNIT_SH4A_U_MULR, UNIT_SH4A_U_FCNV\n- , UNIT_SH4A_U_FCMP, UNIT_SH4A_U_FSQRT, UNIT_SH4A_U_FDIV, UNIT_SH4A_U_FPU_LOAD_GR\n- , UNIT_SH4A_U_USE_FPSCR, UNIT_SH4A_U_LDSL_FPSCR, UNIT_SH4A_U_LDS_FPSCR, UNIT_SH4A_U_USE_FPUL\n- , UNIT_SH4A_U_FLDS_FPUL, UNIT_SH4A_U_LOAD_FPUL, UNIT_SH4A_U_SET_FPUL, UNIT_SH4A_U_FPU_MEMORY_ACCESS\n- , UNIT_SH4A_U_USE_FR, UNIT_SH4A_U_SET_FR_0, UNIT_SH4A_U_SET_FR, UNIT_SH4A_U_LOAD_FR\n- , UNIT_SH4A_U_MAYBE_FPU, UNIT_SH4A_U_FPU, UNIT_SH4A_U_TRAP, UNIT_SH4A_U_WRITE_BACK\n- , UNIT_SH4A_U_USE_MULTIPLY_RESULT, UNIT_SH4A_U_SHIFT, UNIT_SH4A_U_TAS, UNIT_SH4A_U_MULSW\n- , UNIT_SH4A_U_MULL, UNIT_SH4A_U_DMUL, UNIT_SH4A_U_MACL, UNIT_SH4A_U_MACW\n- , UNIT_SH4A_U_MULTIPLY, UNIT_SH4A_U_SET_MAC, UNIT_SH4A_U_LOAD_MAC, UNIT_SH4A_U_LOAD_VBR\n- , UNIT_SH4A_U_LOAD_GBR, UNIT_SH4A_U_USE_GR, UNIT_SH4A_U_LOAD_GR, UNIT_SH4A_U_STC_VBR\n- , UNIT_SH4A_U_LDCL_VBR, UNIT_SH4A_U_LDCL, UNIT_SH4A_U_USE_TBIT, UNIT_SH4A_U_LDC_GBR\n- , UNIT_SH4A_U_LDC_SR, UNIT_SH4A_U_SET_SR_BIT, UNIT_SH4A_U_USE_PR, UNIT_SH4A_U_LOAD_PR\n- , UNIT_SH4A_U_STS_PR, UNIT_SH4A_U_LDS_PR, UNIT_SH4A_U_MEMORY_ACCESS, UNIT_SH4A_U_LOGIC_B\n- , UNIT_SH4A_U_JSR, UNIT_SH4A_U_JMP, UNIT_SH4A_U_BRANCH, UNIT_SH4A_U_SX\n- , UNIT_SH4A_U_EXEC, UNIT_SH4AL_U_OCB, UNIT_SH4AL_U_MULR_GR, UNIT_SH4AL_U_MULR\n- , UNIT_SH4AL_U_FCNV, UNIT_SH4AL_U_FCMP, UNIT_SH4AL_U_FSQRT, UNIT_SH4AL_U_FDIV\n- , UNIT_SH4AL_U_FPU_LOAD_GR, UNIT_SH4AL_U_USE_FPSCR, UNIT_SH4AL_U_LDSL_FPSCR, UNIT_SH4AL_U_LDS_FPSCR\n- , UNIT_SH4AL_U_USE_FPUL, UNIT_SH4AL_U_FLDS_FPUL, UNIT_SH4AL_U_LOAD_FPUL, UNIT_SH4AL_U_SET_FPUL\n- , UNIT_SH4AL_U_FPU_MEMORY_ACCESS, UNIT_SH4AL_U_USE_FR, UNIT_SH4AL_U_SET_FR_0, UNIT_SH4AL_U_SET_FR\n- , UNIT_SH4AL_U_LOAD_FR, UNIT_SH4AL_U_MAYBE_FPU, UNIT_SH4AL_U_FPU, UNIT_SH4AL_U_TRAP\n- , UNIT_SH4AL_U_WRITE_BACK, UNIT_SH4AL_U_USE_MULTIPLY_RESULT, UNIT_SH4AL_U_SHIFT, UNIT_SH4AL_U_TAS\n- , UNIT_SH4AL_U_MULSW, UNIT_SH4AL_U_MULL, UNIT_SH4AL_U_DMUL, UNIT_SH4AL_U_MACL\n- , UNIT_SH4AL_U_MACW, UNIT_SH4AL_U_MULTIPLY, UNIT_SH4AL_U_SET_MAC, UNIT_SH4AL_U_LOAD_MAC\n- , UNIT_SH4AL_U_LOAD_VBR, UNIT_SH4AL_U_LOAD_GBR, UNIT_SH4AL_U_USE_GR, UNIT_SH4AL_U_LOAD_GR\n- , UNIT_SH4AL_U_STC_VBR, UNIT_SH4AL_U_LDCL_VBR, UNIT_SH4AL_U_LDCL, UNIT_SH4AL_U_USE_TBIT\n- , UNIT_SH4AL_U_LDC_GBR, UNIT_SH4AL_U_LDC_SR, UNIT_SH4AL_U_SET_SR_BIT, UNIT_SH4AL_U_USE_PR\n- , UNIT_SH4AL_U_LOAD_PR, UNIT_SH4AL_U_STS_PR, UNIT_SH4AL_U_LDS_PR, UNIT_SH4AL_U_MEMORY_ACCESS\n- , UNIT_SH4AL_U_LOGIC_B, UNIT_SH4AL_U_JSR, UNIT_SH4AL_U_JMP, UNIT_SH4AL_U_BRANCH\n- , UNIT_SH4AL_U_SX, UNIT_SH4AL_U_EXEC, UNIT_SH5_U_FTRV, UNIT_SH5_U_FIPR\n- , UNIT_SH5_U_OCB, UNIT_SH5_U_MULR_GR, UNIT_SH5_U_MULR, UNIT_SH5_U_USE_DR\n- , UNIT_SH5_U_LOAD_DR, UNIT_SH5_U_SET_DR, UNIT_SH5_U_FCNV, UNIT_SH5_U_FCMP\n- , UNIT_SH5_U_FSQRT, UNIT_SH5_U_FDIV, UNIT_SH5_U_FPU_LOAD_GR, UNIT_SH5_U_USE_FPSCR\n- , UNIT_SH5_U_LDSL_FPSCR, UNIT_SH5_U_LDS_FPSCR, UNIT_SH5_U_USE_FPUL, UNIT_SH5_U_FLDS_FPUL\n- , UNIT_SH5_U_LOAD_FPUL, UNIT_SH5_U_SET_FPUL, UNIT_SH5_U_FPU_MEMORY_ACCESS, UNIT_SH5_U_USE_FR\n- , UNIT_SH5_U_SET_FR_0, UNIT_SH5_U_SET_FR, UNIT_SH5_U_LOAD_FR, UNIT_SH5_U_MAYBE_FPU\n- , UNIT_SH5_U_FPU, UNIT_SH5_U_TRAP, UNIT_SH5_U_WRITE_BACK, UNIT_SH5_U_USE_MULTIPLY_RESULT\n- , UNIT_SH5_U_SHIFT, UNIT_SH5_U_TAS, UNIT_SH5_U_MULSW, UNIT_SH5_U_MULL\n- , UNIT_SH5_U_DMUL, UNIT_SH5_U_MACL, UNIT_SH5_U_MACW, UNIT_SH5_U_MULTIPLY\n- , UNIT_SH5_U_SET_MAC, UNIT_SH5_U_LOAD_MAC, UNIT_SH5_U_LOAD_VBR, UNIT_SH5_U_LOAD_GBR\n- , UNIT_SH5_U_USE_GR, UNIT_SH5_U_LOAD_GR, UNIT_SH5_U_STC_VBR, UNIT_SH5_U_LDCL_VBR\n- , UNIT_SH5_U_LDCL, UNIT_SH5_U_USE_TBIT, UNIT_SH5_U_LDC_GBR, UNIT_SH5_U_LDC_SR\n- , UNIT_SH5_U_SET_SR_BIT, UNIT_SH5_U_USE_PR, UNIT_SH5_U_LOAD_PR, UNIT_SH5_U_STS_PR\n- , UNIT_SH5_U_LDS_PR, UNIT_SH5_U_MEMORY_ACCESS, UNIT_SH5_U_LOGIC_B, UNIT_SH5_U_JSR\n- , UNIT_SH5_U_JMP, UNIT_SH5_U_BRANCH, UNIT_SH5_U_SX, UNIT_SH5_U_EXEC\n- , UNIT_SH5_MEDIA_U_PUTCFG, UNIT_SH5_MEDIA_U_GETCFG, UNIT_SH5_MEDIA_U_PT, UNIT_SH5_MEDIA_U_FTRVS\n- , UNIT_SH5_MEDIA_U_FSQRTD, UNIT_SH5_MEDIA_U_FDIVD, UNIT_SH5_MEDIA_U_COND_BRANCH, UNIT_SH5_MEDIA_U_BLINK\n- , UNIT_SH5_MEDIA_U_USE_TR, UNIT_SH5_MEDIA_U_USE_MTRX, UNIT_SH5_MEDIA_U_USE_FV, UNIT_SH5_MEDIA_U_USE_FP\n- , UNIT_SH5_MEDIA_U_LOAD_MTRX, UNIT_SH5_MEDIA_U_LOAD_FV, UNIT_SH5_MEDIA_U_LOAD_FP, UNIT_SH5_MEDIA_U_SET_MTRX\n- , UNIT_SH5_MEDIA_U_SET_FV, UNIT_SH5_MEDIA_U_SET_FP, UNIT_SH5_MEDIA_U_SET_GR, UNIT_SH5_MEDIA_U_FTRV\n- , UNIT_SH5_MEDIA_U_FIPR, UNIT_SH5_MEDIA_U_OCB, UNIT_SH5_MEDIA_U_MULR_GR, UNIT_SH5_MEDIA_U_MULR\n- , UNIT_SH5_MEDIA_U_USE_DR, UNIT_SH5_MEDIA_U_LOAD_DR, UNIT_SH5_MEDIA_U_SET_DR, UNIT_SH5_MEDIA_U_FCNV\n- , UNIT_SH5_MEDIA_U_FCMP, UNIT_SH5_MEDIA_U_FSQRT, UNIT_SH5_MEDIA_U_FDIV, UNIT_SH5_MEDIA_U_FPU_LOAD_GR\n- , UNIT_SH5_MEDIA_U_USE_FPSCR, UNIT_SH5_MEDIA_U_LDSL_FPSCR, UNIT_SH5_MEDIA_U_LDS_FPSCR, UNIT_SH5_MEDIA_U_USE_FPUL\n- , UNIT_SH5_MEDIA_U_FLDS_FPUL, UNIT_SH5_MEDIA_U_LOAD_FPUL, UNIT_SH5_MEDIA_U_SET_FPUL, UNIT_SH5_MEDIA_U_FPU_MEMORY_ACCESS\n- , UNIT_SH5_MEDIA_U_USE_FR, UNIT_SH5_MEDIA_U_SET_FR_0, UNIT_SH5_MEDIA_U_SET_FR, UNIT_SH5_MEDIA_U_LOAD_FR\n- , UNIT_SH5_MEDIA_U_MAYBE_FPU, UNIT_SH5_MEDIA_U_FPU, UNIT_SH5_MEDIA_U_TRAP, UNIT_SH5_MEDIA_U_WRITE_BACK\n- , UNIT_SH5_MEDIA_U_USE_MULTIPLY_RESULT, UNIT_SH5_MEDIA_U_SHIFT, UNIT_SH5_MEDIA_U_TAS, UNIT_SH5_MEDIA_U_MULSW\n- , UNIT_SH5_MEDIA_U_MULL, UNIT_SH5_MEDIA_U_DMUL, UNIT_SH5_MEDIA_U_MACL, UNIT_SH5_MEDIA_U_MACW\n- , UNIT_SH5_MEDIA_U_MULTIPLY, UNIT_SH5_MEDIA_U_SET_MAC, UNIT_SH5_MEDIA_U_LOAD_MAC, UNIT_SH5_MEDIA_U_LOAD_VBR\n- , UNIT_SH5_MEDIA_U_LOAD_GBR, UNIT_SH5_MEDIA_U_USE_GR, UNIT_SH5_MEDIA_U_LOAD_GR, UNIT_SH5_MEDIA_U_STC_VBR\n- , UNIT_SH5_MEDIA_U_LDCL_VBR, UNIT_SH5_MEDIA_U_LDCL, UNIT_SH5_MEDIA_U_USE_TBIT, UNIT_SH5_MEDIA_U_LDC_GBR\n- , UNIT_SH5_MEDIA_U_LDC_SR, UNIT_SH5_MEDIA_U_SET_SR_BIT, UNIT_SH5_MEDIA_U_USE_PR, UNIT_SH5_MEDIA_U_LOAD_PR\n- , UNIT_SH5_MEDIA_U_STS_PR, UNIT_SH5_MEDIA_U_LDS_PR, UNIT_SH5_MEDIA_U_MEMORY_ACCESS, UNIT_SH5_MEDIA_U_LOGIC_B\n- , UNIT_SH5_MEDIA_U_JSR, UNIT_SH5_MEDIA_U_JMP, UNIT_SH5_MEDIA_U_BRANCH, UNIT_SH5_MEDIA_U_SX\n- , UNIT_SH5_MEDIA_U_EXEC, UNIT_SH2_U_TRAP, UNIT_SH2_U_WRITE_BACK, UNIT_SH2_U_USE_MULTIPLY_RESULT\n- , UNIT_SH2_U_SHIFT, UNIT_SH2_U_TAS, UNIT_SH2_U_MULSW, UNIT_SH2_U_MULL\n- , UNIT_SH2_U_DMUL, UNIT_SH2_U_MACL, UNIT_SH2_U_MACW, UNIT_SH2_U_MULTIPLY\n- , UNIT_SH2_U_SET_MAC, UNIT_SH2_U_LOAD_MAC, UNIT_SH2_U_LOAD_VBR, UNIT_SH2_U_LOAD_GBR\n- , UNIT_SH2_U_USE_GR, UNIT_SH2_U_LOAD_GR, UNIT_SH2_U_STC_VBR, UNIT_SH2_U_LDCL_VBR\n- , UNIT_SH2_U_LDCL, UNIT_SH2_U_USE_TBIT, UNIT_SH2_U_LDC_GBR, UNIT_SH2_U_LDC_SR\n- , UNIT_SH2_U_SET_SR_BIT, UNIT_SH2_U_USE_PR, UNIT_SH2_U_LOAD_PR, UNIT_SH2_U_STS_PR\n- , UNIT_SH2_U_LDS_PR, UNIT_SH2_U_MEMORY_ACCESS, UNIT_SH2_U_LOGIC_B, UNIT_SH2_U_JSR\n- , UNIT_SH2_U_JMP, UNIT_SH2_U_BRANCH, UNIT_SH2_U_SX, UNIT_SH2_U_EXEC\n- , UNIT_SH2E_U_FCNV, UNIT_SH2E_U_FCMP, UNIT_SH2E_U_FSQRT, UNIT_SH2E_U_FDIV\n- , UNIT_SH2E_U_FPU_LOAD_GR, UNIT_SH2E_U_USE_FPSCR, UNIT_SH2E_U_LDSL_FPSCR, UNIT_SH2E_U_LDS_FPSCR\n- , UNIT_SH2E_U_USE_FPUL, UNIT_SH2E_U_FLDS_FPUL, UNIT_SH2E_U_LOAD_FPUL, UNIT_SH2E_U_SET_FPUL\n- , UNIT_SH2E_U_FPU_MEMORY_ACCESS, UNIT_SH2E_U_USE_FR, UNIT_SH2E_U_SET_FR_0, UNIT_SH2E_U_SET_FR\n- , UNIT_SH2E_U_LOAD_FR, UNIT_SH2E_U_MAYBE_FPU, UNIT_SH2E_U_FPU, UNIT_SH2E_U_TRAP\n- , UNIT_SH2E_U_WRITE_BACK, UNIT_SH2E_U_USE_MULTIPLY_RESULT, UNIT_SH2E_U_SHIFT, UNIT_SH2E_U_TAS\n- , UNIT_SH2E_U_MULSW, UNIT_SH2E_U_MULL, UNIT_SH2E_U_DMUL, UNIT_SH2E_U_MACL\n- , UNIT_SH2E_U_MACW, UNIT_SH2E_U_MULTIPLY, UNIT_SH2E_U_SET_MAC, UNIT_SH2E_U_LOAD_MAC\n- , UNIT_SH2E_U_LOAD_VBR, UNIT_SH2E_U_LOAD_GBR, UNIT_SH2E_U_USE_GR, UNIT_SH2E_U_LOAD_GR\n- , UNIT_SH2E_U_STC_VBR, UNIT_SH2E_U_LDCL_VBR, UNIT_SH2E_U_LDCL, UNIT_SH2E_U_USE_TBIT\n- , UNIT_SH2E_U_LDC_GBR, UNIT_SH2E_U_LDC_SR, UNIT_SH2E_U_SET_SR_BIT, UNIT_SH2E_U_USE_PR\n- , UNIT_SH2E_U_LOAD_PR, UNIT_SH2E_U_STS_PR, UNIT_SH2E_U_LDS_PR, UNIT_SH2E_U_MEMORY_ACCESS\n- , UNIT_SH2E_U_LOGIC_B, UNIT_SH2E_U_JSR, UNIT_SH2E_U_JMP, UNIT_SH2E_U_BRANCH\n- , UNIT_SH2E_U_SX, UNIT_SH2E_U_EXEC, UNIT_SH3_U_TRAP, UNIT_SH3_U_WRITE_BACK\n- , UNIT_SH3_U_USE_MULTIPLY_RESULT, UNIT_SH3_U_SHIFT, UNIT_SH3_U_TAS, UNIT_SH3_U_MULSW\n- , UNIT_SH3_U_MULL, UNIT_SH3_U_DMUL, UNIT_SH3_U_MACL, UNIT_SH3_U_MACW\n- , UNIT_SH3_U_MULTIPLY, UNIT_SH3_U_SET_MAC, UNIT_SH3_U_LOAD_MAC, UNIT_SH3_U_LOAD_VBR\n- , UNIT_SH3_U_LOAD_GBR, UNIT_SH3_U_USE_GR, UNIT_SH3_U_LOAD_GR, UNIT_SH3_U_STC_VBR\n- , UNIT_SH3_U_LDCL_VBR, UNIT_SH3_U_LDCL, UNIT_SH3_U_USE_TBIT, UNIT_SH3_U_LDC_GBR\n- , UNIT_SH3_U_LDC_SR, UNIT_SH3_U_SET_SR_BIT, UNIT_SH3_U_USE_PR, UNIT_SH3_U_LOAD_PR\n- , UNIT_SH3_U_STS_PR, UNIT_SH3_U_LDS_PR, UNIT_SH3_U_MEMORY_ACCESS, UNIT_SH3_U_LOGIC_B\n- , UNIT_SH3_U_JSR, UNIT_SH3_U_JMP, UNIT_SH3_U_BRANCH, UNIT_SH3_U_SX\n- , UNIT_SH3_U_EXEC, UNIT_SH3E_U_FCNV, UNIT_SH3E_U_FCMP, UNIT_SH3E_U_FSQRT\n- , UNIT_SH3E_U_FDIV, UNIT_SH3E_U_FPU_LOAD_GR, UNIT_SH3E_U_USE_FPSCR, UNIT_SH3E_U_LDSL_FPSCR\n- , UNIT_SH3E_U_LDS_FPSCR, UNIT_SH3E_U_USE_FPUL, UNIT_SH3E_U_FLDS_FPUL, UNIT_SH3E_U_LOAD_FPUL\n- , UNIT_SH3E_U_SET_FPUL, UNIT_SH3E_U_FPU_MEMORY_ACCESS, UNIT_SH3E_U_USE_FR, UNIT_SH3E_U_SET_FR_0\n- , UNIT_SH3E_U_SET_FR, UNIT_SH3E_U_LOAD_FR, UNIT_SH3E_U_MAYBE_FPU, UNIT_SH3E_U_FPU\n- , UNIT_SH3E_U_TRAP, UNIT_SH3E_U_WRITE_BACK, UNIT_SH3E_U_USE_MULTIPLY_RESULT, UNIT_SH3E_U_SHIFT\n- , UNIT_SH3E_U_TAS, UNIT_SH3E_U_MULSW, UNIT_SH3E_U_MULL, UNIT_SH3E_U_DMUL\n- , UNIT_SH3E_U_MACL, UNIT_SH3E_U_MACW, UNIT_SH3E_U_MULTIPLY, UNIT_SH3E_U_SET_MAC\n- , UNIT_SH3E_U_LOAD_MAC, UNIT_SH3E_U_LOAD_VBR, UNIT_SH3E_U_LOAD_GBR, UNIT_SH3E_U_USE_GR\n- , UNIT_SH3E_U_LOAD_GR, UNIT_SH3E_U_STC_VBR, UNIT_SH3E_U_LDCL_VBR, UNIT_SH3E_U_LDCL\n- , UNIT_SH3E_U_USE_TBIT, UNIT_SH3E_U_LDC_GBR, UNIT_SH3E_U_LDC_SR, UNIT_SH3E_U_SET_SR_BIT\n- , UNIT_SH3E_U_USE_PR, UNIT_SH3E_U_LOAD_PR, UNIT_SH3E_U_STS_PR, UNIT_SH3E_U_LDS_PR\n- , UNIT_SH3E_U_MEMORY_ACCESS, UNIT_SH3E_U_LOGIC_B, UNIT_SH3E_U_JSR, UNIT_SH3E_U_JMP\n- , UNIT_SH3E_U_BRANCH, UNIT_SH3E_U_SX, UNIT_SH3E_U_EXEC, UNIT_MAX\n-} UNIT_TYPE;\n-\n-#define MAX_UNITS (9)\n-\n-#endif /* SH_ARCH_H */"
    },
    {
      "sha": "ea6c08c477dedf78d9e06d942a930a7ab85acfc5",
      "filename": "sim/sh64/config.in",
      "status": "removed",
      "additions": 0,
      "deletions": 254,
      "changes": 254,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/config.in?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,254 +0,0 @@\n-/* config.in.  Generated from configure.ac by autoheader.  */\n-\n-/* Define if building universal (internal helper macro) */\n-#undef AC_APPLE_UNIVERSAL_BUILD\n-\n-/* Sim debug setting */\n-#undef DEBUG\n-\n-/* Define to 1 if translation of program messages to the user's native\n-   language is requested. */\n-#undef ENABLE_NLS\n-\n-/* Define to 1 if you have the <dlfcn.h> header file. */\n-#undef HAVE_DLFCN_H\n-\n-/* Define if dv-sockser is usable. */\n-#undef HAVE_DV_SOCKSER\n-\n-/* Define to 1 if you have the <errno.h> header file. */\n-#undef HAVE_ERRNO_H\n-\n-/* Define to 1 if you have the <fcntl.h> header file. */\n-#undef HAVE_FCNTL_H\n-\n-/* Define to 1 if you have the <fpu_control.h> header file. */\n-#undef HAVE_FPU_CONTROL_H\n-\n-/* Define to 1 if you have the `ftruncate' function. */\n-#undef HAVE_FTRUNCATE\n-\n-/* Define to 1 if you have the `getrusage' function. */\n-#undef HAVE_GETRUSAGE\n-\n-/* Define to 1 if you have the <inttypes.h> header file. */\n-#undef HAVE_INTTYPES_H\n-\n-/* Define to 1 if you have the `m' library (-lm). */\n-#undef HAVE_LIBM\n-\n-/* Define to 1 if you have the `nsl' library (-lnsl). */\n-#undef HAVE_LIBNSL\n-\n-/* Define to 1 if you have the `socket' library (-lsocket). */\n-#undef HAVE_LIBSOCKET\n-\n-/* Define to 1 if you have the `lstat' function. */\n-#undef HAVE_LSTAT\n-\n-/* Define to 1 if you have the <memory.h> header file. */\n-#undef HAVE_MEMORY_H\n-\n-/* Define to 1 if you have the `mmap' function. */\n-#undef HAVE_MMAP\n-\n-/* Define to 1 if you have the `munmap' function. */\n-#undef HAVE_MUNMAP\n-\n-/* Define to 1 if you have the `posix_fallocate' function. */\n-#undef HAVE_POSIX_FALLOCATE\n-\n-/* Define to 1 if you have the `sigaction' function. */\n-#undef HAVE_SIGACTION\n-\n-/* Define to 1 if the system has the type `socklen_t'. */\n-#undef HAVE_SOCKLEN_T\n-\n-/* Define to 1 if you have the <stdint.h> header file. */\n-#undef HAVE_STDINT_H\n-\n-/* Define to 1 if you have the <stdlib.h> header file. */\n-#undef HAVE_STDLIB_H\n-\n-/* Define to 1 if you have the <strings.h> header file. */\n-#undef HAVE_STRINGS_H\n-\n-/* Define to 1 if you have the <string.h> header file. */\n-#undef HAVE_STRING_H\n-\n-/* Define to 1 if `st_atime' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_ATIME\n-\n-/* Define to 1 if `st_blksize' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_BLKSIZE\n-\n-/* Define to 1 if `st_blocks' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_BLOCKS\n-\n-/* Define to 1 if `st_ctime' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_CTIME\n-\n-/* Define to 1 if `st_dev' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_DEV\n-\n-/* Define to 1 if `st_gid' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_GID\n-\n-/* Define to 1 if `st_ino' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_INO\n-\n-/* Define to 1 if `st_mode' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_MODE\n-\n-/* Define to 1 if `st_mtime' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_MTIME\n-\n-/* Define to 1 if `st_nlink' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_NLINK\n-\n-/* Define to 1 if `st_rdev' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_RDEV\n-\n-/* Define to 1 if `st_size' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_SIZE\n-\n-/* Define to 1 if `st_uid' is a member of `struct stat'. */\n-#undef HAVE_STRUCT_STAT_ST_UID\n-\n-/* Define to 1 if you have the <sys/mman.h> header file. */\n-#undef HAVE_SYS_MMAN_H\n-\n-/* Define to 1 if you have the <sys/resource.h> header file. */\n-#undef HAVE_SYS_RESOURCE_H\n-\n-/* Define to 1 if you have the <sys/stat.h> header file. */\n-#undef HAVE_SYS_STAT_H\n-\n-/* Define to 1 if you have the <sys/times.h> header file. */\n-#undef HAVE_SYS_TIMES_H\n-\n-/* Define to 1 if you have the <sys/time.h> header file. */\n-#undef HAVE_SYS_TIME_H\n-\n-/* Define to 1 if you have the <sys/types.h> header file. */\n-#undef HAVE_SYS_TYPES_H\n-\n-/* Define to 1 if you have the `time' function. */\n-#undef HAVE_TIME\n-\n-/* Define to 1 if you have the <time.h> header file. */\n-#undef HAVE_TIME_H\n-\n-/* Define to 1 if you have the `truncate' function. */\n-#undef HAVE_TRUNCATE\n-\n-/* Define to 1 if you have the <unistd.h> header file. */\n-#undef HAVE_UNISTD_H\n-\n-/* Define to 1 if you have the <windows.h> header file. */\n-#undef HAVE_WINDOWS_H\n-\n-/* Define to 1 if you have the `__setfpucw' function. */\n-#undef HAVE___SETFPUCW\n-\n-/* Define to the sub-directory in which libtool stores uninstalled libraries.\n-   */\n-#undef LT_OBJDIR\n-\n-/* Name of this package. */\n-#undef PACKAGE\n-\n-/* Define to the address where bug reports for this package should be sent. */\n-#undef PACKAGE_BUGREPORT\n-\n-/* Define to the full name of this package. */\n-#undef PACKAGE_NAME\n-\n-/* Define to the full name and version of this package. */\n-#undef PACKAGE_STRING\n-\n-/* Define to the one symbol short name of this package. */\n-#undef PACKAGE_TARNAME\n-\n-/* Define to the home page for this package. */\n-#undef PACKAGE_URL\n-\n-/* Define to the version of this package. */\n-#undef PACKAGE_VERSION\n-\n-/* Additional package description */\n-#undef PKGVERSION\n-\n-/* Sim profile settings */\n-#undef PROFILE\n-\n-/* Bug reporting address */\n-#undef REPORT_BUGS_TO\n-\n-/* Define as the return type of signal handlers (`int' or `void'). */\n-#undef RETSIGTYPE\n-\n-/* Define to 1 if you have the ANSI C header files. */\n-#undef STDC_HEADERS\n-\n-/* Enable extensions on AIX 3, Interix.  */\n-#ifndef _ALL_SOURCE\n-# undef _ALL_SOURCE\n-#endif\n-/* Enable GNU extensions on systems that have them.  */\n-#ifndef _GNU_SOURCE\n-# undef _GNU_SOURCE\n-#endif\n-/* Enable threading extensions on Solaris.  */\n-#ifndef _POSIX_PTHREAD_SEMANTICS\n-# undef _POSIX_PTHREAD_SEMANTICS\n-#endif\n-/* Enable extensions on HP NonStop.  */\n-#ifndef _TANDEM_SOURCE\n-# undef _TANDEM_SOURCE\n-#endif\n-/* Enable general extensions on Solaris.  */\n-#ifndef __EXTENSIONS__\n-# undef __EXTENSIONS__\n-#endif\n-\n-\n-/* Sim assert settings */\n-#undef WITH_ASSERT\n-\n-/* Sim debug setting */\n-#undef WITH_DEBUG\n-\n-/* Sim default environment */\n-#undef WITH_ENVIRONMENT\n-\n-/* Sim profile settings */\n-#undef WITH_PROFILE\n-\n-/* How to route I/O */\n-#undef WITH_STDIO\n-\n-/* Sim trace settings */\n-#undef WITH_TRACE\n-\n-/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n-   significant byte first (like Motorola and SPARC, unlike Intel). */\n-#if defined AC_APPLE_UNIVERSAL_BUILD\n-# if defined __BIG_ENDIAN__\n-#  define WORDS_BIGENDIAN 1\n-# endif\n-#else\n-# ifndef WORDS_BIGENDIAN\n-#  undef WORDS_BIGENDIAN\n-# endif\n-#endif\n-\n-/* Define to 1 if on MINIX. */\n-#undef _MINIX\n-\n-/* Define to 2 if the system does not provide POSIX.1 features except with\n-   this defined. */\n-#undef _POSIX_1_SOURCE\n-\n-/* Define to 1 if you need to in order for `stat' and other things to work. */\n-#undef _POSIX_SOURCE"
    },
    {
      "sha": "d56314e8639a94063c4fe5c98c151414ed250652",
      "filename": "sim/sh64/configure",
      "status": "removed",
      "additions": 0,
      "deletions": 16082,
      "changes": 16082,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/configure?ref=50df264daeb2f03d7f10f97bbbab4d424194d942"
    },
    {
      "sha": "ae62bb40aff289df7a32ecf8d06bee2201fad50a",
      "filename": "sim/sh64/configure.ac",
      "status": "removed",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/configure.ac?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,15 +0,0 @@\n-dnl Process this file with autoconf to produce a configure script.\n-AC_INIT(Makefile.in)\n-sinclude(../common/acinclude.m4)\n-\n-SIM_AC_COMMON\n-\n-SIM_AC_OPTION_ENDIAN([], BIG)\n-SIM_AC_OPTION_ALIGNMENT(STRICT_ALIGNMENT)\n-SIM_AC_OPTION_SCACHE(16384)\n-SIM_AC_OPTION_DEFAULT_MODEL(sh5)\n-SIM_AC_OPTION_CGEN_MAINT\n-\n-SIM_AC_OPTION_HARDWARE(yes,\"\",\"\")\n-\n-SIM_AC_OUTPUT"
    },
    {
      "sha": "259516bd0d518c4f2d26a82a6a2c05090afad984",
      "filename": "sim/sh64/cpu.c",
      "status": "removed",
      "additions": 0,
      "deletions": 564,
      "changes": 564,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/cpu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/cpu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/cpu.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,564 +0,0 @@\n-/* Misc. support for CPU family sh64.\n-\n-THIS FILE IS MACHINE GENERATED WITH CGEN.\n-\n-Copyright 1996-2021 Free Software Foundation, Inc.\n-\n-This file is part of the GNU simulators.\n-\n-   This file is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   It is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n-\n-*/\n-\n-#define WANT_CPU sh64\n-#define WANT_CPU_SH64\n-\n-#include \"sim-main.h\"\n-#include \"cgen-ops.h\"\n-\n-/* Get the value of h-pc.  */\n-\n-UDI\n-sh64_h_pc_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_PC ();\n-}\n-\n-/* Set a value for h-pc.  */\n-\n-void\n-sh64_h_pc_set (SIM_CPU *current_cpu, UDI newval)\n-{\n-  SET_H_PC (newval);\n-}\n-\n-/* Get the value of h-gr.  */\n-\n-DI\n-sh64_h_gr_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_GR (regno);\n-}\n-\n-/* Set a value for h-gr.  */\n-\n-void\n-sh64_h_gr_set (SIM_CPU *current_cpu, UINT regno, DI newval)\n-{\n-  SET_H_GR (regno, newval);\n-}\n-\n-/* Get the value of h-grc.  */\n-\n-SI\n-sh64_h_grc_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_GRC (regno);\n-}\n-\n-/* Set a value for h-grc.  */\n-\n-void\n-sh64_h_grc_set (SIM_CPU *current_cpu, UINT regno, SI newval)\n-{\n-  SET_H_GRC (regno, newval);\n-}\n-\n-/* Get the value of h-cr.  */\n-\n-DI\n-sh64_h_cr_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_CR (regno);\n-}\n-\n-/* Set a value for h-cr.  */\n-\n-void\n-sh64_h_cr_set (SIM_CPU *current_cpu, UINT regno, DI newval)\n-{\n-  SET_H_CR (regno, newval);\n-}\n-\n-/* Get the value of h-sr.  */\n-\n-SI\n-sh64_h_sr_get (SIM_CPU *current_cpu)\n-{\n-  return CPU (h_sr);\n-}\n-\n-/* Set a value for h-sr.  */\n-\n-void\n-sh64_h_sr_set (SIM_CPU *current_cpu, SI newval)\n-{\n-  CPU (h_sr) = newval;\n-}\n-\n-/* Get the value of h-fpscr.  */\n-\n-SI\n-sh64_h_fpscr_get (SIM_CPU *current_cpu)\n-{\n-  return CPU (h_fpscr);\n-}\n-\n-/* Set a value for h-fpscr.  */\n-\n-void\n-sh64_h_fpscr_set (SIM_CPU *current_cpu, SI newval)\n-{\n-  CPU (h_fpscr) = newval;\n-}\n-\n-/* Get the value of h-frbit.  */\n-\n-BI\n-sh64_h_frbit_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_FRBIT ();\n-}\n-\n-/* Set a value for h-frbit.  */\n-\n-void\n-sh64_h_frbit_set (SIM_CPU *current_cpu, BI newval)\n-{\n-  SET_H_FRBIT (newval);\n-}\n-\n-/* Get the value of h-szbit.  */\n-\n-BI\n-sh64_h_szbit_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_SZBIT ();\n-}\n-\n-/* Set a value for h-szbit.  */\n-\n-void\n-sh64_h_szbit_set (SIM_CPU *current_cpu, BI newval)\n-{\n-  SET_H_SZBIT (newval);\n-}\n-\n-/* Get the value of h-prbit.  */\n-\n-BI\n-sh64_h_prbit_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_PRBIT ();\n-}\n-\n-/* Set a value for h-prbit.  */\n-\n-void\n-sh64_h_prbit_set (SIM_CPU *current_cpu, BI newval)\n-{\n-  SET_H_PRBIT (newval);\n-}\n-\n-/* Get the value of h-sbit.  */\n-\n-BI\n-sh64_h_sbit_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_SBIT ();\n-}\n-\n-/* Set a value for h-sbit.  */\n-\n-void\n-sh64_h_sbit_set (SIM_CPU *current_cpu, BI newval)\n-{\n-  SET_H_SBIT (newval);\n-}\n-\n-/* Get the value of h-mbit.  */\n-\n-BI\n-sh64_h_mbit_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_MBIT ();\n-}\n-\n-/* Set a value for h-mbit.  */\n-\n-void\n-sh64_h_mbit_set (SIM_CPU *current_cpu, BI newval)\n-{\n-  SET_H_MBIT (newval);\n-}\n-\n-/* Get the value of h-qbit.  */\n-\n-BI\n-sh64_h_qbit_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_QBIT ();\n-}\n-\n-/* Set a value for h-qbit.  */\n-\n-void\n-sh64_h_qbit_set (SIM_CPU *current_cpu, BI newval)\n-{\n-  SET_H_QBIT (newval);\n-}\n-\n-/* Get the value of h-fr.  */\n-\n-SF\n-sh64_h_fr_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return CPU (h_fr[regno]);\n-}\n-\n-/* Set a value for h-fr.  */\n-\n-void\n-sh64_h_fr_set (SIM_CPU *current_cpu, UINT regno, SF newval)\n-{\n-  CPU (h_fr[regno]) = newval;\n-}\n-\n-/* Get the value of h-fp.  */\n-\n-SF\n-sh64_h_fp_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_FP (regno);\n-}\n-\n-/* Set a value for h-fp.  */\n-\n-void\n-sh64_h_fp_set (SIM_CPU *current_cpu, UINT regno, SF newval)\n-{\n-  SET_H_FP (regno, newval);\n-}\n-\n-/* Get the value of h-fv.  */\n-\n-SF\n-sh64_h_fv_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_FV (regno);\n-}\n-\n-/* Set a value for h-fv.  */\n-\n-void\n-sh64_h_fv_set (SIM_CPU *current_cpu, UINT regno, SF newval)\n-{\n-  SET_H_FV (regno, newval);\n-}\n-\n-/* Get the value of h-fmtx.  */\n-\n-SF\n-sh64_h_fmtx_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_FMTX (regno);\n-}\n-\n-/* Set a value for h-fmtx.  */\n-\n-void\n-sh64_h_fmtx_set (SIM_CPU *current_cpu, UINT regno, SF newval)\n-{\n-  SET_H_FMTX (regno, newval);\n-}\n-\n-/* Get the value of h-dr.  */\n-\n-DF\n-sh64_h_dr_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_DR (regno);\n-}\n-\n-/* Set a value for h-dr.  */\n-\n-void\n-sh64_h_dr_set (SIM_CPU *current_cpu, UINT regno, DF newval)\n-{\n-  SET_H_DR (regno, newval);\n-}\n-\n-/* Get the value of h-fsd.  */\n-\n-DF\n-sh64_h_fsd_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_FSD (regno);\n-}\n-\n-/* Set a value for h-fsd.  */\n-\n-void\n-sh64_h_fsd_set (SIM_CPU *current_cpu, UINT regno, DF newval)\n-{\n-  SET_H_FSD (regno, newval);\n-}\n-\n-/* Get the value of h-fmov.  */\n-\n-DF\n-sh64_h_fmov_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_FMOV (regno);\n-}\n-\n-/* Set a value for h-fmov.  */\n-\n-void\n-sh64_h_fmov_set (SIM_CPU *current_cpu, UINT regno, DF newval)\n-{\n-  SET_H_FMOV (regno, newval);\n-}\n-\n-/* Get the value of h-tr.  */\n-\n-DI\n-sh64_h_tr_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return CPU (h_tr[regno]);\n-}\n-\n-/* Set a value for h-tr.  */\n-\n-void\n-sh64_h_tr_set (SIM_CPU *current_cpu, UINT regno, DI newval)\n-{\n-  CPU (h_tr[regno]) = newval;\n-}\n-\n-/* Get the value of h-endian.  */\n-\n-BI\n-sh64_h_endian_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_ENDIAN ();\n-}\n-\n-/* Set a value for h-endian.  */\n-\n-void\n-sh64_h_endian_set (SIM_CPU *current_cpu, BI newval)\n-{\n-  SET_H_ENDIAN (newval);\n-}\n-\n-/* Get the value of h-ism.  */\n-\n-BI\n-sh64_h_ism_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_ISM ();\n-}\n-\n-/* Set a value for h-ism.  */\n-\n-void\n-sh64_h_ism_set (SIM_CPU *current_cpu, BI newval)\n-{\n-  SET_H_ISM (newval);\n-}\n-\n-/* Get the value of h-frc.  */\n-\n-SF\n-sh64_h_frc_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_FRC (regno);\n-}\n-\n-/* Set a value for h-frc.  */\n-\n-void\n-sh64_h_frc_set (SIM_CPU *current_cpu, UINT regno, SF newval)\n-{\n-  SET_H_FRC (regno, newval);\n-}\n-\n-/* Get the value of h-drc.  */\n-\n-DF\n-sh64_h_drc_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_DRC (regno);\n-}\n-\n-/* Set a value for h-drc.  */\n-\n-void\n-sh64_h_drc_set (SIM_CPU *current_cpu, UINT regno, DF newval)\n-{\n-  SET_H_DRC (regno, newval);\n-}\n-\n-/* Get the value of h-xf.  */\n-\n-SF\n-sh64_h_xf_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_XF (regno);\n-}\n-\n-/* Set a value for h-xf.  */\n-\n-void\n-sh64_h_xf_set (SIM_CPU *current_cpu, UINT regno, SF newval)\n-{\n-  SET_H_XF (regno, newval);\n-}\n-\n-/* Get the value of h-xd.  */\n-\n-DF\n-sh64_h_xd_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_XD (regno);\n-}\n-\n-/* Set a value for h-xd.  */\n-\n-void\n-sh64_h_xd_set (SIM_CPU *current_cpu, UINT regno, DF newval)\n-{\n-  SET_H_XD (regno, newval);\n-}\n-\n-/* Get the value of h-fvc.  */\n-\n-SF\n-sh64_h_fvc_get (SIM_CPU *current_cpu, UINT regno)\n-{\n-  return GET_H_FVC (regno);\n-}\n-\n-/* Set a value for h-fvc.  */\n-\n-void\n-sh64_h_fvc_set (SIM_CPU *current_cpu, UINT regno, SF newval)\n-{\n-  SET_H_FVC (regno, newval);\n-}\n-\n-/* Get the value of h-gbr.  */\n-\n-SI\n-sh64_h_gbr_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_GBR ();\n-}\n-\n-/* Set a value for h-gbr.  */\n-\n-void\n-sh64_h_gbr_set (SIM_CPU *current_cpu, SI newval)\n-{\n-  SET_H_GBR (newval);\n-}\n-\n-/* Get the value of h-vbr.  */\n-\n-SI\n-sh64_h_vbr_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_VBR ();\n-}\n-\n-/* Set a value for h-vbr.  */\n-\n-void\n-sh64_h_vbr_set (SIM_CPU *current_cpu, SI newval)\n-{\n-  SET_H_VBR (newval);\n-}\n-\n-/* Get the value of h-pr.  */\n-\n-SI\n-sh64_h_pr_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_PR ();\n-}\n-\n-/* Set a value for h-pr.  */\n-\n-void\n-sh64_h_pr_set (SIM_CPU *current_cpu, SI newval)\n-{\n-  SET_H_PR (newval);\n-}\n-\n-/* Get the value of h-macl.  */\n-\n-SI\n-sh64_h_macl_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_MACL ();\n-}\n-\n-/* Set a value for h-macl.  */\n-\n-void\n-sh64_h_macl_set (SIM_CPU *current_cpu, SI newval)\n-{\n-  SET_H_MACL (newval);\n-}\n-\n-/* Get the value of h-mach.  */\n-\n-SI\n-sh64_h_mach_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_MACH ();\n-}\n-\n-/* Set a value for h-mach.  */\n-\n-void\n-sh64_h_mach_set (SIM_CPU *current_cpu, SI newval)\n-{\n-  SET_H_MACH (newval);\n-}\n-\n-/* Get the value of h-tbit.  */\n-\n-BI\n-sh64_h_tbit_get (SIM_CPU *current_cpu)\n-{\n-  return GET_H_TBIT ();\n-}\n-\n-/* Set a value for h-tbit.  */\n-\n-void\n-sh64_h_tbit_set (SIM_CPU *current_cpu, BI newval)\n-{\n-  SET_H_TBIT (newval);\n-}\n-\n-/* Record trace results for INSN.  */\n-\n-void\n-sh64_record_trace_results (SIM_CPU *current_cpu, CGEN_INSN *insn,\n-\t\t\t    int *indices, TRACE_RECORD *tr)\n-{\n-}"
    },
    {
      "sha": "ae8957b64421163a93dcbe7633bc2691d73d65e5",
      "filename": "sim/sh64/cpu.h",
      "status": "removed",
      "additions": 0,
      "deletions": 341,
      "changes": 341,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/cpu.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/cpu.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/cpu.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,341 +0,0 @@\n-/* CPU family header for sh64.\n-\n-THIS FILE IS MACHINE GENERATED WITH CGEN.\n-\n-Copyright 1996-2021 Free Software Foundation, Inc.\n-\n-This file is part of the GNU simulators.\n-\n-   This file is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   It is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n-\n-*/\n-\n-#ifndef CPU_SH64_H\n-#define CPU_SH64_H\n-\n-/* Maximum number of instructions that are fetched at a time.\n-   This is for LIW type instructions sets (e.g. m32r).  */\n-#define MAX_LIW_INSNS 1\n-\n-/* Maximum number of instructions that can be executed in parallel.  */\n-#define MAX_PARALLEL_INSNS 1\n-\n-/* The size of an \"int\" needed to hold an instruction word.\n-   This is usually 32 bits, but some architectures needs 64 bits.  */\n-typedef CGEN_INSN_INT CGEN_INSN_WORD;\n-\n-#include \"cgen-engine.h\"\n-\n-/* CPU state information.  */\n-typedef struct {\n-  /* Hardware elements.  */\n-  struct {\n-  /* Program counter */\n-  UDI h_pc;\n-#define GET_H_PC() CPU (h_pc)\n-#define SET_H_PC(x) \\\n-do { \\\n-{\\\n-CPU (h_ism) = ANDDI ((x), 1);\\\n-CPU (h_pc) = ANDDI ((x), INVDI (1));\\\n-}\\\n-;} while (0)\n-  /* General purpose integer registers */\n-  DI h_gr[64];\n-#define GET_H_GR(index) ((((index) == (63))) ? (MAKEDI (0, 0)) : (CPU (h_gr[index])))\n-#define SET_H_GR(index, x) \\\n-do { \\\n-if ((((index)) != (63))) {\\\n-CPU (h_gr[(index)]) = (x);\\\n-} else {\\\n-((void) 0); /*nop*/\\\n-}\\\n-;} while (0)\n-  /* Control registers */\n-  DI h_cr[64];\n-#define GET_H_CR(index) ((((index) == (0))) ? (ZEXTSIDI (CPU (h_sr))) : (CPU (h_cr[index])))\n-#define SET_H_CR(index, x) \\\n-do { \\\n-if ((((index)) == (0))) {\\\n-CPU (h_sr) = (x);\\\n-} else {\\\n-CPU (h_cr[(index)]) = (x);\\\n-}\\\n-;} while (0)\n-  /* Status register */\n-  SI h_sr;\n-#define GET_H_SR() CPU (h_sr)\n-#define SET_H_SR(x) (CPU (h_sr) = (x))\n-  /* Floating point status and control register */\n-  SI h_fpscr;\n-#define GET_H_FPSCR() CPU (h_fpscr)\n-#define SET_H_FPSCR(x) (CPU (h_fpscr) = (x))\n-  /* Single precision floating point registers */\n-  SF h_fr[64];\n-#define GET_H_FR(a1) CPU (h_fr)[a1]\n-#define SET_H_FR(a1, x) (CPU (h_fr)[a1] = (x))\n-  /* Single/Double precision floating point registers */\n-  DF h_fsd[16];\n-#define GET_H_FSD(index) ((GET_H_PRBIT ()) ? (GET_H_DRC (index)) : (CGEN_CPU_FPU (current_cpu)->ops->fextsfdf (CGEN_CPU_FPU (current_cpu), FPCONV_DEFAULT, CPU (h_fr[index]))))\n-#define SET_H_FSD(index, x) \\\n-do { \\\n-if (GET_H_PRBIT ()) {\\\n-SET_H_DRC ((index), (x));\\\n-} else {\\\n-SET_H_FRC ((index), CGEN_CPU_FPU (current_cpu)->ops->ftruncdfsf (CGEN_CPU_FPU (current_cpu), FPCONV_DEFAULT, (x)));\\\n-}\\\n-;} while (0)\n-  /* floating point registers for fmov */\n-  DF h_fmov[16];\n-#define GET_H_FMOV(index) ((NOTBI (GET_H_SZBIT ())) ? (CGEN_CPU_FPU (current_cpu)->ops->fextsfdf (CGEN_CPU_FPU (current_cpu), FPCONV_DEFAULT, GET_H_FRC (index))) : (((((((index) & (1))) == (1))) ? (GET_H_XD (((index) & ((~ (1)))))) : (GET_H_DR (index)))))\n-#define SET_H_FMOV(index, x) \\\n-do { \\\n-if (NOTBI (GET_H_SZBIT ())) {\\\n-SET_H_FRC ((index), CGEN_CPU_FPU (current_cpu)->ops->ftruncdfsf (CGEN_CPU_FPU (current_cpu), FPCONV_DEFAULT, (x)));\\\n-} else {\\\n-if ((((((index)) & (1))) == (1))) {\\\n-SET_H_XD ((((index)) & ((~ (1)))), (x));\\\n-} else {\\\n-SET_H_DR ((index), (x));\\\n-}\\\n-}\\\n-;} while (0)\n-  /* Branch target registers */\n-  DI h_tr[8];\n-#define GET_H_TR(a1) CPU (h_tr)[a1]\n-#define SET_H_TR(a1, x) (CPU (h_tr)[a1] = (x))\n-  /* Current instruction set mode */\n-  BI h_ism;\n-#define GET_H_ISM() CPU (h_ism)\n-#define SET_H_ISM(x) \\\n-do { \\\n-cgen_rtx_error (current_cpu, \"cannot set ism directly\");\\\n-;} while (0)\n-  } hardware;\n-#define CPU_CGEN_HW(cpu) (& (cpu)->cpu_data.hardware)\n-} SH64_CPU_DATA;\n-\n-/* Virtual regs.  */\n-\n-#define GET_H_GRC(index) ANDDI (CPU (h_gr[index]), ZEXTSIDI (0xffffffff))\n-#define SET_H_GRC(index, x) \\\n-do { \\\n-CPU (h_gr[(index)]) = EXTSIDI ((x));\\\n-;} while (0)\n-#define GET_H_FRBIT() ANDSI (SRLSI (CPU (h_fpscr), 21), 1)\n-#define SET_H_FRBIT(x) \\\n-do { \\\n-CPU (h_fpscr) = ORSI (ANDSI (CPU (h_fpscr), (~ (((1) << (21))))), SLLSI ((x), 21));\\\n-;} while (0)\n-#define GET_H_SZBIT() ANDSI (SRLSI (CPU (h_fpscr), 20), 1)\n-#define SET_H_SZBIT(x) \\\n-do { \\\n-CPU (h_fpscr) = ORSI (ANDSI (CPU (h_fpscr), (~ (((1) << (20))))), SLLSI ((x), 20));\\\n-;} while (0)\n-#define GET_H_PRBIT() ANDSI (SRLSI (CPU (h_fpscr), 19), 1)\n-#define SET_H_PRBIT(x) \\\n-do { \\\n-CPU (h_fpscr) = ORSI (ANDSI (CPU (h_fpscr), (~ (((1) << (19))))), SLLSI ((x), 19));\\\n-;} while (0)\n-#define GET_H_SBIT() ANDSI (SRLSI (CPU (h_sr), 1), 1)\n-#define SET_H_SBIT(x) \\\n-do { \\\n-CPU (h_sr) = ORSI (ANDSI (CPU (h_sr), (~ (2))), SLLSI ((x), 1));\\\n-;} while (0)\n-#define GET_H_MBIT() ANDSI (SRLSI (CPU (h_sr), 9), 1)\n-#define SET_H_MBIT(x) \\\n-do { \\\n-CPU (h_sr) = ORSI (ANDSI (CPU (h_sr), (~ (((1) << (9))))), SLLSI ((x), 9));\\\n-;} while (0)\n-#define GET_H_QBIT() ANDSI (SRLSI (CPU (h_sr), 8), 1)\n-#define SET_H_QBIT(x) \\\n-do { \\\n-CPU (h_sr) = ORSI (ANDSI (CPU (h_sr), (~ (((1) << (8))))), SLLSI ((x), 8));\\\n-;} while (0)\n-#define GET_H_FP(index) CPU (h_fr[index])\n-#define SET_H_FP(index, x) \\\n-do { \\\n-CPU (h_fr[(index)]) = (x);\\\n-;} while (0)\n-#define GET_H_FV(index) CPU (h_fr[index])\n-#define SET_H_FV(index, x) \\\n-do { \\\n-CPU (h_fr[(index)]) = (x);\\\n-;} while (0)\n-#define GET_H_FMTX(index) CPU (h_fr[index])\n-#define SET_H_FMTX(index, x) \\\n-do { \\\n-CPU (h_fr[(index)]) = (x);\\\n-;} while (0)\n-#define GET_H_DR(index) SUBWORDDIDF (ORDI (SLLDI (ZEXTSIDI (SUBWORDSFSI (CPU (h_fr[index]))), 32), ZEXTSIDI (SUBWORDSFSI (CPU (h_fr[((index) + (1))])))))\n-#define SET_H_DR(index, x) \\\n-do { \\\n-{\\\n-CPU (h_fr[(index)]) = SUBWORDSISF (SUBWORDDFSI ((x), 0));\\\n-CPU (h_fr[(((index)) + (1))]) = SUBWORDSISF (SUBWORDDFSI ((x), 1));\\\n-}\\\n-;} while (0)\n-#define GET_H_ENDIAN() sh64_endian (current_cpu)\n-#define SET_H_ENDIAN(x) \\\n-do { \\\n-cgen_rtx_error (current_cpu, \"cannot alter target byte order mid-program\");\\\n-;} while (0)\n-#define GET_H_FRC(index) CPU (h_fr[((((16) * (GET_H_FRBIT ()))) + (index))])\n-#define SET_H_FRC(index, x) \\\n-do { \\\n-CPU (h_fr[((((16) * (GET_H_FRBIT ()))) + ((index)))]) = (x);\\\n-;} while (0)\n-#define GET_H_DRC(index) GET_H_DR (((((16) * (GET_H_FRBIT ()))) + (index)))\n-#define SET_H_DRC(index, x) \\\n-do { \\\n-SET_H_DR (((((16) * (GET_H_FRBIT ()))) + ((index))), (x));\\\n-;} while (0)\n-#define GET_H_XF(index) CPU (h_fr[((((16) * (NOTBI (GET_H_FRBIT ())))) + (index))])\n-#define SET_H_XF(index, x) \\\n-do { \\\n-CPU (h_fr[((((16) * (NOTBI (GET_H_FRBIT ())))) + ((index)))]) = (x);\\\n-;} while (0)\n-#define GET_H_XD(index) GET_H_DR (((((16) * (NOTBI (GET_H_FRBIT ())))) + (index)))\n-#define SET_H_XD(index, x) \\\n-do { \\\n-SET_H_DR (((((16) * (NOTBI (GET_H_FRBIT ())))) + ((index))), (x));\\\n-;} while (0)\n-#define GET_H_FVC(index) CPU (h_fr[((((16) * (GET_H_FRBIT ()))) + (index))])\n-#define SET_H_FVC(index, x) \\\n-do { \\\n-CPU (h_fr[((((16) * (GET_H_FRBIT ()))) + ((index)))]) = (x);\\\n-;} while (0)\n-#define GET_H_GBR() SUBWORDDISI (CPU (h_gr[((UINT) 16)]), 1)\n-#define SET_H_GBR(x) \\\n-do { \\\n-CPU (h_gr[((UINT) 16)]) = EXTSIDI ((x));\\\n-;} while (0)\n-#define GET_H_VBR() SUBWORDDISI (CPU (h_gr[((UINT) 20)]), 1)\n-#define SET_H_VBR(x) \\\n-do { \\\n-CPU (h_gr[((UINT) 20)]) = EXTSIDI ((x));\\\n-;} while (0)\n-#define GET_H_PR() SUBWORDDISI (CPU (h_gr[((UINT) 18)]), 1)\n-#define SET_H_PR(x) \\\n-do { \\\n-CPU (h_gr[((UINT) 18)]) = EXTSIDI ((x));\\\n-;} while (0)\n-#define GET_H_MACL() SUBWORDDISI (CPU (h_gr[((UINT) 17)]), 1)\n-#define SET_H_MACL(x) \\\n-do { \\\n-CPU (h_gr[((UINT) 17)]) = ORDI (SLLDI (ZEXTSIDI (SUBWORDDISI (CPU (h_gr[((UINT) 17)]), 0)), 32), ZEXTSIDI ((x)));\\\n-;} while (0)\n-#define GET_H_MACH() SUBWORDDISI (CPU (h_gr[((UINT) 17)]), 0)\n-#define SET_H_MACH(x) \\\n-do { \\\n-CPU (h_gr[((UINT) 17)]) = ORDI (SLLDI (ZEXTSIDI ((x)), 32), ZEXTSIDI (SUBWORDDISI (CPU (h_gr[((UINT) 17)]), 1)));\\\n-;} while (0)\n-#define GET_H_TBIT() ANDBI (CPU (h_gr[((UINT) 19)]), 1)\n-#define SET_H_TBIT(x) \\\n-do { \\\n-CPU (h_gr[((UINT) 19)]) = ORDI (ANDDI (CPU (h_gr[((UINT) 19)]), INVDI (1)), ZEXTBIDI ((x)));\\\n-;} while (0)\n-\n-/* Cover fns for register access.  */\n-UDI sh64_h_pc_get (SIM_CPU *);\n-void sh64_h_pc_set (SIM_CPU *, UDI);\n-DI sh64_h_gr_get (SIM_CPU *, UINT);\n-void sh64_h_gr_set (SIM_CPU *, UINT, DI);\n-SI sh64_h_grc_get (SIM_CPU *, UINT);\n-void sh64_h_grc_set (SIM_CPU *, UINT, SI);\n-DI sh64_h_cr_get (SIM_CPU *, UINT);\n-void sh64_h_cr_set (SIM_CPU *, UINT, DI);\n-SI sh64_h_sr_get (SIM_CPU *);\n-void sh64_h_sr_set (SIM_CPU *, SI);\n-SI sh64_h_fpscr_get (SIM_CPU *);\n-void sh64_h_fpscr_set (SIM_CPU *, SI);\n-BI sh64_h_frbit_get (SIM_CPU *);\n-void sh64_h_frbit_set (SIM_CPU *, BI);\n-BI sh64_h_szbit_get (SIM_CPU *);\n-void sh64_h_szbit_set (SIM_CPU *, BI);\n-BI sh64_h_prbit_get (SIM_CPU *);\n-void sh64_h_prbit_set (SIM_CPU *, BI);\n-BI sh64_h_sbit_get (SIM_CPU *);\n-void sh64_h_sbit_set (SIM_CPU *, BI);\n-BI sh64_h_mbit_get (SIM_CPU *);\n-void sh64_h_mbit_set (SIM_CPU *, BI);\n-BI sh64_h_qbit_get (SIM_CPU *);\n-void sh64_h_qbit_set (SIM_CPU *, BI);\n-SF sh64_h_fr_get (SIM_CPU *, UINT);\n-void sh64_h_fr_set (SIM_CPU *, UINT, SF);\n-SF sh64_h_fp_get (SIM_CPU *, UINT);\n-void sh64_h_fp_set (SIM_CPU *, UINT, SF);\n-SF sh64_h_fv_get (SIM_CPU *, UINT);\n-void sh64_h_fv_set (SIM_CPU *, UINT, SF);\n-SF sh64_h_fmtx_get (SIM_CPU *, UINT);\n-void sh64_h_fmtx_set (SIM_CPU *, UINT, SF);\n-DF sh64_h_dr_get (SIM_CPU *, UINT);\n-void sh64_h_dr_set (SIM_CPU *, UINT, DF);\n-DF sh64_h_fsd_get (SIM_CPU *, UINT);\n-void sh64_h_fsd_set (SIM_CPU *, UINT, DF);\n-DF sh64_h_fmov_get (SIM_CPU *, UINT);\n-void sh64_h_fmov_set (SIM_CPU *, UINT, DF);\n-DI sh64_h_tr_get (SIM_CPU *, UINT);\n-void sh64_h_tr_set (SIM_CPU *, UINT, DI);\n-BI sh64_h_endian_get (SIM_CPU *);\n-void sh64_h_endian_set (SIM_CPU *, BI);\n-BI sh64_h_ism_get (SIM_CPU *);\n-void sh64_h_ism_set (SIM_CPU *, BI);\n-SF sh64_h_frc_get (SIM_CPU *, UINT);\n-void sh64_h_frc_set (SIM_CPU *, UINT, SF);\n-DF sh64_h_drc_get (SIM_CPU *, UINT);\n-void sh64_h_drc_set (SIM_CPU *, UINT, DF);\n-SF sh64_h_xf_get (SIM_CPU *, UINT);\n-void sh64_h_xf_set (SIM_CPU *, UINT, SF);\n-DF sh64_h_xd_get (SIM_CPU *, UINT);\n-void sh64_h_xd_set (SIM_CPU *, UINT, DF);\n-SF sh64_h_fvc_get (SIM_CPU *, UINT);\n-void sh64_h_fvc_set (SIM_CPU *, UINT, SF);\n-SI sh64_h_gbr_get (SIM_CPU *);\n-void sh64_h_gbr_set (SIM_CPU *, SI);\n-SI sh64_h_vbr_get (SIM_CPU *);\n-void sh64_h_vbr_set (SIM_CPU *, SI);\n-SI sh64_h_pr_get (SIM_CPU *);\n-void sh64_h_pr_set (SIM_CPU *, SI);\n-SI sh64_h_macl_get (SIM_CPU *);\n-void sh64_h_macl_set (SIM_CPU *, SI);\n-SI sh64_h_mach_get (SIM_CPU *);\n-void sh64_h_mach_set (SIM_CPU *, SI);\n-BI sh64_h_tbit_get (SIM_CPU *);\n-void sh64_h_tbit_set (SIM_CPU *, BI);\n-\n-/* These must be hand-written.  */\n-extern CPUREG_FETCH_FN sh64_fetch_register;\n-extern CPUREG_STORE_FN sh64_store_register;\n-\n-typedef struct {\n-  int empty;\n-} MODEL_SH4_DATA;\n-\n-typedef struct {\n-  int empty;\n-} MODEL_SH5_DATA;\n-\n-typedef struct {\n-  int empty;\n-} MODEL_SH5_MEDIA_DATA;\n-\n-/* Collection of various things for the trace handler to use.  */\n-\n-typedef struct trace_record {\n-  IADDR pc;\n-  /* FIXME:wip */\n-} TRACE_RECORD;\n-\n-#endif /* CPU_SH64_H */"
    },
    {
      "sha": "9bdec49d8243f46f34ad06e0e489e80310d219de",
      "filename": "sim/sh64/cpuall.h",
      "status": "removed",
      "additions": 0,
      "deletions": 75,
      "changes": 75,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/cpuall.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/cpuall.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/cpuall.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,75 +0,0 @@\n-/* Simulator CPU header for sh.\n-\n-THIS FILE IS MACHINE GENERATED WITH CGEN.\n-\n-Copyright 1996-2021 Free Software Foundation, Inc.\n-\n-This file is part of the GNU simulators.\n-\n-   This file is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   It is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n-\n-*/\n-\n-#ifndef SH_CPUALL_H\n-#define SH_CPUALL_H\n-\n-/* Include files for each cpu family.  */\n-\n-#ifdef WANT_CPU_SH64\n-#include \"eng.h\"\n-#include \"cpu.h\"\n-#include \"decode.h\"\n-#endif\n-\n-extern const SIM_MACH sh2_mach;\n-extern const SIM_MACH sh2e_mach;\n-extern const SIM_MACH sh2a_fpu_mach;\n-extern const SIM_MACH sh2a_nofpu_mach;\n-extern const SIM_MACH sh3_mach;\n-extern const SIM_MACH sh3e_mach;\n-extern const SIM_MACH sh4_nofpu_mach;\n-extern const SIM_MACH sh4_mach;\n-extern const SIM_MACH sh4a_nofpu_mach;\n-extern const SIM_MACH sh4a_mach;\n-extern const SIM_MACH sh4al_mach;\n-extern const SIM_MACH sh5_mach;\n-\n-#ifndef WANT_CPU\n-/* The ARGBUF struct.  */\n-struct argbuf {\n-  /* These are the baseclass definitions.  */\n-  IADDR addr;\n-  const IDESC *idesc;\n-  char trace_p;\n-  char profile_p;\n-  /* ??? Temporary hack for skip insns.  */\n-  char skip_count;\n-  char unused;\n-  /* cpu specific data follows */\n-};\n-#endif\n-\n-#ifndef WANT_CPU\n-/* A cached insn.\n-\n-   ??? SCACHE used to contain more than just argbuf.  We could delete the\n-   type entirely and always just use ARGBUF, but for future concerns and as\n-   a level of abstraction it is left in.  */\n-\n-struct scache {\n-  struct argbuf argbuf;\n-};\n-#endif\n-\n-#endif /* SH_CPUALL_H */"
    },
    {
      "sha": "51f8f2c110b0a1f501d1b3da995ba8ff69a6dea7",
      "filename": "sim/sh64/decode-compact.c",
      "status": "removed",
      "additions": 0,
      "deletions": 6134,
      "changes": 6134,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/decode-compact.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/decode-compact.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/decode-compact.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942"
    },
    {
      "sha": "3968bd86cc5d21276ab699c55736dbf50999e3d3",
      "filename": "sim/sh64/decode-compact.h",
      "status": "removed",
      "additions": 0,
      "deletions": 279,
      "changes": 279,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/decode-compact.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/decode-compact.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/decode-compact.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,279 +0,0 @@\n-/* Decode header for sh64_compact.\n-\n-THIS FILE IS MACHINE GENERATED WITH CGEN.\n-\n-Copyright 1996-2021 Free Software Foundation, Inc.\n-\n-This file is part of the GNU simulators.\n-\n-   This file is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   It is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n-\n-*/\n-\n-#ifndef SH64_COMPACT_DECODE_H\n-#define SH64_COMPACT_DECODE_H\n-\n-extern const IDESC *sh64_compact_decode (SIM_CPU *, IADDR,\n-                                  CGEN_INSN_WORD, CGEN_INSN_WORD,\n-                                  ARGBUF *);\n-extern void sh64_compact_init_idesc_table (SIM_CPU *);\n-extern void sh64_compact_sem_init_idesc_table (SIM_CPU *);\n-extern void sh64_compact_semf_init_idesc_table (SIM_CPU *);\n-\n-/* Enum declaration for instructions in cpu family sh64.  */\n-typedef enum sh64_compact_insn_type {\n-  SH64_COMPACT_INSN_X_INVALID, SH64_COMPACT_INSN_X_AFTER, SH64_COMPACT_INSN_X_BEFORE, SH64_COMPACT_INSN_X_CTI_CHAIN\n- , SH64_COMPACT_INSN_X_CHAIN, SH64_COMPACT_INSN_X_BEGIN, SH64_COMPACT_INSN_ADD_COMPACT, SH64_COMPACT_INSN_ADDI_COMPACT\n- , SH64_COMPACT_INSN_ADDC_COMPACT, SH64_COMPACT_INSN_ADDV_COMPACT, SH64_COMPACT_INSN_AND_COMPACT, SH64_COMPACT_INSN_ANDI_COMPACT\n- , SH64_COMPACT_INSN_ANDB_COMPACT, SH64_COMPACT_INSN_BF_COMPACT, SH64_COMPACT_INSN_BFS_COMPACT, SH64_COMPACT_INSN_BRA_COMPACT\n- , SH64_COMPACT_INSN_BRAF_COMPACT, SH64_COMPACT_INSN_BRK_COMPACT, SH64_COMPACT_INSN_BSR_COMPACT, SH64_COMPACT_INSN_BSRF_COMPACT\n- , SH64_COMPACT_INSN_BT_COMPACT, SH64_COMPACT_INSN_BTS_COMPACT, SH64_COMPACT_INSN_CLRMAC_COMPACT, SH64_COMPACT_INSN_CLRS_COMPACT\n- , SH64_COMPACT_INSN_CLRT_COMPACT, SH64_COMPACT_INSN_CMPEQ_COMPACT, SH64_COMPACT_INSN_CMPEQI_COMPACT, SH64_COMPACT_INSN_CMPGE_COMPACT\n- , SH64_COMPACT_INSN_CMPGT_COMPACT, SH64_COMPACT_INSN_CMPHI_COMPACT, SH64_COMPACT_INSN_CMPHS_COMPACT, SH64_COMPACT_INSN_CMPPL_COMPACT\n- , SH64_COMPACT_INSN_CMPPZ_COMPACT, SH64_COMPACT_INSN_CMPSTR_COMPACT, SH64_COMPACT_INSN_DIV0S_COMPACT, SH64_COMPACT_INSN_DIV0U_COMPACT\n- , SH64_COMPACT_INSN_DIV1_COMPACT, SH64_COMPACT_INSN_DIVU_COMPACT, SH64_COMPACT_INSN_MULR_COMPACT, SH64_COMPACT_INSN_DMULSL_COMPACT\n- , SH64_COMPACT_INSN_DMULUL_COMPACT, SH64_COMPACT_INSN_DT_COMPACT, SH64_COMPACT_INSN_EXTSB_COMPACT, SH64_COMPACT_INSN_EXTSW_COMPACT\n- , SH64_COMPACT_INSN_EXTUB_COMPACT, SH64_COMPACT_INSN_EXTUW_COMPACT, SH64_COMPACT_INSN_FABS_COMPACT, SH64_COMPACT_INSN_FADD_COMPACT\n- , SH64_COMPACT_INSN_FCMPEQ_COMPACT, SH64_COMPACT_INSN_FCMPGT_COMPACT, SH64_COMPACT_INSN_FCNVDS_COMPACT, SH64_COMPACT_INSN_FCNVSD_COMPACT\n- , SH64_COMPACT_INSN_FDIV_COMPACT, SH64_COMPACT_INSN_FIPR_COMPACT, SH64_COMPACT_INSN_FLDS_COMPACT, SH64_COMPACT_INSN_FLDI0_COMPACT\n- , SH64_COMPACT_INSN_FLDI1_COMPACT, SH64_COMPACT_INSN_FLOAT_COMPACT, SH64_COMPACT_INSN_FMAC_COMPACT, SH64_COMPACT_INSN_FMOV1_COMPACT\n- , SH64_COMPACT_INSN_FMOV2_COMPACT, SH64_COMPACT_INSN_FMOV3_COMPACT, SH64_COMPACT_INSN_FMOV4_COMPACT, SH64_COMPACT_INSN_FMOV5_COMPACT\n- , SH64_COMPACT_INSN_FMOV6_COMPACT, SH64_COMPACT_INSN_FMOV7_COMPACT, SH64_COMPACT_INSN_FMOV8_COMPACT, SH64_COMPACT_INSN_FMOV9_COMPACT\n- , SH64_COMPACT_INSN_FMUL_COMPACT, SH64_COMPACT_INSN_FNEG_COMPACT, SH64_COMPACT_INSN_FRCHG_COMPACT, SH64_COMPACT_INSN_FSCHG_COMPACT\n- , SH64_COMPACT_INSN_FSQRT_COMPACT, SH64_COMPACT_INSN_FSTS_COMPACT, SH64_COMPACT_INSN_FSUB_COMPACT, SH64_COMPACT_INSN_FTRC_COMPACT\n- , SH64_COMPACT_INSN_FTRV_COMPACT, SH64_COMPACT_INSN_JMP_COMPACT, SH64_COMPACT_INSN_JSR_COMPACT, SH64_COMPACT_INSN_LDC_GBR_COMPACT\n- , SH64_COMPACT_INSN_LDC_VBR_COMPACT, SH64_COMPACT_INSN_LDC_SR_COMPACT, SH64_COMPACT_INSN_LDCL_GBR_COMPACT, SH64_COMPACT_INSN_LDCL_VBR_COMPACT\n- , SH64_COMPACT_INSN_LDS_FPSCR_COMPACT, SH64_COMPACT_INSN_LDSL_FPSCR_COMPACT, SH64_COMPACT_INSN_LDS_FPUL_COMPACT, SH64_COMPACT_INSN_LDSL_FPUL_COMPACT\n- , SH64_COMPACT_INSN_LDS_MACH_COMPACT, SH64_COMPACT_INSN_LDSL_MACH_COMPACT, SH64_COMPACT_INSN_LDS_MACL_COMPACT, SH64_COMPACT_INSN_LDSL_MACL_COMPACT\n- , SH64_COMPACT_INSN_LDS_PR_COMPACT, SH64_COMPACT_INSN_LDSL_PR_COMPACT, SH64_COMPACT_INSN_MACL_COMPACT, SH64_COMPACT_INSN_MACW_COMPACT\n- , SH64_COMPACT_INSN_MOV_COMPACT, SH64_COMPACT_INSN_MOVI_COMPACT, SH64_COMPACT_INSN_MOVI20_COMPACT, SH64_COMPACT_INSN_MOVB1_COMPACT\n- , SH64_COMPACT_INSN_MOVB2_COMPACT, SH64_COMPACT_INSN_MOVB3_COMPACT, SH64_COMPACT_INSN_MOVB4_COMPACT, SH64_COMPACT_INSN_MOVB5_COMPACT\n- , SH64_COMPACT_INSN_MOVB6_COMPACT, SH64_COMPACT_INSN_MOVB7_COMPACT, SH64_COMPACT_INSN_MOVB8_COMPACT, SH64_COMPACT_INSN_MOVB9_COMPACT\n- , SH64_COMPACT_INSN_MOVB10_COMPACT, SH64_COMPACT_INSN_MOVL1_COMPACT, SH64_COMPACT_INSN_MOVL2_COMPACT, SH64_COMPACT_INSN_MOVL3_COMPACT\n- , SH64_COMPACT_INSN_MOVL4_COMPACT, SH64_COMPACT_INSN_MOVL5_COMPACT, SH64_COMPACT_INSN_MOVL6_COMPACT, SH64_COMPACT_INSN_MOVL7_COMPACT\n- , SH64_COMPACT_INSN_MOVL8_COMPACT, SH64_COMPACT_INSN_MOVL9_COMPACT, SH64_COMPACT_INSN_MOVL10_COMPACT, SH64_COMPACT_INSN_MOVL11_COMPACT\n- , SH64_COMPACT_INSN_MOVL12_COMPACT, SH64_COMPACT_INSN_MOVL13_COMPACT, SH64_COMPACT_INSN_MOVW1_COMPACT, SH64_COMPACT_INSN_MOVW2_COMPACT\n- , SH64_COMPACT_INSN_MOVW3_COMPACT, SH64_COMPACT_INSN_MOVW4_COMPACT, SH64_COMPACT_INSN_MOVW5_COMPACT, SH64_COMPACT_INSN_MOVW6_COMPACT\n- , SH64_COMPACT_INSN_MOVW7_COMPACT, SH64_COMPACT_INSN_MOVW8_COMPACT, SH64_COMPACT_INSN_MOVW9_COMPACT, SH64_COMPACT_INSN_MOVW10_COMPACT\n- , SH64_COMPACT_INSN_MOVW11_COMPACT, SH64_COMPACT_INSN_MOVA_COMPACT, SH64_COMPACT_INSN_MOVCAL_COMPACT, SH64_COMPACT_INSN_MOVCOL_COMPACT\n- , SH64_COMPACT_INSN_MOVT_COMPACT, SH64_COMPACT_INSN_MOVUAL_COMPACT, SH64_COMPACT_INSN_MOVUAL2_COMPACT, SH64_COMPACT_INSN_MULL_COMPACT\n- , SH64_COMPACT_INSN_MULSW_COMPACT, SH64_COMPACT_INSN_MULUW_COMPACT, SH64_COMPACT_INSN_NEG_COMPACT, SH64_COMPACT_INSN_NEGC_COMPACT\n- , SH64_COMPACT_INSN_NOP_COMPACT, SH64_COMPACT_INSN_NOT_COMPACT, SH64_COMPACT_INSN_OCBI_COMPACT, SH64_COMPACT_INSN_OCBP_COMPACT\n- , SH64_COMPACT_INSN_OCBWB_COMPACT, SH64_COMPACT_INSN_OR_COMPACT, SH64_COMPACT_INSN_ORI_COMPACT, SH64_COMPACT_INSN_ORB_COMPACT\n- , SH64_COMPACT_INSN_PREF_COMPACT, SH64_COMPACT_INSN_ROTCL_COMPACT, SH64_COMPACT_INSN_ROTCR_COMPACT, SH64_COMPACT_INSN_ROTL_COMPACT\n- , SH64_COMPACT_INSN_ROTR_COMPACT, SH64_COMPACT_INSN_RTS_COMPACT, SH64_COMPACT_INSN_SETS_COMPACT, SH64_COMPACT_INSN_SETT_COMPACT\n- , SH64_COMPACT_INSN_SHAD_COMPACT, SH64_COMPACT_INSN_SHAL_COMPACT, SH64_COMPACT_INSN_SHAR_COMPACT, SH64_COMPACT_INSN_SHLD_COMPACT\n- , SH64_COMPACT_INSN_SHLL_COMPACT, SH64_COMPACT_INSN_SHLL2_COMPACT, SH64_COMPACT_INSN_SHLL8_COMPACT, SH64_COMPACT_INSN_SHLL16_COMPACT\n- , SH64_COMPACT_INSN_SHLR_COMPACT, SH64_COMPACT_INSN_SHLR2_COMPACT, SH64_COMPACT_INSN_SHLR8_COMPACT, SH64_COMPACT_INSN_SHLR16_COMPACT\n- , SH64_COMPACT_INSN_STC_GBR_COMPACT, SH64_COMPACT_INSN_STC_VBR_COMPACT, SH64_COMPACT_INSN_STCL_GBR_COMPACT, SH64_COMPACT_INSN_STCL_VBR_COMPACT\n- , SH64_COMPACT_INSN_STS_FPSCR_COMPACT, SH64_COMPACT_INSN_STSL_FPSCR_COMPACT, SH64_COMPACT_INSN_STS_FPUL_COMPACT, SH64_COMPACT_INSN_STSL_FPUL_COMPACT\n- , SH64_COMPACT_INSN_STS_MACH_COMPACT, SH64_COMPACT_INSN_STSL_MACH_COMPACT, SH64_COMPACT_INSN_STS_MACL_COMPACT, SH64_COMPACT_INSN_STSL_MACL_COMPACT\n- , SH64_COMPACT_INSN_STS_PR_COMPACT, SH64_COMPACT_INSN_STSL_PR_COMPACT, SH64_COMPACT_INSN_SUB_COMPACT, SH64_COMPACT_INSN_SUBC_COMPACT\n- , SH64_COMPACT_INSN_SUBV_COMPACT, SH64_COMPACT_INSN_SWAPB_COMPACT, SH64_COMPACT_INSN_SWAPW_COMPACT, SH64_COMPACT_INSN_TASB_COMPACT\n- , SH64_COMPACT_INSN_TRAPA_COMPACT, SH64_COMPACT_INSN_TST_COMPACT, SH64_COMPACT_INSN_TSTI_COMPACT, SH64_COMPACT_INSN_TSTB_COMPACT\n- , SH64_COMPACT_INSN_XOR_COMPACT, SH64_COMPACT_INSN_XORI_COMPACT, SH64_COMPACT_INSN_XORB_COMPACT, SH64_COMPACT_INSN_XTRCT_COMPACT\n- , SH64_COMPACT_INSN__MAX\n-} SH64_COMPACT_INSN_TYPE;\n-\n-/* Enum declaration for semantic formats in cpu family sh64.  */\n-typedef enum sh64_compact_sfmt_type {\n-  SH64_COMPACT_SFMT_EMPTY, SH64_COMPACT_SFMT_ADD_COMPACT, SH64_COMPACT_SFMT_ADDI_COMPACT, SH64_COMPACT_SFMT_ADDC_COMPACT\n- , SH64_COMPACT_SFMT_ADDV_COMPACT, SH64_COMPACT_SFMT_AND_COMPACT, SH64_COMPACT_SFMT_ANDI_COMPACT, SH64_COMPACT_SFMT_ANDB_COMPACT\n- , SH64_COMPACT_SFMT_BF_COMPACT, SH64_COMPACT_SFMT_BFS_COMPACT, SH64_COMPACT_SFMT_BRA_COMPACT, SH64_COMPACT_SFMT_BRAF_COMPACT\n- , SH64_COMPACT_SFMT_BRK_COMPACT, SH64_COMPACT_SFMT_BSR_COMPACT, SH64_COMPACT_SFMT_BSRF_COMPACT, SH64_COMPACT_SFMT_CLRMAC_COMPACT\n- , SH64_COMPACT_SFMT_CLRS_COMPACT, SH64_COMPACT_SFMT_CLRT_COMPACT, SH64_COMPACT_SFMT_CMPEQ_COMPACT, SH64_COMPACT_SFMT_CMPEQI_COMPACT\n- , SH64_COMPACT_SFMT_CMPPL_COMPACT, SH64_COMPACT_SFMT_DIV0S_COMPACT, SH64_COMPACT_SFMT_DIV0U_COMPACT, SH64_COMPACT_SFMT_DIV1_COMPACT\n- , SH64_COMPACT_SFMT_DIVU_COMPACT, SH64_COMPACT_SFMT_DMULSL_COMPACT, SH64_COMPACT_SFMT_DT_COMPACT, SH64_COMPACT_SFMT_EXTSB_COMPACT\n- , SH64_COMPACT_SFMT_FABS_COMPACT, SH64_COMPACT_SFMT_FADD_COMPACT, SH64_COMPACT_SFMT_FCMPEQ_COMPACT, SH64_COMPACT_SFMT_FCNVDS_COMPACT\n- , SH64_COMPACT_SFMT_FCNVSD_COMPACT, SH64_COMPACT_SFMT_FIPR_COMPACT, SH64_COMPACT_SFMT_FLDS_COMPACT, SH64_COMPACT_SFMT_FLDI0_COMPACT\n- , SH64_COMPACT_SFMT_FLOAT_COMPACT, SH64_COMPACT_SFMT_FMAC_COMPACT, SH64_COMPACT_SFMT_FMOV1_COMPACT, SH64_COMPACT_SFMT_FMOV2_COMPACT\n- , SH64_COMPACT_SFMT_FMOV3_COMPACT, SH64_COMPACT_SFMT_FMOV4_COMPACT, SH64_COMPACT_SFMT_FMOV5_COMPACT, SH64_COMPACT_SFMT_FMOV6_COMPACT\n- , SH64_COMPACT_SFMT_FMOV7_COMPACT, SH64_COMPACT_SFMT_FMOV8_COMPACT, SH64_COMPACT_SFMT_FMOV9_COMPACT, SH64_COMPACT_SFMT_FRCHG_COMPACT\n- , SH64_COMPACT_SFMT_FSCHG_COMPACT, SH64_COMPACT_SFMT_FSTS_COMPACT, SH64_COMPACT_SFMT_FTRC_COMPACT, SH64_COMPACT_SFMT_FTRV_COMPACT\n- , SH64_COMPACT_SFMT_LDC_GBR_COMPACT, SH64_COMPACT_SFMT_LDC_VBR_COMPACT, SH64_COMPACT_SFMT_LDC_SR_COMPACT, SH64_COMPACT_SFMT_LDCL_GBR_COMPACT\n- , SH64_COMPACT_SFMT_LDCL_VBR_COMPACT, SH64_COMPACT_SFMT_LDS_FPSCR_COMPACT, SH64_COMPACT_SFMT_LDSL_FPSCR_COMPACT, SH64_COMPACT_SFMT_LDS_FPUL_COMPACT\n- , SH64_COMPACT_SFMT_LDSL_FPUL_COMPACT, SH64_COMPACT_SFMT_LDS_MACH_COMPACT, SH64_COMPACT_SFMT_LDSL_MACH_COMPACT, SH64_COMPACT_SFMT_LDS_MACL_COMPACT\n- , SH64_COMPACT_SFMT_LDSL_MACL_COMPACT, SH64_COMPACT_SFMT_LDS_PR_COMPACT, SH64_COMPACT_SFMT_LDSL_PR_COMPACT, SH64_COMPACT_SFMT_MACL_COMPACT\n- , SH64_COMPACT_SFMT_MACW_COMPACT, SH64_COMPACT_SFMT_MOV_COMPACT, SH64_COMPACT_SFMT_MOVI_COMPACT, SH64_COMPACT_SFMT_MOVI20_COMPACT\n- , SH64_COMPACT_SFMT_MOVB1_COMPACT, SH64_COMPACT_SFMT_MOVB2_COMPACT, SH64_COMPACT_SFMT_MOVB3_COMPACT, SH64_COMPACT_SFMT_MOVB4_COMPACT\n- , SH64_COMPACT_SFMT_MOVB5_COMPACT, SH64_COMPACT_SFMT_MOVB6_COMPACT, SH64_COMPACT_SFMT_MOVB7_COMPACT, SH64_COMPACT_SFMT_MOVB8_COMPACT\n- , SH64_COMPACT_SFMT_MOVB9_COMPACT, SH64_COMPACT_SFMT_MOVB10_COMPACT, SH64_COMPACT_SFMT_MOVL1_COMPACT, SH64_COMPACT_SFMT_MOVL2_COMPACT\n- , SH64_COMPACT_SFMT_MOVL3_COMPACT, SH64_COMPACT_SFMT_MOVL4_COMPACT, SH64_COMPACT_SFMT_MOVL5_COMPACT, SH64_COMPACT_SFMT_MOVL6_COMPACT\n- , SH64_COMPACT_SFMT_MOVL7_COMPACT, SH64_COMPACT_SFMT_MOVL8_COMPACT, SH64_COMPACT_SFMT_MOVL9_COMPACT, SH64_COMPACT_SFMT_MOVL10_COMPACT\n- , SH64_COMPACT_SFMT_MOVL11_COMPACT, SH64_COMPACT_SFMT_MOVL12_COMPACT, SH64_COMPACT_SFMT_MOVL13_COMPACT, SH64_COMPACT_SFMT_MOVW1_COMPACT\n- , SH64_COMPACT_SFMT_MOVW2_COMPACT, SH64_COMPACT_SFMT_MOVW3_COMPACT, SH64_COMPACT_SFMT_MOVW4_COMPACT, SH64_COMPACT_SFMT_MOVW5_COMPACT\n- , SH64_COMPACT_SFMT_MOVW6_COMPACT, SH64_COMPACT_SFMT_MOVW7_COMPACT, SH64_COMPACT_SFMT_MOVW8_COMPACT, SH64_COMPACT_SFMT_MOVW9_COMPACT\n- , SH64_COMPACT_SFMT_MOVW10_COMPACT, SH64_COMPACT_SFMT_MOVW11_COMPACT, SH64_COMPACT_SFMT_MOVA_COMPACT, SH64_COMPACT_SFMT_MOVCAL_COMPACT\n- , SH64_COMPACT_SFMT_MOVCOL_COMPACT, SH64_COMPACT_SFMT_MOVT_COMPACT, SH64_COMPACT_SFMT_MOVUAL_COMPACT, SH64_COMPACT_SFMT_MOVUAL2_COMPACT\n- , SH64_COMPACT_SFMT_MULL_COMPACT, SH64_COMPACT_SFMT_NEGC_COMPACT, SH64_COMPACT_SFMT_NOP_COMPACT, SH64_COMPACT_SFMT_PREF_COMPACT\n- , SH64_COMPACT_SFMT_ROTCL_COMPACT, SH64_COMPACT_SFMT_RTS_COMPACT, SH64_COMPACT_SFMT_SHAD_COMPACT, SH64_COMPACT_SFMT_STC_GBR_COMPACT\n- , SH64_COMPACT_SFMT_STC_VBR_COMPACT, SH64_COMPACT_SFMT_STCL_GBR_COMPACT, SH64_COMPACT_SFMT_STCL_VBR_COMPACT, SH64_COMPACT_SFMT_STS_FPSCR_COMPACT\n- , SH64_COMPACT_SFMT_STSL_FPSCR_COMPACT, SH64_COMPACT_SFMT_STS_FPUL_COMPACT, SH64_COMPACT_SFMT_STSL_FPUL_COMPACT, SH64_COMPACT_SFMT_STS_MACH_COMPACT\n- , SH64_COMPACT_SFMT_STSL_MACH_COMPACT, SH64_COMPACT_SFMT_STS_MACL_COMPACT, SH64_COMPACT_SFMT_STSL_MACL_COMPACT, SH64_COMPACT_SFMT_STS_PR_COMPACT\n- , SH64_COMPACT_SFMT_STSL_PR_COMPACT, SH64_COMPACT_SFMT_TASB_COMPACT, SH64_COMPACT_SFMT_TRAPA_COMPACT, SH64_COMPACT_SFMT_TSTI_COMPACT\n- , SH64_COMPACT_SFMT_TSTB_COMPACT\n-} SH64_COMPACT_SFMT_TYPE;\n-\n-/* Function unit handlers (user written).  */\n-\n-extern int sh64_model_sh5_u_ftrv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*fvn*/);\n-extern int sh64_model_sh5_u_fipr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*fvm*/, INT /*fvn*/);\n-extern int sh64_model_sh5_u_ocb (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_mulr_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_mulr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_dr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_u_load_dr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_set_dr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_fcnv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_fcmp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_fsqrt (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_fdiv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_fpu_load_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_use_fpscr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_ldsl_fpscr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_lds_fpscr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_flds_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_load_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_set_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_fpu_memory_access (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_fr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_u_set_fr_0 (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_set_fr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_load_fr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_maybe_fpu (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_fpu (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_trap (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_write_back (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_multiply_result (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_shift (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_tas (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_mulsw (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_mull (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_dmul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_macl (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_macw (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_multiply (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_set_mac (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_load_mac (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_load_vbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_load_gbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_u_load_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_stc_vbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_ldcl_vbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_ldcl (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_tbit (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_ldc_gbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_ldc_sr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_set_sr_bit (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_load_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_sts_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_lds_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_memory_access (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_logic_b (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_jsr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_jmp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_branch (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_sx (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_exec (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_putcfg (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_getcfg (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_pt (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*targetreg*/);\n-extern int sh64_model_sh5_media_u_ftrvs (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_fsqrtd (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_fdivd (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_cond_branch (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*targetreg*/);\n-extern int sh64_model_sh5_media_u_blink (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*targetreg*/);\n-extern int sh64_model_sh5_media_u_use_tr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_use_mtrx (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_use_fv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_use_fp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_load_mtrx (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_load_fv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_load_fp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_set_mtrx (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_set_fv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_set_fp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_set_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_ftrv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*fvn*/);\n-extern int sh64_model_sh5_media_u_fipr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*fvm*/, INT /*fvn*/);\n-extern int sh64_model_sh5_media_u_ocb (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_mulr_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_mulr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_dr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_load_dr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_set_dr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_fcnv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_fcmp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_fsqrt (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_fdiv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_fpu_load_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_use_fpscr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_ldsl_fpscr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_lds_fpscr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_flds_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_load_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_set_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_fpu_memory_access (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_fr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_set_fr_0 (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_set_fr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_load_fr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_maybe_fpu (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_fpu (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_trap (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_write_back (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_multiply_result (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_shift (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_tas (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_mulsw (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_mull (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_dmul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_macl (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_macw (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_multiply (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_set_mac (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_load_mac (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_load_vbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_load_gbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_load_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_stc_vbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_ldcl_vbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_ldcl (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_tbit (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_ldc_gbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_ldc_sr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_set_sr_bit (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_load_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_sts_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_lds_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_memory_access (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_logic_b (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_jsr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_jmp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_branch (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_sx (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_exec (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-\n-/* Profiling before/after handlers (user written) */\n-\n-extern void sh64_model_insn_before (SIM_CPU *, int /*first_p*/);\n-extern void sh64_model_insn_after (SIM_CPU *, int /*last_p*/, int /*cycles*/);\n-\n-#endif /* SH64_COMPACT_DECODE_H */"
    },
    {
      "sha": "91e55df6f6cfa57701bc9fe92829a4b5b6bdf692",
      "filename": "sim/sh64/decode-media.c",
      "status": "removed",
      "additions": 0,
      "deletions": 4100,
      "changes": 4100,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/decode-media.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/decode-media.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/decode-media.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942"
    },
    {
      "sha": "4997814c7c21389712f3d56af06b37b9e8c5c6f0",
      "filename": "sim/sh64/decode-media.h",
      "status": "removed",
      "additions": 0,
      "deletions": 269,
      "changes": 269,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/decode-media.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/decode-media.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/decode-media.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,269 +0,0 @@\n-/* Decode header for sh64_media.\n-\n-THIS FILE IS MACHINE GENERATED WITH CGEN.\n-\n-Copyright 1996-2021 Free Software Foundation, Inc.\n-\n-This file is part of the GNU simulators.\n-\n-   This file is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   It is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n-\n-*/\n-\n-#ifndef SH64_MEDIA_DECODE_H\n-#define SH64_MEDIA_DECODE_H\n-\n-extern const IDESC *sh64_media_decode (SIM_CPU *, IADDR,\n-                                  CGEN_INSN_WORD, CGEN_INSN_WORD,\n-                                  ARGBUF *);\n-extern void sh64_media_init_idesc_table (SIM_CPU *);\n-extern void sh64_media_sem_init_idesc_table (SIM_CPU *);\n-extern void sh64_media_semf_init_idesc_table (SIM_CPU *);\n-\n-/* Enum declaration for instructions in cpu family sh64.  */\n-typedef enum sh64_media_insn_type {\n-  SH64_MEDIA_INSN_X_INVALID, SH64_MEDIA_INSN_X_AFTER, SH64_MEDIA_INSN_X_BEFORE, SH64_MEDIA_INSN_X_CTI_CHAIN\n- , SH64_MEDIA_INSN_X_CHAIN, SH64_MEDIA_INSN_X_BEGIN, SH64_MEDIA_INSN_ADD, SH64_MEDIA_INSN_ADDL\n- , SH64_MEDIA_INSN_ADDI, SH64_MEDIA_INSN_ADDIL, SH64_MEDIA_INSN_ADDZL, SH64_MEDIA_INSN_ALLOCO\n- , SH64_MEDIA_INSN_AND, SH64_MEDIA_INSN_ANDC, SH64_MEDIA_INSN_ANDI, SH64_MEDIA_INSN_BEQ\n- , SH64_MEDIA_INSN_BEQI, SH64_MEDIA_INSN_BGE, SH64_MEDIA_INSN_BGEU, SH64_MEDIA_INSN_BGT\n- , SH64_MEDIA_INSN_BGTU, SH64_MEDIA_INSN_BLINK, SH64_MEDIA_INSN_BNE, SH64_MEDIA_INSN_BNEI\n- , SH64_MEDIA_INSN_BRK, SH64_MEDIA_INSN_BYTEREV, SH64_MEDIA_INSN_CMPEQ, SH64_MEDIA_INSN_CMPGT\n- , SH64_MEDIA_INSN_CMPGTU, SH64_MEDIA_INSN_CMVEQ, SH64_MEDIA_INSN_CMVNE, SH64_MEDIA_INSN_FABSD\n- , SH64_MEDIA_INSN_FABSS, SH64_MEDIA_INSN_FADDD, SH64_MEDIA_INSN_FADDS, SH64_MEDIA_INSN_FCMPEQD\n- , SH64_MEDIA_INSN_FCMPEQS, SH64_MEDIA_INSN_FCMPGED, SH64_MEDIA_INSN_FCMPGES, SH64_MEDIA_INSN_FCMPGTD\n- , SH64_MEDIA_INSN_FCMPGTS, SH64_MEDIA_INSN_FCMPUND, SH64_MEDIA_INSN_FCMPUNS, SH64_MEDIA_INSN_FCNVDS\n- , SH64_MEDIA_INSN_FCNVSD, SH64_MEDIA_INSN_FDIVD, SH64_MEDIA_INSN_FDIVS, SH64_MEDIA_INSN_FGETSCR\n- , SH64_MEDIA_INSN_FIPRS, SH64_MEDIA_INSN_FLDD, SH64_MEDIA_INSN_FLDP, SH64_MEDIA_INSN_FLDS\n- , SH64_MEDIA_INSN_FLDXD, SH64_MEDIA_INSN_FLDXP, SH64_MEDIA_INSN_FLDXS, SH64_MEDIA_INSN_FLOATLD\n- , SH64_MEDIA_INSN_FLOATLS, SH64_MEDIA_INSN_FLOATQD, SH64_MEDIA_INSN_FLOATQS, SH64_MEDIA_INSN_FMACS\n- , SH64_MEDIA_INSN_FMOVD, SH64_MEDIA_INSN_FMOVDQ, SH64_MEDIA_INSN_FMOVLS, SH64_MEDIA_INSN_FMOVQD\n- , SH64_MEDIA_INSN_FMOVS, SH64_MEDIA_INSN_FMOVSL, SH64_MEDIA_INSN_FMULD, SH64_MEDIA_INSN_FMULS\n- , SH64_MEDIA_INSN_FNEGD, SH64_MEDIA_INSN_FNEGS, SH64_MEDIA_INSN_FPUTSCR, SH64_MEDIA_INSN_FSQRTD\n- , SH64_MEDIA_INSN_FSQRTS, SH64_MEDIA_INSN_FSTD, SH64_MEDIA_INSN_FSTP, SH64_MEDIA_INSN_FSTS\n- , SH64_MEDIA_INSN_FSTXD, SH64_MEDIA_INSN_FSTXP, SH64_MEDIA_INSN_FSTXS, SH64_MEDIA_INSN_FSUBD\n- , SH64_MEDIA_INSN_FSUBS, SH64_MEDIA_INSN_FTRCDL, SH64_MEDIA_INSN_FTRCSL, SH64_MEDIA_INSN_FTRCDQ\n- , SH64_MEDIA_INSN_FTRCSQ, SH64_MEDIA_INSN_FTRVS, SH64_MEDIA_INSN_GETCFG, SH64_MEDIA_INSN_GETCON\n- , SH64_MEDIA_INSN_GETTR, SH64_MEDIA_INSN_ICBI, SH64_MEDIA_INSN_LDB, SH64_MEDIA_INSN_LDL\n- , SH64_MEDIA_INSN_LDQ, SH64_MEDIA_INSN_LDUB, SH64_MEDIA_INSN_LDUW, SH64_MEDIA_INSN_LDW\n- , SH64_MEDIA_INSN_LDHIL, SH64_MEDIA_INSN_LDHIQ, SH64_MEDIA_INSN_LDLOL, SH64_MEDIA_INSN_LDLOQ\n- , SH64_MEDIA_INSN_LDXB, SH64_MEDIA_INSN_LDXL, SH64_MEDIA_INSN_LDXQ, SH64_MEDIA_INSN_LDXUB\n- , SH64_MEDIA_INSN_LDXUW, SH64_MEDIA_INSN_LDXW, SH64_MEDIA_INSN_MABSL, SH64_MEDIA_INSN_MABSW\n- , SH64_MEDIA_INSN_MADDL, SH64_MEDIA_INSN_MADDW, SH64_MEDIA_INSN_MADDSL, SH64_MEDIA_INSN_MADDSUB\n- , SH64_MEDIA_INSN_MADDSW, SH64_MEDIA_INSN_MCMPEQB, SH64_MEDIA_INSN_MCMPEQL, SH64_MEDIA_INSN_MCMPEQW\n- , SH64_MEDIA_INSN_MCMPGTL, SH64_MEDIA_INSN_MCMPGTUB, SH64_MEDIA_INSN_MCMPGTW, SH64_MEDIA_INSN_MCMV\n- , SH64_MEDIA_INSN_MCNVSLW, SH64_MEDIA_INSN_MCNVSWB, SH64_MEDIA_INSN_MCNVSWUB, SH64_MEDIA_INSN_MEXTR1\n- , SH64_MEDIA_INSN_MEXTR2, SH64_MEDIA_INSN_MEXTR3, SH64_MEDIA_INSN_MEXTR4, SH64_MEDIA_INSN_MEXTR5\n- , SH64_MEDIA_INSN_MEXTR6, SH64_MEDIA_INSN_MEXTR7, SH64_MEDIA_INSN_MMACFXWL, SH64_MEDIA_INSN_MMACNFX_WL\n- , SH64_MEDIA_INSN_MMULL, SH64_MEDIA_INSN_MMULW, SH64_MEDIA_INSN_MMULFXL, SH64_MEDIA_INSN_MMULFXW\n- , SH64_MEDIA_INSN_MMULFXRPW, SH64_MEDIA_INSN_MMULHIWL, SH64_MEDIA_INSN_MMULLOWL, SH64_MEDIA_INSN_MMULSUMWQ\n- , SH64_MEDIA_INSN_MOVI, SH64_MEDIA_INSN_MPERMW, SH64_MEDIA_INSN_MSADUBQ, SH64_MEDIA_INSN_MSHALDSL\n- , SH64_MEDIA_INSN_MSHALDSW, SH64_MEDIA_INSN_MSHARDL, SH64_MEDIA_INSN_MSHARDW, SH64_MEDIA_INSN_MSHARDSQ\n- , SH64_MEDIA_INSN_MSHFHIB, SH64_MEDIA_INSN_MSHFHIL, SH64_MEDIA_INSN_MSHFHIW, SH64_MEDIA_INSN_MSHFLOB\n- , SH64_MEDIA_INSN_MSHFLOL, SH64_MEDIA_INSN_MSHFLOW, SH64_MEDIA_INSN_MSHLLDL, SH64_MEDIA_INSN_MSHLLDW\n- , SH64_MEDIA_INSN_MSHLRDL, SH64_MEDIA_INSN_MSHLRDW, SH64_MEDIA_INSN_MSUBL, SH64_MEDIA_INSN_MSUBW\n- , SH64_MEDIA_INSN_MSUBSL, SH64_MEDIA_INSN_MSUBSUB, SH64_MEDIA_INSN_MSUBSW, SH64_MEDIA_INSN_MULSL\n- , SH64_MEDIA_INSN_MULUL, SH64_MEDIA_INSN_NOP, SH64_MEDIA_INSN_NSB, SH64_MEDIA_INSN_OCBI\n- , SH64_MEDIA_INSN_OCBP, SH64_MEDIA_INSN_OCBWB, SH64_MEDIA_INSN_OR, SH64_MEDIA_INSN_ORI\n- , SH64_MEDIA_INSN_PREFI, SH64_MEDIA_INSN_PTA, SH64_MEDIA_INSN_PTABS, SH64_MEDIA_INSN_PTB\n- , SH64_MEDIA_INSN_PTREL, SH64_MEDIA_INSN_PUTCFG, SH64_MEDIA_INSN_PUTCON, SH64_MEDIA_INSN_RTE\n- , SH64_MEDIA_INSN_SHARD, SH64_MEDIA_INSN_SHARDL, SH64_MEDIA_INSN_SHARI, SH64_MEDIA_INSN_SHARIL\n- , SH64_MEDIA_INSN_SHLLD, SH64_MEDIA_INSN_SHLLDL, SH64_MEDIA_INSN_SHLLI, SH64_MEDIA_INSN_SHLLIL\n- , SH64_MEDIA_INSN_SHLRD, SH64_MEDIA_INSN_SHLRDL, SH64_MEDIA_INSN_SHLRI, SH64_MEDIA_INSN_SHLRIL\n- , SH64_MEDIA_INSN_SHORI, SH64_MEDIA_INSN_SLEEP, SH64_MEDIA_INSN_STB, SH64_MEDIA_INSN_STL\n- , SH64_MEDIA_INSN_STQ, SH64_MEDIA_INSN_STW, SH64_MEDIA_INSN_STHIL, SH64_MEDIA_INSN_STHIQ\n- , SH64_MEDIA_INSN_STLOL, SH64_MEDIA_INSN_STLOQ, SH64_MEDIA_INSN_STXB, SH64_MEDIA_INSN_STXL\n- , SH64_MEDIA_INSN_STXQ, SH64_MEDIA_INSN_STXW, SH64_MEDIA_INSN_SUB, SH64_MEDIA_INSN_SUBL\n- , SH64_MEDIA_INSN_SWAPQ, SH64_MEDIA_INSN_SYNCI, SH64_MEDIA_INSN_SYNCO, SH64_MEDIA_INSN_TRAPA\n- , SH64_MEDIA_INSN_XOR, SH64_MEDIA_INSN_XORI, SH64_MEDIA_INSN__MAX\n-} SH64_MEDIA_INSN_TYPE;\n-\n-/* Enum declaration for semantic formats in cpu family sh64.  */\n-typedef enum sh64_media_sfmt_type {\n-  SH64_MEDIA_SFMT_EMPTY, SH64_MEDIA_SFMT_ADD, SH64_MEDIA_SFMT_ADDI, SH64_MEDIA_SFMT_ALLOCO\n- , SH64_MEDIA_SFMT_BEQ, SH64_MEDIA_SFMT_BEQI, SH64_MEDIA_SFMT_BLINK, SH64_MEDIA_SFMT_BNEI\n- , SH64_MEDIA_SFMT_BRK, SH64_MEDIA_SFMT_BYTEREV, SH64_MEDIA_SFMT_CMVEQ, SH64_MEDIA_SFMT_FABSD\n- , SH64_MEDIA_SFMT_FABSS, SH64_MEDIA_SFMT_FADDD, SH64_MEDIA_SFMT_FADDS, SH64_MEDIA_SFMT_FCMPEQD\n- , SH64_MEDIA_SFMT_FCMPEQS, SH64_MEDIA_SFMT_FCNVDS, SH64_MEDIA_SFMT_FCNVSD, SH64_MEDIA_SFMT_FGETSCR\n- , SH64_MEDIA_SFMT_FIPRS, SH64_MEDIA_SFMT_FLDD, SH64_MEDIA_SFMT_FLDP, SH64_MEDIA_SFMT_FLDS\n- , SH64_MEDIA_SFMT_FLDXD, SH64_MEDIA_SFMT_FLDXP, SH64_MEDIA_SFMT_FLDXS, SH64_MEDIA_SFMT_FMACS\n- , SH64_MEDIA_SFMT_FMOVDQ, SH64_MEDIA_SFMT_FMOVLS, SH64_MEDIA_SFMT_FMOVQD, SH64_MEDIA_SFMT_FMOVSL\n- , SH64_MEDIA_SFMT_FPUTSCR, SH64_MEDIA_SFMT_FSTD, SH64_MEDIA_SFMT_FSTS, SH64_MEDIA_SFMT_FSTXD\n- , SH64_MEDIA_SFMT_FSTXS, SH64_MEDIA_SFMT_FSUBD, SH64_MEDIA_SFMT_FTRCDQ, SH64_MEDIA_SFMT_FTRVS\n- , SH64_MEDIA_SFMT_GETCFG, SH64_MEDIA_SFMT_GETCON, SH64_MEDIA_SFMT_GETTR, SH64_MEDIA_SFMT_LDB\n- , SH64_MEDIA_SFMT_LDL, SH64_MEDIA_SFMT_LDQ, SH64_MEDIA_SFMT_LDUW, SH64_MEDIA_SFMT_LDHIL\n- , SH64_MEDIA_SFMT_LDHIQ, SH64_MEDIA_SFMT_LDLOL, SH64_MEDIA_SFMT_LDLOQ, SH64_MEDIA_SFMT_LDXB\n- , SH64_MEDIA_SFMT_LDXL, SH64_MEDIA_SFMT_LDXQ, SH64_MEDIA_SFMT_LDXUB, SH64_MEDIA_SFMT_LDXUW\n- , SH64_MEDIA_SFMT_LDXW, SH64_MEDIA_SFMT_MCMV, SH64_MEDIA_SFMT_MMACNFX_WL, SH64_MEDIA_SFMT_MOVI\n- , SH64_MEDIA_SFMT_NOP, SH64_MEDIA_SFMT_ORI, SH64_MEDIA_SFMT_PREFI, SH64_MEDIA_SFMT_PTA\n- , SH64_MEDIA_SFMT_PTABS, SH64_MEDIA_SFMT_PTREL, SH64_MEDIA_SFMT_PUTCFG, SH64_MEDIA_SFMT_PUTCON\n- , SH64_MEDIA_SFMT_SHARI, SH64_MEDIA_SFMT_SHORI, SH64_MEDIA_SFMT_STB, SH64_MEDIA_SFMT_STL\n- , SH64_MEDIA_SFMT_STQ, SH64_MEDIA_SFMT_STW, SH64_MEDIA_SFMT_STHIL, SH64_MEDIA_SFMT_STHIQ\n- , SH64_MEDIA_SFMT_STLOL, SH64_MEDIA_SFMT_STLOQ, SH64_MEDIA_SFMT_STXB, SH64_MEDIA_SFMT_STXL\n- , SH64_MEDIA_SFMT_STXQ, SH64_MEDIA_SFMT_STXW, SH64_MEDIA_SFMT_SWAPQ, SH64_MEDIA_SFMT_TRAPA\n- , SH64_MEDIA_SFMT_XORI\n-} SH64_MEDIA_SFMT_TYPE;\n-\n-/* Function unit handlers (user written).  */\n-\n-extern int sh64_model_sh5_u_ftrv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*fvn*/);\n-extern int sh64_model_sh5_u_fipr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*fvm*/, INT /*fvn*/);\n-extern int sh64_model_sh5_u_ocb (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_mulr_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_mulr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_dr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_u_load_dr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_set_dr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_fcnv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_fcmp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_fsqrt (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_fdiv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_fpu_load_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_use_fpscr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_ldsl_fpscr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_lds_fpscr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_flds_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_load_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_set_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_fpu_memory_access (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_fr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_u_set_fr_0 (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_set_fr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_load_fr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_maybe_fpu (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_fpu (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_trap (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_write_back (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_multiply_result (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_shift (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_tas (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_mulsw (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_mull (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_dmul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_macl (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_macw (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_multiply (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_set_mac (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_load_mac (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_load_vbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_load_gbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_u_load_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_u_stc_vbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_ldcl_vbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_ldcl (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_tbit (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_ldc_gbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_ldc_sr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_set_sr_bit (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_use_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_load_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_sts_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_lds_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_memory_access (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_logic_b (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_jsr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_jmp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_branch (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_sx (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_u_exec (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_putcfg (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_getcfg (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_pt (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*targetreg*/);\n-extern int sh64_model_sh5_media_u_ftrvs (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_fsqrtd (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_fdivd (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_cond_branch (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*targetreg*/);\n-extern int sh64_model_sh5_media_u_blink (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*targetreg*/);\n-extern int sh64_model_sh5_media_u_use_tr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_use_mtrx (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_use_fv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_use_fp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_load_mtrx (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_load_fv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_load_fp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_set_mtrx (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_set_fv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_set_fp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_set_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_ftrv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*fvn*/);\n-extern int sh64_model_sh5_media_u_fipr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*fvm*/, INT /*fvn*/);\n-extern int sh64_model_sh5_media_u_ocb (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_mulr_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_mulr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_dr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_load_dr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_set_dr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_fcnv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_fcmp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_fsqrt (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_fdiv (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_fpu_load_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_use_fpscr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_ldsl_fpscr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_lds_fpscr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_flds_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_load_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_set_fpul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_fpu_memory_access (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_fr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_set_fr_0 (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_set_fr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_load_fr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_maybe_fpu (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_fpu (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_trap (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_write_back (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_multiply_result (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_shift (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_tas (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_mulsw (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_mull (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_dmul (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_macl (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_macw (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_multiply (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_set_mac (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_load_mac (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_load_vbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_load_gbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*usereg*/);\n-extern int sh64_model_sh5_media_u_load_gr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/, INT /*loadreg*/);\n-extern int sh64_model_sh5_media_u_stc_vbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_ldcl_vbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_ldcl (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_tbit (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_ldc_gbr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_ldc_sr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_set_sr_bit (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_use_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_load_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_sts_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_lds_pr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_memory_access (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_logic_b (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_jsr (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_jmp (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_branch (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_sx (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-extern int sh64_model_sh5_media_u_exec (SIM_CPU *, const IDESC *, int /*unit_num*/, int /*referenced*/);\n-\n-/* Profiling before/after handlers (user written) */\n-\n-extern void sh64_model_insn_before (SIM_CPU *, int /*first_p*/);\n-extern void sh64_model_insn_after (SIM_CPU *, int /*last_p*/, int /*cycles*/);\n-\n-#endif /* SH64_MEDIA_DECODE_H */"
    },
    {
      "sha": "2582807d8d19a799bb9bedfd1fa6016351ca632d",
      "filename": "sim/sh64/decode.h",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/decode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/decode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/decode.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,16 +0,0 @@\n-#ifndef DECODE_H\n-#define DECODE_H\n-\n-#undef WITH_PROFILE_MODEL_P\n-\n-#ifdef WANT_ISA_COMPACT\n-#include \"decode-compact.h\"\n-#include \"defs-compact.h\"\n-#endif /* WANT_ISA_COMPACT */\n-\n-#ifdef WANT_ISA_MEDIA\n-#include \"decode-media.h\"\n-#include \"defs-media.h\"\n-#endif /* WANT_ISA_MEDIA */\n-\n-#endif /* DECODE_H */"
    },
    {
      "sha": "9c67bfcd957f4fdabc5cb202c05ead456a074730",
      "filename": "sim/sh64/defs-compact.h",
      "status": "removed",
      "additions": 0,
      "deletions": 509,
      "changes": 509,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/defs-compact.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/defs-compact.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/defs-compact.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,509 +0,0 @@\n-/* ISA definitions header for compact.\n-\n-THIS FILE IS MACHINE GENERATED WITH CGEN.\n-\n-Copyright 1996-2021 Free Software Foundation, Inc.\n-\n-This file is part of the GNU simulators.\n-\n-   This file is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   It is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n-\n-*/\n-\n-#ifndef DEFS_SH64_COMPACT_H\n-#define DEFS_SH64_COMPACT_H\n-\n-/* Instruction argument buffer.  */\n-\n-union sem_fields {\n-  struct { /* no operands */\n-    int empty;\n-  } sfmt_empty;\n-  struct { /*  */\n-    IADDR i_disp12;\n-  } sfmt_bra_compact;\n-  struct { /*  */\n-    IADDR i_disp8;\n-  } sfmt_bf_compact;\n-  struct { /*  */\n-    SI f_imm8x2;\n-    UINT f_rn;\n-  } sfmt_movw10_compact;\n-  struct { /*  */\n-    SI f_imm4x2;\n-    UINT f_rm;\n-  } sfmt_movw5_compact;\n-  struct { /*  */\n-    SI f_imm8x4;\n-    UINT f_rn;\n-  } sfmt_movl10_compact;\n-  struct { /*  */\n-    UINT f_imm4;\n-    UINT f_rm;\n-  } sfmt_movb5_compact;\n-  struct { /*  */\n-    INT f_imm20;\n-    UINT f_rn;\n-  } sfmt_movi20_compact;\n-  struct { /*  */\n-    SI f_vm;\n-    SI f_vn;\n-  } sfmt_fipr_compact;\n-  struct { /*  */\n-    UINT f_imm8;\n-    UINT f_rn;\n-  } sfmt_addi_compact;\n-  struct { /*  */\n-    SI f_imm12x4;\n-    UINT f_rm;\n-    UINT f_rn;\n-  } sfmt_movl12_compact;\n-  struct { /*  */\n-    SI f_imm4x4;\n-    UINT f_rm;\n-    UINT f_rn;\n-  } sfmt_movl5_compact;\n-  struct { /*  */\n-    SI f_dm;\n-    SI f_imm12x8;\n-    UINT f_rn;\n-  } sfmt_fmov9_compact;\n-  struct { /*  */\n-    SI f_dn;\n-    SI f_imm12x8;\n-    UINT f_rm;\n-  } sfmt_fmov8_compact;\n-#if WITH_SCACHE_PBB\n-  /* Writeback handler.  */\n-  struct {\n-    /* Pointer to argbuf entry for insn whose results need writing back.  */\n-    const struct argbuf *abuf;\n-  } write;\n-  /* x-before handler */\n-  struct {\n-    /*const SCACHE *insns[MAX_PARALLEL_INSNS];*/\n-    int first_p;\n-  } before;\n-  /* x-after handler */\n-  struct {\n-    int empty;\n-  } after;\n-  /* This entry is used to terminate each pbb.  */\n-  struct {\n-    /* Number of insns in pbb.  */\n-    int insn_count;\n-    /* Next pbb to execute.  */\n-    SCACHE *next;\n-    SCACHE *branch_target;\n-  } chain;\n-#endif\n-};\n-\n-/* The ARGBUF struct.  */\n-struct argbuf {\n-  /* These are the baseclass definitions.  */\n-  IADDR addr;\n-  const IDESC *idesc;\n-  char trace_p;\n-  char profile_p;\n-  /* ??? Temporary hack for skip insns.  */\n-  char skip_count;\n-  char unused;\n-  /* cpu specific data follows */\n-  union sem semantic;\n-  int written;\n-  union sem_fields fields;\n-};\n-\n-/* A cached insn.\n-\n-   ??? SCACHE used to contain more than just argbuf.  We could delete the\n-   type entirely and always just use ARGBUF, but for future concerns and as\n-   a level of abstraction it is left in.  */\n-\n-struct scache {\n-  struct argbuf argbuf;\n-};\n-\n-/* Macros to simplify extraction, reading and semantic code.\n-   These define and assign the local vars that contain the insn's fields.  */\n-\n-#define EXTRACT_IFMT_EMPTY_VARS \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_EMPTY_CODE \\\n-  length = 0; \\\n-\n-#define EXTRACT_IFMT_ADD_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_rm; \\\n-  UINT f_sub4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_ADD_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_rm = EXTRACT_MSB0_UINT (insn, 16, 8, 4); \\\n-  f_sub4 = EXTRACT_MSB0_UINT (insn, 16, 12, 4); \\\n-\n-#define EXTRACT_IFMT_ADDI_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_imm8; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_ADDI_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_imm8 = EXTRACT_MSB0_UINT (insn, 16, 8, 8); \\\n-\n-#define EXTRACT_IFMT_AND_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_rm; \\\n-  UINT f_sub4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_AND_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_rm = EXTRACT_MSB0_UINT (insn, 16, 8, 4); \\\n-  f_sub4 = EXTRACT_MSB0_UINT (insn, 16, 12, 4); \\\n-\n-#define EXTRACT_IFMT_ANDI_COMPACT_VARS \\\n-  UINT f_op8; \\\n-  UINT f_imm8; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_ANDI_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op8 = EXTRACT_MSB0_UINT (insn, 16, 0, 8); \\\n-  f_imm8 = EXTRACT_MSB0_UINT (insn, 16, 8, 8); \\\n-\n-#define EXTRACT_IFMT_ANDB_COMPACT_VARS \\\n-  UINT f_op8; \\\n-  UINT f_imm8; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_ANDB_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op8 = EXTRACT_MSB0_UINT (insn, 16, 0, 8); \\\n-  f_imm8 = EXTRACT_MSB0_UINT (insn, 16, 8, 8); \\\n-\n-#define EXTRACT_IFMT_BF_COMPACT_VARS \\\n-  UINT f_op8; \\\n-  SI f_disp8; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_BF_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op8 = EXTRACT_MSB0_UINT (insn, 16, 0, 8); \\\n-  f_disp8 = ((((EXTRACT_MSB0_SINT (insn, 16, 8, 8)) << (1))) + (((pc) + (4)))); \\\n-\n-#define EXTRACT_IFMT_BRA_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  SI f_disp12; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_BRA_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_disp12 = ((((EXTRACT_MSB0_SINT (insn, 16, 4, 12)) << (1))) + (((pc) + (4)))); \\\n-\n-#define EXTRACT_IFMT_BRAF_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_sub8; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_BRAF_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_sub8 = EXTRACT_MSB0_UINT (insn, 16, 8, 8); \\\n-\n-#define EXTRACT_IFMT_BRK_COMPACT_VARS \\\n-  UINT f_op16; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_BRK_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op16 = EXTRACT_MSB0_UINT (insn, 16, 0, 16); \\\n-\n-#define EXTRACT_IFMT_FABS_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_sub8; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FABS_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_sub8 = EXTRACT_MSB0_UINT (insn, 16, 8, 8); \\\n-\n-#define EXTRACT_IFMT_FADD_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_rm; \\\n-  UINT f_sub4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FADD_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_rm = EXTRACT_MSB0_UINT (insn, 16, 8, 4); \\\n-  f_sub4 = EXTRACT_MSB0_UINT (insn, 16, 12, 4); \\\n-\n-#define EXTRACT_IFMT_FCNVDS_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  SI f_dn; \\\n-  UINT f_7_1; \\\n-  UINT f_sub8; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FCNVDS_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_dn = ((EXTRACT_MSB0_UINT (insn, 16, 4, 3)) << (1)); \\\n-  f_7_1 = EXTRACT_MSB0_UINT (insn, 16, 7, 1); \\\n-  f_sub8 = EXTRACT_MSB0_UINT (insn, 16, 8, 8); \\\n-\n-#define EXTRACT_IFMT_FIPR_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  SI f_vn; \\\n-  SI f_vm; \\\n-  UINT f_sub8; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FIPR_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_vn = ((EXTRACT_MSB0_UINT (insn, 16, 4, 2)) << (2)); \\\n-  f_vm = ((EXTRACT_MSB0_UINT (insn, 16, 6, 2)) << (2)); \\\n-  f_sub8 = EXTRACT_MSB0_UINT (insn, 16, 8, 8); \\\n-\n-#define EXTRACT_IFMT_FLDS_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_sub8; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FLDS_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_sub8 = EXTRACT_MSB0_UINT (insn, 16, 8, 8); \\\n-\n-#define EXTRACT_IFMT_FMAC_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_rm; \\\n-  UINT f_sub4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FMAC_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_rm = EXTRACT_MSB0_UINT (insn, 16, 8, 4); \\\n-  f_sub4 = EXTRACT_MSB0_UINT (insn, 16, 12, 4); \\\n-\n-#define EXTRACT_IFMT_FMOV1_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_rm; \\\n-  UINT f_sub4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FMOV1_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_rm = EXTRACT_MSB0_UINT (insn, 16, 8, 4); \\\n-  f_sub4 = EXTRACT_MSB0_UINT (insn, 16, 12, 4); \\\n-\n-#define EXTRACT_IFMT_FMOV2_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_rm; \\\n-  UINT f_sub4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FMOV2_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_rm = EXTRACT_MSB0_UINT (insn, 16, 8, 4); \\\n-  f_sub4 = EXTRACT_MSB0_UINT (insn, 16, 12, 4); \\\n-\n-#define EXTRACT_IFMT_FMOV5_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_rm; \\\n-  UINT f_sub4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FMOV5_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_rm = EXTRACT_MSB0_UINT (insn, 16, 8, 4); \\\n-  f_sub4 = EXTRACT_MSB0_UINT (insn, 16, 12, 4); \\\n-\n-#define EXTRACT_IFMT_FMOV8_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  SI f_dn; \\\n-  UINT f_7_1; \\\n-  UINT f_rm; \\\n-  UINT f_sub4; \\\n-  UINT f_16_4; \\\n-  SI f_imm12x8; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FMOV8_COMPACT_CODE \\\n-  length = 4; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 32, 0, 4); \\\n-  f_dn = ((EXTRACT_MSB0_UINT (insn, 32, 4, 3)) << (1)); \\\n-  f_7_1 = EXTRACT_MSB0_UINT (insn, 32, 7, 1); \\\n-  f_rm = EXTRACT_MSB0_UINT (insn, 32, 8, 4); \\\n-  f_sub4 = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_16_4 = EXTRACT_MSB0_UINT (insn, 32, 16, 4); \\\n-  f_imm12x8 = ((EXTRACT_MSB0_SINT (insn, 32, 20, 12)) << (3)); \\\n-\n-#define EXTRACT_IFMT_FMOV9_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  SI f_dm; \\\n-  UINT f_11_1; \\\n-  UINT f_sub4; \\\n-  UINT f_16_4; \\\n-  SI f_imm12x8; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FMOV9_COMPACT_CODE \\\n-  length = 4; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 32, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 32, 4, 4); \\\n-  f_dm = ((EXTRACT_MSB0_UINT (insn, 32, 8, 3)) << (1)); \\\n-  f_11_1 = EXTRACT_MSB0_UINT (insn, 32, 11, 1); \\\n-  f_sub4 = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_16_4 = EXTRACT_MSB0_UINT (insn, 32, 16, 4); \\\n-  f_imm12x8 = ((EXTRACT_MSB0_SINT (insn, 32, 20, 12)) << (3)); \\\n-\n-#define EXTRACT_IFMT_FTRV_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  SI f_vn; \\\n-  UINT f_sub10; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FTRV_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_vn = ((EXTRACT_MSB0_UINT (insn, 16, 4, 2)) << (2)); \\\n-  f_sub10 = EXTRACT_MSB0_UINT (insn, 16, 6, 10); \\\n-\n-#define EXTRACT_IFMT_MOVI20_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  INT f_imm20_hi; \\\n-  UINT f_imm20_lo; \\\n-  INT f_imm20; \\\n-  UINT f_sub4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_MOVI20_COMPACT_CODE \\\n-  length = 4; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 32, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 32, 4, 4); \\\n-  f_imm20_hi = EXTRACT_MSB0_SINT (insn, 32, 8, 4); \\\n-  f_imm20_lo = EXTRACT_MSB0_UINT (insn, 32, 16, 16); \\\n-  f_imm20 = ((((f_imm20_hi) << (16))) | (f_imm20_lo));\\\n-  f_sub4 = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-\n-#define EXTRACT_IFMT_MOVB5_COMPACT_VARS \\\n-  UINT f_op8; \\\n-  UINT f_rm; \\\n-  UINT f_imm4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_MOVB5_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op8 = EXTRACT_MSB0_UINT (insn, 16, 0, 8); \\\n-  f_rm = EXTRACT_MSB0_UINT (insn, 16, 8, 4); \\\n-  f_imm4 = EXTRACT_MSB0_UINT (insn, 16, 12, 4); \\\n-\n-#define EXTRACT_IFMT_MOVL4_COMPACT_VARS \\\n-  UINT f_op8; \\\n-  SI f_imm8x4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_MOVL4_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op8 = EXTRACT_MSB0_UINT (insn, 16, 0, 8); \\\n-  f_imm8x4 = ((EXTRACT_MSB0_UINT (insn, 16, 8, 8)) << (2)); \\\n-\n-#define EXTRACT_IFMT_MOVL5_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_rm; \\\n-  SI f_imm4x4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_MOVL5_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_rm = EXTRACT_MSB0_UINT (insn, 16, 8, 4); \\\n-  f_imm4x4 = ((EXTRACT_MSB0_UINT (insn, 16, 12, 4)) << (2)); \\\n-\n-#define EXTRACT_IFMT_MOVL10_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  SI f_imm8x4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_MOVL10_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_imm8x4 = ((EXTRACT_MSB0_UINT (insn, 16, 8, 8)) << (2)); \\\n-\n-#define EXTRACT_IFMT_MOVL12_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  UINT f_rm; \\\n-  UINT f_sub4; \\\n-  UINT f_16_4; \\\n-  SI f_imm12x4; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_MOVL12_COMPACT_CODE \\\n-  length = 4; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 32, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 32, 4, 4); \\\n-  f_rm = EXTRACT_MSB0_UINT (insn, 32, 8, 4); \\\n-  f_sub4 = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_16_4 = EXTRACT_MSB0_UINT (insn, 32, 16, 4); \\\n-  f_imm12x4 = ((EXTRACT_MSB0_SINT (insn, 32, 20, 12)) << (2)); \\\n-\n-#define EXTRACT_IFMT_MOVW4_COMPACT_VARS \\\n-  UINT f_op8; \\\n-  SI f_imm8x2; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_MOVW4_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op8 = EXTRACT_MSB0_UINT (insn, 16, 0, 8); \\\n-  f_imm8x2 = ((EXTRACT_MSB0_UINT (insn, 16, 8, 8)) << (1)); \\\n-\n-#define EXTRACT_IFMT_MOVW5_COMPACT_VARS \\\n-  UINT f_op8; \\\n-  UINT f_rm; \\\n-  SI f_imm4x2; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_MOVW5_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op8 = EXTRACT_MSB0_UINT (insn, 16, 0, 8); \\\n-  f_rm = EXTRACT_MSB0_UINT (insn, 16, 8, 4); \\\n-  f_imm4x2 = ((EXTRACT_MSB0_UINT (insn, 16, 12, 4)) << (1)); \\\n-\n-#define EXTRACT_IFMT_MOVW10_COMPACT_VARS \\\n-  UINT f_op4; \\\n-  UINT f_rn; \\\n-  SI f_imm8x2; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_MOVW10_COMPACT_CODE \\\n-  length = 2; \\\n-  f_op4 = EXTRACT_MSB0_UINT (insn, 16, 0, 4); \\\n-  f_rn = EXTRACT_MSB0_UINT (insn, 16, 4, 4); \\\n-  f_imm8x2 = ((EXTRACT_MSB0_UINT (insn, 16, 8, 8)) << (1)); \\\n-\n-#endif /* DEFS_SH64_COMPACT_H */"
    },
    {
      "sha": "f59fafc2eaf499a80ee67292841a6cdc8ca2815e",
      "filename": "sim/sh64/defs-media.h",
      "status": "removed",
      "additions": 0,
      "deletions": 920,
      "changes": 920,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/defs-media.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/defs-media.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/defs-media.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,920 +0,0 @@\n-/* ISA definitions header for media.\n-\n-THIS FILE IS MACHINE GENERATED WITH CGEN.\n-\n-Copyright 1996-2021 Free Software Foundation, Inc.\n-\n-This file is part of the GNU simulators.\n-\n-   This file is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   It is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n-\n-*/\n-\n-#ifndef DEFS_SH64_MEDIA_H\n-#define DEFS_SH64_MEDIA_H\n-\n-/* Instruction argument buffer.  */\n-\n-union sem_fields {\n-  struct { /* no operands */\n-    int empty;\n-  } sfmt_empty;\n-  struct { /*  */\n-    UINT f_dest;\n-    UINT f_uimm16;\n-  } sfmt_shori;\n-  struct { /*  */\n-    DI f_disp16;\n-    UINT f_tra;\n-  } sfmt_pta;\n-  struct { /*  */\n-    INT f_imm16;\n-    UINT f_dest;\n-  } sfmt_movi;\n-  struct { /*  */\n-    UINT f_dest;\n-    UINT f_left_right;\n-  } sfmt_fabsd;\n-  struct { /*  */\n-    UINT f_dest;\n-    UINT f_trb;\n-  } sfmt_blink;\n-  struct { /*  */\n-    INT f_imm6;\n-    UINT f_dest;\n-    UINT f_left;\n-  } sfmt_xori;\n-  struct { /*  */\n-    UINT f_dest;\n-    UINT f_left;\n-    UINT f_uimm6;\n-  } sfmt_shari;\n-  struct { /*  */\n-    INT f_imm10;\n-    UINT f_dest;\n-    UINT f_left;\n-  } sfmt_ori;\n-  struct { /*  */\n-    SI f_disp10x2;\n-    UINT f_dest;\n-    UINT f_left;\n-  } sfmt_lduw;\n-  struct { /*  */\n-    INT f_disp6;\n-    UINT f_dest;\n-    UINT f_left;\n-  } sfmt_getcfg;\n-  struct { /*  */\n-    SI f_disp10x4;\n-    UINT f_dest;\n-    UINT f_left;\n-  } sfmt_flds;\n-  struct { /*  */\n-    SI f_disp10x8;\n-    UINT f_dest;\n-    UINT f_left;\n-  } sfmt_fldd;\n-  struct { /*  */\n-    INT f_imm6;\n-    UINT f_left;\n-    UINT f_tra;\n-  } sfmt_beqi;\n-  struct { /*  */\n-    UINT f_left;\n-    UINT f_right;\n-    UINT f_tra;\n-  } sfmt_beq;\n-  struct { /*  */\n-    INT f_disp10;\n-    UINT f_dest;\n-    UINT f_left;\n-  } sfmt_addi;\n-  struct { /*  */\n-    UINT f_dest;\n-    UINT f_left;\n-    UINT f_right;\n-  } sfmt_add;\n-#if WITH_SCACHE_PBB\n-  /* Writeback handler.  */\n-  struct {\n-    /* Pointer to argbuf entry for insn whose results need writing back.  */\n-    const struct argbuf *abuf;\n-  } write;\n-  /* x-before handler */\n-  struct {\n-    /*const SCACHE *insns[MAX_PARALLEL_INSNS];*/\n-    int first_p;\n-  } before;\n-  /* x-after handler */\n-  struct {\n-    int empty;\n-  } after;\n-  /* This entry is used to terminate each pbb.  */\n-  struct {\n-    /* Number of insns in pbb.  */\n-    int insn_count;\n-    /* Next pbb to execute.  */\n-    SCACHE *next;\n-    SCACHE *branch_target;\n-  } chain;\n-#endif\n-};\n-\n-/* The ARGBUF struct.  */\n-struct argbuf {\n-  /* These are the baseclass definitions.  */\n-  IADDR addr;\n-  const IDESC *idesc;\n-  char trace_p;\n-  char profile_p;\n-  /* ??? Temporary hack for skip insns.  */\n-  char skip_count;\n-  char unused;\n-  /* cpu specific data follows */\n-  union sem semantic;\n-  int written;\n-  union sem_fields fields;\n-};\n-\n-/* A cached insn.\n-\n-   ??? SCACHE used to contain more than just argbuf.  We could delete the\n-   type entirely and always just use ARGBUF, but for future concerns and as\n-   a level of abstraction it is left in.  */\n-\n-struct scache {\n-  struct argbuf argbuf;\n-};\n-\n-/* Macros to simplify extraction, reading and semantic code.\n-   These define and assign the local vars that contain the insn's fields.  */\n-\n-#define EXTRACT_IFMT_EMPTY_VARS \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_EMPTY_CODE \\\n-  length = 0; \\\n-\n-#define EXTRACT_IFMT_ADD_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_ADD_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_ADDI_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  INT f_disp10; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_ADDI_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_disp10 = EXTRACT_MSB0_SINT (insn, 32, 12, 10); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_ALLOCO_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  SI f_disp6x32; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_ALLOCO_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_disp6x32 = ((EXTRACT_MSB0_SINT (insn, 32, 16, 6)) << (5)); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_BEQ_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_likely; \\\n-  UINT f_23_2; \\\n-  UINT f_tra; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_BEQ_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_likely = EXTRACT_MSB0_UINT (insn, 32, 22, 1); \\\n-  f_23_2 = EXTRACT_MSB0_UINT (insn, 32, 23, 2); \\\n-  f_tra = EXTRACT_MSB0_UINT (insn, 32, 25, 3); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_BEQI_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  INT f_imm6; \\\n-  UINT f_likely; \\\n-  UINT f_23_2; \\\n-  UINT f_tra; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_BEQI_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_imm6 = EXTRACT_MSB0_SINT (insn, 32, 16, 6); \\\n-  f_likely = EXTRACT_MSB0_UINT (insn, 32, 22, 1); \\\n-  f_23_2 = EXTRACT_MSB0_UINT (insn, 32, 23, 2); \\\n-  f_tra = EXTRACT_MSB0_UINT (insn, 32, 25, 3); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_BLINK_VARS \\\n-  UINT f_op; \\\n-  UINT f_6_3; \\\n-  UINT f_trb; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_BLINK_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_6_3 = EXTRACT_MSB0_UINT (insn, 32, 6, 3); \\\n-  f_trb = EXTRACT_MSB0_UINT (insn, 32, 9, 3); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_BRK_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_BRK_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_BYTEREV_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_BYTEREV_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FABSD_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_right; \\\n-  UINT f_left_right; \\\n-  UINT f_ext; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FABSD_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_left_right = f_left;\\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FABSS_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_right; \\\n-  UINT f_left_right; \\\n-  UINT f_ext; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FABSS_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_left_right = f_left;\\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FADDD_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FADDD_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FADDS_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FADDS_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FCMPEQD_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FCMPEQD_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FCMPEQS_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FCMPEQS_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FCNVDS_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_right; \\\n-  UINT f_left_right; \\\n-  UINT f_ext; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FCNVDS_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_left_right = f_left;\\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FCNVSD_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_right; \\\n-  UINT f_left_right; \\\n-  UINT f_ext; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FCNVSD_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_left_right = f_left;\\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FGETSCR_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FGETSCR_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FIPRS_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FIPRS_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FLDD_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  SI f_disp10x8; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FLDD_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_disp10x8 = ((EXTRACT_MSB0_SINT (insn, 32, 12, 10)) << (3)); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FLDP_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  SI f_disp10x8; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FLDP_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_disp10x8 = ((EXTRACT_MSB0_SINT (insn, 32, 12, 10)) << (3)); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FLDS_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  SI f_disp10x4; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FLDS_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_disp10x4 = ((EXTRACT_MSB0_SINT (insn, 32, 12, 10)) << (2)); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FLDXD_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FLDXD_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FLDXP_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FLDXP_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FMOVDQ_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_right; \\\n-  UINT f_left_right; \\\n-  UINT f_ext; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FMOVDQ_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_left_right = f_left;\\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FMOVLS_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FMOVLS_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FMOVSL_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_right; \\\n-  UINT f_left_right; \\\n-  UINT f_ext; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FMOVSL_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_left_right = f_left;\\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FPUTSCR_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_right; \\\n-  UINT f_left_right; \\\n-  UINT f_ext; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FPUTSCR_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_left_right = f_left;\\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FSTXD_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FSTXD_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_FTRVS_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_FTRVS_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_GETCFG_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  INT f_disp6; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_GETCFG_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_disp6 = EXTRACT_MSB0_SINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_GETCON_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_GETCON_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_LDL_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  SI f_disp10x4; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_LDL_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_disp10x4 = ((EXTRACT_MSB0_SINT (insn, 32, 12, 10)) << (2)); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_LDQ_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  SI f_disp10x8; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_LDQ_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_disp10x8 = ((EXTRACT_MSB0_SINT (insn, 32, 12, 10)) << (3)); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_MMACNFX_WL_VARS \\\n-  UINT f_op; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_MMACNFX_WL_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_MOVI_VARS \\\n-  UINT f_op; \\\n-  INT f_imm16; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_MOVI_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_imm16 = EXTRACT_MSB0_SINT (insn, 32, 6, 16); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_ORI_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  INT f_imm10; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_ORI_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_imm10 = EXTRACT_MSB0_SINT (insn, 32, 12, 10); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_PREFI_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  SI f_disp6x32; \\\n-  UINT f_right; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_PREFI_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_disp6x32 = ((EXTRACT_MSB0_SINT (insn, 32, 16, 6)) << (5)); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_PTA_VARS \\\n-  UINT f_op; \\\n-  DI f_disp16; \\\n-  UINT f_likely; \\\n-  UINT f_23_2; \\\n-  UINT f_tra; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_PTA_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_disp16 = ((((EXTRACT_MSB0_SINT (insn, 32, 6, 16)) << (2))) + (pc)); \\\n-  f_likely = EXTRACT_MSB0_UINT (insn, 32, 22, 1); \\\n-  f_23_2 = EXTRACT_MSB0_UINT (insn, 32, 23, 2); \\\n-  f_tra = EXTRACT_MSB0_UINT (insn, 32, 25, 3); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_PTABS_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_likely; \\\n-  UINT f_23_2; \\\n-  UINT f_tra; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_PTABS_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_likely = EXTRACT_MSB0_UINT (insn, 32, 22, 1); \\\n-  f_23_2 = EXTRACT_MSB0_UINT (insn, 32, 23, 2); \\\n-  f_tra = EXTRACT_MSB0_UINT (insn, 32, 25, 3); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_PUTCON_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_PUTCON_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_SHARI_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_uimm6; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_SHARI_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_uimm6 = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_SHORI_VARS \\\n-  UINT f_op; \\\n-  UINT f_uimm16; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_SHORI_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_uimm16 = EXTRACT_MSB0_UINT (insn, 32, 6, 16); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_STW_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  SI f_disp10x2; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_STW_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_disp10x2 = ((EXTRACT_MSB0_SINT (insn, 32, 12, 10)) << (1)); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#define EXTRACT_IFMT_TRAPA_VARS \\\n-  UINT f_op; \\\n-  UINT f_left; \\\n-  UINT f_ext; \\\n-  UINT f_right; \\\n-  UINT f_dest; \\\n-  UINT f_rsvd; \\\n-  unsigned int length;\n-#define EXTRACT_IFMT_TRAPA_CODE \\\n-  length = 4; \\\n-  f_op = EXTRACT_MSB0_UINT (insn, 32, 0, 6); \\\n-  f_left = EXTRACT_MSB0_UINT (insn, 32, 6, 6); \\\n-  f_ext = EXTRACT_MSB0_UINT (insn, 32, 12, 4); \\\n-  f_right = EXTRACT_MSB0_UINT (insn, 32, 16, 6); \\\n-  f_dest = EXTRACT_MSB0_UINT (insn, 32, 22, 6); \\\n-  f_rsvd = EXTRACT_MSB0_UINT (insn, 32, 28, 4); \\\n-\n-#endif /* DEFS_SH64_MEDIA_H */"
    },
    {
      "sha": "521b2f8a977f42f8c47078de5ef44c13059010e6",
      "filename": "sim/sh64/eng-compact.h",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/eng-compact.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/eng-compact.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/eng-compact.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,34 +0,0 @@\n-/* engine configuration for sh64 */\n-\n-/* WITH_FAST: non-zero if a fast version of the engine is available\n-   in addition to the full-featured version.  */\n-#define WITH_FAST 1\n-\n-/* WITH_SCACHE_PBB_SH64_COMPACT: non-zero if the pbb engine was selected.  */\n-#define WITH_SCACHE_PBB_SH64_COMPACT 1\n-\n-/* HAVE_PARALLEL_INSNS: non-zero if cpu can parallelly execute > 1 insn.  */\n-#define HAVE_PARALLEL_INSNS 0\n-#define WITH_PARALLEL_READ 0\n-#define WITH_PARALLEL_WRITE 0\n-#define WITH_PARALLEL_GENWRITE 0\n-\n-/* WITH_SEM_SWITCH_FULL: non-zero if full-featured engine is\n-   implemented as a switch().  */\n-#define WITH_SEM_SWITCH_FULL 0\n-\n-/* WITH_SEM_SWITCH_FAST: non-zero if fast engine is\n-   implemented as a switch().  */\n-#define WITH_SEM_SWITCH_FAST 1\n-\n-/* Functions defined in the generated mainloop.c file\n-   (which doesn't necessarily have that file name).  */\n-\n-extern ENGINE_FN sh64_compact_engine_run_full;\n-extern ENGINE_FN sh64_compact_engine_run_fast;\n-\n-extern SEM_PC sh64_compact_pbb_begin (SIM_CPU *, int);\n-extern SEM_PC sh64_compact_pbb_chain (SIM_CPU *, SEM_ARG);\n-extern SEM_PC sh64_compact_pbb_cti_chain (SIM_CPU *, SEM_ARG, SEM_BRANCH_TYPE, PCADDR);\n-extern void sh64_compact_pbb_before (SIM_CPU *, SCACHE *);\n-extern void sh64_compact_pbb_after (SIM_CPU *, SCACHE *);"
    },
    {
      "sha": "db1c21da6405f5a09058cfc82519c5fc5d06cce7",
      "filename": "sim/sh64/eng-media.h",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/eng-media.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/eng-media.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/eng-media.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,34 +0,0 @@\n-/* engine configuration for sh64 */\n-\n-/* WITH_FAST: non-zero if a fast version of the engine is available\n-   in addition to the full-featured version.  */\n-#define WITH_FAST 1\n-\n-/* WITH_SCACHE_PBB_SH64_MEDIA: non-zero if the pbb engine was selected.  */\n-#define WITH_SCACHE_PBB_SH64_MEDIA 1\n-\n-/* HAVE_PARALLEL_INSNS: non-zero if cpu can parallelly execute > 1 insn.  */\n-#define HAVE_PARALLEL_INSNS 0\n-#define WITH_PARALLEL_READ 0\n-#define WITH_PARALLEL_WRITE 0\n-#define WITH_PARALLEL_GENWRITE 0\n-\n-/* WITH_SEM_SWITCH_FULL: non-zero if full-featured engine is\n-   implemented as a switch().  */\n-#define WITH_SEM_SWITCH_FULL 0\n-\n-/* WITH_SEM_SWITCH_FAST: non-zero if fast engine is\n-   implemented as a switch().  */\n-#define WITH_SEM_SWITCH_FAST 1\n-\n-/* Functions defined in the generated mainloop.c file\n-   (which doesn't necessarily have that file name).  */\n-\n-extern ENGINE_FN sh64_media_engine_run_full;\n-extern ENGINE_FN sh64_media_engine_run_fast;\n-\n-extern SEM_PC sh64_media_pbb_begin (SIM_CPU *, int);\n-extern SEM_PC sh64_media_pbb_chain (SIM_CPU *, SEM_ARG);\n-extern SEM_PC sh64_media_pbb_cti_chain (SIM_CPU *, SEM_ARG, SEM_BRANCH_TYPE, PCADDR);\n-extern void sh64_media_pbb_before (SIM_CPU *, SCACHE *);\n-extern void sh64_media_pbb_after (SIM_CPU *, SCACHE *);"
    },
    {
      "sha": "09527873596e0acb5b1bedf71b2e9e2cc085f1a7",
      "filename": "sim/sh64/eng.h",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/eng.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/eng.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/eng.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,23 +0,0 @@\n-/* Engine declarations.\n-   Copyright (C) 2000-2021 Free Software Foundation, Inc.\n-   Contributed by Red Hat, Inc.\n-\n-This file is part of the GNU simulators.\n-\n-This program is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3 of the License, or\n-(at your option) any later version.\n-\n-This program is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n-\n-/* Include declarations for SHmedia and SHcompact ISAs. */\n-\n-#include \"eng-compact.h\"\n-#include \"eng-media.h\""
    },
    {
      "sha": "16d6e6308ac25dbad2c4f4d59c9f4ad018112358",
      "filename": "sim/sh64/mloop-compact.c",
      "status": "removed",
      "additions": 0,
      "deletions": 635,
      "changes": 635,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/mloop-compact.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/mloop-compact.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/mloop-compact.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,635 +0,0 @@\n-/* This file is generated by the genmloop script.  DO NOT EDIT! */\n-\n-/* Enable switch() support in cgen headers.  */\n-#define SEM_IN_SWITCH\n-\n-#define WANT_CPU sh64\n-#define WANT_CPU_SH64\n-\n-#include \"sim-main.h\"\n-#include \"bfd.h\"\n-#include \"cgen-mem.h\"\n-#include \"cgen-ops.h\"\n-#include \"sim-assert.h\"\n-\n-/* Fill in the administrative ARGBUF fields required by all insns,\n-   virtual and real.  */\n-\n-static INLINE void\n-sh64_compact_fill_argbuf (const SIM_CPU *cpu, ARGBUF *abuf, const IDESC *idesc,\n-\t\t    PCADDR pc, int fast_p)\n-{\n-#if WITH_SCACHE\n-  SEM_SET_CODE (abuf, idesc, fast_p);\n-  ARGBUF_ADDR (abuf) = pc;\n-#endif\n-  ARGBUF_IDESC (abuf) = idesc;\n-}\n-\n-/* Fill in tracing/profiling fields of an ARGBUF.  */\n-\n-static INLINE void\n-sh64_compact_fill_argbuf_tp (const SIM_CPU *cpu, ARGBUF *abuf,\n-\t\t       int trace_p, int profile_p)\n-{\n-  ARGBUF_TRACE_P (abuf) = trace_p;\n-  ARGBUF_PROFILE_P (abuf) = profile_p;\n-}\n-\n-#if WITH_SCACHE_PBB\n-\n-/* Emit the \"x-before\" handler.\n-   x-before is emitted before each insn (serial or parallel).\n-   This is as opposed to x-after which is only emitted at the end of a group\n-   of parallel insns.  */\n-\n-static INLINE void\n-sh64_compact_emit_before (SIM_CPU *current_cpu, SCACHE *sc, PCADDR pc, int first_p)\n-{\n-  ARGBUF *abuf = &sc[0].argbuf;\n-  const IDESC *id = & CPU_IDESC (current_cpu) [SH64_COMPACT_INSN_X_BEFORE];\n-\n-  abuf->fields.before.first_p = first_p;\n-  sh64_compact_fill_argbuf (current_cpu, abuf, id, pc, 0);\n-  /* no need to set trace_p,profile_p */\n-}\n-\n-/* Emit the \"x-after\" handler.\n-   x-after is emitted after a serial insn or at the end of a group of\n-   parallel insns.  */\n-\n-static INLINE void\n-sh64_compact_emit_after (SIM_CPU *current_cpu, SCACHE *sc, PCADDR pc)\n-{\n-  ARGBUF *abuf = &sc[0].argbuf;\n-  const IDESC *id = & CPU_IDESC (current_cpu) [SH64_COMPACT_INSN_X_AFTER];\n-\n-  sh64_compact_fill_argbuf (current_cpu, abuf, id, pc, 0);\n-  /* no need to set trace_p,profile_p */\n-}\n-\n-#endif /* WITH_SCACHE_PBB */\n-\n-\n-static INLINE const IDESC *\n-extract (SIM_CPU *current_cpu, PCADDR pc, CGEN_INSN_INT insn, ARGBUF *abuf,\n-         int fast_p)\n-{\n-  const IDESC *id = sh64_compact_decode (current_cpu, pc, insn, insn, abuf);\n-\n-  sh64_compact_fill_argbuf (current_cpu, abuf, id, pc, fast_p);\n-  if (! fast_p)\n-    {\n-      int trace_p = PC_IN_TRACE_RANGE_P (current_cpu, pc);\n-      int profile_p = PC_IN_PROFILE_RANGE_P (current_cpu, pc);\n-      sh64_compact_fill_argbuf_tp (current_cpu, abuf, trace_p, profile_p);\n-    }\n-  return id;\n-}\n-\n-static INLINE SEM_PC\n-execute (SIM_CPU *current_cpu, SCACHE *sc, int fast_p)\n-{\n-  SEM_PC vpc;\n-\n-  if (fast_p)\n-    {\n-#if ! WITH_SEM_SWITCH_FAST\n-#if WITH_SCACHE\n-      vpc = (*sc->argbuf.semantic.sem_fast) (current_cpu, sc);\n-#else\n-      vpc = (*sc->argbuf.semantic.sem_fast) (current_cpu, &sc->argbuf);\n-#endif\n-#else\n-      abort ();\n-#endif /* WITH_SEM_SWITCH_FAST */\n-    }\n-  else\n-    {\n-#if ! WITH_SEM_SWITCH_FULL\n-      ARGBUF *abuf = &sc->argbuf;\n-      const IDESC *idesc = abuf->idesc;\n-#if WITH_SCACHE_PBB\n-      int virtual_p = CGEN_ATTR_VALUE (NULL, idesc->attrs, CGEN_INSN_VIRTUAL);\n-#else\n-      int virtual_p = 0;\n-#endif\n-\n-      if (! virtual_p)\n-\t{\n-\t  /* FIXME: call x-before */\n-\t  if (ARGBUF_PROFILE_P (abuf))\n-\t    PROFILE_COUNT_INSN (current_cpu, abuf->addr, idesc->num);\n-\t  /* FIXME: Later make cover macros: PROFILE_INSN_{INIT,FINI}.  */\n-\t  if (PROFILE_MODEL_P (current_cpu)\n-\t      && ARGBUF_PROFILE_P (abuf))\n-\t    sh64_compact_model_insn_before (current_cpu, 1 /*first_p*/);\n-\t  CGEN_TRACE_INSN_INIT (current_cpu, abuf, 1);\n-\t  CGEN_TRACE_INSN (current_cpu, idesc->idata,\n-\t\t      (const struct argbuf *) abuf, abuf->addr);\n-\t}\n-#if WITH_SCACHE\n-      vpc = (*sc->argbuf.semantic.sem_full) (current_cpu, sc);\n-#else\n-      vpc = (*sc->argbuf.semantic.sem_full) (current_cpu, abuf);\n-#endif\n-      if (! virtual_p)\n-\t{\n-\t  /* FIXME: call x-after */\n-\t  if (PROFILE_MODEL_P (current_cpu)\n-\t      && ARGBUF_PROFILE_P (abuf))\n-\t    {\n-\t      int cycles;\n-\n-\t      cycles = (*idesc->timing->model_fn) (current_cpu, sc);\n-\t      sh64_compact_model_insn_after (current_cpu, 1 /*last_p*/, cycles);\n-\t    }\n-\t  CGEN_TRACE_INSN_FINI (current_cpu, abuf, 1);\n-\t}\n-#else\n-      abort ();\n-#endif /* WITH_SEM_SWITCH_FULL */\n-    }\n-\n-  return vpc;\n-}\n-\n-\n-/* Record address of cti terminating a pbb.  */\n-#define SET_CTI_VPC(sc) do { _cti_sc = (sc); } while (0)\n-/* Record number of [real] insns in pbb.  */\n-#define SET_INSN_COUNT(n) do { _insn_count = (n); } while (0)\n-\n-/* Fetch and extract a pseudo-basic-block.\n-   FAST_P is non-zero if no tracing/profiling/etc. is wanted.  */\n-\n-INLINE SEM_PC\n-sh64_compact_pbb_begin (SIM_CPU *current_cpu, int FAST_P)\n-{\n-  SEM_PC new_vpc;\n-  PCADDR pc;\n-  SCACHE *sc;\n-  int max_insns = CPU_SCACHE_MAX_CHAIN_LENGTH (current_cpu);\n-\n-  pc = GET_H_PC ();\n-\n-  new_vpc = scache_lookup_or_alloc (current_cpu, pc, max_insns, &sc);\n-  if (! new_vpc)\n-    {\n-      /* Leading '_' to avoid collision with mainloop.in.  */\n-      int _insn_count = 0;\n-      SCACHE *orig_sc = sc;\n-      SCACHE *_cti_sc = NULL;\n-      int slice_insns = CPU_MAX_SLICE_INSNS (current_cpu);\n-\n-      /* First figure out how many instructions to compile.\n-\t MAX_INSNS is the size of the allocated buffer, which includes space\n-\t for before/after handlers if they're being used.\n-\t SLICE_INSNS is the maxinum number of real insns that can be\n-\t executed.  Zero means \"as many as we want\".  */\n-      /* ??? max_insns is serving two incompatible roles.\n-\t 1) Number of slots available in scache buffer.\n-\t 2) Number of real insns to execute.\n-\t They're incompatible because there are virtual insns emitted too\n-\t (chain,cti-chain,before,after handlers).  */\n-\n-      if (slice_insns == 1)\n-\t{\n-\t  /* No need to worry about extra slots required for virtual insns\n-\t     and parallel exec support because MAX_CHAIN_LENGTH is\n-\t     guaranteed to be big enough to execute at least 1 insn!  */\n-\t  max_insns = 1;\n-\t}\n-      else\n-\t{\n-\t  /* Allow enough slop so that while compiling insns, if max_insns > 0\n-\t     then there's guaranteed to be enough space to emit one real insn.\n-\t     MAX_CHAIN_LENGTH is typically much longer than\n-\t     the normal number of insns between cti's anyway.  */\n-\t  max_insns -= (1 /* one for the trailing chain insn */\n-\t\t\t+ (FAST_P\n-\t\t\t   ? 0\n-\t\t\t   : (1 + MAX_PARALLEL_INSNS) /* before+after */)\n-\t\t\t+ (MAX_PARALLEL_INSNS > 1\n-\t\t\t   ? (MAX_PARALLEL_INSNS * 2)\n-\t\t\t   : 0));\n-\n-\t  /* Account for before/after handlers.  */\n-\t  if (! FAST_P)\n-\t    slice_insns *= 3;\n-\n-\t  if (slice_insns > 0\n-\t      && slice_insns < max_insns)\n-\t    max_insns = slice_insns;\n-\t}\n-\n-      new_vpc = sc;\n-\n-      /* SC,PC must be updated to point passed the last entry used.\n-\t SET_CTI_VPC must be called if pbb is terminated by a cti.\n-\t SET_INSN_COUNT must be called to record number of real insns in\n-\t pbb [could be computed by us of course, extra cpu but perhaps\n-\t negligible enough].  */\n-\n-/* begin extract-pbb */\n-{\n-  const IDESC *idesc;\n-  int icount = 0;\n-\n- while (max_insns > 0)\n-    {\n-      UHI insn = GETIMEMUHI (current_cpu, pc);\n-      \n-      idesc = extract (current_cpu, pc, insn, &sc->argbuf, FAST_P);\n-      SEM_SKIP_COMPILE (current_cpu, sc, 1);\n-      ++sc;\n-      --max_insns;\n-      ++icount;\n-      pc += idesc->length;\n-\n-      if (IDESC_CTI_P (idesc))\n-        {\n-          SET_CTI_VPC (sc - 1);\n-\n-          if (CGEN_ATTR_VALUE (NULL, idesc->attrs, CGEN_INSN_DELAY_SLOT))\n-            {\n-              USI insn = GETIMEMUHI (current_cpu, pc);\n-\t      idesc = extract (current_cpu, pc, insn, &sc->argbuf, FAST_P);\n-\n-              if (IDESC_CTI_P (idesc) ||\n-\t          CGEN_ATTR_VALUE (NULL, idesc->attrs, CGEN_INSN_ILLSLOT))\n-\t        {\n-\t\t  SIM_DESC sd = CPU_STATE (current_cpu);\n-                  sim_io_eprintf (CPU_STATE (current_cpu),\n-\t\t    \"malformed program, `%s' insn in delay slot\\n\",\n-                    CGEN_INSN_NAME (idesc->idata));    \n-\t\t  sim_engine_halt (sd, current_cpu, NULL, pc,\n-  \t\t\t\t   sim_stopped, SIM_SIGILL);\n-                }\n-\t      else\n-                { \n-                  ++sc;\n-\t          --max_insns;\n-\t          ++icount;\n-\t          pc += idesc->length;\n-                }\n-            }\n-\t  break;\n-      }\n-    }\n-\n- Finish:\n-  SET_INSN_COUNT (icount);\n-}\n-/* end extract-pbb */\n-\n-      /* The last one is a pseudo-insn to link to the next chain.\n-\t It is also used to record the insn count for this chain.  */\n-      {\n-\tconst IDESC *id;\n-\n-\t/* Was pbb terminated by a cti?  */\n-\tif (_cti_sc)\n-\t  {\n-\t    id = & CPU_IDESC (current_cpu) [SH64_COMPACT_INSN_X_CTI_CHAIN];\n-\t  }\n-\telse\n-\t  {\n-\t    id = & CPU_IDESC (current_cpu) [SH64_COMPACT_INSN_X_CHAIN];\n-\t  }\n-\tSEM_SET_CODE (&sc->argbuf, id, FAST_P);\n-\tsc->argbuf.idesc = id;\n-\tsc->argbuf.addr = pc;\n-\tsc->argbuf.fields.chain.insn_count = _insn_count;\n-\tsc->argbuf.fields.chain.next = 0;\n-\tsc->argbuf.fields.chain.branch_target = 0;\n-\t++sc;\n-      }\n-\n-      /* Update the pointer to the next free entry, may not have used as\n-\t many entries as was asked for.  */\n-      CPU_SCACHE_NEXT_FREE (current_cpu) = sc;\n-      /* Record length of chain if profiling.\n-\t This includes virtual insns since they count against\n-\t max_insns too.  */\n-      if (! FAST_P)\n-\tPROFILE_COUNT_SCACHE_CHAIN_LENGTH (current_cpu, sc - orig_sc);\n-    }\n-\n-  return new_vpc;\n-}\n-\n-/* Chain to the next block from a non-cti terminated previous block.  */\n-\n-INLINE SEM_PC\n-sh64_compact_pbb_chain (SIM_CPU *current_cpu, SEM_ARG sem_arg)\n-{\n-  ARGBUF *abuf = SEM_ARGBUF (sem_arg);\n-\n-  PBB_UPDATE_INSN_COUNT (current_cpu, sem_arg);\n-\n-  SET_H_PC (abuf->addr);\n-\n-\n-  /* If not running forever, exit back to main loop.  */\n-  if (CPU_MAX_SLICE_INSNS (current_cpu) != 0\n-      /* Also exit back to main loop if there's an event.\n-         Note that if CPU_MAX_SLICE_INSNS != 1, events won't get processed\n-\t at the \"right\" time, but then that was what was asked for.\n-\t There is no silver bullet for simulator engines.\n-         ??? Clearly this needs a cleaner interface.\n-\t At present it's just so Ctrl-C works.  */\n-      || STATE_EVENTS (CPU_STATE (current_cpu))->work_pending)\n-    CPU_RUNNING_P (current_cpu) = 0;\n-\n-  /* If chained to next block, go straight to it.  */\n-  if (abuf->fields.chain.next)\n-    return abuf->fields.chain.next;\n-  /* See if next block has already been compiled.  */\n-  abuf->fields.chain.next = scache_lookup (current_cpu, abuf->addr);\n-  if (abuf->fields.chain.next)\n-    return abuf->fields.chain.next;\n-  /* Nope, so next insn is a virtual insn to invoke the compiler\n-     (begin a pbb).  */\n-  return CPU_SCACHE_PBB_BEGIN (current_cpu);\n-}\n-\n-/* Chain to the next block from a cti terminated previous block.\n-   BR_TYPE indicates whether the branch was taken and whether we can cache\n-   the vpc of the branch target.\n-   NEW_PC is the target's branch address, and is only valid if\n-   BR_TYPE != SEM_BRANCH_UNTAKEN.  */\n-\n-INLINE SEM_PC\n-sh64_compact_pbb_cti_chain (SIM_CPU *current_cpu, SEM_ARG sem_arg,\n-\t\t     SEM_BRANCH_TYPE br_type, PCADDR new_pc)\n-{\n-  SEM_PC *new_vpc_ptr;\n-\n-  PBB_UPDATE_INSN_COUNT (current_cpu, sem_arg);\n-\n-  /* If we have switched ISAs, exit back to main loop.\n-     Set idesc to 0 to cause the engine to point to the right insn table.  */\n-  if (new_pc & 1)\n-  {\n-    /* Switch to SHmedia.  */\n-    CPU_IDESC_SEM_INIT_P (current_cpu) = 0;\n-    CPU_RUNNING_P (current_cpu) = 0;\n-  }\n-\n-  /* If not running forever, exit back to main loop.  */\n-  if (CPU_MAX_SLICE_INSNS (current_cpu) != 0\n-      /* Also exit back to main loop if there's an event.\n-         Note that if CPU_MAX_SLICE_INSNS != 1, events won't get processed\n-\t at the \"right\" time, but then that was what was asked for.\n-\t There is no silver bullet for simulator engines.\n-         ??? Clearly this needs a cleaner interface.\n-\t At present it's just so Ctrl-C works.  */\n-      || STATE_EVENTS (CPU_STATE (current_cpu))->work_pending)\n-    CPU_RUNNING_P (current_cpu) = 0;\n-\n-  /* Restart compiler if we branched to an uncacheable address\n-     (e.g. \"j reg\").  */\n-  if (br_type == SEM_BRANCH_UNCACHEABLE)\n-    {\n-      SET_H_PC (new_pc);\n-      return CPU_SCACHE_PBB_BEGIN (current_cpu);\n-    }\n-\n-  /* If branch wasn't taken, update the pc and set BR_ADDR_PTR to our\n-     next chain ptr.  */\n-  if (br_type == SEM_BRANCH_UNTAKEN)\n-    {\n-      ARGBUF *abuf = SEM_ARGBUF (sem_arg);\n-      new_pc = abuf->addr;\n-      SET_H_PC (new_pc);\n-      new_vpc_ptr = &abuf->fields.chain.next;\n-    }\n-  else\n-    {\n-      ARGBUF *abuf = SEM_ARGBUF (sem_arg);\n-      SET_H_PC (new_pc);\n-      new_vpc_ptr = &abuf->fields.chain.branch_target;\n-    }\n-\n-  /* If chained to next block, go straight to it.  */\n-  if (*new_vpc_ptr)\n-    return *new_vpc_ptr;\n-  /* See if next block has already been compiled.  */\n-  *new_vpc_ptr = scache_lookup (current_cpu, new_pc);\n-  if (*new_vpc_ptr)\n-    return *new_vpc_ptr;\n-  /* Nope, so next insn is a virtual insn to invoke the compiler\n-     (begin a pbb).  */\n-  return CPU_SCACHE_PBB_BEGIN (current_cpu);\n-}\n-\n-/* x-before handler.\n-   This is called before each insn.  */\n-\n-void\n-sh64_compact_pbb_before (SIM_CPU *current_cpu, SCACHE *sc)\n-{\n-  SEM_ARG sem_arg = sc;\n-  const ARGBUF *abuf = SEM_ARGBUF (sem_arg);\n-  int first_p = abuf->fields.before.first_p;\n-  const ARGBUF *cur_abuf = SEM_ARGBUF (sc + 1);\n-  const IDESC *cur_idesc = cur_abuf->idesc;\n-  PCADDR pc = cur_abuf->addr;\n-\n-  if (ARGBUF_PROFILE_P (cur_abuf))\n-    PROFILE_COUNT_INSN (current_cpu, pc, cur_idesc->num);\n-\n-  /* If this isn't the first insn, finish up the previous one.  */\n-\n-  if (! first_p)\n-    {\n-      if (PROFILE_MODEL_P (current_cpu))\n-\t{\n-\t  const SEM_ARG prev_sem_arg = sc - 1;\n-\t  const ARGBUF *prev_abuf = SEM_ARGBUF (prev_sem_arg);\n-\t  const IDESC *prev_idesc = prev_abuf->idesc;\n-\t  int cycles;\n-\n-\t  /* ??? May want to measure all insns if doing insn tracing.  */\n-\t  if (ARGBUF_PROFILE_P (prev_abuf))\n-\t    {\n-\t      cycles = (*prev_idesc->timing->model_fn) (current_cpu, prev_sem_arg);\n-\t      sh64_compact_model_insn_after (current_cpu, 0 /*last_p*/, cycles);\n-\t    }\n-\t}\n-\n-      CGEN_TRACE_INSN_FINI (current_cpu, cur_abuf, 0 /*last_p*/);\n-    }\n-\n-  /* FIXME: Later make cover macros: PROFILE_INSN_{INIT,FINI}.  */\n-  if (PROFILE_MODEL_P (current_cpu)\n-      && ARGBUF_PROFILE_P (cur_abuf))\n-    sh64_compact_model_insn_before (current_cpu, first_p);\n-\n-  CGEN_TRACE_INSN_INIT (current_cpu, cur_abuf, first_p);\n-  CGEN_TRACE_INSN (current_cpu, cur_idesc->idata, cur_abuf, pc);\n-}\n-\n-/* x-after handler.\n-   This is called after a serial insn or at the end of a group of parallel\n-   insns.  */\n-\n-void\n-sh64_compact_pbb_after (SIM_CPU *current_cpu, SCACHE *sc)\n-{\n-  SEM_ARG sem_arg = sc;\n-  const ARGBUF *abuf = SEM_ARGBUF (sem_arg);\n-  const SEM_ARG prev_sem_arg = sc - 1;\n-  const ARGBUF *prev_abuf = SEM_ARGBUF (prev_sem_arg);\n-\n-  /* ??? May want to measure all insns if doing insn tracing.  */\n-  if (PROFILE_MODEL_P (current_cpu)\n-      && ARGBUF_PROFILE_P (prev_abuf))\n-    {\n-      const IDESC *prev_idesc = prev_abuf->idesc;\n-      int cycles;\n-\n-      cycles = (*prev_idesc->timing->model_fn) (current_cpu, prev_sem_arg);\n-      sh64_compact_model_insn_after (current_cpu, 1 /*last_p*/, cycles);\n-    }\n-  CGEN_TRACE_INSN_FINI (current_cpu, prev_abuf, 1 /*last_p*/);\n-}\n-\n-#define FAST_P 0\n-\n-void\n-sh64_compact_engine_run_full (SIM_CPU *current_cpu)\n-{\n-  SIM_DESC current_state = CPU_STATE (current_cpu);\n-  SCACHE *scache = CPU_SCACHE_CACHE (current_cpu);\n-  /* virtual program counter */\n-  SEM_PC vpc;\n-#if WITH_SEM_SWITCH_FULL\n-  /* For communication between cti's and cti-chain.  */\n-  SEM_BRANCH_TYPE pbb_br_type;\n-  PCADDR pbb_br_npc;\n-#endif\n-\n-\n-  if (! CPU_IDESC_SEM_INIT_P (current_cpu))\n-    {\n-      /* ??? 'twould be nice to move this up a level and only call it once.\n-\t On the other hand, in the \"let's go fast\" case the test is only done\n-\t once per pbb (since we only return to the main loop at the end of\n-\t a pbb).  And in the \"let's run until we're done\" case we don't return\n-\t until the program exits.  */\n-\n-#if WITH_SEM_SWITCH_FULL\n-#if defined (__GNUC__)\n-/* ??? Later maybe paste sem-switch.c in when building mainloop.c.  */\n-#define DEFINE_LABELS\n-#include \"sem-compact-switch.c\"\n-#endif\n-#else\n-      sh64_compact_sem_init_idesc_table (current_cpu);\n-#endif\n-\n-      /* Initialize the \"begin (compile) a pbb\" virtual insn.  */\n-      vpc = CPU_SCACHE_PBB_BEGIN (current_cpu);\n-      SEM_SET_FULL_CODE (SEM_ARGBUF (vpc),\n-\t\t\t & CPU_IDESC (current_cpu) [SH64_COMPACT_INSN_X_BEGIN]);\n-      vpc->argbuf.idesc = & CPU_IDESC (current_cpu) [SH64_COMPACT_INSN_X_BEGIN];\n-\n-      CPU_IDESC_SEM_INIT_P (current_cpu) = 1;\n-    }\n-\n-  CPU_RUNNING_P (current_cpu) = 1;\n-  /* ??? In the case where we're returning to the main loop after every\n-     pbb we don't want to call pbb_begin each time (which hashes on the pc\n-     and does a table lookup).  A way to speed this up is to save vpc\n-     between calls.  */\n-  vpc = sh64_compact_pbb_begin (current_cpu, FAST_P);\n-\n-  do\n-    {\n-/* begin full-exec-pbb */\n-{\n-#if (! FAST_P && WITH_SEM_SWITCH_FULL) || (FAST_P && WITH_SEM_SWITCH_FAST)\n-#define DEFINE_SWITCH\n-#include \"sem-compact-switch.c\"\n-#else\n-  vpc = execute (current_cpu, vpc, FAST_P);\n-#endif\n-}\n-/* end full-exec-pbb */\n-    }\n-  while (CPU_RUNNING_P (current_cpu));\n-}\n-\n-#undef FAST_P\n-\n-\n-#define FAST_P 1\n-\n-void\n-sh64_compact_engine_run_fast (SIM_CPU *current_cpu)\n-{\n-  SIM_DESC current_state = CPU_STATE (current_cpu);\n-  SCACHE *scache = CPU_SCACHE_CACHE (current_cpu);\n-  /* virtual program counter */\n-  SEM_PC vpc;\n-#if WITH_SEM_SWITCH_FAST\n-  /* For communication between cti's and cti-chain.  */\n-  SEM_BRANCH_TYPE pbb_br_type;\n-  PCADDR pbb_br_npc;\n-#endif\n-\n-\n-  if (! CPU_IDESC_SEM_INIT_P (current_cpu))\n-    {\n-      /* ??? 'twould be nice to move this up a level and only call it once.\n-\t On the other hand, in the \"let's go fast\" case the test is only done\n-\t once per pbb (since we only return to the main loop at the end of\n-\t a pbb).  And in the \"let's run until we're done\" case we don't return\n-\t until the program exits.  */\n-\n-#if WITH_SEM_SWITCH_FAST\n-#if defined (__GNUC__)\n-/* ??? Later maybe paste sem-switch.c in when building mainloop.c.  */\n-#define DEFINE_LABELS\n-#include \"sem-compact-switch.c\"\n-#endif\n-#else\n-      sh64_compact_semf_init_idesc_table (current_cpu);\n-#endif\n-\n-      /* Initialize the \"begin (compile) a pbb\" virtual insn.  */\n-      vpc = CPU_SCACHE_PBB_BEGIN (current_cpu);\n-      SEM_SET_FAST_CODE (SEM_ARGBUF (vpc),\n-\t\t\t & CPU_IDESC (current_cpu) [SH64_COMPACT_INSN_X_BEGIN]);\n-      vpc->argbuf.idesc = & CPU_IDESC (current_cpu) [SH64_COMPACT_INSN_X_BEGIN];\n-\n-      CPU_IDESC_SEM_INIT_P (current_cpu) = 1;\n-    }\n-\n-  CPU_RUNNING_P (current_cpu) = 1;\n-  /* ??? In the case where we're returning to the main loop after every\n-     pbb we don't want to call pbb_begin each time (which hashes on the pc\n-     and does a table lookup).  A way to speed this up is to save vpc\n-     between calls.  */\n-  vpc = sh64_compact_pbb_begin (current_cpu, FAST_P);\n-\n-  do\n-    {\n-/* begin fast-exec-pbb */\n-{\n-#if (! FAST_P && WITH_SEM_SWITCH_FULL) || (FAST_P && WITH_SEM_SWITCH_FAST)\n-#define DEFINE_SWITCH\n-#include \"sem-compact-switch.c\"\n-#else\n-  vpc = execute (current_cpu, vpc, FAST_P);\n-#endif\n-}\n-/* end fast-exec-pbb */\n-    }\n-  while (CPU_RUNNING_P (current_cpu));\n-}\n-\n-#undef FAST_P\n-"
    },
    {
      "sha": "2146d3eaa640b89a176b06e87f17a46b6a3a9714",
      "filename": "sim/sh64/mloop-media.c",
      "status": "removed",
      "additions": 0,
      "deletions": 624,
      "changes": 624,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/mloop-media.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/mloop-media.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/mloop-media.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,624 +0,0 @@\n-/* This file is generated by the genmloop script.  DO NOT EDIT! */\n-\n-/* Enable switch() support in cgen headers.  */\n-#define SEM_IN_SWITCH\n-\n-#define WANT_CPU sh64\n-#define WANT_CPU_SH64\n-\n-#include \"sim-main.h\"\n-#include \"bfd.h\"\n-#include \"cgen-mem.h\"\n-#include \"cgen-ops.h\"\n-#include \"sim-assert.h\"\n-\n-/* Fill in the administrative ARGBUF fields required by all insns,\n-   virtual and real.  */\n-\n-static INLINE void\n-sh64_media_fill_argbuf (const SIM_CPU *cpu, ARGBUF *abuf, const IDESC *idesc,\n-\t\t    PCADDR pc, int fast_p)\n-{\n-#if WITH_SCACHE\n-  SEM_SET_CODE (abuf, idesc, fast_p);\n-  ARGBUF_ADDR (abuf) = pc;\n-#endif\n-  ARGBUF_IDESC (abuf) = idesc;\n-}\n-\n-/* Fill in tracing/profiling fields of an ARGBUF.  */\n-\n-static INLINE void\n-sh64_media_fill_argbuf_tp (const SIM_CPU *cpu, ARGBUF *abuf,\n-\t\t       int trace_p, int profile_p)\n-{\n-  ARGBUF_TRACE_P (abuf) = trace_p;\n-  ARGBUF_PROFILE_P (abuf) = profile_p;\n-}\n-\n-#if WITH_SCACHE_PBB\n-\n-/* Emit the \"x-before\" handler.\n-   x-before is emitted before each insn (serial or parallel).\n-   This is as opposed to x-after which is only emitted at the end of a group\n-   of parallel insns.  */\n-\n-static INLINE void\n-sh64_media_emit_before (SIM_CPU *current_cpu, SCACHE *sc, PCADDR pc, int first_p)\n-{\n-  ARGBUF *abuf = &sc[0].argbuf;\n-  const IDESC *id = & CPU_IDESC (current_cpu) [SH64_MEDIA_INSN_X_BEFORE];\n-\n-  abuf->fields.before.first_p = first_p;\n-  sh64_media_fill_argbuf (current_cpu, abuf, id, pc, 0);\n-  /* no need to set trace_p,profile_p */\n-}\n-\n-/* Emit the \"x-after\" handler.\n-   x-after is emitted after a serial insn or at the end of a group of\n-   parallel insns.  */\n-\n-static INLINE void\n-sh64_media_emit_after (SIM_CPU *current_cpu, SCACHE *sc, PCADDR pc)\n-{\n-  ARGBUF *abuf = &sc[0].argbuf;\n-  const IDESC *id = & CPU_IDESC (current_cpu) [SH64_MEDIA_INSN_X_AFTER];\n-\n-  sh64_media_fill_argbuf (current_cpu, abuf, id, pc, 0);\n-  /* no need to set trace_p,profile_p */\n-}\n-\n-#endif /* WITH_SCACHE_PBB */\n-\n-\n-static INLINE const IDESC *\n-extract (SIM_CPU *current_cpu, PCADDR pc, CGEN_INSN_INT insn, ARGBUF *abuf,\n-         int fast_p)\n-{\n-  const IDESC *id = sh64_media_decode (current_cpu, pc, insn, insn, abuf);\n-\n-  sh64_media_fill_argbuf (current_cpu, abuf, id, pc, fast_p);\n-  if (! fast_p)\n-    {\n-      int trace_p = PC_IN_TRACE_RANGE_P (current_cpu, pc);\n-      int profile_p = PC_IN_PROFILE_RANGE_P (current_cpu, pc);\n-      sh64_media_fill_argbuf_tp (current_cpu, abuf, trace_p, profile_p);\n-    }\n-  return id;\n-}\n-\n-static INLINE SEM_PC\n-execute (SIM_CPU *current_cpu, SCACHE *sc, int fast_p)\n-{\n-  SEM_PC vpc;\n-\n-  if (fast_p)\n-    {\n-#if ! WITH_SEM_SWITCH_FAST\n-#if WITH_SCACHE\n-      vpc = (*sc->argbuf.semantic.sem_fast) (current_cpu, sc);\n-#else\n-      vpc = (*sc->argbuf.semantic.sem_fast) (current_cpu, &sc->argbuf);\n-#endif\n-#else\n-      abort ();\n-#endif /* WITH_SEM_SWITCH_FAST */\n-    }\n-  else\n-    {\n-#if ! WITH_SEM_SWITCH_FULL\n-      ARGBUF *abuf = &sc->argbuf;\n-      const IDESC *idesc = abuf->idesc;\n-#if WITH_SCACHE_PBB\n-      int virtual_p = CGEN_ATTR_VALUE (NULL, idesc->attrs, CGEN_INSN_VIRTUAL);\n-#else\n-      int virtual_p = 0;\n-#endif\n-\n-      if (! virtual_p)\n-\t{\n-\t  /* FIXME: call x-before */\n-\t  if (ARGBUF_PROFILE_P (abuf))\n-\t    PROFILE_COUNT_INSN (current_cpu, abuf->addr, idesc->num);\n-\t  /* FIXME: Later make cover macros: PROFILE_INSN_{INIT,FINI}.  */\n-\t  if (PROFILE_MODEL_P (current_cpu)\n-\t      && ARGBUF_PROFILE_P (abuf))\n-\t    sh64_media_model_insn_before (current_cpu, 1 /*first_p*/);\n-\t  CGEN_TRACE_INSN_INIT (current_cpu, abuf, 1);\n-\t  CGEN_TRACE_INSN (current_cpu, idesc->idata,\n-\t\t      (const struct argbuf *) abuf, abuf->addr);\n-\t}\n-#if WITH_SCACHE\n-      vpc = (*sc->argbuf.semantic.sem_full) (current_cpu, sc);\n-#else\n-      vpc = (*sc->argbuf.semantic.sem_full) (current_cpu, abuf);\n-#endif\n-      if (! virtual_p)\n-\t{\n-\t  /* FIXME: call x-after */\n-\t  if (PROFILE_MODEL_P (current_cpu)\n-\t      && ARGBUF_PROFILE_P (abuf))\n-\t    {\n-\t      int cycles;\n-\n-\t      cycles = (*idesc->timing->model_fn) (current_cpu, sc);\n-\t      sh64_media_model_insn_after (current_cpu, 1 /*last_p*/, cycles);\n-\t    }\n-\t  CGEN_TRACE_INSN_FINI (current_cpu, abuf, 1);\n-\t}\n-#else\n-      abort ();\n-#endif /* WITH_SEM_SWITCH_FULL */\n-    }\n-\n-  return vpc;\n-}\n-\n-\n-/* Record address of cti terminating a pbb.  */\n-#define SET_CTI_VPC(sc) do { _cti_sc = (sc); } while (0)\n-/* Record number of [real] insns in pbb.  */\n-#define SET_INSN_COUNT(n) do { _insn_count = (n); } while (0)\n-\n-/* Fetch and extract a pseudo-basic-block.\n-   FAST_P is non-zero if no tracing/profiling/etc. is wanted.  */\n-\n-INLINE SEM_PC\n-sh64_media_pbb_begin (SIM_CPU *current_cpu, int FAST_P)\n-{\n-  SEM_PC new_vpc;\n-  PCADDR pc;\n-  SCACHE *sc;\n-  int max_insns = CPU_SCACHE_MAX_CHAIN_LENGTH (current_cpu);\n-\n-  pc = GET_H_PC ();\n-\n-  new_vpc = scache_lookup_or_alloc (current_cpu, pc, max_insns, &sc);\n-  if (! new_vpc)\n-    {\n-      /* Leading '_' to avoid collision with mainloop.in.  */\n-      int _insn_count = 0;\n-      SCACHE *orig_sc = sc;\n-      SCACHE *_cti_sc = NULL;\n-      int slice_insns = CPU_MAX_SLICE_INSNS (current_cpu);\n-\n-      /* First figure out how many instructions to compile.\n-\t MAX_INSNS is the size of the allocated buffer, which includes space\n-\t for before/after handlers if they're being used.\n-\t SLICE_INSNS is the maxinum number of real insns that can be\n-\t executed.  Zero means \"as many as we want\".  */\n-      /* ??? max_insns is serving two incompatible roles.\n-\t 1) Number of slots available in scache buffer.\n-\t 2) Number of real insns to execute.\n-\t They're incompatible because there are virtual insns emitted too\n-\t (chain,cti-chain,before,after handlers).  */\n-\n-      if (slice_insns == 1)\n-\t{\n-\t  /* No need to worry about extra slots required for virtual insns\n-\t     and parallel exec support because MAX_CHAIN_LENGTH is\n-\t     guaranteed to be big enough to execute at least 1 insn!  */\n-\t  max_insns = 1;\n-\t}\n-      else\n-\t{\n-\t  /* Allow enough slop so that while compiling insns, if max_insns > 0\n-\t     then there's guaranteed to be enough space to emit one real insn.\n-\t     MAX_CHAIN_LENGTH is typically much longer than\n-\t     the normal number of insns between cti's anyway.  */\n-\t  max_insns -= (1 /* one for the trailing chain insn */\n-\t\t\t+ (FAST_P\n-\t\t\t   ? 0\n-\t\t\t   : (1 + MAX_PARALLEL_INSNS) /* before+after */)\n-\t\t\t+ (MAX_PARALLEL_INSNS > 1\n-\t\t\t   ? (MAX_PARALLEL_INSNS * 2)\n-\t\t\t   : 0));\n-\n-\t  /* Account for before/after handlers.  */\n-\t  if (! FAST_P)\n-\t    slice_insns *= 3;\n-\n-\t  if (slice_insns > 0\n-\t      && slice_insns < max_insns)\n-\t    max_insns = slice_insns;\n-\t}\n-\n-      new_vpc = sc;\n-\n-      /* SC,PC must be updated to point passed the last entry used.\n-\t SET_CTI_VPC must be called if pbb is terminated by a cti.\n-\t SET_INSN_COUNT must be called to record number of real insns in\n-\t pbb [could be computed by us of course, extra cpu but perhaps\n-\t negligible enough].  */\n-\n-/* begin extract-pbb */\n-{\n-  const IDESC *idesc;\n-  int icount = 0;\n-\n- while (max_insns > 0)\n-    {\n-      USI insn = GETIMEMUSI (current_cpu, pc);\n-      \n-      idesc = extract (current_cpu, pc, insn, &sc->argbuf, FAST_P);\n-      SEM_SKIP_COMPILE (current_cpu, sc, 1);\n-      ++sc;\n-      --max_insns;\n-      ++icount;\n-      pc += idesc->length;\n-\n-      if (IDESC_CTI_P (idesc))\n-        {\n-          SET_CTI_VPC (sc - 1);\n-\n-          if (CGEN_ATTR_VALUE (NULL, idesc->attrs, CGEN_INSN_DELAY_SLOT))\n-            {\n-              USI insn = GETIMEMUSI (current_cpu, pc);\n-\t      idesc = extract (current_cpu, pc, insn, &sc->argbuf, FAST_P);\n-\n-              ++sc;\n-\t      --max_insns;\n-\t      ++icount;\n-\t      pc += idesc->length;\n-            }\n-\t  break;\n-        }\n-    }\n-\n- Finish:\n-  SET_INSN_COUNT (icount);\n-}\n-/* end extract-pbb */\n-\n-      /* The last one is a pseudo-insn to link to the next chain.\n-\t It is also used to record the insn count for this chain.  */\n-      {\n-\tconst IDESC *id;\n-\n-\t/* Was pbb terminated by a cti?  */\n-\tif (_cti_sc)\n-\t  {\n-\t    id = & CPU_IDESC (current_cpu) [SH64_MEDIA_INSN_X_CTI_CHAIN];\n-\t  }\n-\telse\n-\t  {\n-\t    id = & CPU_IDESC (current_cpu) [SH64_MEDIA_INSN_X_CHAIN];\n-\t  }\n-\tSEM_SET_CODE (&sc->argbuf, id, FAST_P);\n-\tsc->argbuf.idesc = id;\n-\tsc->argbuf.addr = pc;\n-\tsc->argbuf.fields.chain.insn_count = _insn_count;\n-\tsc->argbuf.fields.chain.next = 0;\n-\tsc->argbuf.fields.chain.branch_target = 0;\n-\t++sc;\n-      }\n-\n-      /* Update the pointer to the next free entry, may not have used as\n-\t many entries as was asked for.  */\n-      CPU_SCACHE_NEXT_FREE (current_cpu) = sc;\n-      /* Record length of chain if profiling.\n-\t This includes virtual insns since they count against\n-\t max_insns too.  */\n-      if (! FAST_P)\n-\tPROFILE_COUNT_SCACHE_CHAIN_LENGTH (current_cpu, sc - orig_sc);\n-    }\n-\n-  return new_vpc;\n-}\n-\n-/* Chain to the next block from a non-cti terminated previous block.  */\n-\n-INLINE SEM_PC\n-sh64_media_pbb_chain (SIM_CPU *current_cpu, SEM_ARG sem_arg)\n-{\n-  ARGBUF *abuf = SEM_ARGBUF (sem_arg);\n-\n-  PBB_UPDATE_INSN_COUNT (current_cpu, sem_arg);\n-\n-  SET_H_PC (abuf->addr | 1);\n-\n-  /* If not running forever, exit back to main loop.  */\n-  if (CPU_MAX_SLICE_INSNS (current_cpu) != 0\n-      /* Also exit back to main loop if there's an event.\n-         Note that if CPU_MAX_SLICE_INSNS != 1, events won't get processed\n-\t at the \"right\" time, but then that was what was asked for.\n-\t There is no silver bullet for simulator engines.\n-         ??? Clearly this needs a cleaner interface.\n-\t At present it's just so Ctrl-C works.  */\n-      || STATE_EVENTS (CPU_STATE (current_cpu))->work_pending)\n-    CPU_RUNNING_P (current_cpu) = 0;\n-\n-  /* If chained to next block, go straight to it.  */\n-  if (abuf->fields.chain.next)\n-    return abuf->fields.chain.next;\n-  /* See if next block has already been compiled.  */\n-  abuf->fields.chain.next = scache_lookup (current_cpu, abuf->addr);\n-  if (abuf->fields.chain.next)\n-    return abuf->fields.chain.next;\n-  /* Nope, so next insn is a virtual insn to invoke the compiler\n-     (begin a pbb).  */\n-  return CPU_SCACHE_PBB_BEGIN (current_cpu);\n-}\n-\n-/* Chain to the next block from a cti terminated previous block.\n-   BR_TYPE indicates whether the branch was taken and whether we can cache\n-   the vpc of the branch target.\n-   NEW_PC is the target's branch address, and is only valid if\n-   BR_TYPE != SEM_BRANCH_UNTAKEN.  */\n-\n-INLINE SEM_PC\n-sh64_media_pbb_cti_chain (SIM_CPU *current_cpu, SEM_ARG sem_arg,\n-\t\t     SEM_BRANCH_TYPE br_type, PCADDR new_pc)\n-{\n-  SEM_PC *new_vpc_ptr;\n-\n-  PBB_UPDATE_INSN_COUNT (current_cpu, sem_arg);\n-\n-  /* If we have switched ISAs, exit back to main loop.\n-     Set idesc to 0 to cause the engine to point to the right insn table.  */\n-  if ((new_pc & 1) == 0)\n-  {\n-    /* Switch to SHcompact.  */\n-    CPU_IDESC_SEM_INIT_P (current_cpu) = 0;\n-    CPU_RUNNING_P (current_cpu) = 0;\n-  }\n-  \n-  /* If not running forever, exit back to main loop.  */\n-  if (CPU_MAX_SLICE_INSNS (current_cpu) != 0\n-      /* Also exit back to main loop if there's an event.\n-         Note that if CPU_MAX_SLICE_INSNS != 1, events won't get processed\n-\t at the \"right\" time, but then that was what was asked for.\n-\t There is no silver bullet for simulator engines.\n-         ??? Clearly this needs a cleaner interface.\n-\t At present it's just so Ctrl-C works.  */\n-      || STATE_EVENTS (CPU_STATE (current_cpu))->work_pending)\n-    CPU_RUNNING_P (current_cpu) = 0;\n-\n-  /* Restart compiler if we branched to an uncacheable address\n-     (e.g. \"j reg\").  */\n-  if (br_type == SEM_BRANCH_UNCACHEABLE)\n-    {\n-      SET_H_PC (new_pc);\n-      return CPU_SCACHE_PBB_BEGIN (current_cpu);\n-    }\n-\n-  /* If branch wasn't taken, update the pc and set BR_ADDR_PTR to our\n-     next chain ptr.  */\n-  if (br_type == SEM_BRANCH_UNTAKEN)\n-    {\n-      ARGBUF *abuf = SEM_ARGBUF (sem_arg);\n-      new_pc = abuf->addr;\n-      /* Set bit 0 to stay in SHmedia mode.  */\n-      SET_H_PC (new_pc | 1);\n-      new_vpc_ptr = &abuf->fields.chain.next;\n-    }\n-  else\n-    {\n-      ARGBUF *abuf = SEM_ARGBUF (sem_arg);\n-      SET_H_PC (new_pc);\n-      new_vpc_ptr = &abuf->fields.chain.branch_target;\n-    }\n-\n-  /* If chained to next block, go straight to it.  */\n-  if (*new_vpc_ptr)\n-    return *new_vpc_ptr;\n-  /* See if next block has already been compiled.  */\n-  *new_vpc_ptr = scache_lookup (current_cpu, new_pc);\n-  if (*new_vpc_ptr)\n-    return *new_vpc_ptr;\n-  /* Nope, so next insn is a virtual insn to invoke the compiler\n-     (begin a pbb).  */\n-  return CPU_SCACHE_PBB_BEGIN (current_cpu);\n-}\n-\n-/* x-before handler.\n-   This is called before each insn.  */\n-\n-void\n-sh64_media_pbb_before (SIM_CPU *current_cpu, SCACHE *sc)\n-{\n-  SEM_ARG sem_arg = sc;\n-  const ARGBUF *abuf = SEM_ARGBUF (sem_arg);\n-  int first_p = abuf->fields.before.first_p;\n-  const ARGBUF *cur_abuf = SEM_ARGBUF (sc + 1);\n-  const IDESC *cur_idesc = cur_abuf->idesc;\n-  PCADDR pc = cur_abuf->addr;\n-\n-  if (ARGBUF_PROFILE_P (cur_abuf))\n-    PROFILE_COUNT_INSN (current_cpu, pc, cur_idesc->num);\n-\n-  /* If this isn't the first insn, finish up the previous one.  */\n-\n-  if (! first_p)\n-    {\n-      if (PROFILE_MODEL_P (current_cpu))\n-\t{\n-\t  const SEM_ARG prev_sem_arg = sc - 1;\n-\t  const ARGBUF *prev_abuf = SEM_ARGBUF (prev_sem_arg);\n-\t  const IDESC *prev_idesc = prev_abuf->idesc;\n-\t  int cycles;\n-\n-\t  /* ??? May want to measure all insns if doing insn tracing.  */\n-\t  if (ARGBUF_PROFILE_P (prev_abuf))\n-\t    {\n-\t      cycles = (*prev_idesc->timing->model_fn) (current_cpu, prev_sem_arg);\n-\t      sh64_media_model_insn_after (current_cpu, 0 /*last_p*/, cycles);\n-\t    }\n-\t}\n-\n-      CGEN_TRACE_INSN_FINI (current_cpu, cur_abuf, 0 /*last_p*/);\n-    }\n-\n-  /* FIXME: Later make cover macros: PROFILE_INSN_{INIT,FINI}.  */\n-  if (PROFILE_MODEL_P (current_cpu)\n-      && ARGBUF_PROFILE_P (cur_abuf))\n-    sh64_media_model_insn_before (current_cpu, first_p);\n-\n-  CGEN_TRACE_INSN_INIT (current_cpu, cur_abuf, first_p);\n-  CGEN_TRACE_INSN (current_cpu, cur_idesc->idata, cur_abuf, pc);\n-}\n-\n-/* x-after handler.\n-   This is called after a serial insn or at the end of a group of parallel\n-   insns.  */\n-\n-void\n-sh64_media_pbb_after (SIM_CPU *current_cpu, SCACHE *sc)\n-{\n-  SEM_ARG sem_arg = sc;\n-  const ARGBUF *abuf = SEM_ARGBUF (sem_arg);\n-  const SEM_ARG prev_sem_arg = sc - 1;\n-  const ARGBUF *prev_abuf = SEM_ARGBUF (prev_sem_arg);\n-\n-  /* ??? May want to measure all insns if doing insn tracing.  */\n-  if (PROFILE_MODEL_P (current_cpu)\n-      && ARGBUF_PROFILE_P (prev_abuf))\n-    {\n-      const IDESC *prev_idesc = prev_abuf->idesc;\n-      int cycles;\n-\n-      cycles = (*prev_idesc->timing->model_fn) (current_cpu, prev_sem_arg);\n-      sh64_media_model_insn_after (current_cpu, 1 /*last_p*/, cycles);\n-    }\n-  CGEN_TRACE_INSN_FINI (current_cpu, prev_abuf, 1 /*last_p*/);\n-}\n-\n-#define FAST_P 0\n-\n-void\n-sh64_media_engine_run_full (SIM_CPU *current_cpu)\n-{\n-  SIM_DESC current_state = CPU_STATE (current_cpu);\n-  SCACHE *scache = CPU_SCACHE_CACHE (current_cpu);\n-  /* virtual program counter */\n-  SEM_PC vpc;\n-#if WITH_SEM_SWITCH_FULL\n-  /* For communication between cti's and cti-chain.  */\n-  SEM_BRANCH_TYPE pbb_br_type;\n-  PCADDR pbb_br_npc;\n-#endif\n-\n-\n-  if (! CPU_IDESC_SEM_INIT_P (current_cpu))\n-    {\n-      /* ??? 'twould be nice to move this up a level and only call it once.\n-\t On the other hand, in the \"let's go fast\" case the test is only done\n-\t once per pbb (since we only return to the main loop at the end of\n-\t a pbb).  And in the \"let's run until we're done\" case we don't return\n-\t until the program exits.  */\n-\n-#if WITH_SEM_SWITCH_FULL\n-#if defined (__GNUC__)\n-/* ??? Later maybe paste sem-switch.c in when building mainloop.c.  */\n-#define DEFINE_LABELS\n-#include \"sem-media-switch.c\"\n-#endif\n-#else\n-      sh64_media_sem_init_idesc_table (current_cpu);\n-#endif\n-\n-      /* Initialize the \"begin (compile) a pbb\" virtual insn.  */\n-      vpc = CPU_SCACHE_PBB_BEGIN (current_cpu);\n-      SEM_SET_FULL_CODE (SEM_ARGBUF (vpc),\n-\t\t\t & CPU_IDESC (current_cpu) [SH64_MEDIA_INSN_X_BEGIN]);\n-      vpc->argbuf.idesc = & CPU_IDESC (current_cpu) [SH64_MEDIA_INSN_X_BEGIN];\n-\n-      CPU_IDESC_SEM_INIT_P (current_cpu) = 1;\n-    }\n-\n-  CPU_RUNNING_P (current_cpu) = 1;\n-  /* ??? In the case where we're returning to the main loop after every\n-     pbb we don't want to call pbb_begin each time (which hashes on the pc\n-     and does a table lookup).  A way to speed this up is to save vpc\n-     between calls.  */\n-  vpc = sh64_media_pbb_begin (current_cpu, FAST_P);\n-\n-  do\n-    {\n-/* begin full-exec-pbb */\n-{\n-#if (! FAST_P && WITH_SEM_SWITCH_FULL) || (FAST_P && WITH_SEM_SWITCH_FAST)\n-#define DEFINE_SWITCH\n-#define WITH_ISA_COMPACT\n-#include \"sem-media-switch.c\"\n-#else\n-  vpc = execute (current_cpu, vpc, FAST_P);\n-#endif\n-}\n-/* end full-exec-pbb */\n-    }\n-  while (CPU_RUNNING_P (current_cpu));\n-}\n-\n-#undef FAST_P\n-\n-\n-#define FAST_P 1\n-\n-void\n-sh64_media_engine_run_fast (SIM_CPU *current_cpu)\n-{\n-  SIM_DESC current_state = CPU_STATE (current_cpu);\n-  SCACHE *scache = CPU_SCACHE_CACHE (current_cpu);\n-  /* virtual program counter */\n-  SEM_PC vpc;\n-#if WITH_SEM_SWITCH_FAST\n-  /* For communication between cti's and cti-chain.  */\n-  SEM_BRANCH_TYPE pbb_br_type;\n-  PCADDR pbb_br_npc;\n-#endif\n-\n-\n-  if (! CPU_IDESC_SEM_INIT_P (current_cpu))\n-    {\n-      /* ??? 'twould be nice to move this up a level and only call it once.\n-\t On the other hand, in the \"let's go fast\" case the test is only done\n-\t once per pbb (since we only return to the main loop at the end of\n-\t a pbb).  And in the \"let's run until we're done\" case we don't return\n-\t until the program exits.  */\n-\n-#if WITH_SEM_SWITCH_FAST\n-#if defined (__GNUC__)\n-/* ??? Later maybe paste sem-switch.c in when building mainloop.c.  */\n-#define DEFINE_LABELS\n-#include \"sem-media-switch.c\"\n-#endif\n-#else\n-      sh64_media_semf_init_idesc_table (current_cpu);\n-#endif\n-\n-      /* Initialize the \"begin (compile) a pbb\" virtual insn.  */\n-      vpc = CPU_SCACHE_PBB_BEGIN (current_cpu);\n-      SEM_SET_FAST_CODE (SEM_ARGBUF (vpc),\n-\t\t\t & CPU_IDESC (current_cpu) [SH64_MEDIA_INSN_X_BEGIN]);\n-      vpc->argbuf.idesc = & CPU_IDESC (current_cpu) [SH64_MEDIA_INSN_X_BEGIN];\n-\n-      CPU_IDESC_SEM_INIT_P (current_cpu) = 1;\n-    }\n-\n-  CPU_RUNNING_P (current_cpu) = 1;\n-  /* ??? In the case where we're returning to the main loop after every\n-     pbb we don't want to call pbb_begin each time (which hashes on the pc\n-     and does a table lookup).  A way to speed this up is to save vpc\n-     between calls.  */\n-  vpc = sh64_media_pbb_begin (current_cpu, FAST_P);\n-\n-  do\n-    {\n-/* begin fast-exec-pbb */\n-{\n-#if (! FAST_P && WITH_SEM_SWITCH_FULL) || (FAST_P && WITH_SEM_SWITCH_FAST)\n-#define DEFINE_SWITCH\n-#define WITH_ISA_COMPACT\n-#include \"sem-media-switch.c\"\n-#else\n-  vpc = execute (current_cpu, vpc, FAST_P);\n-#endif\n-}\n-/* end fast-exec-pbb */\n-    }\n-  while (CPU_RUNNING_P (current_cpu));\n-}\n-\n-#undef FAST_P\n-"
    },
    {
      "sha": "a2c32476751bfaa7fef9677fabf960bf62e50bef",
      "filename": "sim/sh64/sem-compact-switch.c",
      "status": "removed",
      "additions": 0,
      "deletions": 5210,
      "changes": 5210,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sem-compact-switch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sem-compact-switch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/sem-compact-switch.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942"
    },
    {
      "sha": "a192400ce0ad6736b5d37ec4f991dc1ba13aad6d",
      "filename": "sim/sh64/sem-compact.c",
      "status": "removed",
      "additions": 0,
      "deletions": 5589,
      "changes": 5589,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sem-compact.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sem-compact.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/sem-compact.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942"
    },
    {
      "sha": "f16a6b376340ea31f29bc3d103930c6d6caa6823",
      "filename": "sim/sh64/sem-media-switch.c",
      "status": "removed",
      "additions": 0,
      "deletions": 5656,
      "changes": 5656,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sem-media-switch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sem-media-switch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/sem-media-switch.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942"
    },
    {
      "sha": "5ac3be9227f5665a20513a003e104fac9149d52a",
      "filename": "sim/sh64/sem-media.c",
      "status": "removed",
      "additions": 0,
      "deletions": 6063,
      "changes": 6063,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sem-media.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sem-media.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/sem-media.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942"
    },
    {
      "sha": "e642b27447e2bb51e1b4f805280bec09ab8b406c",
      "filename": "sim/sh64/sh-desc.c",
      "status": "removed",
      "additions": 0,
      "deletions": 3562,
      "changes": 3562,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sh-desc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sh-desc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/sh-desc.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942"
    },
    {
      "sha": "5cd5c1ccbac81293329fa2e793b1139a44f90785",
      "filename": "sim/sh64/sh-desc.h",
      "status": "removed",
      "additions": 0,
      "deletions": 315,
      "changes": 315,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sh-desc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sh-desc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/sh-desc.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,315 +0,0 @@\n-/* CPU data header for sh.\n-\n-THIS FILE IS MACHINE GENERATED WITH CGEN.\n-\n-Copyright 1996-2021 Free Software Foundation, Inc.\n-\n-This file is part of the GNU Binutils and/or GDB, the GNU debugger.\n-\n-   This file is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   It is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n-\n-*/\n-\n-#ifndef SH_CPU_H\n-#define SH_CPU_H\n-\n-#define CGEN_ARCH sh\n-\n-/* Given symbol S, return sh_cgen_<S>.  */\n-#define CGEN_SYM(s) sh##_cgen_##s\n-\n-\n-/* Selected cpu families.  */\n-#define HAVE_CPU_SH64\n-\n-#define CGEN_INSN_LSB0_P 0\n-\n-/* Minimum size of any insn (in bytes).  */\n-#define CGEN_MIN_INSN_SIZE 2\n-\n-/* Maximum size of any insn (in bytes).  */\n-#define CGEN_MAX_INSN_SIZE 4\n-\n-#define CGEN_INT_INSN_P 1\n-\n-/* Maximum number of syntax elements in an instruction.  */\n-#define CGEN_ACTUAL_MAX_SYNTAX_ELEMENTS 22\n-\n-/* CGEN_MNEMONIC_OPERANDS is defined if mnemonics have operands.\n-   e.g. In \"b,a foo\" the \",a\" is an operand.  If mnemonics have operands\n-   we can't hash on everything up to the space.  */\n-#define CGEN_MNEMONIC_OPERANDS\n-\n-/* Maximum number of fields in an instruction.  */\n-#define CGEN_ACTUAL_MAX_IFMT_OPERANDS 8\n-\n-/* Enums.  */\n-\n-/* Enum declaration for .  */\n-typedef enum frc_names {\n-  H_FRC_FR0, H_FRC_FR1, H_FRC_FR2, H_FRC_FR3\n- , H_FRC_FR4, H_FRC_FR5, H_FRC_FR6, H_FRC_FR7\n- , H_FRC_FR8, H_FRC_FR9, H_FRC_FR10, H_FRC_FR11\n- , H_FRC_FR12, H_FRC_FR13, H_FRC_FR14, H_FRC_FR15\n-} FRC_NAMES;\n-\n-/* Enum declaration for .  */\n-typedef enum drc_names {\n-  H_DRC_DR0 = 0, H_DRC_DR2 = 2, H_DRC_DR4 = 4, H_DRC_DR6 = 6\n- , H_DRC_DR8 = 8, H_DRC_DR10 = 10, H_DRC_DR12 = 12, H_DRC_DR14 = 14\n-} DRC_NAMES;\n-\n-/* Enum declaration for .  */\n-typedef enum xf_names {\n-  H_XF_XF0, H_XF_XF1, H_XF_XF2, H_XF_XF3\n- , H_XF_XF4, H_XF_XF5, H_XF_XF6, H_XF_XF7\n- , H_XF_XF8, H_XF_XF9, H_XF_XF10, H_XF_XF11\n- , H_XF_XF12, H_XF_XF13, H_XF_XF14, H_XF_XF15\n-} XF_NAMES;\n-\n-/* Attributes.  */\n-\n-/* Enum declaration for machine type selection.  */\n-typedef enum mach_attr {\n-  MACH_BASE, MACH_SH2, MACH_SH2E, MACH_SH2A_FPU\n- , MACH_SH2A_NOFPU, MACH_SH3, MACH_SH3E, MACH_SH4_NOFPU\n- , MACH_SH4, MACH_SH4A_NOFPU, MACH_SH4A, MACH_SH4AL\n- , MACH_SH5, MACH_MAX\n-} MACH_ATTR;\n-\n-/* Enum declaration for instruction set selection.  */\n-typedef enum isa_attr {\n-  ISA_COMPACT, ISA_MEDIA, ISA_MAX\n-} ISA_ATTR;\n-\n-/* Enum declaration for sh4 insn groups.  */\n-typedef enum sh4_group_attr {\n-  SH4_GROUP_NONE, SH4_GROUP_MT, SH4_GROUP_EX, SH4_GROUP_BR\n- , SH4_GROUP_LS, SH4_GROUP_FE, SH4_GROUP_CO, SH4_GROUP_MAX\n-} SH4_GROUP_ATTR;\n-\n-/* Enum declaration for sh4a insn groups.  */\n-typedef enum sh4a_group_attr {\n-  SH4A_GROUP_NONE, SH4A_GROUP_MT, SH4A_GROUP_EX, SH4A_GROUP_BR\n- , SH4A_GROUP_LS, SH4A_GROUP_FE, SH4A_GROUP_CO, SH4A_GROUP_MAX\n-} SH4A_GROUP_ATTR;\n-\n-/* Number of architecture variants.  */\n-#define MAX_ISAS  ((int) ISA_MAX)\n-#define MAX_MACHS ((int) MACH_MAX)\n-\n-/* Ifield support.  */\n-\n-/* Ifield attribute indices.  */\n-\n-/* Enum declaration for cgen_ifld attrs.  */\n-typedef enum cgen_ifld_attr {\n-  CGEN_IFLD_VIRTUAL, CGEN_IFLD_PCREL_ADDR, CGEN_IFLD_ABS_ADDR, CGEN_IFLD_RESERVED\n- , CGEN_IFLD_SIGN_OPT, CGEN_IFLD_SIGNED, CGEN_IFLD_END_BOOLS, CGEN_IFLD_START_NBOOLS = 31\n- , CGEN_IFLD_MACH, CGEN_IFLD_ISA, CGEN_IFLD_END_NBOOLS\n-} CGEN_IFLD_ATTR;\n-\n-/* Number of non-boolean elements in cgen_ifld_attr.  */\n-#define CGEN_IFLD_NBOOL_ATTRS (CGEN_IFLD_END_NBOOLS - CGEN_IFLD_START_NBOOLS - 1)\n-\n-/* cgen_ifld attribute accessor macros.  */\n-#define CGEN_ATTR_CGEN_IFLD_MACH_VALUE(attrs) ((attrs)->nonbool[CGEN_IFLD_MACH-CGEN_IFLD_START_NBOOLS-1].nonbitset)\n-#define CGEN_ATTR_CGEN_IFLD_ISA_VALUE(attrs) ((attrs)->nonbool[CGEN_IFLD_ISA-CGEN_IFLD_START_NBOOLS-1].bitset)\n-#define CGEN_ATTR_CGEN_IFLD_VIRTUAL_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_IFLD_VIRTUAL)) != 0)\n-#define CGEN_ATTR_CGEN_IFLD_PCREL_ADDR_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_IFLD_PCREL_ADDR)) != 0)\n-#define CGEN_ATTR_CGEN_IFLD_ABS_ADDR_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_IFLD_ABS_ADDR)) != 0)\n-#define CGEN_ATTR_CGEN_IFLD_RESERVED_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_IFLD_RESERVED)) != 0)\n-#define CGEN_ATTR_CGEN_IFLD_SIGN_OPT_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_IFLD_SIGN_OPT)) != 0)\n-#define CGEN_ATTR_CGEN_IFLD_SIGNED_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_IFLD_SIGNED)) != 0)\n-\n-/* Enum declaration for sh ifield types.  */\n-typedef enum ifield_type {\n-  SH_F_NIL, SH_F_ANYOF, SH_F_OP4, SH_F_OP8\n- , SH_F_OP16, SH_F_SUB4, SH_F_SUB8, SH_F_SUB10\n- , SH_F_RN, SH_F_RM, SH_F_7_1, SH_F_11_1\n- , SH_F_16_4, SH_F_DISP8, SH_F_DISP12, SH_F_IMM8\n- , SH_F_IMM4, SH_F_IMM4X2, SH_F_IMM4X4, SH_F_IMM8X2\n- , SH_F_IMM8X4, SH_F_IMM12X4, SH_F_IMM12X8, SH_F_DN\n- , SH_F_DM, SH_F_VN, SH_F_VM, SH_F_XN\n- , SH_F_XM, SH_F_IMM20_HI, SH_F_IMM20_LO, SH_F_IMM20\n- , SH_F_OP, SH_F_EXT, SH_F_RSVD, SH_F_LEFT\n- , SH_F_RIGHT, SH_F_DEST, SH_F_LEFT_RIGHT, SH_F_TRA\n- , SH_F_TRB, SH_F_LIKELY, SH_F_6_3, SH_F_23_2\n- , SH_F_IMM6, SH_F_IMM10, SH_F_IMM16, SH_F_UIMM6\n- , SH_F_UIMM16, SH_F_DISP6, SH_F_DISP6X32, SH_F_DISP10\n- , SH_F_DISP10X8, SH_F_DISP10X4, SH_F_DISP10X2, SH_F_DISP16\n- , SH_F_MAX\n-} IFIELD_TYPE;\n-\n-#define MAX_IFLD ((int) SH_F_MAX)\n-\n-/* Hardware attribute indices.  */\n-\n-/* Enum declaration for cgen_hw attrs.  */\n-typedef enum cgen_hw_attr {\n-  CGEN_HW_VIRTUAL, CGEN_HW_CACHE_ADDR, CGEN_HW_PC, CGEN_HW_PROFILE\n- , CGEN_HW_END_BOOLS, CGEN_HW_START_NBOOLS = 31, CGEN_HW_MACH, CGEN_HW_ISA\n- , CGEN_HW_END_NBOOLS\n-} CGEN_HW_ATTR;\n-\n-/* Number of non-boolean elements in cgen_hw_attr.  */\n-#define CGEN_HW_NBOOL_ATTRS (CGEN_HW_END_NBOOLS - CGEN_HW_START_NBOOLS - 1)\n-\n-/* cgen_hw attribute accessor macros.  */\n-#define CGEN_ATTR_CGEN_HW_MACH_VALUE(attrs) ((attrs)->nonbool[CGEN_HW_MACH-CGEN_HW_START_NBOOLS-1].nonbitset)\n-#define CGEN_ATTR_CGEN_HW_ISA_VALUE(attrs) ((attrs)->nonbool[CGEN_HW_ISA-CGEN_HW_START_NBOOLS-1].bitset)\n-#define CGEN_ATTR_CGEN_HW_VIRTUAL_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_HW_VIRTUAL)) != 0)\n-#define CGEN_ATTR_CGEN_HW_CACHE_ADDR_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_HW_CACHE_ADDR)) != 0)\n-#define CGEN_ATTR_CGEN_HW_PC_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_HW_PC)) != 0)\n-#define CGEN_ATTR_CGEN_HW_PROFILE_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_HW_PROFILE)) != 0)\n-\n-/* Enum declaration for sh hardware types.  */\n-typedef enum cgen_hw_type {\n-  HW_H_MEMORY, HW_H_SINT, HW_H_UINT, HW_H_ADDR\n- , HW_H_IADDR, HW_H_PC, HW_H_GR, HW_H_GRC\n- , HW_H_CR, HW_H_SR, HW_H_FPSCR, HW_H_FRBIT\n- , HW_H_SZBIT, HW_H_PRBIT, HW_H_SBIT, HW_H_MBIT\n- , HW_H_QBIT, HW_H_FR, HW_H_FP, HW_H_FV\n- , HW_H_FMTX, HW_H_DR, HW_H_FSD, HW_H_FMOV\n- , HW_H_TR, HW_H_ENDIAN, HW_H_ISM, HW_H_FRC\n- , HW_H_DRC, HW_H_XF, HW_H_XD, HW_H_FVC\n- , HW_H_GBR, HW_H_VBR, HW_H_PR, HW_H_MACL\n- , HW_H_MACH, HW_H_TBIT, HW_MAX\n-} CGEN_HW_TYPE;\n-\n-#define MAX_HW ((int) HW_MAX)\n-\n-/* Operand attribute indices.  */\n-\n-/* Enum declaration for cgen_operand attrs.  */\n-typedef enum cgen_operand_attr {\n-  CGEN_OPERAND_VIRTUAL, CGEN_OPERAND_PCREL_ADDR, CGEN_OPERAND_ABS_ADDR, CGEN_OPERAND_SIGN_OPT\n- , CGEN_OPERAND_SIGNED, CGEN_OPERAND_NEGATIVE, CGEN_OPERAND_RELAX, CGEN_OPERAND_SEM_ONLY\n- , CGEN_OPERAND_END_BOOLS, CGEN_OPERAND_START_NBOOLS = 31, CGEN_OPERAND_MACH, CGEN_OPERAND_ISA\n- , CGEN_OPERAND_END_NBOOLS\n-} CGEN_OPERAND_ATTR;\n-\n-/* Number of non-boolean elements in cgen_operand_attr.  */\n-#define CGEN_OPERAND_NBOOL_ATTRS (CGEN_OPERAND_END_NBOOLS - CGEN_OPERAND_START_NBOOLS - 1)\n-\n-/* cgen_operand attribute accessor macros.  */\n-#define CGEN_ATTR_CGEN_OPERAND_MACH_VALUE(attrs) ((attrs)->nonbool[CGEN_OPERAND_MACH-CGEN_OPERAND_START_NBOOLS-1].nonbitset)\n-#define CGEN_ATTR_CGEN_OPERAND_ISA_VALUE(attrs) ((attrs)->nonbool[CGEN_OPERAND_ISA-CGEN_OPERAND_START_NBOOLS-1].bitset)\n-#define CGEN_ATTR_CGEN_OPERAND_VIRTUAL_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_OPERAND_VIRTUAL)) != 0)\n-#define CGEN_ATTR_CGEN_OPERAND_PCREL_ADDR_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_OPERAND_PCREL_ADDR)) != 0)\n-#define CGEN_ATTR_CGEN_OPERAND_ABS_ADDR_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_OPERAND_ABS_ADDR)) != 0)\n-#define CGEN_ATTR_CGEN_OPERAND_SIGN_OPT_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_OPERAND_SIGN_OPT)) != 0)\n-#define CGEN_ATTR_CGEN_OPERAND_SIGNED_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_OPERAND_SIGNED)) != 0)\n-#define CGEN_ATTR_CGEN_OPERAND_NEGATIVE_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_OPERAND_NEGATIVE)) != 0)\n-#define CGEN_ATTR_CGEN_OPERAND_RELAX_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_OPERAND_RELAX)) != 0)\n-#define CGEN_ATTR_CGEN_OPERAND_SEM_ONLY_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_OPERAND_SEM_ONLY)) != 0)\n-\n-/* Enum declaration for sh operand types.  */\n-typedef enum cgen_operand_type {\n-  SH_OPERAND_PC, SH_OPERAND_ENDIAN, SH_OPERAND_ISM, SH_OPERAND_RM\n- , SH_OPERAND_RN, SH_OPERAND_R0, SH_OPERAND_FRN, SH_OPERAND_FRM\n- , SH_OPERAND_FR0, SH_OPERAND_FMOVN, SH_OPERAND_FMOVM, SH_OPERAND_FVN\n- , SH_OPERAND_FVM, SH_OPERAND_DRN, SH_OPERAND_DRM, SH_OPERAND_IMM4\n- , SH_OPERAND_IMM8, SH_OPERAND_UIMM8, SH_OPERAND_IMM20, SH_OPERAND_IMM4X2\n- , SH_OPERAND_IMM4X4, SH_OPERAND_IMM8X2, SH_OPERAND_IMM8X4, SH_OPERAND_DISP8\n- , SH_OPERAND_DISP12, SH_OPERAND_IMM12X4, SH_OPERAND_IMM12X8, SH_OPERAND_RM64\n- , SH_OPERAND_RN64, SH_OPERAND_GBR, SH_OPERAND_VBR, SH_OPERAND_PR\n- , SH_OPERAND_FPSCR, SH_OPERAND_TBIT, SH_OPERAND_SBIT, SH_OPERAND_MBIT\n- , SH_OPERAND_QBIT, SH_OPERAND_FPUL, SH_OPERAND_FRBIT, SH_OPERAND_SZBIT\n- , SH_OPERAND_PRBIT, SH_OPERAND_MACL, SH_OPERAND_MACH, SH_OPERAND_FSDM\n- , SH_OPERAND_FSDN, SH_OPERAND_RD, SH_OPERAND_FRG, SH_OPERAND_FRH\n- , SH_OPERAND_FRF, SH_OPERAND_FRGH, SH_OPERAND_FPF, SH_OPERAND_FVG\n- , SH_OPERAND_FVH, SH_OPERAND_FVF, SH_OPERAND_MTRXG, SH_OPERAND_DRG\n- , SH_OPERAND_DRH, SH_OPERAND_DRF, SH_OPERAND_DRGH, SH_OPERAND_CRJ\n- , SH_OPERAND_CRK, SH_OPERAND_TRA, SH_OPERAND_TRB, SH_OPERAND_DISP6\n- , SH_OPERAND_DISP6X32, SH_OPERAND_DISP10, SH_OPERAND_DISP10X2, SH_OPERAND_DISP10X4\n- , SH_OPERAND_DISP10X8, SH_OPERAND_DISP16, SH_OPERAND_IMM6, SH_OPERAND_IMM10\n- , SH_OPERAND_IMM16, SH_OPERAND_UIMM6, SH_OPERAND_UIMM16, SH_OPERAND_LIKELY\n- , SH_OPERAND_MAX\n-} CGEN_OPERAND_TYPE;\n-\n-/* Number of operands types.  */\n-#define MAX_OPERANDS 79\n-\n-/* Maximum number of operands referenced by any insn.  */\n-#define MAX_OPERAND_INSTANCES 8\n-\n-/* Insn attribute indices.  */\n-\n-/* Enum declaration for cgen_insn attrs.  */\n-typedef enum cgen_insn_attr {\n-  CGEN_INSN_ALIAS, CGEN_INSN_VIRTUAL, CGEN_INSN_UNCOND_CTI, CGEN_INSN_COND_CTI\n- , CGEN_INSN_SKIP_CTI, CGEN_INSN_DELAY_SLOT, CGEN_INSN_RELAXABLE, CGEN_INSN_RELAXED\n- , CGEN_INSN_NO_DIS, CGEN_INSN_PBB, CGEN_INSN_ILLSLOT, CGEN_INSN_FP_INSN\n- , CGEN_INSN_32_BIT_INSN, CGEN_INSN_END_BOOLS, CGEN_INSN_START_NBOOLS = 31, CGEN_INSN_MACH\n- , CGEN_INSN_ISA, CGEN_INSN_SH4_GROUP, CGEN_INSN_SH4A_GROUP, CGEN_INSN_END_NBOOLS\n-} CGEN_INSN_ATTR;\n-\n-/* Number of non-boolean elements in cgen_insn_attr.  */\n-#define CGEN_INSN_NBOOL_ATTRS (CGEN_INSN_END_NBOOLS - CGEN_INSN_START_NBOOLS - 1)\n-\n-/* cgen_insn attribute accessor macros.  */\n-#define CGEN_ATTR_CGEN_INSN_MACH_VALUE(attrs) ((attrs)->nonbool[CGEN_INSN_MACH-CGEN_INSN_START_NBOOLS-1].nonbitset)\n-#define CGEN_ATTR_CGEN_INSN_ISA_VALUE(attrs) ((attrs)->nonbool[CGEN_INSN_ISA-CGEN_INSN_START_NBOOLS-1].bitset)\n-#define CGEN_ATTR_CGEN_INSN_SH4_GROUP_VALUE(attrs) ((attrs)->nonbool[CGEN_INSN_SH4_GROUP-CGEN_INSN_START_NBOOLS-1].nonbitset)\n-#define CGEN_ATTR_CGEN_INSN_SH4A_GROUP_VALUE(attrs) ((attrs)->nonbool[CGEN_INSN_SH4A_GROUP-CGEN_INSN_START_NBOOLS-1].nonbitset)\n-#define CGEN_ATTR_CGEN_INSN_ALIAS_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_ALIAS)) != 0)\n-#define CGEN_ATTR_CGEN_INSN_VIRTUAL_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_VIRTUAL)) != 0)\n-#define CGEN_ATTR_CGEN_INSN_UNCOND_CTI_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_UNCOND_CTI)) != 0)\n-#define CGEN_ATTR_CGEN_INSN_COND_CTI_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_COND_CTI)) != 0)\n-#define CGEN_ATTR_CGEN_INSN_SKIP_CTI_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_SKIP_CTI)) != 0)\n-#define CGEN_ATTR_CGEN_INSN_DELAY_SLOT_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_DELAY_SLOT)) != 0)\n-#define CGEN_ATTR_CGEN_INSN_RELAXABLE_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_RELAXABLE)) != 0)\n-#define CGEN_ATTR_CGEN_INSN_RELAXED_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_RELAXED)) != 0)\n-#define CGEN_ATTR_CGEN_INSN_NO_DIS_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_NO_DIS)) != 0)\n-#define CGEN_ATTR_CGEN_INSN_PBB_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_PBB)) != 0)\n-#define CGEN_ATTR_CGEN_INSN_ILLSLOT_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_ILLSLOT)) != 0)\n-#define CGEN_ATTR_CGEN_INSN_FP_INSN_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_FP_INSN)) != 0)\n-#define CGEN_ATTR_CGEN_INSN_32_BIT_INSN_VALUE(attrs) (((attrs)->bool_ & (1 << CGEN_INSN_32_BIT_INSN)) != 0)\n-\n-/* cgen.h uses things we just defined.  */\n-#include \"opcode/cgen.h\"\n-\n-extern const struct cgen_ifld sh_cgen_ifld_table[];\n-\n-/* Attributes.  */\n-extern const CGEN_ATTR_TABLE sh_cgen_hardware_attr_table[];\n-extern const CGEN_ATTR_TABLE sh_cgen_ifield_attr_table[];\n-extern const CGEN_ATTR_TABLE sh_cgen_operand_attr_table[];\n-extern const CGEN_ATTR_TABLE sh_cgen_insn_attr_table[];\n-\n-/* Hardware decls.  */\n-\n-extern CGEN_KEYWORD sh_cgen_opval_h_gr;\n-extern CGEN_KEYWORD sh_cgen_opval_h_grc;\n-extern CGEN_KEYWORD sh_cgen_opval_h_cr;\n-extern CGEN_KEYWORD sh_cgen_opval_h_fr;\n-extern CGEN_KEYWORD sh_cgen_opval_h_fp;\n-extern CGEN_KEYWORD sh_cgen_opval_h_fv;\n-extern CGEN_KEYWORD sh_cgen_opval_h_fmtx;\n-extern CGEN_KEYWORD sh_cgen_opval_h_dr;\n-extern CGEN_KEYWORD sh_cgen_opval_h_fsd;\n-extern CGEN_KEYWORD sh_cgen_opval_h_fmov;\n-extern CGEN_KEYWORD sh_cgen_opval_h_tr;\n-extern CGEN_KEYWORD sh_cgen_opval_frc_names;\n-extern CGEN_KEYWORD sh_cgen_opval_drc_names;\n-extern CGEN_KEYWORD sh_cgen_opval_xf_names;\n-extern CGEN_KEYWORD sh_cgen_opval_frc_names;\n-extern CGEN_KEYWORD sh_cgen_opval_h_fvc;\n-\n-extern const CGEN_HW_ENTRY sh_cgen_hw_table[];\n-\n-\n-\n-#endif /* SH_CPU_H */"
    },
    {
      "sha": "5b5fff942bd1538bb83b283c7c6107819deab85b",
      "filename": "sim/sh64/sh-opc.h",
      "status": "removed",
      "additions": 0,
      "deletions": 214,
      "changes": 214,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sh-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sh-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/sh-opc.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,214 +0,0 @@\n-/* Instruction opcode header for sh.\n-\n-THIS FILE IS MACHINE GENERATED WITH CGEN.\n-\n-Copyright 1996-2021 Free Software Foundation, Inc.\n-\n-This file is part of the GNU Binutils and/or GDB, the GNU debugger.\n-\n-   This file is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   It is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License along\n-   with this program; if not, see <http://www.gnu.org/licenses/>.\n-\n-*/\n-\n-#ifndef SH_OPC_H\n-#define SH_OPC_H\n-\n-/* Enum declaration for sh instruction types.  */\n-typedef enum cgen_insn_type {\n-  SH_INSN_INVALID, SH_INSN_ADD_COMPACT, SH_INSN_ADDI_COMPACT, SH_INSN_ADDC_COMPACT\n- , SH_INSN_ADDV_COMPACT, SH_INSN_AND_COMPACT, SH_INSN_ANDI_COMPACT, SH_INSN_ANDB_COMPACT\n- , SH_INSN_BF_COMPACT, SH_INSN_BFS_COMPACT, SH_INSN_BRA_COMPACT, SH_INSN_BRAF_COMPACT\n- , SH_INSN_BRK_COMPACT, SH_INSN_BSR_COMPACT, SH_INSN_BSRF_COMPACT, SH_INSN_BT_COMPACT\n- , SH_INSN_BTS_COMPACT, SH_INSN_CLRMAC_COMPACT, SH_INSN_CLRS_COMPACT, SH_INSN_CLRT_COMPACT\n- , SH_INSN_CMPEQ_COMPACT, SH_INSN_CMPEQI_COMPACT, SH_INSN_CMPGE_COMPACT, SH_INSN_CMPGT_COMPACT\n- , SH_INSN_CMPHI_COMPACT, SH_INSN_CMPHS_COMPACT, SH_INSN_CMPPL_COMPACT, SH_INSN_CMPPZ_COMPACT\n- , SH_INSN_CMPSTR_COMPACT, SH_INSN_DIV0S_COMPACT, SH_INSN_DIV0U_COMPACT, SH_INSN_DIV1_COMPACT\n- , SH_INSN_DIVU_COMPACT, SH_INSN_MULR_COMPACT, SH_INSN_DMULSL_COMPACT, SH_INSN_DMULUL_COMPACT\n- , SH_INSN_DT_COMPACT, SH_INSN_EXTSB_COMPACT, SH_INSN_EXTSW_COMPACT, SH_INSN_EXTUB_COMPACT\n- , SH_INSN_EXTUW_COMPACT, SH_INSN_FABS_COMPACT, SH_INSN_FADD_COMPACT, SH_INSN_FCMPEQ_COMPACT\n- , SH_INSN_FCMPGT_COMPACT, SH_INSN_FCNVDS_COMPACT, SH_INSN_FCNVSD_COMPACT, SH_INSN_FDIV_COMPACT\n- , SH_INSN_FIPR_COMPACT, SH_INSN_FLDS_COMPACT, SH_INSN_FLDI0_COMPACT, SH_INSN_FLDI1_COMPACT\n- , SH_INSN_FLOAT_COMPACT, SH_INSN_FMAC_COMPACT, SH_INSN_FMOV1_COMPACT, SH_INSN_FMOV2_COMPACT\n- , SH_INSN_FMOV3_COMPACT, SH_INSN_FMOV4_COMPACT, SH_INSN_FMOV5_COMPACT, SH_INSN_FMOV6_COMPACT\n- , SH_INSN_FMOV7_COMPACT, SH_INSN_FMOV8_COMPACT, SH_INSN_FMOV9_COMPACT, SH_INSN_FMUL_COMPACT\n- , SH_INSN_FNEG_COMPACT, SH_INSN_FRCHG_COMPACT, SH_INSN_FSCHG_COMPACT, SH_INSN_FSQRT_COMPACT\n- , SH_INSN_FSTS_COMPACT, SH_INSN_FSUB_COMPACT, SH_INSN_FTRC_COMPACT, SH_INSN_FTRV_COMPACT\n- , SH_INSN_JMP_COMPACT, SH_INSN_JSR_COMPACT, SH_INSN_LDC_GBR_COMPACT, SH_INSN_LDC_VBR_COMPACT\n- , SH_INSN_LDC_SR_COMPACT, SH_INSN_LDCL_GBR_COMPACT, SH_INSN_LDCL_VBR_COMPACT, SH_INSN_LDS_FPSCR_COMPACT\n- , SH_INSN_LDSL_FPSCR_COMPACT, SH_INSN_LDS_FPUL_COMPACT, SH_INSN_LDSL_FPUL_COMPACT, SH_INSN_LDS_MACH_COMPACT\n- , SH_INSN_LDSL_MACH_COMPACT, SH_INSN_LDS_MACL_COMPACT, SH_INSN_LDSL_MACL_COMPACT, SH_INSN_LDS_PR_COMPACT\n- , SH_INSN_LDSL_PR_COMPACT, SH_INSN_MACL_COMPACT, SH_INSN_MACW_COMPACT, SH_INSN_MOV_COMPACT\n- , SH_INSN_MOVI_COMPACT, SH_INSN_MOVI20_COMPACT, SH_INSN_MOVB1_COMPACT, SH_INSN_MOVB2_COMPACT\n- , SH_INSN_MOVB3_COMPACT, SH_INSN_MOVB4_COMPACT, SH_INSN_MOVB5_COMPACT, SH_INSN_MOVB6_COMPACT\n- , SH_INSN_MOVB7_COMPACT, SH_INSN_MOVB8_COMPACT, SH_INSN_MOVB9_COMPACT, SH_INSN_MOVB10_COMPACT\n- , SH_INSN_MOVL1_COMPACT, SH_INSN_MOVL2_COMPACT, SH_INSN_MOVL3_COMPACT, SH_INSN_MOVL4_COMPACT\n- , SH_INSN_MOVL5_COMPACT, SH_INSN_MOVL6_COMPACT, SH_INSN_MOVL7_COMPACT, SH_INSN_MOVL8_COMPACT\n- , SH_INSN_MOVL9_COMPACT, SH_INSN_MOVL10_COMPACT, SH_INSN_MOVL11_COMPACT, SH_INSN_MOVL12_COMPACT\n- , SH_INSN_MOVL13_COMPACT, SH_INSN_MOVW1_COMPACT, SH_INSN_MOVW2_COMPACT, SH_INSN_MOVW3_COMPACT\n- , SH_INSN_MOVW4_COMPACT, SH_INSN_MOVW5_COMPACT, SH_INSN_MOVW6_COMPACT, SH_INSN_MOVW7_COMPACT\n- , SH_INSN_MOVW8_COMPACT, SH_INSN_MOVW9_COMPACT, SH_INSN_MOVW10_COMPACT, SH_INSN_MOVW11_COMPACT\n- , SH_INSN_MOVA_COMPACT, SH_INSN_MOVCAL_COMPACT, SH_INSN_MOVCOL_COMPACT, SH_INSN_MOVT_COMPACT\n- , SH_INSN_MOVUAL_COMPACT, SH_INSN_MOVUAL2_COMPACT, SH_INSN_MULL_COMPACT, SH_INSN_MULSW_COMPACT\n- , SH_INSN_MULUW_COMPACT, SH_INSN_NEG_COMPACT, SH_INSN_NEGC_COMPACT, SH_INSN_NOP_COMPACT\n- , SH_INSN_NOT_COMPACT, SH_INSN_OCBI_COMPACT, SH_INSN_OCBP_COMPACT, SH_INSN_OCBWB_COMPACT\n- , SH_INSN_OR_COMPACT, SH_INSN_ORI_COMPACT, SH_INSN_ORB_COMPACT, SH_INSN_PREF_COMPACT\n- , SH_INSN_ROTCL_COMPACT, SH_INSN_ROTCR_COMPACT, SH_INSN_ROTL_COMPACT, SH_INSN_ROTR_COMPACT\n- , SH_INSN_RTS_COMPACT, SH_INSN_SETS_COMPACT, SH_INSN_SETT_COMPACT, SH_INSN_SHAD_COMPACT\n- , SH_INSN_SHAL_COMPACT, SH_INSN_SHAR_COMPACT, SH_INSN_SHLD_COMPACT, SH_INSN_SHLL_COMPACT\n- , SH_INSN_SHLL2_COMPACT, SH_INSN_SHLL8_COMPACT, SH_INSN_SHLL16_COMPACT, SH_INSN_SHLR_COMPACT\n- , SH_INSN_SHLR2_COMPACT, SH_INSN_SHLR8_COMPACT, SH_INSN_SHLR16_COMPACT, SH_INSN_STC_GBR_COMPACT\n- , SH_INSN_STC_VBR_COMPACT, SH_INSN_STCL_GBR_COMPACT, SH_INSN_STCL_VBR_COMPACT, SH_INSN_STS_FPSCR_COMPACT\n- , SH_INSN_STSL_FPSCR_COMPACT, SH_INSN_STS_FPUL_COMPACT, SH_INSN_STSL_FPUL_COMPACT, SH_INSN_STS_MACH_COMPACT\n- , SH_INSN_STSL_MACH_COMPACT, SH_INSN_STS_MACL_COMPACT, SH_INSN_STSL_MACL_COMPACT, SH_INSN_STS_PR_COMPACT\n- , SH_INSN_STSL_PR_COMPACT, SH_INSN_SUB_COMPACT, SH_INSN_SUBC_COMPACT, SH_INSN_SUBV_COMPACT\n- , SH_INSN_SWAPB_COMPACT, SH_INSN_SWAPW_COMPACT, SH_INSN_TASB_COMPACT, SH_INSN_TRAPA_COMPACT\n- , SH_INSN_TST_COMPACT, SH_INSN_TSTI_COMPACT, SH_INSN_TSTB_COMPACT, SH_INSN_XOR_COMPACT\n- , SH_INSN_XORI_COMPACT, SH_INSN_XORB_COMPACT, SH_INSN_XTRCT_COMPACT, SH_INSN_ADD\n- , SH_INSN_ADDL, SH_INSN_ADDI, SH_INSN_ADDIL, SH_INSN_ADDZL\n- , SH_INSN_ALLOCO, SH_INSN_AND, SH_INSN_ANDC, SH_INSN_ANDI\n- , SH_INSN_BEQ, SH_INSN_BEQI, SH_INSN_BGE, SH_INSN_BGEU\n- , SH_INSN_BGT, SH_INSN_BGTU, SH_INSN_BLINK, SH_INSN_BNE\n- , SH_INSN_BNEI, SH_INSN_BRK, SH_INSN_BYTEREV, SH_INSN_CMPEQ\n- , SH_INSN_CMPGT, SH_INSN_CMPGTU, SH_INSN_CMVEQ, SH_INSN_CMVNE\n- , SH_INSN_FABSD, SH_INSN_FABSS, SH_INSN_FADDD, SH_INSN_FADDS\n- , SH_INSN_FCMPEQD, SH_INSN_FCMPEQS, SH_INSN_FCMPGED, SH_INSN_FCMPGES\n- , SH_INSN_FCMPGTD, SH_INSN_FCMPGTS, SH_INSN_FCMPUND, SH_INSN_FCMPUNS\n- , SH_INSN_FCNVDS, SH_INSN_FCNVSD, SH_INSN_FDIVD, SH_INSN_FDIVS\n- , SH_INSN_FGETSCR, SH_INSN_FIPRS, SH_INSN_FLDD, SH_INSN_FLDP\n- , SH_INSN_FLDS, SH_INSN_FLDXD, SH_INSN_FLDXP, SH_INSN_FLDXS\n- , SH_INSN_FLOATLD, SH_INSN_FLOATLS, SH_INSN_FLOATQD, SH_INSN_FLOATQS\n- , SH_INSN_FMACS, SH_INSN_FMOVD, SH_INSN_FMOVDQ, SH_INSN_FMOVLS\n- , SH_INSN_FMOVQD, SH_INSN_FMOVS, SH_INSN_FMOVSL, SH_INSN_FMULD\n- , SH_INSN_FMULS, SH_INSN_FNEGD, SH_INSN_FNEGS, SH_INSN_FPUTSCR\n- , SH_INSN_FSQRTD, SH_INSN_FSQRTS, SH_INSN_FSTD, SH_INSN_FSTP\n- , SH_INSN_FSTS, SH_INSN_FSTXD, SH_INSN_FSTXP, SH_INSN_FSTXS\n- , SH_INSN_FSUBD, SH_INSN_FSUBS, SH_INSN_FTRCDL, SH_INSN_FTRCSL\n- , SH_INSN_FTRCDQ, SH_INSN_FTRCSQ, SH_INSN_FTRVS, SH_INSN_GETCFG\n- , SH_INSN_GETCON, SH_INSN_GETTR, SH_INSN_ICBI, SH_INSN_LDB\n- , SH_INSN_LDL, SH_INSN_LDQ, SH_INSN_LDUB, SH_INSN_LDUW\n- , SH_INSN_LDW, SH_INSN_LDHIL, SH_INSN_LDHIQ, SH_INSN_LDLOL\n- , SH_INSN_LDLOQ, SH_INSN_LDXB, SH_INSN_LDXL, SH_INSN_LDXQ\n- , SH_INSN_LDXUB, SH_INSN_LDXUW, SH_INSN_LDXW, SH_INSN_MABSL\n- , SH_INSN_MABSW, SH_INSN_MADDL, SH_INSN_MADDW, SH_INSN_MADDSL\n- , SH_INSN_MADDSUB, SH_INSN_MADDSW, SH_INSN_MCMPEQB, SH_INSN_MCMPEQL\n- , SH_INSN_MCMPEQW, SH_INSN_MCMPGTL, SH_INSN_MCMPGTUB, SH_INSN_MCMPGTW\n- , SH_INSN_MCMV, SH_INSN_MCNVSLW, SH_INSN_MCNVSWB, SH_INSN_MCNVSWUB\n- , SH_INSN_MEXTR1, SH_INSN_MEXTR2, SH_INSN_MEXTR3, SH_INSN_MEXTR4\n- , SH_INSN_MEXTR5, SH_INSN_MEXTR6, SH_INSN_MEXTR7, SH_INSN_MMACFXWL\n- , SH_INSN_MMACNFX_WL, SH_INSN_MMULL, SH_INSN_MMULW, SH_INSN_MMULFXL\n- , SH_INSN_MMULFXW, SH_INSN_MMULFXRPW, SH_INSN_MMULHIWL, SH_INSN_MMULLOWL\n- , SH_INSN_MMULSUMWQ, SH_INSN_MOVI, SH_INSN_MPERMW, SH_INSN_MSADUBQ\n- , SH_INSN_MSHALDSL, SH_INSN_MSHALDSW, SH_INSN_MSHARDL, SH_INSN_MSHARDW\n- , SH_INSN_MSHARDSQ, SH_INSN_MSHFHIB, SH_INSN_MSHFHIL, SH_INSN_MSHFHIW\n- , SH_INSN_MSHFLOB, SH_INSN_MSHFLOL, SH_INSN_MSHFLOW, SH_INSN_MSHLLDL\n- , SH_INSN_MSHLLDW, SH_INSN_MSHLRDL, SH_INSN_MSHLRDW, SH_INSN_MSUBL\n- , SH_INSN_MSUBW, SH_INSN_MSUBSL, SH_INSN_MSUBSUB, SH_INSN_MSUBSW\n- , SH_INSN_MULSL, SH_INSN_MULUL, SH_INSN_NOP, SH_INSN_NSB\n- , SH_INSN_OCBI, SH_INSN_OCBP, SH_INSN_OCBWB, SH_INSN_OR\n- , SH_INSN_ORI, SH_INSN_PREFI, SH_INSN_PTA, SH_INSN_PTABS\n- , SH_INSN_PTB, SH_INSN_PTREL, SH_INSN_PUTCFG, SH_INSN_PUTCON\n- , SH_INSN_RTE, SH_INSN_SHARD, SH_INSN_SHARDL, SH_INSN_SHARI\n- , SH_INSN_SHARIL, SH_INSN_SHLLD, SH_INSN_SHLLDL, SH_INSN_SHLLI\n- , SH_INSN_SHLLIL, SH_INSN_SHLRD, SH_INSN_SHLRDL, SH_INSN_SHLRI\n- , SH_INSN_SHLRIL, SH_INSN_SHORI, SH_INSN_SLEEP, SH_INSN_STB\n- , SH_INSN_STL, SH_INSN_STQ, SH_INSN_STW, SH_INSN_STHIL\n- , SH_INSN_STHIQ, SH_INSN_STLOL, SH_INSN_STLOQ, SH_INSN_STXB\n- , SH_INSN_STXL, SH_INSN_STXQ, SH_INSN_STXW, SH_INSN_SUB\n- , SH_INSN_SUBL, SH_INSN_SWAPQ, SH_INSN_SYNCI, SH_INSN_SYNCO\n- , SH_INSN_TRAPA, SH_INSN_XOR, SH_INSN_XORI\n-} CGEN_INSN_TYPE;\n-\n-/* Index of `invalid' insn place holder.  */\n-#define CGEN_INSN_INVALID SH_INSN_INVALID\n-\n-/* Total number of insns in table.  */\n-#define MAX_INSNS ((int) SH_INSN_XORI + 1)\n-\n-/* This struct records data prior to insertion or after extraction.  */\n-struct cgen_fields\n-{\n-  int length;\n-  long f_nil;\n-  long f_anyof;\n-  long f_op4;\n-  long f_op8;\n-  long f_op16;\n-  long f_sub4;\n-  long f_sub8;\n-  long f_sub10;\n-  long f_rn;\n-  long f_rm;\n-  long f_7_1;\n-  long f_11_1;\n-  long f_16_4;\n-  long f_disp8;\n-  long f_disp12;\n-  long f_imm8;\n-  long f_imm4;\n-  long f_imm4x2;\n-  long f_imm4x4;\n-  long f_imm8x2;\n-  long f_imm8x4;\n-  long f_imm12x4;\n-  long f_imm12x8;\n-  long f_dn;\n-  long f_dm;\n-  long f_vn;\n-  long f_vm;\n-  long f_xn;\n-  long f_xm;\n-  long f_imm20_hi;\n-  long f_imm20_lo;\n-  long f_imm20;\n-  long f_op;\n-  long f_ext;\n-  long f_rsvd;\n-  long f_left;\n-  long f_right;\n-  long f_dest;\n-  long f_left_right;\n-  long f_tra;\n-  long f_trb;\n-  long f_likely;\n-  long f_6_3;\n-  long f_23_2;\n-  long f_imm6;\n-  long f_imm10;\n-  long f_imm16;\n-  long f_uimm6;\n-  long f_uimm16;\n-  long f_disp6;\n-  long f_disp6x32;\n-  long f_disp10;\n-  long f_disp10x8;\n-  long f_disp10x4;\n-  long f_disp10x2;\n-  long f_disp16;\n-};\n-\n-#define CGEN_INIT_PARSE(od) \\\n-{\\\n-}\n-#define CGEN_INIT_INSERT(od) \\\n-{\\\n-}\n-#define CGEN_INIT_EXTRACT(od) \\\n-{\\\n-}\n-#define CGEN_INIT_PRINT(od) \\\n-{\\\n-}\n-\n-\n-#endif /* SH_OPC_H */"
    },
    {
      "sha": "ffcb88d6def5032781ec470edaa7411b6e5b0ac3",
      "filename": "sim/sh64/sh64-sim.h",
      "status": "removed",
      "additions": 0,
      "deletions": 84,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sh64-sim.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sh64-sim.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/sh64-sim.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,84 +0,0 @@\n-/* collection of junk waiting time to sort out\n-   Copyright (C) 2000-2021 Free Software Foundation, Inc.\n-   Contributed by Red Hat, Inc.\n-\n-This file is part of the GNU Simulators.\n-\n-This program is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3 of the License, or\n-(at your option) any later version.\n-\n-This program is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n-\n-#ifndef SH64_SIM_H\n-#define SH64_SIM_H\n-\n-enum {\n-  ISM_COMPACT, ISM_MEDIA\n-};\n-\n-extern IDESC * sh64_idesc_media;\n-extern IDESC * sh64_idesc_compact;\n-\n-/* Function prototypes from sh64.c.  */\n-\n-BI sh64_endian (SIM_CPU *);\n-VOID sh64_break (SIM_CPU *, PCADDR);\n-SI sh64_movua (SIM_CPU *, PCADDR, SI);\n-VOID sh64_trapa (SIM_CPU *, DI, PCADDR);\n-VOID sh64_compact_trapa (SIM_CPU *, UQI, PCADDR);\n-\n-SF sh64_fldi0 (SIM_CPU *);\n-SF sh64_fldi1 (SIM_CPU *);\n-DF sh64_fcnvsd (SIM_CPU *, SF);\n-SF sh64_fcnvds (SIM_CPU *, DF);\n-\n-DF sh64_fabsd (SIM_CPU *, DF);\n-SF sh64_fabss (SIM_CPU *, SF);\n-DF sh64_faddd (SIM_CPU *, DF, DF);\n-SF sh64_fadds (SIM_CPU *, SF, SF);\n-DF sh64_fdivd (SIM_CPU *, DF, DF);\n-SF sh64_fdivs (SIM_CPU *, SF, SF);\n-DF sh64_floatld (SIM_CPU *, SF);\n-SF sh64_floatls (SIM_CPU *, SF);\n-DF sh64_floatqd (SIM_CPU *, DF);\n-SF sh64_floatqs (SIM_CPU *, DF);\n-SF sh64_fmacs(SIM_CPU *, SF, SF, SF);\n-DF sh64_fmuld (SIM_CPU *, DF, DF);\n-SF sh64_fmuls (SIM_CPU *, SF, SF);\n-DF sh64_fnegd (SIM_CPU *, DF);\n-SF sh64_fnegs (SIM_CPU *, SF);\n-DF sh64_fsqrtd (SIM_CPU *, DF);\n-SF sh64_fsqrts (SIM_CPU *, SF);\n-DF sh64_fsubd (SIM_CPU *, DF, DF);\n-SF sh64_fsubs (SIM_CPU *, SF, SF);\n-SF sh64_ftrcdl (SIM_CPU *, DF);\n-DF sh64_ftrcdq (SIM_CPU *, DF);\n-SF sh64_ftrcsl (SIM_CPU *, SF);\n-DF sh64_ftrcsq (SIM_CPU *, SF);\n-VOID sh64_ftrvs (SIM_CPU *, unsigned, unsigned, unsigned);\n-VOID sh64_fipr (SIM_CPU *cpu, unsigned m, unsigned n);\n-SF sh64_fiprs (SIM_CPU *cpu, unsigned g, unsigned h);\n-VOID sh64_fldp (SIM_CPU *cpu, PCADDR pc, DI rm, DI rn, unsigned f);\n-VOID sh64_fstp (SIM_CPU *cpu, PCADDR pc, DI rm, DI rn, unsigned f);\n-VOID sh64_ftrv (SIM_CPU *cpu, UINT ignored);\n-VOID sh64_pref (SIM_CPU *cpu, SI addr);\n-BI sh64_fcmpeqs (SIM_CPU *, SF, SF);\n-BI sh64_fcmpeqd (SIM_CPU *, DF, DF);\n-BI sh64_fcmpges (SIM_CPU *, SF, SF);\n-BI sh64_fcmpged (SIM_CPU *, DF, DF);\n-BI sh64_fcmpgts (SIM_CPU *, SF, SF);\n-BI sh64_fcmpgtd (SIM_CPU *, DF, DF);\n-BI sh64_fcmpund (SIM_CPU *, DF, DF);\n-BI sh64_fcmpuns (SIM_CPU *, SF, SF);\n-\n-DI sh64_nsb (SIM_CPU *, DI);\n-\n-#endif /* SH64_SIM_H */"
    },
    {
      "sha": "f248f3cac324a3f25b8ae155b6c1cc633a71cf5e",
      "filename": "sim/sh64/sh64.c",
      "status": "removed",
      "additions": 0,
      "deletions": 1138,
      "changes": 1138,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sh64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sh64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/sh64.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,1138 +0,0 @@\n-/* SH5 simulator support code\n-   Copyright (C) 2000-2021 Free Software Foundation, Inc.\n-   Contributed by Red Hat, Inc.\n-\n-This file is part of the GNU simulators.\n-\n-This program is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3 of the License, or\n-(at your option) any later version.\n-\n-This program is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n-\n-#define WANT_CPU\n-#define WANT_CPU_SH64\n-\n-#include \"sim-main.h\"\n-#include \"sim-fpu.h\"\n-#include \"cgen-mem.h\"\n-#include \"cgen-ops.h\"\n-\n-#include \"gdb/callback.h\"\n-#include \"defs-compact.h\"\n-\n-#include \"bfd.h\"\n-/* From include/gdb/.  */\n-#include \"gdb/sim-sh.h\"\n-\n-#define SYS_exit        1\n-#define\tSYS_read\t3\n-#define SYS_write       4\n-#define\tSYS_open\t5\n-#define\tSYS_close\t6\n-#define\tSYS_lseek\t19\n-#define\tSYS_time\t23\n-#define\tSYS_argc\t172\n-#define\tSYS_argnlen\t173\n-#define\tSYS_argn\t174\n-\n-IDESC * sh64_idesc_media;\n-IDESC * sh64_idesc_compact;\n-\n-BI\n-sh64_endian (SIM_CPU *current_cpu)\n-{\n-  return (CURRENT_TARGET_BYTE_ORDER == BIG_ENDIAN);\n-}\n-\n-SF\n-sh64_fldi0 (SIM_CPU *current_cpu)\n-{\n-  SF result;\n-  sim_fpu_to32 (&result, &sim_fpu_zero);\n-  return result;\n-}\n-\n-SF\n-sh64_fldi1 (SIM_CPU *current_cpu)\n-{\n-  SF result;\n-  sim_fpu_to32 (&result, &sim_fpu_one);\n-  return result;\n-}\n-\n-DF\n-sh64_fabsd(SIM_CPU *current_cpu, DF drgh)\n-{\n-  DF result;\n-  sim_fpu f, fres;\n-\n-  sim_fpu_64to (&f, drgh);\n-  sim_fpu_abs (&fres, &f);\n-  sim_fpu_to64 (&result, &fres);\n-  return result;\n-}\n-\n-SF\n-sh64_fabss(SIM_CPU *current_cpu, SF frgh)\n-{\n-  SF result;\n-  sim_fpu f, fres;\n-\n-  sim_fpu_32to (&f, frgh);\n-  sim_fpu_abs (&fres, &f);\n-  sim_fpu_to32 (&result, &fres);\n-  return result;\n-}\n-\n-DF\n-sh64_faddd(SIM_CPU *current_cpu, DF drg, DF drh)\n-{\n-  DF result;\n-  sim_fpu f1, f2, fres;\n-\n-  sim_fpu_64to (&f1, drg);\n-  sim_fpu_64to (&f2, drh);\n-  sim_fpu_add (&fres, &f1, &f2);\n-  sim_fpu_to64 (&result, &fres);\n-  return result;\n-}\n-\n-SF\n-sh64_fadds(SIM_CPU *current_cpu, SF frg, SF frh)\n-{\n-  SF result;\n-  sim_fpu f1, f2, fres;\n-\n-  sim_fpu_32to (&f1, frg);\n-  sim_fpu_32to (&f2, frh);\n-  sim_fpu_add (&fres, &f1, &f2);\n-  sim_fpu_to32 (&result, &fres);\n-  return result;\n-}\n-\n-BI\n-sh64_fcmpeqd(SIM_CPU *current_cpu, DF drg, DF drh)\n-{\n-  sim_fpu f1, f2;\n-\n-  sim_fpu_64to (&f1, drg);\n-  sim_fpu_64to (&f2, drh);\n-  return sim_fpu_is_eq (&f1, &f2);\n-}\n-\n-BI\n-sh64_fcmpeqs(SIM_CPU *current_cpu, SF frg, SF frh)\n-{\n-  sim_fpu f1, f2;\n-\n-  sim_fpu_32to (&f1, frg);\n-  sim_fpu_32to (&f2, frh);\n-  return sim_fpu_is_eq (&f1, &f2);\n-}\n-\n-BI\n-sh64_fcmpged(SIM_CPU *current_cpu, DF drg, DF drh)\n-{\n-  sim_fpu f1, f2;\n-\n-  sim_fpu_64to (&f1, drg);\n-  sim_fpu_64to (&f2, drh);\n-  return sim_fpu_is_ge (&f1, &f2);\n-}\n-\n-BI\n-sh64_fcmpges(SIM_CPU *current_cpu, SF frg, SF frh)\n-{\n-  sim_fpu f1, f2;\n-\n-  sim_fpu_32to (&f1, frg);\n-  sim_fpu_32to (&f2, frh);\n-  return sim_fpu_is_ge (&f1, &f2);\n-}\n-\n-BI\n-sh64_fcmpgtd(SIM_CPU *current_cpu, DF drg, DF drh)\n-{\n-  sim_fpu f1, f2;\n-\n-  sim_fpu_64to (&f1, drg);\n-  sim_fpu_64to (&f2, drh);\n-  return sim_fpu_is_gt (&f1, &f2);\n-}\n-\n-BI\n-sh64_fcmpgts(SIM_CPU *current_cpu, SF frg, SF frh)\n-{\n-  sim_fpu f1, f2;\n-\n-  sim_fpu_32to (&f1, frg);\n-  sim_fpu_32to (&f2, frh);\n-  return sim_fpu_is_gt (&f1, &f2);\n-}\n-\n-BI\n-sh64_fcmpund(SIM_CPU *current_cpu, DF drg, DF drh)\n-{\n-  sim_fpu f1, f2;\n-\n-  sim_fpu_64to (&f1, drg);\n-  sim_fpu_64to (&f2, drh);\n-  return (sim_fpu_is_nan (&f1) || sim_fpu_is_nan (&f2));\n-}\n-\n-BI\n-sh64_fcmpuns(SIM_CPU *current_cpu, SF frg, SF frh)\n-{\n-  sim_fpu f1, f2;\n-\n-  sim_fpu_32to (&f1, frg);\n-  sim_fpu_32to (&f2, frh); \n-  return (sim_fpu_is_nan (&f1) || sim_fpu_is_nan (&f2));\n-}  \n-\n-SF\n-sh64_fcnvds(SIM_CPU *current_cpu, DF drgh)\n-{\n-  union {\n-    unsigned long long ll;\n-    double d;\n-  } f1;\n-\n-  union {\n-    unsigned long l;\n-    float f;\n-  } f2;\n-\n-  f1.ll = drgh;\n-  f2.f = (float) f1.d;\n-  \n-  return (SF) f2.l;\n-}\n-\n-DF\n-sh64_fcnvsd(SIM_CPU *current_cpu, SF frgh)\n-{\n-  DF result;\n-  sim_fpu f;\n-\n-  sim_fpu_32to (&f, frgh);\n-  sim_fpu_to64 (&result, &f);\n-  return result;\n-}\n-\n-DF\n-sh64_fdivd(SIM_CPU *current_cpu, DF drg, DF drh)\n-{\n-  DF result;\n-  sim_fpu f1, f2, fres;\n-\n-  sim_fpu_64to (&f1, drg);\n-  sim_fpu_64to (&f2, drh);\n-  sim_fpu_div (&fres, &f1, &f2);\n-  sim_fpu_to64 (&result, &fres);\n-  return result;\n-}\n-\n-SF\n-sh64_fdivs(SIM_CPU *current_cpu, SF frg, SF frh)\n-{\n-  SF result;\n-  sim_fpu f1, f2, fres;\n-\n-  sim_fpu_32to (&f1, frg);\n-  sim_fpu_32to (&f2, frh);\n-  sim_fpu_div (&fres, &f1, &f2);\n-  sim_fpu_to32 (&result, &fres);\n-  return result;\n-}\n-\n-DF\n-sh64_floatld(SIM_CPU *current_cpu, SF frgh)\n-{\n-  DF result;\n-  sim_fpu f;\n-\n-  sim_fpu_i32to (&f, frgh, sim_fpu_round_default); \n-  sim_fpu_to64 (&result, &f);\n-  return result;\n-}\n-\n-SF\n-sh64_floatls(SIM_CPU *current_cpu, SF frgh)\n-{\n-  SF result;\n-  sim_fpu f;\n-\n-  sim_fpu_i32to (&f, frgh, sim_fpu_round_default);\n-  sim_fpu_to32 (&result, &f);\n-  return result;\n-}\n-\n-DF\n-sh64_floatqd(SIM_CPU *current_cpu, DF drgh)\n-{\n-  DF result;\n-  sim_fpu f;\n-\n-  sim_fpu_i64to (&f, drgh, sim_fpu_round_default);\n-  sim_fpu_to64 (&result, &f);\n-  return result;\n-}\n-\n-SF\n-sh64_floatqs(SIM_CPU *current_cpu, DF drgh)\n-{\n-  SF result;\n-  sim_fpu f;\n-\n-  sim_fpu_i64to (&f, drgh, sim_fpu_round_default);\n-  sim_fpu_to32 (&result, &f);\n-  return result;\n-}\n-\n-SF\n-sh64_fmacs(SIM_CPU *current_cpu, SF fr0, SF frm, SF frn)\n-{\n-  SF result;\n-  sim_fpu m1, m2, a1, fres;\n-\n-  sim_fpu_32to (&m1, fr0);\n-  sim_fpu_32to (&m2, frm);\n-  sim_fpu_32to (&a1, frn);\n-\n-  sim_fpu_mul (&fres, &m1, &m2);\n-  sim_fpu_add (&fres, &fres, &a1);\n-  \n-  sim_fpu_to32 (&result, &fres);\n-  return result;\n-}\n-\n-DF\n-sh64_fmuld(SIM_CPU *current_cpu, DF drg, DF drh)\n-{\n-  DF result;\n-  sim_fpu f1, f2, fres;\n-\n-  sim_fpu_64to (&f1, drg);\n-  sim_fpu_64to (&f2, drh);\n-  sim_fpu_mul (&fres, &f1, &f2);\n-  sim_fpu_to64 (&result, &fres);\n-  return result;\n-}\n-\n-SF\n-sh64_fmuls(SIM_CPU *current_cpu, SF frg, SF frh)\n-{\n-  SF result;\n-  sim_fpu f1, f2, fres;\n-\n-  sim_fpu_32to (&f1, frg);\n-  sim_fpu_32to (&f2, frh);\n-  sim_fpu_mul (&fres, &f1, &f2);\n-  sim_fpu_to32 (&result, &fres);\n-  return result;\n-}\n-\n-DF\n-sh64_fnegd(SIM_CPU *current_cpu, DF drgh)\n-{\n-  DF result;\n-  sim_fpu f1, f2;\n-\n-  sim_fpu_64to (&f1, drgh);\n-  sim_fpu_neg (&f2, &f1);\n-  sim_fpu_to64 (&result, &f2);\n-  return result;\n-}\n-\n-SF\n-sh64_fnegs(SIM_CPU *current_cpu, SF frgh)\n-{\n-  SF result;\n-  sim_fpu f, fres;\n-\n-  sim_fpu_32to (&f, frgh);\n-  sim_fpu_neg (&fres, &f);\n-  sim_fpu_to32 (&result, &fres);\n-  return result;\n-}\n-\n-DF\n-sh64_fsqrtd(SIM_CPU *current_cpu, DF drgh)\n-{\n-  DF result;\n-  sim_fpu f, fres;\n-\n-  sim_fpu_64to (&f, drgh);\n-  sim_fpu_sqrt (&fres, &f);\n-  sim_fpu_to64 (&result, &fres);\n-  return result;\n-}\n-\n-SF\n-sh64_fsqrts(SIM_CPU *current_cpu, SF frgh)\n-{\n-  SF result;\n-  sim_fpu f, fres;\n-\n-  sim_fpu_32to (&f, frgh);\n-  sim_fpu_sqrt (&fres, &f);\n-  sim_fpu_to32 (&result, &fres);\n-  return result;\n-}\n-\n-DF\n-sh64_fsubd(SIM_CPU *current_cpu, DF drg, DF drh)\n-{\n-  DF result;\n-  sim_fpu f1, f2, fres;\n-\n-  sim_fpu_64to (&f1, drg);\n-  sim_fpu_64to (&f2, drh);\n-  sim_fpu_sub (&fres, &f1, &f2);\n-  sim_fpu_to64 (&result, &fres);\n-  return result;\n-}\n-\n-SF\n-sh64_fsubs(SIM_CPU *current_cpu, SF frg, SF frh)\n-{\n-  SF result;\n-  sim_fpu f1, f2, fres;\n-\n-  sim_fpu_32to (&f1, frg);\n-  sim_fpu_32to (&f2, frh);\n-  sim_fpu_sub (&fres, &f1, &f2);\n-  sim_fpu_to32 (&result, &fres);\n-  return result;\n-}\n-\n-SF\n-sh64_ftrcdl(SIM_CPU *current_cpu, DF drgh)\n-{\n-  SI result;\n-  sim_fpu f;\n-\n-  sim_fpu_64to (&f, drgh);\n-  sim_fpu_to32i (&result, &f, sim_fpu_round_zero);\n-  return (SF) result;\n-}\n-\n-SF\n-sh64_ftrcsl(SIM_CPU *current_cpu, SF frgh)\n-{\n-  SI result;\n-  sim_fpu f;\n-\n-  sim_fpu_32to (&f, frgh);\n-  sim_fpu_to32i (&result, &f, sim_fpu_round_zero);\n-  return (SF) result;\n-}\n-\n-DF\n-sh64_ftrcdq(SIM_CPU *current_cpu, DF drgh)\n-{\n-  DI result;\n-  sim_fpu f;\n-\n-  sim_fpu_64to (&f, drgh);\n-  sim_fpu_to64i (&result, &f, sim_fpu_round_zero);\n-  return (DF) result;\n-}\n-\n-DF\n-sh64_ftrcsq(SIM_CPU *current_cpu, SF frgh)\n-{\n-  DI result;\n-  sim_fpu f;\n-\n-  sim_fpu_32to (&f, frgh);\n-  sim_fpu_to64i (&result, &f, sim_fpu_round_zero);\n-  return (DF) result;\n-}\n-\n-VOID\n-sh64_ftrvs(SIM_CPU *cpu, unsigned g, unsigned h, unsigned f)\n-{\n-  int i, j;\n-\n-  for (i = 0; i < 4; i++)\n-    {\n-      SF result;\n-      sim_fpu sum;\n-      sim_fpu_32to (&sum, 0);\n-\n-      for (j = 0; j < 4; j++)\n-\t{\n-\t  sim_fpu f1, f2, temp;\n-\t  sim_fpu_32to (&f1, sh64_h_fr_get (cpu, (g + i) + (j * 4)));\n-\t  sim_fpu_32to (&f2, sh64_h_fr_get (cpu, h + j));\n-\t  sim_fpu_mul (&temp, &f1, &f2);\n-\t  sim_fpu_add (&sum, &sum, &temp);\n-\t}\n-      sim_fpu_to32 (&result, &sum);\n-      sh64_h_fr_set (cpu, f + i, result);\n-    }\n-}\n-\n-VOID\n-sh64_fipr (SIM_CPU *cpu, unsigned m, unsigned n)\n-{\n-  SF result = sh64_fmuls (cpu, sh64_h_fvc_get (cpu, m), sh64_h_fvc_get (cpu, n));\n-  result = sh64_fadds (cpu, result, sh64_fmuls (cpu, sh64_h_frc_get (cpu, m + 1), sh64_h_frc_get (cpu, n + 1)));\n-  result = sh64_fadds (cpu, result, sh64_fmuls (cpu, sh64_h_frc_get (cpu, m + 2), sh64_h_frc_get (cpu, n + 2)));\n-  result = sh64_fadds (cpu, result, sh64_fmuls (cpu, sh64_h_frc_get (cpu, m + 3), sh64_h_frc_get (cpu, n + 3)));\n-  sh64_h_frc_set (cpu, n + 3, result);\n-}\n-\n-SF\n-sh64_fiprs (SIM_CPU *cpu, unsigned g, unsigned h)\n-{\n-  SF temp = sh64_fmuls (cpu, sh64_h_fr_get (cpu, g), sh64_h_fr_get (cpu, h));\n-  temp = sh64_fadds (cpu, temp, sh64_fmuls (cpu, sh64_h_fr_get (cpu, g + 1), sh64_h_fr_get (cpu, h + 1)));\n-  temp = sh64_fadds (cpu, temp, sh64_fmuls (cpu, sh64_h_fr_get (cpu, g + 2), sh64_h_fr_get (cpu, h + 2)));\n-  temp = sh64_fadds (cpu, temp, sh64_fmuls (cpu, sh64_h_fr_get (cpu, g + 3), sh64_h_fr_get (cpu, h + 3)));\n-  return temp;\n-}\n-\n-VOID\n-sh64_fldp (SIM_CPU *cpu, PCADDR pc, DI rm, DI rn, unsigned f)\n-{\n-  sh64_h_fr_set (cpu, f,     GETMEMSF (cpu, pc, rm + rn));\n-  sh64_h_fr_set (cpu, f + 1, GETMEMSF (cpu, pc, rm + rn + 4));\n-}\n-\n-VOID\n-sh64_fstp (SIM_CPU *cpu, PCADDR pc, DI rm, DI rn, unsigned f)\n-{\n-  SETMEMSF (cpu, pc, rm + rn,     sh64_h_fr_get (cpu, f));\n-  SETMEMSF (cpu, pc, rm + rn + 4, sh64_h_fr_get (cpu, f + 1));\n-}\n-\n-VOID\n-sh64_ftrv (SIM_CPU *cpu, UINT ignored)\n-{\n-  /* TODO: Unimplemented.  */\n-}\n-\n-VOID\n-sh64_pref (SIM_CPU *cpu, SI addr)\n-{\n-  /* TODO: Unimplemented.  */\n-}\n-\n-/* Read a null terminated string from memory, return in a buffer */\n-static char *\n-fetch_str (current_cpu, pc, addr)\n-     SIM_CPU *current_cpu;\n-     PCADDR pc;\n-     DI addr;\n-{\n-  char *buf;\n-  int nr = 0;\n-  while (sim_core_read_1 (current_cpu,\n-\t\t\t  pc, read_map, addr + nr) != 0)\n-    nr++;\n-  buf = NZALLOC (char, nr + 1);\n-  sim_read (CPU_STATE (current_cpu), addr, buf, nr);\n-  return buf;\n-}\n-\n-static void\n-trap_handler (SIM_CPU *current_cpu, int shmedia_abi_p, UQI trapnum, PCADDR pc)\n-{\n-  char ch;\n-  switch (trapnum)\n-    {\n-    case 1:\n-      ch = GET_H_GRC (0);\n-      sim_io_write_stdout (CPU_STATE (current_cpu), &ch, 1);\n-      fflush (stdout);\n-      break;\n-    case 2:\n-      sim_engine_halt (CPU_STATE (current_cpu), current_cpu, NULL, pc, sim_stopped, SIM_SIGTRAP);\n-      break;\n-    case 34:\n-      {\n-\tint i;\n-\tint ret_reg = (shmedia_abi_p) ? 2 : 0;\n-\tchar *buf;\n-\tDI PARM1 = GET_H_GR ((shmedia_abi_p) ? 3 : 5);\n-\tDI PARM2 = GET_H_GR ((shmedia_abi_p) ? 4 : 6);\n-\tDI PARM3 = GET_H_GR ((shmedia_abi_p) ? 5 : 7);\n-\t\n-\tswitch (GET_H_GR ((shmedia_abi_p) ? 2 : 4))\n-\t  {\n-\t  case SYS_write:\n-\t    buf = zalloc (PARM3);\n-\t    sim_read (CPU_STATE (current_cpu), PARM2, buf, PARM3);\n-\t    SET_H_GR (ret_reg,\n-\t\t      sim_io_write (CPU_STATE (current_cpu),\n-\t\t\t\t    PARM1, buf, PARM3));\n-\t    free (buf);\n-\t    break;\n-\n-\t  case SYS_lseek:\n-\t    SET_H_GR (ret_reg,\n-\t\t      sim_io_lseek (CPU_STATE (current_cpu),\n-\t\t\t\t    PARM1, PARM2, PARM3));\n-\t    break;\n-\t    \n-\t  case SYS_exit:\n-\t    sim_engine_halt (CPU_STATE (current_cpu), current_cpu,\n-\t\t\t     NULL, pc, sim_exited, PARM1);\n-\t    break;\n-\n-\t  case SYS_read:\n-\t    buf = zalloc (PARM3);\n-\t    SET_H_GR (ret_reg,\n-\t\t      sim_io_read (CPU_STATE (current_cpu),\n-\t\t\t\t   PARM1, buf, PARM3));\n-\t    sim_write (CPU_STATE (current_cpu), PARM2, buf, PARM3);\n-\t    free (buf);\n-\t    break;\n-\t    \n-\t  case SYS_open:\n-\t    buf = fetch_str (current_cpu, pc, PARM1);\n-\t    SET_H_GR (ret_reg,\n-\t\t      sim_io_open (CPU_STATE (current_cpu),\n-\t\t\t\t   buf, PARM2));\n-\t    free (buf);\n-\t    break;\n-\n-\t  case SYS_close:\n-\t    SET_H_GR (ret_reg,\n-\t\t      sim_io_close (CPU_STATE (current_cpu), PARM1));\n-\t    break;\n-\n-\t  case SYS_time:\n-\t    SET_H_GR (ret_reg, time (0));\n-\t    break;\n-\n-\t  case SYS_argc:\n-\t    SET_H_GR (ret_reg, countargv (STATE_PROG_ARGV (CPU_STATE (current_cpu))));\n-\t    break;\n-\n-\t  case SYS_argnlen:\n-\t    if (PARM1 < countargv (STATE_PROG_ARGV (CPU_STATE (current_cpu))))\n-\t      SET_H_GR (ret_reg,\n-\t\t\tstrlen (STATE_PROG_ARGV (CPU_STATE (current_cpu)) [PARM1]));\n-\t    else\n-\t      SET_H_GR (ret_reg, -1);\n-\t    break;\n-\n-\t  case SYS_argn:\n-\t    if (PARM1 < countargv (STATE_PROG_ARGV (CPU_STATE (current_cpu))))\n-\t      {\n-\t\t/* Include the NULL byte.  */\n-\t\ti = strlen (STATE_PROG_ARGV (CPU_STATE (current_cpu)) [PARM1]) + 1;\n-\t\tsim_write (CPU_STATE (current_cpu),\n-\t\t\t   PARM2,\n-\t\t\t   STATE_PROG_ARGV (CPU_STATE (current_cpu)) [PARM1],\n-\t\t\t   i);\n-\n-\t\t/* Just for good measure.  */\n-\t\tSET_H_GR (ret_reg, i);\n-\t\tbreak;\n-\t      }\n-\t    else\n-\t      SET_H_GR (ret_reg, -1);\n-\t    break;\n-\n-\t  default:\n-\t    SET_H_GR (ret_reg, -1);\n-\t  }\n-      }\n-      break;\n-    case 253:\n-      puts (\"pass\");\n-      exit (0);\n-    case 254:\n-      puts (\"fail\");\n-      exit (1);\n-    case 0xc3:\n-      /* fall through.  */\n-    case 255:\n-      sim_engine_halt (CPU_STATE (current_cpu), current_cpu, NULL, pc, sim_stopped, SIM_SIGTRAP);\n-      break;\n-    }\n-}\n-\n-void\n-sh64_trapa (SIM_CPU *current_cpu, DI rm, PCADDR pc)\n-{\n-  trap_handler (current_cpu, 1, (UQI) rm & 0xff, pc);\n-}\n-\n-void\n-sh64_compact_trapa (SIM_CPU *current_cpu, UQI trapnum, PCADDR pc)\n-{\n-  int mach_sh5_p;\n-\n-  /* If this is an SH5 executable, this is SHcompact code running in\n-     the SHmedia ABI.  */\n-\n-  mach_sh5_p =\n-    (bfd_get_mach (STATE_PROG_BFD (CPU_STATE (current_cpu))) == bfd_mach_sh5);\n-\n-  trap_handler (current_cpu, mach_sh5_p, trapnum, pc);\n-}\n-\n-DI\n-sh64_nsb (SIM_CPU *current_cpu, DI rm)\n-{\n-  int result = 0, count;\n-  UDI source = (UDI) rm;\n-\n-  if ((source >> 63))\n-    source = ~source;\n-  source <<= 1;\n-\n-  for (count = 32; count; count >>= 1)\n-    {\n-      UDI newval = source << count;\n-\n-      if ((newval >> count) == source)\n-\t{\n-\t  result |= count;\n-\t  source = newval;\n-\t}\n-    }\n-  \n-  return result;\n-}\n-\n-void\n-sh64_break (SIM_CPU *current_cpu, PCADDR pc)\n-{\n-  SIM_DESC sd = CPU_STATE (current_cpu);\n-  sim_engine_halt (sd, current_cpu, NULL, pc, sim_stopped, SIM_SIGTRAP);\n-}\n-\n-SI\n-sh64_movua (SIM_CPU *current_cpu, PCADDR pc, SI rn)\n-{\n-  SI v;\n-  int i;\n-\n-  /* Move the data one byte at a time to avoid alignment problems.\n-     Be aware of endianness.  */\n-  v = 0;\n-  for (i = 0; i < 4; ++i)\n-    v = (v << 8) | (GETMEMQI (current_cpu, pc, rn + i) & 0xff);\n-\n-  v = T2H_4 (v);\n-  return v;\n-}\n-\n-void\n-set_isa (SIM_CPU *current_cpu, int mode)\n-{\n-  /* Do nothing.  */\n-}\n-\n-/* The semantic code invokes this for invalid (unrecognized) instructions.  */\n-\n-SEM_PC\n-sim_engine_invalid_insn (SIM_CPU *current_cpu, IADDR cia, SEM_PC vpc)\n-{\n-  SIM_DESC sd = CPU_STATE (current_cpu);\n-  sim_engine_halt (sd, current_cpu, NULL, cia, sim_stopped, SIM_SIGILL);\n-\n-  return vpc;\n-}\n-\n-\n-/* Process an address exception.  */\n-\n-void\n-sh64_core_signal (SIM_DESC sd, SIM_CPU *current_cpu, sim_cia cia,\n-                  unsigned int map, int nr_bytes, address_word addr,\n-                  transfer_type transfer, sim_core_signals sig)\n-{\n-  sim_core_signal (sd, current_cpu, cia, map, nr_bytes, addr,\n-\t\t   transfer, sig);\n-}\n-\n-\n-/* Initialize cycle counting for an insn.\n-   FIRST_P is non-zero if this is the first insn in a set of parallel\n-   insns.  */\n-\n-void\n-sh64_compact_model_insn_before (SIM_CPU *cpu, int first_p)\n-{\n-  /* Do nothing.  */\n-}\n-\n-void\n-sh64_media_model_insn_before (SIM_CPU *cpu, int first_p)\n-{\n-  /* Do nothing.  */\n-}\n-\n-/* Record the cycles computed for an insn.\n-   LAST_P is non-zero if this is the last insn in a set of parallel insns,\n-   and we update the total cycle count.\n-   CYCLES is the cycle count of the insn.  */\n-\n-void\n-sh64_compact_model_insn_after(SIM_CPU *cpu, int last_p, int cycles)\n-{\n-  /* Do nothing.  */\n-}\n-\n-void\n-sh64_media_model_insn_after(SIM_CPU *cpu, int last_p, int cycles)\n-{\n-  /* Do nothing.  */\n-}\n-\n-int\n-sh64_fetch_register (SIM_CPU *cpu, int nr, unsigned char *buf, int len)\n-{\n-  /* Fetch general purpose registers. */\n-  if (nr >= SIM_SH64_R0_REGNUM\n-      && nr < (SIM_SH64_R0_REGNUM + SIM_SH64_NR_R_REGS)\n-      && len == 8)\n-    {\n-      *((unsigned64*) buf) =\n-\tH2T_8 (sh64_h_gr_get (cpu, nr - SIM_SH64_R0_REGNUM));\n-      return len;\n-    }\n-\n-  /* Fetch PC.  */\n-  if (nr == SIM_SH64_PC_REGNUM && len == 8)\n-    {\n-      *((unsigned64*) buf) = H2T_8 (sh64_h_pc_get (cpu) | sh64_h_ism_get (cpu));\n-      return len;\n-    }\n-\n-  /* Fetch status register (SR).  */\n-  if (nr == SIM_SH64_SR_REGNUM && len == 8)\n-    {\n-      *((unsigned64*) buf) = H2T_8 (sh64_h_sr_get (cpu));\n-      return len;\n-    }\n-      \n-  /* Fetch saved status register (SSR) and PC (SPC).  */\n-  if ((nr == SIM_SH64_SSR_REGNUM || nr == SIM_SH64_SPC_REGNUM)\n-      && len == 8)\n-    {\n-      *((unsigned64*) buf) = 0;\n-      return len;\n-    }\n-\n-  /* Fetch target registers.  */\n-  if (nr >= SIM_SH64_TR0_REGNUM\n-      && nr < (SIM_SH64_TR0_REGNUM + SIM_SH64_NR_TR_REGS)\n-      && len == 8)\n-    {\n-      *((unsigned64*) buf) =\n-\tH2T_8 (sh64_h_tr_get (cpu, nr - SIM_SH64_TR0_REGNUM));\n-      return len;\n-    }\n-\n-  /* Fetch floating point registers.  */\n-  if (nr >= SIM_SH64_FR0_REGNUM\n-      && nr < (SIM_SH64_FR0_REGNUM + SIM_SH64_NR_FP_REGS)\n-      && len == 4)\n-    {\n-      *((unsigned32*) buf) =\n-\tH2T_4 (sh64_h_fr_get (cpu, nr - SIM_SH64_FR0_REGNUM));\n-      return len;\n-    }\n-\n-  /* We should never get here.  */\n-  return 0;\n-}\n-\n-int\n-sh64_store_register (SIM_CPU *cpu, int nr, unsigned char *buf, int len)\n-{\n-  /* Store general purpose registers. */\n-  if (nr >= SIM_SH64_R0_REGNUM\n-      && nr < (SIM_SH64_R0_REGNUM + SIM_SH64_NR_R_REGS)\n-      && len == 8)\n-    {\n-      sh64_h_gr_set (cpu, nr - SIM_SH64_R0_REGNUM, T2H_8 (*((unsigned64*)buf)));\n-      return len;\n-    }\n-\n-  /* Store PC.  */\n-  if (nr == SIM_SH64_PC_REGNUM && len == 8)\n-    {\n-      unsigned64 new_pc = T2H_8 (*((unsigned64*)buf));\n-      sh64_h_pc_set (cpu, new_pc);\n-      return len;\n-    }\n-\n-  /* Store status register (SR).  */\n-  if (nr == SIM_SH64_SR_REGNUM && len == 8)\n-    {\n-      sh64_h_sr_set (cpu, T2H_8 (*((unsigned64*)buf)));\n-      return len;\n-    }\n-\n-  /* Store saved status register (SSR) and PC (SPC).  */\n-  if (nr == SIM_SH64_SSR_REGNUM || nr == SIM_SH64_SPC_REGNUM)\n-    {\n-      /* Do nothing.  */\n-      return len;\n-    }\n-\n-  /* Store target registers.  */\n-  if (nr >= SIM_SH64_TR0_REGNUM\n-      && nr < (SIM_SH64_TR0_REGNUM + SIM_SH64_NR_TR_REGS)\n-      && len == 8)\n-    {\n-      sh64_h_tr_set (cpu, nr - SIM_SH64_TR0_REGNUM, T2H_8 (*((unsigned64*)buf)));\n-      return len;\n-    }\n-\n-  /* Store floating point registers.  */\n-  if (nr >= SIM_SH64_FR0_REGNUM\n-      && nr < (SIM_SH64_FR0_REGNUM + SIM_SH64_NR_FP_REGS)\n-      && len == 4)\n-    {\n-      sh64_h_fr_set (cpu, nr - SIM_SH64_FR0_REGNUM, T2H_4 (*((unsigned32*)buf)));\n-      return len;\n-    }\n-\n-  /* We should never get here.  */\n-  return 0;\n-}\n-\n-void\n-sh64_engine_run_full(SIM_CPU *cpu)\n-{\n-  if (sh64_h_ism_get (cpu) == ISM_MEDIA)\n-    {\n-      if (!sh64_idesc_media)\n-\t{\n-\t  sh64_media_init_idesc_table (cpu);\n-\t  sh64_idesc_media = CPU_IDESC (cpu);\n-\t}\n-      else\n-\tCPU_IDESC (cpu) = sh64_idesc_media;\n-      sh64_media_engine_run_full (cpu);\n-    }\n-  else\n-    {\n-      if (!sh64_idesc_compact)\n-\t{\n-\t  sh64_compact_init_idesc_table (cpu);\n-\t  sh64_idesc_compact = CPU_IDESC (cpu);\n-\t}\n-      else\n-\tCPU_IDESC (cpu) = sh64_idesc_compact;\n-      sh64_compact_engine_run_full (cpu);\n-    }\n-}\n-\n-void\n-sh64_engine_run_fast (SIM_CPU *cpu)\n-{\n-  if (sh64_h_ism_get (cpu) == ISM_MEDIA)\n-    {\n-      if (!sh64_idesc_media)\n-\t{\n-\t  sh64_media_init_idesc_table (cpu);\n-\t  sh64_idesc_media = CPU_IDESC (cpu);\n-\t}\n-      else\n-\tCPU_IDESC (cpu) = sh64_idesc_media;\n-      sh64_media_engine_run_fast (cpu);\n-    }\n-  else\n-    {\n-      if (!sh64_idesc_compact)\n-\t{\n-\t  sh64_compact_init_idesc_table (cpu);\n-\t  sh64_idesc_compact = CPU_IDESC (cpu);\n-\t}\n-      else\n-\tCPU_IDESC (cpu) = sh64_idesc_compact;\n-      sh64_compact_engine_run_fast (cpu);\n-    }\n-}\n-\n-static void\n-sh64_prepare_run (SIM_CPU *cpu)\n-{\n-  /* Nothing.  */\n-}\n-\n-static const CGEN_INSN *\n-sh64_get_idata (SIM_CPU *cpu, int inum)\n-{\n-  return CPU_IDESC (cpu) [inum].idata;\n-}\n-\n-static void\n-sh64_init_cpu (SIM_CPU *cpu)\n-{\n-  CPU_REG_FETCH (cpu) = sh64_fetch_register;\n-  CPU_REG_STORE (cpu) = sh64_store_register;\n-  CPU_PC_FETCH (cpu) = sh64_h_pc_get;\n-  CPU_PC_STORE (cpu) = sh64_h_pc_set;\n-  CPU_GET_IDATA (cpu) = sh64_get_idata;\n-  /* Only used by profiling.  0 disables it. */\n-  CPU_MAX_INSNS (cpu) = 0;\n-  CPU_INSN_NAME (cpu) = cgen_insn_name;\n-  CPU_FULL_ENGINE_FN (cpu) = sh64_engine_run_full;\n-#if WITH_FAST\n-  CPU_FAST_ENGINE_FN (cpu) = sh64_engine_run_fast;\n-#else\n-  CPU_FAST_ENGINE_FN (cpu) = sh64_engine_run_full;\n-#endif\n-}\n-\n-static void\n-shmedia_init_cpu (SIM_CPU *cpu)\n-{\n-  sh64_init_cpu (cpu);\n-}\n-\n-static void\n-shcompact_init_cpu (SIM_CPU *cpu)\n-{ \n-  sh64_init_cpu (cpu);\n-}\n-\n-static void\n-sh64_model_init()\n-{\n-  /* Do nothing.  */\n-}\n-\n-static const SIM_MODEL sh_models [] =\n-{\n-  { \"sh2\",        & sh2_mach,         MODEL_SH5, NULL, sh64_model_init },\n-  { \"sh2e\",       & sh2e_mach,        MODEL_SH5, NULL, sh64_model_init },\n-  { \"sh2a\",       & sh2a_fpu_mach,    MODEL_SH5, NULL, sh64_model_init },\n-  { \"sh2a_nofpu\", & sh2a_nofpu_mach,  MODEL_SH5, NULL, sh64_model_init },\n-  { \"sh3\",        & sh3_mach,         MODEL_SH5, NULL, sh64_model_init },\n-  { \"sh3e\",       & sh3_mach,         MODEL_SH5, NULL, sh64_model_init },\n-  { \"sh4\",        & sh4_mach,         MODEL_SH5, NULL, sh64_model_init },\n-  { \"sh4_nofpu\",  & sh4_nofpu_mach,   MODEL_SH5, NULL, sh64_model_init },\n-  { \"sh4a\",       & sh4a_mach,        MODEL_SH5, NULL, sh64_model_init },\n-  { \"sh4a_nofpu\", & sh4a_nofpu_mach,  MODEL_SH5, NULL, sh64_model_init },\n-  { \"sh4al\",      & sh4al_mach,       MODEL_SH5, NULL, sh64_model_init },\n-  { \"sh5\",        & sh5_mach,         MODEL_SH5, NULL, sh64_model_init },\n-  { 0 }\n-};\n-\n-static const SIM_MACH_IMP_PROPERTIES sh5_imp_properties =\n-{\n-  sizeof (SIM_CPU),\n-#if WITH_SCACHE\n-  sizeof (SCACHE)\n-#else\n-  0\n-#endif\n-};\n-\n-const SIM_MACH sh2_mach =\n-{\n-  \"sh2\", \"sh2\", MACH_SH5,\n-  16, 16, &sh_models[0], &sh5_imp_properties,\n-  shcompact_init_cpu,\n-  sh64_prepare_run\n-};\n-\n-const SIM_MACH sh2e_mach =\n-{\n-  \"sh2e\", \"sh2e\", MACH_SH5,\n-  16, 16, &sh_models[1], &sh5_imp_properties,\n-  shcompact_init_cpu,\n-  sh64_prepare_run\n-};\n-\n-const SIM_MACH sh2a_fpu_mach =\n-{\n-  \"sh2a\", \"sh2a\", MACH_SH5,\n-  16, 16, &sh_models[2], &sh5_imp_properties,\n-  shcompact_init_cpu,\n-  sh64_prepare_run\n-};\n-\n-const SIM_MACH sh2a_nofpu_mach =\n-{\n-  \"sh2a_nofpu\", \"sh2a_nofpu\", MACH_SH5,\n-  16, 16, &sh_models[3], &sh5_imp_properties,\n-  shcompact_init_cpu,\n-  sh64_prepare_run\n-};\n-\n-const SIM_MACH sh3_mach =\n-{\n-  \"sh3\", \"sh3\", MACH_SH5,\n-  16, 16, &sh_models[4], &sh5_imp_properties,\n-  shcompact_init_cpu,\n-  sh64_prepare_run\n-};\n-\n-const SIM_MACH sh3e_mach =\n-{\n-  \"sh3e\", \"sh3e\", MACH_SH5,\n-  16, 16, &sh_models[5], &sh5_imp_properties,\n-  shcompact_init_cpu,\n-  sh64_prepare_run\n-};\n-\n-const SIM_MACH sh4_mach =\n-{\n-  \"sh4\", \"sh4\", MACH_SH5,\n-  16, 16, &sh_models[6], &sh5_imp_properties,\n-  shcompact_init_cpu,\n-  sh64_prepare_run\n-};\n-\n-const SIM_MACH sh4_nofpu_mach =\n-{\n-  \"sh4_nofpu\", \"sh4_nofpu\", MACH_SH5,\n-  16, 16, &sh_models[7], &sh5_imp_properties,\n-  shcompact_init_cpu,\n-  sh64_prepare_run\n-};\n-\n-const SIM_MACH sh4a_mach =\n-{\n-  \"sh4a\", \"sh4a\", MACH_SH5,\n-  16, 16, &sh_models[8], &sh5_imp_properties,\n-  shcompact_init_cpu,\n-  sh64_prepare_run\n-};\n-\n-const SIM_MACH sh4a_nofpu_mach =\n-{\n-  \"sh4a_nofpu\", \"sh4a_nofpu\", MACH_SH5,\n-  16, 16, &sh_models[9], &sh5_imp_properties,\n-  shcompact_init_cpu,\n-  sh64_prepare_run\n-};\n-\n-const SIM_MACH sh4al_mach =\n-{\n-  \"sh4al\", \"sh4al\", MACH_SH5,\n-  16, 16, &sh_models[10], &sh5_imp_properties,\n-  shcompact_init_cpu,\n-  sh64_prepare_run\n-};\n-\n-const SIM_MACH sh5_mach =\n-{\n-  \"sh5\", \"sh5\", MACH_SH5,\n-  32, 32, &sh_models[11], &sh5_imp_properties,\n-  shmedia_init_cpu,\n-  sh64_prepare_run\n-};"
    },
    {
      "sha": "e8c2ebcbd7c0e076e373e8c8e134034b0ba5940a",
      "filename": "sim/sh64/sim-if.c",
      "status": "removed",
      "additions": 0,
      "deletions": 204,
      "changes": 204,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/sim-if.c?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,204 +0,0 @@\n-/* Main simulator entry points specific to the SH5.\n-   Copyright (C) 2000-2021 Free Software Foundation, Inc.\n-   Contributed by Cygnus Solutions.\n-\n-This file is part of the GNU simulators.\n-\n-This program is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3 of the License, or\n-(at your option) any later version.\n-\n-This program is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n-\n-#include \"config.h\"\n-#include \"libiberty.h\"\n-#include \"bfd.h\"\n-#include \"sim-main.h\"\n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-#include \"sim-options.h\"\n-#include \"dis-asm.h\"\n-\n-static void free_state (SIM_DESC);\n-\n-/* Since we don't build the cgen-opcode table, we use a wrapper around\n-   the existing disassembler from libopcodes. */\n-static CGEN_DISASSEMBLER sh64_disassemble_insn;\n-\f\n-/* Cover function of sim_state_free to free the cpu buffers as well.  */\n-\n-static void\n-free_state (SIM_DESC sd)\n-{\n-  if (STATE_MODULES (sd) != NULL)\n-    sim_module_uninstall (sd);\n-  sim_cpu_free_all (sd);\n-  sim_state_free (sd);\n-}\n-\n-/* Create an instance of the simulator.  */\n-\n-SIM_DESC\n-sim_open (kind, callback, abfd, argv)\n-     SIM_OPEN_KIND kind;\n-     host_callback *callback;\n-     struct bfd *abfd;\n-     char * const *argv;\n-{\n-  char c;\n-  int i;\n-  SIM_DESC sd = sim_state_alloc (kind, callback);\n-\n-  /* The cpu data is kept in a separately allocated chunk of memory.  */\n-  if (sim_cpu_alloc_all (sd, 1, cgen_cpu_max_extra_bytes ()) != SIM_RC_OK)\n-    {\n-      free_state (sd);\n-      return 0;\n-    }\n-\n-#if 0 /* FIXME: pc is in mach-specific struct */\n-  /* FIXME: watchpoints code shouldn't need this */\n-  {\n-    SIM_CPU *current_cpu = STATE_CPU (sd, 0);\n-    STATE_WATCHPOINTS (sd)->pc = &(PC);\n-    STATE_WATCHPOINTS (sd)->sizeof_pc = sizeof (PC);\n-  }\n-#endif\n-\n-  if (sim_pre_argv_init (sd, argv[0]) != SIM_RC_OK)\n-    {\n-      free_state (sd);\n-      return 0;\n-    }\n-\n-  /* The parser will print an error message for us, so we silently return.  */\n-  if (sim_parse_args (sd, argv) != SIM_RC_OK)\n-    {\n-      free_state (sd);\n-      return 0;\n-    }\n-\n-  /* Allocate core managed memory if none specified by user.\n-     Use address 4 here in case the user wanted address 0 unmapped.  */\n-  if (sim_core_read_buffer (sd, NULL, read_map, &c, 4, 1) == 0)\n-    sim_do_commandf (sd, \"memory region 0,0x%x\", SH64_DEFAULT_MEM_SIZE);\n-\n-  /* Add a small memory region way up in the address space to handle\n-     writes to invalidate an instruction cache line.  This is used for\n-     trampolines.  Since we don't simulate the cache, this memory just\n-     avoids bus errors.  64K ought to do. */\n-  sim_do_command (sd,\" memory region 0xf0000000,0x10000\");\n-\n-  /* check for/establish the reference program image */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL),\n-\t\t\t   abfd) != SIM_RC_OK)\n-    {\n-      free_state (sd);\n-      return 0;\n-    }\n-\n-  /* Establish any remaining configuration options.  */\n-  if (sim_config (sd) != SIM_RC_OK)\n-    {\n-      free_state (sd);\n-      return 0;\n-    }\n-\n-  if (sim_post_argv_init (sd) != SIM_RC_OK)\n-    {\n-      free_state (sd);\n-      return 0;\n-    }\n-\n-  /* Open a copy of the cpu descriptor table.  */\n-  {\n-    CGEN_CPU_DESC cd = sh_cgen_cpu_open_1 (STATE_ARCHITECTURE (sd)->printable_name,\n-\t\t\t\t\t      CGEN_ENDIAN_BIG);\n-\n-    for (i = 0; i < MAX_NR_PROCESSORS; ++i)\n-      {\n-\tSIM_CPU *cpu = STATE_CPU (sd, i);\n-\tCPU_CPU_DESC (cpu) = cd;\n-\tCPU_DISASSEMBLER (cpu) = sh64_disassemble_insn;\n-      }\n-  }\n-\n-  /* Clear idesc table pointers for good measure. */\n-  sh64_idesc_media = sh64_idesc_compact = NULL;\n-\n-  /* Initialize various cgen things not done by common framework.\n-     Must be done after sh_cgen_cpu_open.  */\n-  cgen_init (sd);\n-\n-  return sd;\n-}\n-\f\n-SIM_RC\n-sim_create_inferior (sd, abfd, argv, envp)\n-     SIM_DESC sd;\n-     struct bfd *abfd;\n-     char * const *argv;\n-     char * const *envp;\n-{\n-  SIM_CPU *current_cpu = STATE_CPU (sd, 0);\n-  SIM_ADDR addr;\n-\n-  if (abfd != NULL)\n-    addr = bfd_get_start_address (abfd);\n-  else\n-    addr = 0;\n-  sim_pc_set (current_cpu, addr);\n-\n-  /* Standalone mode (i.e. `run`) will take care of the argv for us in\n-     sim_open() -> sim_parse_args().  But in debug mode (i.e. 'target sim'\n-     with `gdb`), we need to handle it because the user can change the\n-     argv on the fly via gdb's 'run'.  */\n-  if (STATE_PROG_ARGV (sd) != argv)\n-    {\n-      freeargv (STATE_PROG_ARGV (sd));\n-      STATE_PROG_ARGV (sd) = dupargv (argv);\n-    }\n-\n-  return SIM_RC_OK;\n-}\n-\f\n-/* Disassemble an instruction.  */\n-\n-static void\n-sh64_disassemble_insn (SIM_CPU *cpu, const CGEN_INSN *insn,\n-                       const ARGBUF *abuf, IADDR pc, char *buf)\n-{\n-  struct disassemble_info disasm_info;\n-  SFILE sfile;\n-  SIM_DESC sd = CPU_STATE (cpu);\n-\n-  sfile.buffer = sfile.current = buf;\n-  INIT_DISASSEMBLE_INFO (disasm_info, (FILE *) &sfile,\n-                         (fprintf_ftype) sim_disasm_sprintf);\n-\n-  disasm_info.arch = bfd_get_arch (STATE_PROG_BFD (sd));\n-  disasm_info.mach = bfd_get_mach (STATE_PROG_BFD (sd));\n-  disasm_info.endian =\n-    (bfd_big_endian (STATE_PROG_BFD (sd)) ? BFD_ENDIAN_BIG\n-     : bfd_little_endian (STATE_PROG_BFD (sd)) ? BFD_ENDIAN_LITTLE\n-     : BFD_ENDIAN_UNKNOWN);\n-  disasm_info.read_memory_func = sim_disasm_read_memory;\n-  disasm_info.memory_error_func = sim_disasm_perror_memory;\n-  disasm_info.application_data = (PTR) cpu;\n-\n-  if (sh64_h_ism_get (cpu) == ISM_MEDIA)\n-    print_insn_sh64x_media (pc, &disasm_info);\n-  else\n-    print_insn_sh (pc, &disasm_info);\n-}"
    },
    {
      "sha": "da8f516f75c590b31c83eb0c5a5bd0c342eb8947",
      "filename": "sim/sh64/sim-main.h",
      "status": "removed",
      "additions": 0,
      "deletions": 72,
      "changes": 72,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sim-main.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/sh64/sim-main.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/sim-main.h?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,72 +0,0 @@\n-/* Main header for the Hitachi SH64 architecture.  */\n-\n-#ifndef SIM_MAIN_H\n-#define SIM_MAIN_H\n-\n-/* sim-basics.h includes config.h but cgen-types.h must be included before\n-   sim-basics.h and cgen-types.h needs config.h.  */\n-#include \"config.h\"\n-\n-/* This is a global setting.  Different cpu families can't mix-n-match -scache\n-   and -pbb.  However some cpu families may use -simple while others use\n-   one of -scache/-pbb. ???? */\n-#define WITH_SCACHE_PBB 1\n-\n-#include \"symcat.h\"\n-#include \"sim-basics.h\"\n-#include \"cgen-types.h\"\n-#include \"sh-desc.h\"\n-#include \"sh-opc.h\"\n-#include \"arch.h\"\n-\n-/* These must be defined before sim-base.h.  */\n-typedef UDI sim_cia;\n-#define CIA_ADDR(cia) (cia)\n-\n-#include \"sim-base.h\"\n-#include \"cgen-sim.h\"\n-#include \"sh64-sim.h\"\n-\f\n-/* The _sim_cpu struct.  */\n-\n-struct _sim_cpu {\n-  /* sim/common cpu base.  */\n-  sim_cpu_base base;\n-\n-  /* Static parts of cgen.  */\n-  CGEN_CPU cgen_cpu;\n-\n-  /* CPU specific parts go here.\n-     Note that in files that don't need to access these pieces WANT_CPU_FOO\n-     won't be defined and thus these parts won't appear.  This is ok in the\n-     sense that things work.  It is a source of bugs though.\n-     One has to of course be careful to not take the size of this\n-     struct and no structure members accessed in non-cpu specific files can\n-     go after here.  Oh for a better language.  */\n-#if defined (WANT_CPU_SH64)\n-  SH64_CPU_DATA cpu_data;\n-#endif\n-};\n-\f\n-/* The sim_state struct.  */\n-\n-struct sim_state {\n-  sim_cpu *cpu[MAX_NR_PROCESSORS];\n-\n-  CGEN_STATE cgen_state;\n-\n-  sim_state_base base;\n-};\n-\f\n-/* Misc.  */\n-\n-/* Catch address exceptions.  */\n-extern SIM_CORE_SIGNAL_FN sh64_core_signal;\n-#define SIM_CORE_SIGNAL(SD,CPU,CIA,MAP,NR_BYTES,ADDR,TRANSFER,ERROR) \\\n-sh64_core_signal ((SD), (CPU), (CIA), (MAP), (NR_BYTES), (ADDR), \\\n-\t\t  (TRANSFER), (ERROR))\n-\n-/* Default memory size.  */\n-#define SH64_DEFAULT_MEM_SIZE 0x800000 /* 8M */\n-\n-#endif /* SIM_MAIN_H */"
    },
    {
      "sha": "94d30a985125496494906d64694eeb7b1cabd2e2",
      "filename": "sim/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8cab0b99583f29de8250497bd714099702e1f39/sim/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8cab0b99583f29de8250497bd714099702e1f39/sim/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/ChangeLog?ref=f8cab0b99583f29de8250497bd714099702e1f39",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-09  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\t* sim/sh64/: Delete.\n+\n 2021-01-05  Mike Frysinger  <vapier@gentoo.org>\n \n \t* sim/fr30/: Delete."
    },
    {
      "sha": "88ff4bf33dfe6f6d53e69561e1e16a845c0a3fa0",
      "filename": "sim/testsuite/configure",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f8cab0b99583f29de8250497bd714099702e1f39/sim/testsuite/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f8cab0b99583f29de8250497bd714099702e1f39/sim/testsuite/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/configure?ref=f8cab0b99583f29de8250497bd714099702e1f39",
      "patch": "@@ -1940,9 +1940,6 @@ case \"${target}\" in\n    rx-*-*)\n        sim_arch=rx\n        ;;\n-   sh64*-*-*)\n-       sim_arch=sh64\n-       ;;\n    sh*-*-*)\n        sim_arch=sh\n        ;;"
    },
    {
      "sha": "8bb2f764ae6a5eebd464b0020852f3419d44c666",
      "filename": "sim/testsuite/sim/sh64/ChangeLog",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/ChangeLog?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,21 +0,0 @@\n-2001-01-06  Ben Elliston  <bje@redhat.com>\n-\n-\t* misc/fr-dr.s: New test.\n-\n-2001-01-03  Ben Elliston  <bje@redhat.com>\n-\n-\t* interwork.exp: Match .s files only.\n-\n-2000-12-06  Ben Elliston  <bje@redhat.com>\n-\n-\t* interwork.exp: New test case.\n-\n-2000-11-16  Ben Elliston  <bje@redhat.com>\n-\n-\t* allinsn.exp: Rename from this ..\n-\t* compact.exp: .. to this.\n-\t* media.exp: New test case.\n-\n-2000-11-13  Ben Elliston  <bje@redhat.com>\n-\n-\t* allinsn.exp: New test case."
    },
    {
      "sha": "d3d482acf0f4cd149aed03c22285f1041fc8d3cd",
      "filename": "sim/testsuite/sim/sh64/compact.exp",
      "status": "removed",
      "additions": 0,
      "deletions": 19,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact.exp?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,19 +0,0 @@\n-# SHcompact testsuite.\n-\n-if [istarget sh64-*-*] {\n-    # load support procs (none yet)\n-    # load_lib cgen.exp\n-\n-    # all machines\n-    set all_machs \"sh5\"\n-\n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/compact/*.cgs]] {\n-       # If we're only testing specific files and this isn't one of them,\n-       # skip it.\n-       if ![runtest_file_p $runtests $src] {\n-  \t  continue\n-\t}\n-    run_sim_test $src $all_machs\n-    }\n-}"
    },
    {
      "sha": "99aaec1ff022230169a20bf42258dce1cc91cf25",
      "filename": "sim/testsuite/sim/sh64/compact/ChangeLog",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ChangeLog?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,26 +0,0 @@\n-2002-01-09  Ben Elliston  <bje@redhat.com>\n-\n-\t* macl.cgs: For good measure, clear the S bit at startup.\n-\n-2001-01-11  Ben Elliston  <bje@redhat.com>\n-\n-\t* fmov.cgs (f13b): Compare R0 with R1, not R2, when testing that\n-\tthe source register was correctly post-incremented.\n-\n-2000-12-01  Ben Elliston  <bje@redhat.com>\n-\n-\t* *.cgs (ld): Link tests with -m shelf32.\n-\n-2000-11-24  Ben Elliston  <bje@redhat.com>\n-\n-\t* fmov.cgs: New test case.\n-\t* ftrv.cgs: Populate the matrix with meaningful values.\n-\n-2000-11-22  Ben Elliston  <bje@redhat.com>\n-\n-\t* *.cgs (as): Assemble tests with -isa=shcompact.\n-\n-2000-11-16  Ben Elliston  <bje@redhat.com>\n-\n-\t* *.cgs: New test cases.\n-"
    },
    {
      "sha": "105e48490694e4b84f6f9f5534ff77bead4b0b8b",
      "filename": "sim/testsuite/sim/sh64/compact/add.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 55,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/add.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/add.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/add.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,55 +0,0 @@\n-# sh testcase for add $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-init:\n-\t# Initialise some registers with values which help us to verify\n-\t# that the correct source registers are used by the ADD instruction.\n-\tmov #0, r0\n-\tmov #1, r1\n-\tmov #2, r2\n-\tmov #3, r3\n-\tmov #5, r5\n-\tmov #15, r15\n-\n-add:\t\n-\t# 0 + 0 = 0.\n-\tadd r0, r0\n-\tassert r0, #0\n-\n-\t# 0 + 1 = 1.\n-\tadd r0, r1\n-\tassert r1, #1\n-\n-\t# 1 + 2 = 3.\n-\tadd r1, r2\n-\tassert r2, #3\n-\n-\t# 3 + 5 = 8.\n-\tadd r3, r5\n-\tassert r5, #8\n-\t\n-\t# 8 + 8 = 16.\n-\tadd r5, r5\n-\tassert r5, #16\n-\n-\t# 15 + 1 = 16.\n-\tadd r15, r1\n-\tassert r1, #16\n-\n-neg:\n-\tmov #1, r0\n-\tneg r0, r0\n-\tmov #2, r1\n-\tadd r0, r1\n-\tassert r1, #1\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "f6e46e1a9693d460f03c5b030e93d66a4e17dc79",
      "filename": "sim/testsuite/sim/sh64/compact/addc.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 90,
      "changes": 90,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/addc.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/addc.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/addc.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,90 +0,0 @@\n-# sh testcase for addc $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\t# Initialise some registers with values which help us to verify\n-\t# that the correct source registers are used by the ADDC instruction.\n-\n-\t.macro init\n-\tmov #0, r0\n-\tmov #1, r1\n-\tmov #2, r2\n-\tmov #3, r3\n-\tmov #5, r5\n-\tmov #15, r15\n-\t.endm\n-\t\n-\tstart\n-\n-\tinit\n-add:\n-\tclrt\n-\taddc r0, r0\n-\tassert r0, #0\n-\tclrt\n-\taddc r0, r1\n-\tassert r1, #1\n-\tclrt\n-\taddc r1, r2\n-\tassert r2, #3\n-\tclrt\n-\taddc r3, r5\n-\tassert r5, #8\n-\tclrt\n-\taddc r5, r5\n-\tassert r5, #16\n-\tclrt\n-\taddc r15, r1\n-\tassert r1, #16\n-\n-\tinit\n-addt:\n-\tsett\n-\taddc r0, r0\n-\tassert r0, #1\n-\tsett\n-\taddc r0, r1\n-\tassert r1, #3\n-\tsett\n-\taddc r1, r2\n-\tassert r2, #6\n-\tsett\n-\taddc r3, r5\n-\tassert r5, #9\n-\tsett\n-\taddc r5, r5\n-\tassert r5, #19\n-\tsett\n-\taddc r15, r1\n-\tassert r1, #19\n-\n-\tbra next\n-\tnop\n-\n-wrong:\n-\tfail\n-\n-next:\n-\tinit\n-large:\n-\tclrt\n-\tmov #1, r0\n-\tneg r0, r0\n-\tmov #2, r1\n-\taddc r0, r1\n-\tassert r1, #1\n-\n-\tinit\n-larget:\n-\tsett\n-\tmov #1, r0\n-\tneg r0, r0\n-\tmov #2, r1\n-\taddc r0, r1\n-\tassert r1, #2\n-\n-okay:\t\n-\tpass"
    },
    {
      "sha": "7c96ddf76d5ae4b77a259d9138da64bcdf3f7108",
      "filename": "sim/testsuite/sim/sh64/compact/addi.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/addi.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/addi.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/addi.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,46 +0,0 @@\n-# sh testcase for add #$imm8, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-init:\n-\t# Initialise some registers with values which help us to verify\n-\t# that the correct source registers are used by the ADD instruction.\n-\tmov #0, r0\n-\tmov #1, r1\n-\tmov #2, r2\n-\tmov #3, r3\n-\tmov #5, r5\n-\tmov #15, r15\n-\n-addi:\n-\t# 0 + 0 = 0.\n-\tadd #0, r0\n-\tassert r0, #0\n-\n-\t# 0 + 1 = 1.\n-\tadd #0, r1\n-\tassert r1, #1\n-\n-\t# 2 + 2 = 4.\n-\tadd #2, r2\n-\tassert r2, #4\n-\n-\t# 120 + 5 = 125.\n-\tadd #120, r5\n-\tassert r5, #125\n-\n-large:\n-\tmov #1, r0\n-\tneg r0, r0\n-\tadd #2, r0\n-\tassert r0, #1\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "0267e5dfa00e9daf7d92cb868e9d9fdfc7eefd8b",
      "filename": "sim/testsuite/sim/sh64/compact/addv.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 48,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/addv.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/addv.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/addv.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,48 +0,0 @@\n-# sh testcase for addv $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-zero:\n-\tmov #0, r0\n-\tmov #0, r1\n-\taddv r0, r1\n-\t# Assert !T and #0.\n-\tbt wrong\n-\tassert r1, #0\n-\n-one:\n-\tmov #0, r0\n-\tmov #1, r1\n-\taddv r0, r1\n-\t# Assert !T and #1.\n-\tbt wrong\n-\tassert r1, #1\n-\n-large:\n-\t# Produce MAXINT in R0.\n-\tmov #0, r0\n-\tnot r0, r0\n-\tshlr r0\n-\n-\t# Put #3 into R1.\n-\tmov #3, r1\n-\n-\t# Add them and overflow.\n-\taddv r0, r1\n-\n-\t# Assert T and overflowed value.\n-\tbf wrong\n-\tmov #1, r7\n-\trotr r7\n-\tadd #2, r7\n-\tcmp/eq r1, r7\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "e1452752ae0ef9f6e4c6e4670cb04cc3fd7e4b3c",
      "filename": "sim/testsuite/sim/sh64/compact/and.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/and.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/and.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/and.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,33 +0,0 @@\n-# sh testcase for and $rm64, $rn64 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global and\n-and:\n-\tmov #1, r1\n-\tmov #7, r2\n-\trotr r2\n-\trotr r2\n-\tand r1, r2\n-\n-\t# R1 & R2 = 1.\n-\tassert r2, #1\n-\n-another:\n-\tmov #192, r1\n-\tmov #0, r2\n-\tand r1, r2\n-\n-\t# R1 & R2 = 0.\n-\tassert r2, #0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "77e628598b18919c8219c6388fef48a0baffe8f2",
      "filename": "sim/testsuite/sim/sh64/compact/andb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/andb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/andb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/andb.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,24 +0,0 @@\n-# sh testcase for and.b #$imm8, @(r0, gbr) -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global orb\n-init:\n-\t# Init GBR and R0.\n-\tmov #30, r0\n-\tldc r0, gbr\t\n-\tmov #40, r0\n-\n-orb:\n-\tand.b #255, @(r0, gbr)\n-\tand.b #170, @(r0, gbr)\n-\tand.b #255, @(r0, gbr)\n-\tand.b #0, @(r0, gbr)\n-\n-okay:\n-\tpass"
    },
    {
      "sha": "32d71c5b477edb043cfb6e3aeddabd45eddc58ac",
      "filename": "sim/testsuite/sim/sh64/compact/andi.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/andi.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/andi.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/andi.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,43 +0,0 @@\n-# sh testcase for and #$imm8, r0 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global andi\n-andi:\n-\tmov #0, r0\n-\tor #255, r0\n-\tand #0, r0\n-\tassert r0, #0\n-\n-large:\n-\tmov #0, r0\n-\tor #255, r0\n-\tshll8 r0\n-\tor #255, r0\n-\tshll8 r0\n-\tor #255, r0\n-\tshll8 r0\n-\tor #255, r0\n-\n-mask:\n-\tand #255, r0\n-\tmov r0, r1\n-\tmov #0, r0\n-\tor #255, r0\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-mask0:\n-\tand #0, r0\n-\tassert r0, #0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "5c361f94b89f733ede5bc02f7121be2b1aa3a0b2",
      "filename": "sim/testsuite/sim/sh64/compact/bf.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bf.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bf.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/bf.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,24 +0,0 @@\n-# sh testcase for bf $disp8 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global taken\n-taken:\n-\tclrt\n-\tbf ntaken\n-\tfail\n-\t.global ntaken\n-ntaken:\n-\tsett\n-\tbf bad\n-\tpass\n-bad:\n-\tfail\n-\tfail\n-\tfail\n-\tfail"
    },
    {
      "sha": "3cad5f6fc73f3bd6703ee23de6a8e0d5221cd7b3",
      "filename": "sim/testsuite/sim/sh64/compact/bfs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bfs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bfs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/bfs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,28 +0,0 @@\n-# sh testcase for bf/s $disp8 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global taken\n-taken:\n-\tclrt\n-\tbf/s ntaken\n-slot1:\n-\tnop\n-\tfail\n-\t.global ntaken\n-ntaken:\n-\tsett\n-\tbf/s bad\n-slot2:\n-\tnop\n-\tpass\n-bad:\n-\tfail\n-\tfail\n-\tfail\n-\tfail"
    },
    {
      "sha": "77c6da9bdde9a1a9db18667548505b6163f9c3ec",
      "filename": "sim/testsuite/sim/sh64/compact/bra.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bra.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bra.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/bra.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,23 +0,0 @@\n-# sh testcase for bra $disp12 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global bra\n-bra:\n-\tbra okay\n-slot:\n-\tnop\n-bad:\n-\tfail\n-\tfail\n-\tfail\n-\t.global okay\n-okay:\n-\tpass\n-\tfail\n-"
    },
    {
      "sha": "e761f6d0a6d1e481336dd3734f18a1d85cc04999",
      "filename": "sim/testsuite/sim/sh64/compact/braf.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/braf.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/braf.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/braf.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,24 +0,0 @@\n-# sh testcase for braf $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global braf\n-braf:\n-\tmov #4, r0\n-\tbraf r0\n-slot:\n-\tnop\n-bad:\n-\tfail\n-\tfail\n-okay:\n-\tpass\n-alsobad:\n-\tfail\n-\tfail\n-\tfail"
    },
    {
      "sha": "9908072456596f35df941dcf446d958eb5d19eec",
      "filename": "sim/testsuite/sim/sh64/compact/brk.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 18,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/brk.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/brk.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/brk.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,18 +0,0 @@\n-# sh testcase for brk -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\t.global brk\n-brk:\n-\t# If we hit the breakpoint, the sim will stop.\n-\tpass\n-\n-\t# FIXME: breakpoint instruction.\n-\t# The SH4 assembler doesn't know about \"brk\".\n-\t.word 0x003b\n-bad:\n-\tfail"
    },
    {
      "sha": "75a1a2b275e98de2ffcd501b0cd7888802efa046",
      "filename": "sim/testsuite/sim/sh64/compact/bsr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bsr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bsr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/bsr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,21 +0,0 @@\n-# sh testcase for bsr $disp12 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global bsr\n-bsr:\n-\tbsr okay\n-slot:\n-\tnop\n-bad:\n-\tfail\n-\tfail\n-okay:\n-\tpass\n-alsobad:\n-\tfail"
    },
    {
      "sha": "9360eaa88b00bf517c98994eae3a0e3a609fbb09",
      "filename": "sim/testsuite/sim/sh64/compact/bsrf.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bsrf.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bsrf.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/bsrf.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,22 +0,0 @@\n-# sh testcase for bsrf $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-bsrf:\n-\tmov #4, r0\n-\tbsrf r0\n-slot:\n-\tnop\n-bad:\n-\tfail\n-\tfail\n-okay:\n-\tpass\n-alsobad:\n-\tfail\n-\tfail"
    },
    {
      "sha": "65b9d61b8851fa95db13c18ee2d2a81a15c4b074",
      "filename": "sim/testsuite/sim/sh64/compact/bt.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bt.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bt.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/bt.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,24 +0,0 @@\n-# sh testcase for bt $disp8\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global taken\n-taken:\n-\tsett\n-\tbt ntaken\n-\tfail\n-\t.global ntaken\n-ntaken:\n-\tclrt\n-\tbt bad\n-\tpass\n-bad:\n-\tfail\n-\tfail\n-\tfail\n-\tfail"
    },
    {
      "sha": "3d62e4d822c88e0a88a6c89dd81cd485b098ee85",
      "filename": "sim/testsuite/sim/sh64/compact/bts.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bts.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/bts.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/bts.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,28 +0,0 @@\n-# sh testcase for bt/s $disp8 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global taken\n-taken:\n-\tsett\n-\tbt/s ntaken\n-slot1:\n-\tnop\n-\tfail\n-\t.global ntaken\n-ntaken:\n-\tclrt\n-\tbt/s bad\n-slot2:\n-\tnop\n-\tpass\n-bad:\n-\tfail\n-\tfail\n-\tfail\n-\tfail"
    },
    {
      "sha": "482dc804d6245f294876296a9de77303485e77e6",
      "filename": "sim/testsuite/sim/sh64/compact/clrmac.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/clrmac.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/clrmac.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/clrmac.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,13 +0,0 @@\n-# sh testcase for clrmac -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global clrmac\n-clrmac:\n-\tclrmac\n-\tpass"
    },
    {
      "sha": "bed5fd5178eb62197da7141f7f6563f708dc227d",
      "filename": "sim/testsuite/sim/sh64/compact/clrs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/clrs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/clrs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/clrs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,14 +0,0 @@\n-# sh testcase for clrs -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global clrs\n-clrs:\n-\tclrs\n-\t# Somehow ensure that S is set.\n-\tpass"
    },
    {
      "sha": "281c2f4243d5d76f9a61a86a9f2cfdd046fb6872",
      "filename": "sim/testsuite/sim/sh64/compact/clrt.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/clrt.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/clrt.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/clrt.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,16 +0,0 @@\n-# sh testcase for clrt -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global clrt\n-clrt:\n-\tclrt\n-\tbt wrong\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "3cc744cf7f73dd449d73f9470c4f776ebb55924c",
      "filename": "sim/testsuite/sim/sh64/compact/cmpeq.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 52,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmpeq.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmpeq.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/cmpeq.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,52 +0,0 @@\n-# sh testcase for cmp/eq $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-zeroes:\n-\tmov #0, r1\n-\tmov #0, r2\n-\tcmp/eq r1, r2\n-\tbf wrong\n-\n-zero1:\n-\tmov #0, r1\n-\tmov #1, r2\n-\tcmp/eq r1, r2\n-\tbt wrong\n-\t\n-zero2:\n-\tmov #0, r2\n-\tmov #1, r1\n-\tcmp/eq r2, r1\n-\tbt wrong\n-\t\n-equal:\n-\tmov #192, r1\n-\tmov #192, r2\n-\tcmp/eq r1, r2\n-\tbf wrong\n-\t\n-noteq:\n-\tmov #192, r1\n-\tmov #193, r2\n-\tcmp/eq r1, r2\n-\tbt wrong\n-\t\n-large:\n-\tmov #1, r1\n-\trotr r1\n-\tmov #1, r2\n-\trotr r2\n-\tcmp/eq r1, r2\n-\tbf wrong\n-\t\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "79900a0cecc57243569801808f587a8b75f48c33",
      "filename": "sim/testsuite/sim/sh64/compact/cmpeqi.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmpeqi.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmpeqi.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/cmpeqi.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,39 +0,0 @@\n-# sh testcase for cmp/eq #$imm8, r0 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-zeroes:\n-\tmov #0, r0\n-\tcmp/eq #0, r0\n-\tbf wrong\n-\t\n-zero1:\n-\tmov #0, r0\n-\tcmp/eq #1, r0\n-\tbt wrong\n-\t\n-zero2:\n-\tmov #1, r0\n-\tcmp/eq #0, r0\n-\tbt wrong\n-\t\n-equal:\n-\tmov #192, r0\n-\tcmp/eq #192, r0\n-\tbf wrong\n-\t\n-sign:\n-\tmov #255, r0\n-\tcmp/eq #255, r0\n-\tbf wrong\n-\t\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "9d4327e35cc18b33264c9807af3084d4f3ab378f",
      "filename": "sim/testsuite/sim/sh64/compact/cmpge.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 69,
      "changes": 69,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmpge.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmpge.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/cmpge.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,69 +0,0 @@\n-# sh testcase for cmp/ge $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-zero:\n-\tmov #0, r0\n-\tmov #0, r1\n-\tcmp/ge r0, r1\n-\tbf wrong\n-\n-onezero:\n-\tmov #1, r0\n-\tmov #0, r1\n-\tcmp/ge r0, r1\n-\tbt wrong\n-\n-zeroone:\n-\tmov #0, r0\n-\tmov #1, r1\n-\tcmp/ge r0, r1\n-\tbf wrong\n-\n-equal:\n-\tmov #192, r0\n-\tmov #192, r1\n-\tcmp/ge r0, r1\n-\tbf wrong\n-\n-eqlarge:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #85, r0\n-\tmov #1, r1\n-\trotr r1\n-\tadd #85, r1\n-\tcmp/ge r0, r1\n-\tbf wrong\n-\n-large2:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #85, r0\n-\tmov #1, r1\n-\trotr r1\n-\tadd #84, r1\n-\tcmp/ge r0, r1\n-\tbt wrong\n-\n-large3:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #84, r0\n-\tmov #1, r1\n-\trotr r1\n-\tadd #85, r1\n-\tcmp/ge r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "460ca65ae6859f5afd5a7ff2afa0f07702f758c1",
      "filename": "sim/testsuite/sim/sh64/compact/cmpgt.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 69,
      "changes": 69,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmpgt.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmpgt.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/cmpgt.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,69 +0,0 @@\n-# sh testcase for cmp/gt $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-zero:\n-\tmov #0, r0\n-\tmov #0, r1\n-\tcmp/gt r0, r1\n-\tbt wrong\n-\n-onezero:\n-\tmov #1, r0\n-\tmov #0, r1\n-\tcmp/gt r0, r1\n-\tbt wrong\n-\n-zeroone:\n-\tmov #0, r0\n-\tmov #1, r1\n-\tcmp/gt r0, r1\n-\tbf wrong\n-\t\n-equal:\n-\tmov #192, r0\n-\tmov #192, r1\n-\tcmp/gt r0, r1\n-\tbt wrong\n-\n-eqlarge:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #85, r0\n-\tmov #1, r1\n-\trotr r1\n-\tadd #85, r1\n-\tcmp/gt r0, r1\n-\tbt wrong\n-\t\n-large2:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #85, r0\n-\tmov #1, r1\n-\trotr r1\n-\tadd #84, r1\n-\tcmp/gt r0, r1\n-\tbt wrong\n-\n-large3:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #84, r0\n-\tmov #1, r1\n-\trotr r1\n-\tadd #85, r1\n-\tcmp/gt r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "efbcaa328cd00b771b0197f60e1da78964ba1e43",
      "filename": "sim/testsuite/sim/sh64/compact/cmphi.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 68,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmphi.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmphi.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/cmphi.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,68 +0,0 @@\n-# sh testcase for cmp/hi $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-zero:\n-\tmov #0, r0\n-\tmov #0, r0\n-\tcmp/hi r0, r1\n-\tbt wrong\n-\n-equal:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #3, r0\n-\n-\tmov #1, r1\n-\trotr r1\n-\tadd #3, r1\n-\n-\tcmp/hi r0, r1\n-\tbt wrong\n-\n-gt:\n-\tmov #10, r0\n-\tmov #12, r1\n-\tcmp/hi r0, r1\n-\tbf wrong\n-\n-lt:\n-\tmov #12, r0\n-\tmov #10, r1\n-\tcmp/hi r0, r1\n-\tbt wrong\n-\n-gtneg:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #1, r0\n-\n-\tmov #1, r1\n-\trotr r1\n-\tadd #3, r1\n-\n-\tcmp/hi r0, r1\n-\tbf wrong\n-\n-ltneg:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #3, r0\n-\t\n-\tmov #1, r1\n-\trotr r1\n-\tadd #1, r1\n-\n-\tcmp/hi r0, r1\n-\tbt wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "957f80c024540d688e76cb4d83da8ead31cfde51",
      "filename": "sim/testsuite/sim/sh64/compact/cmphs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 59,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmphs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmphs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/cmphs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,59 +0,0 @@\n-# sh testcase for cmp/hs $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-zero:\n-\tmov #0, r0\n-\tmov #0, r0\n-\tcmp/hs r0, r1\n-\n-equal:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #3, r0\n-\n-\tmov #1, r1\n-\trotr r1\n-\tadd #3, r1\n-\n-\tcmp/hs r0, r1\n-\n-gt:\n-\tmov #10, r0\n-\tmov #12, r1\n-\tcmp/hs r0, r1\n-\n-lt:\n-\tmov #12, r0\n-\tmov #10, r1\n-\tcmp/hs r0, r1\n-\n-gtneg:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #1, r0\n-\n-\tmov #1, r1\n-\trotr r1\n-\tadd #3, r1\n-\n-\tcmp/hs r0, r1\n-\n-ltneg:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #3, r0\n-\t\n-\tmov #1, r1\n-\trotr r1\n-\tadd #1, r1\n-\n-\tcmp/hs r0, r1\n-\n-okay:\n-\tpass"
    },
    {
      "sha": "1c11377f34beee629297dbbc0adbd068590f0741",
      "filename": "sim/testsuite/sim/sh64/compact/cmppl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmppl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmppl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/cmppl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,37 +0,0 @@\n-# sh testcase for cmp/pl $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-zero:\n-\tmov #0, r0\n-\tcmp/pl r0\n-\tbt wrong\n-\n-plus:\n-\tmov #10, r0\n-\tcmp/pl r0\n-\tbf wrong\n-\n-minus:\n-\tmov #10, r0\n-\tneg r0, r0\n-\tcmp/pl r0\n-\tbt wrong\n-\n-large:\n-\tmov #10, r0\n-\tshll8 r0\n-\tadd #123, r0\n-\tcmp/pl r0\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "2e0bf48e827bb455e361f31136fabbd8331437bc",
      "filename": "sim/testsuite/sim/sh64/compact/cmppz.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmppz.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmppz.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/cmppz.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,37 +0,0 @@\n-# sh testcase for cmp/pz $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-zero:\n-\tmov #0, r0\n-\tcmp/pz r0\n-\tbf wrong\n-\n-plus:\n-\tmov #10, r0\n-\tcmp/pz r0\n-\tbf wrong\n-\n-minus:\n-\tmov #10, r0\n-\tneg r0, r0\n-\tcmp/pz r0\n-\tbt wrong\n-\n-large:\n-\tmov #10, r0\n-\tshll8 r0\n-\tadd #123, r0\n-\tcmp/pz r0\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "70d90d33c20245f0fad5379dc520f8049b24d4bf",
      "filename": "sim/testsuite/sim/sh64/compact/cmpstr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 148,
      "changes": 148,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmpstr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/cmpstr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/cmpstr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,148 +0,0 @@\n-# sh testcase for cmp/str $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-.macro rot8\n-\trotr r0\n-\trotr r0\n-\trotr r0\n-\trotr r0\n-\trotr r0\n-\trotr r0\n-\trotr r0\n-\trotr r0\n-.endm\n-\n-\tstart\n-\n-# Use multiple \"wrong\" labels because this program is quite long. It's\n-# likely that some instructions will be too far away from the branch\n-# target to use PC-relative branches.\n-\t\n-match0:\n-\t# No bytes matching.\n-\tmov #1, r0\n-\tneg r0, r0\n-\txor #170, r0\n-\trot8\n-\txor #170, r0\n-\trot8\n-\txor #170, r0\n-\trot8\n-\txor #170, r0\n-\trot8\n-\tmov r0, r1\n-\tmov #1, r0\n-\tneg r0, r0\n-\txor #85, r0\n-\trot8\n-\txor #85, r0\n-\trot8\n-\txor #85, r0\n-\trot8\n-\txor #85, r0\n-\trot8\n-\tcmp/str r0, r1\n-\tbt wrong0\n-\n-\tbra match1\n-\tnop\n-wrong0:\n-\tfail\n-\n-match1:\n-\t# One byte matching.\n-\tmov #1, r0\n-\tneg r0, r0\n-\txor #170, r0\n-\trot8\n-\txor #170, r0\n-\trot8\n-\txor #170, r0\n-\trot8\n-\tmov r0, r1\n-\tmov #1, r0\n-\tneg r0, r0\n-\txor #85, r0\n-\trot8\n-\txor #85, r0\n-\trot8\n-\txor #85, r0\n-\trot8\n-\tcmp/str r0, r1\n-\tbf wrong1\n-\n-\tbra match2\n-\tnop\n-wrong1:\n-\tfail\n-\n-match2:\n-\t# Two bytes matching.\n-\tmov #1, r0\n-\tneg r0, r0\n-\txor #170, r0\n-\trot8\n-\txor #170, r0\n-\trot8\n-\tmov r0, r1\n-\tmov #1, r0\n-\tneg r0, r0\n-\txor #85, r0\n-\trot8\n-\txor #85, r0\n-\trot8\n-\tcmp/str r0, r1\n-\tbf wrong2\n-\n-\tbra match3\n-\tnop\n-wrong2:\n-\tfail\n-\t\n-byte0:\n-match3:\n-\t# One byte matching.\n-\t# This is also the test for byte 0.\n-\tmov #85, r0\n-\tmov #85, r1\n-\tcmp/str r0, r1\n-\tbf wrong3\n-\n-byte1:\n-\t# Match in byte position 1.\n-\tmov #85, r0\n-\tshll8 r0\n-\tmov #85, r1\n-\tshll8 r1\n-\tcmp/str r0, r1\n-\tbf wrong3\n-\n-byte2:\n-\t# Match in byte position 2.\n-\tmov #85, r0\n-\tshll16 r0\n-\tmov #85, r1\n-\tshll16 r1\n-\tcmp/str r0, r1\n-\tbf wrong3\n-\n-byte3:\n-\t# Match in byte position 3.\n-\tmov #85, r0\n-\tshll16 r0\n-\tshll8 r0\n-\tmov #85, r1\n-\tshll16 r1\n-\tshll8 r1\n-\tcmp/str r0, r1\n-\tbf wrong3\n-\n-okay:\n-\tpass\n-wrong3:\n-\tfail\n-\t"
    },
    {
      "sha": "8cd6422bea830361ebb404054cd7aac892d99e50",
      "filename": "sim/testsuite/sim/sh64/compact/div0s.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 52,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/div0s.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/div0s.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/div0s.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,52 +0,0 @@\n-# sh testcase for div0s $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-init:\n-\tmov #0, r0\n-\tmov #3, r1\n-\tmov #4, r2\n-\tneg r1, r3\n-\tneg r2, r4\n-\n-perm1:\n-\tdiv0s r0, r0\n-\tbt wrong\n-\tdiv0s r0, r1\n-\tbt wrong\n-\tdiv0s r1, r0\n-\tbt wrong\n-\n-perm2:\n-\tdiv0s r0, r4\n-\tbf wrong\n-\tdiv0s r4, r0\n-\tbf wrong\n-\n-perm3:\n-\tdiv0s r1, r2\n-\tbt wrong\n-\tdiv0s r2, r1\n-\tbt wrong\n-\n-perm4:\n-\tdiv0s r3, r4\n-\tbt wrong\n-\tdiv0s r4, r3\n-\tbt wrong\n-\n-perm5:\n-\tdiv0s r1, r1\n-\tbt wrong\n-\tdiv0s r3, r3\n-\tbt wrong\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "02f8534d4c49416637e280525579e68a45ec35f6",
      "filename": "sim/testsuite/sim/sh64/compact/div0u.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/div0u.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/div0u.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/div0u.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,21 +0,0 @@\n-# sh testcase for div0u -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global div0u\n-div0u:\n-\tdiv0u\n-\t# Can't easily test Q and M (other than visually inspecting\n-\t# the simulator's trace output).\n-\tbt wrong\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "63a0e81cb12b22d5ac60de0746f8bd28a2b0faeb",
      "filename": "sim/testsuite/sim/sh64/compact/div1.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 52,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/div1.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/div1.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/div1.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,52 +0,0 @@\n-# sh testcase for div1 $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #10, r0\n-\tmov #2, r1\n-\tdiv0s r0,r1\n-\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\tdiv1 r0, r1\n-\n-\tpass"
    },
    {
      "sha": "081ce1699554bb3118a3f0d9d2ff2e1f454cf4e7",
      "filename": "sim/testsuite/sim/sh64/compact/dmulsl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 115,
      "changes": 115,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/dmulsl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/dmulsl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/dmulsl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,115 +0,0 @@\n-# sh testcase for dmuls.l $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tmov #0, r0\n-\tmov #0, r1\n-\tdmuls.l r0, r1\n-\t# check result\n-\tsts mach, r3\n-\tsts macl, r4\n-\tassert r3, #0\n-\tassert r4, #0\n-\n-test2:\t\n-\tmov #0, r0\n-\tmov #5, r1\n-\tdmuls.l r0, r1\n-\t# check result\n-\tsts mach, r3\n-\tsts macl, r4\n-\tassert r3, #0\n-\tassert r4, #0\n-\n-test3:\t\n-\tmov #5, r0\n-\tmov #0, r1\n-\tdmuls.l r0, r1\n-\t# check result\n-\tsts mach, r3\n-\tsts macl, r4\n-\tassert r3, #0\n-\tassert r4, #0\n-\n-test4:\t\n-\tmov #1, r0\n-\tmov #5, r1\n-\tdmuls.l r0, r1\n-\t# check result\n-\tsts mach, r3\n-\tsts macl, r4\n-\tassert r3, #0\n-\tassert r4, #5\n-\n-test5:\t\n-\tmov #5, r0\n-\tmov #1, r1\n-\tdmuls.l r0, r1\n-\t# check result\n-\tsts mach, r3\n-\tsts macl, r4\n-\tassert r3, #0\n-\tassert r4, #5\n-\n-\tbra test6\n-\tnop\n-\n-wrong:\n-\tfail\n-\n-test6:\t\n-\tmov #2, r0\n-\tmov #2, r1\n-\tdmuls.l r0, r1\n-\t# check result\n-\tsts mach, r3\n-\tsts macl, r4\n-\tassert r3, #0\n-\tassert r4, #4\n-\n-test7:\t\n-\tmov #1, r0\n-\tneg r0, r0\n-\tmov #2, r1\n-\tdmuls.l r0, r1\n-\t# check result\n-\tsts mach, r3\n-\tsts macl, r4\n-\n-\tmov #0, r8\n-\tnot r8, r9\n-\tnot r8, r10\n-\tshll r10\n-\tcmp/eq r3, r9\n-\tbf wrong\n-\tcmp/eq r4, r10\n-\tbf wrong\n-\n-test8:\t\n-\tmov #1, r0\n-\tneg r0, r0\n-\tmov #1, r1\n-\tneg r1, r1\n-\tdmuls.l r0, r1\n-\t# check result\n-\tsts mach, r3\n-\tsts macl, r4\n-\tassert r3, #0\n-\tassert r4, #1\n-\n-test9:\t\n-\tmov #1, r0\n-\tneg r0, r0\n-\tshlr r0\n-\tmov #1, r1\n-\tneg r1, r1\n-\tshlr r1\n-\tdmuls.l r0, r1\n-\t\n-okay:\t\n-\tpass"
    },
    {
      "sha": "b34b870269d5eb2a06a8d5c0304c7779e8ea3c6e",
      "filename": "sim/testsuite/sim/sh64/compact/dmulul.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 53,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/dmulul.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/dmulul.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/dmulul.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,53 +0,0 @@\n-# sh testcase for dmulu.l $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tmov #0, r0\n-\tmov #0, r1\n-\tdmulu.l r0, r1\n-\n-\tmov #0, r0\n-\tmov #5, r1\n-\tdmulu.l r0, r1\n-\n-\tmov #5, r0\n-\tmov #0, r1\n-\tdmulu.l r0, r1\n-\n-\tmov #1, r0\n-\tmov #5, r1\n-\tdmulu.l r0, r1\n-\n-\tmov #5, r0\n-\tmov #1, r1\n-\tdmulu.l r0, r1\n-\n-\tmov #2, r0\n-\tmov #2, r1\n-\tdmulu.l r0, r1\n-\n-\tmov #1, r0\n-\tneg r0, r0\n-\tmov #2, r1\n-\tdmulu.l r0, r1\n-\n-\tmov #1, r0\n-\tneg r0, r0\n-\tmov #1, r1\n-\tneg r1, r1\n-\tdmulu.l r0, r1\n-\n-\tmov #1, r0\n-\tneg r0, r0\n-\tshlr r0\n-\tmov #1, r1\n-\tneg r1, r1\n-\tshlr r1\n-\tdmulu.l r0, r1\n-\n-\tpass"
    },
    {
      "sha": "38e91638bd9fb5b23da94521e86549d83991fa24",
      "filename": "sim/testsuite/sim/sh64/compact/dt.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/dt.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/dt.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/dt.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,42 +0,0 @@\n-# sh testcase for dt $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global dt\n-dt:\n-\tmov #3, r0\n-\tdt r0\n-\tbt wrong\n-\tassert r0, #2\n-\n-\tmov #1, r0\n-\tdt r0\n-\tbf wrong\n-\tassert r0, #0\n-\n-\tmov #0, r0\n-\tdt r0\n-\tbt wrong\n-\tmov #0, r7\n-\tnot r7, r7\n-\tcmp/eq r7, r0\n-\tbf wrong\n-\n-\tmov #1, r0\n-\tneg r0, r0\n-\tdt r0\n-\tmov #1, r7\n-\tnot r7, r7\n-\tcmp/eq r7, r0\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "90878020a28ef428559594687a1f5ba9b6f5747d",
      "filename": "sim/testsuite/sim/sh64/compact/extsb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 29,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/extsb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/extsb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/extsb.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,29 +0,0 @@\n-# sh testcase for exts.b $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global extsb\n-extsb:\n-\tmov #42, r1\n-\texts.b r1, r2\n-\tassert r2, #42\n-signed:\n-\tmov #0, r0\n-\tor #255, r0\n-\texts.b r0, r1\n-\tmov #0, r7\n-\tnot r7, r7\n-\tcmp/eq r1, r7\n-\tbf wrong\n-\t\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "d6257747df7ef17da05338733c7e29c5233294e5",
      "filename": "sim/testsuite/sim/sh64/compact/extsw.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/extsw.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/extsw.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/extsw.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,32 +0,0 @@\n-# sh testcase for exts.w $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global extsw\n-extsw:\n-\tmov #42, r1\n-\texts.w r1, r2\n-\tassert r2, #42\n-\t\n-another:\n-\tmov #0, r0\n-\tor #255, r0\n-\tshll8 r0\n-\texts.w r0, r1\n-\n-\tmov #-1, r7\n-\tshll8 r7\n-\tcmp/eq r1, r7\n-\tbf wrong\n-\t\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "51c14ac4359b094616acf95fda333cf4a9ad963f",
      "filename": "sim/testsuite/sim/sh64/compact/extub.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/extub.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/extub.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/extub.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,31 +0,0 @@\n-# sh testcase for extu.b $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global extub\n-extub:\n-\tmov #42, r1\n-\textu.b r1, r2\n-\tassert r2, #42\n-\n-another:\n-\tmov #0, r0\n-\tor #255, r0\n-\textu.b r0, r1\n-\n-\tmov #0, r0\n-\tor #255, r0\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail\n-"
    },
    {
      "sha": "057afe7d949fecc13a9f1ca2997390e53a2c8e30",
      "filename": "sim/testsuite/sim/sh64/compact/extuw.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/extuw.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/extuw.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/extuw.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,31 +0,0 @@\n-# sh testcase for extu.w $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global extuw\n-extuw:\n-\tmov #42, r1\n-\textu.w r1, r2\n-\tassert r2, #42\n-\t\n-another:\n-\tmov #0, r0\n-\tor #255, r0\n-\tshll8 r0\n-\textu.w r0, r1\n-\tmov #0, r0\n-\tor #255, r0\n-\tshll8 r0\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "6955fa2aa169694fa22b0080cf56edae7bf9ae5f",
      "filename": "sim/testsuite/sim/sh64/compact/fabs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 88,
      "changes": 88,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fabs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fabs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fabs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,88 +0,0 @@\n-# sh testcase for fabs -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\t_clrpr\n-\t# fabs(0.0) = 0.0.\n-\tfldi0 fr0\n-\tfabs fr0\n-\tfldi0 fr1\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\n-\t# fabs(1.0) = 1.0.\n-\tfldi1 fr0\n-\tfabs fr0\n-\tfldi1 fr1\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\n-\t# fabs(-1.0) = 1.0.\n-\tfldi1 fr0\n-\tfneg fr0\n-\tfabs fr0\n-\tfldi1 fr1\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\n-\tbra double\n-\tnop\n-\n-wrong:\n-\tfail\n-\n-double:\n-\t# double precision tests.\n-\t# fabs(0.0) = 0.0.\n-\tfldi0 fr0\n-\t_s2d fr0, dr0\n-\t_setpr\n-\tfabs dr0\n-\t_clrpr\n-\t# check.\n-\tfldi0 fr2\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/eq dr0, dr2\n-\tbf wrong\n-\t_clrpr\n-\n-one:\n-\t# fabs(1.0) = 1.0.\n-\tfldi1 fr0\n-\t_s2d fr0, dr0\n-\t_setpr\n-\tfabs dr0\n-\t_clrpr\n-\t# check.\n-\tfldi1 fr2\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/eq dr0, dr2\n-\tbf wrong2\n-\t_clrpr\n-\n-minusone:\n-\t# fabs(-1.0) = 1.0.\n-\tfldi1 fr0\n-\tfneg fr0\n-\t_s2d fr0, dr0\n-\t_setpr\n-\tfabs dr0\n-\t_clrpr\n-\t# check.\n-\tfldi1 fr2\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/eq dr0, dr2\n-\tbf wrong2\n-\t_clrpr\n-\n-okay:\n-\tpass\n-wrong2:\n-\tfail"
    },
    {
      "sha": "b00035308f8ffaac98b27440e9fa066b2e50488b",
      "filename": "sim/testsuite/sim/sh64/compact/fadd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fadd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fadd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fadd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,31 +0,0 @@\n-# sh testcase for fadd\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\t_clrpr\n-\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\tfadd fr0, fr1\n-\n-\tfldi0 fr0\n-\tfldi1 fr1\n-\tfadd fr0, fr1\n-\n-\tfldi1 fr0\n-\tfldi0 fr1\n-\tfadd fr0, fr1\n-\n-\t_setpr\n-double:\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\t_s2d fr0, dr4\n-\t_s2d fr1, dr6\n-\tfadd dr4, dr6\n-\n-\tpass"
    },
    {
      "sha": "151d5e5647a76c83f9ab544581e1bc328654b798",
      "filename": "sim/testsuite/sim/sh64/compact/fcmpeq.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 88,
      "changes": 88,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fcmpeq.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fcmpeq.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fcmpeq.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,88 +0,0 @@\n-# sh testcase for fcmpeq -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t# 1.0 == 1.0.\t\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\n-\t# 0.0 != 1.0.\n-\tfldi0 fr0\n-\tfldi1 fr1\n-\tfcmp/eq fr0, fr1\n-\tbt wrong\n-\n-\t# 1.0 != 0.0.\n-\tfldi1 fr0\n-\tfldi0 fr1\n-\tfcmp/eq fr0, fr1\n-\tbt wrong\n-\n-\t# 2.0 != 1.0\n-\tfldi1 fr0\n-\tfadd fr0, fr0\n-\tfldi1 fr1\n-\tfcmp/eq fr0, fr1\n-\tbt wrong\n-\n-\tbra double\n-\t# delay slot\n-\tnop\n-\n-wrong:\n-\tfail\n-\t\n-double:\n-\t# 1.0 == 1.0\n-\tfldi1 fr0\n-\tfldi1 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/eq dr0, dr2\n-\tbf wrong\n-\t_clrpr\n-\n-\t# 0.0 != 1.0\n-\tfldi0 fr0\n-\tfldi1 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/eq dr0, dr2\n-\tbt wrong\n-\t_clrpr\n-\n-\t# 1.0 != 0.0\n-\tfldi1 fr0\n-\tfldi0 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/eq dr0, dr2\n-\tbt wrong2\n-\t_clrpr\n-\n-\t# 2.0 != 1.0\n-\tfldi1 fr0\n-\tfadd fr0, fr0\n-\tfldi1 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/eq dr0, dr2\n-\tbt wrong2\n-\t_clrpr\n-\n-okay:\n-\tpass\n-\n-wrong2:\n-\tfail"
    },
    {
      "sha": "931ae3e2e6c4607e976f0cb3179dfc2fd4faa531",
      "filename": "sim/testsuite/sim/sh64/compact/fcmpgt.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 95,
      "changes": 95,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fcmpgt.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fcmpgt.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fcmpgt.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,95 +0,0 @@\n-# sh testcase for fcmpgt -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t# 1.0 !> 1.0.\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\tfcmp/gt fr0, fr1\n-\tbt wrong\n-\n-\t# 0.0 !> 1.0.\n-\tfldi0 fr0\n-\tfldi1 fr1\n-\tfcmp/gt fr0, fr1\n-\tbf wrong\n-\n-\t# 1.0 > 0.0.\n-\tfldi1 fr0\n-\tfldi0 fr1\n-\tfcmp/gt fr0, fr1\n-\tbt wrong\n-\n-\t# 2.0 > 1.0\n-\tfldi1 fr0\n-\tfadd fr0, fr0\n-\tfldi1 fr1\n-\tfcmp/gt fr0, fr1\n-\tbt wrong\n-\n-\tbra double\n-\tnop\n-\n-wrong:\n-\tfail\n-\n-double:\n-\t# double precision tests.\n-\t# 1.0 !> 1.0.\n-\tfldi1 fr0\n-\tfldi1 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/gt dr0, dr2\n-\tbt wrong2\n-\t_clrpr\n-\n-\t# 0.0 !> 1.0.\n-\tfldi0 fr0\n-\tfldi1 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/gt dr0, dr2\n-\tbf wrong2\n-\t_clrpr\n-\n-\tbra next\n-\tnop\n-\n-wrong2:\n-\tfail\n-\n-next:\n-\t# 1.0 > 0.0.\n-\tfldi1 fr0\n-\tfldi0 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/gt dr0, dr2\n-\tbt wrong2\n-\t_clrpr\n-\n-\t# 2.0 > 1.0.\n-\tfldi1 fr0\n-\tfadd fr0, fr0\n-\tfldi1 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/gt dr0, dr2\n-\tbt wrong2\n-\t_clrpr\n-\n-okay:\n-\tpass\n-\n-wrong3:\n-\tfail"
    },
    {
      "sha": "abf9e704ffbeb81a3ef9adcdc85cbecb9bdc7716",
      "filename": "sim/testsuite/sim/sh64/compact/fcnvds.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fcnvds.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fcnvds.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fcnvds.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,13 +0,0 @@\n-# sh testcase for fcnvds -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\t_setpr\n-\tfcnvds dr0, fpul\n-\t_clrpr\n-okay:\n-\tpass"
    },
    {
      "sha": "699bde55c6e17fd1489883bd2278f68a7a820d70",
      "filename": "sim/testsuite/sim/sh64/compact/fcnvsd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fcnvsd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fcnvsd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fcnvsd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,27 +0,0 @@\n-# sh testcase for fcnvsd -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tfldi1 fr0\n-\tflds fr0, fpul\n-\t_setpr\n-\tfcnvsd fpul, dr2\n-\t_clrpr\n-\n-\t# Convert back.\n-\t_setpr\n-\tfcnvds dr2, fpul\n-\t_clrpr\n-\tfsts fpul, fr1\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "06d1e93a0147aa198a5aa32a7d92dd7af5ea6124",
      "filename": "sim/testsuite/sim/sh64/compact/fdiv.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 83,
      "changes": 83,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fdiv.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fdiv.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fdiv.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,83 +0,0 @@\n-# sh testcase for fdiv -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\t_clrpr\n-\t\n-\t# 1.0 / 0.0 should be INF\n-\t# (and not crash the sim).\n-\tfldi0 fr0\n-\tfldi1 fr1\n-\tfdiv fr0, fr1\n-\n-\t# 0.0 / 1.0 == 0.0.\n-\tfldi0 fr0\n-\tfldi1 fr1\n-\tfdiv fr1, fr0\n-\tfldi0 fr2\n-\tfcmp/eq fr0, fr2\n-\tbf wrong\n-\n-\t# 2.0 / 1.0 == 2.0.\n-\tfldi1 fr1\n-\tfldi1 fr2\n-\tfadd fr2, fr2\n-\tfdiv fr1, fr2\n-\t# Load 2.0 into fr3.\n-\tfldi1 fr3\n-\tfadd fr3, fr3\n-\tfcmp/eq fr2, fr3\n-\tbf wrong\n-\n-\t# (1.0 / 2.0) + (1.0 / 2.0) == 1.0.\n-\tfldi1 fr1\n-\tfldi1 fr2\n-\tfadd fr2, fr2\n-\tfdiv fr2, fr1\n-\t# fr1 should contain 0.5.\n-\tfadd fr1, fr1\n-\t# Load 1.0 into fr3.\n-\tfldi1 fr3\n-\t# Compare fr1 with fr3.\n-\tfcmp/eq fr1, fr3\n-\tbf wrong\n-\n-\tbra double\n-\tnop\n-\n-wrong:\n-\tfail\n-\t\n-double:\t\n-\t# double test\n-\t# (1.0 / 2.0) + (1.0 / 2.0) == 1.0.\n-\tfldi1 fr1\n-\t_s2d fr1, dr6\n-\tfldi1 fr2\n-\tfadd fr2, fr2\n-\t_s2d fr2, dr8\n-\t_setpr\n-\tfdiv dr8, dr6\n-\t# dr0 should contain 0.5.\n-\t# double it, expect 1.0.\n-\tfadd dr6, dr6\n-\t_clrpr\n-foo:\t\n-\t# Load 1.0 into dr4.\n-\tfldi1 fr1\n-\t_s2d fr1, dr10\n-\t# Compare dr0 with dr10.\n-\t_setpr\n-\tfcmp/eq dr6, dr10\n-\tbf wrong2\n-\t_clrpr\n-\t\n-okay:\n-\tpass\n-\n-wrong2:\n-\tfail"
    },
    {
      "sha": "092f0f6c0664ca934d8312b147c2317f9158a454",
      "filename": "sim/testsuite/sim/sh64/compact/fipr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 44,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fipr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fipr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fipr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,44 +0,0 @@\n-# sh testcase for fipr $fvm, $fvn\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-initv1:\n-\tfldi1 fr0\n-\t# Load 2 into fr2.\n-\tfldi1 fr1\n-\tfadd fr1, fr1\n-\t# Load 4 into fr2.\n-\tfldi1 fr2\n-\tfadd fr2, fr2\n-\tfadd fr2, fr2\n-\tfldi0 fr3\n-\n-initv2:\n-\tfldi1 fr8\n-\tfldi0 fr9\n-\tfldi1 fr10\n-\tfldi0 fr11\n-\n-\tfipr fv0, fv8\n-\n-\t# Result will be in fr11.\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\t# Two.\n-\tfadd fr1, fr0\n-\t# Four.\n-\tfadd fr0, fr0\n-\t# Five.\n-\tfadd fr1, fr0\n-\tfcmp/eq fr0, fr11\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "b0d35e4fb097f3ebb0468d8e05f1ee284a1d33bf",
      "filename": "sim/testsuite/sim/sh64/compact/fldi0.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fldi0.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fldi0.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fldi0.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,17 +0,0 @@\n-# sh testcase for fldi0 $frn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tfldi0 fr0\n-\tfldi0 fr2\n-\tfldi0 fr4\n-\tfldi0 fr6\n-\tfldi0 fr8\n-\tfldi0 fr10\n-\tfldi0 fr12\n-\tfldi0 fr14\n-\tpass"
    },
    {
      "sha": "8bd5c521be22f82835db0a6fa071b9ad02bc32b5",
      "filename": "sim/testsuite/sim/sh64/compact/fldi1.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fldi1.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fldi1.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fldi1.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,17 +0,0 @@\n-# sh testcase for fldi1 $frn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tfldi1 fr1\n-\tfldi1 fr3\n-\tfldi1 fr5\n-\tfldi1 fr7\n-\tfldi1 fr9\n-\tfldi1 fr11\n-\tfldi1 fr13\n-\tfldi1 fr15\n-\tpass"
    },
    {
      "sha": "797e7cba9ab99740fffdb579d632980ad54291e6",
      "filename": "sim/testsuite/sim/sh64/compact/flds.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/flds.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/flds.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/flds.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,26 +0,0 @@\n-# sh testcase for flds -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tfldi0 fr0\n-\tflds fr0, fpul\n-\tfsts fpul, fr1\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\t\n-\tfldi1 fr0\n-\tflds fr0, fpul\n-\tfsts fpul, fr1\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "8532d7fd6511a170a65c216952262f5c713b0791",
      "filename": "sim/testsuite/sim/sh64/compact/float.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 80,
      "changes": 80,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/float.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/float.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/float.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,80 +0,0 @@\n-# sh testcase for float -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-pos:\t\n-\tmov #3, r0\n-\tlds r0, fpul\n-\tfloat fpul, fr7\n-\n-\t# Check the result.\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\tfadd fr0, fr1\n-\tfadd fr0, fr1\n-\tfcmp/eq fr1, fr7\n-\tbf wrong\n-\n-neg:\t\n-\tmov #3, r0\n-\tneg r0, r0\n-\tlds r0, fpul\n-\tfloat fpul, fr7\n-\n-\t# Check the result.\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\tfadd fr0, fr1\n-\tfadd fr0, fr1\n-\tfneg fr1\n-\tfcmp/eq fr1, fr7\n-\tbf wrong\n-\n-\tbra double\n-\tnop\n-\n-wrong:\n-\tfail\n-\t\n-double:\n-\tmov #3, r0\n-\tlds r0, fpul\n-\t_setpr\n-\tfloat fpul, dr8\n-\t_clrpr\n-\t# check the result.\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\tfadd fr0, fr1\n-\tfadd fr0, fr1\n-\t_s2d fr1, dr2\n-\tfcmp/eq dr2, dr8\n-\tbf wrong\n-\n-dneg:\n-\tmov #3, r0\n-\tneg r0, r0\n-\tlds r0, fpul\n-\t_setpr\n-\tfloat fpul, dr8\n-\t_clrpr\n-\t# check the result.\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\tfadd fr0, fr1\n-\tfadd fr0, fr1\n-\tfneg fr1\n-\t_s2d fr1, dr2\n-\tfcmp/eq dr2, dr8\n-\tbf wrong\t\n-\n-okay:\n-\tpass\n-\n-wrong2:\n-\tfail"
    },
    {
      "sha": "dbf36ab78c89a0b01f1adc3e1bdf7c9c29217b0c",
      "filename": "sim/testsuite/sim/sh64/compact/fmac.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 78,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fmac.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fmac.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fmac.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,78 +0,0 @@\n-# sh testcase for fmac -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t# 0.0 * x + y = y.\n-\n-\tfldi0 fr0\n-\tfldi1 fr1\n-\tfldi1 fr2\n-\tfmac fr0, fr1, fr2\n-\t# check result.\n-\tfldi1 fr0\n-\tfcmp/eq fr0, fr2\n-\tbf wrong\n-\n-\t# x * y + 0.0 = x * y.\n-\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\tfldi0 fr2\n-\t# double it.\n-\tfadd fr1, fr2\n-\tfmac fr0, fr1, fr2\n-\t# check result.\n-\tfldi1 fr0\n-\tfadd fr0, fr0\n-\tfcmp/eq fr0, fr2\n-\tbf wrong\n-\t\n-\t# x * 0.0 + y = y.\n-\n-\tfldi1 fr0\n-\tfldi0 fr1\n-\tfldi1 fr2\n-\tfadd fr2, fr2\n-\tfmac fr0, fr1, fr2\n-\t# check result.\n-\tfldi1 fr0\n-\t# double fr0.\n-\tfadd fr0, fr0\n-\tfcmp/eq fr0, fr2\n-\tbf wrong\n-\n-\t# x * 0.0 + 0.0 = 0.0\n-\n-\tfldi1 fr0\n-\tfadd fr0, fr0\n-\tfldi0 fr1\n-\tfldi0 fr2\n-\tfmac fr0, fr1, fr2\n-\t# check result.\n-\tfldi0 fr0\n-\tfcmp/eq fr0, fr2\n-\tbf wrong\n-\n-\t# 0.0 * x + 0.0 = 0.0.\n-\n-\tfldi0 fr0\n-\tfldi1 fr1\n-\t# double it.\n-\tfadd fr1, fr1\n-\tfldi0 fr2\n-\tfmac fr0, fr1, fr2\n-\t# check result.\n-\tfldi0 fr0\n-\tfcmp/eq fr0, fr2\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "f4e1fde3c11e9bbec37e4bd38448e2cbf910fe74",
      "filename": "sim/testsuite/sim/sh64/compact/fmov.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 273,
      "changes": 273,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fmov.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fmov.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fmov.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,273 +0,0 @@\n-# sh testcase for all fmov instructions\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\t.macro init\n-\tfldi0 fr0\n-\tfldi1 fr2\n-\t.endm\n-\n-\t# Set the SZ (SiZe) bit in the fpscr.\n-\t.macro _setsz\n-\tsts fpscr, r7\n-\tmov #16, r8\n-\tshll16 r8\n-\tor r8, r7\n-\tlds r7, fpscr\n-\t.endm\n-\n-\t# Clear the SZ bit.\n-\t.macro _clrsz\n-\tsts fpscr, r7\n-\tmov #16, r8\n-\tshll16 r8\n-\tnot r8, r8\n-\tand r8, r7\n-\tlds r7, fpscr\n-\t.endm\n-\tstart\n-\n-fmov1:  # Test fr -> fr.\n-\tinit\n-\t_clrpr\n-\t_clrsz\n-\tfmov fr0, fr10\n-\t# Ensure fr0 and fr10 are now equal.\n-\tfcmp/eq fr0, fr10\n-\tbt fmov2\n-\tfail\n-\n-fmov2:  # Test dr -> dr.\n-\tinit\n-\t_setpr\n-\t_setsz\n-\tfmov dr0, dr2\n-\t# Ensure dr0 and dr2 are now equal.\n-\tfcmp/eq dr0, dr2\n-\tbt fmov3\n-\tfail\n-\n-fmov3:  # Test dr -> xd and xd -> dr.\n-\tinit\n-\t_setsz\n-\tfmov dr0, xd0\n-\t# Ensure dr0 and xd0 are now equal.\n-\tfmov xd0, dr2\n-\tfcmp/eq dr0, dr2\n-\tbt fmov4\n-\tfail\n-\n-fmov4:  # Test xd -> xd.\n-\tinit\n-\t_setsz\n-\t_setpr\n-\tfmov dr0, xd0\n-\tfmov xd0, xd2\n-\tfmov xd2, dr2\n-\t# Ensure dr0 and dr2 are now equal.\n-\tfcmp/eq dr0, dr2\n-\tbt fmov5\n-\tfail\n-\n-fmov5:  # Test fr -> @rn and @rn -> fr.\n-\tinit\n-\t_clrsz\n-\t_clrpr\n-\tmov #40, r0\n-\tshll8 r0\n-\tfmov fr0, @r0\n-\tfmov @r0, fr1\n-\tfcmp/eq fr0, fr1\n-\tbt fmov6\n-\tfail\n-\n-fmov6:  # Test dr -> @rn and @rn -> dr.\n-\tinit\n-\t_setsz\n-\t_setpr\n-\tmov #40, r0\n-\tshll8 r0\n-\tfmov dr0, @r0\n-\tfmov @r0, dr2\n-\tfcmp/eq dr0, dr2\n-\tbt fmov7\n-\tfail\n-\n-fmov7:\t# Test xd -> @rn and @rn -> xd.\n-\tinit\n-\t_setsz\n-\t_setpr\n-\tmov #40, r0\n-\tshll8 r0\n-\tfmov dr0, xd0\n-\tfmov xd0, @r0\n-\tfmov @r0, xd2\n-\tfmov xd2, dr2\n-\tfcmp/eq dr0, dr2\n-\tbt fmov8\n-\tfail\n-\n-fmov8:\t# Test fr -> @-rn.\n-\tinit\n-\t_clrsz\n-\t_clrpr\n-\tmov #40, r0\n-\tshll8 r0\n-\t# Preserve.\n-\tmov r0, r1\n-\tfmov fr0, @-r0\n-\tfmov @r0, fr2\n-\tfcmp/eq fr0, fr2\n-\tbt f8b\n-\tfail\n-f8b:\t# check pre-dec.\n-\tadd #4, r0\n-\tcmp/eq r0, r1\n-\tbt fmov9\n-\tfail\n-\n-fmov9:\t# Test dr -> @-rn.\n-\tinit\n-\t_setsz\n-\t_setpr\n-\tmov #40, r0\n-\tshll8 r0\n-\t# Preserve r0.\n-\tmov r0, r1\n-\tfmov dr0, @-r0\n-\tfmov @r0, dr2\n-\tfcmp/eq dr0, dr2\n-\tbt f9b\n-\tfail\n-f9b:\t# check pre-dec.\n-\tadd #8, r0\n-\tcmp/eq r0, r1\n-\tbt fmov10\n-\tfail\n-\n-fmov10:\t# Test xd -> @-rn.\n-\tinit\n-\t_setsz\n-\t_setpr\n-\tmov #40, r0\n-\tshll8 r0\n-\t# Preserve r0.\n-\tmov r0, r1\n-\tfmov dr0, xd0\n-\tfmov xd0, @-r0\n-\tfmov @r0, xd2\n-\tfmov xd2, dr2\n-\tfcmp/eq dr0, dr2\n-\tbt f10b\n-\tfail\n-f10b:   # check pre-dec.\n-\tadd #8, r0\n-\tcmp/eq r0, r1\n-\tbt fmov11\n-\tfail\n-\n-fmov11:\t# Test @rn+ -> fr.\n-\tinit\n-\t_clrsz\n-\t_clrpr\n-\tmov #40, r0\n-\tshll8 r0\n-\t# Preserve r0.\n-\tmov r0, r1\n-\tfmov fr0, @r0\n-\tfmov @r0+, fr2\n-\tfcmp/eq fr0, fr2\n-\tbt f11b\n-\tfail\n-f11b:   # check post-inc.\n-\tadd #4, r1\n-\tcmp/eq r0, r1\n-\tbt fmov12\n-\tfail\n-\n-fmov12:\t# Test @rn+ -> dr.\n-\tinit\n-\t_setsz\n-\t_setpr\n-\tmov #40, r0\n-\tshll8 r0\n-\t# preserve r0.\n-\tmov r0, r1\n-\tfmov dr0, @r0\n-\tfmov @r0+, dr2\n-\tfcmp/eq dr0, dr2\n-\tbt f12b\n-\tfail\n-f12b:   # check post-inc.\n-\tadd #8, r1\n-\tcmp/eq r0, r1\n-\tbt fmov13\n-\tfail\n-\n-fmov13:\t# Test @rn -> xd.\n-\tinit\n-\t_setsz\n-\t_setpr\n-\tmov #40, r0\n-\tshll8 r0\n-\t# Preserve r0.\n-\tmov r0, r1\n-\tfmov dr0, xd0\n-\tfmov xd0, @r0\n-\tfmov @r0+, xd2\n-\tfmov xd2, dr2\n-\tfcmp/eq dr0, dr2\n-\tbt f13b\n-\tfail\n-f13b:\n-\tadd #8, r1\n-\tcmp/eq r0, r1\n-\tbt fmov14\n-\tfail\n-\n-fmov14:\t# Test fr -> @(r0,rn), @(r0, rn) -> fr.\n-\tinit\n-\t_clrsz\n-\t_clrpr\n-\tmov #40, r0\n-\tshll8 r0\n-\tmov #0, r1\n-\tfmov fr0, @(r0, r1)\n-\tfmov @(r0, r1), fr1\n-\tfcmp/eq fr0, fr1\n-\tbt fmov15\n-\tfail\n-\n-fmov15:\t# Test dr -> @(r0, rn), @(r0, rn) -> dr.\n-\tinit\n-\t_setsz\n-\t_setpr\n-\tmov #40, r0\n-\tshll8 r0\n-\tmov #0, r1\n-\tfmov dr0, @(r0, r1)\n-\tfmov @(r0, r1), dr2\n-\tfcmp/eq dr0, dr2\n-\tbt fmov16\n-\tfail\n-\n-fmov16:\t# Test xd -> @(r0, rn), @(r0, rn) -> xd.\n-\tinit\n-\t_setsz\n-\t_setpr\n-\tmov #40, r0\n-\tshll8 r0\n-\tmov #0, r1\n-\tfmov dr0, xd0\n-\tfmov xd0, @(r0, r1)\n-\tfmov @(r0, r1), xd2\n-\tfmov xd2, dr2\n-\tfcmp/eq dr0, dr2\n-\tbt okay\n-\tfail\n-\n-okay:\n-\tpass"
    },
    {
      "sha": "a1325d6395b23260c5875fa84f49af865fa9dd1d",
      "filename": "sim/testsuite/sim/sh64/compact/fmul.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 121,
      "changes": 121,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fmul.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fmul.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fmul.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,121 +0,0 @@\n-# sh testcase for fmul -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\t.macro init\n-\tfldi0 fr0\n-\tfldi1 fr1\n-\tfldi1 fr2\n-\tfadd fr2, fr2\n-\tfldi0 fr7\n-\tfldi1 fr8\n-\t.endm\n-\n-\tstart\n-\n-\t# 0.0 * 0.0 = 0.0.\n-\tinit\n-\tfmul fr0, fr0\n-\tfcmp/eq fr7, fr0\n-\tbf wrong\n-\n-\t# 0.0 * 1.0 = 0.0.\n-\tinit\n-\tfmul fr1, fr0\n-\tfcmp/eq fr7, fr0\n-\tbf wrong\n-\n-\t# 1.0 * 0.0 = 0.0.\n-\tinit\n-\tfmul fr0, fr1\n-\tfcmp/eq fr7, fr1\n-\tbf wrong\n-\n-\t# 1.0 * 1.0 = 1.0.\n-\tinit\n-\tfmul fr1, fr1\n-\tfcmp/eq fr8, fr1\n-\tbf wrong\n-\n-\t# 2.0 * 1.0 = 2.0.\n-\tinit\n-\tfmul fr2, fr1\n-\tfcmp/eq fr2, fr1\n-\tbf wrong\n-\n-\tbra double\n-\tnop\n-\n-wrong:\n-\tfail\n-\t\n-\t.macro dinit\n-\tfldi0 fr0\n-\tfldi1 fr2\n-\tfldi1 fr4\n-\tfadd fr4, fr4\n-\tfldi0 fr8\n-\tfldi1 fr10\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_s2d fr4, dr4\n-\t_s2d fr8, dr8\n-\t_s2d fr10, dr10\n-\t.endm\n-\t\n-double:\n-\t# 0.0 * 0.0 = 0.0.\n-\tdinit\n-\t_setpr\n-\tfmul dr0, dr0\n-\tfcmp/eq dr8, dr0\n-\tbf wrong\n-\t_clrpr\n-\n-\t# 0.0 * 1.0 = 0.0.\n-\tdinit\n-\t_setpr\n-\tfmul dr2, dr0\n-\tfcmp/eq dr8, dr0\n-\tbf wrong2\n-\t_clrpr\n-\n-\t# 1.0 * 0.0 = 0.0.\n-\tdinit\n-\t_setpr\n-\tfmul dr0, dr2\n-\tfcmp/eq dr8, dr2\n-\tbf wrong2\n-\t_clrpr\n-\n-\tbra next\n-\tnop\n-\n-wrong2:\n-\tfail\n-\n-next:\n-\t# 1.0 * 1.0 = 1.0.\n-\tdinit\n-\t_setpr\n-\tfmul dr2, dr2\n-\tfcmp/eq dr10, dr2\n-\tbf wrong3\n-\t_clrpr\n-\n-\t# 2.0 * 1.0 = 2.0.\n-\tdinit\n-\t_setpr\n-\tfmul dr4, dr2\n-\tfcmp/eq dr4, dr2\n-\tbf wrong3\n-\t_clrpr\n-\n-okay:\n-\tpass\n-\n-wrong3:\t\n-\tfail"
    },
    {
      "sha": "71fc901fb6d7a538c85b9d39e11c705dfaa3eabb",
      "filename": "sim/testsuite/sim/sh64/compact/fneg.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 83,
      "changes": 83,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fneg.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fneg.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fneg.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,83 +0,0 @@\n-# sh testcase for fneg -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t# neg(0.0) = 0.0.\n-\tfldi0 fr0\n-\tfldi0 fr1\n-\tfneg fr0\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\n-\t# neg(1.0) = fsub(0,1)\n-\tfldi1 fr0\n-\tfneg fr0\n-\tfldi0 fr1\n-\tfldi1 fr2\n-\tfsub fr2, fr1\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\t\n-\t# neg(neg(1.0)) = 1.0.\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\tfneg fr0\n-\tfneg fr0\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\n-\tbra double\n-\tnop\n-\n-wrong:\n-\tfail\n-\n-double:\n-\t# neg(0.0) = 0.0.\n-\tfldi0 fr0\n-\tfldi0 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfneg dr0\n-\tfcmp/eq dr0, dr2\n-\tbf wrong2\n-\t_clrpr\n-\n-\t# neg(1.0) = fsub(0,1)\n-\tfldi1 fr0\n-\t_s2d fr0, dr0\n-\t_setpr\n-\tfneg dr0\n-\t_clrpr\n-\tfldi0 fr2\n-\tfldi1 fr3\n-\tfsub fr3, fr2\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/eq fr0, fr2\n-\tbf wrong2\n-\t_clrpr\n-\t\n-\t# neg(neg(1.0)) = 1.0.\n-\tfldi1 fr0\n-\t_s2d fr0, dr0\n-\tfldi1 fr2\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfneg dr0\n-\tfneg dr2\n-\tfcmp/eq dr0, dr2\n-\tbf wrong2\n-\t_clrpr\n-\t\t\n-okay:\n-\tpass\n-\n-wrong2:\t\n-\tfail"
    },
    {
      "sha": "6f2e743fc370b2a15fbc36d0988e8092411629b8",
      "filename": "sim/testsuite/sim/sh64/compact/frchg.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/frchg.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/frchg.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/frchg.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,13 +0,0 @@\n-# sh testcase for frchg\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tfrchg\n-\tfrchg\n-\tfrchg\n-\tfrchg\n-\tpass"
    },
    {
      "sha": "54a1491962b3a9bacec6a0969cfdb78a90bf4633",
      "filename": "sim/testsuite/sim/sh64/compact/fschg.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fschg.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fschg.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fschg.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,13 +0,0 @@\n-# sh testcase for fschg\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tfschg\n-\tfschg\n-\tfschg\n-\tfschg\n-\tpass"
    },
    {
      "sha": "933e112c903542fd769b90e785da6990081ba8c3",
      "filename": "sim/testsuite/sim/sh64/compact/fsqrt.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 93,
      "changes": 93,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fsqrt.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fsqrt.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fsqrt.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,93 +0,0 @@\n-# sh testcase for fsqrt -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t# sqrt(0.0) = 0.0.\n-\tfldi0 fr0\n-\tfsqrt fr0\n-\tfldi0 fr1\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\n-\t# sqrt(1.0) = 1.0.\n-\tfldi1 fr0\n-\tfsqrt fr0\n-\tfldi1 fr1\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\n-\t# sqrt(4.0) = 2.0\n-\tfldi1 fr0\n-\t# Double it.\n-\tfadd fr0, fr0\n-\t# Double it again.\n-\tfadd fr0, fr0\n-\tfsqrt fr0\n-\tfldi1 fr1\n-\t# Double it.\n-\tfadd fr1, fr1\n-\tfcmp/eq fr0, fr1\n-\tbf wrong\n-\n-\tbra double\n-\tnop\n-\n-wrong:\n-\tfail\n-\n-double:\n-\t# sqrt(0.0) = 0.0.\n-\tfldi0 fr0\n-\t_s2d fr0, dr0\n-\t_setpr\n-\tfsqrt dr0\n-\t_clrpr\n-\tfldi0 fr2\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/eq dr0, dr2\n-\tbf wrong2\n-\t_clrpr\n-\n-\t# sqrt(1.0) = 1.0.\n-\tfldi1 fr0\n-\t_s2d fr0, dr0\n-\t_setpr\n-\tfsqrt dr0\n-\t_clrpr\n-\tfldi1 fr2\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/eq fr0, fr2\n-\tbf wrong2\n-\t_clrpr\n-\n-\t# sqrt(4.0) = 2.0.\n-\tfldi1 fr0\n-\t# Double it.\n-\tfadd fr0, fr0\n-\t# Double it again.\n-\tfadd fr0, fr0\n-\t_s2d fr0, dr0\n-\t_setpr\n-\tfsqrt dr0\n-\t_clrpr\n-\tfldi1 fr2\n-\t# Double it.\n-\tfadd fr2, fr2\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfcmp/eq fr0, fr2\n-\tbf wrong2\n-\t_clrpr\n-\n-okay:\n-\tpass\n-\n-wrong2:\n-\tfail"
    },
    {
      "sha": "518533db09487a7efd358edce0195245766995d9",
      "filename": "sim/testsuite/sim/sh64/compact/fsts.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 11,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fsts.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fsts.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fsts.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,11 +0,0 @@\n-# sh testcase for fsts fpul, $frn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tfsts fpul, fr0\n-\tfsts fpul, fr1\n-\tpass"
    },
    {
      "sha": "346d01ffcaa2afaa11ba0b9e569eaf908ea2a161",
      "filename": "sim/testsuite/sim/sh64/compact/fsub.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 120,
      "changes": 120,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fsub.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/fsub.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/fsub.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,120 +0,0 @@\n-# sh testcase for fmul -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\t# 0.0 - 0.0 = 0.0.\n-\tfldi0 fr0\n-\tfldi0 fr1\n-\tfsub fr0, fr1\n-\tfldi0 fr2\n-\tfcmp/eq fr1, fr2\n-\tbf wrong\n-\n-\t# 1.0 - 0.0 = 1.0.\n-\tfldi0 fr0\n-\tfldi1 fr1\n-\tfsub fr0, fr1\n-\tfldi1 fr2\n-\tfcmp/eq fr1, fr2\n-\tbf wrong\n-\n-\t# 1.0 - 1.0 = 0.0.\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\tfsub fr0, fr1\n-\tfldi0 fr2\n-\tfcmp/eq fr1, fr2\n-\tbf wrong\n-\n-\t# 0.0 - 1.0 = -1.0.\n-\tfldi1 fr0\n-\tfldi0 fr1\n-\tfsub fr0, fr1\n-\tfldi1 fr2\n-\tfneg fr2\n-\tfcmp/eq fr1, fr2\n-\tbf wrong\n-\n-\tbra double\t\n-\tnop\n-\n-wrong:\n-\tfail\n-\n-double:\n-\t# 0.0 - 0.0 = 0.0.\n-\tfldi0 fr0\n-\tfldi0 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfsub dr0, dr2\n-\t_clrpr\n-\tfldi0 fr4\n-\t_s2d fr4, dr4\n-\t_setpr\n-\tfcmp/eq dr2, dr4\n-\tbf wrong\n-\t_clrpr\n-\n-onezero:\t\n-\t# 1.0 - 0.0 = 1.0.\n-\tfldi0 fr0\n-\tfldi1 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfsub dr0, dr2\n-\t_clrpr\n-\tfldi1 fr4\n-\t_s2d fr4, dr4\n-\t_setpr\n-\tfcmp/eq dr2, dr4\n-\tbf wrong2\n-\t_clrpr\n-\n-oneone:\t\n-\t# 1.0 - 1.0 = 0.0.\n-\tfldi1 fr0\n-\tfldi1 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfsub dr0, dr2\n-\t_clrpr\n-\tfldi0 fr4\n-\t_s2d fr4, dr4\n-\t_setpr\n-\tfcmp/eq dr2, dr4\n-\tbf wrong2\n-\t_clrpr\n-\n-\tbra zeroone\n-\tnop\n-\n-wrong2:\n-\tfail\n-\n-zeroone:\t\n-\t# 0.0 - 1.0 = -1.0.\n-\tfldi1 fr0\n-\tfldi0 fr2\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_setpr\n-\tfsub dr0, dr2\n-\t_clrpr\n-\tfldi1 fr4\n-\tfneg fr4\n-\t_s2d fr4, dr4\n-\t_setpr\n-\tfcmp/eq dr2, dr4\n-\tbf wrong2\n-\t_clrpr\n-\t\t\n-okay:\n-\tpass"
    },
    {
      "sha": "6a89744b33e6ed7145ce51b047c652a1b6a05565",
      "filename": "sim/testsuite/sim/sh64/compact/ftrc.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 132,
      "changes": 132,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ftrc.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ftrc.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ftrc.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,132 +0,0 @@\n-# sh testcase for ftrc -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t# ftrc(0.0) = 0.\n-\tfldi0 fr0\n-\tftrc fr0, fpul\n-\t# check results.\n-\tmov #0, r0\n-\tsts fpul, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\t\n-\t# ftrc(1.5) = 1.\n-\tfldi1 fr0\n-\tfldi1 fr1\n-\tfldi1 fr2\n-\t# double it.\n-\tfadd fr2, fr2\n-\t# form the fraction.\n-\tfdiv fr2, fr1\n-\tfadd fr1, fr0\n-\t# now we've got 1.5 in fr0.\n-\tftrc fr0, fpul\n-\t# check results.\n-\tmov #1, r0\n-\tsts fpul, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-\t# ftrc(-1.5) = -1.\n-\tfldi1 fr0\n-\tfneg fr0\n-\tfldi1 fr1\n-\tfldi1 fr2\n-\t# double it.\n-\tfadd fr2, fr2\n-\t# form the fraction.\n-\tfdiv fr2, fr1\n-\tfneg fr1\n-\t# -1 + -0.5 = -1.5.\n-\tfadd fr1, fr0\n-\t# now we've got 1.5 in fr0.\n-\tftrc fr0, fpul\n-\t# check results.\n-\tmov #1, r0\n-\tneg r0, r0\n-\tsts fpul, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-\tbra double\n-\tnop\n-\n-wrong:\n-\tfail\n-\n-double:\n-\t# ftrc(0.0) = 0.\n-\tfldi0 fr0\n-\t_s2d fr0, dr0\n-\t_setpr\n-\tftrc dr0, fpul\n-\t_clrpr\n-\t# check results.\n-\tmov #0, r0\n-\tsts fpul, r1\n-\tcmp/eq r0, r1\n-foo:\t\n-\tbf wrong2\n-\n-\t# ftrc(1.5) = 1.\n-\tfldi1 fr0\n-\tfldi1 fr2\n-\tfldi1 fr4\n-\t# double it.\n-\tfadd fr4, fr4\n-\t# form 0.5.\n-\tfdiv fr4, fr2\n-\tfadd fr2, fr0\n-\t# now we've got 1.5 in fr0, so do some single->double\n-\t# conversions and perform the ftrc.\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_s2d fr4, dr4\n-\t_setpr\n-\tftrc dr0, fpul\n-\t_clrpr\n-\t\n-\t# check results.\n-\tmov #1, r0\n-\tsts fpul, r1\n-\tcmp/eq r0, r1\n-\tbf wrong2\n-\n-\t# ftrc(-1.5) = -1.\n-\tfldi1 fr0\n-\tfneg fr0\n-\tfldi1 fr2\n-\tfldi1 fr4\n-\t# double it.\n-\tfadd fr4, fr4\n-\t# form the fraction.\n-\tfdiv fr4, fr2\n-\tfneg fr2\n-\t# -1 + -0.5 = -1.5.\n-\tfadd fr2, fr0\n-\t# now we've got 1.5 in fr0, so do some single->double\n-\t# conversions and perform the ftrc.\n-\t_s2d fr0, dr0\n-\t_s2d fr2, dr2\n-\t_s2d fr4, dr4\n-\t_setpr\n-\tftrc dr0, fpul\n-\t_clrpr\n-\t\n-\t# check results.\n-\tmov #1, r0\n-\tneg r0, r0\n-\tsts fpul, r1\n-\tcmp/eq r0, r1\n-\tbf wrong2\n-\n-okay:\n-\tpass\n-wrong2:\n-\tfail"
    },
    {
      "sha": "9bdf806ba1310e888764d9207737504f7cf97eb4",
      "filename": "sim/testsuite/sim/sh64/compact/ftrv.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 74,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ftrv.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ftrv.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ftrv.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,74 +0,0 @@\n-# sh testcase for ftrv xmtrx, $fvn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\t# set the fr bit in the fpscr\n-\t.macro _setfr\n-\tsts fpscr, r7\n-\tmov #32, r8\n-\tshll16 r8\n-\tor r8, r7\n-\tlds r7, fpscr\n-\t.endm\n-\n-\t# clear the fr bit\n-\t.macro _clrfr\n-\tsts fpscr, r7\n-\tmov #32, r8\n-\tshll16 r8\n-\tnot r8, r8\n-\tand r8, r7\n-\tlds r7, fpscr\n-\t.endm\n-\n-\t.macro incr old new\n-\tfldi1 \\new\n-\tfadd \\old, \\new\n-\t.endm\n-\n-\tstart\n-\t_setfr\n-popmtrx:\n-\t# 1.0.\n-\tfldi1 fr0\n-\t# 2.0.\n-\tfldi1 fr1\n-\tfadd fr1, fr1\n-\n-\tincr fr1, fr2\n-\tincr fr2, fr3\n-\tincr fr3, fr4\n-\tincr fr4, fr5\n-\tincr fr5, fr6\n-\tincr fr6, fr7\n-\tincr fr7, fr8\n-\tincr fr8, fr9\n-\tincr fr9, fr10\n-\tincr fr10, fr11\n-\tincr fr11, fr12\n-\tincr fr12, fr13\n-\tincr fr13, fr14\n-\tincr fr14, fr15\n-\n-popvect:\n-\t# Swtich fp banks.\n-\t_clrfr\n-\tfldi1 fr4\n-\tfldi1 fr5\n-\tfadd fr5, fr5\n-\tfldi1 fr6\n-\tfadd fr5, fr6\n-\tfldi1 fr7\n-\tfadd fr6, fr7\n-\n-ftrv:\n-\t# fr[4,7] should contain the results:\n-\t# { 30, 70, 110, 150 }.\n-\tftrv xmtrx, fv4\n-\n-okay:\n-\tpass\n-"
    },
    {
      "sha": "e9e9940154521e3bd7b9607e9eb62c858d374d47",
      "filename": "sim/testsuite/sim/sh64/compact/jmp.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 29,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/jmp.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/jmp.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/jmp.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,29 +0,0 @@\n-# sh testcase for jmp @$rn\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global jmp\n-jmp:\n-\t# Load 0x1010 into r0.\n-\tmov #1, r0\n-\tshll8 r0\n-\tshll2 r0\n-\tshll2 r0\n-\tadd #16, r0\n-\tjmp @r0\n-slot:\n-\tnop\n-bad:\n-\tfail\n-okay:\n-\tpass\n-alsobad:\n-\tfail\n-\tfail\n-\tfail\n-"
    },
    {
      "sha": "5ad7aefc9318a185172ccbaa1ca0c858c2bd5689",
      "filename": "sim/testsuite/sim/sh64/compact/jsr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 29,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/jsr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/jsr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/jsr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,29 +0,0 @@\n-# sh testcase for jsr @$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global jsr\n-jsr:\n-\t# Load 0x1010 into r0.\n-\tmov #1, r0\n-\tshll8 r0\n-\tshll2 r0\n-\tshll2 r0\n-\tadd #16, r0\n-\tjsr @r0\n-slot:\t\n-\tnop\n-bad:\n-\tfail\n-okay:\n-\tpass\n-alsobad:\n-\tfail\n-\tfail\n-\tfail\n-"
    },
    {
      "sha": "b19a3c194fecb59f781d09f2ec58e2fdcc96eaf9",
      "filename": "sim/testsuite/sim/sh64/compact/ldc-gbr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldc-gbr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldc-gbr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ldc-gbr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,22 +0,0 @@\n-# sh testcase for ldc $rn, gbr -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global ldc\n-ldc:\n-\tmov #40, r0\n-\tshll8 r0\n-\tldc r0, gbr\n-\tstc gbr, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "613e58e722c7a3a58f207c358cafa4292082eaef",
      "filename": "sim/testsuite/sim/sh64/compact/ldcl-gbr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldcl-gbr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldcl-gbr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ldcl-gbr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,28 +0,0 @@\n-# sh testcase for ldc.l @${rn}+, gbr -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global ldcl\n-ldcl:\n-\tmov #40, r0\n-\tshll8 r0\n-\t# Preserve address.\n-\tmov r0, r1\n-\tldc.l @r0+, gbr\n-\n-\t# Add 4 to saved address (r1).\n-\t# Then compare with r0.\n-\tadd #4, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "2dce253375d78a2be2f49469688742dff8a4ff7f",
      "filename": "sim/testsuite/sim/sh64/compact/lds-fpscr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/lds-fpscr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/lds-fpscr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/lds-fpscr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,22 +0,0 @@\n-# sh testcase for lds $rn, fpscr -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global lds_fpscr\n-lds_fpscr:\n-\tmov #0, r0\n-\tlds r0, fpscr\n-readback:\n-\tsts fpscr, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "1a80a7032ea2c1de22502abc0205aecc482da715",
      "filename": "sim/testsuite/sim/sh64/compact/lds-fpul.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/lds-fpul.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/lds-fpul.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/lds-fpul.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,17 +0,0 @@\n-# sh testcase for lds $rn, fpul -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global lds_fpul\n-lds_fpul:\n-\tmov #63, r0\n-\tshll8 r0\n-\tadd #128, r0\n-\tshll16 r0\n-\tlds r0, fpul\n-\tpass"
    },
    {
      "sha": "1ffd6566c9a889a3c238c0f0eb81aa4246f27818",
      "filename": "sim/testsuite/sim/sh64/compact/lds-mach.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/lds-mach.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/lds-mach.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/lds-mach.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,23 +0,0 @@\n-# sh testcase for lds $rn, mach\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global lds_mach\n-lds_mach:\n-\tmov #41, r0\n-\tshll8 r0\n-\tlds r0, mach\n-readback:\n-\tsts mach, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "f09315abbb6e8f15b24140fc8c4fc01a41be6862",
      "filename": "sim/testsuite/sim/sh64/compact/lds-macl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/lds-macl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/lds-macl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/lds-macl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,23 +0,0 @@\n-# sh testcase for lds $rn, macl\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global lds_macl\n-lds_macl:\n-\tmov #42, r0\n-\tshll8 r0\n-\tlds r0, macl\n-readback:\n-\tsts macl, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "97e3a650767910a8b08c6f23e9d540c17e307ca9",
      "filename": "sim/testsuite/sim/sh64/compact/lds-pr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/lds-pr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/lds-pr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/lds-pr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,23 +0,0 @@\n-# sh testcase for lds $rn, pr\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global lds_pr\n-lds_pr:\n-\tmov #40, r0\n-\tshll8 r0\n-\tlds r0, pr\n-readback:\n-\tsts pr, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "642f15dc527a333eac91dc5ff954f0e12b320d73",
      "filename": "sim/testsuite/sim/sh64/compact/ldsl-fpscr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldsl-fpscr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldsl-fpscr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ldsl-fpscr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,43 +0,0 @@\n-# sh testcase for lds.l @${rn}+, fpscr -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tmov #40, r0\n-\tshll8 r0\n-\t# save address for later examination.\n-\tmov r0, r1\n-\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\tshll8 r2\n-\tadd #85, r2\n-\tshll8 r2\n-\tadd #170, r2\n-\t# Store it in memory.\n-\tmov.l r2, @r0\n-\n-\tlds.l @r0+, fpscr\n-\n-check:\n-\t# Read it back.\n-\tsts fpscr, r3\n-\tcmp/eq r2, r3\n-\tbf wrong\n-\n-inc:\n-\t# Test for proper post-increment.\n-\tadd #4, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\t"
    },
    {
      "sha": "428a5b718162771c4fc1678664b4b6b88013d638",
      "filename": "sim/testsuite/sim/sh64/compact/ldsl-fpul.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldsl-fpul.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldsl-fpul.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ldsl-fpul.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,27 +0,0 @@\n-# sh testcase for lds.l @${rn}+, fpul -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global ldsl_fpul\n-ldsl_fpul:\n-\tmov #40, r0\n-\tshll8 r0\n-\t# remember the address.\n-\tmov r0, r1\n-\tlds.l @r0+, fpul\n-\n-\t# ensure post increment occurred.\n-\tadd #4, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "f5ffdec8dcedb4354e274dfc3bf20c1ab4aa9ecc",
      "filename": "sim/testsuite/sim/sh64/compact/ldsl-mach.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldsl-mach.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldsl-mach.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ldsl-mach.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,26 +0,0 @@\n-# sh testcase for lds.l @${rn}+, mach -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global ldsl_mach\n-ldsl_mach:\n-\tmov #40, r0\n-\tshll8 r0\n-\t# save address for later examination.\n-\tmov r0, r1\n-\n-\tlds.l @r0+, mach\n-\n-\tadd #4, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "4e21bf1942f40168b4975eabd792bf32c8cc30bc",
      "filename": "sim/testsuite/sim/sh64/compact/ldsl-macl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldsl-macl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldsl-macl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ldsl-macl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,26 +0,0 @@\n-# sh testcase for lds.l @${rn}+, macl -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global ldsl_macl\n-ldsl_macl:\n-\tmov #40, r0\n-\tshll8 r0\n-\t# save address for later examination.\n-\tmov r0, r1\n-\n-\tlds.l @r0+, macl\n-\n-\tadd #4, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "eb8ee531bd3b2770eb4ef99f139eb832b6d7366e",
      "filename": "sim/testsuite/sim/sh64/compact/ldsl-pr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldsl-pr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ldsl-pr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ldsl-pr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,28 +0,0 @@\n-# sh testcase for lds.l @${rn}+, pr -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global ldsl_pr\n-ldsl_pr:\n-\tmov #40, r0\n-\tshll8 r0\n-\t# Preserve address.\n-\tmov r0, r1\n-\tlds.l @r0+, pr\n-\n-\t# Add 4 to saved address (r1).\n-\t# Then compare with r0.\n-\tadd #4, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "ef2dfa6e929a2d5680ec2022b2fb3e7f31d3f666",
      "filename": "sim/testsuite/sim/sh64/compact/macl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 76,
      "changes": 76,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/macl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/macl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/macl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,76 +0,0 @@\n-# sh testcase for mac.l @${rm}+, @${rn}+\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\t# force S-bit clear\n-\tclrs\n-\n-\t# Store some magic numbers in memory.\n-\tmov #40, r1\n-\tshll8 r1\n-\tmov #85, r0\n-\tmov.l r0, @r1\n-\t# Keep for later.\n-\tmov r1, r10\n-store2:\n-\tmov #40, r1\n-\tshll8 r1\n-\tadd #12, r1\n-\tmov #17, r0\n-\tmov.l r0, @r1\n-\t# Keep for later.\n-\tmov r1, r11\n-\n-init:\n-\t# Set up addresses.\n-\tmov #40, r1\n-\tshll8 r1\n-\tmov #40, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\n-\t# Prime {MACL, MACH} to #1.\n-\tmov #1, r3\n-\tdmulu.l r3, r3\n-\n-test:\n-\tmac.l @r1+, @r2+\n-\n-check:\n-\t# Check result.\n-\tsts mach, r5\n-\tassert r5, #0\n-\n-\tmov #5, r0\n-\tshll8 r0\n-\tor #166, r0\n-\tsts macl, r6\n-\tcmp/eq r6, r0\n-\tbf wrong\n-\n-\t# Ensure post-increment occurred.\n-\tadd #4, r10\n-\tcmp/eq r10, r1\n-\tbf wrong\n-\n-\tadd #4, r11\n-\tcmp/eq r11, r2\n-\tbf wrong\n-\n-doubleinc:\n-\tmov #40, r0\n-\tshll8 r0\n-\tmov r0, r1\n-\tmac.l @r0+, @r0+\n-\tadd #16, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "f5935f7054d0157faef2d52e9e37108b7e89364e",
      "filename": "sim/testsuite/sim/sh64/compact/macw.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 70,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/macw.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/macw.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/macw.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,70 +0,0 @@\n-# sh testcase for mac.w @${rm}+, @${rn}+\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t# Store some magic numbers in memory.\n-\tmov #40, r1\n-\tshll8 r1\n-\tmov #85, r0\n-\tmov.l r0, @r1\n-\t# Keep for later.\n-\tmov r1, r10\n-store2:\n-\tmov #40, r1\n-\tshll8 r1\n-\tadd #12, r1\n-\tmov #17, r0\n-\tmov.l r0, @r1\n-\t# Keep for later.\n-\tmov r1, r11\n-\n-init:\n-\t# Set up addresses.\n-\tmov #40, r1\n-\tshll8 r1\n-\tmov #40, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\n-\t# Prime {MACL, MACH} to #1.\n-\tmov #1, r3\n-\tdmulu.l r3, r3\n-\n-test:\n-\tmac.w @r1+, @r2+\n-\n-check:\n-\t# Check result.\n-\tsts mach, r5\n-\tassert r5, #0\n-\n-\tsts macl, r6\n-\tassert r6, #1\n-\n-\t# Ensure post-increment occurred.\n-\tadd #2, r10\n-\tcmp/eq r10, r1\n-\tbf wrong\n-\n-\tadd #2, r11\n-\tcmp/eq r11, r2\n-\tbf wrong\n-\n-doubleinc:\n-\tmov #40, r0\n-\tshll8 r0\n-\tmov r0, r1\n-\tmac.w @r0+, @r0+\n-\tadd #8, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\t\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "9442388384e23fdaeef895772a067dff55580d0d",
      "filename": "sim/testsuite/sim/sh64/compact/mov.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/mov.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/mov.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/mov.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,40 +0,0 @@\n-# sh testcase for mov $rm64, $rn64\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global mov\n-mov:\n-\tmov #1, r0\n-\trotr r0\n-\tmov #0, r15\n-\tmov #10, r0\n-\n-\tmov r0, r1\n-\tmov r1, r2\n-\tmov r2, r3\n-\tmov r3, r4\n-\tmov r4, r5\n-\tmov r5, r6\n-\tmov r6, r7\n-\tmov r7, r8\n-\tmov r8, r9\n-\tmov r9, r10\n-\tmov r10, r11\n-\tmov r11, r12\n-\tmov r12, r13\n-\tmov r13, r14\n-\tmov r14, r15\n-\n-\tcmp/eq r0, r15\n-\tbf wrong\n-\t\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "f555d66e0939c235d9a47c55decf993296a58747",
      "filename": "sim/testsuite/sim/sh64/compact/mova.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 29,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/mova.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/mova.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/mova.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,29 +0,0 @@\n-# sh testcase for mova @($imm8x4, pc), r0 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global mova\n-mova:\n-\tmova @(40, pc), r0\n-\tmov #16, r1\n-\tshll8 r1\n-\tadd #40, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\tmova @(12, pc), r0\n-\tmov #16, r1\n-\tshll8 r1\n-\tadd #24, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "8278e1bbeaa0b08ee0d3bc6feb0dd4784c6ce4fe",
      "filename": "sim/testsuite/sim/sh64/compact/movb1.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb1.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb1.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movb1.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,27 +0,0 @@\n-# sh testcase for mov.b $rm, @$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #55, r1\n-\tmov #40, r2\n-\tshll8 r2\n-\tmov.b r1, @r2\n-\n-\t# Load it back into r3.\n-\tmov #40, r2\n-\tshll8 r2\n-\tmov.b @r2, r3\n-\n-\t# Make sure r1 and r3 match.\n-\tcmp/eq r1, r3\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "0ddb736f868d7893ab8f04611a2ffc5e9946e829",
      "filename": "sim/testsuite/sim/sh64/compact/movb10.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb10.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb10.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movb10.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,25 +0,0 @@\n-# sh testcase for mov.b @($imm4, $rm), r0 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r1\n-\tshll8 r1\n-\t# Store something there first.\n-\tmov #0, r0\n-\tor #170, r0\n-\tmov r0, r7\n-\tmov.b r0, @(3, r1)\n-\t# Load it back.\n-\tmov.b @(3, r1), r0\n-\tand #255, r0\n-\tcmp/eq r0, r7\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\t\n-\tfail"
    },
    {
      "sha": "692c34fb648cdb748c0a02cd11542d06bf00a23f",
      "filename": "sim/testsuite/sim/sh64/compact/movb2.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb2.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb2.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movb2.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,34 +0,0 @@\n-# sh testcase for mov.b $rm, @-$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #40, r1\n-\tshll8 r1\n-\tmov #55, r2\n-\t\n-\t# Save ADDR, DATA.\n-\tmov r1, r7\n-\tmov r2, r8\n-\n-\t# Do the move.\n-\tmov.b r2, @-r1\n-\t\n-\t# Load the value back into r3.\n-\tmov.b @r1, r3\n-\tcmp/eq r2, r3\n-\tbf wrong\n-\n-\t# Ensure that r1 has been decremented.\n-\tmov #1, r0\n-\tsub r0, r7\n-\tcmp/eq r7, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "6143562b8c18f3dfe5a21bbdb7ca71d455c6655f",
      "filename": "sim/testsuite/sim/sh64/compact/movb3.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb3.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb3.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movb3.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,30 +0,0 @@\n-# sh testcase for mov.b $rm, @(r0,$rn) -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #40, r2\n-\tshll8 r2\n-\tmov #3, r1\n-\tmov #0, r0\n-\tor #170, r0\n-\tmov r0, r3\n-\tmov r2, r0\n-\tmov.b r3, @(r0, r1)\n-\n-\t# Load the value back into a different register.\n-\tmov.b @(r0, r1), r4\n-\t# Check the lowest order byte matches the stored value.\n-\tmov r4, r0\n-\tand #255, r0\n-\tcmp/eq r0, r3\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "d30a7a8641f139555876fe8a1af42260abf3f24e",
      "filename": "sim/testsuite/sim/sh64/compact/movb4.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb4.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb4.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movb4.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,28 +0,0 @@\n-# sh testcase for mov.b r0, @($imm8, gbr) -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #0, r0\n-\tor #170, r0\n-\tmov r0, r3\n-\tmov #30, r2\n-\tldc r2, gbr\n-\tmov.b r0, @(40, gbr)\n-\n-\t# Load the value back into a different register.\n-\tmov.b @(40, gbr), r0\n-\t# Check the lowest order byte matches the stored value.\n-\tand #255, r0\n-\tcmp/eq r0, r3\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "4f6795a88605620eeb4a70d4aa9145488bc99f4b",
      "filename": "sim/testsuite/sim/sh64/compact/movb5.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb5.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb5.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movb5.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,25 +0,0 @@\n-# sh testcase for mov.b r0, @($imm4, rm) -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #0, r0\n-\tor #170, r0\n-\tmov r0, r3\n-\tmov #30, r2\n-\tmov.b r0, @(3, r2)\n-\n-\t# Load the value back into a different register.\n-\tmov.b @(3, r2), r0\n-\tand #255, r0\n-\tcmp/eq r3, r0\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "9ddebde5ce47d7b76b0f7291e26e651344fb2626",
      "filename": "sim/testsuite/sim/sh64/compact/movb6.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb6.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb6.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movb6.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,26 +0,0 @@\n-# sh testcase for mov.b @$rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r2\n-\tshll8 r2\n-\t# Store something first.\n-\tmov #0, r0\n-\tor #170, r0\n-\tmov r0, r7\n-\tmov.b r7, @r2\n-\t# Load it back.\n-\tmov.b @r2, r1\n-\tmov r1, r0\n-\tand #255, r0\n-\tcmp/eq r7, r0\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "f55a223436b0380082b33159221f593f2e5d0d9f",
      "filename": "sim/testsuite/sim/sh64/compact/movb7.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 35,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb7.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb7.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movb7.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,35 +0,0 @@\n-# sh testcase for mov.b @${rm}+, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r1\n-\tshll8 r1\n-\t# Store addr.\n-\tmov r1, r8\n-\n-\t# Store something there first.\n-\tmov #0, r0\n-\tor #170, r0\n-\tmov r0, r7\n-\tmov.b r7, @r1\n-\t# Load it back.\n-\tmov.b @r1+, r2\n-\tmov r2, r0\n-\tand #255, r0\n-\tcmp/eq r7, r0\n-\tbf wrong\n-\n-\t# Test address for post-incrementing.\n-\tadd #1, r8\n-\tcmp/eq r8, r1\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "883e4b357ed8fa0a5ca3e6569eca04cc80d04a58",
      "filename": "sim/testsuite/sim/sh64/compact/movb8.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb8.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb8.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movb8.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,27 +0,0 @@\n-# sh testcase for mov.b @(r0, $rm), $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r0\n-\tshll8 r0\n-\tmov #14, r1\n-\t# Store something there first.\n-\tmov #0, r0\n-\tor #170, r0\n-\tmov r0, r7\n-\tmov.b r7, @(r0, r1)\n-\t# Load it back.\n-\tmov.b @(r0, r1), r2\n-\tmov r2, r0\n-\tand #255, r0\n-\tcmp/eq r0, r7\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "3ad1b46f2c041de0d86bdcc8020db035f2a6963a",
      "filename": "sim/testsuite/sim/sh64/compact/movb9.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb9.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movb9.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movb9.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,27 +0,0 @@\n-# sh testcase for mov.b @($imm8, gbr), r0 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r0\n-\tshll8 r0\n-\tldc r0, gbr\n-\t# Store something there first.\n-\tmov #0, r0\n-\tor #170, r0\n-\tmov r0, r7\n-\tmov.b r0, @(3, gbr)\n-\t# Load it back.\n-\tmov.b @(3, gbr), r0\n-\tand #255, r0\n-\tcmp/eq r7, r0\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "7aac57e7f4381445772084d915e6d194272970ee",
      "filename": "sim/testsuite/sim/sh64/compact/movcal.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movcal.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movcal.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movcal.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,28 +0,0 @@\n-# sh testcase for movca.l r0, @$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global movcal\n-movcal:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #128, r0\n-\tmov #40, r1\n-\tshll8 r1\n-\tmovca.l r0, @r1\n-\n-\t# Load the word back in.\n-\tmov.l @r1, r3\n-\tcmp/eq r0, r3\n-\tbf wrong\n-\t\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "bc72c1b8e63803f879b323105f5a78c0e8b21a61",
      "filename": "sim/testsuite/sim/sh64/compact/movi.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movi.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movi.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movi.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,39 +0,0 @@\n-# sh testcase for mov #$imm8, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global movi\n-movi:\n-\tmov #0, r0\n-\tcmp/eq #0, r0\n-\tbf wrong\n-\t\n-\tmov #1, r0\n-\tcmp/eq #1, r0\n-\tbf wrong\n-\t\n-\tmov #255, r0\n-\tcmp/eq #255, r0\n-\tbf wrong\n-\n-\tmov #1, r15\n-\tmov #1, r0\n-\tcmp/eq r0, r15\n-\tbf wrong\n-\n-\tmov #255, r15\n-\tmov r15, r0\n-\tcmp/eq r0, r15\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "7d85c380f3eb02a3513edd43e19085c44acf4d26",
      "filename": "sim/testsuite/sim/sh64/compact/movl1.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl1.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl1.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movl1.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,31 +0,0 @@\n-# sh testcase for mov.l $rm, @$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r1\n-\tshll8 r1\n-init:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\tshll8 r2\n-\tadd #85, r2\n-\tshll8 r2\n-\tadd #170, r2\n-\n-\tmov.l r2, @r1\n-\n-\t# Load it back.\n-\tmov.l @r1, r3\n-\tcmp/eq r2, r3\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "5e9cf2d2fbdf03ffec8fa38f3b4cc7c3e00cfa8c",
      "filename": "sim/testsuite/sim/sh64/compact/movl10.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl10.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl10.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movl10.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,34 +0,0 @@\n-# sh testcase for mov.l @($imm8x4, pc), $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\tshll8 r2\n-\tadd #85, r2\n-\tshll8 r2\n-\tadd #170, r2\n-\n-\t# Store to memory.\n-\tmov #16, r1\n-\tshll8 r1\n-\tadd #32, r1\n-\tmov.l r2, @r1\n-check:\n-\t# Read it back.\n-\tmov.l @(12, pc), r0\n-\tcmp/eq r2, r0\n-\tbf wrong\n-\t\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "32c763d8a2ed0a6edd3b702653e8dc849e6a7952",
      "filename": "sim/testsuite/sim/sh64/compact/movl11.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl11.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl11.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movl11.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,32 +0,0 @@\n-# sh testcase for mov.l @($imm4x4, $rm), $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r0\n-\tshll8 r0\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\tshll8 r2\n-\tadd #85, r2\n-\tshll8 r2\n-\tadd #170, r2\n-\t# Store something first.\n-\tmov.l r2, @(12, r0)\n-\n-check:\n-\t# Read it back.\n-\tmov.l @(12, r0), r1\n-\tcmp/eq r2, r1\n-\tbf wrong\n-\t\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "bb550612cce16a99ac17797c8d23196c0cf0f537",
      "filename": "sim/testsuite/sim/sh64/compact/movl2.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl2.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl2.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movl2.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,43 +0,0 @@\n-# sh testcase for mov.l $rm, @-$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tmov #30, r1\n-\tshll8 r1\n-\t# Save address.\n-\tmov r1, r7\n-\n-init:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\tshll8 r2\n-\tadd #85, r2\n-\tshll8 r2\n-\tadd #170, r2\n-\tmov.l r2, @-r1\n-\n-check:\n-\t# Compare the value loaded into another reg.\n-\tmov.l @r1, r3\n-\tcmp/eq r2, r3\n-\tbf wrong\n-\t\n-dec:\n-\t# Ensure address is decremented.\n-\tmov #4, r6\n-\tsub r6, r7\n-\tcmp/eq r1, r7\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "6205de7558d045f71f34e8ecf824762d3eb7e0b9",
      "filename": "sim/testsuite/sim/sh64/compact/movl3.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl3.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl3.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movl3.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,36 +0,0 @@\n-# sh testcase for mov.l $rm, @(r0, $rn)\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-setaddr:\n-\tmov #0, r0\n-\tmov #30, r1\n-\tshll8 r1\n-\n-init:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\tshll8 r2\n-\tadd #85, r2\n-\tshll8 r2\n-\tadd #170, r2\n-\n-\tmov.l r2, @(r0, r1)\n-\n-check:\n-\t# Load it back.\n-\tmov.l @(r0, r1), r3\n-\tcmp/eq r2, r3\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "44440946365f78c9fa3900956ded39311026a1d8",
      "filename": "sim/testsuite/sim/sh64/compact/movl4.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 38,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl4.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl4.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movl4.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,38 +0,0 @@\n-# sh testcase for mov.l r0, @($imm8x4, gbr) -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-setaddr:\n-\tmov #30, r1\n-\tshll8 r1\n-\tldc r1, gbr\n-\n-init:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r0\n-\tshll8 r0\n-\tadd #12, r0\n-\tshll8 r0\n-\tadd #85, r0\n-\tshll8 r0\n-\tadd #170, r0\n-\t# Preserve.\n-\tmov r0, r7\n-\n-\tmov.l r0, @(4, gbr)\n-check:\n-\t# Load it back.\n-\tmov.l @(4, gbr), r0\n-\tcmp/eq r0, r7\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-wrong:\n-\tfail\n-"
    },
    {
      "sha": "897ebef236702a8946529c2bf6918305f6cf580c",
      "filename": "sim/testsuite/sim/sh64/compact/movl5.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl5.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl5.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movl5.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,37 +0,0 @@\n-# sh testcase for mov.l $rm, @($imm4x4, $rn) -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-setaddr:\n-\tmov #30, r1\n-\tshll8 r1\n-\n-init:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r0\n-\tshll8 r0\n-\tadd #12, r0\n-\tshll8 r0\n-\tadd #85, r0\n-\tshll8 r0\n-\tadd #170, r0\n-\t# Preserve.\n-\tmov r0, r7\n-\n-\tmov.l r0, @(4, r1)\n-check:\n-\t# Load it back.\n-\tmov.l @(4, r1), r0\n-\tcmp/eq r7, r0\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "42f63b2a9ac9f29e746b0c4b268f89e0f807d32a",
      "filename": "sim/testsuite/sim/sh64/compact/movl6.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl6.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl6.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movl6.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,25 +0,0 @@\n-# sh testcase for mov.l @$rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tmov #30, r0\n-\tshll8 r0\n-\t# Store something there first.\n-\tmov #170, r1\n-\tmov.l r1, @r0\n-check:\t\n-\t# Load it back.\n-\tmov.l @r0, r3\n-\tcmp/eq r1, r3\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "b6c12fc5515fc40c6730ed92771de3cf0888d344",
      "filename": "sim/testsuite/sim/sh64/compact/movl7.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl7.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl7.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movl7.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,37 +0,0 @@\n-# sh testcase for mov.l @$rm+, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tmov #30, r0\n-\tshll8 r0\n-\t# Preserve address.\n-\tmov r0, r7\n-\t# Store something first.\n-\tmov #170, r3\n-\tmov.l r3, @r0\n-\t\n-\tmov.l @r0+, r1\n-check:\n-\tcmp/eq r1, r3\n-\tbf wrong\n-\n-\t# Ensure address is post-incremented.\n-\tadd #4, r7\n-\tcmp/eq r7, r0\n-\tbf wrong\n-\n-equal:\t\n-\t# Test rm = rn.\n-\tmov #30, r0\n-\tshll8 r0\n-\tmov.l @r0+, r0\n-\n-okay:\t\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "a6cd932d0a276748e824b42cf03ad6b32c10775d",
      "filename": "sim/testsuite/sim/sh64/compact/movl8.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl8.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl8.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movl8.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,24 +0,0 @@\n-# sh testcase for mov.l @(r0, $rm), $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #0, r0\n-\tmov #30, r1\n-\tshll8 r1\n-\t# Store something there first.\n-\tmov #170, r3\n-\tmov.l r3, @(r0, r1)\n-check:\t\n-\t# Load it back.\n-\tmov.l @(r0, r1), r2\n-\tcmp/eq r2, r3\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-wrong:\t\n-\tfail"
    },
    {
      "sha": "4fa07b069d8c15d6e090f9b25e4e21be97aaeaca",
      "filename": "sim/testsuite/sim/sh64/compact/movl9.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl9.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movl9.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movl9.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,24 +0,0 @@\n-# sh testcase for mov.l @($imm8x4, gbr), r0 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r1\n-\tshll8 r1\n-\tldc r1, gbr\n-\t# Store something there first.\n-\tmov #170, r0\n-\tmov r0, r7\n-\tmov.l r0, @(12, gbr)\n-check:\t\n-\t# Load it back.\n-\tmov.l @(12, gbr), r0\n-\tcmp/eq r0, r7\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "45539810bebcc10a6136ecbb3669852bfb93de6b",
      "filename": "sim/testsuite/sim/sh64/compact/movt.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movt.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movt.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movt.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,28 +0,0 @@\n-# sh testcase for movt $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global movt\n-init:\n-\tsett\n-\tmovt r1\n-\tassert r1, #1\n-clear:\n-\tclrt\n-\tmovt r1\n-\tassert r1, #0\n-set:\n-\tsett\n-\tmovt r1\n-\tassert r1, #1\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t "
    },
    {
      "sha": "5d55a581ffd48ddacc019f29fbf87f7979daf5bc",
      "filename": "sim/testsuite/sim/sh64/compact/movw1.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 29,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw1.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw1.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movw1.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,29 +0,0 @@\n-# sh testcase for mov.w $rm, @$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tmov #30, r1\n-\tshll8 r1\n-init:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\tmov.w r2, @r1\n-check:\n-\t# Read it back.\n-\tmov.w @r1, r3\n-\tshll16 r2\n-\tshll16 r3\n-\tcmp/eq r2, r3\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "5bab9117e9e60902ff43016f30377b5ad89d7e5a",
      "filename": "sim/testsuite/sim/sh64/compact/movw10.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw10.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw10.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movw10.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,32 +0,0 @@\n-# sh testcase for mov.w @($imm8x2, pc), $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\n-\t# Store to memory.\n-\tmov #16, r1\n-\tshll8 r1\n-\tadd #32, r1\n-\tmov.w r2, @r1\n-\n-check:\n-\t# Read it back.\n-\tmov.w @(18, pc), r0\n-\tshll16 r0\n-\tshll16 r2\n-\tcmp/eq r0, r2\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "df739fa783d66412b34e3b7ec246c43352cdd8eb",
      "filename": "sim/testsuite/sim/sh64/compact/movw11.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 35,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw11.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw11.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movw11.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,35 +0,0 @@\n-# sh testcase for mov.w @($imm4x2, $rm), r0 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r1\n-\tshll8 r1\n-\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r0\n-\tshll8 r0\n-\tadd #12, r0\n-\n-\t# Preserve r0.\n-\tmov r0, r3\n-\n-\t# Store something first.\n-\tmov.w r0, @(12, r1)\n-\n-check:\n-\t# Read it back.\n-\tmov.w @(12, r1), r0\n-\tshll16 r0\n-\tshll16 r3\n-\tcmp/eq r0, r3\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "27c29dc0292f877ecd7a44727b56ceff9cbba700",
      "filename": "sim/testsuite/sim/sh64/compact/movw2.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw2.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw2.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movw2.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,36 +0,0 @@\n-# sh testcase for mov.w $rm, @-$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tmov #30, r1\n-\tshll8 r1\n-\t# Preserve.\n-\tmov r1, r7\n-init:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-store:\t\n-\tmov.w r2, @-r1\n-check:\n-\t# Read it back.\n-\tmov.w @r1, r3\n-\tshll16 r2\n-\tshll16 r3\n-\tcmp/eq r2, r3\n-\tbf wrong\n-dec:\n-\tadd #2, r1\n-\tcmp/eq r7, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "d7b39c81506b528000e022646df67bda707f4bd3",
      "filename": "sim/testsuite/sim/sh64/compact/movw3.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw3.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw3.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movw3.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,31 +0,0 @@\n-# sh testcase for mov.w $rm, @(r0, $rn) -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tmov #0, r0\n-\tmov #30, r1\n-\tshll8 r1\n-init:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\tmov.w r2, @(r0, r1)\n-check:\n-\t# Read it back.\n-\tmov.w @(r0, r1), r3\n-\tshll16 r2\n-\tshll16 r3\n-\tcmp/eq r2, r3\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "4853b5019bc4841b46ff06b7fafe95e5207bcf58",
      "filename": "sim/testsuite/sim/sh64/compact/movw4.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw4.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw4.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movw4.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,31 +0,0 @@\n-# sh testcase for mov.w r0, @($imm8x2, gbr) -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tmov #30, r0\n-\tshll8 r0\n-\tldc r0, gbr\n-\n-init:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r0\n-\tshll8 r0\n-\tadd #12, r0\n-\t# Preserve r0.\n-\tmov r0, r7\n-\tmov.w r0, @(12, gbr)\n-check:\n-\tmov.w @(12, gbr), r0\n-\tcmp/eq r0, r7\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "9b4f84f6516107dcf8feb8849cb6fe5a1dd3c7c0",
      "filename": "sim/testsuite/sim/sh64/compact/movw5.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw5.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw5.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movw5.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,32 +0,0 @@\n-# sh testcase for mov.w r0, @($imm4x2, $rn) -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r1\n-\tshll8 r1\n-\n-init:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r0\n-\tshll8 r0\n-\tadd #12, r0\n-\t# Preserve.\n-\tmov r0, r7\n-move:\n-\tmov.w r0, @(12, r1)\n-check:\n-\tmov.w @(12, r1), r0\n-\tshll16 r0\n-\tshll16 r7\n-\tcmp/eq r0, r7\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "758497c13e7ffead2598a3d577bd7790a0760fbb",
      "filename": "sim/testsuite/sim/sh64/compact/movw6.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw6.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw6.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movw6.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,30 +0,0 @@\n-# sh testcase for mov.w @$rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\t\n-\tmov #30, r0\n-\tshll8 r0\n-\n-\t# Store something first.\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\tmov.w r2, @r0\n-\n-check:\n-\t# Read it back.\n-\tmov.w @r0, r1\n-\tcmp/eq r1, r2\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "45f5c098e4e275047c8b26347e8fa4c08a91dc82",
      "filename": "sim/testsuite/sim/sh64/compact/movw7.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw7.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw7.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movw7.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,36 +0,0 @@\n-# sh testcase for mov.w @${rm}+, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r0\n-\tshll8 r0\n-\t# Preserve address.\n-\tmov r0, r7\n-\n-\t# Store something first.\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\tmov.w r2, @r0\n-check:\n-\t# Read it back.\n-\tmov.w @r0+, r3\n-\tcmp/eq r2, r3\n-\tbf wrong\n-\n-inc:\t\n-\t# Ensure address is post-incremented.\n-\tadd #2, r7\n-\tcmp/eq r0, r7\n-\tbf wrong\n-\t\n-okay:\t\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "0a7ce3f346cb428aabaca55e337a9f72f6cb2c6a",
      "filename": "sim/testsuite/sim/sh64/compact/movw8.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw8.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw8.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movw8.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,31 +0,0 @@\n-# sh testcase for mov.w @(r0, $rm), $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r0\n-\tshll8 r0\n-\tmov #10, r1\n-\n-\t# Store something first.\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r2\n-\tshll8 r2\n-\tadd #12, r2\n-\t\n-\tmov.w r2, @(r0, r1)\n-check:\n-\t# Read it back.\n-\tmov.w @(r0, r1), r3\n-\tshll16 r2\n-\tshll16 r3\n-\tcmp/eq r2, r3\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "1872f06afb6698562b10732a3670d4d61a4bb89b",
      "filename": "sim/testsuite/sim/sh64/compact/movw9.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw9.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/movw9.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/movw9.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,33 +0,0 @@\n-# sh testcase for mov.w @($imm8x2, gbr), r0 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\tmov #30, r0\n-\tshll8 r0\n-\tldc r0, gbr\n-\n-\t# Store something first.\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r0\n-\tshll8 r0\n-\tadd #12, r0\n-\t# Preserve r0.\n-\tmov r0, r7\n-\tmov.w r0, @(12, gbr)\n-\n-check:\t\n-\t# Load it back.\n-\tmov.w @(12, gbr), r0\n-\tshll16 r0\n-\tshll16 r7\n-\tcmp/eq r0, r7\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "921141aafd6a23f5f409e39779338b41cf1c59a5",
      "filename": "sim/testsuite/sim/sh64/compact/mull.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 64,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/mull.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/mull.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/mull.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,64 +0,0 @@\n-# sh testcase for mul.l $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global mull\n-mull:\n-\tmov #3, r0\n-\tmov #5, r1\n-\tmul.l r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r3\n-\tmov #15, r4\n-\tcmp/eq r3, r4\n-\tbf wrong\n-\n-lxs:\n-\t# Large * small.\n-\tmov #255, r0\n-\tmov #0, r1\n-\tmul.l r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r3\n-\tmov #0, r4\n-\tcmp/eq r3, r4\n-\tbf wrong\n-\n-sxl:\n-\t# Small * large.\n-\tmov #0, r0\n-\tmov #255, r1\n-\tmul.l r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r3\n-\tmov #0, r4\n-\tcmp/eq r3, r4\n-\tbf wrong\n-\n-lxl:\n-\t# Large * large.\n-\tmov #1, r0\n-\tneg r0, r0\n-\tmov #2, r1\n-\tmul.l r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r3\n-\tmov #2, r4\n-\tneg r4, r4\n-\tcmp/eq r3, r4\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "05c8a3d384c1e0c68524e3f7e8472900c40cfbd4",
      "filename": "sim/testsuite/sim/sh64/compact/mulsw.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 91,
      "changes": 91,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/mulsw.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/mulsw.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/mulsw.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,91 +0,0 @@\n-# sh testcase for muls.w $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tsts mach, r7\n-\t\n-\t.global mulsw\n-zero:\n-\tmov #0, r0\n-\tmov #1, r1\n-\tmuls.w r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r3\n-\tmov #0, r4\n-\tcmp/eq r3, r4\n-\tbf wrong\n-\n-sxs:\n-\t# Small * small.\n-\tmov #1, r0\n-\tmov #2, r1\n-\tmuls.w r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r3\n-\tmov #2, r4\n-\tcmp/eq r3, r4\n-\tbf wrong\n-\n-sxl:\n-\t# Small * large.\n-\tmov #1, r0\n-\tmov #255, r1\n-\tshll8 r1\n-\tmuls.w r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r3\n-\tmov #0, r4\n-\tnot r4, r4\n-\tshll8 r4\n-\tcmp/eq r3, r4\n-\tbf wrong\n-\n-lxs:\n-\t# Large * small.\n-\tmov #255, r0\n-\tshll8 r0\n-\tmov #1, r1\n-\tmuls.w r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r3\n-\tmov #0, r4\n-\tnot r4, r4\n-\tshll8 r4\n-\tcmp/eq r3, r4\n-\tbf wrong\n-\t\n-lxl:\n-\t# Large * large.\n-\tmov #255, r0\n-\tshll8 r0\n-\tmov #255, r1\n-\tshll8 r1\n-\tmuls.w r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r3\n-\tmov #1, r4\n-\tshll16 r4\n-\tcmp/eq r3, r4\n-\tbf wrong\n-\t\n-invariant:\t\n-\t# Ensure MACH is invariant.\n-\tsts mach, r8\n-\tcmp/eq r7, r8\n-\tbf wrong\n-\t \n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "fa0a33433325593bca698b14cf0ba0330b4fe497",
      "filename": "sim/testsuite/sim/sh64/compact/muluw.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 96,
      "changes": 96,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/muluw.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/muluw.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/muluw.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,96 +0,0 @@\n-# sh testcase for mulu.w $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\tsts mach, r7\n-\n-\t.global mulsw\n-zero:\n-\tmov #0, r0\n-\tmov #1, r1\n-\tmulu.w r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r1\n-\tmov #0, r0\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-sxs:\n-\t# Small * small.\n-\tmov #1, r0\n-\tmov #2, r1\n-\tmulu.w r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r1\n-\tmov #2, r0\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-sxl:\n-\t# Small * large.\n-\tmov #1, r1\n-\tmov #0, r0\n-\tor #255, r0\n-\tshll8 r0\n-\tmulu.w r1, r0\n-\n-\t# Check the result.\n-\tsts macl, r1\n-\tmov #0, r0\n-\tor #255, r0\n-\tshll8 r0\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-lxs:\n-\t# Large * small.\n-\tmov #0, r0\n-\tor #255, r0\n-\tshll8 r0\n-\tmov #1, r1\n-\tmulu.w r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r1\n-\tmov #0, r0\n-\tor #255, r0\n-\tshll8 r0\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-lxl:\n-\t# Large * large.\n-\tmov #0, r0\n-\tor #255, r0\n-\tshll8 r0\n-\tmov r0, r1\n-\tmulu.w r0, r1\n-\n-\t# Check the result.\n-\tsts macl, r1\n-\tmov #0, r0\n-\tor #254, r0\n-\tshll8 r0\n-\tor #1, r0\n-\tshll16 r0\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-invariant:\n-\t# Ensure MACH is invariant.\n-\tsts mach, r8\n-\tcmp/eq r7, r8\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "b6f98d74060955ad9478ffc59b6487c599be5b9c",
      "filename": "sim/testsuite/sim/sh64/compact/neg.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 55,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/neg.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/neg.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/neg.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,55 +0,0 @@\n-# sh testcase for neg $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\t.macro signbit sign\n-\tshlr16 r1\n-\tshlr8 r1\n-\tshlr r1\n-\tshlr r1\n-\tshlr r1\n-\tshlr r1\n-\tshlr r1\n-\tshlr r1\n-\tshlr r1\n-\tassert r1, \\sign\n-\t.endm\n-\tstart\n-\n-\t.global neg\n-neg:\n-\tmov #0, r0\n-\tneg r0, r1\n-\tsignbit #0\n-\n-\tmov #42, r0\n-\tneg r0, r1\n-\tsignbit #1\n-\n-\tmov #0, r0\n-\tor #25, r0\n-\tneg r0, r1\n-\tsignbit #1\n-\n-\t# neg(0) is 0.\n-\tmov #0, r0\n-\tneg r0, r1\n-\tsignbit #0\n-\n-\t# neg(neg(x)) = x.\n-\tmov #42, r0\n-\tneg r0, r1\n-\tsignbit #1\n-\tmov #42, r0\n-\tneg r0, r2\n-\tneg r2, r1\n-\tsignbit #0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "1f5547d9babff93987438a4a9f1f4246c7d30c35",
      "filename": "sim/testsuite/sim/sh64/compact/negc.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 66,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/negc.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/negc.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/negc.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,66 +0,0 @@\n-# sh testcase for negc $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\t.macro signbit sign\n-\tmov r1, r2\n-\tshlr16 r2\n-\tshlr8 r2\n-\tshlr r2\n-\tshlr r2\n-\tshlr r2\n-\tshlr r2\n-\tshlr r2\n-\tshlr r2\n-\tshlr r2\n-\tassert r2, \\sign\n-\t.endm\n-\tstart\n-\n-\t.global negc\n-negc:\n-\tclrt\n-\tmov #1, r0\n-\tnegc r0, r1\n-\tsignbit #1\n-\n-negc2:\n-\tsett\n-\tmov #1, r0\n-\tnegc r0, r1\n-\tsignbit #1\n-\n-negc3:\n-\tclrt\n-\tmov #0, r0\n-\tnegc r0, r1\n-\tsignbit #0\n-\n-negc4:\n-\tsett\n-\tmov #0, r0\n-\tnegc r0, r1\n-\tsignbit #1\n-\n-negc5:\n-\tclrt\n-\tmov #0, r0\n-\tor #255, r0\n-\tnegc r0, r1\n-\tsignbit #1\n-\n-negc6:\n-\tsett\n-\tmov #0, r0\n-\tor #255, r0\n-\tnegc r0, r1\n-\tsignbit #1\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "8ce910c5abd5efd9993b13501dd99f5f51103cfc",
      "filename": "sim/testsuite/sim/sh64/compact/nop.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/nop.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/nop.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/nop.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,13 +0,0 @@\n-# sh testcase for nop\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global nop\n-nop:\n-\tnop\n-\tpass"
    },
    {
      "sha": "380808ddb573256948d58d4e219b00e4a769e8c2",
      "filename": "sim/testsuite/sim/sh64/compact/not.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 47,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/not.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/not.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/not.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,47 +0,0 @@\n-# sh testcase for not $rm64, $rn64 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global not\n-not:\n-\tmov #0, r0\n-\tor #192, r0\n-\tnot r0, r1\n-\n-\tmov #0, r0\n-\tor #255, r0\n-\tshll8 r0\n-\tor #255, r0\n-\tshll8 r0\n-\tor #255, r0\n-\tshll8 r0\n-\tor #63, r0\n-\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-ones:\n-\tmov #0, r1\n-\tnot r1, r2\n-\n-\tmov #0, r0\n-\tor #255, r0\n-\tshll8 r0\n-\tor #255, r0\n-\tshll8 r0\n-\tor #255, r0\n-\tshll8 r0\n-\tor #255, r0\n-\tcmp/eq r0, r2\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "12fb2a116c403922d90e9a9f2575c6cf59929d49",
      "filename": "sim/testsuite/sim/sh64/compact/ocbi.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ocbi.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ocbi.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ocbi.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,14 +0,0 @@\n-# sh testcase for ocbi @$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\t.global ocbi\n-ocbi:\n-\tocbi @r0\n-\tocbi @r1\n-\tocbi @r15\n-\tpass"
    },
    {
      "sha": "153aff2eade8f79fc1fa9b16319375a218597b4b",
      "filename": "sim/testsuite/sim/sh64/compact/ocbp.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ocbp.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ocbp.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ocbp.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,15 +0,0 @@\n-# sh testcase for ocbp @$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global ocbp\n-ocbp:\n-\tocbp @r0\n-\tocbp @r1\n-\tocbp @r15\n-\tpass"
    },
    {
      "sha": "6b0a741cbca4010995504d9cd81b18323f85fd47",
      "filename": "sim/testsuite/sim/sh64/compact/ocbwb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ocbwb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ocbwb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ocbwb.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,15 +0,0 @@\n-# sh testcase for ocbwb @$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global ocbwb\n-ocbwb:\n-\tocbwb @r0\n-\tocbwb @r1\n-\tocbwb @r15\n-\tpass"
    },
    {
      "sha": "a02eee39aaf753f46dfe000eb306ae65b0f4dc54",
      "filename": "sim/testsuite/sim/sh64/compact/or.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/or.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/or.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/or.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,43 +0,0 @@\n-# sh testcase for or $rm64, $rn64 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global or\n-or:\n-\tmov #1, r0\n-\trotr r0\n-\tmov #1, r1\n-\tor r0, r1\n-\n-\tmov #1, r7\n-\trotr r7\n-\tadd #1, r7\n-\tcmp/eq r7, r1\n-\tbf wrong\n-\n-\t.global or2\n-or2:\n-\tmov #85, r0\n-\tshll16 r0\n-\tshll8 r0\n-\tmov #85, r1\n-\tshll8 r1\n-\tor r0, r1\n-\n-\tmov #85, r7\n-\tshll16 r7\n-\tadd #85 ,r7\n-\tshll8 r7\n-\tcmp/eq r1, r7\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "7e962f6fe69d2a4a5515b384df397cfe7c8efb0c",
      "filename": "sim/testsuite/sim/sh64/compact/orb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/orb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/orb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/orb.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,24 +0,0 @@\n-# sh testcase for or.b #$imm8, @(r0, gbr) -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global orb\n-init:\n-\t# Init GBR and R0.\n-\tmov #30, r0\n-\tldc r0, gbr\t\n-\tmov #40, r0\n-\n-orb:\n-\tor.b #0, @(r0, gbr)\n-\tor.b #170, @(r0, gbr)\n-\tor.b #0, @(r0, gbr)\n-\tor.b #255, @(r0, gbr)\n-\n-okay:\n-\tpass"
    },
    {
      "sha": "63a5fb5874027811068e9768e69d584039046b49",
      "filename": "sim/testsuite/sim/sh64/compact/ori.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ori.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/ori.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/ori.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,40 +0,0 @@\n-# sh testcase for or #$imm8, r0 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global ori\n-ori:\n-\tmov #1, r0\n-\trotr r0\n-\tor #1, r0\n-\n-\tmov #1, r7\n-\trotr r7\n-\tadd #1, r7\n-\tcmp/eq r0, r7\n-\tbf wrong\n-\n-\t.global ori2\n-ori2:\n-\tmov #85, r0\n-\tshll16 r0\n-\tshll8 r0\n-\tor #85, r0\n-\n-\tmov #85, r7\n-\tshll16 r7\n-\tshll8 r7\n-\tadd #85, r7\n-\tcmp/eq r0, r7\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\t\n-wrong:\n-\tfail"
    },
    {
      "sha": "065e0932e6cf273444a8ebf4d2a832fed79df853",
      "filename": "sim/testsuite/sim/sh64/compact/pref.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/pref.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/pref.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/pref.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,15 +0,0 @@\n-# sh testcase for pref @$rn\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global pref\n-pref:\n-\tpref @r0\n-\tpref @r1\n-\tpref @r15\n-\tpass"
    },
    {
      "sha": "5e1a3b911379c4fa41878e085f7aa2cff3731c42",
      "filename": "sim/testsuite/sim/sh64/compact/rotcl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 121,
      "changes": 121,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/rotcl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/rotcl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/rotcl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,121 +0,0 @@\n-# sh testcase for rotcl $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global rotcl\n-\n-rotcl:\n-\tclrt\n-\tmov #1, r1\n-\trotcl r1\n-\tassert r1, #2\n-\tclrt\n-\trotcl r1\n-\tassert r1, #4\n-\tclrt\n-\trotcl r1\n-\tassert r1, #8\n-\tclrt\n-\trotcl r1\n-\tassert r1, #16\n-\tclrt\n-\trotcl r1\n-\tassert r1, #32\n-\tclrt\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\tbf wrong\n-\trotcl r1\n-\tassert r1, #1\n-\n-\tbra trotcl\n-\tnop\n-\n-wrong:\n-\tfail\n-\n-trotcl:\n-\tsett\n-\tmov #1, r1\n-\trotcl r1\n-\tassert r1, #3\n-\tclrt\n-\trotcl r1\n-\tassert r1, #6\n-\tclrt\n-\trotcl r1\n-\tassert r1, #12\n-\tclrt\n-\trotcl r1\n-\tassert r1, #24\n-\tclrt\n-\trotcl r1\n-\tassert r1, #48\n-\tclrt\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\trotcl r1\n-\tbf wrong2\n-\tassert r1, #1\n-\trotcl r1\n-\trotcl r1\n-\n-okay:\t\n-\tpass\n-wrong2:\n-\tfail"
    },
    {
      "sha": "b53300ec54f5c5d38b5852c92386bc126571801f",
      "filename": "sim/testsuite/sim/sh64/compact/rotcr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 103,
      "changes": 103,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/rotcr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/rotcr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/rotcr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,103 +0,0 @@\n-# sh testcase for rotcr $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global rotcr\n-rotcr:\n-\tclrt\n-\tmov #1, r1\n-\trotcr r1\n-\tbf wrong\n-\tassert r1, #0\n-\tsett\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\tassert r1, #1\n-\trotcr r1\n-\tbf wrong\n-\n-trotcr:\n-\tsett\n-\tmov #1, r1\n-\trotcr r1\n-\tbf wrong\n-\tsett\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\trotcr r1\n-\tbf wrong\n-\tassert r1, #1\n-\trotcr r1\n-\tbf wrong\n-\trotcr r1\n-\n-okay:\t\n-\tpass\n-wrong:\n-\tfail\n-\t\n-"
    },
    {
      "sha": "e292de7e437a4bea92c2e5f0f554932aa1213fb2",
      "filename": "sim/testsuite/sim/sh64/compact/rotl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 62,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/rotl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/rotl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/rotl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,62 +0,0 @@\n-# sh testcase for rotl $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global rotl\n-rotl:\n-\tmov #1, r1\n-\trotl r1\n-\tassert r1, #2\n-\trotl r1\n-\tassert r1, #4\n-\trotl r1\n-\tassert r1, #8\n-\trotl r1\n-\tassert r1, #16\n-\trotl r1\n-\tassert r1, #32\n-\trotl r1\n-\tassert r1, #64\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\tbf wrong\n-\tassert r1, #1\n-\trotl r1\n-\trotl r1\n-\trotl r1\n-\tassert r1, #8\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "7f80f993aea7a177c97380b054b7e12a287460d2",
      "filename": "sim/testsuite/sim/sh64/compact/rotr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 55,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/rotr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/rotr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/rotr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,55 +0,0 @@\n-# sh testcase for rotr $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global rotr\n-rotr:\n-\tmov #1, r1\n-\trotr r1\n-\tbf wrong\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\tassert r1, #1\n-\trotr r1\n-\trotr r1\n-\trotr r1\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "eeb8dce9332fef4c27c5cffc5246c69b23ad07b9",
      "filename": "sim/testsuite/sim/sh64/compact/rts.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/rts.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/rts.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/rts.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,24 +0,0 @@\n-# sh testcase for rts -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global rts\n-rts:\n-\tbsr subroutine\n-slot:\n-\tnop\n-return:\n-\tpass\n-\tfail\n-\n-subroutine:\n-\trts\n-rts_slot:\n-\tnop\n-bad:\n-\tfail"
    },
    {
      "sha": "f031701d6ee4f579da898b5ba44e3817ed186dc3",
      "filename": "sim/testsuite/sim/sh64/compact/sets.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sets.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sets.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/sets.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,13 +0,0 @@\n-# sh testcase for sets -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global sets\n-sets:\n-\tsets\n-\tpass"
    },
    {
      "sha": "9ae8af536e7128fe87821193871ec18be4f82d8a",
      "filename": "sim/testsuite/sim/sh64/compact/sett.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sett.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sett.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/sett.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,16 +0,0 @@\n-# sh testcase for sett -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global sett\n-sett:\n-\tsett\n-\tbf wrong\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "340743d8f1f172b10248f85d35166daa98deada1",
      "filename": "sim/testsuite/sim/sh64/compact/shad.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 58,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shad.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shad.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/shad.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,58 +0,0 @@\n-# sh testcase for shad $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global null\n-null:\n-\tmov #1, r0\n-\tmov #0, r1\n-\tshad r1, r0\n-\t# no shift is performed.\n-\tassert r0, #1\n-\n-\t.global gt0\n-gt0:\n-\tmov #4, r0\n-\tmov #3, r1\n-\tshad r1, r0\n-\t# shift left 3 bits.\n-\tassert r0, #32\n-\n-\t.global lt0\n-lt0:\n-\tmov #32, r0\n-\tmov #3, r1\n-\tneg r1, r1\n-\tshad r1, r0\n-\t# shift right 3 bits.\n-\tassert r0, #4\n-\n-\t.global fillpos\n-fillpos:\n-\tmov #1, r0\n-\tmov #1, r1\n-\trotr r1\n-\tshad r1, r0\n-\t# check result.\n-\tassert r0, #0\n-\n-\t.global fillneg\n-fillneg:\n-\tmov #1, r0\n-\tneg r0, r0\n-\tmov #1, r1\n-\trotr r1\n-\tshad r1, r0\n-\t# check result.\n-\tnot r0, r0\n-\tassert r0, #0\n-\t\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "dfea947e856adbe6f93463656392a07f7dc9c9d4",
      "filename": "sim/testsuite/sim/sh64/compact/shal.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 57,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shal.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shal.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/shal.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,57 +0,0 @@\n-# sh testcase for shal $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global shal\n-shal:\n-\tmov #1, r1\n-\tshal r1\n-\tassert r1, #2\n-\tshal r1\n-\tassert r1, #4\n-\tshal r1\n-\tassert r1, #8\n-\tshal r1\n-\tassert r1, #16\n-\tshal r1\n-\tassert r1, #32\n-\tshal r1\n-\tassert r1, #64\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tshal r1\n-\tassert r1, #0\n-\n-okay:\t\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "e3e92fca080a834af2f33d74ef1dce97835da55c",
      "filename": "sim/testsuite/sim/sh64/compact/shar.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shar.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shar.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/shar.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,40 +0,0 @@\n-# sh testcase for shar $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global shar\n-shar:\n-\tmov #0, r0\n-\tor #192, r0\n-\tshar r0\n-\tbt wrong\n-\tshar r0\n-\tbt wrong\n-\tshar r0\n-\tbt wrong\n-\tshar r0\n-\tbt wrong\n-\tshar r0\n-\tbt wrong\n-\tshar r0\n-\tbt wrong\n-\tshar r0\n-\tbf wrong\n-\tshar r0\n-\tbf wrong\n-\tshar r0\n-\tbt wrong\n-\tshar r0\n-\tbt wrong\n-\tassert r0, #0\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "32e4100259d64f86543c6d3e7e037f24fc73b2dd",
      "filename": "sim/testsuite/sim/sh64/compact/shld.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 48,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shld.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shld.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/shld.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,48 +0,0 @@\n-# sh testcase for shld $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global null\n-null:\n-\tmov #1, r0\n-\tmov #0, r1\n-\tshld r1, r0\n-\t# no shift is performed.\n-\tassert r0, #1\n-\n-\t.global gt0\n-gt0:\n-\tmov #4, r0\n-\tmov #3, r1\n-\tshld r1, r0\n-\t# shift left 3 bits.\n-\tassert r0, #32\n-\n-\t.global lt0\n-lt0:\n-\tmov #32, r0\n-\tmov #3, r1\n-\tneg r1, r1\n-\tshld r1, r0\n-\t# shift right 3 bits.\n-\tassert r0, #4\n-\n-\t.global fill\n-fill:\n-\tmov #1, r0\n-\trotr r0\n-\tmov #1, r1\n-\trotr r1\n-\tshld r1, r0\n-\tassert r0, #0\n-\t\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "882f2c2e1ef8cffeb88ab2abb9cba7035555c4f2",
      "filename": "sim/testsuite/sim/sh64/compact/shll.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 57,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shll.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shll.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/shll.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,57 +0,0 @@\n-# sh testcase for shll $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global shll\n-shll:\n-\tmov #1, r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tassert r1, #0\n-another:\n-\tmov #1, r1\n-\tshll r1\n-\tshll r1\n-\tshll r1\n-\tassert r1, #8\n-\n-okay:\t\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "0637c3de7060380d913b9912b96c217c1fd2fde1",
      "filename": "sim/testsuite/sim/sh64/compact/shll16.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 44,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shll16.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shll16.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/shll16.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,44 +0,0 @@\n-# sh testcase for shll16 $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global shll16\n-shll16:\n-\tmov #108, r1\n-\tshll16 r1\n-\tshll16 r1\n-\tassert r1, #0\n-\n-another:\n-\tmov #1, r1\n-\tshll16 r1\n-\tmov #1, r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tcmp/eq r1, r7\n-\tbf wrong\n-\t\t\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "6e28c6643070f27225c2960d876b58ca397e1ff8",
      "filename": "sim/testsuite/sim/sh64/compact/shll2.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shll2.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shll2.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/shll2.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,40 +0,0 @@\n-# sh testcase for shll2 $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global shll2\n-shll2:\n-\tmov #1, r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tshll2 r1\n-\tassert r1, #0\n-\n-another:\n-\tmov #1, r1\n-\tshll2 r1\n-\tassert r1, #4\n-\t\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "fe455ec753d8194773a9fadd5951fb8021ebd005",
      "filename": "sim/testsuite/sim/sh64/compact/shll8.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 38,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shll8.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shll8.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/shll8.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,38 +0,0 @@\n-# sh testcase for shll8 $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global shll8\n-shll8:\n-\tmov #1, r1\n-\tshll8 r1\n-\tshll8 r1\n-\tshll8 r1\n-\tshll8 r1\n-\tassert r1, #0\n-\n-another:\n-\tmov #1, r1\n-\tshll8 r1\n-\tmov #1, r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tshll r7\n-\tcmp/eq r1, r7\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "9d86461b959d29c8caed7a444709fe8b38a06a87",
      "filename": "sim/testsuite/sim/sh64/compact/shlr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shlr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shlr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/shlr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,33 +0,0 @@\n-# sh testcase for shlr $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global shlr\n-shlr:\n-\tmov #0, r0\n-\tor #192, r0\n-\tshlr r0\n-\tshlr r0\n-\tshlr r0\n-\tshlr r0\n-\tshlr r0\n-\tshlr r0\n-\t# Make sure a bit is shifted into T.\n-\tshlr r0\n-\tbf wrong\n-\t# Ditto.\n-\tshlr r0\n-\tbf wrong\n-\tshlr r0\n-\tassert r0, #0\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "7bfc62788f3144959453399e5663b572afc97526",
      "filename": "sim/testsuite/sim/sh64/compact/shlr16.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shlr16.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shlr16.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/shlr16.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,14 +0,0 @@\n-# sh testcase for shlr16 $rn\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global shrl16\n-shrl16:\n-\tshlr16 r0\n-\n-\tpass"
    },
    {
      "sha": "6f085979443a085eeed6bc04118036b7bbc9bb1e",
      "filename": "sim/testsuite/sim/sh64/compact/shlr2.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shlr2.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shlr2.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/shlr2.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,14 +0,0 @@\n-# sh testcase for shlr2 $rn\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global shrl2\n-shrl2:\n-\tshlr2 r0\n-\n-\tpass"
    },
    {
      "sha": "82040b581b836277d4c90756bb08ff6c9155a9dd",
      "filename": "sim/testsuite/sim/sh64/compact/shlr8.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shlr8.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/shlr8.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/shlr8.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,14 +0,0 @@\n-# sh testcase for shlr8 $rn\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global shrl8\n-shrl8:\n-\tshlr8 r0\n-\n-\tpass"
    },
    {
      "sha": "1b84008c9d255873c35801f293e91fdf1dd0588a",
      "filename": "sim/testsuite/sim/sh64/compact/stc-gbr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stc-gbr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stc-gbr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/stc-gbr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,21 +0,0 @@\n-# sh testcase for stc gbr, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global stc_gbr\n-stc_gbr:\n-\tstc gbr, r1\n-\tmov #42, r1\n-\tldc r1, gbr\n-\tstc gbr, r2\n-\tcmp/eq r1, r2\n-\tbf wrong\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "3e74cc551de1864cc36bbec657f4f878343fc8d8",
      "filename": "sim/testsuite/sim/sh64/compact/stcl-gbr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stcl-gbr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stcl-gbr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/stcl-gbr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,27 +0,0 @@\n-# sh testcase for stc.l gbr, @-$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global stcl_gbr\n-stcl_gbr:\n-\tmov #42, r0\n-\tldc r0, gbr\n-\tmov #40, r0\n-\tshll8 r0\n-\t# save address\n-\tmov r0, r1\n-\tstc.l gbr, @-r0\n-\n-\tadd #4, r0\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "42724b44fff6d17b6dc1bfcd24b4582ef7069930",
      "filename": "sim/testsuite/sim/sh64/compact/sts-fpscr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sts-fpscr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sts-fpscr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/sts-fpscr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,23 +0,0 @@\n-# sh testcase for sts fpscr, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global sts_fpscr\n-sts_fpscr:\n-\tsts fpscr, r0\n-\tmov #42, r0\n-\tlds r0, fpscr\n-\tsts fpscr, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-"
    },
    {
      "sha": "ddbdaf15fb29bf20b33f908daed5d4d146652c90",
      "filename": "sim/testsuite/sim/sh64/compact/sts-fpul.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sts-fpul.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sts-fpul.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/sts-fpul.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,14 +0,0 @@\n-# sh testcase for sts fpul, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global sts_fpul\n-sts_fpul:\n-\t# This is properly exercised by the lds-fpul test case.\n-\tsts fpul, r1\n-\tpass"
    },
    {
      "sha": "4d34bc17aa875a685195c665d1fceb47c8db1141",
      "filename": "sim/testsuite/sim/sh64/compact/sts-mach.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sts-mach.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sts-mach.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/sts-mach.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,22 +0,0 @@\n-# sh testcase for sts mach, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global sts_mach\n-sts_mach:\n-\tmov #42, r0\n-\tlds r0, mach\n-\tsts mach, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "b805f796e445505be860c14e411d643ab4992c79",
      "filename": "sim/testsuite/sim/sh64/compact/sts-macl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sts-macl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sts-macl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/sts-macl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,21 +0,0 @@\n-# sh testcase for sts macl, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global sts_macl\n-sts_macl:\n-\tmov #42, r0\n-\tlds r0, macl\n-\tsts macl, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "3e4f6ee880a764e5244426389c06303139d61bc5",
      "filename": "sim/testsuite/sim/sh64/compact/sts-pr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sts-pr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sts-pr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/sts-pr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,22 +0,0 @@\n-# sh testcase for sts pr, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global sts_pr\n-sts_pr:\n-\tmov #42, r0\n-\tlds r0, pr\n-\tsts pr, r1\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "032870dc1895f8bef4791e2abfe2add12b7fde13",
      "filename": "sim/testsuite/sim/sh64/compact/stsl-fpscr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stsl-fpscr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stsl-fpscr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/stsl-fpscr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,28 +0,0 @@\n-# sh testcase for sts.l fpscr, @-$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global stsl_fpscr\n-stsl_fpscr:\n-\tmov #40, r0\n-\tshll8 r0\n-\t# Preserve r0.\n-\tmov r0, r7\n-\tsts.l fpscr, @-r0\n-\n-check:\n-\t# Ensure r0 is decremented.\n-\tadd #4, r0\n-\tcmp/eq r0, r7\n-\tbf wrong\n-\n-okay:\t\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "89bd9e7384986e89ed4acbafaa2b6ee5650a9194",
      "filename": "sim/testsuite/sim/sh64/compact/stsl-fpul.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stsl-fpul.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stsl-fpul.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/stsl-fpul.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,27 +0,0 @@\n-# sh testcase for sts.l fpul, @-$rn -*- Asm -*_\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global stsl_fpul\n-stsl_fpul:\n-\tmov #40, r0\n-\tshll8 r0\n-\t# Preserve r0.\n-\tmov r0, r7\n-\tsts.l fpul, @-r0\n-\n-dec:\n-\t# Check for proper pre-decrementing.\n-\tadd #4, r0\n-\tcmp/eq r0, r7\n-\tbf wrong\n-\t\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "e15bddece29db25a2cf64c8968632e8c13415d0b",
      "filename": "sim/testsuite/sim/sh64/compact/stsl-mach.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stsl-mach.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stsl-mach.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/stsl-mach.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,42 +0,0 @@\n-# sh testcase for sts.l mach, @-$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global stsl_mach\n-stsl_mach:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r0\n-\tshll8 r0\n-\tadd #12, r0\n-\tshll8 r0\n-\tadd #85, r0\n-\tshll8 r0\n-\tadd #170, r0\n-\t\n-\tlds r0, mach\n-\tmov #40, r2\n-\tshll8 r2\n-\t# Preserve r2.\n-\tmov r2, r7\n-\tsts.l mach, @-r2\n-\n-\t# check results.\n-\tmov.l @r2, r3\n-\tcmp/eq r0, r3\n-\tbf wrong\n-\n-\t# Ensure decrement occurred.\n-\tadd #4, r2\n-\tcmp/eq r2, r7\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "854ef341552b254688cb8c439ccf98add445c593",
      "filename": "sim/testsuite/sim/sh64/compact/stsl-macl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stsl-macl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stsl-macl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/stsl-macl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,42 +0,0 @@\n-# sh testcase for sts.l macl, @-$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global stsl_macl\n-stsl_macl:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r0\n-\tshll8 r0\n-\tadd #12, r0\n-\tshll8 r0\n-\tadd #85, r0\n-\tshll8 r0\n-\tadd #170, r0\n-\t\n-\tlds r0, macl\n-\tmov #40, r2\n-\tshll8 r2\n-\t# Preserve r2.\n-\tmov r2, r7\n-\tsts.l macl, @-r2\n-\n-\t# check results.\n-\tmov.l @r2, r3\n-\tcmp/eq r0, r3\n-\tbf wrong\n-\n-\t# Ensure decrement occurred.\n-\tadd #4, r2\n-\tcmp/eq r2, r7\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "b519c9bb5bd0198b03c4ee81ccfd2f32a033667b",
      "filename": "sim/testsuite/sim/sh64/compact/stsl-pr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stsl-pr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/stsl-pr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/stsl-pr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,42 +0,0 @@\n-# sh testcase for sts.l pr, @-$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global stsl_pr\n-stsl_pr:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r0\n-\tshll8 r0\n-\tadd #12, r0\n-\tshll8 r0\n-\tadd #85, r0\n-\tshll8 r0\n-\tadd #170, r0\n-\t\n-\tlds r0, pr\n-\tmov #40, r2\n-\tshll8 r2\n-\t# Preserve r2.\n-\tmov r2, r7\n-\tsts.l pr, @-r2\n-\n-\t# check results.\n-\tmov.l @r2, r3\n-\tcmp/eq r0, r3\n-\tbf wrong\n-\n-\t# Ensure decrement occurred.\n-\tadd #4, r2\n-\tcmp/eq r2, r7\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "3ba29f872aa1487f1abe6bef83409778702daaf4",
      "filename": "sim/testsuite/sim/sh64/compact/sub.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 68,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sub.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/sub.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/sub.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,68 +0,0 @@\n-# sh testcase for sub $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global sub1\n-sub1:\n-\t# 0 - x.\n-\tmov #0, r0\n-\tmov #3, r1\n-\tsub r1, r0\n-\n-\tmov #2, r7\n-\tnot r7, r7\n-\tcmp/eq r7, r0\n-\tbf wrong\n-\n-\t.global sub2\n-sub2:\n-\t# x - 0.\n-\tmov #0, r0\n-\tmov #3, r1\n-\tsub r0, r1\n-\tassert r1, #3\n-\n-\t.global sub3\n-sub3:\n-\t# x - y.\n-\tmov #4, r0\n-\tmov #3, r1\n-\tsub r0, r1\n-\n-\tmov #0, r7\n-\tnot r7, r7\n-\tcmp/eq r7, r1\n-\tbf wrong\n-\n-\t.global sub4\n-sub4:\n-\t# y - x.\n-\tmov #4, r0\n-\tmov #3, r1\n-\tsub r1, r0\n-\tassert r0, #1\n-\t\n-\t.global sub5\n-sub5:\n-\t# y - y == 0 (where y are in two distinct registers).\n-\tmov #4, r0\n-\tmov #4, r1\n-\tsub r1, r0\n-\tassert r0, #0\n-\n-\t.global sub6\n-sub6:\n-\t# y - y = 0 (where y is the same register).\n-\tmov #4, r1\n-\tsub r1, r1\n-\tassert r1, #0\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "cda1e84ae9d4489e43928bdf88b390c0775bf074",
      "filename": "sim/testsuite/sim/sh64/compact/subc.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/subc.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/subc.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/subc.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,109 +0,0 @@\n-# sh testcase for subc $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-zero:\n-\tmov #0, r0\n-\tmov #0, r1\n-\tclrt\n-\tsubc r0, r1\n-\tassert r1, #0\n-\n-zerot:\n-\tmov #0, r0\n-\tmov #0, r1\n-\tsett\n-\tsubc r0, r1\n-\t# Invert all 1's to all 0's for ease of comparison.\n-\tnot r1, r1\n-\tassert r1, #0\n-\n-null:\n-\tmov #0, r0\n-\tmov #10, r1\n-\tclrt\n-\tsubc r0, r1\n-\tassert r1, #10\n-\n-nullt:\n-\tmov #0, r0\n-\tmov #10, r1\n-\tsett\n-\tsubc r0, r1\n-\tassert r1, #9\n-\n-subc:\n-\tmov #10, r0\n-\tmov #0, r1\n-\tclrt\n-\tsubc r0, r1\n-\t# Again, invert ..\n-\tnot r1, r1\n-\tassert r1, #9\n-\n-subct:\n-\tmov #10, r0\n-\tmov #0, r1\n-\tsett\n-\tsubc r0, r1\n-\t# Again, invert ..\n-\tnot r1, r1\n-\tassert r1, #10\n-\n-subc2:\n-\tmov #10, r0\n-\tmov #20, r1\n-\tclrt\n-\tsubc r0, r1\n-\tassert r1, #10\n-\n-subc2t:\n-\tmov #20, r0\n-\tmov #10, r1\n-\tsett\n-\tsubc r0, r1\n-\t# Again, invert ..\n-\tnot r1, r1\n-\tassert r1, #10\n-\n-subc3:\n-\tmov #5, r0\n-\tmov #5, r1\n-\tclrt\n-\tsubc r0, r1\n-\tassert r1, #0\n-\n-subc3t:\n-\tmov #5, r0\n-\tmov #5, r1\n-\tsett\n-\tsubc r0, r1\n-\t# Again, invert ..\n-\tnot r1, r1\n-\tassert r1, #0\n-\t\n-large:\n-\tmov #2, r0\n-\tmov #10, r1\n-\tclrt\n-\tsubc r1, r0\n-\t# Again, invert ..\n-\tnot r0, r0\n-\tassert r0, #7\n-\n-larget:\n-\tmov #2, r0\n-\tmov #10, r1\n-\tsett\n-\tsubc r0, r1\n-\tassert r1, #7\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "ceb8c64e7fd0927e7143d39f834fe16717d89193",
      "filename": "sim/testsuite/sim/sh64/compact/subv.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 55,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/subv.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/subv.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/subv.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,55 +0,0 @@\n-# sh testcase for subv $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-zero:\n-\tmov #0, r0\n-\tmov #0, r1\n-\tsubv r0, r1\n-\tbt wrong\n-\tassert r1, #0\n-\n-one:\n-\tmov #10, r0\n-\tmov #0, r1\n-\tsubv r0, r1\n-\tbt wrong\n-\tnot r1, r1\n-\tassert r1, #9\n-\n-large:\n-\t# Produce MAXINT in R0.\n-\tmov #0, r0\n-\tnot r0, r0\n-\tshlr r0\n-\n-\t# Put -3 into R1.\n-\tmov #3, r1\n-\tneg r1, r1\n-\n-\t# Subtract them and underflow.\n-\tsubv r0, r1\n-\tbf wrong\n-\n-another:\n-\t# Produce MAXINT in R0.\n-\tmov #0, r0\n-\tnot r0, r0\n-\tshlr r0\n-\t\n-\t# Put -3 into R1.\n-\tmov #3, r1\n-\tneg r1, r1\n-\t\n-\t# Subtract them and overflow.\n-\tsubv r1, r0\n-\tbf wrong\n-\t\t\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "22f6f16a2e12ee4cf36e2855e78302ba54f4709c",
      "filename": "sim/testsuite/sim/sh64/compact/swapb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 44,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/swapb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/swapb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/swapb.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,44 +0,0 @@\n-# sh testcase for swap.b $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\t# Build up a distinctive bit pattern.\n-\tmov #1, r0\n-\tshll8 r0\n-\tadd #12, r0\n-\tshll8 r0\n-\tadd #85, r0\n-\tshll8 r0\n-\tadd #70, r0\n-\n-test:\t\n-\t# Swap the lower two bytes into a different register.\n-\tswap.b r0, r1\n-\tmov #1, r7\n-\tshll8 r7\n-\tadd #12, r7\n-\tshll8 r7\n-\tadd #70, r7\n-\tshll8 r7\n-\tadd #85, r7\n-\tcmp/eq r1, r7\n-\tbf wrong\n-\n-swapback:\n-\t# Swap the lower two bytes into the same registers.\n-\t# R0 should now equal R1.\n-\tswap.b r1, r2\n-\tcmp/eq r0, r2\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "fa1ab697f27575351952cff447c353876696009d",
      "filename": "sim/testsuite/sim/sh64/compact/swapw.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/swapw.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/swapw.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/swapw.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,43 +0,0 @@\n-# sh testcase for swap.w $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global swapw\n-swapw:\n-\t# Build up a characteristic bit pattern in R0.\n-\tmov #85, r0\n-\tshll16 r0\n-\tadd #3, r0\n-\trotr r0\n-\trotr r0\n-\tor #170, r0\n-\t# Preserve for later.\n-\tmov r0, r8\n-\n-test:\t\n-\tswap.w r0, r1\n-\tmov #64, r0\n-\tshll8 r0\n-\tor #170, r0\n-\tshll8 r0\n-\tor #192, r0\n-\tshll8 r0\n-\tor #21, r0\n-\tcmp/eq r1, r0\n-\tbf wrong\n-\n-swapback:\n-\tswap.w r1, r2\n-\tcmp/eq r2, r8\n-\tbf wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "cb7f61870d275c989d331144634fd3c17e771019",
      "filename": "sim/testsuite/sim/sh64/compact/tasb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/tasb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/tasb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/tasb.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,26 +0,0 @@\n-# sh testcase for tas.b @$rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-tasb1:\n-\tmov #40, r0\n-\tshll8 r0\n-\ttas.b @r0\n-\tbf wrong\n-\n-tasb2:\n-\tmov #40, r0\n-\tshll8 r0\n-\ttas.b @r0\n-\tbt wrong\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "b1ad830578b7fd4a71f7ddd68e99a7953df5ac8e",
      "filename": "sim/testsuite/sim/sh64/compact/testutils.inc",
      "status": "removed",
      "additions": 0,
      "deletions": 49,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/testutils.inc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/testutils.inc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/testutils.inc?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,49 +0,0 @@\n-# Support macros for the assembly test cases.\n-\n-\t.macro start\n-\t.text\n-\t.global start\n-start:\n-\t.endm\n-\n-\t# Perform a single to double precision floating point conversion.\n-\t.macro _s2d fpr dpr\n-\tflds \\fpr, fpul\n-\t_setpr\n-\tfcnvsd fpul, \\dpr\n-\t_clrpr\n-\t.endm\n-\n-\t# Set the PR (PRecision) bit in the FPSCR.\n-\t.macro _setpr\n-\tsts fpscr, r7\n-\tmov #8, r8\n-\tshll16 r8\n-\tor r8, r7\n-\tlds r7, fpscr\n-\t.endm\n-\n-\t# Clear the PR bit.\n-\t.macro _clrpr\n-\tsts fpscr, r7\n-\tmov #8, r8\n-\tshll16 r8\n-\tnot r8, r8\n-\tand r8, r7\n-\tlds r7, fpscr\n-\t.endm\n-\n-\t# nb: this macro clobbers R7. \n-\t.macro assert reg value\n-\tmov \\value, r7\n-\tcmp/eq \\reg, r7\n-\tbf wrong\n-\t.endm\n-\n-\t.macro pass\n-\ttrapa #253\n-\t.endm\n-\n-\t.macro fail\n-\ttrapa #254\n-\t.endm"
    },
    {
      "sha": "24f8a6b13bae6c10e10762166ce60c99044a16d3",
      "filename": "sim/testsuite/sim/sh64/compact/trapa.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/trapa.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/trapa.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/trapa.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,13 +0,0 @@\n-# sh testcase for trapa #$imm8 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global trapa\n-trapa:\n-\t# pass is a macro for \"trapa #253\".\n-\ttrapa #253"
    },
    {
      "sha": "a72b8a9a7435f830eaf40f5b32455c5e8fb133c3",
      "filename": "sim/testsuite/sim/sh64/compact/tst.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 62,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/tst.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/tst.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/tst.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,62 +0,0 @@\n-# sh testcase for tst $rm, $rn\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global tst1\n-tst1:\n-\tmov #0, r0\n-\tmov #0, r1\n-\ttst r0, r0\n-\tbf wrong\n-\n-test2:\n-\tmov #0, r0\n-\tmov #1, r1\n-\ttst r0, r1\n-\tbf wrong\n-\n-test3:\n-\tmov #0, r0\n-\tmov #1, r1\n-\ttst r1, r0\n-\tbf wrong\n-\n-test4:\n-\tmov #1, r0\n-\tmov #1, r1\n-\ttst r0, r1\n-\tbt wrong\n-\n-test5:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #85, r0\n-\tshll16 r0\n-\tadd #12, r0\n-\tmov #1, r1\n-\trotr r1\n-\tadd #85, r1\n-\tshll16 r1\n-\tadd #12, r1\n-\ttst r0, r1\n-\tbt wrong\n-\n-test6:\n-\tmov #1, r0\n-\trotr r0\n-\tadd #85, r0\n-\tshll16 r0\n-\tadd #12, r0\n-\tmov #1, r1\n-\ttst r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "1b3829b1d302d77ca3772004fd6f0f01d6ab2ede",
      "filename": "sim/testsuite/sim/sh64/compact/tstb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/tstb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/tstb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/tstb.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,30 +0,0 @@\n-# sh testcase for tst.b #$imm8, @(r0, gbr) -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global orb\n-init:\n-\t# Init GBR and R0.\n-\tmov #30, r0\n-\tldc r0, gbr\t\n-\tmov #40, r0\n-\n-orb:\n-\ttst.b #0, @(r0, gbr)\n-\tbf wrong\n-\ttst.b #170, @(r0, gbr)\n-\tbf wrong\n-\ttst.b #0, @(r0, gbr)\n-\tbf wrong\n-\ttst.b #255, @(r0, gbr)\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "e088029b4709e9f490884fbf0964b117a742b1e8",
      "filename": "sim/testsuite/sim/sh64/compact/tsti.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/tsti.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/tsti.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/tsti.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,32 +0,0 @@\n-# sh testcase for tst #$imm8, r0 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global tsti\n-tsti:\n-\tmov #0, r0\n-\ttst #0, r0\n-\n-tsti2:\n-\tmov #0, r0\n-\ttst #1, r0\n-\n-tsti3:\n-\tmov #1, r0\n-\ttst #0, r0\n-\n-tsti4:\n-\tmov #1, r0\n-\ttst #1, r0\n-\n-tsti5:\n-\tmov #255, r0\n-\ttst #255, r0\n-\n-okay:\n-\tpass"
    },
    {
      "sha": "d158aaf37131fe2ee1bd0d00a9aaddc7b0e7790c",
      "filename": "sim/testsuite/sim/sh64/compact/xor.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 70,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/xor.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/xor.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/xor.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,70 +0,0 @@\n-# sh testcase for xor $rm64, $rn64 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global xor\n-xor:\n-\t# 0 (+) 1 = 1.\n-\tmov #0, r0\n-\tmov #1, r1\n-\txor r0, r1\n-\tassert r1, #1\n-\n-xor2:\n-\t# 1 (+) 0 = 0.\n-\tmov #1, r0\n-\tmov #0, r1\n-\txor r0, r1\n-\tassert r1, #1\n-\n-xor3:\n-\t# 0 (+) 0 = 0.\n-\tmov #0, r0\n-\tmov #0, r1\n-\txor r0, r1\n-\tassert r1, #0\n-\n-xor4:\n-\t# 0 (+) 0 = 0.\n-\tmov #0, r0\n-\txor r0, r0\n-\tassert r0, #0\n-\n-xor5:\n-\tmov #0, r0\n-\tor #85, r0\n-\tshll16 r0\n-\tor #170, r0\n-\tmov r0, r1\n-\tmov #0, r0\n-\tor #85, r0\n-\tshll16 r0\n-\tor #170, r0\n-\txor r1, r0\n-\tassert r0, #0\n-\n-xor6:\n-\tmov #0, r0\n-\tor #85, r0\n-\tshll16 r0\n-\tor #170, r0\n-\tmov r0, r1\n-\tmov #0, r0\n-\tor #85, r0\n-\tshll16 r0\n-\tor #12, r0\n-\txor r0, r1\n-\tmov #0, r0\n-\tor #166, r0\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "b31464b3c137aeab6d7b656dc91f63b35fb4bece",
      "filename": "sim/testsuite/sim/sh64/compact/xorb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/xorb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/xorb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/xorb.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,24 +0,0 @@\n-# sh testcase for xor.b #$imm8, @(r0, gbr) -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global orb\n-init:\n-\t# Init GBR and R0.\n-\tmov #30, r0\n-\tldc r0, gbr\t\n-\tmov #40, r0\n-\n-orb:\n-\txor.b #0, @(r0, gbr)\n-\txor.b #170, @(r0, gbr)\n-\txor.b #0, @(r0, gbr)\n-\txor.b #255, @(r0, gbr)\n-\n-okay:\n-\tpass"
    },
    {
      "sha": "732b9ec5c4866ab217a782c00f4c349e660f9458",
      "filename": "sim/testsuite/sim/sh64/compact/xori.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 50,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/xori.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/xori.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/xori.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,50 +0,0 @@\n-# sh testcase for xor #$imm8, r0 -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-\t.global xori\n-xori:\n-\t# 0 (+) 1 = 1.\n-\tmov #0, r0\n-\txor #1, r0\n-\tassert r0, #1\n-\n-xori2:\n-\t# 1 (+) 0 = 1.\n-\tmov #1, r0\n-\txor #0, r0\n-\tassert r0, #1\n-\n-xori3:\n-\t# 1 (+) 1 = 0.\n-\tmov #1, r0\n-\txor #1, r0\n-\tassert r0, #0\n-\n-xori4:\n-\t# 255 (+) 255 = 0.\n-\tmov #0, r0\n-\tor #255, r0\n-\txor #255, r0\n-\tassert r0, #0\n-\n-xori5:\n-\t# 0 (+) 255 = 255.\n-\tmov #0, r0\n-\txor #255, r0\n-\tmov r0, r1\n-\n-\tmov #0, r0\n-\tor #255, r0\n-\tcmp/eq r0, r1\n-\tbf wrong\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "11dae7cbdecaf90e4d2dc34979e12890f9cb405b",
      "filename": "sim/testsuite/sim/sh64/compact/xtrct.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/xtrct.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/compact/xtrct.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/compact/xtrct.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,46 +0,0 @@\n-# sh testcase for xtrct $rm, $rn -*- Asm -*-\n-# mach: all\n-# as: -isa=shcompact\n-# ld: -m shelf32\n-\n-\t.include \"compact/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tmov #170, r0\n-\tshll8 r0\n-\tadd #1, r0\n-\tshll8 r0\n-\tadd #66, r0\n-\tshll8 r0\n-\tmov r0, r1\n-\n-\tmov #85, r0\n-\tshll8 r0\n-\tadd #2, r0\n-\tshll8 r0\n-\tadd #42, r0\n-\tshll8 r0\n-\tadd #3, r0\n-\n-copy:\n-\tmov r0, r3\n-\tmov r1, r4\n-\n-xtrct:\n-\txtrct r0, r1\n-\n-check:\n-\t# Lower r3, upper r4.\n-\tshll16 r3\n-\tshlr16 r4\n-\tor r3, r4\n-\tcmp/eq r1, r4\n-\tbf wrong\n-\t\n-okay:\n-\tpass\n-wrong:\n-\tfail\n-\t"
    },
    {
      "sha": "acd19b3c90c37947e627773de675c0ee0be5ff2c",
      "filename": "sim/testsuite/sim/sh64/interwork.exp",
      "status": "removed",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/interwork.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/interwork.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/interwork.exp?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,20 +0,0 @@\n-# SH64 interworking testsuite.\n-# In particular, test parts of the instruction set that can be used\n-# for SHmedia/SHcompact instruction set mode switches.\n-\n-if [istarget sh64-*-*] {\n-    # load support procs (none yet)\n-    # load_lib cgen.exp\n-\n-    # all machines\n-    set all_machs \"sh5\"\n-\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/misc/*.s]] {\n-       # If we're only testing specific files and this isn't one of them,\n-       # skip it.\n-       if ![runtest_file_p $runtests $src] {\n-  \t  continue\n-\t}\n-    run_sim_test $src $all_machs\n-    }\n-}"
    },
    {
      "sha": "1a3d9f4c9619daf7c589b38dcca449781aefb5ff",
      "filename": "sim/testsuite/sim/sh64/media.exp",
      "status": "removed",
      "additions": 0,
      "deletions": 19,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media.exp?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,19 +0,0 @@\n-# SHmedia testsuite.\n-\n-if [istarget sh64-*-*] {\n-    # load support procs (none yet)\n-    # load_lib cgen.exp\n-\n-    # all machines\n-    set all_machs \"sh5\"\n-\n-    # The .cgs suffix is for \"cgen .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/media/*.cgs]] {\n-       # If we're only testing specific files and this isn't one of them,\n-       # skip it.\n-       if ![runtest_file_p $runtests $src] {\n-  \t  continue\n-\t}\n-    run_sim_test $src $all_machs\n-    }\n-}"
    },
    {
      "sha": "e435dbe527857e9df54f6f0539ac3b3b9f9fd2fb",
      "filename": "sim/testsuite/sim/sh64/media/ChangeLog",
      "status": "removed",
      "additions": 0,
      "deletions": 102,
      "changes": 102,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/ChangeLog?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,102 +0,0 @@\n-2001-01-09  Ben Elliston  <bje@redhat.com>\n-\n-\t* nsb.cgs: Test consecutive bits of zeros as well as ones.\n-\t* ptb.cgs: Clean up.\n-\n-2001-01-08  Ben Elliston  <bje@redhat.com>\n-\n-\t* fcmpund.cgs, fcmpuns.cgs: Complete test cases.\n-\t* fcnvds.cgs, fcnvsd.cgs, fgetscr.cgs, fiprs.cgs: Ditto.\n-\t* floatld.cgs, floatls.cgs, floatqd.cgs, floatqs.cgs: Ditto.\n-\t* fmuld.cgs, fmuls.cgs, fputscr.cgs, fstxp.cgs: Ditto.\n-\t* fsubd.cgs, fsubs.cgs, ftrcdl.cgs, ftrcdq.cgs: Ditto.\n-\t* ftrcsl.cgs, ftrcsq.cgs, ftrvs.cgs: Ditto.\n-\t* ldhil.cgs, ldhiq.cgs, ldlol.cgs, ldloq.cgs: Ditto.\n-\t* mabsl.cgs, mabsw.cgs, maddl.cgs, maddsl.cgs: Ditto.\n-\t* maddsub.cgs, maddsw.cgs, maddw.cgs: Ditto.\n-\t* mcmpeqb.cgs, mcmpeql.cgs, mcmpeqw.cgs: Ditto.\n-\t* mcmpgtl.cgs, mcmpgtub.cgs, mcmpgtw.cgs: Ditto.\n-\t* mcmv.cgs, mcnvslw.cgs, mcnvswb.cgs, mcnvswub.cgs: Ditto.\n-\t* mmacfxwl.cgs, mmacnfx-wl.cgs: Ditto.\n-\t* mmulfxl.cgs, mmulfxrpw.cgs, mmulfxw.cgs: Ditto.\n-\t* mmulhiwl.cgs, mmull.cgs, mmullowl.cgs: Ditto.\n-\t* mmulsumwq.cgs, mmulw.cgs, movi.cgs: Ditto.\n-\t* mpermw.cgs, msadubq.cgs: Ditto.\n-\t* mshaldsl.cgs, mshaldsw.cgs: Ditto.\n-\t* mshardl.cgs, mshardsq.cgs, mshardw.cgs: Ditto.\n-\t* mshfhib.cgs, mshfhil.cgs, mshfhiw.cgs: Ditto.\n-\t* mshflob.cgs, mshflol.cgs, mshflow.cgs: Ditto.\n-\t* mshlldl.cgs, mshlldw.cgs, mshlrdl.cgs: Ditto.\n-\t* mshlrdw.cgs, msubl.cgs, msubsl.cgs: Ditto.\n-\t* msubsub.cgs, msubsw.cgs, msubw.cgs: Ditto.\n-\t* mulsl.cgs, mulul.cgs: Ditto.\n-\t* ptabs.cgs, ptb.cgs, ptrel.cgs: Ditto.\n-\t* shard.cgs, shardl.cgs, shari.cgs, sharil.cgs: Ditto.\n-\t* shlld.cgs, shlldl.cgs, shlli.cgs, shllil.cgs: Ditto.\n-\t* shlrd.cgs, shlrdl.cgs, shlri.cgs, shlril.cgs: Ditto.\n-\t* sthil.cgs, sthiq.cgs, swapq.cgs, trapa.cgs: Ditto.\n-\n-\t* testutils.inc (pass): Pass correct \"syscall\" number.\n-\t(fail): Ditto.\n-\n-2000-12-13  Ben Elliston  <bje@redhat.com>\n-\n-\t* sub.cgs, subl.cgs: Complete test cases.\n-\t* ptrel.cgs: Likewise.\n-\n-\t* shori.cgs: Test for zero extension of immediate operand.\n-\t* fcmpged.cgs, fcmpges.cgs, fldd.cgs: Complete test cases.\n-\t* fldp.cgs, flds.cgs, fldxd.cgs, fldxp.cgs: Likewise.\n-\t* fldxs.cgs, fmacs.cgs, fnegd.cgs, fnegs.cgs: Likewise.\n-\t* fsqrtd.cgs, fsqrts.cgs, fstd.cgs, fstp.cgs: Likewise.\n-\t* fsts.cgs, fstxd.cgs, fstxs.cgs: Likewise.\n-\n-2000-12-12  Ben Elliston  <bje@redhat.com>\n-\n-\t* testutils.inc (pass): Use simple syscall mechanism.\n-\t(fail): Likewise.\n-\t(_packb, _packw, _packl): New macros for packing slices.\n-\n-\t* stb.cgs, stq.cgs, stxb.cgs, stxq.cgs: Complete test cases.\n-\t* stl.cgs, stw.cgs, stxl.cgs, stxw.cgs: Likewise.\n-\t* ldl.cgs, ldq.cgs, ldub.cgs, lduw.cgs, ldw.cgs: Likewise.\n-\t* ldxb.cgs, ldxl.cgs, ldxq.cgs, ldxub.cgs: Likewise.\n-\t* ldxuw.cgs, ldxw.cgs, nsb.cgs, trapa.cgs: Likewise.\n-\n-\t* fcmpeqd.cgs, fcmpeqs.cgs, fcmpgtd.cgs: Complete test cases.\n-\t* fcmpgts.cgs, fdivd.cgs, fdivs.cgs, fmovd.cgs: Likewise.\n-\t* fmovdq.cgs, fmovqd.cgs, fmovls.cgs, fmovs.cgs: Likewise.\n-\t* fmovsl.cgs: Likewise.\n-\n-2000-12-11  Ben Elliston  <bje@redhat.com>\n-\n-\t* fabss.cgs, fabsd.cgs, fadds.cgs, faddd.cgs: Complete test cases.\n-\t* getcfg.cgs, getcon.cgs, gettr.cgs, icbi.cgs: Likewise.\n-\t* prefi.cgs, pta.cgs, ptabs.cgs, ptb.cgs: Likewise.\n-\t* putcon.cgs, putcfg.cgs, rte.cgs: Likewise.\n-\n-\t* add.cgs, addi.cgs, addl.cgs, addil.cgs: Complete test cases.\n-\t* addl.cgs, addzl.cgs, alloco.cgs, and.cgs, andc.cgs: Likewise.\n-\t* andi.cgs, beq.cgs, beqi.cgs, bge.cgs, bgeu.cgs: Likewise.\n-\t* bgt.cgs, bgtu.cgs, blink.cgs, bne.cgs, bnei.cgs: Likewise.\n-\t* brk.cgs, byterev.cgs, cmpeq.cgs, cmpgt.cgs: Likewise.\n-\t* cmpgtu.cgs, cmveq.cgs, cmvne.cgs: Likewise.\n-\n-2000-12-07  Ben Elliston  <bje@redhat.com>\n-\n-\t* mextr1.cgs, mextr2.cgs, mextr3.cgs: Complete test cases.\n-\t* mextr4.cgs, mextr5.cgs, mextr6.cgs, mextr7.cgs: Likewise.\n-\n-2000-12-05  Ben Elliston  <bje@redhat.com>\n-\n-\t* nop.cgs, ocbi.cgs, ocbp.cgs, ocbwb.cgs: Complete test cases.\n-\t* or.cgs, ori.cgs, xor.cgs, xori.cgs: Ditto.\n-\t* sleep.cgs, synci.cgs, synco.cgs: Ditto.\n-\n-2000-11-22  Ben Elliston  <bje@redhat.com>\n-\n-\t* *.cgs: Include \"media/testutils.inc\", not \"testutils.inc\" as\n-\tgenerated test cases do.  Miscellaneous fixes.\n-\n-\t* testutils.inc: New file.\n-\t* *.cgs: Generate test cases."
    },
    {
      "sha": "9778e8fd62c6b05dd4f103bc379ecec8dcda1f0e",
      "filename": "sim/testsuite/sim/sh64/media/add.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 47,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/add.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/add.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/add.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,47 +0,0 @@\n-# sh testcase for add $rm, $rn, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global add\n-init:\n-\tpta wrong, tr0\n-add:\n-\tmovi 10, r0\n-\tmovi 0, r1\n-\tadd r0, r1, r3\n-\tmovi 10, r4\n-\tbne r3, r4, tr0\n-\n-add0:\n-\tmovi 1, r63\n-\tadd r63, r63, r1\n-\tbnei r1, 0, tr0\n-\n-add2:\n-\tmovi 0, r0\n-\tmovi 10, r1\n-\tadd r0, r1, r3\n-\tmovi 10, r4\n-\tbne r3, r4, tr0\n-\n-add3:\n-\tmovi 10, r1\n-\tadd r63, r1, r3\n-\tmovi 10, r4\n-\tbne r3, r4, tr0\n-\n-add4:\n-\tmovi 10, r1\n-\tadd r1, r63, r3\n-\tmovi 10, r4\n-\tbne r3, r4, tr0\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "3d4b49f59958ef4e270938e9666a3a71921eabd2",
      "filename": "sim/testsuite/sim/sh64/media/addi.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/addi.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/addi.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/addi.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,37 +0,0 @@\n-# sh testcase for addi $rm, $disp10, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-addi1:\n-\tmovi 1, r0\n-\taddi r0, 10, r0\n-\tbnei r0, 11, tr0\n-\n-addi2:\n-\tmovi 10, r0\n-\taddi r0, 1, r0\n-\tbnei r0, 11, tr0\n-\n-addi3:\n-\tmovi 10, r0\n-\taddi r0, -1, r0\n-\tbnei r0, 9, tr0\n-\n-addi4:\n-\tmovi 20, r0\n-\taddi r0, -2, r0\n-\tbnei r0, 18, tr0\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "5c92e2733a6e5584bfb0604ada679ea0f5155989",
      "filename": "sim/testsuite/sim/sh64/media/addil.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 49,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/addil.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/addil.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/addil.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,49 +0,0 @@\n-# sh testcase for addi.l $rm, $disp10, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-addil0:\n-\tmovi 1, r63\n-\taddi.l r63, 0, r1\n-\tbnei r1, 0, tr0\n-\n-addil1:\n-\tmovi 10, r0\n-\taddi.l r0, 0, r3\n-\tbnei r3, 10, tr0\n-\n-addil2:\n-\tmovi 0, r0\n-\taddi.l r0, 10, r2\n-\tbnei r2, 10, tr0\n-\n-addil3:\n-\taddi.l r63, 10, r1\n-\tbnei r1, 10, tr0\n-\n-addil4:\n-\tmovi 10, r0\n-\taddi.l r0, 0, r1\n-\tbnei r1, 10, tr0\n-\n-addil5:\n-\t# Ensure top 32-bits are discarded when adding.\n-\tmovi 10, r0\n-\tshlli r0, 32, r0\n-\taddi r0, 10, r0\n-\taddi.l r0, 10, r2\n-\tbnei r2, 20, tr0\n-\t\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "7f94b61620675e98bc75b236339f12a650c48b39",
      "filename": "sim/testsuite/sim/sh64/media/addl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 61,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/addl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/addl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/addl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,61 +0,0 @@\n-# sh testcase for add.l $rm, $rn, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global addl\n-init:\n-\tpta wrong, tr0\n-\n-addl0:\n-\tmovi 1, r63\n-\tadd.l r63, r63, r1\n-\tbnei r1, 0, tr0\n-\n-addl1:\n-\tmovi 10, r0\n-\tmovi 0, r1\n-\tadd.l r0, r1, r3\n-\tmovi 10, r4\n-\tbne r3, r4, tr0\n-\n-addl2:\n-\tmovi 0, r0\n-\tmovi 10, r1\n-\tadd.l r0, r1, r2\n-\tmovi 10, r3\n-\tbne r2, r3, tr0\n-\n-addl3:\n-\tmovi 10, r0\n-\tadd.l r63, r0, r1\n-\tmovi 10, r2\n-\tbne r1, r2, tr0\n-\n-addl4:\n-\tmovi 10, r0\n-\tadd.l r0, r63, r1\n-\tmovi 10, r2\n-\tbne r1, r2, tr0\n-\n-addl5:\n-\t# Ensure top 32-bits are discarded when adding.\n-\tmovi 10, r0\n-\tshlli r0, 32, r0\n-\taddi r0, 10, r0\n-\tmovi 10, r1\n-\tshlli r1, 32, r1\n-\taddi r1, 10, r1\n-\tadd.l r0, r1, r2\n-\tmovi 20, r3\n-\tbne r2, r3, tr0\n-\t\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "b7917d377a687bb2de3356bffefbd596649c9533",
      "filename": "sim/testsuite/sim/sh64/media/addzl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/addzl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/addzl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/addzl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,39 +0,0 @@\n-# sh testcase for addz.l $rm, $rn, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-addzl1:\n-\tmovi 1, r0\n-\tmovi 2, r1\n-\taddz.l r0, r1, r2\n-\tbnei r2, 3, tr0\n-\n-addzl2:\n-\tmovi 1, r0\n-\tshlli r0, 32, r0\n-\taddi r0, 2, r0\n-\tmovi 1, r1\n-\tshlli r1, 32, r1\n-\taddi r1, 2, r1\n-\taddz.l r0, r1, r2\n-\tbnei r2, 4, tr0\n-\n-addzl3:\n-\tmovi 1, r0\n-\tshlli r0, 31, r0\n-\taddi r0, 2, r0\n-\tmovi 2, r1\n-\taddz.l r0, r1, r2\n-\t\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "5f27359c3b6a95f027193e1700ab3b661b094ef0",
      "filename": "sim/testsuite/sim/sh64/media/alloco.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 10,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/alloco.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/alloco.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/alloco.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,10 +0,0 @@\n-# sh testcase for alloco $rm, $disp6x32 -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\talloco r0, 32\n-\tpass"
    },
    {
      "sha": "c2d42339bcfb1f377a1d9c2e6a33c45447e9498b",
      "filename": "sim/testsuite/sim/sh64/media/and.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 68,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/and.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/and.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/and.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,68 +0,0 @@\n-# sh testcase for and $rm, $rn, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\t\n-and0:\n-\t# 0 and 0 is 0.\n-\tmovi 0, r0\n-\tmovi 0, r1\n-\tand r0, r1, r2\n-\tbnei r2, 0, tr0\n-\n-and1:\n-\t# 0 and 1 is 0.\n-\tmovi 0, r0\n-\tmovi 1, r1\n-\tand r0, r1, r2\n-\tbnei r2, 0, tr0\n-\n-and2:\n-\t# 1 and 0 is 0.\n-\tmovi 1, r0\n-\tmovi 0, r1\n-\tand r0, r1, r2\n-\tbnei r2, 0, tr0\n-\n-and3:\n-\t# 1 and 1 is 1.\n-\tmovi 1, r0\n-\tmovi 1, r1\n-\tand r0, r1, r2\n-\tbnei r2, 1, tr0\n-\n-and4:\n-\tmovi 1, r0\n-\tshlli r0, 63, r0\n-\tmovi 1, r1\n-\tshlli r1, 63, r1\n-\tand r0, r1, r2\n-\t# Check it.\n-\tmovi 1, r3\n-\tshlli r3, 63, r3\n-\tbne r2, r3, tr0\n-\n-and5:\n-\tmovi 1, r0\n-\tshlli r0, 63, r0\n-\tmovi 1, r1\n-\tshlli r1, 63, r1\n-\tori r1, 1, r1\n-\tand r0, r1, r2\n-\t# Check it.\n-\tmovi 1, r3\n-\tshlli r1, 63, r1\n-\tbne r1, r2, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "60b50ace465f81235e244945cbcc38d882178a26",
      "filename": "sim/testsuite/sim/sh64/media/andc.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 50,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/andc.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/andc.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/andc.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,50 +0,0 @@\n-# sh testcase for andc $rm, $rn, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-andc1:\n-\t# X . !X = 0.\n-\tmovi 3, r0\n-\tmovi 3, r1\n-\tandc r0, r1, r2\n-\tbnei r2, 0, tr0\n-\n-andc2:\n-\t# X . 0 = X.\n-\tmovi 3, r0\n-\tmovi 0, r1\n-\tandc r0, r1, r2\n-\tbnei r2, 3, tr0\n-\n-andc3:\n-\t# wide X . 0 = wide X.\n-\tmovi 0x1020, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x30, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x40, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x50, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x60, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x70, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x80, r0\n-\tmovi 0, r1\n-\tandc r0, r1, r2\n-\tbne r0, r2, tr0\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "decfc2fc2ec7e7a5753ecf851b517d2c68ae446a",
      "filename": "sim/testsuite/sim/sh64/media/andi.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/andi.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/andi.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/andi.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,46 +0,0 @@\n-# sh testcase for andi $rm, $disp10, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\t\n-andi0:\n-\t# 0 and 0 is 0.\n-\tmovi 0, r0\n-\tandi r0, 0, r2\n-\tbnei r2, 0, tr0\n-\n-and1:\n-\t# 0 and 1 is 0.\n-\tmovi 0, r0\n-\tandi r0, 1, r2\n-\tbnei r2, 0, tr0\n-\n-and2:\n-\t# 1 and 0 is 0.\n-\tmovi 1, r0\n-\tandi r0, 0, r2\n-\tbnei r2, 0, tr0\n-\n-and3:\n-\t# 1 and 1 is 1.\n-\tmovi 1, r0\n-\tandi r0, 1, r2\n-\tbnei r2, 1, tr0\n-\n-and4:\n-\tmovi 15, r0\n-\tandi r0, 3, r2\n-\tbnei r2, 3, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "6f96ffdf00f359cd37ef6d18ec92e7ec36308361",
      "filename": "sim/testsuite/sim/sh64/media/beq.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 52,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/beq.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/beq.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/beq.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,52 +0,0 @@\n-# sh testcase for beq$likely $rm, $rn, $tra -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global beq\n-init:\n-\t# Load up the branch target registers.\n-\tpta beq2, tr0\n-\tpta beq3, tr1\n-\tpta wrong, tr2\n-\n-beq1:\n-\t# Compare r0 with itself.\n-\t# Always true, so branch likely.\n-\tmovi 1, r0\n-\tbeq/l r0, r0, tr0\n-\t# We should branch over this.\n-\tfail\n-\n-beq2:\t\n-\t# Ensure high order bits are compared, too.\n-\tmovi 1, r0\n-\tshlli r0, 35, r0\n-\taddi r0, 10, r0\n-\tmovi 1, r1\n-\tshlli r1, 35, r1\n-\taddi r1, 10, r1\n-\tbeq r0, r1, tr1\n-\t# We should branch over this, too.\n-\tfail\n-\n-beq3:\n-\tmovi 1, r0\n-\tshlli r0, 35, r0\n-\taddi r0, 10, r0\n-\tmovi 2, r1\n-\tshlli r1, 35, r1\n-\taddi r1, 9, r1\n-\t# Unlikely we'll branch!\n-\tbeq/u r0, r1, tr2\n-\t# We should proceed to pass here.\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "c2b4ea8acf52ad207994dfbe6ea66cbb0b1eb673",
      "filename": "sim/testsuite/sim/sh64/media/beqi.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/beqi.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/beqi.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/beqi.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,40 +0,0 @@\n-# sh testcase for beqi$likely $rm, $imm6, $tra -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global beqi\n-init:\n-\t# Load up the branch target registers.\n-\tpta beqi2, tr0\n-\tpta beqi3, tr1\n-\tpta wrong, tr2\n-\n-beqi1:\n-\t# Always true, so branch likely.\n-\tmovi 1, r0\n-\tbeqi/l r0, 1, tr0\n-\t# We should branch over this.\n-\tfail\n-\n-beqi2:\n-\tmovi 22, r3\n-\tbeqi r3, 22, tr1\n-\t# We should branch over this.\n-\tfail\n-\n-beqi3:\t\n-\tmovi 27, r7\n-\t# We shouldn't branch here.\n-\tbeqi/u r7, 23, tr2\n-\t# We should proceed to pass here.\n-\n-okay:\n-\tpass\n-\t\n-wrong:\n-\tfail"
    },
    {
      "sha": "832ff06ac21f8fe4a746f63a70e2f4751c1033fb",
      "filename": "sim/testsuite/sim/sh64/media/bge.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/bge.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/bge.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/bge.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,40 +0,0 @@\n-# sh testcase for bge$likely $rm, $rn, $tra -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global bge\n-init:\n-\tpta bge2, tr0\n-\tpta bge3, tr1\n-\tpta wrong, tr2\n-\tmovi 0, r0\n-\t\n-bge1:\n-\t# Compare r0 with itself.\n-\tbge/l r0, r0, tr0\n-\t# We should branch here.\n-\tfail\n-\n-bge2:\n-\tmovi 1, r1\n-\tmovi 1, r2\n-\tbge r1, r2, tr1\n-\t# We should branch here.\n-\tfail\n-\n-bge3:\n-\tmovi -1, r1\n-\tmovi 1, r2\n-\tbge r1, r2, tr2\n-\t# We should not branch here.\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "da469d0e4ae5b452ed8bd23e22aae1246ffeb1f5",
      "filename": "sim/testsuite/sim/sh64/media/bgeu.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 47,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/bgeu.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/bgeu.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/bgeu.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,47 +0,0 @@\n-# sh testcase for bgeu$likely $rm, $rn, $tra -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global bgeu\n-init:\n-\tmovi 0, r0\n-\t\n-bgeu1:\n-\t# Compare r0 with itself.\n-\tpta bgeu2, tr0\n-\tbgeu/l r0, r0, tr0\n-\t# We should branch here.\n-\tfail\n-\n-bgeu2:\n-\tmovi 1, r1\n-\tmovi 1, r2\n-\tpta bge3, tr0\n-\tbgeu r1, r2, tr0\n-\t# We should branch here.\n-\tfail\n-\n-bge3:\n-\tmovi -1, r1\n-\tmovi 1, r2\n-\t# We SHOULD branch here.\n-\tpta bge4, tr0\n-\tbgeu r1, r2, tr0\n-\tfail\n-\n-bge4:\n-\tmovi 1, r1\n-\tmovi -1, r2\n-\t# We should not branch here.\n-\tpta wrong, tr0\n-\tbgeu r1, r2, tr0\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "8866635b818a81e24bd7f2dde313c2e69990cffc",
      "filename": "sim/testsuite/sim/sh64/media/bgt.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/bgt.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/bgt.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/bgt.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,32 +0,0 @@\n-# sh testcase for bgt$likely $rm, $rn, $tra -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\n-init:\n-\tpta wrong, tr0\n-\n-bgt1:\n-\tmovi 1, r0\n-\tmovi -1, r1\n-\tbgt r1, r0, tr0\n-\n-bgt2:\n-\tbgt r0, r0, tr0\n- \n-bgt3:\n-\tpta okay, tr1\n-\tmovi -1, r0\n-\tmovi 1, r1\n-\tbgt r0, r1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "3cc02696e75863d38e933118a7ea11f9cc3087b1",
      "filename": "sim/testsuite/sim/sh64/media/bgtu.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/bgtu.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/bgtu.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/bgtu.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,36 +0,0 @@\n-# sh testcase for bgtu$likely $rm, $rn, $tra -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\n-init:\n-\tpta wrong, tr0\n-\n-bgtu1:\n-\tmovi 1, r0\n-\tmovi -1, r1\n-\tpta bgt2, tr1\n-\tbgtu r1, r0, tr1\n-\tfail\n-\n-bgt2:\n-\tbgtu r0, r0, tr0\n- \n-bgt3:\n-\tpta okay, tr1\n-\tmovi -1, r0\n-\tmovi 1, r1\n-\tpta okay, tr1\n-\tbgtu r0, r1, tr1\n-\tfail\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "000d1f597f263896e157ea39c2c7f7a7dd072c07",
      "filename": "sim/testsuite/sim/sh64/media/blink.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/blink.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/blink.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/blink.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,17 +0,0 @@\n-# sh testcase for blink $trb, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-blink:\n-\tpta target, tr0\n-\tgettr tr0, r1\n-\tptabs r1, tr0\n-\tblink tr0, r0\n-\tfail\n-\n-target:\n-\tpass"
    },
    {
      "sha": "f574147e3de568bab8d111a99a40b6a346c1ad76",
      "filename": "sim/testsuite/sim/sh64/media/bne.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/bne.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/bne.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/bne.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,23 +0,0 @@\n-# sh testcase for bne$likely $rm, $rn, $tra -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tmovi 1, r0\n-\tpta wrong, tr0\n-\tpta okay, tr1\n-\n-bne1:\t\n-\tbne r63, r63, tr0\n-bne2:\n-\tbne r0, r63, tr1\n-bad:\n-\tfail\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "5ce33991c0dde010cd983fca58e3b94231ddb970",
      "filename": "sim/testsuite/sim/sh64/media/bnei.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/bnei.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/bnei.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/bnei.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,23 +0,0 @@\n-# sh testcase for bnei$likely $rm, $imm6, $tra -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tmovi 1, r0\n-\tpta wrong, tr0\n-\tpta okay, tr1\n-\n-bnei1:\n-\tbnei r63, 0, tr0\n-bnei2:\n-\tbnei r0, 3, tr1\n-bad:\n-\tfail\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "073641443ec1b0751615826029f38544e2d20279",
      "filename": "sim/testsuite/sim/sh64/media/brk.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 11,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/brk.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/brk.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/brk.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,11 +0,0 @@\n-# sh testcase for brk -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\t# brk will cause the sim to trap, so avoid it.\n-\tpass\n-\tbrk"
    },
    {
      "sha": "d97c3adb7b0529397ffb7912ef08e40d0f8fb8fd",
      "filename": "sim/testsuite/sim/sh64/media/byterev.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 67,
      "changes": 67,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/byterev.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/byterev.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/byterev.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,67 +0,0 @@\n-# sh testcase for byterev $rm, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\tpta wrong, tr0\n-init:\n-\t# Put a distinctive pattern in r0.\n-\tmovi 10, r0\n-\tshlli r0, 8, r0\n-\tori r0, 20, r0\n-\tshlli r0, 8, r0\n-\tori r0, 30, r0\n-\tshlli r0, 8, r0\n-\tori r0, 40, r0\n-\tshlli r0, 8, r0\n-\tori r0, 50, r0\n-\tshlli r0, 8, r0\n-\tori r0, 60, r0\n-\tshlli r0, 8, r0\n-\tori r0, 70, r0\n-\tshlli r0, 8, r0\n-\tori r0, 80, r0\n-\n-byterev:\n-\tbyterev r0, r1\n-\n-check:\n-\tandi r1, 255, r2\n-\tmovi 10, r3\n-\tbne r2, r3, tr0\n-\tshlri r1, 8, r1\n-\tandi r1, 255, r2\n-\tmovi 20, r3\n-\tbne r2, r3, tr0\n-\tshlri r1, 8, r1\n-\tandi r1, 255, r2\n-\tmovi 30, r3\n-\tbne r2, r3, tr0\n-\tshlri r1, 8, r1\n-\tandi r1, 255, r2\n-\tmovi 40, r3\n-\tbne r2, r3, tr0\n-\tshlri r1, 8, r1\n-\tandi r1, 255, r2\n-\tmovi 50, r3\n-\tbne r2, r3, tr0\n-\tshlri r1, 8, r1\n-\tandi r1, 255, r2\n-\tmovi 60, r3\n-\tbne r2, r3, tr0\n-\tshlri r1, 8, r1\n-\tandi r1, 255, r2\n-\tmovi 70, r3\n-\tbne r2, r3, tr0\n-\tshlri r1, 8, r1\n-\tandi r1, 255, r2\n-\tmovi 80, r3\n-\tbne r2, r3, tr0\n-\n-okay:\n-\tpass\n-wrong:\n-\tfail"
    },
    {
      "sha": "78f51f4a65da3e4d340b4d30c4af36a81b0453be",
      "filename": "sim/testsuite/sim/sh64/media/cmpeq.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/cmpeq.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/cmpeq.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/cmpeq.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,42 +0,0 @@\n-# sh testcase for cmpeq $rm, $rn, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\tmovi 0, r0\n-\tmovi 1, r1\n-\tmovi 2, r2\n-\tmovi 2, r3\n-\tmovi 3, r4\n-\n-cmpeq1:\n-\tcmpeq r2, r2, r7\n-\tbne r7, r1, tr0\n-\n-cmpeq2:\n-\tcmpeq r2, r3, r7\n-\tbne r7, r1, tr0\n-\n-cmpeq3:\n-\tcmpeq r2, r4, r7\n-\tbne r7, r0, tr0\n-\n-cmpeq4:\n-\tmovi 1, r2\n-\tshlli r2, 63, r2\n-\tmovi 1, r3\n-\tshlli r3, 63, r3\n-\tcmpeq r2, r3, r7\n-\tbne r7, r1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "e4a971bd5eea161e7eb135179c7debeabdf004e1",
      "filename": "sim/testsuite/sim/sh64/media/cmpgt.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/cmpgt.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/cmpgt.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/cmpgt.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,43 +0,0 @@\n-# sh testcase for cmpgt $rm, $rn, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\tmovi 0, r0\n-\tmovi 1, r1\n-\tmovi 2, r2\n-\tmovi 2, r3\n-\tmovi 3, r4\n-\n-cmpgt1:\n-\tcmpgt r2, r2, r7\n-\tbne r7, r0, tr0\n-\n-cmpgt2:\n-\tcmpgt r2, r3, r7\n-\tbne r7, r0, tr0\n-\n-cmpgt3:\n-\tcmpgt r4, r2, r7\n-\tbne r7, r1, tr0\n-\n-cmpgt4:\n-\tmovi 1, r2\n-\tshlli r2, 63, r2\n-\tmovi 1, r3\n-\tshlli r3, 63, r3\n-\taddi r3, 1, r3\n-\tcmpgt r3, r2, r7\n-\tbne r7, r1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "b896dfcb9fd66881a7b2dbe7c196ac2ca820aed2",
      "filename": "sim/testsuite/sim/sh64/media/cmpgtu.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/cmpgtu.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/cmpgtu.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/cmpgtu.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,43 +0,0 @@\n-# sh testcase for cmpgtu $rm, $rn, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\tmovi 0, r0\n-\tmovi 1, r1\n-\tmovi 2, r2\n-\tmovi 2, r3\n-\tmovi 3, r4\n-\n-cmpgt1:\n-\tcmpgtu r2, r2, r7\n-\tbne r7, r0, tr0\n-\n-cmpgt2:\n-\tcmpgtu r2, r3, r7\n-\tbne r7, r0, tr0\n-\n-cmpgt3:\n-\tcmpgtu r4, r2, r7\n-\tbne r7, r1, tr0\n-\n-cmpgt4:\n-\tmovi 1, r2\n-\tshlli r2, 63, r2\n-\tmovi 1, r3\n-\tshlli r3, 63, r3\n-\taddi r3, 1, r3\n-\tcmpgtu r3, r2, r7\n-\tbne r7, r1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "0f49733de36c091442b5f2918c31f3425b93ba19",
      "filename": "sim/testsuite/sim/sh64/media/cmveq.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/cmveq.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/cmveq.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/cmveq.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,32 +0,0 @@\n-# sh testcase for cmveq $rm, $rn, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-\tmovi 0, r0\n-\tmovi 1, r1\n-\tmovi 2, r2\n-\tmovi 21, r3\n-\n-cmveq:\n-\t# Zap r7.\n-\tmovi 0, r7\n-\n-\tcmveq r0, r2, r7\n-\tbne r2, r7, tr0\n-\n-\tcmveq r1, r3, r7\n-\t# Make sure r7 is still equal to r2.\n-\tbne r2, r7, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "909179afc76f02ba1c869da364d439fbcfb5dbcc",
      "filename": "sim/testsuite/sim/sh64/media/cmvne.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/cmvne.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/cmvne.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/cmvne.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,32 +0,0 @@\n-# sh testcase for cmvne $rm, $rn, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-\tmovi 0, r0\n-\tmovi 1, r1\n-\tmovi 2, r2\n-\tmovi 21, r3\n-\n-cmvne:\n-\t# Zap r7.\n-\tmovi 0, r7\n-\n-\tcmvne r1, r2, r7\n-\tbne r2, r7, tr0\n-\n-\tcmvne r0, r3, r7\n-\t# Make sure r7 is still equal to r2.\n-\tbne r2, r7, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "47060fcc44bf5e4385115b371566d6358b8869f8",
      "filename": "sim/testsuite/sim/sh64/media/fabsd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fabsd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fabsd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fabsd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,39 +0,0 @@\n-# sh testcase for fabs.d $drgh, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\tmovi 0, r0\n-\tmovi 1, r1\n-\n-fabs0:\n-\t# Ensure fabs(-1) = 1.\n-\tfmov.ls r0, fr7\n-\tfloat.ld fr7, dr0\n-\tfmov.ls r1, fr7\n-\tfloat.ld fr7, dr2\n-\tfsub.d dr0, dr2, dr4\n-\tfabs.d dr4, dr6\n-\tfcmpeq.d dr6, dr2, r7\n-\tbnei r7, 1, tr0\n-\n-fabs1:\n-\t# Ensure fabs(1) = 1.\n-\tfmov.ls r0, fr7\n-\tfloat.ld fr7, dr0\n-\tfmov.ls r1, fr7\n-\tfloat.ld fr7, dr2\n-\tfabs.d dr2, dr4\n-\tfcmpeq.d dr2, dr4, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "dd9aec7e640128f7a794bade4107664046a9b52d",
      "filename": "sim/testsuite/sim/sh64/media/fabss.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fabss.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fabss.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fabss.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,39 +0,0 @@\n-# sh testcase for fabs.s $frgh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\tmovi 0, r0\n-\tmovi 1, r1\n-\n-fabs0:\n-\t# Ensure fabs(-1) = 1.\n-\tfmov.ls r0, fr7\n-\tfloat.ls fr7, fr0\n-\tfmov.ls r1, fr7\n-\tfloat.ls fr7, fr1\n-\tfsub.s fr0, fr1, fr2\n-\tfabs.s fr2, fr3\n-\tfcmpeq.s fr3, fr1, r7\n-\tbnei r7, 1, tr0\n-\n-fabs1:\n-\t# Ensure fabs(1) = 1.\n-\tfmov.ls r0, fr7\n-\tfloat.ls fr7, fr0\n-\tfmov.ls r1, fr7\n-\tfloat.ls fr7, fr1\n-\tfabs.s fr1, fr2\n-\tfcmpeq.s fr1, fr2, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "096f8528946010ea2a3908a3c60d7d78e513f2c3",
      "filename": "sim/testsuite/sim/sh64/media/faddd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/faddd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/faddd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/faddd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,33 +0,0 @@\n-# sh testcase for fadd.d $drg, $drh, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\tmovi 2, r0\n-\tmovi 3, r1\n-\n-fadd0:\n-\t# Add 2 and 3.\n-\tfmov.ls r0, fr7\n-\tfloat.ld fr7, dr0\n-\tfmov.ls r1, fr7\n-\tfloat.ld fr7, dr2\n-\tfadd.d dr0, dr2, dr4\n-\t# Check to make sure we got 5.\n-\tmovi 5, r2\n-\tfmov.ls r2, fr7\n-\tfloat.ld fr7, dr6\n-\tfcmpeq.d dr4, dr6, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "fb93979c7378f4f6d0c091a754e14102134262dc",
      "filename": "sim/testsuite/sim/sh64/media/fadds.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fadds.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fadds.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fadds.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,34 +0,0 @@\n-# sh testcase for fadd.s $frg, $frh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global fadds\n-init:\n-\tpta wrong, tr0\n-\tmovi 2, r0\n-\tmovi 3, r1\n-\n-fadd0:\n-\t# Add 2 and 3.\n-\tfmov.ls r0, fr7\n-\tfloat.ls fr7, fr0\n-\tfmov.ls r1, fr7\n-\tfloat.ls fr7, fr1\n-\tfadd.s fr0, fr1, fr2\n-\t# Check to make sure we got 5.\n-\tmovi 5, r2\n-\tfmov.ls r2, fr7\n-\tfloat.ls fr7, fr3\n-\tfcmpeq.s fr2, fr3, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "c19356476f9ba1ff1f26acfed5138b1ea4ebd0fc",
      "filename": "sim/testsuite/sim/sh64/media/fcmpeqd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpeqd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpeqd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fcmpeqd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,36 +0,0 @@\n-# sh testcase for fcmpeq.d $drg, $drh, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-fcmpeq1:\n-\tmovi 1, r0\n-\tfmov.ls r0, fr0\n-\tfmov.ls r0, fr1\n-\tfloat.ld fr0, dr2\n-\tfloat.ld fr1, dr4\n-\tfcmpeq.d dr2, dr2, r7\n-\tbnei r7, 1, tr0 \n-\n-fcmpeq2:\n-\tmovi 1, r0\n-\tfmov.ls r0, fr0\n-\tmovi 2, r1\n-\tfmov.ls r1, fr1\n-\tfloat.ld fr0, dr4\n-\tfloat.ld fr1, dr6\n-\tfcmpeq.d dr4, dr6, r7\n-\tbnei r7, 0, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "216894d7d20e9b93ae4282d8020b7e7902eb1217",
      "filename": "sim/testsuite/sim/sh64/media/fcmpeqs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpeqs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpeqs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fcmpeqs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,36 +0,0 @@\n-# sh testcase for fcmpeq.s $frg, $frh, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-fcmpeq1:\n-\tmovi 1, r0\n-\tfmov.ls r0, fr0\n-\tfmov.ls r0, fr1\n-\tfloat.ls fr0, fr2\n-\tfloat.ls fr1, fr3\n-\tfcmpeq.s fr2, fr3, r7\n-\tbnei r7, 1, tr0 \n-\n-fcmpeq2:\n-\tmovi 1, r0\n-\tfmov.ls r0, fr0\n-\tmovi 2, r1\n-\tfmov.ls r1, fr1\n-\tfloat.ls fr0, fr2\n-\tfloat.ls fr1, fr3\n-\tfcmpeq.s fr2, fr3, r7\n-\tbnei r7, 0, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "52496cc6b14931ced7b244ac81a035f5a6dd433b",
      "filename": "sim/testsuite/sim/sh64/media/fcmpged.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpged.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpged.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fcmpged.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,46 +0,0 @@\n-# sh testcase for fcmpge.d $drg, $drh, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-fcmpge1: # 2 = 2.\n-\tmovi 2, r0\n-\tfmov.ls r0, fr0\n-\tfmov.ls r0, fr1\n-\tfloat.ld fr0, dr2\n-\tfloat.ld fr1, dr4\n-\tfcmpge.d dr2, dr4, r7\n-\tbnei r7, 1, tr0\n-\n-fcmpge2: # 4 > 2.\n-\tmovi 4, r0\n-\tfmov.ls r0, fr0\n-\tmovi 2, r0\n-\tfmov.ls r0, fr1\n-\tfloat.ld fr0, dr2\n-\tfloat.ld fr1, dr4\n-\tfcmpge.d dr2, dr4, r7\n-\tbnei r7, 1, tr0\n-\n-fcmpge3: # 2 < 4.\n-\tmovi 2, r0\n-\tfmov.ls r0, fr0\n-\tmovi 4, r0\n-\tfmov.ls r0, fr1\n-\tfloat.ld fr0, dr2\n-\tfloat.ld fr1, dr4\n-\tfcmpge.d dr2, dr4, r7\n-\tbnei r7, 0, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "2dd0a35fd27e545193c6496ad349d2b10c7ea5a7",
      "filename": "sim/testsuite/sim/sh64/media/fcmpges.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpges.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpges.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fcmpges.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,46 +0,0 @@\n-# sh testcase for fcmpge.s $frg, $frh, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-fcmpge1: # 2 = 2.\n-\tmovi 2, r0\n-\tfmov.ls r0, fr0\n-\tfmov.ls r0, fr1\n-\tfloat.ls fr0, fr2\n-\tfloat.ls fr1, fr3\n-\tfcmpge.s fr2, fr3, r7\n-\tbnei r7, 1, tr0\n-\n-fcmpge2: # 3 > 2.\n-\tmovi 3, r0\n-\tfmov.ls r0, fr0\n-\tmovi 2, r0\n-\tfmov.ls r0, fr1\n-\tfloat.ls fr0, fr2\n-\tfloat.ls fr1, fr3\n-\tfcmpge.s fr2, fr3, r7\n-\tbnei r7, 1, tr0\n-\n-fcmpge3: # 2 < 3.\n-\tmovi 2, r0\n-\tfmov.ls r0, fr0\n-\tmovi 3, r0\n-\tfmov.ls r0, fr1\n-\tfloat.ls fr0, fr2\n-\tfloat.ls fr1, fr3\n-\tfcmpge.s fr2, fr3, r7\n-\tbnei r7, 0, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "aec952097de66dd1f3714883c98abc8eec651d5a",
      "filename": "sim/testsuite/sim/sh64/media/fcmpgtd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpgtd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpgtd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fcmpgtd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,36 +0,0 @@\n-# sh testcase for fcmpgt.d $drg, $drh, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-fcmpgt1:\n-\tmovi 2, r0\n-\tfmov.qd r0, dr0\n-\tmovi 1, r1\n-\tfmov.qd r1, dr2\n-\tfloat.qd dr0, dr4\n-\tfloat.qd dr2, dr6\n-\tfcmpgt.d dr4, dr6, r7\n-\tbnei r7, 1, tr0 \n-\n-fcmpgt2:\n-\tmovi 1, r0\n-\tfmov.qd r0, dr0\n-\tfmov.qd r0, dr2\n-\tfloat.qd dr0, dr4\n-\tfloat.qd dr2, dr6\n-\tfcmpgt.d dr4, dr6, r7\n-\tbnei r7, 0, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "893bbcbf60b666ef0c1d6638aa75517aab594c11",
      "filename": "sim/testsuite/sim/sh64/media/fcmpgts.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpgts.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpgts.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fcmpgts.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,36 +0,0 @@\n-# sh testcase for fcmpgt.s $frg, $frh, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-fcmpgt1:\n-\tmovi 2, r0\n-\tfmov.ls r0, fr0\n-\tmovi 1, r1\n-\tfmov.ls r1, fr1\n-\tfloat.ls fr0, fr2\n-\tfloat.ls fr1, fr3\n-\tfcmpgt.s fr2, fr3, r7\n-\tbnei r7, 1, tr0 \n-\n-fcmpgt2:\n-\tmovi 1, r0\n-\tfmov.ls r0, fr0\n-\tfmov.ls r0, fr1\n-\tfloat.ls fr0, fr2\n-\tfloat.ls fr1, fr3\n-\tfcmpgt.s fr2, fr3, r7\n-\tbnei r7, 0, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "b87fb8d9fb6eb0bc69bc78a7a7324250d65b06fb",
      "filename": "sim/testsuite/sim/sh64/media/fcmpund.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpund.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpund.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fcmpund.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,26 +0,0 @@\n-# sh testcase for fcmpun.d $drg, $drh, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-fcmpund:\t\n-\tmovi 0, r0\n-\tmovi 1, r1\n-\tfmov.qd r0, dr0\n-\tfloat.qd dr0, dr0\n-\tfmov.qd r1, dr2\n-\tfloat.qd dr2, dr2\n-\tfcmpun.d dr0, dr2, r7\n-\tbnei r7, 0, tr0\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "6c2ed96b4a3d536b3b23b2d56a1aa32e3a480662",
      "filename": "sim/testsuite/sim/sh64/media/fcmpuns.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpuns.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcmpuns.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fcmpuns.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,26 +0,0 @@\n-# sh testcase for fcmpun.s $frg, $frh, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-fcmpuns:\t\n-\tmovi 0, r0\n-\tmovi 1, r1\n-\tfmov.ls r0, fr0\n-\tfloat.ls fr0, fr0\n-\tfmov.ls r1, fr1\n-\tfloat.ls fr1, fr1\n-\tfcmpun.s fr0, fr1, r7\n-\tbnei r7, 0, tr0\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "aa6c993fb856c666a5c4fa05441b2557f93da329",
      "filename": "sim/testsuite/sim/sh64/media/fcnvds.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcnvds.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcnvds.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fcnvds.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,27 +0,0 @@\n-# sh testcase for fcnv.ds $drgh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-fcnvds:\n-\tmovi 9, r0\n-\tfmov.qd r0, dr0\n-\tfloat.qd dr0, dr0\n-\tfcnv.ds dr0, fr3\n-\tmovi 9, r0\n-\tfmov.ls r0, fr4\n-\tfloat.ls fr4, fr4\n-\tfcmpeq.s fr3, fr4, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "6c2396fe815b290d49c7ecaf8f8b80655a974c89",
      "filename": "sim/testsuite/sim/sh64/media/fcnvsd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcnvsd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fcnvsd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fcnvsd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,27 +0,0 @@\n-# sh testcase for fcnv.sd $frgh, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-fcnvsd:\t\n-\tmovi 9, r0\n-\tfmov.ls r0, fr0\n-\tfloat.ls fr0, fr0\n-\tfcnv.sd fr0, dr2\n-\tmovi 9, r0\n-\tfmov.qd r0, dr4\n-\tfloat.qd dr4, dr4\n-\tfcmpeq.d dr2, dr4, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "62401c6b47ed93975495210583fe7ffe99b29aad",
      "filename": "sim/testsuite/sim/sh64/media/fdivd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fdivd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fdivd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fdivd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,39 +0,0 @@\n-# sh testcase for fdiv.d $drg, $drh, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-fdivd1:\n-\tmovi 1, r0\n-\tfmov.qd r0, dr0\n-\tfloat.qd dr0, dr0\n-\tmovi 2, r1\n-\tfmov.qd r1, dr2\n-\tfloat.qd dr2, dr2\n-\tfdiv.d dr0, dr2, dr4\n-\n-fdvid2:\n-\tmovi 6, r0\n-\tfmov.qd r0, dr0\n-\tfloat.qd dr0, dr0\n-\tmovi 2, r1\n-\tfmov.qd r1, dr2\n-\tfloat.qd dr2, dr2\n-\tfdiv.d dr0, dr2, dr4\n-\tmovi 3, r3\n-\tfmov.qd r3, dr6\n-\tfloat.qd dr6, dr6\n-\tfcmpeq.d dr4, dr6, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "9b20f686b9208fd77175577fd2eab9234fefcd1f",
      "filename": "sim/testsuite/sim/sh64/media/fdivs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fdivs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fdivs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fdivs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,39 +0,0 @@\n-# sh testcase for fdiv.s $frg, $frh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-fdivs1:\n-\tmovi 1, r0\n-\tfmov.ls r0, fr0\n-\tfloat.ls fr0, fr0\n-\tmovi 2, r1\n-\tfmov.ls r1, fr1\n-\tfloat.ls fr1, fr1\n-\tfdiv.s fr0, fr1, fr2\n-\n-fdvis2:\n-\tmovi 6, r0\n-\tfmov.ls r0, fr0\n-\tfloat.ls fr0, fr0\n-\tmovi 2, r1\n-\tfmov.ls r1, fr1\n-\tfloat.ls fr1, fr1\n-\tfdiv.s fr0, fr1, fr2\n-\tmovi 3, r3\n-\tfmov.ls r3, fr3\n-\tfloat.ls fr3, fr3\n-\tfcmpeq.s fr2, fr3, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "6aa227480ce55d8287a243aedee8f328736fc92d",
      "filename": "sim/testsuite/sim/sh64/media/fgetscr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fgetscr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fgetscr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fgetscr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,14 +0,0 @@\n-# sh testcase for fgetscr $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global fgetscr\n-fgetscr:\n-\tfgetscr fr0\n-\n-\tpass"
    },
    {
      "sha": "fef62d11c7ce296e2020f45f1c2f8ff8f0d8f829",
      "filename": "sim/testsuite/sim/sh64/media/fiprs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fiprs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fiprs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fiprs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,42 +0,0 @@\n-# sh testcase for fipr.s $fvg, $fvh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\t.macro _load val, fpreg\n-\t# This macro clobbers r0.\n-\tmovi \\val, r0\n-\tfmov.ls r0, \\fpreg \n-\tfloat.ls \\fpreg, \\fpreg\n-\t.endm\n-\n-\tstart\n-\n-\t.global fiprs\n-init:\n-\tpta wrong, tr0\n-\n-\t_load 1, fr0\n-\t_load 2, fr1\n-\t_load 3, fr2\n-\t_load 4, fr3\n-\t_load 1, fr4\n-\t_load 2, fr5\n-\t_load 3, fr6\n-\t_load 4, fr7\n-\n-fiprs:\n-\tfipr.s fv0, fv4, fr9\n-\n-check:\n-\t_load 30, fr10\n-\tfcmpeq.s fr9, fr10, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "ded2a9fe8f560dce028b21727edaabca0cd8b0fb",
      "filename": "sim/testsuite/sim/sh64/media/fldd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fldd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fldd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fldd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,13 +0,0 @@\n-# sh testcase for fld.d $rm, $disp10x8, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\tmovi 0x2800, r0\n-\tfld.d r0, 0, dr0\n-\tfld.d r0, 8, dr0\n-\tfld.d r0, -8, dr0\n-\tpass"
    },
    {
      "sha": "8727110378ca7592aad5c810b8575d3af3017c5a",
      "filename": "sim/testsuite/sim/sh64/media/fldp.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fldp.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fldp.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fldp.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,16 +0,0 @@\n-# sh testcase for fld.p $rm, $disp10x8, $fpf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tmovi 0x2800, r0\n-\n-fldp:\n-\tfld.p r0, 0, fp0\n-\tfld.p r0, 8, fp2\n-\tfld.p r0, -8, fp4\n-\tpass"
    },
    {
      "sha": "75d5e961e261f5afb4a1dc74f044540d26935616",
      "filename": "sim/testsuite/sim/sh64/media/flds.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/flds.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/flds.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/flds.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,13 +0,0 @@\n-# sh testcase for fld.s $rm, $disp10x4, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\tmovi 0x2800, r0\n-\tfld.s r0, 0, fr0\n-\tfld.s r0, 4, fr0\n-\tfld.s r0, -4, fr0\n-\tpass"
    },
    {
      "sha": "63cb56bb06fd9f09d37065fa11339475442097b7",
      "filename": "sim/testsuite/sim/sh64/media/fldxd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fldxd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fldxd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fldxd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,16 +0,0 @@\n-# sh testcase for fldx.d $rm, $rn, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\tmovi 0x2800, r0\n-\tmovi 0, r1\n-\tfldx.d r0, r1, dr0\n-\tmovi 8, r1\n-\tfldx.d r0, r1, dr0\n-\tmovi -8, r1\n-\tfldx.d r0, r1, dr0\n-\tpass"
    },
    {
      "sha": "3d929c6fef8c5751530e0864d97ad81584a4b93c",
      "filename": "sim/testsuite/sim/sh64/media/fldxp.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fldxp.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fldxp.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fldxp.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,22 +0,0 @@\n-# sh testcase for fldx.p $rm, $rn, $fpf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tmovi 0x2800, r0\n-\n-fldxp:\n-\tmovi 0, r1\n-\tfldx.p r0, r1, fp0\n-\n-\tmovi 8, r1\n-\tfldx.p r0, r1, fp2\n-\n-\tmovi -8, r1\n-\tfldx.p r0, r1, fp4\n-\n-\tpass"
    },
    {
      "sha": "10feb3e54a906d5711ed91a263d22aa299513402",
      "filename": "sim/testsuite/sim/sh64/media/fldxs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fldxs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fldxs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fldxs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,16 +0,0 @@\n-# sh testcase for fldx.s $rm, $rn, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\tmovi 0x2800, r0\n-\tmovi 0, r1\n-\tfldx.s r0, r1, fr0\n-\tmovi 4, r1\n-\tfldx.s r0, r1, fr0\n-\tmovi -4, r1\n-\tfldx.s r0, r1, fr0\n-\tpass"
    },
    {
      "sha": "31f6111061b785f285b5fad23ec5ae39e49867cc",
      "filename": "sim/testsuite/sim/sh64/media/floatld.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/floatld.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/floatld.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/floatld.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,12 +0,0 @@\n-# sh testcase for float.ld $frgh, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\tmovi 1, r0\n-\tfmov.ls r0, fr0\n-\tfloat.ld fr0, dr0\n-\tpass"
    },
    {
      "sha": "4c8fb9927986c504c3d5898ecae6ff2abc790d3f",
      "filename": "sim/testsuite/sim/sh64/media/floatls.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/floatls.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/floatls.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/floatls.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,12 +0,0 @@\n-# sh testcase for float.ls $frgh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\tmovi 1, r0\n-\tfmov.ls r0, fr0\n-\tfloat.ls fr0, fr0\n-\tpass"
    },
    {
      "sha": "ea5ddd9e49a3317177ee0ea624eb8de3db8bef2b",
      "filename": "sim/testsuite/sim/sh64/media/floatqd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/floatqd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/floatqd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/floatqd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,12 +0,0 @@\n-# sh testcase for float.qd $drgh, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\tmovi 1, r0\n-\tfmov.qd r0, dr0\n-\tfloat.qd dr0, dr2\n-\tpass"
    },
    {
      "sha": "fcf35e2954817044f874cdd46c97ee22eeffe60a",
      "filename": "sim/testsuite/sim/sh64/media/floatqs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/floatqs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/floatqs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/floatqs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,12 +0,0 @@\n-# sh testcase for float.qs $drgh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\tmovi 1, r0\n-\tfmov.qd r0, dr0\n-\tfloat.qs dr0, fr1\n-\tpass"
    },
    {
      "sha": "62219c5fafd2125d833373bb54bfc49297373f4d",
      "filename": "sim/testsuite/sim/sh64/media/fmacs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmacs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmacs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fmacs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,39 +0,0 @@\n-# sh testcase for fmac.s $frg, $frh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\t\n-fmacs:\n-\tmovi 2, r0\n-\tfmov.ls r0, fr0\n-\tfloat.ls fr0, fr0\n-\n-\tmovi 3, r1\n-\tfmov.ls r1, fr1\n-\tfloat.ls fr1, fr1\n-\n-\tmovi 4, r2\n-\tfmov.ls r2, fr2\n-\tfloat.ls fr2, fr2\n-\n-\tfmac.s fr0, fr1, fr2\n-\n-\tmovi 10, r3\n-\tfmov.ls r3, fr3\n-\tfloat.ls fr3, fr3\n-\n-\tfcmpeq.s fr2, fr3, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "03c05ad17766bcfd50c4c654a8389236b03cbe8c",
      "filename": "sim/testsuite/sim/sh64/media/fmovd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmovd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmovd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fmovd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,24 +0,0 @@\n-# sh testcase for fmov.d $drgh, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-fmovd:\t\n-\tmovi 4, r0\n-\tfmov.qd r0, dr0\n-\tfloat.qd dr0, dr2\n-\tfmov.d dr2, dr4\n-\tfcmpeq.d dr2, dr4, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\t\n-wrong:\t\n-\tfail\t"
    },
    {
      "sha": "ff5c3fe9302265186a62d3873a898c31b2ccd3f9",
      "filename": "sim/testsuite/sim/sh64/media/fmovdq.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmovdq.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmovdq.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fmovdq.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,23 +0,0 @@\n-# sh testcase for fmov.dq $drgh, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-fmovdq:\n-\tmovi 4, r0\n-\tfmov.qd r0, dr0\n-\tfmov.dq dr0, r1\n-\tbne r0, r1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "850ec33d160f21631a5d00945de97a4ba0ea793d",
      "filename": "sim/testsuite/sim/sh64/media/fmovls.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmovls.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmovls.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fmovls.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,26 +0,0 @@\n-# sh testcase for fmov.ls $rm, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-fmovls0:\n-\tmovi 0, r0\n-\tfmov.ls r0, fr0\n-\n-fmovls1:\n-\tmovi 1, r1\n-\tfmov.ls r1, fr1\n-\n-upper:\n-\tmovi 1, r2\n-\tshlli r2, 63, r2\n-\tori r2, 3, r2\n-\t# Bit 63 should be ignored.\n-\tfmov.ls r2, fr2\n-\n-okay:\n-\tpass"
    },
    {
      "sha": "64eac72b3df27bb6ecb425771934107e0540432f",
      "filename": "sim/testsuite/sim/sh64/media/fmovqd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmovqd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmovqd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fmovqd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,22 +0,0 @@\n-# sh testcase for fmov.qd $rm, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-fmovdq:\n-\tmovi 4, r0\n-\tfmov.qd r0, dr0\n-\tfmov.dq dr0, r1\n-\tbne r0, r1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "f126aa5a41c7a0cbe0a7fb25ccb30bbdad33a9ea",
      "filename": "sim/testsuite/sim/sh64/media/fmovs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmovs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmovs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fmovs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,24 +0,0 @@\n-# sh testcase for fmov.s $frgh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\t\n-fmovs:\n-\tmovi 8, r0\n-\tfmov.ls r0, fr7\n-\tfloat.ls fr7, fr0\n-\tfmov.s fr0, fr1\n-\tfcmpeq.s fr0, fr1, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "7dfdab1d1452906ad3dccbff66916ec760ed8200",
      "filename": "sim/testsuite/sim/sh64/media/fmovsl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmovsl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmovsl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fmovsl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,21 +0,0 @@\n-# sh testcase for fmov.sl $frgh, $rd -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-fmovsl:\t\n-\tpta wrong, tr0\n-\tmovi 9, r0\n-\tfmov.ls r0, fr0\n-\tfmov.sl fr0, r1\n-\tbne r0, r1, tr0\n-\n-okay:\t\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "2ad67cdc5325c85b294f429a684360f1594fb19a",
      "filename": "sim/testsuite/sim/sh64/media/fmuld.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmuld.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmuld.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fmuld.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,30 +0,0 @@\n-# sh testcase for fmul.d $drg, $drh, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-fmuld1:\n-\tmovi 2, r0\n-\tfmov.qd r0, dr0\n-\tfloat.qd dr0, dr0\n-\tmovi 3, r1\n-\tfmov.qd r1, dr2\n-\tfloat.qd dr2, dr2\n-\tfmul.d dr0, dr2, dr4\n-\tmovi 6, r2\n-\tfmov.qd r2, dr6\n-\tfloat.qd dr6, dr6\n-\tfcmpeq.d dr4, dr6, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "4b8875f0c59c0eee6a5810222d53ef4ddddf5b40",
      "filename": "sim/testsuite/sim/sh64/media/fmuls.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmuls.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fmuls.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fmuls.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,31 +0,0 @@\n-# sh testcase for fmul.s $frg, $frh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-fmuls1:\n-\tmovi 2, r0\n-\tfmov.ls r0, fr0\n-\tfloat.ls fr0, fr0\n-\tmovi 3, r1\n-\tfmov.ls r1, fr1\n-\tfloat.ls fr1, fr1\n-\tfmul.s fr0, fr1, fr2\n-\tmovi 6, r2\n-\tfmov.ls r2, fr3\n-\tfloat.ls fr3, fr3\n-\tfcmpeq.s fr2, fr3, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "67b381345b63ca791487e6670989b186db46b761",
      "filename": "sim/testsuite/sim/sh64/media/fnegd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 35,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fnegd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fnegd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fnegd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,35 +0,0 @@\n-# sh testcase for fneg.d $drgh, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\tmovi 0, r0\n-\tmovi 1, r1\n-\n-fnegd0:\n-\t# Ensure fnegd(0) = 0.\n-\tfmov.ls r0, fr7\n-\tfloat.ld fr7, dr0\n-\tfneg.d dr0, dr2\n-\tfcmpeq.d dr0, dr2, r7\n-\tbnei r7, 1, tr0\n-\n-fnegd1:\n-\t# Ensure fnegd(fnegd(1)) = 1.\n-\tfmov.ls r1, fr7\n-\tfloat.ld fr7, dr0\n-\tfneg.d dr0, dr2\n-\tfneg.d dr2, dr4\n-\tfcmpeq.d dr0, dr4, r7\n-\tbnei r7, 1, tr0\n-\t\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "9ad625a1f1f1a36e33cd30344b78779169f37ad4",
      "filename": "sim/testsuite/sim/sh64/media/fnegs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 35,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fnegs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fnegs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fnegs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,35 +0,0 @@\n-# sh testcase for fneg.s $frgh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\tmovi 0, r0\n-\tmovi 1, r1\n-\n-fnegs0:\n-\t# Ensure fnegs(0) = 0.\n-\tfmov.ls r0, fr7\n-\tfloat.ls fr7, fr0\n-\tfneg.s fr0, fr1\n-\tfcmpeq.s fr0, fr1, r7\n-\tbnei r7, 1, tr0\n-\n-fnegs1:\n-\t# Ensure fnegs(fnegs(1)) = 1.\n-\tfmov.ls r1, fr7\n-\tfloat.ls fr7, fr0\n-\tfneg.s fr0, fr1\n-\tfneg.s fr1, fr2\n-\tfcmpeq.s fr0, fr2, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "28d2e7230eedb9b4f0b2fa2f6cc7a3eea06903cc",
      "filename": "sim/testsuite/sim/sh64/media/fputscr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fputscr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fputscr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fputscr.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,14 +0,0 @@\n-# sh testcase for fputscr $frgh -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global fputscr\n-fputscr:\n-\tfputscr fr0\n-\n-\tpass"
    },
    {
      "sha": "ae6120002e0095d2541f4e43679bf95ad09a14de",
      "filename": "sim/testsuite/sim/sh64/media/fsqrtd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fsqrtd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fsqrtd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fsqrtd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,27 +0,0 @@\n-# sh testcase for fsqrt.d $frgh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\tmovi 9, r0\n-\tfmov.ls r0, fr7\n-\tfloat.ld fr7, dr0\n-\tmovi 3, r1\n-\tfmov.ls r1, fr7\n-\tfloat.ld fr7, dr2\n-\n-fsqrtd:\n-\tfsqrt.d dr0, dr4\n-\tfcmpeq.d dr2, dr4, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "f11839331598ae1f502e653c062ec515e24937f2",
      "filename": "sim/testsuite/sim/sh64/media/fsqrts.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fsqrts.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fsqrts.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fsqrts.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,27 +0,0 @@\n-# sh testcase for fsqrt.s $frgh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\tmovi 9, r0\n-\tfmov.ls r0, fr7\n-\tfloat.ls fr7, fr0\n-\tmovi 3, r1\n-\tfmov.ls r1, fr7\n-\tfloat.ls fr7, fr2\n-\n-fsqrts:\n-\tfsqrt.s fr0, fr1\n-\tfcmpeq.s fr1, fr2, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "16ab5b6672ce4107f6207cbb5b61068a3be9e9be",
      "filename": "sim/testsuite/sim/sh64/media/fstd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fstd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fstd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fstd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,34 +0,0 @@\n-# sh testcase for fst.d $rm, $disp10x8, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global fstd\n-fstd:\t\n-\tmovi 0x1020, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x30, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x40, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x50, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x60, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x70, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x80, r0\n-\t# Set target address.\n-\tmovi 0x2800, r1\n-\tfmov.qd r0, dr0\n-\n-\tfst.d r1, 0, dr0\n-\tfst.d r1, 8, dr0\n-\tfst.d r1, -8, dr0\n-\n-okay:\n-\tpass"
    },
    {
      "sha": "e0c396ac59a97bcbd6bd40e8b057e49572c02a39",
      "filename": "sim/testsuite/sim/sh64/media/fstp.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fstp.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fstp.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fstp.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,14 +0,0 @@\n-# sh testcase for fst.p $rm, $disp10x8, $fpf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global fstp\n-fstp:\n-\tfst.p r0, 0, fp0\n-\n-\tpass"
    },
    {
      "sha": "fb692cf274c0ddceac078f5d3c28b5bbb1c828ca",
      "filename": "sim/testsuite/sim/sh64/media/fsts.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fsts.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fsts.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fsts.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,34 +0,0 @@\n-# sh testcase for fst.s $rm, $disp10x4, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global fsts\n-fsts:\n-\tmovi 0x1020, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x30, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x40, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x50, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x60, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x70, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x80, r0\n-\t# Set target address.\n-\tmovi 0x2800, r1\n-\tfmov.ls r0, fr0\n-\n-\tfst.s r1, 0, fr0\n-\tfst.s r1, 4, fr0\n-\tfst.s r1, -4, fr0\n-\n-okay:\n-\tpass"
    },
    {
      "sha": "10f6c1436b5069fedb23d51895be8eb49cb06f51",
      "filename": "sim/testsuite/sim/sh64/media/fstxd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fstxd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fstxd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fstxd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,31 +0,0 @@\n-# sh testcase for fstx.d $rm, $rn, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global fstxd\n-fstxd:\n-\tmovi 0x1020, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x30, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x40, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x50, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x60, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x70, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x80, r0\n-\tfmov.qd r0, dr0\n-\tmovi 0x2800, r1\n-\tmovi -8, r2\n-\tfstx.d r1, r2, dr0\n-\n-okay:\n-\tpass"
    },
    {
      "sha": "1829f58eb253e2c32f168c859804241f4fd1ad90",
      "filename": "sim/testsuite/sim/sh64/media/fstxp.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fstxp.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fstxp.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fstxp.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,14 +0,0 @@\n-# sh testcase for fstx.p $rm, $rn, $fpf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global fstxp\n-fstxp:\n-\tfstx.p r0, r0, fp0\n-\n-\tpass"
    },
    {
      "sha": "0b4ff96dba902e231904f8fc276ab01d7b322db7",
      "filename": "sim/testsuite/sim/sh64/media/fstxs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fstxs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fstxs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fstxs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,30 +0,0 @@\n-# sh testcase for fstx.s $rm, $rn, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\t.global fstxs\n-fstxs:\n-\tmovi 0x1020, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x30, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x40, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x50, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x60, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x70, r0\n-\tshlli r0, 8, r0\n-\tori r0, 0x80, r0\n-\tfmov.ls r0, fr0\n-\tmovi 0x2800, r1\n-\tmovi -8, r2\n-\tfstx.s r1, r2, fr0\n-\n-okay:\n-\tpass"
    },
    {
      "sha": "93dc421b01f7b993518d2691f2eae8ae4e81798b",
      "filename": "sim/testsuite/sim/sh64/media/fsubd.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fsubd.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fsubd.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fsubd.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,36 +0,0 @@\n-# sh testcase for fsub.d $drg, $drh, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global fsubd\n-init:\n-\tpta wrong, tr0\n-\n-fsubd:\n-\tmovi 9, r0\n-\tfmov.qd r0, dr0\n-\tfloat.qd dr0, dr0\n-\n-\tmovi 3, r0\n-\tfmov.qd r0, dr2\n-\tfloat.qd dr2, dr2\n-\n-\tfsub.d dr0, dr2, dr4\n-\t\n-\tmovi 6, r0\n-\tfmov.qd r0, dr6\n-\tfloat.qd dr6, dr6 \n-\n-\tfcmpeq.d dr4, dr6, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "b009f094054fa5d1ca8d09ff3c06b3cf5a2a3e94",
      "filename": "sim/testsuite/sim/sh64/media/fsubs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fsubs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/fsubs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/fsubs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,36 +0,0 @@\n-# sh testcase for fsub.s $frg, $frh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global fsubs\n-init:\n-\tpta wrong, tr0\n-\n-fsubs:\n-\tmovi 9, r0\n-\tfmov.ls r0, fr0\n-\tfloat.ls fr0, fr0\n-\n-\tmovi 3, r0\n-\tfmov.ls r0, fr1 \n-\tfloat.ls fr1, fr1\n-\n-\tfsub.s fr0, fr1, fr2\n-\t\n-\tmovi 6, r0\n-\tfmov.ls r0, fr3\n-\tfloat.ls fr3, fr3\n-\n-\tfcmpeq.s fr2, fr3, r7\n-\tbnei r7, 1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "3aafb83dca3d3cd4c6930f263f0ebe5ff2cbb176",
      "filename": "sim/testsuite/sim/sh64/media/ftrcdl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/ftrcdl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/ftrcdl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/ftrcdl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,26 +0,0 @@\n-# sh testcase for ftrc.dl $drgh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global ftrcdl\n-init:\n-\tpta wrong, tr0\n-\n-ftrcdl:\n-\tmovi -9, r0\n-\tfmov.qd r0, dr0\n-\tfloat.qd dr0, dr0\n-\tftrc.dl dr0, fr0\n-\tfmov.sl fr0, r1\n-\tbne r0, r1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "6cd63fb029e4ba4f487318784dccd81794d19900",
      "filename": "sim/testsuite/sim/sh64/media/ftrcdq.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/ftrcdq.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/ftrcdq.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/ftrcdq.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,24 +0,0 @@\n-# sh testcase for ftrc.dq $drgh, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-init:\n-\tpta wrong, tr0\n-\n-ftrcdq:\n-\tmovi -9, r0\n-\tfmov.qd r0, dr0\n-\tfloat.qd dr0, dr0\n-\tftrc.dq dr0, dr2\n-\tfmov.dq dr2, r1\n-\tbne r0, r1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "9fd7faebd1a4b967146c963fb998b0defd7c72bb",
      "filename": "sim/testsuite/sim/sh64/media/ftrcsl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/ftrcsl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/ftrcsl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/ftrcsl.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,26 +0,0 @@\n-# sh testcase for ftrc.sl $frgh, $frf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-\t.global ftrcsl\n-init:\n-\tpta wrong, tr0\n-\n-ftrcsl:\n-\tmovi -9, r0\n-\tfmov.ls r0, fr0\n-\tfloat.ls fr0, fr0\n-\tftrc.sl fr0, fr1\n-\tfmov.sl fr1, r1\n-\tbne r0, r1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "8f19d595e108ad9292577c26035289e9daf17def",
      "filename": "sim/testsuite/sim/sh64/media/ftrcsq.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/ftrcsq.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/ftrcsq.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/ftrcsq.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,25 +0,0 @@\n-# sh testcase for ftrc.sq $frgh, $drf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-ftrcsq:\n-\tmovi -9, r0\n-\tfmov.ls r0, fr0\n-\tfloat.ls fr0, fr0\n-\tftrc.sq fr0, dr2\n-\tfmov.dq dr2, r1\n-\tbne r0, r1, tr0\n-\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    },
    {
      "sha": "be7a75ad885d97b3da94780c2551987021bb7121",
      "filename": "sim/testsuite/sim/sh64/media/ftrvs.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 67,
      "changes": 67,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/ftrvs.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50df264daeb2f03d7f10f97bbbab4d424194d942/sim/testsuite/sim/sh64/media/ftrvs.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/sh64/media/ftrvs.cgs?ref=50df264daeb2f03d7f10f97bbbab4d424194d942",
      "patch": "@@ -1,67 +0,0 @@\n-# sh testcase for ftrv.s $mtrxg, $fvh, $fvf -*- Asm -*-\n-# mach: all\n-# as: -isa=shmedia\n-# ld: -m shelf64\n-\n-\t.include \"media/testutils.inc\"\n-\n-\t.macro _load val, fpreg\n-\t# This macro clobbers r0.\n-\tmovi \\val, r0\n-\tfmov.ls r0, \\fpreg \n-\tfloat.ls \\fpreg, \\fpreg\n-\t.endm\n-\n-\tstart\n-\n-init:\n-\tpta wrong, tr0\n-\n-\t_load 1,  fr0\n-\t_load 2,  fr4\n-\t_load 3,  fr8\n-\t_load 4,  fr12\n-\t_load 5,  fr1\n-\t_load 6,  fr5\n-\t_load 7,  fr9\n-\t_load 8,  fr13\n-\t_load 9,  fr2\n-\t_load 10, fr6\n-\t_load 11, fr10\n-\t_load 12, fr14\n-\t_load 13, fr3\n-\t_load 14, fr7\n-\t_load 15, fr11\n-\t_load 16, fr15\n-\n-\t_load 1, fr16\n-\t_load 2, fr17\n-\t_load 3, fr18\n-\t_load 4, fr19\n-\n-ftrvs:\n-\tftrv.s mtrx0, fv16, fv20\n-\n-check:\n-\t_load 30, fr0\n-\t_load 70, fr1\n-\t_load 110, fr2\n-\t_load 150, fr3\n-\n-\tfcmpeq.s fr0, fr20, r0\n-\tbnei r0, 1, tr0\n-\t\n-\tfcmpeq.s fr1, fr21, r0\n-\tbnei r0, 1, tr0\n-\n-\tfcmpeq.s fr2, fr22, r0\n-\tbnei r0, 1, tr0\n-\n-\tfcmpeq.s fr3, fr23, r0\n-\tbnei r0, 1, tr0\n-\t\n-okay:\n-\tpass\n-\n-wrong:\n-\tfail"
    }
  ]
}