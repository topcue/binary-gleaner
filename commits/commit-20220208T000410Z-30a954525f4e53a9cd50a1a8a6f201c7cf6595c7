{
  "sha": "30a954525f4e53a9cd50a1a8a6f201c7cf6595c7",
  "node_id": "C_kwDOANOeidoAKDMwYTk1NDUyNWY0ZTUzYTljZDUwYTFhOGE2ZjIwMWM3Y2Y2NTk1Yzc",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2022-02-07T23:22:19Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2022-02-08T00:04:10Z"
    },
    "message": "i386: Allow GOT32 relocations against ABS symbols\n\nGOT32 relocations are allowed since absolute value + addend is stored in\nthe GOT slot.\n\nTested on glibc 2.35 build with GCC 11.2 and -Os.\n\nbfd/\n\n\tPR ld/28870\n\t* elfxx-x86.c (_bfd_elf_x86_valid_reloc_p): Also allow GOT32\n\trelocations.\n\nld/\n\n\tPR ld/28870\n\t* testsuite/ld-i386/i386.exp: Run pr28870.\n\t* testsuite/ld-i386/pr28870.d: New file.\n\t* testsuite/ld-i386/pr28870.s: Likewise.",
    "tree": {
      "sha": "f801035fdda0bbcbb2cf4037a1faa7e655848a8f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f801035fdda0bbcbb2cf4037a1faa7e655848a8f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/30a954525f4e53a9cd50a1a8a6f201c7cf6595c7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/30a954525f4e53a9cd50a1a8a6f201c7cf6595c7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/30a954525f4e53a9cd50a1a8a6f201c7cf6595c7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/30a954525f4e53a9cd50a1a8a6f201c7cf6595c7/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a194bde6705579ac3e767db48e0966a7f6144431",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a194bde6705579ac3e767db48e0966a7f6144431",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a194bde6705579ac3e767db48e0966a7f6144431"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 23,
    "deletions": 4
  },
  "files": [
    {
      "sha": "d00dc45677b71832789002b9321f93a7951f4685",
      "filename": "bfd/elfxx-x86.c",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30a954525f4e53a9cd50a1a8a6f201c7cf6595c7/bfd/elfxx-x86.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30a954525f4e53a9cd50a1a8a6f201c7cf6595c7/bfd/elfxx-x86.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-x86.c?ref=30a954525f4e53a9cd50a1a8a6f201c7cf6595c7",
      "patch": "@@ -1942,9 +1942,9 @@ _bfd_elf_x86_valid_reloc_p (asection *input_section,\n       irel = *rel;\n \n       /* Only allow relocations against absolute symbol, which can be\n-\t resolved as absolute value + addend.  GOTPCREL relocations\n-\t are allowed since absolute value + addend is stored in the\n-\t GOT slot.  */\n+\t resolved as absolute value + addend.  GOTPCREL and GOT32\n+\t relocations are allowed since absolute value + addend is\n+\t stored in the GOT slot.  */\n       if (bed->target_id == X86_64_ELF_DATA)\n \t{\n \t  r_type &= ~R_X86_64_converted_reloc_bit;\n@@ -1965,7 +1965,9 @@ _bfd_elf_x86_valid_reloc_p (asection *input_section,\n       else\n \tvalid_p = (r_type == R_386_32\n \t\t   || r_type == R_386_16\n-\t\t   || r_type == R_386_8);\n+\t\t   || r_type == R_386_8\n+\t\t   || r_type == R_386_GOT32\n+\t\t   || r_type == R_386_GOT32X);\n \n       if (valid_p)\n \t*no_dynreloc_p = true;"
    },
    {
      "sha": "82e14ab38d05b842b8a7c4271c5bd771fdfaa1cb",
      "filename": "ld/testsuite/ld-i386/i386.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30a954525f4e53a9cd50a1a8a6f201c7cf6595c7/ld/testsuite/ld-i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30a954525f4e53a9cd50a1a8a6f201c7cf6595c7/ld/testsuite/ld-i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/i386.exp?ref=30a954525f4e53a9cd50a1a8a6f201c7cf6595c7",
      "patch": "@@ -509,6 +509,7 @@ run_dump_test \"pr27491-3\"\n run_dump_test \"pr27491-4\"\n run_dump_test \"dt-relr-1a\"\n run_dump_test \"dt-relr-1b\"\n+run_dump_test \"pr28870\"\n \n if { !([istarget \"i?86-*-linux*\"]\n        || [istarget \"i?86-*-gnu*\"]"
    },
    {
      "sha": "8e9b9fb82eb94ef4d570f5a6b9d59a33425ebae6",
      "filename": "ld/testsuite/ld-i386/pr28870.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30a954525f4e53a9cd50a1a8a6f201c7cf6595c7/ld/testsuite/ld-i386/pr28870.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30a954525f4e53a9cd50a1a8a6f201c7cf6595c7/ld/testsuite/ld-i386/pr28870.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/pr28870.d?ref=30a954525f4e53a9cd50a1a8a6f201c7cf6595c7",
      "patch": "@@ -0,0 +1,10 @@\n+#as: --32\n+#ld: --no-dynamic-linker -m elf_i386 -pie\n+#readelf: -s --wide\n+\n+#...\n+Symbol table '.symtab' contains [0-9]+ entries:\n+   Num:    Value  Size Type    Bind   Vis      Ndx Name\n+#...\n+ +[a-f0-9]+: 00000002     0 NOTYPE  LOCAL  DEFAULT  ABS foo\n+#pass"
    },
    {
      "sha": "8e320470e2dec89b6fbd684c531de291823511fe",
      "filename": "ld/testsuite/ld-i386/pr28870.s",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30a954525f4e53a9cd50a1a8a6f201c7cf6595c7/ld/testsuite/ld-i386/pr28870.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30a954525f4e53a9cd50a1a8a6f201c7cf6595c7/ld/testsuite/ld-i386/pr28870.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/pr28870.s?ref=30a954525f4e53a9cd50a1a8a6f201c7cf6595c7",
      "patch": "@@ -0,0 +1,6 @@\n+\t.text\n+\t.globl _start\n+_start:\n+\taddl\tfoo@GOT(%ebx), %eax\n+\tcmpl\t$0, foo@GOT(%ebx)\n+foo = 2"
    }
  ]
}