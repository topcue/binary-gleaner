{
  "sha": "46c6bcf650644ae22941ccb49dfe5fbb6e185513",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDZjNmJjZjY1MDY0NGFlMjI5NDFjY2I0OWRmZTVmYmI2ZTE4NTUxMw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-31T16:33:32Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-31T16:33:32Z"
    },
    "message": "gdb: add and use signatured_type_up\n\nAdd an alias for std::unique_ptr<signatured_type> and use it where\npossible.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.h (signatured_type_up): New, use where possible.\n\nChange-Id: I5a41e8345551434c8beeb9f269b03bdcf27989be",
    "tree": {
      "sha": "fd293641520b7642c01154748c0b3112c88c12fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fd293641520b7642c01154748c0b3112c88c12fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/46c6bcf650644ae22941ccb49dfe5fbb6e185513",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46c6bcf650644ae22941ccb49dfe5fbb6e185513",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/46c6bcf650644ae22941ccb49dfe5fbb6e185513",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46c6bcf650644ae22941ccb49dfe5fbb6e185513/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4631503b28f63cfa66a363008d714a94c2c71e06",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4631503b28f63cfa66a363008d714a94c2c71e06",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4631503b28f63cfa66a363008d714a94c2c71e06"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 13,
    "deletions": 7
  },
  "files": [
    {
      "sha": "98afac56ac3e19a617870ca3ef437d2cc8e1894d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46c6bcf650644ae22941ccb49dfe5fbb6e185513/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46c6bcf650644ae22941ccb49dfe5fbb6e185513/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=46c6bcf650644ae22941ccb49dfe5fbb6e185513",
      "patch": "@@ -1,3 +1,7 @@\n+2021-05-31  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* dwarf2/read.h (signatured_type_up): New, use where possible.\n+\n 2021-05-31  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* dwarf2/read.h (signatured_type, dwarf2_per_cu_data): Move up."
    },
    {
      "sha": "24247defebb8ce7261409b1f0270588ecd1a0b87",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46c6bcf650644ae22941ccb49dfe5fbb6e185513/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46c6bcf650644ae22941ccb49dfe5fbb6e185513/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=46c6bcf650644ae22941ccb49dfe5fbb6e185513",
      "patch": "@@ -2294,10 +2294,10 @@ dwarf2_per_bfd::allocate_per_cu ()\n \n /* See read.h.  */\n \n-std::unique_ptr<signatured_type>\n+signatured_type_up\n dwarf2_per_bfd::allocate_signatured_type ()\n {\n-  std::unique_ptr<signatured_type> result (new signatured_type);\n+  signatured_type_up result (new signatured_type);\n   result->per_bfd = this;\n   result->index = all_comp_units.size ();\n   result->is_debug_types = true;\n@@ -2382,7 +2382,7 @@ create_signatured_type_table_from_index\n \n   for (offset_type i = 0; i < elements; i += 3)\n     {\n-      std::unique_ptr<signatured_type> sig_type;\n+      signatured_type_up sig_type;\n       ULONGEST signature;\n       void **slot;\n       cu_offset type_offset_in_tu;\n@@ -2432,7 +2432,7 @@ create_signatured_type_table_from_debug_names\n \n   for (uint32_t i = 0; i < map.tu_count; ++i)\n     {\n-      std::unique_ptr<signatured_type> sig_type;\n+      signatured_type_up sig_type;\n       void **slot;\n \n       sect_offset sect_off\n@@ -5796,7 +5796,7 @@ create_debug_type_hash_table (dwarf2_per_objfile *per_objfile,\n   end_ptr = info_ptr + section->size;\n   while (info_ptr < end_ptr)\n     {\n-      std::unique_ptr<signatured_type> sig_type;\n+      signatured_type_up sig_type;\n       struct dwo_unit *dwo_tu;\n       void **slot;\n       const gdb_byte *ptr = info_ptr;\n@@ -5886,7 +5886,7 @@ add_type_unit (dwarf2_per_objfile *per_objfile, ULONGEST sig, void **slot)\n       == per_objfile->per_bfd->all_comp_units.capacity ())\n     ++per_objfile->per_bfd->tu_stats.nr_all_type_units_reallocs;\n \n-  std::unique_ptr<signatured_type> sig_type_holder\n+  signatured_type_up sig_type_holder\n     = per_objfile->per_bfd->allocate_signatured_type ();\n   signatured_type *sig_type = sig_type_holder.get ();\n "
    },
    {
      "sha": "98937915d27eda98824dc880474d575ceff7c004",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46c6bcf650644ae22941ccb49dfe5fbb6e185513/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46c6bcf650644ae22941ccb49dfe5fbb6e185513/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=46c6bcf650644ae22941ccb49dfe5fbb6e185513",
      "patch": "@@ -305,6 +305,8 @@ struct signatured_type : public dwarf2_per_cu_data\n   struct dwo_unit *dwo_unit = nullptr;\n };\n \n+using signatured_type_up = std::unique_ptr<signatured_type>;\n+\n /* Some DWARF data can be shared across objfiles who share the same BFD,\n    this data is stored in this object.\n \n@@ -339,7 +341,7 @@ struct dwarf2_per_bfd\n   /* A convenience function to allocate a signatured_type.  The\n      returned object has its \"index\" field set properly.  The object\n      is allocated on the dwarf2_per_bfd obstack.  */\n-  std::unique_ptr<signatured_type> allocate_signatured_type ();\n+  signatured_type_up allocate_signatured_type ();\n \n private:\n   /* This function is mapped across the sections and remembers the"
    }
  ]
}