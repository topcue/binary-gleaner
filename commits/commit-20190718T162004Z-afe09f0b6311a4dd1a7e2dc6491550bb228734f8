{
  "sha": "afe09f0b6311a4dd1a7e2dc6491550bb228734f8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWZlMDlmMGI2MzExYTRkZDFhN2UyZGM2NDkxNTUwYmIyMjg3MzRmOA==",
  "commit": {
    "author": {
      "name": "Guillaume LABARTHE",
      "email": "guillaume.labarthe@gmail.com",
      "date": "2019-07-18T16:20:04Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-07-18T16:20:04Z"
    },
    "message": "Fix for using named pipes on Windows\n\nOn Windows, passing a named pipe as terminal argument to the new-ui\ncommand does not work.\n\nThe problem is that the new_ui_command function in top.c opens the\nsame tty three times, for stdin, stdout and stderr.  With Windows\nnamed pipes, the second and third calls to open fail.\n\nOpening the file only once and passing the same stream for stdin,\nstdout and stderr makes it work.\n\nPedro says:\n\n I tried it on GNU/Linux and things still work.\n I ran all the MI tests with forced new-ui, with:\n\n $ make check TESTS=\"gdb.mi/*.exp\" RUNTESTFLAGS=\"FORCE_MI_SEPARATE_UI=1\"\n\n and saw no regressions.\n\ngdb/ChangeLog:\n2019-07-18  Guillaume LABARTHE  <guillaume.labarthe@gmail.com>\n\n\t* top.c (new_ui_command): Open specified terminal just once.",
    "tree": {
      "sha": "6e1ac0fdefe6e6c7664e2f29fdf300238f725db7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6e1ac0fdefe6e6c7664e2f29fdf300238f725db7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/afe09f0b6311a4dd1a7e2dc6491550bb228734f8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/afe09f0b6311a4dd1a7e2dc6491550bb228734f8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/afe09f0b6311a4dd1a7e2dc6491550bb228734f8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/afe09f0b6311a4dd1a7e2dc6491550bb228734f8/comments",
  "author": {
    "login": "Yo-me",
    "id": 40561335,
    "node_id": "MDQ6VXNlcjQwNTYxMzM1",
    "avatar_url": "https://avatars.githubusercontent.com/u/40561335?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Yo-me",
    "html_url": "https://github.com/Yo-me",
    "followers_url": "https://api.github.com/users/Yo-me/followers",
    "following_url": "https://api.github.com/users/Yo-me/following{/other_user}",
    "gists_url": "https://api.github.com/users/Yo-me/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Yo-me/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Yo-me/subscriptions",
    "organizations_url": "https://api.github.com/users/Yo-me/orgs",
    "repos_url": "https://api.github.com/users/Yo-me/repos",
    "events_url": "https://api.github.com/users/Yo-me/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Yo-me/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cd215b2eb74c179d936a3b28577753a08de1cf83",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd215b2eb74c179d936a3b28577753a08de1cf83",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cd215b2eb74c179d936a3b28577753a08de1cf83"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 11,
    "deletions": 11
  },
  "files": [
    {
      "sha": "d6fe9895a717f69a332d3f4d08d211b75f69dc10",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/afe09f0b6311a4dd1a7e2dc6491550bb228734f8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/afe09f0b6311a4dd1a7e2dc6491550bb228734f8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=afe09f0b6311a4dd1a7e2dc6491550bb228734f8",
      "patch": "@@ -1,3 +1,7 @@\n+2019-07-18  Guillaume LABARTHE  <guillaume.labarthe@gmail.com>\n+\n+\t* top.c (new_ui_command): Open specified terminal just once.\n+\n 2019-07-18  Tom Tromey  <tromey@adacore.com>\n \n \t* symtab.c (main_name): Constify return type."
    },
    {
      "sha": "60f81b3bf85416c3f48201666095e40297d3effe",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 7,
      "deletions": 11,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/afe09f0b6311a4dd1a7e2dc6491550bb228734f8/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/afe09f0b6311a4dd1a7e2dc6491550bb228734f8/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=afe09f0b6311a4dd1a7e2dc6491550bb228734f8",
      "patch": "@@ -337,8 +337,6 @@ open_terminal_stream (const char *name)\n static void\n new_ui_command (const char *args, int from_tty)\n {\n-  gdb_file_up stream[3];\n-  int i;\n   int argc;\n   const char *interpreter_name;\n   const char *tty_name;\n@@ -357,13 +355,13 @@ new_ui_command (const char *args, int from_tty)\n   {\n     scoped_restore save_ui = make_scoped_restore (&current_ui);\n \n-    /* Open specified terminal, once for each of\n-       stdin/stdout/stderr.  */\n-    for (i = 0; i < 3; i++)\n-      stream[i] = open_terminal_stream (tty_name);\n+    /* Open specified terminal.  Note: we used to open it three times,\n+       once for each of stdin/stdout/stderr, but that does not work\n+       with Windows named pipes.  */\n+    gdb_file_up stream = open_terminal_stream (tty_name);\n \n     std::unique_ptr<ui> ui\n-      (new struct ui (stream[0].get (), stream[1].get (), stream[2].get ()));\n+      (new struct ui (stream.get (), stream.get (), stream.get ()));\n \n     ui->async = 1;\n \n@@ -373,10 +371,8 @@ new_ui_command (const char *args, int from_tty)\n \n     interp_pre_command_loop (top_level_interpreter ());\n \n-    /* Make sure the files are not closed.  */\n-    stream[0].release ();\n-    stream[1].release ();\n-    stream[2].release ();\n+    /* Make sure the file is not closed.  */\n+    stream.release ();\n \n     ui.release ();\n   }"
    }
  ]
}