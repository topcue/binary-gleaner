{
  "sha": "17e593e9668c000f2bfa88d11a8957dfc52297dd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTdlNTkzZTk2NjhjMDAwZjJiZmE4OGQxMWE4OTU3ZGZjNTIyOTdkZA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-21T01:57:49Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-21T01:57:49Z"
    },
    "message": "gdb/dwarf: add some logging in dwarf2/read.c\n\nThis patch adds some logging that helped me diagnose the problems fixed\nlater in this series.  I'm thinking that if it helped me now, it could\nhelp somebody else (or myself) in the future, so I might as well add\nthem for real.\n\nThey can happen quite frequently and be noisy, so I used\ndwarf_read_debug_printf_v for them, which means they'll only print if\n`set debug dwarf-read` is >= 2.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (follow_die_offset): Add logging.\n\t(dwarf2_per_objfile::age_comp_units): Add logging.\n\nChange-Id: I7483c0b05c37bc9710b9b5d40e272935bc010863",
    "tree": {
      "sha": "5bad55a82098f1247412587aae6cc943b689cba5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5bad55a82098f1247412587aae6cc943b689cba5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/17e593e9668c000f2bfa88d11a8957dfc52297dd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17e593e9668c000f2bfa88d11a8957dfc52297dd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/17e593e9668c000f2bfa88d11a8957dfc52297dd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17e593e9668c000f2bfa88d11a8957dfc52297dd/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 20,
    "deletions": 0
  },
  "files": [
    {
      "sha": "35afa8e7e07e0c9f6129f700b90211cd70cb76d0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17e593e9668c000f2bfa88d11a8957dfc52297dd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17e593e9668c000f2bfa88d11a8957dfc52297dd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=17e593e9668c000f2bfa88d11a8957dfc52297dd",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-20  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* dwarf2/read.c (follow_die_offset): Add logging.\n+\t(dwarf2_per_objfile::age_comp_units): Add logging.\n+\n 2021-01-20  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* aarch64-linux-tdep.c (aarch64_linux_record_tdep): Make static."
    },
    {
      "sha": "30e25ca3a8b7a6386982d525ccf51af67b9a08d6",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17e593e9668c000f2bfa88d11a8957dfc52297dd/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17e593e9668c000f2bfa88d11a8957dfc52297dd/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=17e593e9668c000f2bfa88d11a8957dfc52297dd",
      "patch": "@@ -23574,6 +23574,12 @@ follow_die_offset (sect_offset sect_off, int offset_in_dwz,\n \n   target_cu = cu;\n \n+  dwarf_read_debug_printf_v (\"source CU offset: %s, target offset: %s, \"\n+\t\t\t     \"source CU contains target offset: %d\",\n+\t\t\t     sect_offset_str (cu->per_cu->sect_off),\n+\t\t\t     sect_offset_str (sect_off),\n+\t\t\t     cu->header.offset_in_cu_p (sect_off));\n+\n   if (cu->per_cu->is_debug_types)\n     {\n       /* .debug_types CUs cannot reference anything outside their CU.\n@@ -23590,6 +23596,11 @@ follow_die_offset (sect_offset sect_off, int offset_in_dwz,\n       per_cu = dwarf2_find_containing_comp_unit (sect_off, offset_in_dwz,\n \t\t\t\t\t\t per_objfile);\n \n+      dwarf_read_debug_printf_v (\"target CU offset: %s, \"\n+\t\t\t\t \"target CU DIEs loaded: %d\",\n+\t\t\t\t sect_offset_str (per_cu->sect_off),\n+\t\t\t\t per_objfile->get_cu (per_cu) != nullptr);\n+\n       /* If necessary, add it to the queue and load its DIEs.  */\n       if (maybe_queue_comp_unit (cu, per_cu, per_objfile, cu->language))\n \tload_full_comp_unit (per_cu, per_objfile, per_objfile->get_cu (per_cu),\n@@ -24970,6 +24981,8 @@ dwarf2_per_objfile::set_cu (dwarf2_per_cu_data *per_cu, dwarf2_cu *cu)\n void\n dwarf2_per_objfile::age_comp_units ()\n {\n+  dwarf_read_debug_printf_v (\"running\");\n+\n   /* Start by clearing all marks.  */\n   for (auto pair : m_dwarf2_cus)\n     pair.second->mark = false;\n@@ -24992,6 +25005,8 @@ dwarf2_per_objfile::age_comp_units ()\n \n       if (!cu->mark)\n \t{\n+\t  dwarf_read_debug_printf_v (\"deleting old CU %s\",\n+\t\t\t\t     sect_offset_str (cu->per_cu->sect_off));\n \t  delete cu;\n \t  it = m_dwarf2_cus.erase (it);\n \t}"
    }
  ]
}