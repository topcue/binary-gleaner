{
  "sha": "894ecaf4cad84e6d50d97d36f5ddaf3695734c35",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODk0ZWNhZjRjYWQ4NGU2ZDUwZDk3ZDM2ZjVkZGFmMzY5NTczNGMzNQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2019-12-04T18:35:32Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-12-04T18:35:32Z"
    },
    "message": "Fix regcache::cooked_read_test selftest for mep\n\nWhen running the regcache::cooked_read_test selftest in an all targets\nbuild, I get the following internal error:\n\n    /home/simark/src/binutils-gdb/gdb/thread.c:95: internal-error: thread_info* inferior_thread(): Assertion `tp' failed.\n\nThe stack trace is the followiing:\n\n    #9  0x000055fe25584a52 in internal_error (file=0x55fe27a25fe0 \"/home/simark/src/binutils-gdb/gdb/thread.c\", line=95, fmt=0x55fe27a25c80 \"%s: Assertion `%s' failed.\")\n        at /home/simark/src/binutils-gdb/gdb/gdbsupport/errors.c:55\n    #10 0x000055fe260674bc in inferior_thread () at /home/simark/src/binutils-gdb/gdb/thread.c:95\n    #11 0x000055fe25c62f0f in get_current_regcache () at /home/simark/src/binutils-gdb/gdb/regcache.c:372\n    #12 0x000055fe2594fcf1 in current_options () at /home/simark/src/binutils-gdb/gdb/mep-tdep.c:873\n    #13 0x000055fe2594ff08 in mep_register_name (gdbarch=0x62100056f510, regnr=152) at /home/simark/src/binutils-gdb/gdb/mep-tdep.c:958\n    #14 0x000055fe25950112 in mep_register_reggroup_p (gdbarch=0x62100056f510, regnum=152, group=0x55fe2924d540 <save_group>) at /home/simark/src/binutils-gdb/gdb/mep-tdep.c:1029\n    #15 0x000055fe2555ad87 in gdbarch_register_reggroup_p (gdbarch=0x62100056f510, regnum=152, reggroup=0x55fe2924d540 <save_group>) at /home/simark/src/binutils-gdb/gdb/gdbarch.c:3622\n    #16 0x000055fe25c61d45 in reg_buffer::save(gdb::function_view<register_status (int, unsigned char*)>) (this=0x7ffc61a0ed90, cooked_read=...)\n        at /home/simark/src/binutils-gdb/gdb/regcache.c:247\n    #17 0x000055fe2552ac60 in readonly_detached_regcache::readonly_detached_regcache(gdbarch*, gdb::function_view<register_status (int, unsigned char*)>) (this=0x7ffc61a0ed90,\n        gdbarch=0x62100056f510, cooked_read=...) at /home/simark/src/binutils-gdb/gdb/regcache.h:444\n    #18 0x000055fe25c61867 in readonly_detached_regcache::readonly_detached_regcache (this=0x7ffc61a0ed90, src=...) at /home/simark/src/binutils-gdb/gdb/regcache.c:212\n    #19 0x000055fe25c6a5ca in selftests::cooked_read_test (gdbarch=0x62100056f510) at /home/simark/src/binutils-gdb/gdb/regcache.c:1613\n\nThe problems is that mep's code ends up calling inferior_thread, which\ncalls find_thread_ptid.  find_thread_ptid searches for a thread by ptid\nin the thread list of the inferior that is expected to contain that\nthread.\n\nHowever, the thread list of the mock inferior set up in cooked_read_test\nis never initialized.  So find_thread_ptid doesn't find the thread,\nwhich is an unexpected situation for inferior_thread.\n\nThis is failing since this commit:\n\n\t080363310650c93ad8e93018bcb6760ba5d32d1c\n\tPer-inferior thread list, thread ranges/iterators, down with ALL_THREADS, etc.\n\nFix it by putting the mock thread in the thread list of the mock\ninferior in cooked_read_test.\n\ngdb/ChangeLog:\n\n\t* regcache.c (cooked_read_test): Initialize thread list of\n\tmock_inferior.",
    "tree": {
      "sha": "602f91f194272aa2428aa549e04d933c5d1757f4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/602f91f194272aa2428aa549e04d933c5d1757f4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/894ecaf4cad84e6d50d97d36f5ddaf3695734c35",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/894ecaf4cad84e6d50d97d36f5ddaf3695734c35",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/894ecaf4cad84e6d50d97d36f5ddaf3695734c35",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/894ecaf4cad84e6d50d97d36f5ddaf3695734c35/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "be155ebb949dd8e7ef6a494a9c276c3c4673643c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be155ebb949dd8e7ef6a494a9c276c3c4673643c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/be155ebb949dd8e7ef6a494a9c276c3c4673643c"
    }
  ],
  "stats": {
    "total": 6,
    "additions": 6,
    "deletions": 0
  },
  "files": [
    {
      "sha": "14c06e49eed1f0a4538445b51dab9a1eb48cf0ef",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/894ecaf4cad84e6d50d97d36f5ddaf3695734c35/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/894ecaf4cad84e6d50d97d36f5ddaf3695734c35/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=894ecaf4cad84e6d50d97d36f5ddaf3695734c35",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-04  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* regcache.c (cooked_read_test): Initialize thread list of\n+\tmock_inferior.\n+\n 2019-12-04  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* aarch64-linux-tdep.c: Remove includes."
    },
    {
      "sha": "f0f7730f3e4cae204b7dec3444cddd30cf2e840b",
      "filename": "gdb/regcache.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/894ecaf4cad84e6d50d97d36f5ddaf3695734c35/gdb/regcache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/894ecaf4cad84e6d50d97d36f5ddaf3695734c35/gdb/regcache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/regcache.c?ref=894ecaf4cad84e6d50d97d36f5ddaf3695734c35",
      "patch": "@@ -1535,6 +1535,7 @@ cooked_read_test (struct gdbarch *gdbarch)\n   mock_inferior.gdbarch = gdbarch;\n   mock_inferior.aspace = &mock_aspace;\n   thread_info mock_thread (&mock_inferior, mock_ptid);\n+  mock_inferior.thread_list = &mock_thread;\n \n   /* Add the mock inferior to the inferior list so that look ups by\n      target+ptid can find it.  */"
    }
  ]
}