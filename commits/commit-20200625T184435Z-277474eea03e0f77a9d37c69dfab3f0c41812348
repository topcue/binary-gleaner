{
  "sha": "277474eea03e0f77a9d37c69dfab3f0c41812348",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Mjc3NDc0ZWVhMDNlMGY3N2E5ZDM3YzY5ZGZhYjNmMGM0MTgxMjM0OA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-06-25T18:44:13Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-06-25T18:44:35Z"
    },
    "message": "gdb: make inferior::terminal a unique ptr\n\nThis changes the inferior::terminal field to be a unique pointer, so its\ndeallocation is automatically managed.\n\ngdb/ChangeLog:\n\n\t* inferior.h (struct inferior) <terminal>: Change type to\n\tgdb::unique_xmalloc_ptr<char>.\n\t* inferior.c (inferior::~inferior): Don't free inf->terminal.\n\t* infcmd.c (set_inferior_io_terminal): Don't free terminal\n\tfield, adjust to unique pointer.\n\t(get_inferior_io_terminal): Adjust to unique pointer.\n\nChange-Id: Iedb6459b4f9eeae812b0cb9d514b5707d5107cdb",
    "tree": {
      "sha": "5e415b1644e846c6076f19f4864301301270fb1a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5e415b1644e846c6076f19f4864301301270fb1a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/277474eea03e0f77a9d37c69dfab3f0c41812348",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/277474eea03e0f77a9d37c69dfab3f0c41812348",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/277474eea03e0f77a9d37c69dfab3f0c41812348",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/277474eea03e0f77a9d37c69dfab3f0c41812348/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d73be6116811aeaedd1863c2597ede78be3cf4e5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d73be6116811aeaedd1863c2597ede78be3cf4e5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d73be6116811aeaedd1863c2597ede78be3cf4e5"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 13,
    "deletions": 6
  },
  "files": [
    {
      "sha": "d9b6a49bd1057425a9808c0efec72c792b7fea11",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/277474eea03e0f77a9d37c69dfab3f0c41812348/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/277474eea03e0f77a9d37c69dfab3f0c41812348/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=277474eea03e0f77a9d37c69dfab3f0c41812348",
      "patch": "@@ -1,3 +1,12 @@\n+2020-06-25  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* inferior.h (struct inferior) <terminal>: Change type to\n+\tgdb::unique_xmalloc_ptr<char>.\n+\t* inferior.c (inferior::~inferior): Don't free inf->terminal.\n+\t* infcmd.c (set_inferior_io_terminal): Don't free terminal\n+\tfield, adjust to unique pointer.\n+\t(get_inferior_io_terminal): Adjust to unique pointer.\n+\n 2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* riscv-tdep.c (riscv_print_registers_info): Loop over all"
    },
    {
      "sha": "48d6a91c0c2499ae7fcd4c0aef8f02d6c4da6d34",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/277474eea03e0f77a9d37c69dfab3f0c41812348/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/277474eea03e0f77a9d37c69dfab3f0c41812348/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=277474eea03e0f77a9d37c69dfab3f0c41812348",
      "patch": "@@ -108,18 +108,16 @@ int stopped_by_random_signal;\n void \n set_inferior_io_terminal (const char *terminal_name)\n {\n-  xfree (current_inferior ()->terminal);\n-\n   if (terminal_name != NULL && *terminal_name != '\\0')\n-    current_inferior ()->terminal = xstrdup (terminal_name);\n+    current_inferior ()->terminal.reset (xstrdup (terminal_name));\n   else\n     current_inferior ()->terminal = NULL;\n }\n \n const char *\n get_inferior_io_terminal (void)\n {\n-  return current_inferior ()->terminal;\n+  return current_inferior ()->terminal.get ();\n }\n \n static void"
    },
    {
      "sha": "d3bece029dd4a7152088c591937f9d050bed57eb",
      "filename": "gdb/inferior.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/277474eea03e0f77a9d37c69dfab3f0c41812348/gdb/inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/277474eea03e0f77a9d37c69dfab3f0c41812348/gdb/inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.c?ref=277474eea03e0f77a9d37c69dfab3f0c41812348",
      "patch": "@@ -79,7 +79,6 @@ inferior::~inferior ()\n   discard_all_inferior_continuations (inf);\n   inferior_free_data (inf);\n   xfree (inf->args);\n-  xfree (inf->terminal);\n   target_desc_info_free (inf->tdesc_info);\n }\n "
    },
    {
      "sha": "5002b0b8b3d31d370038e1a01b4e4bc07de9eeb6",
      "filename": "gdb/inferior.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/277474eea03e0f77a9d37c69dfab3f0c41812348/gdb/inferior.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/277474eea03e0f77a9d37c69dfab3f0c41812348/gdb/inferior.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.h?ref=277474eea03e0f77a9d37c69dfab3f0c41812348",
      "patch": "@@ -52,6 +52,7 @@ struct thread_info;\n #include \"symfile-add-flags.h\"\n #include \"gdbsupport/refcounted-object.h\"\n #include \"gdbsupport/forward-scope-exit.h\"\n+#include \"gdbsupport/gdb_unique_ptr.h\"\n \n #include \"gdbsupport/common-inferior.h\"\n #include \"gdbthread.h\"\n@@ -456,7 +457,7 @@ class inferior : public refcounted_object\n   gdb::unique_xmalloc_ptr<char> cwd;\n \n   /* The name of terminal device to use for I/O.  */\n-  char *terminal = NULL;\n+  gdb::unique_xmalloc_ptr<char> terminal;\n \n   /* The terminal state as set by the last target_terminal::terminal_*\n      call.  */"
    }
  ]
}