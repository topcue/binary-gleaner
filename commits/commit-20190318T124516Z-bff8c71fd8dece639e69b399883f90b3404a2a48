{
  "sha": "bff8c71fd8dece639e69b399883f90b3404a2a48",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmZmOGM3MWZkOGRlY2U2MzllNjliMzk5ODgzZjkwYjM0MDRhMmE0OA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-03-13T14:40:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-03-18T12:45:16Z"
    },
    "message": "Fix Ada \"ptype\" bug with array types\n\nUsing ptype on an array type in Ada can sometimes show an incorrect\nhigh bound.  This happens because ada_evaluate_subexp will create an\narray with an incorrect upper bound in the EVAL_AVOID_SIDE_EFFECTS\ncase.\n\nThis patch fixes the problem by arranging to always create such an\narray with valid bounds.\n\nTested on x86-64 Fedora 29.\n\ngdb/ChangeLog\n2019-03-18  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (empty_array): Add \"high\" parameter.\n\t(ada_evaluate_subexp): Update.\n\ngdb/testsuite/ChangeLog\n2019-03-18  Joel Brobecker  <brobecker@adacore.com>\n\t    Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/ptype_array/pck.adb: New file.\n\t* gdb.ada/ptype_array/pck.ads: New file.\n\t* gdb.ada/ptype_array/foo.adb: New file.\n\t* gdb.ada/ptype_array.exp: New file.",
    "tree": {
      "sha": "63f669a3e2568e89797dce78b3a2cf55098dcd35",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/63f669a3e2568e89797dce78b3a2cf55098dcd35"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bff8c71fd8dece639e69b399883f90b3404a2a48",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bff8c71fd8dece639e69b399883f90b3404a2a48",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bff8c71fd8dece639e69b399883f90b3404a2a48",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bff8c71fd8dece639e69b399883f90b3404a2a48/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "af60449c260235478f9b1f9db39a587fe4c75290",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af60449c260235478f9b1f9db39a587fe4c75290",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/af60449c260235478f9b1f9db39a587fe4c75290"
    }
  ],
  "stats": {
    "total": 138,
    "additions": 131,
    "deletions": 7
  },
  "files": [
    {
      "sha": "10e39bb67e6e036f6e9b3197c2db420af6735e11",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bff8c71fd8dece639e69b399883f90b3404a2a48",
      "patch": "@@ -1,3 +1,8 @@\n+2019-03-18  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (empty_array): Add \"high\" parameter.\n+\t(ada_evaluate_subexp): Update.\n+\n 2019-03-17  Sergei Trofimovich <siarheit@google.com>\n \n \t* unittests/string_view-selftests.c: Define"
    },
    {
      "sha": "7153436e738141d38b3af60c0cb4b0867e8394d4",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 10,
      "deletions": 7,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=bff8c71fd8dece639e69b399883f90b3404a2a48",
      "patch": "@@ -3173,16 +3173,18 @@ ada_array_length (struct value *arr, int n)\n   return high - low + 1;\n }\n \n-/* An empty array whose type is that of ARR_TYPE (an array type),\n-   with bounds LOW to LOW-1.  */\n+/* An array whose type is that of ARR_TYPE (an array type), with\n+   bounds LOW to HIGH, but whose contents are unimportant.  If HIGH is\n+   less than LOW, then LOW-1 is used.  */\n \n static struct value *\n-empty_array (struct type *arr_type, int low)\n+empty_array (struct type *arr_type, int low, int high)\n {\n   struct type *arr_type0 = ada_check_typedef (arr_type);\n   struct type *index_type\n     = create_static_range_type\n-        (NULL, TYPE_TARGET_TYPE (TYPE_INDEX_TYPE (arr_type0)),  low, low - 1);\n+        (NULL, TYPE_TARGET_TYPE (TYPE_INDEX_TYPE (arr_type0)), low,\n+\t high < low ? low - 1 : high);\n   struct type *elt_type = ada_array_element_type (arr_type0, 1);\n \n   return allocate_value (create_array_type (NULL, elt_type, index_type));\n@@ -11033,7 +11035,8 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n         if (noside == EVAL_AVOID_SIDE_EFFECTS\n             && ada_is_array_descriptor_type (ada_check_typedef\n                                              (value_type (array))))\n-          return empty_array (ada_type_of_array (array, 0), low_bound);\n+          return empty_array (ada_type_of_array (array, 0), low_bound,\n+\t\t\t      high_bound);\n \n         array = ada_coerce_to_simple_array_ptr (array);\n \n@@ -11057,7 +11060,7 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n             struct type *type0 = ada_check_typedef (value_type (array));\n \n             if (high_bound < low_bound || noside == EVAL_AVOID_SIDE_EFFECTS)\n-              return empty_array (TYPE_TARGET_TYPE (type0), low_bound);\n+              return empty_array (TYPE_TARGET_TYPE (type0), low_bound, high_bound);\n             else\n               {\n                 struct type *arr_type0 =\n@@ -11071,7 +11074,7 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n         else if (noside == EVAL_AVOID_SIDE_EFFECTS)\n           return array;\n         else if (high_bound < low_bound)\n-          return empty_array (value_type (array), low_bound);\n+          return empty_array (value_type (array), low_bound, high_bound);\n         else\n           return ada_value_slice (array, longest_to_int (low_bound),\n \t\t\t\t  longest_to_int (high_bound));"
    },
    {
      "sha": "e0bed87ce1ad8c9c0fd0176d4b89722aec3099e3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=bff8c71fd8dece639e69b399883f90b3404a2a48",
      "patch": "@@ -1,3 +1,11 @@\n+2019-03-18  Joel Brobecker  <brobecker@adacore.com>\n+\t    Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/ptype_array/pck.adb: New file.\n+\t* gdb.ada/ptype_array/pck.ads: New file.\n+\t* gdb.ada/ptype_array/foo.adb: New file.\n+\t* gdb.ada/ptype_array.exp: New file.\n+\n 2019-03-14  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.base/style.exp: Add \"set style sources\" test."
    },
    {
      "sha": "ec75d14d003dd59f25a340e091b2047b9fa08ad0",
      "filename": "gdb/testsuite/gdb.ada/ptype_array.exp",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/testsuite/gdb.ada/ptype_array.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/testsuite/gdb.ada/ptype_array.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/ptype_array.exp?ref=bff8c71fd8dece639e69b399883f90b3404a2a48",
      "patch": "@@ -0,0 +1,34 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+load_lib \"ada.exp\"\n+\n+standard_ada_testfile foo\n+\n+if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable [list debug additional_flags=-gnat05 ]] != \"\" } {\n+  return -1\n+}\n+\n+clean_restart ${testfile}\n+\n+runto_main\n+\n+gdb_test \"ptype pck.W.G(1,5).m(2 .. 5)\" \\\n+    \"type = array \\\\(2 \\\\.\\\\. 5\\\\) of character\" \\\n+    \"ptype 2..5\"\n+\n+gdb_test \"ptype pck.W.G(1,5).m(3 .. 5)\" \\\n+    \"type = array \\\\(3 \\\\.\\\\. 5\\\\) of character\" \\\n+    \"ptype 3..5\""
    },
    {
      "sha": "c1688cbdc704f617a52261b751f61b084f8968be",
      "filename": "gdb/testsuite/gdb.ada/ptype_array/foo.adb",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/testsuite/gdb.ada/ptype_array/foo.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/testsuite/gdb.ada/ptype_array/foo.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/ptype_array/foo.adb?ref=bff8c71fd8dece639e69b399883f90b3404a2a48",
      "patch": "@@ -0,0 +1,21 @@\n+--  Copyright 2019 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with Pck;\n+\n+procedure Foo is\n+begin\n+   Pck.Do_Nothing (Pck.W.G'Address);\n+end Foo;"
    },
    {
      "sha": "5a2019a9774cfdc7975cb21512941cea60811a40",
      "filename": "gdb/testsuite/gdb.ada/ptype_array/pck.adb",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/testsuite/gdb.ada/ptype_array/pck.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/testsuite/gdb.ada/ptype_array/pck.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/ptype_array/pck.adb?ref=bff8c71fd8dece639e69b399883f90b3404a2a48",
      "patch": "@@ -0,0 +1,23 @@\n+--  Copyright 2019 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+package body Pck is\n+   procedure Do_Nothing (A : System.Address) is\n+   begin\n+      null;\n+   end Do_Nothing;\n+end Pck;\n+\n+"
    },
    {
      "sha": "7b81930141ab02142c62a0f4dba76b692282cca1",
      "filename": "gdb/testsuite/gdb.ada/ptype_array/pck.ads",
      "status": "added",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/testsuite/gdb.ada/ptype_array/pck.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bff8c71fd8dece639e69b399883f90b3404a2a48/gdb/testsuite/gdb.ada/ptype_array/pck.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/ptype_array/pck.ads?ref=bff8c71fd8dece639e69b399883f90b3404a2a48",
      "patch": "@@ -0,0 +1,30 @@\n+--  Copyright 2019 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with System;\n+\n+package Pck is\n+   package W is\n+      type P is record\n+          M : String (2 .. 5);\n+      end record;\n+\n+      type R is array (1 .. 10, 1 .. 20) of P;\n+\n+      G : R;\n+   end W;\n+\n+   procedure Do_Nothing (A : System.Address);\n+end Pck;"
    }
  ]
}