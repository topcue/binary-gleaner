{
  "sha": "6ec6968b1b259948ba42f0a47a3da048377058bc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmVjNjk2OGIxYjI1OTk0OGJhNDJmMGE0N2EzZGEwNDgzNzcwNThiYw==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-05-22T14:58:57Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-05-22T14:58:57Z"
    },
    "message": "Have the linker report an error if the same script is used twice.\n\n\tPR 24576\n\t* ld/ldfile.c: (ldfile_open_command_file_1): Add new parameter -\n\tis_script.  If true check that the file has not already been\n\tparsed as a linker script.\n\t(ldfile_open_script_file): New function.\n\t(ldfile_try_open_bfd): Use the new function in place of\n\tldfile_open_command_line.\n\t* ldmain.c (main): Likewise.\n\t* lexsup.c (parse_args): Use the new function for opening linker\n\tscripts with the -T option.\n\t* ldfile.h (ldfile_open_script_file): Add prototype.",
    "tree": {
      "sha": "030c549bdbd29b7aab0732641cf196d040524676",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/030c549bdbd29b7aab0732641cf196d040524676"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6ec6968b1b259948ba42f0a47a3da048377058bc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ec6968b1b259948ba42f0a47a3da048377058bc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6ec6968b1b259948ba42f0a47a3da048377058bc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ec6968b1b259948ba42f0a47a3da048377058bc/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8fca4da0759df376bcb646bc4b79a92ba27e2362",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8fca4da0759df376bcb646bc4b79a92ba27e2362",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8fca4da0759df376bcb646bc4b79a92ba27e2362"
    }
  ],
  "stats": {
    "total": 63,
    "additions": 57,
    "deletions": 6
  },
  "files": [
    {
      "sha": "7f7fef6be58853603cb8d515dca9a3af71c33bdf",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ec6968b1b259948ba42f0a47a3da048377058bc/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ec6968b1b259948ba42f0a47a3da048377058bc/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=6ec6968b1b259948ba42f0a47a3da048377058bc",
      "patch": "@@ -1,3 +1,18 @@\n+2019-05-22  Julius Werner  <jwerner@chromium.org>\n+\t    Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24576\n+\t* ld/ldfile.c: (ldfile_open_command_file_1): Add new parameter -\n+\tis_script.  If true check that the file has not already been\n+\tparsed as a linker script.\n+\t(ldfile_open_script_file): New function.\n+\t(ldfile_try_open_bfd): Use the new function in place of\n+\tldfile_open_command_line.\n+\t* ldmain.c (main): Likewise.\n+\t* lexsup.c (parse_args): Use the new function for opening linker\n+\tscripts with the -T option.\n+\t* ldfile.h (ldfile_open_script_file): Add prototype.\n+\n 2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n \n \t* testsuite/ld-mips-elf/pic-reloc-5.s: Add tests for"
    },
    {
      "sha": "5bb08f7b2e46f1072efc92de6b5a1c7bb109f6c1",
      "filename": "ld/ldfile.c",
      "status": "modified",
      "additions": 38,
      "deletions": 4,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ec6968b1b259948ba42f0a47a3da048377058bc/ld/ldfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ec6968b1b259948ba42f0a47a3da048377058bc/ld/ldfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldfile.c?ref=6ec6968b1b259948ba42f0a47a3da048377058bc",
      "patch": "@@ -186,7 +186,7 @@ ldfile_try_open_bfd (const char *attempt,\n \t\t  extern FILE *yyin;\n \n \t\t  /* Try to interpret the file as a linker script.  */\n-\t\t  ldfile_open_command_file (attempt);\n+\t\t  ldfile_open_script_file (attempt);\n \n \t\t  ldfile_assumed_script = TRUE;\n \t\t  parser_input = input_selected;\n@@ -588,11 +588,39 @@ ldfile_find_command_file (const char *name,\n /* Open command file NAME.  */\n \n static void\n-ldfile_open_command_file_1 (const char *name, bfd_boolean default_only)\n+ldfile_open_command_file_1 (const char *name,\n+\t\t\t    bfd_boolean default_only,\n+\t\t\t    bfd_boolean is_script)\n {\n   FILE *ldlex_input_stack;\n   bfd_boolean sysrooted;\n \n+  if (is_script)\n+    {\n+      static struct name_list *processed_scripts = NULL;\n+      struct name_list *script;\n+\n+      /* PR 24576: Catch the case where the user has accidentally included\n+\t the same linker script twice.  */\n+      for (script = processed_scripts; script != NULL; script = script->next)\n+\t{\n+\t  if (strcmp (name, script->name) == 0)\n+\t    {\n+\t      einfo (_(\"%F%P: error: linker script file '%s' appears multiple times\\n\"),\n+\t\t     name);\n+\t      return;\n+\t    }\n+\t}\n+\n+      /* FIXME: This memory is never freed, but that should not really matter.\n+\t It will be released when the linker exits, and it is unlikely to ever\n+\t be more than a few tens of bytes.  */\n+      script = xmalloc (sizeof (name_list));\n+      script->name = strdup (name);\n+      script->next = processed_scripts;\n+      processed_scripts = script;\n+    }\n+\n   ldlex_input_stack = ldfile_find_command_file (name, default_only, &sysrooted);\n \n   if (ldlex_input_stack == NULL)\n@@ -615,15 +643,21 @@ ldfile_open_command_file_1 (const char *name, bfd_boolean default_only)\n void\n ldfile_open_command_file (const char *name)\n {\n-  ldfile_open_command_file_1 (name, FALSE);\n+  ldfile_open_command_file_1 (name, FALSE, FALSE);\n+}\n+\n+void\n+ldfile_open_script_file (const char *name)\n+{\n+  ldfile_open_command_file_1 (name, FALSE, TRUE);\n }\n \n /* Open command file NAME at the default script location.  */\n \n void\n ldfile_open_default_command_file (const char *name)\n {\n-  ldfile_open_command_file_1 (name, TRUE);\n+  ldfile_open_command_file_1 (name, TRUE, TRUE);\n }\n \n void"
    },
    {
      "sha": "3d6ddf12fdffcf5aeed47cfcd68936e12bf3462f",
      "filename": "ld/ldfile.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ec6968b1b259948ba42f0a47a3da048377058bc/ld/ldfile.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ec6968b1b259948ba42f0a47a3da048377058bc/ld/ldfile.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldfile.h?ref=6ec6968b1b259948ba42f0a47a3da048377058bc",
      "patch": "@@ -46,6 +46,8 @@ extern void ldfile_add_library_path\n   (const char *, bfd_boolean cmdline);\n extern void ldfile_open_command_file\n   (const char *name);\n+extern void ldfile_open_script_file\n+  (const char *name);\n extern void ldfile_open_default_command_file\n   (const char *name);\n extern void ldfile_open_file"
    },
    {
      "sha": "a7ca4f487db11cacaf2b755b43dd7ac0e580baf5",
      "filename": "ld/ldmain.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ec6968b1b259948ba42f0a47a3da048377058bc/ld/ldmain.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ec6968b1b259948ba42f0a47a3da048377058bc/ld/ldmain.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldmain.c?ref=6ec6968b1b259948ba42f0a47a3da048377058bc",
      "patch": "@@ -329,7 +329,7 @@ main (int argc, char **argv)\n   if (saved_script_handle == NULL\n       && command_line.default_script != NULL)\n     {\n-      ldfile_open_command_file (command_line.default_script);\n+      ldfile_open_script_file (command_line.default_script);\n       parser_input = input_script;\n       yyparse ();\n     }"
    },
    {
      "sha": "2539356baa7b930d9eb19cd52cd4fa0ca7010327",
      "filename": "ld/lexsup.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ec6968b1b259948ba42f0a47a3da048377058bc/ld/lexsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ec6968b1b259948ba42f0a47a3da048377058bc/ld/lexsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/lexsup.c?ref=6ec6968b1b259948ba42f0a47a3da048377058bc",
      "patch": "@@ -1243,7 +1243,7 @@ parse_args (unsigned argc, char **argv)\n \t  break;\n \tcase 'T':\n \t  previous_script_handle = saved_script_handle;\n-\t  ldfile_open_command_file (optarg);\n+\t  ldfile_open_script_file (optarg);\n \t  parser_input = input_script;\n \t  yyparse ();\n \t  previous_script_handle = NULL;"
    }
  ]
}