{
  "sha": "5e365e474b7561318ddb1a107f05cf0c002e8284",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWUzNjVlNDc0Yjc1NjEzMThkZGIxYTEwN2YwNWNmMGMwMDJlODI4NA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-18T09:28:52Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-18T09:28:52Z"
    },
    "message": "Prevent a potential use-after-fee memory corruption bug in the linker (for PE format files).\n\n\tPR 25993\n\t* emultempl/pe.em (_after_open): Check for duplicate filename\n\tpointers before renaming the dll.\n\t* emultempl/pep.em (_after_open): Likewise.",
    "tree": {
      "sha": "20043016f5da4a290056532ed6d88a0dc264c3a1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/20043016f5da4a290056532ed6d88a0dc264c3a1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5e365e474b7561318ddb1a107f05cf0c002e8284",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e365e474b7561318ddb1a107f05cf0c002e8284",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5e365e474b7561318ddb1a107f05cf0c002e8284",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e365e474b7561318ddb1a107f05cf0c002e8284/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d402189f2faa0aaa9fb8ad4669fdf0059946cd8a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d402189f2faa0aaa9fb8ad4669fdf0059946cd8a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d402189f2faa0aaa9fb8ad4669fdf0059946cd8a"
    }
  ],
  "stats": {
    "total": 58,
    "additions": 46,
    "deletions": 12
  },
  "files": [
    {
      "sha": "49c697023d8a2d4eb2b62341bc186cf139776a42",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e365e474b7561318ddb1a107f05cf0c002e8284/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e365e474b7561318ddb1a107f05cf0c002e8284/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=5e365e474b7561318ddb1a107f05cf0c002e8284",
      "patch": "@@ -1,3 +1,10 @@\n+2020-05-18  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25993\n+\t* emultempl/pe.em (_after_open): Check for duplicate filename\n+\tpointers before renaming the dll.\n+\t* emultempl/pep.em (_after_open): Likewise.\n+\n 2020-05-13  Nick Clifton  <nickc@redhat.com>\n \n \tPR 25979"
    },
    {
      "sha": "ad5d65d024a52c349b0a95ba91abb6a5f207f3d2",
      "filename": "ld/emultempl/pe.em",
      "status": "modified",
      "additions": 20,
      "deletions": 6,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e365e474b7561318ddb1a107f05cf0c002e8284/ld/emultempl/pe.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e365e474b7561318ddb1a107f05cf0c002e8284/ld/emultempl/pe.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/pe.em?ref=5e365e474b7561318ddb1a107f05cf0c002e8284",
      "patch": "@@ -1655,13 +1655,27 @@ gld_${EMULATION_NAME}_after_open (void)\n \t\telse /* sentinel */\n \t\t  seq = 'c';\n \n-\t\tnew_name = xmalloc (strlen (is->the_bfd->filename) + 3);\n-\t\tsprintf (new_name, \"%s.%c\", is->the_bfd->filename, seq);\n-\t\tbfd_set_filename (is->the_bfd, new_name);\n \n-\t\tnew_name = xmalloc (strlen (is->filename) + 3);\n-\t\tsprintf (new_name, \"%s.%c\", is->filename, seq);\n-\t\tis->filename = new_name;\n+\t\t/* PR 25993: It is possible that is->the_bfd-filename == is->filename.\n+\t\t   In which case calling bfd_set_filename on one will free the memory\n+\t\t   pointed to by the other.  */\n+\t\tif (is->filename == is->the_bfd->filename)\n+\t\t  {\n+\t\t    new_name = xmalloc (strlen (is->filename) + 3);\n+\t\t    sprintf (new_name, \"%s.%c\", is->filename, seq);\n+\t\t    bfd_set_filename (is->the_bfd, new_name);\n+\t\t    is->filename = new_name;\n+\t\t  }\n+\t\telse\n+\t\t  {\n+\t\t    new_name = xmalloc (strlen (is->the_bfd->filename) + 3);\n+\t\t    sprintf (new_name, \"%s.%c\", is->the_bfd->filename, seq);\n+\t\t    bfd_set_filename (is->the_bfd, new_name);\n+\n+\t\t    new_name = xmalloc (strlen (is->filename) + 3);\n+\t\t    sprintf (new_name, \"%s.%c\", is->filename, seq);\n+\t\t    is->filename = new_name;\n+\t\t  }\n \t      }\n \t  }\n       }"
    },
    {
      "sha": "aa8bac5f8163279ab31918d4aa9a0d08425b9e17",
      "filename": "ld/emultempl/pep.em",
      "status": "modified",
      "additions": 19,
      "deletions": 6,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e365e474b7561318ddb1a107f05cf0c002e8284/ld/emultempl/pep.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e365e474b7561318ddb1a107f05cf0c002e8284/ld/emultempl/pep.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/pep.em?ref=5e365e474b7561318ddb1a107f05cf0c002e8284",
      "patch": "@@ -1623,13 +1623,26 @@ gld_${EMULATION_NAME}_after_open (void)\n \t\telse /* sentinel */\n \t\t  seq = 'c';\n \n-\t\tnew_name = xmalloc (strlen (is->the_bfd->filename) + 3);\n-\t\tsprintf (new_name, \"%s.%c\", is->the_bfd->filename, seq);\n-\t\tbfd_set_filename (is->the_bfd, new_name);\n+\t\t/* PR 25993: It is possible that is->the_bfd-filename == is->filename.\n+\t\t   In which case calling bfd_set_filename on one will free the memory\n+\t\t   pointed to by the other.  */\n+\t\tif (is->filename == is->the_bfd->filename)\n+\t\t  {\n+\t\t    new_name = xmalloc (strlen (is->filename) + 3);\n+\t\t    sprintf (new_name, \"%s.%c\", is->filename, seq);\n+\t\t    bfd_set_filename (is->the_bfd, new_name);\n+\t\t    is->filename = new_name;\n+\t\t  }\n+\t\telse\n+\t\t  {\n+\t\t    new_name = xmalloc (strlen (is->the_bfd->filename) + 3);\n+\t\t    sprintf (new_name, \"%s.%c\", is->the_bfd->filename, seq);\n+\t\t    bfd_set_filename (is->the_bfd, new_name);\n \n-\t\tnew_name = xmalloc (strlen (is->filename) + 3);\n-\t\tsprintf (new_name, \"%s.%c\", is->filename, seq);\n-\t\tis->filename = new_name;\n+\t\t    new_name = xmalloc (strlen (is->filename) + 3);\n+\t\t    sprintf (new_name, \"%s.%c\", is->filename, seq);\n+\t\t    is->filename = new_name;\n+\t\t  }\n \t      }\n \t  }\n       }"
    }
  ]
}