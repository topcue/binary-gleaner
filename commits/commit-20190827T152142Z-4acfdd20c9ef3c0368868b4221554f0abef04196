{
  "sha": "4acfdd20c9ef3c0368868b4221554f0abef04196",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGFjZmRkMjBjOWVmM2MwMzY4ODY4YjQyMjE1NTRmMGFiZWYwNDE5Ng==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-07-22T15:53:06Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-08-27T15:21:42Z"
    },
    "message": "gdb: Add new -n flag to some info commands\n\nThe 'info variables', its alias 'whereis', and 'info functions' all\ninclude non-debug symbols in the output by default.  The list of\nnon-debug symbols can sometimes be quite long, resulting in the\ndebug symbol based results being scrolled off the screen.\n\nThis commit adds a '-n' flag to all of the commands listed above that\nexcludes the non-debug symbols from the results, leaving just the\ndebug symbol based results.\n\ngdb/ChangeLog:\n\n\t* cli/cli-utils.c (info_print_options_defs): Delete.\n\t(make_info_print_options_def_group): Delete.\n\t(extract_info_print_options): Delete.\n\t(info_print_command_completer): Delete.\n\t(info_print_args_help): Add extra parameter, and optionally\n\tinclude text about -n flag.\n\t* cli/cli-utils.h (struct info_print_options): Delete.\n\t(extract_info_print_options): Delete declaration.\n\t(info_print_command_completer): Delete declaration.\n\t(info_print_args_help): Add extra parameter, extend header\n\tcomment.\n\t* python/python.c (gdbpy_rbreak): Pass additional parameter to\n\tsearch_symbols.\n\t* stack.c (struct info_print_options): New type.\n\t(info_print_options_defs): New file scoped variable.\n\t(make_info_print_options_def_group): New static function.\n\t(info_print_command_completer): New static function.\n\t(info_locals_command): Update to use new local functions.\n\t(info_args_command): Likewise.\n\t(_initialize_stack): Add extra parameter to calls to\n\tinfo_print_args_help.\n\t* symtab.c (search_symbols): Add extra parameter, use this to\n\tpossibly excluse non-debug symbols.\n\t(symtab_symbol_info): Add extra parameter, which is passed on to\n\tsearch_symbols.\n\t(struct info_print_options): New type.\n\t(info_print_options_defs): New file scoped variable.\n\t(make_info_print_options_def_group): New static function.\n\t(info_print_command_completer): New static function.\n\t(info_variables_command): Update to use local functions, and pass\n\textra parameter through to symtab_symbol_info.\n\t(info_functions_command): Likewise.\n\t(info_types_command): Pass additional argument through to\n\tsymtab_symbol_info.\n\t(rbreak_command): Pass extra argument to search_symbols.\n\t(_initialize_symtab): Add extra arguments for calls to\n\tinfo_print_args_help, and update help text for 'info variables',\n\t'whereis', and 'info functions' commands.\n\t* symtab.h (search_symbols): Add extra argument to declaration.\n\t* NEWS: Mention new flags.\n\ngdb/doc/ChangeLog:\n\n\t* gdb.texinfo (Symbols): Add information about the -n flag to\n\t\"info variables\" and \"info functions\".\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/info-fun.exp: Extend to test the -n flag for 'info\n\tfunctions'.  Reindent as needed.\n\t* gdb.base/info-var-f1.c: New file.\n\t* gdb.base/info-var-f2.c: New file.\n\t* gdb.base/info-var.exp: New file.\n\t* gdb.base/info-var.h: New file.",
    "tree": {
      "sha": "09e8ed00b4bc0dfdbe8bb12f22a8822d20caeed4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/09e8ed00b4bc0dfdbe8bb12f22a8822d20caeed4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4acfdd20c9ef3c0368868b4221554f0abef04196",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4acfdd20c9ef3c0368868b4221554f0abef04196",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4acfdd20c9ef3c0368868b4221554f0abef04196",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4acfdd20c9ef3c0368868b4221554f0abef04196/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c4a23bf878f2e9a64034006c91596401faf6db3e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c4a23bf878f2e9a64034006c91596401faf6db3e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c4a23bf878f2e9a64034006c91596401faf6db3e"
    }
  ],
  "stats": {
    "total": 610,
    "additions": 446,
    "deletions": 164
  },
  "files": [
    {
      "sha": "c7d2dae4ffa6fc5a4db0ed2d237885d476c22fab",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -1,3 +1,46 @@\n+2019-08-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* cli/cli-utils.c (info_print_options_defs): Delete.\n+\t(make_info_print_options_def_group): Delete.\n+\t(extract_info_print_options): Delete.\n+\t(info_print_command_completer): Delete.\n+\t(info_print_args_help): Add extra parameter, and optionally\n+\tinclude text about -n flag.\n+\t* cli/cli-utils.h (struct info_print_options): Delete.\n+\t(extract_info_print_options): Delete declaration.\n+\t(info_print_command_completer): Delete declaration.\n+\t(info_print_args_help): Add extra parameter, extend header\n+\tcomment.\n+\t* python/python.c (gdbpy_rbreak): Pass additional parameter to\n+\tsearch_symbols.\n+\t* stack.c (struct info_print_options): New type.\n+\t(info_print_options_defs): New file scoped variable.\n+\t(make_info_print_options_def_group): New static function.\n+\t(info_print_command_completer): New static function.\n+\t(info_locals_command): Update to use new local functions.\n+\t(info_args_command): Likewise.\n+\t(_initialize_stack): Add extra parameter to calls to\n+\tinfo_print_args_help.\n+\t* symtab.c (search_symbols): Add extra parameter, use this to\n+\tpossibly excluse non-debug symbols.\n+\t(symtab_symbol_info): Add extra parameter, which is passed on to\n+\tsearch_symbols.\n+\t(struct info_print_options): New type.\n+\t(info_print_options_defs): New file scoped variable.\n+\t(make_info_print_options_def_group): New static function.\n+\t(info_print_command_completer): New static function.\n+\t(info_variables_command): Update to use local functions, and pass\n+\textra parameter through to symtab_symbol_info.\n+\t(info_functions_command): Likewise.\n+\t(info_types_command): Pass additional argument through to\n+\tsymtab_symbol_info.\n+\t(rbreak_command): Pass extra argument to search_symbols.\n+\t(_initialize_symtab): Add extra arguments for calls to\n+\tinfo_print_args_help, and update help text for 'info variables',\n+\t'whereis', and 'info functions' commands.\n+\t* symtab.h (search_symbols): Add extra argument to declaration.\n+\t* NEWS: Mention new flags.\n+\n 2019-08-26  Christian Biesinger  <cbiesinger@google.com>\n \n \t* symtab.c (lookup_static_symbol): Call the new function (and move"
    },
    {
      "sha": "f382e887c0c203ac51765c0f04c81d7011021ed6",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -256,6 +256,11 @@ maint show test-options-completion-result\n      printing of some header information in a similar fashion to \"info\n      variables\" and \"info functions\".\n \n+  ** The \"info variables\", \"info functions\", and \"whereis\" commands\n+     now take a '-n' flag that excludes non-debug symbols (symbols\n+     from the symbol table, not from the debug info such as DWARF)\n+     from the results.\n+\n * Completion improvements\n \n   ** GDB can now complete the options of the \"thread apply all\" and"
    },
    {
      "sha": "b6b21c95b035b6d4d1a67d1c5757398ddb43a03f",
      "filename": "gdb/cli/cli-utils.c",
      "status": "modified",
      "additions": 7,
      "deletions": 58,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/cli/cli-utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/cli/cli-utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-utils.c?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -194,7 +194,8 @@ report_unrecognized_option_error (const char *command, const char *args)\n \n const char *\n info_print_args_help (const char *prefix,\n-\t\t      const char *entity_kind)\n+\t\t      const char *entity_kind,\n+\t\t      bool document_n_flag)\n {\n   return xstrprintf (_(\"\\\n %sIf NAMEREGEXP is provided, only prints the %s whose name\\n\\\n@@ -204,8 +205,11 @@ matches TYPEREGEXP.  Note that the matching is done with the type\\n\\\n printed by the 'whatis' command.\\n\\\n By default, the command might produce headers and/or messages indicating\\n\\\n why no %s can be printed.\\n\\\n-The flag -q disables the production of these headers and messages.\"),\n-\t\t     prefix, entity_kind, entity_kind, entity_kind);\n+The flag -q disables the production of these headers and messages.%s\"),\n+\t\t     prefix, entity_kind, entity_kind, entity_kind,\n+\t\t     (document_n_flag ? _(\"\\n\\\n+By default, the command will include non-debug symbols in the output;\\n\\\n+these can be excluded using the -n flag.\") : \"\"));\n }\n \n /* See documentation in cli-utils.h.  */\n@@ -435,58 +439,3 @@ validate_flags_qcs (const char *which_command, qcs_flags *flags)\n     error (_(\"%s: -c and -s are mutually exclusive\"), which_command);\n }\n \n-/* The options used by the 'info variables' commands and similar.  */\n-\n-static const gdb::option::option_def info_print_options_defs[] = {\n-  gdb::option::boolean_option_def<info_print_options> {\n-    \"q\",\n-    [] (info_print_options *opt) { return &opt->quiet; },\n-    nullptr, /* show_cmd_cb */\n-    nullptr /* set_doc */\n-  },\n-\n-  gdb::option::string_option_def<info_print_options> {\n-    \"t\",\n-    [] (info_print_options *opt) { return &opt->type_regexp; },\n-    nullptr, /* show_cmd_cb */\n-    nullptr /* set_doc */\n-  }\n-};\n-\n-/* Returns the option group used by 'info variables' and similar.  */\n-\n-static gdb::option::option_def_group\n-make_info_print_options_def_group (info_print_options *opts)\n-{\n-  return {{info_print_options_defs}, opts};\n-}\n-\n-/* See documentation in cli-utils.h.  */\n-\n-void\n-extract_info_print_options (info_print_options *opts,\n-\t\t\t    const char **args)\n-{\n-  auto grp = make_info_print_options_def_group (opts);\n-  gdb::option::process_options\n-    (args, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, grp);\n-  if (*args != nullptr && **args == '\\0')\n-    *args = nullptr;\n-}\n-\n-/* See documentation in cli-utils.h.  */\n-\n-void\n-info_print_command_completer (struct cmd_list_element *ignore,\n-\t\t\t      completion_tracker &tracker,\n-\t\t\t      const char *text, const char * /* word */)\n-{\n-  const auto group\n-    = make_info_print_options_def_group (nullptr);\n-  if (gdb::option::complete_options\n-      (tracker, &text, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, group))\n-    return;\n-\n-  const char *word = advance_to_expression_complete_word_point (tracker, text);\n-  symbol_completer (ignore, tracker, text, word);\n-}"
    },
    {
      "sha": "cbe8ff66e15da48dae50da5f0d45f29afff8971d",
      "filename": "gdb/cli/cli-utils.h",
      "status": "modified",
      "additions": 5,
      "deletions": 34,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/cli/cli-utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/cli/cli-utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-utils.h?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -47,38 +47,6 @@ extern int get_number (char **);\n    error instead of returning 0.  */\n extern ULONGEST get_ulongest (const char **pp, int trailer = '\\0');\n \n-/* Structure to hold the values of the options used by the 'info\n-   variables' command and other similar commands.  These correspond to the\n-   -q and -t options.  */\n-\n-struct info_print_options\n-{\n-  int quiet = false;\n-  char *type_regexp = nullptr;\n-\n-  ~info_print_options ()\n-  {\n-    xfree (type_regexp);\n-  }\n-};\n-\n-/* Extract options from ARGS for commands like 'info variables', placing\n-   the options into OPTS.  ARGS is updated to point to the first character\n-   after the options, or, if there is nothing after the options, then ARGS\n-   is set to nullptr.  */\n-\n-extern void extract_info_print_options (info_print_options *opts,\n-\t\t\t\t\tconst char **args);\n-\n-/* Function that can be used as a command completer for 'info variable'\n-   and friends.  This offers command option completion as well as symbol\n-   completion.  At the moment all symbols are offered for all commands.  */\n-\n-extern void info_print_command_completer (struct cmd_list_element *ignore,\n-\t\t\t\t\t  completion_tracker &tracker,\n-\t\t\t\t\t  const char *text,\n-\t\t\t\t\t  const char * /* word */);\n-\n /* Throws an error telling the user that ARGS starts with an option\n    unrecognized by COMMAND.  */\n \n@@ -87,10 +55,13 @@ extern void report_unrecognized_option_error (const char *command,\n \n \n /* Builds the help string for a command documented by PREFIX,\n-   followed by the extract_info_print_args help for ENTITY_KIND.  */\n+   followed by the extract_info_print_args help for ENTITY_KIND.  If\n+   DOCUMENT_N_FLAG is true then help text descibing the -n flag is also\n+   included.  */\n \n const char *info_print_args_help (const char *prefix,\n-\t\t\t\t  const char *entity_kind);\n+\t\t\t\t  const char *entity_kind,\n+\t\t\t\t  bool document_n_flag);\n \n /* Parse a number or a range.\n    A number will be of the form handled by get_number."
    },
    {
      "sha": "a5328259e01394760679d875d9ea4ee031ac6667",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -1,3 +1,8 @@\n+2019-08-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.texinfo (Symbols): Add information about the -n flag to\n+\t\"info variables\" and \"info functions\".\n+\n 2019-08-25  Yoshinori Sato <ysato@users.sourceforge.jp>\n \n         * gdb.texinfo (Standard Target Features): Add RX Features sub-section."
    },
    {
      "sha": "53b7de91e47f8be6d4c26b10e3a8b4c119a2970b",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 11,
      "deletions": 4,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -18594,7 +18594,7 @@ The matching is case-sensitive, except on operating systems that\n have case-insensitive filesystem (e.g., MS-Windows).\n \n @kindex info functions\n-@item info functions [-q]\n+@item info functions [-q] [-n]\n Print the names and data types of all defined functions.\n Similarly to @samp{info types}, this command groups its output by source\n files and annotates each function definition with its source line\n@@ -18607,11 +18607,16 @@ to print the function name and type according to the\n language of the function, other values mean to use\n the manually specified language (see @ref{Manually, ,Set Language Manually}).\n \n+The @samp{-n} flag excludes @dfn{non-debugging symbols} from the\n+results.  A non-debugging symbol is a symbol that comes from the\n+executable's symbol table, not from the debug information (for\n+example, DWARF) associated with the executable.\n+\n The optional flag @samp{-q}, which stands for @samp{quiet}, disables\n printing header information and messages explaining why no functions\n have been printed.\n \n-@item info functions [-q] [-t @var{type_regexp}] [@var{regexp}]\n+@item info functions [-q] [-n] [-t @var{type_regexp}] [@var{regexp}]\n Like @samp{info functions}, but only print the names and data types\n of the functions selected with the provided regexp(s).\n \n@@ -18641,7 +18646,7 @@ is printed only if its name matches @var{regexp} and its type matches\n \n \n @kindex info variables\n-@item info variables [-q]\n+@item info variables [-q] [-n]\n Print the names and data types of all variables that are defined\n outside of functions (i.e.@: excluding local variables).\n The printed variables are grouped by source files and annotated with\n@@ -18654,11 +18659,13 @@ to print the variable name and type according to the\n language of the variable, other values mean to use\n the manually specified language (see @ref{Manually, ,Set Language Manually}).\n \n+The @samp{-n} flag excludes non-debugging symbols from the results.\n+\n The optional flag @samp{-q}, which stands for @samp{quiet}, disables\n printing header information and messages explaining why no variables\n have been printed.\n \n-@item info variables [-q] [-t @var{type_regexp}] [@var{regexp}]\n+@item info variables [-q] [-n] [-t @var{type_regexp}] [@var{regexp}]\n Like @kbd{info variables}, but only print the variables selected\n with the provided regexp(s).\n "
    },
    {
      "sha": "b309ae91baa6b62b22ba6b409d5b38632ea42bc1",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -739,10 +739,10 @@ gdbpy_rbreak (PyObject *self, PyObject *args, PyObject *kw)\n       const char **files = symtab_paths.vec.data ();\n \n       symbols = search_symbols (regex, FUNCTIONS_DOMAIN, NULL,\n-\t\t\t\tsymtab_paths.vec.size (), files);\n+\t\t\t\tsymtab_paths.vec.size (), files, false);\n     }\n   else\n-    symbols = search_symbols (regex, FUNCTIONS_DOMAIN, NULL, 0, NULL);\n+    symbols = search_symbols (regex, FUNCTIONS_DOMAIN, NULL, 0, NULL, false);\n \n   /* Count the number of symbols (both symbols and optionally minimal\n      symbols) so we can correctly check the throttle limit.  */"
    },
    {
      "sha": "10a88e99aba013298bdf85184654c99a19c8bb35",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 73,
      "deletions": 4,
      "changes": 77,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -2417,13 +2417,76 @@ print_frame_local_vars (struct frame_info *frame,\n     }\n }\n \n+/* Structure to hold the values of the options used by the 'info\n+   variables' command and other similar commands.  These correspond to the\n+   -q and -t options.  */\n+\n+struct info_print_options\n+{\n+  int quiet = false;\n+  char *type_regexp = nullptr;\n+\n+  ~info_print_options ()\n+  {\n+    xfree (type_regexp);\n+  }\n+};\n+\n+/* The options used by the 'info locals' and 'info args' commands.  */\n+\n+static const gdb::option::option_def info_print_options_defs[] = {\n+  gdb::option::boolean_option_def<info_print_options> {\n+    \"q\",\n+    [] (info_print_options *opt) { return &opt->quiet; },\n+    nullptr, /* show_cmd_cb */\n+    nullptr /* set_doc */\n+  },\n+\n+  gdb::option::string_option_def<info_print_options> {\n+    \"t\",\n+    [] (info_print_options *opt) { return &opt->type_regexp; },\n+    nullptr, /* show_cmd_cb */\n+    nullptr /* set_doc */\n+  }\n+};\n+\n+/* Returns the option group used by 'info locals' and 'info args'\n+   commands.  */\n+\n+static gdb::option::option_def_group\n+make_info_print_options_def_group (info_print_options *opts)\n+{\n+  return {{info_print_options_defs}, opts};\n+}\n+\n+/* Command completer for 'info locals' and 'info args'.  */\n+\n+static void\n+info_print_command_completer (struct cmd_list_element *ignore,\n+\t\t\t      completion_tracker &tracker,\n+\t\t\t      const char *text, const char * /* word */)\n+{\n+  const auto group\n+    = make_info_print_options_def_group (nullptr);\n+  if (gdb::option::complete_options\n+      (tracker, &text, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, group))\n+    return;\n+\n+  const char *word = advance_to_expression_complete_word_point (tracker, text);\n+  symbol_completer (ignore, tracker, text, word);\n+}\n+\n /* Implement the 'info locals' command.  */\n \n void\n info_locals_command (const char *args, int from_tty)\n {\n   info_print_options opts;\n-  extract_info_print_options (&opts, &args);\n+  auto grp = make_info_print_options_def_group (&opts);\n+  gdb::option::process_options\n+    (&args, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, grp);\n+  if (args != nullptr && *args == '\\0')\n+    args = nullptr;\n \n   print_frame_local_vars (get_selected_frame (_(\"No frame selected.\")),\n \t\t\t  opts.quiet, args, opts.type_regexp,\n@@ -2530,7 +2593,11 @@ void\n info_args_command (const char *args, int from_tty)\n {\n   info_print_options opts;\n-  extract_info_print_options (&opts, &args);\n+  auto grp = make_info_print_options_def_group (&opts);\n+  gdb::option::process_options\n+    (&args, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, grp);\n+  if (args != nullptr && *args == '\\0')\n+    args = nullptr;\n \n   print_frame_arg_vars (get_selected_frame (_(\"No frame selected.\")),\n \t\t\topts.quiet, args, opts.type_regexp, gdb_stdout);\n@@ -3487,14 +3554,16 @@ Usage: info frame level LEVEL\"),\n All local variables of current stack frame or those matching REGEXPs.\\n\\\n Usage: info locals [-q] [-t TYPEREGEXP] [NAMEREGEXP]\\n\\\n Prints the local variables of the current stack frame.\\n\"),\n-\t\t\t\t  _(\"local variables\")));\n+\t\t\t\t\t_(\"local variables\"),\n+\t\t\t\t\tfalse));\n   set_cmd_completer_handle_brkchars (cmd, info_print_command_completer);\n   cmd = add_info (\"args\", info_args_command,\n \t\t  info_print_args_help (_(\"\\\n All argument variables of current stack frame or those matching REGEXPs.\\n\\\n Usage: info args [-q] [-t TYPEREGEXP] [NAMEREGEXP]\\n\\\n Prints the argument variables of the current stack frame.\\n\"),\n-\t\t\t\t  _(\"argument variables\")));\n+\t\t\t\t\t_(\"argument variables\"),\n+\t\t\t\t\tfalse));\n   set_cmd_completer_handle_brkchars (cmd, info_print_command_completer);\n \n   if (dbx_commands)"
    },
    {
      "sha": "7762c857082a8f3bd3ba7d150f4e69e9ecfa9455",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 103,
      "deletions": 17,
      "changes": 120,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -4453,12 +4453,16 @@ sort_search_symbols_remove_dups (std::vector<symbol_search> *result)\n \n    Within each file the results are sorted locally; each symtab's global and\n    static blocks are separately alphabetized.\n-   Duplicate entries are removed.  */\n+   Duplicate entries are removed.\n+\n+   When EXCLUDE_MINSYMS is false then matching minsyms are also returned,\n+   otherwise they are excluded.  */\n \n std::vector<symbol_search>\n search_symbols (const char *regexp, enum search_domain kind,\n \t\tconst char *t_regexp,\n-\t\tint nfiles, const char *files[])\n+\t\tint nfiles, const char *files[],\n+\t\tbool exclude_minsyms)\n {\n   const struct blockvector *bv;\n   const struct block *b;\n@@ -4674,6 +4678,7 @@ search_symbols (const char *regexp, enum search_domain kind,\n      as we assume that a minimal symbol does not have a type.  */\n \n   if ((found_misc || (nfiles == 0 && kind != FUNCTIONS_DOMAIN))\n+      && !exclude_minsyms\n       && !treg.has_value ())\n     {\n       for (objfile *objfile : current_program_space->objfiles ())\n@@ -4820,7 +4825,7 @@ print_msymbol_info (struct bound_minimal_symbol msymbol)\n    matches.  */\n \n static void\n-symtab_symbol_info (bool quiet,\n+symtab_symbol_info (bool quiet, bool exclude_minsyms,\n \t\t    const char *regexp, enum search_domain kind,\n \t\t    const char *t_regexp, int from_tty)\n {\n@@ -4836,7 +4841,8 @@ symtab_symbol_info (bool quiet,\n \n   /* Must make sure that if we're interrupted, symbols gets freed.  */\n   std::vector<symbol_search> symbols = search_symbols (regexp, kind,\n-\t\t\t\t\t\t       t_regexp, 0, NULL);\n+\t\t\t\t\t\t       t_regexp, 0, NULL,\n+\t\t\t\t\t\t       exclude_minsyms);\n \n   if (!quiet)\n     {\n@@ -4889,15 +4895,87 @@ symtab_symbol_info (bool quiet,\n     }\n }\n \n+/* Structure to hold the values of the options used by the 'info variables'\n+   and 'info functions' commands.  These correspond to the -q, -t, and -n\n+   options.  */\n+\n+struct info_print_options\n+{\n+  int quiet = false;\n+  int exclude_minsyms = false;\n+  char *type_regexp = nullptr;\n+\n+  ~info_print_options ()\n+  {\n+    xfree (type_regexp);\n+  }\n+};\n+\n+/* The options used by the 'info variables' and 'info functions'\n+   commands.  */\n+\n+static const gdb::option::option_def info_print_options_defs[] = {\n+  gdb::option::boolean_option_def<info_print_options> {\n+    \"q\",\n+    [] (info_print_options *opt) { return &opt->quiet; },\n+    nullptr, /* show_cmd_cb */\n+    nullptr /* set_doc */\n+  },\n+\n+  gdb::option::boolean_option_def<info_print_options> {\n+    \"n\",\n+    [] (info_print_options *opt) { return &opt->exclude_minsyms; },\n+    nullptr, /* show_cmd_cb */\n+    nullptr /* set_doc */\n+  },\n+\n+  gdb::option::string_option_def<info_print_options> {\n+    \"t\",\n+    [] (info_print_options *opt) { return &opt->type_regexp; },\n+    nullptr, /* show_cmd_cb */\n+    nullptr /* set_doc */\n+  }\n+};\n+\n+/* Returns the option group used by 'info variables' and 'info\n+   functions'.  */\n+\n+static gdb::option::option_def_group\n+make_info_print_options_def_group (info_print_options *opts)\n+{\n+  return {{info_print_options_defs}, opts};\n+}\n+\n+/* Command completer for 'info variables' and 'info functions'.  */\n+\n+static void\n+info_print_command_completer (struct cmd_list_element *ignore,\n+\t\t\t      completion_tracker &tracker,\n+\t\t\t      const char *text, const char * /* word */)\n+{\n+  const auto group\n+    = make_info_print_options_def_group (nullptr);\n+  if (gdb::option::complete_options\n+      (tracker, &text, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, group))\n+    return;\n+\n+  const char *word = advance_to_expression_complete_word_point (tracker, text);\n+  symbol_completer (ignore, tracker, text, word);\n+}\n+\n /* Implement the 'info variables' command.  */\n \n static void\n info_variables_command (const char *args, int from_tty)\n {\n   info_print_options opts;\n-  extract_info_print_options (&opts, &args);\n+  auto grp = make_info_print_options_def_group (&opts);\n+  gdb::option::process_options\n+    (&args, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, grp);\n+  if (args != nullptr && *args == '\\0')\n+    args = nullptr;\n \n-  symtab_symbol_info (opts.quiet, args, VARIABLES_DOMAIN,\n+  symtab_symbol_info (opts.quiet, opts.exclude_minsyms, args, VARIABLES_DOMAIN,\n \t\t      opts.type_regexp, from_tty);\n }\n \n@@ -4907,10 +4985,14 @@ static void\n info_functions_command (const char *args, int from_tty)\n {\n   info_print_options opts;\n-  extract_info_print_options (&opts, &args);\n+  auto grp = make_info_print_options_def_group (&opts);\n+  gdb::option::process_options\n+    (&args, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, grp);\n+  if (args != nullptr && *args == '\\0')\n+    args = nullptr;\n \n-  symtab_symbol_info (opts.quiet, args, FUNCTIONS_DOMAIN,\n-\t\t      opts.type_regexp, from_tty);\n+  symtab_symbol_info (opts.quiet, opts.exclude_minsyms, args,\n+\t\t      FUNCTIONS_DOMAIN, opts.type_regexp, from_tty);\n }\n \n /* Holds the -q option for the 'info types' command.  */\n@@ -4951,7 +5033,7 @@ info_types_command (const char *args, int from_tty)\n     (&args, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, grp);\n   if (args != nullptr && *args == '\\0')\n     args = nullptr;\n-  symtab_symbol_info (opts.quiet, args, TYPES_DOMAIN, NULL, from_tty);\n+  symtab_symbol_info (opts.quiet, false, args, TYPES_DOMAIN, NULL, from_tty);\n }\n \n /* Command completer for 'info types' command.  */\n@@ -5012,7 +5094,8 @@ rbreak_command (const char *regexp, int from_tty)\n   std::vector<symbol_search> symbols = search_symbols (regexp,\n \t\t\t\t\t\t       FUNCTIONS_DOMAIN,\n \t\t\t\t\t\t       NULL,\n-\t\t\t\t\t\t       nfiles, files);\n+\t\t\t\t\t\t       nfiles, files,\n+\t\t\t\t\t\t       false);\n \n   scoped_rbreak_breakpoints finalize;\n   for (const symbol_search &p : symbols)\n@@ -6201,27 +6284,30 @@ _initialize_symtab (void)\n   c = add_info (\"variables\", info_variables_command,\n \t\tinfo_print_args_help (_(\"\\\n All global and static variable names or those matching REGEXPs.\\n\\\n-Usage: info variables [-q] [-t TYPEREGEXP] [NAMEREGEXP]\\n\\\n+Usage: info variables [-q] [-n] [-t TYPEREGEXP] [NAMEREGEXP]\\n\\\n Prints the global and static variables.\\n\"),\n-\t\t\t\t  _(\"global and static variables\")));\n+\t\t\t\t      _(\"global and static variables\"),\n+\t\t\t\t      true));\n   set_cmd_completer_handle_brkchars (c, info_print_command_completer);\n   if (dbx_commands)\n     {\n       c = add_com (\"whereis\", class_info, info_variables_command,\n \t\t   info_print_args_help (_(\"\\\n All global and static variable names, or those matching REGEXPs.\\n\\\n-Usage: whereis [-q] [-t TYPEREGEXP] [NAMEREGEXP]\\n\\\n+Usage: whereis [-q] [-n] [-t TYPEREGEXP] [NAMEREGEXP]\\n\\\n Prints the global and static variables.\\n\"),\n-\t\t\t\t   _(\"global and static variables\")));\n+\t\t\t\t\t _(\"global and static variables\"),\n+\t\t\t\t\t true));\n       set_cmd_completer_handle_brkchars (c, info_print_command_completer);\n     }\n \n   c = add_info (\"functions\", info_functions_command,\n \t\tinfo_print_args_help (_(\"\\\n All function names or those matching REGEXPs.\\n\\\n-Usage: info functions [-q] [-t TYPEREGEXP] [NAMEREGEXP]\\n\\\n+Usage: info functions [-q] [-n] [-t TYPEREGEXP] [NAMEREGEXP]\\n\\\n Prints the functions.\\n\"),\n-\t\t\t\t  _(\"functions\")));\n+\t\t\t\t      _(\"functions\"),\n+\t\t\t\t      true));\n   set_cmd_completer_handle_brkchars (c, info_print_command_completer);\n \n   c = add_info (\"types\", info_types_command, _(\"\\"
    },
    {
      "sha": "f38e544cdb46f4d5cf6347af88d95e3bc2efa32e",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -2027,7 +2027,8 @@ extern std::vector<symbol_search> search_symbols (const char *,\n \t\t\t\t\t\t  enum search_domain,\n \t\t\t\t\t\t  const char *,\n \t\t\t\t\t\t  int,\n-\t\t\t\t\t\t  const char **);\n+\t\t\t\t\t\t  const char **,\n+\t\t\t\t\t\t  bool);\n extern bool treg_matches_sym_type_name (const compiled_regex &treg,\n \t\t\t\t\tconst struct symbol *sym);\n "
    },
    {
      "sha": "7b6793b0a298b49c0b6d82a559050c5985817410",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -1,3 +1,12 @@\n+2019-08-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.base/info-fun.exp: Extend to test the -n flag for 'info\n+\tfunctions'.  Reindent as needed.\n+\t* gdb.base/info-var-f1.c: New file.\n+\t* gdb.base/info-var-f2.c: New file.\n+\t* gdb.base/info-var.exp: New file.\n+\t* gdb.base/info-var.h: New file.\n+\n 2019-08-26  Tom de Vries  <tdevries@suse.de>\n \n \tPR c++/24852"
    },
    {
      "sha": "cee3a09ac141ab370df9c6c7523233f74fd8762e",
      "filename": "gdb/testsuite/gdb.base/info-fun.exp",
      "status": "modified",
      "additions": 53,
      "deletions": 44,
      "changes": 97,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/testsuite/gdb.base/info-fun.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/testsuite/gdb.base/info-fun.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-fun.exp?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -30,54 +30,63 @@ if [get_compiler_info] {\n     return -1\n }\n \n-# SEP must be last for the possible `unsupported' error path.\n-foreach libsepdebug {NO IN SEP} { with_test_prefix \"$libsepdebug\" {\n+foreach_with_prefix n_flag { 0 1 } {\n \n-    set sep_lib_flags $lib_flags\n-    if {$libsepdebug != \"NO\"} {\n-\tlappend sep_lib_flags {debug}\n-    }\n-    if { [gdb_compile_shlib ${srcfile_lib} ${binfile_lib} $sep_lib_flags] != \"\"\n-\t || [gdb_compile $srcdir/$subdir/${srcfile} ${binfile} \\\n-\t\t executable $bin_flags] != \"\" } {\n-      untested \"failed to compile\"\n-      return -1\n-    }\n+    # SEP must be last for the possible `unsupported' error path.\n+    foreach libsepdebug {NO IN SEP} { with_test_prefix \"$libsepdebug\" {\n \n-    if {$libsepdebug == \"SEP\"} {\n-\tif {[gdb_gnu_strip_debug $binfile_lib] != 0} {\n-\t    unsupported \"could not split debug of $binfile_lib.\"\n-\t    return\n-\t} else {\n-\t    pass \"split solib\"\n+\tset sep_lib_flags $lib_flags\n+\tif {$libsepdebug != \"NO\"} {\n+\t    lappend sep_lib_flags {debug}\n+\t}\n+\tif { [gdb_compile_shlib ${srcfile_lib} ${binfile_lib} $sep_lib_flags] != \"\"\n+\t     || [gdb_compile $srcdir/$subdir/${srcfile} ${binfile} \\\n+\t\t     executable $bin_flags] != \"\" } {\n+\t    untested \"failed to compile\"\n+\t    return -1\n \t}\n-    }\n \n-    clean_restart $executable\n+\tif {$libsepdebug == \"SEP\"} {\n+\t    if {[gdb_gnu_strip_debug $binfile_lib] != 0} {\n+\t\tunsupported \"could not split debug of $binfile_lib.\"\n+\t\treturn\n+\t    } else {\n+\t\tpass \"split solib\"\n+\t    }\n+\t}\n+\n+\tclean_restart $executable\n+\n+\tif ![runto_main] then {\n+\t    fail \"can't run to main\"\n+\t    return 0\n+\t}\n \n-    if ![runto_main] then {\n-      fail \"can't run to main\"\n-      return 0\n-    }\n+\tset match_str {All functions matching regular expression \"foo\":[\\r\\n]*}\n+\tif { \"$libsepdebug\" != \"NO\"  } {\n+\t    append match_str {File .*/info-fun-solib[.]c:[\\r\\n]*}\n+\t    append match_str {\\d+:\\tint foo\\(void\\);[\\r\\n]*}\n+\t}\n \n-    set match_str {All functions matching regular expression \"foo\":[\\r\\n]*}\n-    if { \"$libsepdebug\" != \"NO\"  } {\n-\tappend match_str {File .*/info-fun-solib[.]c:[\\r\\n]*}\n-\tappend match_str {\\d+:\\tint foo\\(void\\);[\\r\\n]*}\n-    }\n-    append match_str {Non-debugging symbols:[\\r\\n]*}\n-    # Note: Targets like {m68k,ppc64,s390x}-linux also have, e.g.,\n-    # 00000011.plt_call.foo+0 (m68k).\n-    set plt_foo_match \"($hex \\[^\\r\\n\\]*plt\\[^\\r\\n\\]*foo\\[^\\r\\n\\]*\\[\\r\\n\\]*)?\"\n-    append match_str $plt_foo_match\n-    # This text we want to match precisely.\n-    append match_str \"$hex *foo(@plt)?\\[\\r\\n\\]*\"\n-    # Watch for again to not have to worry about the order of appearance.\n-    append match_str $plt_foo_match\n-    if { \"$libsepdebug\" == \"NO\"  } {\n-\t# Note: The \".?\" is for targets like m68k-linux that have \".foo\" here.\n-\tappend match_str \"$hex *.?foo\\[\\r\\n\\]*\"\n-    }\n+\tset opt \"\"\n+\tif { !$n_flag } {\n+\t    append match_str {Non-debugging symbols:[\\r\\n]*}\n+\t    # Note: Targets like {m68k,ppc64,s390x}-linux also have, e.g.,\n+\t    # 00000011.plt_call.foo+0 (m68k).\n+\t    set plt_foo_match \"($hex \\[^\\r\\n\\]*plt\\[^\\r\\n\\]*foo\\[^\\r\\n\\]*\\[\\r\\n\\]*)?\"\n+\t    append match_str $plt_foo_match\n+\t    # This text we want to match precisely.\n+\t    append match_str \"$hex *foo(@plt)?\\[\\r\\n\\]*\"\n+\t    # Watch for again to not have to worry about the order of appearance.\n+\t    append match_str $plt_foo_match\n+\t    if { \"$libsepdebug\" == \"NO\"  } {\n+\t\t# Note: The \".?\" is for targets like m68k-linux that have \".foo\" here.\n+\t\tappend match_str \"$hex *.?foo\\[\\r\\n\\]*\"\n+\t    }\n+\t} else {\n+\t    set opt \"-n\"\n+\t}\n \n-    gdb_test \"info fun foo\" \"$match_str\"\n-}}\n+\tgdb_test \"info fun $opt foo\" \"$match_str\"\n+    }}\n+}"
    },
    {
      "sha": "b0587f12da1d12d746342482fbeb4427965872ad",
      "filename": "gdb/testsuite/gdb.base/info-var-f1.c",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/testsuite/gdb.base/info-var-f1.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/testsuite/gdb.base/info-var-f1.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-var-f1.c?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -0,0 +1,24 @@\n+/* Copyright 2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"info-var.h\"\n+\n+static int f1_var = -3;\n+\n+int\n+main ()\n+{\n+  return global_var + get_offset() + f1_var;\n+}"
    },
    {
      "sha": "fdff696ebeb3860112c307fc549fc1dd755f0643",
      "filename": "gdb/testsuite/gdb.base/info-var-f2.c",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/testsuite/gdb.base/info-var-f2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/testsuite/gdb.base/info-var-f2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-var-f2.c?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -0,0 +1,26 @@\n+/* Copyright 2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"info-var.h\"\n+\n+int global_var = 1;\n+\n+static int f2_var = 2;\n+\n+int\n+get_offset (void)\n+{\n+  return f2_var;\n+}"
    },
    {
      "sha": "5a07d6214dac6dd10c3b93d9483cda6df6f3f357",
      "filename": "gdb/testsuite/gdb.base/info-var.exp",
      "status": "added",
      "additions": 60,
      "deletions": 0,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/testsuite/gdb.base/info-var.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/testsuite/gdb.base/info-var.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-var.exp?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -0,0 +1,60 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Some basic testing of 'info variables'.\n+\n+standard_testfile info-var-f1.c info-var-f2.c\n+\n+if {[prepare_for_testing \"failed to prepare\" \\\n+\t \"${testfile}\" \"$srcfile $srcfile2\" \"debug\"]} {\n+    return -1\n+}\n+\n+if ![runto_main] then {\n+    fail \"can't run to main\"\n+    return 0\n+}\n+\n+gdb_test \"info variables\" \\\n+    [multi_line \\\n+\t \"All defined variables:\" \\\n+\t \"\" \\\n+\t \"File .*${srcfile}:\" \\\n+\t \"18:\\[ \\t\\]+static int f1_var;\" \\\n+\t \"\" \\\n+\t \"File .*${srcfile2}:\" \\\n+\t \"18:\\[ \\t\\]+int global_var;\" \\\n+\t \"20:\\[ \\t\\]+static int f2_var;\" \\\n+\t \"\" \\\n+\t \"Non-debugging symbols:\" \\\n+\t \".*\"]\n+\n+gdb_test \"info variables -n\" \\\n+    [multi_line \\\n+\t \"All defined variables:\" \\\n+\t \"\" \\\n+\t \"File .*${srcfile}:\" \\\n+\t \"18:\\[ \\t\\]+static int f1_var;\" \\\n+\t \"\" \\\n+\t \"File .*${srcfile2}:\" \\\n+\t \"18:\\[ \\t\\]+int global_var;\" \\\n+\t \"20:\\[ \\t\\]+static int f2_var;\" ]\n+\n+gdb_test \"info variables -n global\" \\\n+    [multi_line \\\n+\t \"All variables matching regular expression \\\"global\\\":\" \\\n+\t \"\" \\\n+\t \"File .*${srcfile2}:\" \\\n+\t \"18:\\[ \\t\\]+int global_var;\" ]"
    },
    {
      "sha": "d65db82474cbe594b634306dc409f14cf60cb91c",
      "filename": "gdb/testsuite/gdb.base/info-var.h",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/testsuite/gdb.base/info-var.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4acfdd20c9ef3c0368868b4221554f0abef04196/gdb/testsuite/gdb.base/info-var.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-var.h?ref=4acfdd20c9ef3c0368868b4221554f0abef04196",
      "patch": "@@ -0,0 +1,18 @@\n+/* Copyright 2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+extern int global_var;\n+\n+extern int get_offset (void);"
    }
  ]
}