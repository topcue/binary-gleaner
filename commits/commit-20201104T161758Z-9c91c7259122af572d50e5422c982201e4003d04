{
  "sha": "9c91c7259122af572d50e5422c982201e4003d04",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWM5MWM3MjU5MTIyYWY1NzJkNTBlNTQyMmM5ODIyMDFlNDAwM2QwNA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-04T16:17:58Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-04T16:17:58Z"
    },
    "message": "Handle __XVL fields in Ada type printing\n\nSometimes the Ada compiler will emit an \"__XVL\" name for a field.  The\nAda compiler describes:\n\n--  Second, the variable-length fields themselves are represented by\n--  replacing the type by a special access type. The designated type of\n--  this access type is the original variable-length type, and the fact\n--  that this field has been transformed in this way is signalled by\n--  encoding the field name as:\n\n--    field___XVL\n\nCurrently gdb describes such fields as having \"access\" type, but this\nis inaccurate.  This patch changes gdb to avoid printing \"access\" in\nthis case.\n\ngdb/ChangeLog\n2020-11-04  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-typeprint.c (ada_print_type): Handle __XVL fields.\n\ngdb/testsuite/ChangeLog\n2020-11-04  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/funcall_ref.exp: Update.\n\t* gdb.ada/var_rec_arr.exp: Update.",
    "tree": {
      "sha": "06a00b97ea01afc3834d21bf6f14c5d94557dea7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/06a00b97ea01afc3834d21bf6f14c5d94557dea7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9c91c7259122af572d50e5422c982201e4003d04",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9c91c7259122af572d50e5422c982201e4003d04",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9c91c7259122af572d50e5422c982201e4003d04",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9c91c7259122af572d50e5422c982201e4003d04/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8d9fd3a107c4ae251a4cbcfc995115334e0cf84e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d9fd3a107c4ae251a4cbcfc995115334e0cf84e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8d9fd3a107c4ae251a4cbcfc995115334e0cf84e"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 20,
    "deletions": 19
  },
  "files": [
    {
      "sha": "c03eacc904fd2ea0f663cabc68dafcfa72d8ab4e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9c91c7259122af572d50e5422c982201e4003d04/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9c91c7259122af572d50e5422c982201e4003d04/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9c91c7259122af572d50e5422c982201e4003d04",
      "patch": "@@ -1,3 +1,7 @@\n+2020-11-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-typeprint.c (ada_print_type): Handle __XVL fields.\n+\n 2020-11-04  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-typeprint.c (ada_print_type): Handle __T types."
    },
    {
      "sha": "5388247957be8c269f5f3dff58673e086689d3f0",
      "filename": "gdb/ada-typeprint.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9c91c7259122af572d50e5422c982201e4003d04/gdb/ada-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9c91c7259122af572d50e5422c982201e4003d04/gdb/ada-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-typeprint.c?ref=9c91c7259122af572d50e5422c982201e4003d04",
      "patch": "@@ -1006,7 +1006,11 @@ ada_print_type (struct type *type0, const char *varstring,\n \tbreak;\n       case TYPE_CODE_PTR:\n       case TYPE_CODE_TYPEDEF:\n-\tfprintf_filtered (stream, \"access \");\n+\t/* An __XVL field is not truly a pointer, so don't print\n+\t   \"access\" in this case.  */\n+\tif (type->code () != TYPE_CODE_PTR\n+\t    || strstr (varstring, \"___XVL\") == nullptr)\n+\t  fprintf_filtered (stream, \"access \");\n \tada_print_type (TYPE_TARGET_TYPE (type), \"\", stream, show, level,\n \t\t\tflags);\n \tbreak;"
    },
    {
      "sha": "06ca3e7137412d3d8a40a1ffd5ae9061e14fee6e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9c91c7259122af572d50e5422c982201e4003d04/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9c91c7259122af572d50e5422c982201e4003d04/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=9c91c7259122af572d50e5422c982201e4003d04",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/funcall_ref.exp: Update.\n+\t* gdb.ada/var_rec_arr.exp: Update.\n+\n 2020-11-04  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/rec_ptype.exp: New file."
    },
    {
      "sha": "d3c6e54c8e0f2456e6d47f99a996f153ddf08189",
      "filename": "gdb/testsuite/gdb.ada/funcall_ref.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9c91c7259122af572d50e5422c982201e4003d04/gdb/testsuite/gdb.ada/funcall_ref.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9c91c7259122af572d50e5422c982201e4003d04/gdb/testsuite/gdb.ada/funcall_ref.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/funcall_ref.exp?ref=9c91c7259122af572d50e5422c982201e4003d04",
      "patch": "@@ -41,7 +41,7 @@ foreach_with_prefix scenario {all minimal} {\n     # references).\n     set pass_re [multi_line \"type = <ref> record\" \\\n \t\t     \"    n: natural;\" \\\n-\t\t     \"    s: access array \\\\(1 \\\\.\\\\. n\\\\) of character;\" \\\n+\t\t     \"    s: array \\\\(1 \\\\.\\\\. n\\\\) of character;\" \\\n \t\t     \"end record\"]\n     # With DWARF we get debuginfo that could in theory show \"1..n\" for\n     # the range:"
    },
    {
      "sha": "da906dc5d8cfaf9d03e8867a88093d0da1411f26",
      "filename": "gdb/testsuite/gdb.ada/var_rec_arr.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 17,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9c91c7259122af572d50e5422c982201e4003d04/gdb/testsuite/gdb.ada/var_rec_arr.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9c91c7259122af572d50e5422c982201e4003d04/gdb/testsuite/gdb.ada/var_rec_arr.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/var_rec_arr.exp?ref=9c91c7259122af572d50e5422c982201e4003d04",
      "patch": "@@ -58,21 +58,9 @@ foreach_with_prefix scenario {all minimal} {\n     gdb_test \"print a2(3)\" \\\n \t\" = \\\\(i => 0, s => \\\"\\\"\\\\)\"\n \n-    # Note that the \"access\" is only printed when the gnat encodings\n-    # are used.  This is due to how the encodings work -- the type\n-    # doesn't actually have the \"access\", and so here the DWARF\n-    # encoding is more correct.\n-    if {$scenario == \"all\"} {\n-\tset ex [multi_line \"type = record\" \\\n-\t\t    \"    i: pck\\\\.small_type;\" \\\n-\t\t    \"    s: access array \\\\((<>|1 \\\\.\\\\. i)\\\\) of character;\" \\\n-\t\t    \"end record\"]\n-    } else {\n-\tset ex [multi_line \"type = record\" \\\n-\t\t    \"    i: pck\\\\.small_type;\" \\\n-\t\t    \"    s: array \\\\((<>|1 \\\\.\\\\. i)\\\\) of character;\" \\\n-\t\t    \"end record\"]\n-    }\n-\n-    gdb_test \"ptype a1(1)\" $ex\n+    gdb_test \"ptype a1(1)\" \\\n+\t[multi_line \"type = record\" \\\n+\t     \"    i: pck\\\\.small_type;\" \\\n+\t     \"    s: array \\\\((<>|1 \\\\.\\\\. i)\\\\) of character;\" \\\n+\t     \"end record\"]\n }"
    }
  ]
}