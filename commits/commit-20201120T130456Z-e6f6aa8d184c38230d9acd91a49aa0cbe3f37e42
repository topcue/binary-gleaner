{
  "sha": "e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTZmNmFhOGQxODRjMzgyMzBkOWFjZDkxYTQ5YWEwY2JlM2YzN2U0Mg==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-11-20T13:04:56Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-11-20T13:04:56Z"
    },
    "message": "Add option to nm to change the characters displayed for ifunc symbols.  Add a configure time option to change the default characters.\n\n\tPR 22967\n\t* nm.c (ifunc_type_chars): New variable.\n\t(long_options): Add --ifunc-chars.\n\t(print_symbol): Use ifunc_type_chars for ifunc symbols.\n\t(main): Handle the new option.\n\t* doc/binutils.texi: Document the new option.\n\t* configure.ac: Add --enable-f-for-ifunc-symbols option which\n\tchanges the default symbol displayed by nm.\n\t* NEWS: Mention the new feature.\n\t* testsuite/binutils-all/nm.exp: Test the new feature.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.",
    "tree": {
      "sha": "e79643c26315046beb132228fdbb4d26b025e4fa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e79643c26315046beb132228fdbb4d26b025e4fa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8881640c8071b04fa2566f21eb2a47e691caf11c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8881640c8071b04fa2566f21eb2a47e691caf11c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8881640c8071b04fa2566f21eb2a47e691caf11c"
    }
  ],
  "stats": {
    "total": 188,
    "additions": 172,
    "deletions": 16
  },
  "files": [
    {
      "sha": "946ce6c46b9a8a38734c6caeb2b7558f84e7b44a",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42",
      "patch": "@@ -1,3 +1,18 @@\n+2020-11-20  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22967\n+\t* nm.c (ifunc_type_chars): New variable.\n+\t(long_options): Add --ifunc-chars.\n+\t(print_symbol): Use ifunc_type_chars for ifunc symbols.\n+\t(main): Handle the new option.\n+\t* doc/binutils.texi: Document the new option.\n+\t* configure.ac: Add --enable-f-for-ifunc-symbols option which\n+\tchanges the default symbol displayed by nm.\n+\t* NEWS: Mention the new feature.\n+\t* testsuite/binutils-all/nm.exp: Test the new feature.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2020-11-20  Linda Zhang  <lindasc@qq.com>\n \n \tPR 20979"
    },
    {
      "sha": "a5a31959ffecaa513033819a73cc02c96c3c6937",
      "filename": "binutils/NEWS",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/NEWS?ref=e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42",
      "patch": "@@ -1,5 +1,14 @@\n -*- text -*-\n \n+* Nm has a new command line option: --ifunc-chars=CHARS.  This specifies a\n+  string of one or two characters.  The first character is used as the type\n+  character when displaying global ifunc symbols.  The second character, if\n+  present is used when displaying local ifunc symbols.\n+\n+  In addition a new configure time option --enable-f-for-ifunc-symbols has been\n+  created, which if used will change nm's default characters for ifunc symbols\n+  from i (both local and global) to F (global) and f (local).\n+\n * The ar tool's previously unused l modifier is now used for specifying\n   dependencies of a static library. The arguments of this option\n   (or --record-libdeps long form option) will be stored verbatim in the"
    },
    {
      "sha": "4d6744737192c8ab6b8bf743495bd20898ebc8ca",
      "filename": "binutils/config.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/config.in?ref=e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42",
      "patch": "@@ -18,6 +18,9 @@\n /* Should ar and ranlib use -D behavior by default? */\n #undef DEFAULT_AR_DETERMINISTIC\n \n+/* Have nm use F and f for global and local ifunc symbols */\n+#undef DEFAULT_F_FOR_IFUNC_SYMBOLS\n+\n /* Should strings use -a behavior by default? */\n #undef DEFAULT_STRINGS_ALL\n "
    },
    {
      "sha": "c000966308785c8d3e17f6ad9d1d4c162ca9a84d",
      "filename": "binutils/configure",
      "status": "modified",
      "additions": 34,
      "deletions": 8,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/configure?ref=e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42",
      "patch": "@@ -821,6 +821,7 @@ enable_largefile\n enable_targets\n enable_deterministic_archives\n enable_default_strings_all\n+enable_f_for_ifunc_symbols\n with_debuginfod\n enable_libctf\n enable_werror\n@@ -1485,6 +1486,9 @@ Optional Features:\n                           ar and ranlib default to -D behavior\n   --disable-default-strings-all\n                           strings defaults to --data behavior\n+  --enable-f-for-ifunc-symbols\n+                          Have nm use F and f for global and local ifunc\n+                          symbols\n   --enable-libctf         Handle .ctf type-info sections [default=yes]\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings\n@@ -11552,7 +11556,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11555 \"configure\"\n+#line 11559 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11658,7 +11662,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11661 \"configure\"\n+#line 11665 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12273,6 +12277,7 @@ if test \"${enable_targets+set}\" = set; then :\n esac\n fi\n \n+\n # Check whether --enable-deterministic-archives was given.\n if test \"${enable_deterministic_archives+set}\" = set; then :\n   enableval=$enable_deterministic_archives;\n@@ -12292,6 +12297,7 @@ cat >>confdefs.h <<_ACEOF\n _ACEOF\n \n \n+\n # Check whether --enable-default-strings-all was given.\n if test \"${enable_default_strings_all+set}\" = set; then :\n   enableval=$enable_default_strings_all;\n@@ -12306,6 +12312,32 @@ fi\n \n \n \n+cat >>confdefs.h <<_ACEOF\n+#define DEFAULT_STRINGS_ALL $default_strings_all\n+_ACEOF\n+\n+\n+\n+# Check whether --enable-f-for-ifunc-symbols was given.\n+if test \"${enable_f_for_ifunc_symbols+set}\" = set; then :\n+  enableval=$enable_f_for_ifunc_symbols;\n+if test \"${enableval}\" = no; then\n+  default_f_for_ifunc=0\n+else\n+  default_f_for_ifunc=1\n+fi\n+else\n+  default_f_for_ifunc=0\n+fi\n+\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define DEFAULT_F_FOR_IFUNC_SYMBOLS $default_f_for_ifunc\n+_ACEOF\n+\n+\n+\n \n \n \n@@ -12554,12 +12586,6 @@ $as_echo \"$as_me: WARNING: debuginfod support disabled; some features may be una\n fi\n \n \n-\n-cat >>confdefs.h <<_ACEOF\n-#define DEFAULT_STRINGS_ALL $default_strings_all\n-_ACEOF\n-\n-\n  # Check whether --enable-libctf was given.\n if test \"${enable_libctf+set}\" = set; then :\n   enableval=$enable_libctf;"
    },
    {
      "sha": "24bf102019d2f31a571330587564d643c91a4b57",
      "filename": "binutils/configure.ac",
      "status": "modified",
      "additions": 17,
      "deletions": 2,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/configure.ac?ref=e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42",
      "patch": "@@ -43,6 +43,7 @@ AC_ARG_ENABLE(targets,\n   *)        enable_targets=$enableval ;;\n esac])dnl\n \n+\n AC_ARG_ENABLE(deterministic-archives,\n [AS_HELP_STRING([--enable-deterministic-archives],\n \t\t[ar and ranlib default to -D behavior])], [\n@@ -55,6 +56,7 @@ fi], [default_ar_deterministic=0])\n AC_DEFINE_UNQUOTED(DEFAULT_AR_DETERMINISTIC, $default_ar_deterministic,\n \t\t   [Should ar and ranlib use -D behavior by default?])\n \n+\n AC_ARG_ENABLE(default-strings-all,\n [AS_HELP_STRING([--disable-default-strings-all],\n \t\t[strings defaults to --data behavior])], [\n@@ -64,11 +66,24 @@ else\n   default_strings_all=1\n fi], [default_strings_all=1])\n \n-AC_DEBUGINFOD\n-\n AC_DEFINE_UNQUOTED(DEFAULT_STRINGS_ALL, $default_strings_all,\n \t\t   [Should strings use -a behavior by default?])\n \n+\n+AC_ARG_ENABLE(f-for-ifunc-symbols,\n+[AS_HELP_STRING([--enable-f-for-ifunc-symbols],\n+\t[Have nm use F and f for global and local ifunc symbols])], [\n+if test \"${enableval}\" = no; then\n+  default_f_for_ifunc=0\n+else\n+  default_f_for_ifunc=1\n+fi], [default_f_for_ifunc=0])\n+\n+AC_DEFINE_UNQUOTED(DEFAULT_F_FOR_IFUNC_SYMBOLS, $default_f_for_ifunc,\n+\t\t   [Have nm use F and f for global and local ifunc symbols])\n+\n+AC_DEBUGINFOD\n+\n GCC_ENABLE([libctf], [yes], [], [Handle .ctf type-info sections])\n if test \"${enable_libctf}\" = yes; then\n     AC_DEFINE(ENABLE_LIBCTF, 1, [Handle .ctf type-info sections])"
    },
    {
      "sha": "671694f8111e68f394e40a2d9a81c368c85fb089",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 25,
      "deletions": 6,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42",
      "patch": "@@ -797,6 +797,7 @@ nm [@option{-A}|@option{-o}|@option{--print-file-name}] [@option{-a}|@option{--d\n    [@option{-B}|@option{--format=bsd}] [@option{-C}|@option{--demangle}[=@var{style}]]\n    [@option{-D}|@option{--dynamic}] [@option{-f}@var{format}|@option{--format=}@var{format}]\n    [@option{-g}|@option{--extern-only}] [@option{-h}|@option{--help}]\n+   [@option{--ifunc-chars=@var{CHARS}}]\n    [@option{-l}|@option{--line-numbers}] [@option{--inlines}]\n    [@option{-n}|@option{-v}|@option{--numeric-sort}]\n    [@option{-P}|@option{--portability}] [@option{-p}|@option{--no-sort}]\n@@ -869,12 +870,21 @@ such as a global int variable as opposed to a large global array.\n \n @item i\n For PE format files this indicates that the symbol is in a section\n-specific to the implementation of DLLs.  For ELF format files this\n-indicates that the symbol is an indirect function.  This is a GNU\n-extension to the standard set of ELF symbol types.  It indicates a\n-symbol which if referenced by a relocation does not evaluate to its\n-address, but instead must be invoked at runtime.  The runtime\n-execution will then return the value to be used in the relocation.\n+specific to the implementation of DLLs.\n+\n+For ELF format files this indicates that the symbol is an indirect\n+function.  This is a GNU extension to the standard set of ELF symbol\n+types.  It indicates a symbol which if referenced by a relocation does\n+not evaluate to its address, but instead must be invoked at runtime.\n+The runtime execution will then return the value to be used in the\n+relocation.\n+\n+Note - the actual symbols display for GNU indirect symbols is\n+controlled by the @option{--ifunc-chars} command line option.  If this\n+option has been provided then the first character in the string will\n+be used for global indirect function symbols.  If the string contains\n+a second character then that will be used for local indirect function\n+symbols.\n \n @item I\n The symbol is an indirect reference to another symbol.\n@@ -1029,6 +1039,15 @@ Display only external symbols.\n @itemx --help\n Show a summary of the options to @command{nm} and exit.\n \n+@item --ifunc-chars=@var{CHARS}\n+When display GNU indirect function symbols @command{nm} will default\n+to using the @code{i} character for both local indirect functions and\n+global indirect functions.  The @option{--ifunc-chars} option allows\n+the user to specify a string containing one or two characters. The\n+first character will be used for global indirect function symbols and\n+the second character, if present, will be used for local indirect\n+function symbols.\n+\n @item -l\n @itemx --line-numbers\n @cindex symbol line numbers"
    },
    {
      "sha": "2946bd6904646b90085b4d1138b4299e7aac4381",
      "filename": "binutils/nm.c",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/nm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/nm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/nm.c?ref=e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42",
      "patch": "@@ -162,6 +162,13 @@ static int show_synthetic = 0;\t/* Display synthesized symbols too.  */\n static int line_numbers = 0;\t/* Print line numbers for symbols.  */\n static int allow_special_symbols = 0;  /* Allow special symbols.  */\n \n+/* The characters to use for global and local ifunc symbols.  */\n+#if DEFAULT_F_FOR_IFUNC_SYMBOLS\n+static const char * ifunc_type_chars = \"Ff\";\n+#else\n+static const char * ifunc_type_chars = NULL;\n+#endif\n+\n static int demangle_flags = DMGL_ANSI | DMGL_PARAMS;\n \n /* When to print the names of files.  Not mutually exclusive in SYSV format.  */\n@@ -192,6 +199,7 @@ enum long_option_values\n   OPTION_SIZE_SORT,\n   OPTION_RECURSE_LIMIT,\n   OPTION_NO_RECURSE_LIMIT,\n+  OPTION_IFUNC_CHARS,\n   OPTION_WITH_SYMBOL_VERSIONS\n };\n \n@@ -203,6 +211,7 @@ static struct option long_options[] =\n   {\"extern-only\", no_argument, &external_only, 1},\n   {\"format\", required_argument, 0, 'f'},\n   {\"help\", no_argument, 0, 'h'},\n+  {\"ifunc-chars\", required_argument, 0, OPTION_IFUNC_CHARS},\n   {\"line-numbers\", no_argument, 0, 'l'},\n   {\"no-cplus\", no_argument, &do_demangle, 0},  /* Linux compatibility.  */\n   {\"no-demangle\", no_argument, &do_demangle, 0},\n@@ -255,6 +264,7 @@ usage (FILE *stream, int status)\n   -f, --format=FORMAT    Use the output format FORMAT.  FORMAT can be `bsd',\\n\\\n                            `sysv' or `posix'.  The default is `bsd'\\n\\\n   -g, --extern-only      Display only external symbols\\n\\\n+    --ifunc-chars=CHARS  Characters to use when displaying ifunc symbols\\n\\\n   -l, --line-numbers     Use debugging information to find a filename and\\n\\\n                            line number for each symbol\\n\\\n   -n, --numeric-sort     Sort symbols numerically by address\\n\\\n@@ -888,6 +898,18 @@ print_symbol (bfd *        abfd,\n \n   bfd_get_symbol_info (abfd, sym, &syminfo);\n \n+  /* PR 22967 - Distinguish between local and global ifunc symbols.  */\n+  if (syminfo.type == 'i'\n+      && sym->flags & BSF_GNU_INDIRECT_FUNCTION)\n+    {\n+      if (ifunc_type_chars == NULL || ifunc_type_chars[0] == 0)\n+\t; /* Change nothing.  */\n+      else if (sym->flags & BSF_GLOBAL) \n+\tsyminfo.type = ifunc_type_chars[0];\n+      else if (ifunc_type_chars[1] != 0)\n+\tsyminfo.type = ifunc_type_chars[1];\n+    }\n+\n   info.sinfo = &syminfo;\n   info.ssize = ssize;\n   /* Synthetic symbols do not have a full symbol type set of data available.\n@@ -1831,6 +1853,10 @@ main (int argc, char **argv)\n #endif\n \t  break;\n \n+\tcase OPTION_IFUNC_CHARS:\n+\t  ifunc_type_chars = optarg;\n+\t  break;\n+\n \tcase 0:\t\t/* A long option that just sets a flag.  */\n \t  break;\n "
    },
    {
      "sha": "c27a5aedaab4d633401fc1f42268cd531f5094d2",
      "filename": "binutils/testsuite/binutils-all/nm.exp",
      "status": "modified",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/testsuite/binutils-all/nm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42/binutils/testsuite/binutils-all/nm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/nm.exp?ref=e6f6aa8d184c38230d9acd91a49aa0cbe3f37e42",
      "patch": "@@ -298,6 +298,49 @@ if [is_elf_format] {\n \t    remote_file host delete $tmpfile\n \t}\n     }\n+\n+    # PR 22967\n+    # Test nm --ifunc-chars on a indirect symbols.\n+    \n+    # The following targets are known to not support ifuncs.\n+    setup_xfail \"alpha*-*-*\"\n+    setup_xfail \"arm*-*-nto*\"\n+    setup_xfail \"arm*-*-netbsdelf*\"\n+    setup_xfail \"mips*-*-*\"\n+    setup_xfail \"msp430*-*-*\"\n+    setup_xfail \"tx39*-*-*\"\n+    setup_xfail \"visium*-*-*\"\n+\n+    set testname \"nm --ifunc-chars\"\n+    if {![binutils_assemble $srcdir/$subdir/ifunc.s tmpdir/ifunc.o]} then {\n+\tfail \"$testname (assembly)\"\n+    } else {\n+\tif [is_remote host] {\n+\t    set tmpfile [remote_download host tmpdir/ifunc.o]\n+\t} else {\n+\t    set tmpfile tmpdir/ifunc.o\n+\t}\n+\n+\tset got [binutils_run $NM \"$NMFLAGS --ifunc-chars=Ff $tmpfile\"]\n+\n+\tif [regexp \"F global_foo\" $got] then {\n+\t    pass \"$testname (global ifunc)\"\n+\t} else {\n+\t    fail \"$testname (global ifunc)\"\n+\t}\n+\n+\tif [regexp \"f local_foo\" $got] then {\n+\t    pass \"$testname (local ifunc)\"\n+\t} else {\n+\t    fail \"$testname (local ifunc)\"\n+\t}\n+\n+\tif { $verbose < 1 } {\n+\t    remote_file host delete \"tmpdir/ifunc.o\"\n+\t}\n+    }\n+\n+    \n }\n \n # There are certainly other tests that could be run."
    }
  ]
}