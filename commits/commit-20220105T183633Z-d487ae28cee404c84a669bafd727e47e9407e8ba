{
  "sha": "d487ae28cee404c84a669bafd727e47e9407e8ba",
  "node_id": "C_kwDOANOeidoAKGQ0ODdhZTI4Y2VlNDA0Yzg0YTY2OWJhZmQ3MjdlNDdlOTQwN2U4YmE",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-27T01:22:30Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-05T18:36:33Z"
    },
    "message": "Use filtered output in gnu-nat.c commands\n\ngnu-nat.c has a number of ordinary commands that should use filtered\noutput.  In a few cases, I changed the output to use gdb_stderr as\nwell.  I can't compile this file, so this patch is split out as a\n\"best effort\".",
    "tree": {
      "sha": "bedf4547ee65c0e00d9c6db7002654906be8b802",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bedf4547ee65c0e00d9c6db7002654906be8b802"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d487ae28cee404c84a669bafd727e47e9407e8ba",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d487ae28cee404c84a669bafd727e47e9407e8ba",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d487ae28cee404c84a669bafd727e47e9407e8ba",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d487ae28cee404c84a669bafd727e47e9407e8ba/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "56c5b29b616e95749d0c99f936340897e14ab252",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56c5b29b616e95749d0c99f936340897e14ab252",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/56c5b29b616e95749d0c99f936340897e14ab252"
    }
  ],
  "stats": {
    "total": 102,
    "additions": 53,
    "deletions": 49
  },
  "files": [
    {
      "sha": "b7b486904e8904b01a547b5c152da1b2aa1ad280",
      "filename": "gdb/gnu-nat.c",
      "status": "modified",
      "additions": 53,
      "deletions": 49,
      "changes": 102,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d487ae28cee404c84a669bafd727e47e9407e8ba/gdb/gnu-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d487ae28cee404c84a669bafd727e47e9407e8ba/gdb/gnu-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gnu-nat.c?ref=d487ae28cee404c84a669bafd727e47e9407e8ba",
      "patch": "@@ -2704,29 +2704,33 @@ struct cmd_list_element *show_thread_default_cmd_list = NULL;\n static void\n set_thread_cmd (const char *args, int from_tty)\n {\n-  printf_unfiltered (\"\\\"set thread\\\" must be followed by the \"\n-\t\t     \"name of a thread property, or \\\"default\\\".\\n\");\n+  fprintf_filtered (gdb_stderr,\n+\t\t    \"\\\"set thread\\\" must be followed by the \"\n+\t\t    \"name of a thread property, or \\\"default\\\".\\n\");\n }\n \n static void\n show_thread_cmd (const char *args, int from_tty)\n {\n-  printf_unfiltered (\"\\\"show thread\\\" must be followed by the \"\n-\t\t     \"name of a thread property, or \\\"default\\\".\\n\");\n+  fprintf_unfiltered (gdb_stderr,\n+\t\t      \"\\\"show thread\\\" must be followed by the \"\n+\t\t      \"name of a thread property, or \\\"default\\\".\\n\");\n }\n \n static void\n set_thread_default_cmd (const char *args, int from_tty)\n {\n-  printf_unfiltered (\"\\\"set thread default\\\" must be followed \"\n-\t\t     \"by the name of a thread property.\\n\");\n+  fprintf_unfiltered (gdb_stderr,\n+\t\t      \"\\\"set thread default\\\" must be followed \"\n+\t\t      \"by the name of a thread property.\\n\");\n }\n \n static void\n show_thread_default_cmd (const char *args, int from_tty)\n {\n-  printf_unfiltered (\"\\\"show thread default\\\" must be followed \"\n-\t\t     \"by the name of a thread property.\\n\");\n+  fprintf_unfiltered (gdb_stderr,\n+\t\t      \"\\\"show thread default\\\" must be followed \"\n+\t\t      \"by the name of a thread property.\\n\");\n }\n \n static int\n@@ -2818,10 +2822,10 @@ show_task_pause_cmd (const char *args, int from_tty)\n   struct inf *inf = cur_inf ();\n \n   check_empty (args, \"show task pause\");\n-  printf_unfiltered (\"The inferior task %s suspended while gdb has control.\\n\",\n-\t\t     inf->task\n-\t\t     ? (inf->pause_sc == 0 ? \"isn't\" : \"is\")\n-\t\t     : (inf->pause_sc == 0 ? \"won't be\" : \"will be\"));\n+  printf_filtered (\"The inferior task %s suspended while gdb has control.\\n\",\n+\t\t   inf->task\n+\t\t   ? (inf->pause_sc == 0 ? \"isn't\" : \"is\")\n+\t\t   : (inf->pause_sc == 0 ? \"won't be\" : \"will be\"));\n }\n \n static void\n@@ -2835,9 +2839,9 @@ static void\n show_task_detach_sc_cmd (const char *args, int from_tty)\n {\n   check_empty (args, \"show task detach-suspend-count\");\n-  printf_unfiltered (\"The inferior task will be left with a \"\n-\t\t     \"suspend count of %d when detaching.\\n\",\n-\t\t     cur_inf ()->detach_sc);\n+  printf_filtered (\"The inferior task will be left with a \"\n+\t\t   \"suspend count of %d when detaching.\\n\",\n+\t\t   cur_inf ()->detach_sc);\n }\n \n \f\n@@ -2857,9 +2861,9 @@ show_thread_default_pause_cmd (const char *args, int from_tty)\n   int sc = inf->default_thread_pause_sc;\n \n   check_empty (args, \"show thread default pause\");\n-  printf_unfiltered (\"New threads %s suspended while gdb has control%s.\\n\",\n-\t\t     sc ? \"are\" : \"aren't\",\n-\t\t     !sc && inf->pause_sc ? \" (but the task is)\" : \"\");\n+  printf_filtered (\"New threads %s suspended while gdb has control%s.\\n\",\n+\t\t   sc ? \"are\" : \"aren't\",\n+\t\t   !sc && inf->pause_sc ? \" (but the task is)\" : \"\");\n }\n \n static void\n@@ -2877,8 +2881,8 @@ show_thread_default_run_cmd (const char *args, int from_tty)\n   struct inf *inf = cur_inf ();\n \n   check_empty (args, \"show thread default run\");\n-  printf_unfiltered (\"New threads %s allowed to run.\\n\",\n-\t\t     inf->default_thread_run_sc == 0 ? \"are\" : \"aren't\");\n+  printf_filtered (\"New threads %s allowed to run.\\n\",\n+\t\t   inf->default_thread_run_sc == 0 ? \"are\" : \"aren't\");\n }\n \n static void\n@@ -2892,8 +2896,8 @@ static void\n show_thread_default_detach_sc_cmd (const char *args, int from_tty)\n {\n   check_empty (args, \"show thread default detach-suspend-count\");\n-  printf_unfiltered (\"New threads will get a detach-suspend-count of %d.\\n\",\n-\t\t     cur_inf ()->default_thread_detach_sc);\n+  printf_filtered (\"New threads will get a detach-suspend-count of %d.\\n\",\n+\t\t   cur_inf ()->default_thread_detach_sc);\n }\n \n \f\n@@ -2956,8 +2960,8 @@ show_stopped_cmd (const char *args, int from_tty)\n   struct inf *inf = active_inf ();\n \n   check_empty (args, \"show stopped\");\n-  printf_unfiltered (\"The inferior process %s stopped.\\n\",\n-\t\t     inf->stopped ? \"is\" : \"isn't\");\n+  printf_filtered (\"The inferior process %s stopped.\\n\",\n+\t\t   inf->stopped ? \"is\" : \"isn't\");\n }\n \n static void\n@@ -2985,10 +2989,10 @@ show_sig_thread_cmd (const char *args, int from_tty)\n \n   check_empty (args, \"show signal-thread\");\n   if (inf->signal_thread)\n-    printf_unfiltered (\"The signal thread is %s.\\n\",\n-\t\t       proc_string (inf->signal_thread));\n+    printf_filtered (\"The signal thread is %s.\\n\",\n+\t\t     proc_string (inf->signal_thread));\n   else\n-    printf_unfiltered (\"There is no signal thread.\\n\");\n+    printf_filtered (\"There is no signal thread.\\n\");\n }\n \n \f\n@@ -3016,10 +3020,10 @@ show_signals_cmd (const char *args, int from_tty)\n   struct inf *inf = cur_inf ();\n \n   check_empty (args, \"show signals\");\n-  printf_unfiltered (\"The inferior process's signals %s intercepted.\\n\",\n-\t\t     inf->task\n-\t\t     ? (inf->traced ? \"are\" : \"aren't\")\n-\t\t     : (inf->want_signals ? \"will be\" : \"won't be\"));\n+  printf_filtered (\"The inferior process's signals %s intercepted.\\n\",\n+\t\t   inf->task\n+\t\t   ? (inf->traced ? \"are\" : \"aren't\")\n+\t\t   : (inf->want_signals ? \"will be\" : \"won't be\"));\n }\n \n static void\n@@ -3045,18 +3049,18 @@ show_exceptions_cmd (const char *args, int from_tty)\n   struct inf *inf = cur_inf ();\n \n   check_empty (args, \"show exceptions\");\n-  printf_unfiltered (\"Exceptions in the inferior %s trapped.\\n\",\n-\t\t     inf->task\n-\t\t     ? (inf->want_exceptions ? \"are\" : \"aren't\")\n-\t\t     : (inf->want_exceptions ? \"will be\" : \"won't be\"));\n+  printf_filtered (\"Exceptions in the inferior %s trapped.\\n\",\n+\t\t   inf->task\n+\t\t   ? (inf->want_exceptions ? \"are\" : \"aren't\")\n+\t\t   : (inf->want_exceptions ? \"will be\" : \"won't be\"));\n }\n \n \f\n static void\n set_task_cmd (const char *args, int from_tty)\n {\n-  printf_unfiltered (\"\\\"set task\\\" must be followed by the name\"\n-\t\t     \" of a task property.\\n\");\n+  printf_filtered (\"\\\"set task\\\" must be followed by the name\"\n+\t\t   \" of a task property.\\n\");\n }\n \n static void\n@@ -3320,10 +3324,10 @@ show_thread_pause_cmd (const char *args, int from_tty)\n   int sc = thread->pause_sc;\n \n   check_empty (args, \"show task pause\");\n-  printf_unfiltered (\"Thread %s %s suspended while gdb has control%s.\\n\",\n-\t\t     proc_string (thread),\n-\t\t     sc ? \"is\" : \"isn't\",\n-\t\t     !sc && thread->inf->pause_sc ? \" (but the task is)\" : \"\");\n+  printf_filtered (\"Thread %s %s suspended while gdb has control%s.\\n\",\n+\t\t   proc_string (thread),\n+\t\t   sc ? \"is\" : \"isn't\",\n+\t\t   !sc && thread->inf->pause_sc ? \" (but the task is)\" : \"\");\n }\n \n static void\n@@ -3340,9 +3344,9 @@ show_thread_run_cmd (const char *args, int from_tty)\n   struct proc *thread = cur_thread ();\n \n   check_empty (args, \"show thread run\");\n-  printf_unfiltered (\"Thread %s %s allowed to run.\",\n-\t\t     proc_string (thread),\n-\t\t     thread->run_sc == 0 ? \"is\" : \"isn't\");\n+  printf_filtered (\"Thread %s %s allowed to run.\",\n+\t\t   proc_string (thread),\n+\t\t   thread->run_sc == 0 ? \"is\" : \"isn't\");\n }\n \n static void\n@@ -3358,10 +3362,10 @@ show_thread_detach_sc_cmd (const char *args, int from_tty)\n   struct proc *thread = cur_thread ();\n \n   check_empty (args, \"show thread detach-suspend-count\");\n-  printf_unfiltered (\"Thread %s will be left with a suspend count\"\n-\t\t     \" of %d when detaching.\\n\",\n-\t\t     proc_string (thread),\n-\t\t     thread->detach_sc);\n+  printf_filtered (\"Thread %s will be left with a suspend count\"\n+\t\t   \" of %d when detaching.\\n\",\n+\t\t   proc_string (thread),\n+\t\t   thread->detach_sc);\n }\n \n static void\n@@ -3403,7 +3407,7 @@ thread_takeover_sc_cmd (const char *args, int from_tty)\n     error ((\"%s.\"), safe_strerror (err));\n   thread->sc = info->suspend_count;\n   if (from_tty)\n-    printf_unfiltered (\"Suspend count was %d.\\n\", thread->sc);\n+    printf_filtered (\"Suspend count was %d.\\n\", thread->sc);\n   if (info != &_info)\n     vm_deallocate (mach_task_self (), (vm_address_t) info,\n \t\t   info_len * sizeof (int));"
    }
  ]
}