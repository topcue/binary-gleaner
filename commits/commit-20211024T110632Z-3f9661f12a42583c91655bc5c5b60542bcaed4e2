{
  "sha": "3f9661f12a42583c91655bc5c5b60542bcaed4e2",
  "node_id": "C_kwDOANOeidoAKDNmOTY2MWYxMmE0MjU4M2M5MTY1NWJjNWM1YjYwNTQyYmNhZWQ0ZTI",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-10-23T00:57:14Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-10-24T11:06:32Z"
    },
    "message": "asan: aout: heap buffer overflow\n\n\t* aoutx.h (aout_get_external_symbols): Sanity check before writing\n\tzero index entry.  Remove outdated comment.\n\t* pdp11.c (aout_get_external_symbols): Likewise.",
    "tree": {
      "sha": "7c9771edd280b3a23065aa4a06facd9cfa6b1564",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7c9771edd280b3a23065aa4a06facd9cfa6b1564"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3f9661f12a42583c91655bc5c5b60542bcaed4e2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f9661f12a42583c91655bc5c5b60542bcaed4e2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3f9661f12a42583c91655bc5c5b60542bcaed4e2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f9661f12a42583c91655bc5c5b60542bcaed4e2/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "560b3fe208255ae909b4b1c88ba9c28b09043307",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/560b3fe208255ae909b4b1c88ba9c28b09043307",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/560b3fe208255ae909b4b1c88ba9c28b09043307"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 4,
    "deletions": 6
  },
  "files": [
    {
      "sha": "61d8e0c87167eb717b824c550fcfee93ec0c0d6f",
      "filename": "bfd/aoutx.h",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f9661f12a42583c91655bc5c5b60542bcaed4e2/bfd/aoutx.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f9661f12a42583c91655bc5c5b60542bcaed4e2/bfd/aoutx.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/aoutx.h?ref=3f9661f12a42583c91655bc5c5b60542bcaed4e2",
      "patch": "@@ -1353,8 +1353,6 @@ aout_get_external_symbols (bfd *abfd)\n \n \t  if (stringsize >= BYTES_IN_WORD)\n \t    {\n-\t      /* Keep the string count in the buffer for convenience\n-\t\t when indexing with e_strx.  */\n \t      amt = stringsize - BYTES_IN_WORD;\n \t      if (bfd_bread (strings + BYTES_IN_WORD, amt, abfd) != amt)\n \t\t{\n@@ -1364,7 +1362,8 @@ aout_get_external_symbols (bfd *abfd)\n \t    }\n \t}\n       /* Ensure that a zero index yields an empty string.  */\n-      memset (strings, 0, BYTES_IN_WORD);\n+      if (stringsize >= BYTES_IN_WORD)\n+\tmemset (strings, 0, BYTES_IN_WORD);\n \n       /* Ensure that the string buffer is NUL terminated.  */\n       strings[stringsize] = 0;"
    },
    {
      "sha": "280f5cdd68bfb62163b850eee9c5ba1bfd84bbf6",
      "filename": "bfd/pdp11.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f9661f12a42583c91655bc5c5b60542bcaed4e2/bfd/pdp11.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f9661f12a42583c91655bc5c5b60542bcaed4e2/bfd/pdp11.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/pdp11.c?ref=3f9661f12a42583c91655bc5c5b60542bcaed4e2",
      "patch": "@@ -1333,8 +1333,6 @@ aout_get_external_symbols (bfd *abfd)\n \n \t  if (stringsize >= BYTES_IN_LONG)\n \t    {\n-\t      /* Keep the string count in the buffer for convenience\n-\t\t when indexing with e_strx.  */\n \t      amt = stringsize - BYTES_IN_LONG;\n \t      if (bfd_bread (strings + BYTES_IN_LONG, amt, abfd) != amt)\n \t\t{\n@@ -1344,7 +1342,8 @@ aout_get_external_symbols (bfd *abfd)\n \t    }\n \t}\n       /* Ensure that a zero index yields an empty string.  */\n-      memset (strings, 0, BYTES_IN_LONG);\n+      if (stringsize >= BYTES_IN_WORD)\n+\tmemset (strings, 0, BYTES_IN_LONG);\n \n       /* Ensure that the string buffer is NUL terminated.  */\n       strings[stringsize] = 0;"
    }
  ]
}