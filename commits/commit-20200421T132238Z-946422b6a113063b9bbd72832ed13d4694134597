{
  "sha": "946422b6a113063b9bbd72832ed13d4694134597",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTQ2NDIyYjZhMTEzMDYzYjliYmQ3MjgzMmVkMTNkNDY5NDEzNDU5Nw==",
  "commit": {
    "author": {
      "name": "Mihails Strasuns",
      "email": "mihails.strasuns@intel.com",
      "date": "2020-02-14T10:33:41Z"
    },
    "committer": {
      "name": "Mihails Strasuns",
      "email": "mihails.strasuns@intel.com",
      "date": "2020-04-21T13:22:38Z"
    },
    "message": "[gdb/testsuite] share jit-protocol.h by all jit tests\n\nThere was an existing jit-protocol.h defining common symbols needed for\nJIT-supporting application, however, it was only used by few tests.\nOthers redeclared the same symbols.\n\nThis unifies all tests to use jit-protocol.h\n\ngdb/testsuite/ChangeLog:\n\n2020-02-18  Mihails Strasuns  <mihails.strasuns@intel.com>\n\n\t* gdb.base/jit-attach-pie.c: Use jit-protocol.h.\n\t* gdb.base/jit-elf-main.c: Use jit-protocol.h.\n\t* gdb.base/jit-reader-host.c: Use jit-protocol.h.\n\t* gdb.base/jit-reader-simple-jit.c: Use jit-protocol.h.\n\t* gdb.base/jit-protocol.h: Update definitions to match all usage\n\t  contexts.",
    "tree": {
      "sha": "2bb55b62e14c1de71dfba221f1538ea700c04ebd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2bb55b62e14c1de71dfba221f1538ea700c04ebd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/946422b6a113063b9bbd72832ed13d4694134597",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/946422b6a113063b9bbd72832ed13d4694134597",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/946422b6a113063b9bbd72832ed13d4694134597",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/946422b6a113063b9bbd72832ed13d4694134597/comments",
  "author": {
    "login": "mihails-strasuns-intel",
    "id": 55576710,
    "node_id": "MDQ6VXNlcjU1NTc2NzEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/55576710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mihails-strasuns-intel",
    "html_url": "https://github.com/mihails-strasuns-intel",
    "followers_url": "https://api.github.com/users/mihails-strasuns-intel/followers",
    "following_url": "https://api.github.com/users/mihails-strasuns-intel/following{/other_user}",
    "gists_url": "https://api.github.com/users/mihails-strasuns-intel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mihails-strasuns-intel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mihails-strasuns-intel/subscriptions",
    "organizations_url": "https://api.github.com/users/mihails-strasuns-intel/orgs",
    "repos_url": "https://api.github.com/users/mihails-strasuns-intel/repos",
    "events_url": "https://api.github.com/users/mihails-strasuns-intel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mihails-strasuns-intel/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "mihails-strasuns-intel",
    "id": 55576710,
    "node_id": "MDQ6VXNlcjU1NTc2NzEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/55576710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mihails-strasuns-intel",
    "html_url": "https://github.com/mihails-strasuns-intel",
    "followers_url": "https://api.github.com/users/mihails-strasuns-intel/followers",
    "following_url": "https://api.github.com/users/mihails-strasuns-intel/following{/other_user}",
    "gists_url": "https://api.github.com/users/mihails-strasuns-intel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mihails-strasuns-intel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mihails-strasuns-intel/subscriptions",
    "organizations_url": "https://api.github.com/users/mihails-strasuns-intel/orgs",
    "repos_url": "https://api.github.com/users/mihails-strasuns-intel/repos",
    "events_url": "https://api.github.com/users/mihails-strasuns-intel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mihails-strasuns-intel/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "922a7c7c5d4040f9e4ab75a059b9ca33f45ab952",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/922a7c7c5d4040f9e4ab75a059b9ca33f45ab952",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/922a7c7c5d4040f9e4ab75a059b9ca33f45ab952"
    }
  ],
  "stats": {
    "total": 98,
    "additions": 13,
    "deletions": 85
  },
  "files": [
    {
      "sha": "fd082335216b4fbea9287f7ff0970f7ad582389a",
      "filename": "gdb/testsuite/gdb.base/jit-attach-pie.c",
      "status": "modified",
      "additions": 1,
      "deletions": 23,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/946422b6a113063b9bbd72832ed13d4694134597/gdb/testsuite/gdb.base/jit-attach-pie.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/946422b6a113063b9bbd72832ed13d4694134597/gdb/testsuite/gdb.base/jit-attach-pie.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/jit-attach-pie.c?ref=946422b6a113063b9bbd72832ed13d4694134597",
      "patch": "@@ -19,29 +19,7 @@\n #include <stdint.h>\n #include <pthread.h>\n \n-struct jit_code_entry\n-{\n-  struct jit_code_entry *next_entry;\n-  struct jit_code_entry *prev_entry;\n-  const char *symfile_addr;\n-  uint64_t symfile_size;\n-};\n-\n-struct jit_descriptor\n-{\n-  uint32_t version;\n-  /* This type should be jit_actions_t, but we use uint32_t\n-     to be explicit about the bitwidth.  */\n-  uint32_t action_flag;\n-  struct jit_code_entry *relevant_entry;\n-  struct jit_code_entry *first_entry;\n-};\n-\n-struct jit_descriptor __jit_debug_descriptor = { 1, 0, 0, 0 };\n-\n-void __jit_debug_register_code()\n-{\n-}\n+#include \"jit-protocol.h\"\n \n static void *\n thread_proc (void *arg)"
    },
    {
      "sha": "4eaac514b537e4954fb18b6674306ddb8b63a258",
      "filename": "gdb/testsuite/gdb.base/jit-elf-main.c",
      "status": "modified",
      "additions": 4,
      "deletions": 34,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/946422b6a113063b9bbd72832ed13d4694134597/gdb/testsuite/gdb.base/jit-elf-main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/946422b6a113063b9bbd72832ed13d4694134597/gdb/testsuite/gdb.base/jit-elf-main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/jit-elf-main.c?ref=946422b6a113063b9bbd72832ed13d4694134597",
      "patch": "@@ -29,6 +29,8 @@\n #include <sys/stat.h>\n #include <unistd.h>\n \n+#include \"jit-protocol.h\"\n+\n /* ElfW is coming from linux. On other platforms it does not exist.\n    Let us define it here. */\n #ifndef ElfW\n@@ -42,38 +44,6 @@\n #define _ElfW_1(e,w,t)  e##w##t\n #endif /* !ElfW  */\n \n-typedef enum\n-{\n-  JIT_NOACTION = 0,\n-  JIT_REGISTER_FN,\n-  JIT_UNREGISTER_FN\n-} jit_actions_t;\n-\n-struct jit_code_entry\n-{\n-  struct jit_code_entry *next_entry;\n-  struct jit_code_entry *prev_entry;\n-  const char *symfile_addr;\n-  uint64_t symfile_size;\n-};\n-\n-struct jit_descriptor\n-{\n-  uint32_t version;\n-  /* This type should be jit_actions_t, but we use uint32_t\n-     to be explicit about the bitwidth.  */\n-  uint32_t action_flag;\n-  struct jit_code_entry *relevant_entry;\n-  struct jit_code_entry *first_entry;\n-};\n-\n-/* GDB puts a breakpoint in this function.  */\n-void __attribute__((noinline)) __jit_debug_register_code () { }\n-\n-/* Make sure to specify the version statically, because the\n-   debugger may check the version before we can set it.  */\n-struct jit_descriptor __jit_debug_descriptor = { 1, 0, 0, 0 };\n-\n static void\n usage (const char *const argv0)\n {\n@@ -203,7 +173,7 @@ MAIN (int argc, char *argv[])\n \t__jit_debug_descriptor.first_entry = entry;\n \n       /* Notify GDB.  */\n-      __jit_debug_descriptor.action_flag = JIT_REGISTER_FN;\n+      __jit_debug_descriptor.action_flag = JIT_REGISTER;\n       __jit_debug_register_code ();\n     }\n \n@@ -225,7 +195,7 @@ MAIN (int argc, char *argv[])\n \t__jit_debug_descriptor.first_entry = NULL;\n \n       /* Notify GDB.  */\n-      __jit_debug_descriptor.action_flag = JIT_UNREGISTER_FN;\n+      __jit_debug_descriptor.action_flag = JIT_UNREGISTER;\n       __jit_debug_register_code ();\n \n       __jit_debug_descriptor.relevant_entry = prev_entry;"
    },
    {
      "sha": "2b2e902fe7ca103688f8db8bcda50e46414606ed",
      "filename": "gdb/testsuite/gdb.base/jit-protocol.h",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/946422b6a113063b9bbd72832ed13d4694134597/gdb/testsuite/gdb.base/jit-protocol.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/946422b6a113063b9bbd72832ed13d4694134597/gdb/testsuite/gdb.base/jit-protocol.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/jit-protocol.h?ref=946422b6a113063b9bbd72832ed13d4694134597",
      "patch": "@@ -38,7 +38,7 @@ struct jit_code_entry\n {\n   struct jit_code_entry *next_entry;\n   struct jit_code_entry *prev_entry;\n-  void *symfile_addr;\n+  const void *symfile_addr;\n   uint64_t symfile_size;\n };\n \n@@ -51,4 +51,10 @@ struct jit_descriptor\n   struct jit_code_entry *first_entry;\n };\n \n+struct jit_descriptor __jit_debug_descriptor = { 1, 0, 0, 0 };\n+\n+void __attribute__((noinline)) __jit_debug_register_code()\n+{\n+}\n+\n #endif /* JIT_PROTOCOL_H */"
    },
    {
      "sha": "f9c4833083aaf61a698ab17e351b576f7ef6750b",
      "filename": "gdb/testsuite/gdb.base/jit-reader-host.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/946422b6a113063b9bbd72832ed13d4694134597/gdb/testsuite/gdb.base/jit-reader-host.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/946422b6a113063b9bbd72832ed13d4694134597/gdb/testsuite/gdb.base/jit-reader-host.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/jit-reader-host.c?ref=946422b6a113063b9bbd72832ed13d4694134597",
      "patch": "@@ -26,9 +26,6 @@\n #include \"jit-reader-host.h\"\n #include \"jit-protocol.h\"\n \n-void __attribute__((noinline)) __jit_debug_register_code () { }\n-\n-struct jit_descriptor __jit_debug_descriptor = { 1, 0, 0, 0 };\n struct jit_code_entry only_entry;\n \n typedef void (jit_function_stack_mangle_t) (void);"
    },
    {
      "sha": "f446bf2d96dd65b987f0b76c9921b0a410edb3d2",
      "filename": "gdb/testsuite/gdb.base/jit-reader-simple-jit.c",
      "status": "modified",
      "additions": 1,
      "deletions": 24,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/946422b6a113063b9bbd72832ed13d4694134597/gdb/testsuite/gdb.base/jit-reader-simple-jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/946422b6a113063b9bbd72832ed13d4694134597/gdb/testsuite/gdb.base/jit-reader-simple-jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/jit-reader-simple-jit.c?ref=946422b6a113063b9bbd72832ed13d4694134597",
      "patch": "@@ -19,32 +19,9 @@\n \n #include <stdint.h>\n \n-struct jit_code_entry\n-{\n-  struct jit_code_entry *next_entry;\n-  struct jit_code_entry *prev_entry;\n-  const char *symfile_addr;\n-  uint64_t symfile_size;\n-};\n-\n-struct jit_descriptor\n-{\n-  uint32_t version;\n-  /* This type should be jit_actions_t, but we use uint32_t\n-     to be explicit about the bitwidth.  */\n-  uint32_t action_flag;\n-  struct jit_code_entry *relevant_entry;\n-  struct jit_code_entry *first_entry;\n-};\n-\n #ifdef SPACER\n /* This exists to change the address of __jit_debug_descriptor.  */\n int spacer = 4;\n #endif\n \n-struct jit_descriptor __jit_debug_descriptor = { 1, 0, 0, 0 };\n-\n-void\n-__jit_debug_register_code (void)\n-{\n-}\n+#include \"jit-protocol.h\"\n\\ No newline at end of file"
    }
  ]
}