{
  "sha": "c68665c7260985ac8497ccafcea961f4a261c675",
  "node_id": "C_kwDOANOeidoAKGM2ODY2NWM3MjYwOTg1YWM4NDk3Y2NhZmNlYTk2MWY0YTI2MWM2NzU",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2022-01-17T02:21:24Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2022-01-18T18:44:32Z"
    },
    "message": "gdbserver: turn debug_threads into a boolean\n\ndebug_threads is always used as a boolean.  Except in ax.cc and\ntracepoint.cc.  These files have their own macros that use\ndebug_threads, and have a concept of verbosity level.  But they both\nhave a single level, so it's just a boolean in the end.\n\nRemove this concept of level.  If we ever want to re-introduce it, I\nthink it will be better implemented in a more common location.\n\nChange debug_threads to bool and adjust some users that were treating it\nas an int.\n\nChange-Id: I137f596eaf763a08c977dd74417969cedfee9ecf",
    "tree": {
      "sha": "e191f41840a74d69d137aac3772bef48b04e3367",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e191f41840a74d69d137aac3772bef48b04e3367"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c68665c7260985ac8497ccafcea961f4a261c675",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c68665c7260985ac8497ccafcea961f4a261c675",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c68665c7260985ac8497ccafcea961f4a261c675",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c68665c7260985ac8497ccafcea961f4a261c675/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d66beefaf6334d69b638b3300e264f7996c572dc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d66beefaf6334d69b638b3300e264f7996c572dc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d66beefaf6334d69b638b3300e264f7996c572dc"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 11,
    "deletions": 17
  },
  "files": [
    {
      "sha": "4f36bc50cab6ae76da75a458f12f3aa40c4afac5",
      "filename": "gdbserver/ax.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c68665c7260985ac8497ccafcea961f4a261c675/gdbserver/ax.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c68665c7260985ac8497ccafcea961f4a261c675/gdbserver/ax.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ax.cc?ref=c68665c7260985ac8497ccafcea961f4a261c675",
      "patch": "@@ -44,15 +44,12 @@ ax_vdebug (const char *fmt, ...)\n   va_end (ap);\n }\n \n-#define ax_debug_1(level, fmt, args...)\t\\\n+#define ax_debug(fmt, args...) \\\n   do {\t\t\t\t\t\t\\\n-    if (level <= debug_threads)\t\t\t\\\n+    if (debug_threads)\t\t\t\\\n       ax_vdebug ((fmt), ##args);\t\t\\\n   } while (0)\n \n-#define ax_debug(FMT, args...)\t\t\\\n-  ax_debug_1 (1, FMT, ##args)\n-\n /* This enum must exactly match what is documented in\n    gdb/doc/agentexpr.texi, including all the numerical values.  */\n "
    },
    {
      "sha": "372b5577958d3fbc26b847df4fb2f2f4f01d01fc",
      "filename": "gdbserver/debug.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c68665c7260985ac8497ccafcea961f4a261c675/gdbserver/debug.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c68665c7260985ac8497ccafcea961f4a261c675/gdbserver/debug.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/debug.cc?ref=c68665c7260985ac8497ccafcea961f4a261c675",
      "patch": "@@ -27,7 +27,7 @@ int remote_debug = 0;\n static FILE *debug_file = stderr;\n \n /* See debug.h.  */\n-int debug_threads;\n+bool debug_threads;\n \n /* Include timestamps in debugging output.  */\n int debug_timestamp;"
    },
    {
      "sha": "20cb4e733f266e3681ada54cf0b09f3ad2b509f3",
      "filename": "gdbserver/debug.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c68665c7260985ac8497ccafcea961f4a261c675/gdbserver/debug.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c68665c7260985ac8497ccafcea961f4a261c675/gdbserver/debug.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/debug.h?ref=c68665c7260985ac8497ccafcea961f4a261c675",
      "patch": "@@ -33,7 +33,7 @@ extern int using_threads;\n /* Enable miscellaneous debugging output.  The name is historical - it\n    was originally used to debug LinuxThreads support.  */\n \n-extern int debug_threads;\n+extern bool debug_threads;\n \n extern int debug_timestamp;\n "
    },
    {
      "sha": "021c7adc3085c4de3effc32f2fe7ac27ed999a50",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c68665c7260985ac8497ccafcea961f4a261c675/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c68665c7260985ac8497ccafcea961f4a261c675/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=c68665c7260985ac8497ccafcea961f4a261c675",
      "patch": "@@ -1380,12 +1380,12 @@ handle_monitor_command (char *mon, char *own_buf)\n {\n   if (strcmp (mon, \"set debug 1\") == 0)\n     {\n-      debug_threads = 1;\n+      debug_threads = true;\n       monitor_output (\"Debug output enabled.\\n\");\n     }\n   else if (strcmp (mon, \"set debug 0\") == 0)\n     {\n-      debug_threads = 0;\n+      debug_threads = false;\n       monitor_output (\"Debug output disabled.\\n\");\n     }\n   else if (strcmp (mon, \"set debug-hw-points 1\") == 0)\n@@ -3814,7 +3814,7 @@ captured_main (int argc, char *argv[])\n \t  *next_arg = NULL;\n \t}\n       else if (strcmp (*next_arg, \"--debug\") == 0)\n-\tdebug_threads = 1;\n+\tdebug_threads = true;\n       else if (startswith (*next_arg, \"--debug-format=\"))\n \t{\n \t  std::string error_msg"
    },
    {
      "sha": "0136f6e23473a9d9a2140bf4ddabaf822aff3e88",
      "filename": "gdbserver/tracepoint.cc",
      "status": "modified",
      "additions": 4,
      "deletions": 7,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c68665c7260985ac8497ccafcea961f4a261c675/gdbserver/tracepoint.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c68665c7260985ac8497ccafcea961f4a261c675/gdbserver/tracepoint.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/tracepoint.cc?ref=c68665c7260985ac8497ccafcea961f4a261c675",
      "patch": "@@ -77,17 +77,17 @@ trace_vdebug (const char *fmt, ...)\n   va_end (ap);\n }\n \n-#define trace_debug_1(level, fmt, args...)\t\\\n+#define trace_debug(fmt, args...)\t\\\n   do {\t\t\t\t\t\t\\\n-    if (level <= debug_threads)\t\t\\\n+    if (debug_threads)\t\t\t\t\\\n       trace_vdebug ((fmt), ##args);\t\t\\\n   } while (0)\n \n #else\n \n-#define trace_debug_1(level, fmt, args...)\t\\\n+#define trace_debug(fmt, args...)\t\\\n   do {\t\t\t\t\t\t\\\n-    if (level <= debug_threads)\t\t\t\\\n+    if (debug_threads)\t\t\t\t\\\n       {\t\t\t\t\t\t\\\n \tdebug_printf ((fmt), ##args);\t\t\\\n \tdebug_printf (\"\\n\");\t\t\t\\\n@@ -96,9 +96,6 @@ trace_vdebug (const char *fmt, ...)\n \n #endif\n \n-#define trace_debug(FMT, args...)\t\t\\\n-  trace_debug_1 (1, FMT, ##args)\n-\n /* Prefix exported symbols, for good citizenship.  All the symbols\n    that need exporting are defined in this module.  Note that all\n    these symbols must be tagged with IP_AGENT_EXPORT_*.  */"
    }
  ]
}