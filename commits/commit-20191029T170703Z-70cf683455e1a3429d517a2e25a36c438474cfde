{
  "sha": "70cf683455e1a3429d517a2e25a36c438474cfde",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzBjZjY4MzQ1NWUxYTM0MjlkNTE3YTJlMjVhMzZjNDM4NDc0Y2ZkZQ==",
  "commit": {
    "author": {
      "name": "Andrew Eikum",
      "email": "aeikum@codeweavers.com",
      "date": "2019-10-29T17:07:03Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-10-29T17:07:03Z"
    },
    "message": "When copying pe format files, copy the dos_message array, rather than re-initiialising it.\n\n\t* libcoff-in.h (struct pe_tdata): Add dos_message field.\n\t* libcoff.h: Regenerate.\n\t* peXXigen.c (_bfd_XXi_only_swap_filehdr_out): Copy the\n\tdos_message field rather than initialising it.\n\t(_bfd_XX_bfd_copy_private_bfd_data_common): Copy the dos_message\n\tfield.\n\t* peicode.h (pe_mkobject): Initialise the dos_message field.\n\t(pe_mkobject_hook): Copy the dos_message field.\n\t(pe_bfd_object_p): Copy the dos_message field.",
    "tree": {
      "sha": "4782e9620123c07950dfda5c2992a14ca5e05d7e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4782e9620123c07950dfda5c2992a14ca5e05d7e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/70cf683455e1a3429d517a2e25a36c438474cfde",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/70cf683455e1a3429d517a2e25a36c438474cfde",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/70cf683455e1a3429d517a2e25a36c438474cfde",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/70cf683455e1a3429d517a2e25a36c438474cfde/comments",
  "author": {
    "login": "aeikum",
    "id": 34554541,
    "node_id": "MDQ6VXNlcjM0NTU0NTQx",
    "avatar_url": "https://avatars.githubusercontent.com/u/34554541?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aeikum",
    "html_url": "https://github.com/aeikum",
    "followers_url": "https://api.github.com/users/aeikum/followers",
    "following_url": "https://api.github.com/users/aeikum/following{/other_user}",
    "gists_url": "https://api.github.com/users/aeikum/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aeikum/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aeikum/subscriptions",
    "organizations_url": "https://api.github.com/users/aeikum/orgs",
    "repos_url": "https://api.github.com/users/aeikum/repos",
    "events_url": "https://api.github.com/users/aeikum/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aeikum/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "efea62b44631289f995db16faf70979d6592580b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/efea62b44631289f995db16faf70979d6592580b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/efea62b44631289f995db16faf70979d6592580b"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 43,
    "deletions": 16
  },
  "files": [
    {
      "sha": "20d7d5a41a2fb13b8d7c1da14226842cc5b43f14",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70cf683455e1a3429d517a2e25a36c438474cfde/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70cf683455e1a3429d517a2e25a36c438474cfde/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=70cf683455e1a3429d517a2e25a36c438474cfde",
      "patch": "@@ -1,3 +1,15 @@\n+2019-10-29  Andrew Eikum  <aeikum@codeweavers.com>\n+\n+\t* libcoff-in.h (struct pe_tdata): Add dos_message field.\n+\t* libcoff.h: Regenerate.\n+\t* peXXigen.c (_bfd_XXi_only_swap_filehdr_out): Copy the\n+\tdos_message field rather than initialising it.\n+\t(_bfd_XX_bfd_copy_private_bfd_data_common): Copy the dos_message\n+\tfield.\n+\t* peicode.h (pe_mkobject): Initialise the dos_message field.\n+\t(pe_mkobject_hook): Copy the dos_message field.\n+\t(pe_bfd_object_p): Copy the dos_message field.\n+\n 2019-10-25  Alan Modra  <amodra@gmail.com>\n \n \tPR 4499"
    },
    {
      "sha": "031622f0187ff62b124c53a048b64eb929610356",
      "filename": "bfd/libcoff-in.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70cf683455e1a3429d517a2e25a36c438474cfde/bfd/libcoff-in.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70cf683455e1a3429d517a2e25a36c438474cfde/bfd/libcoff-in.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libcoff-in.h?ref=70cf683455e1a3429d517a2e25a36c438474cfde",
      "patch": "@@ -127,6 +127,7 @@ typedef struct pe_tdata\n   int dll;\n   int has_reloc_section;\n   int dont_strip_reloc;\n+  int dos_message[16];\n   bfd_boolean insert_timestamp;\n   bfd_boolean (*in_reloc_p) (bfd *, reloc_howto_type *);\n   flagword real_flags;"
    },
    {
      "sha": "093f1b4159474eff1c3ed706684f1bf3bc6bc197",
      "filename": "bfd/libcoff.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70cf683455e1a3429d517a2e25a36c438474cfde/bfd/libcoff.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70cf683455e1a3429d517a2e25a36c438474cfde/bfd/libcoff.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libcoff.h?ref=70cf683455e1a3429d517a2e25a36c438474cfde",
      "patch": "@@ -131,6 +131,7 @@ typedef struct pe_tdata\n   int dll;\n   int has_reloc_section;\n   int dont_strip_reloc;\n+  int dos_message[16];\n   bfd_boolean insert_timestamp;\n   bfd_boolean (*in_reloc_p) (bfd *, reloc_howto_type *);\n   flagword real_flags;"
    },
    {
      "sha": "1f55f927dc881d0c62155a2d54470f558f9ebe13",
      "filename": "bfd/peXXigen.c",
      "status": "modified",
      "additions": 5,
      "deletions": 16,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70cf683455e1a3429d517a2e25a36c438474cfde/bfd/peXXigen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70cf683455e1a3429d517a2e25a36c438474cfde/bfd/peXXigen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/peXXigen.c?ref=70cf683455e1a3429d517a2e25a36c438474cfde",
      "patch": "@@ -863,22 +863,9 @@ _bfd_XXi_only_swap_filehdr_out (bfd * abfd, void * in, void * out)\n \n   /* This next collection of data are mostly just characters.  It\n      appears to be constant within the headers put on NT exes.  */\n-  filehdr_in->pe.dos_message[0]  = 0x0eba1f0e;\n-  filehdr_in->pe.dos_message[1]  = 0xcd09b400;\n-  filehdr_in->pe.dos_message[2]  = 0x4c01b821;\n-  filehdr_in->pe.dos_message[3]  = 0x685421cd;\n-  filehdr_in->pe.dos_message[4]  = 0x70207369;\n-  filehdr_in->pe.dos_message[5]  = 0x72676f72;\n-  filehdr_in->pe.dos_message[6]  = 0x63206d61;\n-  filehdr_in->pe.dos_message[7]  = 0x6f6e6e61;\n-  filehdr_in->pe.dos_message[8]  = 0x65622074;\n-  filehdr_in->pe.dos_message[9]  = 0x6e757220;\n-  filehdr_in->pe.dos_message[10] = 0x206e6920;\n-  filehdr_in->pe.dos_message[11] = 0x20534f44;\n-  filehdr_in->pe.dos_message[12] = 0x65646f6d;\n-  filehdr_in->pe.dos_message[13] = 0x0a0d0d2e;\n-  filehdr_in->pe.dos_message[14] = 0x24;\n-  filehdr_in->pe.dos_message[15] = 0x0;\n+  memcpy (filehdr_in->pe.dos_message, pe_data (abfd)->dos_message,\n+\t  sizeof (filehdr_in->pe.dos_message));\n+\n   filehdr_in->pe.nt_signature = IMAGE_NT_SIGNATURE;\n \n   H_PUT_16 (abfd, filehdr_in->f_magic, filehdr_out->f_magic);\n@@ -2979,6 +2966,8 @@ _bfd_XX_bfd_copy_private_bfd_data_common (bfd * ibfd, bfd * obfd)\n       && ! (pe_data (ibfd)->real_flags & IMAGE_FILE_RELOCS_STRIPPED))\n     pe_data (obfd)->dont_strip_reloc = 1;\n \n+  memcpy (ope->dos_message, ipe->dos_message, sizeof (ope->dos_message));\n+\n   /* The file offsets contained in the debug directory need rewriting.  */\n   if (ope->pe_opthdr.DataDirectory[PE_DEBUG_DATA].Size != 0)\n     {"
    },
    {
      "sha": "e9d205a01a10437a95fc15c85094ddc5985e26c4",
      "filename": "bfd/peicode.h",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/70cf683455e1a3429d517a2e25a36c438474cfde/bfd/peicode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/70cf683455e1a3429d517a2e25a36c438474cfde/bfd/peicode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/peicode.h?ref=70cf683455e1a3429d517a2e25a36c438474cfde",
      "patch": "@@ -271,6 +271,24 @@ pe_mkobject (bfd * abfd)\n   /* in_reloc_p is architecture dependent.  */\n   pe->in_reloc_p = in_reloc_p;\n \n+  /* Default DOS message string.  */\n+  pe->dos_message[0]  = 0x0eba1f0e;\n+  pe->dos_message[1]  = 0xcd09b400;\n+  pe->dos_message[2]  = 0x4c01b821;\n+  pe->dos_message[3]  = 0x685421cd;\n+  pe->dos_message[4]  = 0x70207369;\n+  pe->dos_message[5]  = 0x72676f72;\n+  pe->dos_message[6]  = 0x63206d61;\n+  pe->dos_message[7]  = 0x6f6e6e61;\n+  pe->dos_message[8]  = 0x65622074;\n+  pe->dos_message[9]  = 0x6e757220;\n+  pe->dos_message[10] = 0x206e6920;\n+  pe->dos_message[11] = 0x20534f44;\n+  pe->dos_message[12] = 0x65646f6d;\n+  pe->dos_message[13] = 0x0a0d0d2e;\n+  pe->dos_message[14] = 0x24;\n+  pe->dos_message[15] = 0x0;\n+\n   memset (& pe->pe_opthdr, 0, sizeof pe->pe_opthdr);\n   return TRUE;\n }\n@@ -325,6 +343,9 @@ pe_mkobject_hook (bfd * abfd,\n     coff_data (abfd) ->flags = 0;\n #endif\n \n+  memcpy (pe->dos_message, internal_f->pe.dos_message,\n+\t  sizeof (pe->dos_message));\n+\n   return (void *) pe;\n }\n \n@@ -1456,6 +1477,9 @@ pe_bfd_object_p (bfd * abfd)\n       return NULL;\n     }\n \n+  memcpy (internal_f.pe.dos_message, dos_hdr.dos_message,\n+\t  sizeof (internal_f.pe.dos_message));\n+\n   /* Read the optional header, which has variable size.  */\n   opt_hdr_size = internal_f.f_opthdr;\n "
    }
  ]
}