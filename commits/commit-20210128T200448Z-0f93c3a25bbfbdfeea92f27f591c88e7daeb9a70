{
  "sha": "0f93c3a25bbfbdfeea92f27f591c88e7daeb9a70",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGY5M2MzYTI1YmJmYmRmZWVhOTJmMjdmNTkxYzg4ZTdkYWViOWE3MA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-01-27T18:20:35Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-01-28T20:04:48Z"
    },
    "message": "gdb: remove unneeded switch_to_thread from thr_try_catch_cmd\n\nI spotted that every time thr_try_catch_cmd is called GDB has already\nswitched to the required thread.  The call to switch_to_thread at the\nhead of thr_try_catch_cmd is therefore redundant.\n\nThis commit replaces the call to switch_to_thread with an assertion\nthat we already have the required thread selected.\n\nI also extended the header comment on thr_try_catch_cmd to make it\nclearer when this function could throw an exception.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* thread.c (thr_try_catch_cmd): Replace swith_to_thread with an\n\tassert.  Extend the header comment.",
    "tree": {
      "sha": "00e62ee66218a7247d296c5ea6c8a0126cded1a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/00e62ee66218a7247d296c5ea6c8a0126cded1a9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0f93c3a25bbfbdfeea92f27f591c88e7daeb9a70",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f93c3a25bbfbdfeea92f27f591c88e7daeb9a70",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0f93c3a25bbfbdfeea92f27f591c88e7daeb9a70",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f93c3a25bbfbdfeea92f27f591c88e7daeb9a70/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f237f998d1168139d599c550d54169cd8f94052d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f237f998d1168139d599c550d54169cd8f94052d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f237f998d1168139d599c550d54169cd8f94052d"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 9,
    "deletions": 3
  },
  "files": [
    {
      "sha": "1de9d30f051ce5eb92c50a4ede8190d789bcec6b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f93c3a25bbfbdfeea92f27f591c88e7daeb9a70/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f93c3a25bbfbdfeea92f27f591c88e7daeb9a70/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0f93c3a25bbfbdfeea92f27f591c88e7daeb9a70",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* thread.c (thr_try_catch_cmd): Replace swith_to_thread with an\n+\tassert.  Extend the header comment.\n+\n 2021-01-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* Makefile.in (SUBDIR_TUI_SRCS): Add tui/tui-location.c."
    },
    {
      "sha": "821070672171ced92106aee99df897b051a310eb",
      "filename": "gdb/thread.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f93c3a25bbfbdfeea92f27f591c88e7daeb9a70/gdb/thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f93c3a25bbfbdfeea92f27f591c88e7daeb9a70/gdb/thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread.c?ref=0f93c3a25bbfbdfeea92f27f591c88e7daeb9a70",
      "patch": "@@ -1466,15 +1466,16 @@ tp_array_compar_descending (const thread_info_ref &a, const thread_info_ref &b)\n   return (a->per_inf_num > b->per_inf_num);\n }\n \n-/* Switch to thread THR and execute CMD.\n+/* Assuming that THR is the current thread, execute CMD.\n    FLAGS.QUIET controls the printing of the thread information.\n-   FLAGS.CONT and FLAGS.SILENT control how to handle errors.  */\n+   FLAGS.CONT and FLAGS.SILENT control how to handle errors.  Can throw an\n+   exception if !FLAGS.SILENT and !FLAGS.CONT and CMD fails.  */\n \n static void\n thr_try_catch_cmd (thread_info *thr, const char *cmd, int from_tty,\n \t\t   const qcs_flags &flags)\n {\n-  switch_to_thread (thr);\n+  gdb_assert (is_current_thread (thr));\n \n   /* The thread header is computed before running the command since\n      the command can change the inferior, which is not permitted"
    }
  ]
}