{
  "sha": "77d036789aab73c90dc7f4c798f34748b03de726",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzdkMDM2Nzg5YWFiNzNjOTBkYzdmNGM3OThmMzQ3NDhiMDNkZTcyNg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-09-22T04:14:29Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-09-22T04:14:29Z"
    },
    "message": "[gdb/testsuite] Allow some tests in gdb.base/restore.exp to be unsupported\n\nWe currently run into:\n...\n248       n = callee1 (n + l5);\n(gdb) PASS: gdb.base/restore.exp: caller5 calls callee1; return callee now\nprint l1\n$51 = <optimized out>\n(gdb) FAIL: gdb.base/restore.exp: caller5 calls callee1; return restored l1 \\\n  to 32492\n...\n\nThe problem is that we try to access the value of l1 in function caller5, but\nvariable l1 has no DW_AT_location attribute.  Since l1 is declared using the\nregister keyword, it's valid for gcc to emit no DW_AT_location at -O0.\n\nChange the FAIL into an UNSUPPORTED.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2019-09-22  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/restore.exp: Allow register variables to be optimized out at\n\t-O0.",
    "tree": {
      "sha": "25d96888ca7949d5cc983878d4bf31a7cb167784",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/25d96888ca7949d5cc983878d4bf31a7cb167784"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/77d036789aab73c90dc7f4c798f34748b03de726",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77d036789aab73c90dc7f4c798f34748b03de726",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/77d036789aab73c90dc7f4c798f34748b03de726",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77d036789aab73c90dc7f4c798f34748b03de726/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7ab78ccbbb0d0918c293ade07bea59d789ea7d63",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ab78ccbbb0d0918c293ade07bea59d789ea7d63",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7ab78ccbbb0d0918c293ade07bea59d789ea7d63"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 16,
    "deletions": 2
  },
  "files": [
    {
      "sha": "37e323f747c69804939755d5c171283847953afc",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77d036789aab73c90dc7f4c798f34748b03de726/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77d036789aab73c90dc7f4c798f34748b03de726/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=77d036789aab73c90dc7f4c798f34748b03de726",
      "patch": "@@ -1,3 +1,8 @@\n+2019-09-22  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/restore.exp: Allow register variables to be optimized out at\n+\t-O0.\n+\n 2019-09-20  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* gdb.arch/spu-info.exp: Remove file."
    },
    {
      "sha": "56c2f5e3dce238c097de8eccc265b4182506863e",
      "filename": "gdb/testsuite/gdb.base/restore.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77d036789aab73c90dc7f4c798f34748b03de726/gdb/testsuite/gdb.base/restore.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77d036789aab73c90dc7f4c798f34748b03de726/gdb/testsuite/gdb.base/restore.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/restore.exp?ref=77d036789aab73c90dc7f4c798f34748b03de726",
      "patch": "@@ -73,8 +73,17 @@ proc restore_tests { } {\n \t    # they should be.\n             for {set var 1} {$var <= $c} {incr var} {\n                 set expected [expr 0x7eeb + $var]\n-\t        gdb_test \"print l$var\" \" = $expected\" \\\n-\t\t    \"caller$c calls callee$e; return restored l$var to $expected\"\n+\t\tset test \"caller$c calls callee$e; return restored l$var to $expected\"\n+\t\tset pass_pattern \" = $expected\"\n+\t\tset unsupported_pattern \" = <optimized out>\"\n+\t        gdb_test_multiple \"print l$var\" $test {\n+\t\t    -re \"\\[\\r\\n\\]*(?:$pass_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\t\t\tpass $test\n+\t\t    }\n+\t\t    -re \"\\[\\r\\n\\]*(?:$unsupported_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n+\t\t\tunsupported $test\n+\t\t    }\n+\t\t}\n             }\n         }\n     }"
    }
  ]
}