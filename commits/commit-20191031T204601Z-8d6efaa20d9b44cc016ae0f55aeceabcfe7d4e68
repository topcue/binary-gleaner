{
  "sha": "8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGQ2ZWZhYTIwZDliNDRjYzAxNmFlMGY1NWFlY2VhYmNmZTdkNGU2OA==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-31T00:10:13Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-31T20:46:01Z"
    },
    "message": "Don't read agent symbols when disabled\n\nThis avoids unnecessary work, and becomes important with the patch in\nhttps://sourceware.org/ml/gdb-patches/2019-10/msg01143.html\n\ngdb/ChangeLog:\n\n2019-10-31  Christian Biesinger  <cbiesinger@google.com>\n\n\t* agent.c (set_can_use_agent): When the setting is turned on,\n\tlook up agent symbols if we don't have them yet.\n\t(agent_new_objfile): Don't look up agent symbols when the agent\n\tsetting is off.\n\nChange-Id: I6523a5640c95d38299998050a6c620e51096e8ed",
    "tree": {
      "sha": "aa5438f484f3357015e617c0fee2efa303cf390d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aa5438f484f3357015e617c0fee2efa303cf390d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "33cb1647d68d9a57e6659a9392044ee0276fc24e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/33cb1647d68d9a57e6659a9392044ee0276fc24e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/33cb1647d68d9a57e6659a9392044ee0276fc24e"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 22,
    "deletions": 4
  },
  "files": [
    {
      "sha": "3c26e6d6f373f0fed54f2abcd6eaacb004ed10c5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68",
      "patch": "@@ -1,3 +1,10 @@\n+2019-10-31  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* agent.c (set_can_use_agent): When the setting is turned on,\n+\tlook up agent symbols if we don't have them yet.\n+\t(agent_new_objfile): Don't look up agent symbols when the agent\n+\tsetting is off.\n+\n 2019-10-31  Christian Biesinger  <cbiesinger@google.com>\n \n \t* config.in: Regenerate."
    },
    {
      "sha": "da251a3af7b7c52b83d31709a540b9e5ddce7d85",
      "filename": "gdb/agent.c",
      "status": "modified",
      "additions": 15,
      "deletions": 4,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68/gdb/agent.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68/gdb/agent.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/agent.c?ref=8d6efaa20d9b44cc016ae0f55aeceabcfe7d4e68",
      "patch": "@@ -20,6 +20,8 @@\n #include \"gdbcmd.h\"\n #include \"target.h\"\n #include \"gdbsupport/agent.h\"\n+#include \"observable.h\"\n+#include \"objfiles.h\"\n \n /* Enum strings for \"set|show agent\".  */\n \n@@ -46,20 +48,29 @@ show_can_use_agent (struct ui_file *file, int from_tty,\n static void\n set_can_use_agent (const char *args, int from_tty, struct cmd_list_element *c)\n {\n-  if (target_use_agent (can_use_agent == can_use_agent_on) == 0)\n+  bool can_use = (can_use_agent == can_use_agent_on);\n+  if (can_use && !agent_loaded_p ())\n+    {\n+      /* Since the setting was off, we may not have observed the objfiles and\n+         therefore not looked up the required symbols.  Do so now.  */\n+      for (objfile *objfile : current_program_space->objfiles ())\n+\tif (agent_look_up_symbols (objfile) == 0)\n+\t  break;\n+    }\n+  if (target_use_agent (can_use) == 0)\n     /* Something wrong during setting, set flag to default value.  */\n     can_use_agent = can_use_agent_off;\n }\n \n-#include \"observable.h\"\n-#include \"objfiles.h\"\n-\n static void\n agent_new_objfile (struct objfile *objfile)\n {\n   if (objfile == NULL || agent_loaded_p ())\n     return;\n \n+  if (can_use_agent == can_use_agent_off)\n+    return;\n+\n   agent_look_up_symbols (objfile);\n }\n "
    }
  ]
}