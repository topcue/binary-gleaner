{
  "sha": "22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjJhYTYyMjNhMGY2ZjdiOGY1NDM5MTY2ZGUyYmJiYjk0MGNhOTgwNA==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:11:55Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:08Z"
    },
    "message": "gdbserver: turn target op 'supports_hardware_single_step' into a method\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's supports_hardware_single_step op into\n\ta method of process_target.\n\n\t* target.h (struct process_stratum_target): Remove the target op.\n\t(class process_target): Add the target op.\n\t(target_supports_hardware_single_step): Update the macro.\n\t(target_can_do_hardware_single_step): Remove declaration.\n\t* target.cc (process_target::supports_hardware_single_step): Define.\n\t(target_can_do_hardware_single_step): Remove.\n\n\tUpdate the derived classes and callers below.\n\n\t* linux-low.h (class linux_process_target): Update.\n\t* linux-low.cc (linux_target_ops): Update.\n\t(linux_supports_hardware_single_step): Turn into ...\n\t(linux_process_target::supports_hardware_single_step): ... this.\n\t* lynx-low.h (class lynx_process_target): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t(lynx_process_target::supports_hardware_single_step): Define.\n\t* nto-low.h (class nto_process_target): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t(nto_process_target::supports_hardware_single_step): Define.\n\t* win32-low.h (class win32_process_target): Update.\n\t* win32-low.cc (win32_target_ops): Update.\n\t(win32_process_target::supports_hardware_single_step): Define.",
    "tree": {
      "sha": "5c38b19a4e0189190b803480d4f7c0fedd771dd7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5c38b19a4e0189190b803480d4f7c0fedd771dd7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "93fe88b24c7e644e7b0947256bb32c2139d8afe5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93fe88b24c7e644e7b0947256bb32c2139d8afe5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/93fe88b24c7e644e7b0947256bb32c2139d8afe5"
    }
  ],
  "stats": {
    "total": 87,
    "additions": 66,
    "deletions": 21
  },
  "files": [
    {
      "sha": "9757bc0fa3c1eba1f8fa116a9ae94c33bfe0c975",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
      "patch": "@@ -1,3 +1,31 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's supports_hardware_single_step op into\n+\ta method of process_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target op.\n+\t(class process_target): Add the target op.\n+\t(target_supports_hardware_single_step): Update the macro.\n+\t(target_can_do_hardware_single_step): Remove declaration.\n+\t* target.cc (process_target::supports_hardware_single_step): Define.\n+\t(target_can_do_hardware_single_step): Remove.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* linux-low.h (class linux_process_target): Update.\n+\t* linux-low.cc (linux_target_ops): Update.\n+\t(linux_supports_hardware_single_step): Turn into ...\n+\t(linux_process_target::supports_hardware_single_step): ... this.\n+\t* lynx-low.h (class lynx_process_target): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t(lynx_process_target::supports_hardware_single_step): Define.\n+\t* nto-low.h (class nto_process_target): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t(nto_process_target::supports_hardware_single_step): Define.\n+\t* win32-low.h (class win32_process_target): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\t(win32_process_target::supports_hardware_single_step): Define.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's {supports_}stopped_by_hw_breakpoint"
    },
    {
      "sha": "fec2c3c56737706579574872a79a72b50ac92ead",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
      "patch": "@@ -6032,8 +6032,8 @@ linux_process_target::supports_stopped_by_hw_breakpoint ()\n \n /* Implement the supports_hardware_single_step target_ops method.  */\n \n-static int\n-linux_supports_hardware_single_step (void)\n+bool\n+linux_process_target::supports_hardware_single_step ()\n {\n   return can_hardware_single_step ();\n }\n@@ -7376,7 +7376,6 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-  linux_supports_hardware_single_step,\n   linux_stopped_by_watchpoint,\n   linux_stopped_data_address,\n #if defined(__UCLIBC__) && defined(HAS_NOMMU)\t      \\"
    },
    {
      "sha": "57fc9a594156c7b5733409479f28a6f2f6b491f6",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
      "patch": "@@ -330,6 +330,8 @@ class linux_process_target : public process_target\n   bool stopped_by_hw_breakpoint () override;\n \n   bool supports_stopped_by_hw_breakpoint () override;\n+\n+  bool supports_hardware_single_step () override;\n };\n \n #define get_thread_lwp(thr) ((struct lwp_info *) (thread_target_data (thr)))"
    },
    {
      "sha": "ea328b7efe335f3155e05cf8fff8db4232fa758a",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
      "patch": "@@ -722,14 +722,19 @@ lynx_process_target::request_interrupt ()\n   kill (lynx_ptid_get_pid (inferior_ptid), SIGINT);\n }\n \n+bool\n+lynx_process_target::supports_hardware_single_step ()\n+{\n+  return true;\n+}\n+\n /* The LynxOS target ops object.  */\n \n static lynx_process_target the_lynx_target;\n \n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  target_can_do_hardware_single_step,\n   NULL,  /* stopped_by_watchpoint */\n   NULL,  /* stopped_data_address */\n   NULL,  /* read_offsets */"
    },
    {
      "sha": "4253f1259c29e6650a10e6ce89c3377c59aba368",
      "filename": "gdbserver/lynx-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/lynx-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/lynx-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.h?ref=22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
      "patch": "@@ -89,6 +89,8 @@ class lynx_process_target : public process_target\n \t\t    int len) override;\n \n   void request_interrupt () override;\n+\n+  bool supports_hardware_single_step () override;\n };\n \n /* The inferior's target description.  This is a global because the"
    },
    {
      "sha": "3e10436df3dc0702aa44e546caea1f685b9fd8ee",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
      "patch": "@@ -869,6 +869,12 @@ nto_process_target::remove_point (enum raw_bkpt_type type, CORE_ADDR addr,\n   return nto_breakpoint (addr, wtype, -1);\n }\n \n+bool\n+nto_process_target::supports_hardware_single_step ()\n+{\n+  return true;\n+}\n+\n /* Check if the reason of stop for current thread (CURRENT_INFERIOR) is\n    a watchpoint.\n \n@@ -950,7 +956,6 @@ nto_sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  target_can_do_hardware_single_step,\n   nto_stopped_by_watchpoint,\n   nto_stopped_data_address,\n   NULL, /* nto_read_offsets */"
    },
    {
      "sha": "001ccb6687cf79b24e9ecd434a4cbee6539ec1f4",
      "filename": "gdbserver/nto-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/nto-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/nto-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.h?ref=22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
      "patch": "@@ -92,6 +92,8 @@ class nto_process_target : public process_target\n \n   int remove_point (enum raw_bkpt_type type, CORE_ADDR addr,\n \t\t    int size, raw_breakpoint *bp) override;\n+\n+  bool supports_hardware_single_step () override;\n };\n \n /* The inferior's target description.  This is a global because the"
    },
    {
      "sha": "09b3a633fc8308e4aedaf6026a3a272f6b03fbd9",
      "filename": "gdbserver/target.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/target.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/target.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.cc?ref=22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
      "patch": "@@ -316,14 +316,6 @@ kill_inferior (process_info *proc)\n   return the_target->pt->kill (proc);\n }\n \n-/* Target can do hardware single step.  */\n-\n-int\n-target_can_do_hardware_single_step (void)\n-{\n-  return 1;\n-}\n-\n /* Default implementation for breakpoint_kind_for_pc.\n \n    The default behavior for targets that don't implement breakpoint_kind_for_pc\n@@ -471,3 +463,9 @@ process_target::supports_stopped_by_hw_breakpoint ()\n {\n   return false;\n }\n+\n+bool\n+process_target::supports_hardware_single_step ()\n+{\n+  return false;\n+}"
    },
    {
      "sha": "92b85cb061eb1d18b8e6c8334e63dcd11d1d2465",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 4,
      "deletions": 7,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
      "patch": "@@ -70,9 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Returns true if the target can do hardware single step.  */\n-  int (*supports_hardware_single_step) (void);\n-\n   /* Returns 1 if target was stopped due to a watchpoint hit, 0 otherwise.  */\n \n   int (*stopped_by_watchpoint) (void);\n@@ -476,6 +473,9 @@ class process_target\n   /* Returns true if the target knows whether a trap was caused by a\n      HW breakpoint triggering.  */\n   virtual bool supports_stopped_by_hw_breakpoint ();\n+\n+  /* Returns true if the target can do hardware single step.  */\n+  virtual bool supports_hardware_single_step ();\n };\n \n extern process_stratum_target *the_target;\n@@ -668,8 +668,7 @@ target_read_btrace_conf (struct btrace_target_info *tinfo,\n   the_target->pt->supports_stopped_by_hw_breakpoint ()\n \n #define target_supports_hardware_single_step() \\\n-  (the_target->supports_hardware_single_step ? \\\n-   (*the_target->supports_hardware_single_step) () : 0)\n+  the_target->pt->supports_hardware_single_step ()\n \n #define target_stopped_by_hw_breakpoint() \\\n   the_target->pt->stopped_by_hw_breakpoint ()\n@@ -720,8 +719,6 @@ int set_desired_thread ();\n \n const char *target_pid_to_str (ptid_t);\n \n-int target_can_do_hardware_single_step (void);\n-\n int default_breakpoint_kind_from_pc (CORE_ADDR *pcptr);\n \n #endif /* GDBSERVER_TARGET_H */"
    },
    {
      "sha": "2862a9c241cd3f73b21854b0156dd2cd46d7c4be",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
      "patch": "@@ -1728,6 +1728,12 @@ win32_process_target::request_interrupt ()\n   soft_interrupt_requested = 1;\n }\n \n+bool\n+win32_process_target::supports_hardware_single_step ()\n+{\n+  return true;\n+}\n+\n #ifdef _WIN32_WCE\n int\n win32_error_to_fileio_error (DWORD err)\n@@ -1838,7 +1844,6 @@ win32_sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  target_can_do_hardware_single_step,\n   win32_stopped_by_watchpoint,\n   win32_stopped_data_address,\n   NULL, /* read_offsets */"
    },
    {
      "sha": "c5f9a13e02946e50636609ea74ba9e40c646ac95",
      "filename": "gdbserver/win32-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/win32-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22aa6223a0f6f7b8f5439166de2bbbb940ca9804/gdbserver/win32-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.h?ref=22aa6223a0f6f7b8f5439166de2bbbb940ca9804",
      "patch": "@@ -146,6 +146,8 @@ class win32_process_target : public process_target\n \n   int remove_point (enum raw_bkpt_type type, CORE_ADDR addr,\n \t\t    int size, raw_breakpoint *bp) override;\n+\n+  bool supports_hardware_single_step () override;\n };\n \n /* Retrieve the context for this thread, if not already retrieved.  */"
    }
  ]
}