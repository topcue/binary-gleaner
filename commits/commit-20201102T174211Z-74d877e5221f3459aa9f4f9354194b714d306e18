{
  "sha": "74d877e5221f3459aa9f4f9354194b714d306e18",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzRkODc3ZTUyMjFmMzQ1OWFhOWY0ZjkzNTQxOTRiNzE0ZDMwNmUxOA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-09-09T10:26:22Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-11-02T17:42:11Z"
    },
    "message": "gdb: new function to wrap up executing command line scripts/commands\n\nSmall refactor to wrap up executing the scripts and commands passed\nusing the -x, -ex, -ix, -iex command line flags.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* main.c (execute_cmdargs): New function.\n\t(captured_main_1): Make use of execute_cmdargs.",
    "tree": {
      "sha": "a87a21a30a91ea1030503cabbca2848e20a6aee1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a87a21a30a91ea1030503cabbca2848e20a6aee1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/74d877e5221f3459aa9f4f9354194b714d306e18",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74d877e5221f3459aa9f4f9354194b714d306e18",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/74d877e5221f3459aa9f4f9354194b714d306e18",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74d877e5221f3459aa9f4f9354194b714d306e18/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "64aaad6349d2b2c45063a5383f877ce9a3a0c354",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/64aaad6349d2b2c45063a5383f877ce9a3a0c354",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/64aaad6349d2b2c45063a5383f877ce9a3a0c354"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 27,
    "deletions": 32
  },
  "files": [
    {
      "sha": "4356fa75df33de8b8b3fa0f449d8e167c53c81ab",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74d877e5221f3459aa9f4f9354194b714d306e18/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74d877e5221f3459aa9f4f9354194b714d306e18/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=74d877e5221f3459aa9f4f9354194b714d306e18",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* main.c (execute_cmdargs): New function.\n+\t(captured_main_1): Make use of execute_cmdargs.\n+\n 2020-11-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* NEWS: Mention changes to config file search path."
    },
    {
      "sha": "d3a6637e8d4f769f8b72a61d79cefbb1efc35688",
      "filename": "gdb/main.c",
      "status": "modified",
      "additions": 22,
      "deletions": 32,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74d877e5221f3459aa9f4f9354194b714d306e18/gdb/main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74d877e5221f3459aa9f4f9354194b714d306e18/gdb/main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/main.c?ref=74d877e5221f3459aa9f4f9354194b714d306e18",
      "patch": "@@ -515,6 +515,26 @@ struct cmdarg\n   char *string;\n };\n \n+/* From CMDARG_VEC execute command files (matching FILE_TYPE) or commands\n+   (matching CMD_TYPE).  Update the value in *RET if and scripts or\n+   commands are executed.  */\n+\n+static void\n+execute_cmdargs (const std::vector<struct cmdarg> *cmdarg_vec,\n+\t\t cmdarg_kind file_type, cmdarg_kind cmd_type,\n+\t\t int *ret)\n+{\n+  for (const auto &cmdarg_p : *cmdarg_vec)\n+    {\n+      if (cmdarg_p.type == file_type)\n+\t*ret = catch_command_errors (source_script, cmdarg_p.string,\n+\t\t\t\t     !batch_flag);\n+      else if (cmdarg_p.type == cmd_type)\n+\t*ret = catch_command_errors (execute_command, cmdarg_p.string,\n+\t\t\t\t     !batch_flag);\n+    }\n+}\n+\n static void\n captured_main_1 (struct captured_main_args *context)\n {\n@@ -1069,22 +1089,7 @@ captured_main_1 (struct captured_main_args *context)\n     ret = catch_command_errors (source_script, home_gdbinit.c_str (), 0);\n \n   /* Process '-ix' and '-iex' options early.  */\n-  for (i = 0; i < cmdarg_vec.size (); i++)\n-    {\n-      const struct cmdarg &cmdarg_p = cmdarg_vec[i];\n-\n-      switch (cmdarg_p.type)\n-\t{\n-\tcase CMDARG_INIT_FILE:\n-\t  ret = catch_command_errors (source_script, cmdarg_p.string,\n-\t\t\t\t      !batch_flag);\n-\t  break;\n-\tcase CMDARG_INIT_COMMAND:\n-\t  ret = catch_command_errors (execute_command, cmdarg_p.string,\n-\t\t\t\t      !batch_flag);\n-\t  break;\n-\t}\n-    }\n+  execute_cmdargs (&cmdarg_vec, CMDARG_INIT_FILE, CMDARG_INIT_COMMAND, &ret);\n \n   /* Now perform all the actions indicated by the arguments.  */\n   if (cdarg != NULL)\n@@ -1195,22 +1200,7 @@ captured_main_1 (struct captured_main_args *context)\n     load_auto_scripts_for_objfile (objfile);\n \n   /* Process '-x' and '-ex' options.  */\n-  for (i = 0; i < cmdarg_vec.size (); i++)\n-    {\n-      const struct cmdarg &cmdarg_p = cmdarg_vec[i];\n-\n-      switch (cmdarg_p.type)\n-\t{\n-\tcase CMDARG_FILE:\n-\t  ret = catch_command_errors (source_script, cmdarg_p.string,\n-\t\t\t\t      !batch_flag);\n-\t  break;\n-\tcase CMDARG_COMMAND:\n-\t  ret = catch_command_errors (execute_command, cmdarg_p.string,\n-\t\t\t\t      !batch_flag);\n-\t  break;\n-\t}\n-    }\n+  execute_cmdargs (&cmdarg_vec, CMDARG_FILE, CMDARG_COMMAND, &ret);\n \n   /* Read in the old history after all the command files have been\n      read.  */"
    }
  ]
}