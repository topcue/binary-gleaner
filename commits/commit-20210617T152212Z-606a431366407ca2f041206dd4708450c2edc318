{
  "sha": "606a431366407ca2f041206dd4708450c2edc318",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjA2YTQzMTM2NjQwN2NhMmYwNDEyMDZkZDQ3MDg0NTBjMmVkYzMxOA==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-06-17T15:16:55Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-06-17T15:22:12Z"
    },
    "message": "scoped_ignore_signal: Use sigprocmask+sigtimedwait instead of signal\n\nThe problem with using signal(...) to temporarily ignore a signal, is\nthat that changes the the signal disposition for the whole process.\nIf multiple threads do it at the same time, you have a race.\n\nFix this by using sigprocmask + sigtimedwait to implement the ignoring\ninstead, if available, which I think probably means everywhere except\nWindows nowadays.  This way, we only change the signal mask for the\ncurrent thread, so there's no race.\n\nChange-Id: Idfe3fb08327ef8cae926f3de9ee81c56a83b1738\n\ngdbsupport/ChangeLog:\nyyyy-mm-dd  Pedro Alves  <pedro@palves.net>\n\n\t* scoped_ignore_signal.h\n\t(scoped_ignore_signal::scoped_ignore_signal)\n\t[HAVE_SIGPROCMASK]: Use sigprocmask to block the signal instead of\n\tchanging the signal disposition for the whole process.\n\t(scoped_ignore_signal::~scoped_ignore_signal) [HAVE_SIGPROCMASK]:\n\tUse sigtimedwait and sigprocmask to flush and unblock the signal.",
    "tree": {
      "sha": "5633ab257fb5343875cfcddb848c2c70f2f98760",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5633ab257fb5343875cfcddb848c2c70f2f98760"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/606a431366407ca2f041206dd4708450c2edc318",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/606a431366407ca2f041206dd4708450c2edc318",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/606a431366407ca2f041206dd4708450c2edc318",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/606a431366407ca2f041206dd4708450c2edc318/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6a7f1c20e82c349a2d4c977a27319e895e8ca284",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6a7f1c20e82c349a2d4c977a27319e895e8ca284",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6a7f1c20e82c349a2d4c977a27319e895e8ca284"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 44,
    "deletions": 2
  },
  "files": [
    {
      "sha": "d054899333344cb002b20824f2ca59f9d131d6d8",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/606a431366407ca2f041206dd4708450c2edc318/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/606a431366407ca2f041206dd4708450c2edc318/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=606a431366407ca2f041206dd4708450c2edc318",
      "patch": "@@ -1,3 +1,12 @@\n+2021-06-17  Pedro Alves  <pedro@palves.net>\n+\n+\t* scoped_ignore_signal.h\n+\t(scoped_ignore_signal::scoped_ignore_signal)\n+\t[HAVE_SIGPROCMASK]: Use sigprocmask to block the signal instead of\n+\tchanging the signal disposition for the whole process.\n+\t(scoped_ignore_signal::~scoped_ignore_signal) [HAVE_SIGPROCMASK]:\n+\tUse sigtimedwait and sigprocmask to flush and unblock the signal.\n+\n 2021-06-17  Pedro Alves  <pedro@palves.net>\n \n \t* scoped_ignore_sigttou.h: New file, moved from gdb/ and renamed."
    },
    {
      "sha": "55a921cb332891a4a92d265533bddb7f34ef59d2",
      "filename": "gdbsupport/scoped_ignore_signal.h",
      "status": "modified",
      "additions": 35,
      "deletions": 2,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/606a431366407ca2f041206dd4708450c2edc318/gdbsupport/scoped_ignore_signal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/606a431366407ca2f041206dd4708450c2edc318/gdbsupport/scoped_ignore_signal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/scoped_ignore_signal.h?ref=606a431366407ca2f041206dd4708450c2edc318",
      "patch": "@@ -22,26 +22,59 @@\n \n #include <signal.h>\n \n-/* RAII class used to ignore a signal in a scope.  */\n+/* RAII class used to ignore a signal in a scope.  If sigprocmask is\n+   supported, then the signal is only ignored by the calling thread.\n+   Otherwise, the signal disposition is set to SIG_IGN, which affects\n+   the whole process.  */\n \n template <int Sig>\n class scoped_ignore_signal\n {\n public:\n   scoped_ignore_signal ()\n   {\n+#ifdef HAVE_SIGPROCMASK\n+    sigset_t set, old_state;\n+\n+    sigemptyset (&set);\n+    sigaddset (&set, Sig);\n+    sigprocmask (SIG_BLOCK, &set, &old_state);\n+    m_was_blocked = sigismember (&old_state, Sig);\n+#else\n     m_osig = signal (Sig, SIG_IGN);\n+#endif\n   }\n \n   ~scoped_ignore_signal ()\n   {\n+#ifdef HAVE_SIGPROCMASK\n+    if (!m_was_blocked)\n+      {\n+\tsigset_t set;\n+\tconst timespec zero_timeout = {};\n+\n+\tsigemptyset (&set);\n+\tsigaddset (&set, Sig);\n+\n+\t/* If we got a pending Sig signal, consume it before\n+\t   unblocking.  */\n+\tsigtimedwait (&set, nullptr, &zero_timeout);\n+\n+\tsigprocmask (SIG_UNBLOCK, &set, nullptr);\n+      }\n+#else\n     signal (Sig, m_osig);\n+#endif\n   }\n \n   DISABLE_COPY_AND_ASSIGN (scoped_ignore_signal);\n \n private:\n-  sighandler_t m_osig = nullptr;\n+#ifdef HAVE_SIGPROCMASK\n+  bool m_was_blocked;\n+#else\n+  sighandler_t m_osig;\n+#endif\n };\n \n struct scoped_ignore_signal_nop"
    }
  ]
}