{
  "sha": "de6d8dc25cf728dbb748eeeb8d35642332cc309b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGU2ZDhkYzI1Y2Y3MjhkYmI3NDhlZWViOGQzNTY0MjMzMmNjMzA5Yg==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-10-23T09:17:21Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-10-23T09:17:21Z"
    },
    "message": "Fix typo in RX disassembler error messages.\n\n\t* rx-dis.c (get_register_name): Fix spelling typo in error\n\tmessage.\n\t(get_condition_name, get_flag_name, get_double_register_name)\n\t(get_double_register_high_name, get_double_register_low_name)\n\t(get_double_control_register_name, get_double_condition_name)\n\t(get_opsize_name, get_size_name): Likewise.",
    "tree": {
      "sha": "02cda54f2f4268cf99cbf904258ccd78ab9080d8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/02cda54f2f4268cf99cbf904258ccd78ab9080d8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/de6d8dc25cf728dbb748eeeb8d35642332cc309b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de6d8dc25cf728dbb748eeeb8d35642332cc309b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/de6d8dc25cf728dbb748eeeb8d35642332cc309b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de6d8dc25cf728dbb748eeeb8d35642332cc309b/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7e785608ce2afae4b3f611f0e4d46cb9633ef937",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e785608ce2afae4b3f611f0e4d46cb9633ef937",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7e785608ce2afae4b3f611f0e4d46cb9633ef937"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 19,
    "deletions": 10
  },
  "files": [
    {
      "sha": "4213fba71d6b6014fe580fad9dde26f4d390ce7d",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de6d8dc25cf728dbb748eeeb8d35642332cc309b/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de6d8dc25cf728dbb748eeeb8d35642332cc309b/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=de6d8dc25cf728dbb748eeeb8d35642332cc309b",
      "patch": "@@ -1,3 +1,12 @@\n+2019-10-23  Nick Clifton  <nickc@redhat.com>\n+\n+\t* rx-dis.c (get_register_name): Fix spelling typo in error\n+\tmessage.\n+\t(get_condition_name, get_flag_name, get_double_register_name)\n+\t(get_double_register_high_name, get_double_register_low_name)\n+\t(get_double_control_register_name, get_double_condition_name)\n+\t(get_opsize_name, get_size_name): Likewise.\n+\n 2019-10-22  Nick Clifton  <nickc@redhat.com>\n \n \t* rx-dis.c (get_size_name): New function.  Provides safe"
    },
    {
      "sha": "c84f7c5d603dbcd7d5b39446f90566bd25e52f52",
      "filename": "opcodes/rx-dis.c",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de6d8dc25cf728dbb748eeeb8d35642332cc309b/opcodes/rx-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de6d8dc25cf728dbb748eeeb8d35642332cc309b/opcodes/rx-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/rx-dis.c?ref=de6d8dc25cf728dbb748eeeb8d35642332cc309b",
      "patch": "@@ -136,79 +136,79 @@ get_register_name (unsigned int reg)\n {\n   if (reg < ARRAY_SIZE (register_names))\n     return register_names[reg];\n-  return _(\"<inavlid register number>\");\n+  return _(\"<invalid register number>\");\n }\n \n static inline const char *\n get_condition_name (unsigned int cond)\n {\n   if (cond < ARRAY_SIZE (condition_names))\n     return condition_names[cond];\n-  return _(\"<inavlid condition code>\");\n+  return _(\"<invalid condition code>\");\n }\n \n static inline const char *\n get_flag_name (unsigned int flag)\n {\n   if (flag < ARRAY_SIZE (flag_names))\n     return flag_names[flag];\n-  return _(\"<inavlid flag>\");\n+  return _(\"<invalid flag>\");\n }\n \n static inline const char *\n get_double_register_name (unsigned int reg)\n {\n   if (reg < ARRAY_SIZE (double_register_names))\n     return double_register_names[reg];\n-  return _(\"<inavlid register number>\");\n+  return _(\"<invalid register number>\");\n }\n \n static inline const char *\n get_double_register_high_name (unsigned int reg)\n {\n   if (reg < ARRAY_SIZE (double_register_high_names))\n     return double_register_high_names[reg];\n-  return _(\"<inavlid register number>\");\n+  return _(\"<invalid register number>\");\n }\n \n static inline const char *\n get_double_register_low_name (unsigned int reg)\n {\n   if (reg < ARRAY_SIZE (double_register_low_names))\n     return double_register_low_names[reg];\n-  return _(\"<inavlid register number>\");\n+  return _(\"<invalid register number>\");\n }\n \n static inline const char *\n get_double_control_register_name (unsigned int reg)\n {\n   if (reg < ARRAY_SIZE (double_control_register_names))\n     return double_control_register_names[reg];\n-  return _(\"<inavlid register number>\");\n+  return _(\"<invalid register number>\");\n }\n \n static inline const char *\n get_double_condition_name (unsigned int cond)\n {\n   if (cond < ARRAY_SIZE (double_condition_names))\n     return double_condition_names[cond];\n-  return _(\"<inavlid condition code>\");\n+  return _(\"<invalid condition code>\");\n }\n \n static inline const char *\n get_opsize_name (unsigned int opsize)\n {\n   if (opsize < ARRAY_SIZE (opsize_names))\n     return opsize_names[opsize];\n-  return _(\"<inavlid opsize>\");\n+  return _(\"<invalid opsize>\");\n }\n \n static inline const char *\n get_size_name (unsigned int size)\n {\n   if (size < ARRAY_SIZE (size_names))\n     return size_names[size];\n-  return _(\"<inavlid size>\");\n+  return _(\"<invalid size>\");\n }\n \n "
    }
  ]
}