{
  "sha": "935295b51d80180ecd8c35d0edbd91283ae135a2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTM1Mjk1YjUxZDgwMTgwZWNkOGMzNWQwZWRiZDkxMjgzYWUxMzVhMg==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T10:41:52Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:36:03Z"
    },
    "message": "[PATCH 19/57][Arm][GAS] Add support for MVE instructions: vmax[nm][a] and vmin[nm][a]\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (do_mve_vmaxa_vmina): New encoding function.\n\t(do_mve_vmaxnma_vminnma): Likewise.\n\t(do_neon_dyadic_if_su): Change to support MVE variants.\n\t(do_vmaxnm): Likewise.\n\t(insns): Change to accept MVE variants and add new.\n\t* testsuite/gas/arm/mve-vmax-vmin-bad.d: New test.\n\t* testsuite/gas/arm/mve-vmax-vmin-bad.l: New test.\n\t* testsuite/gas/arm/mve-vmax-vmin-bad.s: New test.\n\t* testsuite/gas/arm/mve-vmaxa-vmina-bad.d: New test.\n\t* testsuite/gas/arm/mve-vmaxa-vmina-bad.l: New test.\n\t* testsuite/gas/arm/mve-vmaxa-vmina-bad.s: New test.\n\t* testsuite/gas/arm/mve-vmaxnm-vminnm-bad.d: New test.\n\t* testsuite/gas/arm/mve-vmaxnm-vminnm-bad.l: New test.\n\t* testsuite/gas/arm/mve-vmaxnm-vminnm-bad.s: New test.\n\t* testsuite/gas/arm/mve-vmaxnma-vminnma-bad.d: New test.\n\t* testsuite/gas/arm/mve-vmaxnma-vminnma-bad.l: New test.\n\t* testsuite/gas/arm/mve-vmaxnma-vminnma-bad.s: New test.",
    "tree": {
      "sha": "1441748a63d7a0309a2dce59c5845ebca41f24ff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1441748a63d7a0309a2dce59c5845ebca41f24ff"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/935295b51d80180ecd8c35d0edbd91283ae135a2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/935295b51d80180ecd8c35d0edbd91283ae135a2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/935295b51d80180ecd8c35d0edbd91283ae135a2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/935295b51d80180ecd8c35d0edbd91283ae135a2/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7df54120334049020e377ec17a0fdf4ecc63d6a7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7df54120334049020e377ec17a0fdf4ecc63d6a7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7df54120334049020e377ec17a0fdf4ecc63d6a7"
    }
  ],
  "stats": {
    "total": 338,
    "additions": 332,
    "deletions": 6
  },
  "files": [
    {
      "sha": "37ae72e0b710e7d6f50dfab28337d415ad4d8e0a",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -1,3 +1,23 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (do_mve_vmaxa_vmina): New encoding function.\n+\t(do_mve_vmaxnma_vminnma): Likewise.\n+\t(do_neon_dyadic_if_su): Change to support MVE variants.\n+\t(do_vmaxnm): Likewise.\n+\t(insns): Change to accept MVE variants and add new.\n+\t* testsuite/gas/arm/mve-vmax-vmin-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vmax-vmin-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vmax-vmin-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vmaxa-vmina-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vmaxa-vmina-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vmaxa-vmina-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vmaxnm-vminnm-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vmaxnm-vminnm-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vmaxnm-vminnm-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vmaxnma-vminnma-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vmaxnma-vminnma-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vmaxnma-vminnma-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (enum operand_parse_code): New operand."
    },
    {
      "sha": "6bc229a66727d2d51d2da87a6b2a5e0cc6fd6033",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 56,
      "deletions": 6,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -15590,6 +15590,26 @@ do_mve_vcmp (void)\n   return;\n }\n \n+static void\n+do_mve_vmaxa_vmina (void)\n+{\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  enum neon_shape rs = neon_select_shape (NS_QQ, NS_NULL);\n+  struct neon_type_el et\n+    = neon_check_type (2, rs, N_EQK, N_KEY | N_S8 | N_S16 | N_S32);\n+\n+  inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+  inst.instruction |= neon_logbits (et.size) << 18;\n+  inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n+  inst.instruction |= HI1 (inst.operands[1].reg) << 5;\n+  inst.instruction |= LOW4 (inst.operands[1].reg);\n+  inst.is_neon = 1;\n+}\n+\n static void\n do_mve_vfmas (void)\n {\n@@ -15659,6 +15679,26 @@ do_mve_viddup (void)\n   inst.is_neon = 1;\n }\n \n+static void\n+do_mve_vmaxnma_vminnma (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_QQ, NS_NULL);\n+  struct neon_type_el et\n+    = neon_check_type (2, rs, N_EQK, N_F_MVE | N_KEY);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  inst.instruction |= (et.size == 16) << 28;\n+  inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+  inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n+  inst.instruction |= HI1 (inst.operands[1].reg) << 5;\n+  inst.instruction |= LOW4 (inst.operands[1].reg);\n+  inst.is_neon = 1;\n+}\n+\n static void\n do_mve_vcmul (void)\n {\n@@ -16701,6 +16741,11 @@ do_neon_dyadic_if_su (void)\n   struct neon_type_el et = neon_check_type (3, rs, N_EQK , N_EQK,\n \t\t\t\t\t    N_SUF_32 | N_KEY);\n \n+  constraint ((inst.instruction == ((unsigned) N_MNEM_vmax)\n+\t       || inst.instruction == ((unsigned) N_MNEM_vmin))\n+\t      && et.type == NT_float\n+\t      && !ARM_CPU_HAS_FEATURE (cpu_variant,fpu_neon_ext_v1), BAD_FPU);\n+\n   if (check_simd_pred_availability (et.type == NT_float,\n \t\t\t\t    NEON_CHECK_ARCH | NEON_CHECK_CC))\n     return;\n@@ -19743,12 +19788,13 @@ do_vsel (void)\n static void\n do_vmaxnm (void)\n {\n-  set_pred_insn_type (OUTSIDE_PRED_INSN);\n+  if (!ARM_CPU_HAS_FEATURE (cpu_variant, mve_ext))\n+    set_pred_insn_type (OUTSIDE_PRED_INSN);\n \n   if (try_vfp_nsyn (3, do_vfp_nsyn_fpv8) == SUCCESS)\n     return;\n \n-  if (vfp_or_neon_is_neon (NEON_CHECK_CC | NEON_CHECK_ARCH8) == FAIL)\n+  if (check_simd_pred_availability (1, NEON_CHECK_CC | NEON_CHECK_ARCH8))\n     return;\n \n   neon_dyadic_misc (NT_untyped, N_F_16_32, 0);\n@@ -22951,8 +22997,6 @@ static const struct asm_opcode insns[] =\n   nUF(vselvs, _vselvs, 3, (RVSD, RVSD, RVSD),\t\tvsel),\n   nUF(vselge, _vselge, 3, (RVSD, RVSD, RVSD),\t\tvsel),\n   nUF(vselgt, _vselgt, 3, (RVSD, RVSD, RVSD),\t\tvsel),\n-  nUF(vmaxnm, _vmaxnm, 3, (RNSDQ, oRNSDQ, RNSDQ),\tvmaxnm),\n-  nUF(vminnm, _vminnm, 3, (RNSDQ, oRNSDQ, RNSDQ),\tvmaxnm),\n   nCE(vrintr, _vrintr, 2, (RNSDQ, oRNSDQ),\t\tvrintr),\n   nCE(vrintz, _vrintr, 2, (RNSDQ, oRNSDQ),\t\tvrintz),\n   nCE(vrintx, _vrintr, 2, (RNSDQ, oRNSDQ),\t\tvrintx),\n@@ -23671,9 +23715,7 @@ static const struct asm_opcode insns[] =\n  NUF(vbifq,     1300110, 3, (RNQ,  RNQ,  RNQ),  neon_bitfield),\n   /* Int and float variants, types S8 S16 S32 U8 U16 U32 F16 F32.  */\n  nUF(vabdq,     _vabd,    3, (RNQ,  oRNQ,  RNQ),  neon_dyadic_if_su),\n- nUF(vmax,      _vmax,    3, (RNDQ, oRNDQ, RNDQ), neon_dyadic_if_su),\n  nUF(vmaxq,     _vmax,    3, (RNQ,  oRNQ,  RNQ),  neon_dyadic_if_su),\n- nUF(vmin,      _vmin,    3, (RNDQ, oRNDQ, RNDQ), neon_dyadic_if_su),\n  nUF(vminq,     _vmin,    3, (RNQ,  oRNQ,  RNQ),  neon_dyadic_if_su),\n   /* Comparisons. Types S8 S16 S32 U8 U16 U32 F32. Non-immediate versions fall\n      back to neon_dyadic_if_su.  */\n@@ -24370,11 +24412,15 @@ static const struct asm_opcode insns[] =\n  mCEF(vdwdup,\t_vdwdup,    4, (RMQ, RRe, RR, EXPi),\t\t  mve_viddup),\n  mCEF(vidup,\t_vidup,\t    3, (RMQ, RRe, EXPi),\t\t  mve_viddup),\n  mCEF(viwdup,\t_viwdup,    4, (RMQ, RRe, RR, EXPi),\t\t  mve_viddup),\n+ mToC(\"vmaxa\",\tee330e81,   2, (RMQ, RMQ),\t\t\t  mve_vmaxa_vmina),\n+ mToC(\"vmina\",\tee331e81,   2, (RMQ, RMQ),\t\t\t  mve_vmaxa_vmina),\n \n #undef THUMB_VARIANT\n #define THUMB_VARIANT & mve_fp_ext\n  mToC(\"vcmul\", ee300e00,   4, (RMQ, RMQ, RMQ, EXPi),\t\t  mve_vcmul),\n  mToC(\"vfmas\", ee311e40,   3, (RMQ, RMQ, RR),\t\t\t  mve_vfmas),\n+ mToC(\"vmaxnma\", ee3f0e81, 2, (RMQ, RMQ),\t\t\t  mve_vmaxnma_vminnma),\n+ mToC(\"vminnma\", ee3f1e81, 2, (RMQ, RMQ),\t\t\t  mve_vmaxnma_vminnma),\n \n #undef  ARM_VARIANT\n #define ARM_VARIANT  & fpu_vfp_ext_v1\n@@ -24418,6 +24464,8 @@ static const struct asm_opcode insns[] =\n  mnUF(vcvtp,  _vcvta,  2, (RNSDQMQ, oRNSDQMQ),\t\tneon_cvtp),\n  mnUF(vcvtn,  _vcvta,  3, (RNSDQMQ, oRNSDQMQ, oI32z),\tneon_cvtn),\n  mnUF(vcvtm,  _vcvta,  2, (RNSDQMQ, oRNSDQMQ),\t\tneon_cvtm),\n+ mnUF(vmaxnm, _vmaxnm, 3, (RNSDQMQ, oRNSDQMQ, RNSDQMQ),\tvmaxnm),\n+ mnUF(vminnm, _vminnm, 3, (RNSDQMQ, oRNSDQMQ, RNSDQMQ),\tvmaxnm),\n \n #undef\tARM_VARIANT\n #define ARM_VARIANT & fpu_neon_ext_v1\n@@ -24436,6 +24484,8 @@ static const struct asm_opcode insns[] =\n  MNUF(vhadd,     00000000,\t  3, (RNDQMQ, oRNDQMQ, RNDQMQR),  neon_dyadic_i_su),\n  MNUF(vrhadd,    00000100,\t  3, (RNDQMQ, oRNDQMQ, RNDQMQ),\t  neon_dyadic_i_su),\n  MNUF(vhsub,     00000200,\t  3, (RNDQMQ, oRNDQMQ, RNDQMQR),  neon_dyadic_i_su),\n+ mnUF(vmin,      _vmin,    3, (RNDQMQ, oRNDQMQ, RNDQMQ), neon_dyadic_if_su),\n+ mnUF(vmax,      _vmax,    3, (RNDQMQ, oRNDQMQ, RNDQMQ), neon_dyadic_if_su),\n \n #undef\tARM_VARIANT\n #define ARM_VARIANT & arm_ext_v8_3"
    },
    {
      "sha": "9ffbca4becedc3882251c5c4341d0cafb81f8ff3",
      "filename": "gas/testsuite/gas/arm/mve-vmax-vmin-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmax-vmin-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmax-vmin-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmax-vmin-bad.d?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VMAX and VMIN instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vmax-vmin-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "17d5c74602151bc387d082a95cc050d5ab3e565f",
      "filename": "gas/testsuite/gas/arm/mve-vmax-vmin-bad.l",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmax-vmin-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmax-vmin-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmax-vmin-bad.l?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -0,0 +1,27 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vmax.s64 q0,q1,q2'\n+[^:]*:11: Error: selected FPU does not support instruction -- `vmax.f16 q0,q1,q2'\n+[^:]*:12: Error: bad type in SIMD instruction -- `vmax.u64 q0,q1,q2'\n+[^:]*:13: Error: selected FPU does not support instruction -- `vmax.f32 q0,q1,q2'\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Error: syntax error -- `vmaxeq.s16 q0,q1,q2'\n+[^:]*:18: Error: syntax error -- `vmaxeq.s16 q0,q1,q2'\n+[^:]*:20: Error: syntax error -- `vmaxeq.s16 q0,q1,q2'\n+[^:]*:21: Error: vector predicated instruction should be in VPT/VPST block -- `vmaxt.s16 q0,q1,q2'\n+[^:]*:23: Error: instruction missing MVE vector predication code -- `vmax.s16 q0,q1,q2'\n+[^:]*:25: Error: syntax error -- `vmineq.u32 q0,q1,q2'\n+[^:]*:26: Error: syntax error -- `vmineq.u32 q0,q1,q2'\n+[^:]*:28: Error: syntax error -- `vmineq.u32 q0,q1,q2'\n+[^:]*:29: Error: vector predicated instruction should be in VPT/VPST block -- `vmint.u32 q0,q1,q2'\n+[^:]*:31: Error: instruction missing MVE vector predication code -- `vmin.u32 q0,q1,q2'"
    },
    {
      "sha": "b7b92427c2235574efba55eb2539d39b2ded1c65",
      "filename": "gas/testsuite/gas/arm/mve-vmax-vmin-bad.s",
      "status": "added",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmax-vmin-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmax-vmin-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmax-vmin-bad.s?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -0,0 +1,31 @@\n+.macro cond, op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().s8 q0, q1, q2\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vmax.s64 q0, q1, q2\n+vmax.f16 q0, q1, q2\n+vmax.u64 q0, q1, q2\n+vmax.f32 q0, q1, q2\n+cond vmax\n+cond vmin\n+it eq\n+vmaxeq.s16 q0, q1, q2\n+vmaxeq.s16 q0, q1, q2\n+vpst\n+vmaxeq.s16 q0, q1, q2\n+vmaxt.s16 q0, q1, q2\n+vpst\n+vmax.s16 q0, q1, q2\n+it eq\n+vmineq.u32 q0, q1, q2\n+vmineq.u32 q0, q1, q2\n+vpst\n+vmineq.u32 q0, q1, q2\n+vmint.u32 q0, q1, q2\n+vpst\n+vmin.u32 q0, q1, q2"
    },
    {
      "sha": "11105db987b6239c556005557d1d9a074059a785",
      "filename": "gas/testsuite/gas/arm/mve-vmaxa-vmina-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxa-vmina-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxa-vmina-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxa-vmina-bad.d?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VMAXA and VMINA instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vmaxa-vmina-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "0e2ffed6d54de7a829c33b291aa42069734827c4",
      "filename": "gas/testsuite/gas/arm/mve-vmaxa-vmina-bad.l",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxa-vmina-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxa-vmina-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxa-vmina-bad.l?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -0,0 +1,29 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vmaxa.u8 q0,q1'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vmaxa.s64 q0,q1'\n+[^:]*:12: Error: bad type in SIMD instruction -- `vmaxa.f16 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vmina.u8 q0,q1'\n+[^:]*:14: Error: bad type in SIMD instruction -- `vmina.s64 q0,q1'\n+[^:]*:15: Error: bad type in SIMD instruction -- `vmina.f16 q0,q1'\n+[^:]*:16: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:19: Error: syntax error -- `vmaxaeq.s8 q0,q1'\n+[^:]*:20: Error: syntax error -- `vmaxaeq.s8 q0,q1'\n+[^:]*:22: Error: syntax error -- `vmaxaeq.s8 q0,q1'\n+[^:]*:23: Error: vector predicated instruction should be in VPT/VPST block -- `vmaxat.s8 q0,q1'\n+[^:]*:25: Error: instruction missing MVE vector predication code -- `vmaxa.s8 q0,q1'\n+[^:]*:27: Error: syntax error -- `vminaeq.s8 q0,q1'\n+[^:]*:28: Error: syntax error -- `vminaeq.s8 q0,q1'\n+[^:]*:30: Error: syntax error -- `vminaeq.s8 q0,q1'\n+[^:]*:31: Error: vector predicated instruction should be in VPT/VPST block -- `vminat.s8 q0,q1'\n+[^:]*:33: Error: instruction missing MVE vector predication code -- `vmina.s8 q0,q1'"
    },
    {
      "sha": "08cc60a2baca34108d4003fb658dc25afc36081b",
      "filename": "gas/testsuite/gas/arm/mve-vmaxa-vmina-bad.s",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxa-vmina-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxa-vmina-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxa-vmina-bad.s?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -0,0 +1,33 @@\n+.macro cond, op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().s8 q0, q1\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vmaxa.u8 q0, q1\n+vmaxa.s64 q0, q1\n+vmaxa.f16 q0, q1\n+vmina.u8 q0, q1\n+vmina.s64 q0, q1\n+vmina.f16 q0, q1\n+cond vmaxa\n+cond vmina\n+it eq\n+vmaxaeq.s8 q0, q1\n+vmaxaeq.s8 q0, q1\n+vpst\n+vmaxaeq.s8 q0, q1\n+vmaxat.s8 q0, q1\n+vpst\n+vmaxa.s8 q0, q1\n+it eq\n+vminaeq.s8 q0, q1\n+vminaeq.s8 q0, q1\n+vpst\n+vminaeq.s8 q0, q1\n+vminat.s8 q0, q1\n+vpst\n+vmina.s8 q0, q1"
    },
    {
      "sha": "4617cd4c3dc2e0bb9420d60e160ff2026ce59442",
      "filename": "gas/testsuite/gas/arm/mve-vmaxnm-vminnm-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxnm-vminnm-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxnm-vminnm-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxnm-vminnm-bad.d?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VMAXNM and VMINNM instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vmaxnm-vminnm-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "012ab35bf18d2908f61dfdbc8c3028bd113d06ce",
      "filename": "gas/testsuite/gas/arm/mve-vmaxnm-vminnm-bad.l",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxnm-vminnm-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxnm-vminnm-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxnm-vminnm-bad.l?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -0,0 +1,27 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vmaxnm.f64 q0,q1,q2'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vmaxnm.i16 q0,q1,q2'\n+[^:]*:12: Error: bad type in SIMD instruction -- `vminnm.f64 q0,q1,q2'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vminnm.i16 q0,q1,q2'\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Error: syntax error -- `vmaxnmeq.f32 q0,q1,q2'\n+[^:]*:18: Error: syntax error -- `vmaxnmeq.f32 q0,q1,q2'\n+[^:]*:20: Error: syntax error -- `vmaxnmeq.f32 q0,q1,q2'\n+[^:]*:21: Error: vector predicated instruction should be in VPT/VPST block -- `vmaxnmt.f32 q0,q1,q2'\n+[^:]*:23: Error: instruction missing MVE vector predication code -- `vmaxnm.f32 q0,q1,q2'\n+[^:]*:25: Error: syntax error -- `vminnmeq.f32 q0,q1,q2'\n+[^:]*:26: Error: syntax error -- `vminnmeq.f32 q0,q1,q2'\n+[^:]*:28: Error: syntax error -- `vminnmeq.f32 q0,q1,q2'\n+[^:]*:29: Error: vector predicated instruction should be in VPT/VPST block -- `vminnmt.f32 q0,q1,q2'\n+[^:]*:31: Error: instruction missing MVE vector predication code -- `vminnm.f32 q0,q1,q2'"
    },
    {
      "sha": "2b6436cc6a27d51d3a01eafbb2de10afe76f3eb6",
      "filename": "gas/testsuite/gas/arm/mve-vmaxnm-vminnm-bad.s",
      "status": "added",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxnm-vminnm-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxnm-vminnm-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxnm-vminnm-bad.s?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -0,0 +1,31 @@\n+.macro cond, op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().f16 q0, q1, q2\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vmaxnm.f64 q0, q1, q2\n+vmaxnm.i16 q0, q1, q2\n+vminnm.f64 q0, q1, q2\n+vminnm.i16 q0, q1, q2\n+cond vmaxnm\n+cond vminnm\n+it eq\n+vmaxnmeq.f32 q0, q1, q2\n+vmaxnmeq.f32 q0, q1, q2\n+vpst\n+vmaxnmeq.f32 q0, q1, q2\n+vmaxnmt.f32 q0, q1, q2\n+vpst\n+vmaxnm.f32 q0, q1, q2\n+it eq\n+vminnmeq.f32 q0, q1, q2\n+vminnmeq.f32 q0, q1, q2\n+vpst\n+vminnmeq.f32 q0, q1, q2\n+vminnmt.f32 q0, q1, q2\n+vpst\n+vminnm.f32 q0, q1, q2"
    },
    {
      "sha": "5d11eee34c4040fbef21c0c3799e3c98d75ca123",
      "filename": "gas/testsuite/gas/arm/mve-vmaxnma-vminnma-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxnma-vminnma-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxnma-vminnma-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxnma-vminnma-bad.d?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VMAXNMA and VMINNMA instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vmaxnma-vminnma-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "fdc8aac7a80bc41229f9965e5fa65b68bbb19799",
      "filename": "gas/testsuite/gas/arm/mve-vmaxnma-vminnma-bad.l",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxnma-vminnma-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxnma-vminnma-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxnma-vminnma-bad.l?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -0,0 +1,27 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vmaxnma.f64 q0,q1'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vmaxnma.i16 q0,q1'\n+[^:]*:12: Error: bad type in SIMD instruction -- `vminnma.f64 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vminnma.i16 q0,q1'\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Error: syntax error -- `vmaxnmaeq.f32 q0,q1'\n+[^:]*:18: Error: syntax error -- `vmaxnmaeq.f32 q0,q1'\n+[^:]*:20: Error: syntax error -- `vmaxnmaeq.f32 q0,q1'\n+[^:]*:21: Error: vector predicated instruction should be in VPT/VPST block -- `vmaxnmat.f32 q0,q1'\n+[^:]*:23: Error: instruction missing MVE vector predication code -- `vmaxnma.f32 q0,q1'\n+[^:]*:25: Error: syntax error -- `vminnmaeq.f32 q0,q1'\n+[^:]*:26: Error: syntax error -- `vminnmaeq.f32 q0,q1'\n+[^:]*:28: Error: syntax error -- `vminnmaeq.f32 q0,q1'\n+[^:]*:29: Error: vector predicated instruction should be in VPT/VPST block -- `vminnmat.f32 q0,q1'\n+[^:]*:31: Error: instruction missing MVE vector predication code -- `vminnma.f32 q0,q1'"
    },
    {
      "sha": "43f6dce36a45a7c8f572e4eb1c3c5503db8649d8",
      "filename": "gas/testsuite/gas/arm/mve-vmaxnma-vminnma-bad.s",
      "status": "added",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxnma-vminnma-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935295b51d80180ecd8c35d0edbd91283ae135a2/gas/testsuite/gas/arm/mve-vmaxnma-vminnma-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmaxnma-vminnma-bad.s?ref=935295b51d80180ecd8c35d0edbd91283ae135a2",
      "patch": "@@ -0,0 +1,31 @@\n+.macro cond, op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().f16 q0, q1\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vmaxnma.f64 q0, q1\n+vmaxnma.i16 q0, q1\n+vminnma.f64 q0, q1\n+vminnma.i16 q0, q1\n+cond vmaxnma\n+cond vminnma\n+it eq\n+vmaxnmaeq.f32 q0, q1\n+vmaxnmaeq.f32 q0, q1\n+vpst\n+vmaxnmaeq.f32 q0, q1\n+vmaxnmat.f32 q0, q1\n+vpst\n+vmaxnma.f32 q0, q1\n+it eq\n+vminnmaeq.f32 q0, q1\n+vminnmaeq.f32 q0, q1\n+vpst\n+vminnmaeq.f32 q0, q1\n+vminnmat.f32 q0, q1\n+vpst\n+vminnma.f32 q0, q1"
    }
  ]
}