{
  "sha": "7cc17433020a62935e4d91053251fe900d83c7f0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2NjMTc0MzMwMjBhNjI5MzVlNGQ5MTA1MzI1MWZlOTAwZDgzYzdmMA==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-07-19T14:04:48Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-07-19T14:43:49Z"
    },
    "message": "Arm: Use read_description funcs in gdbserver\n\nSwitch gdbserver over to using feature target descriptions.\n\nAdd a function for determining the type of a given target description,\nand use where required.\n\ngdb/gdbserver/ChangeLog:\n\n\t* configure.srv: Add new files. Remove xml generated files.\n\t* linux-aarch32-low.c (initialize_low_arch_aarch32): Don't init\n\tregisters.\n\t* linux-aarch32-low.h (tdesc_arm_with_neon): Remove.\n\t* linux-aarch32-tdesc.c: New file.\n\t* linux-aarch32-tdesc.h: New file.\n\t* linux-aarch64-low.c (aarch64_arch_setup): Call aarch32_linux_read_description.\n\t* linux-arm-low.c (init_registers_arm, tdesc_arm)\n\t(init_registers_arm_with_iwmmxt, tdesc_arm_with_iwmmxt)\n\t(init_registers_arm_with_vfpv2, tdesc_arm_with_vfpv2)\n\t(init_registers_arm_with_vfpv3, tdesc_arm_with_vfpv3): Remove.\n\t(arm_fill_wmmxregset, arm_store_wmmxregset, arm_fill_vfpregset)\n\t(arm_store_vfpregset): Call arm_linux_get_tdesc_fp_type.\n\t(arm_read_description): Call arm_linux_read_description.\n\t(initialize_low_arch): Don't init registers.\n\t* linux-arm-tdesc.c: New file.\n\t* linux-arm-tdesc.h: New file.",
    "tree": {
      "sha": "c8031ea8c3b062b8c5478e1754133814346aa310",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c8031ea8c3b062b8c5478e1754133814346aa310"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7cc17433020a62935e4d91053251fe900d83c7f0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cc17433020a62935e4d91053251fe900d83c7f0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7cc17433020a62935e4d91053251fe900d83c7f0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cc17433020a62935e4d91053251fe900d83c7f0/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f42b26179a8606d31959207a2d8eb8582b650c99",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f42b26179a8606d31959207a2d8eb8582b650c99",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f42b26179a8606d31959207a2d8eb8582b650c99"
    }
  ],
  "stats": {
    "total": 285,
    "additions": 232,
    "deletions": 53
  },
  "files": [
    {
      "sha": "3fb691c6a1faf5dbd0d7882e61fb489e04540ed5",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=7cc17433020a62935e4d91053251fe900d83c7f0",
      "patch": "@@ -1,3 +1,23 @@\n+2019-07-19  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* configure.srv: Add new files. Remove xml generated files.\n+\t* linux-aarch32-low.c (initialize_low_arch_aarch32): Don't init\n+\tregisters.\n+\t* linux-aarch32-low.h (tdesc_arm_with_neon): Remove.\n+\t* linux-aarch32-tdesc.c: New file.\n+\t* linux-aarch32-tdesc.h: New file.\n+\t* linux-aarch64-low.c (aarch64_arch_setup): Call aarch32_linux_read_description.\n+\t* linux-arm-low.c (init_registers_arm, tdesc_arm)\n+\t(init_registers_arm_with_iwmmxt, tdesc_arm_with_iwmmxt)\n+\t(init_registers_arm_with_vfpv2, tdesc_arm_with_vfpv2)\n+\t(init_registers_arm_with_vfpv3, tdesc_arm_with_vfpv3): Remove.\n+\t(arm_fill_wmmxregset, arm_store_wmmxregset, arm_fill_vfpregset)\n+\t(arm_store_vfpregset): Call arm_linux_get_tdesc_fp_type.\n+\t(arm_read_description): Call arm_linux_read_description.\n+\t(initialize_low_arch): Don't init registers.\n+\t* linux-arm-tdesc.c: New file.\n+\t* linux-arm-tdesc.h: New file.\n+\n 2019-07-10  Alan Hayward  <alan.hayward@arm.com>\n \n \t* linux-arm-low.c (arm_fill_wmmxregset, arm_store_wmmxregset):"
    },
    {
      "sha": "097dc4e9db45a0f75070e365c2bc94fd105f1aaa",
      "filename": "gdb/gdbserver/configure.srv",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/configure.srv",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/configure.srv",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/configure.srv?ref=7cc17433020a62935e4d91053251fe900d83c7f0",
      "patch": "@@ -33,9 +33,10 @@ srv_linux_obj=\"linux-low.o linux-osdata.o linux-procfs.o linux-ptrace.o linux-wa\n # Input is taken from the \"${target}\" variable.\n \n case \"${target}\" in\n-  aarch64*-*-linux*)\tsrv_regobj=\"arm-with-neon.o\"\n-\t\t\tsrv_tgtobj=\"linux-aarch64-low.o aarch64-linux-hw-point.o\"\n+  aarch64*-*-linux*)\tsrv_tgtobj=\"linux-aarch64-low.o aarch64-linux-hw-point.o\"\n \t\t\tsrv_tgtobj=\"$srv_tgtobj linux-aarch32-low.o\"\n+\t\t\tsrv_tgtobj=\"$srv_tgtobj linux-aarch32-tdesc.o\"\n+\t\t\tsrv_tgtobj=\"${srv_tgtobj} arch/aarch32.o\"\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} arch/arm.o\"\n \t\t\tsrv_tgtobj=\"$srv_tgtobj aarch64-linux.o\"\n \t\t\tsrv_tgtobj=\"$srv_tgtobj arch/aarch64-insn.o\"\n@@ -49,12 +50,11 @@ case \"${target}\" in\n \t\t\tipa_obj=\"${ipa_obj} linux-aarch64-tdesc-ipa.o\"\n \t\t\tipa_obj=\"${ipa_obj} arch/aarch64-ipa.o\"\n \t\t\t;;\n-  arm*-*-linux*)\tsrv_regobj=\"reg-arm.o arm-with-iwmmxt.o\"\n-\t\t\tsrv_regobj=\"${srv_regobj} arm-with-vfpv2.o\"\n-\t\t\tsrv_regobj=\"${srv_regobj} arm-with-vfpv3.o\"\n-\t\t\tsrv_regobj=\"${srv_regobj} arm-with-neon.o\"\n-\t\t\tsrv_tgtobj=\"$srv_linux_obj linux-arm-low.o\"\n+  arm*-*-linux*)\tsrv_tgtobj=\"$srv_linux_obj linux-arm-low.o\"\n+\t\t\tsrv_tgtobj=\"$srv_tgtobj linux-arm-tdesc.o\"\n \t\t\tsrv_tgtobj=\"$srv_tgtobj linux-aarch32-low.o\"\n+\t\t\tsrv_tgtobj=\"$srv_tgtobj linux-aarch32-tdesc.o\"\n+\t\t\tsrv_tgtobj=\"${srv_tgtobj} arch/aarch32.o\"\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} arch/arm.o\"\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} arch/arm-linux.o\"\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} arch/arm-get-next-pcs.o\""
    },
    {
      "sha": "f1f2ae02a46071e0359d4e7349445a6f4992b5c0",
      "filename": "gdb/gdbserver/linux-aarch32-low.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-aarch32-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-aarch32-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch32-low.c?ref=7cc17433020a62935e4d91053251fe900d83c7f0",
      "patch": "@@ -299,7 +299,5 @@ arm_breakpoint_kind_from_current_state (CORE_ADDR *pcptr)\n void\n initialize_low_arch_aarch32 (void)\n {\n-  init_registers_arm_with_neon ();\n-\n   initialize_regsets_info (&aarch32_regsets_info);\n }"
    },
    {
      "sha": "3078fca35e20a19842164ed096104d7f66d719d3",
      "filename": "gdb/gdbserver/linux-aarch32-low.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-aarch32-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-aarch32-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch32-low.h?ref=7cc17433020a62935e4d91053251fe900d83c7f0",
      "patch": "@@ -36,6 +36,4 @@ void initialize_low_arch_aarch32 (void);\n void init_registers_arm_with_neon (void);\n int arm_is_thumb_mode (void);\n \n-extern const struct target_desc *tdesc_arm_with_neon;\n-\n #endif /* GDBSERVER_LINUX_AARCH32_LOW_H */"
    },
    {
      "sha": "c1d8949bd40f6596a797af1f794b719900ca7e57",
      "filename": "gdb/gdbserver/linux-aarch32-tdesc.c",
      "status": "added",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-aarch32-tdesc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-aarch32-tdesc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch32-tdesc.c?ref=7cc17433020a62935e4d91053251fe900d83c7f0",
      "patch": "@@ -0,0 +1,47 @@\n+/* Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"server.h\"\n+#include \"tdesc.h\"\n+#include \"arch/aarch32.h\"\n+#include <inttypes.h>\n+\n+static struct target_desc *tdesc_aarch32;\n+\n+/* See linux-aarch32-tdesc.h.  */\n+\n+const target_desc *\n+aarch32_linux_read_description ()\n+{\n+  if (tdesc_aarch32 == nullptr)\n+    {\n+      tdesc_aarch32 = aarch32_create_target_description ();\n+\n+      static const char *expedite_regs[] = { \"r11\", \"sp\", \"pc\", 0 };\n+      init_target_desc (tdesc_aarch32, expedite_regs);\n+    }\n+  return tdesc_aarch32;\n+}\n+\n+/* See linux-aarch32-tdesc.h.  */\n+\n+bool\n+is_aarch32_linux_description (const target_desc *tdesc)\n+{\n+  gdb_assert (tdesc != nullptr);\n+  return tdesc == tdesc_aarch32;\n+}"
    },
    {
      "sha": "8887cbfdf4359bad7445b63ece76f44e338c2014",
      "filename": "gdb/gdbserver/linux-aarch32-tdesc.h",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-aarch32-tdesc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-aarch32-tdesc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch32-tdesc.h?ref=7cc17433020a62935e4d91053251fe900d83c7f0",
      "patch": "@@ -0,0 +1,29 @@\n+/* Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GDBSERVER_LINUX_AARCH32_TDESC_H\n+#define GDBSERVER_LINUX_AARCH32_TDESC_H\n+\n+/* Return the AArch32 target description.  */\n+\n+const target_desc * aarch32_linux_read_description ();\n+\n+/* Return true if TDESC is the AArch32 target description.  */\n+\n+bool is_aarch32_linux_description (const target_desc *tdesc);\n+\n+#endif /* linux-aarch32-tdesc.h.  */"
    },
    {
      "sha": "ab2f40ea98cc011b7fb4f09a45a312f6045dfd7d",
      "filename": "gdb/gdbserver/linux-aarch64-low.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-aarch64-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-aarch64-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch64-low.c?ref=7cc17433020a62935e4d91053251fe900d83c7f0",
      "patch": "@@ -39,6 +39,7 @@\n \n #include \"gdb_proc_service.h\"\n #include \"arch/aarch64.h\"\n+#include \"linux-aarch32-tdesc.h\"\n #include \"linux-aarch64-tdesc.h\"\n #include \"nat/aarch64-sve-linux-ptrace.h\"\n #include \"tdesc.h\"\n@@ -527,7 +528,7 @@ aarch64_arch_setup (void)\n       current_process ()->tdesc = aarch64_linux_read_description (vq, pauth_p);\n     }\n   else\n-    current_process ()->tdesc = tdesc_arm_with_neon;\n+    current_process ()->tdesc = aarch32_linux_read_description ();\n \n   aarch64_linux_get_debug_reg_capacity (lwpid_of (current_thread));\n }"
    },
    {
      "sha": "0e30af35620104a282c8ed3b4005c421d98f9e03",
      "filename": "gdb/gdbserver/linux-arm-low.c",
      "status": "modified",
      "additions": 36,
      "deletions": 41,
      "changes": 77,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-arm-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-arm-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-arm-low.c?ref=7cc17433020a62935e4d91053251fe900d83c7f0",
      "patch": "@@ -22,6 +22,8 @@\n #include \"arch/arm-linux.h\"\n #include \"arch/arm-get-next-pcs.h\"\n #include \"linux-aarch32-low.h\"\n+#include \"linux-aarch32-tdesc.h\"\n+#include \"linux-arm-tdesc.h\"\n \n #include <sys/uio.h>\n /* Don't include elf.h if linux/elf.h got included by gdb_proc_service.h.\n@@ -33,19 +35,6 @@\n #include <signal.h>\n #include <sys/syscall.h>\n \n-/* Defined in auto-generated files.  */\n-void init_registers_arm (void);\n-extern const struct target_desc *tdesc_arm;\n-\n-void init_registers_arm_with_iwmmxt (void);\n-extern const struct target_desc *tdesc_arm_with_iwmmxt;\n-\n-void init_registers_arm_with_vfpv2 (void);\n-extern const struct target_desc *tdesc_arm_with_vfpv2;\n-\n-void init_registers_arm_with_vfpv3 (void);\n-extern const struct target_desc *tdesc_arm_with_vfpv3;\n-\n #ifndef PTRACE_GET_THREAD_AREA\n #define PTRACE_GET_THREAD_AREA 22\n #endif\n@@ -175,7 +164,7 @@ arm_cannot_fetch_register (int regno)\n static void\n arm_fill_wmmxregset (struct regcache *regcache, void *buf)\n {\n-  if (regcache->tdesc != tdesc_arm_with_iwmmxt)\n+  if (arm_linux_get_tdesc_fp_type (regcache->tdesc) != ARM_FP_TYPE_IWMMXT)\n     return;\n \n   for (int i = 0; i < 16; i++)\n@@ -190,7 +179,7 @@ arm_fill_wmmxregset (struct regcache *regcache, void *buf)\n static void\n arm_store_wmmxregset (struct regcache *regcache, const void *buf)\n {\n-  if (regcache->tdesc != tdesc_arm_with_iwmmxt)\n+  if (arm_linux_get_tdesc_fp_type (regcache->tdesc) != ARM_FP_TYPE_IWMMXT)\n     return;\n \n   for (int i = 0; i < 16; i++)\n@@ -207,13 +196,19 @@ arm_fill_vfpregset (struct regcache *regcache, void *buf)\n {\n   int num;\n \n-  if (regcache->tdesc == tdesc_arm_with_neon\n-      || regcache->tdesc == tdesc_arm_with_vfpv3)\n+  if (is_aarch32_linux_description (regcache->tdesc))\n     num = 32;\n-  else if (regcache->tdesc == tdesc_arm_with_vfpv2)\n-    num = 16;\n   else\n-    return;\n+    {\n+      arm_fp_type fp_type = arm_linux_get_tdesc_fp_type (regcache->tdesc);\n+\n+      if (fp_type == ARM_FP_TYPE_VFPV3)\n+\tnum = 32;\n+      else if (fp_type == ARM_FP_TYPE_VFPV2)\n+\tnum = 16;\n+      else\n+\treturn;\n+    }\n \n   arm_fill_vfpregset_num (regcache, buf, num);\n }\n@@ -230,13 +225,19 @@ arm_store_vfpregset (struct regcache *regcache, const void *buf)\n {\n   int num;\n \n-  if (regcache->tdesc == tdesc_arm_with_neon\n-      || regcache->tdesc == tdesc_arm_with_vfpv3)\n+  if (is_aarch32_linux_description (regcache->tdesc))\n     num = 32;\n-  else if (regcache->tdesc == tdesc_arm_with_vfpv2)\n-    num = 16;\n   else\n-    return;\n+    {\n+      arm_fp_type fp_type = arm_linux_get_tdesc_fp_type (regcache->tdesc);\n+\n+      if (fp_type == ARM_FP_TYPE_VFPV3)\n+\tnum = 32;\n+      else if (fp_type == ARM_FP_TYPE_VFPV2)\n+\tnum = 16;\n+      else\n+\treturn;\n+    }\n \n   arm_store_vfpregset_num (regcache, buf, num);\n }\n@@ -849,7 +850,7 @@ arm_read_description (void)\n   unsigned long arm_hwcap = linux_get_hwcap (4);\n \n   if (arm_hwcap & HWCAP_IWMMXT)\n-    return tdesc_arm_with_iwmmxt;\n+    return arm_linux_read_description (ARM_FP_TYPE_IWMMXT);\n \n   if (arm_hwcap & HWCAP_VFP)\n     {\n@@ -859,21 +860,21 @@ arm_read_description (void)\n       errno = 0;\n       char *buf = (char *) alloca (ARM_VFP3_REGS_SIZE);\n       if (ptrace (PTRACE_GETVFPREGS, pid, 0, buf) < 0 && errno == EIO)\n-\treturn tdesc_arm;\n+\treturn arm_linux_read_description (ARM_FP_TYPE_NONE);\n \n       /* NEON implies either no VFP, or VFPv3-D32.  We only support\n \t it with VFP.  */\n       if (arm_hwcap & HWCAP_NEON)\n-\treturn tdesc_arm_with_neon;\n+\treturn aarch32_linux_read_description ();\n       else if ((arm_hwcap & (HWCAP_VFPv3 | HWCAP_VFPv3D16)) == HWCAP_VFPv3)\n-\treturn tdesc_arm_with_vfpv3;\n+\treturn arm_linux_read_description (ARM_FP_TYPE_VFPV3);\n       else\n-\treturn tdesc_arm_with_vfpv2;\n+\treturn arm_linux_read_description (ARM_FP_TYPE_VFPV2);\n     }\n \n   /* The default configuration uses legacy FPA registers, probably\n      simulated.  */\n-  return tdesc_arm;\n+  return arm_linux_read_description (ARM_FP_TYPE_NONE);\n }\n \n static void\n@@ -997,10 +998,11 @@ arm_regs_info (void)\n   const struct target_desc *tdesc = current_process ()->tdesc;\n \n   if (have_ptrace_getregset == 1\n-      && (tdesc == tdesc_arm_with_neon || tdesc == tdesc_arm_with_vfpv3))\n+      && (is_aarch32_linux_description (tdesc)\n+\t  || arm_linux_get_tdesc_fp_type (tdesc) == ARM_FP_TYPE_VFPV3))\n     return &regs_info_aarch32;\n-  else\n-    return &regs_info_arm;\n+\n+  return &regs_info_arm;\n }\n \n struct linux_target_ops the_low_target = {\n@@ -1045,13 +1047,6 @@ struct linux_target_ops the_low_target = {\n void\n initialize_low_arch (void)\n {\n-  /* Initialize the Linux target descriptions.  */\n-  init_registers_arm ();\n-  init_registers_arm_with_iwmmxt ();\n-  init_registers_arm_with_vfpv2 ();\n-  init_registers_arm_with_vfpv3 ();\n-\n   initialize_low_arch_aarch32 ();\n-\n   initialize_regsets_info (&arm_regsets_info);\n }"
    },
    {
      "sha": "cdc4dab87a830584fab301520bba439750cb2200",
      "filename": "gdb/gdbserver/linux-arm-tdesc.c",
      "status": "added",
      "additions": 62,
      "deletions": 0,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-arm-tdesc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-arm-tdesc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-arm-tdesc.c?ref=7cc17433020a62935e4d91053251fe900d83c7f0",
      "patch": "@@ -0,0 +1,62 @@\n+/* Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"server.h\"\n+#include \"tdesc.h\"\n+#include \"arch/arm.h\"\n+#include <inttypes.h>\n+\n+/* All possible Arm target descriptors.  */\n+static struct target_desc *tdesc_arm_list[ARM_FP_TYPE_INVALID];\n+\n+/* See linux-arm-tdesc.h.  */\n+\n+const target_desc *\n+arm_linux_read_description (arm_fp_type fp_type)\n+{\n+  struct target_desc *tdesc = tdesc_arm_list[fp_type];\n+\n+  if (tdesc == nullptr)\n+    {\n+      tdesc = arm_create_target_description (fp_type);\n+\n+      static const char *expedite_regs[] = { \"r11\", \"sp\", \"pc\", 0 };\n+      init_target_desc (tdesc, expedite_regs);\n+\n+      tdesc_arm_list[fp_type] = tdesc;\n+    }\n+\n+  return tdesc;\n+}\n+\n+/* See linux-arm-tdesc.h.  */\n+\n+arm_fp_type\n+arm_linux_get_tdesc_fp_type (const target_desc *tdesc)\n+{\n+  gdb_assert (tdesc != nullptr);\n+\n+  /* Many of the tdesc_arm_list entries may not have been initialised yet.  This\n+     is ok, because tdesc must be one of the initialised ones.  */\n+  for (int i = ARM_FP_TYPE_NONE; i < ARM_FP_TYPE_INVALID; i++)\n+    {\n+      if (tdesc == tdesc_arm_list[i])\n+\treturn (arm_fp_type) i;\n+    }\n+\n+  return ARM_FP_TYPE_INVALID;\n+}"
    },
    {
      "sha": "51efb9fb48c2a5111471a98e7f61628c24e70109",
      "filename": "gdb/gdbserver/linux-arm-tdesc.h",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-arm-tdesc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cc17433020a62935e4d91053251fe900d83c7f0/gdb/gdbserver/linux-arm-tdesc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-arm-tdesc.h?ref=7cc17433020a62935e4d91053251fe900d83c7f0",
      "patch": "@@ -0,0 +1,29 @@\n+/* Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GDBSERVER_LINUX_ARM_TDESC_H\n+#define GDBSERVER_LINUX_ARM_TDESC_H\n+\n+/* Return the Arm target description with fp registers FP_TYPE.  */\n+\n+const target_desc * arm_linux_read_description (arm_fp_type fp_type);\n+\n+/* For a target description TDESC, return its fp type.  */\n+\n+arm_fp_type arm_linux_get_tdesc_fp_type (const target_desc *tdesc);\n+\n+#endif /* linux-arm-tdesc.h.  */"
    }
  ]
}