{
  "sha": "798066abd8e5ec2a411979fd34bfe0cd494c1813",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Nzk4MDY2YWJkOGU1ZWMyYTQxMTk3OWZkMzRiZmUwY2Q0OTRjMTgxMw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-11T22:17:31Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-13T21:21:14Z"
    },
    "message": "sim: Use host not target byte order for merging and splitting values\n\nWhen using writes to memory through a struct to merge and extract\nmulti-word value, it is the endianness of the host, not the target\nthat affects which order the component words need to be written into\nthe structure.\n\nOf the 5 functions adjusted here 4 of them are unused.  The 5th,\nJOINSIDF will soon be used by the or1k target.\n\nFor or1k, simulated on x86-64, this change fixes this function so that\nthe correct bytes are now returned.\n\nsim/common/ChangeLog:\n\n\t* cgen-ops.h (SUBWORDXFSI): Compare HOST_BYTE_ORDER not\n\tCURRENT_TARGET_BYTE_ORDER.\n\t(SUBWORDTFSI): Likewise.\n\t(JOINSIDF): Likewise.\n\t(JOINSIXF): Likewise.\n\t(JOINSITF): Likewise.",
    "tree": {
      "sha": "d95b67ba097a9fdb6ea3a6bc0a50b28be49225cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d95b67ba097a9fdb6ea3a6bc0a50b28be49225cb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/798066abd8e5ec2a411979fd34bfe0cd494c1813",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/798066abd8e5ec2a411979fd34bfe0cd494c1813",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/798066abd8e5ec2a411979fd34bfe0cd494c1813",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/798066abd8e5ec2a411979fd34bfe0cd494c1813/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bdc8beb41b656e8071af275ef0e98c4f2d05e564",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bdc8beb41b656e8071af275ef0e98c4f2d05e564",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bdc8beb41b656e8071af275ef0e98c4f2d05e564"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 14,
    "deletions": 5
  },
  "files": [
    {
      "sha": "fce47023729a42f23a41fa15ba0a01304b99d793",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/798066abd8e5ec2a411979fd34bfe0cd494c1813/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/798066abd8e5ec2a411979fd34bfe0cd494c1813/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=798066abd8e5ec2a411979fd34bfe0cd494c1813",
      "patch": "@@ -1,3 +1,12 @@\n+2019-04-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* cgen-ops.h (SUBWORDXFSI): Compare HOST_BYTE_ORDER not\n+\tCURRENT_TARGET_BYTE_ORDER.\n+\t(SUBWORDTFSI): Likewise.\n+\t(JOINSIDF): Likewise.\n+\t(JOINSIXF): Likewise.\n+\t(JOINSITF): Likewise.\n+\n 2019-03-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* sim-base.h: Add 'sim-assert.h' include."
    },
    {
      "sha": "6fecb862a8a34cf1a0a80540eeb8cc930f1c2f54",
      "filename": "sim/common/cgen-ops.h",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/798066abd8e5ec2a411979fd34bfe0cd494c1813/sim/common/cgen-ops.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/798066abd8e5ec2a411979fd34bfe0cd494c1813/sim/common/cgen-ops.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/cgen-ops.h?ref=798066abd8e5ec2a411979fd34bfe0cd494c1813",
      "patch": "@@ -404,7 +404,7 @@ SUBWORDXFSI (XF in, int word)\n   /* Note: typedef struct { SI parts[3]; } XF; */\n   union { XF in; SI out[3]; } x;\n   x.in = in;\n-  if (CURRENT_TARGET_BYTE_ORDER == BFD_ENDIAN_BIG)\n+  if (HOST_BYTE_ORDER == BFD_ENDIAN_BIG)\n     return x.out[word];\n   else\n     return x.out[2 - word];\n@@ -416,7 +416,7 @@ SUBWORDTFSI (TF in, int word)\n   /* Note: typedef struct { SI parts[4]; } TF; */\n   union { TF in; SI out[4]; } x;\n   x.in = in;\n-  if (CURRENT_TARGET_BYTE_ORDER == BFD_ENDIAN_BIG)\n+  if (HOST_BYTE_ORDER == BFD_ENDIAN_BIG)\n     return x.out[word];\n   else\n     return x.out[3 - word];\n@@ -432,7 +432,7 @@ SEMOPS_INLINE DF\n JOINSIDF (SI x0, SI x1)\n {\n   union { SI in[2]; DF out; } x;\n-  if (CURRENT_TARGET_BYTE_ORDER == BFD_ENDIAN_BIG)\n+  if (HOST_BYTE_ORDER == BFD_ENDIAN_BIG)\n     x.in[0] = x0, x.in[1] = x1;\n   else\n     x.in[1] = x0, x.in[0] = x1;\n@@ -443,7 +443,7 @@ SEMOPS_INLINE XF\n JOINSIXF (SI x0, SI x1, SI x2)\n {\n   union { SI in[3]; XF out; } x;\n-  if (CURRENT_TARGET_BYTE_ORDER == BFD_ENDIAN_BIG)\n+  if (HOST_BYTE_ORDER == BFD_ENDIAN_BIG)\n     x.in[0] = x0, x.in[1] = x1, x.in[2] = x2;\n   else\n     x.in[2] = x0, x.in[1] = x1, x.in[0] = x2;\n@@ -454,7 +454,7 @@ SEMOPS_INLINE TF\n JOINSITF (SI x0, SI x1, SI x2, SI x3)\n {\n   union { SI in[4]; TF out; } x;\n-  if (CURRENT_TARGET_BYTE_ORDER == BFD_ENDIAN_BIG)\n+  if (HOST_BYTE_ORDER == BFD_ENDIAN_BIG)\n     x.in[0] = x0, x.in[1] = x1, x.in[2] = x2, x.in[3] = x3;\n   else\n     x.in[3] = x0, x.in[2] = x1, x.in[1] = x2, x.in[0] = x3;"
    }
  ]
}