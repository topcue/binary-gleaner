{
  "sha": "da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGE5NDRjOGE3MGQ4YzI2YTU2ZjlmZTU4ZTlkMjFkZmE5OWNiOWIwMg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-11T15:20:37Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-11T15:20:37Z"
    },
    "message": "x86: remove stray uses of xmmq_mode\n\nxmmq_mode is documented to not allow for broadcast - don't include it in\nrespective checks in OP_E_memory().",
    "tree": {
      "sha": "c85d8f9ac654fbf83b202f49dce7549f8ec569d3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c85d8f9ac654fbf83b202f49dce7549f8ec569d3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ebdcad3fddf6ec21f6d4dcc702379a12718cf0c4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ebdcad3fddf6ec21f6d4dcc702379a12718cf0c4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ebdcad3fddf6ec21f6d4dcc702379a12718cf0c4"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 6,
    "deletions": 4
  },
  "files": [
    {
      "sha": "54c69d856246ff002d3f99223a542b712862793d",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-11  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (OP_E_memory): Drop xmmq_mode from broadcast\n+\tchecks. Move case label past broadcast check.\n+\n 2021-03-10  Jan Beulich  <jbeulich@suse.com>\n \n \t* opcodes/i386-dis.c (MVexVSIBDQWpX, MVexVSIBQDWpX,"
    },
    {
      "sha": "eb91c5df4a60a8d02ce7d0fa1f61bb8058489d90",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=da944c8a70d8c26a56f9fe58e9d21dfa99cb9b02",
      "patch": "@@ -11418,7 +11418,6 @@ OP_E_memory (int bytemode, int sizeflag)\n       /* In EVEX, if operand doesn't allow broadcast, vex.b should be 0.  */\n       if (vex.b\n \t  && bytemode != x_mode\n-\t  && bytemode != xmmq_mode\n \t  && bytemode != evex_half_bcst_xmmq_mode)\n \t{\n \t  BadOp ();\n@@ -11455,7 +11454,6 @@ OP_E_memory (int bytemode, int sizeflag)\n \t  break;\n \tcase x_mode:\n \tcase evex_half_bcst_xmmq_mode:\n-\tcase xmmq_mode:\n \t  if (vex.b)\n \t    {\n \t      shift = vex.w ? 3 : 2;\n@@ -11464,6 +11462,7 @@ OP_E_memory (int bytemode, int sizeflag)\n \t  /* Fall through.  */\n \tcase xmmqd_mode:\n \tcase xmmdw_mode:\n+\tcase xmmq_mode:\n \tcase ymmq_mode:\n \tcase evex_x_nobcst_mode:\n \tcase x_swap_mode:\n@@ -11848,11 +11847,9 @@ OP_E_memory (int bytemode, int sizeflag)\n     }\n   if (vex.evex && vex.b\n       && (bytemode == x_mode\n-\t  || bytemode == xmmq_mode\n \t  || bytemode == evex_half_bcst_xmmq_mode))\n     {\n       if (vex.w\n-\t  || bytemode == xmmq_mode\n \t  || bytemode == evex_half_bcst_xmmq_mode)\n \t{\n \t  switch (vex.length)"
    }
  ]
}