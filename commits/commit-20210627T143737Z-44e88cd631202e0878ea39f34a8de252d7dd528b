{
  "sha": "44e88cd631202e0878ea39f34a8de252d7dd528b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDRlODhjZDYzMTIwMmUwODc4ZWEzOWYzNGE4ZGUyNTJkN2RkNTI4Yg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-27T02:05:04Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-27T14:37:37Z"
    },
    "message": "sim: bpf: add explicit casts when using explicit formats\n\nSince the value variable usually has an incompatible type for the wide\nvariety of types it is printed as, add explicit casts to them all.",
    "tree": {
      "sha": "6e9071cebe98b43aea7b94b6c531a1613a2c51fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6e9071cebe98b43aea7b94b6c531a1613a2c51fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/44e88cd631202e0878ea39f34a8de252d7dd528b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44e88cd631202e0878ea39f34a8de252d7dd528b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/44e88cd631202e0878ea39f34a8de252d7dd528b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44e88cd631202e0878ea39f34a8de252d7dd528b/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cc9c19b0302a83be6520c38a0a9944314ccc6962",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc9c19b0302a83be6520c38a0a9944314ccc6962",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cc9c19b0302a83be6520c38a0a9944314ccc6962"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 16,
    "deletions": 12
  },
  "files": [
    {
      "sha": "b53b986472d3cb21c7c77d9215dffdc4a1281c09",
      "filename": "sim/bpf/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44e88cd631202e0878ea39f34a8de252d7dd528b/sim/bpf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44e88cd631202e0878ea39f34a8de252d7dd528b/sim/bpf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/ChangeLog?ref=44e88cd631202e0878ea39f34a8de252d7dd528b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-27  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* bpf-helpers.c (bpf_trace_printk): Add casts to every value printf.\n+\n 2021-06-27  Mike Frysinger  <vapier@gentoo.org>\n \n \t* bpf-helpers.c (bpf_trace_printk): Move value decl to top of scope."
    },
    {
      "sha": "d72c22a09beebf309f57748589ae9b771e5af208",
      "filename": "sim/bpf/bpf-helpers.c",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44e88cd631202e0878ea39f34a8de252d7dd528b/sim/bpf/bpf-helpers.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44e88cd631202e0878ea39f34a8de252d7dd528b/sim/bpf/bpf-helpers.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/bpf-helpers.c?ref=44e88cd631202e0878ea39f34a8de252d7dd528b",
      "patch": "@@ -95,16 +95,16 @@ bpf_trace_printk (SIM_CPU *current_cpu)\n                              fmt_address + i)))\n             {\n             case 'd':\n-              trace_printf (sd, current_cpu, \"%d\", value);\n+              trace_printf (sd, current_cpu, \"%d\", (int) value);\n               break;\n             case 'i':\n-              trace_printf (sd, current_cpu, \"%i\", value);\n+              trace_printf (sd, current_cpu, \"%i\", (int) value);\n               break;\n             case 'u':\n-              trace_printf (sd, current_cpu, \"%u\", value);\n+              trace_printf (sd, current_cpu, \"%u\", (unsigned int) value);\n               break;\n             case 'x':\n-              trace_printf (sd, current_cpu, \"%x\", value);\n+              trace_printf (sd, current_cpu, \"%x\", (unsigned int) value);\n               break;\n             case 'l':\n               {\n@@ -114,16 +114,16 @@ bpf_trace_printk (SIM_CPU *current_cpu)\n                              fmt_address + i))\n                   {\n                   case 'd':\n-                    trace_printf (sd, current_cpu, \"%ld\", value);\n+                    trace_printf (sd, current_cpu, \"%ld\", (long) value);\n                     break;\n                   case 'i':\n-                    trace_printf (sd, current_cpu, \"%li\", value);\n+                    trace_printf (sd, current_cpu, \"%li\", (long) value);\n                     break;\n                   case 'u':\n-                    trace_printf (sd, current_cpu, \"%lu\", value);\n+                    trace_printf (sd, current_cpu, \"%lu\", (unsigned long) value);\n                     break;\n                   case 'x':\n-                    trace_printf (sd, current_cpu, \"%lx\", value);\n+                    trace_printf (sd, current_cpu, \"%lx\", (unsigned long) value);\n                     break;\n                   case 'l':\n                     {\n@@ -132,16 +132,16 @@ bpf_trace_printk (SIM_CPU *current_cpu)\n                       switch (GETMEMUQI (current_cpu, CPU_PC_GET (current_cpu),\n                                 fmt_address + i)) {\n                         case 'd':\n-                          trace_printf (sd, current_cpu, \"%lld\", value);\n+                          trace_printf (sd, current_cpu, \"%lld\", (long long) value);\n                           break;\n                         case 'i':\n-                          trace_printf (sd, current_cpu, \"%lli\", value);\n+                          trace_printf (sd, current_cpu, \"%lli\", (long long) value);\n                           break;\n                         case 'u':\n-                          trace_printf (sd, current_cpu, \"%llu\", value);\n+                          trace_printf (sd, current_cpu, \"%llu\", (unsigned long long) value);\n                           break;\n                         case 'x':\n-                          trace_printf (sd, current_cpu, \"%llx\", value);\n+                          trace_printf (sd, current_cpu, \"%llx\", (unsigned long long) value);\n                           break;\n                         default:\n                           assert (0);"
    }
  ]
}