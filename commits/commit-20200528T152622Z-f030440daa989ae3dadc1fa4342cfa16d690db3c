{
  "sha": "f030440daa989ae3dadc1fa4342cfa16d690db3c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjAzMDQ0MGRhYTk4OWFlM2RhZGMxZmE0MzQyY2ZhMTZkNjkwZGIzYw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-28T15:26:22Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-28T15:26:22Z"
    },
    "message": "[gdb/symtab] Make gold index workaround more precise\n\nThere's a PR gold/15646 - \"gold-generated .gdb_index has duplicated\nsymbols that gdb-generated index doesn't\", that causes gold to generate\nduplicate symbols in the index.\n\nF.i., a namespace N1 declared in a header file can be listed for two CUs that\ninclude the header file:\n...\n[759] N1:\n        2 [global type]\n        3 [global type]\n...\n\nThis causes a gdb performance problem: f.i. when attempting to set a\nbreakpoint on a non-existing function N1::misspelled, the symtab for both CUs\nwill be expanded.\n\nGdb contains a workaround for this, added in commit 8943b87476 \"Work around\ngold/15646\", that skips duplicate global symbols in the index.\n\nHowever, the workaround does not check for the symbol kind (\"type\" in the\nexample above).\n\nMake the workaround more precise by limiting it to symbol kind \"type\".\n\nTested on x86_64-linux, with target boards cc-with-gdb-index and\ngold-gdb-index.\n\ngdb/ChangeLog:\n\n2020-05-28  Tom de Vries  <tdevries@suse.de>\n\n\t* dwarf2/read.c\t(dw2_symtab_iter_next, dw2_expand_marked_cus): Limit\n\tPR gold/15646 workaround to symbol kind \"type\".",
    "tree": {
      "sha": "e551a19ef1af3a4e83594dccb72bdf4b6d5af4bc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e551a19ef1af3a4e83594dccb72bdf4b6d5af4bc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f030440daa989ae3dadc1fa4342cfa16d690db3c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f030440daa989ae3dadc1fa4342cfa16d690db3c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f030440daa989ae3dadc1fa4342cfa16d690db3c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f030440daa989ae3dadc1fa4342cfa16d690db3c/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9e85f042a6eda1cd96cc95e66f80db95f28d4557",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e85f042a6eda1cd96cc95e66f80db95f28d4557",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9e85f042a6eda1cd96cc95e66f80db95f28d4557"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 19,
    "deletions": 8
  },
  "files": [
    {
      "sha": "593ff01cc9d031fc0b9ff3aef3f48ccf74022bdb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f030440daa989ae3dadc1fa4342cfa16d690db3c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f030440daa989ae3dadc1fa4342cfa16d690db3c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f030440daa989ae3dadc1fa4342cfa16d690db3c",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-28  Tom de Vries  <tdevries@suse.de>\n+\n+\t* dwarf2/read.c\t(dw2_symtab_iter_next, dw2_expand_marked_cus): Limit\n+\tPR gold/15646 workaround to symbol kind \"type\".\n+\n 2020-05-27  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2/read.c (load_partial_dies): Use add_partial_symbol."
    },
    {
      "sha": "25f05fb99302c2622d8a940eb889c731db536bb0",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 14,
      "deletions": 8,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f030440daa989ae3dadc1fa4342cfa16d690db3c/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f030440daa989ae3dadc1fa4342cfa16d690db3c/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=f030440daa989ae3dadc1fa4342cfa16d690db3c",
      "patch": "@@ -3522,10 +3522,14 @@ dw2_symtab_iter_next (struct dw2_symtab_iterator *iter)\n \t    }\n \n \t  /* Work around gold/15646.  */\n-\t  if (!is_static && iter->global_seen)\n-\t    continue;\n-\t  if (!is_static)\n-\t    iter->global_seen = 1;\n+\t  if (!is_static\n+\t      && symbol_kind == GDB_INDEX_SYMBOL_KIND_TYPE)\n+\t    {\n+\t      if (iter->global_seen)\n+\t\tcontinue;\n+\n+\t      iter->global_seen = 1;\n+\t    }\n \t}\n \n       /* Only check the symbol's kind if it has one.  */\n@@ -4627,12 +4631,14 @@ dw2_expand_marked_cus\n \t && symbol_kind != GDB_INDEX_SYMBOL_KIND_NONE);\n \n       /* Work around gold/15646.  */\n-      if (attrs_valid)\n+      if (attrs_valid\n+\t  && !is_static\n+\t  && symbol_kind == GDB_INDEX_SYMBOL_KIND_TYPE)\n \t{\n-\t  if (!is_static && global_seen)\n+\t  if (global_seen)\n \t    continue;\n-\t  if (!is_static)\n-\t    global_seen = true;\n+\n+\t  global_seen = true;\n \t}\n \n       /* Only check the symbol's kind if it has one.  */"
    }
  ]
}