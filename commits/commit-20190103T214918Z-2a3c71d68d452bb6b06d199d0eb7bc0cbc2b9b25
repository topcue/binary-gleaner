{
  "sha": "2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmEzYzcxZDY4ZDQ1MmJiNmIwNmQxOTlkMGViN2JjMGNiYzJiOWIyNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2018-12-27T18:53:20Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-03T21:49:18Z"
    },
    "message": "Remove more uses of explicit reference counting in Python\n\nThis changes some more place in the Python code to use gdbpy_ref\nrather than explicit reference counting.  While doing this I found a\nlatent bug in typy_fields_items -- it was not checking for errors in\none spot.  I also changed valpy_dealloc to use Py_XDECREF rather than\nan explicit \"if\".\n\ngdb/ChangeLog\n2019-01-03  Tom Tromey  <tom@tromey.com>\n\n\t* python/py-value.c (valpy_dealloc): Use Py_XDECREF.\n\t* python/py-type.c (typy_fields_items): Use gdbpy_ref.\n\t* python/py-progspace.c (pspy_set_printers): Use gdbpy_ref.\n\t(pspy_set_frame_filters, pspy_set_frame_unwinders)\n\t(pspy_set_type_printers): Likewise.\n\t* python/py-function.c (fnpy_init): Use gdbpy_ref.\n\t* python/py-cmd.c (cmdpy_init): Use gdbpy_ref.\n\t* python/py-objfile.c (objfpy_set_printers): Use gdbpy_ref.\n\t(objfpy_set_frame_filters, objfpy_set_frame_unwinders)\n\t(objfpy_set_type_printers): Likewise.",
    "tree": {
      "sha": "b66f2e202a390bbbcfa81c574d5388fcad12d4fa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b66f2e202a390bbbcfa81c574d5388fcad12d4fa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5c329e6ab4c7bba9b83155571b150756210001df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c329e6ab4c7bba9b83155571b150756210001df",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5c329e6ab4c7bba9b83155571b150756210001df"
    }
  ],
  "stats": {
    "total": 96,
    "additions": 39,
    "deletions": 57
  },
  "files": [
    {
      "sha": "a01c1491ff1eef1a528e3a019bb3b81db9840ce1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25",
      "patch": "@@ -1,3 +1,16 @@\n+2019-01-03  Tom Tromey  <tom@tromey.com>\n+\n+\t* python/py-value.c (valpy_dealloc): Use Py_XDECREF.\n+\t* python/py-type.c (typy_fields_items): Use gdbpy_ref.\n+\t* python/py-progspace.c (pspy_set_printers): Use gdbpy_ref.\n+\t(pspy_set_frame_filters, pspy_set_frame_unwinders)\n+\t(pspy_set_type_printers): Likewise.\n+\t* python/py-function.c (fnpy_init): Use gdbpy_ref.\n+\t* python/py-cmd.c (cmdpy_init): Use gdbpy_ref.\n+\t* python/py-objfile.c (objfpy_set_printers): Use gdbpy_ref.\n+\t(objfpy_set_frame_filters, objfpy_set_frame_unwinders)\n+\t(objfpy_set_type_printers): Likewise.\n+\n 2019-01-03  Tom Tromey  <tom@tromey.com>\n \n \t* python/python.c (gdbpy_enter, ~gdbpy_enter): Update."
    },
    {
      "sha": "bc18cec436d2a7a0e5123ec981e707047958e718",
      "filename": "gdb/python/py-cmd.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/python/py-cmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/python/py-cmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-cmd.c?ref=2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25",
      "patch": "@@ -540,7 +540,7 @@ cmdpy_init (PyObject *self, PyObject *args, PyObject *kw)\n   if (! docstring)\n     docstring = xstrdup (_(\"This command is not documented.\"));\n \n-  Py_INCREF (self);\n+  gdbpy_ref<> self_ref = gdbpy_ref<>::new_reference (self);\n \n   TRY\n     {\n@@ -566,7 +566,7 @@ cmdpy_init (PyObject *self, PyObject *args, PyObject *kw)\n       cmd->destroyer = cmdpy_destroyer;\n \n       obj->command = cmd;\n-      set_cmd_context (cmd, self);\n+      set_cmd_context (cmd, self_ref.release ());\n       set_cmd_completer (cmd, ((completetype == -1) ? cmdpy_completer\n \t\t\t       : completers[completetype].completer));\n       if (completetype == -1)\n@@ -578,7 +578,6 @@ cmdpy_init (PyObject *self, PyObject *args, PyObject *kw)\n       xfree (cmd_name);\n       xfree (docstring);\n       xfree (pfx_name);\n-      Py_DECREF (self);\n       gdbpy_convert_exception (except);\n       return -1;\n     }"
    },
    {
      "sha": "dbd5649bbb527696348a6b7691d6985ee54d85f5",
      "filename": "gdb/python/py-function.c",
      "status": "modified",
      "additions": 5,
      "deletions": 6,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/python/py-function.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/python/py-function.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-function.c?ref=2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25",
      "patch": "@@ -109,7 +109,8 @@ fnpy_init (PyObject *self, PyObject *args, PyObject *kwds)\n \n   if (! PyArg_ParseTuple (args, \"s\", &name))\n     return -1;\n-  Py_INCREF (self);\n+\n+  gdbpy_ref<> self_ref = gdbpy_ref<>::new_reference (self);\n \n   if (PyObject_HasAttrString (self, \"__doc__\"))\n     {\n@@ -120,17 +121,15 @@ fnpy_init (PyObject *self, PyObject *args, PyObject *kwds)\n \t    {\n \t      docstring = python_string_to_host_string (ds_obj.get ());\n \t      if (docstring == NULL)\n-\t\t{\n-\t\t  Py_DECREF (self);\n-\t\t  return -1;\n-\t\t}\n+\t\treturn -1;\n \t    }\n \t}\n     }\n   if (! docstring)\n     docstring.reset (xstrdup (_(\"This function is not documented.\")));\n \n-  add_internal_function (name, docstring.release (), fnpy_call, self);\n+  add_internal_function (name, docstring.release (), fnpy_call,\n+\t\t\t self_ref.release ());\n   return 0;\n }\n "
    },
    {
      "sha": "5f61b734afe07131e1cc57497640ab9473a75724",
      "filename": "gdb/python/py-objfile.c",
      "status": "modified",
      "additions": 4,
      "deletions": 12,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/python/py-objfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/python/py-objfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-objfile.c?ref=2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25",
      "patch": "@@ -240,7 +240,6 @@ objfpy_get_printers (PyObject *o, void *ignore)\n static int\n objfpy_set_printers (PyObject *o, PyObject *value, void *ignore)\n {\n-  PyObject *tmp;\n   objfile_object *self = (objfile_object *) o;\n \n   if (! value)\n@@ -258,10 +257,9 @@ objfpy_set_printers (PyObject *o, PyObject *value, void *ignore)\n     }\n \n   /* Take care in case the LHS and RHS are related somehow.  */\n-  tmp = self->printers;\n+  gdbpy_ref<> tmp (self->printers);\n   Py_INCREF (value);\n   self->printers = value;\n-  Py_XDECREF (tmp);\n \n   return 0;\n }\n@@ -281,7 +279,6 @@ objfpy_get_frame_filters (PyObject *o, void *ignore)\n static int\n objfpy_set_frame_filters (PyObject *o, PyObject *filters, void *ignore)\n {\n-  PyObject *tmp;\n   objfile_object *self = (objfile_object *) o;\n \n   if (! filters)\n@@ -299,10 +296,9 @@ objfpy_set_frame_filters (PyObject *o, PyObject *filters, void *ignore)\n     }\n \n   /* Take care in case the LHS and RHS are related somehow.  */\n-  tmp = self->frame_filters;\n+  gdbpy_ref<> tmp (self->frame_filters);\n   Py_INCREF (filters);\n   self->frame_filters = filters;\n-  Py_XDECREF (tmp);\n \n   return 0;\n }\n@@ -323,7 +319,6 @@ objfpy_get_frame_unwinders (PyObject *o, void *ignore)\n static int\n objfpy_set_frame_unwinders (PyObject *o, PyObject *unwinders, void *ignore)\n {\n-  PyObject *tmp;\n   objfile_object *self = (objfile_object *) o;\n \n   if (!unwinders)\n@@ -341,10 +336,9 @@ objfpy_set_frame_unwinders (PyObject *o, PyObject *unwinders, void *ignore)\n     }\n \n   /* Take care in case the LHS and RHS are related somehow.  */\n-  tmp = self->frame_unwinders;\n+  gdbpy_ref<> tmp (self->frame_unwinders);\n   Py_INCREF (unwinders);\n   self->frame_unwinders = unwinders;\n-  Py_XDECREF (tmp);\n \n   return 0;\n }\n@@ -376,7 +370,6 @@ objfpy_get_xmethods (PyObject *o, void *ignore)\n static int\n objfpy_set_type_printers (PyObject *o, PyObject *value, void *ignore)\n {\n-  PyObject *tmp;\n   objfile_object *self = (objfile_object *) o;\n \n   if (! value)\n@@ -394,10 +387,9 @@ objfpy_set_type_printers (PyObject *o, PyObject *value, void *ignore)\n     }\n \n   /* Take care in case the LHS and RHS are related somehow.  */\n-  tmp = self->type_printers;\n+  gdbpy_ref<> tmp (self->type_printers);\n   Py_INCREF (value);\n   self->type_printers = value;\n-  Py_XDECREF (tmp);\n \n   return 0;\n }"
    },
    {
      "sha": "4d0297b23d78992884ae937010e2ad7cf61bfa79",
      "filename": "gdb/python/py-progspace.c",
      "status": "modified",
      "additions": 4,
      "deletions": 12,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/python/py-progspace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/python/py-progspace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-progspace.c?ref=2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25",
      "patch": "@@ -164,7 +164,6 @@ pspy_get_printers (PyObject *o, void *ignore)\n static int\n pspy_set_printers (PyObject *o, PyObject *value, void *ignore)\n {\n-  PyObject *tmp;\n   pspace_object *self = (pspace_object *) o;\n \n   if (! value)\n@@ -182,10 +181,9 @@ pspy_set_printers (PyObject *o, PyObject *value, void *ignore)\n     }\n \n   /* Take care in case the LHS and RHS are related somehow.  */\n-  tmp = self->printers;\n+  gdbpy_ref<> tmp (self->printers);\n   Py_INCREF (value);\n   self->printers = value;\n-  Py_XDECREF (tmp);\n \n   return 0;\n }\n@@ -205,7 +203,6 @@ pspy_get_frame_filters (PyObject *o, void *ignore)\n static int\n pspy_set_frame_filters (PyObject *o, PyObject *frame, void *ignore)\n {\n-  PyObject *tmp;\n   pspace_object *self = (pspace_object *) o;\n \n   if (! frame)\n@@ -223,10 +220,9 @@ pspy_set_frame_filters (PyObject *o, PyObject *frame, void *ignore)\n     }\n \n   /* Take care in case the LHS and RHS are related somehow.  */\n-  tmp = self->frame_filters;\n+  gdbpy_ref<> tmp (self->frame_filters);\n   Py_INCREF (frame);\n   self->frame_filters = frame;\n-  Py_XDECREF (tmp);\n \n   return 0;\n }\n@@ -247,7 +243,6 @@ pspy_get_frame_unwinders (PyObject *o, void *ignore)\n static int\n pspy_set_frame_unwinders (PyObject *o, PyObject *unwinders, void *ignore)\n {\n-  PyObject *tmp;\n   pspace_object *self = (pspace_object *) o;\n \n   if (!unwinders)\n@@ -265,10 +260,9 @@ pspy_set_frame_unwinders (PyObject *o, PyObject *unwinders, void *ignore)\n     }\n \n   /* Take care in case the LHS and RHS are related somehow.  */\n-  tmp = self->frame_unwinders;\n+  gdbpy_ref<> tmp (self->frame_unwinders);\n   Py_INCREF (unwinders);\n   self->frame_unwinders = unwinders;\n-  Py_XDECREF (tmp);\n \n   return 0;\n }\n@@ -300,7 +294,6 @@ pspy_get_xmethods (PyObject *o, void *ignore)\n static int\n pspy_set_type_printers (PyObject *o, PyObject *value, void *ignore)\n {\n-  PyObject *tmp;\n   pspace_object *self = (pspace_object *) o;\n \n   if (! value)\n@@ -318,10 +311,9 @@ pspy_set_type_printers (PyObject *o, PyObject *value, void *ignore)\n     }\n \n   /* Take care in case the LHS and RHS are related somehow.  */\n-  tmp = self->type_printers;\n+  gdbpy_ref<> tmp (self->type_printers);\n   Py_INCREF (value);\n   self->type_printers = value;\n-  Py_XDECREF (tmp);\n \n   return 0;\n }"
    },
    {
      "sha": "601d29fee76804f19e30679d818437b1764a1d61",
      "filename": "gdb/python/py-type.c",
      "status": "modified",
      "additions": 9,
      "deletions": 13,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/python/py-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/python/py-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-type.c?ref=2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25",
      "patch": "@@ -319,7 +319,6 @@ static PyObject *\n typy_fields_items (PyObject *self, enum gdbpy_iter_kind kind)\n {\n   PyObject *py_type = self;\n-  PyObject *result = NULL, *iter = NULL;\n   struct type *type = ((type_object *) py_type)->type;\n   struct type *checked_type = type;\n \n@@ -333,22 +332,19 @@ typy_fields_items (PyObject *self, enum gdbpy_iter_kind kind)\n     }\n   END_CATCH\n \n+  gdbpy_ref<> type_holder;\n   if (checked_type != type)\n-    py_type = type_to_type_object (checked_type);\n-  iter = typy_make_iter (py_type, kind);\n-  if (checked_type != type)\n-    {\n-      /* Need to wrap this in braces because Py_DECREF isn't wrapped\n-\t in a do{}while(0).  */\n-      Py_DECREF (py_type);\n-    }\n-  if (iter != NULL)\n     {\n-      result = PySequence_List (iter);\n-      Py_DECREF (iter);\n+      type_holder.reset (type_to_type_object (checked_type));\n+      if (type_holder == nullptr)\n+\treturn nullptr;\n+      py_type = type_holder.get ();\n     }\n+  gdbpy_ref<> iter (typy_make_iter (py_type, kind));\n+  if (iter == nullptr)\n+    return nullptr;\n \n-  return result;\n+  return PySequence_List (iter.get ());\n }\n \n /* Return a sequence of all fields.  Each field is a gdb.Field object.  */"
    },
    {
      "sha": "ebd7ef1a47e8ed95902048a31cf8473ed18c8471",
      "filename": "gdb/python/py-value.c",
      "status": "modified",
      "additions": 2,
      "deletions": 11,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/python/py-value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25/gdb/python/py-value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-value.c?ref=2a3c71d68d452bb6b06d199d0eb7bc0cbc2b9b25",
      "patch": "@@ -90,17 +90,8 @@ valpy_dealloc (PyObject *obj)\n \n   value_decref (self->value);\n \n-  if (self->address)\n-    /* Use braces to appease gcc warning.  *sigh*  */\n-    {\n-      Py_DECREF (self->address);\n-    }\n-\n-  if (self->type)\n-    {\n-      Py_DECREF (self->type);\n-    }\n-\n+  Py_XDECREF (self->address);\n+  Py_XDECREF (self->type);\n   Py_XDECREF (self->dynamic_type);\n \n   Py_TYPE (self)->tp_free (self);"
    }
  ]
}