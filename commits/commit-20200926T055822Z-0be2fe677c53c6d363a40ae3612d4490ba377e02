{
  "sha": "0be2fe677c53c6d363a40ae3612d4490ba377e02",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGJlMmZlNjc3YzUzYzZkMzYzYTQwYWUzNjEyZDQ0OTBiYTM3N2UwMg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-25T11:22:46Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-26T05:58:22Z"
    },
    "message": "ubsan: opcodes/csky-opc.h:929 shift exponent 536870912\n\nopcodes/\n\t* csky-opc.h: Formatting.\n\t(GENERAL_REG_BANK): Correct spelling.  Update use throughout file.\n\t(get_register_name): Mask arch with CSKY_ARCH_MASK for shift,\n\tand shift 1u.\n\t(get_register_number): Likewise.\n\t* csky-dis.c (get_gr_name, get_cr_name): Don't mask mach_flag.\ngas/\n\t* config/tc-csky.c (parse_type_ctrlreg): Don't mask mach_flag\n\tfor csky_get_control_regno.\n\t(csky_get_reg_val): Likewise when calling csky_get_general_regno.",
    "tree": {
      "sha": "df15146097019c76042a73b056bee7d82af3b5b4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/df15146097019c76042a73b056bee7d82af3b5b4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0be2fe677c53c6d363a40ae3612d4490ba377e02",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0be2fe677c53c6d363a40ae3612d4490ba377e02",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0be2fe677c53c6d363a40ae3612d4490ba377e02",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0be2fe677c53c6d363a40ae3612d4490ba377e02/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0919fa3c461ab524ee6ed2acf0a5b9f4a5c62de8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0919fa3c461ab524ee6ed2acf0a5b9f4a5c62de8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0919fa3c461ab524ee6ed2acf0a5b9f4a5c62de8"
    }
  ],
  "stats": {
    "total": 161,
    "additions": 85,
    "deletions": 76
  },
  "files": [
    {
      "sha": "70bc6c0695b63db3a072fdabfc9e21294f792325",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 48,
      "deletions": 43,
      "changes": 91,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0be2fe677c53c6d363a40ae3612d4490ba377e02/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0be2fe677c53c6d363a40ae3612d4490ba377e02/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=0be2fe677c53c6d363a40ae3612d4490ba377e02",
      "patch": "@@ -1,3 +1,9 @@\n+2020-09-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/tc-csky.c (parse_type_ctrlreg): Don't mask mach_flag\n+\tfor csky_get_control_regno.\n+\t(csky_get_reg_val): Likewise when calling csky_get_general_regno.\n+\n 2020-09-24  Jim Wilson  <jimw@sifive.com>\n \n \tPR 26400\n@@ -62,12 +68,12 @@\n \t(v1_work_fpu_readd): Refine.\n \t(v2_work_addc): New function, strengthen the operands legality\n \tcheck of addc.\n-\t* gas/testsuite/gas/csky/all.d : Use register number format when\n+\t* testsuite/gas/csky/all.d : Use register number format when\n \tdisassemble register name by default.\n-\t* gas/testsuite/gas/csky/cskyv2_all.d : Likewise.\n-\t* gas/testsuite/gas/csky/trust.d: Likewise.\n-\t* gas/testsuite/gas/csky/cskyv2_ck860.d : Fix.\n-\t* gas/testsuite/gas/csky/trust.s : Fix.\n+\t* testsuite/gas/csky/cskyv2_all.d : Likewise.\n+\t* testsuite/gas/csky/trust.d: Likewise.\n+\t* testsuite/gas/csky/cskyv2_ck860.d : Fix.\n+\t* testsuite/gas/csky/trust.s : Fix.\n \n 2020-09-23  Lili Cui  <lili.cui@intel.com>\n \n@@ -313,7 +319,7 @@\n \tadd_line_strp and set symbol offset for DWARF2_LINE_VERSION 5.\n \t(out_debug_line): Call out_dir_and_file_list with line_seg and\n \tsizeof_offset.\n-\t* gas/testsuite/gas/elf/dwarf-5-file0.d: Expect indirect line\n+\t* testsuite/gas/elf/dwarf-5-file0.d: Expect indirect line\n \tstrings.\n \n 2020-09-07  Mark Wielaard  <mark@klomp.org>\n@@ -330,7 +336,7 @@\n \n \t* dwarf2dbg.c (dwarf2_directive_filename): Initialize with_md5 to\n \tFALSE.\n-\t* gas/testsuite/gas/elf/dwarf-5-file0.s: Add a random bignum.\n+\t* testsuite/gas/elf/dwarf-5-file0.s: Add a random bignum.\n \n 2020-09-01  Mark Wielaard  <mark@klomp.org>\n \n@@ -595,7 +601,7 @@\n \n 2020-08-28  Cooper Qu  <cooper.qu@linux.alibaba.com>\n \n-\t* gas/config/tc-csky.c (md_begin): Set attributes.\n+\t* config/tc-csky.c (md_begin): Set attributes.\n \t(isa_flag): Change type to unsigned 64 bits.\n \t(struct csky_cpu_info): Likewise.\n \t(struct csky_macro_info): Likewise.\n@@ -660,14 +666,14 @@\n 2020-08-25  Alan Modra  <amodra@gmail.com>\n \n \tPR 26501\n-\t* gas/config/tc-tic54x.c (tic54x_undefined_symbol): Properly treat\n+\t* config/tc-tic54x.c (tic54x_undefined_symbol): Properly treat\n \tmisc_symbol_hash entries without values.\n \n 2020-08-25  Alan Modra  <amodra@gmail.com>\n \n \tPR 26500\n-\t* tc-tic4x.c (tic4x_inst_make): Don't die on terminating insn\n-\twith name = \"\".\n+\t* config/tc-tic4x.c (tic4x_inst_make): Don't die on terminating\n+\tinsn with name = \"\".\n \n 2020-08-25  Alan Modra  <amodra@gmail.com>\n \n@@ -704,14 +710,12 @@\n \t(csky_cpus): Add item for CK860.\n \t(md_begin): Enable DSP for CK810 and CK807 by default.\n \t(md_apply_fix): Fix CKCORE_TLS_IE32 relocation failure.\n-\t* gas/testsuite/gas/csky/cskyv2_all.d: Change 'sync 0'\n-\tto 'sync'.\n-\t* gas/testsuite/gas/csky/cskyv2_all.s: Likewise.\n-\t* gas/testsuite/gas/csky/cskyv2_ck860.d: New.\n-\t* gas/testsuite/gas/csky/cskyv2_ck860.s: New.\n-\t* gas/testsuite/gas/csky/enhance_dsp.d: Change plsli.u16\n-\tto plsli.16.\n-\t* gas/testsuite/gas/csky/enhance_dsp.s: Likewise.\n+\t* testsuite/gas/csky/cskyv2_all.d: Change 'sync 0' to 'sync'.\n+\t* testsuite/gas/csky/cskyv2_all.s: Likewise.\n+\t* testsuite/gas/csky/cskyv2_ck860.d: New.\n+\t* testsuite/gas/csky/cskyv2_ck860.s: New.\n+\t* testsuite/gas/csky/enhance_dsp.d: Change plsli.u16 to plsli.16.\n+\t* testsuite/gas/csky/enhance_dsp.s: Likewise.\n \n 2020-08-24  Alan Modra  <amodra@gmail.com>\n \n@@ -1556,7 +1560,7 @@\n \n 2020-08-04  Christian Groessler  <chris@groessler.org>\n \n-\t* gas/testsuite/gas/z8k/inout.d: Adapt to correct encoding of\n+\t* testsuite/gas/z8k/inout.d: Adapt to correct encoding of\n \t\"sout/soutb #imm,reg\"\n \n 2020-08-04  H.J. Lu  <hongjiu.lu@intel.com>\n@@ -1579,7 +1583,7 @@\n \n 2020-08-02  Mark Wielaard  <mark@klomp.org>\n \n-\t* gas/dwarf2dbg.c (out_dir_and_file_list): For DWARF5 emit at\n+\t* dwarf2dbg.c (out_dir_and_file_list): For DWARF5 emit at\n \tleast one directory if there is at least one file. Use dirs[1]\n \tif dirs[0] is not set, or if there is no dirs[1] the current\n \tworking directory. Use files[1] filename, when files[0] filename\n@@ -1589,10 +1593,10 @@\n \n \t* dwarf2dbg.c (out_debug_info): Emit unit type and abbrev offset\n \tfor DWARF5.\n-\t* gas/testsuite/gas/elf/dwarf-4-cu.d: New file.\n-\t* gas/testsuite/gas/elf/dwarf-4-cu.s: Likewise.\n-\t* gas/testsuite/gas/elf/dwarf-5-cu.d: Likewise.\n-\t* gas/testsuite/gas/elf/dwarf-5-cu.s: Likewise.\n+\t* testsuite/gas/elf/dwarf-4-cu.d: New file.\n+\t* testsuite/gas/elf/dwarf-4-cu.s: Likewise.\n+\t* testsuite/gas/elf/dwarf-5-cu.d: Likewise.\n+\t* testsuite/gas/elf/dwarf-5-cu.s: Likewise.\n \t* testsuite/gas/elf/elf.exp: Run dwarf-4-cu and dwarf-5-cu.\n \n 2020-08-02  Mark Wielaard  <mark@klomp.org>\n@@ -2282,7 +2286,8 @@\n \n 2020-06-29  H.J. Lu  <hongjiu.lu@intel.com>\n \n-\t* tc-i386.c (build_vex_prefix): Support VEX base opcode length > 1.\n+\t* config/tc-i386.c (build_vex_prefix): Support VEX base opcode\n+\tlength > 1.\n \t(md_assemble): Don't process ImmExt without operands.\n \n 2020-06-29  Hans-Peter Nilsson  <hp@bitrange.com>\n@@ -2737,8 +2742,8 @@\n \n 2020-05-27  Simon Cook  <simon.cook@embecosm.com>\n \n-        * config/tc-riscv.c (riscv_init_csr_hash): NULL initilize next\n-        pointer when creating struct riscv_csr_extra.\n+\t* config/tc-riscv.c (riscv_init_csr_hash): NULL initilize next\n+\tpointer when creating struct riscv_csr_extra.\n \n 2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>\n \n@@ -2921,23 +2926,23 @@\n \t-mpriv-spec=1.11.\n \t* testsuite/gas/riscv/priv-reg-fail-fext.l: Likewise.  There are some\n \tversion warnings for the test case.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.d: Likewise.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.l: Likewise.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-read-only-02.d: Likewise.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d: Likewise.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.d: New test case.\n+\t* testsuite/gas/riscv/priv-reg-fail-read-only-01.d: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-read-only-01.l: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-read-only-02.d: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-rv32-only.d: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-version-1p9.d: New test case.\n \tCheck whether the CSR is valid when privilege version 1.9 is choosed.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.l: Likewise.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d: New test case.\n+\t* testsuite/gas/riscv/priv-reg-fail-version-1p9.l: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d: New test case.\n \tCheck whether the CSR is valid when privilege version 1.9.1 is choosed.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.l: Likewise.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.d: New test case.\n+\t* testsuite/gas/riscv/priv-reg-fail-version-1p9p1.l: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-version-1p10.d: New test case.\n \tCheck whether the CSR is valid when privilege version 1.10 is choosed.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.l: Likewise.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.d: New test case.\n+\t* testsuite/gas/riscv/priv-reg-fail-version-1p10.l: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-version-1p11.d: New test case.\n \tCheck whether the CSR is valid when privilege version 1.11 is choosed.\n-\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.l: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-version-1p11.l: Likewise.\n \t* config/tc-riscv.c (DEFAULT_RISCV_ISA_SPEC): Default configure option\n \tsetting.  You can set it by configure option --with-priv-spec.\n \t(riscv_set_default_priv_spec): New function used to set the default\n@@ -3534,7 +3539,7 @@\n \t* testsuite/gas/i386/solaris/x86-64-branch-3.d: New file.\n \t* testsuite/gas/i386/solaris/x86-64-jump.d: Incorporate changes to\n \ttestsuite/gas/i386/x86-64-jump.d.\n-\t* gas/testsuite/gas/i386/solaris/x86-64-mpx-branch-1.d:\n+\t* testsuite/gas/i386/solaris/x86-64-mpx-branch-1.d:\n \tIncorporate changes to\n \tgas/testsuite/gas/i386/x86-64-mpx-branch-1.d.\n \t* testsuite/gas/i386/solaris/x86-64-mpx-branch-2.d : Incorporate\n@@ -4524,7 +4529,7 @@\n \n 2020-02-01  Anthony Green  <green@moxielogic.com>\n \n-       * config/tc-moxie.c (md_begin): Don't force big-endian mode.\n+\t* config/tc-moxie.c (md_begin): Don't force big-endian mode.\n \n 2020-01-31  Sandra Loosemore  <sandra@codesourcery.com>\n "
    },
    {
      "sha": "569fe2bc852d9ce94f4bf3e665ce0eca63910fa8",
      "filename": "gas/config/tc-csky.c",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0be2fe677c53c6d363a40ae3612d4490ba377e02/gas/config/tc-csky.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0be2fe677c53c6d363a40ae3612d4490ba377e02/gas/config/tc-csky.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-csky.c?ref=0be2fe677c53c6d363a40ae3612d4490ba377e02",
      "patch": "@@ -2565,8 +2565,7 @@ parse_type_ctrlreg (char** oper)\n \t}\n       else\n \t{\n-\t  crx = csky_get_control_regno (mach_flag & CSKY_ARCH_MASK,\n-\t\t\t  s, &s, &sel);\n+\t  crx = csky_get_control_regno (mach_flag, s, &s, &sel);\n \t  if (crx < 0)\n \t    {\n \t      SET_ERROR_STRING (ERROR_CREG_ILLEGAL, s);\n@@ -2577,8 +2576,7 @@ parse_type_ctrlreg (char** oper)\n     }\n   else if (i == -1)\n     {\n-      i = csky_get_control_regno (mach_flag & CSKY_ARCH_MASK,\n-\t\t\t\t  s, &s, &sel);\n+      i = csky_get_control_regno (mach_flag, s, &s, &sel);\n       if (i < 0)\n \t{\n \t  SET_ERROR_STRING (ERROR_CREG_ILLEGAL, s);\n@@ -2595,7 +2593,7 @@ csky_get_reg_val (char *str, int *len)\n {\n   int regno = 0;\n   char *s = str;\n-  regno = csky_get_general_regno (mach_flag & CSKY_ARCH_MASK, str, &s);\n+  regno = csky_get_general_regno (mach_flag, str, &s);\n   *len = (s - str);\n   return regno;\n }"
    },
    {
      "sha": "307194dad5ef2ae492823c213ce1a9c749de7b72",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 10,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0be2fe677c53c6d363a40ae3612d4490ba377e02/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0be2fe677c53c6d363a40ae3612d4490ba377e02/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=0be2fe677c53c6d363a40ae3612d4490ba377e02",
      "patch": "@@ -1,7 +1,16 @@\n+2020-09-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* csky-opc.h: Formatting.\n+\t(GENERAL_REG_BANK): Correct spelling.  Update use throughout file.\n+\t(get_register_name): Mask arch with CSKY_ARCH_MASK for shift,\n+\tand shift 1u.\n+\t(get_register_number): Likewise.\n+\t* csky-dis.c (get_gr_name, get_cr_name): Don't mask mach_flag.\n+\n 2020-09-24  Lili Cui  <lili.cui@intel.com>\n \n \tPR 26654\n-\t*i386-dis.c (enum): Put MOD_VEX_0F38* together.\n+\t* i386-dis.c (enum): Put MOD_VEX_0F38* together.\n \n 2020-09-24  Andrew Burgess <andrew.burgess@embecosm.com>\n \n@@ -28,15 +37,14 @@\n \n 2020-09-17 Cooper Qu <<cooper.qu@linux.alibaba.com>>\n \n-\topcodes/\n \t* csky-dis.c (using_abi): New.\n \t(parse_csky_dis_options): New function.\n \t(get_gr_name): New function.\n \t(get_cr_name): New function.\n \t(csky_output_operand): Use get_gr_name and get_cr_name to\n \tdisassemble and add handle of OPRND_TYPE_IMM5b_LS.\n \t(print_insn_csky): Parse disassembler options.\n-\t* opcodes/csky-opc.h (OPRND_TYPE_IMM5b_LS): New enum.\n+\t* csky-opc.h (OPRND_TYPE_IMM5b_LS): New enum.\n \t(GENARAL_REG_BANK): Define.\n \t(REG_SUPPORT_ALL): Define.\n \t(REG_SUPPORT_ALL): New.\n@@ -872,7 +880,7 @@\n \tEVEX_W_0F3A1B, EVEX_W_0F3A21, EVEX_W_0F3A23, EVEX_W_0F3A38,\n \tEVEX_W_0F3A39, EVEX_W_0F3A3A, EVEX_W_0F3A3B, EVEX_W_0F3A42,\n \tEVEX_W_0F3A43, EVEX_W_0F3A70, EVEX_W_0F3A72): ... these\n- \trespectively.\n+\trespectively.\n \t(dis386_twobyte, three_byte_table, vex_table, vex_len_table,\n \tvex_w_table, mod_table): Replace / remove respective entries.\n \t(print_insn): Move up dp->prefix_requirement handling. Handle\n@@ -2696,7 +2704,7 @@\n 2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \tPR 25376\n-\t* opcodes/arm-dis.c (coprocessor_opcodes): Use CORE_HIGH for MVE bits.\n+\t* arm-dis.c (coprocessor_opcodes): Use CORE_HIGH for MVE bits.\n \t(neon_opcodes): Likewise.\n \t(select_arm_features): Make sure we enable MVE bits when selecting\n \tarmv8.1-m.main.  Make sure we do not enable MVE bits when not selecting\n@@ -2750,13 +2758,13 @@\n \t* i386-dis.c (print_insn): Initialize the insn info fields, and\n \tdetect jumps.\n \n-2012-01-13  Claudiu Zissulescu <claziss@gmail.com>\n+2020-01-13  Claudiu Zissulescu <claziss@gmail.com>\n \n \t* arc-opc.c (C_NE): Make it required.\n \n-2012-01-13  Claudiu Zissulescu <claziss@gmail.com>\n+2020-01-13  Claudiu Zissulescu <claziss@gmail.com>\n \n-        * opcode/arc-dis.c (regnames): Correct ACCL/ACCH naming, fix typo\n+\t* opcode/arc-dis.c (regnames): Correct ACCL/ACCH naming, fix typo\n \treserved register name.\n \n 2020-01-13  Alan Modra  <amodra@gmail.com>\n@@ -2893,13 +2901,13 @@\n \n \t* aarch64-tbl.h (aarch64_opcode_table): Drop 'i' from\n \tuzip{1,2}.\n-\t* opcodes/aarch64-dis-2.c: Re-generate.\n+\t* aarch64-dis-2.c: Re-generate.\n \n 2020-01-03  Jan Beulich  <jbeulich@suse.com>\n \n \t* aarch64-tbl.h (aarch64_opcode_table): Correct 64-bit\n \tFMMLA encoding.\n-\t* opcodes/aarch64-dis-2.c: Re-generate.\n+\t* aarch64-dis-2.c: Re-generate.\n \n 2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n "
    },
    {
      "sha": "b31b685b905bc41992fd35c9722e703abefd3ec6",
      "filename": "opcodes/csky-dis.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0be2fe677c53c6d363a40ae3612d4490ba377e02/opcodes/csky-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0be2fe677c53c6d363a40ae3612d4490ba377e02/opcodes/csky-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/csky-dis.c?ref=0be2fe677c53c6d363a40ae3612d4490ba377e02",
      "patch": "@@ -287,14 +287,14 @@ parse_csky_dis_options (const char *opts_in)\n static const char *\n get_gr_name (int regno)\n {\n-  return csky_get_general_reg_name (mach_flag & CSKY_ABI_MASK, regno, using_abi);\n+  return csky_get_general_reg_name (mach_flag, regno, using_abi);\n }\n \n /* Get control register name.  */\n static const char *\n get_cr_name (unsigned int regno, int bank)\n {\n-  return csky_get_control_reg_name (mach_flag & CSKY_ABI_MASK, bank, regno, using_abi);\n+  return csky_get_control_reg_name (mach_flag, bank, regno, using_abi);\n }\n \n static int"
    },
    {
      "sha": "199b8913717ddcb0d08c87849701fff4a42a64f6",
      "filename": "opcodes/csky-opc.h",
      "status": "modified",
      "additions": 14,
      "deletions": 16,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0be2fe677c53c6d363a40ae3612d4490ba377e02/opcodes/csky-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0be2fe677c53c6d363a40ae3612d4490ba377e02/opcodes/csky-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/csky-opc.h?ref=0be2fe677c53c6d363a40ae3612d4490ba377e02",
      "patch": "@@ -653,7 +653,7 @@ const struct psrbit cskyv2_psr_bits[] =\n   {0, 0, NULL},\n };\n \n-#define GENARAL_REG_BANK      0x80000000\n+#define GENERAL_REG_BANK      0x80000000\n #define REG_SUPPORT_ALL 0xffffffff\n \n /* CSKY register description.  */\n@@ -698,7 +698,7 @@ struct csky_reg_def\n static struct csky_reg_def csky_abiv1_general_regs[] = \n {\n #define DECLARE_REG(regno, abi_name, support)\t\t\\\n-  {GENARAL_REG_BANK, regno, \"r\"#regno, abi_name, support, NULL}\n+  {GENERAL_REG_BANK, regno, \"r\"#regno, abi_name, support, NULL}\n \n   DECLARE_REG (0, \"sp\", REG_SUPPORT_ALL),\n   DECLARE_REG (1, NULL, REG_SUPPORT_ALL),\n@@ -769,7 +769,7 @@ static struct csky_reg_def csky_abiv2_general_regs[] =\n #undef DECLARE_REG\n #endif\n #define DECLARE_REG(regno, abi_name, support)\t\t\\\n-  {GENARAL_REG_BANK, regno, \"r\"#regno, abi_name, support, NULL}\n+  {GENERAL_REG_BANK, regno, \"r\"#regno, abi_name, support, NULL}\n \n   DECLARE_REG (0, \"a0\", REG_SUPPORT_ALL),\n   DECLARE_REG (1, \"a1\", REG_SUPPORT_ALL),\n@@ -926,7 +926,7 @@ get_register_name (struct csky_reg_def *reg_table,\n     {\n       if (reg_table[i].bank == bank\n \t  && reg_table[i].regno == regno\n-\t  && (reg_table[i].arch_flag & (1 << arch)))\n+\t  && (reg_table[i].arch_flag & (1u << (arch & CSKY_ARCH_MASK))))\n \t{\n \t  if (is_abi && reg_table[i].abi_name)\n \t    return reg_table[i].abi_name;\n@@ -957,7 +957,7 @@ get_register_number (struct csky_reg_def *reg_table,\n       len = strlen (reg_table[i].name);\n       if ((strncasecmp (reg_table[i].name, s, len) == 0)\n \t  && !(ISDIGIT (s[len]))\n-\t  && (reg_table[i].arch_flag & (1 << arch)))\n+\t  && (reg_table[i].arch_flag & (1u << (arch & CSKY_ARCH_MASK))))\n \t{\n \t  *end = s + len;\n \t  *bank = reg_table[i].bank;\n@@ -973,7 +973,7 @@ get_register_number (struct csky_reg_def *reg_table,\n       len = strlen (reg_table[i].abi_name);\n       if ((strncasecmp (reg_table[i].abi_name, s, len) == 0)\n \t  && !(ISALNUM (s[len]))\n-\t  && (reg_table[i].arch_flag & (1 << arch)))\n+\t  && (reg_table[i].arch_flag & (1u << (arch & CSKY_ARCH_MASK))))\n \t{\n \t  *end = s + len;\n \t  *bank = reg_table[i].bank;\n@@ -990,23 +990,22 @@ csky_get_general_reg_name (int arch, int regno, int is_abi)\n {\n   struct csky_reg_def *reg_table;\n \n-  if (IS_CSKY_ARCH_V1(arch))\n+  if (IS_CSKY_ARCH_V1 (arch))\n     reg_table = csky_abiv1_general_regs;\n   else\n     reg_table = csky_abiv2_general_regs;\n \n-  return get_register_name (reg_table, arch,\n-\t\t\t    GENARAL_REG_BANK, regno, is_abi);\n+  return get_register_name (reg_table, arch, GENERAL_REG_BANK, regno, is_abi);\n }\n \n /* Return general register's number.  */\n static inline int\n-csky_get_general_regno(int arch, char *s, char **end)\n+csky_get_general_regno (int arch, char *s, char **end)\n {\n   struct csky_reg_def *reg_table;\n   int bank = 0;\n \n-  if (IS_CSKY_ARCH_V1(arch))\n+  if (IS_CSKY_ARCH_V1 (arch))\n     reg_table = csky_abiv1_general_regs;\n   else\n     reg_table = csky_abiv2_general_regs;\n@@ -1020,22 +1019,21 @@ csky_get_control_reg_name (int arch, int bank, int regno, int is_abi)\n {\n   struct csky_reg_def *reg_table;\n \n-  if (IS_CSKY_ARCH_V1(arch))\n+  if (IS_CSKY_ARCH_V1 (arch))\n     reg_table = csky_abiv1_control_regs;\n   else\n     reg_table = csky_abiv2_control_regs;\n \n-  return get_register_name (reg_table, arch, bank,\n-\t\t\t    regno, is_abi);\n+  return get_register_name (reg_table, arch, bank, regno, is_abi);\n }\n \n /* Return control register's number.  */\n static inline int\n-csky_get_control_regno(int arch, char *s, char **end, int *bank)\n+csky_get_control_regno (int arch, char *s, char **end, int *bank)\n {\n   struct csky_reg_def *reg_table;\n \n-  if (IS_CSKY_ARCH_V1(arch))\n+  if (IS_CSKY_ARCH_V1 (arch))\n     reg_table = csky_abiv1_control_regs;\n   else\n     reg_table = csky_abiv2_control_regs;"
    }
  ]
}