{
  "sha": "8903bd8a37f905f5d77d2e04219e1a1eddaa6133",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODkwM2JkOGEzN2Y5MDVmNWQ3N2QyZTA0MjE5ZTFhMWVkZGFhNjEzMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T21:16:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:35Z"
    },
    "message": "Introduce max_height method\n\nThis introduces the tui_win_info::max_height method and changes\nnew_height_ok to use it, rather than checking the window type\ndirectly.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-win.c (tui_win_info::max_height)\n\t(tui_cmd_window::max_height): New methods.\n\t(new_height_ok): Call max_height.\n\t* tui/tui-data.h (struct tui_win_info, struct tui_cmd_window)\n\t<max_height>: New method.",
    "tree": {
      "sha": "18b361687cd3700d12e228b3e7c704b212a01e9e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/18b361687cd3700d12e228b3e7c704b212a01e9e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8903bd8a37f905f5d77d2e04219e1a1eddaa6133",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8903bd8a37f905f5d77d2e04219e1a1eddaa6133",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8903bd8a37f905f5d77d2e04219e1a1eddaa6133",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8903bd8a37f905f5d77d2e04219e1a1eddaa6133/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3f02ce1e3df15731872befd2e711854b2b259745",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f02ce1e3df15731872befd2e711854b2b259745",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3f02ce1e3df15731872befd2e711854b2b259745"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 31,
    "deletions": 6
  },
  "files": [
    {
      "sha": "174d12b8fa7ea807e1f165e7ec2f62801caac660",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8903bd8a37f905f5d77d2e04219e1a1eddaa6133/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8903bd8a37f905f5d77d2e04219e1a1eddaa6133/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8903bd8a37f905f5d77d2e04219e1a1eddaa6133",
      "patch": "@@ -1,3 +1,11 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-win.c (tui_win_info::max_height)\n+\t(tui_cmd_window::max_height): New methods.\n+\t(new_height_ok): Call max_height.\n+\t* tui/tui-data.h (struct tui_win_info, struct tui_cmd_window)\n+\t<max_height>: New method.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-win.c (tui_source_window_base::set_new_height)"
    },
    {
      "sha": "08b0dad87244a85bcf71d08b33aa44a1ed14fa2e",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8903bd8a37f905f5d77d2e04219e1a1eddaa6133/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8903bd8a37f905f5d77d2e04219e1a1eddaa6133/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=8903bd8a37f905f5d77d2e04219e1a1eddaa6133",
      "patch": "@@ -273,6 +273,9 @@ struct tui_win_info\n   {\n   }\n \n+  /* Compute the maximum height of this window.  */\n+  virtual int max_height () const;\n+\n   /* Methods to scroll the contents of this window.  Note that they\n      are named with \"_scroll\" coming at the end because the more\n      obvious \"scroll_forward\" is defined as a macro in term.h.  */\n@@ -426,6 +429,8 @@ struct tui_cmd_window : public tui_win_info\n   {\n   }\n \n+  int max_height () const override;\n+\n   int start_line = 0;\n \n protected:"
    },
    {
      "sha": "dc40ab7736dedfaccd314ffa0cffb4b2d03da532",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 18,
      "deletions": 6,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8903bd8a37f905f5d77d2e04219e1a1eddaa6133/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8903bd8a37f905f5d77d2e04219e1a1eddaa6133/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=8903bd8a37f905f5d77d2e04219e1a1eddaa6133",
      "patch": "@@ -1377,6 +1377,22 @@ make_visible_with_new_height (struct tui_win_info *win_info)\n }\n \n \n+/* See tui-data.h.  */\n+\n+int\n+tui_win_info::max_height () const\n+{\n+  return tui_term_height () - 2;\n+}\n+\n+/* See tui-data.h.  */\n+\n+int\n+tui_cmd_window::max_height () const\n+{\n+  return tui_term_height () - 4;\n+}\n+\n static int\n new_height_ok (struct tui_win_info *primary_win_info, \n \t       int new_height)\n@@ -1391,12 +1407,8 @@ new_height_ok (struct tui_win_info *primary_win_info,\n       diff = (new_height - primary_win_info->generic.height) * (-1);\n       if (cur_layout == SRC_COMMAND || cur_layout == DISASSEM_COMMAND)\n \t{\n-\t  ok = ((primary_win_info->generic.type == CMD_WIN \n-\t\t && new_height <= (tui_term_height () - 4) \n-\t\t && new_height >= MIN_CMD_WIN_HEIGHT) \n-\t\t|| (primary_win_info->generic.type != CMD_WIN \n-\t\t    && new_height <= (tui_term_height () - 2) \n-\t\t    && new_height >= MIN_WIN_HEIGHT));\n+\t  ok = (new_height <= primary_win_info->max_height ()\n+\t\t&& new_height >= MIN_CMD_WIN_HEIGHT);\n \t  if (ok)\n \t    {\t\t\t/* Check the total height.  */\n \t      struct tui_win_info *win_info;"
    }
  ]
}