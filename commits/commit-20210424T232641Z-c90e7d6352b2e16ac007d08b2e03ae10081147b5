{
  "sha": "c90e7d6352b2e16ac007d08b2e03ae10081147b5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzkwZTdkNjM1MmIyZTE2YWMwMDdkMDhiMmUwM2FlMTAwODExNDdiNQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-24T23:26:04Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-24T23:26:41Z"
    },
    "message": "gdbsupport, gdb: give names to observers\n\nGive a name to each observer, this will help produce more meaningful\ndebug message.\n\ngdbsupport/ChangeLog:\n\n\t* observable.h (class observable) <struct observer> <observer>:\n\tAdd name parameter.\n\t<name>: New field.\n\t<attach>: Add name parameter, update all callers.\n\nChange-Id: Ie0cc4664925215b8d2b09e026011b7803549fba0",
    "tree": {
      "sha": "2ca6bb8a1d338ff48f2eed24dcb25300e4204f54",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2ca6bb8a1d338ff48f2eed24dcb25300e4204f54"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c90e7d6352b2e16ac007d08b2e03ae10081147b5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c90e7d6352b2e16ac007d08b2e03ae10081147b5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c90e7d6352b2e16ac007d08b2e03ae10081147b5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c90e7d6352b2e16ac007d08b2e03ae10081147b5/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ec098003e27d67bca9e9880320e26ab8ad30fe31",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ec098003e27d67bca9e9880320e26ab8ad30fe31",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ec098003e27d67bca9e9880320e26ab8ad30fe31"
    }
  ],
  "stats": {
    "total": 368,
    "additions": 219,
    "deletions": 149
  },
  "files": [
    {
      "sha": "28f14c9ae53cf4c5edc2a3a3196a7a57512813cb",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -13494,7 +13494,7 @@ DWARF attribute.\"),\n \t\t\t\t\t   NULL, xcalloc, xfree);\n \n   /* The ada-lang observers.  */\n-  gdb::observers::new_objfile.attach (ada_new_objfile_observer);\n-  gdb::observers::free_objfile.attach (ada_free_objfile_observer);\n-  gdb::observers::inferior_exit.attach (ada_inferior_exit);\n+  gdb::observers::new_objfile.attach (ada_new_objfile_observer, \"ada-lang\");\n+  gdb::observers::free_objfile.attach (ada_free_objfile_observer, \"ada-lang\");\n+  gdb::observers::inferior_exit.attach (ada_inferior_exit, \"ada-lang\");\n }"
    },
    {
      "sha": "a9c6b5eb1b3ad294bfaa8e0396f4632f958cfaba",
      "filename": "gdb/ada-tasks.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/ada-tasks.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/ada-tasks.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-tasks.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -1478,8 +1478,10 @@ void\n _initialize_tasks ()\n {\n   /* Attach various observers.  */\n-  gdb::observers::normal_stop.attach (ada_tasks_normal_stop_observer);\n-  gdb::observers::new_objfile.attach (ada_tasks_new_objfile_observer);\n+  gdb::observers::normal_stop.attach (ada_tasks_normal_stop_observer,\n+\t\t\t\t      \"ada-tasks\");\n+  gdb::observers::new_objfile.attach (ada_tasks_new_objfile_observer,\n+\t\t\t\t      \"ada-tasks\");\n \n   /* Some new commands provided by this module.  */\n   add_info (\"tasks\", info_tasks_command,"
    },
    {
      "sha": "5e52865b3788bd7b92bcf458aed9f1f9324638d2",
      "filename": "gdb/agent.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/agent.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/agent.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/agent.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -78,7 +78,8 @@ void _initialize_agent ();\n void\n _initialize_agent ()\n {\n-  gdb::observers::new_objfile.attach (agent_new_objfile);\n+  gdb::observers::new_objfile.attach (agent_new_objfile,\n+\t\t\t\t      \"agent\");\n \n   add_setshow_enum_cmd (\"agent\", class_run,\n \t\t\tcan_use_agent_enum,"
    },
    {
      "sha": "889cb65fdcdb84af5da9e600f5218e18f4500c05",
      "filename": "gdb/aix-thread.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/aix-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/aix-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aix-thread.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -1839,11 +1839,12 @@ void\n _initialize_aix_thread ()\n {\n   /* Notice when object files get loaded and unloaded.  */\n-  gdb::observers::new_objfile.attach (new_objfile);\n+  gdb::observers::new_objfile.attach (new_objfile, \"aix-thread\");\n \n   /* Add ourselves to inferior_created event chain.\n      This is needed to enable the thread target on \"attach\".  */\n-  gdb::observers::inferior_created.attach (aix_thread_inferior_created);\n+  gdb::observers::inferior_created.attach (aix_thread_inferior_created,\n+\t\t\t\t\t   \"aix-thread\");\n \n   add_setshow_boolean_cmd (\"aix-thread\", class_maintenance, &debug_aix_thread,\n \t\t\t   _(\"Set debugging of AIX thread module.\"),"
    },
    {
      "sha": "8c813732eba6d0bb01547a8c91a891d6c9f2634b",
      "filename": "gdb/annotate.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/annotate.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/annotate.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/annotate.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -627,8 +627,8 @@ void _initialize_annotate ();\n void\n _initialize_annotate ()\n {\n-  gdb::observers::breakpoint_created.attach (breakpoint_changed);\n-  gdb::observers::breakpoint_deleted.attach (breakpoint_changed);\n-  gdb::observers::breakpoint_modified.attach (breakpoint_changed);\n-  gdb::observers::thread_exit.attach (annotate_thread_exited);\n+  gdb::observers::breakpoint_created.attach (breakpoint_changed, \"annotate\");\n+  gdb::observers::breakpoint_deleted.attach (breakpoint_changed, \"annotate\");\n+  gdb::observers::breakpoint_modified.attach (breakpoint_changed, \"annotate\");\n+  gdb::observers::thread_exit.attach (annotate_thread_exited, \"annotate\");\n }"
    },
    {
      "sha": "056973f3492033cb85342d5d9350477a6522c8c5",
      "filename": "gdb/arm-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/arm-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/arm-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -9553,7 +9553,7 @@ _initialize_arm_tdep ()\n   gdbarch_register (bfd_arch_arm, arm_gdbarch_init, arm_dump_tdep);\n \n   /* Add ourselves to objfile event chain.  */\n-  gdb::observers::new_objfile.attach (arm_exidx_new_objfile);\n+  gdb::observers::new_objfile.attach (arm_exidx_new_objfile, \"arm-tdep\");\n \n   /* Register an ELF OS ABI sniffer for ARM binaries.  */\n   gdbarch_register_osabi_sniffer (bfd_arch_arm,"
    },
    {
      "sha": "239efa346064fccf26664afcac3501d55363aa61",
      "filename": "gdb/auto-load.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/auto-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/auto-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/auto-load.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -1503,7 +1503,7 @@ _initialize_auto_load ()\n   char *guile_name_help;\n   const char *suffix;\n \n-  gdb::observers::new_objfile.attach (auto_load_new_objfile);\n+  gdb::observers::new_objfile.attach (auto_load_new_objfile, \"auto-load\");\n \n   add_setshow_boolean_cmd (\"gdb-scripts\", class_support,\n \t\t\t   &auto_load_gdb_scripts, _(\"\\\n@@ -1613,7 +1613,8 @@ This option has security implications for untrusted inferiors.\"),\n \t\t\t\t     show_auto_load_safe_path,\n \t\t\t\t     auto_load_set_cmdlist_get (),\n \t\t\t\t     auto_load_show_cmdlist_get ());\n-  gdb::observers::gdb_datadir_changed.attach (auto_load_gdb_datadir_changed);\n+  gdb::observers::gdb_datadir_changed.attach (auto_load_gdb_datadir_changed,\n+\t\t\t\t\t      \"auto-load\");\n \n   cmd = add_cmd (\"add-auto-load-safe-path\", class_support,\n \t\t add_auto_load_safe_path,"
    },
    {
      "sha": "2bcf9f452e3eb2541cc3e5cfaa0b1caac4179d91",
      "filename": "gdb/auxv.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/auxv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/auxv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/auxv.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -600,7 +600,7 @@ _initialize_auxv ()\n This is information provided by the operating system at program startup.\"));\n \n   /* Observers used to invalidate the auxv cache when needed.  */\n-  gdb::observers::inferior_exit.attach (invalidate_auxv_cache_inf);\n-  gdb::observers::inferior_appeared.attach (invalidate_auxv_cache_inf);\n-  gdb::observers::executable_changed.attach (invalidate_auxv_cache);\n+  gdb::observers::inferior_exit.attach (invalidate_auxv_cache_inf, \"auxv\");\n+  gdb::observers::inferior_appeared.attach (invalidate_auxv_cache_inf, \"auxv\");\n+  gdb::observers::executable_changed.attach (invalidate_auxv_cache, \"auxv\");\n }"
    },
    {
      "sha": "9100ac6d544415c03c59babfb9c60dd724798cff",
      "filename": "gdb/break-catch-syscall.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/break-catch-syscall.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/break-catch-syscall.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/break-catch-syscall.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -607,7 +607,8 @@ _initialize_break_catch_syscall ()\n {\n   initialize_syscall_catchpoint_ops ();\n \n-  gdb::observers::inferior_exit.attach (clear_syscall_counts);\n+  gdb::observers::inferior_exit.attach (clear_syscall_counts,\n+\t\t\t\t\t\"break-catch-syscall\");\n \n   add_catch_command (\"syscall\", _(\"\\\n Catch system calls by their names, groups and/or numbers.\\n\\"
    },
    {
      "sha": "9cc53f8ef54ed3c21b2b672431bac260009a8cab",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -15646,9 +15646,12 @@ _initialize_breakpoint ()\n \n   initialize_breakpoint_ops ();\n \n-  gdb::observers::solib_unloaded.attach (disable_breakpoints_in_unloaded_shlib);\n-  gdb::observers::free_objfile.attach (disable_breakpoints_in_freed_objfile);\n-  gdb::observers::memory_changed.attach (invalidate_bp_value_on_memory_change);\n+  gdb::observers::solib_unloaded.attach (disable_breakpoints_in_unloaded_shlib,\n+\t\t\t\t\t \"breakpoint\");\n+  gdb::observers::free_objfile.attach (disable_breakpoints_in_freed_objfile,\n+\t\t\t\t       \"breakpoint\");\n+  gdb::observers::memory_changed.attach (invalidate_bp_value_on_memory_change,\n+\t\t\t\t\t \"breakpoint\");\n \n   breakpoint_chain = 0;\n   /* Don't bother to call set_breakpoint_count.  $bpnum isn't useful\n@@ -16232,6 +16235,8 @@ This is useful for formatted output in user-defined commands.\"));\n \n   automatic_hardware_breakpoints = true;\n \n-  gdb::observers::about_to_proceed.attach (breakpoint_about_to_proceed);\n-  gdb::observers::thread_exit.attach (remove_threaded_breakpoints);\n+  gdb::observers::about_to_proceed.attach (breakpoint_about_to_proceed,\n+\t\t\t\t\t   \"breakpoint\");\n+  gdb::observers::thread_exit.attach (remove_threaded_breakpoints,\n+\t\t\t\t      \"breakpoint\");\n }"
    },
    {
      "sha": "f8353f070419c46770d934057a2f9aceed83cfce",
      "filename": "gdb/bsd-uthread.c",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/bsd-uthread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/bsd-uthread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bsd-uthread.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -550,7 +550,10 @@ _initialize_bsd_uthread ()\n {\n   bsd_uthread_data = gdbarch_data_register_pre_init (bsd_uthread_init);\n \n-  gdb::observers::inferior_created.attach (bsd_uthread_inferior_created);\n-  gdb::observers::solib_loaded.attach (bsd_uthread_solib_loaded);\n-  gdb::observers::solib_unloaded.attach (bsd_uthread_solib_unloaded);\n+  gdb::observers::inferior_created.attach (bsd_uthread_inferior_created,\n+\t\t\t\t\t   \"bsd-uthread\");\n+  gdb::observers::solib_loaded.attach (bsd_uthread_solib_loaded,\n+\t\t\t\t       \"bsd-uthread\");\n+  gdb::observers::solib_unloaded.attach (bsd_uthread_solib_unloaded,\n+\t\t\t\t\t \"bsd-uthread\");\n }"
    },
    {
      "sha": "31fe934bdfff6792b556e59938de5a076450f05d",
      "filename": "gdb/cli/cli-interp.c",
      "status": "modified",
      "additions": 11,
      "deletions": 9,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/cli/cli-interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/cli/cli-interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-interp.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -482,14 +482,16 @@ _initialize_cli_interp ()\n   interp_factory_register (INTERP_CONSOLE, cli_interp_factory);\n \n   /* If changing this, remember to update tui-interp.c as well.  */\n-  gdb::observers::normal_stop.attach (cli_on_normal_stop);\n-  gdb::observers::end_stepping_range.attach (cli_on_end_stepping_range);\n-  gdb::observers::signal_received.attach (cli_on_signal_received);\n-  gdb::observers::signal_exited.attach (cli_on_signal_exited);\n-  gdb::observers::exited.attach (cli_on_exited);\n-  gdb::observers::no_history.attach (cli_on_no_history);\n-  gdb::observers::sync_execution_done.attach (cli_on_sync_execution_done);\n-  gdb::observers::command_error.attach (cli_on_command_error);\n+  gdb::observers::normal_stop.attach (cli_on_normal_stop, \"cli-interp\");\n+  gdb::observers::end_stepping_range.attach (cli_on_end_stepping_range,\n+\t\t\t\t\t     \"cli-interp\");\n+  gdb::observers::signal_received.attach (cli_on_signal_received, \"cli-interp\");\n+  gdb::observers::signal_exited.attach (cli_on_signal_exited, \"cli-interp\");\n+  gdb::observers::exited.attach (cli_on_exited, \"cli-interp\");\n+  gdb::observers::no_history.attach (cli_on_no_history, \"cli-interp\");\n+  gdb::observers::sync_execution_done.attach (cli_on_sync_execution_done,\n+\t\t\t\t\t      \"cli-interp\");\n+  gdb::observers::command_error.attach (cli_on_command_error, \"cli-interp\");\n   gdb::observers::user_selected_context_changed.attach\n-    (cli_on_user_selected_context_changed);\n+    (cli_on_user_selected_context_changed, \"cli-interp\");\n }"
    },
    {
      "sha": "6bbcbba48bfcaddf316cb15b94ab503934ee1a66",
      "filename": "gdb/dummy-frame.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/dummy-frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/dummy-frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dummy-frame.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -439,5 +439,5 @@ _initialize_dummy_frame ()\n \t   _(\"Print the contents of the internal dummy-frame stack.\"),\n \t   &maintenanceprintlist);\n \n-  gdb::observers::inferior_created.attach (cleanup_dummy_frames);\n+  gdb::observers::inferior_created.attach (cleanup_dummy_frames, \"dummy-frame\");\n }"
    },
    {
      "sha": "85d410e8a7aea72719f7ec0856ca1799c7941272",
      "filename": "gdb/extension.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/extension.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/extension.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/extension.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -900,5 +900,5 @@ void _initialize_extension ();\n void\n _initialize_extension ()\n {\n-  gdb::observers::before_prompt.attach (ext_lang_before_prompt);\n+  gdb::observers::before_prompt.attach (ext_lang_before_prompt, \"extension\");\n }"
    },
    {
      "sha": "2032abb2738d72d28f61d0d845d392a611cee451",
      "filename": "gdb/frame.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/frame.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -3179,7 +3179,8 @@ _initialize_frame ()\n \n   frame_stash_create ();\n \n-  gdb::observers::target_changed.attach (frame_observer_target_changed);\n+  gdb::observers::target_changed.attach (frame_observer_target_changed,\n+\t\t\t\t\t \"frame\");\n \n   add_basic_prefix_cmd (\"backtrace\", class_maintenance, _(\"\\\n Set backtrace specific variables.\\n\\"
    },
    {
      "sha": "25b438b72103bd0e3caa0d7848d26eb1989fa959",
      "filename": "gdb/guile/scm-breakpoint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/guile/scm-breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/guile/scm-breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-breakpoint.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -1322,8 +1322,10 @@ gdbscm_initialize_breakpoints (void)\n   scm_set_smob_free (breakpoint_smob_tag, bpscm_free_breakpoint_smob);\n   scm_set_smob_print (breakpoint_smob_tag, bpscm_print_breakpoint_smob);\n \n-  gdb::observers::breakpoint_created.attach (bpscm_breakpoint_created);\n-  gdb::observers::breakpoint_deleted.attach (bpscm_breakpoint_deleted);\n+  gdb::observers::breakpoint_created.attach (bpscm_breakpoint_created,\n+\t\t\t\t\t     \"scm-breakpoint\");\n+  gdb::observers::breakpoint_deleted.attach (bpscm_breakpoint_deleted,\n+\t\t\t\t\t     \"scm-breakpoint\");\n \n   gdbscm_define_integer_constants (breakpoint_integer_constants, 1);\n   gdbscm_define_functions (breakpoint_functions, 1);"
    },
    {
      "sha": "994c73e40ee82c4a9edbd51360ec00766d6d4a13",
      "filename": "gdb/inflow.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/inflow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/inflow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inflow.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -963,5 +963,5 @@ _initialize_inflow ()\n   /* OK, figure out whether we have job control.  */\n   have_job_control ();\n \n-  gdb::observers::inferior_exit.attach (inflow_inferior_exit);\n+  gdb::observers::inferior_exit.attach (inflow_inferior_exit, \"inflow\");\n }"
    },
    {
      "sha": "cfec07994f4c22b8bedb895d5821f874f9dd7259",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -9759,11 +9759,13 @@ enabled by default on some platforms.\"),\n   inferior_ptid = null_ptid;\n   target_last_wait_ptid = minus_one_ptid;\n \n-  gdb::observers::thread_ptid_changed.attach (infrun_thread_ptid_changed);\n-  gdb::observers::thread_stop_requested.attach (infrun_thread_stop_requested);\n-  gdb::observers::thread_exit.attach (infrun_thread_thread_exit);\n-  gdb::observers::inferior_exit.attach (infrun_inferior_exit);\n-  gdb::observers::inferior_execd.attach (infrun_inferior_execd);\n+  gdb::observers::thread_ptid_changed.attach (infrun_thread_ptid_changed,\n+\t\t\t\t\t      \"infrun\");\n+  gdb::observers::thread_stop_requested.attach (infrun_thread_stop_requested,\n+\t\t\t\t\t\t\"infrun\");\n+  gdb::observers::thread_exit.attach (infrun_thread_thread_exit, \"infrun\");\n+  gdb::observers::inferior_exit.attach (infrun_inferior_exit, \"infrun\");\n+  gdb::observers::inferior_execd.attach (infrun_inferior_execd, \"infrun\");\n \n   /* Explicitly create without lookup, since that tries to create a\n      value with a void typed value, and when we get here, gdbarch"
    },
    {
      "sha": "296b436c7964ac6b84e261f2a68f061acf165617",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -1243,10 +1243,10 @@ _initialize_jit ()\n \t\t\t   show_jit_debug,\n \t\t\t   &setdebuglist, &showdebuglist);\n \n-  gdb::observers::inferior_created.attach (jit_inferior_created_hook);\n-  gdb::observers::inferior_execd.attach (jit_inferior_created_hook);\n-  gdb::observers::inferior_exit.attach (jit_inferior_exit_hook);\n-  gdb::observers::breakpoint_deleted.attach (jit_breakpoint_deleted);\n+  gdb::observers::inferior_created.attach (jit_inferior_created_hook, \"jit\");\n+  gdb::observers::inferior_execd.attach (jit_inferior_created_hook, \"jit\");\n+  gdb::observers::inferior_exit.attach (jit_inferior_exit_hook, \"jit\");\n+  gdb::observers::breakpoint_deleted.attach (jit_breakpoint_deleted, \"jit\");\n \n   jit_gdbarch_data = gdbarch_data_register_pre_init (jit_gdbarch_data_init);\n   if (is_dl_available ())"
    },
    {
      "sha": "927e69bf1e1e2032fc1758e2b4bef54c7219a254",
      "filename": "gdb/linux-tdep.c",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-tdep.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -2694,9 +2694,12 @@ _initialize_linux_tdep ()\n     gdbarch_data_register_pre_init (init_linux_gdbarch_data);\n \n   /* Observers used to invalidate the cache when needed.  */\n-  gdb::observers::inferior_exit.attach (invalidate_linux_cache_inf);\n-  gdb::observers::inferior_appeared.attach (invalidate_linux_cache_inf);\n-  gdb::observers::inferior_execd.attach (invalidate_linux_cache_inf);\n+  gdb::observers::inferior_exit.attach (invalidate_linux_cache_inf,\n+\t\t\t\t\t\"linux-tdep\");\n+  gdb::observers::inferior_appeared.attach (invalidate_linux_cache_inf,\n+\t\t\t\t\t    \"linux-tdep\");\n+  gdb::observers::inferior_execd.attach (invalidate_linux_cache_inf,\n+\t\t\t\t\t \"linux-tdep\");\n \n   add_setshow_boolean_cmd (\"use-coredump-filter\", class_files,\n \t\t\t   &use_coredump_filter, _(\"\\"
    },
    {
      "sha": "1c6ea4debd8819a96f156abad11a18b4e237588d",
      "filename": "gdb/linux-thread-db.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/linux-thread-db.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/linux-thread-db.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-thread-db.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -2028,10 +2028,11 @@ as they are loaded.\"),\n \t\t\t   &maintenance_show_cmdlist);\n \n   /* Add ourselves to objfile event chain.  */\n-  gdb::observers::new_objfile.attach (thread_db_new_objfile);\n+  gdb::observers::new_objfile.attach (thread_db_new_objfile, \"linux-thread-db\");\n \n   /* Add ourselves to inferior_created event chain.\n      This is needed to handle debugging statically linked programs where\n      the new_objfile observer won't get called for libpthread.  */\n-  gdb::observers::inferior_created.attach (thread_db_inferior_created);\n+  gdb::observers::inferior_created.attach (thread_db_inferior_created,\n+\t\t\t\t\t   \"linux-thread-db\");\n }"
    },
    {
      "sha": "c72f4851b4c549b7d49f340dfd1edb3f9ffafa45",
      "filename": "gdb/m68k-linux-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/m68k-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/m68k-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m68k-linux-tdep.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -429,5 +429,6 @@ _initialize_m68k_linux_tdep ()\n {\n   gdbarch_register_osabi (bfd_arch_m68k, 0, GDB_OSABI_LINUX,\n \t\t\t  m68k_linux_init_abi);\n-  gdb::observers::inferior_created.attach (m68k_linux_inferior_created);\n+  gdb::observers::inferior_created.attach (m68k_linux_inferior_created,\n+\t\t\t\t\t   \"m68k-linux-tdep\");\n }"
    },
    {
      "sha": "1b7eaf5e28ff7767dfa094ab19148bda80d30f6b",
      "filename": "gdb/mi/mi-cmd-break.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/mi/mi-cmd-break.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/mi/mi-cmd-break.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmd-break.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -84,7 +84,8 @@ setup_breakpoint_reporting (void)\n {\n   if (! mi_breakpoint_observers_installed)\n     {\n-      gdb::observers::breakpoint_created.attach (breakpoint_notify);\n+      gdb::observers::breakpoint_created.attach (breakpoint_notify,\n+\t\t\t\t\t\t \"mi-cmd-break\");\n       mi_breakpoint_observers_installed = 1;\n     }\n "
    },
    {
      "sha": "144521b03fdf3f9b04bad706d64bd218053a5652",
      "filename": "gdb/mi/mi-interp.c",
      "status": "modified",
      "additions": 35,
      "deletions": 28,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/mi/mi-interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/mi/mi-interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-interp.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -1338,33 +1338,40 @@ _initialize_mi_interp ()\n   interp_factory_register (INTERP_MI3, mi_interp_factory);\n   interp_factory_register (INTERP_MI, mi_interp_factory);\n \n-  gdb::observers::signal_received.attach (mi_on_signal_received);\n-  gdb::observers::end_stepping_range.attach (mi_on_end_stepping_range);\n-  gdb::observers::signal_exited.attach (mi_on_signal_exited);\n-  gdb::observers::exited.attach (mi_on_exited);\n-  gdb::observers::no_history.attach (mi_on_no_history);\n-  gdb::observers::new_thread.attach (mi_new_thread);\n-  gdb::observers::thread_exit.attach (mi_thread_exit);\n-  gdb::observers::inferior_added.attach (mi_inferior_added);\n-  gdb::observers::inferior_appeared.attach (mi_inferior_appeared);\n-  gdb::observers::inferior_exit.attach (mi_inferior_exit);\n-  gdb::observers::inferior_removed.attach (mi_inferior_removed);\n-  gdb::observers::record_changed.attach (mi_record_changed);\n-  gdb::observers::normal_stop.attach (mi_on_normal_stop);\n-  gdb::observers::target_resumed.attach (mi_on_resume);\n-  gdb::observers::solib_loaded.attach (mi_solib_loaded);\n-  gdb::observers::solib_unloaded.attach (mi_solib_unloaded);\n-  gdb::observers::about_to_proceed.attach (mi_about_to_proceed);\n-  gdb::observers::traceframe_changed.attach (mi_traceframe_changed);\n-  gdb::observers::tsv_created.attach (mi_tsv_created);\n-  gdb::observers::tsv_deleted.attach (mi_tsv_deleted);\n-  gdb::observers::tsv_modified.attach (mi_tsv_modified);\n-  gdb::observers::breakpoint_created.attach (mi_breakpoint_created);\n-  gdb::observers::breakpoint_deleted.attach (mi_breakpoint_deleted);\n-  gdb::observers::breakpoint_modified.attach (mi_breakpoint_modified);\n-  gdb::observers::command_param_changed.attach (mi_command_param_changed);\n-  gdb::observers::memory_changed.attach (mi_memory_changed);\n-  gdb::observers::sync_execution_done.attach (mi_on_sync_execution_done);\n+  gdb::observers::signal_received.attach (mi_on_signal_received, \"mi-interp\");\n+  gdb::observers::end_stepping_range.attach (mi_on_end_stepping_range,\n+\t\t\t\t\t     \"mi-interp\");\n+  gdb::observers::signal_exited.attach (mi_on_signal_exited, \"mi-interp\");\n+  gdb::observers::exited.attach (mi_on_exited, \"mi-interp\");\n+  gdb::observers::no_history.attach (mi_on_no_history, \"mi-interp\");\n+  gdb::observers::new_thread.attach (mi_new_thread, \"mi-interp\");\n+  gdb::observers::thread_exit.attach (mi_thread_exit, \"mi-interp\");\n+  gdb::observers::inferior_added.attach (mi_inferior_added, \"mi-interp\");\n+  gdb::observers::inferior_appeared.attach (mi_inferior_appeared, \"mi-interp\");\n+  gdb::observers::inferior_exit.attach (mi_inferior_exit, \"mi-interp\");\n+  gdb::observers::inferior_removed.attach (mi_inferior_removed, \"mi-interp\");\n+  gdb::observers::record_changed.attach (mi_record_changed, \"mi-interp\");\n+  gdb::observers::normal_stop.attach (mi_on_normal_stop, \"mi-interp\");\n+  gdb::observers::target_resumed.attach (mi_on_resume, \"mi-interp\");\n+  gdb::observers::solib_loaded.attach (mi_solib_loaded, \"mi-interp\");\n+  gdb::observers::solib_unloaded.attach (mi_solib_unloaded, \"mi-interp\");\n+  gdb::observers::about_to_proceed.attach (mi_about_to_proceed, \"mi-interp\");\n+  gdb::observers::traceframe_changed.attach (mi_traceframe_changed,\n+\t\t\t\t\t     \"mi-interp\");\n+  gdb::observers::tsv_created.attach (mi_tsv_created, \"mi-interp\");\n+  gdb::observers::tsv_deleted.attach (mi_tsv_deleted, \"mi-interp\");\n+  gdb::observers::tsv_modified.attach (mi_tsv_modified, \"mi-interp\");\n+  gdb::observers::breakpoint_created.attach (mi_breakpoint_created,\n+\t\t\t\t\t     \"mi-interp\");\n+  gdb::observers::breakpoint_deleted.attach (mi_breakpoint_deleted,\n+\t\t\t\t\t     \"mi-interp\");\n+  gdb::observers::breakpoint_modified.attach (mi_breakpoint_modified,\n+\t\t\t\t\t      \"mi-interp\");\n+  gdb::observers::command_param_changed.attach (mi_command_param_changed,\n+\t\t\t\t\t\t\"mi-interp\");\n+  gdb::observers::memory_changed.attach (mi_memory_changed, \"mi-interp\");\n+  gdb::observers::sync_execution_done.attach (mi_on_sync_execution_done,\n+\t\t\t\t\t      \"mi-interp\");\n   gdb::observers::user_selected_context_changed.attach\n-    (mi_user_selected_context_changed);\n+    (mi_user_selected_context_changed, \"mi-interp\");\n }"
    },
    {
      "sha": "1c68d19cda1fb63861591033c689908f6627cfb2",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -3186,7 +3186,8 @@ _initialize_printcmd ()\n \n   current_display_number = -1;\n \n-  gdb::observers::free_objfile.attach (clear_dangling_display_expressions);\n+  gdb::observers::free_objfile.attach (clear_dangling_display_expressions,\n+\t\t\t\t       \"printcmd\");\n \n   add_info (\"address\", info_address_command,\n \t    _(\"Describe where symbol SYM is stored.\\n\\"
    },
    {
      "sha": "b41407136136a6f82b7e4e97c74607fa2e489f25",
      "filename": "gdb/python/py-breakpoint.c",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/python/py-breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/python/py-breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-breakpoint.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -1125,9 +1125,12 @@ gdbpy_initialize_breakpoints (void)\n \t\t\t      (PyObject *) &breakpoint_object_type) < 0)\n     return -1;\n \n-  gdb::observers::breakpoint_created.attach (gdbpy_breakpoint_created);\n-  gdb::observers::breakpoint_deleted.attach (gdbpy_breakpoint_deleted);\n-  gdb::observers::breakpoint_modified.attach (gdbpy_breakpoint_modified);\n+  gdb::observers::breakpoint_created.attach (gdbpy_breakpoint_created,\n+\t\t\t\t\t     \"py-breakpoint\");\n+  gdb::observers::breakpoint_deleted.attach (gdbpy_breakpoint_deleted,\n+\t\t\t\t\t     \"py-breakpoint\");\n+  gdb::observers::breakpoint_modified.attach (gdbpy_breakpoint_modified,\n+\t\t\t\t\t      \"py-breakpoint\");\n \n   /* Add breakpoint types constants.  */\n   for (i = 0; pybp_codes[i].name; ++i)"
    },
    {
      "sha": "d2a1ec4fa98e1782beb2f044b0f21b68e934adbf",
      "filename": "gdb/python/py-finishbreakpoint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/python/py-finishbreakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/python/py-finishbreakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-finishbreakpoint.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -417,8 +417,10 @@ gdbpy_initialize_finishbreakpoints (void)\n \t\t\t      (PyObject *) &finish_breakpoint_object_type) < 0)\n     return -1;\n \n-  gdb::observers::normal_stop.attach (bpfinishpy_handle_stop);\n-  gdb::observers::inferior_exit.attach (bpfinishpy_handle_exit);\n+  gdb::observers::normal_stop.attach (bpfinishpy_handle_stop,\n+\t\t\t\t      \"py-finishbreakpoint\");\n+  gdb::observers::inferior_exit.attach (bpfinishpy_handle_exit,\n+\t\t\t\t\t\"py-finishbreakpoint\");\n \n   return 0;\n }"
    },
    {
      "sha": "c2861ccb735c777913e40b4a8e0763978cfdff5b",
      "filename": "gdb/python/py-inferior.c",
      "status": "modified",
      "additions": 17,
      "deletions": 12,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/python/py-inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/python/py-inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-inferior.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -904,18 +904,23 @@ gdbpy_initialize_inferior (void)\n   infpy_inf_data_key =\n     register_inferior_data_with_cleanup (NULL, py_free_inferior);\n \n-  gdb::observers::new_thread.attach (add_thread_object);\n-  gdb::observers::thread_exit.attach (delete_thread_object);\n-  gdb::observers::normal_stop.attach (python_on_normal_stop);\n-  gdb::observers::target_resumed.attach (python_on_resume);\n-  gdb::observers::inferior_call_pre.attach (python_on_inferior_call_pre);\n-  gdb::observers::inferior_call_post.attach (python_on_inferior_call_post);\n-  gdb::observers::memory_changed.attach (python_on_memory_change);\n-  gdb::observers::register_changed.attach (python_on_register_change);\n-  gdb::observers::inferior_exit.attach (python_inferior_exit);\n-  gdb::observers::new_objfile.attach (python_new_objfile);\n-  gdb::observers::inferior_added.attach (python_new_inferior);\n-  gdb::observers::inferior_removed.attach (python_inferior_deleted);\n+  gdb::observers::new_thread.attach (add_thread_object, \"py-inferior\");\n+  gdb::observers::thread_exit.attach (delete_thread_object, \"py-inferior\");\n+  gdb::observers::normal_stop.attach (python_on_normal_stop, \"py-inferior\");\n+  gdb::observers::target_resumed.attach (python_on_resume, \"py-inferior\");\n+  gdb::observers::inferior_call_pre.attach (python_on_inferior_call_pre,\n+\t\t\t\t\t    \"py-inferior\");\n+  gdb::observers::inferior_call_post.attach (python_on_inferior_call_post,\n+\t\t\t\t\t     \"py-inferior\");\n+  gdb::observers::memory_changed.attach (python_on_memory_change,\n+\t\t\t\t\t \"py-inferior\");\n+  gdb::observers::register_changed.attach (python_on_register_change,\n+\t\t\t\t\t   \"py-inferior\");\n+  gdb::observers::inferior_exit.attach (python_inferior_exit, \"py-inferior\");\n+  gdb::observers::new_objfile.attach (python_new_objfile, \"py-inferior\");\n+  gdb::observers::inferior_added.attach (python_new_inferior, \"py-inferior\");\n+  gdb::observers::inferior_removed.attach (python_inferior_deleted,\n+\t\t\t\t\t   \"py-inferior\");\n \n   membuf_object_type.tp_new = PyType_GenericNew;\n   if (PyType_Ready (&membuf_object_type) < 0)"
    },
    {
      "sha": "5dc8d33f0dc2c2b8ba2a4ef419ae6658dd59d117",
      "filename": "gdb/python/py-unwind.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/python/py-unwind.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/python/py-unwind.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-unwind.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -630,7 +630,8 @@ gdbpy_initialize_unwind (void)\n \t&setdebuglist, &showdebuglist);\n   pyuw_gdbarch_data\n       = gdbarch_data_register_post_init (pyuw_gdbarch_data_init);\n-  gdb::observers::architecture_changed.attach (pyuw_on_new_gdbarch);\n+  gdb::observers::architecture_changed.attach (pyuw_on_new_gdbarch,\n+\t\t\t\t\t       \"py-unwind\");\n \n   if (PyType_Ready (&pending_frame_object_type) < 0)\n     return -1;"
    },
    {
      "sha": "84a0390ac7ce5475c754aa900cbb043c627e36b5",
      "filename": "gdb/ravenscar-thread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ravenscar-thread.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -714,7 +714,8 @@ _initialize_ravenscar ()\n {\n   /* Notice when the inferior is created in order to push the\n      ravenscar ops if needed.  */\n-  gdb::observers::inferior_created.attach (ravenscar_inferior_created);\n+  gdb::observers::inferior_created.attach (ravenscar_inferior_created,\n+\t\t\t\t\t   \"ravenscar-thread\");\n \n   add_basic_prefix_cmd (\"ravenscar\", no_class,\n \t\t\t_(\"Prefix command for changing Ravenscar-specific settings.\"),"
    },
    {
      "sha": "c888ad0cb248f370c5c2ae661b6a00108eeb423e",
      "filename": "gdb/record-btrace.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-btrace.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -307,7 +307,8 @@ record_btrace_auto_enable (void)\n   DEBUG (\"attach thread observer\");\n \n   gdb::observers::new_thread.attach (record_btrace_enable_warn,\n-\t\t\t\t     record_btrace_thread_observer_token);\n+\t\t\t\t     record_btrace_thread_observer_token,\n+\t\t\t\t     \"record-btrace\");\n }\n \n /* Disable automatic tracing of new threads.  */"
    },
    {
      "sha": "d2386308b8226ea4c40ddbbc4ac36d6700a18272",
      "filename": "gdb/regcache.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/regcache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/regcache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/regcache.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -2084,8 +2084,10 @@ _initialize_regcache ()\n   regcache_descr_handle\n     = gdbarch_data_register_post_init (init_regcache_descr);\n \n-  gdb::observers::target_changed.attach (regcache_observer_target_changed);\n-  gdb::observers::thread_ptid_changed.attach (regcache_thread_ptid_changed);\n+  gdb::observers::target_changed.attach (regcache_observer_target_changed,\n+\t\t\t\t\t \"regcache\");\n+  gdb::observers::thread_ptid_changed.attach (regcache_thread_ptid_changed,\n+\t\t\t\t\t      \"regcache\");\n \n   add_cmd (\"register-cache\", class_maintenance, reg_flush_command,\n \t   _(\"Force gdb to flush its register and frame cache.\"),"
    },
    {
      "sha": "a7312a9fc2d176e42d16fc672e22925ae336f8ac",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -14842,7 +14842,7 @@ _initialize_remote ()\n   add_target (extended_remote_target_info, extended_remote_target::open);\n \n   /* Hook into new objfile notification.  */\n-  gdb::observers::new_objfile.attach (remote_new_objfile);\n+  gdb::observers::new_objfile.attach (remote_new_objfile, \"remote\");\n \n #if 0\n   init_remote_threadtests ();"
    },
    {
      "sha": "18eacf1062aaa9ef902e440b1cd4db56128be577",
      "filename": "gdb/sol-thread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/sol-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/sol-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sol-thread.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -1190,7 +1190,7 @@ _initialize_sol_thread ()\n \t   _(\"Show info on Solaris user threads.\"), &maintenanceinfolist);\n \n   /* Hook into new_objfile notification.  */\n-  gdb::observers::new_objfile.attach (sol_thread_new_objfile);\n+  gdb::observers::new_objfile.attach (sol_thread_new_objfile, \"sol-thread\");\n   return;\n \n  die:"
    },
    {
      "sha": "4b58058ffef88355d45157582472f16bff5fcc31",
      "filename": "gdb/solib-aix.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/solib-aix.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/solib-aix.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib-aix.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -737,7 +737,8 @@ _initialize_solib_aix ()\n     = solib_aix_in_dynsym_resolve_code;\n   solib_aix_so_ops.bfd_open = solib_aix_bfd_open;\n \n-  gdb::observers::normal_stop.attach (solib_aix_normal_stop_observer);\n+  gdb::observers::normal_stop.attach (solib_aix_normal_stop_observer,\n+\t\t\t\t      \"solib-aix\");\n \n   /* Debug this file's internals.  */\n   add_setshow_boolean_cmd (\"aix-solib\", class_maintenance,"
    },
    {
      "sha": "60eeac5f4befab548c4d74de77942195eb1e2b03",
      "filename": "gdb/solib-svr4.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/solib-svr4.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/solib-svr4.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib-svr4.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -3296,5 +3296,6 @@ _initialize_svr4_solib ()\n   svr4_so_ops.update_breakpoints = svr4_update_solib_event_breakpoints;\n   svr4_so_ops.handle_event = svr4_handle_solib_event;\n \n-  gdb::observers::free_objfile.attach (svr4_free_objfile_observer);\n+  gdb::observers::free_objfile.attach (svr4_free_objfile_observer,\n+\t\t\t\t       \"solib-svr4\");\n }"
    },
    {
      "sha": "f3cd48fde77c4b7ffa44179d44f99c4beabb2280",
      "filename": "gdb/solib.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/solib.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/solib.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -1556,11 +1556,12 @@ _initialize_solib ()\n {\n   solib_data = gdbarch_data_register_pre_init (solib_init);\n \n-  gdb::observers::free_objfile.attach (remove_user_added_objfile);\n+  gdb::observers::free_objfile.attach (remove_user_added_objfile,\n+\t\t\t\t       \"solib\");\n   gdb::observers::inferior_execd.attach ([] (inferior *inf)\n     {\n       solib_create_inferior_hook (0);\n-    });\n+    }, \"solib\");\n \n   add_com (\"sharedlibrary\", class_files, sharedlibrary_command,\n \t   _(\"Load shared object library symbols for files matching REGEXP.\"));"
    },
    {
      "sha": "cc3a777f006ea1997b4096815cb8fc1804981415",
      "filename": "gdb/symfile-mem.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/symfile-mem.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/symfile-mem.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-mem.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -218,5 +218,5 @@ _initialize_symfile_mem ()\n \n   /* Want to know of each new inferior so that its vsyscall info can\n      be extracted.  */\n-  gdb::observers::inferior_created.attach (add_vsyscall_page);\n+  gdb::observers::inferior_created.attach (add_vsyscall_page, \"symfile-mem\");\n }"
    },
    {
      "sha": "5defc22870d66b8913c611c60a3e26897ed0252d",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -3814,7 +3814,7 @@ _initialize_symfile ()\n {\n   struct cmd_list_element *c;\n \n-  gdb::observers::free_objfile.attach (symfile_free_objfile);\n+  gdb::observers::free_objfile.attach (symfile_free_objfile, \"symfile\");\n \n #define READNOW_READNEVER_HELP \\\n   \"The '-readnow' option will cause GDB to read the entire symbol file\\n\\"
    },
    {
      "sha": "061177e1d238d0c7c7d3947bcfd389ae8de67689",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -6906,7 +6906,8 @@ If zero then the symbol cache is disabled.\"),\n \t\t     class_maintenance, 0, &maintenancelist);\n   deprecate_cmd (c, \"maintenancelist flush symbol-cache\");\n \n-  gdb::observers::executable_changed.attach (symtab_observer_executable_changed);\n-  gdb::observers::new_objfile.attach (symtab_new_objfile_observer);\n-  gdb::observers::free_objfile.attach (symtab_free_objfile_observer);\n+  gdb::observers::executable_changed.attach (symtab_observer_executable_changed,\n+\t\t\t\t\t     \"symtab\");\n+  gdb::observers::new_objfile.attach (symtab_new_objfile_observer, \"symtab\");\n+  gdb::observers::free_objfile.attach (symtab_free_objfile_observer, \"symtab\");\n }"
    },
    {
      "sha": "52519aecf1762fae8d1b37f96206ada82f48d288",
      "filename": "gdb/tui/tui-hooks.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/tui/tui-hooks.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/tui/tui-hooks.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-hooks.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -222,7 +222,7 @@ static void\n attach_or_detach (T &observable, typename T::func_type func, bool attach)\n {\n   if (attach)\n-    observable.attach (func, tui_observers_token);\n+    observable.attach (func, tui_observers_token, \"tui-hooks\");\n   else\n     observable.detach (tui_observers_token);\n }\n@@ -282,5 +282,5 @@ void\n _initialize_tui_hooks ()\n {\n   /* Install the permanent hooks.  */\n-  gdb::observers::new_objfile.attach (tui_new_objfile_hook);\n+  gdb::observers::new_objfile.attach (tui_new_objfile_hook, \"tui-hooks\");\n }"
    },
    {
      "sha": "aaa353c5146de9063671e76b09e3caf365927905",
      "filename": "gdb/tui/tui-interp.c",
      "status": "modified",
      "additions": 11,
      "deletions": 9,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/tui/tui-interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/tui/tui-interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-interp.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -343,14 +343,16 @@ _initialize_tui_interp ()\n     }\n \n   /* If changing this, remember to update cli-interp.c as well.  */\n-  gdb::observers::normal_stop.attach (tui_on_normal_stop);\n-  gdb::observers::signal_received.attach (tui_on_signal_received);\n-  gdb::observers::end_stepping_range.attach (tui_on_end_stepping_range);\n-  gdb::observers::signal_exited.attach (tui_on_signal_exited);\n-  gdb::observers::exited.attach (tui_on_exited);\n-  gdb::observers::no_history.attach (tui_on_no_history);\n-  gdb::observers::sync_execution_done.attach (tui_on_sync_execution_done);\n-  gdb::observers::command_error.attach (tui_on_command_error);\n+  gdb::observers::normal_stop.attach (tui_on_normal_stop, \"tui-interp\");\n+  gdb::observers::signal_received.attach (tui_on_signal_received, \"tui-interp\");\n+  gdb::observers::end_stepping_range.attach (tui_on_end_stepping_range,\n+\t\t\t\t\t     \"tui-interp\");\n+  gdb::observers::signal_exited.attach (tui_on_signal_exited, \"tui-interp\");\n+  gdb::observers::exited.attach (tui_on_exited, \"tui-interp\");\n+  gdb::observers::no_history.attach (tui_on_no_history, \"tui-interp\");\n+  gdb::observers::sync_execution_done.attach (tui_on_sync_execution_done,\n+\t\t\t\t\t      \"tui-interp\");\n+  gdb::observers::command_error.attach (tui_on_command_error, \"tui-interp\");\n   gdb::observers::user_selected_context_changed.attach\n-    (tui_on_user_selected_context_changed);\n+    (tui_on_user_selected_context_changed, \"tui-interp\");\n }"
    },
    {
      "sha": "17682b022a3a6df06292652dfa53d2830238ffcb",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -1120,6 +1120,6 @@ the line numbers and uses less horizontal space.\"),\n \t\t\t   tui_set_compact_source, tui_show_compact_source,\n \t\t\t   &tui_setlist, &tui_showlist);\n \n-  tui_border_style.changed.attach (tui_rehighlight_all);\n-  tui_active_border_style.changed.attach (tui_rehighlight_all);\n+  tui_border_style.changed.attach (tui_rehighlight_all, \"tui-win\");\n+  tui_active_border_style.changed.attach (tui_rehighlight_all, \"tui-win\");\n }"
    },
    {
      "sha": "908d9015bf149efaf8cd9a9a9642b1f225de4c0b",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -294,7 +294,7 @@ tui_source_window_base::tui_source_window_base ()\n \n   gdb::observers::source_styling_changed.attach\n     (std::bind (&tui_source_window::style_changed, this),\n-     m_observable);\n+     m_observable, \"tui-winsource\");\n }\n \n tui_source_window_base::~tui_source_window_base ()"
    },
    {
      "sha": "0e3b53f555b03f0ed154ab9ffc60dccb03403bc4",
      "filename": "gdb/unittests/observable-selftests.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/unittests/observable-selftests.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdb/unittests/observable-selftests.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/observable-selftests.c?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -73,23 +73,23 @@ run_tests ()\n   const gdb::observers::token token1 {}, token2 {} , token3 {};\n \n   /* Now, attach one observer, and send a notification.  */\n-  test_notification.attach (&test_second_notification_function, token2);\n+  test_notification.attach (&test_second_notification_function, token2, \"test\");\n   notify_check_counters (0, 1, 0);\n \n   /* Remove the observer, and send a notification.  */\n   test_notification.detach (token2);\n   notify_check_counters (0, 0, 0);\n \n   /* With a new observer.  */\n-  test_notification.attach (&test_first_notification_function, token1);\n+  test_notification.attach (&test_first_notification_function, token1, \"test\");\n   notify_check_counters (1, 0, 0);\n \n   /* With 2 observers.  */\n-  test_notification.attach (&test_second_notification_function, token2);\n+  test_notification.attach (&test_second_notification_function, token2, \"test\");\n   notify_check_counters (1, 1, 0);\n \n   /* With 3 observers.  */\n-  test_notification.attach (&test_third_notification_function, token3);\n+  test_notification.attach (&test_third_notification_function, token3, \"test\");\n   notify_check_counters (1, 1, 1);\n \n   /* Remove middle observer.  */\n@@ -106,9 +106,9 @@ run_tests ()\n \n   /* Go back to 3 observers, and remove them in a different\n      order...  */\n-  test_notification.attach (&test_first_notification_function, token1);\n-  test_notification.attach (&test_second_notification_function, token2);\n-  test_notification.attach (&test_third_notification_function, token3);\n+  test_notification.attach (&test_first_notification_function, token1, \"test\");\n+  test_notification.attach (&test_second_notification_function, token2, \"test\");\n+  test_notification.attach (&test_third_notification_function, token3, \"test\");\n   notify_check_counters (1, 1, 1);\n \n   /* Remove the third observer.  */"
    },
    {
      "sha": "0f3de6d8caae3c08d32b28ffc4067e9e1544f80b",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -1,3 +1,10 @@\n+2021-04-24  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* observable.h (class observable) <struct observer> <observer>:\n+\tAdd name parameter.\n+\t<name>: New field.\n+\t<attach>: Add name parameter, update all callers.\n+\n 2021-04-24  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* observable.h (class observable) <struct observer>: New."
    },
    {
      "sha": "5e7846f3f922f43421980ca932fc2c77dbaa8b4d",
      "filename": "gdbsupport/observable.h",
      "status": "modified",
      "additions": 15,
      "deletions": 8,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdbsupport/observable.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c90e7d6352b2e16ac007d08b2e03ae10081147b5/gdbsupport/observable.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/observable.h?ref=c90e7d6352b2e16ac007d08b2e03ae10081147b5",
      "patch": "@@ -61,12 +61,13 @@ class observable\n private:\n   struct observer\n   {\n-    observer (const struct token *token, func_type func)\n-      : token (token), func (func)\n+    observer (const struct token *token, func_type func, const char *name)\n+      : token (token), func (func), name (name)\n     {}\n \n     const struct token *token;\n     func_type func;\n+    const char *name;\n   };\n \n public:\n@@ -78,17 +79,23 @@ class observable\n   DISABLE_COPY_AND_ASSIGN (observable);\n \n   /* Attach F as an observer to this observable.  F cannot be\n-     detached.  */\n-  void attach (const func_type &f)\n+     detached.\n+\n+     NAME is the name of the observer, used for debug output purposes.  Its\n+     lifetime must be at least as long as the observer is attached.  */\n+  void attach (const func_type &f, const char *name)\n   {\n-    m_observers.emplace_back (nullptr, f);\n+    m_observers.emplace_back (nullptr, f, name);\n   }\n \n   /* Attach F as an observer to this observable.  T is a reference to\n-     a token that can be used to later remove F.  */\n-  void attach (const func_type &f, const token &t)\n+     a token that can be used to later remove F.\n+\n+     NAME is the name of the observer, used for debug output purposes.  Its\n+     lifetime must be at least as long as the observer is attached.  */\n+  void attach (const func_type &f, const token &t, const char *name)\n   {\n-    m_observers.emplace_back (&t, f);\n+    m_observers.emplace_back (&t, f, name);\n   }\n \n   /* Remove observers associated with T from this observable.  T is"
    }
  ]
}