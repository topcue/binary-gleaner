{
  "sha": "5efb677960e786a7cfa3b5a53f15cc6656f33f02",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWVmYjY3Nzk2MGU3ODZhN2NmYTNiNWE1M2YxNWNjNjY1NmYzM2YwMg==",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2020-06-12T01:58:49Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2020-07-22T19:42:31Z"
    },
    "message": "Update binary_get_section_contents to seek using section's file position\n\nI have a patch for GDB which opens and reads from BFDs using the\n\"binary\" target.  However, for it to work, we need to be able to get a\nsection's contents based from the file position of that section.\n\nAt the moment, reading a section's contents will always read from the\nstart of the file regardless of where that section is located.  While\nthis was fine for the original use of the \"binary\" target, it won't\nwork for my use case.  This change shouldn't impact any existing\ncallers due to the fact that the single .data section is initialized\nwith a filepos of 0.\n\nbfd/ChangeLog:\n\n\t* binary.c (binary_get_section_contents): Seek using offset\n\tfrom section's file position.",
    "tree": {
      "sha": "f1aff157d20297eb39ed9c9679be06909f75a8df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f1aff157d20297eb39ed9c9679be06909f75a8df"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5efb677960e786a7cfa3b5a53f15cc6656f33f02",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5efb677960e786a7cfa3b5a53f15cc6656f33f02",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5efb677960e786a7cfa3b5a53f15cc6656f33f02",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5efb677960e786a7cfa3b5a53f15cc6656f33f02/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "94c265d790b88e691b9ea0173b7000a54a3eb0a0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/94c265d790b88e691b9ea0173b7000a54a3eb0a0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/94c265d790b88e691b9ea0173b7000a54a3eb0a0"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 11,
    "deletions": 6
  },
  "files": [
    {
      "sha": "5849c4ebdd56476b8665821be10e6678fac1919c",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5efb677960e786a7cfa3b5a53f15cc6656f33f02/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5efb677960e786a7cfa3b5a53f15cc6656f33f02/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=5efb677960e786a7cfa3b5a53f15cc6656f33f02",
      "patch": "@@ -1,3 +1,8 @@\n+2020-07-22  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* binary.c (binary_get_section_contents): Seek using offset\n+\tfrom section's file position.\n+\n 2020-07-22  Kevin Buettner  <kevinb@redhat.com>\n \n \t* elf.c (_bfd_elf_make_section_from_phdr): Remove hack for GDB."
    },
    {
      "sha": "e872924a2d8d3fed73ce5358085d21834889570d",
      "filename": "bfd/binary.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5efb677960e786a7cfa3b5a53f15cc6656f33f02/bfd/binary.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5efb677960e786a7cfa3b5a53f15cc6656f33f02/bfd/binary.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/binary.c?ref=5efb677960e786a7cfa3b5a53f15cc6656f33f02",
      "patch": "@@ -19,10 +19,10 @@\n    Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n    MA 02110-1301, USA.  */\n \n-/* This is a BFD backend which may be used to write binary objects.\n-   It may only be used for output, not input.  The intention is that\n-   this may be used as an output format for objcopy in order to\n-   generate raw binary data.\n+/* This is a BFD backend which may be used to read or write binary\n+   objects.  Historically, it was used as an output format for objcopy\n+   in order to generate raw binary data, but is now used for other\n+   purposes as well.\n \n    This is very simple.  The only complication is that the real data\n    will start at some address X, and in some cases we will not want to\n@@ -97,12 +97,12 @@ binary_object_p (bfd *abfd)\n \n static bfd_boolean\n binary_get_section_contents (bfd *abfd,\n-\t\t\t     asection *section ATTRIBUTE_UNUSED,\n+\t\t\t     asection *section,\n \t\t\t     void * location,\n \t\t\t     file_ptr offset,\n \t\t\t     bfd_size_type count)\n {\n-  if (bfd_seek (abfd, offset, SEEK_SET) != 0\n+  if (bfd_seek (abfd, section->filepos + offset, SEEK_SET) != 0\n       || bfd_bread (location, count, abfd) != count)\n     return FALSE;\n   return TRUE;"
    }
  ]
}