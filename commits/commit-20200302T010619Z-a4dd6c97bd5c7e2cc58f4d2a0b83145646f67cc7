{
  "sha": "a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTRkZDZjOTdiZDVjN2UyY2M1OGY0ZDJhMGI4MzE0NTY0NmY2N2NjNw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-01T23:47:18Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-02T01:06:19Z"
    },
    "message": "miscellaneous SEC_SMALL_DATA\n\nThis patch arranges for symbols defined in .sdata and .sbss to be\nreported by nm with 'g' and 's' flags, for coff targets that support\n.sdata and .sbss.\n\nThe assembler changes regarding SEC_SMALL_DATA are really just\ndocumentation.  As far as I'm aware, this won't change any assembler\noutput.\n\nbfd/\n\t* coff-alpha.c (alpha_ecoff_le_vec): Add SEC_SMALL_DATA to\n\tapplicable section flags.\n\t* coff-mips.c (mips_ecoff_le_vec, mips_ecoff_be_vec): Likewise.\n\t(mips_ecoff_bele_vec): Likewise.\n\t* coffcode.h (sec_to_styp_flags): Set SEC_SMALL_DATA for .sdata\n\tand .sbss sections.\n\t* ecoff.c (_bfd_ecoff_new_section_hook): Likewise.\n\t(_bfd_ecoff_styp_to_sec_flags): Likewise.\ngas/\n\t* config/tc-m32r.c (md_begin): Set SEC_SMALL_DATA on .scommon section.\n\t* config/tc-mips.c (s_change_sec): Set SEC_SMALL_DATA for .sdata\n\tand .sbss sections.\n\t* config/tc-score.c: Delete !BFD_ASSEMBLER code throughout.\n\t(s3_s_change_sec): Set SEC_SMALL_DATA for .sbss section.\n\t(s3_s_score_lcomm): Likewise.\n\t* config/tc-score7.c: Similarly.\n\t* read.c (bss_alloc): Set SEC_SMALL_DATA for .sbss section.",
    "tree": {
      "sha": "b314e12987da768cf9289d0cf9272521cc8536d6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b314e12987da768cf9289d0cf9272521cc8536d6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bf57746745ac0c0d2922de5af5f0d8527d7a585a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf57746745ac0c0d2922de5af5f0d8527d7a585a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bf57746745ac0c0d2922de5af5f0d8527d7a585a"
    }
  ],
  "stats": {
    "total": 142,
    "additions": 74,
    "deletions": 68
  },
  "files": [
    {
      "sha": "116b89397da610abcf8b7e9d7fd1ce2b9548a333",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
      "patch": "@@ -1,3 +1,14 @@\n+2020-03-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff-alpha.c (alpha_ecoff_le_vec): Add SEC_SMALL_DATA to\n+\tapplicable section flags.\n+\t* coff-mips.c (mips_ecoff_le_vec, mips_ecoff_be_vec): Likewise.\n+\t(mips_ecoff_bele_vec): Likewise.\n+\t* coffcode.h (sec_to_styp_flags): Set SEC_SMALL_DATA for .sdata\n+\tand .sbss sections.\n+\t* ecoff.c (_bfd_ecoff_new_section_hook): Likewise.\n+\t(_bfd_ecoff_styp_to_sec_flags): Likewise.\n+\n 2020-03-02  Alan Modra  <amodra@gmail.com>\n \n \t* elf32-m32r.c (m32r_elf_section_flags): New function."
    },
    {
      "sha": "821e5591a9a9562746abf654dafb40dfada6e477",
      "filename": "bfd/coff-alpha.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/bfd/coff-alpha.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/bfd/coff-alpha.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-alpha.c?ref=a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
      "patch": "@@ -2424,7 +2424,8 @@ const bfd_target alpha_ecoff_le_vec =\n    | HAS_LINENO | HAS_DEBUG\n    | HAS_SYMS | HAS_LOCALS | DYNAMIC | WP_TEXT | D_PAGED),\n \n-  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC | SEC_CODE | SEC_DATA),\n+  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC | SEC_CODE\n+   | SEC_DATA | SEC_SMALL_DATA),\n   0,\t\t\t\t/* leading underscore */\n   ' ',\t\t\t\t/* ar_pad_char */\n   15,\t\t\t\t/* ar_max_namelen */"
    },
    {
      "sha": "772175325c919163f3e07b5d0d8ead61485be8cd",
      "filename": "bfd/coff-mips.c",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/bfd/coff-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/bfd/coff-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-mips.c?ref=a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
      "patch": "@@ -1440,7 +1440,8 @@ const bfd_target mips_ecoff_le_vec =\n    | HAS_LINENO | HAS_DEBUG\n    | HAS_SYMS | HAS_LOCALS | WP_TEXT | D_PAGED),\n \n-  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC | SEC_CODE | SEC_DATA),\n+  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC | SEC_CODE\n+   | SEC_DATA | SEC_SMALL_DATA),\n   0,\t\t\t\t/* leading underscore */\n   ' ',\t\t\t\t/* ar_pad_char */\n   15,\t\t\t\t/* ar_max_namelen */\n@@ -1497,7 +1498,8 @@ const bfd_target mips_ecoff_be_vec =\n    | HAS_LINENO | HAS_DEBUG\n    | HAS_SYMS | HAS_LOCALS | WP_TEXT | D_PAGED),\n \n-  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC | SEC_CODE | SEC_DATA),\n+  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC | SEC_CODE\n+   | SEC_DATA | SEC_SMALL_DATA),\n   0,\t\t\t\t/* leading underscore */\n   ' ',\t\t\t\t/* ar_pad_char */\n   15,\t\t\t\t/* ar_max_namelen */\n@@ -1554,7 +1556,8 @@ const bfd_target mips_ecoff_bele_vec =\n    | HAS_LINENO | HAS_DEBUG\n    | HAS_SYMS | HAS_LOCALS | WP_TEXT | D_PAGED),\n \n-  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC | SEC_CODE | SEC_DATA),\n+  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC | SEC_CODE\n+   | SEC_DATA | SEC_SMALL_DATA),\n   0,\t\t\t\t/* leading underscore */\n   ' ',\t\t\t\t/* ar_pad_char */\n   15,\t\t\t\t/* ar_max_namelen */"
    },
    {
      "sha": "27158a061ccda66629bf1c8eca9cc23dfe6b7e8b",
      "filename": "bfd/coffcode.h",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/bfd/coffcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/bfd/coffcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffcode.h?ref=a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
      "patch": "@@ -717,7 +717,7 @@ sec_to_styp_flags (const char *sec_name, flagword sec_flags)\n #ifndef COFF_WITH_PE\n \n static bfd_boolean\n-styp_to_sec_flags (bfd *abfd ATTRIBUTE_UNUSED,\n+styp_to_sec_flags (bfd *abfd,\n \t\t   void * hdr,\n \t\t   const char *name,\n \t\t   asection *section ATTRIBUTE_UNUSED,\n@@ -850,6 +850,11 @@ styp_to_sec_flags (bfd *abfd ATTRIBUTE_UNUSED,\n     sec_flags = (SEC_LOAD | SEC_ALLOC);\n #endif /* STYP_SDATA */\n \n+  if ((bfd_applicable_section_flags (abfd) & SEC_SMALL_DATA) != 0\n+      && (CONST_STRNEQ (name, \".sbss\")\n+\t  || CONST_STRNEQ (name, \".sdata\")))\n+    sec_flags |= SEC_SMALL_DATA;\n+\n #if defined (COFF_LONG_SECTION_NAMES) && defined (COFF_SUPPORT_GNU_LINKONCE)\n   /* As a GNU extension, if the name begins with .gnu.linkonce, we\n      only link a single copy of the section.  This is used to support\n@@ -1312,6 +1317,11 @@ styp_to_sec_flags (bfd *abfd,\n \t}\n     }\n \n+  if ((bfd_applicable_section_flags (abfd) & SEC_SMALL_DATA) != 0\n+      && (CONST_STRNEQ (name, \".sbss\")\n+\t  || CONST_STRNEQ (name, \".sdata\")))\n+    sec_flags |= SEC_SMALL_DATA;\n+\n #if defined (COFF_LONG_SECTION_NAMES) && defined (COFF_SUPPORT_GNU_LINKONCE)\n   /* As a GNU extension, if the name begins with .gnu.linkonce, we\n      only link a single copy of the section.  This is used to support"
    },
    {
      "sha": "84eab99398339fa31aae67b68753ce184a212627",
      "filename": "bfd/ecoff.c",
      "status": "modified",
      "additions": 10,
      "deletions": 7,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/bfd/ecoff.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/bfd/ecoff.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ecoff.c?ref=a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
      "patch": "@@ -156,14 +156,14 @@ _bfd_ecoff_new_section_hook (bfd *abfd, asection *section)\n     { _INIT,   SEC_ALLOC | SEC_CODE | SEC_LOAD },\n     { _FINI,   SEC_ALLOC | SEC_CODE | SEC_LOAD },\n     { _DATA,   SEC_ALLOC | SEC_DATA | SEC_LOAD },\n-    { _SDATA,  SEC_ALLOC | SEC_DATA | SEC_LOAD },\n+    { _SDATA,  SEC_ALLOC | SEC_DATA | SEC_LOAD | SEC_SMALL_DATA },\n     { _RDATA,  SEC_ALLOC | SEC_DATA | SEC_LOAD | SEC_READONLY},\n-    { _LIT8,   SEC_ALLOC | SEC_DATA | SEC_LOAD | SEC_READONLY},\n-    { _LIT4,   SEC_ALLOC | SEC_DATA | SEC_LOAD | SEC_READONLY},\n+    { _LIT8,   SEC_ALLOC | SEC_DATA | SEC_LOAD | SEC_READONLY | SEC_SMALL_DATA},\n+    { _LIT4,   SEC_ALLOC | SEC_DATA | SEC_LOAD | SEC_READONLY | SEC_SMALL_DATA},\n     { _RCONST, SEC_ALLOC | SEC_DATA | SEC_LOAD | SEC_READONLY},\n     { _PDATA,  SEC_ALLOC | SEC_DATA | SEC_LOAD | SEC_READONLY},\n     { _BSS,    SEC_ALLOC},\n-    { _SBSS,   SEC_ALLOC},\n+    { _SBSS,   SEC_ALLOC | SEC_SMALL_DATA},\n     /* An Irix 4 shared libary.  */\n     { _LIB,    SEC_COFF_SHARED_LIBRARY}\n   };\n@@ -412,16 +412,19 @@ _bfd_ecoff_styp_to_sec_flags (bfd *abfd ATTRIBUTE_UNUSED,\n \t  || styp_flags == STYP_PDATA\n \t  || styp_flags == STYP_RCONST)\n \tsec_flags |= SEC_READONLY;\n+      if (styp_flags & STYP_SDATA)\n+\tsec_flags |= SEC_SMALL_DATA;\n     }\n-  else if ((styp_flags & STYP_BSS)\n-\t   || (styp_flags & STYP_SBSS))\n+  else if (styp_flags & STYP_SBSS)\n+    sec_flags |= SEC_ALLOC | SEC_SMALL_DATA;\n+  else if (styp_flags & STYP_BSS)\n     sec_flags |= SEC_ALLOC;\n   else if ((styp_flags & STYP_INFO) || styp_flags == STYP_COMMENT)\n     sec_flags |= SEC_NEVER_LOAD;\n   else if ((styp_flags & STYP_LITA)\n \t   || (styp_flags & STYP_LIT8)\n \t   || (styp_flags & STYP_LIT4))\n-    sec_flags |= SEC_DATA | SEC_LOAD | SEC_ALLOC | SEC_READONLY;\n+    sec_flags |= SEC_DATA |SEC_SMALL_DATA | SEC_LOAD | SEC_ALLOC | SEC_READONLY;\n   else if (styp_flags & STYP_ECOFF_LIB)\n     sec_flags |= SEC_COFF_SHARED_LIBRARY;\n   else"
    },
    {
      "sha": "f7011e25246f25f3f3858dc92cd2a8da4b75896a",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
      "patch": "@@ -1,3 +1,14 @@\n+2020-03-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/tc-m32r.c (md_begin): Set SEC_SMALL_DATA on .scommon section.\n+\t* config/tc-mips.c (s_change_sec): Set SEC_SMALL_DATA for .sdata\n+\tand .sbss sections.\n+\t* config/tc-score.c: Delete !BFD_ASSEMBLER code throughout.\n+\t(s3_s_change_sec): Set SEC_SMALL_DATA for .sbss section.\n+\t(s3_s_score_lcomm): Likewise.\n+\t* config/tc-score7.c: Similarly.\n+\t* read.c (bss_alloc): Set SEC_SMALL_DATA for .sbss section.\n+\n 2020-02-28  YunQiang Su  <syq@debian.org>\n \n \tPR gas/25539"
    },
    {
      "sha": "824f67c124b2247d223852445608dd5aacb88994",
      "filename": "gas/config/tc-m32r.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/gas/config/tc-m32r.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/gas/config/tc-m32r.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-m32r.c?ref=a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
      "patch": "@@ -713,14 +713,16 @@ md_begin (void)\n \n   /* This is copied from perform_an_assembly_pass.  */\n   applicable = bfd_applicable_section_flags (stdoutput);\n-  bfd_set_section_flags (sbss_section, applicable & SEC_ALLOC);\n+  bfd_set_section_flags (sbss_section,\n+\t\t\t applicable & (SEC_ALLOC | SEC_SMALL_DATA));\n \n   subseg_set (seg, subseg);\n \n   /* We must construct a fake section similar to bfd_com_section\n      but with the name .scommon.  */\n   scom_section                = *bfd_com_section_ptr;\n   scom_section.name           = \".scommon\";\n+  scom_section.flags          = SEC_IS_COMMON | SEC_SMALL_DATA;\n   scom_section.output_section = & scom_section;\n   scom_section.symbol         = & scom_symbol;\n   scom_section.symbol_ptr_ptr = & scom_section.symbol;"
    },
    {
      "sha": "9f78b5a89eeaed5042fb823d196fcb9af02e38b6",
      "filename": "gas/config/tc-mips.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/gas/config/tc-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/gas/config/tc-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mips.c?ref=a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
      "patch": "@@ -16365,16 +16365,16 @@ s_change_sec (int sec)\n \n     case 's':\n       seg = subseg_new (\".sdata\", (subsegT) get_absolute_expression ());\n-      bfd_set_section_flags (seg,\n-\t\t\t     SEC_ALLOC | SEC_LOAD | SEC_RELOC | SEC_DATA);\n+      bfd_set_section_flags (seg, (SEC_ALLOC | SEC_LOAD | SEC_RELOC\n+\t\t\t\t   | SEC_DATA | SEC_SMALL_DATA));\n       if (strncmp (TARGET_OS, \"elf\", 3) != 0)\n \trecord_alignment (seg, 4);\n       demand_empty_rest_of_line ();\n       break;\n \n     case 'B':\n       seg = subseg_new (\".sbss\", (subsegT) get_absolute_expression ());\n-      bfd_set_section_flags (seg, SEC_ALLOC);\n+      bfd_set_section_flags (seg, SEC_ALLOC | SEC_SMALL_DATA);\n       if (strncmp (TARGET_OS, \"elf\", 3) != 0)\n \trecord_alignment (seg, 4);\n       demand_empty_rest_of_line ();"
    },
    {
      "sha": "80c4cbfa4eb6d577addeca4dfaf0687e8ee367b8",
      "filename": "gas/config/tc-score.c",
      "status": "modified",
      "additions": 5,
      "deletions": 23,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/gas/config/tc-score.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/gas/config/tc-score.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-score.c?ref=a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
      "patch": "@@ -5569,14 +5569,16 @@ s3_s_change_sec (int sec)\n     {\n     case 'r':\n       seg = subseg_new (s3_RDATA_SECTION_NAME, (subsegT) get_absolute_expression ());\n-      bfd_set_section_flags (seg, (SEC_ALLOC | SEC_LOAD | SEC_READONLY | SEC_RELOC | SEC_DATA));\n+      bfd_set_section_flags (seg, (SEC_ALLOC | SEC_LOAD | SEC_READONLY\n+\t\t\t\t   | SEC_RELOC | SEC_DATA));\n       if (strcmp (TARGET_OS, \"elf\") != 0)\n         record_alignment (seg, 4);\n       demand_empty_rest_of_line ();\n       break;\n     case 's':\n       seg = subseg_new (\".sdata\", (subsegT) get_absolute_expression ());\n-      bfd_set_section_flags (seg, SEC_ALLOC | SEC_LOAD | SEC_RELOC | SEC_DATA);\n+      bfd_set_section_flags (seg, (SEC_ALLOC | SEC_LOAD | SEC_RELOC\n+\t\t\t\t   | SEC_DATA | SEC_SMALL_DATA));\n       if (strcmp (TARGET_OS, \"elf\") != 0)\n         record_alignment (seg, 4);\n       demand_empty_rest_of_line ();\n@@ -5685,17 +5687,10 @@ s3_s_score_ent (int aent)\n   if (ISDIGIT (*input_line_pointer) || *input_line_pointer == '-')\n     s3_get_number ();\n \n-#ifdef BFD_ASSEMBLER\n   if ((bfd_section_flags (now_seg) & SEC_CODE) != 0)\n     maybe_text = 1;\n   else\n     maybe_text = 0;\n-#else\n-  if (now_seg != data_section && now_seg != bss_section)\n-    maybe_text = 1;\n-  else\n-    maybe_text = 0;\n-#endif\n   if (!maybe_text)\n     as_warn (_(\".ent or .aent not in text section.\"));\n   if (!aent && s3_cur_proc_ptr)\n@@ -5794,17 +5789,10 @@ s3_s_score_end (int x ATTRIBUTE_UNUSED)\n   else\n     p = NULL;\n \n-#ifdef BFD_ASSEMBLER\n   if ((bfd_section_flags (now_seg) & SEC_CODE) != 0)\n     maybe_text = 1;\n   else\n     maybe_text = 0;\n-#else\n-  if (now_seg != data_section && now_seg != bss_section)\n-    maybe_text = 1;\n-  else\n-    maybe_text = 0;\n-#endif\n \n   if (!maybe_text)\n     as_warn (_(\".end not in text section\"));\n@@ -6132,11 +6120,9 @@ s3_s_score_lcomm (int bytes_p)\n \t{\n \t  bss_seg = subseg_new (\".sbss\", 1);\n \t  seg_info (bss_seg)->bss = 1;\n-#ifdef BFD_ASSEMBLER\n-\t  if (!bfd_set_section_flags (bss_seg, SEC_ALLOC))\n+\t  if (!bfd_set_section_flags (bss_seg, SEC_ALLOC | SEC_SMALL_DATA))\n \t    as_warn (_(\"error setting flags for \\\".sbss\\\": %s\"),\n \t\t     bfd_errmsg (bfd_get_error ()));\n-#endif\n \t}\n     }\n #endif\n@@ -6215,12 +6201,8 @@ s3_s_score_lcomm (int bytes_p)\n \n   if (\n #if (defined (OBJ_AOUT) || defined (OBJ_MAYBE_AOUT))\n-#ifdef BFD_ASSEMBLER\n       (OUTPUT_FLAVOR != bfd_target_aout_flavour\n        || (S_GET_OTHER (symbolP) == 0 && S_GET_DESC (symbolP) == 0)) &&\n-#else\n-      (S_GET_OTHER (symbolP) == 0 && S_GET_DESC (symbolP) == 0) &&\n-#endif\n #endif\n       (S_GET_SEGMENT (symbolP) == bss_seg || (!S_IS_DEFINED (symbolP) && S_GET_VALUE (symbolP) == 0)))\n     {"
    },
    {
      "sha": "c3b6e97d34ea8b79a1a95e086b3837c2ee558aff",
      "filename": "gas/config/tc-score7.c",
      "status": "modified",
      "additions": 11,
      "deletions": 28,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/gas/config/tc-score7.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/gas/config/tc-score7.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-score7.c?ref=a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
      "patch": "@@ -5422,14 +5422,16 @@ s7_s_change_sec (int sec)\n     {\n     case 'r':\n       seg = subseg_new (s7_RDATA_SECTION_NAME, (subsegT) get_absolute_expression ());\n-      bfd_set_section_flags (seg, (SEC_ALLOC | SEC_LOAD | SEC_READONLY | SEC_RELOC | SEC_DATA));\n+      bfd_set_section_flags (seg, (SEC_ALLOC | SEC_LOAD | SEC_READONLY\n+\t\t\t\t   | SEC_RELOC | SEC_DATA));\n       if (strcmp (TARGET_OS, \"elf\") != 0)\n         record_alignment (seg, 4);\n       demand_empty_rest_of_line ();\n       break;\n     case 's':\n       seg = subseg_new (\".sdata\", (subsegT) get_absolute_expression ());\n-      bfd_set_section_flags (seg, SEC_ALLOC | SEC_LOAD | SEC_RELOC | SEC_DATA);\n+      bfd_set_section_flags (seg, (SEC_ALLOC | SEC_LOAD | SEC_RELOC\n+\t\t\t\t   | SEC_DATA | SEC_SMALL_DATA));\n       if (strcmp (TARGET_OS, \"elf\") != 0)\n         record_alignment (seg, 4);\n       demand_empty_rest_of_line ();\n@@ -5539,17 +5541,10 @@ s7_s_score_ent (int aent)\n   if (ISDIGIT (*input_line_pointer) || *input_line_pointer == '-')\n     s7_get_number ();\n \n-#ifdef BFD_ASSEMBLER\n   if ((bfd_section_flags (now_seg) & SEC_CODE) != 0)\n     maybe_text = 1;\n   else\n     maybe_text = 0;\n-#else\n-  if (now_seg != data_section && now_seg != bss_section)\n-    maybe_text = 1;\n-  else\n-    maybe_text = 0;\n-#endif\n   if (!maybe_text)\n     as_warn (_(\".ent or .aent not in text section.\"));\n   if (!aent && s7_cur_proc_ptr)\n@@ -5649,17 +5644,10 @@ s7_s_score_end (int x ATTRIBUTE_UNUSED)\n   else\n     p = NULL;\n \n-#ifdef BFD_ASSEMBLER\n   if ((bfd_section_flags (now_seg) & SEC_CODE) != 0)\n     maybe_text = 1;\n   else\n     maybe_text = 0;\n-#else\n-  if (now_seg != data_section && now_seg != bss_section)\n-    maybe_text = 1;\n-  else\n-    maybe_text = 0;\n-#endif\n \n   if (!maybe_text)\n     as_warn (_(\".end not in text section\"));\n@@ -5989,14 +5977,13 @@ s7_s_score_lcomm (int bytes_p)\n     {\n       /* For Score and Alpha ECOFF or ELF, small objects are put in .sbss.  */\n       if ((unsigned) temp <= bfd_get_gp_size (stdoutput))\n-        {\n-          bss_seg = subseg_new (\".sbss\", 1);\n-          seg_info (bss_seg)->bss = 1;\n-#ifdef BFD_ASSEMBLER\n-          if (!bfd_set_section_flags (bss_seg, SEC_ALLOC))\n-            as_warn (_(\"error setting flags for \\\".sbss\\\": %s\"), bfd_errmsg (bfd_get_error ()));\n-#endif\n-        }\n+\t{\n+\t  bss_seg = subseg_new (\".sbss\", 1);\n+\t  seg_info (bss_seg)->bss = 1;\n+\t  if (!bfd_set_section_flags (bss_seg, SEC_ALLOC | SEC_SMALL_DATA))\n+\t    as_warn (_(\"error setting flags for \\\".sbss\\\": %s\"),\n+\t\t     bfd_errmsg (bfd_get_error ()));\n+\t}\n     }\n #endif\n \n@@ -6074,12 +6061,8 @@ s7_s_score_lcomm (int bytes_p)\n \n   if (\n #if (defined (OBJ_AOUT) || defined (OBJ_MAYBE_AOUT))\n-#ifdef BFD_ASSEMBLER\n        (OUTPUT_FLAVOR != bfd_target_aout_flavour\n         || (S_GET_OTHER (symbolP) == 0 && S_GET_DESC (symbolP) == 0)) &&\n-#else\n-       (S_GET_OTHER (symbolP) == 0 && S_GET_DESC (symbolP) == 0) &&\n-#endif\n #endif\n        (S_GET_SEGMENT (symbolP) == bss_seg || (!S_IS_DEFINED (symbolP) && S_GET_VALUE (symbolP) == 0)))\n     {"
    },
    {
      "sha": "cdb4b3a8189eb38b0a47fd3d8699e4ed56167af9",
      "filename": "gas/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/gas/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7/gas/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/read.c?ref=a4dd6c97bd5c7e2cc58f4d2a0b83145646f67cc7",
      "patch": "@@ -2465,7 +2465,7 @@ bss_alloc (symbolS *symbolP, addressT size, unsigned int align)\n \t{\n \t  bss_seg = subseg_new (\".sbss\", 1);\n \t  seg_info (bss_seg)->bss = 1;\n-\t  if (!bfd_set_section_flags (bss_seg, SEC_ALLOC))\n+\t  if (!bfd_set_section_flags (bss_seg, SEC_ALLOC | SEC_SMALL_DATA))\n \t    as_warn (_(\"error setting flags for \\\".sbss\\\": %s\"),\n \t\t     bfd_errmsg (bfd_get_error ()));\n \t}"
    }
  ]
}