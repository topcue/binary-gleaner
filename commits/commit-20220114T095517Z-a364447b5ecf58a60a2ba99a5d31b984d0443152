{
  "sha": "a364447b5ecf58a60a2ba99a5d31b984d0443152",
  "node_id": "C_kwDOANOeidoAKGEzNjQ0NDdiNWVjZjU4YTYwYTJiYTk5YTVkMzFiOTg0ZDA0NDMxNTI",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2022-01-14T09:55:17Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2022-01-14T09:55:17Z"
    },
    "message": "x86: record further wrong uses of EVEX.b\n\nFor one EVEX.W set does not imply EVEX.b is uniformly valid. Reject it\nfor modes which occur for insns allowing for EVEX.W to be set (noticed\nwith VMOV{H,L}PD and VMOVDDUP, and only in AT&T mode, but not checked\nwhether further insns would also have been impacted; I expect e.g.\nVCMPSD would have had the same issue). And then the present concept of\nbroadcast makes no sense at all when the memory operand of an insn is\nthe destination.",
    "tree": {
      "sha": "45364b2404d3198c7017704becd906124fcfc2a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/45364b2404d3198c7017704becd906124fcfc2a9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a364447b5ecf58a60a2ba99a5d31b984d0443152",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a364447b5ecf58a60a2ba99a5d31b984d0443152",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a364447b5ecf58a60a2ba99a5d31b984d0443152",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a364447b5ecf58a60a2ba99a5d31b984d0443152/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "740a1e791175987e28cc39dbd11e3fc152ffc40b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/740a1e791175987e28cc39dbd11e3fc152ffc40b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/740a1e791175987e28cc39dbd11e3fc152ffc40b"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 8,
    "deletions": 0
  },
  "files": [
    {
      "sha": "ffb548cbe6801633e716d58f32f9e95036258360",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a364447b5ecf58a60a2ba99a5d31b984d0443152/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a364447b5ecf58a60a2ba99a5d31b984d0443152/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=a364447b5ecf58a60a2ba99a5d31b984d0443152",
      "patch": "@@ -11899,6 +11899,11 @@ OP_E_memory (instr_info *ins, int bytemode, int sizeflag)\n   if (ins->vex.b)\n     {\n       ins->evex_used |= EVEX_b_used;\n+\n+      /* Broadcast can only ever be valid for memory sources.  */\n+      if (ins->obufp == ins->op_out[0])\n+\tins->vex.no_broadcast = 1;\n+\n       if (!ins->vex.no_broadcast)\n \t{\n \t  if (bytemode == xh_mode)\n@@ -11923,6 +11928,9 @@ OP_E_memory (instr_info *ins, int bytemode, int sizeflag)\n \t\t    }\n \t\t}\n \t    }\n+\t  else if (bytemode == q_mode\n+\t\t   || bytemode == ymmq_mode)\n+\t    ins->vex.no_broadcast = 1;\n \t  else if (ins->vex.w\n \t\t   || bytemode == evex_half_bcst_xmmqdh_mode\n \t\t   || bytemode == evex_half_bcst_xmmq_mode)"
    }
  ]
}