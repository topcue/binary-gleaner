{
  "sha": "87ed972dc348404a4f8b820efa8dc79aaaa966f2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODdlZDk3MmRjMzQ4NDA0YTRmOGI4MjBlZmE4ZGM3OWFhYWE5NjZmMg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-05-07T10:02:07Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-05-07T10:02:07Z"
    },
    "message": "x86: minor improvements to optimize_imm()\n\n- Drop a pointless & where just before it was checked that the\n  respective bits are clear already anyway.\n- Avoid a not really necessary operand_type_set() and a redundant\n  operand_type_or() / operand_type_and() pair.",
    "tree": {
      "sha": "73dc56686690b54f5fa89e068dcd9507bfa8a683",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/73dc56686690b54f5fa89e068dcd9507bfa8a683"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/87ed972dc348404a4f8b820efa8dc79aaaa966f2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87ed972dc348404a4f8b820efa8dc79aaaa966f2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/87ed972dc348404a4f8b820efa8dc79aaaa966f2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87ed972dc348404a4f8b820efa8dc79aaaa966f2/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d820a652a6d3ae3793207016c0c8cc78451eabd0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d820a652a6d3ae3793207016c0c8cc78451eabd0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d820a652a6d3ae3793207016c0c8cc78451eabd0"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 11,
    "deletions": 8
  },
  "files": [
    {
      "sha": "ad82f9b3c75c28daceeb38d574365f19d169f4c4",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87ed972dc348404a4f8b820efa8dc79aaaa966f2/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87ed972dc348404a4f8b820efa8dc79aaaa966f2/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=87ed972dc348404a4f8b820efa8dc79aaaa966f2",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-07  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (optimize_imm): Drop redundant masking.\n+\tRe-arrange operand type accumulation.\n+\n 2021-05-06  Stafford Horne  <shorne@gmail.com>\n \n \tPR 21464"
    },
    {
      "sha": "c09d63f5e210fe96e7c45a01807a6a9033d1f90a",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87ed972dc348404a4f8b820efa8dc79aaaa966f2/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87ed972dc348404a4f8b820efa8dc79aaaa966f2/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=87ed972dc348404a4f8b820efa8dc79aaaa966f2",
      "patch": "@@ -5791,8 +5791,8 @@ optimize_imm (void)\n \t    if ((i.types[op].bitfield.imm16)\n \t\t&& (i.op[op].imms->X_add_number & ~(offsetT) 0xffff) == 0)\n \t      {\n-\t\ti.op[op].imms->X_add_number =\n-\t\t  (((i.op[op].imms->X_add_number & 0xffff) ^ 0x8000) - 0x8000);\n+\t\ti.op[op].imms->X_add_number = ((i.op[op].imms->X_add_number\n+\t\t\t\t\t\t^ 0x8000) - 0x8000);\n \t      }\n #ifdef BFD64\n \t    /* Store 32-bit immediate in 64-bit for 64-bit BFD.  */\n@@ -5826,17 +5826,15 @@ optimize_imm (void)\n \t       than those matching the insn suffix.  */\n \t    {\n \t      i386_operand_type mask, allowed;\n-\t      const insn_template *t;\n+\t      const insn_template *t = current_templates->start;\n \n \t      operand_type_set (&mask, 0);\n-\t      operand_type_set (&allowed, 0);\n+\t      allowed = t->operand_types[op];\n \n-\t      for (t = current_templates->start;\n-\t\t   t < current_templates->end;\n-\t\t   ++t)\n+\t      while (++t < current_templates->end)\n \t\t{\n-\t\t  allowed = operand_type_or (allowed, t->operand_types[op]);\n \t\t  allowed = operand_type_and (allowed, anyimm);\n+\t\t  allowed = operand_type_or (allowed, t->operand_types[op]);\n \t\t}\n \t      switch (guess_suffix)\n \t\t{"
    }
  ]
}