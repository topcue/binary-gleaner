{
  "sha": "c290cb01face96fa9c2a4f96f7d57083da3c99f1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzI5MGNiMDFmYWNlOTZmYTljMmE0Zjk2ZjdkNTcwODNkYTNjOTlmMQ==",
  "commit": {
    "author": {
      "name": "Sergei Trofimovich",
      "email": "siarheit@google.com",
      "date": "2021-04-25T19:50:38Z"
    },
    "committer": {
      "name": "Sergei Trofimovich",
      "email": "siarheit@google.com",
      "date": "2021-04-26T06:22:08Z"
    },
    "message": "gdb: fix sparc build failure of linux-nat\n\nOn sparc build failed as:\n\n```\ngdb/sparc-linux-nat.c: In member function\n  'virtual void sparc_linux_nat_target::fetch_registers(regcache*, int)':\ngdb/sparc-linux-nat.c:36:37:\n  error: cannot convert 'regcache*' to 'process_stratum_target*'\n   36 |   { sparc_fetch_inferior_registers (regcache, regnum); }\n      |                                     ^~~~~~~~\n      |                                     |\n      |                                     regcache*\n```\n\nThe fix adopts gdb/sparc-nat.h API change in d1e93af64a6\n(\"gdb: set current thread in sparc_{fetch,collect}_inferior_registers\").\n\ngdb/ChangeLog:\n\n\t* sparc-linux-nat.c (sparc_linux_nat_target): fix sparc build\n\tby passing `process_stratum_target*` parameter.",
    "tree": {
      "sha": "dcfcb27e4528ea8ce296bfcbcd31894d546b5bb3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dcfcb27e4528ea8ce296bfcbcd31894d546b5bb3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c290cb01face96fa9c2a4f96f7d57083da3c99f1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c290cb01face96fa9c2a4f96f7d57083da3c99f1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c290cb01face96fa9c2a4f96f7d57083da3c99f1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c290cb01face96fa9c2a4f96f7d57083da3c99f1/comments",
  "author": {
    "login": "trofi",
    "id": 226650,
    "node_id": "MDQ6VXNlcjIyNjY1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/226650?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trofi",
    "html_url": "https://github.com/trofi",
    "followers_url": "https://api.github.com/users/trofi/followers",
    "following_url": "https://api.github.com/users/trofi/following{/other_user}",
    "gists_url": "https://api.github.com/users/trofi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trofi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trofi/subscriptions",
    "organizations_url": "https://api.github.com/users/trofi/orgs",
    "repos_url": "https://api.github.com/users/trofi/repos",
    "events_url": "https://api.github.com/users/trofi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trofi/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "trofi",
    "id": 226650,
    "node_id": "MDQ6VXNlcjIyNjY1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/226650?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trofi",
    "html_url": "https://github.com/trofi",
    "followers_url": "https://api.github.com/users/trofi/followers",
    "following_url": "https://api.github.com/users/trofi/following{/other_user}",
    "gists_url": "https://api.github.com/users/trofi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trofi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trofi/subscriptions",
    "organizations_url": "https://api.github.com/users/trofi/orgs",
    "repos_url": "https://api.github.com/users/trofi/repos",
    "events_url": "https://api.github.com/users/trofi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trofi/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6476ec743f13594bd0ef642cabd7b1dd3548073e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6476ec743f13594bd0ef642cabd7b1dd3548073e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6476ec743f13594bd0ef642cabd7b1dd3548073e"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 7,
    "deletions": 2
  },
  "files": [
    {
      "sha": "2fc74f5592aaf7d3fde4b5536a4c2bade92bdc7b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c290cb01face96fa9c2a4f96f7d57083da3c99f1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c290cb01face96fa9c2a4f96f7d57083da3c99f1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c290cb01face96fa9c2a4f96f7d57083da3c99f1",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-25  Sergei Trofimovich  <siarheit@google.com>\n+\n+\t* sparc-linux-nat.c (sparc_linux_nat_target): fix sparc build\n+\tby passing `process_stratum_target*` parameter.\n+\n 2021-04-25  Lancelot Six  <lsix@lancelotsix.com>\n \n \tPR gdb/22640"
    },
    {
      "sha": "33a17afa21e619cce941accd08d777ebbfd97a70",
      "filename": "gdb/sparc-linux-nat.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c290cb01face96fa9c2a4f96f7d57083da3c99f1/gdb/sparc-linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c290cb01face96fa9c2a4f96f7d57083da3c99f1/gdb/sparc-linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sparc-linux-nat.c?ref=c290cb01face96fa9c2a4f96f7d57083da3c99f1",
      "patch": "@@ -33,10 +33,10 @@ class sparc_linux_nat_target final : public linux_nat_target\n public:\n   /* Add our register access methods.  */\n   void fetch_registers (struct regcache *regcache, int regnum) override\n-  { sparc_fetch_inferior_registers (regcache, regnum); }\n+  { sparc_fetch_inferior_registers (this, regcache, regnum); }\n \n   void store_registers (struct regcache *regcache, int regnum) override\n-  { sparc_store_inferior_registers (regcache, regnum); }\n+  { sparc_store_inferior_registers (this, regcache, regnum); }\n };\n \n static sparc_linux_nat_target the_sparc_linux_nat_target;"
    }
  ]
}