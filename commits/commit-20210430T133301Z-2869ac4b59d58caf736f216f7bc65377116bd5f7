{
  "sha": "2869ac4b59d58caf736f216f7bc65377116bd5f7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Mjg2OWFjNGI1OWQ1OGNhZjczNmYyMTZmN2JjNjUzNzcxMTZiZDVmNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-04-15T14:54:06Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-04-30T13:33:01Z"
    },
    "message": "Fix crash with GNAT minimal encodings\n\nRunning the AdaCore internal test suite with -fgnat-encodings=minimal\nfound a gdb crash.  The bug is that GDB ends up with a typedef in\nada_index_type, resulting in a NULL dereference.\n\nThis crash can be reproduced using GCC 11 with the included test case.\n\nTested on x86-64 Fedora 32.  Because this is Ada-specific, and was\nalready reviewed by Joel, I am going to check it in.\n\n2021-04-30  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (ada_index_type): Use ada_check_typedef.\n\ngdb/testsuite/ChangeLog\n2021-04-30  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/enum_idx_packed/pck.ads (My_Enum, My_Array_Type)\n\t(Confused_Array): New types.\n\t* gdb.ada/enum_idx_packed/foo.adb (Confused_Array): New variable.\n\t* gdb.ada/enum_idx_packed.exp: Add new tests.",
    "tree": {
      "sha": "41800bc393f05104e2e55de0cbaf48a3d0394b4f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/41800bc393f05104e2e55de0cbaf48a3d0394b4f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2869ac4b59d58caf736f216f7bc65377116bd5f7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2869ac4b59d58caf736f216f7bc65377116bd5f7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2869ac4b59d58caf736f216f7bc65377116bd5f7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2869ac4b59d58caf736f216f7bc65377116bd5f7/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d1fbc3ba09fb2e79acf633df29ccbe9285624419",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1fbc3ba09fb2e79acf633df29ccbe9285624419",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d1fbc3ba09fb2e79acf633df29ccbe9285624419"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 28,
    "deletions": 2
  },
  "files": [
    {
      "sha": "f89346dfb2600df1c882cf1cd6e0cf1414746cd7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2869ac4b59d58caf736f216f7bc65377116bd5f7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2869ac4b59d58caf736f216f7bc65377116bd5f7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2869ac4b59d58caf736f216f7bc65377116bd5f7",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-30  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (ada_index_type): Use ada_check_typedef.\n+\n 2021-04-29  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* auto-load.h: Split namespace declaration."
    },
    {
      "sha": "e15e583adca08a509fe56b0069f8163c346349ed",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2869ac4b59d58caf736f216f7bc65377116bd5f7/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2869ac4b59d58caf736f216f7bc65377116bd5f7/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=2869ac4b59d58caf736f216f7bc65377116bd5f7",
      "patch": "@@ -2877,8 +2877,11 @@ ada_index_type (struct type *type, int n, const char *name)\n       int i;\n \n       for (i = 1; i < n; i += 1)\n-\ttype = TYPE_TARGET_TYPE (type);\n-      result_type = TYPE_TARGET_TYPE (type->index_type ());\n+\t{\n+\t  type = ada_check_typedef (type);\n+\t  type = TYPE_TARGET_TYPE (type);\n+\t}\n+      result_type = TYPE_TARGET_TYPE (ada_check_typedef (type)->index_type ());\n       /* FIXME: The stabs type r(0,0);bound;bound in an array type\n \t has a target type of TYPE_CODE_UNDEF.  We compensate here, but\n \t perhaps stabsread.c would make more sense.  */"
    },
    {
      "sha": "be395272a2bd33f31055c893736ff3fff946684a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2869ac4b59d58caf736f216f7bc65377116bd5f7/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2869ac4b59d58caf736f216f7bc65377116bd5f7/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=2869ac4b59d58caf736f216f7bc65377116bd5f7",
      "patch": "@@ -1,3 +1,10 @@\n+2021-04-30  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/enum_idx_packed/pck.ads (My_Enum, My_Array_Type)\n+\t(Confused_Array): New types.\n+\t* gdb.ada/enum_idx_packed/foo.adb (Confused_Array): New variable.\n+\t* gdb.ada/enum_idx_packed.exp: Add new tests.\n+\n 2021-04-30  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.mi/mi-sym-info.exp: Add with_timeout_factor, and increase"
    },
    {
      "sha": "f7d57a7bf6828a24f19849b572b69d0ae97a403c",
      "filename": "gdb/testsuite/gdb.ada/enum_idx_packed.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2869ac4b59d58caf736f216f7bc65377116bd5f7/gdb/testsuite/gdb.ada/enum_idx_packed.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2869ac4b59d58caf736f216f7bc65377116bd5f7/gdb/testsuite/gdb.ada/enum_idx_packed.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/enum_idx_packed.exp?ref=2869ac4b59d58caf736f216f7bc65377116bd5f7",
      "patch": "@@ -122,4 +122,7 @@ foreach_with_prefix scenario {all minimal} {\n \n     gdb_test \"print multi_access.all\" \\\n \t\" = \\\\(\\\\(8, 13, 21, 34, 55\\\\), \\\\(1, 1, 2, 3, 5\\\\)\\\\)\"\n+\n+    gdb_test \"print confused_array(red, green)\" \" = 2\"\n+    gdb_test \"print confused_array(green, red)\" \" = 6\"\n }"
    },
    {
      "sha": "2887ed40d7265756812cbbb1b44670db047318b1",
      "filename": "gdb/testsuite/gdb.ada/enum_idx_packed/foo.adb",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2869ac4b59d58caf736f216f7bc65377116bd5f7/gdb/testsuite/gdb.ada/enum_idx_packed/foo.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2869ac4b59d58caf736f216f7bc65377116bd5f7/gdb/testsuite/gdb.ada/enum_idx_packed/foo.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/enum_idx_packed/foo.adb?ref=2869ac4b59d58caf736f216f7bc65377116bd5f7",
      "patch": "@@ -26,6 +26,10 @@ procedure Foo is\n      := new Multi_Dimension'(True => (1, 1, 2, 3, 5),\n                              False => (8, 13, 21, 34, 55));\n \n+   Confused_Array : Confused_Array_Type := (Red => (0, 1, 2),\n+                                            Green => (5, 6, 7),\n+                                            others => (others => 72));\n+\n begin\n    Do_Nothing (Full'Address);  -- STOP\n    Do_Nothing (Primary'Address);"
    },
    {
      "sha": "ff0b91a25f5cb675c1b96476db002174cae710b8",
      "filename": "gdb/testsuite/gdb.ada/enum_idx_packed/pck.ads",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2869ac4b59d58caf736f216f7bc65377116bd5f7/gdb/testsuite/gdb.ada/enum_idx_packed/pck.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2869ac4b59d58caf736f216f7bc65377116bd5f7/gdb/testsuite/gdb.ada/enum_idx_packed/pck.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/enum_idx_packed/pck.ads?ref=2869ac4b59d58caf736f216f7bc65377116bd5f7",
      "patch": "@@ -48,5 +48,10 @@ package Pck is\n    pragma Pack (Multi_Dimension);\n    type Multi_Dimension_Access is access all Multi_Dimension;\n \n+   type My_Enum is (Blue, Red, Green);\n+\n+   type My_Array_Type is array (My_Enum) of Integer;\n+   type Confused_Array_Type is array (Color) of My_Array_Type;\n+\n    procedure Do_Nothing (A : System.Address);\n end Pck;"
    }
  ]
}