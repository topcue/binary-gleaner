{
  "sha": "47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDdmMGUyZmY3ZjBhNDQ3OWM1MTFmNWQzZWQ0YzhhOTYyY2IxZjIzNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-09-15T17:08:56Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-09-15T17:08:57Z"
    },
    "message": "Don't use PyInt_FromLong\n\nAvoid the use of PyInt_FromLong, preferring gdb_py_object_from_longest\ninstead.  I found found another spot that was incorrectly handling\nerrors (see gdbpy_create_ptid_object) while writing this patch; it is\nfixed here.\n\ngdb/ChangeLog\n2020-09-15  Tom Tromey  <tromey@adacore.com>\n\n\t* python/python-internal.h (PyInt_FromLong): Remove define.\n\t* python/py-value.c (convert_value_from_python): Use\n\tgdb_py_object_from_longest.\n\t* python/py-type.c (typy_get_code): Use\n\tgdb_py_object_from_longest.\n\t* python/py-symtab.c (salpy_get_line): Use\n\tgdb_py_object_from_longest.\n\t* python/py-symbol.c (sympy_get_addr_class, sympy_line): Use\n\tgdb_py_object_from_longest.\n\t* python/py-record.c (recpy_gap_reason_code): Use\n\tgdb_py_object_from_longest.\n\t* python/py-record-btrace.c (recpy_bt_insn_size)\n\t(recpy_bt_func_level, btpy_list_count): Use\n\tgdb_py_object_from_longest.\n\t* python/py-infthread.c (gdbpy_create_ptid_object): Use\n\tgdb_py_object_from_longest.  Fix error handling.\n\t* python/py-framefilter.c (bootstrap_python_frame_filters): Use\n\tgdb_py_object_from_longest.\n\t* python/py-frame.c (frapy_type, frapy_unwind_stop_reason): Use\n\tgdb_py_object_from_longest.\n\t* python/py-breakpoint.c (bppy_get_type, bppy_get_number)\n\t(bppy_get_thread, bppy_get_task, bppy_get_hit_count)\n\t(bppy_get_ignore_count): Use gdb_py_object_from_longest.",
    "tree": {
      "sha": "62f0ecfdb041fc15083df188d26f10167efd907b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/62f0ecfdb041fc15083df188d26f10167efd907b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "512116ce26a66338e1be1847cc8b014f4d4bbc13",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/512116ce26a66338e1be1847cc8b014f4d4bbc13",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/512116ce26a66338e1be1847cc8b014f4d4bbc13"
    }
  ],
  "stats": {
    "total": 86,
    "additions": 62,
    "deletions": 24
  },
  "files": [
    {
      "sha": "009314a678d6cc90b905d20e9e09226d83567aee",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
      "patch": "@@ -1,3 +1,29 @@\n+2020-09-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* python/python-internal.h (PyInt_FromLong): Remove define.\n+\t* python/py-value.c (convert_value_from_python): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-type.c (typy_get_code): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-symtab.c (salpy_get_line): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-symbol.c (sympy_get_addr_class, sympy_line): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-record.c (recpy_gap_reason_code): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-record-btrace.c (recpy_bt_insn_size)\n+\t(recpy_bt_func_level, btpy_list_count): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-infthread.c (gdbpy_create_ptid_object): Use\n+\tgdb_py_object_from_longest.  Fix error handling.\n+\t* python/py-framefilter.c (bootstrap_python_frame_filters): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-frame.c (frapy_type, frapy_unwind_stop_reason): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-breakpoint.c (bppy_get_type, bppy_get_number)\n+\t(bppy_get_thread, bppy_get_task, bppy_get_hit_count)\n+\t(bppy_get_ignore_count): Use gdb_py_object_from_longest.\n+\n 2020-09-15  Tom Tromey  <tromey@adacore.com>\n \n \t* python/python.c (gdbpy_parameter_value): Use"
    },
    {
      "sha": "7369c91ad90f622b95fea47b94d2ee4286d798c4",
      "filename": "gdb/python/py-breakpoint.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-breakpoint.c?ref=47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
      "patch": "@@ -552,7 +552,7 @@ bppy_get_type (PyObject *self, void *closure)\n \n   BPPY_REQUIRE_VALID (self_bp);\n \n-  return PyInt_FromLong (self_bp->bp->type);\n+  return gdb_py_object_from_longest (self_bp->bp->type).release ();\n }\n \n /* Python function to get the visibility of the breakpoint.  */\n@@ -613,7 +613,7 @@ bppy_get_number (PyObject *self, void *closure)\n \n   BPPY_REQUIRE_VALID (self_bp);\n \n-  return PyInt_FromLong (self_bp->number);\n+  return gdb_py_object_from_longest (self_bp->number).release ();\n }\n \n /* Python function to get the breakpoint's thread ID.  */\n@@ -627,7 +627,7 @@ bppy_get_thread (PyObject *self, void *closure)\n   if (self_bp->bp->thread == -1)\n     Py_RETURN_NONE;\n \n-  return PyInt_FromLong (self_bp->bp->thread);\n+  return gdb_py_object_from_longest (self_bp->bp->thread).release ();\n }\n \n /* Python function to get the breakpoint's task ID (in Ada).  */\n@@ -641,7 +641,7 @@ bppy_get_task (PyObject *self, void *closure)\n   if (self_bp->bp->task == 0)\n     Py_RETURN_NONE;\n \n-  return PyInt_FromLong (self_bp->bp->task);\n+  return gdb_py_object_from_longest (self_bp->bp->task).release ();\n }\n \n /* Python function to get the breakpoint's hit count.  */\n@@ -652,7 +652,7 @@ bppy_get_hit_count (PyObject *self, void *closure)\n \n   BPPY_REQUIRE_VALID (self_bp);\n \n-  return PyInt_FromLong (self_bp->bp->hit_count);\n+  return gdb_py_object_from_longest (self_bp->bp->hit_count).release ();\n }\n \n /* Python function to get the breakpoint's ignore count.  */\n@@ -663,7 +663,7 @@ bppy_get_ignore_count (PyObject *self, void *closure)\n \n   BPPY_REQUIRE_VALID (self_bp);\n \n-  return PyInt_FromLong (self_bp->bp->ignore_count);\n+  return gdb_py_object_from_longest (self_bp->bp->ignore_count).release ();\n }\n \n /* Internal function to validate the Python parameters/keywords"
    },
    {
      "sha": "24d4fae6242e9de7905ce9110e8652bcf91134a6",
      "filename": "gdb/python/py-frame.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-frame.c?ref=47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
      "patch": "@@ -165,7 +165,7 @@ frapy_type (PyObject *self, PyObject *args)\n       GDB_PY_HANDLE_EXCEPTION (except);\n     }\n \n-  return PyInt_FromLong (type);\n+  return gdb_py_object_from_longest (type).release ();\n }\n \n /* Implementation of gdb.Frame.architecture (self) -> gdb.Architecture.\n@@ -209,7 +209,7 @@ frapy_unwind_stop_reason (PyObject *self, PyObject *args)\n \n   stop_reason = get_frame_unwind_stop_reason (frame);\n \n-  return PyInt_FromLong (stop_reason);\n+  return gdb_py_object_from_longest (stop_reason).release ();\n }\n \n /* Implementation of gdb.Frame.pc (self) -> Long."
    },
    {
      "sha": "d0348b5aeff0d656f2682de41b124bf82b7ba93e",
      "filename": "gdb/python/py-framefilter.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-framefilter.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-framefilter.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-framefilter.c?ref=47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
      "patch": "@@ -1098,11 +1098,11 @@ bootstrap_python_frame_filters (struct frame_info *frame,\n   if (sort_func == NULL)\n     return NULL;\n \n-  gdbpy_ref<> py_frame_low (PyInt_FromLong (frame_low));\n+  gdbpy_ref<> py_frame_low = gdb_py_object_from_longest (frame_low);\n   if (py_frame_low == NULL)\n     return NULL;\n \n-  gdbpy_ref<> py_frame_high (PyInt_FromLong (frame_high));\n+  gdbpy_ref<> py_frame_high = gdb_py_object_from_longest (frame_high);\n   if (py_frame_high == NULL)\n     return NULL;\n "
    },
    {
      "sha": "fec7bcad30fbd96544b7905b61ab79c088b96675",
      "filename": "gdb/python/py-infthread.c",
      "status": "modified",
      "additions": 15,
      "deletions": 4,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-infthread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-infthread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-infthread.c?ref=47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
      "patch": "@@ -307,10 +307,21 @@ gdbpy_create_ptid_object (ptid_t ptid)\n   lwp = ptid.lwp ();\n   tid = ptid.tid ();\n \n-  PyTuple_SET_ITEM (ret, 0, PyInt_FromLong (pid));\n-  PyTuple_SET_ITEM (ret, 1, PyInt_FromLong (lwp));\n-  PyTuple_SET_ITEM (ret, 2, PyInt_FromLong (tid));\n- \n+  gdbpy_ref<> pid_obj = gdb_py_object_from_longest (pid);\n+  if (pid_obj == nullptr)\n+    return nullptr;\n+  gdbpy_ref<> lwp_obj = gdb_py_object_from_longest (lwp);\n+  if (lwp_obj == nullptr)\n+    return nullptr;\n+  gdbpy_ref<> tid_obj = gdb_py_object_from_longest (tid);\n+  if (tid_obj == nullptr)\n+    return nullptr;\n+\n+  /* Note that these steal references, hence the use of 'release'.  */\n+  PyTuple_SET_ITEM (ret, 0, pid_obj.release ());\n+  PyTuple_SET_ITEM (ret, 1, lwp_obj.release ());\n+  PyTuple_SET_ITEM (ret, 2, tid_obj.release ());\n+\n   return ret;\n }\n "
    },
    {
      "sha": "15cd15bb0dc08b6e3d22c16242d06014bd7f8b1e",
      "filename": "gdb/python/py-record-btrace.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-record-btrace.c?ref=47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
      "patch": "@@ -246,7 +246,7 @@ recpy_bt_insn_size (PyObject *self, void *closure)\n   if (insn == NULL)\n     return NULL;\n \n-  return PyInt_FromLong (insn->size);\n+  return gdb_py_object_from_longest (insn->size).release ();\n }\n \n /* Implementation of RecordInstruction.is_speculative [bool] for btrace.\n@@ -342,7 +342,8 @@ recpy_bt_func_level (PyObject *self, void *closure)\n     return NULL;\n \n   tinfo = ((recpy_element_object *) self)->thread;\n-  return PyInt_FromLong (tinfo->btrace.level + func->level);\n+  return gdb_py_object_from_longest (tinfo->btrace.level\n+\t\t\t\t     + func->level).release ();\n }\n \n /* Implementation of RecordFunctionSegment.symbol [gdb.Symbol] for btrace.\n@@ -566,7 +567,8 @@ btpy_list_count (PyObject *self, PyObject *value)\n {\n   /* We know that if an element is in the list, it is so exactly one time,\n      enabling us to reuse the \"is element of\" check.  */\n-  return PyInt_FromLong (btpy_list_contains (self, value));\n+  return gdb_py_object_from_longest (btpy_list_contains (self,\n+\t\t\t\t\t\t\t value)).release ();\n }\n \n /* Python rich compare function to allow for equality and inequality checks"
    },
    {
      "sha": "3863408122438911743a27e25f8ca8d7d645358f",
      "filename": "gdb/python/py-record.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-record.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-record.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-record.c?ref=47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
      "patch": "@@ -464,7 +464,7 @@ recpy_gap_reason_code (PyObject *self, void *closure)\n {\n   const recpy_gap_object * const obj = (const recpy_gap_object *) self;\n \n-  return PyInt_FromLong (obj->reason_code);\n+  return gdb_py_object_from_longest (obj->reason_code).release ();\n }\n \n /* Implementation of RecordGap.error_string [str].  */"
    },
    {
      "sha": "0adcb0bc9ad7113b042d72ab4805cc819dc57136",
      "filename": "gdb/python/py-symbol.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-symbol.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-symbol.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-symbol.c?ref=47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
      "patch": "@@ -131,7 +131,7 @@ sympy_get_addr_class (PyObject *self, void *closure)\n \n   SYMPY_REQUIRE_VALID (self, symbol);\n \n-  return PyInt_FromLong (SYMBOL_CLASS (symbol));\n+  return gdb_py_object_from_longest (SYMBOL_CLASS (symbol)).release ();\n }\n \n static PyObject *\n@@ -221,7 +221,7 @@ sympy_line (PyObject *self, void *closure)\n \n   SYMPY_REQUIRE_VALID (self, symbol);\n \n-  return PyInt_FromLong (SYMBOL_LINE (symbol));\n+  return gdb_py_object_from_longest (SYMBOL_LINE (symbol)).release ();\n }\n \n /* Implementation of gdb.Symbol.is_valid (self) -> Boolean."
    },
    {
      "sha": "579662f92d2e58e2090a90e1dcde1b8c68a4b049",
      "filename": "gdb/python/py-symtab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-symtab.c?ref=47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
      "patch": "@@ -290,7 +290,7 @@ salpy_get_line (PyObject *self, void *closure)\n \n   SALPY_REQUIRE_VALID (self, sal);\n \n-  return PyInt_FromLong (sal->line);\n+  return gdb_py_object_from_longest (sal->line).release ();\n }\n \n static PyObject *"
    },
    {
      "sha": "951dac261742ae58984169a569f486b4fff56907",
      "filename": "gdb/python/py-type.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-type.c?ref=47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
      "patch": "@@ -157,7 +157,7 @@ typy_get_code (PyObject *self, void *closure)\n {\n   struct type *type = ((type_object *) self)->type;\n \n-  return PyInt_FromLong (type->code ());\n+  return gdb_py_object_from_longest (type->code ()).release ();\n }\n \n /* Helper function for typy_fields which converts a single field to a"
    },
    {
      "sha": "6e29284aad11ff344789152a4f601b3474d86bb5",
      "filename": "gdb/python/py-value.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/py-value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-value.c?ref=47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
      "patch": "@@ -1860,7 +1860,7 @@ convert_value_from_python (PyObject *obj)\n \t      if (PyErr_ExceptionMatches (PyExc_OverflowError))\n \t\t{\n \t\t  gdbpy_err_fetch fetched_error;\n-\t\t  gdbpy_ref<> zero (PyInt_FromLong (0));\n+\t\t  gdbpy_ref<> zero = gdb_py_object_from_longest (0);\n \n \t\t  /* Check whether obj is positive.  */\n \t\t  if (PyObject_RichCompareBool (obj, zero.get (), Py_GT) > 0)"
    },
    {
      "sha": "36c1ab281f885dcb0fa875ea7a7727bd48ced0ff",
      "filename": "gdb/python/python-internal.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/python-internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237/gdb/python/python-internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python-internal.h?ref=47f0e2ff7f0a4479c511f5d3ed4c8a962cb1f237",
      "patch": "@@ -96,7 +96,6 @@\n #define Py_TPFLAGS_CHECKTYPES 0\n \n #define PyInt_Check PyLong_Check\n-#define PyInt_FromLong PyLong_FromLong\n #define PyInt_AsLong PyLong_AsLong\n #define PyInt_AsSsize_t PyLong_AsSsize_t\n "
    }
  ]
}