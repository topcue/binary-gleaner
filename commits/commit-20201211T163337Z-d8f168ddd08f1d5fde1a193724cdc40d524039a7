{
  "sha": "d8f168ddd08f1d5fde1a193724cdc40d524039a7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDhmMTY4ZGRkMDhmMWQ1ZmRlMWExOTM3MjRjZGM0MGQ1MjQwMzlhNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-11T16:33:36Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-11T16:33:37Z"
    },
    "message": "Change all_root_varobjs to take a function_view\n\nThis changes all_root_varobjs to take a function_view.  This\nsimplifies some of the callers, in particular we can remove a data\ntype that only existed to be passed through.\n\ngdb/ChangeLog\n2020-12-11  Tom Tromey  <tom@tromey.com>\n\n\t* varobj.h (all_root_varobjs): Take a function_view.\n\t* varobj.c (all_root_varobjs): Take a function_view.\n\t(varobj_invalidate_iter): Remove unused parameter.\n\t(varobj_invalidate): Update.\n\t* mi/mi-cmd-var.c (struct mi_cmd_var_update): Remove.\n\t(mi_cmd_var_update_iter): Change parameters.",
    "tree": {
      "sha": "5f6679f48c8d8d0d2c0e4ae44bf61f2d0a7c9e32",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5f6679f48c8d8d0d2c0e4ae44bf61f2d0a7c9e32"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d8f168ddd08f1d5fde1a193724cdc40d524039a7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d8f168ddd08f1d5fde1a193724cdc40d524039a7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d8f168ddd08f1d5fde1a193724cdc40d524039a7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d8f168ddd08f1d5fde1a193724cdc40d524039a7/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "76deb5d9181416cb7ea68764db13e7059d48a46c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/76deb5d9181416cb7ea68764db13e7059d48a46c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/76deb5d9181416cb7ea68764db13e7059d48a46c"
    }
  ],
  "stats": {
    "total": 50,
    "additions": 24,
    "deletions": 26
  },
  "files": [
    {
      "sha": "d724e742f887d300f56b78ff4bd463ad9b588a23",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8f168ddd08f1d5fde1a193724cdc40d524039a7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8f168ddd08f1d5fde1a193724cdc40d524039a7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d8f168ddd08f1d5fde1a193724cdc40d524039a7",
      "patch": "@@ -1,3 +1,12 @@\n+2020-12-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* varobj.h (all_root_varobjs): Take a function_view.\n+\t* varobj.c (all_root_varobjs): Take a function_view.\n+\t(varobj_invalidate_iter): Remove unused parameter.\n+\t(varobj_invalidate): Update.\n+\t* mi/mi-cmd-var.c (struct mi_cmd_var_update): Remove.\n+\t(mi_cmd_var_update_iter): Change parameters.\n+\n 2020-12-11  Tom Tromey  <tom@tromey.com>\n \n \t* varobj.c (struct varobj_root) <next>: Remove."
    },
    {
      "sha": "752d89ad434212a772ee8a50b1e680bd686a4efd",
      "filename": "gdb/mi/mi-cmd-var.c",
      "status": "modified",
      "additions": 8,
      "deletions": 18,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8f168ddd08f1d5fde1a193724cdc40d524039a7/gdb/mi/mi-cmd-var.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8f168ddd08f1d5fde1a193724cdc40d524039a7/gdb/mi/mi-cmd-var.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmd-var.c?ref=d8f168ddd08f1d5fde1a193724cdc40d524039a7",
      "patch": "@@ -585,20 +585,12 @@ mi_cmd_var_assign (const char *command, char **argv, int argc)\n   uiout->field_string (\"value\", val.c_str ());\n }\n \n-/* Type used for parameters passing to mi_cmd_var_update_iter.  */\n-\n-struct mi_cmd_var_update\n-  {\n-    int only_floating;\n-    enum print_values print_values;\n-  };\n-\n /* Helper for mi_cmd_var_update - update each VAR.  */\n \n static void\n-mi_cmd_var_update_iter (struct varobj *var, void *data_pointer)\n+mi_cmd_var_update_iter (struct varobj *var, bool only_floating,\n+\t\t\tenum print_values print_values)\n {\n-  struct mi_cmd_var_update *data = (struct mi_cmd_var_update *) data_pointer;\n   bool thread_stopped;\n \n   int thread_id = varobj_get_thread_id (var);\n@@ -617,8 +609,8 @@ mi_cmd_var_update_iter (struct varobj *var, void *data_pointer)\n     }\n \n   if (thread_stopped\n-      && (!data->only_floating || varobj_floating_p (var)))\n-    varobj_update_one (var, data->print_values, false /* implicit */);\n+      && (!only_floating || varobj_floating_p (var)))\n+    varobj_update_one (var, print_values, false /* implicit */);\n }\n \n void\n@@ -656,16 +648,14 @@ mi_cmd_var_update (const char *command, char **argv, int argc)\n \n   if ((*name == '*' || *name == '@') && (*(name + 1) == '\\0'))\n     {\n-      struct mi_cmd_var_update data;\n-\n-      data.only_floating = (*name == '@');\n-      data.print_values = print_values;\n-\n       /* varobj_update_one automatically updates all the children of\n \t VAROBJ.  Therefore update each VAROBJ only once by iterating\n \t only the root VAROBJs.  */\n \n-      all_root_varobjs (mi_cmd_var_update_iter, &data);\n+      all_root_varobjs ([=] (varobj *var)\n+        {\n+\t  mi_cmd_var_update_iter (var, *name == '0', print_values);\n+\t});\n     }\n   else\n     {"
    },
    {
      "sha": "e4d640f9d611c94f2d2f601c2683d2cc1f8a5f29",
      "filename": "gdb/varobj.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8f168ddd08f1d5fde1a193724cdc40d524039a7/gdb/varobj.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8f168ddd08f1d5fde1a193724cdc40d524039a7/gdb/varobj.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/varobj.c?ref=d8f168ddd08f1d5fde1a193724cdc40d524039a7",
      "patch": "@@ -2357,19 +2357,19 @@ varobj_default_value_is_changeable_p (const struct varobj *var)\n   return r;\n }\n \n-/* Iterate all the existing _root_ VAROBJs and call the FUNC callback for them\n-   with an arbitrary caller supplied DATA pointer.  */\n+/* Iterate all the existing _root_ VAROBJs and call the FUNC callback\n+   for each one.  */\n \n void\n-all_root_varobjs (void (*func) (struct varobj *var, void *data), void *data)\n+all_root_varobjs (gdb::function_view<void (struct varobj *var)> func)\n {\n   /* Iterate \"safely\" - handle if the callee deletes its passed VAROBJ.  */\n   auto iter = rootlist.begin ();\n   auto end = rootlist.end ();\n   while (iter != end)\n     {\n       auto self = iter++;\n-      (*func) ((*self)->rootvar, data);\n+      func ((*self)->rootvar);\n     }\n }\n \n@@ -2381,7 +2381,7 @@ all_root_varobjs (void (*func) (struct varobj *var, void *data), void *data)\n    varobj must be either re-evaluated, or marked as invalid here.  */\n \n static void\n-varobj_invalidate_iter (struct varobj *var, void *unused)\n+varobj_invalidate_iter (struct varobj *var)\n {\n   /* global and floating var must be re-evaluated.  */\n   if (var->root->floating || var->root->valid_block == NULL)\n@@ -2412,7 +2412,7 @@ varobj_invalidate_iter (struct varobj *var, void *unused)\n void \n varobj_invalidate (void)\n {\n-  all_root_varobjs (varobj_invalidate_iter, NULL);\n+  all_root_varobjs (varobj_invalidate_iter);\n }\n \n /* A hash function for a varobj.  */"
    },
    {
      "sha": "abf333664afb6d8233792e75bc05e786db046311",
      "filename": "gdb/varobj.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8f168ddd08f1d5fde1a193724cdc40d524039a7/gdb/varobj.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8f168ddd08f1d5fde1a193724cdc40d524039a7/gdb/varobj.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/varobj.h?ref=d8f168ddd08f1d5fde1a193724cdc40d524039a7",
      "patch": "@@ -309,8 +309,7 @@ extern std::string varobj_get_value (struct varobj *var);\n \n extern bool varobj_set_value (struct varobj *var, const char *expression);\n \n-extern void all_root_varobjs (void (*func) (struct varobj *var, void *data),\n-\t\t\t      void *data);\n+extern void all_root_varobjs (gdb::function_view<void (struct varobj *var)>);\n \n extern std::vector<varobj_update_result>\n   varobj_update (struct varobj **varp, bool is_explicit);"
    }
  ]
}