{
  "sha": "26f60d59391c851465e6db26bdedfeeecdcff155",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjZmNjBkNTkzOTFjODUxNDY1ZTZkYjI2YmRlZGZlZWVjZGNmZjE1NQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-01T23:40:55Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-02T01:06:19Z"
    },
    "message": "alpha-vms: prevent endless recursion\n\n\t* vms-lib.c (vms_traverse_index): Add recur_count param and\n\tupdate calls.  Fail on excessive recursion.",
    "tree": {
      "sha": "836c3a043f7f426ea284371728d64089e1552206",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/836c3a043f7f426ea284371728d64089e1552206"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/26f60d59391c851465e6db26bdedfeeecdcff155",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26f60d59391c851465e6db26bdedfeeecdcff155",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/26f60d59391c851465e6db26bdedfeeecdcff155",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26f60d59391c851465e6db26bdedfeeecdcff155/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9cb56943d7f8de419d15e7ff1614d342b4682340",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9cb56943d7f8de419d15e7ff1614d342b4682340",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9cb56943d7f8de419d15e7ff1614d342b4682340"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 15,
    "deletions": 3
  },
  "files": [
    {
      "sha": "d37c2cd98d918877195b086f287058646931acb8",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26f60d59391c851465e6db26bdedfeeecdcff155/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26f60d59391c851465e6db26bdedfeeecdcff155/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=26f60d59391c851465e6db26bdedfeeecdcff155",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* vms-lib.c (vms_traverse_index): Add recur_count param and\n+\tupdate calls.  Fail on excessive recursion.\n+\n 2020-03-02  Alan Modra  <amodra@gmail.com>\n \n \t* vms-alpha.c (vms_get_remaining_object_record): Use"
    },
    {
      "sha": "66a40bc91ca8bfbb078cb4ffeca57b1f5072e2ab",
      "filename": "bfd/vms-lib.c",
      "status": "modified",
      "additions": 10,
      "deletions": 3,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26f60d59391c851465e6db26bdedfeeecdcff155/bfd/vms-lib.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26f60d59391c851465e6db26bdedfeeecdcff155/bfd/vms-lib.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/vms-lib.c?ref=26f60d59391c851465e6db26bdedfeeecdcff155",
      "patch": "@@ -242,14 +242,21 @@ vms_write_block (bfd *abfd, unsigned int vbn, void *blk)\n    If the entry is indirect, recurse.  */\n \n static bfd_boolean\n-vms_traverse_index (bfd *abfd, unsigned int vbn, struct carsym_mem *cs)\n+vms_traverse_index (bfd *abfd, unsigned int vbn, struct carsym_mem *cs,\n+\t\t    unsigned int recur_count)\n {\n   struct vms_indexdef indexdef;\n   file_ptr off;\n   unsigned char *p;\n   unsigned char *endp;\n   unsigned int n;\n \n+  if (recur_count == 100)\n+    {\n+      bfd_set_error (bfd_error_bad_value);\n+      return FALSE;\n+    }\n+\n   /* Read the index block.  */\n   BFD_ASSERT (sizeof (indexdef) == VMS_BLOCK_SIZE);\n   if (!vms_read_block (abfd, vbn, &indexdef))\n@@ -307,7 +314,7 @@ vms_traverse_index (bfd *abfd, unsigned int vbn, struct carsym_mem *cs)\n       if (idx_off == RFADEF__C_INDEX)\n \t{\n \t  /* Indirect entry.  Recurse.  */\n-\t  if (!vms_traverse_index (abfd, idx_vbn, cs))\n+\t  if (!vms_traverse_index (abfd, idx_vbn, cs, recur_count + 1))\n \t    return FALSE;\n \t}\n       else\n@@ -454,7 +461,7 @@ vms_lib_read_index (bfd *abfd, int idx, unsigned int *nbrel)\n \n   /* Note: if the index is empty, there is no block to traverse.  */\n   vbn = bfd_getl32 (idd.vbn);\n-  if (vbn != 0 && !vms_traverse_index (abfd, vbn, &csm))\n+  if (vbn != 0 && !vms_traverse_index (abfd, vbn, &csm, 0))\n     {\n       if (csm.realloced)\n \tfree (csm.idx);"
    }
  ]
}