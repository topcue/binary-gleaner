{
  "sha": "6227b330d563add042066259e5f933c89a85b3b5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjIyN2IzMzBkNTYzYWRkMDQyMDY2MjU5ZTVmOTMzYzg5YTg1YjNiNQ==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-14T12:38:30Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-14T12:51:14Z"
    },
    "message": "Add support for threads in vax_bsd_nat_target\n\nptrace(2) PT_GETREGS/PT_SETREGS accepts thread id (LWP) as the 4th\nargument for threads.\n\ngdb/ChangeLog:\n\n\t* vax-bsd-nat.c (vaxbsd_supply_gregset): New variable lwp and pass\n\tit to the ptrace call.\n\t* vax-bsd-nat.c (vaxbsd_collect_gregset): Likewise.",
    "tree": {
      "sha": "5a345eff2bf62c1c300c6375ba366318ad60cda3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5a345eff2bf62c1c300c6375ba366318ad60cda3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6227b330d563add042066259e5f933c89a85b3b5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6227b330d563add042066259e5f933c89a85b3b5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6227b330d563add042066259e5f933c89a85b3b5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6227b330d563add042066259e5f933c89a85b3b5/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "12753073036aad1250b5e9a1bd6991c125150269",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/12753073036aad1250b5e9a1bd6991c125150269",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/12753073036aad1250b5e9a1bd6991c125150269"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 13,
    "deletions": 4
  },
  "files": [
    {
      "sha": "34212357c84871f1b817dec4dda582ffae443efd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6227b330d563add042066259e5f933c89a85b3b5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6227b330d563add042066259e5f933c89a85b3b5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6227b330d563add042066259e5f933c89a85b3b5",
      "patch": "@@ -1,6 +1,13 @@\n 2020-03-14  Kamil Rytarowski  <n54@gmx.com>\n \n-\t* vax-bsd-nat.c (vaxbsd_supply_gregset): Cast gregs to const gdb_byte *.\n+\t* vax-bsd-nat.c (vaxbsd_supply_gregset): New variable lwp and pass\n+\tit to the ptrace call.\n+\t* vax-bsd-nat.c (vaxbsd_collect_gregset): Likewise.\n+\n+2020-03-14  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* vax-bsd-nat.c (vaxbsd_supply_gregset): Cast gregs to const\n+\tgdb_byte *.\n \t* vax-bsd-nat.c (vaxbsd_collect_gregset): Cast gregs to void *.\n \n 2020-03-14  Kamil Rytarowski  <n54@gmx.com>"
    },
    {
      "sha": "1ca1f7bb1e827e71750afe6e5aa87604cee2adfc",
      "filename": "gdb/vax-bsd-nat.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6227b330d563add042066259e5f933c89a85b3b5/gdb/vax-bsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6227b330d563add042066259e5f933c89a85b3b5/gdb/vax-bsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/vax-bsd-nat.c?ref=6227b330d563add042066259e5f933c89a85b3b5",
      "patch": "@@ -78,8 +78,9 @@ vax_bsd_nat_target::fetch_registers (struct regcache *regcache, int regnum)\n {\n   struct reg regs;\n   pid_t pid = regcache->ptid ().pid ();\n+  int lwp = regcache->ptid ().lwp ();\n \n-  if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, 0) == -1)\n+  if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, lwp) == -1)\n     perror_with_name (_(\"Couldn't get registers\"));\n \n   vaxbsd_supply_gregset (regcache, &regs);\n@@ -93,13 +94,14 @@ vax_bsd_nat_target::store_registers (struct regcache *regcache, int regnum)\n {\n   struct reg regs;\n   pid_t pid = regcache->ptid ().pid ();\n+  int lwp = regcache->ptid ().lwp ();\n \n-  if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, 0) == -1)\n+  if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, lwp) == -1)\n     perror_with_name (_(\"Couldn't get registers\"));\n \n   vaxbsd_collect_gregset (regcache, &regs, regnum);\n \n-  if (ptrace (PT_SETREGS, pid, (PTRACE_TYPE_ARG3) &regs, 0) == -1)\n+  if (ptrace (PT_SETREGS, pid, (PTRACE_TYPE_ARG3) &regs, lwp) == -1)\n     perror_with_name (_(\"Couldn't write registers\"));\n }\n \f"
    }
  ]
}