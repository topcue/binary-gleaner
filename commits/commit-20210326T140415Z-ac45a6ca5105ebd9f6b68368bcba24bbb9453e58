{
  "sha": "ac45a6ca5105ebd9f6b68368bcba24bbb9453e58",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWM0NWE2Y2E1MTA1ZWJkOWY2YjY4MzY4YmNiYTI0YmJiOTQ1M2U1OA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-16T10:09:25Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-26T14:04:15Z"
    },
    "message": "gdb/testsuite: remove duplicate test names for gdb.cp/nsusing.exp\n\nIn trying to resolve the duplicate test names for the\ngdb.cp/nsusing.exp script, I ended up giving the test script a serious\nspring clean.\n\nThis reverts some of the changes introduced in commit df83a9bf8b0d,\nbut I don't think that we have lost any testing.\n\nThe test program is made of many functions, the test script wants to\nstop in different functions and check which symbols are in scope.\n\nPreviously the test script would either restart GDB completely in\norder to \"progress\" to the next function, or the script would restart\nthe test program using 'runto'.\n\nIn this commit I have reordered the steps of the test to correspond to\nprogram order, I then progress through the test program once by just\nplacing a breakpoint and then continuing.  As I said, the test is\nchecking which symbols are in scope at each location, so the exact\norder of the tests doesn't matter, so long as we check the correct\nsymbols at each location.\n\nI have also given the comments capital letters and full stops, and\nre-wrapped them to a more sensible line length.\n\nThere was a duplicate test block introduced in the df83a9bf8b0d\ncommit which I have removed in this commit, this duplicate code was\nresponsible for one of the duplicate test names.\n\nThe other duplicate test name was due to the same command being run at\ndifferent locations, in this case I just gave the two tests explicit,\nunique, names.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.cp/nsusing.exp: Rewrite test, remove a duplicate test block.\n\tAvoid repeated uses of 'runto', and instread just progress once\n\tthrough the test stopping at different breakpoints.  Give comments\n\ta capital letter and full stop.  Give duplicate tests unique names.",
    "tree": {
      "sha": "d587fdded30488c3c986d32c9109d1638204f529",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d587fdded30488c3c986d32c9109d1638204f529"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ac45a6ca5105ebd9f6b68368bcba24bbb9453e58",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac45a6ca5105ebd9f6b68368bcba24bbb9453e58",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ac45a6ca5105ebd9f6b68368bcba24bbb9453e58",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac45a6ca5105ebd9f6b68368bcba24bbb9453e58/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c3344b626d4c593f81a840be521d9ad47d37f979",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3344b626d4c593f81a840be521d9ad47d37f979",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c3344b626d4c593f81a840be521d9ad47d37f979"
    }
  ],
  "stats": {
    "total": 140,
    "additions": 40,
    "deletions": 100
  },
  "files": [
    {
      "sha": "413cd4c7f911c8edeccef5741123c4af7412b90e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ac45a6ca5105ebd9f6b68368bcba24bbb9453e58/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ac45a6ca5105ebd9f6b68368bcba24bbb9453e58/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=ac45a6ca5105ebd9f6b68368bcba24bbb9453e58",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-26  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.cp/nsusing.exp: Rewrite test, remove a duplicate test block.\n+\tAvoid repeated uses of 'runto', and instread just progress once\n+\tthrough the test stopping at different breakpoints.  Give comments\n+\ta capital letter and full stop.  Give duplicate tests unique names.\n+\n 2021-03-25  Pedro Alves  <pedro@palves.net>\n \n \t* gdb.server/stop-reply-no-thread-multi.exp (run_test): Add"
    },
    {
      "sha": "8020eb03f4546ddf51d5a9631800ed7d8df7a39a",
      "filename": "gdb/testsuite/gdb.cp/nsusing.exp",
      "status": "modified",
      "additions": 33,
      "deletions": 100,
      "changes": 133,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ac45a6ca5105ebd9f6b68368bcba24bbb9453e58/gdb/testsuite/gdb.cp/nsusing.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ac45a6ca5105ebd9f6b68368bcba24bbb9453e58/gdb/testsuite/gdb.cp/nsusing.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/nsusing.exp?ref=ac45a6ca5105ebd9f6b68368bcba24bbb9453e58",
      "patch": "@@ -13,7 +13,6 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-\n standard_testfile .cc\n \n if [get_compiler_info] {\n@@ -25,8 +24,7 @@ if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile {debug c++}]} {\n }\n \n ############################################\n-# test printing of namespace imported within\n-# the function.\n+# Test printing of namespace imported within the function.\n \n if ![runto_main] then {\n     perror \"couldn't run to breakpoint main\"\n@@ -35,69 +33,19 @@ if ![runto_main] then {\n \n gdb_test \"print _a\" \"= 1\"\n \n-# Test that names are not printed when they\n-# are not imported\n-\n-gdb_breakpoint marker3\n-gdb_continue_to_breakpoint \"marker3\"\n-\n-#send_gdb \"break marker3\\n\"\n-#send_gdb \"continue\\n\"\n-\n-gdb_test \"print _a\" \"No symbol \\\"_a\\\" in current context.\" \\\n-    \"Print _a without import\"\n-\n-gdb_exit\n-gdb_start\n-gdb_reinitialize_dir $srcdir/$subdir\n-gdb_load ${binfile}\n-\n-\n ############################################\n-# test printing of namespace imported into\n-# a scope containing the pc.\n-\n-if ![runto_main] then {\n-    perror \"couldn't run to breakpoint main\"\n-    continue\n-}\n+# Test printing of namespace imported into a scope containing the pc.\n \n gdb_breakpoint [gdb_get_line_number \"marker1 stop\"]\n gdb_continue_to_breakpoint \"marker1 stop\"\n \n gdb_test \"print _a\" \"= 1\" \"print _a in a nested scope\"\n \n-\n-gdb_exit\n-gdb_start\n-gdb_reinitialize_dir $srcdir/$subdir\n-gdb_load ${binfile}\n-\n ############################################\n-# test printing of namespace imported into\n-# file scope.\n+# Test printing of namespace aliases.\n \n-\n-if ![runto marker5] then {\n-    perror \"couldn't run to breakpoint marker5\"\n-    continue\n-}\n-\n-gdb_test \"print cc\" \"= 3\"\n-\n-gdb_exit\n-gdb_start\n-gdb_reinitialize_dir $srcdir/$subdir\n-gdb_load ${binfile}\n-\n-\n-############################################\n-# Test printing of namespace aliases\n-\n-if ![runto marker2] then {\n-    perror \"couldn't run to breakpoint marker2\"\n-    continue\n-}\n+gdb_breakpoint marker2\n+gdb_continue_to_breakpoint \"marker2\"\n \n gdb_test \"print B::_a\" \"= 1\"\n \n@@ -107,19 +55,12 @@ gdb_test \"print _a\" \"No symbol \\\"_a\\\" in current context.\" \\\n gdb_test \"print x\" \"No symbol \\\"x\\\" in current context.\" \\\n     \"print x in namespace alias scope\"\n \n-gdb_exit\n-gdb_start\n-gdb_reinitialize_dir $srcdir/$subdir\n-gdb_load ${binfile}\n-\n-\n ############################################\n # Test that names are not printed when they\n-# are not imported\n+# are not imported.\n \n-if {![runto marker3]} {\n-    perror \"couldn't run to breakpoint marker3\"\n-}\n+gdb_breakpoint marker3\n+gdb_continue_to_breakpoint \"marker3\"\n \n # gcc-4-3 puts import statements for aliases in\n # the global scope instead of the corresponding\n@@ -128,70 +69,62 @@ if {![runto marker3]} {\n if [test_compiler_info gcc-4-3-*] then { setup_xfail *-*-* }\n \n gdb_test \"print _a\" \"No symbol \\\"_a\\\" in current context.\" \\\n-    \"Print _a without import\"\n+    \"Print _a without import at marker3\"\n \n ############################################\n-# Test printing of individually imported elements\n+# Test printing of individually imported elements.\n \n-if ![runto marker4] then {\n-    perror \"couldn't run to breakpoint marker4\"\n-    continue\n-}\n+gdb_breakpoint marker4\n+gdb_continue_to_breakpoint \"marker4\"\n \n gdb_test \"print dx\" \"= 4\"\n \n ############################################\n-# Test printing of namespace aliases\n+# Test printing of namespace imported into file scope.\n \n-if ![runto marker5] then {\n-    perror \"couldn't run to marker5\"\n-    continue\n-}\n+gdb_breakpoint marker5\n+gdb_continue_to_breakpoint \"marker5\"\n+\n+gdb_test \"print cc\" \"= 3\"\n+\n+# Also test printing of namespace aliases\n \n gdb_test \"print efx\" \"= 5\"\n \n ############################################\n-# Test printing of variables imported from\n-# nested namespaces\n+# Test printing of variables imported from nested namespaces.\n \n-if ![runto I::marker7] then {\n-    perror \"couldn't run to breakpoint I::marker7\"\n-    continue\n-}\n+gdb_breakpoint I::marker7\n+gdb_continue_to_breakpoint \"I::marker7\"\n \n gdb_test \"print ghx\" \"= 6\"\n \n ############################################\n-# Test that variables are not printed in a namespace\n-# that is sibling to the namespace containing an import\n+# Test that variables are not printed in a namespace that is sibling\n+# to the namespace containing an import.\n \n-if ![runto L::marker8] then {\n-    perror \"couldn't run to breakpoint L::marker8\"\n-    continue\n-}\n+gdb_breakpoint L::marker8\n+gdb_continue_to_breakpoint \"L::marker8\"\n \n-gdb_test \"print jx\" \"= 44\"\n+gdb_test \"print jx\" \"= 44\" \\\n+    \"print jx when the symbol is available\"\n \n gdb_breakpoint \"K::marker9\"\n gdb_continue_to_breakpoint \"K::marker9\"\n \n-gdb_test \"print jx\" \"No symbol \\\"jx\\\" in current context.\"\n+gdb_test \"print jx\" \"No symbol \\\"jx\\\" in current context.\" \\\n+    \"print jx when the symbol is not available\"\n \n ############################################\n-# Test that variables are only printed after the line\n-# containing the import\n-\n-if ![runto_main] then {\n-    perror \"couldn't run to breakpoint main\"\n-    continue\n-}\n+# Test that variables are only printed after the line containing the\n+# import.\n \n gdb_breakpoint [gdb_get_line_number \"marker10 stop\"]\n gdb_continue_to_breakpoint \"marker10 stop\"\n \n if { [test_compiler_info {gcc-[0-3]-*}] ||\n      [test_compiler_info {gcc-4-[0-3]-*}]} {\n-    setup_xfail *-*-* \n+    setup_xfail *-*-*\n }\n \n # Assert that M::x is printed and not N::x"
    }
  ]
}