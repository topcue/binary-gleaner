{
  "sha": "9f9aa85206ab31d2c583e7fef568700d31eb577e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWY5YWE4NTIwNmFiMzFkMmM1ODNlN2ZlZjU2ODcwMGQzMWViNTc3ZQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-03-21T16:29:14Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-03-26T18:25:10Z"
    },
    "message": "gdb: Make python display_hint None handling defined behaviour\n\nThe documentation say that the display_hint method must return a\nstring to serve as a display hint, and then goes on to list some\nacceptable strings.\n\nHowever, if we don't supply the display_hint method then we get a\ndefault display style behaviour and there's currently no way (in the\npython api) to force this default behaviour.\n\nThe guile api allows #f to be used in order to force the default\ndisplay style behaviour, and this is documented.\n\nCurrently, using None in the python api also forces the default\ndisplay behaviour.\n\nThis commit extends the documentation to make returning None from the\ndisplay_hint method an official mechanism by which the user can get\nthe default display style.\n\nI've extended one of the existing tests to cover this case.\n\ngdb/doc/ChangeLog:\n\n\t* python.texi (Pretty Printing API): Document use of None for the\n\tdisplay_hint.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.python/py-prettyprint.c (struct container) <is_map_p>: New\n\tfield.\n\t(make_container): Initialise new field.\n\t* gdb.python/py-prettyprint.exp: Add new tests.\n\t* gdb.python/py-prettyprint.py (class ContainerPrinter)\n\t<display_hint>: New method.",
    "tree": {
      "sha": "2a45f4e501f37c94af2520e9227287f80f3de7c4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2a45f4e501f37c94af2520e9227287f80f3de7c4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9f9aa85206ab31d2c583e7fef568700d31eb577e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f9aa85206ab31d2c583e7fef568700d31eb577e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9f9aa85206ab31d2c583e7fef568700d31eb577e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f9aa85206ab31d2c583e7fef568700d31eb577e/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3714a195e08a5cc7713b27def7a3c3b534da53e8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3714a195e08a5cc7713b27def7a3c3b534da53e8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3714a195e08a5cc7713b27def7a3c3b534da53e8"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 40,
    "deletions": 2
  },
  "files": [
    {
      "sha": "87e20d3adb4dccd4a6a061836014f3e4aec2ff84",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f9aa85206ab31d2c583e7fef568700d31eb577e/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f9aa85206ab31d2c583e7fef568700d31eb577e/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=9f9aa85206ab31d2c583e7fef568700d31eb577e",
      "patch": "@@ -1,3 +1,8 @@\n+2019-03-26  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* python.texi (Pretty Printing API): Document use of None for the\n+\tdisplay_hint.\n+\n 2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n \t    Jiong Wang  <jiong.wang@arm.com>\n "
    },
    {
      "sha": "56c925d4dd294333bba7c176657e54dd0dbdece8",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f9aa85206ab31d2c583e7fef568700d31eb577e/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f9aa85206ab31d2c583e7fef568700d31eb577e/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=9f9aa85206ab31d2c583e7fef568700d31eb577e",
      "patch": "@@ -1294,7 +1294,7 @@ consumer as a @samp{displayhint} attribute of the variable being\n printed.\n \n This method is optional.  If it does exist, this method must return a\n-string.\n+string or the special value @code{None}.\n \n Some display hints are predefined by @value{GDBN}:\n \n@@ -1317,6 +1317,9 @@ string-printing function to format the string.  For the CLI this means\n adding quotation marks, possibly escaping some characters, respecting\n @code{set print elements}, and the like.\n @end table\n+\n+The special value @code{None} causes @value{GDBN} to apply the default\n+display rules.\n @end defun\n \n @defun pretty_printer.to_string (self)"
    },
    {
      "sha": "e283f68201eb37ad88135a84251d7e8fc129399d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f9aa85206ab31d2c583e7fef568700d31eb577e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f9aa85206ab31d2c583e7fef568700d31eb577e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=9f9aa85206ab31d2c583e7fef568700d31eb577e",
      "patch": "@@ -1,3 +1,12 @@\n+2019-03-26  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.python/py-prettyprint.c (struct container) <is_map_p>: New\n+\tfield.\n+\t(make_container): Initialise new field.\n+\t* gdb.python/py-prettyprint.exp: Add new tests.\n+\t* gdb.python/py-prettyprint.py (class ContainerPrinter)\n+\t<display_hint>: New method.\n+\n 2019-03-26  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.python/py-prettyprint.exp: Use gdb_breakpoint and"
    },
    {
      "sha": "1b9aeb4b6798e12185cbb1152ba6328256765a2d",
      "filename": "gdb/testsuite/gdb.python/py-prettyprint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f9aa85206ab31d2c583e7fef568700d31eb577e/gdb/testsuite/gdb.python/py-prettyprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f9aa85206ab31d2c583e7fef568700d31eb577e/gdb/testsuite/gdb.python/py-prettyprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-prettyprint.c?ref=9f9aa85206ab31d2c583e7fef568700d31eb577e",
      "patch": "@@ -175,6 +175,7 @@ struct container\n   string name;\n   int len;\n   int *elements;\n+  int is_map_p;\n };\n \n typedef struct container zzz_type;\n@@ -195,6 +196,7 @@ make_container (const char *s)\n   result.name = make_string (s);\n   result.len = 0;\n   result.elements = 0;\n+  result.is_map_p = 0;\n \n   return result;\n }"
    },
    {
      "sha": "82e7e6503168a683b1758f905e00ce72852613b3",
      "filename": "gdb/testsuite/gdb.python/py-prettyprint.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 1,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f9aa85206ab31d2c583e7fef568700d31eb577e/gdb/testsuite/gdb.python/py-prettyprint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f9aa85206ab31d2c583e7fef568700d31eb577e/gdb/testsuite/gdb.python/py-prettyprint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-prettyprint.exp?ref=9f9aa85206ab31d2c583e7fef568700d31eb577e",
      "patch": "@@ -109,14 +109,27 @@ proc run_lang_tests {exefile lang} {\n     gdb_test_no_output \"set python print-stack full\"\n     gdb_test \"print hint_error\" \"Exception: hint failed\\r\\nhint_error_val\"\n \n-    gdb_test \"print c\" \" = container \\\"container\\\" with 2 elements = {$nl *.0. = 23,$nl *.1. = 72$nl}\"\n+    gdb_test \"print c\" \" = container \\\"container\\\" with 2 elements = {$nl *.0. = 23,$nl *.1. = 72$nl}\" \\\n+\t\"print c, pretty printing on, default display hint\"\n+\n+    gdb_test_no_output \"set variable c.is_map_p=1\"\n+    gdb_test \"print c\" \" = container \\\"container\\\" with 2 elements = \\{$nl  \\\\\\[23\\\\\\] = 72$nl\\}\" \\\n+\t\"print c, pretty printing on, display hint is now map\"\n \n     gdb_test \"print nstype\" \" = {$nl *.0. = 7,$nl *.1. = 42$nl}\"\n \n     gdb_test_no_output \"set print pretty off\"\n     gdb_test \"print nstype\" \" = {.0. = 7, .1. = 42}\" \\\n \t\"print nstype on one line\"\n \n+    # Now we have pretty printing turned off, try printing 'c' again.\n+    gdb_test \"print c\" \" = container \\\"container\\\" with 2 elements = \\{\\\\\\[23\\\\\\] = 72\\}\" \\\n+\t\"print c, pretty printing off, display hint is now map\"\n+\n+    gdb_test_no_output \"set variable c.is_map_p=0\"\n+    gdb_test \"print c\" \" = container \\\"container\\\" with 2 elements = \\{\\\\\\[0\\\\\\] = 23, \\\\\\[1\\\\\\] = 72\\}\" \\\n+\t\"print c, pretty printing off, default display hint\"\n+\n     # Check that GDB doesn't lose typedefs when looking for a printer.\n     gdb_test \"print an_int\" \" = -1\"\n     gdb_test \"print (int) an_int\" \" = -1\""
    },
    {
      "sha": "43727f7231d0c46255e91eb226c6115fe3d3e5cc",
      "filename": "gdb/testsuite/gdb.python/py-prettyprint.py",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f9aa85206ab31d2c583e7fef568700d31eb577e/gdb/testsuite/gdb.python/py-prettyprint.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f9aa85206ab31d2c583e7fef568700d31eb577e/gdb/testsuite/gdb.python/py-prettyprint.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-prettyprint.py?ref=9f9aa85206ab31d2c583e7fef568700d31eb577e",
      "patch": "@@ -56,6 +56,12 @@ def to_string(self):\n     def children(self):\n         return _iterator(self.val['elements'], self.val['len'])\n \n+    def display_hint (self):\n+        if (self.val['is_map_p']):\n+            return 'map'\n+        else:\n+            return None\n+\n # Treats a container as array.\n class ArrayPrinter (object):\n     def __init__(self, val):"
    }
  ]
}