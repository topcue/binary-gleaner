{
  "sha": "643b126809e945e02420d78fd1ef0e3cef195cc3",
  "node_id": "C_kwDOANOeidoAKDY0M2IxMjY4MDllOTQ1ZTAyNDIwZDc4ZmQxZWYwZTNjZWYxOTVjYzM",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2021-11-26T15:13:43Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-01-12T11:33:31Z"
    },
    "message": "gdb: add 'maint set/show gnu-source-highlight enabled' command\n\nIn a later commit I want to address an issue with the Python pygments\nbased code styling solution.  As this approach is only used when the\nGNU Source Highlight library is not available, testing bugs in this\narea can be annoying, as it requires GDB to be rebuilt with use of GNU\nSource Highlight disabled.\n\nThis commit adds a pair of new maintenance commands:\n\n  maintenance set gnu-source-highlight enabled on|off\n  maintenance show gnu-source-highlight enabled\n\nthese commands can be used to disable use of the GNU Source Highlight\nlibrary, allowing me, in a later commit, to easily test bugs that\nwould otherwise be masked by GNU Source Highlight being used.\n\nI made this a maintenance command, rather than a general purpose\ncommand, as it didn't seem like this was something a general user\nwould need to adjust.  We can always convert the maintenance command\nto a general command later if needed.\n\nThere's no test for this here, but this feature will be used in a\nlater commit.",
    "tree": {
      "sha": "00a6d9fb85f8d652ce0f6c04bcce2601a4dbe3ca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/00a6d9fb85f8d652ce0f6c04bcce2601a4dbe3ca"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/643b126809e945e02420d78fd1ef0e3cef195cc3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/643b126809e945e02420d78fd1ef0e3cef195cc3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/643b126809e945e02420d78fd1ef0e3cef195cc3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/643b126809e945e02420d78fd1ef0e3cef195cc3/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "0e42221ac2cea234fe7a35797475f55f3d304b92",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e42221ac2cea234fe7a35797475f55f3d304b92",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0e42221ac2cea234fe7a35797475f55f3d304b92"
    }
  ],
  "stats": {
    "total": 99,
    "additions": 98,
    "deletions": 1
  },
  "files": [
    {
      "sha": "c1f30563a936f3c40e408f5b1162f3053b6e393f",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/643b126809e945e02420d78fd1ef0e3cef195cc3/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/643b126809e945e02420d78fd1ef0e3cef195cc3/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=643b126809e945e02420d78fd1ef0e3cef195cc3",
      "patch": "@@ -73,6 +73,14 @@ show debug linux-nat\n maint flush source-cache\n   Flush the contents of the source code cache.\n \n+maint set gnu-source-highlight enabled on|off\n+maint show gnu-source-highlight enabled\n+  Whether GDB should use the GNU Source Highlight library for adding\n+  styling to source code.  When off, the library will not be used, even\n+  when available.  When GNU Source Highlight isn't used, or can't add\n+  styling to a particular source file, then the Python Pygments\n+  library will be used instead.\n+\n * Changed commands\n \n maint packet"
    },
    {
      "sha": "fe81687a66c572fb9ab2946e882f5a2b40a36c22",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/643b126809e945e02420d78fd1ef0e3cef195cc3/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/643b126809e945e02420d78fd1ef0e3cef195cc3/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=643b126809e945e02420d78fd1ef0e3cef195cc3",
      "patch": "@@ -39797,6 +39797,25 @@ unload the library and continue searching for a suitable candidate as\n described in @ref{set libthread-db-search-path}.  For more information\n about the tests, see @ref{maint check libthread-db}.\n \n+@kindex maint set gnu-source-highlight enabled\n+@kindex maint show gnu-source-highlight enabled\n+@item maint set gnu-source-highlight enabled @r{[}on|off@r{]}\n+@itemx maint show gnu-source-highlight enabled\n+Control whether @value{GDBN} should use the GNU Source Highlight\n+library for applying styling to source code (@pxref{Output Styling}).\n+This will be @samp{on} by default if the GNU Source Highlight library\n+is available.  If the GNU Source Highlight library is not available,\n+then this will be @samp{off} by default, and attempting to change this\n+value to @samp{on} will give an error.\n+\n+If the GNU Source Highlight library is not being used, then\n+@value{GDBN} will use the Python Pygments package for source code\n+styling, if it is available.\n+\n+This option is useful for debugging @value{GDBN}'s use of the Pygments\n+library when @value{GDBN} is linked against the GNU Source Highlight\n+library.\n+\n @kindex maint space\n @cindex memory used by commands\n @item maint space @var{value}"
    },
    {
      "sha": "373607fc9cb4e63b8926c744a079c419f6a5dbc8",
      "filename": "gdb/source-cache.c",
      "status": "modified",
      "additions": 71,
      "deletions": 1,
      "changes": 72,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/643b126809e945e02420d78fd1ef0e3cef195cc3/gdb/source-cache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/643b126809e945e02420d78fd1ef0e3cef195cc3/gdb/source-cache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source-cache.c?ref=643b126809e945e02420d78fd1ef0e3cef195cc3",
      "patch": "@@ -47,6 +47,46 @@\n \n source_cache g_source_cache;\n \n+/* When this is true we will use the GNU Source Highlight to add styling to\n+   source code (assuming the library is available).  This is initialized to\n+   true (if appropriate) in _initialize_source_cache below.  */\n+\n+static bool use_gnu_source_highlight;\n+\n+/* The \"maint show gnu-source-highlight enabled\" command. */\n+\n+static void\n+show_use_gnu_source_highlight_enabled  (struct ui_file *file, int from_tty,\n+\t\t\t\t\tstruct cmd_list_element *c,\n+\t\t\t\t\tconst char *value)\n+{\n+  fprintf_filtered (file,\n+\t\t    _(\"Use of GNU Source Highlight library is \\\"%s\\\".\\n\"),\n+\t\t    value);\n+}\n+\n+/* The \"maint set gnu-source-highlight enabled\" command.  */\n+\n+static void\n+set_use_gnu_source_highlight_enabled (const char *ignore_args,\n+\t\t\t\t      int from_tty,\n+\t\t\t\t      struct cmd_list_element *c)\n+{\n+#ifndef HAVE_SOURCE_HIGHLIGHT\n+  /* If the library is not available and the user tried to enable use of\n+     the library, then disable use of the library, and give an error.  */\n+  if (use_gnu_source_highlight)\n+    {\n+      use_gnu_source_highlight = false;\n+      error (_(\"the GNU Source Highlight library is not available\"));\n+    }\n+#else\n+  /* We (might) have just changed how we style source code, discard any\n+     previously cached contents.  */\n+  forget_cached_source_info ();\n+#endif\n+}\n+\n /* See source-cache.h.  */\n \n std::string\n@@ -192,7 +232,7 @@ source_cache::ensure (struct symtab *s)\n #ifdef HAVE_SOURCE_HIGHLIGHT\n       bool already_styled = false;\n       const char *lang_name = get_language_name (SYMTAB_LANGUAGE (s));\n-      if (lang_name != nullptr)\n+      if (lang_name != nullptr && use_gnu_source_highlight)\n \t{\n \t  /* The global source highlight object, or null if one was\n \t     never constructed.  This is stored here rather than in\n@@ -363,6 +403,36 @@ _initialize_source_cache ()\n \t   _(\"Force gdb to flush its source code cache.\"),\n \t   &maintenanceflushlist);\n \n+  /* All the 'maint set|show gnu-source-highlight' sub-commands.  */\n+  static struct cmd_list_element *maint_set_gnu_source_highlight_cmdlist;\n+  static struct cmd_list_element *maint_show_gnu_source_highlight_cmdlist;\n+\n+  /* Adds 'maint set|show gnu-source-highlight'.  */\n+  add_setshow_prefix_cmd (\"gnu-source-highlight\", class_maintenance,\n+\t\t\t  _(\"Set gnu-source-highlight specific variables.\"),\n+\t\t\t  _(\"Show gnu-source-highlight specific variables.\"),\n+\t\t\t  &maint_set_gnu_source_highlight_cmdlist,\n+\t\t\t  &maint_show_gnu_source_highlight_cmdlist,\n+\t\t\t  &maintenance_set_cmdlist,\n+\t\t\t  &maintenance_show_cmdlist);\n+\n+  /* Adds 'maint set|show gnu-source-highlight enabled'.  */\n+  add_setshow_boolean_cmd (\"enabled\", class_maintenance,\n+\t\t\t   &use_gnu_source_highlight, _(\"\\\n+Set whether the GNU Source Highlight library should be used.\"), _(\"\\\n+Show whether the GNU Source Highlight library is being used.\"),_(\"\\\n+When enabled, GDB will use the GNU Source Highlight library to apply\\n\\\n+styling to source code lines that are shown.\"),\n+\t\t\t   set_use_gnu_source_highlight_enabled,\n+\t\t\t   show_use_gnu_source_highlight_enabled,\n+\t\t\t   &maint_set_gnu_source_highlight_cmdlist,\n+\t\t\t   &maint_show_gnu_source_highlight_cmdlist);\n+\n+  /* Enable use of GNU Source Highlight library, if we have it.  */\n+#ifdef HAVE_SOURCE_HIGHLIGHT\n+  use_gnu_source_highlight = true;\n+#endif\n+\n #if GDB_SELF_TEST\n   selftests::register_test (\"source-cache\", selftests::extract_lines_test);\n #endif"
    }
  ]
}