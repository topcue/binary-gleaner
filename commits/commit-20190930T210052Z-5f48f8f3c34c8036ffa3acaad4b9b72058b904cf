{
  "sha": "5f48f8f3c34c8036ffa3acaad4b9b72058b904cf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWY0OGY4ZjNjMzRjODAzNmZmYTNhY2FhZDRiOWI3MjA1OGI5MDRjZg==",
  "commit": {
    "author": {
      "name": "Ali Tamur",
      "email": "tamur@google.com",
      "date": "2019-09-30T20:34:44Z"
    },
    "committer": {
      "name": "Ali Tamur",
      "email": "tamur@google.com",
      "date": "2019-09-30T21:00:52Z"
    },
    "message": "Remove extra whitespaces at the end of lines.\n\ngdb/ChangeLog:\n\n\t* dwarf2read.c (process_full_comp_unit): Remove whitespace at the EOL.\n\t(process_full_type_unit): Likewise.\n\t(dump_die_shallow): Likewise.\n\t(cu_debug_loc_section): Likewise.",
    "tree": {
      "sha": "c19948d99f4d05440007524c6c0bd6ac0238d76f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c19948d99f4d05440007524c6c0bd6ac0238d76f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5f48f8f3c34c8036ffa3acaad4b9b72058b904cf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f48f8f3c34c8036ffa3acaad4b9b72058b904cf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5f48f8f3c34c8036ffa3acaad4b9b72058b904cf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f48f8f3c34c8036ffa3acaad4b9b72058b904cf/comments",
  "author": {
    "login": "alitamur",
    "id": 59383390,
    "node_id": "MDQ6VXNlcjU5MzgzMzkw",
    "avatar_url": "https://avatars.githubusercontent.com/u/59383390?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alitamur",
    "html_url": "https://github.com/alitamur",
    "followers_url": "https://api.github.com/users/alitamur/followers",
    "following_url": "https://api.github.com/users/alitamur/following{/other_user}",
    "gists_url": "https://api.github.com/users/alitamur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alitamur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alitamur/subscriptions",
    "organizations_url": "https://api.github.com/users/alitamur/orgs",
    "repos_url": "https://api.github.com/users/alitamur/repos",
    "events_url": "https://api.github.com/users/alitamur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alitamur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "alitamur",
    "id": 59383390,
    "node_id": "MDQ6VXNlcjU5MzgzMzkw",
    "avatar_url": "https://avatars.githubusercontent.com/u/59383390?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alitamur",
    "html_url": "https://github.com/alitamur",
    "followers_url": "https://api.github.com/users/alitamur/followers",
    "following_url": "https://api.github.com/users/alitamur/following{/other_user}",
    "gists_url": "https://api.github.com/users/alitamur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alitamur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alitamur/subscriptions",
    "organizations_url": "https://api.github.com/users/alitamur/orgs",
    "repos_url": "https://api.github.com/users/alitamur/repos",
    "events_url": "https://api.github.com/users/alitamur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alitamur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6fb08628e0f894f01e3e4834d5262629ca8f1920",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fb08628e0f894f01e3e4834d5262629ca8f1920",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6fb08628e0f894f01e3e4834d5262629ca8f1920"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 12,
    "deletions": 5
  },
  "files": [
    {
      "sha": "a096cae2dab50867e0b053c740c1dca3e6a56833",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5f48f8f3c34c8036ffa3acaad4b9b72058b904cf/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5f48f8f3c34c8036ffa3acaad4b9b72058b904cf/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5f48f8f3c34c8036ffa3acaad4b9b72058b904cf",
      "patch": "@@ -1,3 +1,10 @@\n+2019-09-30  Ali Tamur <tamur@google.com>\n+\n+\t* dwarf2read.c (process_full_comp_unit): Remove whitespace at the EOL.\n+\t(process_full_type_unit): Likewise.\n+\t(dump_die_shallow): Likewise.\n+\t(cu_debug_loc_section): Likewise.\n+\n 2019-09-28  Christian Biesinger  <cbiesinger@google.com>\n \n \t* minsyms.c (compare_minimal_symbols): Rename to..."
    },
    {
      "sha": "0f4f36682c776b56003d1ab88f88e89656e777d9",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5f48f8f3c34c8036ffa3acaad4b9b72058b904cf/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5f48f8f3c34c8036ffa3acaad4b9b72058b904cf/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=5f48f8f3c34c8036ffa3acaad4b9b72058b904cf",
      "patch": "@@ -10377,7 +10377,7 @@ process_full_comp_unit (struct dwarf2_per_cu_data *per_cu,\n   if (cu->language == language_go)\n     fixup_go_packaging (cu);\n \n-  /* Now that we have processed all the DIEs in the CU, all the types \n+  /* Now that we have processed all the DIEs in the CU, all the types\n      should be complete, and it should now be safe to compute all of the\n      physnames.  */\n   compute_delayed_physnames (cu);\n@@ -10426,7 +10426,7 @@ process_full_comp_unit (struct dwarf2_per_cu_data *per_cu,\n \n \t Still one can confuse GDB by using non-standard GCC compilation\n \t options - this waits on GCC PR other/32998 (-frecord-gcc-switches).\n-\t */ \n+\t */\n       if (cu->has_loclist && gcc_4_minor >= 5)\n \tcust->locations_valid = 1;\n \n@@ -10481,7 +10481,7 @@ process_full_type_unit (struct dwarf2_per_cu_data *per_cu,\n   if (cu->language == language_go)\n     fixup_go_packaging (cu);\n \n-  /* Now that we have processed all the DIEs in the CU, all the types \n+  /* Now that we have processed all the DIEs in the CU, all the types\n      should be complete, and it should now be safe to compute all of the\n      physnames.  */\n   compute_delayed_physnames (cu);\n@@ -23062,7 +23062,7 @@ dump_die_shallow (struct ui_file *f, int indent, struct die_info *die)\n \tcase DW_FORM_indirect:\n \t  /* The reader will have reduced the indirect form to\n \t     the \"base form\" so this form should not occur.  */\n-\t  fprintf_unfiltered (f, \n+\t  fprintf_unfiltered (f,\n \t\t\t      \"unexpected attribute form: DW_FORM_indirect\");\n \t  break;\n \tcase DW_FORM_implicit_const:\n@@ -25163,7 +25163,7 @@ cu_debug_loc_section (struct dwarf2_cu *cu)\n   if (cu->dwo_unit)\n     {\n       struct dwo_sections *sections = &cu->dwo_unit->dwo_file->sections;\n-      \n+\n       return cu->header.version >= 5 ? &sections->loclists : &sections->loc;\n     }\n   return (cu->header.version >= 5 ? &dwarf2_per_objfile->loclists"
    }
  ]
}