{
  "sha": "9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWRhNDFmZGFlMDNlOGNiMDIwZDlhOTJhN2M4NjdlYzk4YjdmZDMxMw==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:11:58Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:12Z"
    },
    "message": "gdbserver: turn target op 'read_loadmap' into a method\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's read_loadmap op into a method of\n\tprocess_target.\n\n\t* target.h (struct process_stratum_target): Remove the target op.\n\t(class process_target): Add the target op.  Also add\n\t'supports_read_loadmap'.\n\t* target.cc (process_target::read_loadmap): Define.\n\t(process_target::supports_read_loadmap): Define.\n\n\tUpdate the derived classes and callers below.\n\n\t* server.cc (handle_qxfer_fdpic): Update.\n\t(handle_query): Update.\n\t* linux-low.cc (linux_target_ops): Update.\n\t(linux_process_target::supports_read_loadmap): Define.\n\t(linux_read_loadmap): Turn into ...\n\t(linux_process_target::read_loadmap): ... this.\n\t* linux-low.h (class linux_process_target): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t* win32-low.cc (win32_target_ops): Update.",
    "tree": {
      "sha": "c58c607619a13ce9418ee282de54bc2718293b18",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c58c607619a13ce9418ee282de54bc2718293b18"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "95a45fc165be890faac873b615b6bf449bcb1207",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95a45fc165be890faac873b615b6bf449bcb1207",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/95a45fc165be890faac873b615b6bf449bcb1207"
    }
  ],
  "stats": {
    "total": 79,
    "additions": 63,
    "deletions": 16
  },
  "files": [
    {
      "sha": "0541c541a52e4aeeb4ff1367f2c84cf2fc33950d",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
      "patch": "@@ -1,3 +1,27 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's read_loadmap op into a method of\n+\tprocess_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target op.\n+\t(class process_target): Add the target op.  Also add\n+\t'supports_read_loadmap'.\n+\t* target.cc (process_target::read_loadmap): Define.\n+\t(process_target::supports_read_loadmap): Define.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* server.cc (handle_qxfer_fdpic): Update.\n+\t(handle_query): Update.\n+\t* linux-low.cc (linux_target_ops): Update.\n+\t(linux_process_target::supports_read_loadmap): Define.\n+\t(linux_read_loadmap): Turn into ...\n+\t(linux_process_target::read_loadmap): ... this.\n+\t* linux-low.h (class linux_process_target): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's core_of_thread op into a method of"
    },
    {
      "sha": "03de9e883055501b0ff3716f74a5b9ca057fa245",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
      "patch": "@@ -6483,9 +6483,15 @@ struct target_loadmap\n #  define LINUX_LOADMAP_INTERP\tPTRACE_GETFDPIC_INTERP\n # endif\n \n-static int\n-linux_read_loadmap (const char *annex, CORE_ADDR offset,\n-\t\t    unsigned char *myaddr, unsigned int len)\n+bool\n+linux_process_target::supports_read_loadmap ()\n+{\n+  return true;\n+}\n+\n+int\n+linux_process_target::read_loadmap (const char *annex, CORE_ADDR offset,\n+\t\t\t\t    unsigned char *myaddr, unsigned int len)\n {\n   int pid = lwpid_of (current_thread);\n   int addr = -1;\n@@ -6515,8 +6521,6 @@ linux_read_loadmap (const char *annex, CORE_ADDR offset,\n   memcpy (myaddr, (char *) data + offset, copy_length);\n   return copy_length;\n }\n-#else\n-# define linux_read_loadmap NULL\n #endif /* defined PT_GETDSBT || defined PTRACE_GETFDPIC */\n \n static void\n@@ -7445,7 +7449,6 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-  linux_read_loadmap,\n   linux_process_qsupported,\n   linux_supports_tracepoints,\n   linux_read_pc,"
    },
    {
      "sha": "9f4fdab33d5586e75da130fbf5d3440c8e961089",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
      "patch": "@@ -377,6 +377,13 @@ class linux_process_target : public process_target\n   int handle_monitor_command (char *mon) override;\n \n   int core_of_thread (ptid_t ptid) override;\n+\n+#if defined PT_GETDSBT || defined PTRACE_GETFDPIC\n+  bool supports_read_loadmap () override;\n+\n+  int read_loadmap (const char *annex, CORE_ADDR offset,\n+\t\t    unsigned char *myaddr, unsigned int len) override;\n+#endif\n };\n \n #define get_thread_lwp(thr) ((struct lwp_info *) (thread_target_data (thr)))"
    },
    {
      "sha": "b384d20a37b9027e5be7980f7bc5f6cccc3a57f9",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
      "patch": "@@ -735,7 +735,6 @@ static lynx_process_target the_lynx_target;\n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  NULL,  /* read_loadmap */\n   NULL,  /* process_qsupported */\n   NULL,  /* supports_tracepoints */\n   NULL,  /* read_pc */"
    },
    {
      "sha": "70d218cb924348111687bbed80be730f73cce791",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
      "patch": "@@ -947,7 +947,6 @@ nto_sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  NULL, /* read_loadmap */\n   NULL, /* process_qsupported */\n   NULL, /* supports_tracepoints */\n   NULL, /* read_pc */"
    },
    {
      "sha": "df307f5594c2ea5b521a987ec19be4cefefcbb56",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
      "patch": "@@ -1792,13 +1792,13 @@ static int\n handle_qxfer_fdpic (const char *annex, gdb_byte *readbuf,\n \t\t    const gdb_byte *writebuf, ULONGEST offset, LONGEST len)\n {\n-  if (the_target->read_loadmap == NULL)\n+  if (!the_target->pt->supports_read_loadmap ())\n     return -2;\n \n   if (current_thread == NULL)\n     return -1;\n \n-  return (*the_target->read_loadmap) (annex, offset, readbuf, len);\n+  return the_target->pt->read_loadmap (annex, offset, readbuf, len);\n }\n \n /* Handle qXfer:btrace:read.  */\n@@ -2380,7 +2380,7 @@ handle_query (char *own_buf, int packet_len, int *new_packet_len_p)\n       if (the_target->pt->supports_qxfer_siginfo ())\n \tstrcat (own_buf, \";qXfer:siginfo:read+;qXfer:siginfo:write+\");\n \n-      if (the_target->read_loadmap != NULL)\n+      if (the_target->pt->supports_read_loadmap ())\n \tstrcat (own_buf, \";qXfer:fdpic:read+\");\n \n       /* We always report qXfer:features:read, as targets may"
    },
    {
      "sha": "26b9d8b6afe6ae2a89c96be74c0885dcc3331ed7",
      "filename": "gdbserver/target.cc",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/target.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/target.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.cc?ref=9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
      "patch": "@@ -589,3 +589,16 @@ process_target::core_of_thread (ptid_t ptid)\n {\n   return -1;\n }\n+\n+bool\n+process_target::supports_read_loadmap ()\n+{\n+  return false;\n+}\n+\n+int\n+process_target::read_loadmap (const char *annex, CORE_ADDR offset,\n+\t\t\t      unsigned char *myaddr, unsigned int len)\n+{\n+  gdb_assert_not_reached (\"target op read_loadmap not supported\");\n+}"
    },
    {
      "sha": "f69bd9d0e01aec92f3d5025e01828b56ae0992a9",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
      "patch": "@@ -70,10 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Read loadmaps.  Read LEN bytes at OFFSET into a buffer at MYADDR.  */\n-  int (*read_loadmap) (const char *annex, CORE_ADDR offset,\n-\t\t       unsigned char *myaddr, unsigned int len);\n-\n   /* Target specific qSupported support.  FEATURES is an array of\n      features with COUNT elements.  */\n   void (*process_qsupported) (char **features, int count);\n@@ -486,6 +482,13 @@ class process_target\n \n   /* Returns the core given a thread, or -1 if not known.  */\n   virtual int core_of_thread (ptid_t ptid);\n+\n+  /* Returns true if the read_loadmap target op is supported.  */\n+  virtual bool supports_read_loadmap ();\n+\n+  /* Read loadmaps.  Read LEN bytes at OFFSET into a buffer at MYADDR.  */\n+  virtual int read_loadmap (const char *annex, CORE_ADDR offset,\n+\t\t\t    unsigned char *myaddr, unsigned int len);\n };\n \n extern process_stratum_target *the_target;"
    },
    {
      "sha": "9fc882523b0cff37040a713ad5e26e353952b3c7",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9da41fdae03e8cb020d9a92a7c867ec98b7fd313/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=9da41fdae03e8cb020d9a92a7c867ec98b7fd313",
      "patch": "@@ -1852,7 +1852,6 @@ win32_sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  NULL, /* read_loadmap */\n   NULL, /* process_qsupported */\n   NULL, /* supports_tracepoints */\n   NULL, /* read_pc */"
    }
  ]
}