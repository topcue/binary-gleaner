{
  "sha": "37d0d09177dc02e0002ab8b90d9b7bc402af9240",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzdkMGQwOTE3N2RjMDJlMDAwMmFiOGI5MGQ5YjdiYzQwMmFmOTI0MA==",
  "commit": {
    "author": {
      "name": "Jamey Hicks",
      "email": "jamey.hicks@gmail.com",
      "date": "2019-05-14T09:40:04Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-05-14T09:42:25Z"
    },
    "message": "Add new option to objcopy: --verilog-data-width.  Use this option to set the size of byte bundles generated in verilog format files.\n\n\tPR 19921\nbinutils* objcopy.c: Add new option --verilog-data-width.  Use it to set\n\tthe value of VerilogDataWidth.\n\t* doc/binutils.texi: Document the new option.\n\t* testsuite/binutils-all/objcopy.exp: Run tests of new option.\n\t* testsuite/binutils-all/verilog-1.hex: New file.\n\t* testsuite/binutils-all/verilog-2.hex: New file.\n\t* testsuite/binutils-all/verilog-4.hex: New file.\n\t* testsuite/binutils-all/verilog-8.hex: New file.\n\t* NEWS: Mention the new feature.\n\nbfd\t* verilog.c: (VerilogDataWidth): New variable.\n\t(verilog_write_record): Emit bytes in VerilogDataWidth bundles.",
    "tree": {
      "sha": "637533c2e254a181fb4fdceced99cf406e952936",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/637533c2e254a181fb4fdceced99cf406e952936"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/37d0d09177dc02e0002ab8b90d9b7bc402af9240",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37d0d09177dc02e0002ab8b90d9b7bc402af9240",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/37d0d09177dc02e0002ab8b90d9b7bc402af9240",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37d0d09177dc02e0002ab8b90d9b7bc402af9240/comments",
  "author": {
    "login": "jameyhicks",
    "id": 2439091,
    "node_id": "MDQ6VXNlcjI0MzkwOTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2439091?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jameyhicks",
    "html_url": "https://github.com/jameyhicks",
    "followers_url": "https://api.github.com/users/jameyhicks/followers",
    "following_url": "https://api.github.com/users/jameyhicks/following{/other_user}",
    "gists_url": "https://api.github.com/users/jameyhicks/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jameyhicks/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jameyhicks/subscriptions",
    "organizations_url": "https://api.github.com/users/jameyhicks/orgs",
    "repos_url": "https://api.github.com/users/jameyhicks/repos",
    "events_url": "https://api.github.com/users/jameyhicks/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jameyhicks/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3076e59490428c9719765f9b007d6d0d0238f006",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3076e59490428c9719765f9b007d6d0d0238f006",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3076e59490428c9719765f9b007d6d0d0238f006"
    }
  ],
  "stats": {
    "total": 191,
    "additions": 179,
    "deletions": 12
  },
  "files": [
    {
      "sha": "60069c28c9c3e93660ec2256d1aaa629ddfab36b",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37d0d09177dc02e0002ab8b90d9b7bc402af9240/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37d0d09177dc02e0002ab8b90d9b7bc402af9240/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=37d0d09177dc02e0002ab8b90d9b7bc402af9240",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-14  Jamey Hicks  <jamey.hicks@gmail.com>\n+\n+\tPR 19921\n+\t* verilog.c: (VerilogDataWidth): New variable.\n+\t(verilog_write_record): Emit bytes in VerilogDataWidth bundles.\n+\n 2019-05-08  Nick Clifton  <nickc@redhat.com>\n \n \tPR 24523"
    },
    {
      "sha": "252e240277ab65d6d11398508d2e80ee09fca4d3",
      "filename": "bfd/verilog.c",
      "status": "modified",
      "additions": 70,
      "deletions": 10,
      "changes": 80,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37d0d09177dc02e0002ab8b90d9b7bc402af9240/bfd/verilog.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37d0d09177dc02e0002ab8b90d9b7bc402af9240/bfd/verilog.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/verilog.c?ref=37d0d09177dc02e0002ab8b90d9b7bc402af9240",
      "patch": "@@ -58,12 +58,16 @@\n #include \"libiberty.h\"\n #include \"safe-ctype.h\"\n \n+/* Modified by obcopy.c\n+   Data width in bytes.  */\n+unsigned int VerilogDataWidth = 1;\n+\n /* Macros for converting between hex and binary.  */\n \n static const char digs[] = \"0123456789ABCDEF\";\n \n-#define NIBBLE(x)    hex_value(x)\n-#define HEX(buffer) ((NIBBLE ((buffer)[0])<<4) + NIBBLE ((buffer)[1]))\n+#define NIBBLE(x)    hex_value (x)\n+#define HEX(buffer) ((NIBBLE ((buffer)[0]) << 4) + NIBBLE ((buffer)[1]))\n #define TOHEX(d, x) \\\n \td[1] = digs[(x) & 0xf]; \\\n \td[0] = digs[((x) >> 4) & 0xf];\n@@ -183,26 +187,82 @@ verilog_write_address (bfd *abfd, bfd_vma address)\n }\n \n /* Write a record of type, of the supplied number of bytes. The\n-   supplied bytes and length don't have a checksum. That's worked out\n-   here.  */\n+   supplied bytes and length don't have a checksum.  That's worked\n+   out here.  */\n \n static bfd_boolean\n verilog_write_record (bfd *abfd,\n \t\t      const bfd_byte *data,\n \t\t      const bfd_byte *end)\n {\n-  char buffer[50];\n+  char buffer[52];\n   const bfd_byte *src = data;\n   char *dst = buffer;\n   bfd_size_type wrlen;\n \n-  /* Write the data.  */\n-  for (src = data; src < end; src++)\n+  /* Paranoia - check that we will not overflow \"buffer\".  */\n+  if (((end - data) * 2) /* Number of hex characters we want to emit.  */\n+      + ((end - data) / VerilogDataWidth) /* Number of spaces we want to emit.  */\n+      + 2 /* The carriage return & line feed characters.  */\n+      > (long) sizeof (buffer))\n     {\n-      TOHEX (dst, *src);\n-      dst += 2;\n-      *dst++ = ' ';\n+      /* FIXME: Should we generate an error message ?  */\n+      return FALSE;\n+    }\n+\n+  /* Write the data.\n+     FIXME: Under some circumstances we can emit a space at the end of\n+     the line.  This is not really necessary, but catching these cases\n+     would make the code more complicated.  */\n+  if (VerilogDataWidth == 1)\n+    {\n+      for (src = data; src < end;)\n+\t{\n+\t  TOHEX (dst, *src);\n+\t  dst += 2;\n+\t  src ++;\n+\t  if (src < end)\n+\t    *dst++ = ' ';\n+\t}\n     }\n+  else if (bfd_little_endian (abfd))\n+    {\n+      /* If the input byte stream contains:\n+\t   05 04 03 02 01 00\n+\t and VerilogDataWidth is 4 then we want to emit:\n+           02030405 0001  */\n+      int i;\n+\n+      for (src = data; src < (end - VerilogDataWidth); src += VerilogDataWidth)\n+\t{\n+\t  for (i = VerilogDataWidth - 1; i >= 0; i--)\n+\t    {\n+\t      TOHEX (dst, src[i]);\n+\t      dst += 2;\n+\t    }\n+\t  *dst++ = ' ';\n+\t}\n+\n+      /* Emit any remaining bytes.  Be careful not to read beyond \"end\".  */\n+      while (end > src)\n+\t{\n+\t  -- end;\n+\t  TOHEX (dst, *end);\n+\t  dst += 2;\n+\t}\n+    }\n+  else\n+    {\n+      for (src = data; src < end;)\n+\t{\n+\t  TOHEX (dst, *src);\n+\t  dst += 2;\n+\t  ++ src;\n+\t  if ((src - data) % VerilogDataWidth == 0)\n+\t    *dst++ = ' ';\n+\t}\n+    }\n+\n   *dst++ = '\\r';\n   *dst++ = '\\n';\n   wrlen = dst - buffer;"
    },
    {
      "sha": "2783e58913c67ab75031ada3ac3b01fa100bee82",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=37d0d09177dc02e0002ab8b90d9b7bc402af9240",
      "patch": "@@ -1,3 +1,16 @@\n+2019-05-14  Jamey Hicks  <jamey.hicks@gmail.com>\n+\n+\tPR 19921\n+\t* objcopy.c: Add new option --verilog-data-width.  Use it to set\n+\tthe value of VerilogDataWidth.\n+\t* doc/binutils.texi: Document the new option.\n+\t* testsuite/binutils-all/objcopy.exp: Run tests of new option.\n+\t* testsuite/binutils-all/verilog-1.hex: New file.\n+\t* testsuite/binutils-all/verilog-2.hex: New file.\n+\t* testsuite/binutils-all/verilog-4.hex: New file.\n+\t* testsuite/binutils-all/verilog-8.hex: New file.\n+\t* NEWS: Mention the new feature.\n+\n 2019-05-10  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/binutils-all/objdump.exp (test_objdump_disas_limited),"
    },
    {
      "sha": "d7e40de4a8730f67b9b0ecfaa6a3211ab79e1899",
      "filename": "binutils/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/NEWS?ref=37d0d09177dc02e0002ab8b90d9b7bc402af9240",
      "patch": "@@ -1,5 +1,8 @@\n -*- text -*-\n \n+* Add --verilog-data-width option to objcopy for verilog targets to control\n+  width of data elements in verilog hex format.\n+\n * The separate debug info file options of readelf (--debug-dump=links\n   and --debug-dump=follow) and objdump (--dwarf=links and\n   --dwarf=follow-links) will now display and/or follow multiple links if"
    },
    {
      "sha": "4a7f0f97d1f74b212cda429fda7412ae4d26a3eb",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=37d0d09177dc02e0002ab8b90d9b7bc402af9240",
      "patch": "@@ -1215,6 +1215,7 @@ objcopy [@option{-F} @var{bfdname}|@option{--target=}@var{bfdname}]\n         [@option{--elf-stt-common=@var{val}}]\n         [@option{--merge-notes}]\n         [@option{--no-merge-notes}]\n+        [@option{--verilog-data-width=@var{val}}]\n         [@option{-v}|@option{--verbose}]\n         [@option{-V}|@option{--version}]\n         [@option{--help}] [@option{--info}]\n@@ -1858,7 +1859,7 @@ like this:\n @smallexample\n  objcopy --add-gnu-debuglink=foo.debug\n @end smallexample\n- \n+\n At debug time the debugger will attempt to look for the separate debug\n info file in a set of known locations.  The exact set of these\n locations varies depending upon the distribution being used, but it\n@@ -2048,6 +2049,11 @@ SHT_NOTE type sections by removing duplicate notes.\n @itemx --version\n Show the version number of @command{objcopy}.\n \n+@item --verilog-data-width=@var{bytes}\n+For Verilog output, this options controls the number of bytes\n+converted for each output data element.  The input target controls the\n+endianness of the conversion.\n+\n @item -v\n @itemx --verbose\n Verbose output: list all object files modified.  In the case of\n@@ -3060,7 +3066,7 @@ sequences that it can find.\n \n For backwards compatibility any file that occurs after a command-line\n option of just @option{-} will also be scanned in full, regardless of\n-the presence of any @option{-d} option. \n+the presence of any @option{-d} option.\n \n @command{strings} is mainly useful for determining the contents of\n non-text files."
    },
    {
      "sha": "28b9d3bf9291518bffe93e98aa9b9b50a8fff3e2",
      "filename": "binutils/objcopy.c",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/objcopy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/objcopy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objcopy.c?ref=37d0d09177dc02e0002ab8b90d9b7bc402af9240",
      "patch": "@@ -357,6 +357,7 @@ enum command_line_switch\n   OPTION_STRIP_UNNEEDED_SYMBOLS,\n   OPTION_SUBSYSTEM,\n   OPTION_UPDATE_SECTION,\n+  OPTION_VERILOG_DATA_WIDTH,\n   OPTION_WEAKEN,\n   OPTION_WEAKEN_SYMBOLS,\n   OPTION_WRITABLE_TEXT\n@@ -493,6 +494,7 @@ static struct option copy_options[] =\n   {\"target\", required_argument, 0, 'F'},\n   {\"update-section\", required_argument, 0, OPTION_UPDATE_SECTION},\n   {\"verbose\", no_argument, 0, 'v'},\n+  {\"verilog-data-width\", required_argument, 0, OPTION_VERILOG_DATA_WIDTH},\n   {\"version\", no_argument, 0, 'V'},\n   {\"weaken\", no_argument, 0, OPTION_WEAKEN},\n   {\"weaken-symbol\", required_argument, 0, 'W'},\n@@ -519,6 +521,11 @@ extern unsigned int _bfd_srec_len;\n    on by the --srec-forceS3 command line switch.  */\n extern bfd_boolean _bfd_srec_forceS3;\n \n+/* Width of data in bytes for verilog output.\n+   This variable is declared in bfd/verilog.c and can be modified by\n+   the --verilog-data-width parameter.  */\n+extern unsigned int VerilogDataWidth;\n+\n /* Forward declarations.  */\n static void setup_section (bfd *, asection *, void *);\n static void setup_bfd_headers (bfd *, bfd *);\n@@ -653,6 +660,7 @@ copy_usage (FILE *stream, int exit_status)\n      --decompress-debug-sections   Decompress DWARF debug sections using zlib\\n\\\n      --elf-stt-common=[yes|no]     Generate ELF common symbols with STT_COMMON\\n\\\n                                      type\\n\\\n+     --verilog-data-width <number> Specifies data width, in bytes, for verilog output\\n\\\n   -M  --merge-notes                Remove redundant entries in note sections\\n\\\n       --no-merge-notes             Do not attempt to remove redundant notes (default)\\n\\\n   -v --verbose                     List all object files modified\\n\\\n@@ -5478,6 +5486,12 @@ copy_main (int argc, char *argv[])\n \t  }\n \t  break;\n \n+\tcase OPTION_VERILOG_DATA_WIDTH:\n+\t  VerilogDataWidth = parse_vma (optarg, \"--verilog-data-width\");\n+\t  if (VerilogDataWidth < 1)\n+\t    fatal (_(\"verilog data width must be at least 1 byte\"));\n+\t  break;\n+\n \tcase 0:\n \t  /* We've been given a long option.  */\n \t  break;"
    },
    {
      "sha": "ba5ddc8651a18c0e99699fa2b71993326e6895ef",
      "filename": "binutils/testsuite/binutils-all/objcopy.exp",
      "status": "modified",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/testsuite/binutils-all/objcopy.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/testsuite/binutils-all/objcopy.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/objcopy.exp?ref=37d0d09177dc02e0002ab8b90d9b7bc402af9240",
      "patch": "@@ -102,6 +102,50 @@ proc objcopy_test {testname srcfile} {\n \n objcopy_test \"simple copy\" bintest.s\n \n+# Test verilog data width\n+proc objcopy_test_verilog {testname} {\n+    global OBJCOPY\n+    global OBJCOPYFLAGS\n+    global srcdir\n+    global subdir\n+    global copyfile\n+    set binfile tmpdir/verilogtest.o\n+    set verilog tmpdir/verilog\n+\n+    set got [binutils_assemble $srcdir/$subdir/verilogtest.s $binfile]\n+    if {![binutils_assemble $srcdir/$subdir/verilogtest.s $binfile]} then {\n+\tunresolved \"objcopy ($testname)\"\n+\treturn\n+    }\n+\n+    set got [binutils_run $OBJCOPY \"-O verilog $binfile $verilog\"]\n+    if ![string equal \"\" $got] then {\n+\tfail \"objcopy ($testname)\"\n+    }\n+\n+    set got [binutils_run $OBJCOPY \"-O verilog --verilog-data-width 0 $binfile $verilog-0.hex\"]\n+    if ![regexp \"verilog data width must be at least 1 byte\" $got] then {\n+\tfail \"objcopy ($testname 0) {$got}\"\n+    } else {\n+\tpass \"objcopy ($testname 0)\"\n+    }\n+\n+    foreach width {1 2 4 8} {\n+\tset got [binutils_run $OBJCOPY \"-O verilog --verilog-data-width $width $binfile $verilog-$width.hex\"]\n+\tif ![string equal \"\" $got] then {\n+\t    fail \"objcopy ($testname $width)\"\n+\t}\n+        send_log \"regexp_diff $verilog-$width.hex $srcdir/$subdir/verilog-$width.hex\\n\"\n+\tif {! [regexp_diff \"$verilog-$width.hex\" \"$srcdir/$subdir/verilog-$width.hex\"]} {\n+\t    pass \"objcopy ($testname $width)\"\n+\t} else {\n+\t    fail \"objcopy ($testname $width)\"\n+\t}\n+    }\n+}\n+\n+objcopy_test_verilog \"verilog data width\"\n+\n if { [file exists $tempfile] } {\n     # Test reversing bytes in a section.\n "
    },
    {
      "sha": "0a59a582612c95288706cc6178fa5ca94f2439a0",
      "filename": "binutils/testsuite/binutils-all/verilog-1.hex",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/testsuite/binutils-all/verilog-1.hex",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/testsuite/binutils-all/verilog-1.hex",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/verilog-1.hex?ref=37d0d09177dc02e0002ab8b90d9b7bc402af9240",
      "patch": "@@ -0,0 +1,5 @@\n+@00000000\n+0[134] 0[234] 0[123] 0[124] 00 00 00 00.*\n+@000000..\n+0[02] 00 0[02] 0[02].*\n+#pass"
    },
    {
      "sha": "f1e0d7aa2d7d9291e9f83b7a709919f2abb58c2d",
      "filename": "binutils/testsuite/binutils-all/verilog-2.hex",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/testsuite/binutils-all/verilog-2.hex",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/testsuite/binutils-all/verilog-2.hex",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/verilog-2.hex?ref=37d0d09177dc02e0002ab8b90d9b7bc402af9240",
      "patch": "@@ -0,0 +1,5 @@\n+@00000000\n+0[1234]0[1234] 0[1234]0[1234] 0000 0000.*\n+@000000..\n+0[02]0[02] 0[02]0[02].*\n+#pass"
    },
    {
      "sha": "119f00975b11ce05f0b954231cb9aff682bbbd7f",
      "filename": "binutils/testsuite/binutils-all/verilog-4.hex",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/testsuite/binutils-all/verilog-4.hex",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/testsuite/binutils-all/verilog-4.hex",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/verilog-4.hex?ref=37d0d09177dc02e0002ab8b90d9b7bc402af9240",
      "patch": "@@ -0,0 +1,6 @@\n+@00000000\n+0[134]0[234]0[123]0[124] 00000000.*\n+@000000..\n+0[20]000[02]0[02].*\n+#pass\n+"
    },
    {
      "sha": "567d33ed04516d640e62a8d1be7240891cdb4a3a",
      "filename": "binutils/testsuite/binutils-all/verilog-8.hex",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/testsuite/binutils-all/verilog-8.hex",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37d0d09177dc02e0002ab8b90d9b7bc402af9240/binutils/testsuite/binutils-all/verilog-8.hex",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/verilog-8.hex?ref=37d0d09177dc02e0002ab8b90d9b7bc402af9240",
      "patch": "@@ -0,0 +1,5 @@\n+@00000000\n+0[0134]0[0234]0[0123]0[0124]0[40]0[30]0[20]0[10].*\n+@000000..\n+0[20]000[02]0[20].*\n+#pass"
    }
  ]
}