{
  "sha": "6d0be74bfa2138a204a7954c7b6a6c8a1b63ba77",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmQwYmU3NGJmYTIxMzhhMjA0YTc5NTRjN2I2YTZjOGExYjYzYmE3Nw==",
  "commit": {
    "author": {
      "name": "Jozef Lawrynowicz",
      "email": "jozef.l@mittosystems.com",
      "date": "2020-01-16T13:44:21Z"
    },
    "committer": {
      "name": "Jozef Lawrynowicz",
      "email": "jozef.l@mittosystems.com",
      "date": "2020-01-16T13:45:29Z"
    },
    "message": "MSP430: Remove unused linker script template elf32msp430_3.sc\n\nld/ChangeLog:\n\n2020-01-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* scripttempl/elf32msp430_3.sc: Remove.",
    "tree": {
      "sha": "c15b6ba70c0f35665fa83d9b6e4464f09b5cf1eb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c15b6ba70c0f35665fa83d9b6e4464f09b5cf1eb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6d0be74bfa2138a204a7954c7b6a6c8a1b63ba77",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d0be74bfa2138a204a7954c7b6a6c8a1b63ba77",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6d0be74bfa2138a204a7954c7b6a6c8a1b63ba77",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d0be74bfa2138a204a7954c7b6a6c8a1b63ba77/comments",
  "author": {
    "login": "jozefl-mitto",
    "id": 36524004,
    "node_id": "MDQ6VXNlcjM2NTI0MDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jozefl-mitto",
    "html_url": "https://github.com/jozefl-mitto",
    "followers_url": "https://api.github.com/users/jozefl-mitto/followers",
    "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}",
    "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions",
    "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs",
    "repos_url": "https://api.github.com/users/jozefl-mitto/repos",
    "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jozefl-mitto",
    "id": 36524004,
    "node_id": "MDQ6VXNlcjM2NTI0MDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jozefl-mitto",
    "html_url": "https://github.com/jozefl-mitto",
    "followers_url": "https://api.github.com/users/jozefl-mitto/followers",
    "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}",
    "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions",
    "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs",
    "repos_url": "https://api.github.com/users/jozefl-mitto/repos",
    "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0c3d9485091753e6d9c4d317a9219cf4b6dce116",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0c3d9485091753e6d9c4d317a9219cf4b6dce116",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0c3d9485091753e6d9c4d317a9219cf4b6dce116"
    }
  ],
  "stats": {
    "total": 228,
    "additions": 4,
    "deletions": 224
  },
  "files": [
    {
      "sha": "dc3ba85ec34428230f63ce726d023891a6268779",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d0be74bfa2138a204a7954c7b6a6c8a1b63ba77/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d0be74bfa2138a204a7954c7b6a6c8a1b63ba77/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=6d0be74bfa2138a204a7954c7b6a6c8a1b63ba77",
      "patch": "@@ -1,3 +1,7 @@\n+2020-01-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* scripttempl/elf32msp430_3.sc: Remove.\n+\n 2020-01-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* scripttempl/elf32msp430.sc: Add input section rules for"
    },
    {
      "sha": "030120e1161c56275bae3d3d31a73c0c2f79c07d",
      "filename": "ld/scripttempl/elf32msp430_3.sc",
      "status": "removed",
      "additions": 0,
      "deletions": 224,
      "changes": 224,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0c3d9485091753e6d9c4d317a9219cf4b6dce116/ld/scripttempl/elf32msp430_3.sc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0c3d9485091753e6d9c4d317a9219cf4b6dce116/ld/scripttempl/elf32msp430_3.sc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/scripttempl/elf32msp430_3.sc?ref=0c3d9485091753e6d9c4d317a9219cf4b6dce116",
      "patch": "@@ -1,224 +0,0 @@\n-# Copyright (C) 2014-2020 Free Software Foundation, Inc.\n-#\n-# Copying and distribution of this file, with or without modification,\n-# are permitted in any medium without royalty provided the copyright\n-# notice and this notice are preserved.\n-\n-cat <<EOF\n-/* Copyright (C) 2014-2020 Free Software Foundation, Inc.\n-\n-   Copying and distribution of this script, with or without modification,\n-   are permitted in any medium without royalty provided the copyright\n-   notice and this notice are preserved.  */\n-\n-OUTPUT_FORMAT(\"${OUTPUT_FORMAT}\",\"${OUTPUT_FORMAT}\",\"${OUTPUT_FORMAT}\")\n-OUTPUT_ARCH(${ARCH})\n-\n-EOF\n-\n-test -n \"${RELOCATING}\" && cat <<EOF\n-MEMORY\n-{\n-  text   (rx)   : ORIGIN = $ROM_START,  LENGTH = $ROM_SIZE\n-  data   (rwx)  : ORIGIN = $RAM_START,\tLENGTH = $RAM_SIZE\n-  vectors (rw)  : ORIGIN = 0xffe0,      LENGTH = 0x20\n-}\n-\n-EOF\n-\n-cat <<EOF\n-SECTIONS\n-{\n-  /* Read-only sections, merged into text segment.  */\n-  ${TEXT_DYNAMIC+${DYNAMIC}}\n-  .hash        ${RELOCATING-0} : { *(.hash)             }\n-  .dynsym      ${RELOCATING-0} : { *(.dynsym)           }\n-  .dynstr      ${RELOCATING-0} : { *(.dynstr)           }\n-  .gnu.version ${RELOCATING-0} : { *(.gnu.version)      }\n-  .gnu.version_d ${RELOCATING-0} : { *(.gnu.version_d)  }\n-  .gnu.version_r ${RELOCATING-0} : { *(.gnu.version_r)  }\n-\n-  .rel.init    ${RELOCATING-0} : { *(.rel.init) }\n-  .rela.init   ${RELOCATING-0} : { *(.rela.init)        }\n-  .rel.text    ${RELOCATING-0} :\n-    {\n-      *(.rel.text)\n-      ${RELOCATING+*(.rel.text.*)}\n-      ${RELOCATING+*(.rel.gnu.linkonce.t*)}\n-    }\n-  .rela.text   ${RELOCATING-0} :\n-    {\n-      *(.rela.text)\n-      ${RELOCATING+*(.rela.text.*)}\n-      ${RELOCATING+*(.rela.gnu.linkonce.t*)}\n-    }\n-  .rel.fini    ${RELOCATING-0} : { *(.rel.fini) }\n-  .rela.fini   ${RELOCATING-0} : { *(.rela.fini)        }\n-  .rel.rodata  ${RELOCATING-0} :\n-    {\n-      *(.rel.rodata)\n-      ${RELOCATING+*(.rel.rodata.*)}\n-      ${RELOCATING+*(.rel.gnu.linkonce.r*)}\n-    }\n-  .rela.rodata ${RELOCATING-0} :\n-    {\n-      *(.rela.rodata)\n-      ${RELOCATING+*(.rela.rodata.*)}\n-      ${RELOCATING+*(.rela.gnu.linkonce.r*)}\n-    }\n-  .rel.data    ${RELOCATING-0} :\n-    {\n-      *(.rel.data)\n-      ${RELOCATING+*(.rel.data.*)}\n-      ${RELOCATING+*(.rel.gnu.linkonce.d*)}\n-    }\n-  .rela.data   ${RELOCATING-0} :\n-    {\n-      *(.rela.data)\n-      ${RELOCATING+*(.rela.data.*)}\n-      ${RELOCATING+*(.rela.gnu.linkonce.d*)}\n-    }\n-  .rel.ctors   ${RELOCATING-0} : { *(.rel.ctors)        }\n-  .rela.ctors  ${RELOCATING-0} : { *(.rela.ctors)       }\n-  .rel.dtors   ${RELOCATING-0} : { *(.rel.dtors)        }\n-  .rela.dtors  ${RELOCATING-0} : { *(.rela.dtors)       }\n-  .rel.got     ${RELOCATING-0} : { *(.rel.got)          }\n-  .rela.got    ${RELOCATING-0} : { *(.rela.got)         }\n-  .rel.bss     ${RELOCATING-0} : { *(.rel.bss)          }\n-  .rela.bss    ${RELOCATING-0} : { *(.rela.bss)         }\n-  .rel.plt     ${RELOCATING-0} : { *(.rel.plt)          }\n-  .rela.plt    ${RELOCATING-0} : { *(.rela.plt)         }\n-\n-  /* Internal text space.  */\n-  .text :\n-  {\n-    ${RELOCATING+. = ALIGN(2);\n-    *(SORT_NONE(.init))\n-    *(SORT_NONE(.init0))  /* Start here after reset.  */\n-    *(SORT_NONE(.init1))\n-    *(SORT_NONE(.init2))\n-    *(SORT_NONE(.init3))\n-    *(SORT_NONE(.init4))\n-    *(SORT_NONE(.init5))\n-    *(SORT_NONE(.init6)) /* C++ constructors.  */\n-    *(SORT_NONE(.init7))\n-    *(SORT_NONE(.init8))\n-    *(SORT_NONE(.init9))  /* Call main().  */}\n-\n-    ${CONSTRUCTING+ __ctors_start = . ; }\n-    ${CONSTRUCTING+ *(.ctors) }\n-    ${CONSTRUCTING+ __ctors_end = . ; }\n-    ${CONSTRUCTING+ __dtors_start = . ; }\n-    ${CONSTRUCTING+ *(.dtors) }\n-    ${CONSTRUCTING+ __dtors_end = . ; }\n-\n-    ${RELOCATING+. = ALIGN(2);}\n-    *(.text)\n-    ${RELOCATING+. = ALIGN(2);\n-    *(.text.*)\n-    . = ALIGN(2);\n-    *(.text:*)\n-\n-    . = ALIGN(2);\n-    *(SORT_NONE(.fini9))\n-    *(SORT_NONE(.fini8))\n-    *(SORT_NONE(.fini7))\n-    *(SORT_NONE(.fini6))  /* C++ destructors.  */\n-    *(SORT_NONE(.fini5))\n-    *(SORT_NONE(.fini4))\n-    *(SORT_NONE(.fini3))\n-    *(SORT_NONE(.fini2))\n-    *(SORT_NONE(.fini1))\n-    *(SORT_NONE(.fini0))  /* Infinite loop after program termination.  */\n-    *(SORT_NONE(.fini))\n-\n-    _etext = . ;}\n-  } ${RELOCATING+ > text}\n-\n-  .rodata :\n-  {\n-    *(.rodata${RELOCATING+ .rodata.* .gnu.linkonce.r.*})\n-    ${RELOCATING+*(.const)}\n-    ${RELOCATING+*(.const:*)}\n-  } ${RELOCATING+ > text}\n-\n-  .data ${RELOCATING-0} :\n-  {\n-    ${RELOCATING+ PROVIDE (__data_start = .) ; }\n-    ${RELOCATING+. = ALIGN(2);}\n-    *(.data)\n-    ${RELOCATING+*(.data.*)}\n-    ${RELOCATING+*(.gnu.linkonce.d*)}\n-    ${RELOCATING+. = ALIGN(2);}\n-    ${RELOCATING+ _edata = . ; }\n-  } ${RELOCATING+ > data AT> text}\n-\n-  __romdatastart = LOADADDR(.data);\n-  __romdatacopysize = SIZEOF(.data);\n-\n-  .bss ${RELOCATING+ SIZEOF(.data) + ADDR(.data)} :\n-  {\n-    ${RELOCATING+. = ALIGN(2);}\n-    ${RELOCATING+ PROVIDE (__bss_start = .) ; }\n-    ${RELOCATING+ PROVIDE (__bssstart = .); }\n-    *(.bss)\n-    *(COMMON)\n-    ${RELOCATING+ PROVIDE (__bss_end = .) ; }\n-  } ${RELOCATING+ > data}\n-  ${RELOCATING+ PROVIDE (__bsssize = SIZEOF(.bss)); }\n-\n-  .noinit ${RELOCATING+ SIZEOF(.bss) + ADDR(.bss)} :\n-  {\n-    ${RELOCATING+ PROVIDE (__noinit_start = .) ; }\n-    *(.noinit)\n-    *(COMMON)\n-    ${RELOCATING+ PROVIDE (__noinit_end = .) ; }\n-  } ${RELOCATING+ > data}\n-\n-  .persistent ${RELOCATING+ SIZEOF(.noinit) + ADDR(.noinit)} :\n-  {\n-    ${RELOCATING+ PROVIDE (__persistent_start = .) ; }\n-    *(.persistent)\n-    ${RELOCATING+ PROVIDE (__persistent_end = .) ; }\n-  } ${RELOCATING+ > data}\n-\n-  ${RELOCATING+ _end = . ;}\n-\n-  .vectors ${RELOCATING-0}:\n-  {\n-    ${RELOCATING+ PROVIDE (__vectors_start = .) ; }\n-    *(.vectors${RELOCATING+*})\n-    ${RELOCATING+ _vectors_end = . ; }\n-  } ${RELOCATING+ > vectors}\n-\n-  .MSP430.attributes 0 :\n-  {\n-    KEEP (*(.MSP430.attributes))\n-    KEEP (*(.gnu.attributes))\n-    KEEP (*(__TI_build_attributes))\n-  }\n-\n-  /* Stabs debugging sections.  */\n-  .stab 0 : { *(.stab) }\n-  .stabstr 0 : { *(.stabstr) }\n-  .stab.excl 0 : { *(.stab.excl) }\n-  .stab.exclstr 0 : { *(.stab.exclstr) }\n-  .stab.index 0 : { *(.stab.index) }\n-  .stab.indexstr 0 : { *(.stab.indexstr) }\n-  .comment 0 : { *(.comment) }\n-\n-EOF\n-\n-. $srcdir/scripttempl/DWARF.sc\n-\n-test -n \"${RELOCATING}\" && cat <<EOF\n-  PROVIDE (__stack = ${STACK}) ;\n-  PROVIDE (__data_start_rom = _etext) ;\n-  PROVIDE (__data_end_rom   = _etext + SIZEOF (.data)) ;\n-  PROVIDE (__noinit_start_rom = _etext + SIZEOF (.data)) ;\n-  PROVIDE (__noinit_end_rom = _etext + SIZEOF (.data) + SIZEOF (.noinit)) ;\n-EOF\n-\n-cat <<EOF\n-}\n-EOF"
    }
  ]
}