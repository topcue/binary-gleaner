{
  "sha": "6ef4fa071e2c25b71e81a91646b43378cf957388",
  "node_id": "C_kwDOANOeidoAKDZlZjRmYTA3MWUyYzI1YjcxZTgxYTkxNjQ2YjQzMzc4Y2Y5NTczODg",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-11-03T05:51:42Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-11-03T06:36:09Z"
    },
    "message": "asan: dlltool buffer overflow: embedded NUL in string\n\nyyleng gives the pattern length, xstrdup just copies up to the NUL.\nSo it is quite possible writing at an index of yyleng-2 overflows\nthe xstrdup allocated string buffer.  xmemdup quite handily avoids\nthis problem, even writing the terminating NUL over the trailing\nquote.  Use it in ldlex.l too where we'd already had a report of this\nproblem and fixed it by hand, and to implement xmemdup0 in gas.\n\nbinutils/\n\t* deflex.l (single and double quote strings): Use xmemdup.\ngas/\n\t* as.h (xmemdup0): Use xmemdup.\nld/\n\tPR 20906\n\t* ldlex.l (double quote string): Use xmemdup.",
    "tree": {
      "sha": "334807cc63fe61af871283a11915462a4071e924",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/334807cc63fe61af871283a11915462a4071e924"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6ef4fa071e2c25b71e81a91646b43378cf957388",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ef4fa071e2c25b71e81a91646b43378cf957388",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6ef4fa071e2c25b71e81a91646b43378cf957388",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ef4fa071e2c25b71e81a91646b43378cf957388/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3a275541049f295719782642fb8aa912b0a4a0d3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3a275541049f295719782642fb8aa912b0a4a0d3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3a275541049f295719782642fb8aa912b0a4a0d3"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 7,
    "deletions": 19
  },
  "files": [
    {
      "sha": "def908c113938b8885efd6282de54c78c4c744ef",
      "filename": "binutils/deflex.l",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ef4fa071e2c25b71e81a91646b43378cf957388/binutils/deflex.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ef4fa071e2c25b71e81a91646b43378cf957388/binutils/deflex.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/deflex.l?ref=6ef4fa071e2c25b71e81a91646b43378cf957388",
      "patch": "@@ -69,14 +69,12 @@ int linenumber;\n \t\t}\n \n \"\\\"\"[^\\\"]*\"\\\"\" {\n-\t\tyylval.id = xstrdup (yytext+1);\n-\t\tyylval.id[yyleng-2] = 0;\n+\t\tyylval.id = xmemdup (yytext + 1, yyleng - 2, yyleng - 1);\n \t\treturn ID;\n \t\t}\n \n \"\\'\"[^\\']*\"\\'\" {\n-\t\tyylval.id = xstrdup (yytext+1);\n-\t\tyylval.id[yyleng-2] = 0;\n+\t\tyylval.id = xmemdup (yytext + 1, yyleng - 2, yyleng - 1);\n \t\treturn ID;\n \t\t}\n \"*\".* \t\t{ }"
    },
    {
      "sha": "f3f12fbd2f8fdb5ad6bd4a0e5a147fd46704b0c2",
      "filename": "gas/as.h",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ef4fa071e2c25b71e81a91646b43378cf957388/gas/as.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ef4fa071e2c25b71e81a91646b43378cf957388/gas/as.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/as.h?ref=6ef4fa071e2c25b71e81a91646b43378cf957388",
      "patch": "@@ -484,9 +484,7 @@ void add_debug_prefix_map (const char *);\n static inline char *\n xmemdup0 (const char *in, size_t len)\n {\n-  char *out = (char *) xmalloc (len + 1);\n-  out[len] = 0;\n-  return (char *) memcpy (out, in, len);\n+  return xmemdup (in, len, len + 1);\n }\n \n struct expressionS;"
    },
    {
      "sha": "5db1e731b7408ec0c750de48b55a4d41468c46d5",
      "filename": "ld/ldlex.l",
      "status": "modified",
      "additions": 4,
      "deletions": 12,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ef4fa071e2c25b71e81a91646b43378cf957388/ld/ldlex.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ef4fa071e2c25b71e81a91646b43378cf957388/ld/ldlex.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlex.l?ref=6ef4fa071e2c25b71e81a91646b43378cf957388",
      "patch": "@@ -431,18 +431,10 @@ V_IDENTIFIER [*?.$_a-zA-Z\\[\\]\\-\\!\\^\\\\]([*?.$_a-zA-Z0-9\\[\\]\\-\\!\\^\\\\]|::)*\n \t}\n \n <SCRIPT,EXPRESSION,WILD,VERS_NODE,INPUTLIST>\"\\\"\"[^\\\"]*\"\\\"\" {\n-\t\t\t\t\t/* No matter the state, quotes\n-\t\t\t\t\t   give what's inside.  */\n-\t\t\t\t\tbfd_size_type len;\n-\t\t\t\t\tyylval.name = xstrdup (yytext + 1);\n-\t\t\t\t\t/* PR ld/20906.  A corrupt input file\n-\t\t\t\t\t   can contain bogus strings.  */\n-\t\t\t\t\tlen = strlen (yylval.name);\n-\t\t\t\t\tif (len > (bfd_size_type) yyleng - 2)\n-\t\t\t\t\t  len = yyleng - 2;\n-\t\t\t\t\tyylval.name[len] = 0;\n-\t\t\t\t\treturn NAME;\n-\t\t\t\t}\n+\t\t/* No matter the state, quotes give what's inside.  */\n+\t\tyylval.name = xmemdup (yytext + 1, yyleng - 2, yyleng - 1);\n+\t\treturn NAME;\n+\t}\n \n <SCRIPT,EXPRESSION,WILD,VERS_START,VERS_NODE,VERS_SCRIPT,INPUTLIST>\"\\n\" {\n \t\t\t\tlineno++; }"
    }
  ]
}