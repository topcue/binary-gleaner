{
  "sha": "7b3ecc7555438f05dda657d0ed6a43ee71a3901d",
  "node_id": "C_kwDOANOeidoAKDdiM2VjYzc1NTU0MzhmMDVkZGE2NTdkMGVkNmE0M2VlNzFhMzkwMWQ",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2022-01-28T03:01:10Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2022-02-06T21:03:46Z"
    },
    "message": "gdb: remove SYMBOL_OBJFILE_OWNED macro\n\nAdd a getter and a setter for whether a symbol is objfile owned.  Remove\nthe corresponding macro and adjust all callers.\n\nChange-Id: Ib7ef3718d65553ae924ca04c3fd478b0f4f3147c",
    "tree": {
      "sha": "851e01af89a5dda9ab1ea9c05b4059eda7497907",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/851e01af89a5dda9ab1ea9c05b4059eda7497907"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7b3ecc7555438f05dda657d0ed6a43ee71a3901d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7b3ecc7555438f05dda657d0ed6a43ee71a3901d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7b3ecc7555438f05dda657d0ed6a43ee71a3901d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6c9c307c67043b55a209af402246404d89f992c9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6c9c307c67043b55a209af402246404d89f992c9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6c9c307c67043b55a209af402246404d89f992c9"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 27,
    "deletions": 18
  },
  "files": [
    {
      "sha": "77d6c07c6a9e6e0fc987c63ce3a994124915deac",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=7b3ecc7555438f05dda657d0ed6a43ee71a3901d",
      "patch": "@@ -3352,7 +3352,7 @@ See set/show multiple-symbol.\"));\n \t     && SYMBOL_TYPE (syms[i].symbol)->code () == TYPE_CODE_ENUM);\n \t  struct symtab *symtab = NULL;\n \n-\t  if (SYMBOL_OBJFILE_OWNED (syms[i].symbol))\n+\t  if (syms[i].symbol->is_objfile_owned ())\n \t    symtab = symbol_symtab (syms[i].symbol);\n \n \t  if (SYMBOL_LINE (syms[i].symbol) != 0 && symtab != NULL)\n@@ -4376,7 +4376,7 @@ cache_symbol (const char *name, domain_enum domain, struct symbol *sym,\n \n   /* Symbols for builtin types don't have a block.\n      For now don't cache such symbols.  */\n-  if (sym != NULL && !SYMBOL_OBJFILE_OWNED (sym))\n+  if (sym != NULL && !sym->is_objfile_owned ())\n     return;\n \n   /* If the symbol is a local symbol, then do not cache it, as a search"
    },
    {
      "sha": "caad90f46785045f6391b502eea3c14b2594c5c8",
      "filename": "gdb/guile/scm-symbol.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/guile/scm-symbol.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/guile/scm-symbol.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-symbol.c?ref=7b3ecc7555438f05dda657d0ed6a43ee71a3901d",
      "patch": "@@ -101,7 +101,7 @@ syscm_get_symbol_map (struct symbol *symbol)\n {\n   htab_t htab;\n \n-  if (SYMBOL_OBJFILE_OWNED (symbol))\n+  if (symbol->is_objfile_owned ())\n     {\n       struct objfile *objfile = symbol_objfile (symbol);\n \n@@ -362,7 +362,7 @@ gdbscm_symbol_symtab (SCM self)\n     = syscm_get_valid_symbol_smob_arg_unsafe (self, SCM_ARG1, FUNC_NAME);\n   const struct symbol *symbol = s_smob->symbol;\n \n-  if (!SYMBOL_OBJFILE_OWNED (symbol))\n+  if (!symbol->is_objfile_owned ())\n     return SCM_BOOL_F;\n   return stscm_scm_from_symtab (symbol_symtab (symbol));\n }"
    },
    {
      "sha": "1d4b1b31252566e08877b3abede63e1830ed457d",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=7b3ecc7555438f05dda657d0ed6a43ee71a3901d",
      "patch": "@@ -998,7 +998,7 @@ language_arch_info::type_and_symbol::alloc_type_symbol\n   symbol->m_name = type->name ();\n   symbol->set_language (lang, nullptr);\n   symbol->owner.arch = gdbarch;\n-  SYMBOL_OBJFILE_OWNED (symbol) = 0;\n+  symbol->set_is_objfile_owned (0);\n   symbol->set_section_index (0);\n   SYMBOL_TYPE (symbol) = type;\n   symbol->set_domain (VAR_DOMAIN);"
    },
    {
      "sha": "787d8d77128434db9afb482bfc86549dc612a9a4",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=7b3ecc7555438f05dda657d0ed6a43ee71a3901d",
      "patch": "@@ -1686,7 +1686,7 @@ info_address_command (const char *exp, int from_tty)\n   puts_filtered (sym->print_name ());\n   printf_filtered (\"\\\" is \");\n   val = SYMBOL_VALUE (sym);\n-  if (SYMBOL_OBJFILE_OWNED (sym))\n+  if (sym->is_objfile_owned ())\n     section = sym->obj_section (symbol_objfile (sym));\n   else\n     section = NULL;"
    },
    {
      "sha": "708474331d72eb3dbe21fe50696985d7975b49aa",
      "filename": "gdb/python/py-symbol.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/python/py-symbol.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/python/py-symbol.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-symbol.c?ref=7b3ecc7555438f05dda657d0ed6a43ee71a3901d",
      "patch": "@@ -88,7 +88,7 @@ sympy_get_symtab (PyObject *self, void *closure)\n \n   SYMPY_REQUIRE_VALID (self, symbol);\n \n-  if (!SYMBOL_OBJFILE_OWNED (symbol))\n+  if (!symbol->is_objfile_owned ())\n     Py_RETURN_NONE;\n \n   return symtab_to_symtab_object (symbol_symtab (symbol));\n@@ -302,7 +302,7 @@ set_symbol (symbol_object *obj, struct symbol *symbol)\n {\n   obj->symbol = symbol;\n   obj->prev = NULL;\n-  if (SYMBOL_OBJFILE_OWNED (symbol)\n+  if (symbol->is_objfile_owned ()\n       && symbol_symtab (symbol) != NULL)\n     {\n       struct objfile *objfile = symbol_objfile (symbol);\n@@ -348,7 +348,7 @@ sympy_dealloc (PyObject *obj)\n   if (sym_obj->prev)\n     sym_obj->prev->next = sym_obj->next;\n   else if (sym_obj->symbol != NULL\n-\t   && SYMBOL_OBJFILE_OWNED (sym_obj->symbol)\n+\t   && sym_obj->symbol->is_objfile_owned ()\n \t   && symbol_symtab (sym_obj->symbol) != NULL)\n     {\n       set_objfile_data (symbol_objfile (sym_obj->symbol),"
    },
    {
      "sha": "cb16b5c202b5b8b91f6c62778419f9ddbc695936",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=7b3ecc7555438f05dda657d0ed6a43ee71a3901d",
      "patch": "@@ -502,7 +502,7 @@ print_symbol (struct gdbarch *gdbarch, struct symbol *symbol,\n {\n   struct obj_section *section;\n \n-  if (SYMBOL_OBJFILE_OWNED (symbol))\n+  if (symbol->is_objfile_owned ())\n     section = symbol->obj_section (symbol_objfile (symbol));\n   else\n     section = NULL;"
    },
    {
      "sha": "8bdc6cab9608c337ab24af4249ae2544d6b4bd22",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=7b3ecc7555438f05dda657d0ed6a43ee71a3901d",
      "patch": "@@ -1789,7 +1789,7 @@ fixup_symbol_section (struct symbol *sym, struct objfile *objfile)\n   if (!sym)\n     return NULL;\n \n-  if (!SYMBOL_OBJFILE_OWNED (sym))\n+  if (!sym->is_objfile_owned ())\n     return sym;\n \n   /* We either have an OBJFILE, or we can get at it from the sym's\n@@ -6534,7 +6534,7 @@ initialize_ordinary_address_classes (void)\n struct objfile *\n symbol_objfile (const struct symbol *symbol)\n {\n-  gdb_assert (SYMBOL_OBJFILE_OWNED (symbol));\n+  gdb_assert (symbol->is_objfile_owned ());\n   return symbol->owner.symtab->objfile ();\n }\n \n@@ -6543,7 +6543,7 @@ symbol_objfile (const struct symbol *symbol)\n struct gdbarch *\n symbol_arch (const struct symbol *symbol)\n {\n-  if (!SYMBOL_OBJFILE_OWNED (symbol))\n+  if (!symbol->is_objfile_owned ())\n     return symbol->owner.arch;\n   return symbol->owner.symtab->objfile ()->arch ();\n }\n@@ -6553,7 +6553,7 @@ symbol_arch (const struct symbol *symbol)\n struct symtab *\n symbol_symtab (const struct symbol *symbol)\n {\n-  gdb_assert (SYMBOL_OBJFILE_OWNED (symbol));\n+  gdb_assert (symbol->is_objfile_owned ());\n   return symbol->owner.symtab;\n }\n \n@@ -6562,7 +6562,7 @@ symbol_symtab (const struct symbol *symbol)\n void\n symbol_set_symtab (struct symbol *symbol, struct symtab *symtab)\n {\n-  gdb_assert (SYMBOL_OBJFILE_OWNED (symbol));\n+  gdb_assert (symbol->is_objfile_owned ());\n   symbol->owner.symtab = symtab;\n }\n "
    },
    {
      "sha": "ef9e653dfad2541bfe2eec83ceb3406751d8b513",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 12,
      "deletions": 3,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b3ecc7555438f05dda657d0ed6a43ee71a3901d/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=7b3ecc7555438f05dda657d0ed6a43ee71a3901d",
      "patch": "@@ -1115,7 +1115,7 @@ struct symbol : public general_symbol_info, public allocate_on_obstack\n     /* Class-initialization of bitfields is only allowed in C++20.  */\n     : m_domain (UNDEF_DOMAIN),\n       m_aclass_index (0),\n-      is_objfile_owned (1),\n+      m_is_objfile_owned (1),\n       is_argument (0),\n       is_inlined (0),\n       maybe_copied (0),\n@@ -1168,6 +1168,16 @@ struct symbol : public general_symbol_info, public allocate_on_obstack\n     m_domain = domain;\n   }\n \n+  bool is_objfile_owned () const\n+  {\n+    return m_is_objfile_owned;\n+  }\n+\n+  void set_is_objfile_owned (bool is_objfile_owned)\n+  {\n+    m_is_objfile_owned = is_objfile_owned;\n+  }\n+\n   /* Data type of value */\n \n   struct type *type = nullptr;\n@@ -1199,7 +1209,7 @@ struct symbol : public general_symbol_info, public allocate_on_obstack\n   /* If non-zero then symbol is objfile-owned, use owner.symtab.\n        Otherwise symbol is arch-owned, use owner.arch.  */\n \n-  unsigned int is_objfile_owned : 1;\n+  unsigned int m_is_objfile_owned : 1;\n \n   /* Whether this is an argument.  */\n \n@@ -1270,7 +1280,6 @@ struct block_symbol\n /* Note: There is no accessor macro for symbol.owner because it is\n    \"private\".  */\n \n-#define SYMBOL_OBJFILE_OWNED(symbol)\t((symbol)->is_objfile_owned)\n #define SYMBOL_IS_ARGUMENT(symbol)\t(symbol)->is_argument\n #define SYMBOL_INLINED(symbol)\t\t(symbol)->is_inlined\n #define SYMBOL_IS_CPLUS_TEMPLATE_FUNCTION(symbol) \\"
    }
  ]
}